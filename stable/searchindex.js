Search.setIndex({"docnames": ["api/connectivity", "api/covariance", "api/creating_from_arrays", "api/datasets", "api/decoding", "api/events", "api/export", "api/file_io", "api/forward", "api/inverse", "api/logging", "api/most_used_classes", "api/mri", "api/preprocessing", "api/python_reference", "api/reading_raw_data", "api/realtime", "api/report", "api/sensor_space", "api/simulation", "api/source_space", "api/statistics", "api/time_frequency", "api/visualization", "auto_examples/connectivity/index", "auto_examples/connectivity/sg_execution_times", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/kernel_phantom", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/trap_music", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/contralateral_referencing", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/epochs_metadata", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/sg_execution_times", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/eyetracking_plot_heatmap", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/95_phantom_KIT", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/70_reading_eyetracking_data", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/80_opm_processing", "auto_tutorials/preprocessing/90_eyetracking_data", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "auto_tutorials/visualization/10_publication_figure", "auto_tutorials/visualization/20_ui_events", "auto_tutorials/visualization/index", "auto_tutorials/visualization/sg_execution_times", "bibliography", "changes/v0.1", "changes/v0.10", "changes/v0.11", "changes/v0.12", "changes/v0.13", "changes/v0.14", "changes/v0.15", "changes/v0.16", "changes/v0.17", "changes/v0.18", "changes/v0.19", "changes/v0.2", "changes/v0.20", "changes/v0.21", "changes/v0.22", "changes/v0.23", "changes/v0.24", "changes/v0.3", "changes/v0.4", "changes/v0.5", "changes/v0.6", "changes/v0.7", "changes/v0.8", "changes/v0.9", "changes/v1.0", "changes/v1.1", "changes/v1.2", "changes/v1.3", "changes/v1.4", "changes/v1.5", "changes/v1.6", "changes/v1.7", "development/contributing", "development/governance", "development/index", "development/roadmap", "development/whats_new", "documentation/cite", "documentation/cited", "documentation/cookbook", "documentation/datasets", "documentation/design_philosophy", "documentation/glossary", "documentation/implementation", "documentation/index", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.beamformer.trap_music", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.channels.unify_bad_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.count_annotations", "generated/mne.count_events", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.eyelink.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.phantom_kernel.data_path", "generated/mne.datasets.phantom_kit.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.ucl_opm_auditory.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.get_channel_type_constants", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_eyelink", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_fil", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_neuralynx", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_nsx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.io.write_info", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.match_channel_orders", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.compute_proj_hfc", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.eyetracking.Calibration", "generated/mne.preprocessing.eyetracking.convert_units", "generated/mne.preprocessing.eyetracking.get_screen_visual_angle", "generated/mne.preprocessing.eyetracking.interpolate_blinks", "generated/mne.preprocessing.eyetracking.read_eyelink_calibration", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack", "generated/mne.preprocessing.find_bad_channels_lof", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.make_montage_volume", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.ieeg.warp_montage", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.set_memmap_min_size", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.AverageTFRArray", "generated/mne.time_frequency.BaseTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsSpectrumArray", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.EpochsTFRArray", "generated/mne.time_frequency.RawTFR", "generated/mne.time_frequency.RawTFRArray", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.SpectrumArray", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.apply_volume_registration_points", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.EvokedField", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.eyetracking.plot_gaze", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.ui_events.ColormapRange", "generated/mne.viz.ui_events.Contours", "generated/mne.viz.ui_events.FigureClosing", "generated/mne.viz.ui_events.PlaybackSpeed", "generated/mne.viz.ui_events.TimeChange", "generated/mne.viz.ui_events.UIEvent", "generated/mne.viz.ui_events.VertexSelect", "generated/mne.viz.ui_events.disable_ui_events", "generated/mne.viz.ui_events.link", "generated/mne.viz.ui_events.publish", "generated/mne.viz.ui_events.subscribe", "generated/mne.viz.ui_events.unlink", "generated/mne.viz.ui_events.unsubscribe", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "help/faq", "help/index", "help/learn_python", "help/migrating", "index", "install/advanced", "install/check_installation", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "martinos", "mne_cpp", "old_versions/index", "overview/people", "sg_api_usage", "sg_execution_times"], "filenames": ["api/connectivity.rst", "api/covariance.rst", "api/creating_from_arrays.rst", "api/datasets.rst", "api/decoding.rst", "api/events.rst", "api/export.rst", "api/file_io.rst", "api/forward.rst", "api/inverse.rst", "api/logging.rst", "api/most_used_classes.rst", "api/mri.rst", "api/preprocessing.rst", "api/python_reference.rst", "api/reading_raw_data.rst", "api/realtime.rst", "api/report.rst", "api/sensor_space.rst", "api/simulation.rst", "api/source_space.rst", "api/statistics.rst", "api/time_frequency.rst", "api/visualization.rst", "auto_examples/connectivity/index.rst", "auto_examples/connectivity/sg_execution_times.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/kernel_phantom.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/trap_music.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/contralateral_referencing.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/epochs_metadata.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/sg_execution_times.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/eyetracking_plot_heatmap.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/95_phantom_KIT.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/70_reading_eyetracking_data.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/80_opm_processing.rst", "auto_tutorials/preprocessing/90_eyetracking_data.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "auto_tutorials/visualization/10_publication_figure.rst", "auto_tutorials/visualization/20_ui_events.rst", "auto_tutorials/visualization/index.rst", "auto_tutorials/visualization/sg_execution_times.rst", "bibliography.rst", "changes/v0.1.rst", "changes/v0.10.rst", "changes/v0.11.rst", "changes/v0.12.rst", "changes/v0.13.rst", "changes/v0.14.rst", "changes/v0.15.rst", "changes/v0.16.rst", "changes/v0.17.rst", "changes/v0.18.rst", "changes/v0.19.rst", "changes/v0.2.rst", "changes/v0.20.rst", "changes/v0.21.rst", "changes/v0.22.rst", "changes/v0.23.rst", "changes/v0.24.rst", "changes/v0.3.rst", "changes/v0.4.rst", "changes/v0.5.rst", "changes/v0.6.rst", "changes/v0.7.rst", "changes/v0.8.rst", "changes/v0.9.rst", "changes/v1.0.rst", "changes/v1.1.rst", "changes/v1.2.rst", "changes/v1.3.rst", "changes/v1.4.rst", "changes/v1.5.rst", "changes/v1.6.rst", "changes/v1.7.rst", "development/contributing.rst", "development/governance.rst", "development/index.rst", "development/roadmap.rst", "development/whats_new.rst", "documentation/cite.rst", "documentation/cited.rst", "documentation/cookbook.rst", "documentation/datasets.rst", "documentation/design_philosophy.rst", "documentation/glossary.rst", "documentation/implementation.rst", "documentation/index.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.beamformer.trap_music.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.channels.unify_bad_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.count_annotations.rst", "generated/mne.count_events.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.eyelink.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.phantom_kernel.data_path.rst", "generated/mne.datasets.phantom_kit.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.ucl_opm_auditory.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.get_channel_type_constants.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_eyelink.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_fil.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_neuralynx.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_nsx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.io.write_info.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.match_channel_orders.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.compute_proj_hfc.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.eyetracking.Calibration.rst", "generated/mne.preprocessing.eyetracking.convert_units.rst", "generated/mne.preprocessing.eyetracking.get_screen_visual_angle.rst", "generated/mne.preprocessing.eyetracking.interpolate_blinks.rst", "generated/mne.preprocessing.eyetracking.read_eyelink_calibration.rst", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack.rst", "generated/mne.preprocessing.find_bad_channels_lof.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.make_montage_volume.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.ieeg.warp_montage.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.set_memmap_min_size.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.AverageTFRArray.rst", "generated/mne.time_frequency.BaseTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsSpectrumArray.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.EpochsTFRArray.rst", "generated/mne.time_frequency.RawTFR.rst", "generated/mne.time_frequency.RawTFRArray.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.SpectrumArray.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.apply_volume_registration_points.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.EvokedField.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.eyetracking.plot_gaze.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.ui_events.ColormapRange.rst", "generated/mne.viz.ui_events.Contours.rst", "generated/mne.viz.ui_events.FigureClosing.rst", "generated/mne.viz.ui_events.PlaybackSpeed.rst", "generated/mne.viz.ui_events.TimeChange.rst", "generated/mne.viz.ui_events.UIEvent.rst", "generated/mne.viz.ui_events.VertexSelect.rst", "generated/mne.viz.ui_events.disable_ui_events.rst", "generated/mne.viz.ui_events.link.rst", "generated/mne.viz.ui_events.publish.rst", "generated/mne.viz.ui_events.subscribe.rst", "generated/mne.viz.ui_events.unlink.rst", "generated/mne.viz.ui_events.unsubscribe.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "help/faq.rst", "help/index.rst", "help/learn_python.rst", "help/migrating.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "martinos.rst", "mne_cpp.rst", "old_versions/index.rst", "overview/people.rst", "sg_api_usage.rst", "sg_execution_times.rst"], "titles": ["Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Inverse Solutions", "Logging and Configuration", "Most-used classes", "MRI Processing", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "Connectivity Analysis Examples", "Computation times", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Kernel OPM phantom data", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Compute Trap-Music on evoked data", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Using contralateral referencing for EEG", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Automated epochs metadata generation with variable time windows", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Computation times", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Plotting eye-tracking heatmaps in MNE-Python", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Plot single trial activity, grouped by ROI and sorted by RT", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "KIT phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Importing Data from Eyetracking devices", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing optically pumped magnetometer (OPM) MEG data", "Working with eye tracker data in MNE-Python", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "Make figures more publication ready", "Using the event system to link figures", "Visualization tutorials", "Computation times", "General bibliography", "Version 0.1 (2011-09-23)", "Version 0.10 (2015-10-26)", "Version 0.11 (2015-12-24)", "Version 0.12 (2016-05-10)", "Version 0.13 (2016-09-27)", "Version 0.14 (2017-03-24)", "Version 0.15 (2017-10-20)", "Version 0.16 (2018-05-01)", "Version 0.17 (2018-11-19)", "Version 0.18 (2019-05-19)", "Version 0.19 (2019-09-24)", "Version 0.2 (2011-11-08)", "Version 0.20 (2020-03-27)", "Version 0.21 (2020-09-21)", "Version 0.22.0 (2020-12-17)", "Version 0.23.0 (2021-04-27)", "Version 0.24.0 (2021-11-03)", "Version 0.3 (2012-03-23)", "Version 0.4 (2012-08-24)", "Version 0.5 (2012-12-27)", "Version 0.6 (2013-06-15)", "Version 0.7 (2013-11-26)", "Version 0.8 (2014-06-25)", "Version 0.9 (2015-05-22)", "Version 1.0.0 (2022-03-21)", "Version 1.1.0 (2022-08-03)", "Version 1.2.0 (2022-10-11)", "Version 1.3.0 (2022-12-21)", "Version 1.4.0 (2023-05-10)", "Version 1.5.0 (2023-08-14)", "Version 1.6.0 (2023-11-20)", "1.7.1 (2024-06-14)", "Contributing guide", "Project Governance", "MNE-Python Development", "Roadmap", "What\u2019s new", "How to cite MNE-Python", "Papers citing MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "Glossary", "Algorithms and other implementation details", "Documentation overview", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.beamformer.trap_music", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.channels.unify_bad_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.count_annotations", "mne.count_events", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.eyelink.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.phantom_kernel.data_path", "mne.datasets.phantom_kit.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.ucl_opm_auditory.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.get_channel_type_constants", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_eyelink", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_fil", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_neuralynx", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_nsx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.io.write_info", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.match_channel_orders", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.compute_proj_hfc", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.eyetracking.Calibration", "mne.preprocessing.eyetracking.convert_units", "mne.preprocessing.eyetracking.get_screen_visual_angle", "mne.preprocessing.eyetracking.interpolate_blinks", "mne.preprocessing.eyetracking.read_eyelink_calibration", "mne.preprocessing.eyetracking.set_channel_types_eyetrack", "mne.preprocessing.find_bad_channels_lof", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.make_montage_volume", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.ieeg.warp_montage", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.set_memmap_min_size", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.AverageTFRArray", "mne.time_frequency.BaseTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsSpectrumArray", "mne.time_frequency.EpochsTFR", "mne.time_frequency.EpochsTFRArray", "mne.time_frequency.RawTFR", "mne.time_frequency.RawTFRArray", "mne.time_frequency.Spectrum", "mne.time_frequency.SpectrumArray", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.apply_volume_registration_points", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.EvokedField", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.eyetracking.plot_gaze", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.ui_events.ColormapRange", "mne.viz.ui_events.Contours", "mne.viz.ui_events.FigureClosing", "mne.viz.ui_events.PlaybackSpeed", "mne.viz.ui_events.TimeChange", "mne.viz.ui_events.UIEvent", "mne.viz.ui_events.VertexSelect", "mne.viz.ui_events.disable_ui_events", "mne.viz.ui_events.link", "mne.viz.ui_events.publish", "mne.viz.ui_events.subscribe", "mne.viz.ui_events.unlink", "mne.viz.ui_events.unsubscribe", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Frequently Asked Questions (FAQ)", "Getting help", "Getting started with Python", "Migrating from other analysis software", "MNE", "Advanced setup", "Testing your installation", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Martinos Center setup", "MNE with CPP", "Archived documentation for old versions", "Current steering council and institutional partners", "Unused API Entries", "Computation times"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966], "9": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966], "As": [0, 30, 64, 69, 97, 101, 115, 122, 140, 150, 163, 167, 170, 172, 176, 177, 178, 184, 187, 193, 194, 195, 196, 197, 199, 202, 207, 216, 219, 223, 224, 227, 228, 229, 230, 232, 233, 235, 236, 238, 241, 244, 245, 246, 247, 251, 258, 260, 266, 269, 271, 301, 302, 312, 314, 318, 322, 493, 514, 570, 583, 653, 775, 784, 844, 870], "0": [0, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 278, 311, 312, 314, 315, 318, 319, 321, 322, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 366, 367, 369, 374, 375, 376, 377, 382, 383, 384, 387, 391, 394, 396, 398, 400, 405, 410, 412, 413, 414, 415, 418, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 439, 440, 443, 452, 460, 477, 478, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 509, 510, 512, 514, 517, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 535, 538, 541, 542, 543, 544, 547, 549, 550, 551, 552, 553, 561, 562, 563, 564, 568, 569, 570, 572, 574, 580, 588, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 605, 606, 611, 612, 613, 616, 617, 620, 621, 622, 623, 625, 629, 630, 631, 632, 637, 638, 639, 640, 641, 643, 646, 648, 649, 650, 651, 653, 655, 656, 657, 659, 661, 664, 665, 666, 667, 668, 669, 671, 674, 676, 678, 680, 681, 684, 685, 690, 698, 700, 701, 702, 706, 708, 710, 711, 719, 722, 724, 725, 727, 730, 733, 735, 737, 738, 739, 742, 743, 745, 747, 748, 753, 754, 755, 758, 767, 768, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 808, 809, 812, 813, 814, 815, 818, 820, 822, 823, 824, 825, 826, 827, 828, 829, 832, 833, 834, 839, 844, 845, 846, 848, 849, 850, 854, 855, 856, 862, 863, 864, 865, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 917, 935, 937, 941, 942, 944, 946, 951, 952, 956, 966], "24": [0, 29, 33, 36, 37, 39, 45, 47, 52, 54, 60, 61, 67, 70, 71, 72, 73, 82, 98, 101, 108, 112, 131, 136, 137, 140, 142, 144, 146, 150, 152, 157, 171, 196, 198, 208, 210, 217, 219, 223, 224, 237, 238, 253, 256, 257, 258, 260, 261, 264, 265, 266, 271, 278, 294, 302, 315, 318, 322, 327, 331, 333, 334, 335, 336, 338, 339, 343, 346, 366, 414, 420, 432, 434, 462, 493, 505, 515, 516, 517, 518, 528, 549, 552, 553, 561, 568, 577, 583, 597, 605, 638, 641, 784, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 832, 834, 841, 844, 856, 864, 869, 876, 893, 899, 900, 908, 911, 915, 937, 966], "function": [0, 3, 4, 6, 9, 13, 14, 16, 18, 21, 22, 24, 30, 33, 34, 42, 45, 47, 53, 57, 62, 70, 71, 80, 81, 82, 83, 85, 104, 121, 122, 123, 129, 131, 140, 141, 142, 143, 144, 149, 150, 160, 162, 163, 167, 168, 171, 173, 176, 177, 178, 179, 182, 183, 184, 185, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 204, 205, 207, 209, 210, 216, 217, 218, 219, 220, 223, 224, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 251, 252, 253, 258, 260, 261, 269, 270, 271, 275, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 314, 316, 318, 319, 320, 321, 322, 323, 325, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 360, 366, 367, 368, 373, 375, 377, 382, 387, 388, 390, 391, 394, 399, 400, 402, 410, 411, 412, 413, 418, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 443, 445, 447, 459, 462, 485, 488, 490, 491, 492, 494, 495, 502, 504, 506, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 524, 526, 528, 542, 543, 545, 546, 550, 551, 552, 553, 559, 561, 562, 564, 565, 568, 570, 573, 574, 576, 578, 583, 584, 586, 587, 590, 592, 600, 604, 605, 608, 611, 612, 613, 614, 615, 616, 617, 619, 620, 627, 633, 635, 637, 638, 640, 641, 642, 647, 648, 649, 650, 651, 653, 655, 656, 658, 659, 661, 663, 665, 668, 674, 676, 677, 678, 679, 680, 682, 683, 690, 693, 694, 697, 700, 701, 702, 703, 704, 705, 706, 708, 711, 716, 724, 727, 730, 733, 738, 739, 741, 742, 743, 752, 753, 755, 756, 773, 775, 776, 777, 778, 779, 780, 784, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 806, 808, 814, 815, 824, 826, 827, 834, 838, 839, 840, 841, 842, 844, 856, 859, 861, 862, 863, 870, 872, 876, 878, 879, 884, 885, 886, 889, 892, 897, 898, 900, 901, 902, 904, 906, 908, 909, 910, 911, 915, 926, 927, 929, 949, 951, 956, 959, 960, 966], "ha": [0, 16, 24, 26, 29, 31, 33, 34, 35, 36, 53, 58, 68, 71, 75, 80, 97, 98, 102, 106, 110, 111, 121, 122, 131, 137, 142, 155, 163, 167, 169, 171, 172, 173, 176, 177, 178, 182, 183, 184, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 207, 208, 209, 210, 212, 216, 217, 218, 220, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 247, 251, 253, 256, 257, 261, 269, 271, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 318, 319, 320, 321, 322, 324, 325, 326, 327, 330, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 357, 358, 359, 360, 366, 367, 372, 373, 378, 425, 429, 430, 431, 441, 442, 443, 449, 450, 451, 454, 455, 456, 458, 462, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 485, 491, 492, 506, 526, 528, 529, 532, 547, 549, 550, 552, 553, 554, 561, 562, 574, 583, 601, 604, 605, 606, 608, 616, 621, 622, 637, 638, 639, 641, 653, 658, 672, 676, 683, 706, 707, 725, 728, 770, 771, 776, 777, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 812, 814, 822, 823, 824, 826, 827, 831, 856, 870, 878, 880, 882, 883, 884, 885, 886, 889, 891, 893, 898, 899, 900, 901, 902, 904, 906, 908, 917, 918, 919, 920, 921, 923, 946, 947, 951, 956, 958, 959, 963], "been": [0, 26, 29, 34, 35, 36, 56, 57, 58, 60, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 98, 102, 106, 107, 111, 113, 114, 122, 144, 147, 148, 167, 169, 172, 176, 177, 178, 186, 187, 189, 193, 194, 196, 198, 199, 202, 203, 205, 206, 208, 209, 210, 216, 219, 220, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 269, 274, 275, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 314, 319, 322, 324, 325, 328, 332, 333, 334, 335, 336, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 358, 359, 360, 366, 367, 373, 425, 429, 430, 441, 442, 443, 449, 450, 451, 454, 455, 456, 458, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 485, 492, 506, 528, 529, 547, 549, 550, 552, 553, 554, 561, 562, 568, 574, 583, 606, 616, 637, 638, 639, 650, 676, 683, 706, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 824, 827, 856, 870, 876, 880, 882, 884, 886, 900, 946, 962], "move": [0, 16, 23, 24, 53, 87, 103, 107, 108, 144, 167, 172, 183, 188, 204, 220, 230, 233, 234, 237, 240, 264, 271, 275, 283, 295, 299, 310, 312, 322, 325, 330, 333, 334, 335, 336, 342, 343, 348, 349, 436, 485, 492, 520, 552, 553, 637, 638, 642, 673, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 832, 833, 834, 877, 878, 882, 885, 889, 898, 901, 906, 908, 910, 946], "separ": [0, 26, 33, 36, 38, 42, 47, 58, 59, 71, 73, 97, 102, 108, 109, 110, 122, 135, 147, 152, 162, 167, 168, 169, 172, 173, 176, 177, 178, 182, 183, 187, 188, 189, 192, 195, 202, 211, 217, 219, 220, 224, 227, 230, 232, 233, 234, 235, 237, 242, 243, 244, 245, 246, 264, 266, 269, 278, 285, 286, 287, 288, 294, 295, 311, 314, 318, 319, 320, 321, 322, 325, 327, 328, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 366, 367, 394, 416, 418, 419, 422, 426, 427, 428, 433, 443, 458, 465, 485, 492, 506, 518, 547, 552, 553, 569, 572, 577, 580, 596, 598, 638, 648, 649, 650, 651, 655, 665, 674, 676, 690, 700, 707, 738, 744, 745, 746, 747, 748, 749, 750, 751, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 826, 827, 834, 844, 846, 850, 869, 870, 876, 877, 878, 881, 885, 886, 888, 893, 898, 899, 900, 946, 951, 956, 966], "packag": [0, 24, 53, 165, 173, 187, 192, 193, 217, 224, 228, 229, 230, 233, 253, 256, 287, 288, 295, 303, 307, 310, 311, 319, 320, 321, 325, 327, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 444, 445, 488, 495, 498, 501, 502, 528, 541, 543, 552, 553, 580, 595, 596, 599, 600, 611, 612, 621, 622, 643, 650, 651, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 846, 878, 881, 900, 950, 951, 952, 953, 955, 956, 957, 958, 959, 961], "mne_connect": [0, 24, 53, 73, 173, 868], "mne": [3, 4, 5, 6, 8, 9, 10, 13, 14, 15, 16, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 183, 184, 185, 186, 189, 190, 191, 194, 195, 196, 197, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 227, 229, 231, 232, 235, 236, 237, 239, 240, 242, 243, 245, 246, 247, 248, 252, 253, 254, 255, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 318, 319, 320, 321, 323, 324, 947, 949, 951, 952, 953, 957, 961, 964, 965, 966], "fetch": [3, 30, 164, 295, 303, 311, 319, 452, 457, 458, 459, 460, 461, 462, 467, 477, 478], "remot": [3, 30, 218, 220, 241, 311, 314, 325, 459, 912, 951, 958], "see": [3, 12, 14, 21, 26, 30, 33, 34, 36, 45, 47, 48, 52, 53, 58, 60, 61, 65, 69, 70, 89, 90, 97, 98, 100, 101, 103, 107, 109, 110, 111, 129, 141, 142, 143, 147, 148, 149, 161, 162, 163, 164, 167, 168, 169, 170, 171, 173, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 258, 259, 261, 264, 269, 271, 274, 280, 283, 285, 291, 295, 298, 305, 308, 309, 311, 312, 314, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 495, 496, 498, 501, 502, 504, 506, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 535, 536, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 734, 737, 738, 740, 741, 742, 743, 752, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 814, 815, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 843, 844, 846, 850, 853, 861, 862, 863, 870, 871, 874, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 888, 889, 890, 891, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 915, 925, 926, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 949, 951, 952, 958, 959, 964], "overview": [3, 182, 183, 192, 197, 198, 200, 201, 207, 229, 233, 235, 242, 243, 256, 270, 321, 333, 334, 335, 336, 338, 344, 424, 476, 526, 552, 553, 574, 598, 604, 605, 619, 635, 638, 655, 656, 666, 789, 791, 870, 876, 879, 893, 899, 915, 946, 966], "more": [3, 21, 26, 30, 44, 45, 54, 60, 68, 69, 70, 75, 80, 84, 97, 98, 100, 101, 103, 108, 109, 110, 111, 113, 122, 132, 135, 138, 140, 141, 142, 149, 150, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 182, 183, 185, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 207, 208, 211, 212, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 244, 245, 246, 247, 253, 256, 257, 258, 259, 261, 264, 266, 270, 271, 276, 277, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 297, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 318, 319, 320, 321, 322, 323, 327, 328, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 358, 366, 367, 375, 376, 399, 425, 429, 431, 436, 438, 443, 477, 478, 484, 485, 487, 489, 490, 492, 493, 497, 502, 504, 513, 514, 515, 516, 518, 519, 520, 521, 523, 524, 526, 527, 535, 544, 552, 553, 561, 570, 572, 578, 592, 596, 598, 599, 605, 611, 612, 613, 621, 622, 633, 637, 638, 640, 646, 648, 659, 665, 672, 676, 685, 696, 698, 702, 703, 706, 716, 725, 727, 728, 730, 733, 741, 766, 770, 771, 776, 777, 778, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 803, 806, 814, 823, 824, 825, 826, 827, 828, 841, 844, 846, 862, 863, 864, 865, 870, 874, 878, 879, 881, 882, 884, 885, 889, 898, 901, 904, 906, 908, 909, 930, 931, 936, 939, 946, 948, 950, 956, 958, 959, 966], "inform": [3, 30, 31, 35, 37, 47, 48, 52, 54, 55, 57, 60, 61, 64, 65, 66, 68, 69, 70, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 90, 95, 107, 111, 118, 120, 121, 122, 123, 129, 132, 135, 136, 138, 153, 158, 161, 162, 167, 168, 169, 170, 171, 173, 176, 177, 178, 183, 185, 186, 187, 189, 192, 193, 195, 197, 199, 202, 204, 206, 207, 208, 209, 216, 217, 218, 219, 220, 223, 224, 231, 232, 233, 234, 235, 236, 238, 241, 242, 243, 244, 246, 251, 252, 253, 256, 258, 261, 264, 266, 270, 271, 278, 282, 283, 284, 285, 289, 291, 292, 293, 294, 295, 299, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 319, 320, 321, 323, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 353, 354, 366, 367, 368, 375, 376, 377, 379, 380, 381, 388, 389, 390, 394, 396, 397, 399, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 429, 431, 441, 442, 443, 445, 485, 487, 492, 493, 494, 504, 505, 509, 513, 514, 515, 516, 517, 518, 520, 521, 523, 524, 526, 529, 536, 537, 543, 547, 550, 551, 552, 553, 554, 558, 564, 573, 587, 589, 593, 596, 598, 599, 600, 601, 606, 616, 633, 634, 635, 637, 638, 648, 649, 652, 658, 659, 663, 665, 672, 674, 676, 681, 682, 687, 689, 692, 701, 703, 704, 705, 723, 724, 730, 735, 737, 753, 754, 757, 776, 780, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 823, 824, 825, 826, 827, 828, 833, 834, 839, 840, 844, 846, 855, 859, 862, 866, 871, 872, 874, 879, 881, 887, 888, 894, 898, 902, 908, 936, 937, 947, 952, 955, 956, 959, 962, 966], "encod": [4, 35, 45, 170, 171, 177, 193, 195, 199, 216, 223, 224, 237, 238, 239, 274, 278, 283, 292, 305, 309, 314, 321, 322, 338, 417, 491, 561, 568, 576, 577, 578, 584, 694, 700, 944], "includ": [4, 30, 54, 63, 67, 96, 97, 109, 124, 125, 127, 131, 132, 135, 138, 141, 142, 152, 159, 162, 164, 167, 169, 170, 171, 173, 176, 178, 179, 182, 186, 187, 189, 193, 194, 195, 196, 197, 198, 199, 207, 209, 212, 216, 217, 218, 220, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 246, 247, 251, 256, 258, 259, 260, 266, 278, 281, 283, 284, 285, 291, 292, 293, 295, 299, 301, 302, 303, 304, 309, 310, 311, 312, 313, 314, 318, 319, 320, 321, 322, 323, 324, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 365, 367, 380, 383, 384, 388, 397, 399, 425, 430, 431, 438, 441, 487, 492, 501, 506, 509, 523, 524, 538, 539, 551, 552, 553, 555, 561, 564, 566, 568, 569, 570, 576, 581, 600, 606, 608, 616, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 645, 646, 648, 649, 652, 654, 655, 656, 661, 663, 664, 665, 668, 672, 675, 676, 682, 684, 687, 689, 691, 700, 702, 703, 706, 707, 708, 757, 774, 775, 784, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 813, 825, 827, 828, 834, 840, 844, 870, 876, 877, 878, 880, 882, 883, 890, 891, 895, 899, 900, 906, 946, 948, 949, 951, 954, 955, 956, 958, 959, 960, 962], "machin": [4, 33, 44, 122, 123, 208, 224, 226, 228, 229, 278, 283, 286, 320, 338, 351, 425, 649, 665, 676, 966], "learn": [4, 34, 35, 42, 44, 45, 47, 97, 145, 170, 188, 189, 193, 224, 226, 228, 229, 233, 278, 282, 283, 285, 289, 291, 293, 298, 311, 319, 320, 425, 489, 491, 493, 494, 495, 496, 498, 499, 500, 502, 503, 638, 674, 946, 959, 966], "recept": [4, 43, 46, 53, 192, 225, 226, 278, 319, 338, 382, 398, 445, 491, 497, 525, 553, 908, 966], "field": [4, 29, 30, 31, 33, 43, 46, 48, 52, 53, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 96, 106, 107, 108, 118, 122, 137, 141, 145, 147, 149, 153, 156, 158, 169, 171, 176, 183, 185, 186, 189, 192, 193, 196, 203, 204, 205, 206, 209, 210, 216, 217, 219, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 244, 246, 247, 251, 253, 261, 275, 278, 280, 282, 283, 284, 285, 286, 288, 292, 293, 294, 295, 299, 301, 302, 307, 310, 314, 318, 319, 321, 326, 330, 333, 334, 335, 336, 338, 366, 367, 382, 389, 398, 445, 491, 497, 517, 525, 528, 552, 553, 554, 565, 573, 580, 596, 605, 606, 652, 653, 676, 684, 701, 705, 708, 733, 775, 795, 825, 828, 844, 846, 863, 870, 877, 880, 881, 883, 885, 886, 888, 907, 908, 916, 946, 953, 966], "assist": [4, 218, 310, 322, 951, 958], "model": [4, 14, 29, 31, 33, 37, 38, 39, 44, 48, 52, 57, 58, 62, 67, 68, 76, 82, 100, 129, 133, 134, 137, 141, 144, 149, 162, 168, 178, 182, 183, 186, 187, 188, 189, 191, 197, 198, 199, 202, 203, 209, 210, 211, 212, 213, 218, 219, 220, 224, 232, 233, 240, 241, 253, 260, 275, 278, 280, 284, 285, 287, 291, 292, 294, 297, 302, 304, 305, 310, 319, 321, 330, 331, 333, 335, 336, 337, 338, 341, 343, 344, 346, 347, 348, 349, 366, 367, 372, 374, 377, 412, 425, 431, 435, 444, 485, 489, 491, 492, 495, 497, 502, 503, 526, 528, 547, 552, 558, 594, 595, 599, 600, 601, 604, 605, 606, 607, 616, 635, 637, 647, 652, 658, 672, 686, 695, 697, 698, 714, 723, 737, 738, 746, 751, 775, 794, 800, 809, 838, 844, 862, 864, 886, 901, 914, 933, 946, 952, 953, 956, 958, 959, 966], "fit": [4, 13, 29, 30, 33, 34, 36, 37, 38, 39, 41, 42, 44, 47, 50, 66, 67, 71, 76, 85, 97, 98, 100, 102, 104, 106, 107, 108, 110, 115, 129, 139, 144, 152, 164, 168, 178, 179, 183, 185, 192, 193, 197, 199, 204, 206, 210, 211, 212, 213, 214, 215, 217, 220, 224, 228, 231, 232, 235, 236, 237, 238, 240, 260, 278, 283, 284, 285, 286, 288, 289, 291, 293, 294, 295, 297, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 319, 321, 322, 325, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 347, 348, 349, 369, 371, 375, 376, 382, 412, 413, 414, 415, 418, 422, 423, 424, 436, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 504, 506, 514, 524, 528, 552, 553, 565, 596, 599, 605, 635, 637, 638, 639, 642, 645, 647, 648, 649, 653, 665, 666, 676, 706, 738, 753, 774, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 809, 844, 863, 870, 874, 878, 880, 882, 885, 886, 889, 890, 891, 893, 896, 898, 900, 901, 902, 906, 908, 946, 949, 962, 966], "io": [5, 14, 15, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 52, 54, 55, 58, 59, 60, 68, 71, 72, 75, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 152, 156, 159, 160, 162, 164, 167, 168, 169, 171, 172, 173, 176, 178, 179, 183, 184, 185, 186, 187, 189, 193, 194, 195, 196, 197, 198, 199, 204, 207, 209, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 258, 259, 260, 261, 264, 266, 269, 270, 271, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 319, 320, 322, 325, 326, 327, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 350, 352, 365, 436, 458, 490, 518, 520, 523, 600, 638, 646, 650, 651, 652, 659, 665, 676, 789, 790, 791, 795, 796, 797, 798, 799, 800, 814, 844, 891, 946, 949, 951, 956, 965, 966], "fif": [5, 6, 27, 29, 31, 33, 36, 37, 39, 40, 41, 42, 44, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 91, 93, 95, 96, 98, 99, 100, 101, 102, 104, 106, 107, 108, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 158, 159, 160, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 199, 203, 204, 205, 206, 207, 208, 209, 210, 213, 217, 218, 219, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 244, 245, 246, 247, 252, 253, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 274, 275, 282, 283, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 301, 302, 303, 307, 308, 310, 311, 314, 318, 319, 322, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 343, 344, 346, 347, 348, 349, 374, 382, 404, 436, 437, 438, 506, 515, 516, 517, 518, 535, 552, 553, 574, 578, 589, 596, 600, 619, 623, 638, 648, 665, 672, 676, 688, 694, 696, 697, 698, 699, 703, 706, 708, 714, 718, 721, 725, 728, 754, 757, 784, 831, 833, 844, 862, 932, 934, 935, 936, 937, 938, 939, 942, 943, 945, 959, 962, 966], "file": [5, 14, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 75, 82, 85, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 110, 111, 112, 115, 116, 119, 120, 121, 122, 124, 125, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 152, 156, 157, 159, 160, 162, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 198, 201, 204, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 222, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 243, 244, 247, 249, 250, 252, 253, 255, 258, 259, 260, 261, 263, 264, 266, 268, 270, 273, 274, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 319, 321, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 357, 370, 373, 374, 377, 378, 379, 382, 383, 388, 390, 391, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 413, 415, 428, 433, 434, 436, 437, 438, 444, 452, 457, 458, 459, 460, 466, 477, 478, 504, 506, 514, 515, 516, 517, 518, 526, 527, 533, 534, 535, 537, 538, 542, 544, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 596, 597, 599, 600, 611, 618, 619, 623, 627, 628, 637, 638, 648, 649, 650, 651, 662, 665, 672, 676, 686, 687, 688, 689, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 731, 732, 734, 738, 740, 741, 742, 754, 757, 766, 784, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 816, 817, 818, 829, 831, 833, 838, 844, 853, 862, 864, 899, 910, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 949, 951, 952, 958, 959, 962, 963, 966], "contain": [5, 30, 42, 44, 53, 57, 64, 67, 69, 79, 101, 107, 115, 122, 129, 136, 140, 142, 144, 156, 164, 167, 170, 171, 173, 176, 178, 182, 185, 189, 192, 193, 195, 196, 197, 198, 199, 202, 208, 210, 216, 217, 218, 219, 220, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 244, 245, 251, 253, 256, 269, 270, 271, 274, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 300, 301, 303, 304, 307, 308, 310, 311, 318, 319, 320, 321, 322, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 353, 354, 358, 366, 367, 368, 373, 377, 378, 379, 382, 383, 384, 385, 388, 389, 390, 396, 405, 420, 425, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 458, 462, 464, 465, 466, 485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 504, 506, 509, 512, 519, 527, 528, 529, 533, 534, 535, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 552, 553, 560, 562, 563, 564, 565, 567, 569, 570, 571, 572, 573, 574, 577, 578, 579, 580, 581, 582, 583, 585, 586, 590, 591, 594, 596, 599, 616, 624, 627, 628, 637, 638, 639, 641, 643, 645, 653, 654, 658, 659, 664, 665, 671, 672, 673, 675, 676, 680, 682, 688, 689, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 705, 706, 707, 711, 714, 717, 719, 720, 722, 728, 730, 732, 733, 737, 738, 744, 745, 746, 747, 748, 749, 750, 751, 752, 755, 757, 758, 766, 768, 774, 776, 777, 779, 780, 781, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 808, 811, 819, 823, 824, 826, 827, 836, 844, 855, 862, 863, 864, 865, 870, 873, 874, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 895, 898, 901, 902, 903, 904, 905, 906, 908, 909, 910, 936, 939, 941, 942, 944, 946, 949, 952], "epoch": [5, 14, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 53, 58, 59, 60, 62, 71, 72, 75, 82, 85, 88, 96, 97, 98, 99, 100, 105, 106, 107, 110, 111, 112, 115, 118, 120, 121, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 140, 141, 149, 151, 156, 157, 159, 162, 163, 168, 175, 177, 189, 194, 195, 196, 197, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 223, 224, 227, 228, 231, 234, 235, 238, 240, 241, 245, 246, 252, 253, 257, 258, 259, 260, 269, 270, 271, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 319, 320, 321, 325, 326, 327, 328, 332, 334, 335, 336, 338, 339, 340, 341, 343, 344, 347, 348, 349, 350, 360, 361, 364, 383, 384, 387, 411, 424, 425, 426, 428, 429, 430, 432, 467, 485, 487, 490, 491, 492, 493, 494, 497, 498, 499, 500, 501, 510, 511, 513, 514, 515, 526, 544, 549, 552, 553, 559, 591, 596, 597, 598, 603, 604, 605, 606, 607, 608, 609, 611, 612, 616, 619, 621, 622, 633, 635, 637, 638, 639, 640, 646, 647, 650, 651, 655, 656, 657, 659, 663, 668, 675, 676, 691, 699, 700, 701, 702, 703, 710, 714, 730, 733, 743, 753, 774, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 814, 823, 824, 825, 826, 827, 828, 844, 855, 870, 875, 876, 877, 878, 879, 889, 890, 891, 893, 897, 899, 900, 907, 936, 946, 949, 965, 966], "tool": [5, 14, 22, 30, 53, 80, 81, 97, 107, 117, 167, 178, 182, 185, 188, 198, 218, 220, 227, 228, 230, 233, 235, 239, 257, 266, 271, 278, 291, 300, 304, 312, 314, 318, 322, 323, 340, 341, 344, 347, 348, 349, 518, 552, 553, 594, 620, 946, 947, 955, 956, 958, 960, 962, 964], "work": [5, 53, 57, 95, 97, 101, 103, 106, 110, 114, 150, 160, 164, 165, 166, 167, 171, 174, 175, 176, 177, 178, 182, 183, 187, 188, 193, 194, 195, 196, 200, 201, 202, 204, 205, 208, 211, 216, 218, 221, 222, 224, 227, 229, 231, 232, 233, 234, 235, 238, 239, 242, 243, 244, 246, 247, 249, 253, 258, 261, 264, 266, 269, 270, 271, 275, 278, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 303, 305, 307, 308, 310, 311, 312, 314, 316, 319, 320, 321, 322, 323, 324, 327, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 382, 383, 386, 388, 393, 396, 398, 402, 408, 418, 424, 426, 430, 431, 432, 434, 437, 443, 454, 458, 461, 485, 486, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 508, 512, 519, 520, 525, 526, 537, 547, 549, 550, 552, 553, 559, 563, 566, 570, 572, 592, 594, 595, 598, 600, 603, 604, 605, 606, 607, 608, 609, 611, 612, 616, 622, 629, 633, 634, 637, 638, 639, 651, 658, 661, 662, 663, 671, 676, 690, 699, 703, 708, 714, 718, 719, 720, 721, 737, 738, 766, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 845, 848, 855, 862, 868, 870, 876, 878, 879, 884, 885, 889, 893, 898, 899, 901, 906, 908, 912, 914, 916, 952, 953, 957, 958, 959, 966], "data": [5, 6, 14, 19, 26, 27, 28, 32, 35, 36, 38, 40, 42, 43, 46, 48, 50, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 93, 94, 95, 96, 97, 99, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 119, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 165, 166, 170, 171, 172, 175, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 197, 198, 200, 201, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 222, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 242, 243, 249, 254, 255, 256, 258, 259, 263, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 320, 321, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 380, 381, 382, 383, 384, 386, 388, 390, 394, 396, 397, 398, 405, 407, 409, 412, 414, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 441, 442, 443, 445, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 511, 512, 513, 514, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 537, 542, 544, 547, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 611, 612, 613, 616, 619, 620, 621, 622, 629, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 670, 672, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 690, 691, 694, 695, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 714, 716, 718, 720, 721, 730, 733, 737, 738, 739, 740, 741, 742, 743, 745, 747, 748, 749, 753, 755, 757, 761, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 814, 815, 823, 824, 825, 826, 827, 828, 832, 838, 839, 844, 846, 853, 855, 859, 861, 862, 863, 864, 865, 867, 868, 870, 871, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 916, 917, 931, 937, 944, 945, 947, 949, 950, 953, 959, 962, 964, 966], "non": [6, 9, 21, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 50, 60, 66, 67, 68, 72, 76, 85, 97, 99, 100, 101, 104, 109, 110, 111, 115, 121, 127, 137, 141, 142, 143, 149, 160, 163, 168, 169, 170, 171, 173, 177, 178, 185, 192, 193, 196, 198, 199, 202, 207, 208, 212, 213, 217, 218, 219, 224, 227, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 244, 251, 261, 262, 263, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 299, 303, 305, 307, 308, 309, 310, 311, 312, 318, 321, 322, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 355, 366, 367, 388, 424, 425, 429, 431, 445, 485, 491, 492, 493, 497, 514, 520, 521, 523, 524, 526, 550, 552, 553, 569, 611, 618, 624, 629, 635, 637, 638, 639, 652, 653, 659, 676, 677, 694, 700, 703, 723, 750, 768, 769, 776, 777, 779, 780, 784, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 834, 844, 863, 874, 877, 878, 885, 889, 898, 901, 905, 906, 908, 946, 951, 959, 966], "format": [6, 53, 69, 70, 89, 93, 150, 162, 167, 170, 176, 177, 178, 187, 192, 193, 195, 197, 198, 199, 209, 216, 220, 231, 234, 241, 244, 245, 246, 248, 256, 257, 258, 261, 283, 285, 287, 288, 291, 292, 294, 295, 303, 304, 306, 309, 310, 311, 314, 318, 319, 321, 325, 327, 330, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 382, 400, 401, 405, 407, 421, 422, 423, 445, 485, 492, 514, 515, 516, 517, 518, 551, 552, 553, 556, 559, 561, 565, 570, 575, 627, 633, 637, 638, 653, 655, 671, 694, 698, 703, 709, 719, 734, 735, 740, 741, 742, 754, 769, 776, 777, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 815, 817, 818, 839, 844, 861, 863, 878, 885, 889, 898, 901, 904, 906, 908, 909, 936, 944, 946, 959, 962, 966], "base": [7, 9, 15, 19, 29, 31, 33, 35, 37, 42, 47, 48, 53, 54, 58, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 80, 81, 84, 85, 88, 95, 97, 105, 110, 112, 118, 120, 122, 124, 127, 128, 131, 135, 137, 138, 140, 141, 142, 145, 147, 149, 159, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 187, 188, 189, 192, 193, 196, 197, 199, 203, 204, 205, 206, 207, 208, 209, 217, 219, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 252, 253, 254, 256, 257, 258, 259, 260, 261, 264, 266, 269, 270, 271, 278, 282, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 298, 299, 302, 303, 304, 308, 309, 310, 311, 314, 318, 319, 321, 327, 328, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 382, 384, 388, 389, 394, 399, 402, 412, 413, 414, 415, 418, 424, 425, 426, 427, 430, 431, 435, 447, 478, 485, 487, 488, 491, 492, 493, 495, 496, 498, 499, 502, 506, 508, 511, 514, 516, 518, 520, 521, 523, 524, 525, 526, 529, 536, 542, 551, 552, 553, 555, 559, 570, 580, 590, 596, 597, 600, 603, 606, 620, 635, 637, 638, 640, 641, 645, 646, 647, 648, 649, 652, 653, 655, 656, 664, 665, 666, 676, 689, 690, 691, 703, 708, 710, 727, 737, 741, 742, 749, 762, 765, 774, 775, 776, 777, 778, 779, 780, 784, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 805, 808, 815, 824, 826, 827, 829, 840, 844, 854, 857, 863, 865, 870, 875, 876, 878, 884, 885, 886, 887, 889, 891, 892, 893, 898, 899, 901, 903, 904, 906, 908, 909, 910, 922, 938, 946, 951, 952, 953, 955, 956, 957, 962, 966], "class": [7, 9, 14, 15, 34, 35, 36, 42, 45, 87, 96, 115, 122, 123, 142, 143, 164, 167, 169, 176, 178, 184, 192, 193, 195, 198, 199, 202, 223, 229, 230, 233, 244, 247, 251, 261, 272, 273, 275, 282, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 308, 310, 311, 318, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 357, 372, 382, 383, 436, 467, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 526, 551, 552, 553, 587, 604, 637, 638, 639, 658, 673, 739, 769, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 831, 832, 833, 834, 839, 840, 841, 844, 845, 846, 847, 857, 917, 918, 919, 920, 921, 922, 923, 960, 966], "bem": [8, 14, 29, 31, 33, 49, 52, 53, 66, 67, 69, 70, 71, 76, 95, 137, 154, 162, 163, 177, 182, 183, 186, 187, 190, 191, 192, 198, 203, 207, 208, 209, 210, 211, 212, 213, 218, 219, 236, 240, 264, 265, 266, 275, 280, 281, 282, 285, 286, 288, 289, 291, 292, 293, 295, 296, 300, 301, 303, 304, 308, 309, 319, 321, 331, 343, 346, 436, 459, 484, 504, 528, 535, 594, 595, 596, 599, 600, 672, 695, 696, 719, 725, 727, 728, 738, 754, 862, 864, 933, 934, 939, 944, 958, 965, 966], "minimum_norm": [9, 14, 31, 33, 37, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 78, 80, 81, 83, 84, 85, 87, 118, 122, 132, 135, 136, 137, 138, 153, 193, 204, 205, 206, 208, 209, 219, 224, 234, 240, 252, 253, 264, 266, 284, 285, 287, 288, 289, 291, 292, 293, 294, 303, 305, 309, 318, 321, 322, 965], "linear": [9, 28, 31, 32, 33, 34, 35, 39, 43, 45, 46, 52, 53, 67, 71, 76, 80, 81, 87, 129, 135, 137, 138, 140, 148, 162, 163, 168, 185, 186, 193, 203, 204, 208, 209, 223, 224, 230, 232, 233, 234, 240, 278, 280, 283, 284, 291, 292, 294, 297, 299, 304, 307, 308, 318, 319, 321, 328, 330, 333, 334, 335, 336, 338, 340, 341, 342, 344, 346, 347, 348, 349, 412, 424, 485, 489, 491, 492, 497, 500, 503, 520, 521, 523, 524, 525, 552, 553, 595, 608, 610, 617, 620, 637, 638, 653, 659, 668, 674, 703, 712, 740, 741, 742, 754, 774, 775, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 832, 834, 844, 846, 863, 865, 870, 878, 879, 881, 885, 887, 889, 894, 898, 900, 901, 904, 906, 908, 909, 910, 946, 959, 966], "solver": [9, 31, 36, 37, 39, 41, 44, 53, 62, 66, 71, 72, 82, 85, 202, 224, 280, 282, 284, 285, 286, 287, 288, 291, 293, 295, 298, 300, 314, 330, 331, 335, 337, 338, 344, 528, 529, 549, 595, 620, 697, 706, 708, 775, 905, 966], "l2": [9, 57, 66, 80, 81, 278, 549, 550, 620, 749, 808], "minimum": [9, 48, 57, 83, 97, 106, 110, 163, 167, 176, 178, 189, 193, 195, 198, 204, 206, 207, 229, 230, 235, 252, 264, 278, 283, 284, 285, 286, 289, 291, 292, 293, 294, 297, 298, 300, 301, 303, 310, 311, 318, 321, 328, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 362, 363, 364, 365, 366, 367, 412, 414, 415, 430, 518, 520, 521, 523, 524, 526, 528, 529, 552, 553, 600, 605, 606, 607, 608, 609, 611, 612, 616, 618, 620, 621, 622, 640, 641, 646, 655, 656, 665, 736, 746, 749, 751, 754, 782, 801, 802, 803, 804, 805, 806, 807, 825, 828, 844, 870, 884, 900, 903, 917, 959], "norm": [9, 53, 57, 62, 73, 74, 75, 76, 82, 83, 85, 106, 111, 144, 176, 183, 189, 193, 204, 206, 212, 235, 252, 253, 278, 282, 286, 292, 297, 298, 300, 306, 318, 321, 330, 331, 333, 334, 335, 336, 337, 338, 344, 345, 346, 431, 529, 547, 548, 549, 550, 552, 553, 604, 605, 606, 607, 608, 609, 611, 612, 614, 615, 616, 618, 620, 621, 622, 697, 706, 708, 718, 746, 749, 751, 808, 873, 874, 903, 905, 959, 966], "estim": [9, 14, 22, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 278, 282, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 309, 310, 314, 317, 319, 321, 325, 328, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 353, 354, 358, 359, 360, 361, 363, 364, 366, 367, 382, 390, 398, 412, 414, 418, 425, 429, 430, 431, 436, 437, 438, 441, 442, 443, 445, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 519, 520, 522, 524, 525, 526, 528, 529, 532, 547, 548, 549, 550, 552, 553, 558, 590, 592, 593, 599, 601, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 619, 620, 621, 622, 625, 638, 639, 643, 647, 648, 655, 661, 666, 669, 674, 676, 688, 690, 691, 706, 708, 711, 716, 717, 718, 728, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 756, 770, 774, 775, 781, 782, 784, 785, 789, 790, 791, 793, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 815, 823, 824, 826, 827, 844, 862, 863, 869, 870, 871, 878, 886, 893, 900, 903, 904, 905, 908, 909, 910, 946, 953, 959, 966], "inverse_spars": [9, 14, 57, 61, 66, 72, 85, 202, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 299], "spars": [9, 29, 53, 62, 70, 72, 82, 147, 202, 256, 261, 264, 266, 278, 285, 286, 291, 292, 293, 299, 311, 322, 325, 330, 331, 335, 337, 338, 344, 345, 346, 378, 388, 399, 431, 443, 445, 529, 547, 548, 549, 550, 604, 605, 616, 697, 706, 708, 718, 755, 769, 775, 776, 777, 779, 780, 844, 873, 874, 905, 959, 966], "beamform": [9, 14, 53, 62, 77, 82, 86, 131, 192, 193, 214, 215, 253, 278, 284, 285, 286, 287, 288, 291, 292, 293, 294, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 319, 321, 330, 333, 335, 336, 337, 338, 344, 345, 346, 348, 425, 429, 431, 435, 443, 526, 528, 552, 606, 614, 616, 635, 697, 708, 718, 791, 792, 795, 805, 807, 844, 965, 966], "sourc": [9, 14, 24, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 61, 63, 66, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 124, 125, 127, 128, 129, 131, 133, 134, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 184, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 202, 206, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 257, 258, 259, 260, 261, 268, 269, 270, 271, 274, 275, 278, 280, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 319, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 950, 952, 953, 956, 958, 959, 962, 966], "local": [9, 33, 48, 52, 53, 59, 60, 61, 62, 66, 67, 68, 72, 73, 74, 75, 77, 80, 81, 82, 84, 85, 86, 95, 97, 111, 118, 120, 122, 137, 141, 144, 148, 177, 178, 179, 182, 185, 193, 198, 202, 206, 207, 211, 213, 215, 219, 224, 231, 235, 239, 240, 253, 278, 285, 291, 292, 295, 299, 303, 310, 314, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 342, 344, 348, 366, 367, 369, 371, 382, 386, 400, 413, 415, 424, 425, 429, 430, 435, 441, 442, 443, 445, 449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 492, 506, 526, 528, 529, 542, 547, 549, 550, 552, 553, 560, 599, 600, 604, 605, 606, 616, 620, 637, 638, 646, 653, 664, 666, 671, 697, 706, 708, 721, 730, 733, 737, 746, 749, 751, 753, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 836, 844, 854, 862, 863, 871, 874, 878, 883, 885, 886, 889, 898, 901, 905, 906, 908, 914, 946, 951, 953, 958, 959, 966], "dipol": [9, 14, 29, 33, 48, 52, 53, 54, 57, 60, 61, 62, 65, 66, 67, 68, 72, 77, 82, 85, 86, 87, 95, 110, 111, 120, 121, 122, 137, 147, 179, 182, 185, 192, 193, 196, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 219, 232, 240, 244, 251, 253, 278, 282, 284, 285, 288, 289, 291, 292, 294, 295, 302, 303, 304, 305, 318, 321, 322, 330, 332, 333, 334, 335, 336, 337, 338, 341, 344, 347, 348, 349, 366, 367, 368, 369, 371, 372, 381, 413, 424, 435, 445, 462, 506, 526, 528, 530, 547, 548, 549, 550, 552, 553, 599, 604, 605, 607, 616, 625, 635, 695, 697, 698, 706, 708, 721, 723, 737, 741, 742, 746, 749, 751, 753, 755, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 854, 862, 863, 873, 874, 905, 909, 914, 959, 962, 965, 966], "singl": [9, 27, 28, 32, 42, 44, 53, 59, 60, 62, 71, 82, 94, 97, 102, 110, 111, 114, 122, 129, 131, 133, 134, 135, 141, 145, 148, 151, 157, 167, 168, 169, 171, 172, 176, 177, 178, 185, 192, 193, 195, 196, 197, 199, 203, 205, 207, 210, 211, 216, 217, 218, 224, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 240, 244, 245, 251, 253, 256, 261, 262, 263, 266, 270, 271, 278, 280, 283, 285, 286, 288, 289, 291, 294, 295, 297, 298, 299, 300, 302, 303, 309, 310, 311, 314, 318, 319, 322, 325, 327, 328, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 360, 361, 364, 366, 367, 374, 382, 384, 388, 389, 394, 424, 425, 430, 458, 485, 486, 492, 498, 501, 507, 511, 514, 526, 552, 553, 569, 572, 573, 575, 591, 594, 597, 599, 601, 604, 605, 607, 609, 611, 612, 619, 629, 635, 637, 638, 643, 646, 653, 691, 699, 703, 710, 716, 723, 733, 738, 755, 769, 770, 772, 773, 774, 776, 777, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 823, 824, 826, 827, 829, 834, 844, 846, 862, 863, 864, 870, 874, 877, 878, 879, 880, 881, 882, 885, 886, 889, 896, 897, 898, 900, 901, 902, 906, 908, 929, 934, 946, 949, 966], "util": [10, 14, 18, 50, 121, 173, 207, 217, 231, 280, 282, 287, 288, 289, 295, 299, 309, 310, 311, 322, 333, 334, 515, 518, 552, 553, 839, 951, 958], "cuda": [10, 14, 198, 287, 288, 289, 299, 302, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 491, 496, 497, 523, 524, 525, 552, 553, 946, 956, 965], "step": [12, 30, 34, 37, 41, 44, 50, 67, 72, 85, 90, 95, 122, 127, 131, 137, 140, 148, 167, 169, 178, 179, 185, 188, 193, 194, 195, 197, 199, 218, 219, 224, 227, 228, 229, 231, 233, 235, 236, 238, 240, 241, 244, 256, 257, 271, 274, 278, 283, 292, 295, 299, 301, 304, 311, 312, 314, 318, 319, 322, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 358, 360, 412, 413, 414, 418, 485, 491, 500, 503, 526, 527, 543, 544, 550, 552, 553, 570, 633, 638, 648, 653, 665, 674, 739, 756, 776, 777, 779, 780, 781, 795, 796, 811, 819, 834, 844, 862, 870, 899, 910, 949, 952, 953, 958], "instruct": [12, 87, 144, 185, 188, 217, 239, 241, 287, 290, 292, 293, 311, 544, 946, 951, 952, 953, 954, 956, 958, 959, 960, 961], "us": [12, 13, 14, 23, 26, 28, 29, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 121, 123, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 160, 161, 162, 163, 165, 167, 168, 169, 171, 172, 177, 178, 179, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 227, 228, 230, 231, 232, 234, 235, 237, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 254, 256, 257, 258, 259, 261, 264, 265, 266, 269, 270, 271, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 319, 320, 321, 323, 326, 328, 349, 351, 353, 354, 355, 358, 360, 364, 365, 373, 374, 375, 376, 377, 378, 379, 387, 389, 390, 399, 409, 410, 417, 433, 441, 442, 444, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 487, 490, 496, 498, 510, 512, 513, 515, 516, 517, 518, 523, 524, 529, 530, 535, 536, 540, 541, 543, 545, 546, 551, 554, 557, 562, 567, 577, 579, 580, 584, 587, 588, 609, 613, 618, 623, 624, 630, 631, 640, 644, 648, 649, 664, 669, 670, 671, 672, 673, 674, 677, 685, 689, 701, 702, 704, 707, 712, 713, 722, 724, 725, 728, 731, 734, 735, 736, 740, 752, 759, 760, 762, 763, 764, 765, 766, 771, 786, 797, 798, 801, 802, 803, 808, 810, 811, 813, 814, 818, 819, 821, 822, 824, 825, 829, 830, 831, 832, 833, 834, 841, 842, 847, 853, 856, 858, 861, 872, 875, 876, 878, 880, 883, 885, 889, 890, 891, 892, 893, 896, 899, 900, 901, 902, 906, 907, 910, 911, 912, 915, 917, 924, 928, 929, 930, 933, 934, 935, 936, 937, 938, 940, 941, 942, 943, 945, 949, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 965, 966], "gui": [12, 14, 184, 185, 187, 283, 285, 286, 288, 294, 295, 300, 301, 303, 304, 307, 309, 310, 314, 318, 320, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 378, 552, 553, 638, 846, 876, 881, 893, 899, 904, 909, 946, 951, 956, 958, 959], "coregistr": [12, 14, 49, 53, 108, 183, 187, 188, 190, 191, 192, 208, 285, 286, 288, 294, 295, 300, 301, 303, 304, 309, 314, 318, 331, 338, 343, 346, 374, 378, 437, 444, 461, 504, 558, 596, 600, 672, 727, 757, 784, 833, 844, 862, 914, 966], "subject": [12, 30, 31, 33, 34, 35, 36, 37, 45, 48, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 95, 98, 99, 107, 108, 110, 117, 118, 119, 123, 132, 137, 140, 141, 143, 144, 146, 153, 154, 155, 158, 161, 162, 163, 164, 167, 170, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 218, 219, 220, 224, 227, 228, 229, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 252, 253, 256, 257, 258, 260, 261, 264, 265, 266, 267, 270, 271, 274, 275, 278, 283, 284, 286, 287, 288, 289, 291, 292, 294, 295, 299, 303, 304, 305, 306, 309, 314, 318, 320, 321, 322, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 366, 367, 373, 377, 378, 379, 382, 412, 413, 414, 415, 420, 422, 423, 431, 436, 437, 438, 444, 452, 457, 459, 460, 461, 462, 467, 477, 478, 504, 519, 535, 537, 539, 541, 543, 544, 545, 546, 552, 553, 554, 558, 590, 592, 594, 596, 600, 604, 605, 616, 624, 625, 638, 642, 653, 671, 672, 676, 693, 697, 703, 708, 710, 711, 713, 716, 720, 725, 726, 727, 728, 737, 738, 739, 741, 742, 743, 752, 754, 755, 766, 770, 772, 781, 784, 785, 834, 836, 843, 844, 862, 864, 869, 874, 875, 888, 902, 904, 909, 910, 940, 941, 946, 958, 959, 966], "structur": [12, 29, 30, 34, 35, 36, 53, 67, 69, 85, 89, 90, 94, 97, 110, 122, 123, 140, 142, 152, 162, 169, 173, 174, 175, 178, 180, 181, 182, 186, 192, 193, 194, 197, 198, 200, 201, 208, 212, 214, 215, 217, 218, 220, 223, 233, 241, 245, 248, 249, 254, 255, 256, 257, 271, 278, 284, 286, 289, 311, 318, 319, 320, 321, 327, 333, 334, 335, 336, 337, 338, 340, 341, 343, 344, 346, 347, 348, 349, 380, 381, 382, 390, 424, 444, 445, 461, 465, 526, 550, 552, 553, 558, 573, 598, 618, 629, 632, 634, 635, 649, 658, 672, 676, 699, 701, 705, 706, 716, 749, 759, 760, 761, 762, 763, 764, 765, 769, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 815, 834, 844, 902, 953, 956, 959, 962, 966], "scale": [12, 29, 30, 31, 33, 36, 42, 45, 48, 53, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 80, 81, 83, 84, 85, 87, 92, 97, 102, 105, 112, 118, 122, 128, 129, 131, 132, 135, 136, 137, 138, 142, 143, 144, 147, 150, 160, 163, 164, 168, 169, 176, 178, 183, 184, 187, 193, 198, 204, 205, 206, 207, 208, 209, 210, 213, 218, 219, 220, 223, 224, 229, 230, 232, 233, 235, 236, 240, 241, 247, 252, 253, 264, 266, 270, 271, 274, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 300, 302, 303, 304, 307, 309, 321, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 366, 367, 398, 408, 424, 425, 429, 430, 436, 441, 442, 443, 485, 492, 494, 506, 508, 519, 528, 529, 544, 546, 547, 549, 550, 552, 553, 563, 611, 612, 616, 618, 621, 622, 637, 638, 648, 649, 665, 676, 706, 725, 726, 727, 728, 741, 742, 753, 756, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 834, 844, 859, 861, 863, 870, 874, 876, 877, 878, 880, 882, 884, 885, 886, 887, 889, 894, 898, 899, 900, 901, 905, 906, 907, 908, 909, 966], "templat": [12, 120, 121, 154, 162, 182, 184, 190, 191, 192, 197, 203, 261, 278, 285, 288, 289, 291, 294, 295, 301, 304, 308, 321, 337, 338, 346, 353, 372, 382, 386, 387, 388, 398, 400, 404, 436, 445, 461, 510, 553, 568, 600, 653, 673, 695, 718, 738, 862, 914, 966], "which": [12, 22, 26, 29, 30, 31, 33, 38, 42, 44, 45, 47, 52, 57, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 87, 97, 101, 102, 107, 108, 109, 110, 115, 122, 129, 131, 137, 140, 142, 143, 144, 147, 148, 150, 152, 156, 161, 162, 163, 164, 167, 168, 169, 170, 171, 173, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 205, 207, 209, 211, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 320, 321, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 359, 366, 367, 375, 376, 382, 384, 391, 398, 400, 401, 402, 403, 404, 410, 411, 412, 414, 418, 420, 424, 425, 430, 431, 434, 438, 444, 445, 452, 458, 477, 485, 487, 492, 493, 496, 502, 504, 506, 509, 511, 513, 514, 515, 516, 518, 519, 521, 523, 524, 525, 526, 527, 528, 529, 536, 543, 544, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 590, 591, 592, 596, 597, 598, 599, 605, 606, 614, 615, 618, 619, 623, 627, 633, 637, 638, 639, 640, 646, 648, 649, 652, 653, 655, 656, 657, 658, 665, 672, 674, 676, 681, 690, 693, 699, 701, 703, 705, 706, 707, 708, 710, 711, 713, 718, 719, 722, 723, 724, 725, 727, 728, 730, 731, 733, 738, 739, 743, 746, 749, 751, 752, 755, 757, 758, 766, 768, 769, 775, 781, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 812, 815, 822, 823, 824, 826, 827, 829, 831, 834, 844, 845, 846, 848, 850, 851, 855, 861, 862, 864, 867, 869, 870, 872, 874, 876, 877, 878, 879, 880, 881, 884, 885, 889, 891, 893, 898, 899, 900, 904, 906, 909, 913, 914, 916, 917, 918, 919, 920, 921, 922, 923, 925, 927, 929, 936, 937, 938, 939, 941, 943, 944, 945, 946, 949, 951, 953, 955, 956, 957, 960, 962], "i": [12, 14, 23, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 52, 53, 54, 57, 58, 60, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 80, 85, 87, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 114, 115, 118, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 155, 156, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 196, 198, 199, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 319, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 365, 366, 367, 369, 371, 372, 374, 376, 377, 378, 382, 384, 387, 388, 390, 392, 393, 394, 395, 397, 399, 400, 401, 407, 409, 412, 413, 414, 418, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 438, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 541, 542, 543, 544, 547, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 596, 597, 598, 599, 600, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 627, 628, 629, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 680, 681, 683, 684, 685, 690, 691, 693, 694, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 711, 713, 716, 719, 722, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 759, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 812, 814, 815, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 834, 838, 839, 840, 842, 843, 844, 845, 846, 848, 850, 853, 854, 855, 856, 858, 859, 862, 863, 864, 867, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 917, 918, 919, 920, 921, 922, 923, 927, 936, 937, 939, 941, 944, 947, 948, 949, 952, 953, 955, 956, 960, 961, 962, 964], "avail": [12, 26, 27, 31, 33, 34, 38, 45, 47, 48, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 95, 98, 100, 101, 104, 106, 108, 109, 110, 113, 114, 118, 120, 121, 122, 123, 129, 137, 144, 147, 148, 152, 158, 163, 167, 168, 169, 170, 171, 173, 176, 177, 178, 182, 183, 186, 189, 192, 193, 194, 195, 196, 199, 200, 203, 204, 205, 206, 207, 208, 211, 216, 217, 219, 220, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 257, 269, 274, 275, 282, 285, 286, 289, 303, 304, 305, 306, 311, 314, 319, 321, 322, 323, 325, 330, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 373, 375, 376, 382, 402, 408, 444, 446, 452, 477, 478, 484, 485, 491, 492, 497, 504, 511, 533, 549, 552, 553, 596, 614, 615, 629, 630, 631, 637, 638, 653, 706, 713, 754, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 826, 844, 863, 870, 876, 878, 880, 882, 885, 886, 889, 893, 896, 898, 899, 900, 901, 902, 904, 906, 908, 909, 930, 931, 946, 948, 951, 953, 958, 959, 960, 961, 963], "also": [12, 14, 30, 36, 45, 47, 53, 54, 55, 56, 58, 64, 65, 67, 68, 69, 71, 73, 87, 89, 96, 97, 98, 106, 107, 108, 110, 111, 122, 123, 129, 132, 135, 137, 140, 142, 144, 145, 148, 150, 155, 162, 165, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 207, 208, 209, 210, 211, 213, 216, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 257, 258, 260, 261, 264, 266, 269, 270, 271, 274, 275, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 301, 303, 304, 306, 308, 309, 310, 311, 312, 314, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 366, 367, 374, 375, 376, 380, 382, 384, 392, 393, 397, 400, 410, 418, 425, 430, 431, 437, 441, 444, 445, 452, 460, 485, 487, 492, 497, 501, 504, 506, 509, 520, 521, 523, 524, 525, 526, 528, 535, 538, 547, 549, 550, 552, 553, 561, 565, 574, 578, 596, 599, 600, 611, 612, 613, 616, 635, 637, 638, 640, 641, 647, 648, 650, 653, 654, 655, 656, 664, 666, 667, 668, 669, 671, 672, 682, 684, 690, 691, 698, 706, 723, 724, 727, 733, 737, 738, 745, 754, 757, 775, 776, 781, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 824, 827, 833, 834, 842, 844, 846, 862, 863, 870, 871, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 888, 889, 890, 896, 897, 898, 899, 900, 901, 902, 904, 906, 908, 910, 912, 946, 947, 948, 951, 955, 956, 957, 958, 959], "mne_gui_addon": [12, 165, 192, 307, 314], "locate_ieeg": [12, 295, 303, 304, 307], "project": [13, 14, 26, 29, 31, 33, 34, 37, 38, 39, 40, 41, 42, 44, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 102, 104, 105, 106, 107, 110, 112, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 266, 270, 271, 274, 275, 278, 281, 282, 284, 285, 286, 288, 292, 293, 294, 295, 298, 299, 302, 303, 304, 305, 306, 307, 310, 311, 313, 314, 316, 318, 319, 321, 328, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 347, 348, 349, 353, 354, 366, 367, 369, 371, 412, 414, 418, 425, 426, 427, 428, 430, 441, 443, 460, 493, 505, 526, 528, 529, 551, 552, 553, 574, 597, 599, 601, 604, 606, 616, 637, 638, 649, 650, 651, 652, 654, 665, 672, 676, 684, 691, 699, 708, 714, 729, 730, 733, 753, 766, 784, 789, 791, 792, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 807, 844, 862, 863, 868, 871, 878, 880, 882, 884, 885, 889, 897, 898, 899, 900, 902, 904, 909, 915, 916, 931, 942, 959, 962, 965, 966], "channel": [13, 14, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 92, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 118, 120, 121, 122, 123, 124, 125, 127, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 168, 169, 171, 173, 177, 179, 183, 184, 185, 186, 189, 192, 193, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 223, 224, 227, 231, 232, 234, 235, 237, 238, 240, 241, 242, 243, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 269, 270, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 320, 321, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 347, 348, 349, 350, 353, 354, 366, 367, 378, 380, 381, 412, 414, 416, 417, 420, 424, 425, 426, 427, 428, 429, 430, 441, 442, 443, 445, 453, 485, 487, 492, 493, 494, 496, 498, 501, 506, 510, 515, 517, 518, 523, 524, 526, 527, 528, 529, 537, 542, 547, 549, 550, 551, 552, 553, 555, 561, 563, 564, 565, 566, 568, 569, 570, 573, 576, 577, 578, 580, 581, 584, 593, 596, 600, 602, 604, 606, 616, 629, 630, 631, 632, 634, 635, 636, 637, 638, 640, 643, 644, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 661, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 675, 676, 677, 680, 681, 682, 684, 687, 689, 690, 691, 694, 700, 701, 702, 703, 705, 706, 707, 708, 723, 724, 729, 730, 733, 739, 741, 742, 743, 757, 769, 775, 776, 777, 779, 780, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 813, 819, 823, 824, 826, 827, 828, 844, 855, 859, 862, 863, 866, 867, 868, 870, 871, 872, 875, 876, 877, 878, 880, 882, 883, 884, 885, 886, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 906, 907, 908, 916, 925, 926, 927, 928, 929, 931, 946, 949, 956, 959, 965, 966], "modul": [13, 14, 15, 16, 19, 22, 29, 100, 150, 167, 169, 170, 172, 173, 176, 177, 178, 188, 193, 194, 195, 196, 197, 198, 199, 217, 218, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 241, 244, 245, 246, 247, 251, 269, 271, 280, 285, 288, 295, 298, 299, 300, 301, 302, 311, 319, 322, 325, 418, 564, 632, 788, 841, 844, 946, 952, 959, 962], "dedic": [13, 178, 227, 233, 235, 244, 292, 311, 312, 552, 553, 899, 956], "manipul": [13, 53, 89, 167, 176, 192, 248, 280, 319, 322, 434, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 597], "can": [13, 14, 23, 24, 30, 31, 33, 38, 39, 41, 42, 45, 47, 48, 50, 52, 53, 57, 58, 66, 67, 68, 69, 70, 71, 72, 73, 84, 85, 87, 88, 97, 98, 101, 102, 103, 106, 107, 109, 110, 111, 115, 122, 123, 127, 129, 131, 137, 140, 141, 142, 143, 144, 147, 148, 149, 150, 155, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 257, 258, 259, 261, 264, 265, 266, 269, 270, 271, 274, 275, 278, 281, 282, 283, 284, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 359, 366, 367, 373, 374, 375, 376, 379, 380, 382, 384, 386, 387, 390, 391, 392, 393, 397, 398, 399, 400, 402, 405, 409, 410, 412, 413, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 458, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 504, 506, 509, 510, 511, 512, 514, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 532, 535, 536, 537, 538, 541, 543, 544, 546, 547, 549, 550, 552, 553, 561, 565, 568, 569, 572, 573, 574, 576, 578, 580, 583, 586, 587, 590, 592, 595, 596, 597, 599, 600, 603, 605, 611, 612, 614, 615, 616, 618, 622, 624, 625, 626, 627, 635, 636, 637, 638, 640, 641, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 661, 663, 664, 665, 666, 667, 668, 669, 671, 672, 675, 676, 677, 680, 682, 683, 684, 689, 690, 691, 694, 696, 699, 700, 701, 702, 705, 706, 707, 709, 711, 713, 719, 723, 724, 725, 727, 728, 730, 733, 735, 737, 738, 745, 752, 753, 754, 755, 757, 759, 761, 763, 764, 768, 769, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 812, 819, 822, 824, 826, 827, 829, 830, 832, 833, 834, 839, 841, 842, 844, 845, 846, 850, 853, 859, 862, 863, 864, 865, 866, 867, 868, 869, 870, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 896, 897, 898, 899, 900, 901, 902, 904, 906, 908, 909, 910, 912, 923, 929, 933, 934, 937, 939, 944, 951, 952, 956, 957, 958, 959, 960, 962], "set": [13, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 109, 110, 111, 113, 114, 115, 118, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 173, 176, 177, 179, 182, 183, 185, 186, 187, 188, 189, 192, 193, 195, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 246, 251, 252, 253, 256, 259, 270, 271, 274, 275, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 314, 320, 321, 322, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 356, 357, 366, 367, 369, 371, 372, 373, 387, 395, 400, 411, 412, 425, 426, 428, 430, 431, 432, 436, 441, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 460, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 508, 509, 510, 513, 514, 515, 518, 519, 520, 524, 526, 528, 541, 542, 543, 544, 549, 552, 553, 554, 561, 568, 569, 573, 576, 578, 580, 584, 589, 590, 592, 594, 596, 598, 599, 600, 601, 603, 604, 607, 608, 609, 611, 612, 616, 621, 622, 624, 625, 626, 629, 637, 638, 639, 640, 641, 643, 650, 651, 652, 653, 655, 656, 658, 663, 665, 677, 689, 694, 700, 701, 705, 706, 707, 710, 713, 716, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 754, 766, 767, 771, 773, 775, 776, 777, 778, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 812, 814, 815, 822, 823, 824, 825, 826, 827, 831, 834, 835, 837, 842, 843, 844, 846, 848, 855, 863, 865, 870, 873, 874, 876, 878, 881, 882, 883, 884, 885, 889, 891, 892, 893, 898, 899, 900, 901, 902, 904, 906, 908, 909, 910, 911, 912, 914, 915, 931, 946, 949, 951, 952, 956, 959, 966], "sensor": [13, 14, 24, 29, 30, 31, 37, 41, 42, 43, 46, 49, 51, 53, 54, 58, 60, 67, 68, 71, 75, 95, 97, 98, 105, 106, 107, 112, 115, 118, 120, 122, 123, 126, 130, 131, 137, 147, 148, 151, 153, 157, 159, 162, 171, 173, 177, 178, 183, 184, 185, 186, 189, 193, 195, 196, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 227, 228, 230, 232, 233, 234, 236, 237, 238, 244, 253, 256, 257, 258, 263, 269, 272, 273, 274, 275, 278, 280, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 295, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 314, 318, 319, 320, 321, 326, 328, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 353, 354, 366, 367, 368, 375, 376, 380, 381, 382, 383, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 408, 410, 413, 415, 420, 425, 426, 427, 428, 429, 435, 441, 442, 443, 445, 485, 486, 487, 488, 489, 492, 493, 494, 495, 500, 501, 503, 504, 505, 526, 528, 529, 536, 551, 552, 553, 554, 558, 560, 563, 564, 566, 578, 589, 593, 599, 600, 601, 606, 608, 611, 612, 616, 634, 635, 637, 638, 639, 643, 649, 652, 653, 663, 664, 671, 672, 676, 681, 682, 684, 687, 699, 702, 703, 708, 721, 723, 724, 729, 741, 742, 753, 754, 757, 767, 769, 773, 774, 776, 777, 778, 779, 780, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 833, 844, 846, 859, 862, 863, 866, 867, 869, 870, 871, 872, 876, 878, 880, 881, 882, 884, 885, 886, 888, 889, 890, 895, 896, 898, 899, 901, 902, 906, 907, 908, 913, 914, 916, 917, 946, 953, 959, 966], "locat": [13, 26, 29, 30, 31, 33, 38, 47, 52, 53, 57, 61, 66, 67, 71, 73, 74, 75, 76, 81, 85, 87, 94, 95, 105, 107, 108, 109, 118, 121, 122, 123, 128, 137, 143, 146, 147, 152, 153, 162, 163, 164, 165, 168, 176, 177, 182, 183, 185, 186, 187, 188, 190, 192, 193, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 219, 220, 228, 234, 236, 237, 238, 240, 241, 244, 251, 252, 253, 256, 257, 258, 260, 261, 266, 271, 275, 278, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 303, 304, 305, 307, 308, 314, 318, 319, 321, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 366, 367, 376, 377, 378, 382, 383, 386, 388, 391, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 408, 413, 415, 416, 417, 425, 438, 449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 492, 505, 506, 515, 518, 526, 536, 541, 552, 553, 563, 565, 573, 578, 586, 590, 600, 604, 605, 614, 615, 616, 620, 624, 637, 638, 642, 653, 667, 670, 671, 676, 687, 701, 702, 705, 710, 711, 727, 728, 730, 738, 741, 742, 752, 755, 776, 777, 779, 780, 781, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 836, 844, 862, 863, 867, 870, 874, 878, 880, 884, 885, 888, 889, 898, 899, 900, 901, 902, 906, 908, 914, 916, 946, 953, 958, 966], "process": [13, 14, 30, 33, 53, 54, 58, 60, 71, 77, 85, 95, 96, 107, 111, 115, 129, 151, 162, 169, 170, 171, 176, 178, 179, 182, 183, 187, 188, 189, 193, 198, 199, 204, 209, 211, 216, 228, 229, 230, 231, 233, 234, 235, 236, 238, 240, 244, 246, 251, 256, 257, 258, 266, 271, 278, 285, 287, 288, 292, 294, 295, 301, 302, 303, 308, 310, 312, 316, 318, 319, 322, 325, 330, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 356, 358, 360, 366, 367, 369, 425, 429, 430, 433, 441, 442, 443, 458, 466, 485, 487, 492, 493, 498, 502, 508, 509, 524, 528, 529, 547, 549, 550, 552, 553, 554, 564, 574, 611, 616, 638, 639, 648, 664, 665, 676, 677, 684, 691, 693, 706, 736, 738, 742, 762, 765, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 823, 876, 880, 886, 899, 900, 946, 949, 951, 959, 960, 962], "plot": [13, 23, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 71, 72, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 112, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 149, 151, 157, 158, 159, 161, 162, 164, 167, 170, 171, 172, 173, 176, 178, 180, 181, 183, 185, 186, 187, 192, 193, 194, 195, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 244, 246, 248, 249, 251, 253, 256, 257, 261, 264, 265, 266, 269, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 318, 319, 320, 321, 322, 323, 325, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 382, 383, 391, 393, 394, 398, 408, 425, 435, 445, 485, 489, 492, 500, 503, 505, 511, 514, 526, 528, 552, 553, 560, 564, 566, 569, 572, 574, 578, 596, 600, 601, 604, 605, 614, 615, 616, 617, 619, 634, 635, 637, 638, 653, 658, 659, 661, 662, 684, 697, 698, 703, 706, 708, 711, 716, 721, 728, 738, 775, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 845, 846, 847, 848, 850, 854, 855, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 916, 947, 949, 952, 956, 965, 966], "artifact": [13, 26, 33, 53, 58, 68, 97, 105, 110, 111, 112, 137, 138, 169, 171, 173, 176, 192, 193, 199, 210, 219, 220, 229, 230, 234, 236, 238, 239, 242, 243, 246, 247, 278, 280, 283, 292, 293, 297, 298, 299, 301, 303, 305, 308, 314, 319, 322, 327, 328, 330, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 415, 416, 426, 427, 428, 429, 430, 434, 487, 491, 498, 526, 550, 552, 553, 561, 566, 568, 583, 632, 635, 637, 638, 642, 643, 645, 650, 651, 653, 655, 656, 666, 667, 668, 670, 676, 679, 683, 688, 691, 741, 742, 789, 790, 791, 795, 796, 797, 798, 799, 821, 823, 824, 825, 826, 827, 862, 888, 890, 897, 898, 899, 914, 931, 946, 966], "detect": [13, 31, 33, 34, 35, 38, 48, 53, 95, 97, 99, 102, 105, 109, 110, 121, 137, 140, 150, 173, 178, 184, 186, 189, 192, 195, 199, 212, 218, 219, 220, 224, 228, 230, 231, 232, 233, 234, 235, 238, 241, 242, 243, 245, 271, 274, 278, 280, 282, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 299, 301, 303, 304, 305, 306, 309, 310, 322, 325, 326, 333, 334, 335, 336, 338, 343, 388, 412, 414, 418, 524, 552, 553, 559, 583, 635, 638, 640, 642, 643, 644, 646, 650, 651, 654, 655, 656, 664, 665, 666, 667, 669, 676, 775, 789, 790, 791, 795, 796, 797, 798, 825, 828, 844, 876, 892, 893, 899, 946, 959, 966], "ssp": [13, 26, 29, 34, 37, 44, 53, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 111, 118, 120, 121, 122, 123, 132, 135, 136, 137, 138, 149, 151, 157, 159, 167, 168, 169, 172, 173, 176, 178, 179, 189, 192, 193, 199, 203, 204, 205, 206, 207, 208, 209, 210, 219, 227, 228, 229, 231, 232, 233, 236, 238, 240, 242, 243, 244, 247, 252, 261, 264, 266, 282, 285, 288, 292, 297, 298, 299, 302, 314, 321, 328, 330, 333, 334, 335, 336, 337, 338, 342, 343, 344, 426, 427, 428, 526, 552, 553, 597, 632, 635, 637, 650, 651, 655, 656, 666, 691, 699, 708, 714, 729, 789, 791, 793, 795, 797, 799, 878, 880, 882, 884, 885, 897, 898, 900, 931, 946, 966], "ica": [13, 14, 33, 43, 46, 53, 102, 105, 111, 112, 115, 189, 192, 193, 227, 228, 229, 232, 235, 242, 243, 246, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 330, 333, 334, 335, 336, 338, 343, 382, 397, 398, 445, 489, 499, 526, 552, 553, 568, 632, 635, 653, 655, 656, 669, 670, 674, 688, 689, 703, 876, 889, 890, 891, 892, 893, 899, 931, 946, 949, 959, 965, 966], "nir": [13, 14, 53, 105, 112, 198, 239, 291, 292, 295, 304, 310, 322, 327, 338, 553, 583, 950, 952, 959, 965, 966], "specif": [13, 36, 45, 53, 69, 70, 71, 97, 133, 134, 140, 148, 162, 164, 168, 170, 171, 177, 178, 182, 187, 188, 197, 198, 199, 202, 217, 218, 219, 220, 227, 228, 230, 231, 233, 235, 236, 238, 240, 241, 244, 247, 253, 256, 257, 258, 261, 269, 270, 271, 274, 278, 283, 291, 292, 294, 301, 303, 304, 309, 310, 311, 312, 314, 316, 319, 321, 322, 323, 327, 329, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 347, 348, 349, 356, 366, 382, 485, 492, 509, 514, 516, 520, 526, 552, 553, 554, 568, 580, 590, 614, 615, 635, 636, 637, 638, 644, 649, 653, 663, 665, 676, 710, 716, 738, 768, 775, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 844, 865, 870, 877, 878, 885, 889, 898, 899, 901, 904, 906, 907, 909, 910, 940, 956, 959, 966], "ieeg": [13, 14, 163, 295, 307, 314, 965], "intracrani": [13, 53, 105, 162, 165, 192, 278, 295, 303, 304, 307, 314, 318, 319, 382, 537, 552, 553, 671, 673], "eeg": [13, 14, 26, 29, 30, 31, 33, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 89, 90, 91, 93, 95, 96, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 274, 275, 278, 280, 281, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 316, 321, 325, 328, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 366, 367, 369, 371, 372, 375, 376, 380, 381, 382, 384, 386, 388, 389, 393, 394, 396, 397, 398, 400, 401, 404, 405, 407, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 441, 442, 443, 445, 461, 476, 477, 478, 485, 487, 489, 492, 493, 494, 500, 501, 504, 506, 509, 517, 518, 526, 528, 529, 542, 544, 547, 549, 550, 552, 553, 559, 561, 563, 564, 565, 568, 569, 570, 571, 572, 574, 576, 578, 581, 582, 585, 593, 596, 598, 600, 601, 604, 605, 606, 616, 617, 619, 620, 629, 635, 636, 637, 638, 639, 640, 643, 646, 647, 650, 651, 653, 654, 655, 656, 664, 667, 668, 672, 675, 682, 684, 691, 695, 697, 699, 700, 702, 703, 706, 707, 708, 718, 721, 729, 730, 733, 738, 742, 749, 754, 757, 775, 776, 777, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 827, 836, 844, 846, 862, 863, 866, 870, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 889, 890, 896, 897, 898, 899, 900, 901, 902, 906, 907, 908, 913, 914, 931, 946, 949, 950, 959, 962, 966], "eyetrack": [13, 14, 150, 192, 221, 222, 241, 307, 308, 310, 322, 327, 333, 334, 335, 336, 338, 381, 552, 553, 572, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 966], "ey": [13, 23, 29, 53, 57, 102, 151, 154, 157, 162, 164, 185, 192, 199, 210, 213, 227, 229, 232, 234, 235, 242, 243, 308, 309, 319, 321, 322, 327, 333, 334, 335, 336, 338, 452, 526, 552, 553, 569, 570, 572, 629, 635, 656, 658, 659, 661, 662, 663, 667, 690, 700, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 855, 966], "track": [13, 23, 52, 53, 141, 151, 157, 169, 176, 193, 196, 219, 220, 228, 231, 245, 246, 251, 293, 301, 307, 308, 319, 320, 321, 322, 333, 338, 572, 638, 658, 659, 661, 662, 663, 855, 966], "referenc": [13, 26, 34, 53, 55, 98, 105, 112, 121, 122, 167, 177, 178, 186, 189, 194, 209, 217, 228, 232, 236, 252, 256, 289, 295, 302, 303, 304, 310, 311, 321, 322, 327, 333, 334, 335, 336, 338, 350, 394, 552, 553, 559, 730, 733, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 880, 949, 966], "filter": [13, 14, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 43, 45, 46, 53, 58, 59, 60, 68, 71, 85, 95, 99, 100, 101, 104, 105, 109, 110, 111, 112, 115, 120, 127, 137, 140, 141, 143, 149, 160, 163, 164, 167, 168, 171, 172, 173, 176, 189, 192, 193, 194, 196, 198, 199, 203, 208, 210, 211, 212, 213, 219, 223, 227, 229, 232, 235, 239, 241, 242, 243, 244, 246, 247, 253, 261, 271, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 310, 311, 314, 318, 320, 321, 325, 328, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 418, 419, 422, 425, 429, 430, 441, 442, 443, 447, 485, 486, 487, 489, 492, 493, 496, 499, 500, 501, 503, 506, 514, 526, 528, 529, 547, 549, 550, 552, 553, 566, 580, 598, 616, 635, 638, 639, 643, 649, 650, 651, 655, 656, 665, 666, 667, 676, 677, 680, 703, 743, 753, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 809, 812, 815, 886, 887, 888, 894, 899, 900, 931, 946, 949, 951, 965, 966], "iir": [13, 283, 287, 298, 307, 314, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 520, 521, 523, 524, 552, 553, 650, 651, 680, 743, 753, 809, 887, 899], "fir": [13, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 199, 213, 219, 224, 227, 229, 231, 232, 233, 235, 238, 239, 240, 241, 261, 283, 288, 299, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 520, 521, 523, 524, 525, 552, 553, 650, 651, 680, 809, 887, 899, 946, 951], "resampl": [13, 14, 21, 33, 45, 47, 70, 103, 108, 109, 137, 163, 167, 173, 176, 178, 192, 198, 219, 223, 227, 230, 233, 235, 242, 243, 253, 264, 265, 266, 270, 280, 283, 285, 287, 288, 289, 292, 294, 295, 298, 299, 302, 308, 309, 310, 320, 322, 332, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 506, 520, 521, 523, 524, 526, 552, 553, 561, 568, 576, 635, 690, 789, 790, 791, 795, 796, 797, 798, 799, 844, 876, 887, 904, 909, 931, 951, 966], "chpi": [13, 14, 107, 108, 152, 196, 210, 237, 238, 244, 285, 288, 291, 292, 294, 295, 305, 308, 309, 314, 321, 322, 325, 333, 334, 335, 336, 338, 343, 381, 445, 506, 552, 553, 635, 642, 645, 676, 740, 741, 742, 754, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 869, 876, 899, 965], "head": [13, 14, 29, 30, 31, 33, 36, 48, 52, 67, 69, 71, 76, 97, 98, 106, 107, 129, 137, 140, 143, 146, 148, 154, 162, 163, 170, 172, 177, 178, 184, 186, 190, 191, 192, 193, 196, 197, 198, 199, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 216, 218, 219, 227, 228, 233, 235, 236, 238, 240, 241, 242, 243, 244, 257, 271, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 300, 301, 303, 304, 305, 306, 309, 311, 314, 319, 321, 330, 331, 333, 334, 335, 336, 337, 338, 342, 343, 346, 372, 374, 375, 376, 378, 382, 385, 386, 395, 398, 400, 405, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 425, 432, 434, 435, 436, 437, 445, 459, 462, 485, 492, 504, 506, 528, 535, 536, 544, 545, 546, 552, 553, 558, 560, 564, 565, 566, 573, 578, 581, 586, 588, 594, 595, 596, 599, 600, 601, 637, 638, 642, 645, 647, 648, 649, 653, 659, 665, 672, 676, 677, 696, 701, 702, 705, 719, 737, 738, 740, 741, 742, 746, 751, 754, 757, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 830, 831, 833, 844, 846, 862, 863, 864, 869, 870, 874, 878, 880, 881, 882, 883, 885, 886, 888, 889, 896, 898, 900, 901, 902, 906, 908, 914, 937, 939, 944, 960, 966], "posit": [13, 26, 29, 30, 33, 38, 45, 47, 50, 53, 64, 65, 67, 71, 97, 103, 106, 107, 109, 110, 118, 121, 122, 123, 129, 140, 147, 150, 151, 152, 157, 162, 163, 177, 178, 183, 185, 186, 187, 197, 202, 203, 205, 210, 211, 212, 216, 218, 219, 227, 228, 232, 234, 238, 240, 241, 253, 256, 260, 264, 271, 274, 278, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 300, 302, 303, 304, 305, 306, 307, 308, 310, 318, 319, 321, 322, 325, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 359, 374, 376, 382, 383, 384, 395, 398, 400, 402, 405, 408, 413, 415, 416, 421, 422, 423, 425, 437, 453, 462, 485, 488, 491, 492, 495, 497, 504, 505, 506, 513, 527, 528, 537, 544, 552, 553, 566, 569, 574, 577, 578, 586, 599, 635, 637, 638, 642, 643, 645, 653, 658, 661, 664, 665, 667, 674, 676, 689, 698, 700, 738, 740, 741, 742, 746, 747, 748, 749, 750, 751, 752, 754, 757, 758, 773, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 811, 819, 820, 844, 845, 846, 850, 859, 862, 863, 865, 870, 876, 877, 878, 881, 883, 884, 885, 888, 889, 895, 898, 899, 901, 902, 904, 906, 907, 908, 910, 914, 916, 966], "c": [13, 26, 30, 36, 37, 38, 45, 48, 70, 77, 97, 102, 124, 137, 140, 143, 149, 155, 164, 188, 198, 203, 207, 210, 211, 216, 219, 223, 224, 234, 240, 258, 259, 260, 261, 271, 278, 282, 283, 284, 287, 291, 299, 314, 316, 318, 319, 321, 322, 323, 325, 326, 333, 334, 339, 344, 345, 346, 369, 405, 408, 425, 431, 445, 460, 477, 478, 491, 492, 526, 529, 547, 552, 553, 594, 600, 613, 638, 646, 652, 685, 703, 749, 754, 795, 825, 828, 844, 951, 952, 956, 959, 962], "hpi": [13, 26, 33, 38, 47, 108, 109, 147, 152, 183, 193, 196, 197, 211, 216, 219, 227, 238, 244, 282, 285, 286, 291, 295, 305, 321, 322, 325, 333, 334, 335, 336, 338, 375, 376, 382, 385, 395, 405, 407, 412, 413, 414, 417, 418, 419, 436, 504, 505, 552, 553, 560, 578, 635, 642, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 869], "coil": [13, 26, 29, 31, 33, 38, 47, 52, 67, 71, 76, 108, 109, 137, 147, 152, 153, 177, 183, 185, 186, 203, 208, 209, 210, 211, 212, 213, 216, 219, 227, 236, 237, 238, 240, 275, 285, 291, 294, 295, 305, 310, 321, 325, 333, 334, 335, 336, 338, 390, 405, 412, 413, 415, 416, 417, 419, 420, 505, 528, 552, 553, 555, 560, 578, 635, 648, 649, 652, 676, 687, 702, 730, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 838, 869], "transform": [13, 14, 26, 29, 31, 33, 34, 37, 38, 40, 42, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 102, 105, 108, 109, 110, 112, 115, 118, 120, 121, 122, 123, 131, 132, 135, 136, 137, 138, 140, 141, 143, 147, 152, 153, 154, 158, 162, 172, 177, 182, 184, 185, 186, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 233, 236, 240, 244, 252, 253, 269, 271, 274, 278, 280, 282, 283, 285, 286, 287, 289, 291, 292, 295, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 318, 319, 321, 325, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 374, 382, 385, 386, 396, 425, 431, 432, 434, 436, 437, 438, 445, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 499, 500, 503, 504, 506, 526, 528, 536, 544, 545, 546, 552, 553, 560, 586, 596, 599, 600, 611, 612, 621, 622, 638, 639, 642, 645, 647, 649, 659, 665, 672, 676, 677, 708, 712, 720, 721, 728, 733, 754, 757, 774, 784, 786, 793, 795, 799, 802, 805, 811, 812, 815, 819, 820, 821, 822, 823, 824, 825, 828, 830, 844, 862, 863, 910, 916, 937, 938, 945, 946, 959, 966], "helper": [13, 141, 256, 310, 382, 400, 658], "variou": [13, 53, 89, 129, 148, 149, 162, 168, 177, 182, 192, 196, 197, 204, 205, 214, 215, 216, 217, 220, 221, 227, 230, 231, 233, 235, 242, 244, 246, 253, 256, 257, 285, 289, 291, 311, 312, 318, 322, 323, 330, 335, 338, 344, 400, 604, 605, 616, 638, 676, 697, 706, 708, 844, 868, 946, 966], "thi": [14, 27, 29, 30, 31, 33, 35, 36, 39, 40, 42, 44, 45, 47, 48, 52, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 76, 80, 81, 83, 84, 85, 87, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 114, 115, 118, 121, 122, 123, 124, 125, 127, 129, 131, 132, 137, 140, 141, 142, 143, 144, 145, 146, 150, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 360, 361, 364, 366, 367, 372, 373, 375, 376, 377, 378, 379, 382, 383, 386, 387, 388, 389, 390, 391, 394, 395, 396, 400, 401, 402, 407, 411, 412, 413, 416, 418, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 441, 442, 443, 444, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 534, 535, 537, 538, 541, 543, 545, 546, 547, 549, 550, 551, 552, 553, 554, 559, 560, 561, 562, 564, 568, 569, 570, 572, 573, 576, 577, 581, 583, 586, 587, 590, 592, 597, 598, 600, 604, 605, 606, 607, 608, 609, 611, 612, 614, 615, 616, 622, 624, 625, 629, 633, 635, 637, 638, 639, 640, 641, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 658, 659, 661, 663, 664, 665, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 680, 683, 684, 690, 693, 694, 696, 699, 700, 701, 703, 705, 706, 710, 711, 716, 719, 725, 727, 730, 731, 733, 735, 737, 738, 741, 742, 743, 750, 752, 753, 754, 755, 756, 759, 760, 763, 766, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 814, 824, 827, 829, 831, 834, 838, 839, 841, 842, 844, 847, 848, 850, 854, 856, 859, 861, 862, 863, 864, 867, 868, 872, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 911, 912, 915, 916, 917, 918, 939, 941, 946, 949, 951, 952, 955, 956, 958, 959, 960], "camelcas": [14, 311], "name": [14, 30, 31, 34, 36, 44, 48, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 97, 101, 110, 118, 120, 121, 122, 123, 128, 129, 131, 137, 140, 155, 158, 159, 162, 164, 168, 169, 170, 171, 172, 176, 177, 186, 187, 188, 193, 195, 196, 197, 198, 199, 204, 205, 206, 207, 218, 219, 224, 228, 229, 230, 233, 234, 236, 238, 239, 240, 247, 251, 252, 253, 256, 257, 269, 275, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 305, 307, 309, 310, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 373, 377, 378, 379, 380, 382, 383, 388, 391, 392, 393, 394, 395, 397, 398, 399, 404, 406, 407, 408, 410, 411, 422, 430, 431, 434, 436, 437, 438, 441, 442, 445, 453, 458, 461, 464, 485, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 501, 503, 504, 506, 509, 512, 515, 516, 517, 518, 526, 527, 535, 537, 538, 539, 541, 543, 544, 545, 546, 551, 552, 553, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 588, 589, 590, 592, 594, 596, 597, 604, 619, 623, 627, 628, 629, 635, 636, 637, 638, 639, 640, 651, 653, 654, 655, 656, 664, 665, 666, 667, 668, 669, 672, 677, 682, 684, 687, 688, 691, 693, 694, 696, 698, 700, 701, 702, 703, 705, 707, 708, 709, 710, 711, 713, 714, 716, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 730, 733, 737, 738, 743, 757, 766, 770, 774, 775, 781, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 816, 824, 827, 829, 831, 841, 843, 844, 850, 855, 862, 863, 864, 865, 867, 870, 874, 875, 876, 877, 878, 880, 882, 883, 884, 885, 889, 890, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 908, 909, 910, 917, 918, 919, 920, 921, 922, 923, 925, 927, 929, 935, 936, 937, 938, 941, 942, 943, 944, 945, 949, 951, 952, 956, 958, 960], "underscore_cas": 14, "group": [14, 30, 53, 94, 97, 137, 140, 151, 157, 164, 167, 169, 170, 172, 178, 182, 187, 188, 194, 199, 205, 230, 241, 247, 253, 256, 257, 260, 261, 265, 266, 278, 285, 287, 295, 303, 304, 311, 321, 322, 325, 333, 334, 335, 336, 338, 343, 366, 367, 384, 394, 502, 511, 512, 514, 552, 553, 569, 638, 653, 738, 754, 771, 777, 780, 850, 876, 877, 882, 899, 902, 959, 966], "themat": 14, "analysi": [14, 21, 22, 26, 28, 32, 34, 39, 41, 43, 46, 68, 69, 70, 97, 101, 102, 110, 115, 124, 125, 129, 137, 167, 169, 171, 172, 180, 181, 182, 187, 188, 194, 195, 198, 199, 200, 201, 205, 210, 211, 216, 218, 219, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 244, 245, 247, 253, 256, 257, 258, 260, 261, 269, 273, 274, 278, 282, 283, 284, 292, 300, 301, 302, 312, 314, 316, 318, 319, 321, 322, 323, 333, 334, 335, 336, 338, 340, 341, 343, 344, 345, 347, 348, 349, 366, 367, 382, 384, 398, 424, 425, 431, 434, 445, 476, 478, 485, 493, 499, 509, 526, 542, 547, 552, 553, 563, 574, 598, 604, 605, 619, 629, 635, 638, 639, 646, 653, 672, 674, 703, 738, 742, 749, 770, 771, 774, 776, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 810, 812, 814, 822, 823, 824, 825, 826, 827, 828, 844, 870, 879, 908, 931, 952, 953, 955, 959, 962, 966], "stage": [14, 165, 166, 171, 182, 183, 192, 199, 219, 228, 230, 233, 234, 239, 246, 278, 288, 299, 301, 311, 318, 319, 321, 327, 328, 333, 334, 335, 336, 345, 431, 477, 514, 552, 553, 568, 597, 653, 694, 699, 793, 834, 879, 959, 966], "ar": [14, 26, 29, 30, 31, 33, 37, 38, 40, 41, 42, 44, 45, 47, 50, 52, 53, 57, 58, 59, 60, 64, 67, 69, 71, 72, 73, 76, 85, 94, 97, 101, 102, 103, 104, 108, 109, 110, 111, 114, 115, 122, 127, 129, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 159, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 223, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 278, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 353, 354, 357, 358, 360, 366, 367, 372, 373, 375, 376, 377, 378, 380, 382, 383, 384, 386, 387, 390, 392, 393, 394, 395, 398, 399, 400, 402, 404, 405, 408, 412, 413, 414, 418, 424, 425, 429, 430, 431, 432, 434, 436, 441, 442, 443, 445, 458, 459, 466, 477, 485, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 506, 509, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 529, 530, 532, 533, 535, 537, 538, 542, 543, 544, 547, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 572, 574, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 590, 593, 596, 597, 599, 601, 603, 604, 613, 614, 615, 616, 617, 620, 621, 622, 627, 630, 631, 633, 634, 635, 637, 638, 639, 640, 641, 643, 645, 646, 648, 653, 654, 655, 656, 658, 659, 664, 665, 666, 668, 671, 675, 676, 677, 680, 681, 682, 684, 685, 687, 689, 691, 693, 694, 696, 699, 700, 701, 702, 703, 706, 708, 711, 714, 716, 723, 725, 726, 727, 728, 729, 730, 733, 735, 738, 739, 741, 742, 745, 746, 749, 751, 752, 754, 755, 757, 760, 761, 763, 764, 765, 770, 771, 774, 775, 776, 777, 778, 779, 780, 781, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 813, 814, 815, 820, 823, 824, 825, 826, 827, 829, 831, 834, 839, 844, 845, 846, 850, 855, 861, 862, 863, 864, 867, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 916, 925, 926, 929, 936, 938, 939, 940, 941, 947, 948, 949, 951, 953, 955, 956, 958, 959, 960, 962, 963, 964, 966], "below": [14, 30, 36, 45, 69, 73, 101, 103, 140, 142, 167, 178, 182, 187, 188, 193, 195, 197, 199, 218, 220, 223, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 246, 256, 261, 264, 266, 269, 271, 274, 275, 278, 303, 311, 312, 315, 318, 321, 322, 328, 330, 331, 332, 333, 334, 335, 336, 340, 341, 344, 345, 346, 347, 348, 349, 376, 382, 431, 487, 496, 504, 512, 521, 523, 544, 552, 553, 570, 605, 638, 640, 646, 648, 659, 741, 775, 776, 777, 779, 780, 791, 844, 865, 877, 882, 886, 889, 891, 904, 909, 910, 946, 949, 958, 960, 963], "found": [14, 24, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 42, 44, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 102, 106, 107, 108, 109, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 148, 149, 150, 153, 156, 159, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 185, 186, 188, 189, 193, 195, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 224, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 245, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 274, 275, 285, 289, 291, 294, 295, 299, 310, 311, 314, 319, 321, 322, 325, 326, 328, 330, 333, 334, 335, 336, 338, 357, 372, 388, 389, 399, 419, 420, 436, 449, 450, 451, 452, 454, 455, 456, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 504, 512, 526, 527, 533, 534, 535, 544, 552, 553, 560, 581, 604, 638, 641, 650, 655, 656, 658, 666, 667, 669, 670, 685, 696, 719, 725, 727, 732, 733, 738, 776, 831, 844, 856, 858, 862, 876, 893, 899, 939, 947], "namespac": [14, 288, 295, 299, 301, 311, 841], "provid": [14, 30, 31, 44, 45, 53, 69, 70, 92, 107, 118, 121, 122, 123, 131, 135, 164, 167, 169, 173, 176, 177, 178, 182, 183, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 202, 211, 212, 216, 217, 218, 220, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 244, 245, 246, 247, 251, 253, 257, 258, 261, 276, 278, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 354, 357, 366, 367, 372, 373, 380, 383, 391, 399, 424, 426, 427, 428, 429, 430, 431, 436, 441, 444, 458, 459, 462, 485, 487, 492, 501, 506, 509, 512, 523, 524, 526, 528, 538, 544, 551, 552, 553, 573, 574, 586, 587, 590, 599, 601, 604, 621, 622, 625, 637, 638, 640, 641, 648, 654, 655, 656, 658, 664, 665, 668, 676, 682, 684, 691, 701, 705, 716, 727, 738, 739, 754, 757, 774, 775, 777, 779, 780, 783, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 812, 822, 823, 824, 825, 826, 827, 828, 831, 832, 834, 841, 844, 846, 855, 862, 863, 865, 870, 872, 876, 877, 878, 880, 881, 882, 883, 885, 888, 889, 893, 895, 898, 899, 900, 901, 904, 906, 908, 909, 910, 926, 946, 951, 953, 955, 956, 957, 958, 959, 962], "multipl": [14, 21, 30, 42, 66, 70, 71, 77, 86, 121, 124, 125, 129, 131, 135, 140, 148, 167, 171, 176, 177, 186, 187, 193, 199, 202, 218, 223, 228, 230, 231, 233, 234, 236, 244, 245, 246, 257, 261, 264, 265, 266, 271, 275, 278, 280, 283, 284, 285, 286, 288, 289, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 304, 305, 307, 309, 310, 311, 314, 319, 321, 322, 327, 332, 333, 334, 335, 336, 340, 341, 343, 344, 346, 347, 348, 349, 369, 371, 387, 425, 431, 458, 487, 496, 498, 508, 510, 512, 521, 522, 523, 524, 526, 529, 535, 549, 550, 552, 553, 566, 577, 599, 614, 615, 620, 625, 638, 645, 656, 667, 676, 680, 698, 706, 730, 733, 738, 767, 773, 777, 778, 789, 790, 791, 792, 795, 796, 797, 798, 808, 811, 819, 824, 827, 844, 860, 870, 877, 880, 883, 886, 889, 891, 893, 899, 904, 905, 907, 909, 963], "command": [14, 30, 152, 178, 182, 185, 187, 198, 212, 217, 280, 282, 286, 291, 295, 301, 302, 303, 304, 309, 318, 320, 333, 334, 338, 431, 544, 552, 553, 594, 638, 729, 876, 893, 899, 951, 952, 955, 956, 958, 959, 960, 962], "line": [14, 26, 97, 108, 109, 129, 137, 148, 149, 152, 163, 164, 167, 168, 170, 171, 178, 179, 182, 183, 185, 187, 189, 196, 198, 199, 204, 210, 218, 219, 220, 230, 232, 235, 236, 237, 238, 239, 244, 247, 251, 258, 259, 270, 271, 274, 275, 278, 281, 286, 288, 291, 295, 301, 302, 303, 306, 308, 309, 310, 314, 318, 319, 320, 322, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 405, 412, 418, 485, 492, 544, 552, 553, 587, 594, 637, 638, 653, 683, 691, 703, 710, 719, 722, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 846, 853, 859, 862, 863, 870, 871, 876, 877, 878, 880, 882, 884, 885, 886, 888, 889, 892, 893, 894, 897, 898, 899, 900, 901, 903, 904, 905, 906, 908, 909, 918, 939, 944, 946, 951, 952, 955, 959, 962], "script": [14, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 280, 284, 285, 287, 295, 297, 311, 319, 322, 343, 552, 553, 789, 899, 946, 947, 953, 955, 958, 959], "call": [14, 30, 44, 57, 69, 70, 114, 115, 122, 145, 156, 167, 169, 171, 172, 173, 176, 177, 178, 182, 183, 185, 187, 188, 193, 195, 197, 198, 199, 202, 205, 209, 218, 224, 227, 228, 230, 231, 233, 234, 236, 238, 240, 244, 245, 246, 247, 256, 258, 260, 261, 266, 270, 271, 275, 282, 283, 284, 287, 291, 293, 294, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 320, 321, 322, 325, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 347, 348, 349, 350, 351, 378, 382, 425, 426, 428, 430, 431, 436, 488, 491, 495, 498, 501, 502, 506, 518, 520, 528, 541, 543, 552, 553, 561, 568, 583, 596, 599, 600, 605, 606, 607, 608, 609, 611, 612, 621, 622, 638, 643, 648, 649, 650, 651, 655, 657, 665, 676, 691, 727, 737, 738, 740, 741, 742, 754, 759, 763, 776, 777, 778, 779, 780, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 841, 842, 844, 846, 863, 870, 876, 877, 878, 881, 884, 885, 900, 908, 926, 927, 946, 949, 951, 952, 956, 960], "directli": [14, 45, 60, 69, 122, 123, 165, 170, 171, 176, 192, 197, 198, 199, 216, 218, 224, 228, 230, 231, 232, 233, 234, 235, 246, 264, 270, 271, 285, 287, 288, 295, 304, 307, 320, 322, 325, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 342, 344, 345, 348, 349, 382, 383, 388, 392, 430, 443, 485, 492, 521, 549, 552, 553, 554, 556, 561, 574, 580, 637, 638, 653, 655, 706, 733, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 847, 863, 865, 876, 878, 885, 889, 898, 901, 904, 906, 908, 910], "from": [14, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 170, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 243, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 318, 319, 320, 321, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 372, 373, 377, 379, 382, 383, 385, 388, 391, 394, 395, 396, 398, 400, 401, 402, 403, 404, 407, 408, 409, 413, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 441, 442, 443, 444, 445, 452, 458, 466, 467, 477, 478, 485, 489, 491, 492, 493, 494, 500, 503, 505, 507, 508, 509, 511, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 529, 530, 533, 535, 537, 538, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 556, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 590, 595, 596, 597, 598, 599, 600, 601, 604, 605, 606, 611, 612, 613, 614, 615, 616, 618, 619, 620, 624, 625, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 645, 647, 648, 649, 652, 653, 654, 655, 656, 658, 659, 662, 663, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 685, 686, 687, 688, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 728, 730, 733, 738, 739, 740, 741, 742, 743, 749, 752, 753, 754, 755, 756, 758, 759, 761, 762, 763, 764, 765, 766, 768, 769, 771, 775, 776, 777, 778, 779, 780, 781, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 836, 839, 840, 843, 844, 853, 859, 862, 863, 870, 874, 875, 876, 878, 879, 880, 882, 883, 884, 885, 886, 887, 889, 890, 891, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 906, 908, 914, 916, 917, 928, 929, 937, 938, 941, 944, 946, 948, 951, 955, 956, 958, 959, 960, 962, 966], "termin": [14, 282, 292, 300, 311, 325, 946, 951, 952, 955, 956, 958, 961], "softwar": [14, 97, 185, 192, 211, 217, 218, 236, 278, 283, 292, 293, 295, 303, 311, 312, 318, 319, 321, 326, 338, 390, 518, 552, 553, 562, 583, 676, 719, 912, 944, 946, 947, 948, 951, 953, 958, 960], "meg": [14, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 153, 157, 158, 159, 161, 162, 163, 167, 168, 169, 172, 173, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 220, 221, 222, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 251, 253, 258, 259, 260, 261, 264, 265, 266, 269, 270, 274, 275, 278, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 316, 318, 321, 325, 328, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 346, 347, 348, 349, 353, 354, 366, 367, 369, 371, 380, 381, 385, 388, 389, 390, 395, 397, 412, 424, 425, 426, 427, 428, 429, 430, 435, 441, 442, 443, 445, 465, 476, 485, 487, 492, 493, 501, 506, 526, 528, 529, 536, 542, 547, 549, 550, 552, 553, 555, 556, 560, 564, 566, 572, 574, 575, 578, 586, 588, 596, 598, 600, 604, 605, 606, 616, 617, 619, 620, 632, 635, 636, 637, 638, 640, 643, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 668, 672, 676, 677, 682, 684, 691, 697, 702, 706, 708, 723, 729, 741, 742, 746, 749, 751, 754, 757, 775, 776, 777, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 827, 830, 831, 844, 846, 859, 862, 863, 869, 870, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 888, 889, 890, 897, 898, 899, 900, 901, 906, 908, 913, 946, 949, 950, 959, 962, 966], "most": [14, 45, 54, 71, 73, 97, 100, 109, 110, 132, 136, 137, 142, 148, 162, 167, 171, 176, 177, 178, 179, 182, 183, 192, 194, 196, 198, 199, 208, 216, 220, 227, 230, 231, 232, 234, 235, 237, 238, 239, 240, 244, 256, 260, 269, 274, 295, 304, 305, 311, 312, 314, 320, 321, 322, 323, 325, 333, 334, 335, 336, 338, 339, 344, 347, 382, 400, 426, 427, 428, 449, 450, 451, 454, 455, 456, 458, 462, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 514, 520, 525, 528, 547, 590, 596, 625, 638, 648, 674, 676, 693, 741, 742, 743, 752, 753, 754, 755, 776, 777, 778, 779, 780, 834, 839, 844, 864, 885, 946, 949, 952, 956, 958], "raw": [14, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 53, 54, 58, 59, 60, 62, 67, 68, 71, 72, 75, 82, 88, 90, 92, 94, 95, 96, 98, 99, 100, 101, 102, 104, 106, 107, 109, 110, 111, 115, 117, 119, 120, 123, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 149, 150, 152, 156, 159, 160, 162, 163, 168, 169, 171, 172, 173, 176, 178, 183, 185, 186, 189, 192, 193, 194, 196, 197, 198, 200, 201, 207, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 248, 249, 252, 253, 258, 259, 260, 261, 264, 266, 269, 270, 271, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 319, 320, 321, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 365, 366, 367, 382, 384, 387, 411, 412, 414, 416, 417, 418, 419, 424, 425, 427, 428, 429, 430, 433, 434, 443, 453, 465, 490, 493, 510, 514, 518, 520, 523, 526, 527, 544, 551, 553, 554, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 589, 593, 596, 597, 598, 600, 602, 604, 605, 606, 607, 608, 609, 611, 612, 616, 619, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 655, 656, 657, 659, 661, 663, 664, 665, 666, 667, 668, 669, 670, 674, 675, 676, 677, 678, 679, 680, 683, 684, 690, 691, 697, 701, 703, 705, 708, 710, 711, 730, 733, 739, 740, 741, 742, 743, 754, 755, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 809, 814, 842, 844, 876, 879, 880, 889, 890, 891, 893, 899, 900, 916, 949, 951, 965, 966], "evok": [14, 26, 27, 29, 30, 31, 33, 34, 41, 42, 43, 44, 46, 53, 54, 57, 61, 62, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 87, 88, 95, 98, 100, 105, 106, 107, 111, 112, 114, 115, 117, 119, 121, 123, 124, 125, 127, 128, 129, 135, 141, 144, 145, 151, 153, 157, 162, 163, 168, 170, 171, 181, 189, 194, 196, 197, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 224, 227, 228, 229, 230, 231, 233, 234, 235, 238, 241, 252, 253, 257, 258, 259, 260, 261, 264, 266, 269, 271, 275, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 314, 319, 320, 321, 322, 325, 328, 330, 332, 333, 334, 336, 337, 338, 340, 341, 343, 344, 346, 347, 348, 349, 350, 353, 354, 358, 359, 362, 363, 366, 367, 369, 371, 384, 387, 411, 424, 425, 427, 429, 445, 465, 490, 499, 506, 510, 511, 516, 517, 519, 526, 528, 542, 544, 547, 549, 550, 552, 553, 558, 566, 596, 597, 600, 604, 605, 606, 607, 608, 609, 613, 616, 619, 634, 635, 636, 637, 638, 639, 646, 647, 650, 651, 654, 657, 659, 663, 668, 675, 676, 691, 697, 699, 703, 704, 705, 706, 707, 708, 710, 711, 714, 730, 733, 737, 738, 743, 753, 755, 775, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 805, 809, 814, 824, 826, 827, 828, 844, 846, 863, 870, 873, 874, 876, 877, 880, 881, 882, 883, 884, 885, 886, 890, 893, 897, 899, 900, 903, 905, 908, 913, 937, 946, 949, 965, 966], "info": [14, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 107, 108, 109, 110, 111, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 156, 160, 162, 163, 164, 167, 169, 171, 173, 176, 177, 178, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 247, 252, 253, 257, 258, 259, 260, 261, 264, 266, 269, 270, 271, 274, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 297, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 314, 318, 319, 320, 321, 322, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 353, 354, 366, 367, 368, 375, 376, 380, 381, 383, 387, 388, 389, 390, 394, 396, 397, 399, 410, 411, 413, 415, 420, 425, 429, 430, 436, 441, 442, 443, 445, 485, 487, 492, 493, 494, 496, 501, 504, 506, 510, 515, 516, 517, 518, 521, 523, 524, 528, 529, 536, 537, 547, 549, 550, 551, 552, 553, 554, 558, 560, 573, 580, 589, 593, 596, 599, 600, 601, 604, 606, 616, 629, 632, 634, 635, 636, 637, 638, 640, 642, 649, 652, 654, 655, 656, 658, 662, 664, 665, 668, 672, 676, 680, 681, 682, 684, 690, 691, 694, 701, 705, 723, 724, 729, 730, 733, 735, 740, 741, 742, 743, 753, 754, 757, 775, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 827, 833, 839, 842, 844, 846, 859, 862, 863, 866, 867, 870, 871, 872, 876, 877, 880, 881, 882, 883, 886, 888, 893, 895, 898, 899, 900, 902, 908, 916, 937, 946, 955, 966], "read": [14, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 173, 176, 178, 179, 183, 184, 185, 186, 187, 188, 189, 193, 194, 196, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 247, 251, 252, 253, 257, 258, 259, 260, 265, 270, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 318, 320, 321, 322, 323, 325, 326, 327, 328, 330, 333, 334, 335, 336, 338, 344, 346, 366, 367, 370, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 422, 425, 429, 430, 441, 442, 443, 445, 485, 492, 493, 517, 526, 527, 528, 529, 533, 535, 538, 544, 547, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 565, 566, 567, 568, 569, 570, 573, 574, 576, 578, 579, 580, 581, 586, 587, 604, 616, 618, 619, 627, 640, 668, 686, 687, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 721, 722, 723, 725, 726, 728, 735, 742, 792, 816, 836, 853, 862, 886, 914, 937, 938, 949, 955, 960, 966], "anonymize_info": [14, 283, 284, 291, 294, 325, 333, 334, 335, 336, 338, 552, 553], "read_raw": [14, 94, 97, 101, 162, 171, 199, 253, 292, 294, 307, 308, 310, 325], "read_raw_artemis123": [14, 152, 216, 291, 322, 559], "read_raw_bti": [14, 152, 212, 216, 282, 289, 294, 303, 304, 305, 322], "read_raw_cnt": [14, 217, 282, 283, 284, 288, 289, 291, 305, 307, 308, 309, 310, 322, 559], "read_raw_ctf": [14, 26, 33, 38, 47, 108, 109, 147, 152, 211, 216, 219, 281, 282, 284, 285, 286, 287, 289, 291, 292, 304, 322, 559], "read_raw_curri": [14, 289, 293, 295, 305, 306, 559, 965], "read_raw_edf": [14, 34, 35, 110, 140, 164, 186, 217, 233, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 302, 303, 304, 305, 307, 308, 310, 319, 322, 559, 561, 576, 949], "read_raw_eyelink": [14, 150, 220, 241, 307, 308, 309, 310, 322], "read_raw_bdf": [14, 217, 288, 293, 295, 303, 304, 305, 322, 559, 568, 576], "read_raw_gdf": [14, 217, 288, 289, 292, 293, 295, 303, 304, 309, 322, 559, 561, 568], "read_raw_kit": [14, 152, 198, 216, 284, 289, 292, 293, 294, 295, 310, 322, 559], "read_raw_nedf": [14, 294, 559, 965], "read_raw_nicolet": [14, 217, 281, 289, 294, 322, 559], "read_raw_hitachi": [14, 218, 295, 303, 305, 965], "read_raw_nirx": [14, 103, 218, 239, 291, 292, 295, 303, 304, 322, 559], "read_raw_snirf": [14, 218, 292, 295, 303, 304, 307, 308, 309, 310], "read_raw_eeglab": [14, 156, 195, 217, 281, 283, 287, 288, 289, 293, 303, 304, 305, 306, 309, 310, 322, 559, 949, 956], "read_raw_brainvis": [14, 197, 217, 271, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 295, 302, 304, 322, 559], "read_raw_egi": [14, 217, 241, 284, 286, 288, 289, 294, 295, 302, 303, 307, 308, 309, 322, 559], "read_raw_fif": [14, 29, 31, 36, 37, 39, 40, 41, 42, 44, 54, 55, 58, 59, 60, 68, 71, 72, 75, 88, 95, 96, 98, 99, 100, 102, 104, 107, 110, 111, 115, 120, 121, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 141, 143, 145, 146, 149, 152, 159, 160, 167, 168, 169, 172, 173, 176, 178, 179, 183, 189, 193, 194, 195, 196, 197, 204, 207, 209, 210, 216, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 244, 245, 246, 247, 252, 258, 259, 260, 261, 264, 266, 269, 270, 274, 283, 288, 291, 292, 293, 294, 302, 322, 327, 559, 949], "read_raw_eximia": [14, 217, 322, 559], "read_raw_fieldtrip": [14, 216, 287, 295, 322, 559, 965], "read_raw_boxi": [14, 218, 293, 322, 559, 965], "read_raw_persyst": [14, 217, 292, 294, 295, 322], "read_raw_nihon": [14, 217, 293, 295, 303], "read_raw_fil": [14, 216, 240, 307, 308, 322, 559], "read_raw_nsx": [14, 965], "read_raw_neuralynx": [14, 309, 310, 965], "baseraw": [14, 284, 559, 638, 646], "kit": [14, 15, 80, 81, 192, 197, 198, 211, 214, 215, 256, 278, 282, 283, 289, 291, 293, 294, 295, 299, 302, 309, 322, 330, 331, 333, 335, 336, 338, 372, 408, 417, 425, 505, 506, 514, 528, 578, 600, 601, 620, 629, 635, 649, 665, 676, 691, 702, 799, 862, 874, 914, 965, 966], "read_mrk": [14, 309, 965], "o": [14, 27, 45, 70, 88, 98, 103, 110, 154, 167, 186, 188, 196, 198, 199, 212, 223, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 240, 244, 245, 246, 247, 278, 284, 287, 291, 292, 294, 298, 300, 302, 303, 304, 307, 308, 311, 319, 325, 330, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 425, 444, 461, 485, 492, 533, 552, 553, 637, 638, 647, 652, 732, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 901, 906, 908, 946, 956, 962], "channel_typ": [14, 196, 233, 333, 334, 335, 336, 338, 552, 553, 555, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "channel_indices_by_typ": [14, 196], "get_head_surf": [14, 303, 331, 596, 874], "get_meg_helmet_surf": 14, "get_volume_labels_from_aseg": [14, 208, 292], "get_volume_labels_from_src": [14, 284], "parse_config": [14, 965], "read_labels_from_annot": [14, 64, 67, 73, 95, 118, 122, 123, 155, 252, 284, 301, 624, 710, 941], "read_bem_solut": [14, 31, 71, 137, 186, 595, 933], "read_bem_surfac": [14, 188, 285, 594, 595, 695], "read_cov": [14, 37, 57, 61, 66, 67, 71, 74, 75, 76, 77, 80, 81, 84, 85, 86, 91, 95, 120, 122, 189, 205, 206, 330, 935, 946], "read_dipol": [14, 71, 144, 282, 285, 291, 294, 331, 332, 528], "read_epoch": [14, 129, 167, 170, 257, 280, 281, 287, 288, 292, 310, 322, 946], "read_epochs_kit": [14, 167, 216, 302, 322, 965], "read_epochs_eeglab": [14, 167, 217, 281, 283, 284, 287, 289, 291, 303, 304, 306, 309, 322, 949], "read_epochs_fieldtrip": [14, 216, 287, 292, 295, 322, 965], "read_ev": [14, 37, 39, 40, 41, 42, 44, 54, 96, 115, 122, 124, 125, 128, 131, 132, 145, 149, 159, 167, 172, 178, 229, 245, 259, 260, 261, 264, 266, 283, 291, 302, 321, 526, 700, 936], "read_evok": [14, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 106, 113, 114, 144, 147, 148, 153, 176, 177, 199, 203, 205, 206, 208, 274, 275, 283, 292, 301, 304, 310, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 552, 553, 937, 946], "read_evoked_besa": [14, 304, 965], "read_evoked_fieldtrip": [14, 216, 287, 291, 322, 965], "read_evokeds_mff": [14, 293, 965], "read_freesurfer_lut": [14, 292, 538, 965], "read_forward_solut": [14, 31, 48, 57, 58, 59, 60, 61, 66, 68, 69, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 118, 120, 121, 122, 123, 158, 185, 204, 205, 206, 207, 219, 224, 252, 253, 285, 337, 938], "read_label": [14, 54, 55, 63, 65, 120, 132, 135, 136, 344, 347, 739], "read_morph_map": [14, 289, 965], "read_proj": [14, 120, 139, 158, 169, 219, 234, 333, 334, 335, 336, 343, 552, 553, 942], "read_reject_paramet": [14, 965], "read_source_estim": [14, 63, 69, 79, 144, 161, 202, 208, 265, 274, 275, 289], "read_source_spac": [14, 52, 66, 69, 70, 162, 163, 183, 186, 187, 207, 264, 265, 266, 346, 943], "read_surfac": [14, 183, 187, 188, 292, 318, 339, 722, 738, 944], "read_tran": [14, 144, 146, 183, 187, 205, 219, 303, 346, 536, 754, 945], "read_tri": [14, 719, 944, 965], "write_labels_to_annot": [14, 292, 301, 710, 711, 940], "write_bem_solut": [14, 292, 318, 595, 695, 696], "write_bem_surfac": [14, 292, 318, 594, 595, 695, 696], "write_head_bem": [14, 188, 294], "write_cov": [14, 189, 303, 697], "write_ev": [14, 245, 303, 526, 703], "write_evok": [14, 88, 176, 291, 292, 295, 301, 303, 307, 335, 336, 516, 706, 946], "write_forward_solut": [14, 185, 285, 292, 708], "write_label": 14, "write_proj": [14, 234, 292, 303, 714], "write_source_spac": [14, 67, 284, 318, 718], "write_surfac": [14, 188, 292, 719, 722], "write_tran": [14, 184, 721], "what": [14, 57, 85, 98, 110, 118, 122, 123, 145, 156, 163, 167, 168, 169, 170, 171, 183, 187, 196, 198, 202, 207, 208, 209, 218, 228, 230, 239, 244, 245, 246, 253, 256, 258, 261, 269, 271, 274, 289, 305, 306, 309, 311, 321, 328, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 425, 429, 436, 441, 442, 458, 477, 504, 509, 514, 518, 535, 551, 552, 553, 569, 624, 681, 694, 696, 700, 725, 727, 739, 789, 790, 791, 795, 796, 797, 798, 824, 827, 869, 904, 909, 939, 955, 958, 960, 965], "read_info": [14, 52, 91, 118, 120, 122, 123, 184, 185, 187, 196, 309], "write_info": [14, 309], "show_fiff": [14, 283, 299, 308, 853, 965], "get_channel_type_const": [14, 291], "baseepoch": [14, 167, 284, 289, 311, 638], "creat": [14, 26, 27, 29, 30, 31, 33, 34, 35, 37, 41, 42, 44, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 90, 92, 94, 95, 96, 97, 98, 100, 101, 103, 107, 110, 113, 120, 121, 123, 131, 132, 135, 136, 137, 138, 140, 141, 142, 145, 148, 149, 150, 152, 154, 156, 159, 161, 162, 163, 168, 169, 172, 173, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 224, 227, 228, 229, 230, 231, 233, 234, 240, 241, 244, 247, 253, 254, 255, 257, 259, 261, 264, 266, 269, 270, 274, 275, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 305, 308, 309, 314, 319, 321, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 357, 366, 367, 372, 377, 378, 379, 382, 396, 425, 426, 427, 431, 436, 444, 445, 485, 492, 498, 502, 507, 509, 513, 514, 520, 521, 526, 552, 553, 565, 570, 572, 577, 593, 594, 595, 598, 600, 601, 604, 616, 627, 633, 637, 638, 640, 641, 643, 647, 650, 651, 655, 656, 658, 666, 672, 700, 702, 703, 726, 727, 728, 730, 733, 738, 739, 743, 766, 769, 775, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 809, 812, 815, 821, 822, 823, 824, 825, 826, 827, 831, 844, 846, 848, 850, 853, 855, 859, 862, 863, 869, 870, 872, 874, 877, 878, 879, 881, 882, 883, 884, 885, 889, 891, 894, 896, 897, 898, 899, 900, 901, 902, 904, 906, 908, 909, 930, 931, 936, 941, 947, 951, 956, 960, 966], "object": [14, 22, 30, 35, 36, 44, 45, 53, 56, 57, 58, 59, 60, 62, 73, 80, 81, 82, 87, 90, 106, 122, 127, 129, 131, 132, 137, 140, 141, 142, 159, 168, 171, 173, 178, 182, 184, 187, 188, 189, 192, 193, 194, 197, 198, 199, 202, 208, 209, 216, 217, 218, 219, 220, 224, 227, 228, 229, 231, 233, 234, 235, 236, 238, 239, 241, 245, 248, 249, 253, 257, 264, 270, 271, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 314, 318, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 357, 359, 360, 361, 364, 366, 367, 368, 372, 373, 375, 376, 380, 381, 382, 384, 387, 388, 389, 390, 391, 394, 396, 397, 410, 413, 415, 420, 424, 425, 428, 429, 430, 431, 432, 436, 441, 442, 443, 445, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 510, 514, 519, 526, 527, 529, 531, 536, 547, 549, 550, 551, 552, 553, 554, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 585, 586, 589, 590, 593, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 612, 614, 615, 616, 620, 627, 634, 635, 637, 638, 639, 640, 641, 649, 652, 653, 654, 655, 658, 669, 671, 672, 673, 675, 681, 682, 689, 694, 698, 699, 701, 705, 706, 707, 710, 716, 723, 724, 738, 739, 753, 754, 757, 766, 774, 775, 781, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 816, 817, 818, 823, 824, 825, 826, 827, 828, 829, 831, 833, 843, 844, 845, 846, 851, 854, 855, 857, 859, 860, 862, 863, 866, 867, 870, 871, 872, 873, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 898, 899, 900, 901, 902, 903, 906, 908, 913, 914, 937, 940, 948, 949, 966], "arrai": [14, 26, 29, 37, 57, 90, 97, 98, 102, 118, 124, 125, 143, 163, 164, 167, 168, 169, 171, 173, 176, 178, 183, 185, 187, 192, 193, 196, 198, 202, 208, 210, 211, 212, 216, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 238, 244, 246, 251, 252, 254, 256, 260, 261, 264, 265, 266, 269, 270, 271, 278, 282, 283, 284, 286, 287, 288, 289, 291, 294, 301, 307, 308, 309, 310, 312, 318, 319, 320, 321, 326, 327, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 355, 356, 367, 368, 374, 376, 382, 383, 384, 391, 395, 400, 409, 419, 420, 422, 423, 433, 436, 440, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 506, 509, 511, 513, 519, 520, 521, 523, 524, 525, 527, 528, 540, 541, 543, 545, 546, 547, 549, 550, 551, 552, 553, 569, 578, 591, 594, 603, 614, 615, 617, 620, 621, 622, 629, 632, 633, 635, 637, 638, 639, 641, 642, 643, 645, 646, 649, 652, 653, 654, 655, 661, 665, 666, 667, 668, 669, 670, 676, 680, 681, 682, 684, 685, 694, 700, 702, 712, 719, 722, 725, 728, 731, 733, 736, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 762, 765, 767, 769, 770, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 808, 811, 812, 814, 815, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 831, 835, 837, 843, 844, 845, 848, 849, 850, 861, 862, 863, 865, 866, 867, 870, 876, 877, 878, 880, 882, 883, 885, 886, 889, 892, 893, 896, 898, 899, 900, 901, 902, 904, 906, 907, 908, 909, 910, 916, 939, 944], "evokedarrai": [14, 29, 40, 41, 42, 44, 47, 111, 128, 137, 210, 213, 216, 224, 251, 261, 284, 291, 301, 321, 334, 335, 553, 611, 612, 705, 707, 800], "epochsarrai": [14, 30, 216, 251, 281, 282, 301, 328, 333, 336, 432, 553, 701, 794], "rawarrai": [14, 45, 90, 92, 94, 97, 103, 110, 142, 186, 216, 218, 229, 233, 236, 251, 284, 288, 295, 304, 321, 334, 336, 573, 800], "create_info": [14, 35, 40, 41, 45, 90, 92, 97, 142, 154, 186, 216, 218, 251, 287, 291, 302, 334, 336, 338, 485, 492, 553, 707, 794, 800], "export": [14, 50, 56, 67, 140, 143, 167, 174, 175, 176, 182, 192, 195, 199, 217, 218, 248, 288, 294, 295, 298, 303, 304, 306, 307, 309, 310, 327, 333, 334, 335, 336, 340, 341, 344, 346, 347, 348, 349, 407, 409, 552, 553, 568, 578, 703, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 949, 951, 958, 961, 966], "export_epoch": [14, 295, 303], "export_evok": [14, 295, 303], "export_evokeds_mff": [14, 295, 303, 335, 336, 516], "export_raw": [14, 295, 303, 304, 306, 307, 310, 568], "dataset": [14, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 272, 273, 274, 275, 278, 280, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 301, 302, 303, 307, 308, 309, 310, 311, 314, 320, 322, 323, 325, 327, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 344, 347, 348, 349, 366, 367, 372, 382, 398, 416, 424, 425, 426, 427, 429, 430, 432, 434, 441, 442, 443, 485, 488, 492, 495, 502, 505, 514, 516, 517, 526, 528, 529, 542, 547, 549, 550, 552, 553, 563, 564, 566, 580, 594, 595, 600, 601, 604, 605, 608, 611, 612, 616, 621, 622, 629, 635, 638, 651, 652, 656, 668, 676, 684, 691, 705, 706, 707, 708, 714, 721, 737, 774, 776, 777, 779, 780, 793, 799, 829, 844, 862, 870, 874, 879, 886, 908, 914, 937, 965, 966], "fetch_dataset": [14, 295, 464, 965], "has_dataset": [14, 295, 458, 965], "brainstorm": [14, 22, 28, 32, 53, 108, 109, 111, 137, 147, 192, 198, 214, 215, 221, 222, 278, 280, 286, 287, 322, 327, 330, 331, 333, 335, 336, 338, 344, 372, 424, 425, 426, 427, 430, 432, 434, 505, 526, 528, 552, 566, 594, 595, 600, 601, 604, 605, 616, 635, 651, 668, 676, 708, 714, 721, 737, 844, 862, 874, 886, 914, 965, 966], "bst_auditori": [14, 108, 109, 219, 965], "data_path": [14, 26, 27, 29, 31, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 187, 188, 189, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 252, 253, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 284, 286, 303, 307, 309, 311, 319, 322, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 458, 552, 553, 965], "bst_rest": [14, 319, 965], "bst_raw": [14, 26, 147, 319, 965], "eegbci": [14, 34, 35, 140, 186, 198, 233, 291, 965], "load_data": [14, 26, 29, 30, 34, 35, 38, 47, 60, 68, 97, 98, 102, 103, 104, 108, 109, 110, 111, 127, 137, 140, 141, 143, 150, 163, 173, 178, 186, 193, 195, 199, 209, 213, 219, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 244, 245, 246, 247, 270, 280, 285, 291, 292, 294, 319, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 795, 796, 965], "standard": [14, 30, 34, 54, 60, 67, 70, 72, 97, 102, 110, 122, 137, 149, 162, 168, 176, 177, 178, 182, 186, 187, 196, 197, 198, 209, 219, 223, 224, 228, 230, 233, 236, 244, 251, 257, 266, 270, 278, 281, 283, 284, 285, 286, 288, 292, 294, 295, 302, 303, 304, 308, 314, 318, 319, 320, 321, 322, 325, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 356, 382, 384, 393, 398, 400, 461, 485, 492, 494, 505, 518, 519, 534, 538, 541, 552, 553, 561, 565, 568, 578, 583, 605, 621, 622, 632, 637, 638, 665, 694, 702, 709, 733, 738, 771, 774, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 809, 812, 822, 823, 826, 844, 855, 863, 864, 871, 877, 878, 880, 885, 886, 889, 891, 898, 901, 904, 906, 907, 908, 910, 946, 951, 965], "fetch_aparc_sub_parcel": [14, 155, 965], "fetch_fsaverag": [14, 70, 154, 162, 186, 207, 218, 288, 319], "fetch_hcp_mmp_parcel": [14, 155, 208, 285, 292, 965], "fetch_infant_templ": [14, 184, 186, 294, 319], "fetch_phantom": [14, 210, 295, 505, 965], "fnirs_motor": [14, 103, 198, 239, 295, 319, 965], "hf_sef": [14, 27, 198, 295, 319, 965], "kiloword": [14, 129, 170, 198, 244, 257, 965], "limo": [14, 28, 32, 53, 198, 278, 291, 334, 335, 336, 424, 774, 870, 879, 965, 966], "misc": [14, 90, 92, 107, 108, 109, 143, 162, 164, 176, 196, 198, 209, 213, 216, 217, 219, 220, 241, 244, 251, 283, 288, 291, 292, 294, 295, 298, 305, 319, 321, 333, 334, 335, 336, 338, 343, 381, 397, 417, 445, 518, 552, 553, 561, 563, 565, 568, 570, 576, 581, 584, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 870, 876, 880, 882, 884, 899, 965], "mtrf": [14, 45, 198, 223, 278, 285, 491, 965], "multimod": [14, 88, 164, 198, 278, 295, 949, 965], "opm": [14, 28, 32, 53, 133, 134, 192, 198, 242, 243, 278, 295, 307, 321, 322, 330, 331, 333, 335, 336, 337, 338, 344, 372, 425, 429, 430, 435, 505, 526, 528, 552, 575, 595, 600, 601, 604, 605, 611, 616, 632, 635, 637, 652, 695, 708, 737, 799, 838, 844, 862, 871, 874, 914, 965, 966], "sleep_physionet": [14, 164, 288, 319, 965], "ag": [14, 30, 141, 164, 217, 278, 288, 319, 333, 334, 335, 336, 338, 461, 478, 552, 553, 554, 754], "fetch_data": [14, 164, 288, 319, 965], "temazepam": [14, 288, 319, 477, 965], "sampl": [14, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 92, 95, 96, 98, 99, 100, 101, 104, 106, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 155, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 245, 246, 247, 251, 252, 253, 256, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 274, 275, 278, 282, 284, 285, 286, 287, 288, 289, 291, 295, 301, 302, 304, 307, 308, 310, 311, 318, 321, 322, 323, 325, 326, 327, 328, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 365, 388, 425, 431, 433, 445, 458, 487, 488, 489, 490, 491, 495, 496, 497, 498, 499, 500, 502, 506, 509, 511, 513, 520, 521, 522, 523, 524, 526, 527, 550, 551, 552, 553, 561, 568, 576, 580, 600, 608, 614, 615, 629, 635, 638, 640, 643, 652, 655, 656, 684, 690, 694, 701, 702, 716, 718, 723, 739, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 761, 769, 771, 775, 776, 777, 778, 779, 780, 781, 782, 783, 789, 790, 791, 792, 795, 796, 797, 798, 801, 802, 803, 804, 805, 806, 807, 811, 812, 814, 815, 819, 820, 821, 822, 823, 824, 825, 826, 827, 842, 844, 876, 878, 879, 887, 899, 904, 909, 910, 912, 946, 947, 959, 966], "somato": [14, 26, 58, 59, 60, 72, 88, 141, 198, 270, 295, 319, 965], "spm_face": [14, 33, 152, 198, 244, 319, 965], "ucl_opm_auditori": [14, 240, 319, 965], "visual_92_categori": [14, 36, 198, 284, 319, 965], "phantom_kit": [14, 198, 213, 309, 319, 965], "phantom_4dbti": [14, 198, 212, 286, 295, 319, 965], "phantom_kernel": [14, 29, 198, 319, 965], "refmeg_nois": [14, 102, 198, 295, 319, 965], "ssvep": [14, 94, 192, 197, 198, 272, 273, 295, 333, 338, 382, 398, 563, 635, 793, 908, 965, 966], "erp_cor": [14, 101, 171, 198, 319, 965], "epilepsy_ecog": [14, 163, 198, 295], "eyelink": [14, 150, 241, 308, 311, 314, 322, 572, 662, 965], "visual": [14, 29, 34, 39, 40, 41, 42, 58, 59, 61, 62, 67, 68, 71, 82, 83, 85, 87, 88, 96, 98, 100, 107, 114, 122, 129, 132, 133, 134, 135, 141, 143, 144, 147, 148, 156, 157, 159, 161, 162, 164, 168, 170, 172, 174, 175, 178, 179, 180, 181, 182, 187, 189, 193, 195, 198, 199, 202, 205, 206, 210, 214, 215, 219, 220, 224, 227, 229, 230, 231, 236, 238, 241, 242, 243, 244, 245, 246, 247, 257, 258, 260, 270, 271, 275, 277, 278, 283, 284, 285, 287, 288, 289, 292, 293, 294, 297, 298, 299, 300, 301, 304, 307, 310, 320, 321, 322, 323, 325, 328, 331, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 377, 378, 379, 383, 412, 413, 414, 415, 420, 422, 423, 431, 434, 435, 491, 509, 512, 526, 528, 538, 552, 553, 568, 592, 596, 604, 605, 615, 617, 619, 633, 635, 638, 642, 658, 659, 660, 663, 676, 684, 700, 702, 703, 706, 708, 711, 714, 716, 729, 738, 741, 742, 776, 781, 789, 791, 793, 794, 795, 812, 822, 823, 825, 826, 828, 844, 846, 850, 863, 869, 870, 876, 877, 879, 880, 881, 884, 887, 888, 889, 890, 891, 892, 893, 896, 897, 899, 913, 930, 931, 946, 950, 951, 952, 953, 955, 956, 959, 962, 966], "viz": [14, 23, 27, 29, 30, 31, 45, 50, 53, 57, 61, 64, 66, 68, 72, 73, 77, 78, 83, 85, 86, 97, 101, 107, 108, 115, 120, 121, 129, 137, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 159, 160, 162, 163, 164, 168, 169, 170, 171, 177, 178, 182, 183, 184, 185, 186, 187, 193, 197, 198, 204, 205, 207, 208, 209, 210, 211, 212, 213, 218, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 261, 271, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 320, 322, 331, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 379, 388, 399, 552, 553, 638, 659, 698, 706, 716, 721, 789, 790, 791, 795, 796, 797, 798, 946, 949, 951, 965, 966], "brain": [14, 30, 31, 33, 34, 36, 37, 41, 45, 47, 48, 50, 52, 53, 54, 55, 57, 58, 59, 61, 64, 66, 67, 68, 69, 70, 72, 80, 84, 85, 87, 97, 109, 115, 122, 132, 137, 143, 151, 155, 157, 162, 173, 178, 182, 183, 185, 189, 197, 202, 203, 204, 205, 206, 208, 209, 211, 216, 217, 218, 219, 224, 227, 232, 233, 235, 236, 240, 253, 256, 264, 265, 266, 271, 278, 282, 283, 284, 289, 291, 292, 293, 294, 295, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 318, 319, 321, 322, 324, 325, 331, 333, 334, 335, 336, 338, 340, 341, 344, 345, 346, 347, 348, 349, 359, 366, 367, 373, 401, 431, 444, 452, 485, 491, 493, 519, 524, 537, 550, 552, 553, 563, 574, 592, 596, 601, 604, 605, 619, 625, 635, 636, 639, 643, 654, 672, 673, 675, 698, 706, 716, 721, 726, 738, 754, 778, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 854, 857, 860, 862, 864, 865, 868, 874, 881, 904, 905, 909, 910, 914, 916, 946, 951, 953, 958, 959, 964, 965, 966], "clickableimag": [14, 143, 965], "evokedfield": [14, 310, 335, 336, 881, 965], "figure3d": [14, 311, 320, 331, 335, 336, 340, 341, 343, 344, 346, 347, 348, 349, 846, 854, 862, 874, 881, 904, 905, 909, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 965], "add_background_imag": [14, 965], "centers_to_edg": [14, 292, 965], "compare_fiff": [14, 965], "circular_layout": [14, 73], "iter_topographi": [14, 160, 288, 301], "mne_analyze_colormap": [14, 965], "plot_bem": [14, 185, 187, 283, 286, 291, 292, 301, 322, 379, 862, 946], "plot_brain_colorbar": [14, 274, 289], "plot_bridged_electrod": [14, 97, 304], "plot_chpi_snr": [14, 237, 295], "plot_cov": [14, 29, 68, 204, 286, 289], "plot_channel_labels_circl": [14, 162, 295], "plot_ch_adjac": [14, 261, 304, 388, 399], "plot_csd": [14, 965], "plot_dipole_amplitud": [14, 61, 66, 77, 85, 86], "plot_dipole_loc": [14, 29, 61, 66, 77, 85, 86, 205, 210, 212, 213, 282, 284, 289, 291, 292, 304], "plot_drop_log": [14, 178, 229, 239, 281, 294, 301, 303, 333, 334], "plot_epoch": [14, 280, 282, 284, 288, 291, 293, 295, 300, 311, 915, 965], "plot_epochs_psd_topomap": [14, 292, 307, 965], "plot_ev": [14, 30, 101, 164, 193, 239, 245, 291, 292, 301, 302, 333, 334, 876], "plot_evok": [14, 282, 285, 294, 299, 300, 304, 309, 965], "plot_evoked_imag": [14, 129, 286, 304], "plot_evoked_topo": [14, 159, 177, 239, 280, 282, 283, 284, 285, 287, 291, 294, 304, 306, 309, 310], "plot_evoked_topomap": [14, 283, 284, 285, 291, 292, 293, 301, 304, 305, 309, 965], "plot_evoked_joint": [14, 285, 287, 295, 965], "plot_evoked_field": [14, 275, 288, 291, 309, 911], "plot_evoked_whit": [14, 210, 285, 292, 335, 336, 880], "plot_filt": [14, 224, 230, 231, 284, 292, 293, 305, 306, 485, 492, 894, 965], "plot_head_posit": [14, 107, 108, 237, 238, 284, 286], "plot_ideal_filt": [14, 230, 284, 887], "plot_compare_evok": [14, 27, 30, 129, 168, 169, 170, 171, 177, 178, 193, 239, 261, 274, 283, 285, 286, 288, 289, 292, 293, 294, 295, 304, 305, 309, 310, 333, 334, 877, 949], "plot_ica_sourc": [14, 281, 289, 915, 965], "plot_ica_compon": [14, 291, 304, 306, 309, 638, 965], "plot_ica_properti": [14, 283, 294, 965], "plot_ica_scor": [14, 281, 295, 965], "plot_ica_overlai": [14, 293, 305, 965], "plot_epochs_imag": [14, 115, 145, 280, 282, 283, 285, 289, 291, 293, 306, 638, 889, 891], "plot_layout": [14, 282, 285, 333, 334, 335, 336, 338, 552, 553, 902, 965], "plot_montag": [14, 285, 294, 965], "plot_projs_topomap": [14, 167, 169, 176, 235, 247, 282, 284, 287, 291, 302, 309, 333, 334, 335, 336, 552, 553, 897, 965], "plot_projs_joint": [14, 235, 304], "plot_raw": [14, 198, 282, 283, 285, 293, 295, 300, 309, 333, 334, 335, 336, 338, 552, 553, 902, 915, 965], "plot_raw_psd": [14, 284, 285, 302, 965], "plot_regression_weight": [14, 305, 965], "plot_sensor": [14, 94, 169, 178, 197, 209, 218, 247, 274, 282, 283, 284, 285, 287, 291, 295, 307, 308, 333, 334, 335, 336, 338, 552, 553], "plot_snr_estim": [14, 83, 287, 292], "plot_source_estim": [14, 87, 283, 285, 289, 292, 293, 294, 309, 844, 911], "link_brain": [14, 291, 911, 965], "plot_volume_source_estim": [14, 287, 289, 292, 295, 309, 965], "plot_vector_source_estim": [14, 87, 291, 292, 911], "plot_sparse_source_estim": [14, 57, 61, 66, 72, 85, 120, 292, 295, 303, 911], "plot_tfr_topomap": [14, 291, 305, 307, 309, 965], "plot_topo_image_epoch": [14, 282, 288, 965], "plot_topomap": [14, 26, 41, 42, 44, 45, 47, 68, 97, 98, 107, 114, 128, 137, 168, 169, 171, 177, 178, 193, 197, 203, 204, 219, 227, 235, 239, 247, 261, 269, 270, 271, 275, 280, 282, 285, 286, 288, 291, 292, 294, 295, 300, 301, 304, 305, 307, 309, 330, 333, 334, 335, 336, 342, 552, 553, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 866, 878, 883, 891, 965], "plot_align": [14, 29, 31, 50, 78, 108, 137, 143, 146, 152, 153, 154, 162, 163, 183, 184, 185, 186, 197, 205, 209, 210, 211, 212, 213, 240, 285, 286, 287, 289, 291, 292, 293, 294, 295, 303, 304, 309, 318, 322, 333, 334, 335, 336, 338, 379, 552, 553, 864, 902, 911, 916, 946], "snapshot_brain_montag": [14, 143, 163, 284, 294, 295, 911], "plot_arrowmap": [14, 147, 177, 287, 304, 305], "set_3d_backend": [14, 292, 295, 930, 951, 965], "get_3d_backend": [14, 295], "use_3d_backend": [14, 288, 965], "set_3d_opt": [14, 292, 304, 951, 965], "set_3d_view": [14, 29, 31, 50, 78, 108, 137, 143, 146, 153, 154, 163, 183, 184, 185, 186, 187, 197, 205, 210, 213, 293, 309], "set_3d_titl": [14, 152, 154, 177, 293], "create_3d_figur": [14, 153, 183, 187, 205, 847], "close_3d_figur": [14, 965], "close_all_3d_figur": [14, 965], "get_brain_class": [14, 155, 182], "set_browser_backend": [14, 295, 303, 333, 334, 552, 553, 638, 876, 893, 899, 931, 965], "get_browser_backend": [14, 295], "use_browser_backend": [14, 178, 228, 231, 233, 234, 235, 236, 295, 333, 334, 552, 553, 638, 876, 893, 899], "ui": [14, 275, 303, 309, 335, 336, 844, 846, 885, 924], "event": [14, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 53, 54, 58, 59, 60, 68, 71, 72, 75, 88, 97, 98, 99, 100, 102, 105, 107, 108, 109, 110, 111, 112, 115, 118, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 145, 149, 150, 156, 159, 162, 163, 167, 168, 169, 170, 172, 173, 176, 179, 180, 181, 189, 192, 196, 200, 201, 204, 207, 209, 210, 211, 212, 213, 216, 217, 219, 220, 224, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 244, 247, 248, 249, 251, 252, 253, 257, 258, 259, 260, 261, 264, 266, 269, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 318, 319, 321, 322, 325, 326, 327, 328, 333, 334, 335, 336, 338, 343, 344, 352, 356, 384, 424, 425, 432, 433, 434, 440, 466, 486, 501, 506, 508, 509, 514, 526, 527, 542, 552, 553, 561, 568, 569, 570, 572, 576, 578, 584, 596, 598, 603, 628, 629, 633, 635, 638, 639, 640, 641, 646, 650, 651, 655, 656, 666, 667, 668, 669, 670, 690, 700, 701, 702, 703, 706, 716, 739, 768, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 844, 845, 846, 870, 876, 877, 879, 881, 885, 893, 899, 907, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 936, 946, 949, 965, 966], "preprocess": [14, 26, 29, 30, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 95, 97, 98, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 115, 127, 140, 150, 164, 171, 173, 199, 211, 213, 216, 219, 220, 223, 224, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 241, 243, 247, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 314, 319, 320, 321, 322, 327, 330, 333, 334, 335, 336, 337, 338, 343, 344, 424, 425, 485, 489, 492, 494, 506, 514, 526, 552, 553, 573, 575, 583, 600, 604, 605, 616, 632, 635, 701, 799, 844, 862, 866, 870, 876, 879, 884, 888, 889, 890, 891, 892, 893, 899, 946, 949, 959, 965, 966], "compute_proj_epoch": [14, 219, 234, 235, 288, 309, 427, 428], "compute_proj_evok": [14, 26, 234, 309, 426, 428], "compute_proj_raw": [14, 234, 235, 288, 309, 322, 426, 427], "layout": [14, 36, 38, 39, 41, 45, 53, 65, 67, 73, 84, 97, 98, 99, 100, 118, 128, 135, 142, 143, 148, 151, 157, 159, 160, 169, 171, 173, 177, 178, 186, 187, 199, 203, 208, 210, 217, 223, 230, 231, 235, 238, 239, 240, 253, 256, 258, 259, 261, 270, 282, 284, 285, 288, 291, 293, 295, 298, 300, 302, 304, 309, 321, 322, 333, 334, 335, 336, 338, 342, 389, 391, 393, 396, 397, 398, 408, 445, 552, 553, 560, 564, 566, 577, 578, 601, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 845, 850, 859, 862, 870, 884, 895, 898, 907, 913, 914, 966], "digmontag": [14, 197, 209, 284, 285, 289, 292, 293, 294, 295, 302, 304, 307, 321, 333, 334, 335, 336, 338, 385, 386, 395, 398, 400, 401, 402, 403, 404, 405, 406, 407, 436, 537, 552, 553, 565, 671, 673, 896, 916, 965], "compute_native_head_t": [14, 162, 186, 209, 292, 382], "fix_mag_coil_typ": [14, 292, 552, 965], "read_polhemus_fastscan": [14, 289, 293, 304, 407, 965], "get_builtin_montag": [14, 154, 197, 285, 304, 333, 334, 335, 336, 338, 398, 537, 552, 553], "make_dig_montag": [14, 289, 304, 306, 322, 333, 334, 335, 336, 338, 382, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 552, 553, 577, 965], "read_dig_polhemus_isotrak": [14, 216, 289, 304, 322, 382, 395, 398, 401, 402, 403, 404, 405, 406, 409, 965], "read_dig_captrak": [14, 292, 322, 382, 395, 398, 402, 403, 404, 405, 406, 407, 965], "read_dig_dat": [14, 291, 322, 382, 398, 401, 403, 404, 405, 406, 407, 565, 965], "read_dig_egi": [14, 289, 322, 382, 395, 398, 401, 402, 404, 405, 406, 407, 965], "read_dig_fif": [14, 186, 289, 322, 382, 395, 398, 401, 402, 403, 405, 406, 407], "read_dig_hpt": [14, 291, 304, 322, 382, 398, 401, 402, 403, 404, 406, 965], "read_dig_localit": [14, 295, 382, 395, 401, 402, 403, 404, 405, 407, 965], "make_standard_montag": [14, 34, 45, 97, 110, 154, 186, 197, 218, 271, 289, 291, 303, 333, 334, 335, 336, 338, 393, 400, 552, 553, 565, 577], "read_custom_montag": [14, 209, 218, 289, 291, 292, 294, 304, 333, 334, 335, 336, 338, 398, 552, 553], "compute_dev_head_t": [14, 289, 395, 965], "read_layout": [14, 143, 197, 298, 307, 383], "find_layout": [14, 169, 197, 282, 284, 291, 300, 965], "make_eeg_layout": [14, 197, 391, 397], "make_grid_layout": [14, 391, 396, 965], "find_ch_adjac": [14, 256, 257, 258, 261, 292, 294, 306, 399, 769, 776, 777, 779, 780, 867], "get_builtin_ch_adjac": [14, 256, 388, 399, 867], "read_ch_adjac": [14, 256, 292, 304, 309, 388, 392, 769, 867, 965], "equalize_channel": [14, 291, 411, 965], "unify_bad_channel": [14, 965], "rename_channel": [14, 94, 102, 140, 156, 167, 176, 178, 186, 212, 239, 244, 291, 292, 294, 301, 302, 308, 333, 334, 335, 336, 338, 382, 411, 552, 553, 564, 577], "generate_2d_layout": [14, 396, 397, 845, 965], "make_1020_channel_select": [14, 94, 156, 257, 287, 307], "combine_channel": [14, 178, 292, 304, 308, 411], "xdawn": [14, 43, 46, 53, 105, 112, 278, 280, 283, 285, 291, 330, 333, 335, 336, 338, 430, 445, 485, 489, 492, 500, 552, 635, 703, 877, 966], "eogregress": [14, 100, 232, 240, 305, 307, 686, 901], "annotate_amplitud": [14, 303, 664, 665, 676, 965], "annotate_break": [14, 229, 295], "annotate_mov": [14, 108, 237, 291, 292, 303], "annotate_muscle_zscor": [14, 109, 292, 303, 310], "annotate_nan": [14, 303, 965], "compute_average_dev_head_t": [14, 108, 291, 310, 642], "compute_current_source_dens": [14, 98, 291, 292, 304, 733], "compute_bridged_electrod": [14, 97, 304, 675, 866], "compute_fine_calibr": [14, 293, 965], "compute_maxwell_basi": [14, 294, 307, 965], "compute_proj_ecg": [14, 173, 234, 235, 285, 294, 310, 318, 655, 666], "compute_proj_eog": [14, 219, 234, 235, 285, 288, 294, 310, 318, 656, 667], "compute_proj_hfc": [14, 29, 240, 307], "cortical_signal_suppress": [14, 95, 295], "create_ecg_epoch": [14, 227, 229, 233, 235, 282, 283, 284, 286, 288, 650, 666], "create_eog_epoch": [14, 33, 199, 227, 229, 232, 233, 235, 284, 285, 287, 294, 320, 651, 667], "find_bad_channels_lof": [14, 310, 965], "find_bad_channels_maxwel": [14, 238, 291, 292, 295, 304, 676], "find_ecg_ev": [14, 227, 229, 235, 246, 288, 290, 293, 294, 650, 655], "find_eog_ev": [14, 99, 227, 229, 246, 285, 287, 294, 320, 327, 651, 656], "fix_stim_artifact": [14, 26, 284, 293], "ica_find_ecg_ev": [14, 965], "ica_find_eog_ev": [14, 965], "infomax": [14, 104, 233, 278, 280, 283, 288, 291, 301, 638, 949, 965], "interpolate_bridged_electrod": [14, 97, 304, 305], "equalize_bad": [14, 294, 965], "maxwell_filt": [14, 107, 211, 237, 238, 281, 282, 283, 284, 286, 287, 292, 294, 304, 307, 309, 310, 506, 648, 664, 665, 677, 888, 946], "maxwell_filter_prepare_emptyroom": [14, 304, 965], "oversampled_temporal_project": [14, 111, 286], "peak_find": [14, 286, 288, 320, 965], "read_ica": [14, 233, 638], "read_eog_regress": [14, 965], "realign_raw": [14, 241, 293, 295, 309], "regress_artifact": [14, 213, 292, 305, 307, 310], "corrmap": [14, 233, 280, 291, 308], "read_ica_eeglab": [14, 291, 293, 294, 965], "read_fine_calibr": [14, 965], "write_fine_calibr": 14, "optical_dens": [14, 103, 239, 291, 295], "beer_lambert_law": [14, 239, 291, 295, 310], "source_detector_dist": [14, 239, 291], "short_channel": [14, 291, 965], "scalp_coupling_index": [14, 239, 291, 292], "temporal_derivative_distribution_repair": [14, 103, 292, 304], "project_sensors_onto_brain": [14, 295, 307, 965], "make_montage_volum": [14, 307, 965], "warp_montag": [14, 307, 965], "calibr": [14, 150, 216, 220, 238, 278, 281, 284, 293, 302, 308, 310, 338, 505, 506, 648, 649, 659, 660, 662, 665, 676, 687, 692, 855], "read_eyelink_calibr": [14, 150, 241, 308, 658], "set_channel_types_eyetrack": [14, 220], "convert_unit": [14, 150, 310], "get_screen_visual_angl": [14, 310], "interpolate_blink": [14, 150, 241, 308], "add_reference_channel": [14, 236, 280, 283, 293, 304, 309, 333, 334, 335, 336, 338, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "set_bipolar_refer": [14, 94, 236, 283, 285, 288, 293, 294, 306, 333, 334, 335, 336, 552, 553, 733], "set_eeg_refer": [14, 26, 34, 55, 94, 98, 121, 122, 178, 186, 189, 194, 209, 217, 232, 234, 236, 252, 271, 283, 285, 286, 289, 292, 305, 333, 334, 335, 336, 552, 553, 637, 730, 753, 949], "construct_iir_filt": [14, 230, 283, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 524, 552, 553, 650, 651], "create_filt": [14, 230, 231, 284, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 523, 524, 552, 553, 887], "estimate_ringing_sampl": [14, 965], "filter_data": [14, 230, 283, 284, 287, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 496, 520, 521, 524, 552, 553, 965], "notch_filt": [14, 26, 31, 109, 163, 194, 219, 231, 238, 240, 292, 307, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 523, 552, 553, 965], "compute_chpi_amplitud": [14, 237, 291, 292, 413, 414], "compute_chpi_snr": [14, 237, 295, 308, 412, 869], "compute_chpi_loc": [14, 237, 238, 291, 294, 412, 414, 415], "compute_head_po": [14, 108, 237, 238, 291, 309, 413, 416, 676], "extract_chpi_locs_ctf": [14, 108, 291, 413, 415], "extract_chpi_locs_kit": [14, 294, 965], "filter_chpi": [14, 238, 285, 291, 292, 676], "get_active_chpi": [14, 238, 305], "get_chpi_info": [14, 237, 295], "head_pos_to_trans_rot_t": [14, 422, 423, 740, 741, 742, 754, 965], "read_head_po": [14, 107, 237, 238, 413, 415, 421, 423, 506, 665, 676, 740, 741, 742, 754], "write_head_po": [14, 237, 413, 415, 421, 422], "quat_to_rot": [14, 837], "rot_to_quat": [14, 835], "read_ras_mni_t": [14, 209], "annot": [14, 34, 35, 53, 64, 67, 70, 73, 95, 101, 103, 105, 110, 112, 118, 122, 123, 140, 141, 150, 155, 156, 162, 163, 171, 173, 178, 187, 192, 193, 198, 200, 202, 208, 213, 217, 218, 219, 220, 223, 227, 233, 236, 247, 248, 249, 252, 271, 274, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 303, 304, 305, 307, 308, 309, 310, 319, 320, 321, 322, 328, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 352, 415, 416, 430, 434, 439, 460, 514, 551, 552, 553, 554, 561, 566, 568, 572, 574, 583, 597, 638, 640, 641, 642, 643, 644, 645, 655, 656, 661, 665, 666, 667, 676, 677, 690, 694, 702, 703, 711, 727, 730, 789, 790, 791, 794, 795, 796, 797, 798, 799, 844, 862, 888, 891, 899, 900, 914, 915, 941, 965, 966], "acqparserfif": [14, 88, 283, 338, 552, 965], "concatenate_ev": [14, 965], "count_ev": [14, 307, 965], "find_ev": [14, 26, 29, 31, 33, 36, 58, 59, 60, 68, 71, 72, 75, 98, 99, 100, 107, 111, 118, 121, 123, 127, 135, 136, 138, 141, 167, 168, 169, 176, 179, 189, 193, 195, 198, 199, 204, 207, 209, 210, 212, 219, 224, 228, 231, 232, 233, 235, 240, 241, 245, 252, 253, 258, 269, 270, 283, 285, 286, 287, 299, 302, 303, 318, 321, 322, 338, 511, 527, 561, 568, 576, 584, 598, 633, 690, 703, 949], "find_stim_step": [14, 299, 526, 965], "make_fixed_length_ev": [14, 38, 47, 193, 195, 229, 245, 251, 282, 286, 288, 308, 321, 430, 611], "make_fixed_length_epoch": [14, 173, 291, 292, 293, 294, 295, 328], "merge_ev": [14, 168, 245, 282, 425], "pick_ev": [14, 169, 245], "read_annot": [14, 164, 246, 286, 287, 288, 289, 291, 309, 844], "concatenate_epoch": [14, 219, 283, 284, 285, 287, 292, 295], "events_from_annot": [14, 101, 156, 164, 171, 195, 213, 239, 287, 288, 289, 292, 310, 327, 352, 561, 568], "annotations_from_ev": [14, 195, 291, 327, 514], "count_annot": [14, 308, 965], "define_target_ev": [14, 96, 112, 156, 966], "match_event_nam": [14, 303, 965], "shift_time_ev": [14, 288], "average_mov": [14, 107, 238, 281, 292, 676], "combine_event_id": [14, 333, 965], "equalize_epoch_count": [14, 264, 310], "make_metadata": [14, 101, 199, 294, 309, 310], "space": [14, 24, 29, 31, 33, 36, 43, 46, 48, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 85, 86, 87, 95, 102, 110, 115, 118, 120, 121, 122, 123, 126, 130, 133, 134, 136, 137, 141, 143, 147, 148, 153, 158, 161, 162, 163, 167, 174, 175, 178, 182, 183, 187, 189, 193, 195, 197, 199, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 219, 223, 227, 233, 236, 240, 242, 243, 244, 247, 251, 253, 256, 257, 261, 263, 265, 268, 269, 270, 274, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 306, 307, 308, 314, 319, 321, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 366, 367, 382, 386, 395, 400, 418, 419, 422, 426, 427, 428, 430, 431, 434, 435, 438, 441, 445, 485, 488, 489, 492, 493, 495, 499, 502, 503, 506, 514, 519, 526, 530, 539, 541, 543, 546, 547, 548, 549, 550, 552, 553, 556, 558, 561, 568, 578, 591, 592, 597, 599, 600, 604, 605, 606, 607, 608, 609, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 634, 635, 637, 638, 648, 649, 650, 651, 665, 671, 676, 697, 699, 703, 706, 708, 710, 711, 718, 720, 723, 725, 727, 728, 729, 737, 738, 739, 746, 749, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 765, 773, 774, 776, 777, 779, 780, 781, 784, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 830, 844, 862, 864, 870, 876, 877, 878, 879, 882, 883, 885, 888, 889, 893, 898, 899, 901, 904, 905, 906, 908, 909, 910, 914, 943, 946, 958, 966], "combine_evok": [14, 30, 33, 127, 168, 171, 176, 178, 193, 203, 219, 239, 257, 259, 275, 283, 287, 289, 292, 294, 949], "concatenate_raw": [14, 34, 35, 36, 108, 140, 219, 283, 284, 285, 295, 301, 307, 319, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 432, 433, 552, 553, 665, 676], "grand_averag": [14, 176, 178, 287, 289, 291, 302], "match_channel_ord": [14, 965], "pick_channel": [14, 71, 167, 176, 178, 196, 197, 213, 241, 258, 286, 291, 301, 303, 304, 307, 309, 330, 333, 334, 335, 336, 337, 552, 553, 632, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800], "pick_channels_cov": 14, "pick_channels_forward": [14, 353, 354], "pick_channels_regexp": [14, 196, 228, 233, 235, 240, 629], "pick_typ": [14, 26, 31, 33, 34, 36, 37, 39, 40, 41, 47, 48, 52, 54, 60, 75, 95, 96, 99, 102, 115, 120, 121, 124, 125, 127, 128, 131, 132, 135, 136, 138, 139, 147, 149, 160, 167, 176, 177, 179, 189, 196, 197, 199, 204, 210, 213, 227, 228, 229, 231, 232, 235, 239, 240, 244, 253, 258, 259, 260, 261, 264, 266, 270, 271, 292, 299, 301, 302, 304, 307, 309, 310, 311, 322, 333, 334, 335, 336, 552, 553, 629, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 949], "pick_types_forward": [14, 81, 95, 120, 353, 354], "pick_info": [14, 52, 147, 162, 194, 196, 253, 287, 303], "read_vectorview_select": [14, 71, 253, 258, 294], "baselin": [14, 18, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 96, 98, 99, 100, 102, 103, 106, 107, 110, 111, 113, 114, 115, 118, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 148, 149, 150, 153, 156, 159, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 187, 189, 192, 193, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 227, 228, 229, 231, 232, 233, 235, 239, 240, 241, 251, 253, 257, 258, 259, 260, 261, 264, 266, 270, 271, 274, 275, 278, 283, 287, 289, 292, 293, 294, 297, 303, 304, 305, 308, 318, 321, 322, 325, 328, 333, 334, 335, 336, 340, 341, 342, 343, 344, 347, 348, 349, 424, 425, 430, 452, 485, 492, 526, 552, 553, 597, 603, 621, 622, 638, 655, 656, 683, 699, 706, 707, 774, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 870, 878, 885, 886, 890, 898, 903, 906, 937, 946, 966], "rescal": [14, 41, 90, 135, 141, 287, 301, 441, 442, 443, 656, 789, 790, 791, 795, 796, 797, 798, 906], "covari": [14, 29, 31, 33, 34, 35, 37, 38, 41, 45, 47, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 93, 95, 108, 115, 118, 120, 121, 122, 131, 132, 135, 136, 137, 138, 141, 151, 153, 157, 176, 179, 190, 191, 192, 193, 203, 205, 206, 208, 209, 210, 211, 212, 213, 219, 224, 228, 229, 233, 240, 253, 264, 266, 278, 282, 283, 285, 286, 287, 288, 291, 296, 297, 298, 299, 301, 302, 304, 305, 309, 310, 319, 321, 325, 333, 334, 335, 336, 337, 338, 343, 344, 363, 366, 367, 369, 371, 387, 424, 425, 426, 428, 429, 430, 441, 442, 443, 485, 491, 492, 493, 510, 526, 528, 529, 547, 549, 550, 552, 553, 558, 593, 604, 605, 606, 607, 608, 609, 611, 612, 616, 618, 621, 622, 630, 638, 639, 697, 703, 708, 743, 753, 775, 792, 807, 844, 871, 876, 880, 884, 886, 899, 935, 965, 966], "comput": [14, 19, 21, 26, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 43, 45, 48, 49, 50, 52, 53, 57, 62, 64, 69, 70, 74, 76, 78, 83, 87, 95, 98, 99, 104, 106, 108, 114, 115, 120, 121, 123, 124, 125, 126, 128, 133, 141, 143, 147, 148, 149, 152, 153, 158, 161, 162, 168, 169, 172, 173, 176, 177, 178, 179, 182, 183, 184, 187, 190, 192, 193, 194, 195, 198, 199, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 217, 219, 223, 224, 228, 229, 231, 235, 236, 238, 240, 244, 247, 251, 252, 253, 256, 257, 260, 269, 270, 271, 275, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 319, 321, 326, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 351, 353, 354, 357, 358, 359, 360, 361, 363, 366, 367, 368, 369, 371, 372, 374, 385, 386, 388, 390, 395, 399, 412, 413, 414, 415, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 441, 442, 443, 452, 485, 486, 489, 490, 491, 492, 493, 497, 501, 504, 514, 519, 524, 526, 528, 529, 530, 535, 541, 543, 547, 548, 549, 550, 552, 553, 558, 560, 565, 566, 568, 591, 594, 595, 596, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 635, 636, 638, 639, 642, 645, 646, 648, 649, 650, 651, 652, 655, 664, 665, 672, 674, 693, 695, 696, 697, 698, 703, 706, 707, 708, 710, 711, 718, 720, 723, 725, 727, 729, 731, 733, 737, 738, 739, 744, 745, 746, 747, 748, 749, 750, 751, 754, 757, 759, 760, 761, 762, 763, 764, 765, 770, 771, 772, 775, 776, 777, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 814, 815, 820, 821, 822, 823, 824, 825, 826, 827, 828, 832, 833, 838, 844, 862, 863, 864, 870, 871, 873, 874, 876, 877, 878, 885, 886, 893, 898, 899, 905, 914, 939, 946, 953, 955, 958, 959, 962], "compute_covari": [14, 29, 31, 33, 60, 68, 72, 75, 111, 121, 149, 179, 189, 204, 207, 209, 210, 212, 213, 224, 240, 252, 282, 283, 287, 291, 297, 302, 318, 330, 430, 443, 485, 492, 493, 616, 639, 697, 842, 946], "compute_raw_covari": [14, 68, 115, 137, 189, 211, 219, 229, 282, 284, 291, 318, 330, 425, 616, 697, 842], "cov": [14, 29, 31, 37, 47, 57, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 91, 95, 111, 118, 120, 121, 122, 123, 149, 179, 199, 203, 205, 206, 208, 209, 210, 211, 212, 213, 219, 223, 224, 252, 253, 287, 288, 291, 294, 295, 311, 318, 319, 325, 330, 343, 344, 425, 430, 528, 593, 606, 628, 638, 697, 715, 743, 753, 842, 871, 935, 946, 965], "compute_whiten": [14, 288, 294, 295, 302, 965], "prepare_noise_cov": [14, 302, 441, 965], "regular": [14, 27, 29, 31, 33, 54, 55, 56, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 80, 81, 83, 84, 85, 87, 106, 110, 118, 122, 127, 132, 135, 136, 137, 138, 149, 193, 196, 205, 206, 207, 208, 209, 219, 224, 228, 235, 238, 240, 251, 252, 253, 256, 264, 266, 281, 282, 284, 285, 287, 291, 295, 297, 299, 302, 310, 312, 318, 335, 336, 339, 345, 366, 367, 425, 429, 430, 441, 442, 485, 492, 493, 497, 506, 514, 528, 529, 547, 549, 550, 561, 564, 568, 576, 605, 606, 607, 608, 609, 611, 612, 613, 616, 618, 621, 622, 632, 639, 647, 649, 665, 676, 711, 766, 769, 776, 777, 779, 780, 783, 885, 886, 903, 960], "compute_rank": [14, 29, 60, 288, 292, 295, 330, 493, 871], "make_ad_hoc_cov": [14, 118, 121, 123, 253, 286, 330, 367], "mri": [14, 29, 31, 33, 50, 52, 56, 61, 66, 67, 69, 70, 71, 76, 85, 121, 122, 137, 143, 153, 154, 162, 163, 177, 184, 185, 188, 190, 191, 192, 193, 197, 198, 203, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 236, 240, 244, 253, 278, 280, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 300, 301, 303, 304, 305, 311, 314, 318, 321, 330, 331, 333, 335, 336, 337, 338, 343, 344, 345, 346, 348, 349, 372, 373, 374, 377, 378, 379, 382, 386, 395, 398, 400, 404, 425, 431, 436, 437, 438, 444, 445, 459, 461, 462, 504, 519, 526, 528, 536, 537, 538, 544, 545, 546, 552, 553, 568, 586, 588, 596, 599, 600, 604, 605, 616, 672, 695, 718, 720, 725, 726, 727, 728, 732, 737, 738, 757, 784, 830, 831, 833, 834, 836, 844, 857, 862, 864, 874, 910, 914, 939, 946, 953, 956, 959, 966], "coreg": [14, 143, 162, 184, 185, 186, 187, 198, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 303, 305, 309, 318, 322, 382, 544, 546, 862], "get_mni_fiduci": [14, 187, 289, 293, 382, 437, 862], "estimate_head_mri_t": [14, 143, 162, 295], "read_fiduci": [14, 303, 436, 965], "write_fiduci": 14, "get_montage_volume_label": [14, 162, 295, 303, 844], "create_default_subject": [14, 284, 965], "head_to_mni": [14, 965], "head_to_mri": [14, 287, 305, 306, 965], "read_lta": [14, 307, 965], "read_talxfm": [14, 162, 187], "scale_mri": [14, 184, 293, 300, 303, 436, 728], "scale_bem": [14, 303, 727, 965], "scale_label": [14, 727, 965], "scale_source_spac": [14, 727, 965], "apply_volume_registr": [14, 295, 303], "apply_volume_registration_point": [14, 307], "compute_volume_registr": [14, 295, 303, 305, 832, 833], "vertex_to_mni": [14, 63, 339, 344], "forward": [14, 29, 31, 33, 38, 48, 51, 52, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 99, 107, 118, 120, 121, 122, 123, 158, 162, 173, 182, 183, 187, 188, 191, 193, 197, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 216, 219, 224, 227, 228, 229, 230, 232, 233, 235, 236, 240, 252, 253, 278, 280, 282, 283, 285, 287, 288, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 319, 321, 325, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 353, 354, 355, 366, 367, 368, 369, 371, 372, 382, 386, 387, 398, 404, 435, 445, 461, 485, 492, 496, 510, 512, 513, 520, 521, 523, 524, 547, 548, 549, 550, 552, 553, 558, 568, 594, 595, 599, 600, 601, 614, 615, 616, 617, 620, 631, 636, 695, 708, 718, 729, 733, 737, 738, 740, 741, 742, 753, 754, 838, 844, 862, 864, 883, 887, 912, 914, 938, 953, 962, 965, 966], "sourcespac": [14, 52, 67, 69, 71, 76, 137, 185, 186, 187, 203, 236, 284, 288, 289, 292, 302, 303, 305, 310, 321, 322, 337, 339, 340, 341, 344, 347, 348, 349, 351, 431, 519, 539, 548, 591, 592, 600, 614, 615, 620, 625, 718, 737, 738, 739, 746, 749, 751, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 781, 784, 785, 844, 862, 864, 904, 909, 910, 943], "add_source_space_dist": [14, 291, 965], "apply_forward": [14, 185, 295, 354], "apply_forward_raw": [14, 295, 302, 353], "average_forward_solut": [14, 322, 965], "convert_forward_solut": [14, 31, 48, 73, 74, 75, 80, 81, 95, 185, 205, 252, 285, 288, 322, 600, 708, 938], "decimate_surfac": [14, 291], "dig_mri_dist": [14, 183, 289, 303, 436], "compute_depth_prior": [14, 288, 366, 367, 530, 547, 549, 550, 616, 965], "compute_orient_prior": [14, 529, 965], "restrict_forward_to_label": [14, 285, 308, 532, 965], "restrict_forward_to_stc": [14, 285, 531, 965], "make_bem_model": [14, 185, 188, 219, 280, 288, 291, 318, 346, 372, 436, 504, 535, 595, 600, 601, 696, 725, 727, 738, 939], "make_bem_solut": [14, 137, 185, 219, 280, 318, 322, 372, 436, 504, 535, 594, 600, 601, 695, 696, 725, 727, 738, 939], "make_forward_dipol": [14, 71, 203, 282, 292, 304], "make_forward_solut": [14, 31, 33, 52, 67, 76, 137, 185, 186, 209, 219, 236, 240, 282, 286, 291, 295, 303, 318, 322, 337, 616, 708, 838], "make_field_map": [14, 153, 177, 275, 285, 287, 304, 305, 335, 336, 846, 881], "make_sphere_model": [14, 29, 111, 154, 183, 210, 211, 212, 213, 236, 287, 322, 594], "morph_source_spac": [14, 52, 280, 344, 347], "sensitivity_map": [14, 48, 52, 158, 185], "setup_source_spac": [14, 50, 67, 137, 182, 185, 187, 205, 219, 288, 289, 291, 301, 318, 322, 346, 718, 738, 759, 763], "setup_volume_source_spac": [14, 50, 67, 76, 183, 185, 187, 236, 284, 285, 288, 289, 291, 292, 295, 322, 340, 341, 344, 346, 347, 348, 349, 519, 592, 718, 737], "surfac": [14, 29, 31, 33, 37, 48, 50, 52, 53, 57, 60, 61, 62, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 87, 95, 98, 108, 118, 120, 122, 137, 143, 144, 146, 148, 153, 154, 161, 162, 163, 177, 182, 183, 184, 186, 190, 191, 192, 193, 198, 199, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 216, 218, 219, 224, 227, 236, 238, 240, 246, 252, 253, 256, 264, 265, 266, 275, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 309, 310, 314, 319, 321, 331, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 366, 367, 374, 377, 378, 379, 405, 431, 435, 436, 459, 462, 484, 504, 519, 530, 535, 536, 541, 543, 544, 546, 547, 549, 550, 578, 590, 592, 594, 595, 596, 600, 605, 606, 607, 608, 609, 612, 614, 615, 616, 621, 622, 624, 625, 647, 648, 671, 672, 693, 696, 708, 711, 716, 718, 719, 722, 725, 727, 737, 738, 752, 753, 754, 755, 758, 760, 761, 764, 766, 784, 785, 824, 827, 830, 833, 844, 846, 862, 864, 874, 881, 904, 905, 909, 934, 938, 939, 944, 946, 951, 953, 956, 958, 959, 965, 966], "complete_surface_info": [14, 965], "read_curvatur": [14, 187], "use_coil_def": [14, 31, 137], "conductormodel": [14, 29, 31, 71, 137, 185, 210, 211, 212, 213, 321, 330, 333, 334, 335, 336, 338, 342, 374, 382, 485, 492, 528, 552, 553, 594, 595, 600, 601, 637, 638, 653, 695, 738, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 862, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908, 933], "fit_sphere_to_headshap": [14, 282, 309, 506, 648, 649, 665, 676], "get_fitting_dig": [14, 504], "make_watershed_bem": [14, 185, 219, 291, 292, 304, 321, 946, 965], "make_flash_bem": [14, 185, 280, 288, 304, 321, 373, 965], "make_scalp_surfac": [14, 188, 283, 284, 285, 286, 294, 295, 303, 304, 959, 965], "convert_flash_mri": [14, 304, 308, 322, 377, 965], "distance_to_bem": [14, 304, 965], "invers": [14, 31, 33, 37, 45, 47, 58, 59, 60, 64, 69, 70, 71, 72, 74, 76, 77, 80, 81, 82, 84, 85, 86, 87, 115, 118, 133, 134, 135, 136, 137, 138, 153, 176, 182, 183, 186, 187, 189, 197, 199, 202, 203, 205, 206, 207, 208, 209, 215, 216, 219, 224, 228, 234, 236, 252, 253, 264, 266, 278, 280, 284, 285, 287, 288, 291, 292, 293, 296, 297, 299, 301, 302, 304, 305, 310, 314, 321, 325, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 366, 367, 424, 431, 437, 438, 443, 491, 499, 503, 519, 547, 548, 549, 552, 553, 591, 600, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 635, 638, 639, 697, 703, 706, 708, 710, 711, 718, 737, 738, 811, 844, 862, 873, 874, 903, 905, 914, 953, 966], "solut": [14, 29, 31, 33, 37, 48, 49, 52, 53, 57, 58, 59, 60, 62, 64, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 95, 97, 98, 118, 120, 121, 122, 123, 133, 134, 135, 136, 137, 138, 153, 158, 183, 184, 186, 189, 192, 193, 197, 198, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 224, 228, 235, 240, 252, 253, 264, 266, 278, 280, 285, 287, 288, 291, 292, 296, 299, 300, 301, 302, 303, 304, 305, 309, 311, 321, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 366, 367, 368, 379, 431, 435, 443, 519, 529, 530, 547, 548, 549, 550, 552, 553, 591, 595, 599, 600, 601, 604, 605, 606, 607, 608, 609, 612, 613, 616, 619, 620, 630, 631, 635, 636, 638, 688, 695, 697, 703, 706, 708, 710, 711, 718, 733, 737, 738, 740, 741, 742, 753, 754, 844, 862, 873, 874, 889, 891, 893, 904, 905, 909, 933, 938, 951, 953, 956, 962, 966], "inverseoper": [14, 295, 301, 305, 343, 605, 606, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 903], "apply_invers": [14, 31, 33, 54, 56, 64, 65, 66, 67, 70, 71, 84, 85, 87, 118, 122, 193, 204, 205, 206, 208, 209, 219, 224, 234, 240, 252, 253, 264, 266, 285, 287, 288, 289, 291, 292, 297, 301, 302, 318, 321, 322, 606, 607, 608, 609, 611, 612, 618, 621, 622], "apply_inverse_cov": [14, 60, 68, 291, 605, 607, 608, 609], "apply_inverse_epoch": [14, 37, 54, 71, 285, 297, 305, 340, 341, 344, 347, 348, 349, 605, 606, 608, 609], "apply_inverse_raw": [14, 55, 297, 605, 606, 607, 609], "apply_inverse_tfr_epoch": [14, 305, 605, 606, 607, 608], "compute_source_psd": [14, 136, 137, 284, 287, 309, 612], "compute_source_psd_epoch": [14, 132, 134, 292, 611, 966], "compute_rank_invers": [14, 965], "estimate_snr": [14, 84, 287, 291, 344, 965], "make_inverse_oper": [14, 31, 33, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 118, 122, 137, 204, 205, 206, 209, 219, 224, 240, 253, 288, 292, 294, 299, 318, 322, 619], "prepare_inverse_oper": [14, 302, 605, 606, 607, 608, 609, 611, 612, 621, 622, 965], "read_inverse_oper": [14, 37, 54, 55, 56, 64, 65, 70, 73, 78, 83, 87, 132, 135, 136, 138, 153, 193, 208, 252, 264, 266, 623], "source_band_induced_pow": [14, 138, 292, 298], "source_induced_pow": [14, 135, 298, 309], "write_inverse_oper": [14, 204, 303, 619], "make_inverse_resolution_matrix": [14, 73, 74, 76, 80, 81, 291], "resolution_metr": [14, 80, 81, 82, 291, 966], "get_cross_talk": [14, 74, 75, 291, 293, 305], "get_point_spread": [14, 73, 74, 76, 291, 293, 305], "mixed_norm": [14, 66, 202, 285, 287, 288, 289, 291, 292, 295, 299, 550], "tf_mixed_norm": [14, 72, 85, 285, 286, 289, 291, 294, 549], "gamma_map": [14, 61, 285, 288, 292], "make_stc_from_dipol": [14, 61, 66, 72, 85, 285], "read_beamform": [14, 287, 965], "make_lcmv": [14, 60, 75, 207, 285, 286, 287, 288, 291, 292, 307, 308, 310, 321, 358, 360, 362, 363, 364, 365, 366, 368], "apply_lcmv": [14, 207, 285, 286, 303, 358, 360, 363, 364, 365], "apply_lcmv_epoch": [14, 207, 285, 286, 340, 341, 344, 347, 348, 349, 362, 363, 365], "apply_lcmv_raw": [14, 207, 285, 286, 362, 363, 364], "apply_lcmv_cov": [14, 60, 207, 288, 292, 362, 364, 365], "make_d": [14, 58, 59, 60, 253, 286, 287, 288, 291, 292, 293, 294, 305, 321, 358, 359, 360, 361], "apply_d": [14, 286, 293, 359, 360, 361], "apply_dics_csd": [14, 59, 60, 253, 286, 358, 360, 361, 366], "apply_dics_epoch": [14, 286, 358, 359, 361], "apply_dics_tfr_epoch": [14, 58, 306, 358, 359, 360], "rap_mus": [14, 77, 82, 284, 285, 292, 307, 371, 528, 966], "trap_mus": [14, 82, 86, 307, 369, 966], "make_lcmv_resolution_matrix": [14, 75, 291], "dipolefix": [14, 331, 528, 698, 965], "fit_dipol": [14, 29, 31, 71, 111, 203, 208, 210, 211, 212, 213, 282, 284, 285, 287, 291, 295, 322, 331, 332, 369, 371, 698], "get_phantom_dipol": [14, 29, 111, 210, 213, 284, 288, 462], "bihemilabel": [14, 340, 341, 344, 347, 348, 349, 519, 591, 592, 965], "label": [14, 30, 34, 35, 36, 37, 38, 39, 41, 42, 44, 47, 48, 53, 54, 55, 62, 63, 70, 71, 82, 95, 97, 118, 120, 122, 123, 124, 125, 129, 133, 134, 138, 139, 140, 141, 144, 148, 155, 162, 164, 167, 169, 170, 171, 173, 176, 178, 182, 187, 193, 195, 198, 199, 203, 207, 208, 219, 220, 224, 229, 233, 235, 238, 241, 244, 245, 246, 257, 266, 270, 271, 274, 275, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 305, 308, 309, 311, 314, 321, 329, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 366, 367, 431, 435, 457, 460, 485, 486, 487, 490, 492, 493, 494, 496, 502, 518, 519, 526, 531, 537, 538, 539, 543, 552, 553, 561, 564, 568, 572, 591, 592, 604, 605, 606, 607, 608, 609, 611, 612, 614, 615, 617, 619, 621, 622, 624, 635, 637, 638, 639, 653, 693, 706, 708, 709, 710, 711, 716, 726, 727, 738, 739, 747, 752, 755, 756, 766, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 850, 864, 865, 868, 870, 876, 877, 878, 879, 880, 882, 885, 889, 892, 893, 898, 899, 901, 904, 905, 906, 907, 908, 909, 940, 941, 959, 965, 966], "mixedsourceestim": [14, 202, 287, 291, 292, 321, 341, 344, 347, 348, 349, 716], "mixedvectorsourceestim": [14, 292, 909], "sourceestim": [14, 37, 48, 52, 57, 61, 63, 66, 72, 85, 87, 122, 182, 185, 192, 193, 208, 214, 215, 252, 253, 264, 265, 266, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 303, 304, 308, 310, 314, 320, 321, 332, 333, 334, 335, 336, 339, 340, 341, 343, 345, 346, 347, 348, 349, 353, 354, 358, 359, 360, 361, 362, 363, 364, 365, 431, 519, 532, 547, 548, 549, 550, 552, 553, 592, 605, 606, 607, 608, 609, 611, 614, 615, 620, 621, 710, 716, 729, 739, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 774, 781, 784, 785, 844, 860, 904, 905, 946, 965, 966], "vectorsourceestim": [14, 65, 87, 202, 285, 291, 292, 321, 340, 341, 344, 345, 348, 349, 361, 362, 547, 549, 550, 605, 606, 607, 608, 609, 614, 615, 716, 909, 910], "volsourceestim": [14, 202, 207, 208, 286, 287, 292, 293, 295, 309, 310, 321, 340, 341, 344, 345, 347, 349, 358, 360, 361, 362, 363, 364, 365, 592, 599, 605, 606, 607, 608, 609, 611, 621, 716, 729], "volvectorsourceestim": [14, 288, 289, 340, 341, 344, 345, 348], "sourcemorph": [14, 207, 287, 289, 293, 348, 349, 431, 717, 910, 956], "compute_source_morph": [14, 66, 69, 70, 161, 185, 187, 207, 208, 264, 265, 266, 287, 291, 292, 293, 295, 303, 318, 340, 344, 345, 348, 349, 713, 904, 910], "extract_label_time_cours": [14, 64, 65, 67, 208, 282, 285, 289, 292, 293, 294, 301, 309, 340, 341, 344, 347, 348, 349, 592], "grade_to_tri": [14, 965], "grade_to_vertic": [14, 965], "select_sourc": [14, 118, 123, 288], "grow_label": [14, 293, 294, 965], "label_sign_flip": [14, 54, 282], "labels_to_stc": [14, 208, 288, 293], "morph_label": [14, 288, 339, 711, 965], "random_parcel": [14, 965], "read_source_morph": [14, 69, 70, 345, 965], "split_label": [14, 301, 339, 965], "stc_to_label": [14, 64, 301], "stc_near_sensor": [14, 162, 163, 293, 295, 303, 310], "transform_surface_to": [14, 285], "source_spac": [14, 48, 293, 303, 346], "compute_distance_to_sensor": [14, 48, 293], "get_decimated_surfac": [14, 303], "time": [14, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 118, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 161, 162, 164, 168, 170, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 247, 251, 252, 253, 256, 257, 260, 264, 265, 266, 269, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 318, 319, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 365, 366, 412, 413, 414, 415, 416, 417, 418, 419, 421, 424, 425, 428, 430, 431, 432, 434, 445, 477, 485, 486, 487, 488, 491, 492, 494, 495, 496, 497, 498, 499, 501, 508, 509, 511, 513, 514, 519, 521, 523, 524, 525, 526, 527, 528, 538, 543, 547, 548, 549, 550, 551, 552, 553, 559, 566, 568, 572, 574, 583, 590, 592, 598, 599, 604, 605, 606, 608, 609, 611, 612, 613, 616, 617, 619, 621, 622, 633, 635, 637, 638, 640, 641, 642, 643, 646, 647, 648, 650, 651, 653, 655, 656, 657, 661, 665, 667, 668, 674, 684, 690, 693, 697, 698, 702, 703, 706, 707, 708, 710, 716, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 763, 764, 765, 769, 774, 775, 776, 777, 778, 779, 780, 781, 782, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 812, 815, 818, 821, 822, 823, 824, 825, 826, 827, 828, 843, 844, 846, 860, 863, 869, 870, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 893, 897, 898, 899, 900, 901, 904, 905, 906, 907, 908, 909, 910, 921, 936, 946, 949, 951, 952, 958, 959, 962], "frequenc": [14, 27, 29, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 59, 60, 62, 68, 82, 95, 98, 99, 100, 101, 104, 108, 109, 110, 111, 115, 118, 121, 122, 127, 131, 132, 134, 135, 136, 137, 138, 140, 143, 149, 152, 155, 160, 164, 167, 168, 169, 170, 171, 173, 176, 178, 183, 194, 195, 196, 199, 207, 210, 213, 219, 223, 224, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 260, 264, 266, 273, 274, 278, 280, 283, 284, 285, 286, 288, 290, 291, 292, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 321, 322, 325, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 343, 344, 347, 348, 349, 352, 356, 357, 358, 359, 360, 361, 366, 382, 398, 412, 413, 420, 425, 434, 445, 465, 485, 487, 490, 491, 493, 496, 497, 498, 506, 509, 511, 513, 520, 521, 523, 524, 525, 526, 548, 550, 552, 553, 561, 563, 568, 580, 604, 605, 609, 611, 612, 616, 621, 622, 635, 638, 643, 646, 650, 651, 655, 656, 665, 666, 667, 669, 670, 676, 680, 694, 697, 706, 708, 756, 768, 775, 776, 777, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 839, 844, 869, 872, 873, 874, 878, 879, 887, 891, 894, 900, 905, 906, 908, 946, 949, 966], "time_frequ": [14, 22, 35, 47, 58, 59, 60, 120, 131, 134, 139, 142, 193, 230, 251, 253, 269, 270, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 309, 310, 314, 343, 490, 493, 498, 542, 965, 966], "averagetfr": [14, 140, 284, 288, 289, 291, 292, 294, 295, 302, 304, 305, 306, 307, 332, 333, 334, 335, 336, 387, 510, 542, 790, 791, 795, 796, 797, 798, 818, 826, 827, 828, 829, 906, 965], "averagetfrarrai": [14, 35, 142, 789, 791, 798], "basetfr": 14, "epochstfr": [14, 140, 142, 283, 285, 288, 294, 304, 305, 310, 333, 334, 361, 508, 609, 789, 790, 791, 796, 797, 798, 807, 818, 826, 827, 829, 965], "epochstfrarrai": [14, 142, 790, 791, 795, 798], "rawtfr": [14, 310, 552, 553, 789, 790, 791, 795, 796, 798, 818, 829, 965], "rawtfrarrai": [14, 791], "crossspectraldens": [14, 131, 291, 359, 366, 387, 510, 801, 802, 803, 804, 805, 806, 807, 813, 816, 872, 965], "spectrum": [14, 47, 102, 110, 131, 132, 136, 140, 160, 164, 167, 170, 192, 193, 199, 213, 227, 231, 233, 235, 240, 247, 251, 253, 270, 271, 272, 273, 278, 305, 306, 307, 309, 314, 321, 330, 333, 334, 335, 336, 343, 411, 526, 552, 553, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 800, 814, 815, 817, 839, 871, 889, 891, 900, 965, 966], "spectrumarrai": [14, 251, 309, 794, 799], "epochsspectrum": [14, 169, 192, 272, 273, 305, 333, 334, 335, 336, 411, 526, 552, 794, 795, 796, 799, 839, 965, 966], "epochsspectrumarrai": [14, 251, 309, 793, 800], "csd_tfr": [14, 58, 305], "csd_fourier": [14, 131, 286, 310, 792, 801, 802, 803, 805, 806], "csd_multitap": [14, 131, 286, 310, 792, 801, 802, 803, 804, 805, 814], "csd_morlet": [14, 59, 60, 131, 253, 286, 293, 792, 801, 802, 803, 804, 806], "pick_channels_csd": 14, "read_csd": [14, 305, 792, 965], "fit_iir_model_raw": [14, 120, 139, 284, 302], "tfr_morlet": [14, 142, 258, 259, 260, 270, 280, 283, 287, 291, 301, 310, 498, 821, 823, 824, 825, 827, 828], "tfr_multitap": [14, 142, 270, 280, 283, 287, 291, 310, 498, 823, 824, 825, 826, 828], "tfr_stockwel": [14, 142, 270, 287, 310, 823, 824, 825, 826, 827], "read_tfr": [14, 291, 292, 829, 965], "write_tfr": [14, 818], "read_spectrum": [14, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 965], "csd_array_fouri": [14, 286, 310, 792, 802, 803, 804, 805, 806, 965], "csd_array_multitap": [14, 286, 306, 310, 792, 801, 802, 804, 805, 806, 965], "csd_array_morlet": [14, 286, 792, 801, 803, 804, 805, 806, 965], "dpss_window": [14, 306, 965], "fwhm": [14, 188, 306, 812, 822, 965], "morlet": [14, 22, 53, 58, 131, 133, 134, 141, 193, 230, 258, 259, 260, 261, 270, 278, 286, 305, 306, 333, 334, 335, 336, 338, 445, 498, 552, 553, 789, 790, 791, 795, 796, 797, 802, 805, 810, 821, 823, 826, 827, 828, 965, 966], "stft": [14, 85, 294, 302, 321, 550, 811, 820, 965], "istft": [14, 294, 819, 820, 965], "stftfreq": [14, 819, 965], "psd_array_multitap": [14, 269, 284, 295, 303, 306, 307, 333, 334, 335, 336, 490, 552, 553, 793, 799, 824, 827, 965], "psd_array_welch": [14, 47, 251, 269, 284, 285, 292, 295, 304, 307, 310, 333, 334, 335, 336, 493, 552, 553, 793, 799], "tfr_array_morlet": [14, 142, 284, 285, 310, 333, 334, 335, 336, 552, 553, 789, 791, 795, 797, 824, 825, 826, 827, 828], "tfr_array_multitap": [14, 142, 284, 303, 306, 310, 333, 334, 335, 336, 552, 553, 789, 791, 795, 797, 823, 825, 826, 827, 828, 965], "tfr_array_stockwel": [14, 284, 292, 333, 334, 823, 824, 826, 827, 828, 965], "tfr": [14, 22, 58, 140, 230, 258, 259, 270, 284, 287, 288, 291, 294, 302, 310, 314, 321, 333, 334, 335, 336, 498, 552, 553, 605, 606, 607, 608, 789, 790, 791, 795, 796, 797, 798, 802, 805, 807, 818, 823, 824, 825, 826, 827, 828, 829, 906, 965], "cwt": [14, 965], "connect": [14, 25, 36, 64, 73, 97, 187, 193, 198, 241, 253, 256, 275, 278, 282, 285, 286, 288, 289, 291, 292, 293, 294, 295, 298, 299, 301, 304, 339, 358, 360, 366, 367, 447, 680, 769, 776, 777, 779, 780, 785, 866, 952, 958, 959, 962], "statist": [14, 31, 36, 37, 48, 54, 55, 57, 61, 64, 65, 66, 68, 69, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 114, 115, 118, 120, 121, 122, 123, 124, 125, 129, 131, 132, 135, 136, 138, 141, 153, 158, 176, 178, 182, 183, 185, 187, 189, 193, 199, 204, 205, 206, 208, 209, 219, 224, 230, 233, 234, 252, 253, 263, 278, 285, 286, 291, 294, 299, 301, 303, 320, 321, 325, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 353, 354, 366, 367, 388, 392, 394, 424, 425, 431, 435, 526, 552, 553, 605, 606, 607, 608, 609, 612, 616, 621, 622, 629, 635, 638, 696, 699, 703, 718, 723, 749, 753, 754, 767, 769, 770, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 882, 885, 906, 946, 959, 966], "stat": [14, 21, 30, 124, 125, 127, 128, 129, 130, 140, 141, 168, 223, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 271, 280, 281, 282, 284, 286, 287, 290, 291, 292, 294, 298, 299, 303, 308, 320, 333, 334, 388, 399, 638, 646, 875, 965, 966], "ttest_1samp_no_p": [14, 256, 292, 776, 779, 783], "ttest_ind_no_p": [14, 292, 965], "f_onewai": [14, 256, 770, 772, 777, 780, 965], "f_mway_rm": [14, 256, 260, 266, 280, 772], "f_threshold_mway_rm": [14, 256, 260, 266, 770], "linear_regress": [14, 30, 129, 168, 256, 281, 291], "linear_regression_raw": [14, 127, 130, 282, 286, 966], "bonferroni_correct": [14, 125, 256, 280, 291], "fdr_correct": [14, 125, 129, 256, 260], "combine_adjac": [14, 256, 258, 261, 264, 292, 388, 399, 776, 777, 779, 780], "permutation_cluster_test": [14, 124, 256, 259, 260, 286, 287, 292, 780], "permutation_cluster_1samp_test": [14, 140, 256, 258, 286, 292, 294, 303, 779], "permutation_t_test": [14, 128, 256, 308], "spatio_temporal_cluster_test": [14, 256, 257, 261, 265, 266, 286, 287, 303], "spatio_temporal_cluster_1samp_test": [14, 256, 264, 284, 292, 303, 776], "summarize_clusters_stc": [14, 264, 265, 266, 291, 292], "bootstrap_confidence_interv": [14, 141], "spatial_dist_adjac": [14, 292, 965], "spatial_src_adjac": [14, 264, 265, 266, 292, 776, 777, 779, 780], "spatial_tris_adjac": [14, 292, 965], "spatial_inter_hemi_adjac": [14, 292, 776, 777, 779, 780, 965], "spatio_temporal_src_adjac": [14, 292, 776, 777, 779, 780, 965], "spatio_temporal_tris_adjac": [14, 292, 540, 965], "spatio_temporal_dist_adjac": [14, 292, 965], "simul": [14, 95, 97, 107, 119, 133, 134, 167, 176, 188, 203, 216, 218, 229, 230, 244, 251, 255, 261, 264, 265, 266, 271, 278, 280, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 297, 305, 319, 330, 333, 334, 335, 336, 337, 338, 339, 344, 346, 425, 445, 526, 552, 553, 558, 590, 593, 599, 604, 605, 616, 635, 636, 680, 697, 703, 708, 710, 711, 714, 789, 790, 791, 793, 794, 795, 796, 799, 800, 809, 823, 826, 827, 828, 844, 905, 965, 966], "add_chpi": [14, 288, 741, 742, 754, 965], "add_ecg": [14, 121, 122, 288, 742, 754], "add_eog": [14, 121, 122, 288, 741, 754], "add_nois": [14, 118, 121, 122, 123, 253, 288, 741, 742, 754], "simulate_evok": [14, 95, 120, 203, 252, 280, 285, 288, 295, 599, 754, 755, 756], "simulate_raw": [14, 118, 121, 122, 123, 253, 280, 284, 286, 287, 288, 293, 294, 741, 742, 753, 755, 756], "simulate_stc": [14, 252, 283, 288, 289, 753, 754, 755], "simulate_sparse_stc": [14, 95, 120, 121, 280, 753, 754, 756], "select_source_in_label": [14, 965], "sourcesimul": [14, 118, 122, 123, 288, 294, 754], "metric": [14, 19, 36, 41, 53, 62, 82, 118, 145, 164, 224, 240, 282, 291, 305, 312, 330, 335, 337, 338, 344, 435, 488, 491, 495, 604, 616, 617, 620, 636, 638, 664, 697, 706, 708, 844, 892, 965, 966], "cosine_scor": [14, 118], "region_localization_error": [14, 118], "f1_score": [14, 118], "precision_scor": [14, 118], "recall_scor": [14, 118], "roc_auc_scor": [14, 36, 488, 495, 965], "spatial_deviation_error": [14, 118], "peak_position_error": [14, 118], "decod": [14, 40, 42, 45, 46, 47, 179, 192, 193, 195, 223, 225, 226, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 299, 300, 304, 305, 306, 307, 308, 310, 311, 319, 330, 333, 335, 336, 338, 344, 382, 398, 425, 434, 445, 526, 552, 561, 566, 568, 578, 598, 604, 605, 607, 616, 619, 635, 639, 697, 703, 708, 789, 790, 791, 844, 965, 966], "csp": [14, 38, 43, 46, 53, 224, 280, 283, 284, 285, 291, 292, 293, 300, 301, 304, 306, 310, 319, 333, 338, 382, 398, 434, 445, 489, 492, 568, 635, 639, 789, 790, 791, 966], "em": [14, 43, 46, 53, 224, 283, 333, 335, 336, 338, 501, 552, 703, 966], "filterestim": [14, 302, 496, 965], "linearmodel": [14, 37, 44, 224, 280, 284, 291], "psdestim": [14, 965], "scaler": [14, 44, 284], "temporalfilt": [14, 283, 304, 487, 965], "timefrequ": [14, 283, 305, 965], "unsupervisedspatialfilt": [14, 40, 283], "vector": [14, 31, 33, 41, 44, 45, 53, 60, 62, 67, 82, 137, 139, 158, 189, 202, 204, 205, 216, 223, 232, 233, 234, 235, 237, 238, 253, 278, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 302, 305, 309, 321, 322, 325, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 359, 366, 367, 412, 414, 418, 426, 427, 428, 431, 486, 489, 491, 496, 501, 503, 519, 523, 524, 525, 547, 549, 550, 552, 553, 591, 597, 604, 605, 607, 608, 609, 614, 615, 619, 637, 638, 649, 650, 651, 652, 654, 665, 672, 676, 685, 691, 699, 706, 714, 716, 723, 729, 789, 791, 792, 793, 795, 797, 799, 844, 878, 880, 882, 884, 885, 888, 897, 900, 904, 907, 909, 910, 942, 946, 966], "receptivefield": [14, 45, 223, 285, 288, 308, 497], "timedelayingridg": [14, 223, 285, 293, 295, 491], "slidingestim": [14, 37, 224, 285, 286, 287, 305, 307, 308, 502], "generalizingestim": [14, 39, 224, 285, 286, 287, 291, 307, 502], "spoc": [14, 43, 46, 53, 278, 285, 287, 333, 338, 485, 493, 566, 598, 639, 965, 966], "ssd": [14, 43, 46, 53, 293, 307, 333, 335, 336, 338, 566, 598, 815, 966], "compute_em": [14, 42, 283, 301], "cross_val_multiscor": [14, 37, 224, 285, 286, 306], "get_coef": [14, 37, 44, 224, 284], "realtim": [14, 282, 283, 284, 287, 288, 300, 301, 487, 684, 959], "report": [14, 41, 150, 164, 192, 200, 201, 220, 238, 240, 241, 257, 271, 278, 280, 281, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 318, 322, 330, 333, 334, 335, 337, 338, 342, 344, 358, 360, 509, 526, 552, 553, 559, 604, 627, 638, 656, 659, 665, 681, 706, 812, 822, 876, 893, 899, 946, 947, 951, 965, 966], "open_report": [14, 199, 287, 303, 343], "log": [14, 34, 35, 38, 47, 59, 110, 149, 169, 189, 204, 228, 230, 233, 235, 239, 247, 258, 270, 271, 284, 287, 291, 292, 293, 294, 298, 303, 304, 307, 311, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 495, 496, 498, 501, 502, 504, 506, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 535, 536, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 634, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 734, 735, 737, 738, 740, 741, 742, 743, 753, 754, 757, 759, 760, 761, 762, 763, 764, 765, 776, 777, 778, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 812, 813, 814, 815, 818, 819, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 842, 843, 844, 846, 853, 862, 871, 874, 875, 878, 879, 880, 881, 886, 887, 889, 890, 891, 894, 896, 897, 899, 900, 902, 903, 904, 905, 906, 909, 910, 911, 915, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946], "configur": [14, 192, 195, 200, 201, 218, 235, 244, 261, 278, 303, 307, 313, 314, 319, 322, 333, 334, 452, 458, 505, 533, 534, 544, 552, 553, 578, 616, 626, 638, 650, 651, 732, 788, 839, 844, 876, 893, 899, 912, 913, 914, 946, 966], "get_config_path": [14, 198, 299], "get_config": [14, 198, 299, 307, 458, 732], "open_doc": [14, 284, 965], "set_log_level": [14, 198, 734, 842, 965], "set_log_fil": [14, 965], "set_config": [14, 182, 198, 283, 292, 299, 303, 309, 311, 318, 333, 334, 447, 458, 533, 552, 553, 638, 842, 876, 893, 899, 951], "set_cache_dir": [14, 776, 777, 779, 780, 965], "set_memmap_min_s": [14, 965], "sys_info": [14, 198, 282, 291, 295, 303, 304, 309, 343, 946, 951, 952], "use_log_level": [14, 198, 269], "verbos": [14, 31, 36, 37, 39, 40, 41, 60, 64, 66, 67, 68, 70, 75, 77, 84, 86, 97, 103, 106, 107, 111, 115, 121, 122, 127, 132, 136, 137, 149, 152, 153, 155, 161, 162, 163, 164, 167, 169, 172, 173, 176, 177, 179, 184, 185, 186, 189, 197, 198, 199, 204, 206, 207, 208, 209, 210, 211, 218, 224, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 245, 246, 256, 257, 258, 264, 269, 271, 285, 293, 294, 301, 303, 304, 305, 307, 309, 311, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 495, 496, 498, 501, 502, 504, 506, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 535, 536, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 634, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 735, 737, 738, 740, 741, 742, 743, 753, 754, 757, 759, 760, 761, 762, 763, 764, 765, 776, 777, 778, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 814, 815, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 840, 843, 844, 846, 853, 862, 871, 874, 878, 879, 880, 881, 886, 889, 890, 891, 896, 897, 899, 900, 902, 903, 904, 905, 909, 910, 911, 915, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 951], "deprec": [14, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 314, 325, 789, 790, 791, 795, 796, 797, 798, 823, 824], "warn": [14, 31, 36, 39, 64, 161, 163, 167, 178, 189, 198, 199, 208, 211, 213, 219, 231, 233, 234, 241, 245, 246, 258, 269, 282, 283, 285, 287, 289, 291, 292, 293, 294, 295, 303, 305, 306, 307, 309, 310, 325, 327, 328, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 353, 354, 386, 409, 413, 419, 420, 425, 429, 431, 432, 434, 436, 441, 442, 477, 504, 512, 519, 532, 535, 552, 553, 574, 580, 638, 649, 665, 676, 677, 696, 706, 725, 727, 730, 734, 735, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 823, 824, 840, 842, 844, 879, 890, 937, 939, 958, 960], "get_cuda_memori": 14, "init_cuda": [14, 951, 965], "set_cuda_devic": [14, 289, 965], "standalon": [16, 182, 288, 954], "lsl": [16, 288, 314], "correct": [18, 21, 26, 29, 33, 34, 35, 37, 38, 42, 44, 47, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 96, 98, 99, 100, 102, 105, 106, 107, 110, 112, 113, 114, 115, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 148, 149, 150, 156, 158, 159, 162, 163, 164, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 183, 186, 187, 188, 189, 192, 193, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 251, 252, 253, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275, 278, 280, 281, 285, 286, 287, 288, 290, 291, 292, 293, 294, 299, 303, 305, 306, 307, 310, 311, 313, 316, 318, 321, 322, 325, 327, 328, 330, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 356, 379, 390, 424, 425, 430, 436, 485, 491, 492, 497, 504, 506, 524, 526, 535, 552, 553, 559, 561, 565, 568, 583, 585, 603, 606, 621, 622, 635, 637, 638, 639, 648, 649, 652, 655, 656, 665, 676, 679, 683, 690, 694, 696, 703, 706, 707, 725, 727, 744, 745, 746, 747, 748, 749, 750, 751, 767, 770, 773, 774, 775, 776, 777, 778, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 815, 870, 877, 878, 884, 885, 890, 898, 900, 901, 903, 906, 937, 939, 946, 951, 966], "code": [19, 22, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275, 278, 281, 282, 283, 284, 286, 288, 289, 290, 294, 295, 299, 300, 302, 304, 305, 310, 312, 313, 314, 318, 321, 322, 323, 324, 328, 333, 334, 335, 336, 343, 352, 420, 512, 514, 524, 526, 529, 551, 552, 553, 561, 570, 578, 606, 676, 685, 701, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 823, 824, 825, 826, 827, 828, 844, 876, 878, 880, 900, 946, 949, 956], "stc": [19, 31, 33, 37, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 82, 84, 85, 87, 95, 120, 121, 122, 123, 132, 136, 137, 138, 144, 161, 162, 163, 185, 192, 193, 199, 203, 204, 205, 206, 207, 209, 214, 215, 224, 240, 253, 265, 274, 275, 285, 287, 288, 289, 291, 292, 294, 301, 302, 303, 318, 321, 331, 335, 340, 341, 343, 344, 345, 346, 347, 348, 349, 353, 354, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 431, 519, 528, 532, 538, 547, 548, 549, 550, 592, 599, 604, 605, 606, 607, 608, 609, 612, 614, 615, 619, 621, 706, 716, 729, 739, 753, 754, 755, 756, 781, 784, 785, 844, 904, 905, 909, 910, 966], "parametr": [21, 30, 96, 122, 141, 192, 193, 261, 262, 263, 278, 286, 303, 321, 333, 335, 336, 338, 388, 424, 526, 552, 605, 629, 635, 638, 703, 723, 768, 769, 776, 777, 779, 780, 782, 783, 791, 795, 870, 891, 959, 966], "scipi": [21, 45, 57, 125, 139, 183, 198, 199, 223, 230, 231, 234, 253, 256, 257, 258, 261, 264, 265, 271, 282, 283, 287, 288, 289, 291, 293, 295, 297, 302, 306, 310, 311, 312, 330, 333, 334, 335, 336, 340, 341, 342, 344, 345, 346, 347, 348, 349, 351, 388, 399, 429, 485, 487, 492, 496, 520, 521, 523, 524, 525, 528, 552, 553, 637, 638, 646, 653, 769, 771, 776, 777, 779, 780, 782, 783, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 815, 822, 844, 846, 863, 878, 881, 885, 889, 898, 900, 901, 906, 908, 946, 948, 952, 957], "statsmodel": [21, 256, 314], "option": [21, 141, 142, 154, 162, 167, 169, 177, 178, 183, 188, 189, 192, 193, 194, 195, 198, 199, 200, 205, 216, 224, 227, 230, 233, 238, 239, 241, 244, 246, 247, 251, 256, 257, 260, 266, 269, 271, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 312, 322, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 353, 354, 373, 379, 382, 425, 435, 441, 444, 458, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 506, 516, 517, 518, 520, 521, 523, 524, 525, 527, 529, 547, 549, 550, 552, 553, 566, 568, 575, 596, 600, 605, 606, 607, 608, 609, 611, 612, 616, 618, 620, 621, 622, 630, 635, 637, 638, 639, 648, 649, 650, 651, 653, 665, 676, 696, 706, 708, 718, 754, 759, 763, 774, 776, 777, 779, 780, 783, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 834, 844, 862, 863, 864, 870, 874, 876, 878, 880, 882, 885, 886, 889, 893, 896, 898, 899, 900, 901, 902, 904, 906, 908, 909, 910, 912, 952, 958, 960], "mass": [21, 63, 192, 256, 257, 262, 263, 283, 299, 303, 333, 338, 339, 344, 552, 635, 703, 738, 746, 752, 755, 770, 772, 773, 777, 791, 795, 834, 844, 914, 966], "univari": [21, 37, 192, 224, 256, 257, 262, 263, 278, 299, 303, 333, 338, 552, 635, 703, 770, 772, 773, 777, 791, 795, 966], "comparison": [21, 26, 53, 57, 64, 110, 124, 125, 129, 140, 151, 157, 178, 182, 184, 194, 203, 210, 211, 219, 230, 235, 239, 261, 264, 265, 266, 270, 271, 278, 283, 284, 305, 318, 322, 344, 345, 431, 638, 641, 677, 716, 773, 777, 778, 960, 966], "cluster": [21, 36, 53, 126, 130, 140, 192, 257, 262, 263, 267, 268, 271, 278, 284, 285, 286, 291, 292, 294, 298, 299, 301, 302, 303, 333, 335, 336, 338, 344, 345, 346, 388, 424, 431, 508, 526, 552, 604, 605, 619, 629, 635, 703, 716, 718, 723, 761, 769, 770, 772, 776, 777, 779, 780, 781, 791, 795, 844, 905, 966], "method": [21, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 85, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 115, 121, 122, 123, 125, 127, 129, 131, 132, 135, 136, 137, 138, 140, 141, 142, 143, 144, 149, 150, 160, 163, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 186, 187, 189, 192, 193, 194, 195, 196, 197, 199, 202, 204, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 246, 248, 249, 251, 252, 253, 257, 259, 261, 264, 266, 269, 270, 271, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 316, 318, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 357, 366, 367, 368, 369, 371, 372, 375, 376, 380, 381, 382, 383, 384, 388, 389, 390, 391, 394, 396, 397, 410, 413, 415, 418, 420, 425, 429, 430, 431, 436, 441, 442, 443, 445, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 506, 508, 520, 521, 523, 524, 525, 529, 536, 547, 548, 549, 550, 551, 552, 553, 554, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 589, 590, 593, 600, 601, 604, 605, 606, 607, 608, 609, 611, 612, 616, 617, 618, 620, 621, 622, 634, 635, 637, 638, 639, 646, 649, 650, 651, 652, 654, 658, 672, 674, 676, 679, 680, 681, 682, 683, 691, 693, 697, 700, 706, 708, 723, 724, 733, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 767, 770, 771, 773, 776, 777, 778, 779, 780, 782, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 806, 808, 814, 815, 823, 824, 826, 827, 828, 831, 833, 839, 840, 842, 844, 845, 846, 859, 862, 866, 871, 872, 873, 874, 877, 881, 885, 888, 890, 898, 902, 905, 946, 949, 951, 966], "adjac": [21, 97, 169, 173, 228, 257, 265, 266, 292, 294, 301, 304, 388, 399, 497, 526, 640, 643, 759, 760, 761, 762, 763, 764, 765, 769, 776, 777, 779, 780, 867], "matric": [21, 27, 36, 56, 57, 60, 61, 64, 65, 66, 67, 70, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 106, 113, 114, 129, 131, 144, 147, 148, 167, 170, 173, 176, 183, 190, 192, 193, 199, 203, 205, 206, 208, 216, 224, 256, 257, 274, 275, 278, 283, 286, 287, 292, 301, 304, 310, 318, 322, 359, 366, 425, 485, 493, 552, 553, 649, 665, 676, 688, 740, 741, 742, 754, 775, 792, 807, 835, 837, 872], "level": [21, 30, 34, 35, 53, 62, 70, 82, 126, 129, 130, 168, 169, 171, 177, 178, 182, 187, 192, 193, 195, 197, 198, 207, 208, 216, 223, 227, 229, 230, 233, 234, 235, 240, 253, 256, 258, 259, 260, 261, 262, 264, 265, 266, 271, 275, 278, 284, 287, 298, 301, 303, 309, 311, 319, 320, 322, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 495, 496, 498, 501, 502, 504, 506, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 535, 536, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 634, 635, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 735, 737, 738, 740, 741, 742, 743, 753, 754, 757, 759, 760, 761, 762, 763, 764, 765, 768, 770, 772, 776, 777, 778, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 814, 815, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 842, 843, 844, 846, 853, 862, 863, 871, 874, 878, 879, 880, 881, 882, 885, 886, 889, 890, 891, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 915, 917, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 948, 957, 959, 966], "oper": [22, 26, 29, 31, 33, 34, 37, 44, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 111, 118, 120, 121, 123, 132, 135, 136, 137, 138, 149, 153, 159, 167, 168, 169, 172, 173, 176, 178, 179, 182, 183, 189, 190, 191, 192, 193, 194, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 219, 224, 228, 229, 230, 231, 233, 234, 235, 238, 240, 244, 252, 253, 258, 259, 261, 264, 266, 278, 280, 282, 286, 288, 291, 293, 296, 297, 301, 303, 304, 305, 310, 311, 319, 321, 326, 327, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 351, 353, 354, 366, 367, 369, 371, 372, 382, 386, 387, 398, 404, 418, 424, 445, 446, 453, 461, 486, 491, 494, 501, 506, 507, 510, 523, 524, 525, 526, 530, 531, 532, 547, 548, 549, 550, 552, 553, 554, 561, 568, 590, 599, 600, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 631, 636, 638, 641, 643, 661, 668, 674, 690, 693, 695, 703, 708, 718, 729, 730, 741, 742, 743, 750, 752, 753, 754, 755, 768, 776, 777, 778, 779, 780, 783, 786, 789, 790, 791, 792, 795, 796, 797, 798, 823, 824, 825, 826, 827, 828, 830, 862, 870, 877, 903, 911, 914, 915, 938, 946, 949, 951, 958, 966], "python": [22, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 183, 184, 185, 186, 189, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 229, 231, 232, 235, 236, 237, 239, 240, 242, 243, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 276, 278, 282, 283, 284, 286, 287, 288, 289, 290, 292, 294, 295, 296, 300, 301, 302, 303, 305, 308, 309, 310, 312, 315, 318, 319, 321, 322, 323, 324, 327, 331, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 366, 367, 384, 387, 393, 398, 399, 402, 424, 436, 445, 448, 449, 450, 451, 454, 455, 456, 458, 459, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 504, 510, 514, 518, 526, 533, 534, 535, 537, 544, 552, 553, 568, 570, 572, 574, 578, 595, 598, 604, 605, 619, 629, 632, 638, 655, 658, 659, 661, 662, 665, 690, 696, 725, 727, 732, 734, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 815, 822, 823, 824, 826, 827, 839, 840, 855, 870, 876, 879, 893, 899, 907, 939, 941, 947, 949, 951, 952, 959, 961, 964, 966], "np": [22, 26, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 45, 48, 54, 57, 58, 59, 60, 61, 64, 66, 68, 69, 71, 73, 76, 84, 85, 87, 95, 97, 98, 99, 102, 109, 111, 118, 120, 121, 122, 123, 125, 128, 135, 139, 140, 141, 142, 143, 145, 147, 148, 154, 160, 162, 163, 164, 168, 170, 173, 177, 178, 183, 184, 185, 186, 187, 193, 195, 197, 199, 203, 204, 205, 208, 209, 210, 211, 212, 213, 218, 219, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 244, 245, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 284, 286, 288, 289, 303, 305, 308, 309, 311, 322, 327, 333, 334, 335, 336, 339, 340, 341, 344, 346, 347, 348, 349, 351, 384, 425, 440, 519, 520, 524, 541, 552, 553, 570, 587, 638, 653, 665, 674, 685, 755, 769, 781, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 814, 822, 824, 827, 844, 853, 860, 865, 870, 877, 900, 904, 906, 909, 910], "ndarrai": [22, 167, 244, 253, 271, 286, 287, 292, 301, 308, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 352, 366, 367, 375, 391, 415, 421, 434, 436, 440, 441, 484, 485, 486, 489, 492, 497, 501, 505, 511, 513, 514, 521, 522, 523, 525, 526, 528, 529, 530, 551, 552, 553, 556, 592, 598, 613, 633, 637, 638, 639, 645, 646, 649, 650, 651, 653, 660, 664, 665, 669, 670, 673, 674, 691, 703, 712, 738, 739, 754, 768, 769, 770, 774, 775, 776, 777, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 809, 812, 814, 815, 822, 823, 824, 825, 826, 827, 832, 833, 834, 844, 845, 849, 860, 862, 863, 865, 878, 879, 882, 884, 885, 887, 888, 901, 904, 905, 906, 908, 909, 910, 936, 939], "A": [22, 25, 30, 34, 35, 37, 42, 45, 47, 52, 57, 61, 68, 69, 70, 97, 101, 103, 106, 110, 116, 129, 131, 141, 148, 149, 155, 156, 159, 160, 162, 164, 169, 170, 178, 182, 184, 187, 188, 189, 193, 195, 196, 198, 199, 202, 207, 216, 217, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 244, 246, 247, 250, 253, 256, 257, 258, 260, 264, 265, 266, 269, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 293, 294, 295, 298, 299, 300, 301, 302, 307, 309, 311, 312, 316, 318, 319, 320, 321, 322, 324, 327, 328, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 357, 359, 366, 374, 380, 382, 385, 386, 387, 390, 391, 394, 410, 425, 428, 431, 436, 437, 439, 440, 442, 452, 460, 461, 464, 466, 477, 478, 487, 489, 493, 502, 507, 509, 510, 520, 521, 522, 523, 524, 528, 536, 537, 538, 542, 547, 552, 553, 554, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 590, 591, 598, 605, 606, 612, 620, 628, 630, 631, 633, 636, 637, 638, 639, 646, 652, 653, 657, 658, 662, 663, 665, 674, 677, 683, 685, 691, 693, 696, 703, 724, 730, 733, 738, 741, 742, 743, 749, 752, 753, 755, 766, 769, 770, 772, 773, 775, 776, 777, 778, 779, 780, 781, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 810, 812, 815, 822, 824, 825, 827, 828, 831, 834, 844, 848, 859, 861, 862, 864, 866, 869, 870, 872, 876, 882, 883, 884, 886, 887, 890, 899, 900, 902, 904, 907, 908, 909, 951, 964], "implement": [22, 57, 97, 193, 196, 206, 224, 231, 233, 238, 253, 271, 281, 286, 299, 307, 309, 311, 314, 316, 323, 326, 330, 338, 357, 358, 360, 372, 402, 425, 431, 485, 492, 493, 498, 502, 547, 549, 550, 552, 553, 600, 604, 605, 606, 607, 608, 609, 611, 612, 622, 638, 639, 646, 653, 658, 665, 691, 713, 773, 821, 823, 824, 831, 899, 951, 959], "inspir": [22, 171, 311, 509, 524, 834], "matlab": [22, 30, 45, 223, 278, 287, 314, 319, 323, 373, 491, 573, 685, 701, 705, 948, 958, 959], "sheraz": [22, 147, 155, 278, 284, 287, 288, 654], "khan": [22, 147, 155, 278, 284, 287, 288, 654], "spm": [22, 28, 32, 53, 152, 224, 300, 330, 333, 335, 336, 337, 338, 344, 424, 425, 480, 526, 566, 600, 604, 605, 616, 638, 656, 844, 966], "routin": [23, 152, 212, 231, 275, 298, 299, 314, 528, 638, 676, 917, 918], "ui_ev": [23, 275, 309, 965], "api": [23, 169, 196, 220, 224, 247, 256, 269, 297, 323, 486, 626, 789, 791, 795, 844, 854, 859, 960, 962], "inter": [23, 135, 142, 278, 330, 333, 334, 335, 336, 342, 351, 485, 492, 509, 552, 553, 637, 638, 653, 741, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 823, 824, 826, 827, 863, 878, 885, 889, 898, 901, 906, 908], "figur": [23, 29, 30, 31, 34, 42, 45, 48, 54, 63, 64, 71, 75, 80, 81, 120, 131, 137, 139, 143, 144, 146, 152, 154, 162, 163, 168, 169, 172, 177, 183, 185, 187, 192, 193, 197, 205, 206, 207, 210, 211, 213, 219, 223, 224, 230, 232, 233, 235, 238, 239, 247, 253, 256, 261, 266, 270, 276, 277, 286, 287, 289, 291, 292, 293, 294, 295, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 320, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 382, 383, 396, 424, 485, 492, 544, 552, 553, 596, 637, 638, 653, 658, 706, 716, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 823, 824, 826, 827, 844, 846, 847, 848, 851, 854, 855, 859, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 913, 914, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 946, 951, 952, 966], "commun": [23, 218, 223, 224, 253, 278, 311, 313, 332, 333, 334, 335, 336, 491, 789, 790, 791, 795, 796, 797, 798, 825, 828, 956], "The": [23, 29, 30, 31, 33, 34, 35, 37, 40, 41, 42, 44, 45, 47, 53, 57, 60, 64, 67, 69, 70, 71, 72, 73, 74, 75, 78, 84, 85, 87, 90, 92, 94, 96, 101, 102, 103, 106, 107, 108, 109, 110, 111, 115, 122, 123, 129, 131, 132, 135, 137, 138, 140, 141, 142, 143, 144, 148, 155, 156, 161, 162, 163, 164, 165, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 198, 199, 200, 201, 204, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 223, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 247, 248, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 457, 458, 459, 460, 461, 462, 464, 467, 477, 478, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 563, 564, 565, 566, 568, 570, 573, 574, 575, 576, 577, 578, 581, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 727, 728, 729, 730, 732, 733, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 847, 848, 850, 851, 853, 854, 855, 856, 857, 858, 859, 860, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 940, 941, 942, 943, 945, 946, 947, 948, 949, 951, 955, 956, 958, 962, 966], "allow": [23, 38, 45, 66, 69, 70, 72, 87, 122, 132, 140, 143, 144, 148, 164, 167, 168, 169, 170, 171, 173, 177, 178, 184, 185, 187, 193, 196, 197, 199, 205, 217, 220, 224, 229, 230, 235, 244, 245, 247, 256, 257, 258, 275, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 320, 321, 322, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 338, 340, 341, 344, 346, 347, 348, 349, 360, 361, 364, 378, 382, 405, 410, 418, 425, 444, 485, 488, 491, 492, 493, 495, 526, 543, 551, 552, 553, 556, 568, 569, 572, 574, 607, 609, 612, 614, 615, 616, 620, 638, 639, 643, 665, 674, 694, 700, 706, 724, 738, 754, 756, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 823, 824, 826, 827, 838, 842, 867, 876, 878, 889, 891, 899, 902, 951], "each": [23, 30, 35, 36, 37, 41, 42, 45, 50, 54, 58, 59, 64, 67, 70, 71, 94, 97, 107, 110, 121, 122, 123, 129, 131, 135, 136, 137, 140, 141, 143, 145, 148, 156, 160, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 182, 183, 185, 187, 188, 189, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 207, 208, 210, 212, 213, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 258, 260, 261, 264, 265, 266, 269, 271, 274, 275, 281, 283, 284, 289, 291, 292, 294, 295, 304, 305, 310, 311, 315, 318, 319, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 355, 358, 359, 366, 367, 373, 380, 384, 387, 391, 411, 413, 415, 416, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 433, 436, 438, 443, 458, 477, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 502, 508, 509, 510, 518, 519, 523, 524, 525, 526, 527, 528, 529, 537, 543, 547, 549, 550, 551, 552, 553, 554, 557, 568, 577, 587, 588, 592, 594, 596, 597, 605, 609, 611, 612, 614, 615, 622, 628, 637, 638, 639, 641, 643, 646, 653, 655, 657, 658, 662, 664, 665, 671, 675, 676, 678, 680, 696, 700, 706, 719, 722, 730, 737, 738, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 758, 760, 769, 771, 772, 774, 776, 777, 778, 779, 780, 781, 784, 785, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 812, 814, 815, 822, 826, 827, 834, 844, 845, 849, 853, 862, 863, 864, 866, 867, 868, 870, 871, 872, 873, 874, 877, 878, 880, 882, 883, 884, 885, 886, 889, 897, 898, 899, 900, 901, 905, 906, 907, 908, 911, 915, 916, 925, 926, 937, 939, 944, 946, 951, 952, 958], "other": [23, 30, 69, 88, 97, 101, 110, 111, 140, 168, 170, 172, 177, 178, 182, 183, 187, 193, 195, 196, 197, 199, 202, 204, 207, 208, 216, 217, 219, 220, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 240, 244, 246, 247, 252, 253, 256, 260, 269, 271, 274, 275, 280, 282, 287, 292, 293, 294, 295, 302, 305, 306, 309, 312, 314, 318, 319, 320, 321, 325, 327, 329, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 352, 382, 394, 395, 424, 431, 436, 491, 493, 502, 504, 506, 508, 509, 514, 518, 530, 534, 535, 547, 549, 550, 552, 553, 565, 580, 605, 616, 627, 637, 638, 665, 671, 676, 690, 694, 696, 707, 710, 716, 719, 725, 727, 738, 749, 754, 760, 775, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 844, 859, 867, 874, 876, 878, 889, 893, 899, 904, 925, 928, 929, 939, 944, 946, 951, 958, 959, 960, 962], "chang": [23, 45, 57, 70, 71, 142, 163, 169, 172, 176, 178, 183, 185, 188, 194, 197, 198, 199, 202, 203, 205, 211, 216, 217, 219, 220, 223, 228, 233, 234, 235, 239, 240, 245, 246, 247, 252, 256, 259, 264, 266, 271, 274, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 297, 299, 301, 302, 313, 315, 318, 322, 325, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 366, 367, 374, 377, 379, 382, 390, 405, 410, 412, 414, 418, 431, 433, 459, 485, 492, 505, 506, 509, 514, 519, 520, 521, 522, 523, 524, 526, 528, 529, 538, 544, 547, 549, 550, 552, 553, 561, 568, 569, 574, 577, 578, 592, 596, 599, 600, 616, 626, 627, 629, 630, 631, 637, 638, 640, 645, 653, 661, 665, 672, 674, 676, 678, 698, 700, 706, 708, 724, 733, 735, 737, 738, 754, 781, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 813, 823, 839, 844, 846, 856, 862, 863, 864, 870, 871, 874, 875, 876, 877, 878, 880, 882, 885, 886, 887, 889, 891, 893, 896, 898, 899, 900, 901, 902, 904, 906, 908, 909, 910, 911, 914, 916, 918, 937, 946, 949, 953, 958, 960], "one": [23, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 50, 57, 59, 60, 66, 67, 68, 69, 71, 72, 74, 75, 76, 84, 85, 92, 95, 97, 100, 101, 102, 104, 109, 110, 111, 113, 114, 115, 118, 122, 124, 125, 127, 131, 137, 139, 141, 142, 143, 145, 149, 158, 160, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 199, 203, 204, 205, 206, 207, 208, 209, 211, 213, 216, 217, 219, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 258, 259, 260, 261, 265, 270, 271, 274, 281, 283, 286, 287, 289, 291, 292, 293, 295, 298, 301, 303, 306, 309, 311, 312, 318, 319, 320, 321, 322, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 355, 358, 366, 367, 381, 382, 384, 388, 389, 391, 424, 426, 427, 429, 431, 432, 436, 452, 461, 464, 466, 477, 478, 484, 485, 491, 492, 495, 498, 500, 504, 507, 508, 509, 516, 517, 519, 520, 526, 535, 542, 543, 544, 550, 551, 552, 553, 557, 561, 570, 572, 588, 590, 592, 594, 599, 614, 615, 621, 622, 624, 627, 637, 638, 639, 640, 641, 645, 655, 661, 662, 666, 669, 670, 671, 673, 684, 687, 696, 698, 706, 707, 713, 725, 727, 733, 738, 741, 755, 760, 770, 771, 776, 777, 778, 779, 780, 782, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 805, 812, 822, 823, 824, 826, 827, 829, 832, 833, 834, 844, 846, 855, 859, 862, 863, 864, 865, 870, 877, 878, 880, 881, 882, 883, 885, 886, 887, 889, 891, 898, 901, 904, 905, 906, 907, 908, 909, 910, 925, 937, 939, 946, 951, 952, 955, 956, 960], "trigger": [23, 31, 33, 36, 121, 131, 137, 171, 193, 195, 198, 204, 209, 212, 216, 217, 218, 219, 229, 234, 239, 241, 256, 275, 281, 283, 284, 300, 309, 311, 318, 321, 322, 325, 326, 425, 430, 526, 527, 552, 553, 561, 568, 570, 576, 578, 584, 656, 667, 703, 736, 754], "anoth": [23, 45, 57, 71, 97, 101, 114, 123, 155, 168, 170, 171, 172, 176, 178, 182, 183, 188, 194, 198, 207, 216, 229, 230, 233, 234, 238, 240, 245, 246, 247, 256, 261, 287, 309, 311, 312, 319, 321, 322, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 347, 348, 349, 351, 384, 425, 426, 428, 430, 431, 488, 495, 498, 501, 502, 511, 528, 541, 543, 552, 553, 583, 596, 599, 600, 611, 612, 621, 622, 624, 643, 650, 651, 673, 737, 738, 740, 741, 742, 754, 760, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 832, 833, 834, 846, 867, 878, 881, 899, 900, 951, 960], "For": [23, 26, 30, 41, 45, 60, 69, 70, 73, 76, 81, 90, 94, 96, 97, 101, 107, 123, 129, 131, 137, 141, 143, 148, 149, 152, 161, 162, 163, 167, 170, 171, 172, 173, 176, 177, 178, 182, 183, 185, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 244, 245, 247, 251, 256, 258, 260, 261, 264, 266, 269, 270, 271, 274, 275, 282, 283, 291, 294, 304, 308, 310, 311, 313, 318, 319, 320, 321, 322, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 352, 366, 367, 384, 395, 405, 425, 429, 430, 431, 438, 441, 442, 443, 452, 458, 477, 478, 484, 485, 487, 488, 491, 492, 493, 495, 497, 498, 502, 506, 507, 508, 509, 511, 514, 515, 516, 518, 520, 521, 523, 524, 526, 527, 528, 529, 542, 543, 546, 547, 549, 550, 551, 552, 553, 555, 559, 561, 568, 574, 577, 578, 580, 603, 611, 616, 620, 621, 622, 625, 637, 638, 639, 640, 649, 654, 657, 658, 662, 665, 676, 680, 687, 694, 703, 719, 723, 725, 730, 733, 735, 738, 769, 774, 775, 776, 777, 779, 780, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 816, 823, 824, 826, 827, 834, 844, 855, 861, 862, 864, 870, 871, 876, 877, 878, 880, 882, 885, 886, 887, 889, 890, 891, 893, 899, 901, 902, 906, 908, 910, 946, 949, 951, 954, 957, 958, 961, 962], "exampl": [23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 277, 278, 282, 283, 284, 285, 287, 288, 291, 292, 295, 299, 302, 303, 304, 305, 307, 309, 311, 318, 320, 321, 322, 323, 328, 349, 379, 405, 433, 439, 440, 441, 442, 452, 458, 466, 478, 484, 507, 512, 529, 551, 555, 577, 580, 626, 648, 657, 685, 702, 725, 734, 797, 798, 822, 824, 834, 842, 849, 876, 878, 885, 889, 891, 899, 901, 906, 910, 946, 947, 951, 955, 959, 966], "cursor": [23, 285, 845], "updat": [23, 173, 197, 199, 206, 217, 228, 230, 235, 238, 240, 244, 247, 271, 274, 275, 283, 285, 286, 288, 289, 291, 292, 293, 294, 295, 299, 303, 304, 305, 309, 310, 311, 312, 319, 325, 330, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 357, 372, 436, 442, 444, 449, 450, 451, 452, 454, 455, 456, 458, 459, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 520, 537, 547, 552, 553, 574, 604, 639, 658, 728, 732, 789, 831, 844, 917, 951, 956], "current": [23, 26, 33, 38, 47, 48, 53, 55, 56, 57, 60, 67, 68, 70, 85, 105, 106, 108, 109, 112, 122, 147, 152, 167, 176, 188, 189, 192, 193, 198, 204, 205, 206, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 228, 230, 238, 240, 246, 253, 264, 266, 278, 283, 285, 286, 287, 291, 304, 305, 309, 310, 311, 312, 314, 318, 319, 321, 325, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 347, 348, 349, 353, 354, 366, 367, 388, 390, 396, 424, 431, 436, 444, 445, 448, 491, 506, 509, 518, 523, 526, 528, 547, 551, 552, 553, 559, 564, 568, 580, 584, 599, 600, 605, 608, 638, 647, 649, 650, 651, 659, 665, 676, 706, 713, 733, 753, 770, 772, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 821, 844, 852, 854, 856, 857, 858, 859, 863, 867, 870, 876, 899, 908, 909, 916, 946, 955, 958, 960, 966], "scenario": [23, 275], "two": [23, 30, 31, 33, 38, 42, 45, 48, 58, 63, 68, 71, 73, 80, 81, 92, 94, 96, 97, 99, 101, 102, 103, 108, 111, 115, 118, 140, 143, 145, 159, 160, 162, 164, 168, 169, 171, 173, 177, 178, 182, 183, 185, 187, 193, 195, 196, 197, 198, 199, 202, 205, 207, 218, 219, 220, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 253, 256, 258, 260, 264, 266, 269, 271, 275, 278, 284, 285, 288, 292, 293, 299, 303, 304, 306, 307, 311, 312, 319, 321, 322, 327, 333, 334, 335, 336, 339, 340, 341, 344, 345, 347, 348, 349, 366, 367, 382, 390, 425, 429, 430, 441, 442, 443, 477, 485, 487, 492, 496, 500, 508, 509, 519, 521, 523, 524, 525, 528, 529, 547, 549, 550, 552, 553, 577, 578, 592, 611, 616, 633, 638, 641, 648, 653, 659, 665, 674, 675, 678, 690, 691, 730, 733, 742, 766, 770, 771, 772, 774, 776, 777, 778, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 814, 815, 825, 834, 844, 846, 850, 853, 876, 877, 878, 881, 886, 893, 899, 904, 925, 946, 956, 958], "draw": [23, 183, 197, 203, 204, 230, 258, 275, 280, 285, 295, 309, 322, 330, 333, 334, 335, 336, 338, 342, 382, 485, 492, 552, 553, 637, 638, 653, 658, 669, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 846, 863, 869, 870, 877, 878, 880, 881, 885, 889, 892, 896, 898, 901, 902, 906, 908, 917, 918], "same": [23, 30, 44, 45, 54, 70, 71, 80, 81, 84, 97, 101, 102, 103, 110, 118, 127, 131, 137, 141, 142, 162, 167, 168, 169, 171, 176, 177, 178, 183, 187, 188, 189, 195, 196, 197, 198, 202, 203, 205, 210, 216, 218, 219, 220, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 245, 246, 247, 251, 256, 257, 258, 260, 261, 264, 265, 266, 269, 274, 275, 283, 284, 285, 287, 288, 292, 294, 295, 301, 304, 307, 308, 310, 311, 319, 322, 323, 325, 327, 330, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 353, 354, 356, 366, 369, 371, 379, 384, 387, 398, 411, 424, 425, 429, 430, 431, 443, 445, 462, 485, 492, 493, 498, 506, 509, 510, 519, 520, 521, 523, 524, 525, 535, 538, 542, 543, 547, 551, 552, 553, 560, 561, 568, 569, 580, 581, 585, 624, 637, 638, 639, 640, 649, 652, 655, 656, 657, 665, 676, 677, 690, 694, 700, 701, 716, 734, 735, 739, 740, 741, 742, 749, 754, 755, 771, 775, 776, 777, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 814, 815, 821, 822, 823, 824, 825, 826, 827, 828, 834, 844, 850, 855, 862, 863, 870, 876, 877, 878, 880, 882, 885, 887, 889, 898, 899, 901, 902, 904, 905, 906, 907, 908, 944, 946, 949, 962], "window": [23, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 53, 60, 68, 85, 98, 99, 100, 102, 104, 105, 109, 110, 111, 112, 115, 121, 127, 128, 131, 132, 136, 137, 141, 142, 143, 149, 152, 160, 163, 164, 168, 169, 170, 171, 173, 178, 193, 198, 199, 207, 210, 213, 219, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 246, 247, 251, 257, 261, 269, 270, 271, 280, 281, 285, 287, 288, 289, 291, 292, 293, 294, 295, 297, 303, 304, 306, 307, 309, 310, 311, 325, 327, 328, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 359, 412, 414, 418, 485, 486, 490, 492, 496, 498, 501, 509, 511, 514, 520, 521, 523, 524, 525, 534, 544, 550, 552, 553, 559, 611, 612, 638, 640, 648, 665, 668, 674, 676, 684, 741, 742, 775, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 803, 806, 808, 811, 814, 815, 819, 820, 823, 824, 825, 826, 827, 828, 844, 876, 877, 878, 879, 885, 893, 899, 900, 904, 909, 952, 955, 956, 958, 966], "stai": [23, 171, 230, 231, 251, 253, 274, 311, 321, 333, 334, 335, 336, 552, 553, 554, 738], "sync": [23, 150, 171, 327, 338, 514, 570, 690], "author": [23, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 168, 184, 186, 188, 206, 207, 209, 210, 211, 212, 213, 219, 223, 230, 237, 241, 253, 256, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275, 278, 311, 312, 316, 683, 812, 822, 958], "marijn": [23, 58, 59, 71, 87, 100, 131, 188, 253, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 309, 310, 366, 367, 964], "van": [23, 58, 59, 69, 71, 87, 100, 131, 155, 188, 207, 230, 253, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 309, 310, 322, 345, 366, 367, 431, 460, 646, 964], "vliet": [23, 58, 59, 71, 87, 100, 131, 188, 253, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 309, 310, 366, 367, 964], "w": [23, 31, 47, 58, 59, 65, 71, 87, 88, 100, 110, 131, 159, 164, 169, 179, 183, 187, 188, 205, 209, 223, 224, 230, 239, 253, 256, 269, 274, 275, 278, 291, 296, 300, 322, 330, 332, 333, 334, 335, 336, 344, 348, 366, 367, 379, 391, 441, 485, 492, 552, 553, 605, 613, 616, 637, 638, 674, 716, 746, 751, 771, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 821, 822, 825, 828, 863, 878, 884, 885, 899, 901, 906, 907, 908], "m": [23, 26, 27, 29, 30, 31, 33, 34, 42, 44, 45, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 70, 71, 72, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 96, 98, 99, 100, 106, 111, 113, 114, 124, 125, 126, 128, 129, 131, 133, 137, 138, 141, 142, 144, 147, 148, 152, 155, 162, 164, 167, 168, 170, 171, 172, 176, 177, 178, 183, 184, 185, 186, 188, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 223, 228, 229, 230, 233, 235, 237, 238, 240, 241, 245, 246, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 274, 275, 278, 280, 282, 283, 291, 304, 311, 316, 319, 321, 322, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 369, 374, 375, 395, 400, 405, 407, 409, 412, 414, 415, 416, 418, 425, 430, 436, 445, 452, 460, 477, 478, 485, 487, 489, 491, 492, 493, 496, 506, 509, 521, 523, 524, 528, 545, 546, 549, 550, 552, 553, 556, 569, 572, 593, 601, 605, 613, 616, 620, 637, 638, 640, 646, 647, 649, 652, 653, 655, 656, 661, 663, 664, 665, 674, 676, 681, 684, 689, 700, 738, 742, 746, 749, 751, 754, 759, 760, 761, 763, 764, 770, 775, 776, 777, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 825, 828, 844, 846, 848, 863, 870, 878, 880, 881, 882, 885, 886, 889, 898, 899, 901, 904, 906, 908, 909, 910, 914, 916, 949, 959], "vanvliet": [23, 58, 59, 71, 87, 100, 131, 188, 253, 275], "gmail": [23, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 58, 59, 60, 64, 65, 68, 69, 70, 71, 72, 76, 77, 83, 84, 87, 92, 96, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 115, 118, 121, 122, 123, 127, 129, 131, 137, 140, 141, 142, 146, 148, 149, 152, 154, 155, 156, 159, 160, 162, 163, 164, 168, 184, 186, 188, 206, 207, 209, 210, 211, 213, 219, 223, 237, 253, 256, 260, 261, 264, 265, 266, 270, 271, 274, 275], "com": [23, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 58, 59, 60, 64, 65, 68, 69, 70, 71, 72, 76, 77, 83, 84, 87, 92, 96, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 115, 118, 121, 122, 123, 129, 131, 137, 140, 141, 142, 146, 147, 148, 149, 152, 154, 155, 156, 159, 160, 162, 163, 164, 168, 184, 186, 187, 188, 206, 207, 209, 210, 211, 213, 219, 223, 237, 252, 253, 256, 260, 261, 264, 265, 266, 270, 271, 274, 275, 278, 311, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 460, 552, 553, 561, 946, 960], "demonstr": [24, 31, 45, 53, 59, 67, 69, 70, 71, 90, 94, 97, 98, 100, 101, 107, 111, 127, 131, 142, 145, 172, 173, 178, 179, 188, 195, 197, 198, 199, 218, 220, 223, 227, 229, 230, 232, 233, 236, 238, 244, 252, 253, 256, 264, 269, 295, 319, 322, 323, 655, 946, 960], "00": [25, 26, 27, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 58, 59, 60, 67, 68, 70, 71, 72, 76, 82, 85, 93, 97, 98, 99, 100, 101, 104, 108, 109, 110, 111, 112, 115, 116, 118, 119, 121, 124, 127, 129, 130, 131, 132, 134, 136, 137, 140, 141, 142, 143, 147, 149, 152, 157, 160, 163, 166, 168, 170, 171, 173, 175, 178, 181, 183, 184, 185, 186, 187, 191, 194, 195, 196, 199, 201, 203, 207, 208, 209, 210, 211, 212, 213, 215, 218, 219, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 273, 274, 277, 278, 605, 637, 646, 966], "000": [25, 26, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 60, 68, 85, 90, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 115, 116, 118, 121, 122, 123, 127, 137, 140, 141, 142, 143, 147, 149, 152, 156, 157, 160, 163, 167, 168, 169, 170, 171, 173, 176, 178, 179, 186, 193, 194, 195, 199, 206, 208, 209, 210, 211, 212, 213, 218, 219, 222, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 245, 246, 247, 250, 251, 253, 257, 259, 260, 261, 270, 578, 702, 966], "total": [25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 277, 292, 301, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 429, 446, 502, 552, 553, 640, 693, 784, 793, 794, 799, 800, 878, 904, 909, 966], "execut": [25, 32, 46, 51, 58, 82, 93, 112, 116, 119, 130, 134, 157, 160, 163, 166, 175, 181, 182, 191, 198, 199, 201, 215, 222, 226, 227, 243, 249, 250, 255, 263, 268, 273, 277, 292, 293, 304, 311, 322, 331, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 447, 452, 488, 495, 498, 501, 502, 528, 541, 543, 544, 552, 553, 596, 599, 600, 611, 612, 621, 622, 638, 643, 650, 651, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 791, 793, 794, 795, 797, 799, 800, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 846, 874, 876, 878, 881, 893, 899, 900, 902, 951, 952, 955, 956, 966], "auto_exampl": [25, 32, 46, 51, 82, 93, 112, 116, 119, 130, 134, 157], "mem": [25, 32, 46, 51, 82, 93, 112, 116, 119, 130, 134, 157, 166, 175, 181, 191, 201, 215, 222, 226, 243, 249, 250, 255, 263, 268, 273, 277, 966], "mb": [25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 277, 333, 334, 343, 552, 553, 876, 899, 958, 963, 966], "n": [25, 34, 36, 69, 71, 97, 110, 116, 121, 137, 142, 164, 168, 171, 176, 178, 184, 187, 197, 199, 202, 216, 230, 233, 234, 235, 236, 244, 250, 251, 253, 256, 258, 260, 261, 271, 278, 294, 302, 306, 309, 319, 321, 322, 325, 327, 328, 332, 333, 334, 335, 336, 338, 339, 340, 341, 344, 345, 347, 348, 349, 351, 382, 391, 410, 421, 422, 423, 426, 427, 428, 431, 440, 452, 477, 478, 500, 506, 509, 520, 522, 543, 552, 553, 574, 620, 637, 638, 642, 645, 655, 656, 665, 676, 724, 749, 762, 763, 764, 765, 769, 774, 789, 790, 791, 795, 796, 797, 798, 808, 809, 812, 822, 823, 824, 826, 827, 844, 848, 849, 865, 880, 887, 904, 909, 910, 916, 946, 949, 960], "go": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 311, 312, 322, 346, 428, 535, 552, 553, 638, 738, 946, 947, 961], "end": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 282, 286, 289, 294, 295, 308, 311, 312, 321, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 356, 357, 382, 387, 394, 410, 412, 414, 425, 428, 430, 485, 491, 492, 497, 503, 508, 509, 510, 514, 525, 526, 552, 553, 566, 574, 575, 581, 589, 598, 611, 619, 621, 622, 623, 637, 638, 641, 655, 656, 668, 686, 688, 690, 697, 699, 706, 707, 708, 714, 718, 722, 724, 745, 746, 747, 748, 749, 751, 754, 766, 789, 790, 791, 792, 795, 796, 797, 798, 801, 802, 803, 804, 805, 806, 807, 809, 829, 831, 844, 876, 885, 890, 893, 899, 906, 932, 933, 934, 935, 937, 938, 942, 943, 944, 945, 946, 951], "download": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 284, 293, 294, 307, 311, 319, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 951, 953, 954, 955, 959, 960], "full": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 269, 270, 271, 274, 275, 282, 287, 288, 292, 293, 294, 295, 301, 303, 305, 306, 307, 308, 310, 311, 312, 318, 319, 333, 334, 335, 336, 338, 340, 341, 344, 346, 347, 349, 366, 367, 369, 371, 388, 389, 425, 429, 430, 431, 441, 442, 443, 485, 490, 492, 493, 498, 515, 518, 528, 529, 547, 549, 550, 552, 553, 604, 605, 616, 619, 635, 638, 703, 706, 769, 775, 776, 778, 780, 791, 795, 810, 812, 814, 821, 822, 824, 827, 834, 844, 862, 864, 867, 870, 876, 878, 886, 893, 899, 904, 909, 911, 912, 915, 951, 958, 962, 966], "here": [26, 29, 30, 31, 33, 35, 36, 37, 38, 41, 44, 45, 47, 54, 57, 59, 60, 64, 67, 68, 69, 71, 92, 94, 97, 98, 102, 103, 109, 110, 111, 118, 122, 123, 128, 129, 132, 137, 139, 140, 142, 144, 145, 148, 149, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 183, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 251, 253, 256, 257, 258, 260, 261, 264, 265, 266, 270, 271, 274, 290, 311, 319, 322, 323, 339, 343, 344, 346, 348, 349, 404, 431, 458, 464, 491, 502, 509, 525, 551, 590, 600, 603, 613, 638, 655, 674, 677, 691, 693, 706, 738, 741, 742, 743, 752, 753, 755, 776, 777, 778, 779, 780, 784, 795, 796, 879, 910, 946, 948, 949, 951, 959, 960], "we": [26, 29, 30, 31, 33, 35, 36, 37, 39, 42, 44, 45, 47, 48, 52, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 80, 84, 85, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 110, 111, 114, 115, 118, 122, 123, 129, 131, 135, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 155, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 278, 282, 283, 288, 294, 303, 304, 305, 307, 308, 310, 312, 314, 316, 318, 319, 320, 322, 330, 333, 334, 335, 336, 338, 340, 343, 344, 346, 348, 351, 377, 400, 493, 495, 509, 515, 516, 517, 518, 525, 535, 552, 553, 554, 586, 613, 638, 655, 675, 683, 749, 844, 845, 862, 871, 886, 904, 926, 946, 949, 951, 956, 957, 960, 961], "tutori": [26, 53, 58, 89, 97, 100, 101, 111, 137, 150, 153, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 204, 205, 207, 208, 209, 214, 215, 218, 219, 221, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 258, 261, 262, 264, 266, 267, 269, 271, 272, 278, 280, 287, 288, 292, 293, 294, 295, 296, 304, 308, 309, 310, 311, 319, 321, 322, 323, 330, 331, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 366, 372, 425, 430, 485, 505, 514, 520, 523, 526, 528, 552, 553, 564, 566, 601, 626, 629, 635, 676, 691, 799, 823, 824, 826, 827, 862, 874, 886, 914, 946, 948, 966], "1": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 251, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 311, 312, 315, 316, 318, 319, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 359, 366, 367, 368, 369, 371, 374, 377, 378, 379, 382, 384, 388, 391, 392, 393, 405, 412, 413, 414, 418, 424, 425, 426, 427, 428, 430, 431, 436, 439, 440, 443, 452, 459, 460, 461, 465, 466, 467, 477, 478, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 509, 514, 515, 516, 517, 518, 520, 521, 523, 524, 525, 526, 528, 529, 530, 541, 543, 544, 546, 547, 549, 550, 551, 552, 553, 561, 563, 568, 569, 570, 577, 578, 579, 584, 591, 592, 594, 596, 597, 598, 599, 600, 601, 603, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 629, 630, 631, 632, 635, 637, 638, 639, 640, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 661, 664, 665, 666, 667, 668, 669, 670, 671, 674, 676, 677, 678, 680, 683, 684, 685, 691, 698, 700, 702, 708, 710, 723, 729, 733, 735, 736, 737, 738, 739, 740, 741, 742, 745, 746, 747, 748, 749, 751, 753, 754, 756, 763, 764, 765, 768, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 819, 821, 822, 823, 824, 825, 826, 827, 828, 832, 834, 839, 844, 846, 849, 855, 859, 862, 863, 867, 870, 874, 875, 876, 877, 878, 880, 881, 882, 885, 886, 887, 889, 891, 893, 894, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 912, 914, 917, 946, 951, 952, 955, 957, 958, 960, 963, 966], "http": [26, 34, 41, 69, 97, 115, 141, 178, 182, 187, 198, 211, 224, 261, 278, 291, 311, 316, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 425, 438, 452, 458, 460, 477, 478, 493, 547, 552, 553, 561, 605, 639, 664, 734, 771, 773, 795, 825, 828, 840, 904, 946, 958, 960], "neuroimag": [26, 36, 38, 44, 45, 47, 61, 68, 72, 85, 86, 103, 122, 129, 141, 149, 155, 171, 182, 189, 192, 207, 211, 214, 215, 224, 240, 256, 257, 278, 316, 320, 321, 322, 323, 330, 331, 333, 334, 335, 336, 338, 339, 344, 371, 372, 425, 461, 489, 491, 492, 493, 503, 506, 526, 528, 547, 550, 564, 601, 606, 616, 620, 638, 652, 683, 746, 749, 751, 773, 776, 777, 778, 779, 780, 782, 783, 810, 812, 822, 862, 874, 886, 946, 959, 966], "usc": [26, 211], "edu": [26, 35, 50, 61, 63, 69, 73, 84, 95, 97, 129, 132, 141, 142, 143, 148, 161, 178, 182, 211, 241, 278, 322, 340, 344, 348, 438, 685, 904], "mediannervectf": 26, "mainak": [26, 72, 106, 113, 114, 219, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 299, 300, 301, 302, 307, 309, 316, 550, 964], "ja": [26, 72, 106, 113, 114, 219, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 299, 300, 301, 302, 307, 309, 316, 550, 964], "telecom": [26, 106, 114, 219], "paristech": [26, 106, 114, 219, 324, 964], "fr": [26, 33, 35, 36, 37, 39, 44, 45, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 86, 91, 106, 114, 120, 124, 125, 128, 135, 136, 138, 139, 145, 149, 154, 158, 159, 164, 186, 212, 219, 224, 258, 259, 260, 264, 265, 266, 270, 278, 288], "licens": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275, 289, 300, 319, 449, 450, 451, 458, 460], "bsd": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275, 312, 676], "claus": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275], "copyright": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275, 312], "contributor": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275, 278, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 946, 956, 959], "import": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 275, 278, 282, 283, 285, 287, 288, 292, 293, 294, 302, 305, 308, 310, 312, 318, 319, 320, 322, 327, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 382, 398, 445, 452, 477, 478, 525, 552, 553, 561, 563, 565, 568, 569, 570, 571, 572, 573, 574, 576, 580, 581, 582, 585, 586, 638, 659, 663, 685, 700, 701, 705, 719, 733, 754, 769, 771, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 839, 842, 844, 894, 944, 946, 949, 951, 952, 956, 959, 960, 961, 966], "numpi": [26, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 45, 48, 54, 57, 58, 59, 60, 61, 64, 66, 68, 71, 73, 76, 84, 85, 87, 90, 95, 97, 98, 99, 102, 109, 111, 118, 120, 121, 122, 123, 125, 128, 135, 139, 140, 141, 142, 143, 145, 147, 148, 154, 160, 162, 163, 164, 167, 168, 170, 173, 176, 177, 178, 183, 184, 185, 186, 187, 193, 195, 197, 198, 199, 203, 204, 205, 208, 209, 210, 211, 212, 213, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 244, 245, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 282, 283, 284, 285, 286, 289, 291, 292, 293, 295, 301, 303, 309, 312, 320, 321, 327, 330, 333, 334, 335, 336, 340, 341, 342, 343, 344, 347, 348, 349, 485, 491, 492, 493, 523, 524, 525, 549, 550, 551, 552, 553, 590, 638, 653, 674, 685, 693, 741, 742, 743, 752, 753, 755, 769, 774, 776, 777, 778, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 806, 812, 822, 823, 824, 825, 826, 827, 828, 844, 862, 870, 877, 878, 880, 885, 898, 948, 952], "print": [26, 27, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 96, 97, 98, 99, 100, 102, 104, 106, 107, 110, 111, 113, 114, 115, 120, 121, 122, 123, 124, 125, 128, 129, 131, 132, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 152, 156, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 173, 176, 177, 178, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 202, 203, 206, 208, 209, 210, 211, 212, 213, 219, 224, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 241, 244, 245, 246, 251, 252, 253, 256, 257, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 278, 280, 291, 295, 300, 304, 305, 308, 319, 325, 333, 334, 335, 336, 425, 466, 520, 526, 552, 553, 580, 587, 734, 735, 788, 793, 794, 795, 796, 839, 846, 853, 870, 881, 883, 886, 946, 956, 958], "__doc__": [26, 27, 30, 33, 34, 36, 37, 39, 40, 41, 42, 44, 48, 50, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 102, 104, 106, 107, 111, 113, 114, 115, 120, 121, 122, 123, 124, 125, 128, 131, 132, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 148, 149, 152, 156, 158, 159, 160, 163, 202, 206, 210, 211, 259, 260, 265, 266], "tmin": [26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 54, 57, 58, 59, 60, 61, 64, 66, 68, 71, 72, 75, 77, 85, 86, 87, 96, 98, 99, 100, 101, 110, 111, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 138, 139, 140, 141, 142, 145, 149, 150, 156, 159, 160, 163, 164, 167, 168, 169, 171, 172, 176, 178, 189, 193, 199, 204, 207, 208, 210, 211, 212, 213, 219, 223, 224, 228, 229, 233, 237, 239, 240, 241, 244, 251, 252, 253, 257, 258, 259, 260, 261, 264, 266, 269, 270, 271, 282, 284, 289, 292, 293, 295, 297, 302, 303, 304, 306, 309, 310, 318, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 412, 414, 425, 426, 427, 430, 491, 497, 509, 511, 552, 553, 592, 611, 628, 650, 651, 655, 656, 668, 756, 775, 781, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 809, 844, 878, 900, 906, 949], "tmax": [26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 54, 57, 58, 59, 60, 61, 64, 66, 68, 71, 72, 75, 77, 85, 86, 87, 96, 98, 99, 100, 101, 110, 111, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 138, 139, 140, 141, 142, 145, 149, 150, 156, 159, 160, 163, 164, 167, 168, 169, 171, 172, 173, 176, 178, 179, 189, 193, 194, 195, 199, 204, 207, 208, 209, 210, 211, 212, 213, 219, 223, 224, 227, 228, 229, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 252, 253, 257, 258, 259, 260, 261, 264, 266, 269, 270, 271, 282, 284, 289, 292, 293, 295, 297, 302, 303, 304, 305, 306, 309, 310, 318, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 412, 414, 425, 426, 427, 430, 491, 497, 509, 511, 552, 553, 611, 628, 650, 651, 655, 656, 668, 775, 778, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 809, 844, 878, 887, 900, 906, 946, 949], "event_id": [26, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 54, 58, 59, 60, 68, 71, 72, 75, 96, 98, 99, 100, 101, 115, 122, 124, 125, 127, 128, 131, 132, 135, 138, 140, 141, 145, 149, 150, 156, 159, 163, 164, 167, 168, 169, 171, 176, 178, 179, 189, 193, 195, 199, 204, 207, 210, 211, 212, 213, 219, 224, 232, 233, 235, 239, 241, 245, 251, 252, 253, 258, 259, 260, 261, 264, 266, 269, 270, 271, 281, 282, 284, 286, 288, 289, 291, 292, 298, 301, 308, 318, 322, 325, 326, 327, 328, 333, 334, 343, 352, 426, 501, 507, 509, 512, 514, 552, 553, 570, 603, 639, 650, 651, 655, 656, 666, 667, 668, 669, 670, 700, 702, 703, 775, 789, 793, 794, 795, 796, 876, 879, 899, 949], "2": [26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 113, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 266, 267, 268, 269, 270, 271, 274, 275, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 291, 293, 297, 300, 301, 302, 303, 311, 315, 316, 318, 319, 320, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 356, 357, 359, 366, 367, 369, 372, 384, 386, 391, 405, 412, 414, 418, 419, 425, 426, 427, 428, 430, 431, 439, 440, 452, 460, 461, 477, 478, 485, 487, 488, 491, 492, 493, 495, 496, 497, 501, 502, 504, 506, 507, 508, 514, 520, 521, 523, 524, 526, 530, 537, 540, 546, 547, 549, 550, 552, 553, 561, 568, 577, 583, 584, 593, 595, 600, 603, 604, 605, 611, 613, 614, 615, 616, 618, 620, 621, 622, 632, 637, 638, 639, 643, 646, 647, 648, 650, 651, 652, 653, 655, 656, 658, 660, 661, 662, 664, 665, 672, 674, 675, 676, 680, 686, 691, 693, 706, 707, 710, 713, 716, 718, 729, 733, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 761, 763, 764, 765, 766, 768, 770, 771, 772, 775, 776, 777, 778, 779, 780, 781, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 808, 809, 811, 812, 814, 815, 819, 822, 823, 824, 825, 826, 827, 828, 831, 834, 844, 845, 849, 850, 855, 862, 863, 870, 877, 878, 880, 882, 885, 886, 887, 888, 889, 890, 891, 898, 900, 901, 902, 904, 905, 906, 908, 909, 916, 946, 951, 952, 958, 960, 963, 966], "take": [26, 30, 31, 33, 36, 42, 45, 52, 57, 64, 67, 69, 70, 71, 73, 76, 97, 98, 102, 104, 107, 110, 122, 124, 125, 129, 137, 138, 141, 143, 147, 152, 158, 160, 162, 164, 167, 168, 169, 171, 172, 176, 177, 179, 182, 185, 186, 187, 189, 193, 194, 195, 196, 198, 199, 203, 206, 208, 209, 210, 212, 217, 220, 223, 224, 229, 230, 233, 234, 235, 236, 238, 240, 244, 251, 253, 256, 264, 265, 266, 270, 271, 274, 281, 282, 283, 285, 288, 291, 292, 293, 298, 299, 303, 304, 305, 311, 312, 321, 322, 323, 325, 327, 330, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 356, 366, 367, 379, 382, 400, 410, 413, 425, 429, 430, 431, 438, 441, 442, 443, 485, 492, 509, 514, 518, 526, 528, 529, 542, 544, 547, 549, 550, 552, 553, 581, 605, 606, 607, 608, 609, 611, 612, 616, 621, 622, 638, 641, 643, 646, 724, 730, 737, 739, 750, 755, 775, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 841, 844, 845, 863, 870, 878, 880, 885, 886, 889, 898, 906, 916, 955, 960], "right": [26, 31, 34, 36, 37, 39, 41, 65, 66, 67, 69, 71, 73, 77, 78, 83, 86, 88, 94, 97, 98, 100, 101, 107, 110, 122, 135, 137, 140, 141, 142, 144, 156, 159, 161, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 185, 187, 188, 193, 195, 199, 202, 203, 205, 206, 207, 208, 219, 220, 223, 229, 230, 232, 233, 234, 235, 238, 241, 244, 245, 246, 247, 252, 253, 258, 260, 261, 264, 265, 266, 269, 270, 274, 275, 280, 283, 286, 288, 293, 294, 307, 311, 312, 319, 321, 322, 329, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 347, 348, 349, 382, 384, 394, 395, 405, 406, 431, 452, 485, 492, 507, 509, 512, 519, 543, 550, 552, 553, 572, 577, 590, 603, 637, 638, 658, 663, 723, 752, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 859, 869, 870, 876, 877, 878, 882, 884, 885, 889, 897, 898, 899, 901, 906, 908, 910, 946, 951, 955], "hand": [26, 31, 34, 35, 101, 140, 183, 187, 228, 233, 234, 235, 271, 294, 310, 322, 338, 452, 638], "reject": [26, 31, 33, 37, 39, 42, 53, 54, 58, 68, 71, 72, 88, 96, 104, 105, 110, 124, 125, 127, 128, 129, 131, 132, 135, 138, 141, 142, 145, 149, 159, 167, 168, 169, 171, 172, 173, 178, 179, 192, 193, 199, 204, 207, 217, 219, 224, 228, 233, 234, 235, 238, 239, 242, 243, 246, 256, 258, 259, 260, 261, 264, 266, 270, 278, 280, 281, 282, 284, 285, 288, 292, 295, 300, 301, 304, 310, 314, 322, 325, 326, 327, 328, 333, 334, 335, 338, 343, 428, 430, 552, 553, 597, 598, 635, 638, 640, 641, 650, 651, 652, 655, 656, 666, 667, 676, 699, 703, 715, 767, 773, 775, 795, 796, 876, 889, 890, 891, 892, 966], "dict": [26, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 42, 44, 47, 48, 52, 54, 58, 61, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 80, 81, 84, 85, 86, 88, 92, 94, 96, 97, 102, 104, 106, 107, 113, 115, 121, 122, 124, 125, 127, 128, 129, 131, 132, 135, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 156, 158, 159, 162, 163, 164, 167, 168, 169, 170, 172, 177, 178, 179, 184, 185, 186, 187, 193, 195, 196, 197, 198, 199, 202, 203, 204, 206, 207, 208, 211, 213, 219, 220, 223, 224, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 282, 286, 287, 288, 292, 293, 298, 299, 305, 306, 307, 309, 311, 318, 322, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 355, 357, 366, 367, 372, 374, 380, 382, 384, 394, 395, 410, 412, 413, 414, 415, 416, 417, 425, 428, 429, 430, 436, 437, 438, 439, 440, 441, 442, 443, 458, 464, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 507, 509, 512, 514, 517, 519, 520, 521, 523, 524, 528, 529, 530, 531, 533, 535, 536, 537, 538, 547, 549, 550, 551, 552, 553, 555, 557, 561, 568, 573, 577, 588, 592, 593, 594, 595, 596, 599, 600, 604, 605, 606, 607, 608, 609, 611, 612, 616, 618, 621, 622, 623, 628, 630, 631, 634, 636, 637, 638, 639, 640, 648, 650, 651, 653, 655, 656, 658, 663, 665, 672, 687, 692, 696, 700, 701, 702, 703, 705, 709, 715, 719, 721, 724, 730, 738, 740, 741, 742, 752, 754, 757, 758, 774, 775, 776, 777, 779, 780, 784, 786, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 830, 831, 833, 834, 844, 845, 846, 862, 863, 865, 866, 868, 869, 870, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 891, 897, 898, 899, 901, 904, 905, 906, 907, 908, 909, 910, 916, 934, 944, 945, 949], "mag": [26, 29, 31, 33, 39, 47, 48, 52, 54, 57, 58, 59, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 96, 102, 104, 107, 108, 109, 114, 121, 122, 132, 135, 137, 144, 147, 148, 149, 152, 153, 159, 167, 169, 172, 173, 177, 179, 183, 184, 185, 189, 193, 196, 197, 199, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 219, 224, 227, 229, 231, 233, 234, 235, 237, 238, 240, 244, 251, 253, 261, 264, 266, 269, 275, 288, 318, 321, 322, 325, 328, 330, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 366, 367, 388, 389, 408, 425, 429, 430, 441, 442, 443, 445, 485, 492, 494, 528, 529, 547, 549, 550, 552, 553, 593, 616, 635, 636, 637, 638, 643, 648, 650, 651, 653, 655, 656, 665, 729, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 869, 870, 876, 877, 878, 880, 882, 884, 885, 886, 889, 899, 901, 902, 906, 907, 908], "4e": [26, 31, 35, 54, 57, 68, 71, 96, 106, 109, 132, 135, 149, 159, 179, 189, 204, 207, 212, 213, 219, 233, 253, 261, 318, 328, 333, 334, 343, 430, 552, 553, 638, 655, 656, 775, 876, 899], "12": [26, 29, 33, 35, 37, 38, 39, 44, 45, 46, 47, 50, 54, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 85, 88, 93, 96, 99, 100, 101, 104, 107, 108, 110, 112, 114, 119, 121, 129, 131, 132, 135, 136, 137, 140, 141, 142, 149, 150, 159, 172, 173, 178, 179, 188, 189, 193, 195, 196, 197, 198, 199, 201, 202, 204, 206, 207, 210, 213, 215, 218, 219, 223, 224, 227, 229, 230, 231, 232, 233, 235, 237, 238, 241, 243, 244, 246, 247, 249, 251, 253, 256, 257, 258, 260, 261, 263, 264, 265, 266, 270, 274, 278, 279, 283, 289, 290, 300, 315, 318, 319, 322, 327, 328, 332, 333, 334, 335, 336, 338, 343, 345, 346, 366, 375, 379, 383, 405, 418, 422, 423, 425, 430, 431, 452, 466, 491, 507, 526, 528, 550, 552, 553, 565, 599, 603, 605, 638, 649, 650, 651, 655, 656, 674, 676, 742, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 824, 827, 864, 876, 878, 883, 895, 899, 902, 946, 952, 963, 966], "eog": [26, 30, 33, 34, 37, 40, 41, 42, 53, 54, 58, 59, 68, 71, 72, 88, 96, 98, 101, 102, 104, 105, 108, 109, 110, 112, 115, 118, 121, 122, 124, 125, 128, 132, 135, 136, 137, 138, 141, 145, 156, 164, 167, 168, 172, 173, 176, 178, 179, 193, 194, 195, 196, 199, 204, 207, 217, 219, 220, 224, 228, 229, 231, 234, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 258, 259, 260, 261, 264, 266, 270, 274, 280, 282, 283, 287, 292, 294, 295, 297, 299, 305, 318, 319, 320, 321, 322, 328, 333, 334, 335, 336, 338, 343, 381, 430, 445, 526, 552, 553, 561, 563, 564, 565, 568, 569, 570, 576, 581, 584, 635, 637, 638, 650, 651, 655, 656, 667, 670, 686, 691, 700, 741, 742, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 876, 877, 892, 897, 899, 949, 966], "250e": [26, 58, 171, 193, 219, 232, 235, 328, 333, 334, 430, 638, 655, 656, 775], "6": [26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 95, 97, 98, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 115, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 153, 158, 160, 163, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 183, 184, 185, 186, 187, 189, 193, 195, 196, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 219, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 270, 271, 274, 275, 278, 283, 292, 295, 298, 301, 302, 304, 306, 308, 315, 318, 319, 322, 325, 328, 330, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 384, 405, 411, 430, 452, 459, 485, 487, 490, 492, 505, 509, 520, 521, 523, 524, 552, 553, 565, 569, 605, 622, 629, 630, 631, 637, 638, 647, 653, 654, 655, 656, 674, 678, 689, 700, 708, 729, 738, 742, 776, 777, 779, 780, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 813, 822, 823, 824, 827, 844, 846, 855, 861, 862, 863, 876, 877, 878, 881, 882, 885, 889, 891, 893, 898, 899, 901, 905, 906, 908, 914, 951, 952, 958, 966], "raw_path": [26, 199, 211], "subj001_somatosensory_20111109_01_aux": [26, 147], "f": [26, 30, 31, 34, 35, 36, 44, 45, 47, 48, 50, 53, 54, 55, 56, 58, 59, 60, 65, 66, 67, 72, 73, 79, 87, 90, 97, 98, 104, 110, 111, 113, 118, 120, 122, 126, 130, 132, 135, 137, 139, 140, 141, 142, 143, 147, 148, 149, 155, 162, 164, 167, 168, 170, 171, 176, 177, 178, 183, 184, 185, 186, 187, 192, 194, 197, 199, 202, 203, 209, 210, 213, 219, 223, 224, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 246, 251, 252, 253, 256, 258, 259, 260, 262, 263, 264, 265, 266, 269, 270, 271, 274, 278, 287, 303, 310, 318, 319, 321, 322, 325, 327, 330, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 357, 366, 372, 388, 408, 424, 460, 524, 526, 552, 553, 604, 635, 647, 658, 703, 745, 769, 770, 771, 772, 775, 777, 780, 791, 795, 812, 822, 823, 826, 831, 867, 870, 877, 958, 960, 966], "d": [26, 30, 33, 37, 38, 41, 45, 47, 48, 52, 60, 65, 67, 72, 76, 78, 83, 85, 92, 99, 107, 108, 109, 111, 121, 122, 128, 129, 137, 139, 141, 146, 147, 148, 152, 155, 162, 163, 168, 184, 185, 186, 187, 198, 206, 207, 209, 210, 211, 212, 213, 219, 223, 230, 236, 237, 246, 253, 256, 260, 264, 265, 266, 269, 271, 274, 278, 287, 288, 291, 292, 294, 304, 309, 310, 314, 319, 320, 322, 325, 327, 330, 333, 334, 335, 336, 338, 357, 366, 367, 372, 391, 425, 460, 493, 547, 552, 553, 566, 570, 604, 605, 658, 707, 733, 782, 783, 793, 799, 815, 831, 845, 886, 899, 960], "crop": [26, 29, 31, 34, 35, 36, 38, 47, 56, 57, 58, 59, 60, 61, 64, 66, 68, 70, 71, 72, 77, 85, 86, 101, 102, 104, 108, 109, 110, 111, 137, 140, 144, 164, 167, 168, 169, 173, 176, 178, 194, 195, 199, 203, 206, 207, 208, 210, 211, 212, 213, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 240, 244, 245, 246, 247, 253, 257, 258, 264, 266, 269, 270, 274, 282, 283, 286, 288, 289, 292, 293, 294, 295, 303, 304, 305, 306, 309, 320, 327, 331, 332, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 648, 677, 690, 789, 790, 791, 795, 796, 797, 798, 965], "half": [26, 97, 230, 231, 266, 288, 306, 307, 310, 311, 322, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 412, 487, 520, 521, 523, 524, 552, 553, 657, 776, 777, 779, 780, 784, 808, 810, 812, 822, 824, 827, 844, 870, 876, 878, 899, 904, 909], "length": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 101, 104, 109, 110, 111, 115, 127, 139, 140, 141, 142, 143, 149, 160, 163, 168, 170, 171, 176, 178, 199, 202, 213, 219, 224, 227, 229, 231, 232, 233, 234, 235, 238, 239, 240, 241, 244, 247, 251, 257, 261, 269, 281, 283, 284, 291, 292, 294, 299, 301, 306, 310, 318, 319, 321, 322, 325, 328, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 356, 383, 430, 466, 485, 487, 490, 491, 492, 493, 496, 497, 500, 520, 521, 523, 524, 525, 543, 550, 551, 552, 553, 608, 620, 622, 637, 638, 640, 646, 655, 656, 676, 683, 706, 707, 728, 739, 755, 769, 770, 774, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 808, 811, 814, 815, 819, 823, 824, 825, 826, 827, 828, 834, 844, 855, 861, 862, 863, 870, 877, 878, 880, 882, 885, 887, 889, 898, 901, 904, 905, 906, 907, 908, 909], "save": [26, 31, 33, 35, 37, 55, 56, 60, 67, 69, 70, 87, 88, 97, 102, 136, 137, 138, 141, 143, 162, 163, 169, 170, 177, 178, 183, 184, 185, 187, 188, 189, 195, 197, 204, 207, 208, 210, 216, 218, 219, 228, 229, 231, 233, 235, 236, 238, 245, 246, 247, 253, 260, 264, 280, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 302, 303, 304, 305, 306, 307, 309, 310, 311, 320, 322, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 357, 382, 383, 408, 458, 489, 515, 516, 517, 518, 544, 551, 552, 553, 570, 573, 578, 611, 612, 627, 637, 638, 689, 701, 702, 705, 706, 710, 713, 716, 727, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 816, 817, 818, 829, 831, 844, 933, 937, 938, 940, 946, 949, 956], "memori": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 286, 292, 293, 294, 296, 297, 298, 299, 300, 303, 304, 308, 311, 314, 320, 325, 328, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 351, 360, 361, 364, 400, 430, 432, 434, 446, 487, 494, 497, 498, 502, 523, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 597, 607, 608, 609, 611, 612, 618, 640, 676, 731, 736, 738, 776, 777, 779, 780, 802, 805, 826, 827, 828, 844, 880, 949, 951, 952, 958], "120": [26, 29, 31, 50, 59, 61, 64, 68, 71, 85, 108, 109, 118, 119, 136, 150, 160, 162, 169, 178, 187, 196, 203, 208, 213, 219, 227, 229, 231, 233, 237, 240, 256, 260, 270, 278, 325, 333, 334, 508, 552, 553, 648, 653, 876, 899, 966], "set_channel_typ": [26, 156, 167, 176, 178, 219, 244, 291, 302, 306, 307, 308, 333, 334, 335, 336, 338, 518, 552, 553, 663], "eeg058": 26, "averag": [26, 27, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 91, 93, 95, 96, 98, 99, 100, 104, 106, 107, 108, 109, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 132, 135, 136, 138, 140, 141, 144, 145, 147, 148, 149, 153, 159, 160, 162, 163, 164, 168, 169, 170, 171, 172, 173, 177, 179, 180, 181, 185, 186, 189, 192, 193, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 266, 269, 270, 271, 274, 275, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 302, 304, 305, 306, 308, 310, 314, 318, 319, 321, 325, 326, 330, 332, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 355, 424, 425, 427, 444, 461, 485, 492, 499, 504, 506, 519, 526, 542, 552, 553, 578, 591, 592, 606, 607, 608, 609, 611, 612, 618, 621, 622, 637, 638, 642, 643, 645, 650, 651, 653, 655, 658, 665, 666, 669, 672, 702, 706, 707, 730, 733, 745, 753, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 815, 823, 824, 825, 826, 827, 828, 844, 846, 870, 878, 880, 881, 885, 889, 897, 898, 900, 901, 906, 908, 946, 949, 966], "true": [26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 113, 114, 115, 120, 121, 122, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 193, 194, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 251, 252, 253, 256, 258, 259, 260, 261, 264, 266, 269, 270, 271, 274, 275, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 299, 301, 303, 304, 305, 306, 307, 309, 310, 311, 318, 319, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 356, 357, 366, 367, 369, 371, 372, 373, 376, 377, 378, 379, 382, 383, 384, 387, 390, 391, 392, 393, 394, 395, 408, 410, 412, 413, 414, 415, 418, 425, 429, 430, 431, 432, 434, 435, 441, 442, 443, 447, 449, 450, 451, 452, 454, 455, 456, 458, 460, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 503, 504, 506, 507, 510, 514, 515, 516, 517, 518, 519, 520, 523, 524, 526, 528, 529, 530, 533, 538, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 597, 598, 600, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 614, 615, 616, 618, 620, 621, 622, 623, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 647, 649, 650, 651, 653, 655, 656, 657, 658, 661, 664, 665, 666, 667, 672, 674, 676, 691, 699, 702, 703, 706, 708, 711, 719, 721, 724, 727, 730, 732, 733, 735, 737, 738, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 759, 763, 766, 767, 770, 771, 773, 776, 777, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 805, 806, 808, 813, 814, 815, 821, 823, 824, 825, 826, 827, 828, 829, 831, 839, 842, 844, 846, 850, 853, 854, 855, 859, 860, 862, 863, 864, 865, 867, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 916, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 946, 951], "show": [26, 29, 30, 34, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 57, 58, 61, 63, 64, 67, 68, 70, 71, 72, 73, 78, 79, 80, 81, 84, 85, 87, 90, 95, 96, 98, 100, 102, 105, 106, 112, 125, 127, 129, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 152, 153, 155, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 182, 183, 184, 186, 187, 193, 195, 196, 197, 199, 203, 205, 206, 207, 208, 209, 218, 219, 227, 229, 230, 231, 232, 233, 234, 235, 237, 239, 244, 246, 247, 251, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 280, 282, 283, 284, 285, 287, 289, 291, 292, 295, 299, 303, 304, 307, 308, 311, 314, 318, 321, 322, 330, 331, 332, 333, 334, 335, 336, 338, 341, 342, 346, 347, 348, 349, 377, 379, 382, 383, 485, 492, 526, 544, 552, 553, 587, 635, 637, 638, 653, 658, 665, 667, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 846, 853, 854, 855, 862, 863, 864, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 907, 908, 909, 910, 911, 915, 951, 960, 965, 966], "power": [26, 38, 47, 53, 58, 62, 64, 82, 87, 95, 98, 102, 109, 110, 133, 134, 140, 141, 142, 143, 149, 156, 160, 164, 170, 172, 173, 176, 177, 189, 192, 193, 199, 207, 210, 213, 219, 223, 229, 230, 234, 237, 239, 240, 247, 251, 254, 255, 257, 261, 262, 263, 269, 278, 280, 283, 285, 287, 288, 289, 291, 292, 293, 294, 299, 300, 303, 304, 309, 310, 311, 312, 319, 321, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 347, 348, 349, 357, 358, 359, 360, 363, 366, 367, 388, 424, 425, 429, 430, 485, 487, 490, 492, 493, 496, 498, 519, 521, 523, 524, 525, 526, 552, 553, 559, 593, 595, 600, 604, 605, 606, 611, 612, 616, 619, 621, 622, 629, 634, 635, 638, 695, 703, 708, 710, 723, 737, 743, 754, 769, 770, 771, 772, 773, 776, 777, 778, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 805, 814, 815, 823, 824, 825, 826, 827, 828, 838, 844, 862, 869, 870, 871, 877, 878, 880, 883, 885, 886, 891, 897, 900, 906, 914, 946, 966], "interfer": [26, 152, 163, 227, 228, 231, 236, 237, 238, 240, 246, 278, 319, 321, 325, 652, 676, 946], "remov": [26, 33, 47, 53, 58, 85, 94, 97, 99, 102, 103, 105, 108, 109, 112, 121, 137, 140, 141, 147, 150, 163, 167, 168, 169, 170, 173, 178, 184, 185, 187, 188, 193, 197, 199, 204, 208, 210, 211, 219, 224, 227, 228, 229, 230, 231, 232, 235, 236, 238, 240, 241, 244, 246, 247, 261, 269, 271, 274, 278, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 319, 321, 322, 325, 327, 330, 333, 334, 335, 336, 337, 338, 339, 343, 344, 357, 372, 382, 398, 418, 425, 434, 435, 491, 493, 497, 508, 524, 528, 537, 549, 550, 552, 553, 554, 568, 574, 578, 604, 635, 636, 637, 638, 639, 652, 654, 658, 665, 683, 684, 691, 697, 706, 708, 711, 730, 733, 753, 755, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 831, 844, 867, 883, 899, 915, 916, 928, 949, 966], "compute_psd": [26, 98, 102, 137, 160, 164, 167, 169, 170, 193, 194, 210, 213, 219, 227, 229, 231, 235, 237, 239, 240, 247, 269, 270, 271, 305, 306, 307, 309, 310, 333, 334, 335, 336, 490, 552, 553, 638, 793, 799, 814, 878, 889, 891, 900], "60": [26, 29, 31, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 91, 95, 96, 97, 99, 100, 101, 102, 104, 106, 108, 109, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 142, 144, 145, 147, 148, 149, 150, 152, 153, 158, 159, 160, 163, 164, 167, 168, 170, 171, 176, 178, 179, 186, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 224, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 244, 245, 246, 247, 252, 253, 256, 257, 259, 260, 261, 264, 266, 269, 274, 275, 284, 285, 300, 319, 325, 524, 552, 553, 674, 887], "fals": [26, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 56, 57, 58, 66, 67, 68, 70, 73, 74, 75, 76, 80, 81, 90, 91, 94, 95, 96, 97, 98, 99, 102, 103, 106, 108, 109, 111, 113, 115, 118, 122, 124, 125, 127, 128, 129, 132, 135, 136, 137, 138, 140, 142, 143, 146, 147, 148, 152, 153, 155, 161, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 182, 183, 185, 187, 189, 193, 194, 196, 197, 198, 199, 203, 205, 207, 208, 210, 212, 213, 216, 219, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 251, 252, 253, 257, 258, 259, 260, 261, 266, 269, 270, 271, 274, 278, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 295, 301, 302, 303, 304, 307, 309, 310, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 357, 360, 361, 364, 366, 367, 369, 371, 372, 373, 377, 378, 379, 382, 383, 384, 387, 390, 392, 393, 394, 396, 410, 413, 415, 418, 425, 430, 431, 432, 434, 435, 441, 444, 447, 449, 450, 451, 452, 454, 455, 456, 458, 460, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 488, 490, 491, 492, 493, 495, 499, 503, 504, 506, 510, 515, 516, 517, 518, 519, 520, 526, 529, 533, 538, 543, 544, 546, 547, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 597, 600, 603, 604, 605, 606, 607, 608, 609, 611, 612, 614, 615, 616, 618, 621, 622, 623, 629, 630, 631, 633, 634, 635, 636, 637, 638, 643, 650, 651, 653, 655, 656, 658, 661, 664, 665, 666, 667, 671, 672, 674, 676, 677, 680, 696, 699, 702, 703, 706, 708, 713, 718, 719, 721, 722, 724, 726, 727, 730, 733, 734, 735, 738, 744, 745, 746, 747, 748, 749, 750, 751, 756, 762, 765, 766, 767, 770, 773, 776, 777, 779, 780, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 806, 808, 812, 813, 814, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 839, 842, 844, 846, 854, 859, 860, 862, 863, 864, 867, 870, 871, 874, 876, 877, 878, 880, 881, 882, 884, 885, 887, 889, 891, 893, 895, 898, 899, 900, 901, 902, 904, 905, 906, 908, 909, 912, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 951], "amplitud": [26, 38, 45, 58, 61, 63, 65, 66, 71, 73, 79, 85, 98, 102, 108, 109, 121, 122, 123, 137, 144, 152, 159, 162, 164, 167, 168, 169, 170, 171, 172, 189, 193, 199, 202, 207, 210, 211, 213, 218, 219, 220, 223, 224, 227, 228, 230, 231, 233, 234, 235, 237, 239, 240, 247, 251, 253, 269, 270, 274, 278, 284, 285, 304, 310, 321, 322, 325, 328, 331, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 359, 367, 412, 413, 414, 418, 430, 492, 528, 549, 550, 552, 553, 599, 609, 620, 638, 640, 655, 656, 698, 741, 742, 746, 750, 751, 775, 776, 793, 794, 795, 799, 800, 812, 822, 844, 870, 873, 874, 877, 887, 900, 946, 959], "pick": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 108, 109, 110, 113, 115, 118, 120, 121, 122, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 184, 185, 187, 189, 193, 195, 196, 197, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 219, 220, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 247, 251, 252, 253, 258, 259, 260, 261, 264, 266, 269, 270, 274, 275, 280, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 307, 309, 310, 311, 318, 321, 322, 328, 330, 333, 334, 335, 336, 337, 338, 340, 341, 343, 344, 347, 348, 349, 356, 366, 367, 380, 383, 384, 387, 397, 399, 430, 441, 487, 493, 501, 506, 510, 523, 524, 552, 553, 629, 630, 631, 632, 635, 636, 637, 638, 640, 652, 654, 655, 656, 664, 668, 672, 682, 684, 691, 757, 775, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 813, 826, 827, 844, 860, 864, 868, 870, 876, 877, 880, 882, 883, 889, 890, 891, 893, 895, 897, 899, 900, 902, 904, 909, 949], "exclud": [26, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 50, 52, 54, 57, 60, 61, 66, 67, 69, 71, 75, 76, 77, 84, 85, 86, 91, 95, 96, 97, 98, 102, 106, 110, 113, 115, 118, 120, 124, 125, 127, 128, 132, 135, 136, 137, 138, 139, 140, 147, 160, 164, 169, 170, 171, 177, 183, 184, 185, 193, 196, 199, 203, 204, 208, 209, 210, 211, 212, 213, 219, 224, 227, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 247, 253, 258, 259, 260, 264, 266, 269, 270, 271, 282, 284, 286, 287, 288, 289, 292, 293, 294, 295, 299, 305, 310, 318, 325, 330, 331, 332, 333, 334, 335, 336, 340, 341, 343, 344, 346, 347, 348, 349, 375, 376, 389, 396, 430, 436, 441, 443, 493, 504, 552, 553, 555, 561, 568, 570, 576, 580, 601, 629, 630, 631, 633, 635, 636, 637, 638, 639, 650, 651, 652, 653, 665, 676, 691, 703, 708, 729, 733, 738, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 813, 871, 880, 882, 883, 884, 890, 892, 893, 900, 925, 949], "bad": [26, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 53, 54, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 75, 77, 84, 85, 86, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 112, 115, 118, 120, 121, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 145, 147, 149, 150, 156, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 189, 192, 193, 194, 195, 196, 197, 199, 203, 204, 207, 208, 209, 210, 211, 212, 213, 219, 224, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 258, 259, 260, 261, 269, 270, 271, 274, 278, 282, 284, 285, 286, 287, 288, 291, 292, 294, 295, 299, 300, 302, 303, 304, 306, 307, 308, 309, 310, 320, 321, 325, 327, 328, 330, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 367, 380, 383, 384, 389, 396, 399, 411, 430, 434, 441, 442, 443, 487, 501, 506, 514, 523, 524, 526, 542, 552, 553, 565, 578, 597, 598, 616, 630, 631, 632, 635, 636, 637, 638, 640, 641, 642, 645, 650, 651, 652, 654, 655, 656, 657, 664, 665, 666, 667, 668, 676, 677, 682, 684, 691, 703, 706, 729, 730, 733, 757, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 827, 870, 871, 876, 877, 880, 882, 883, 884, 891, 895, 899, 900, 931, 946, 959, 966], "arang": [26, 30, 34, 35, 41, 45, 69, 71, 95, 109, 118, 120, 122, 123, 135, 140, 142, 148, 193, 219, 223, 224, 230, 239, 240, 251, 253, 256, 258, 259, 260, 261, 265, 266, 271, 274, 339, 346, 524, 541, 552, 553, 570, 685, 781, 812, 822, 824, 827], "181": [26, 61, 127, 150, 155, 196, 219, 224, 237, 278, 754, 775], "fir_design": [26, 34, 35, 37, 39, 40, 41, 42, 44, 104, 115, 127, 149, 160, 219, 230, 233, 271, 285, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 524, 552, 553], "firwin": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 213, 219, 224, 230, 231, 232, 233, 238, 239, 240, 241, 261, 271, 285, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 524, 552, 553], "stim_channel": [26, 29, 31, 33, 68, 72, 107, 135, 136, 138, 141, 164, 167, 169, 176, 179, 193, 195, 204, 219, 228, 233, 235, 241, 245, 258, 269, 270, 285, 287, 288, 299, 326, 417, 526, 527, 552, 553, 561, 568, 576, 584, 668], "uppt001": [26, 33, 108, 109, 219], "stim": [26, 29, 31, 33, 34, 37, 40, 41, 47, 54, 58, 59, 60, 68, 71, 72, 75, 92, 96, 98, 99, 100, 107, 108, 109, 115, 118, 121, 123, 127, 128, 132, 135, 136, 138, 141, 150, 167, 168, 169, 173, 176, 178, 179, 189, 193, 196, 199, 204, 207, 209, 210, 212, 216, 219, 224, 228, 231, 232, 233, 235, 240, 241, 244, 245, 252, 253, 258, 259, 260, 270, 271, 280, 285, 287, 288, 299, 310, 321, 322, 325, 326, 333, 334, 335, 336, 338, 343, 381, 420, 445, 526, 527, 552, 553, 561, 568, 576, 578, 584, 635, 638, 668, 703, 739, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 876, 899, 949], "none": [26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 100, 101, 104, 106, 108, 109, 110, 111, 113, 114, 115, 118, 121, 122, 124, 125, 127, 128, 131, 132, 135, 137, 138, 140, 141, 142, 145, 147, 148, 149, 150, 153, 159, 162, 163, 164, 168, 169, 170, 171, 172, 176, 177, 178, 179, 185, 186, 187, 188, 189, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 223, 224, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 246, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 303, 304, 305, 307, 309, 310, 311, 312, 318, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 391, 395, 396, 397, 398, 399, 400, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 630, 631, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 682, 683, 684, 685, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 768, 774, 775, 776, 777, 778, 779, 780, 781, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 818, 819, 820, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 836, 839, 843, 844, 846, 848, 850, 853, 854, 855, 856, 858, 859, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 917, 925, 926, 927, 928, 929, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945], "preload": [26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 58, 59, 60, 68, 75, 94, 97, 98, 99, 100, 101, 108, 109, 110, 111, 115, 127, 131, 135, 138, 140, 141, 142, 145, 149, 150, 160, 164, 167, 168, 169, 171, 172, 173, 176, 178, 179, 186, 193, 194, 197, 199, 207, 209, 210, 211, 212, 213, 216, 219, 224, 227, 229, 232, 233, 234, 235, 239, 240, 241, 244, 252, 253, 258, 259, 260, 261, 264, 266, 269, 270, 271, 280, 284, 285, 288, 289, 292, 293, 296, 302, 303, 304, 309, 318, 319, 325, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 418, 434, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 597, 650, 651, 655, 656, 699, 701, 705, 730, 733, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 876, 899], "physiolog": [26, 34, 68, 164, 220, 231, 233, 236, 278, 286, 319, 333, 334, 335, 336, 452, 477, 478, 552, 553, 733], "eyeblink": [26, 651, 656], "heartbeat": [26, 110, 169, 173, 229, 233, 234, 235, 236, 238, 246, 650, 655, 666, 669], "add_proj": [26, 27, 29, 30, 31, 68, 120, 129, 137, 139, 167, 169, 173, 176, 189, 199, 211, 212, 213, 219, 224, 227, 232, 234, 235, 239, 240, 244, 257, 333, 334, 335, 336, 343, 552, 553, 652, 753], "copi": [26, 27, 30, 31, 34, 35, 36, 38, 39, 40, 42, 44, 45, 47, 48, 53, 64, 71, 72, 73, 74, 75, 80, 84, 88, 94, 97, 100, 102, 106, 111, 135, 137, 142, 147, 163, 167, 168, 171, 173, 176, 177, 178, 182, 188, 189, 193, 195, 196, 198, 199, 203, 205, 212, 213, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 246, 253, 257, 260, 261, 274, 282, 284, 285, 287, 288, 291, 292, 298, 299, 304, 307, 309, 311, 320, 322, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 356, 357, 372, 377, 379, 382, 387, 435, 442, 444, 449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 494, 507, 510, 523, 524, 552, 553, 602, 604, 618, 630, 631, 634, 637, 638, 647, 650, 651, 657, 658, 668, 672, 677, 691, 700, 727, 730, 733, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 806, 807, 808, 813, 830, 831, 946, 949], "apply_proj": [26, 34, 98, 122, 169, 173, 176, 186, 194, 209, 234, 235, 236, 240, 287, 292, 333, 334, 335, 336, 515, 516, 517, 518, 552, 553, 652, 733, 899], "fix": [26, 31, 34, 35, 48, 57, 66, 67, 71, 73, 74, 75, 80, 81, 84, 87, 107, 118, 128, 140, 150, 162, 167, 169, 185, 190, 191, 192, 195, 197, 203, 207, 224, 229, 230, 239, 240, 252, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 322, 326, 331, 332, 333, 334, 335, 336, 337, 340, 341, 344, 347, 348, 349, 366, 367, 378, 390, 425, 432, 435, 498, 520, 521, 523, 524, 526, 528, 530, 544, 547, 549, 550, 552, 553, 594, 598, 600, 605, 606, 607, 608, 609, 616, 617, 620, 621, 622, 638, 642, 646, 659, 674, 696, 708, 719, 729, 789, 802, 805, 812, 822, 823, 824, 826, 827, 846, 862, 881, 938, 939, 944, 946, 951, 966], "delai": [26, 30, 45, 219, 223, 234, 235, 239, 278, 299, 309, 319, 326, 328, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 491, 497, 502, 520, 521, 523, 524, 552, 553, 597, 699, 887], "due": [26, 31, 66, 69, 73, 108, 195, 213, 217, 218, 227, 229, 230, 234, 238, 239, 240, 244, 247, 252, 271, 288, 289, 304, 309, 318, 321, 322, 329, 333, 334, 335, 336, 337, 339, 340, 341, 344, 347, 348, 349, 477, 484, 491, 502, 506, 518, 519, 549, 550, 552, 553, 648, 649, 665, 672, 676, 690, 710, 716, 844, 940, 946], "hardwar": [26, 193, 218, 229, 236, 293, 321, 322, 326, 333, 334, 338, 447, 477, 552, 553, 638, 876, 893, 899, 951, 958], "4": [26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 148, 149, 150, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 181, 183, 184, 185, 187, 188, 189, 191, 193, 195, 196, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 222, 223, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 273, 274, 275, 278, 280, 282, 286, 293, 298, 301, 306, 315, 318, 319, 321, 322, 325, 330, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 366, 367, 371, 375, 376, 382, 383, 384, 394, 405, 425, 452, 461, 485, 491, 492, 493, 498, 504, 508, 509, 520, 526, 528, 543, 549, 550, 552, 553, 589, 594, 605, 612, 637, 638, 643, 647, 650, 652, 653, 667, 673, 675, 685, 691, 710, 729, 733, 738, 742, 749, 769, 770, 773, 777, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 815, 819, 822, 824, 825, 827, 828, 831, 832, 833, 834, 844, 846, 848, 861, 862, 863, 865, 870, 876, 877, 878, 880, 881, 882, 885, 886, 889, 896, 898, 899, 900, 901, 902, 904, 906, 908, 909, 910, 946, 951, 952, 958, 966], "shift_tim": [26, 113, 167, 287, 291, 308, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "004": [26, 36, 58, 59, 70, 125, 130, 149, 156, 167, 169, 172, 175, 176, 193, 196, 203, 232, 253, 278, 345, 431, 505, 601, 844, 966], "result": [26, 34, 35, 52, 55, 56, 71, 72, 81, 84, 87, 97, 101, 107, 110, 118, 127, 129, 131, 135, 142, 155, 161, 163, 164, 171, 173, 176, 178, 182, 183, 184, 186, 187, 189, 193, 194, 197, 199, 203, 205, 213, 216, 223, 224, 227, 230, 231, 232, 233, 234, 235, 237, 244, 245, 247, 251, 253, 256, 257, 260, 261, 264, 265, 266, 274, 278, 281, 283, 284, 286, 288, 291, 302, 303, 305, 309, 310, 311, 314, 318, 319, 322, 325, 327, 328, 333, 334, 335, 336, 338, 340, 341, 344, 345, 347, 348, 349, 358, 360, 367, 384, 387, 388, 424, 425, 430, 432, 434, 460, 462, 484, 486, 487, 501, 510, 519, 525, 543, 547, 549, 550, 552, 553, 570, 590, 597, 601, 605, 607, 608, 609, 611, 616, 617, 624, 638, 643, 649, 655, 656, 658, 659, 665, 674, 676, 693, 699, 707, 730, 741, 742, 743, 752, 753, 755, 774, 775, 776, 777, 778, 779, 780, 781, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 853, 855, 870, 876, 877, 899, 946], "time_unit": [26, 37, 40, 61, 66, 68, 69, 77, 85, 86, 88, 96, 98, 113, 120, 121, 127, 128, 129, 149, 177, 178, 179, 189, 202, 204, 205, 210, 211, 212, 219, 224, 252, 257, 258, 259, 304, 332, 335, 336, 340, 341, 344, 347, 348, 349, 870, 880, 882, 885, 886, 904, 909], "": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 81, 84, 85, 86, 88, 90, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 140, 141, 143, 144, 145, 147, 149, 150, 152, 154, 155, 156, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 278, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314, 316, 318, 319, 320, 321, 322, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 357, 359, 366, 367, 372, 373, 374, 391, 394, 398, 424, 425, 429, 431, 437, 438, 445, 457, 458, 460, 477, 478, 485, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 506, 509, 515, 516, 517, 518, 519, 521, 523, 524, 525, 544, 546, 549, 550, 552, 553, 558, 561, 568, 570, 576, 577, 584, 587, 592, 596, 599, 601, 604, 605, 616, 620, 621, 622, 637, 638, 639, 640, 649, 656, 657, 658, 662, 667, 668, 675, 676, 680, 683, 694, 702, 706, 707, 716, 718, 719, 720, 721, 725, 726, 728, 730, 733, 734, 738, 739, 746, 749, 751, 766, 775, 776, 777, 778, 779, 780, 784, 785, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 808, 812, 814, 815, 820, 822, 823, 824, 825, 826, 827, 828, 829, 831, 836, 843, 844, 853, 854, 863, 864, 870, 872, 874, 876, 877, 880, 882, 883, 885, 886, 887, 889, 893, 899, 901, 902, 904, 906, 907, 908, 909, 910, 914, 925, 926, 927, 929, 940, 941, 946, 948, 949, 951, 956, 958, 962, 964, 966], "topomap": [26, 45, 68, 100, 110, 114, 147, 169, 178, 197, 232, 235, 261, 270, 275, 280, 282, 283, 284, 285, 287, 291, 292, 302, 304, 305, 306, 310, 314, 321, 330, 333, 334, 335, 336, 338, 342, 343, 382, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 876, 878, 880, 883, 885, 889, 896, 897, 898, 899, 900, 901, 902, 906, 908], "016": [26, 29, 58, 59, 156, 167, 169, 176, 196, 208, 215, 230, 232, 253, 278, 322, 638, 754, 966], "030": [26, 108, 156, 167, 176, 196, 244, 247, 253], "060": [26, 108, 167, 176, 196, 244, 247, 253], "070": [26, 108], "directori": [26, 33, 38, 47, 59, 60, 108, 109, 122, 123, 144, 147, 152, 182, 183, 188, 193, 198, 199, 211, 219, 283, 291, 295, 303, 304, 307, 310, 311, 318, 325, 331, 338, 339, 340, 343, 344, 347, 348, 349, 373, 377, 378, 379, 382, 431, 436, 437, 438, 444, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 504, 535, 537, 541, 543, 544, 545, 546, 560, 566, 581, 585, 590, 594, 596, 624, 672, 693, 707, 711, 713, 720, 726, 727, 728, 731, 737, 738, 752, 755, 766, 784, 785, 836, 844, 862, 864, 874, 904, 910, 941, 946, 955, 958], "home": [26, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 162, 167, 168, 170, 171, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 189, 193, 194, 195, 196, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 224, 227, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 247, 252, 253, 257, 258, 259, 260, 261, 264, 266, 270, 274, 275, 283, 295, 303, 304, 333, 334, 444, 552, 553, 876, 899], "circleci": [26, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 162, 167, 168, 170, 171, 173, 176, 177, 178, 179, 183, 184, 185, 186, 189, 193, 194, 195, 196, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 224, 227, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 247, 252, 253, 257, 258, 259, 260, 261, 264, 266, 270, 274, 275, 311], "mne_data": [26, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 162, 164, 168, 170, 171, 173, 176, 177, 178, 179, 183, 184, 185, 186, 189, 193, 194, 195, 196, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 224, 227, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 247, 252, 253, 257, 258, 259, 260, 261, 264, 266, 270, 274, 275, 283, 311, 449, 450, 451, 452, 454, 455, 456, 458, 459, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 946], "res4": [26, 33, 38, 47, 108, 109, 147, 152, 211, 219], "hc": [26, 33, 38, 47, 108, 109, 147, 152, 211, 219], "present": [26, 30, 33, 36, 38, 39, 42, 47, 57, 66, 69, 70, 96, 109, 144, 147, 152, 155, 161, 167, 169, 171, 176, 177, 185, 193, 195, 196, 197, 207, 216, 217, 219, 220, 227, 228, 232, 234, 235, 236, 238, 241, 245, 247, 256, 260, 264, 265, 266, 278, 282, 283, 284, 286, 288, 289, 291, 292, 294, 299, 302, 303, 305, 307, 310, 318, 319, 321, 322, 325, 326, 328, 330, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 357, 366, 367, 372, 377, 382, 388, 390, 394, 399, 404, 414, 418, 425, 429, 430, 431, 440, 441, 442, 443, 464, 485, 492, 504, 506, 509, 514, 526, 527, 528, 529, 533, 547, 549, 550, 552, 553, 555, 561, 564, 568, 576, 578, 584, 596, 604, 616, 635, 637, 638, 640, 641, 648, 649, 653, 655, 658, 666, 676, 684, 703, 704, 753, 758, 774, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 814, 831, 844, 862, 863, 869, 870, 878, 880, 882, 885, 886, 889, 896, 898, 899, 900, 901, 902, 905, 906, 908, 958], "quaternion": [26, 33, 38, 47, 108, 109, 147, 152, 211, 219, 286, 421, 422, 423, 642, 645, 835, 837, 888], "match": [26, 29, 33, 34, 35, 37, 38, 43, 44, 46, 47, 53, 54, 57, 58, 59, 60, 66, 67, 71, 72, 73, 75, 77, 84, 85, 86, 88, 96, 98, 99, 100, 102, 107, 108, 109, 110, 115, 118, 121, 122, 123, 124, 125, 128, 129, 131, 132, 135, 136, 137, 138, 140, 141, 142, 145, 147, 149, 150, 152, 156, 159, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 184, 188, 189, 193, 196, 199, 204, 207, 209, 210, 211, 212, 213, 219, 223, 227, 228, 229, 231, 232, 235, 239, 240, 241, 244, 245, 246, 251, 252, 253, 257, 258, 259, 260, 261, 264, 266, 270, 282, 283, 284, 285, 287, 288, 289, 291, 293, 294, 295, 307, 310, 311, 322, 326, 328, 330, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 387, 411, 425, 429, 436, 441, 442, 485, 486, 491, 492, 493, 495, 501, 506, 509, 510, 512, 514, 516, 517, 519, 535, 551, 552, 553, 561, 568, 576, 584, 602, 624, 627, 629, 630, 631, 637, 638, 647, 648, 653, 661, 665, 677, 690, 700, 702, 703, 708, 723, 726, 739, 754, 775, 780, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 834, 844, 862, 870, 876, 877, 878, 882, 885, 886, 889, 892, 898, 899, 900, 901, 937, 956, 966], "desir": [26, 31, 33, 37, 38, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 97, 108, 109, 118, 120, 121, 122, 123, 129, 132, 135, 136, 138, 140, 147, 152, 153, 158, 169, 173, 178, 184, 188, 193, 195, 197, 199, 204, 205, 206, 207, 208, 211, 216, 217, 219, 223, 224, 228, 229, 230, 231, 234, 245, 252, 253, 264, 266, 274, 283, 287, 294, 310, 318, 320, 326, 327, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 431, 484, 509, 520, 552, 553, 598, 616, 637, 659, 668, 685, 733, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 830, 844, 909, 946, 958], "v": [26, 30, 33, 34, 38, 39, 47, 50, 53, 54, 58, 69, 80, 81, 90, 92, 97, 103, 108, 109, 133, 134, 147, 152, 159, 164, 168, 198, 199, 205, 211, 219, 223, 227, 230, 234, 257, 260, 261, 266, 269, 274, 278, 294, 304, 305, 306, 310, 311, 318, 321, 322, 325, 328, 330, 332, 333, 334, 335, 336, 338, 352, 357, 367, 372, 390, 415, 430, 445, 452, 491, 492, 493, 506, 552, 553, 604, 613, 638, 646, 649, 655, 656, 658, 665, 676, 683, 775, 789, 790, 791, 793, 795, 796, 797, 798, 799, 808, 814, 823, 826, 827, 828, 831, 952, 956, 966], "84": [26, 37, 39, 45, 60, 61, 67, 73, 84, 108, 124, 136, 137, 140, 142, 147, 150, 163, 178, 196, 218, 224, 228, 237, 256, 257, 258, 260, 261, 264, 265, 266, 278, 562, 680], "69": [26, 39, 41, 45, 61, 66, 73, 75, 108, 109, 124, 131, 136, 140, 142, 147, 150, 164, 167, 170, 189, 191, 196, 198, 199, 203, 207, 211, 212, 218, 219, 223, 224, 232, 237, 256, 257, 258, 260, 261, 264, 265, 266, 278, 333, 334, 366, 477, 966], "49": [26, 31, 33, 39, 45, 54, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 106, 108, 112, 113, 114, 131, 136, 140, 141, 142, 144, 147, 148, 150, 152, 176, 196, 199, 203, 205, 206, 208, 211, 212, 213, 218, 219, 222, 223, 237, 238, 239, 241, 243, 246, 253, 256, 257, 258, 260, 261, 265, 266, 274, 275, 278, 301, 302, 842, 966], "mm": [26, 29, 30, 31, 33, 38, 47, 50, 52, 67, 70, 71, 76, 97, 98, 100, 101, 104, 106, 107, 108, 109, 110, 111, 118, 121, 122, 123, 137, 147, 152, 163, 168, 173, 178, 183, 184, 185, 186, 187, 188, 194, 195, 203, 205, 207, 208, 209, 210, 211, 212, 213, 219, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 252, 253, 274, 282, 289, 291, 293, 304, 306, 318, 322, 325, 331, 338, 340, 341, 344, 347, 348, 349, 375, 405, 407, 409, 431, 436, 504, 528, 537, 543, 545, 546, 565, 569, 590, 600, 658, 662, 663, 689, 700, 737, 738, 834, 836, 843, 844, 904, 909, 914], "orig": [26, 33, 38, 47, 108, 109, 147, 152, 187, 211, 219, 228, 618, 630, 631, 636], "44": [26, 32, 39, 45, 54, 61, 67, 71, 72, 73, 82, 108, 124, 131, 136, 140, 141, 142, 144, 147, 150, 185, 195, 196, 203, 207, 208, 211, 218, 223, 224, 230, 235, 237, 238, 256, 257, 258, 260, 261, 264, 266, 278, 301, 302, 366, 367, 506, 547, 659, 776, 777, 779, 780, 966], "30": [26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 45, 50, 54, 59, 60, 61, 67, 68, 71, 72, 73, 76, 84, 97, 100, 101, 102, 104, 108, 109, 110, 118, 120, 122, 124, 125, 129, 131, 135, 136, 137, 140, 141, 142, 143, 147, 148, 150, 152, 157, 163, 173, 183, 185, 187, 193, 196, 198, 199, 203, 205, 210, 211, 213, 215, 223, 224, 227, 229, 230, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 256, 257, 258, 259, 260, 261, 265, 266, 269, 271, 274, 278, 282, 302, 318, 319, 322, 325, 333, 334, 335, 336, 344, 346, 373, 377, 405, 425, 552, 553, 587, 637, 641, 646, 665, 742, 753, 754, 793, 794, 795, 799, 800, 812, 822, 823, 825, 826, 828, 849, 853, 878, 966], "51": [26, 31, 34, 39, 45, 54, 60, 61, 71, 73, 82, 97, 98, 107, 108, 109, 131, 136, 137, 140, 142, 147, 150, 160, 164, 179, 183, 185, 196, 199, 211, 212, 219, 224, 229, 233, 236, 237, 238, 244, 256, 257, 258, 260, 261, 266, 274, 278, 296, 319, 343, 452, 676], "45": [26, 29, 31, 33, 34, 35, 37, 39, 41, 42, 45, 54, 61, 71, 76, 101, 108, 111, 129, 131, 136, 137, 140, 141, 142, 147, 149, 150, 152, 168, 170, 171, 172, 176, 183, 184, 185, 195, 196, 203, 207, 208, 213, 218, 219, 223, 224, 230, 232, 233, 235, 236, 237, 238, 240, 246, 256, 257, 258, 260, 261, 264, 265, 266, 271, 280, 322, 327, 333, 334, 335, 336, 366, 367, 405, 425, 429, 430, 441, 442, 443, 485, 492, 520, 528, 529, 547, 549, 550, 552, 553, 616, 638, 770, 793, 794, 799, 800, 849, 878, 886], "252": [26, 33, 61, 147, 150, 152, 196, 237, 256], "43": [26, 33, 39, 45, 52, 54, 60, 61, 67, 71, 72, 73, 74, 76, 80, 81, 108, 109, 131, 136, 140, 142, 147, 150, 152, 172, 184, 185, 191, 196, 198, 203, 208, 209, 223, 224, 237, 256, 257, 258, 260, 261, 265, 266, 278, 333, 334, 405, 793, 794, 795, 796, 966], "diff": [26, 33, 35, 38, 47, 97, 108, 109, 147, 152, 161, 203, 210, 211, 213, 219, 244, 264, 311, 853, 960], "46": [26, 33, 38, 39, 45, 47, 54, 59, 60, 61, 66, 71, 73, 77, 81, 86, 99, 108, 131, 136, 140, 142, 147, 150, 152, 176, 184, 186, 191, 196, 207, 215, 218, 224, 229, 230, 232, 237, 246, 256, 257, 258, 260, 261, 264, 265, 266, 278, 281, 322, 966], "28": [26, 29, 37, 39, 44, 45, 52, 54, 60, 61, 67, 71, 73, 76, 82, 101, 108, 131, 132, 136, 137, 140, 142, 147, 150, 167, 171, 175, 185, 189, 191, 196, 198, 201, 203, 208, 209, 210, 211, 213, 223, 224, 229, 231, 237, 256, 257, 258, 260, 261, 265, 266, 270, 273, 278, 281, 300, 405, 966], "53": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 54, 59, 60, 61, 66, 68, 71, 72, 73, 82, 87, 97, 100, 101, 104, 108, 109, 110, 111, 112, 115, 122, 127, 131, 136, 140, 141, 142, 143, 147, 149, 150, 152, 160, 163, 168, 171, 172, 173, 178, 182, 189, 196, 211, 213, 218, 219, 224, 226, 230, 231, 232, 233, 237, 238, 239, 240, 241, 246, 256, 257, 258, 260, 261, 265, 266, 278, 770, 946, 966], "58": [26, 37, 39, 45, 61, 66, 71, 73, 74, 75, 80, 81, 83, 84, 85, 106, 108, 118, 121, 122, 131, 132, 136, 137, 140, 142, 144, 147, 149, 150, 163, 164, 175, 176, 178, 179, 189, 196, 199, 201, 205, 209, 218, 219, 223, 224, 227, 233, 235, 237, 244, 256, 257, 260, 261, 264, 274, 275, 278, 281, 322, 425, 965, 966], "243": [26, 108, 140, 147, 150, 196, 219, 256, 261], "47": [26, 36, 39, 42, 45, 54, 59, 61, 67, 71, 77, 108, 111, 131, 136, 140, 142, 147, 150, 164, 166, 186, 193, 195, 196, 201, 208, 210, 218, 223, 224, 237, 246, 249, 256, 257, 258, 260, 261, 265, 266, 278, 318, 319, 322, 369, 405, 478, 966], "86": [26, 31, 38, 39, 41, 45, 52, 60, 61, 66, 67, 73, 76, 108, 131, 136, 140, 142, 147, 150, 164, 167, 178, 183, 184, 185, 195, 196, 199, 201, 203, 208, 209, 211, 218, 223, 224, 231, 233, 235, 236, 237, 240, 245, 256, 257, 258, 260, 261, 265, 266, 278, 316, 492, 810, 812, 822, 965, 966], "41": [26, 33, 39, 45, 54, 60, 61, 70, 71, 73, 108, 109, 131, 136, 142, 147, 150, 169, 173, 175, 195, 196, 210, 211, 218, 219, 224, 233, 235, 236, 237, 244, 256, 257, 258, 260, 261, 264, 265, 266, 271, 278, 279, 345, 431, 477, 485, 952, 966], "63": [26, 34, 39, 45, 61, 71, 73, 97, 108, 109, 129, 131, 136, 140, 142, 145, 147, 150, 164, 170, 196, 211, 212, 218, 219, 223, 224, 237, 256, 257, 258, 260, 261, 264, 265, 266, 302], "55": [26, 29, 37, 45, 47, 54, 56, 57, 61, 64, 65, 66, 67, 70, 71, 72, 74, 76, 80, 81, 83, 84, 87, 106, 108, 113, 114, 129, 131, 132, 136, 137, 140, 142, 144, 147, 148, 150, 153, 170, 176, 178, 187, 196, 199, 204, 205, 207, 208, 213, 218, 224, 232, 233, 235, 237, 239, 243, 246, 256, 257, 258, 260, 261, 264, 265, 266, 274, 275, 278, 280, 485, 493, 605, 637, 638, 691, 951, 966], "82": [26, 39, 41, 45, 61, 72, 108, 131, 140, 142, 147, 150, 172, 196, 207, 208, 211, 218, 219, 223, 224, 237, 256, 257, 258, 260, 261, 266, 270, 477, 520], "230": [26, 108, 115, 140, 147, 150, 196, 213, 224, 237, 256], "26": [26, 29, 31, 37, 39, 42, 45, 54, 58, 60, 61, 70, 71, 73, 76, 82, 93, 101, 104, 108, 109, 112, 129, 131, 132, 134, 135, 136, 137, 140, 142, 147, 150, 163, 164, 172, 185, 196, 197, 198, 201, 210, 211, 212, 213, 215, 219, 224, 237, 240, 256, 257, 258, 260, 261, 264, 265, 266, 277, 278, 279, 301, 315, 319, 345, 346, 431, 466, 605, 966], "coordin": [26, 29, 31, 33, 37, 38, 47, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 98, 108, 109, 118, 120, 121, 122, 123, 132, 135, 136, 137, 138, 143, 147, 150, 152, 153, 158, 162, 163, 177, 185, 186, 190, 191, 192, 193, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 219, 220, 224, 236, 238, 240, 241, 252, 253, 264, 266, 274, 278, 280, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 298, 303, 304, 305, 306, 319, 321, 330, 331, 333, 334, 335, 336, 337, 338, 339, 342, 346, 348, 349, 372, 374, 375, 376, 382, 385, 386, 391, 395, 398, 400, 401, 403, 405, 409, 435, 436, 438, 462, 485, 492, 504, 506, 528, 536, 544, 545, 546, 549, 552, 553, 557, 560, 564, 565, 578, 586, 588, 596, 601, 637, 638, 649, 653, 658, 665, 676, 708, 718, 719, 721, 722, 738, 742, 766, 769, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 830, 831, 843, 844, 845, 862, 863, 864, 870, 874, 878, 880, 882, 884, 885, 886, 888, 889, 896, 898, 900, 901, 902, 906, 908, 914, 916, 938, 939, 944, 966], "establish": [26, 33, 38, 47, 108, 109, 147, 152, 211, 216, 219, 230, 261, 278, 776, 777, 779, 780], "digit": [26, 98, 100, 101, 104, 108, 109, 110, 118, 121, 146, 147, 152, 168, 173, 178, 183, 184, 186, 187, 194, 195, 196, 198, 209, 212, 216, 217, 219, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 274, 278, 282, 283, 284, 285, 289, 291, 293, 294, 302, 303, 305, 309, 318, 319, 321, 325, 326, 330, 332, 333, 334, 335, 336, 338, 342, 375, 376, 382, 395, 396, 398, 400, 403, 404, 407, 409, 412, 413, 415, 436, 485, 492, 504, 506, 526, 544, 552, 553, 557, 560, 566, 578, 588, 596, 601, 637, 638, 647, 648, 649, 653, 665, 676, 702, 703, 738, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908, 916], "point": [26, 29, 31, 33, 34, 35, 37, 38, 42, 44, 47, 48, 52, 53, 58, 59, 60, 62, 64, 67, 68, 70, 71, 72, 75, 80, 81, 82, 84, 87, 98, 99, 100, 101, 104, 108, 109, 110, 118, 121, 122, 124, 125, 128, 129, 131, 135, 137, 138, 140, 141, 142, 143, 145, 147, 148, 149, 150, 152, 156, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 176, 177, 178, 179, 183, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 219, 220, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275, 278, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 307, 309, 311, 312, 314, 318, 320, 321, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 366, 367, 375, 376, 382, 385, 386, 391, 395, 400, 404, 405, 406, 407, 409, 413, 419, 421, 425, 430, 431, 435, 436, 438, 484, 485, 486, 487, 491, 492, 494, 501, 504, 506, 519, 521, 523, 526, 544, 546, 547, 551, 552, 553, 556, 557, 560, 566, 573, 578, 588, 599, 600, 601, 604, 605, 614, 615, 616, 617, 619, 620, 637, 638, 640, 648, 649, 652, 653, 658, 665, 676, 697, 701, 702, 705, 706, 708, 711, 716, 719, 722, 733, 737, 738, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 756, 763, 765, 774, 775, 776, 777, 779, 780, 781, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 815, 844, 845, 846, 849, 850, 862, 863, 864, 865, 870, 874, 878, 880, 881, 882, 883, 885, 886, 889, 890, 893, 896, 898, 900, 901, 902, 904, 905, 906, 908, 909, 910, 914, 939, 944, 946, 966], "subj00111092011": [26, 147], "po": [26, 45, 67, 73, 76, 107, 108, 109, 111, 121, 143, 147, 163, 178, 183, 203, 210, 211, 212, 213, 219, 236, 238, 282, 283, 292, 294, 304, 331, 335, 336, 339, 340, 341, 344, 347, 348, 349, 374, 383, 408, 422, 423, 505, 528, 545, 546, 566, 642, 645, 710, 738, 888, 908], "polhemu": [26, 33, 38, 47, 108, 109, 147, 152, 183, 197, 211, 219, 284, 289, 322, 338, 382, 407, 409, 566, 578], "ad": [26, 30, 31, 33, 34, 37, 38, 47, 48, 53, 54, 55, 57, 61, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 94, 95, 97, 98, 101, 108, 109, 118, 120, 121, 122, 123, 129, 132, 135, 136, 138, 147, 148, 152, 153, 158, 167, 168, 169, 173, 178, 183, 185, 186, 187, 188, 189, 193, 197, 202, 204, 205, 206, 208, 209, 211, 219, 224, 229, 233, 235, 236, 238, 246, 247, 251, 252, 253, 256, 257, 264, 266, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 319, 322, 325, 327, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 382, 408, 412, 414, 418, 431, 432, 443, 485, 492, 505, 506, 509, 529, 551, 552, 553, 561, 568, 569, 577, 593, 598, 599, 600, 603, 637, 638, 640, 645, 653, 655, 698, 700, 733, 738, 739, 743, 753, 781, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 840, 844, 848, 850, 862, 863, 864, 870, 874, 875, 878, 880, 882, 885, 886, 889, 893, 896, 898, 900, 901, 902, 904, 906, 908, 909], "devic": [26, 29, 31, 33, 38, 47, 52, 67, 71, 76, 98, 107, 108, 109, 137, 147, 150, 152, 177, 183, 185, 192, 193, 196, 197, 198, 203, 208, 210, 211, 212, 213, 219, 221, 222, 234, 236, 240, 241, 244, 282, 289, 291, 292, 293, 294, 295, 304, 309, 318, 319, 321, 325, 327, 335, 336, 338, 375, 382, 385, 398, 432, 434, 445, 448, 506, 517, 544, 552, 553, 560, 561, 563, 565, 568, 569, 570, 571, 572, 574, 576, 581, 582, 583, 585, 586, 642, 645, 663, 676, 677, 690, 700, 733, 844, 846, 862, 881, 937, 962, 966], "measur": [26, 30, 31, 33, 38, 47, 52, 67, 71, 76, 98, 100, 101, 104, 107, 108, 109, 110, 118, 121, 131, 137, 147, 152, 168, 171, 172, 173, 183, 185, 186, 189, 192, 193, 194, 195, 196, 197, 199, 203, 209, 211, 216, 217, 218, 219, 220, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 261, 262, 263, 267, 268, 270, 271, 274, 278, 280, 282, 283, 284, 286, 287, 291, 295, 297, 299, 300, 301, 303, 304, 307, 308, 318, 319, 321, 322, 326, 328, 330, 332, 333, 334, 335, 336, 337, 338, 342, 344, 346, 353, 354, 366, 367, 368, 375, 376, 380, 381, 388, 389, 390, 394, 396, 397, 410, 413, 415, 417, 420, 425, 429, 430, 431, 436, 441, 442, 443, 445, 485, 487, 489, 492, 493, 494, 504, 516, 517, 528, 529, 536, 547, 549, 550, 551, 552, 553, 554, 558, 566, 568, 583, 589, 593, 596, 599, 600, 601, 604, 605, 606, 613, 614, 615, 616, 619, 634, 635, 638, 649, 652, 672, 676, 677, 680, 681, 682, 703, 718, 723, 724, 733, 745, 746, 753, 754, 757, 761, 770, 771, 772, 773, 777, 780, 781, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 833, 844, 859, 862, 863, 866, 871, 872, 886, 888, 897, 898, 902, 937, 960, 966], "compos": [26, 33, 38, 47, 52, 67, 71, 76, 108, 109, 137, 147, 152, 164, 185, 203, 211, 216, 219, 224, 240, 318], "find": [26, 31, 33, 37, 38, 45, 47, 53, 54, 55, 56, 64, 65, 70, 73, 74, 75, 76, 78, 83, 84, 87, 95, 96, 105, 108, 109, 110, 112, 132, 135, 136, 138, 147, 152, 153, 156, 167, 168, 172, 177, 178, 182, 183, 184, 188, 193, 197, 199, 202, 203, 207, 208, 211, 219, 224, 227, 229, 230, 233, 238, 246, 253, 256, 257, 258, 266, 271, 274, 278, 280, 284, 295, 299, 304, 311, 316, 319, 321, 322, 323, 331, 335, 336, 338, 339, 340, 341, 344, 347, 348, 349, 388, 426, 427, 428, 436, 519, 524, 526, 527, 552, 553, 573, 605, 635, 638, 641, 644, 650, 651, 653, 654, 655, 656, 664, 665, 666, 667, 669, 670, 671, 685, 701, 705, 726, 748, 752, 755, 766, 844, 883, 885, 946, 951, 955, 956, 958, 966], "meg4": [26, 33, 38, 47, 108, 109, 147, 152, 211, 219], "system": [26, 29, 31, 33, 34, 36, 38, 45, 47, 53, 89, 97, 102, 107, 108, 109, 137, 144, 147, 151, 153, 157, 163, 164, 177, 178, 182, 183, 185, 186, 187, 193, 195, 196, 197, 199, 205, 210, 211, 212, 213, 217, 219, 220, 223, 227, 228, 233, 234, 235, 236, 238, 240, 241, 244, 245, 246, 256, 269, 276, 277, 278, 282, 283, 286, 287, 288, 289, 291, 292, 295, 302, 303, 304, 306, 308, 309, 311, 313, 314, 318, 319, 321, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 353, 354, 369, 382, 385, 390, 393, 398, 400, 401, 403, 404, 405, 407, 409, 424, 435, 436, 438, 445, 452, 491, 505, 520, 521, 522, 523, 524, 534, 545, 546, 547, 552, 553, 555, 560, 561, 562, 564, 565, 566, 578, 590, 596, 601, 635, 638, 640, 674, 676, 693, 706, 716, 723, 741, 742, 743, 752, 753, 755, 775, 776, 777, 778, 779, 780, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 814, 830, 844, 846, 862, 863, 876, 879, 881, 884, 887, 893, 899, 907, 913, 914, 921, 922, 925, 926, 927, 939, 951, 952, 953, 955, 957, 962, 966], "clock": [26, 33, 38, 47, 108, 109, 147, 152, 211, 219, 293, 319, 552, 553, 566, 638, 690, 893, 899], "check": [26, 31, 33, 38, 47, 52, 67, 69, 71, 76, 88, 97, 108, 109, 137, 147, 148, 149, 152, 154, 162, 164, 167, 169, 170, 171, 184, 185, 186, 188, 193, 195, 197, 198, 199, 202, 203, 208, 209, 211, 213, 219, 228, 229, 230, 233, 234, 240, 244, 245, 247, 256, 257, 270, 280, 283, 284, 286, 287, 288, 289, 291, 292, 294, 295, 298, 301, 303, 304, 305, 306, 308, 309, 310, 311, 314, 318, 319, 328, 330, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 388, 390, 458, 464, 504, 514, 518, 521, 551, 552, 553, 561, 564, 568, 613, 627, 638, 646, 648, 776, 777, 779, 780, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 830, 844, 862, 880, 882, 883, 884, 885, 916, 946, 951, 952], "valid": [26, 33, 34, 35, 36, 37, 38, 41, 42, 47, 102, 108, 109, 139, 147, 149, 152, 164, 189, 198, 204, 211, 218, 219, 224, 230, 239, 256, 271, 282, 284, 286, 292, 303, 306, 310, 311, 318, 322, 328, 330, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 395, 408, 425, 430, 477, 485, 491, 492, 501, 502, 506, 517, 519, 526, 533, 537, 552, 553, 614, 615, 637, 638, 640, 653, 655, 656, 660, 719, 733, 771, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 821, 831, 844, 848, 855, 862, 863, 870, 877, 878, 879, 880, 882, 884, 885, 889, 898, 901, 904, 906, 907, 908, 909, 944, 946, 958, 959], "240": [26, 61, 68, 72, 103, 108, 137, 147, 150, 196, 198, 208, 213, 224, 227, 231, 237, 260, 270], "x": [26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 98, 99, 100, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 152, 153, 158, 159, 160, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 183, 184, 185, 187, 189, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 220, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 247, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 271, 274, 275, 278, 283, 284, 285, 286, 294, 295, 304, 306, 308, 311, 319, 321, 322, 325, 330, 333, 334, 335, 336, 338, 340, 341, 342, 344, 346, 347, 348, 349, 357, 372, 382, 383, 405, 415, 416, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 523, 524, 525, 552, 553, 564, 565, 604, 605, 613, 637, 638, 639, 647, 653, 658, 662, 663, 685, 708, 741, 762, 765, 770, 774, 775, 776, 777, 778, 779, 780, 782, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 808, 810, 811, 812, 814, 815, 819, 821, 822, 831, 834, 835, 837, 844, 845, 849, 863, 865, 867, 870, 878, 880, 882, 884, 885, 886, 887, 888, 889, 894, 896, 898, 900, 901, 902, 904, 906, 908, 909, 910, 912, 914, 938, 958], "1800": [26, 147, 220, 223], "432000": [26, 147], "302": [26, 50, 51, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 103, 110, 121, 122, 131, 132, 134, 135, 136, 138, 140, 147, 149, 150, 179, 189, 193, 196, 203, 204, 205, 206, 207, 208, 213, 224, 237, 252, 256, 261, 264, 266, 966], "ch": [26, 27, 33, 34, 38, 47, 95, 108, 109, 140, 143, 147, 148, 152, 163, 164, 168, 176, 178, 193, 196, 197, 211, 219, 233, 244, 251, 253, 278, 280, 289, 300, 304, 319, 321, 325, 338, 389, 390, 452, 477, 478, 552, 553, 589, 916], "compens": [26, 27, 33, 38, 47, 53, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 105, 106, 108, 109, 112, 113, 114, 129, 144, 147, 148, 152, 167, 170, 176, 199, 203, 205, 206, 208, 211, 212, 219, 220, 230, 237, 240, 256, 257, 274, 275, 278, 281, 282, 283, 286, 287, 292, 293, 295, 299, 300, 305, 307, 325, 328, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 422, 436, 506, 508, 520, 521, 523, 524, 526, 551, 552, 553, 566, 574, 600, 635, 638, 649, 665, 672, 676, 706, 754, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 887, 888, 966], "grade": [26, 33, 38, 47, 50, 67, 97, 108, 109, 129, 137, 147, 152, 185, 188, 211, 216, 219, 264, 266, 287, 292, 328, 333, 334, 335, 336, 338, 339, 540, 541, 551, 552, 553, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "144000": [26, 108], "sec": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 54, 55, 58, 59, 60, 68, 71, 72, 75, 85, 88, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 115, 120, 121, 124, 125, 127, 128, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 149, 152, 159, 160, 162, 163, 168, 171, 173, 176, 178, 179, 183, 186, 189, 193, 194, 195, 196, 199, 204, 206, 207, 208, 209, 210, 211, 212, 213, 218, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 251, 252, 253, 258, 259, 260, 261, 264, 266, 270, 274, 286, 338, 788], "type": [26, 27, 29, 31, 34, 41, 42, 48, 53, 55, 56, 57, 58, 60, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 90, 94, 98, 101, 103, 105, 106, 108, 109, 110, 112, 113, 118, 121, 122, 123, 131, 137, 141, 142, 143, 144, 146, 147, 148, 152, 153, 156, 158, 162, 163, 164, 168, 169, 170, 171, 172, 173, 176, 177, 183, 184, 185, 186, 189, 193, 194, 195, 197, 198, 199, 203, 205, 206, 207, 208, 209, 210, 212, 216, 218, 220, 224, 227, 228, 229, 232, 233, 234, 235, 236, 237, 239, 245, 247, 251, 252, 253, 256, 260, 261, 269, 270, 274, 275, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 318, 320, 321, 323, 326, 328, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 366, 367, 378, 380, 381, 383, 384, 387, 388, 389, 390, 391, 397, 405, 411, 414, 425, 426, 427, 428, 429, 430, 440, 441, 442, 443, 445, 452, 458, 477, 478, 485, 487, 492, 494, 501, 506, 509, 510, 517, 518, 520, 523, 524, 525, 526, 528, 529, 530, 535, 542, 547, 549, 550, 551, 552, 553, 555, 561, 568, 573, 581, 586, 587, 596, 616, 628, 635, 636, 637, 638, 639, 640, 643, 647, 649, 652, 653, 654, 655, 656, 663, 664, 665, 667, 668, 672, 676, 682, 684, 691, 701, 703, 705, 706, 729, 730, 733, 740, 741, 742, 754, 757, 760, 769, 775, 776, 777, 779, 780, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 827, 830, 844, 846, 861, 862, 865, 869, 870, 871, 872, 874, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 897, 898, 899, 900, 901, 902, 904, 906, 907, 908, 909, 910, 912, 917, 932, 946, 949, 951, 952, 957, 958, 959, 961, 966], "select": [26, 31, 33, 34, 37, 41, 47, 50, 54, 55, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 76, 77, 80, 81, 84, 85, 86, 94, 98, 99, 102, 104, 109, 110, 115, 118, 121, 122, 123, 127, 131, 137, 140, 141, 147, 148, 149, 156, 164, 168, 169, 171, 177, 178, 185, 186, 188, 189, 193, 194, 196, 197, 199, 202, 204, 205, 206, 207, 208, 209, 217, 219, 224, 227, 228, 229, 230, 232, 235, 236, 238, 240, 245, 246, 247, 252, 253, 257, 261, 265, 266, 269, 270, 271, 275, 278, 280, 282, 283, 284, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 303, 304, 306, 307, 309, 310, 311, 318, 321, 322, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 389, 394, 425, 426, 427, 428, 436, 487, 493, 516, 523, 549, 552, 553, 559, 590, 630, 631, 633, 634, 635, 636, 638, 639, 643, 652, 653, 655, 656, 669, 670, 685, 711, 723, 730, 733, 752, 755, 775, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 807, 813, 829, 863, 870, 876, 880, 882, 884, 885, 886, 889, 891, 893, 899, 902, 904, 908, 911, 915, 920, 921, 923, 925, 929, 946, 949, 955], "re": [26, 30, 34, 55, 71, 94, 98, 121, 122, 129, 131, 141, 142, 148, 167, 168, 171, 178, 183, 185, 186, 187, 188, 189, 193, 194, 196, 197, 198, 199, 209, 217, 228, 229, 230, 232, 233, 234, 235, 236, 244, 246, 252, 258, 260, 266, 271, 274, 278, 289, 291, 304, 311, 314, 320, 322, 325, 327, 330, 333, 334, 335, 336, 338, 342, 350, 383, 387, 485, 492, 510, 552, 553, 578, 630, 631, 634, 636, 637, 638, 647, 702, 730, 733, 738, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 807, 813, 830, 863, 878, 885, 889, 898, 901, 903, 906, 908, 946, 947, 956, 960], "item": [26, 29, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 156, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 183, 184, 185, 186, 187, 189, 193, 194, 195, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 247, 251, 252, 253, 257, 258, 259, 260, 261, 264, 266, 270, 274, 275, 291, 309, 310, 326, 330, 331, 333, 334, 338, 346, 352, 357, 372, 552, 553, 580, 604, 658, 793, 794, 795, 796, 797, 798, 799, 800, 831, 844, 958], "deactiv": [26, 29, 34, 55, 68, 77, 86, 95, 98, 120, 121, 122, 139, 169, 173, 186, 189, 209, 219, 234, 235, 236, 240, 252, 867, 960], "wa": [26, 29, 31, 34, 39, 44, 47, 59, 87, 92, 98, 101, 122, 143, 167, 171, 176, 178, 185, 186, 187, 193, 194, 195, 197, 198, 208, 209, 210, 217, 219, 220, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 246, 247, 251, 259, 260, 261, 271, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 319, 321, 322, 326, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 353, 354, 366, 367, 402, 418, 462, 484, 485, 492, 507, 509, 520, 521, 523, 524, 549, 552, 553, 569, 570, 573, 583, 590, 600, 611, 612, 614, 615, 620, 621, 622, 637, 638, 639, 645, 650, 651, 656, 658, 662, 665, 666, 667, 676, 683, 700, 701, 705, 726, 738, 741, 742, 774, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 816, 822, 844, 855, 862, 863, 876, 878, 880, 885, 889, 898, 901, 906, 908, 911, 915, 923, 952, 958, 959], "appli": [26, 29, 31, 33, 34, 35, 36, 37, 38, 41, 42, 44, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 102, 106, 107, 109, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 128, 129, 131, 132, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 156, 159, 161, 162, 163, 167, 168, 169, 170, 172, 173, 176, 177, 178, 179, 183, 185, 186, 187, 188, 189, 193, 194, 196, 197, 199, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 217, 219, 224, 227, 228, 229, 231, 233, 235, 236, 238, 239, 240, 241, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 274, 275, 278, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 298, 301, 302, 304, 305, 306, 308, 309, 310, 311, 318, 320, 321, 322, 323, 326, 327, 328, 330, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 382, 408, 424, 429, 438, 441, 443, 485, 487, 488, 492, 493, 494, 496, 498, 506, 515, 516, 517, 518, 519, 520, 521, 523, 524, 526, 529, 543, 549, 550, 552, 553, 594, 597, 605, 606, 607, 608, 609, 614, 615, 617, 620, 621, 622, 637, 638, 639, 640, 649, 650, 651, 652, 653, 654, 655, 656, 658, 661, 665, 666, 667, 668, 673, 676, 683, 691, 699, 703, 706, 707, 708, 728, 733, 745, 746, 747, 748, 749, 751, 756, 770, 771, 776, 777, 778, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 808, 821, 823, 824, 825, 826, 827, 828, 832, 833, 834, 844, 846, 855, 870, 871, 876, 877, 878, 880, 882, 884, 885, 889, 890, 891, 893, 899, 900, 904, 906, 907, 909, 916, 938, 941, 946], "yet": [26, 34, 98, 122, 186, 209, 217, 220, 234, 236, 271, 311, 333, 449, 450, 451, 454, 455, 456, 458, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 493, 498, 627, 653, 844], "5": [26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 83, 84, 85, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 102, 104, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 268, 269, 270, 271, 274, 275, 277, 278, 280, 281, 282, 283, 288, 289, 292, 293, 299, 301, 302, 303, 307, 310, 311, 312, 314, 315, 318, 319, 322, 325, 327, 328, 333, 334, 335, 336, 339, 340, 341, 342, 344, 347, 348, 349, 351, 366, 367, 369, 371, 373, 377, 384, 396, 405, 425, 431, 440, 452, 458, 484, 485, 491, 502, 505, 506, 508, 525, 526, 527, 528, 541, 549, 552, 553, 578, 589, 593, 594, 605, 611, 616, 620, 621, 622, 637, 638, 640, 641, 646, 647, 648, 649, 650, 653, 654, 655, 656, 657, 661, 664, 665, 666, 669, 671, 674, 676, 680, 684, 685, 702, 710, 729, 738, 742, 775, 789, 791, 793, 794, 795, 797, 799, 800, 808, 812, 814, 822, 823, 824, 826, 827, 834, 844, 846, 861, 865, 877, 878, 881, 882, 883, 889, 891, 894, 899, 904, 909, 946, 951, 952, 958, 966], "becaus": [26, 29, 30, 31, 33, 37, 42, 44, 47, 52, 60, 67, 69, 70, 71, 76, 87, 97, 101, 102, 108, 109, 110, 129, 135, 142, 143, 147, 167, 169, 170, 171, 173, 176, 177, 178, 185, 187, 188, 189, 193, 194, 195, 197, 198, 203, 207, 208, 209, 210, 211, 217, 218, 219, 220, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 246, 251, 256, 257, 258, 261, 264, 271, 285, 308, 309, 311, 312, 318, 320, 321, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 418, 429, 506, 528, 648, 661, 665, 675, 776, 777, 779, 780, 795, 796, 854, 907, 946, 949, 956, 960, 963], "all": [26, 29, 30, 31, 33, 36, 39, 40, 44, 45, 47, 53, 54, 57, 59, 61, 66, 71, 85, 88, 90, 94, 97, 100, 101, 108, 109, 110, 118, 123, 125, 127, 131, 135, 139, 140, 141, 142, 144, 145, 147, 148, 149, 154, 162, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 198, 199, 203, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 261, 265, 269, 270, 271, 274, 275, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 299, 301, 302, 303, 304, 305, 307, 309, 310, 312, 314, 316, 318, 319, 320, 321, 322, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 364, 366, 367, 369, 371, 372, 377, 378, 379, 380, 382, 383, 384, 387, 392, 393, 397, 398, 399, 408, 411, 419, 420, 424, 425, 429, 430, 431, 432, 436, 437, 440, 441, 442, 443, 445, 459, 485, 487, 488, 492, 494, 501, 502, 506, 509, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 533, 535, 541, 542, 543, 544, 547, 549, 550, 552, 553, 554, 555, 559, 561, 565, 568, 576, 578, 580, 582, 584, 587, 592, 604, 605, 607, 609, 612, 614, 615, 616, 617, 621, 622, 624, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 648, 652, 653, 654, 655, 656, 657, 658, 661, 663, 664, 665, 668, 671, 672, 676, 682, 684, 691, 696, 699, 700, 702, 703, 706, 707, 708, 711, 721, 726, 727, 733, 737, 739, 748, 754, 757, 766, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 812, 813, 814, 818, 822, 824, 826, 827, 831, 834, 842, 844, 846, 852, 853, 862, 863, 864, 870, 874, 876, 877, 878, 880, 881, 882, 883, 885, 886, 887, 889, 890, 893, 895, 896, 897, 898, 899, 900, 901, 902, 904, 906, 907, 908, 909, 910, 922, 925, 926, 928, 929, 949, 955, 959, 961, 966], "were": [26, 30, 31, 33, 36, 44, 47, 64, 71, 108, 109, 135, 147, 164, 167, 168, 169, 170, 171, 176, 177, 178, 188, 194, 195, 198, 199, 208, 209, 210, 211, 216, 218, 219, 220, 228, 229, 230, 233, 234, 235, 236, 238, 239, 241, 244, 245, 246, 247, 251, 256, 258, 260, 261, 274, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 319, 321, 328, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 350, 366, 367, 390, 419, 420, 431, 434, 477, 478, 509, 511, 513, 514, 526, 552, 553, 577, 580, 598, 633, 638, 648, 649, 664, 665, 676, 703, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 879, 890, 892, 899, 936, 946, 959], "effect": [26, 33, 43, 45, 46, 47, 52, 53, 65, 83, 85, 97, 98, 102, 110, 111, 127, 131, 137, 140, 141, 148, 149, 160, 168, 172, 176, 178, 187, 189, 193, 194, 195, 199, 210, 213, 219, 227, 229, 230, 231, 235, 236, 237, 238, 239, 240, 247, 251, 252, 253, 257, 258, 260, 261, 266, 269, 270, 278, 282, 283, 289, 292, 295, 299, 301, 309, 321, 333, 334, 335, 336, 338, 339, 340, 343, 344, 348, 366, 367, 390, 425, 429, 430, 441, 442, 443, 477, 478, 485, 486, 492, 501, 506, 508, 509, 524, 528, 529, 547, 549, 550, 552, 553, 569, 570, 605, 608, 616, 638, 641, 646, 703, 770, 772, 775, 776, 777, 779, 780, 793, 794, 799, 800, 803, 814, 876, 880, 886, 889, 891, 893, 899, 900, 902, 904, 946, 958, 959, 966], "size": [26, 31, 34, 35, 36, 47, 48, 58, 61, 67, 69, 70, 72, 79, 84, 97, 98, 102, 110, 128, 136, 137, 142, 148, 150, 155, 160, 161, 162, 163, 169, 171, 173, 177, 178, 182, 183, 185, 187, 193, 198, 199, 202, 204, 205, 206, 207, 208, 210, 213, 217, 218, 227, 228, 230, 231, 234, 235, 236, 237, 239, 240, 241, 244, 247, 251, 252, 253, 258, 261, 264, 269, 270, 271, 274, 278, 283, 286, 292, 295, 302, 303, 304, 306, 310, 321, 322, 330, 331, 333, 334, 335, 336, 340, 341, 342, 343, 344, 347, 348, 349, 382, 390, 398, 400, 431, 485, 487, 492, 496, 497, 520, 521, 523, 524, 525, 549, 551, 552, 553, 597, 611, 635, 637, 638, 653, 659, 665, 671, 674, 736, 755, 771, 775, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 820, 834, 844, 854, 855, 859, 874, 876, 878, 884, 885, 889, 891, 892, 893, 896, 898, 899, 901, 902, 904, 905, 906, 907, 908, 909, 913, 959, 963], "707": [26, 237, 261], "spectral": [26, 47, 53, 58, 59, 60, 95, 98, 102, 133, 134, 140, 141, 142, 145, 160, 164, 169, 170, 193, 199, 210, 213, 224, 227, 229, 231, 235, 237, 239, 251, 253, 270, 278, 283, 286, 287, 293, 298, 300, 304, 305, 306, 310, 314, 319, 330, 333, 334, 335, 336, 338, 339, 344, 358, 359, 360, 366, 430, 490, 493, 526, 529, 552, 553, 595, 600, 604, 611, 612, 616, 619, 635, 638, 695, 703, 710, 737, 777, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 813, 814, 815, 823, 824, 826, 827, 838, 844, 862, 872, 878, 900, 914, 966], "densiti": [26, 53, 58, 59, 60, 95, 102, 103, 105, 106, 112, 133, 134, 147, 160, 164, 169, 170, 187, 188, 193, 199, 210, 213, 218, 224, 227, 228, 229, 231, 235, 237, 251, 253, 269, 270, 278, 283, 286, 291, 300, 303, 304, 305, 306, 310, 319, 321, 322, 330, 333, 334, 335, 336, 338, 339, 344, 359, 366, 396, 430, 443, 490, 526, 552, 553, 595, 600, 604, 611, 612, 616, 619, 635, 638, 646, 647, 664, 678, 679, 683, 695, 703, 710, 737, 792, 793, 794, 799, 800, 801, 802, 803, 804, 805, 806, 807, 813, 814, 815, 838, 844, 846, 862, 872, 878, 881, 900, 914, 966], "db": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 98, 99, 100, 101, 102, 104, 109, 110, 111, 115, 127, 136, 137, 141, 142, 143, 149, 160, 163, 164, 168, 169, 170, 171, 173, 178, 193, 196, 199, 210, 213, 219, 224, 227, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 244, 247, 251, 253, 261, 269, 270, 271, 294, 295, 305, 321, 322, 333, 334, 335, 336, 338, 381, 382, 443, 445, 521, 552, 553, 568, 581, 611, 635, 636, 638, 733, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862, 878, 887, 891, 894, 900, 902], "need": [26, 29, 30, 31, 33, 37, 54, 55, 56, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 80, 81, 84, 85, 87, 96, 97, 101, 102, 103, 113, 118, 122, 123, 131, 132, 135, 136, 137, 138, 140, 142, 145, 147, 150, 162, 163, 167, 168, 169, 170, 171, 172, 176, 177, 178, 183, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 199, 202, 204, 205, 206, 207, 208, 209, 210, 212, 216, 218, 219, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 271, 274, 275, 278, 287, 291, 293, 294, 299, 302, 303, 310, 311, 312, 314, 318, 319, 322, 323, 333, 334, 335, 336, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 352, 366, 388, 399, 444, 447, 458, 486, 487, 495, 501, 509, 518, 523, 543, 551, 552, 553, 561, 568, 577, 596, 601, 625, 638, 683, 738, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 851, 863, 884, 889, 899, 918, 951, 953, 955, 956, 958, 959, 960], "than": [26, 29, 31, 39, 44, 50, 52, 59, 60, 67, 68, 70, 71, 72, 76, 80, 84, 85, 87, 96, 97, 101, 106, 110, 113, 114, 122, 142, 147, 150, 153, 162, 163, 167, 168, 169, 170, 171, 173, 176, 177, 178, 183, 185, 188, 193, 194, 195, 196, 197, 198, 199, 203, 207, 208, 210, 211, 212, 213, 216, 219, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 256, 259, 269, 271, 274, 275, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 321, 322, 328, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 358, 375, 376, 424, 426, 427, 428, 429, 436, 485, 487, 490, 492, 496, 502, 504, 514, 519, 521, 523, 524, 526, 529, 541, 549, 550, 552, 553, 570, 572, 578, 592, 603, 611, 612, 622, 627, 637, 638, 640, 646, 648, 653, 655, 659, 671, 674, 675, 677, 681, 684, 702, 707, 728, 738, 770, 776, 777, 778, 779, 780, 781, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 803, 806, 811, 814, 819, 825, 828, 844, 846, 863, 864, 876, 878, 879, 881, 882, 885, 889, 898, 899, 901, 904, 906, 908, 909, 951, 957, 958, 959], "make": [26, 29, 30, 35, 36, 39, 44, 45, 47, 54, 57, 58, 60, 64, 68, 71, 74, 76, 80, 81, 85, 88, 94, 97, 101, 103, 113, 118, 121, 122, 131, 137, 139, 140, 141, 142, 150, 153, 160, 162, 163, 167, 168, 169, 170, 171, 177, 178, 183, 185, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 219, 220, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 244, 246, 251, 256, 258, 259, 260, 264, 265, 266, 271, 275, 276, 277, 282, 284, 285, 286, 288, 289, 291, 292, 293, 294, 295, 298, 303, 304, 307, 310, 314, 318, 319, 320, 321, 322, 325, 332, 333, 334, 335, 336, 338, 340, 341, 344, 346, 347, 348, 349, 350, 366, 367, 395, 407, 425, 429, 430, 431, 436, 441, 442, 443, 444, 485, 488, 489, 492, 494, 495, 504, 508, 509, 520, 521, 523, 524, 528, 529, 535, 542, 547, 549, 550, 552, 553, 565, 598, 616, 622, 631, 637, 638, 648, 671, 672, 675, 684, 694, 696, 706, 716, 725, 727, 741, 753, 784, 786, 792, 812, 822, 823, 824, 826, 831, 839, 840, 844, 864, 865, 868, 872, 883, 886, 892, 899, 904, 909, 910, 939, 946, 947, 951, 952, 959, 960, 966], "topographi": [26, 39, 47, 53, 97, 98, 102, 113, 142, 148, 151, 157, 159, 169, 171, 178, 193, 197, 199, 203, 219, 233, 235, 236, 247, 259, 261, 269, 278, 285, 287, 293, 298, 299, 301, 302, 321, 333, 334, 335, 336, 338, 342, 343, 383, 485, 492, 552, 553, 635, 638, 654, 754, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 859, 878, 883, 884, 885, 889, 891, 895, 900, 902, 906, 907, 966], "disabl": [26, 113, 142, 169, 176, 177, 178, 199, 227, 228, 231, 247, 259, 287, 292, 293, 294, 303, 304, 305, 306, 309, 310, 325, 330, 333, 334, 335, 336, 340, 341, 342, 343, 344, 347, 348, 349, 378, 436, 485, 491, 492, 497, 552, 553, 637, 638, 665, 676, 731, 735, 736, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 839, 844, 863, 878, 880, 884, 885, 889, 898, 899, 901, 906, 908, 912, 924, 951], "interact": [26, 53, 59, 71, 73, 113, 142, 143, 148, 167, 176, 177, 178, 185, 192, 193, 195, 198, 199, 207, 208, 219, 228, 229, 233, 234, 235, 239, 244, 253, 256, 259, 260, 266, 270, 271, 274, 276, 278, 280, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 297, 299, 300, 303, 304, 307, 308, 309, 310, 311, 312, 314, 322, 323, 325, 330, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 359, 366, 485, 492, 544, 552, 553, 605, 637, 638, 684, 770, 772, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 846, 847, 862, 863, 867, 877, 878, 880, 881, 882, 884, 885, 889, 891, 893, 898, 899, 900, 901, 902, 904, 906, 907, 908, 909, 951], "contigu": [26, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 60, 68, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 213, 224, 231, 232, 233, 235, 238, 239, 240, 241, 260, 261, 339], "segment": [26, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 49, 50, 53, 59, 60, 64, 68, 90, 97, 100, 101, 104, 108, 109, 110, 111, 115, 127, 137, 141, 142, 143, 149, 160, 162, 163, 164, 168, 171, 172, 173, 178, 189, 195, 199, 211, 213, 219, 224, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 246, 261, 270, 278, 282, 284, 286, 287, 288, 289, 291, 292, 295, 302, 303, 306, 310, 318, 319, 321, 322, 325, 327, 331, 333, 334, 335, 336, 340, 341, 343, 344, 346, 347, 348, 349, 373, 425, 430, 514, 537, 538, 539, 551, 552, 553, 583, 597, 606, 608, 638, 640, 641, 642, 643, 644, 645, 648, 655, 656, 661, 665, 666, 674, 676, 793, 799, 814, 815, 842, 844, 880, 882, 889, 891], "up": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 49, 50, 52, 53, 54, 59, 60, 68, 70, 71, 76, 96, 99, 100, 101, 104, 107, 109, 110, 111, 115, 118, 121, 122, 123, 127, 131, 132, 137, 139, 140, 141, 142, 143, 145, 149, 152, 159, 160, 163, 167, 168, 171, 172, 173, 177, 178, 182, 183, 185, 186, 187, 189, 192, 193, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 246, 247, 252, 253, 257, 258, 261, 264, 266, 271, 275, 280, 281, 282, 285, 287, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 310, 314, 321, 322, 323, 330, 331, 333, 334, 335, 336, 340, 341, 342, 343, 344, 345, 347, 348, 349, 485, 490, 491, 492, 497, 525, 552, 553, 578, 611, 612, 637, 638, 640, 665, 731, 737, 738, 775, 784, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 814, 842, 844, 865, 874, 876, 877, 878, 882, 885, 889, 892, 898, 899, 901, 904, 906, 908, 909, 910, 916, 946, 951, 956], "band": [26, 29, 31, 33, 34, 35, 38, 39, 40, 41, 42, 44, 47, 53, 58, 59, 60, 68, 99, 101, 104, 109, 115, 122, 133, 134, 135, 137, 138, 140, 142, 143, 149, 155, 160, 163, 164, 168, 169, 171, 172, 173, 194, 199, 224, 227, 229, 230, 231, 232, 233, 235, 239, 240, 241, 247, 260, 261, 269, 270, 271, 278, 283, 285, 295, 297, 305, 319, 321, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 356, 487, 493, 496, 520, 521, 523, 524, 526, 552, 553, 621, 643, 680, 768, 793, 794, 799, 800, 812, 822, 823, 826, 870, 878, 894, 946, 966], "stop": [26, 31, 55, 95, 109, 121, 124, 163, 194, 199, 229, 230, 231, 238, 240, 244, 245, 246, 274, 283, 285, 287, 295, 302, 304, 311, 312, 325, 326, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 353, 354, 365, 428, 487, 496, 520, 521, 523, 524, 551, 552, 553, 572, 598, 608, 611, 638, 665, 674, 690, 890, 893, 929], "paramet": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 50, 57, 60, 66, 67, 68, 69, 70, 74, 80, 81, 85, 88, 94, 96, 98, 99, 100, 101, 103, 104, 109, 110, 111, 115, 124, 125, 127, 128, 129, 135, 136, 137, 138, 140, 141, 142, 143, 145, 147, 148, 149, 150, 152, 156, 159, 160, 163, 164, 167, 168, 169, 171, 172, 173, 176, 177, 178, 183, 185, 186, 188, 189, 193, 195, 196, 197, 198, 199, 202, 205, 207, 213, 216, 219, 220, 223, 224, 227, 228, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 259, 269, 270, 271, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 320, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 853, 854, 855, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 949], "design": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 87, 99, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 187, 188, 199, 207, 213, 216, 218, 219, 227, 229, 231, 232, 233, 235, 236, 238, 239, 240, 241, 253, 256, 261, 278, 280, 283, 312, 314, 319, 326, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 413, 459, 462, 487, 496, 520, 521, 523, 524, 552, 553, 561, 563, 565, 568, 569, 570, 576, 581, 584, 637, 639, 676, 683, 690, 700, 770, 774, 808, 819, 899, 930, 931, 946], "pass": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 69, 85, 99, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 150, 160, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 182, 183, 185, 193, 194, 195, 196, 197, 198, 199, 207, 210, 213, 217, 219, 220, 224, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 258, 260, 261, 264, 265, 266, 269, 270, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 318, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 388, 392, 393, 399, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 501, 502, 504, 506, 509, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 535, 536, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 629, 630, 631, 634, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 735, 737, 738, 740, 741, 742, 743, 752, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 769, 776, 777, 778, 779, 780, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 814, 815, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 843, 844, 845, 846, 853, 859, 862, 863, 866, 868, 870, 871, 872, 874, 876, 877, 878, 879, 880, 881, 883, 884, 885, 886, 889, 890, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 915, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 951, 956], "zero": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 50, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 90, 97, 99, 100, 101, 102, 104, 109, 110, 111, 115, 118, 121, 122, 123, 127, 137, 140, 141, 142, 143, 148, 149, 160, 163, 167, 168, 169, 171, 173, 176, 178, 179, 185, 187, 189, 193, 195, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 251, 252, 253, 256, 260, 261, 271, 280, 283, 284, 285, 286, 287, 289, 291, 293, 295, 302, 305, 310, 311, 318, 321, 322, 326, 327, 328, 331, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 347, 348, 349, 350, 352, 366, 367, 425, 429, 431, 441, 487, 491, 496, 497, 498, 519, 520, 521, 523, 524, 525, 526, 547, 552, 553, 554, 566, 611, 622, 638, 639, 666, 690, 703, 740, 741, 742, 750, 754, 769, 776, 777, 779, 780, 784, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 815, 822, 823, 824, 825, 826, 828, 844, 846, 861, 865, 875, 876, 881, 899, 904, 909, 910], "phase": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 53, 60, 68, 99, 100, 101, 104, 109, 110, 111, 115, 127, 133, 134, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 194, 199, 213, 218, 219, 224, 227, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 253, 261, 271, 278, 280, 283, 284, 299, 301, 303, 307, 310, 319, 321, 322, 333, 334, 335, 336, 338, 339, 340, 341, 344, 347, 348, 349, 359, 412, 443, 487, 496, 498, 519, 520, 521, 523, 524, 525, 526, 552, 553, 604, 609, 619, 622, 635, 638, 710, 794, 800, 823, 824, 834, 887, 959, 966], "causal": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 199, 213, 219, 224, 227, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 261, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 491, 520, 521, 523, 524, 552, 553], "bandstop": [26, 31, 109, 163, 231, 240, 552, 553, 899], "domain": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 72, 99, 100, 101, 104, 109, 110, 111, 115, 127, 131, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 192, 193, 199, 213, 219, 224, 227, 229, 230, 231, 232, 235, 238, 239, 240, 241, 247, 261, 271, 272, 273, 278, 303, 312, 322, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 497, 521, 523, 524, 525, 526, 552, 553, 621, 622, 738, 789, 793, 795, 799, 832, 839, 966], "ham": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 213, 219, 224, 230, 231, 232, 233, 235, 238, 239, 240, 241, 261, 285, 293, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 524, 552, 553, 815, 900], "0194": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 213, 219, 224, 230, 231, 232, 233, 238, 239, 240, 241, 261], "passband": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 199, 213, 219, 224, 227, 229, 231, 232, 233, 235, 238, 239, 240, 241, 261, 318], "rippl": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 213, 219, 224, 231, 232, 233, 238, 239, 240, 241, 261], "stopband": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 213, 219, 224, 231, 232, 233, 238, 239, 240, 241, 261], "attenu": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 189, 213, 219, 224, 231, 232, 233, 238, 239, 240, 241, 261, 283, 285, 310, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 524, 552, 553], "lower": [26, 27, 29, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 47, 48, 60, 63, 66, 68, 75, 80, 81, 88, 97, 99, 100, 101, 104, 109, 110, 115, 127, 135, 140, 141, 142, 143, 148, 149, 160, 163, 168, 169, 171, 173, 178, 183, 187, 199, 207, 208, 211, 220, 224, 227, 229, 230, 231, 232, 233, 234, 235, 239, 240, 241, 247, 258, 259, 260, 261, 264, 266, 271, 274, 281, 286, 295, 321, 328, 330, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 485, 487, 490, 492, 511, 521, 523, 552, 553, 597, 611, 612, 637, 638, 643, 648, 653, 680, 699, 768, 775, 776, 778, 779, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 815, 855, 863, 865, 870, 877, 878, 884, 885, 889, 898, 899, 900, 901, 904, 906, 908, 909, 910, 951], "transit": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 199, 213, 219, 224, 227, 229, 231, 232, 233, 235, 238, 239, 240, 241, 261, 287, 291, 292, 322, 326, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 524, 552, 553, 640, 680, 789, 912], "bandwidth": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 101, 104, 109, 110, 111, 115, 127, 132, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 199, 213, 219, 224, 227, 229, 231, 232, 233, 235, 238, 239, 240, 241, 261, 271, 307, 333, 334, 335, 336, 490, 498, 524, 552, 553, 611, 612, 793, 799, 803, 806, 808, 814, 824, 827, 878], "50": [26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 51, 52, 54, 60, 61, 67, 68, 71, 72, 73, 92, 95, 99, 104, 108, 109, 110, 111, 115, 118, 123, 127, 129, 131, 132, 136, 137, 141, 142, 143, 148, 149, 150, 157, 160, 162, 163, 164, 170, 171, 173, 176, 177, 178, 181, 185, 187, 193, 195, 196, 197, 198, 199, 205, 207, 211, 212, 213, 217, 218, 219, 223, 224, 227, 229, 230, 231, 232, 233, 235, 237, 240, 241, 244, 245, 246, 253, 256, 257, 258, 260, 261, 264, 265, 266, 271, 278, 285, 306, 318, 322, 325, 405, 520, 552, 553, 572, 620, 647, 661, 746, 751, 769, 777, 844, 894, 966], "hz": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 59, 60, 68, 95, 98, 99, 100, 101, 104, 108, 109, 110, 111, 115, 118, 121, 122, 123, 127, 132, 135, 136, 137, 141, 142, 143, 149, 152, 160, 163, 164, 168, 169, 171, 173, 178, 193, 194, 195, 196, 199, 207, 210, 211, 213, 217, 218, 219, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 258, 259, 260, 261, 269, 270, 274, 278, 319, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 490, 496, 520, 521, 523, 524, 526, 552, 553, 611, 612, 638, 643, 646, 650, 651, 665, 667, 670, 676, 680, 755, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 803, 806, 812, 814, 820, 822, 823, 824, 826, 827, 876, 878, 887, 894, 899, 900, 949], "upper": [26, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 60, 65, 68, 88, 97, 99, 101, 104, 109, 111, 115, 135, 141, 142, 143, 148, 149, 160, 163, 168, 169, 171, 173, 186, 193, 199, 213, 219, 224, 227, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 261, 270, 271, 274, 278, 286, 291, 330, 332, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 351, 485, 487, 490, 492, 511, 521, 523, 529, 552, 553, 611, 612, 637, 638, 643, 680, 768, 775, 776, 777, 778, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 814, 815, 822, 855, 863, 865, 870, 878, 884, 885, 889, 898, 900, 901, 904, 906, 908, 909, 910], "7921": 26, "601": [26, 29, 31, 167, 176, 223, 227, 232, 237, 244, 261], "parallel": [26, 27, 29, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 57, 58, 60, 68, 92, 100, 101, 104, 109, 110, 111, 115, 127, 141, 143, 149, 160, 163, 168, 171, 173, 178, 193, 198, 199, 203, 210, 213, 219, 224, 231, 232, 233, 235, 238, 239, 240, 241, 258, 261, 270, 278, 285, 304, 309, 310, 314, 322, 325, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 487, 488, 490, 491, 495, 496, 498, 501, 502, 523, 524, 525, 528, 530, 541, 543, 547, 549, 550, 552, 553, 596, 599, 600, 611, 612, 616, 621, 622, 643, 650, 651, 684, 728, 731, 736, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 828, 846, 878, 881, 900, 946, 960], "n_job": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 67, 68, 100, 101, 104, 109, 110, 111, 115, 124, 127, 128, 131, 135, 138, 141, 143, 149, 160, 163, 168, 171, 173, 178, 185, 186, 193, 199, 203, 210, 213, 219, 224, 231, 232, 233, 235, 238, 239, 240, 241, 256, 258, 260, 261, 264, 265, 266, 270, 285, 292, 294, 295, 304, 325, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 487, 488, 490, 491, 495, 496, 497, 498, 501, 502, 523, 524, 525, 528, 541, 543, 552, 553, 596, 599, 600, 611, 612, 621, 622, 643, 650, 651, 728, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 828, 846, 878, 881, 900, 946, 951], "done": [26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 97, 100, 101, 104, 107, 109, 110, 111, 115, 118, 120, 121, 122, 123, 127, 129, 131, 132, 135, 136, 137, 138, 141, 143, 149, 153, 158, 160, 161, 162, 163, 167, 168, 170, 171, 173, 177, 178, 182, 183, 185, 186, 187, 188, 189, 193, 194, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 252, 253, 256, 257, 258, 260, 261, 264, 265, 266, 270, 271, 282, 283, 284, 285, 288, 291, 299, 307, 311, 312, 314, 318, 321, 322, 326, 332, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 366, 367, 390, 430, 498, 547, 549, 550, 552, 553, 605, 607, 608, 609, 638, 650, 651, 654, 656, 775, 789, 790, 791, 792, 795, 796, 797, 798, 821, 823, 824, 825, 826, 827, 842, 844, 848, 862, 870, 900, 946, 958], "17": [26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 54, 58, 60, 61, 67, 68, 69, 71, 73, 76, 87, 88, 98, 100, 101, 104, 108, 109, 110, 111, 115, 118, 127, 131, 136, 137, 140, 141, 142, 143, 149, 150, 152, 157, 160, 163, 164, 168, 171, 172, 173, 178, 183, 184, 185, 187, 193, 196, 198, 203, 204, 207, 208, 209, 210, 211, 212, 213, 216, 219, 223, 224, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 251, 256, 257, 258, 260, 261, 264, 265, 266, 270, 273, 274, 277, 278, 315, 319, 322, 333, 334, 335, 336, 340, 343, 344, 345, 346, 348, 349, 357, 366, 425, 427, 430, 431, 443, 485, 492, 494, 551, 552, 553, 605, 611, 612, 676, 742, 754, 777, 789, 790, 791, 795, 796, 797, 798, 812, 822, 823, 826, 863, 904, 910, 963, 966], "task": [26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 58, 59, 60, 68, 72, 97, 100, 101, 104, 109, 110, 111, 115, 127, 140, 141, 143, 149, 160, 163, 164, 168, 170, 171, 173, 178, 182, 183, 192, 193, 196, 202, 203, 210, 213, 219, 224, 228, 231, 232, 233, 235, 238, 239, 240, 241, 258, 261, 270, 278, 285, 314, 319, 322, 323, 452, 488, 495, 812, 822, 823, 826, 949], "elaps": [26, 27, 29, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 100, 101, 104, 109, 110, 111, 115, 127, 141, 143, 149, 160, 163, 168, 171, 173, 178, 193, 203, 210, 213, 219, 224, 231, 232, 233, 235, 238, 239, 240, 241, 258, 261, 270], "71": [26, 27, 29, 33, 37, 38, 39, 40, 41, 42, 44, 45, 47, 58, 60, 61, 68, 71, 100, 104, 108, 109, 111, 112, 115, 127, 131, 136, 137, 140, 141, 142, 143, 149, 150, 160, 163, 164, 173, 193, 196, 203, 208, 209, 211, 213, 219, 224, 231, 233, 235, 237, 238, 240, 241, 256, 257, 258, 260, 261, 265, 266, 270, 966], "161": [26, 27, 33, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 71, 100, 104, 109, 111, 115, 127, 141, 143, 149, 150, 160, 173, 193, 196, 203, 213, 219, 224, 233, 235, 238, 256, 261, 270], "287": [26, 27, 33, 37, 39, 40, 41, 42, 44, 47, 58, 60, 68, 100, 104, 109, 111, 115, 140, 149, 150, 160, 173, 193, 196, 203, 219, 223, 235, 237, 238, 256, 261], "66": [26, 38, 39, 42, 45, 47, 61, 66, 67, 71, 108, 131, 136, 140, 142, 150, 152, 171, 173, 185, 196, 203, 208, 211, 218, 219, 223, 224, 233, 237, 256, 257, 260, 261, 278, 299, 335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 616, 638, 886], "id": [26, 29, 31, 33, 38, 47, 58, 59, 60, 68, 71, 72, 75, 96, 98, 99, 100, 107, 108, 109, 118, 121, 122, 123, 127, 135, 136, 138, 140, 141, 167, 168, 169, 173, 176, 179, 189, 193, 195, 196, 198, 199, 204, 207, 209, 210, 212, 219, 224, 228, 229, 231, 232, 233, 235, 240, 241, 251, 252, 253, 258, 270, 283, 286, 288, 289, 292, 295, 303, 308, 310, 311, 322, 325, 328, 333, 334, 335, 338, 340, 341, 344, 346, 347, 348, 349, 352, 366, 367, 383, 425, 440, 448, 501, 507, 509, 511, 513, 538, 552, 553, 584, 597, 598, 603, 633, 639, 650, 651, 668, 693, 700, 702, 703, 709, 738, 793, 794, 795, 796, 844, 876, 899, 904, 909, 946], "Not": [26, 29, 33, 34, 35, 37, 38, 42, 44, 47, 54, 58, 59, 60, 71, 72, 75, 88, 96, 98, 99, 100, 101, 102, 104, 107, 108, 109, 110, 115, 118, 121, 122, 123, 124, 125, 128, 131, 132, 135, 136, 137, 138, 140, 141, 142, 145, 149, 150, 156, 159, 162, 163, 164, 167, 168, 169, 170, 172, 173, 176, 178, 179, 193, 194, 195, 196, 199, 204, 207, 209, 210, 211, 212, 213, 219, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 258, 259, 260, 261, 264, 266, 270, 274, 322, 335, 336, 341, 347, 348, 349, 493, 496, 520, 529, 639, 789, 790, 791, 795, 796, 797, 798, 844, 882, 910], "metadata": [26, 29, 30, 33, 34, 35, 37, 38, 42, 44, 47, 53, 54, 58, 59, 60, 71, 72, 75, 88, 96, 98, 99, 100, 102, 105, 107, 110, 112, 115, 118, 121, 122, 123, 124, 125, 128, 129, 131, 132, 135, 136, 137, 138, 140, 141, 142, 145, 149, 150, 156, 159, 162, 163, 164, 167, 168, 169, 172, 173, 174, 175, 176, 178, 179, 188, 192, 193, 199, 204, 207, 209, 210, 211, 212, 213, 216, 217, 218, 219, 227, 228, 229, 231, 232, 233, 235, 239, 241, 244, 251, 252, 253, 257, 258, 259, 260, 261, 264, 266, 269, 270, 286, 288, 292, 294, 303, 304, 309, 310, 319, 321, 327, 328, 333, 334, 335, 336, 337, 338, 424, 509, 514, 552, 553, 559, 699, 719, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 870, 879, 966], "33": [26, 29, 34, 38, 39, 45, 47, 54, 59, 60, 61, 65, 66, 67, 71, 73, 101, 104, 108, 110, 112, 131, 135, 136, 137, 140, 142, 143, 150, 164, 168, 171, 178, 196, 197, 210, 224, 231, 233, 237, 241, 243, 256, 257, 258, 260, 261, 265, 266, 281, 290, 322, 333, 334, 335, 336, 405, 526, 552, 553, 601, 900, 966], "interv": [26, 29, 36, 37, 54, 58, 59, 60, 64, 71, 72, 75, 88, 96, 97, 98, 99, 107, 110, 118, 121, 122, 123, 124, 125, 128, 131, 132, 135, 138, 140, 141, 145, 156, 159, 167, 169, 171, 172, 176, 177, 178, 179, 193, 199, 203, 204, 205, 207, 209, 210, 211, 212, 213, 219, 228, 229, 231, 232, 235, 238, 239, 252, 253, 258, 259, 260, 264, 266, 270, 274, 285, 292, 294, 319, 325, 327, 328, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 356, 417, 430, 509, 611, 621, 622, 638, 655, 656, 668, 706, 707, 739, 741, 766, 768, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 809, 870, 891, 906, 949], "mode": [26, 29, 31, 37, 48, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 72, 73, 75, 77, 83, 84, 85, 86, 87, 88, 96, 98, 99, 100, 106, 107, 113, 114, 121, 122, 123, 124, 125, 128, 131, 132, 135, 138, 140, 141, 142, 145, 147, 148, 156, 158, 159, 163, 167, 168, 169, 171, 172, 176, 178, 179, 185, 188, 193, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 220, 224, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 241, 246, 247, 252, 258, 259, 260, 261, 264, 266, 270, 271, 274, 275, 278, 282, 284, 285, 286, 288, 289, 292, 294, 295, 301, 303, 304, 305, 307, 311, 314, 325, 330, 331, 333, 334, 335, 336, 340, 341, 342, 343, 344, 347, 348, 349, 356, 366, 367, 412, 425, 429, 430, 431, 435, 436, 441, 442, 443, 484, 485, 491, 492, 519, 523, 524, 525, 544, 547, 552, 553, 596, 614, 615, 637, 638, 668, 676, 729, 752, 755, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 821, 844, 872, 874, 876, 877, 878, 882, 885, 888, 889, 893, 898, 899, 900, 901, 904, 905, 906, 908, 909, 910, 915], "mean": [26, 29, 30, 34, 35, 36, 37, 40, 42, 45, 47, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 77, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 106, 107, 111, 113, 114, 121, 122, 123, 124, 125, 128, 129, 131, 132, 135, 138, 140, 141, 142, 145, 147, 148, 156, 159, 164, 167, 168, 169, 170, 171, 172, 176, 177, 179, 183, 184, 185, 187, 193, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 244, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 266, 269, 270, 271, 274, 275, 283, 291, 292, 293, 304, 308, 309, 311, 312, 322, 327, 328, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 356, 359, 366, 367, 384, 388, 425, 430, 485, 491, 492, 494, 497, 506, 519, 525, 527, 544, 547, 549, 550, 552, 553, 554, 561, 568, 572, 576, 584, 590, 596, 605, 611, 614, 615, 616, 621, 622, 637, 638, 642, 645, 648, 649, 653, 655, 665, 667, 674, 676, 685, 693, 706, 707, 733, 741, 742, 743, 752, 753, 755, 768, 771, 776, 777, 778, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 812, 814, 815, 822, 823, 824, 826, 827, 844, 846, 870, 872, 876, 877, 878, 880, 881, 885, 889, 898, 899, 900, 901, 904, 906, 908, 946, 965], "activ": [26, 29, 30, 31, 33, 34, 37, 38, 42, 44, 45, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 102, 106, 107, 109, 110, 113, 114, 115, 117, 119, 120, 121, 123, 124, 125, 128, 129, 131, 132, 135, 136, 137, 138, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 153, 157, 159, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 182, 185, 186, 189, 193, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 217, 219, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 245, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 270, 275, 278, 285, 292, 294, 295, 305, 311, 312, 318, 319, 321, 322, 326, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 366, 367, 394, 419, 511, 514, 519, 526, 528, 532, 547, 549, 550, 551, 552, 553, 558, 569, 574, 590, 593, 604, 605, 606, 607, 608, 609, 616, 619, 635, 643, 654, 680, 706, 708, 710, 711, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 754, 761, 764, 781, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 823, 826, 854, 865, 867, 874, 881, 905, 910, 946, 951, 952, 953, 955, 956, 959, 960, 966], "No": [26, 27, 30, 31, 33, 34, 35, 38, 42, 44, 47, 60, 67, 72, 74, 76, 80, 81, 102, 107, 110, 115, 118, 129, 136, 137, 140, 141, 142, 144, 145, 149, 150, 156, 162, 163, 164, 167, 168, 169, 170, 173, 176, 178, 183, 193, 198, 199, 205, 211, 212, 213, 218, 219, 224, 227, 229, 230, 232, 233, 235, 238, 239, 240, 241, 251, 253, 256, 257, 261, 270, 274, 275, 311, 312, 319, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 459, 486, 501, 519, 547, 549, 550, 552, 553, 605, 607, 608, 609, 753, 900, 952], "grad": [26, 37, 42, 48, 54, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 88, 104, 106, 113, 114, 121, 122, 124, 125, 127, 128, 131, 132, 135, 137, 138, 139, 141, 142, 144, 145, 147, 148, 149, 152, 153, 158, 159, 167, 169, 172, 177, 179, 183, 184, 185, 189, 193, 196, 197, 199, 203, 204, 205, 206, 207, 208, 210, 219, 224, 228, 229, 235, 237, 238, 244, 251, 253, 258, 259, 260, 264, 266, 269, 270, 274, 287, 288, 318, 321, 322, 325, 328, 330, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 366, 367, 388, 389, 408, 425, 429, 430, 441, 442, 443, 445, 485, 492, 494, 528, 529, 547, 549, 550, 552, 553, 593, 600, 616, 635, 636, 637, 638, 643, 648, 650, 651, 653, 655, 656, 665, 729, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 869, 870, 876, 877, 878, 880, 882, 884, 885, 886, 889, 899, 901, 902, 906, 907, 908], "skip": [26, 141, 171, 173, 176, 192, 193, 197, 198, 199, 218, 219, 230, 235, 241, 271, 283, 286, 287, 291, 295, 309, 311, 318, 325, 413, 574, 580, 611, 655, 726], "axial": [26, 33, 59, 73, 109, 111, 120, 137, 139, 158, 162, 169, 173, 187, 199, 207, 210, 219, 227, 234, 235, 240, 256, 322, 331, 348, 349, 844, 864, 874], "100": [26, 27, 29, 31, 33, 36, 37, 39, 42, 45, 48, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 102, 103, 106, 108, 110, 113, 114, 118, 120, 123, 124, 129, 131, 132, 136, 137, 139, 140, 142, 143, 144, 147, 148, 150, 152, 154, 162, 163, 164, 167, 168, 170, 171, 172, 173, 176, 178, 183, 185, 196, 197, 199, 203, 204, 205, 206, 207, 208, 210, 211, 213, 218, 219, 223, 224, 226, 228, 229, 230, 231, 233, 235, 237, 240, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 274, 275, 278, 303, 312, 319, 325, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 431, 506, 525, 549, 550, 552, 553, 577, 649, 665, 671, 676, 755, 775, 793, 794, 795, 797, 798, 799, 800, 825, 828, 834, 844, 876, 894, 899, 963, 966], "pca": [26, 29, 31, 33, 34, 37, 39, 41, 42, 43, 44, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 102, 104, 106, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 152, 153, 158, 159, 160, 167, 168, 169, 173, 176, 178, 179, 183, 184, 185, 187, 189, 193, 194, 195, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 240, 244, 245, 246, 247, 252, 253, 258, 259, 260, 261, 264, 266, 274, 275, 286, 288, 293, 294, 297, 299, 301, 309, 318, 333, 335, 336, 338, 341, 347, 349, 366, 367, 425, 441, 445, 499, 547, 550, 552, 611, 612, 621, 622, 635, 638, 703, 890, 949, 966], "01": [26, 29, 32, 33, 34, 37, 38, 39, 45, 47, 50, 58, 59, 60, 61, 72, 85, 94, 98, 100, 101, 104, 106, 110, 111, 118, 119, 120, 121, 131, 136, 137, 139, 140, 141, 148, 149, 152, 153, 158, 164, 166, 168, 169, 173, 177, 178, 185, 186, 193, 194, 195, 196, 197, 199, 207, 208, 210, 212, 213, 215, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 253, 255, 256, 257, 258, 260, 261, 264, 265, 266, 270, 271, 273, 274, 278, 284, 315, 319, 324, 325, 327, 333, 334, 412, 414, 418, 452, 477, 478, 493, 552, 553, 564, 653, 665, 668, 674, 681, 685, 784, 966], "exp": [26, 33, 60, 66, 68, 76, 84, 85, 118, 120, 122, 137, 173, 204, 205, 206, 209, 219, 224, 235, 240, 253, 256, 366, 367, 529, 547, 549, 550, 616], "var": [26, 38, 73, 97, 173, 198, 219, 235, 447, 533, 782], "02": [26, 27, 31, 32, 33, 37, 39, 45, 46, 59, 60, 61, 82, 90, 94, 97, 109, 111, 112, 120, 131, 136, 137, 139, 142, 148, 152, 155, 157, 158, 163, 169, 173, 175, 177, 181, 184, 187, 191, 197, 199, 201, 207, 210, 218, 223, 224, 230, 234, 235, 236, 237, 239, 241, 246, 256, 257, 258, 260, 261, 263, 266, 271, 278, 324, 325, 333, 334, 391, 547, 550, 552, 553, 564, 795, 812, 822, 823, 825, 826, 828, 966], "19": [26, 29, 30, 33, 35, 37, 39, 45, 54, 60, 61, 67, 68, 71, 73, 82, 84, 98, 100, 104, 108, 110, 111, 112, 118, 121, 122, 131, 136, 137, 140, 142, 150, 167, 168, 173, 178, 184, 185, 193, 194, 195, 196, 198, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 244, 245, 246, 247, 253, 256, 257, 258, 260, 261, 265, 266, 274, 275, 277, 278, 291, 315, 317, 319, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 344, 346, 347, 348, 349, 374, 376, 379, 398, 504, 547, 552, 553, 596, 600, 631, 637, 638, 664, 733, 784, 789, 790, 791, 795, 796, 797, 798, 815, 862, 865, 870, 871, 874, 876, 893, 899, 910, 932, 951, 963, 966], "an": [26, 29, 30, 31, 33, 34, 37, 38, 41, 44, 45, 47, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 90, 94, 95, 96, 98, 100, 101, 102, 106, 109, 110, 111, 115, 118, 120, 121, 122, 123, 129, 132, 135, 136, 137, 138, 139, 140, 142, 143, 147, 148, 149, 151, 156, 157, 159, 162, 163, 164, 167, 168, 171, 173, 176, 177, 178, 179, 180, 182, 183, 185, 187, 189, 190, 191, 192, 193, 194, 197, 198, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 260, 261, 264, 265, 266, 269, 270, 272, 273, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 357, 358, 360, 362, 366, 367, 369, 371, 372, 373, 374, 382, 384, 386, 387, 388, 391, 395, 398, 400, 409, 418, 419, 420, 425, 426, 427, 428, 429, 431, 432, 434, 436, 441, 442, 444, 445, 458, 461, 462, 466, 484, 485, 491, 492, 493, 497, 500, 502, 503, 504, 507, 509, 510, 512, 514, 519, 520, 521, 524, 525, 526, 527, 528, 532, 533, 535, 540, 544, 547, 549, 550, 551, 552, 553, 554, 558, 560, 562, 563, 568, 569, 570, 571, 572, 574, 578, 581, 582, 588, 590, 592, 593, 596, 599, 600, 601, 604, 605, 607, 611, 612, 614, 615, 616, 618, 619, 620, 623, 625, 627, 634, 635, 637, 638, 639, 640, 641, 642, 646, 648, 650, 651, 653, 655, 656, 658, 660, 662, 664, 665, 667, 671, 674, 675, 676, 677, 683, 686, 689, 694, 695, 696, 697, 698, 701, 703, 705, 706, 708, 716, 718, 722, 723, 725, 727, 728, 730, 733, 737, 738, 739, 742, 745, 749, 754, 755, 761, 764, 766, 769, 770, 775, 776, 777, 778, 779, 780, 781, 783, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 809, 812, 815, 816, 822, 826, 827, 830, 831, 834, 836, 842, 844, 845, 846, 854, 855, 859, 861, 862, 863, 867, 868, 870, 872, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 912, 914, 916, 926, 927, 929, 937, 938, 939, 946, 949, 951, 952, 956, 958, 959, 962, 966], "subspac": [26, 29, 34, 37, 44, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 115, 118, 120, 121, 122, 123, 132, 135, 136, 137, 138, 149, 159, 167, 168, 169, 172, 173, 176, 178, 179, 189, 193, 199, 203, 204, 205, 206, 207, 208, 209, 210, 219, 228, 229, 231, 233, 234, 235, 238, 240, 252, 261, 264, 266, 321, 325, 654, 676], "dimens": [26, 29, 34, 37, 44, 45, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 118, 120, 121, 122, 123, 132, 135, 136, 137, 138, 142, 149, 150, 159, 167, 168, 169, 172, 173, 176, 178, 179, 187, 189, 193, 199, 203, 204, 205, 206, 207, 208, 209, 210, 219, 223, 224, 228, 229, 231, 233, 234, 235, 237, 240, 252, 253, 256, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 278, 292, 302, 307, 318, 321, 322, 330, 333, 334, 335, 336, 340, 341, 342, 343, 344, 346, 347, 348, 349, 356, 383, 431, 485, 488, 491, 492, 495, 496, 498, 500, 524, 525, 547, 549, 550, 552, 553, 611, 612, 614, 615, 621, 622, 637, 638, 653, 769, 770, 774, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 814, 815, 825, 834, 844, 854, 855, 863, 878, 885, 889, 898, 899, 901, 906, 908], "projector": [26, 27, 29, 30, 31, 33, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 98, 100, 118, 120, 121, 122, 129, 137, 149, 167, 173, 176, 177, 178, 179, 189, 192, 193, 194, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 227, 228, 231, 232, 233, 239, 240, 242, 243, 244, 252, 253, 257, 282, 284, 285, 286, 288, 291, 292, 294, 298, 299, 303, 304, 305, 306, 310, 318, 320, 321, 322, 325, 333, 334, 335, 336, 338, 342, 343, 366, 367, 425, 426, 427, 428, 429, 430, 441, 442, 443, 485, 492, 515, 516, 517, 518, 528, 529, 547, 549, 550, 552, 553, 574, 616, 638, 650, 651, 652, 676, 706, 714, 733, 792, 801, 802, 803, 804, 805, 806, 807, 876, 886, 893, 897, 898, 899, 931, 946, 966], "fran\u00e7oi": [26, 98, 106, 137, 210, 211, 219, 228, 278, 322, 638, 647], "tadel": [26, 137, 210, 211, 219, 278], "sylvain": [26, 137, 210, 211, 219, 278], "baillet": [26, 137, 210, 211, 219, 278], "john": [26, 44, 45, 77, 95, 110, 137, 155, 205, 207, 210, 211, 219, 278, 295, 303, 309, 319, 322, 332, 333, 334, 335, 336, 369, 460, 461, 489, 491, 503, 547, 605, 616, 638, 654, 680, 746, 751, 789, 790, 791, 795, 796, 797, 798], "mosher": [26, 77, 137, 207, 210, 211, 219, 278, 322, 369], "dimitrio": [26, 36, 137, 210, 211, 219, 278, 319], "pantazi": [26, 36, 137, 210, 211, 219, 278, 319], "richard": [26, 77, 101, 137, 210, 211, 219, 237, 270, 278, 282, 284, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 319, 322, 369, 461, 638, 646, 771, 964], "leahi": [26, 77, 137, 210, 211, 219, 278, 322, 369], "user": [26, 71, 103, 122, 137, 169, 183, 192, 194, 198, 199, 210, 211, 217, 218, 219, 229, 230, 244, 278, 282, 283, 284, 286, 289, 292, 294, 295, 298, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 319, 323, 326, 328, 333, 334, 335, 336, 337, 338, 340, 341, 344, 346, 347, 348, 349, 449, 450, 451, 452, 454, 455, 456, 458, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 506, 514, 551, 552, 553, 570, 638, 665, 683, 734, 787, 788, 789, 790, 791, 795, 796, 797, 798, 863, 876, 883, 893, 899, 908, 917, 918, 919, 920, 921, 923, 946, 948, 951, 954, 956, 957, 959, 961], "friendli": [26, 137, 210, 211, 219, 278, 314], "applic": [26, 41, 97, 100, 115, 137, 176, 189, 197, 205, 210, 211, 219, 220, 224, 230, 233, 234, 235, 238, 271, 278, 285, 292, 299, 303, 311, 322, 328, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 492, 496, 509, 521, 523, 524, 537, 552, 553, 572, 578, 596, 597, 638, 639, 673, 676, 699, 702, 793, 794, 799, 800, 844, 876, 878, 893, 899, 946, 955, 959, 962], "intellig": [26, 137, 210, 211, 219, 223, 278, 491, 525], "neurosci": [26, 30, 36, 42, 45, 69, 97, 102, 137, 141, 178, 210, 211, 219, 223, 224, 230, 261, 278, 312, 316, 319, 324, 333, 334, 345, 431, 486, 491, 501, 505, 638, 643, 646, 749, 776, 777, 779, 780, 795, 812, 822, 823, 825, 826, 828, 964], "2011": [26, 41, 47, 60, 85, 115, 137, 178, 196, 210, 211, 217, 219, 230, 253, 256, 278, 315, 322, 366, 493, 550, 605, 639, 782, 783], "13": [26, 29, 33, 35, 36, 37, 38, 39, 42, 45, 47, 48, 51, 52, 54, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 94, 97, 102, 104, 107, 108, 110, 111, 121, 122, 124, 125, 128, 131, 132, 135, 136, 137, 138, 140, 141, 142, 145, 148, 149, 150, 153, 157, 159, 160, 161, 163, 164, 169, 170, 171, 172, 173, 175, 176, 177, 179, 185, 189, 193, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 219, 224, 229, 230, 232, 235, 237, 239, 244, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 270, 271, 278, 282, 291, 294, 315, 316, 318, 321, 322, 328, 332, 333, 334, 335, 336, 338, 339, 340, 341, 344, 346, 347, 348, 349, 351, 405, 430, 452, 477, 496, 506, 520, 521, 523, 524, 526, 552, 553, 638, 655, 656, 676, 703, 719, 722, 752, 755, 789, 790, 791, 795, 796, 797, 798, 826, 827, 880, 891, 902, 944, 952, 963, 966], "doi": [26, 30, 34, 36, 38, 39, 41, 42, 44, 45, 47, 59, 61, 66, 68, 69, 70, 72, 77, 80, 81, 84, 85, 86, 92, 97, 98, 102, 103, 106, 110, 111, 115, 122, 127, 129, 137, 140, 141, 145, 147, 149, 155, 164, 168, 171, 178, 182, 184, 189, 203, 205, 207, 210, 211, 219, 223, 224, 228, 230, 232, 233, 234, 235, 236, 238, 240, 253, 256, 257, 261, 269, 278, 316, 318, 319, 322, 333, 334, 335, 336, 339, 340, 341, 344, 345, 347, 348, 349, 359, 366, 367, 369, 371, 425, 431, 452, 460, 461, 465, 466, 477, 478, 485, 486, 489, 491, 492, 493, 501, 503, 505, 509, 547, 549, 550, 552, 553, 605, 606, 616, 620, 637, 638, 639, 643, 646, 647, 649, 652, 653, 654, 664, 676, 680, 683, 684, 691, 733, 742, 746, 749, 751, 754, 773, 775, 776, 777, 778, 779, 780, 782, 783, 789, 791, 793, 795, 797, 799, 808, 810, 812, 814, 815, 822, 823, 825, 826, 828, 863, 946], "10": [26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 54, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 80, 81, 84, 85, 86, 87, 90, 92, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 118, 121, 122, 123, 127, 129, 131, 132, 134, 136, 137, 138, 140, 141, 142, 143, 145, 147, 148, 149, 150, 155, 156, 157, 162, 163, 164, 167, 168, 169, 171, 172, 173, 178, 182, 183, 184, 185, 186, 187, 189, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 218, 219, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 260, 261, 264, 265, 266, 269, 270, 271, 274, 278, 281, 283, 287, 291, 292, 300, 301, 302, 304, 311, 314, 315, 316, 318, 319, 322, 327, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 359, 366, 367, 369, 371, 379, 382, 394, 400, 405, 410, 415, 418, 421, 422, 423, 425, 431, 436, 452, 460, 461, 465, 466, 477, 478, 485, 486, 487, 489, 491, 492, 493, 496, 501, 503, 505, 506, 509, 520, 521, 523, 524, 529, 547, 549, 550, 552, 553, 578, 594, 595, 605, 606, 616, 620, 625, 637, 638, 639, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 664, 665, 666, 667, 670, 672, 676, 680, 683, 684, 691, 702, 724, 733, 742, 746, 749, 751, 753, 754, 755, 770, 772, 773, 775, 776, 777, 778, 779, 780, 782, 783, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 810, 812, 814, 815, 822, 823, 824, 825, 826, 827, 828, 834, 844, 850, 861, 863, 876, 878, 885, 887, 888, 893, 894, 899, 904, 909, 946, 952, 955, 956, 958, 966], "1155": [26, 137, 210, 211, 219, 278], "879716": [26, 137, 210, 211, 219, 278], "run": [26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 283, 284, 285, 287, 291, 292, 294, 296, 301, 303, 305, 306, 310, 312, 319, 322, 323, 325, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 373, 391, 418, 425, 426, 428, 430, 447, 452, 487, 488, 491, 495, 496, 498, 501, 502, 523, 524, 525, 528, 541, 543, 552, 553, 590, 596, 599, 600, 611, 612, 621, 622, 638, 643, 650, 651, 653, 665, 666, 669, 674, 677, 693, 728, 737, 738, 740, 741, 742, 743, 752, 753, 754, 755, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 828, 844, 846, 869, 876, 878, 881, 885, 888, 889, 893, 899, 900, 949, 951, 952, 955, 956, 958, 960], "minut": [26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 333, 334, 345, 351, 508, 552, 553, 638, 741, 742, 893, 899], "11": [26, 29, 31, 32, 33, 35, 36, 37, 39, 42, 45, 50, 51, 54, 59, 60, 61, 71, 73, 74, 82, 86, 91, 97, 100, 102, 106, 107, 108, 110, 118, 119, 123, 124, 128, 129, 131, 136, 137, 138, 140, 142, 148, 150, 152, 156, 157, 163, 164, 166, 172, 184, 188, 191, 193, 195, 196, 197, 198, 203, 206, 207, 208, 210, 213, 219, 223, 224, 227, 230, 232, 237, 238, 239, 241, 244, 246, 249, 251, 252, 256, 257, 258, 260, 261, 265, 266, 271, 274, 278, 294, 315, 318, 322, 324, 333, 334, 343, 346, 371, 405, 440, 452, 506, 542, 552, 553, 564, 566, 569, 570, 596, 616, 638, 674, 676, 680, 700, 746, 749, 751, 775, 789, 790, 791, 795, 796, 797, 798, 876, 899, 952, 958, 963, 966], "083": [26, 32, 66, 112, 114, 153, 966], "second": [26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 278, 283, 284, 289, 293, 295, 303, 304, 305, 308, 310, 318, 319, 321, 322, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 353, 354, 356, 365, 366, 367, 392, 393, 412, 414, 428, 430, 485, 491, 492, 497, 509, 511, 514, 519, 520, 522, 526, 527, 550, 551, 552, 553, 572, 574, 577, 592, 597, 598, 608, 611, 637, 638, 640, 641, 642, 643, 646, 648, 650, 651, 655, 658, 661, 665, 666, 667, 668, 669, 676, 684, 690, 694, 703, 706, 739, 755, 775, 776, 777, 779, 780, 781, 783, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 824, 827, 844, 846, 853, 870, 877, 878, 879, 882, 885, 889, 890, 891, 893, 898, 899, 900, 901, 904, 906, 908, 909, 920, 921, 936, 946, 958], "usag": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 282, 291, 292, 293, 300, 303, 304, 309, 311, 313, 321, 322, 325, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 494, 498, 552, 553, 676, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 805, 828, 946], "491": [26, 32, 150, 256, 966], "jupyt": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 291, 292, 294, 295, 304, 305, 308, 309, 312, 323, 911, 946], "notebook": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 291, 292, 294, 295, 304, 305, 308, 309, 314, 323, 911, 930, 946, 956], "brainstorm_data": [26, 32, 966], "ipynb": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275], "py": [26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 277, 285, 287, 293, 294, 297, 299, 301, 303, 308, 311, 314, 946, 951, 966], "zip": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 311, 459, 577, 960, 963], "galleri": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 311, 966], "gener": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 223, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 251, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 280, 281, 283, 285, 288, 289, 291, 292, 293, 294, 295, 297, 299, 301, 302, 303, 304, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 321, 323, 324, 325, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 360, 361, 364, 378, 391, 396, 397, 398, 418, 424, 425, 452, 485, 487, 488, 491, 492, 495, 496, 502, 509, 514, 519, 521, 523, 524, 526, 543, 548, 549, 552, 553, 555, 558, 559, 570, 574, 578, 590, 593, 600, 604, 605, 607, 609, 612, 616, 619, 635, 636, 637, 638, 639, 641, 650, 652, 655, 656, 666, 668, 669, 674, 676, 693, 697, 703, 706, 708, 710, 711, 713, 714, 737, 738, 739, 741, 742, 743, 752, 753, 754, 755, 756, 769, 773, 774, 776, 777, 778, 779, 780, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 809, 829, 841, 844, 845, 848, 859, 862, 866, 870, 877, 879, 885, 889, 890, 900, 901, 904, 905, 914, 924, 941, 947, 948, 957, 958, 959, 960, 962, 964, 966], "sphinx": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 307, 311, 840], "look": [27, 29, 30, 33, 34, 45, 47, 53, 58, 59, 68, 81, 84, 87, 94, 95, 97, 98, 101, 110, 111, 121, 136, 139, 140, 141, 148, 149, 151, 160, 162, 168, 171, 172, 177, 178, 183, 185, 187, 188, 189, 193, 195, 199, 202, 204, 205, 206, 207, 209, 210, 213, 216, 217, 219, 220, 227, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 244, 253, 256, 258, 261, 270, 271, 274, 275, 303, 304, 311, 312, 316, 322, 323, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 369, 371, 373, 379, 449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 526, 533, 535, 552, 553, 585, 638, 640, 671, 694, 789, 790, 791, 795, 796, 797, 798, 844, 862, 865, 892, 902, 904, 909, 910, 947, 951, 952], "high": [27, 29, 30, 33, 36, 38, 48, 64, 66, 85, 100, 102, 109, 110, 111, 115, 122, 127, 147, 168, 169, 170, 178, 183, 184, 187, 194, 198, 216, 218, 219, 224, 227, 231, 233, 234, 235, 238, 239, 240, 258, 259, 260, 261, 265, 271, 278, 283, 285, 295, 301, 302, 304, 321, 333, 334, 335, 336, 340, 341, 344, 346, 347, 348, 349, 351, 425, 426, 427, 428, 430, 465, 487, 496, 520, 521, 523, 544, 552, 553, 578, 580, 605, 638, 643, 646, 650, 651, 655, 656, 666, 667, 669, 670, 676, 680, 742, 775, 844, 923, 948], "respons": [27, 30, 34, 36, 42, 43, 45, 46, 53, 61, 72, 75, 77, 85, 86, 92, 101, 105, 112, 115, 122, 124, 125, 135, 141, 145, 148, 149, 151, 156, 157, 162, 169, 170, 172, 176, 177, 189, 195, 207, 210, 212, 219, 224, 227, 230, 235, 241, 260, 261, 264, 266, 271, 278, 280, 285, 294, 297, 298, 304, 305, 310, 312, 318, 319, 321, 322, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 425, 445, 465, 491, 497, 499, 509, 511, 514, 521, 524, 552, 553, 635, 639, 691, 703, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 809, 877, 884, 886, 887, 894, 966], "jussi": [27, 88, 278, 280, 281, 282, 283, 284, 285, 286, 287, 291, 293, 295, 465, 676], "nurminen": [27, 88, 278, 280, 281, 282, 283, 284, 285, 286, 287, 291, 293, 295, 465, 676], "jnu": [27, 88], "iki": [27, 88], "fi": [27, 36, 88, 113, 219, 551], "fname_evok": [27, 37, 56, 64, 65, 67, 70, 83, 84, 87, 153, 206, 208, 252, 274], "path": [27, 45, 59, 69, 70, 71, 88, 103, 129, 147, 148, 152, 154, 162, 163, 167, 182, 183, 184, 185, 186, 193, 197, 198, 199, 202, 208, 209, 212, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 244, 245, 246, 247, 252, 257, 283, 287, 288, 289, 292, 294, 295, 303, 304, 305, 307, 308, 311, 321, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 357, 370, 373, 374, 377, 378, 379, 382, 383, 391, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 422, 423, 431, 436, 437, 438, 444, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 504, 506, 519, 528, 533, 534, 535, 537, 538, 541, 543, 544, 545, 546, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 594, 596, 600, 619, 623, 624, 625, 627, 628, 637, 638, 648, 649, 662, 665, 671, 672, 676, 686, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 734, 737, 738, 740, 741, 742, 752, 754, 755, 757, 758, 766, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 816, 817, 818, 829, 831, 833, 836, 838, 843, 844, 853, 862, 864, 874, 876, 886, 893, 899, 904, 909, 910, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 951, 955, 958, 961], "join": [27, 36, 45, 70, 88, 103, 162, 167, 186, 197, 198, 211, 212, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 244, 245, 246, 247, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "subject_b": 27, "hf_sef_15min": 27, "av": [27, 29, 37, 56, 57, 61, 64, 65, 66, 67, 70, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 106, 113, 114, 118, 120, 123, 144, 147, 148, 153, 176, 177, 199, 203, 205, 206, 208, 252, 274, 275, 319, 325, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 552, 553, 628, 706, 715, 937], "interest": [27, 29, 30, 35, 42, 47, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 90, 106, 109, 113, 114, 118, 123, 124, 125, 128, 129, 132, 135, 140, 141, 142, 144, 147, 148, 156, 162, 164, 167, 169, 170, 171, 176, 177, 182, 187, 189, 197, 199, 203, 205, 206, 207, 208, 218, 220, 223, 224, 227, 230, 231, 234, 239, 240, 241, 245, 252, 253, 256, 257, 258, 259, 260, 270, 271, 274, 275, 283, 295, 302, 304, 311, 318, 321, 322, 328, 333, 334, 335, 336, 338, 358, 360, 394, 490, 493, 509, 511, 529, 537, 552, 553, 590, 611, 612, 622, 637, 638, 691, 700, 702, 738, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 826, 827, 844, 900, 906, 946], "t": [27, 29, 30, 31, 35, 41, 45, 47, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 90, 92, 97, 106, 108, 110, 111, 113, 114, 121, 122, 123, 124, 126, 129, 130, 136, 142, 143, 144, 145, 147, 148, 167, 168, 170, 171, 172, 173, 176, 178, 183, 184, 185, 186, 187, 189, 192, 193, 195, 197, 198, 199, 203, 204, 205, 206, 207, 208, 210, 211, 216, 219, 223, 224, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 246, 252, 253, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 274, 275, 278, 280, 282, 286, 287, 289, 292, 293, 294, 295, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 318, 319, 321, 322, 323, 325, 328, 329, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 356, 366, 367, 412, 415, 421, 430, 431, 444, 445, 449, 450, 451, 454, 455, 456, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 491, 506, 508, 520, 526, 529, 547, 550, 552, 553, 564, 565, 604, 605, 613, 619, 625, 627, 635, 638, 641, 649, 650, 655, 656, 664, 665, 667, 674, 676, 677, 685, 693, 696, 700, 702, 703, 706, 707, 710, 713, 716, 718, 735, 738, 754, 755, 761, 767, 773, 774, 775, 776, 778, 779, 781, 782, 783, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 816, 819, 822, 824, 827, 834, 844, 846, 881, 891, 952, 953, 958, 960, 966], "250": [27, 30, 47, 72, 108, 140, 145, 150, 152, 163, 164, 168, 170, 178, 183, 191, 193, 196, 208, 227, 229, 230, 231, 235, 237, 256, 261, 269, 278, 306, 742, 803, 966], "ctf": [27, 53, 56, 57, 61, 62, 64, 65, 66, 67, 70, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 106, 113, 114, 129, 144, 147, 148, 167, 170, 176, 192, 197, 199, 203, 205, 206, 208, 214, 215, 221, 222, 256, 257, 274, 275, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 299, 300, 302, 304, 307, 309, 310, 319, 322, 327, 330, 331, 333, 334, 335, 336, 337, 338, 344, 372, 408, 416, 424, 426, 430, 432, 434, 435, 526, 528, 552, 553, 566, 594, 595, 600, 601, 604, 605, 614, 615, 616, 617, 620, 635, 636, 651, 676, 697, 706, 708, 714, 721, 737, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862, 966], "nave": [27, 31, 33, 35, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 95, 106, 113, 114, 118, 120, 122, 132, 135, 136, 137, 138, 142, 144, 147, 148, 176, 193, 199, 203, 204, 205, 206, 208, 209, 219, 224, 240, 251, 252, 253, 264, 266, 274, 275, 283, 285, 289, 291, 298, 326, 332, 335, 336, 338, 424, 542, 606, 607, 608, 609, 611, 612, 618, 621, 622, 753, 789, 790, 794, 799, 800], "2790": 27, "aspect": [27, 42, 48, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 106, 113, 114, 135, 144, 147, 148, 169, 176, 199, 203, 205, 206, 208, 231, 234, 258, 259, 260, 261, 274, 275, 283, 285, 293, 335, 336, 848, 881], "specifi": [27, 30, 31, 35, 45, 57, 64, 67, 69, 73, 90, 115, 122, 123, 129, 131, 137, 142, 148, 156, 162, 167, 168, 169, 176, 177, 178, 182, 185, 193, 194, 195, 196, 197, 198, 199, 205, 211, 212, 213, 216, 220, 224, 227, 228, 230, 231, 232, 233, 235, 236, 238, 239, 240, 244, 245, 246, 247, 257, 258, 261, 264, 270, 274, 275, 282, 284, 286, 287, 289, 291, 292, 293, 294, 295, 298, 299, 300, 303, 304, 309, 310, 311, 320, 321, 322, 325, 327, 328, 330, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 347, 348, 349, 350, 357, 359, 366, 367, 372, 379, 384, 394, 400, 425, 426, 427, 428, 429, 430, 431, 441, 442, 443, 444, 449, 450, 451, 452, 454, 455, 456, 457, 460, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 492, 496, 497, 501, 502, 506, 509, 511, 520, 521, 523, 524, 526, 528, 529, 537, 541, 544, 547, 549, 550, 551, 552, 553, 554, 563, 568, 569, 578, 583, 596, 599, 604, 606, 614, 615, 616, 627, 637, 638, 641, 643, 648, 649, 651, 652, 653, 657, 658, 665, 676, 691, 694, 698, 700, 702, 707, 710, 716, 725, 728, 730, 733, 738, 739, 754, 766, 769, 775, 776, 777, 779, 780, 787, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 821, 822, 823, 824, 825, 826, 827, 831, 844, 846, 848, 861, 862, 865, 870, 877, 880, 881, 884, 886, 889, 891, 892, 893, 895, 904, 905, 909, 910, 911, 915, 941, 946], "pleas": [27, 30, 31, 33, 102, 104, 110, 129, 137, 152, 162, 163, 164, 173, 193, 199, 211, 212, 213, 217, 224, 227, 229, 232, 233, 239, 240, 257, 266, 294, 295, 300, 311, 313, 316, 318, 319, 321, 322, 323, 325, 333, 334, 358, 360, 402, 443, 461, 512, 524, 526, 552, 553, 564, 638, 665, 677, 708, 876, 893, 899, 938, 947, 951, 956, 958, 962], "consid": [27, 30, 31, 33, 109, 121, 129, 132, 136, 137, 140, 164, 168, 171, 179, 183, 186, 188, 189, 193, 211, 212, 213, 220, 224, 227, 228, 229, 230, 232, 233, 236, 238, 239, 240, 256, 257, 258, 261, 264, 266, 271, 282, 288, 295, 303, 305, 310, 311, 312, 313, 321, 328, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 347, 348, 349, 356, 366, 367, 379, 389, 407, 425, 429, 430, 442, 443, 485, 492, 493, 506, 515, 516, 517, 518, 520, 526, 533, 549, 550, 552, 553, 561, 568, 570, 576, 584, 633, 638, 640, 641, 646, 648, 649, 653, 655, 657, 659, 661, 664, 665, 668, 674, 676, 681, 700, 702, 706, 750, 759, 760, 761, 763, 764, 776, 777, 779, 780, 789, 790, 791, 794, 795, 796, 797, 798, 801, 802, 803, 804, 805, 806, 807, 844, 859, 868, 876, 879, 880, 892, 899, 951], "self": [27, 30, 31, 129, 137, 199, 211, 212, 213, 224, 227, 232, 239, 240, 257, 266, 287, 311, 320, 327, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 344, 347, 348, 349, 357, 372, 436, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 551, 552, 553, 604, 637, 638, 639, 658, 661, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 831, 845, 946], "highpass": [27, 33, 38, 98, 100, 101, 104, 108, 109, 110, 118, 121, 127, 168, 173, 178, 193, 194, 195, 196, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 271, 274, 282, 287, 288, 293, 302, 325, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 520, 552, 553, 580, 793, 794, 799, 800, 899, 900], "version": [27, 45, 60, 97, 111, 172, 173, 177, 182, 188, 193, 198, 216, 217, 218, 223, 224, 229, 230, 247, 275, 310, 311, 312, 315, 316, 319, 322, 325, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 366, 367, 374, 377, 379, 382, 390, 410, 412, 414, 418, 431, 458, 485, 486, 487, 490, 492, 493, 494, 496, 501, 505, 506, 509, 514, 519, 520, 521, 523, 524, 525, 529, 538, 544, 547, 549, 550, 552, 553, 561, 562, 568, 569, 574, 577, 579, 583, 584, 586, 592, 596, 599, 600, 616, 626, 629, 630, 631, 637, 638, 639, 645, 653, 665, 678, 698, 700, 706, 708, 724, 733, 737, 738, 741, 742, 754, 771, 781, 782, 783, 784, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 813, 823, 844, 856, 862, 863, 864, 870, 871, 874, 875, 876, 878, 880, 882, 885, 886, 889, 893, 896, 898, 899, 900, 901, 902, 904, 906, 908, 909, 910, 911, 914, 937, 946, 952, 955, 956, 957, 958], "evoked_hp": 27, "l_freq": [27, 47, 101, 110, 142, 171, 173, 178, 219, 230, 231, 233, 235, 271, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 552, 553, 638, 646, 650, 651, 655, 656, 666, 667, 669, 670, 680, 949], "300": [27, 30, 31, 47, 60, 72, 77, 86, 102, 108, 109, 120, 144, 150, 162, 167, 176, 178, 196, 210, 231, 233, 237, 240, 261, 269, 302, 789, 790, 791, 795, 796, 797, 798], "h_freq": [27, 47, 101, 110, 142, 171, 173, 178, 219, 230, 231, 233, 235, 238, 271, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 552, 553, 638, 646, 650, 651, 655, 656, 665, 666, 667, 669, 670, 680, 949], "3e": [27, 34, 35, 47, 58, 61, 68, 71, 74, 76, 77, 80, 81, 84, 86, 91, 121, 122, 137, 179, 203, 205, 206, 207, 208, 211, 212, 224, 650, 651, 863], "edg": [27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 85, 97, 99, 100, 101, 104, 109, 110, 111, 115, 127, 138, 141, 142, 143, 148, 149, 160, 163, 168, 169, 171, 173, 178, 188, 199, 213, 219, 224, 227, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 246, 247, 252, 256, 261, 271, 285, 286, 291, 293, 294, 304, 306, 307, 308, 330, 333, 334, 335, 336, 340, 341, 342, 343, 344, 347, 348, 349, 351, 388, 485, 487, 491, 492, 514, 521, 523, 525, 550, 552, 553, 561, 568, 637, 638, 640, 641, 653, 665, 676, 680, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 849, 859, 863, 864, 878, 885, 889, 898, 899, 901, 906, 908, 946], "75": [27, 29, 30, 31, 33, 34, 38, 39, 41, 42, 45, 47, 50, 60, 61, 67, 70, 97, 99, 104, 107, 108, 110, 129, 131, 140, 142, 143, 150, 162, 170, 171, 173, 185, 196, 199, 207, 211, 213, 218, 219, 223, 224, 227, 229, 232, 233, 235, 236, 237, 241, 246, 256, 257, 260, 261, 274, 300, 302, 319, 322, 552, 553, 638, 902], "cutoff": [27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 52, 60, 68, 99, 100, 101, 104, 109, 110, 111, 115, 127, 141, 142, 143, 149, 160, 163, 168, 171, 173, 178, 199, 213, 219, 224, 227, 229, 231, 232, 233, 235, 238, 239, 240, 241, 261, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 552, 553, 580, 638, 646, 665, 680], "262": [27, 38, 45, 46, 47, 140, 150, 178, 196, 237, 239, 278, 966], "133": [27, 61, 88, 150, 183, 185, 196, 224, 236, 256, 261], "044": [27, 167, 169, 176, 196, 253], "condit": [27, 36, 37, 42, 43, 46, 53, 56, 57, 61, 64, 65, 66, 67, 70, 71, 77, 84, 85, 86, 87, 88, 106, 113, 114, 115, 122, 124, 127, 138, 140, 147, 148, 151, 153, 157, 167, 168, 169, 170, 171, 172, 176, 177, 180, 192, 193, 195, 203, 204, 205, 206, 207, 208, 211, 212, 219, 224, 230, 239, 245, 251, 256, 257, 258, 261, 262, 263, 264, 265, 266, 269, 278, 283, 288, 292, 293, 294, 295, 298, 301, 302, 303, 304, 308, 311, 314, 318, 319, 321, 322, 326, 333, 334, 335, 336, 338, 424, 425, 488, 495, 501, 507, 552, 603, 628, 635, 639, 649, 665, 676, 691, 703, 705, 706, 707, 770, 775, 776, 777, 779, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 818, 870, 884, 949, 966], "kind": [27, 29, 31, 33, 37, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 91, 95, 110, 118, 120, 121, 122, 123, 132, 135, 136, 137, 138, 153, 158, 162, 163, 169, 176, 178, 183, 187, 193, 196, 197, 199, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 218, 219, 224, 231, 234, 252, 253, 264, 265, 266, 274, 285, 287, 288, 291, 292, 305, 307, 311, 322, 332, 333, 334, 335, 336, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 366, 367, 375, 376, 382, 383, 398, 408, 446, 462, 504, 505, 520, 546, 552, 553, 555, 588, 626, 639, 706, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 846, 865, 867, 896, 902, 904, 909, 910, 917, 918, 946], "timepoint": [27, 45, 58, 85, 129, 148, 168, 176, 178, 206, 208, 211, 244, 328, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 356, 419, 599, 655, 706, 707, 789, 790, 791, 795, 796, 797, 798], "901": [27, 261], "306": [27, 48, 52, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 88, 95, 110, 111, 118, 120, 121, 122, 123, 137, 140, 150, 158, 173, 185, 196, 199, 203, 204, 205, 206, 207, 208, 210, 224, 237, 238, 252, 253, 256, 261, 319, 638], "number": [27, 29, 30, 31, 33, 35, 36, 37, 57, 58, 60, 61, 65, 66, 68, 70, 72, 75, 78, 85, 99, 102, 104, 109, 110, 115, 118, 120, 121, 128, 131, 135, 137, 141, 142, 149, 162, 167, 169, 170, 171, 172, 173, 176, 177, 178, 187, 188, 189, 192, 193, 195, 197, 198, 199, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 224, 227, 228, 229, 230, 232, 233, 234, 238, 240, 241, 245, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 316, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 366, 367, 368, 369, 371, 394, 397, 405, 413, 419, 425, 426, 427, 428, 429, 430, 431, 433, 436, 441, 442, 443, 452, 484, 485, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 501, 502, 506, 508, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 541, 542, 543, 547, 549, 550, 551, 552, 553, 554, 564, 578, 580, 587, 590, 596, 599, 600, 605, 606, 607, 608, 609, 611, 612, 614, 615, 616, 618, 620, 621, 622, 637, 638, 639, 643, 647, 648, 649, 650, 651, 653, 654, 664, 665, 666, 667, 669, 671, 672, 674, 675, 681, 682, 693, 703, 707, 728, 737, 738, 739, 740, 741, 742, 743, 747, 748, 749, 752, 753, 754, 755, 763, 764, 765, 766, 768, 769, 770, 772, 774, 776, 777, 778, 779, 780, 781, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 810, 812, 814, 815, 822, 823, 824, 825, 826, 827, 828, 834, 842, 843, 844, 846, 853, 862, 863, 869, 870, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 885, 886, 887, 889, 890, 892, 893, 898, 899, 900, 901, 904, 905, 906, 907, 908, 909, 912, 923, 946], "rang": [27, 29, 30, 31, 35, 36, 37, 39, 40, 41, 42, 44, 45, 54, 55, 58, 59, 60, 68, 71, 72, 75, 85, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 115, 120, 121, 122, 124, 125, 127, 128, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 152, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 173, 176, 178, 179, 183, 185, 186, 187, 189, 193, 194, 195, 196, 198, 199, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 224, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 246, 247, 251, 252, 253, 256, 257, 258, 259, 260, 261, 264, 266, 269, 270, 271, 274, 282, 283, 292, 294, 304, 307, 312, 318, 321, 322, 325, 326, 330, 333, 334, 335, 336, 338, 342, 343, 366, 391, 445, 452, 467, 477, 478, 485, 488, 492, 494, 495, 518, 544, 549, 552, 553, 561, 589, 637, 638, 643, 653, 664, 665, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 846, 863, 876, 877, 878, 882, 885, 889, 898, 899, 900, 901, 906, 908], "05": [27, 29, 30, 34, 35, 36, 45, 60, 61, 68, 72, 75, 77, 82, 85, 86, 87, 98, 101, 106, 111, 112, 114, 120, 123, 124, 125, 128, 130, 131, 140, 144, 147, 148, 153, 157, 168, 171, 177, 178, 197, 198, 201, 204, 206, 207, 208, 210, 212, 219, 222, 223, 224, 227, 228, 231, 235, 237, 239, 241, 244, 252, 253, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 271, 275, 278, 284, 304, 314, 315, 366, 367, 391, 394, 400, 505, 524, 528, 552, 553, 572, 620, 647, 650, 661, 749, 767, 772, 773, 776, 777, 779, 780, 781, 789, 790, 791, 795, 796, 797, 798, 810, 812, 822, 849, 905, 966], "25": [27, 29, 30, 31, 33, 37, 39, 42, 44, 45, 51, 52, 54, 60, 61, 64, 67, 69, 71, 72, 73, 75, 76, 79, 82, 95, 97, 99, 108, 109, 110, 131, 136, 137, 140, 141, 142, 143, 144, 150, 152, 153, 157, 158, 162, 163, 164, 170, 172, 173, 178, 186, 187, 191, 196, 198, 199, 202, 205, 207, 208, 210, 212, 213, 218, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 241, 243, 246, 253, 256, 257, 258, 260, 261, 264, 266, 269, 270, 278, 286, 293, 295, 315, 318, 322, 327, 333, 334, 335, 336, 340, 341, 344, 345, 346, 347, 348, 349, 431, 477, 485, 487, 496, 521, 523, 552, 553, 659, 680, 749, 778, 844, 849, 855, 870, 882, 899, 902, 904, 909, 952, 966], "off": [27, 30, 36, 94, 100, 104, 121, 142, 144, 162, 164, 168, 170, 176, 178, 179, 183, 186, 187, 193, 194, 195, 196, 198, 219, 223, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 240, 244, 245, 246, 247, 251, 252, 274, 278, 284, 285, 291, 293, 294, 295, 308, 311, 318, 319, 322, 325, 328, 333, 334, 335, 336, 340, 341, 344, 346, 347, 348, 349, 366, 367, 487, 496, 521, 523, 552, 553, 637, 650, 651, 653, 667, 670, 676, 680, 691, 824, 827], "compar": [27, 30, 36, 45, 47, 48, 52, 53, 54, 62, 64, 65, 82, 100, 105, 110, 112, 117, 119, 131, 135, 141, 142, 151, 157, 168, 170, 171, 172, 173, 185, 187, 189, 193, 194, 199, 203, 207, 210, 211, 219, 224, 230, 232, 234, 235, 236, 258, 259, 260, 264, 265, 271, 285, 291, 306, 310, 311, 314, 328, 330, 333, 334, 335, 336, 337, 338, 339, 344, 346, 429, 430, 435, 459, 526, 552, 553, 558, 590, 593, 597, 604, 605, 616, 617, 620, 636, 638, 676, 697, 699, 703, 706, 708, 711, 739, 743, 744, 745, 746, 747, 748, 749, 751, 754, 760, 844, 853, 876, 884, 893, 899, 946, 960, 966], "unfilt": [27, 193, 199, 230, 233], "meg0443": 27, "ch_name": [27, 29, 30, 33, 41, 44, 45, 57, 90, 94, 97, 102, 128, 140, 142, 143, 148, 154, 162, 163, 167, 173, 176, 178, 186, 193, 195, 196, 199, 211, 213, 218, 219, 228, 229, 231, 233, 235, 238, 239, 240, 241, 244, 251, 253, 258, 259, 260, 261, 270, 284, 287, 288, 291, 294, 304, 308, 310, 325, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 344, 347, 348, 349, 366, 367, 382, 384, 388, 391, 394, 399, 407, 441, 442, 445, 551, 552, 553, 604, 629, 630, 631, 632, 638, 650, 651, 655, 656, 665, 666, 667, 687, 708, 730, 743, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 813, 867, 876, 877, 899], "index": [27, 30, 33, 45, 47, 57, 73, 88, 97, 99, 103, 118, 160, 163, 170, 176, 177, 178, 187, 193, 196, 197, 199, 202, 207, 210, 211, 216, 219, 223, 227, 229, 232, 233, 234, 235, 237, 238, 239, 241, 245, 246, 252, 257, 258, 269, 270, 278, 283, 285, 286, 287, 288, 291, 292, 294, 295, 299, 304, 310, 319, 321, 322, 326, 327, 331, 332, 333, 334, 335, 336, 340, 341, 343, 344, 346, 347, 348, 349, 353, 354, 365, 366, 367, 381, 391, 420, 434, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 597, 608, 628, 638, 655, 656, 666, 667, 669, 670, 671, 680, 706, 707, 749, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 844, 859, 864, 870, 874, 879, 889, 891, 893], "edi": 27, "182": [27, 32, 108, 150, 196, 219, 256, 260, 261, 966], "hf_sef_data": [27, 32, 966], "some": [28, 29, 30, 31, 36, 42, 47, 53, 60, 66, 80, 81, 88, 92, 94, 97, 100, 103, 123, 126, 131, 133, 137, 141, 142, 148, 150, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 183, 185, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 207, 210, 211, 217, 218, 219, 220, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 244, 245, 246, 247, 251, 252, 253, 256, 260, 261, 262, 269, 271, 274, 283, 284, 286, 289, 291, 292, 294, 302, 303, 304, 306, 311, 312, 314, 316, 318, 319, 320, 321, 322, 323, 325, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 346, 347, 348, 349, 378, 382, 386, 390, 425, 444, 458, 499, 508, 518, 519, 538, 544, 552, 553, 561, 568, 633, 637, 638, 640, 648, 657, 676, 684, 690, 700, 702, 729, 733, 737, 771, 777, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 846, 862, 864, 881, 883, 899, 946, 947, 949, 951, 952, 955, 956, 959, 962, 963], "demo": [28, 53, 284, 301, 321], "common": [28, 43, 46, 53, 58, 59, 60, 69, 70, 94, 103, 143, 150, 162, 176, 178, 182, 185, 187, 189, 192, 199, 217, 220, 230, 232, 233, 234, 235, 238, 239, 244, 245, 253, 265, 271, 275, 278, 300, 301, 305, 307, 311, 314, 319, 321, 322, 323, 333, 334, 335, 336, 338, 346, 382, 387, 398, 425, 434, 445, 485, 510, 535, 541, 552, 553, 568, 572, 635, 638, 654, 719, 723, 733, 789, 790, 791, 944, 946, 949, 966], "public": [28, 53, 140, 144, 148, 150, 171, 192, 230, 276, 277, 284, 285, 309, 311, 312, 318, 328, 335, 338, 344, 524, 551, 552, 706, 716, 791, 844, 865, 966], "median": [28, 31, 32, 53, 97, 156, 177, 184, 224, 229, 233, 257, 269, 270, 288, 289, 292, 294, 304, 330, 333, 334, 335, 336, 338, 342, 384, 427, 485, 492, 494, 526, 552, 553, 566, 635, 637, 638, 653, 668, 676, 768, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 815, 863, 870, 877, 878, 885, 889, 898, 901, 906, 908, 966], "nerv": [28, 31, 32, 53, 333, 335, 336, 338, 427, 526, 566, 635, 668, 966], "hf": [28, 32, 53, 124, 219, 274, 335, 465, 870, 966], "sef": [28, 32, 53, 274, 318, 335, 465, 870, 966], "kernel": [28, 32, 53, 188, 218, 223, 256, 271, 278, 299, 330, 331, 333, 335, 336, 338, 340, 341, 344, 347, 348, 349, 372, 425, 429, 491, 505, 526, 528, 552, 601, 652, 742, 862, 871, 874, 914, 946, 951, 956, 958, 966], "phantom": [28, 32, 53, 111, 192, 214, 215, 278, 284, 286, 295, 309, 322, 330, 331, 333, 335, 336, 338, 372, 425, 429, 430, 462, 505, 514, 526, 528, 552, 564, 566, 601, 629, 635, 652, 676, 691, 799, 862, 871, 874, 886, 914, 966], "trial": [28, 32, 39, 42, 44, 53, 54, 59, 96, 97, 99, 101, 111, 129, 132, 135, 141, 142, 145, 151, 157, 167, 168, 169, 170, 171, 176, 178, 179, 192, 193, 195, 207, 210, 219, 223, 224, 229, 230, 233, 251, 253, 256, 261, 262, 263, 264, 266, 278, 280, 283, 292, 297, 300, 301, 303, 309, 319, 321, 333, 334, 335, 336, 338, 360, 361, 364, 388, 394, 424, 485, 498, 501, 507, 508, 509, 511, 514, 526, 552, 569, 572, 573, 607, 609, 629, 635, 638, 646, 703, 723, 769, 770, 772, 773, 774, 776, 777, 791, 795, 799, 823, 824, 826, 827, 870, 876, 879, 966], "regress": [28, 32, 36, 37, 38, 41, 44, 45, 53, 57, 68, 105, 112, 126, 130, 174, 175, 192, 213, 224, 242, 243, 256, 278, 292, 301, 303, 305, 314, 319, 333, 334, 335, 336, 338, 424, 491, 497, 526, 552, 603, 606, 635, 637, 656, 686, 691, 699, 773, 774, 775, 870, 879, 882, 901, 966], "optic": [28, 32, 53, 103, 192, 216, 218, 242, 243, 278, 287, 291, 293, 303, 319, 321, 322, 330, 331, 333, 335, 336, 337, 338, 344, 372, 425, 435, 443, 514, 526, 528, 562, 575, 600, 604, 605, 616, 632, 635, 637, 652, 678, 679, 683, 695, 708, 799, 838, 844, 862, 914, 966], "pump": [28, 32, 53, 192, 216, 242, 243, 278, 287, 319, 321, 330, 331, 333, 335, 336, 337, 338, 344, 372, 425, 435, 526, 528, 575, 600, 604, 605, 616, 632, 635, 637, 652, 695, 708, 799, 838, 844, 862, 914, 966], "magnetomet": [28, 32, 33, 48, 53, 58, 100, 104, 107, 108, 109, 114, 121, 137, 147, 148, 169, 172, 173, 177, 178, 189, 192, 193, 194, 195, 196, 207, 210, 211, 216, 219, 227, 228, 229, 231, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 251, 256, 278, 287, 291, 292, 293, 295, 299, 302, 304, 318, 319, 321, 322, 325, 328, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 347, 348, 349, 366, 367, 372, 390, 425, 426, 427, 428, 429, 430, 435, 441, 442, 443, 485, 492, 506, 526, 528, 529, 547, 549, 550, 552, 553, 575, 593, 600, 604, 605, 616, 632, 635, 636, 637, 638, 648, 649, 650, 651, 652, 653, 654, 655, 656, 665, 676, 687, 695, 708, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 838, 844, 862, 863, 869, 876, 877, 878, 880, 882, 885, 886, 889, 898, 899, 901, 906, 907, 908, 914, 946, 966], "dspm": [28, 32, 37, 53, 55, 57, 62, 63, 64, 65, 66, 67, 68, 70, 81, 82, 85, 87, 132, 133, 134, 135, 136, 137, 192, 193, 202, 205, 206, 208, 209, 214, 215, 219, 224, 240, 252, 253, 264, 266, 299, 318, 319, 321, 330, 333, 335, 336, 337, 338, 339, 340, 341, 344, 346, 347, 348, 349, 359, 363, 366, 367, 424, 425, 429, 526, 549, 550, 552, 566, 591, 600, 604, 605, 606, 607, 608, 609, 610, 611, 612, 616, 617, 618, 619, 621, 622, 635, 638, 656, 703, 706, 708, 710, 805, 844, 871, 966], "face": [28, 30, 32, 36, 53, 96, 152, 167, 169, 171, 176, 178, 188, 193, 199, 202, 224, 227, 278, 292, 300, 305, 314, 330, 333, 334, 335, 336, 337, 338, 344, 376, 424, 425, 526, 566, 600, 604, 605, 616, 638, 656, 719, 722, 844, 859, 907, 939, 944, 966], "In": [29, 30, 31, 36, 41, 42, 45, 47, 58, 66, 68, 69, 70, 71, 72, 85, 97, 101, 102, 106, 109, 110, 114, 115, 118, 122, 129, 131, 135, 140, 142, 143, 144, 146, 150, 155, 159, 162, 164, 167, 169, 171, 176, 177, 178, 179, 182, 183, 185, 187, 188, 189, 193, 194, 195, 197, 198, 199, 202, 203, 205, 208, 216, 218, 219, 220, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 251, 253, 256, 257, 258, 266, 269, 270, 271, 274, 275, 278, 283, 287, 291, 292, 293, 295, 301, 303, 304, 305, 306, 307, 310, 311, 312, 318, 319, 321, 322, 325, 327, 328, 330, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 357, 366, 367, 369, 372, 373, 378, 380, 390, 397, 399, 412, 425, 429, 430, 441, 442, 443, 444, 485, 487, 491, 492, 501, 502, 506, 509, 518, 520, 528, 529, 547, 549, 550, 552, 553, 561, 568, 604, 605, 606, 607, 608, 609, 613, 616, 633, 637, 638, 639, 640, 653, 654, 655, 656, 658, 664, 668, 672, 674, 682, 684, 691, 693, 716, 733, 754, 757, 775, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 812, 822, 823, 824, 825, 826, 827, 828, 831, 841, 844, 859, 870, 876, 877, 878, 879, 880, 882, 883, 885, 886, 889, 890, 897, 898, 899, 900, 901, 904, 906, 907, 908, 910, 946, 949, 951, 953, 958, 960, 961], "neuromag": [29, 137, 183, 185, 187, 193, 195, 210, 212, 228, 235, 238, 244, 245, 246, 283, 287, 289, 297, 309, 319, 321, 322, 325, 326, 331, 333, 334, 335, 336, 338, 343, 390, 505, 526, 552, 553, 564, 570, 578, 586, 676, 698, 723, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 876, 879, 884, 899, 962], "place": [29, 31, 33, 52, 94, 167, 176, 177, 178, 183, 188, 192, 193, 196, 200, 201, 205, 230, 232, 233, 234, 236, 238, 240, 244, 251, 253, 264, 274, 285, 286, 291, 304, 307, 309, 311, 319, 321, 322, 323, 327, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 356, 382, 387, 390, 410, 411, 418, 434, 435, 453, 457, 458, 460, 485, 492, 507, 509, 510, 523, 524, 552, 553, 554, 564, 602, 616, 625, 630, 634, 637, 638, 650, 651, 653, 656, 659, 661, 663, 667, 668, 672, 724, 730, 733, 739, 740, 741, 742, 754, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 830, 848, 863, 867, 878, 885, 889, 898, 901, 906, 908, 947, 949, 966], "insid": [29, 31, 33, 42, 50, 52, 67, 71, 76, 101, 137, 167, 176, 183, 185, 186, 187, 188, 198, 203, 208, 209, 210, 211, 212, 213, 231, 236, 238, 240, 244, 260, 266, 275, 286, 294, 298, 302, 304, 309, 311, 318, 322, 339, 343, 344, 347, 348, 349, 361, 466, 509, 537, 544, 552, 553, 585, 609, 673, 844, 899, 946], "helmet": [29, 31, 53, 71, 107, 108, 137, 144, 151, 152, 157, 164, 177, 183, 185, 197, 199, 210, 211, 212, 213, 216, 240, 275, 286, 287, 288, 292, 301, 303, 305, 322, 335, 336, 338, 536, 596, 604, 619, 706, 844, 846, 854, 862, 881, 914, 966], "stimul": [29, 31, 58, 71, 178, 207, 266, 294, 297, 319, 322, 333, 334, 335, 336, 430, 552, 553, 635, 636, 641, 668, 739, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862], "7": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 45, 46, 47, 51, 54, 56, 58, 59, 60, 61, 64, 66, 67, 68, 70, 71, 72, 73, 81, 82, 85, 87, 88, 93, 95, 97, 98, 100, 102, 104, 107, 108, 110, 112, 115, 122, 125, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 148, 150, 156, 157, 158, 163, 164, 167, 169, 170, 171, 172, 173, 175, 176, 178, 181, 183, 185, 186, 187, 191, 193, 196, 197, 198, 199, 201, 203, 206, 207, 208, 210, 211, 212, 213, 215, 219, 222, 223, 224, 227, 229, 230, 231, 233, 235, 236, 237, 238, 239, 241, 243, 244, 246, 249, 251, 252, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 273, 274, 278, 280, 293, 295, 299, 302, 307, 309, 315, 316, 319, 322, 324, 327, 330, 332, 333, 334, 335, 336, 340, 341, 343, 344, 346, 347, 348, 349, 384, 405, 425, 452, 461, 477, 484, 496, 498, 509, 520, 521, 523, 524, 525, 526, 549, 552, 553, 561, 568, 629, 630, 631, 638, 643, 645, 659, 664, 665, 674, 676, 678, 680, 694, 708, 728, 729, 755, 769, 770, 771, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 805, 812, 813, 822, 823, 824, 827, 844, 862, 877, 882, 891, 904, 905, 909, 951, 952, 955, 957, 958, 966], "121": [29, 35, 39, 150, 167, 172, 193, 196, 197, 237, 256, 261, 319, 333, 334, 508], "trace": [29, 31, 33, 57, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 102, 107, 118, 121, 122, 137, 150, 171, 176, 178, 193, 199, 204, 205, 206, 209, 219, 220, 224, 228, 235, 237, 238, 240, 241, 244, 247, 253, 288, 292, 293, 294, 322, 325, 331, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 485, 552, 553, 638, 841, 844, 873, 876, 880, 888, 890, 897, 899, 904, 909], "fname": [29, 36, 38, 47, 79, 92, 106, 113, 114, 140, 147, 148, 156, 158, 187, 197, 233, 295, 303, 307, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 343, 344, 345, 346, 347, 348, 349, 357, 370, 382, 383, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 422, 423, 515, 516, 517, 518, 552, 553, 556, 557, 558, 559, 562, 567, 571, 572, 573, 574, 577, 580, 582, 583, 585, 586, 587, 588, 589, 619, 623, 627, 628, 637, 638, 662, 686, 687, 688, 689, 692, 694, 695, 696, 697, 698, 699, 701, 704, 705, 706, 707, 708, 709, 712, 714, 715, 716, 717, 718, 719, 721, 723, 734, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 816, 817, 818, 829, 831, 838, 932, 933, 934, 935, 937, 938, 939, 942, 943, 944, 945, 949], "phantom_32_100nam_raw": 29, "sti101": [29, 31, 137, 195, 326, 526, 527], "identifi": [29, 30, 38, 39, 53, 58, 59, 60, 105, 112, 164, 173, 178, 196, 219, 220, 224, 227, 233, 235, 253, 256, 278, 291, 303, 304, 311, 318, 319, 322, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 382, 398, 405, 445, 488, 495, 537, 552, 553, 554, 559, 638, 642, 646, 653, 664, 675, 685, 844, 854, 866, 904, 908, 909, 946, 966], "inspect": [29, 33, 47, 54, 97, 110, 168, 178, 183, 189, 219, 227, 238, 239, 274, 325, 333, 334, 335, 336, 377, 379, 388, 402, 552, 553, 580, 676, 684, 741, 742, 876, 880, 899, 946, 962], "rc2": 29, "bx": [29, 775], "lc3": 29, "bz": 29, "drop": [29, 30, 33, 34, 35, 37, 38, 42, 44, 47, 58, 59, 60, 68, 72, 75, 98, 99, 124, 125, 128, 131, 135, 138, 140, 141, 142, 145, 149, 150, 156, 162, 163, 164, 168, 169, 171, 172, 173, 178, 179, 189, 193, 194, 199, 204, 207, 209, 210, 212, 213, 219, 227, 228, 229, 232, 233, 235, 236, 239, 240, 241, 246, 252, 253, 258, 259, 260, 261, 264, 266, 270, 280, 281, 282, 283, 285, 288, 289, 291, 292, 293, 294, 300, 301, 303, 304, 311, 322, 327, 328, 330, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 384, 387, 510, 511, 542, 552, 553, 566, 638, 650, 651, 655, 677, 700, 702, 730, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 875, 876, 889, 891, 955], "drop_channel": [29, 30, 68, 94, 97, 163, 167, 176, 244, 261, 288, 301, 305, 333, 334, 335, 336, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 949], "add": [29, 54, 63, 69, 70, 97, 102, 118, 122, 123, 129, 142, 148, 155, 163, 167, 168, 170, 171, 178, 188, 195, 198, 199, 202, 203, 208, 217, 219, 223, 227, 228, 229, 231, 233, 234, 236, 241, 244, 246, 252, 253, 256, 261, 271, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 321, 325, 327, 329, 330, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 382, 444, 485, 487, 492, 496, 509, 521, 523, 524, 552, 553, 637, 638, 648, 650, 651, 652, 653, 696, 718, 727, 730, 735, 737, 739, 740, 741, 742, 743, 753, 786, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 839, 844, 848, 863, 866, 867, 876, 878, 883, 885, 889, 898, 901, 906, 908, 915, 951, 955, 958, 959], "order": [29, 30, 42, 44, 45, 53, 57, 60, 64, 71, 73, 96, 97, 102, 109, 111, 115, 120, 122, 135, 139, 140, 142, 145, 149, 152, 156, 163, 170, 171, 172, 176, 183, 187, 188, 189, 192, 193, 196, 199, 204, 216, 218, 223, 227, 228, 229, 232, 233, 234, 235, 237, 238, 240, 241, 244, 247, 253, 258, 261, 266, 278, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 302, 304, 306, 307, 311, 318, 322, 325, 326, 328, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 347, 348, 349, 357, 372, 387, 394, 411, 412, 414, 418, 425, 432, 434, 438, 485, 487, 491, 492, 496, 506, 510, 514, 520, 521, 522, 523, 524, 529, 538, 552, 553, 560, 561, 568, 602, 604, 611, 612, 614, 615, 629, 630, 631, 637, 638, 646, 648, 649, 650, 651, 652, 658, 665, 676, 690, 708, 722, 733, 766, 771, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 808, 809, 813, 829, 831, 834, 841, 850, 876, 877, 878, 882, 885, 887, 889, 893, 894, 899, 901, 902, 906, 907, 908, 946, 951], "40": [29, 31, 35, 36, 38, 39, 45, 47, 54, 59, 61, 66, 71, 72, 73, 84, 85, 95, 100, 101, 103, 107, 108, 111, 118, 128, 131, 132, 134, 136, 137, 140, 142, 149, 150, 153, 163, 167, 168, 171, 172, 178, 182, 183, 185, 187, 191, 193, 196, 198, 199, 203, 208, 210, 211, 213, 218, 219, 223, 224, 229, 230, 232, 233, 237, 238, 240, 244, 256, 257, 258, 260, 261, 264, 265, 266, 270, 278, 280, 300, 319, 322, 333, 334, 343, 506, 520, 552, 553, 562, 638, 650, 665, 666, 669, 741, 849, 876, 894, 899, 913, 966], "decim": [29, 31, 37, 38, 39, 44, 45, 50, 59, 60, 67, 68, 131, 137, 140, 185, 188, 189, 193, 199, 208, 210, 213, 224, 231, 233, 238, 257, 258, 259, 260, 261, 270, 282, 283, 284, 285, 287, 288, 289, 291, 292, 295, 300, 301, 304, 308, 318, 322, 325, 328, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 378, 484, 498, 506, 526, 552, 553, 578, 597, 621, 622, 638, 655, 656, 699, 702, 758, 775, 789, 790, 791, 795, 796, 797, 798, 802, 805, 821, 823, 824, 825, 826, 827, 828, 844, 864, 876, 899], "snr": [29, 31, 33, 36, 37, 45, 47, 53, 54, 55, 56, 62, 64, 65, 67, 74, 80, 81, 82, 87, 115, 118, 132, 137, 193, 204, 206, 208, 211, 219, 230, 252, 253, 264, 266, 285, 291, 295, 302, 314, 318, 322, 330, 335, 337, 338, 344, 414, 529, 604, 605, 613, 616, 618, 619, 697, 706, 708, 753, 844, 869, 903, 966], "fig": [29, 30, 31, 36, 37, 38, 39, 41, 44, 45, 47, 48, 50, 65, 67, 68, 71, 73, 78, 84, 94, 95, 96, 97, 98, 99, 100, 107, 108, 109, 114, 121, 124, 127, 131, 132, 135, 137, 140, 141, 142, 143, 144, 146, 148, 152, 153, 154, 162, 163, 164, 168, 171, 173, 177, 178, 183, 184, 185, 186, 187, 193, 197, 199, 203, 204, 205, 207, 208, 209, 210, 212, 213, 219, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 245, 246, 253, 256, 257, 258, 259, 260, 261, 270, 271, 274, 275, 291, 305, 330, 331, 332, 333, 334, 335, 336, 338, 342, 343, 346, 348, 349, 382, 383, 485, 492, 552, 553, 637, 638, 658, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 846, 848, 855, 859, 862, 863, 864, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 906, 907, 910, 916, 924, 925, 926, 927, 928, 929], "t_peak": [29, 210, 213, 240], "ax": [29, 30, 36, 37, 38, 39, 41, 45, 47, 48, 63, 65, 67, 71, 73, 84, 94, 95, 96, 97, 98, 99, 100, 108, 109, 113, 118, 121, 124, 127, 132, 135, 140, 141, 142, 143, 144, 148, 150, 160, 162, 163, 164, 171, 172, 173, 177, 178, 183, 187, 188, 197, 199, 203, 204, 207, 208, 210, 213, 223, 224, 227, 230, 231, 234, 235, 238, 239, 240, 247, 253, 256, 257, 258, 259, 260, 261, 269, 270, 271, 274, 275, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 300, 304, 305, 306, 307, 308, 309, 322, 330, 331, 333, 334, 335, 336, 338, 342, 382, 383, 391, 396, 485, 492, 544, 552, 553, 637, 638, 658, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 845, 846, 848, 855, 859, 862, 863, 865, 868, 869, 870, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 894, 895, 896, 898, 900, 901, 902, 903, 906, 908], "axvlin": [29, 34, 36, 37, 39, 45, 71, 140, 171, 187, 213, 224, 238, 240, 274, 275], "color": [29, 34, 35, 36, 37, 38, 39, 45, 47, 48, 64, 65, 71, 73, 74, 75, 76, 80, 81, 85, 97, 108, 109, 124, 125, 129, 132, 140, 141, 142, 143, 144, 148, 150, 159, 160, 162, 163, 164, 168, 169, 171, 176, 177, 178, 183, 187, 193, 195, 197, 198, 199, 202, 203, 204, 205, 208, 210, 212, 213, 223, 224, 227, 228, 230, 231, 234, 238, 239, 240, 245, 246, 247, 253, 261, 266, 269, 270, 271, 274, 275, 281, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 303, 304, 305, 306, 309, 310, 321, 329, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 441, 485, 492, 537, 538, 543, 544, 552, 553, 637, 638, 709, 710, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 846, 854, 859, 861, 862, 863, 865, 868, 870, 873, 874, 875, 876, 877, 878, 879, 880, 882, 884, 885, 887, 888, 889, 894, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 912, 917, 940, 941], "k": [29, 33, 34, 35, 36, 37, 39, 40, 44, 45, 48, 54, 57, 64, 65, 67, 85, 92, 96, 97, 110, 125, 128, 132, 150, 169, 170, 185, 187, 203, 208, 216, 223, 224, 230, 234, 245, 247, 260, 261, 269, 270, 271, 278, 299, 311, 321, 322, 330, 331, 333, 334, 335, 336, 339, 344, 352, 357, 366, 369, 371, 372, 485, 492, 547, 549, 550, 552, 553, 589, 604, 605, 637, 638, 658, 665, 708, 749, 770, 776, 777, 778, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 831, 844, 859, 862, 863, 878, 884, 885, 888, 899, 901, 906, 907, 908, 951], "l": [29, 34, 45, 70, 75, 127, 155, 164, 171, 187, 199, 213, 216, 223, 233, 236, 238, 240, 261, 264, 270, 271, 274, 278, 304, 316, 319, 322, 324, 325, 333, 334, 345, 431, 452, 477, 478, 491, 605, 638, 646, 749, 795, 825, 828, 864, 870, 891, 958, 964], "lw": [29, 45, 65, 171, 199, 208, 213, 223, 238, 240, 253, 280, 812, 822], "zorder": [29, 65, 187, 213, 283, 335, 336, 812, 822, 880, 883], "open": [29, 31, 37, 39, 40, 41, 42, 44, 54, 55, 58, 59, 60, 68, 71, 72, 75, 88, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 110, 111, 115, 120, 121, 124, 125, 127, 128, 131, 132, 135, 137, 138, 139, 141, 143, 145, 146, 149, 152, 159, 160, 162, 168, 169, 171, 173, 177, 178, 179, 182, 183, 188, 189, 192, 193, 194, 195, 196, 199, 204, 207, 209, 210, 213, 224, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 244, 247, 252, 253, 258, 259, 260, 261, 264, 266, 270, 271, 274, 278, 283, 284, 292, 300, 303, 307, 312, 313, 319, 321, 332, 333, 334, 335, 336, 343, 346, 452, 552, 553, 638, 646, 754, 884, 889, 899, 907, 946, 950, 952, 956, 958, 959], "526631": 29, "526": 29, "631": [29, 261], "readibandpass": [29, 33, 34, 35, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 101, 104, 109, 115, 141, 143, 149, 160, 163, 168, 171, 173, 199, 224, 227, 229, 232, 233, 235, 239, 240, 241, 261, 271, 305, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 493, 496, 520, 521, 523, 552, 553, 680, 793, 794, 799, 800, 899, 900], "6601": [29, 31], "351": [29, 39, 45, 108, 140, 150, 196, 224], "origin": [29, 30, 31, 33, 34, 35, 37, 38, 39, 42, 44, 47, 48, 50, 52, 58, 59, 60, 64, 67, 68, 71, 72, 75, 76, 97, 98, 99, 103, 106, 107, 108, 114, 121, 122, 124, 125, 128, 131, 135, 138, 140, 141, 142, 145, 146, 149, 150, 156, 162, 163, 164, 167, 168, 169, 171, 172, 173, 176, 178, 179, 183, 185, 186, 187, 188, 189, 193, 194, 196, 197, 199, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 246, 253, 258, 259, 260, 261, 264, 266, 269, 270, 286, 287, 291, 301, 308, 311, 318, 319, 321, 322, 325, 326, 327, 328, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 346, 347, 348, 349, 351, 353, 354, 366, 367, 382, 431, 441, 485, 492, 499, 500, 501, 506, 509, 519, 520, 521, 523, 524, 546, 551, 552, 553, 561, 564, 568, 573, 590, 596, 606, 637, 638, 639, 648, 649, 653, 665, 676, 683, 691, 701, 705, 708, 713, 726, 728, 730, 738, 740, 741, 742, 749, 754, 774, 781, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 840, 844, 862, 863, 870, 876, 878, 880, 882, 885, 886, 889, 896, 898, 899, 900, 901, 902, 905, 906, 908, 917, 938, 958, 960], "prior": [29, 37, 38, 44, 53, 54, 55, 56, 60, 62, 64, 65, 66, 70, 73, 78, 82, 83, 84, 87, 118, 132, 135, 136, 138, 141, 153, 169, 176, 178, 189, 193, 199, 205, 206, 207, 208, 213, 220, 224, 233, 236, 238, 240, 247, 252, 261, 264, 266, 286, 291, 292, 322, 330, 331, 335, 337, 338, 344, 366, 367, 529, 530, 547, 548, 549, 550, 552, 553, 570, 604, 605, 616, 638, 648, 665, 676, 697, 706, 708, 789, 844, 873, 874, 899, 905, 966], "dens": [29, 162, 183, 184, 185, 187, 209, 210, 218, 278, 286, 325, 346, 378, 646, 844, 862], "pack": [29, 792], "small": [29, 30, 31, 33, 34, 37, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 103, 118, 121, 122, 132, 135, 136, 137, 138, 149, 156, 162, 168, 169, 179, 189, 193, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 224, 230, 231, 233, 235, 240, 246, 252, 253, 256, 258, 264, 266, 274, 282, 283, 295, 310, 311, 319, 321, 322, 330, 331, 333, 334, 335, 336, 339, 342, 390, 425, 485, 492, 552, 553, 569, 637, 638, 640, 694, 700, 776, 777, 779, 780, 782, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 874, 878, 885, 889, 898, 901, 906, 908, 946], "eigenvalu": [29, 31, 33, 34, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 118, 121, 122, 132, 135, 136, 137, 138, 149, 179, 189, 193, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 240, 252, 253, 264, 266, 322, 330, 485, 808, 871], "without": [29, 31, 33, 34, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 97, 101, 103, 118, 121, 122, 132, 135, 137, 141, 148, 149, 171, 176, 177, 178, 179, 186, 188, 189, 192, 197, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 228, 229, 230, 232, 233, 234, 235, 236, 238, 240, 246, 252, 253, 256, 271, 274, 283, 284, 285, 289, 291, 292, 293, 294, 295, 297, 299, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 318, 320, 322, 325, 328, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 360, 361, 364, 366, 367, 395, 396, 425, 429, 430, 441, 442, 443, 444, 485, 492, 515, 516, 517, 518, 526, 528, 529, 547, 549, 550, 552, 553, 561, 568, 573, 574, 597, 607, 609, 612, 616, 631, 665, 683, 699, 701, 705, 706, 723, 783, 792, 834, 844, 881, 886, 904, 909, 916, 946, 951, 960], "reduc": [29, 31, 33, 34, 35, 38, 42, 53, 60, 66, 68, 72, 75, 81, 85, 98, 105, 111, 112, 132, 135, 136, 137, 138, 142, 148, 149, 173, 176, 178, 184, 185, 189, 194, 199, 204, 207, 209, 210, 212, 213, 219, 223, 224, 231, 232, 233, 234, 235, 236, 238, 240, 244, 252, 258, 259, 261, 264, 265, 266, 270, 278, 283, 285, 286, 288, 291, 292, 293, 294, 297, 303, 304, 305, 306, 308, 311, 321, 322, 330, 333, 334, 335, 336, 337, 340, 341, 344, 347, 348, 349, 366, 367, 425, 429, 430, 441, 442, 443, 460, 485, 486, 492, 498, 501, 502, 508, 520, 526, 528, 529, 547, 549, 550, 552, 553, 608, 611, 612, 616, 621, 622, 637, 638, 674, 684, 731, 776, 777, 779, 780, 802, 805, 824, 827, 828, 880, 885, 886, 946, 966], "rank": [29, 31, 33, 34, 35, 38, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 111, 118, 121, 122, 132, 135, 136, 137, 138, 141, 149, 179, 189, 193, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 228, 232, 233, 234, 240, 252, 253, 264, 266, 282, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 299, 301, 302, 307, 310, 321, 330, 335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 493, 528, 529, 547, 549, 550, 610, 616, 638, 871, 886, 946], "113": [29, 30, 61, 140, 150, 195, 196, 201, 237, 245, 256, 261, 278, 966], "empir": [29, 31, 34, 35, 41, 53, 57, 62, 72, 75, 82, 115, 121, 149, 189, 204, 207, 209, 210, 212, 213, 224, 238, 240, 252, 278, 302, 330, 335, 336, 337, 338, 344, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 493, 528, 529, 547, 548, 549, 550, 616, 639, 697, 706, 708, 873, 874, 886, 905, 966], "36157": 29, "toler": [29, 31, 33, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 118, 121, 122, 137, 149, 179, 189, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 230, 233, 234, 240, 253, 282, 291, 310, 322, 429, 514, 547, 549, 550, 638, 685], "5e": [29, 33, 34, 35, 39, 57, 58, 60, 61, 66, 67, 71, 75, 85, 104, 137, 153, 168, 199, 210, 212, 213, 224, 236, 244, 253, 333, 334, 343, 528, 552, 553, 650, 876, 899], "2e": [29, 31, 33, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 97, 102, 118, 121, 122, 137, 147, 149, 179, 189, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 240, 253, 650, 651], "ep": [29, 31, 33, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 118, 121, 122, 137, 149, 179, 189, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 240, 253, 605], "dim": [29, 31, 33, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 118, 121, 122, 137, 149, 179, 187, 189, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 240, 253, 269, 330, 611, 612, 621, 622, 639, 795, 796], "max": [29, 30, 31, 33, 34, 35, 45, 47, 48, 57, 58, 59, 60, 61, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 87, 108, 111, 118, 121, 122, 124, 128, 135, 137, 140, 143, 144, 149, 163, 168, 171, 177, 179, 184, 187, 189, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 223, 224, 229, 231, 238, 240, 241, 244, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 275, 282, 287, 292, 301, 303, 309, 324, 330, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 366, 367, 391, 429, 485, 487, 492, 496, 519, 521, 523, 552, 553, 587, 614, 615, 620, 637, 638, 667, 671, 680, 685, 776, 777, 778, 779, 780, 782, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 853, 855, 863, 877, 878, 885, 889, 898, 900, 901, 904, 906, 907, 908, 909, 917, 964], "singular": [29, 31, 33, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 118, 121, 122, 137, 149, 179, 189, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 234, 240, 253, 322, 330, 340, 341, 344, 347, 348, 349, 429, 519, 613, 871], "valu": [29, 30, 31, 33, 34, 35, 36, 42, 45, 47, 48, 50, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 96, 98, 118, 121, 122, 124, 129, 131, 132, 137, 140, 142, 148, 149, 150, 158, 159, 162, 163, 164, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 183, 187, 189, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 229, 230, 231, 233, 234, 235, 238, 239, 240, 244, 246, 251, 252, 253, 256, 257, 258, 260, 261, 264, 265, 266, 269, 270, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 303, 304, 305, 306, 307, 308, 310, 311, 318, 319, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 352, 356, 357, 366, 367, 369, 371, 372, 376, 379, 380, 384, 391, 395, 397, 400, 419, 420, 425, 426, 428, 429, 430, 431, 436, 439, 440, 441, 442, 443, 447, 458, 477, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 504, 506, 507, 509, 513, 514, 518, 519, 523, 524, 525, 526, 527, 528, 529, 530, 533, 538, 541, 543, 544, 547, 549, 550, 552, 553, 554, 555, 561, 563, 568, 572, 576, 578, 580, 583, 584, 590, 592, 593, 596, 597, 599, 600, 601, 604, 605, 609, 611, 612, 613, 614, 615, 616, 619, 621, 622, 626, 637, 638, 639, 640, 641, 643, 644, 647, 650, 651, 653, 654, 655, 656, 658, 660, 664, 665, 667, 668, 671, 672, 674, 682, 684, 685, 687, 691, 693, 699, 703, 706, 710, 719, 726, 729, 730, 732, 733, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 762, 765, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 787, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 812, 814, 815, 822, 823, 824, 825, 826, 827, 831, 832, 834, 844, 846, 848, 854, 855, 862, 863, 865, 868, 870, 871, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 889, 890, 897, 898, 899, 900, 901, 904, 906, 907, 908, 909, 910, 911, 916, 917, 918, 944, 946, 966], "so": [29, 33, 36, 54, 57, 58, 64, 66, 70, 73, 90, 94, 97, 98, 101, 103, 110, 121, 122, 123, 131, 132, 135, 137, 142, 143, 150, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 182, 183, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 207, 208, 209, 210, 211, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 258, 260, 261, 264, 265, 266, 270, 271, 274, 275, 283, 284, 285, 289, 292, 297, 303, 304, 305, 307, 310, 311, 312, 318, 320, 321, 322, 325, 333, 334, 335, 336, 338, 340, 341, 343, 344, 345, 346, 347, 348, 349, 358, 359, 360, 367, 382, 404, 431, 438, 458, 462, 485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 516, 517, 519, 520, 524, 552, 553, 555, 572, 577, 580, 605, 611, 624, 638, 639, 640, 648, 649, 666, 676, 677, 694, 706, 728, 735, 737, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 834, 839, 844, 845, 854, 856, 880, 889, 891, 893, 899, 926, 937, 946, 951, 955, 958, 959, 960], "let": [29, 30, 36, 44, 47, 52, 58, 73, 81, 97, 98, 100, 114, 137, 141, 149, 162, 163, 167, 168, 169, 171, 173, 177, 178, 179, 183, 185, 186, 187, 189, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 224, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 240, 241, 244, 253, 256, 260, 261, 264, 265, 266, 270, 271, 274, 295, 311, 590, 812, 822, 845, 955], "care": [29, 54, 60, 168, 177, 178, 187, 230, 233, 234, 244, 246, 302, 310, 322, 333, 334, 335, 336, 443, 550, 552, 553, 775], "ahead": [29, 188, 311], "tol": [29, 60, 66, 72, 85, 102, 199, 295, 310, 429, 514, 528, 547, 549, 550], "1e": [29, 34, 35, 58, 59, 60, 66, 71, 72, 85, 91, 92, 97, 98, 102, 109, 122, 142, 148, 164, 185, 189, 206, 207, 210, 212, 224, 229, 230, 252, 253, 256, 285, 310, 321, 333, 334, 343, 514, 547, 552, 553, 605, 637, 647, 674, 755, 782, 789, 790, 791, 795, 796, 797, 798, 876, 899, 901, 906], "tol_kind": [29, 60, 292, 429], "rel": [29, 36, 50, 58, 59, 60, 68, 88, 101, 103, 113, 137, 140, 141, 164, 167, 169, 171, 183, 193, 195, 197, 217, 220, 227, 230, 231, 235, 238, 239, 240, 246, 270, 271, 274, 282, 284, 285, 287, 291, 294, 311, 318, 321, 322, 325, 326, 327, 328, 332, 333, 334, 335, 336, 379, 429, 436, 491, 506, 509, 521, 552, 553, 601, 638, 671, 674, 690, 726, 728, 745, 782, 789, 790, 791, 795, 796, 797, 798, 801, 802, 803, 815, 844, 859, 864, 879, 884, 893, 897, 899, 907], "shrunk": [29, 33, 57, 60, 66, 67, 68, 71, 85, 149, 179, 189, 204, 210, 425], "91": [29, 34, 39, 45, 52, 61, 67, 71, 73, 76, 98, 106, 107, 136, 137, 140, 142, 145, 150, 178, 183, 185, 189, 196, 203, 208, 209, 218, 223, 224, 228, 235, 236, 237, 238, 239, 256, 257, 259, 260, 261, 278, 405], "our": [29, 30, 31, 45, 52, 53, 68, 70, 89, 94, 97, 101, 102, 107, 111, 121, 131, 137, 140, 142, 143, 148, 149, 150, 162, 163, 164, 167, 168, 169, 171, 172, 173, 177, 178, 183, 187, 193, 195, 198, 199, 202, 207, 208, 210, 211, 213, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 251, 253, 256, 258, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 281, 304, 305, 306, 311, 312, 313, 314, 318, 322, 323, 346, 525, 526, 613, 812, 822, 840, 946, 952, 954, 955, 956, 957, 960, 964], "align": [29, 31, 35, 54, 107, 162, 178, 182, 184, 185, 190, 191, 192, 195, 199, 209, 210, 211, 218, 244, 256, 285, 288, 289, 292, 294, 295, 303, 304, 305, 307, 310, 321, 322, 327, 331, 333, 334, 338, 340, 341, 344, 345, 346, 347, 348, 349, 372, 378, 382, 436, 438, 462, 504, 519, 544, 552, 572, 601, 638, 659, 673, 718, 719, 721, 738, 832, 833, 834, 844, 862, 874, 876, 914, 966], "sphere": [29, 31, 33, 50, 52, 61, 67, 69, 71, 74, 76, 85, 94, 98, 111, 121, 122, 137, 148, 152, 154, 162, 183, 185, 186, 187, 203, 205, 208, 209, 210, 211, 212, 213, 217, 228, 236, 237, 238, 240, 278, 284, 285, 286, 287, 291, 292, 294, 303, 304, 305, 321, 325, 330, 331, 333, 334, 335, 336, 338, 339, 342, 344, 366, 367, 372, 375, 376, 382, 431, 484, 485, 492, 528, 552, 553, 565, 596, 599, 601, 637, 638, 647, 653, 738, 752, 755, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862, 863, 870, 874, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 905, 906, 908, 916], "r0": [29, 111, 154, 183, 210, 211, 212, 213, 601], "head_radiu": [29, 111, 154, 183, 210, 211, 212, 213, 291, 601], "08": [29, 46, 60, 66, 68, 71, 76, 84, 85, 111, 112, 119, 122, 131, 137, 140, 157, 178, 187, 193, 201, 203, 204, 205, 206, 207, 210, 211, 213, 218, 224, 230, 237, 243, 244, 253, 256, 258, 259, 260, 261, 278, 315, 514, 966], "tran": [29, 31, 33, 52, 67, 76, 77, 78, 86, 95, 108, 137, 143, 144, 146, 153, 154, 162, 163, 177, 184, 185, 186, 187, 199, 203, 205, 208, 209, 210, 213, 218, 219, 236, 239, 240, 275, 286, 293, 295, 301, 305, 318, 319, 321, 322, 325, 331, 343, 346, 374, 382, 436, 437, 459, 462, 504, 506, 528, 536, 544, 596, 599, 600, 672, 676, 721, 754, 757, 784, 830, 831, 833, 844, 862, 874, 945], "align_kwarg": 29, "outer_skin": [29, 108, 137, 146, 183, 185, 186, 188, 199, 318, 319, 322, 862], "show_ax": [29, 108, 152, 154, 183, 184, 186, 209, 210, 213, 286, 383, 862, 895], "coord_fram": [29, 50, 137, 146, 152, 153, 154, 162, 163, 183, 184, 185, 186, 196, 197, 205, 209, 210, 211, 213, 218, 238, 331, 337, 338, 346, 382, 395, 400, 506, 557, 588, 648, 649, 665, 676, 844, 862, 874], "equiv": [29, 183, 210, 211, 212, 213, 236], "rv": [29, 183, 210, 211, 212, 213, 236, 319], "00364477": [29, 210, 211, 212, 213], "mu1": [29, 183, 210, 211, 212, 213, 236], "944121": [29, 210, 211, 212, 213], "lambda1": [29, 183, 210, 211, 212, 213, 236], "138646": [29, 210, 211, 212, 213], "mu2": [29, 183, 210, 211, 212, 213, 236], "665982": [29, 210, 211, 212, 213], "lambda2": [29, 31, 33, 37, 54, 55, 56, 64, 65, 66, 67, 71, 73, 74, 76, 80, 81, 84, 85, 87, 98, 118, 122, 132, 136, 137, 183, 193, 204, 206, 208, 210, 211, 212, 213, 219, 236, 252, 264, 266, 318, 605, 606, 607, 608, 609, 611, 612, 617, 618, 621, 622, 647], "684475": [29, 210, 211, 212, 213], "mu3": [29, 183, 210, 211, 212, 213, 236], "140083": [29, 210, 211, 212, 213], "lambda3": [29, 183, 210, 211, 212, 213, 236], "0127517": [29, 210, 211, 212, 213], "scalp": [29, 30, 45, 53, 97, 98, 103, 106, 151, 157, 169, 171, 176, 178, 182, 183, 185, 193, 197, 198, 210, 211, 212, 213, 218, 227, 228, 233, 235, 236, 238, 239, 240, 247, 251, 269, 278, 284, 291, 295, 318, 319, 321, 322, 325, 333, 334, 335, 336, 338, 378, 504, 544, 552, 553, 601, 638, 647, 680, 721, 733, 793, 794, 799, 800, 844, 862, 878, 900, 914, 946, 953, 956, 959, 966], "radiu": [29, 30, 31, 33, 50, 52, 67, 71, 76, 97, 98, 106, 107, 121, 122, 137, 178, 183, 185, 186, 197, 203, 208, 209, 210, 211, 212, 213, 228, 235, 236, 238, 240, 252, 295, 306, 309, 322, 330, 333, 334, 335, 336, 338, 342, 372, 375, 382, 396, 398, 400, 485, 492, 505, 543, 552, 553, 590, 601, 620, 637, 638, 647, 653, 738, 741, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "80": [29, 31, 33, 35, 39, 42, 45, 56, 57, 59, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 106, 107, 108, 113, 114, 118, 122, 132, 136, 140, 142, 143, 144, 146, 147, 148, 150, 154, 176, 178, 183, 185, 195, 196, 198, 199, 203, 205, 206, 208, 210, 211, 212, 213, 218, 219, 223, 224, 235, 237, 238, 239, 243, 256, 257, 258, 260, 261, 265, 266, 274, 275, 278, 296, 484, 638, 741, 887, 894, 958, 966], "get": [29, 30, 31, 33, 41, 44, 45, 47, 48, 52, 53, 54, 60, 64, 65, 67, 73, 74, 76, 78, 87, 89, 90, 92, 93, 96, 97, 99, 107, 108, 110, 111, 122, 123, 124, 125, 131, 135, 137, 141, 142, 144, 148, 152, 153, 162, 163, 167, 168, 169, 170, 171, 173, 176, 177, 178, 182, 183, 184, 185, 187, 189, 192, 193, 194, 196, 197, 200, 201, 202, 207, 208, 210, 211, 212, 213, 220, 227, 228, 229, 230, 231, 233, 235, 241, 244, 246, 247, 256, 258, 260, 261, 266, 269, 270, 274, 275, 278, 285, 288, 289, 291, 292, 294, 295, 298, 299, 302, 304, 310, 311, 312, 314, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 357, 372, 376, 380, 381, 382, 392, 393, 412, 413, 429, 436, 442, 443, 446, 449, 450, 451, 452, 454, 455, 456, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 502, 505, 509, 514, 520, 526, 534, 537, 540, 544, 552, 553, 559, 585, 594, 604, 614, 615, 627, 638, 639, 645, 647, 656, 658, 706, 738, 739, 758, 760, 768, 781, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 831, 844, 845, 870, 877, 879, 892, 949, 951, 952, 954, 956, 957, 958, 961, 966], "kernel_flux": 29, "deform": [29, 187, 197, 278], "cad": 29, "acquisit": [29, 88, 183, 187, 195, 216, 217, 218, 219, 235, 244, 278, 283, 286, 287, 288, 291, 295, 308, 310, 318, 321, 322, 326, 327, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 352, 526, 552, 553, 554, 580, 665, 676, 690, 754, 962], "affin": [29, 70, 183, 207, 209, 240, 288, 305, 307, 310, 321, 322, 345, 431, 438, 673, 712, 720, 832, 833, 834], "nonlinear": [29, 70, 127, 278, 775], "displac": 29, "do": [29, 30, 31, 33, 41, 42, 44, 50, 52, 53, 57, 60, 66, 67, 71, 73, 76, 77, 80, 81, 84, 85, 86, 87, 92, 94, 97, 102, 110, 137, 140, 142, 143, 148, 163, 164, 167, 168, 171, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 193, 195, 198, 199, 202, 203, 204, 207, 209, 210, 211, 212, 216, 217, 219, 220, 223, 224, 228, 230, 231, 233, 234, 235, 236, 237, 238, 240, 241, 244, 246, 251, 252, 253, 256, 261, 264, 265, 266, 270, 271, 274, 278, 283, 284, 286, 287, 288, 289, 291, 292, 295, 304, 306, 307, 310, 311, 312, 314, 318, 319, 322, 325, 326, 327, 328, 330, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 347, 348, 349, 352, 356, 373, 377, 379, 389, 396, 425, 429, 436, 441, 442, 452, 458, 477, 478, 496, 497, 498, 504, 506, 514, 519, 520, 526, 535, 543, 549, 550, 552, 553, 561, 568, 600, 605, 606, 607, 608, 609, 611, 612, 621, 622, 629, 630, 631, 635, 636, 638, 639, 640, 641, 649, 655, 656, 665, 676, 693, 696, 703, 706, 707, 725, 727, 729, 776, 777, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 813, 822, 834, 871, 875, 876, 887, 906, 936, 939, 941, 949, 951, 955, 957, 958, 960, 961], "great": [29, 30, 148, 171, 178, 271, 320], "dev_head_t": [29, 53, 105, 107, 112, 183, 193, 196, 244, 284, 295, 303, 327, 338, 385, 415, 416, 434, 445, 566, 642, 645, 649, 665, 676, 740, 741, 742, 754, 862, 888, 914, 966], "approxim": [29, 52, 94, 197, 233, 244, 256, 278, 283, 287, 288, 321, 322, 325, 330, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 382, 485, 492, 506, 521, 522, 524, 536, 552, 553, 637, 638, 649, 653, 659, 665, 676, 737, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 863, 870, 871, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "coverag": [29, 137, 319], "list": [29, 30, 35, 36, 37, 42, 54, 67, 69, 71, 73, 94, 96, 101, 111, 122, 131, 132, 135, 139, 140, 141, 143, 144, 145, 159, 164, 167, 171, 172, 176, 177, 178, 188, 193, 195, 196, 197, 198, 199, 202, 204, 210, 212, 216, 219, 228, 229, 230, 233, 234, 235, 238, 239, 241, 244, 246, 247, 251, 252, 253, 256, 257, 258, 260, 261, 265, 266, 274, 275, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 355, 356, 358, 359, 360, 361, 364, 366, 367, 369, 371, 373, 375, 376, 380, 382, 383, 384, 387, 388, 389, 391, 392, 393, 394, 396, 397, 399, 407, 408, 411, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 436, 438, 441, 442, 443, 445, 452, 458, 464, 466, 477, 478, 485, 487, 491, 492, 495, 497, 500, 501, 502, 504, 506, 507, 508, 509, 510, 512, 516, 517, 519, 520, 523, 524, 526, 527, 531, 533, 535, 537, 538, 539, 540, 541, 542, 543, 547, 548, 549, 550, 551, 552, 553, 557, 561, 563, 565, 568, 569, 570, 572, 576, 577, 578, 580, 581, 584, 587, 592, 594, 595, 596, 599, 602, 603, 607, 609, 612, 614, 615, 621, 622, 624, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 645, 646, 649, 650, 651, 652, 653, 654, 655, 656, 657, 661, 662, 663, 664, 665, 667, 668, 672, 675, 676, 677, 682, 684, 687, 691, 693, 696, 698, 700, 702, 703, 706, 707, 708, 711, 714, 721, 723, 729, 730, 733, 738, 739, 752, 755, 756, 757, 758, 766, 769, 770, 772, 774, 775, 776, 777, 779, 780, 781, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 812, 813, 818, 821, 822, 827, 829, 830, 841, 843, 844, 845, 846, 849, 850, 860, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 908, 909, 910, 918, 925, 929, 934, 937, 941, 942, 946, 955, 959, 960, 961], "ii": [29, 36, 41, 45, 65, 121, 127, 135, 147, 162, 186, 210, 212, 218, 223, 240, 256, 266, 278, 293, 340, 341, 343, 344, 347, 348, 349, 390, 488, 495, 562, 638, 738, 775, 863], "str": [29, 36, 50, 56, 65, 67, 129, 156, 170, 172, 177, 198, 210, 223, 229, 257, 289, 292, 309, 311, 314, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 766, 768, 770, 772, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 814, 815, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 836, 839, 840, 841, 843, 844, 846, 848, 850, 853, 855, 856, 858, 861, 862, 863, 864, 865, 866, 867, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 925, 926, 927, 928, 929, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945], "append": [29, 33, 34, 36, 42, 69, 70, 71, 73, 88, 95, 103, 107, 141, 164, 177, 199, 210, 223, 228, 233, 235, 239, 244, 256, 260, 261, 266, 280, 285, 286, 287, 288, 291, 295, 307, 311, 327, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 552, 553, 638, 653, 665, 676, 734, 766, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 816], "del": [29, 31, 33, 44, 59, 67, 68, 72, 73, 74, 75, 76, 80, 81, 137, 141, 163, 164, 167, 169, 172, 176, 193, 199, 204, 206, 207, 208, 210, 211, 213, 219, 224, 230, 233, 241], "dip": [29, 61, 66, 85, 111, 144, 203, 208, 210, 211, 212, 213, 239, 271, 292, 298, 331, 528, 698], "residu": [29, 31, 33, 54, 56, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 80, 81, 84, 85, 86, 87, 97, 103, 118, 122, 193, 204, 205, 206, 208, 209, 210, 211, 213, 219, 224, 233, 237, 240, 252, 253, 264, 266, 287, 291, 369, 371, 528, 547, 549, 550, 605, 869], "actual_po": [29, 111, 210, 212, 213], "actual_ori": [29, 210, 213], "actual_amp": [29, 205, 210, 212, 213], "ones": [29, 57, 110, 115, 139, 168, 197, 205, 210, 212, 213, 216, 234, 235, 256, 271, 283, 287, 311, 322, 326, 339, 459, 520, 545, 546, 552, 553, 596, 640, 665, 710, 716, 723, 774, 925, 946], "len": [29, 35, 36, 41, 42, 44, 45, 54, 58, 65, 67, 68, 69, 71, 73, 78, 90, 94, 95, 97, 99, 102, 118, 121, 128, 142, 145, 164, 167, 170, 171, 183, 186, 195, 203, 205, 210, 212, 213, 219, 223, 227, 228, 229, 230, 231, 233, 235, 236, 238, 239, 240, 241, 245, 252, 253, 256, 257, 258, 260, 261, 271, 283, 284, 327, 328, 330, 331, 333, 334, 335, 336, 338, 340, 341, 344, 345, 346, 347, 348, 349, 357, 372, 424, 431, 487, 495, 520, 523, 552, 553, 604, 658, 738, 769, 793, 794, 795, 796, 812, 822, 831, 844, 850, 877, 899, 907, 908], "fake": [29, 90, 97, 186, 205, 209, 210, 212], "amp": [29, 178, 205, 210, 212, 213, 229, 304, 322, 325], "instanc": [29, 31, 33, 41, 52, 57, 69, 70, 71, 76, 101, 102, 110, 115, 137, 142, 185, 186, 193, 196, 198, 199, 203, 205, 209, 210, 212, 213, 216, 217, 219, 232, 233, 234, 236, 238, 240, 241, 244, 269, 275, 282, 283, 286, 287, 288, 289, 291, 292, 293, 295, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 320, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 382, 383, 384, 386, 387, 389, 395, 398, 400, 401, 403, 404, 405, 406, 407, 408, 411, 412, 414, 416, 417, 418, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 441, 442, 443, 445, 449, 450, 451, 453, 454, 455, 456, 458, 463, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 514, 515, 516, 517, 518, 519, 520, 526, 528, 529, 530, 531, 532, 539, 542, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 590, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 605, 606, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 625, 627, 629, 630, 631, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 684, 688, 689, 690, 691, 693, 694, 695, 698, 699, 700, 701, 702, 705, 708, 710, 717, 720, 729, 730, 733, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 774, 775, 776, 777, 778, 779, 780, 781, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 816, 817, 832, 833, 834, 836, 841, 844, 845, 846, 847, 848, 854, 855, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 916, 917, 933, 937, 941, 943], "actual_gof": [29, 205, 210, 212, 213], "gof": [29, 31, 66, 144, 196, 203, 205, 210, 211, 212, 213, 244, 285, 292, 321, 322, 331, 333, 334, 335, 336, 338, 369, 371, 381, 413, 415, 416, 417, 445, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 874], "dip_tru": [29, 210, 212, 213], "arrow": [29, 183, 187, 188, 205, 210, 213, 227, 231, 234, 247, 286, 287, 288, 292, 304, 322, 330, 331, 333, 334, 335, 336, 341, 342, 347, 348, 349, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 863, 874, 876, 877, 878, 882, 885, 888, 889, 898, 899, 901, 906, 908, 909, 910], "azimuth": [29, 31, 50, 108, 137, 143, 144, 146, 153, 154, 162, 163, 183, 184, 185, 187, 197, 205, 208, 210, 213, 218, 239, 253, 295, 844, 914], "elev": [29, 31, 50, 108, 137, 143, 144, 146, 153, 154, 162, 163, 183, 184, 185, 187, 197, 208, 210, 213, 218, 227, 234, 239, 253, 295, 844, 914], "70": [29, 31, 35, 38, 39, 41, 45, 47, 60, 67, 71, 72, 73, 84, 85, 108, 115, 118, 129, 131, 132, 136, 137, 140, 142, 144, 150, 163, 167, 170, 171, 183, 185, 186, 193, 196, 197, 210, 211, 213, 218, 224, 230, 233, 237, 239, 256, 257, 260, 261, 264, 269, 271, 278, 285, 333, 334, 335, 336, 405, 550, 552, 553, 638, 793, 799, 812, 815, 822, 823, 826], "distanc": [29, 31, 37, 48, 50, 54, 55, 57, 61, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 107, 118, 120, 121, 122, 123, 132, 135, 136, 137, 138, 144, 153, 156, 158, 162, 163, 170, 183, 184, 185, 186, 187, 188, 193, 197, 198, 199, 203, 204, 205, 206, 208, 210, 213, 218, 219, 220, 224, 230, 237, 239, 241, 252, 253, 264, 266, 275, 282, 285, 286, 288, 289, 291, 292, 293, 295, 298, 300, 302, 309, 321, 322, 325, 330, 333, 334, 335, 336, 338, 339, 342, 343, 344, 346, 351, 374, 415, 436, 485, 488, 492, 495, 504, 506, 528, 537, 543, 544, 552, 553, 590, 600, 620, 637, 638, 642, 646, 649, 653, 658, 659, 662, 664, 665, 676, 681, 682, 728, 737, 738, 746, 749, 752, 754, 755, 757, 759, 760, 761, 763, 764, 776, 777, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 855, 863, 866, 878, 885, 889, 898, 901, 906, 908, 914], "layer": [29, 31, 33, 71, 137, 185, 186, 209, 210, 211, 212, 213, 228, 278, 286, 289, 318, 322, 377, 459, 594, 601, 738, 746, 751, 862], "r": [29, 30, 34, 36, 38, 45, 47, 54, 63, 65, 67, 69, 75, 97, 108, 109, 124, 125, 127, 143, 163, 164, 168, 172, 183, 187, 193, 203, 207, 208, 210, 211, 212, 213, 223, 224, 228, 230, 232, 233, 235, 239, 240, 245, 252, 256, 260, 261, 266, 271, 274, 278, 304, 319, 321, 322, 325, 330, 331, 332, 333, 334, 335, 336, 338, 342, 345, 369, 431, 452, 485, 491, 492, 520, 552, 553, 588, 605, 613, 637, 638, 647, 650, 652, 653, 655, 666, 749, 773, 776, 777, 782, 783, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 825, 828, 844, 863, 864, 870, 874, 878, 885, 889, 894, 898, 901, 906, 908], "ident": [29, 31, 71, 97, 127, 137, 154, 162, 177, 183, 185, 187, 193, 210, 211, 212, 213, 223, 233, 236, 238, 240, 293, 295, 308, 318, 319, 320, 321, 322, 328, 331, 333, 334, 338, 345, 346, 374, 445, 462, 509, 513, 514, 526, 588, 596, 598, 599, 600, 611, 613, 633, 665, 674, 676, 698, 703, 754, 784, 794, 795, 796, 812, 822, 831, 862, 879, 936], "rad": [29, 31, 71, 203, 208, 210, 211, 212, 213, 321, 445, 663, 738], "guess": [29, 31, 71, 152, 198, 203, 208, 210, 211, 212, 213, 233, 237, 300, 325, 564, 859], "grid": [29, 31, 50, 66, 67, 71, 76, 141, 143, 152, 162, 182, 183, 185, 203, 205, 207, 208, 210, 211, 212, 213, 223, 224, 236, 237, 240, 256, 258, 274, 285, 287, 292, 318, 319, 322, 325, 343, 345, 346, 397, 549, 638, 672, 738, 792, 872, 889, 892], "mindist": [29, 31, 50, 67, 71, 76, 183, 185, 186, 203, 208, 210, 211, 212, 213, 236, 600, 738, 754], "normal": [29, 31, 33, 37, 41, 42, 44, 48, 50, 52, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 80, 81, 84, 85, 87, 95, 97, 118, 120, 122, 132, 135, 136, 137, 138, 141, 142, 143, 144, 163, 164, 169, 170, 182, 183, 184, 185, 187, 188, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 224, 234, 235, 238, 240, 251, 252, 253, 264, 266, 270, 271, 278, 282, 285, 286, 287, 289, 291, 292, 295, 299, 300, 303, 306, 311, 312, 321, 324, 326, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 346, 347, 348, 349, 353, 354, 366, 367, 383, 391, 429, 435, 485, 487, 490, 492, 519, 528, 547, 549, 550, 552, 553, 555, 573, 605, 606, 607, 608, 609, 611, 612, 614, 615, 616, 621, 622, 637, 638, 648, 652, 672, 701, 705, 729, 738, 742, 753, 754, 771, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 814, 845, 863, 878, 885, 889, 897, 898, 901, 906, 908, 958], "definit": [29, 31, 33, 52, 67, 71, 76, 137, 185, 186, 187, 188, 189, 203, 208, 209, 210, 211, 212, 213, 230, 236, 240, 258, 278, 284, 291, 292, 302, 312, 318, 321, 323, 325, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 366, 367, 390, 392, 399, 528, 552, 553, 652, 676, 722, 838, 844], "nois": [29, 30, 31, 33, 37, 44, 47, 53, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 93, 97, 102, 109, 111, 115, 118, 121, 122, 123, 132, 135, 136, 137, 138, 142, 148, 151, 153, 157, 171, 173, 176, 178, 179, 189, 193, 199, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 223, 224, 228, 230, 232, 236, 238, 240, 244, 247, 253, 256, 264, 266, 278, 285, 286, 288, 292, 297, 299, 302, 321, 325, 330, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 366, 367, 369, 371, 418, 424, 425, 426, 427, 428, 429, 430, 441, 442, 443, 485, 492, 493, 508, 528, 529, 547, 549, 550, 552, 553, 558, 593, 605, 611, 612, 616, 618, 621, 622, 638, 639, 652, 676, 684, 685, 697, 703, 741, 742, 743, 753, 793, 794, 799, 800, 824, 827, 871, 876, 880, 884, 886, 899, 900, 935, 946, 966], "shape": [29, 31, 34, 42, 45, 48, 57, 67, 71, 73, 76, 79, 90, 91, 92, 97, 125, 142, 143, 148, 163, 164, 167, 173, 176, 184, 185, 187, 197, 202, 208, 210, 211, 212, 213, 216, 223, 224, 230, 244, 251, 256, 257, 258, 260, 261, 264, 265, 266, 269, 270, 271, 287, 318, 321, 322, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 356, 366, 367, 368, 374, 375, 376, 382, 383, 384, 388, 391, 395, 399, 409, 415, 419, 420, 421, 422, 423, 434, 436, 440, 441, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 509, 513, 514, 519, 521, 523, 526, 527, 528, 529, 530, 543, 544, 545, 546, 547, 549, 552, 553, 556, 564, 578, 592, 594, 596, 598, 603, 613, 614, 615, 617, 620, 621, 622, 633, 637, 638, 639, 641, 642, 643, 645, 646, 647, 648, 649, 653, 658, 660, 661, 662, 664, 665, 668, 673, 674, 676, 681, 682, 690, 691, 700, 702, 703, 719, 722, 725, 726, 727, 728, 738, 739, 744, 745, 746, 747, 748, 749, 750, 751, 756, 757, 766, 768, 769, 770, 774, 775, 776, 777, 778, 779, 780, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 808, 811, 812, 814, 815, 819, 821, 822, 823, 824, 825, 826, 827, 831, 832, 833, 834, 835, 837, 843, 844, 848, 849, 850, 861, 862, 863, 865, 866, 867, 870, 876, 877, 878, 879, 880, 882, 885, 886, 888, 889, 891, 892, 896, 898, 900, 901, 902, 904, 906, 907, 908, 909, 910, 914, 916, 936, 939, 944, 959], "9e": [29, 34, 35, 47, 114, 121, 153, 177, 179, 189, 204, 207, 210, 211, 212, 224, 275], "6e": [29, 35, 60, 72, 147, 149, 179, 199, 204, 210, 212, 224], "n_sampl": [29, 31, 71, 79, 91, 125, 164, 210, 211, 212, 213, 224, 251, 256, 311, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 499, 500, 502, 527, 621, 622, 639, 674, 739, 768, 775, 778], "36156": 29, "ra": [29, 31, 33, 50, 52, 67, 69, 71, 76, 137, 162, 183, 185, 186, 188, 203, 207, 208, 210, 211, 212, 213, 236, 240, 285, 287, 289, 292, 294, 305, 319, 321, 322, 331, 340, 341, 344, 346, 347, 348, 349, 382, 395, 436, 519, 546, 588, 671, 708, 831, 833, 836, 844, 938], "000000": [29, 31, 33, 50, 52, 67, 71, 76, 101, 137, 170, 171, 183, 185, 186, 203, 207, 208, 209, 210, 211, 212, 213, 236, 240], "981060": 29, "039414": 29, "189651": 29, "085832": 29, "966167": 29, "243215": 29, "173648": 29, "254887": 29, "951251": 29, "105": [29, 31, 33, 50, 52, 61, 67, 71, 76, 122, 137, 142, 150, 162, 164, 183, 185, 196, 203, 208, 210, 211, 212, 213, 234, 236, 240, 256, 260, 261], "decompos": [29, 31, 34, 71, 203, 208, 210, 211, 212, 213, 233, 300, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 485, 489, 492, 520, 521, 523, 524, 552, 553, 638, 639, 826], "matrix": [29, 31, 33, 35, 36, 37, 41, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 93, 95, 106, 108, 114, 118, 120, 121, 122, 123, 124, 125, 132, 133, 134, 135, 136, 137, 138, 147, 149, 153, 158, 161, 164, 168, 177, 178, 179, 183, 184, 185, 186, 187, 190, 191, 192, 193, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 223, 224, 228, 233, 234, 235, 240, 252, 253, 257, 258, 259, 260, 261, 265, 266, 275, 278, 280, 282, 283, 285, 287, 288, 291, 293, 296, 301, 302, 304, 314, 319, 321, 325, 330, 331, 333, 335, 336, 338, 343, 345, 346, 363, 366, 367, 368, 374, 382, 385, 386, 388, 399, 425, 430, 431, 441, 442, 443, 491, 506, 526, 529, 552, 553, 558, 596, 600, 605, 611, 612, 613, 614, 615, 616, 617, 620, 621, 622, 630, 635, 638, 639, 646, 674, 677, 697, 701, 703, 738, 743, 754, 759, 760, 761, 762, 763, 764, 765, 769, 774, 775, 776, 777, 779, 780, 784, 792, 804, 805, 806, 813, 831, 862, 866, 867, 871, 872, 889, 890, 893, 935, 966], "whiten": [29, 31, 33, 40, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 118, 121, 122, 132, 133, 134, 135, 136, 137, 138, 141, 151, 157, 176, 180, 181, 189, 192, 193, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 233, 240, 252, 253, 264, 266, 278, 285, 286, 288, 292, 293, 297, 298, 301, 302, 304, 321, 325, 330, 333, 334, 335, 336, 338, 343, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 526, 528, 529, 547, 549, 550, 552, 553, 613, 616, 635, 638, 639, 674, 703, 714, 809, 876, 880, 884, 886, 899, 903, 946, 966], "omit": [29, 31, 33, 38, 47, 50, 52, 54, 55, 56, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 80, 81, 83, 84, 85, 87, 106, 108, 114, 118, 121, 122, 132, 135, 136, 137, 138, 147, 149, 153, 177, 179, 183, 185, 189, 193, 195, 196, 198, 199, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 219, 224, 228, 236, 238, 240, 252, 253, 264, 266, 275, 282, 285, 292, 294, 295, 302, 303, 305, 311, 327, 333, 334, 335, 336, 343, 491, 552, 553, 592, 638, 666, 667, 677, 694, 706, 746, 751, 791, 797, 799, 834, 862, 864, 880, 885, 891, 900], "spheric": [29, 69, 98, 106, 178, 183, 197, 210, 211, 212, 213, 228, 235, 238, 278, 282, 285, 291, 302, 322, 330, 333, 334, 335, 336, 338, 339, 342, 344, 345, 382, 398, 400, 431, 485, 492, 506, 552, 553, 601, 637, 638, 647, 648, 649, 652, 653, 665, 676, 738, 752, 755, 766, 770, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "72": [29, 33, 39, 41, 45, 54, 61, 71, 73, 92, 93, 98, 106, 107, 108, 111, 124, 128, 131, 132, 140, 142, 145, 150, 152, 167, 176, 183, 189, 196, 204, 207, 209, 210, 211, 212, 213, 218, 223, 224, 228, 237, 238, 241, 256, 257, 258, 259, 260, 261, 264, 278, 299, 322, 638, 647, 966], "cm": [29, 31, 35, 41, 50, 67, 71, 76, 118, 144, 152, 169, 172, 183, 185, 193, 197, 203, 208, 210, 211, 212, 213, 217, 229, 235, 236, 237, 238, 239, 258, 270, 293, 321, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 405, 407, 409, 552, 553, 561, 593, 665, 877, 880, 882, 907], "extent": [29, 31, 39, 42, 50, 67, 71, 73, 76, 81, 97, 101, 118, 123, 135, 167, 183, 185, 203, 208, 210, 211, 212, 213, 224, 235, 236, 258, 259, 260, 261, 264, 265, 266, 278, 291, 312, 322, 333, 334, 508, 543, 590, 620, 749, 779, 780], "y": [29, 31, 35, 36, 37, 38, 39, 42, 44, 45, 50, 67, 71, 73, 76, 94, 97, 98, 107, 109, 118, 140, 143, 148, 163, 172, 178, 183, 185, 187, 188, 197, 199, 202, 203, 207, 208, 210, 211, 212, 213, 220, 223, 224, 227, 230, 231, 234, 236, 241, 244, 245, 246, 247, 256, 266, 271, 284, 285, 289, 291, 293, 304, 310, 321, 322, 327, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 357, 372, 375, 376, 382, 383, 405, 415, 416, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 504, 525, 552, 553, 565, 604, 605, 637, 638, 639, 647, 653, 658, 663, 708, 742, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 831, 834, 835, 837, 844, 845, 849, 863, 870, 874, 877, 878, 879, 880, 882, 884, 885, 886, 887, 888, 889, 894, 896, 898, 900, 901, 902, 906, 907, 908, 914, 938, 951], "z": [29, 30, 31, 37, 42, 44, 50, 67, 71, 76, 156, 178, 183, 185, 186, 187, 196, 197, 202, 203, 207, 208, 210, 211, 212, 213, 217, 230, 234, 236, 278, 284, 285, 289, 304, 321, 322, 330, 333, 334, 335, 336, 337, 338, 341, 342, 347, 349, 375, 376, 382, 394, 405, 415, 416, 485, 492, 504, 552, 553, 565, 605, 637, 638, 643, 647, 653, 665, 708, 741, 742, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 834, 835, 837, 844, 863, 870, 876, 878, 880, 882, 885, 886, 888, 889, 893, 896, 898, 899, 900, 901, 902, 906, 908, 914, 915, 938, 958], "729": [29, 210, 211, 212, 213, 224, 261], "befor": [29, 30, 31, 47, 50, 52, 67, 70, 71, 76, 88, 95, 97, 109, 113, 115, 118, 122, 135, 147, 150, 163, 164, 167, 168, 169, 170, 171, 172, 176, 178, 183, 184, 185, 187, 188, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 207, 208, 210, 211, 212, 213, 216, 219, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 253, 269, 271, 274, 281, 282, 285, 287, 289, 291, 292, 294, 295, 298, 310, 312, 318, 319, 322, 325, 326, 328, 330, 333, 334, 335, 336, 338, 340, 341, 343, 344, 345, 347, 348, 349, 366, 384, 412, 430, 433, 442, 443, 485, 491, 492, 494, 497, 509, 515, 516, 517, 518, 519, 520, 526, 527, 529, 552, 553, 597, 611, 612, 614, 615, 621, 622, 637, 638, 641, 650, 651, 655, 656, 658, 661, 665, 666, 691, 699, 706, 711, 745, 746, 747, 748, 749, 751, 753, 775, 776, 777, 779, 780, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 814, 815, 863, 872, 877, 878, 880, 882, 884, 885, 890, 891, 892, 897, 900, 916, 941, 946, 951, 960], "ani": [29, 30, 31, 44, 50, 53, 67, 71, 76, 101, 103, 110, 138, 140, 145, 148, 155, 162, 164, 167, 168, 169, 170, 176, 178, 183, 185, 187, 188, 189, 192, 193, 194, 196, 197, 198, 203, 208, 210, 211, 212, 213, 217, 218, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 244, 245, 246, 247, 256, 261, 271, 274, 275, 278, 282, 283, 286, 287, 288, 289, 294, 295, 305, 311, 312, 314, 319, 320, 321, 322, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 346, 347, 348, 349, 356, 358, 360, 375, 376, 382, 389, 394, 396, 432, 436, 459, 491, 504, 507, 508, 509, 512, 519, 537, 542, 552, 553, 569, 572, 627, 629, 630, 631, 635, 636, 638, 639, 640, 641, 655, 661, 664, 665, 666, 671, 676, 683, 689, 694, 700, 708, 716, 726, 729, 730, 733, 739, 750, 754, 775, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 844, 845, 848, 871, 876, 877, 879, 888, 891, 899, 900, 910, 916, 925, 938, 941, 946, 951, 955], "178": [29, 39, 150, 155, 196, 210, 211, 212, 213, 224, 229, 237, 240, 243, 256, 260, 261, 278, 460, 966], "after": [29, 31, 33, 34, 37, 42, 48, 50, 52, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 88, 95, 108, 115, 118, 120, 122, 129, 131, 135, 137, 158, 163, 164, 167, 168, 169, 171, 172, 173, 176, 177, 178, 182, 183, 185, 188, 193, 194, 195, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 219, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 246, 252, 253, 256, 258, 259, 264, 269, 271, 274, 275, 280, 281, 282, 285, 287, 288, 289, 292, 294, 301, 302, 305, 309, 310, 311, 312, 314, 318, 319, 321, 322, 325, 326, 327, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 350, 356, 366, 367, 412, 425, 429, 430, 432, 434, 441, 442, 443, 458, 485, 487, 491, 492, 496, 498, 499, 503, 509, 525, 526, 527, 528, 529, 547, 549, 550, 552, 553, 561, 568, 616, 637, 638, 641, 649, 650, 651, 655, 656, 659, 661, 665, 666, 667, 669, 674, 677, 706, 708, 730, 750, 789, 790, 791, 795, 797, 821, 823, 824, 825, 826, 827, 832, 844, 862, 870, 876, 880, 882, 884, 885, 886, 889, 890, 893, 897, 899, 910, 938, 946, 960], "infeas": [29, 31, 50, 67, 71, 76, 183, 185, 203, 208, 210, 211, 212, 213, 236], "within": [29, 30, 31, 42, 50, 64, 67, 71, 73, 76, 88, 96, 101, 122, 135, 136, 137, 140, 148, 149, 156, 162, 167, 168, 171, 178, 182, 183, 185, 187, 188, 192, 193, 195, 199, 202, 203, 205, 208, 210, 211, 212, 213, 227, 230, 231, 233, 234, 236, 238, 241, 246, 252, 256, 267, 271, 274, 278, 282, 288, 289, 291, 294, 303, 306, 309, 311, 312, 314, 321, 322, 326, 330, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 351, 377, 384, 445, 458, 485, 490, 492, 509, 511, 514, 519, 537, 543, 552, 553, 555, 611, 612, 621, 622, 637, 638, 653, 661, 776, 777, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 803, 806, 814, 825, 828, 841, 863, 877, 878, 885, 886, 889, 898, 901, 905, 906, 908, 946, 951, 958, 961], "170": [29, 33, 82, 87, 108, 111, 150, 152, 164, 196, 210, 211, 212, 213, 219, 224, 230, 237, 260, 261, 278, 966], "remain": [29, 31, 33, 48, 50, 52, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 103, 118, 120, 122, 137, 158, 164, 171, 183, 185, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 224, 227, 232, 233, 234, 236, 240, 253, 304, 314, 318, 327, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 508, 528, 529, 547, 549, 550, 552, 553, 554, 616, 638, 729, 777, 789, 790, 791, 793, 794, 795, 796, 797, 798, 823, 824, 826, 827, 886, 960], "outsid": [29, 31, 33, 42, 50, 52, 67, 71, 76, 137, 162, 167, 171, 183, 185, 186, 188, 203, 208, 209, 210, 211, 212, 213, 228, 230, 235, 236, 238, 240, 244, 246, 280, 283, 288, 292, 294, 303, 307, 312, 322, 323, 327, 330, 333, 334, 335, 336, 337, 339, 340, 341, 342, 344, 347, 348, 349, 361, 462, 485, 492, 527, 552, 553, 590, 609, 637, 638, 653, 655, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 832, 841, 844, 863, 864, 878, 885, 889, 898, 901, 904, 906, 908, 909], "less": [29, 30, 31, 36, 44, 50, 52, 66, 67, 70, 71, 72, 75, 76, 97, 106, 114, 142, 147, 153, 167, 168, 170, 177, 178, 183, 185, 186, 198, 199, 203, 208, 210, 211, 212, 213, 216, 227, 228, 230, 231, 233, 235, 236, 238, 239, 240, 241, 244, 252, 256, 258, 271, 275, 293, 294, 303, 305, 311, 312, 319, 322, 434, 526, 549, 550, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 597, 605, 638, 646, 659, 672, 674, 681, 776, 777, 778, 779, 780, 784, 844, 946, 959], "through": [29, 31, 35, 45, 53, 63, 71, 105, 112, 141, 167, 168, 169, 171, 172, 176, 182, 183, 187, 192, 193, 195, 199, 203, 207, 208, 210, 211, 212, 213, 223, 228, 230, 233, 234, 235, 238, 240, 244, 246, 247, 253, 264, 271, 275, 278, 291, 293, 303, 305, 311, 312, 314, 320, 321, 322, 326, 331, 333, 334, 335, 336, 366, 445, 526, 535, 544, 552, 588, 637, 638, 739, 808, 844, 868, 870, 874, 877, 879, 883, 891, 951, 959, 966], "35": [29, 31, 33, 37, 38, 39, 45, 47, 54, 60, 61, 71, 73, 108, 131, 134, 136, 137, 140, 142, 150, 163, 170, 172, 173, 176, 178, 179, 181, 183, 185, 187, 191, 196, 198, 211, 212, 213, 218, 223, 224, 234, 235, 237, 239, 240, 256, 257, 258, 260, 261, 265, 266, 270, 278, 322, 325, 549, 605, 650, 651, 666, 669, 849, 966], "65": [29, 33, 37, 38, 39, 45, 47, 60, 61, 71, 73, 108, 111, 131, 136, 137, 140, 142, 150, 163, 170, 172, 183, 196, 197, 204, 205, 211, 213, 223, 224, 229, 236, 237, 256, 257, 258, 260, 261, 264, 266, 278, 299, 684], "85": [29, 30, 39, 45, 61, 63, 73, 106, 118, 124, 131, 137, 140, 142, 150, 164, 167, 172, 196, 198, 203, 209, 213, 218, 224, 231, 235, 237, 240, 256, 257, 260, 261, 298, 952], "90": [29, 30, 31, 33, 37, 39, 45, 50, 61, 67, 68, 73, 82, 107, 108, 118, 122, 129, 131, 136, 137, 140, 142, 150, 152, 162, 163, 170, 178, 183, 184, 185, 187, 196, 197, 198, 206, 211, 213, 218, 223, 224, 229, 231, 236, 237, 239, 240, 256, 257, 258, 259, 260, 261, 266, 271, 278, 319, 320, 322, 335, 336, 340, 341, 344, 347, 348, 349, 366, 367, 425, 429, 430, 441, 442, 443, 485, 490, 492, 519, 528, 529, 547, 549, 550, 601, 611, 612, 616, 638, 738, 745, 747, 748, 749, 770, 803, 806, 814, 850, 878, 886, 966], "95": [29, 30, 31, 33, 39, 45, 60, 73, 76, 97, 103, 107, 108, 118, 119, 123, 124, 140, 141, 142, 149, 150, 163, 169, 170, 172, 173, 178, 183, 185, 196, 206, 211, 213, 218, 223, 224, 229, 235, 237, 238, 239, 256, 257, 260, 261, 278, 322, 333, 334, 335, 336, 638, 653, 749, 768, 789, 790, 791, 795, 796, 797, 798, 870, 886, 891, 907, 966], "110": [29, 32, 44, 45, 47, 61, 67, 71, 108, 109, 140, 150, 185, 196, 213, 237, 256, 260, 261, 278, 489, 491, 503, 643], "115": [29, 61, 88, 111, 122, 150, 175, 196, 210, 213, 256, 278, 646, 966], "125": [29, 45, 50, 59, 61, 82, 109, 112, 150, 164, 170, 183, 187, 196, 197, 213, 230, 256, 260, 274, 408, 966], "130": [29, 108, 109, 110, 150, 185, 196, 197, 213, 237, 256, 260, 278, 304, 408], "135": [29, 39, 46, 146, 150, 154, 173, 175, 178, 185, 196, 213, 234, 235, 236, 237, 256, 261, 278, 322, 346, 966], "140": [29, 45, 60, 108, 109, 140, 150, 152, 183, 196, 198, 213, 234, 235, 237, 256, 260, 261, 278, 322, 643], "145": [29, 42, 44, 71, 103, 109, 150, 176, 196, 213, 224, 237, 252, 260, 261], "150": [29, 38, 61, 68, 71, 85, 100, 102, 104, 108, 109, 122, 148, 150, 152, 168, 169, 173, 175, 178, 185, 187, 193, 196, 207, 213, 219, 224, 226, 229, 233, 235, 260, 261, 306, 325, 346, 814, 966], "155": [29, 61, 150, 196, 213, 224, 237, 260, 261, 301], "have": [29, 30, 36, 45, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 98, 101, 102, 106, 107, 110, 111, 113, 114, 118, 122, 123, 129, 131, 132, 140, 143, 144, 145, 147, 148, 158, 161, 162, 164, 167, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 205, 206, 208, 209, 210, 216, 217, 218, 219, 220, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 257, 260, 261, 264, 266, 269, 271, 274, 275, 280, 282, 283, 284, 285, 288, 289, 291, 292, 293, 294, 295, 299, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 319, 320, 321, 322, 324, 325, 326, 328, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 360, 361, 364, 366, 367, 376, 384, 387, 390, 400, 411, 424, 425, 429, 430, 431, 436, 441, 442, 443, 477, 485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 504, 505, 506, 509, 510, 519, 520, 525, 528, 529, 535, 543, 547, 549, 550, 551, 552, 553, 555, 561, 564, 565, 568, 570, 574, 577, 580, 596, 598, 607, 609, 612, 616, 624, 633, 637, 638, 639, 648, 649, 653, 655, 656, 657, 660, 665, 667, 676, 694, 696, 706, 725, 727, 730, 733, 739, 740, 741, 742, 743, 754, 759, 763, 771, 775, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 815, 816, 823, 824, 834, 844, 849, 850, 863, 869, 870, 876, 877, 878, 880, 883, 885, 886, 889, 898, 900, 901, 906, 907, 908, 912, 916, 939, 941, 947, 949, 951, 953, 956, 958, 962, 963], "alreadi": [29, 47, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 98, 102, 106, 113, 114, 122, 123, 143, 144, 147, 148, 162, 169, 171, 172, 176, 177, 178, 185, 186, 187, 189, 193, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 227, 229, 230, 233, 234, 235, 238, 240, 244, 251, 271, 274, 275, 285, 304, 311, 319, 322, 323, 325, 333, 334, 335, 336, 340, 341, 343, 344, 345, 347, 348, 349, 366, 367, 377, 379, 398, 425, 429, 430, 438, 441, 442, 443, 444, 452, 477, 478, 485, 492, 519, 520, 528, 529, 547, 549, 550, 552, 553, 598, 616, 649, 650, 655, 706, 726, 727, 792, 816, 867, 870, 886, 941, 946, 953, 954, 956], "proj": [29, 31, 34, 35, 37, 39, 40, 41, 44, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 98, 106, 113, 114, 115, 120, 137, 139, 144, 145, 147, 148, 149, 153, 158, 167, 169, 172, 176, 177, 178, 189, 193, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 213, 219, 224, 227, 231, 234, 235, 236, 239, 240, 244, 247, 251, 274, 275, 282, 286, 288, 292, 293, 299, 305, 318, 321, 325, 328, 330, 333, 334, 335, 336, 338, 342, 343, 366, 367, 412, 413, 425, 426, 427, 428, 429, 443, 551, 552, 553, 597, 637, 638, 650, 651, 652, 655, 691, 699, 706, 714, 729, 789, 791, 792, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 807, 871, 878, 880, 882, 884, 885, 897, 898, 899, 900, 942], "attribut": [29, 41, 56, 57, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 98, 106, 110, 113, 114, 144, 147, 148, 167, 168, 170, 176, 177, 178, 193, 195, 196, 197, 199, 202, 203, 205, 206, 208, 209, 210, 229, 233, 234, 238, 239, 241, 247, 251, 274, 275, 280, 282, 283, 284, 288, 289, 291, 292, 293, 294, 295, 300, 301, 302, 303, 304, 307, 311, 320, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 372, 424, 436, 485, 486, 488, 489, 491, 492, 493, 495, 500, 503, 542, 543, 551, 552, 553, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 596, 604, 637, 638, 639, 700, 706, 710, 716, 739, 774, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 831, 844, 847, 870, 879, 892, 917, 918, 919, 920, 921, 922, 923, 940], "34": [29, 32, 39, 45, 54, 60, 61, 67, 71, 73, 76, 95, 98, 101, 108, 131, 136, 140, 142, 144, 150, 152, 157, 172, 196, 198, 208, 212, 213, 215, 218, 223, 224, 230, 237, 238, 252, 256, 257, 258, 260, 261, 265, 266, 278, 647, 770, 952, 966], "990": [29, 32, 108, 223, 237, 966], "1222": [29, 196, 223], "kernel_phantom": [29, 32, 966], "explor": [30, 53, 101, 133, 134, 137, 185, 208, 224, 228, 230, 232, 235, 241, 247, 252, 270, 271, 319, 320, 333, 336, 348, 349, 356, 526, 768, 910, 946, 950, 966], "replic": [30, 42, 260, 264, 265, 266, 287, 319, 339, 766, 946, 947], "extend": [30, 104, 168, 171, 178, 193, 207, 228, 233, 235, 238, 240, 261, 278, 280, 282, 283, 285, 286, 288, 291, 292, 300, 301, 308, 318, 327, 330, 331, 333, 334, 335, 336, 342, 348, 425, 485, 492, 552, 553, 590, 598, 637, 638, 641, 649, 653, 665, 674, 676, 756, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 823, 826, 834, 863, 874, 878, 885, 889, 898, 901, 906, 908, 959], "main": [30, 75, 122, 129, 170, 183, 195, 198, 231, 236, 240, 246, 260, 266, 286, 304, 310, 311, 319, 322, 323, 333, 334, 396, 465, 566, 770, 772, 876, 952, 960], "integr": [30, 182, 187, 229, 233, 256, 266, 278, 293, 294, 300, 311, 322, 620, 638, 676, 749, 956, 962], "meeg": [30, 271], "toolbox": [30, 45, 97, 178, 182, 223, 278, 319, 373, 491, 524, 646, 959], "interfac": [30, 34, 41, 71, 115, 182, 185, 193, 217, 224, 228, 230, 233, 234, 247, 278, 283, 292, 296, 299, 302, 319, 335, 336, 447, 452, 544, 639, 789, 844, 885, 955, 959, 962], "eeglab": [30, 94, 97, 156, 195, 230, 233, 278, 280, 281, 282, 283, 284, 285, 286, 287, 291, 294, 303, 304, 305, 306, 308, 309, 310, 322, 330, 333, 334, 335, 336, 338, 342, 382, 400, 485, 492, 515, 518, 552, 553, 569, 637, 638, 646, 653, 689, 694, 700, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "summari": [30, 36, 199, 229, 233, 247, 300, 311, 340, 341, 344, 347, 348, 349, 614, 615, 781], "If": [30, 53, 54, 57, 69, 70, 96, 97, 109, 127, 129, 143, 145, 148, 162, 164, 167, 169, 171, 173, 176, 177, 178, 183, 186, 187, 188, 192, 195, 196, 197, 198, 199, 202, 208, 209, 216, 217, 218, 220, 224, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 244, 245, 246, 247, 251, 256, 257, 258, 264, 269, 271, 274, 285, 288, 292, 293, 294, 306, 311, 312, 318, 319, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 402, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 506, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 818, 819, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 836, 839, 843, 844, 846, 850, 853, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 865, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 951, 952, 955, 956, 958, 959, 960, 961], "disk": [30, 55, 107, 136, 138, 169, 170, 176, 177, 185, 193, 197, 199, 204, 207, 211, 228, 234, 237, 238, 244, 245, 246, 253, 280, 285, 286, 291, 292, 306, 318, 322, 325, 327, 328, 329, 333, 334, 335, 336, 338, 339, 351, 383, 458, 504, 526, 551, 552, 553, 580, 640, 699, 706, 708, 710, 716, 738, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 817, 818, 844, 876, 880, 884, 886, 899, 938, 940, 946, 958], "fetcher": [30, 164, 280, 288, 295, 319], "automat": [30, 97, 101, 106, 107, 110, 122, 129, 135, 167, 168, 169, 171, 172, 176, 177, 178, 182, 183, 193, 195, 196, 197, 199, 209, 217, 218, 219, 220, 227, 228, 229, 230, 231, 233, 234, 235, 238, 244, 246, 247, 251, 261, 278, 280, 282, 283, 284, 285, 286, 288, 289, 291, 292, 293, 294, 295, 298, 300, 302, 303, 305, 306, 307, 309, 310, 311, 318, 319, 322, 325, 327, 328, 330, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 351, 382, 388, 410, 431, 449, 450, 451, 452, 454, 455, 456, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 488, 495, 498, 506, 509, 517, 533, 534, 541, 543, 552, 553, 559, 566, 570, 574, 578, 600, 637, 638, 640, 648, 649, 650, 653, 664, 665, 666, 669, 674, 676, 691, 702, 713, 724, 727, 732, 733, 738, 749, 776, 777, 779, 780, 789, 790, 791, 795, 796, 797, 798, 840, 844, 864, 865, 869, 870, 876, 879, 882, 883, 884, 885, 892, 893, 899, 904, 909, 910, 952, 958, 959], "repositori": [30, 197, 312, 323, 953, 958, 959], "dure": [30, 45, 59, 64, 69, 71, 97, 101, 108, 110, 122, 128, 131, 144, 149, 150, 163, 168, 171, 176, 182, 184, 187, 193, 194, 195, 198, 199, 207, 209, 219, 224, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 241, 244, 245, 246, 247, 271, 274, 278, 280, 285, 287, 288, 291, 293, 303, 304, 305, 307, 308, 309, 310, 312, 318, 319, 320, 321, 322, 325, 331, 333, 334, 335, 336, 337, 338, 340, 341, 343, 344, 346, 347, 348, 349, 350, 366, 367, 374, 412, 414, 418, 425, 429, 430, 432, 437, 441, 442, 443, 485, 491, 492, 502, 508, 509, 520, 528, 529, 547, 549, 550, 552, 553, 554, 566, 572, 583, 596, 600, 616, 624, 638, 658, 661, 662, 665, 672, 676, 691, 730, 733, 739, 754, 757, 763, 764, 765, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 805, 825, 828, 832, 833, 842, 844, 862, 865, 876, 883, 886, 890, 893, 899, 904, 910, 952, 960], "e": [30, 33, 34, 38, 54, 67, 68, 70, 72, 73, 80, 96, 97, 98, 107, 111, 129, 140, 142, 148, 164, 167, 168, 170, 171, 173, 177, 178, 180, 182, 184, 187, 188, 189, 192, 193, 195, 196, 197, 198, 205, 207, 212, 216, 217, 218, 220, 223, 224, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 241, 244, 245, 251, 252, 253, 256, 257, 258, 261, 264, 266, 270, 271, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 299, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 314, 318, 319, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 356, 357, 366, 367, 368, 372, 373, 376, 378, 380, 382, 383, 388, 397, 399, 410, 422, 425, 429, 430, 436, 441, 442, 443, 452, 458, 459, 461, 466, 477, 478, 485, 487, 488, 491, 492, 494, 495, 496, 499, 500, 501, 504, 505, 506, 509, 512, 514, 517, 518, 519, 521, 523, 524, 526, 527, 528, 529, 535, 541, 544, 546, 547, 549, 550, 551, 552, 553, 554, 565, 566, 568, 570, 572, 580, 584, 590, 592, 594, 597, 598, 599, 600, 604, 605, 611, 612, 613, 614, 615, 616, 617, 620, 621, 622, 624, 637, 638, 640, 641, 646, 647, 648, 649, 652, 653, 654, 655, 656, 658, 663, 664, 665, 667, 668, 671, 672, 676, 682, 683, 684, 691, 696, 703, 706, 707, 710, 711, 716, 723, 724, 725, 726, 727, 728, 734, 736, 738, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 757, 760, 774, 775, 776, 777, 778, 779, 780, 781, 784, 785, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 808, 809, 812, 822, 827, 831, 834, 844, 846, 850, 859, 862, 863, 864, 870, 871, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 889, 890, 892, 893, 897, 898, 899, 900, 901, 904, 906, 908, 909, 912, 936, 939, 946, 949, 951, 952, 953, 956, 958, 962], "rate": [30, 96, 125, 129, 131, 207, 217, 218, 223, 230, 231, 233, 260, 270, 278, 284, 285, 293, 307, 328, 332, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 445, 490, 520, 524, 526, 552, 553, 561, 568, 576, 667, 674, 690, 742, 754, 767, 773, 775, 778, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 814, 876, 878, 887, 899, 946], "per": [30, 57, 73, 101, 118, 122, 129, 135, 138, 148, 155, 158, 169, 171, 177, 178, 185, 193, 196, 207, 220, 229, 233, 235, 247, 256, 261, 266, 270, 280, 288, 303, 309, 310, 311, 312, 322, 325, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 384, 391, 431, 447, 460, 477, 485, 492, 495, 498, 506, 509, 518, 519, 552, 553, 614, 615, 620, 621, 622, 638, 639, 642, 645, 693, 733, 741, 770, 772, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 805, 812, 814, 815, 822, 823, 824, 826, 827, 834, 844, 876, 877, 878, 885, 889, 890, 907, 920, 958], "etc": [30, 53, 57, 62, 73, 105, 170, 182, 187, 193, 194, 195, 198, 199, 202, 216, 217, 218, 227, 228, 229, 233, 238, 244, 247, 251, 256, 264, 271, 286, 298, 303, 307, 309, 311, 312, 314, 320, 321, 322, 326, 331, 333, 334, 335, 336, 338, 339, 340, 344, 348, 404, 514, 526, 527, 552, 553, 555, 561, 573, 577, 599, 610, 635, 638, 652, 676, 701, 705, 730, 735, 763, 764, 765, 766, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 870, 874, 877, 904, 946, 949, 956], "mat": [30, 45, 223, 278, 284, 292, 301, 305, 322, 338, 573, 701, 705], "store": [30, 42, 55, 56, 97, 101, 118, 121, 122, 123, 132, 137, 143, 144, 162, 164, 167, 168, 169, 170, 171, 176, 177, 178, 182, 183, 185, 187, 189, 195, 196, 197, 199, 202, 209, 217, 218, 219, 220, 228, 229, 234, 235, 238, 239, 241, 244, 246, 247, 252, 253, 271, 283, 286, 287, 288, 289, 291, 298, 300, 305, 308, 310, 311, 318, 319, 320, 321, 322, 325, 326, 327, 331, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 394, 416, 434, 452, 458, 465, 466, 477, 478, 487, 489, 500, 509, 514, 518, 523, 544, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 597, 616, 625, 627, 638, 646, 653, 663, 675, 694, 700, 701, 705, 708, 731, 741, 742, 754, 769, 792, 801, 802, 803, 804, 805, 806, 807, 816, 845, 853, 866, 899, 937, 938, 946], "inferenti": [30, 256], "evalu": [30, 57, 70, 80, 81, 189, 216, 224, 238, 240, 256, 278, 310, 312, 319, 322, 345, 431, 502, 511, 549, 550, 587, 620, 647, 664, 665, 749, 946], "signific": [30, 33, 99, 128, 129, 140, 178, 192, 199, 216, 227, 229, 230, 232, 233, 235, 256, 258, 259, 260, 261, 262, 263, 271, 278, 314, 318, 322, 330, 333, 334, 335, 336, 338, 388, 394, 424, 485, 491, 492, 524, 552, 553, 613, 637, 638, 699, 776, 777, 779, 780, 781, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 882, 885, 901, 906, 908, 966], "jose": [30, 291], "garcia": 30, "alani": [30, 291], "jcg": 30, "matplotlib": [30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 54, 55, 63, 64, 65, 67, 71, 73, 79, 84, 95, 96, 97, 98, 99, 100, 109, 113, 118, 120, 121, 124, 125, 127, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 158, 159, 160, 163, 164, 171, 172, 173, 178, 187, 197, 198, 199, 203, 204, 207, 208, 210, 211, 223, 224, 228, 230, 231, 233, 234, 235, 236, 238, 239, 240, 244, 247, 253, 256, 257, 258, 259, 260, 261, 266, 270, 271, 274, 275, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 311, 320, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 382, 383, 485, 492, 552, 553, 637, 638, 653, 658, 710, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 845, 848, 855, 859, 861, 862, 863, 864, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 882, 883, 884, 885, 886, 887, 888, 889, 891, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 951, 952], "pyplot": [30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 54, 55, 63, 64, 65, 67, 71, 73, 79, 84, 95, 96, 97, 98, 99, 100, 109, 113, 118, 120, 121, 124, 125, 127, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 158, 159, 160, 163, 164, 171, 172, 173, 178, 187, 197, 199, 203, 204, 207, 208, 210, 211, 223, 224, 230, 231, 234, 235, 238, 239, 240, 244, 253, 256, 257, 258, 259, 260, 261, 266, 270, 271, 274, 275, 293, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798, 812, 822, 848, 870, 880, 882, 907], "plt": [30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 54, 55, 63, 64, 65, 67, 71, 73, 79, 84, 95, 96, 97, 98, 99, 100, 109, 113, 118, 120, 121, 124, 125, 127, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 158, 159, 160, 163, 164, 171, 172, 173, 178, 187, 197, 199, 203, 204, 207, 208, 210, 211, 223, 224, 230, 231, 234, 235, 238, 239, 240, 244, 253, 256, 257, 258, 259, 260, 261, 266, 270, 271, 274, 275, 335, 336, 391, 812, 822, 884], "subj": [30, 187, 233], "experi": [30, 45, 71, 92, 97, 156, 178, 192, 193, 195, 196, 207, 219, 228, 229, 235, 238, 239, 240, 241, 244, 245, 278, 289, 295, 310, 311, 313, 319, 321, 322, 338, 572], "particip": [30, 98, 100, 101, 103, 104, 108, 109, 110, 118, 121, 150, 168, 171, 173, 178, 193, 194, 195, 196, 199, 220, 227, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 271, 274, 310, 312, 319, 321, 658, 660, 662, 855], "perform": [30, 34, 36, 39, 45, 57, 71, 80, 103, 109, 111, 128, 129, 131, 135, 140, 147, 164, 167, 170, 171, 173, 176, 178, 182, 183, 184, 193, 194, 195, 196, 205, 216, 217, 220, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 244, 256, 258, 260, 264, 266, 280, 286, 288, 289, 293, 294, 295, 304, 307, 308, 318, 319, 321, 322, 326, 328, 330, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 351, 356, 359, 366, 367, 424, 425, 426, 428, 430, 431, 447, 485, 488, 491, 492, 495, 497, 498, 501, 502, 506, 519, 520, 521, 526, 528, 541, 542, 543, 544, 547, 549, 550, 552, 553, 560, 561, 568, 596, 597, 599, 600, 605, 606, 607, 608, 609, 611, 612, 616, 621, 622, 637, 638, 640, 643, 650, 651, 652, 653, 655, 656, 658, 662, 665, 666, 674, 676, 691, 703, 737, 738, 740, 741, 742, 754, 766, 771, 775, 776, 777, 778, 779, 780, 782, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 834, 846, 862, 863, 870, 876, 877, 878, 881, 885, 889, 891, 893, 898, 899, 900, 901, 906, 908, 912, 951, 958, 959], "altern": [30, 142, 188, 189, 196, 199, 219, 227, 229, 230, 231, 233, 240, 247, 256, 270, 271, 274, 283, 289, 292, 303, 304, 319, 324, 326, 327, 330, 333, 334, 335, 336, 342, 425, 485, 492, 552, 553, 578, 599, 637, 638, 653, 698, 702, 778, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 863, 878, 885, 889, 898, 901, 906, 908, 946, 958, 964], "forc": [30, 150, 188, 193, 198, 205, 229, 286, 311, 319, 325, 333, 334, 335, 336, 378, 389, 435, 447, 449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 552, 553, 578, 605, 702, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 951], "choic": [30, 142, 182, 187, 197, 198, 211, 230, 235, 245, 258, 319, 322, 346, 525, 535, 616, 782, 956], "discrimin": [30, 35, 44, 110, 224, 271, 278, 319, 485, 489, 492, 638], "between": [30, 34, 36, 42, 45, 48, 52, 53, 62, 64, 66, 71, 73, 85, 87, 96, 109, 110, 115, 124, 127, 128, 131, 136, 141, 142, 150, 156, 160, 161, 163, 164, 167, 168, 171, 173, 176, 177, 178, 183, 184, 185, 187, 188, 189, 192, 193, 196, 197, 198, 199, 203, 205, 216, 217, 218, 219, 220, 223, 224, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 246, 253, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 271, 274, 278, 284, 285, 286, 289, 291, 292, 293, 295, 296, 299, 303, 305, 308, 309, 310, 311, 312, 314, 318, 319, 321, 322, 325, 326, 327, 328, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 356, 378, 382, 388, 390, 391, 412, 424, 425, 426, 427, 428, 431, 432, 434, 435, 436, 485, 486, 491, 497, 501, 504, 506, 508, 509, 511, 519, 526, 529, 530, 547, 549, 550, 552, 553, 572, 577, 597, 598, 611, 613, 616, 620, 621, 622, 635, 638, 640, 641, 643, 646, 648, 649, 650, 653, 654, 655, 656, 657, 658, 659, 664, 665, 666, 669, 674, 675, 676, 680, 682, 703, 706, 707, 730, 739, 740, 741, 742, 744, 746, 749, 750, 753, 754, 757, 759, 760, 761, 763, 764, 768, 769, 776, 777, 779, 780, 781, 784, 789, 790, 791, 792, 795, 796, 797, 798, 801, 803, 804, 806, 811, 812, 815, 819, 820, 822, 823, 824, 826, 827, 834, 844, 846, 850, 862, 864, 865, 867, 870, 872, 876, 879, 880, 881, 882, 883, 885, 899, 900, 903, 904, 906, 909, 910, 912, 917, 937, 946, 958, 960, 966], "stimuli": [30, 45, 96, 144, 150, 156, 168, 171, 173, 176, 178, 193, 207, 219, 223, 232, 241, 278, 319, 321, 491, 641], "whole": [30, 54, 80, 81, 97, 189, 228, 256, 278, 286, 292, 311, 319, 340, 341, 344, 347, 348, 349, 519, 592, 676, 693, 738, 755, 789, 790, 791, 792, 795, 796, 797, 798, 844, 872, 906, 960], "vari": [30, 45, 48, 72, 73, 85, 101, 168, 182, 218, 223, 230, 233, 234, 237, 238, 240, 253, 256, 295, 309, 310, 314, 319, 322, 333, 334, 338, 340, 341, 344, 347, 348, 349, 412, 413, 414, 415, 416, 417, 508, 509, 518, 519, 552, 553, 555, 741, 780, 869], "discern": [30, 319], "observ": [30, 103, 129, 140, 164, 171, 178, 183, 233, 235, 239, 240, 256, 258, 260, 261, 264, 266, 271, 318, 319, 321, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 524, 552, 553, 638, 770, 775, 776, 777, 778, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 899], "similar": [30, 42, 43, 44, 45, 46, 53, 59, 84, 87, 97, 115, 131, 137, 140, 142, 158, 163, 164, 167, 168, 169, 170, 171, 177, 187, 197, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 239, 244, 252, 256, 258, 261, 269, 278, 280, 282, 283, 284, 286, 291, 292, 295, 304, 305, 311, 312, 314, 319, 320, 322, 326, 331, 332, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 366, 425, 434, 486, 501, 519, 526, 552, 553, 587, 635, 638, 653, 665, 744, 789, 790, 791, 795, 796, 797, 798, 799, 800, 834, 844, 861, 880, 902, 958, 959, 966], "approach": [30, 36, 45, 47, 70, 71, 72, 85, 100, 103, 131, 168, 170, 171, 176, 177, 178, 183, 187, 190, 191, 192, 193, 194, 199, 207, 223, 224, 227, 228, 229, 230, 231, 232, 233, 236, 238, 240, 253, 256, 257, 260, 262, 271, 274, 278, 291, 312, 318, 319, 320, 321, 322, 338, 436, 461, 558, 595, 638, 655, 674, 683, 727, 789, 862, 914, 960, 966], "across": [30, 42, 43, 44, 45, 46, 52, 53, 54, 58, 59, 73, 80, 81, 84, 87, 107, 110, 111, 131, 135, 137, 141, 142, 162, 164, 167, 168, 169, 170, 172, 176, 177, 180, 182, 189, 192, 193, 195, 199, 207, 224, 227, 228, 230, 232, 233, 234, 235, 236, 238, 240, 247, 251, 252, 256, 264, 265, 266, 270, 278, 280, 281, 282, 284, 288, 289, 291, 292, 294, 295, 302, 304, 311, 314, 318, 319, 321, 322, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 387, 411, 430, 431, 485, 488, 492, 494, 495, 497, 498, 499, 510, 519, 552, 553, 555, 580, 602, 614, 615, 620, 635, 638, 640, 643, 653, 703, 713, 733, 754, 780, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 807, 814, 823, 824, 826, 827, 846, 861, 865, 870, 877, 878, 880, 881, 885, 898, 900, 904, 907, 910, 925, 946, 966], "signal": [30, 34, 35, 36, 39, 41, 42, 45, 47, 53, 54, 68, 71, 77, 84, 85, 86, 90, 97, 98, 100, 102, 103, 105, 109, 112, 115, 128, 131, 139, 141, 142, 149, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 189, 192, 193, 199, 202, 205, 207, 211, 217, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 236, 241, 242, 243, 244, 245, 247, 253, 254, 255, 256, 261, 272, 278, 283, 285, 286, 288, 289, 292, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 308, 310, 318, 319, 321, 325, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 347, 348, 349, 369, 371, 412, 414, 418, 419, 422, 425, 426, 427, 428, 430, 435, 443, 452, 477, 478, 485, 487, 489, 490, 491, 492, 493, 496, 497, 506, 509, 518, 519, 520, 521, 523, 524, 525, 526, 552, 553, 561, 568, 574, 604, 605, 606, 619, 635, 636, 637, 638, 639, 640, 647, 649, 650, 651, 654, 655, 656, 661, 665, 667, 675, 676, 697, 706, 708, 711, 730, 733, 753, 755, 756, 775, 776, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 811, 812, 814, 815, 819, 821, 822, 823, 825, 826, 828, 844, 870, 876, 878, 880, 885, 886, 888, 889, 890, 891, 893, 899, 900, 946, 966], "continuum": [30, 300, 319], "span": [30, 101, 109, 147, 163, 167, 168, 176, 177, 178, 192, 193, 195, 205, 219, 227, 231, 242, 243, 244, 246, 247, 269, 271, 286, 307, 309, 310, 318, 319, 320, 322, 327, 333, 334, 335, 336, 338, 552, 553, 598, 635, 640, 641, 667, 703, 781, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 814, 861, 863, 900, 906, 966], "increas": [30, 37, 58, 81, 97, 140, 178, 199, 220, 229, 230, 233, 234, 239, 240, 253, 258, 261, 271, 285, 286, 287, 293, 294, 301, 306, 319, 322, 332, 333, 334, 335, 336, 343, 526, 552, 553, 564, 638, 659, 665, 684, 776, 777, 779, 780, 789, 790, 791, 795, 796, 797, 798, 812, 822, 823, 824, 825, 826, 827, 828, 844, 849, 876, 893, 899], "word": [30, 129, 170, 178, 182, 195, 202, 224, 230, 231, 234, 235, 238, 256, 257, 271, 278, 311, 319, 321, 322, 333, 334, 343, 466, 491, 795, 825, 828, 844, 859], "g": [30, 34, 54, 57, 63, 67, 68, 70, 95, 96, 97, 107, 108, 111, 124, 129, 140, 142, 143, 148, 155, 164, 167, 168, 170, 177, 178, 182, 187, 188, 189, 193, 195, 196, 197, 198, 207, 216, 217, 218, 223, 224, 227, 229, 230, 231, 232, 233, 234, 236, 241, 244, 245, 251, 252, 256, 257, 261, 264, 266, 270, 271, 274, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 298, 299, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 314, 318, 319, 321, 322, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 366, 367, 368, 373, 380, 382, 383, 388, 397, 399, 410, 422, 425, 429, 430, 436, 441, 442, 443, 452, 458, 461, 466, 477, 478, 485, 487, 488, 491, 492, 494, 495, 496, 499, 500, 501, 504, 505, 506, 509, 514, 517, 518, 519, 521, 523, 524, 526, 527, 528, 529, 535, 541, 544, 546, 547, 549, 550, 551, 552, 553, 554, 566, 592, 594, 598, 599, 600, 605, 611, 612, 613, 616, 620, 621, 622, 624, 637, 638, 640, 641, 648, 649, 652, 653, 654, 655, 656, 663, 664, 665, 668, 671, 672, 676, 682, 683, 684, 691, 696, 703, 710, 711, 716, 723, 724, 725, 726, 727, 728, 734, 736, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 757, 760, 774, 775, 776, 777, 778, 779, 780, 784, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 812, 822, 825, 827, 828, 844, 846, 850, 859, 862, 863, 864, 870, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 889, 890, 892, 893, 897, 898, 899, 900, 901, 904, 906, 908, 909, 912, 936, 939, 946, 949, 951, 953, 956, 958, 962], "easi": [30, 142, 160, 189, 193, 209, 216, 219, 228, 233, 236, 244, 246, 271, 307, 311, 319, 320, 321, 322, 343, 432, 491, 946, 958], "while": [30, 33, 36, 52, 71, 101, 102, 104, 110, 114, 135, 164, 168, 169, 170, 171, 177, 178, 185, 187, 193, 199, 205, 206, 216, 220, 227, 228, 231, 233, 235, 236, 238, 246, 253, 256, 260, 264, 271, 274, 278, 282, 285, 287, 289, 302, 306, 311, 312, 314, 319, 321, 322, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 366, 367, 425, 429, 430, 441, 442, 443, 485, 491, 492, 493, 502, 519, 528, 529, 547, 549, 550, 552, 553, 583, 608, 616, 638, 639, 650, 651, 655, 656, 666, 789, 790, 791, 795, 796, 797, 798, 823, 824, 826, 827, 870, 876, 880, 884, 886, 893, 899, 902, 912, 955, 957], "low": [30, 31, 37, 45, 71, 73, 85, 97, 102, 108, 109, 110, 111, 122, 138, 142, 168, 170, 178, 193, 194, 207, 210, 213, 216, 219, 224, 228, 231, 233, 238, 239, 240, 256, 258, 260, 265, 278, 285, 287, 292, 295, 302, 303, 304, 311, 312, 318, 319, 321, 322, 325, 328, 332, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 375, 425, 430, 487, 493, 496, 498, 520, 521, 523, 552, 553, 561, 564, 578, 580, 605, 638, 643, 646, 650, 651, 655, 656, 665, 666, 667, 669, 670, 680, 742, 746, 751, 782, 783, 789, 790, 791, 795, 796, 797, 798, 824, 827, 844, 876, 899, 946], "hard": [30, 142, 169, 233, 253, 282, 304, 311, 319, 320, 434, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 597, 946], "extens": [30, 38, 69, 70, 101, 163, 167, 178, 185, 187, 197, 217, 218, 220, 224, 245, 246, 285, 287, 292, 294, 295, 302, 314, 318, 319, 322, 325, 333, 334, 335, 336, 366, 367, 400, 401, 407, 492, 515, 516, 518, 552, 553, 560, 567, 570, 581, 676, 694, 703, 707, 792, 816, 844, 936, 955, 956], "veri": [30, 36, 70, 71, 76, 87, 90, 96, 97, 107, 110, 142, 160, 168, 171, 178, 184, 187, 195, 199, 208, 228, 230, 231, 232, 233, 234, 235, 238, 253, 256, 265, 271, 311, 320, 321, 322, 366, 390, 509, 552, 775, 794, 800, 812, 822, 955], "ll": [30, 33, 36, 45, 52, 60, 80, 85, 94, 97, 101, 142, 143, 144, 145, 148, 150, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 183, 185, 187, 189, 193, 194, 195, 197, 198, 199, 206, 207, 208, 218, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 244, 245, 246, 247, 251, 253, 257, 258, 260, 266, 269, 270, 274, 275, 311, 946, 960], "begin": [30, 45, 100, 121, 178, 183, 193, 195, 196, 198, 199, 202, 216, 219, 223, 227, 229, 230, 231, 232, 233, 234, 235, 240, 246, 251, 271, 303, 308, 311, 322, 327, 328, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 352, 356, 430, 514, 527, 552, 553, 581, 597, 611, 621, 622, 638, 641, 655, 656, 665, 666, 669, 676, 706, 707, 756, 789, 790, 791, 795, 796, 797, 798, 799, 809, 879, 890, 891, 893, 900, 906, 944], "littl": [30, 187, 198, 213, 216, 230, 231, 233, 234, 253, 271, 275, 322, 955], "you": [30, 50, 53, 54, 67, 69, 73, 76, 85, 87, 101, 106, 109, 110, 115, 131, 137, 141, 142, 143, 144, 145, 147, 148, 149, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 207, 208, 209, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 244, 245, 246, 247, 251, 253, 256, 258, 259, 261, 264, 266, 269, 270, 271, 274, 275, 278, 291, 294, 295, 303, 309, 310, 311, 313, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 352, 358, 360, 366, 367, 383, 388, 398, 399, 400, 424, 425, 429, 430, 433, 434, 441, 442, 443, 448, 461, 485, 491, 492, 502, 509, 512, 518, 520, 526, 528, 529, 537, 544, 547, 549, 550, 552, 553, 554, 565, 569, 577, 580, 603, 605, 616, 637, 638, 655, 665, 667, 677, 694, 700, 738, 753, 769, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 842, 845, 846, 848, 855, 862, 863, 867, 869, 876, 877, 881, 886, 889, 891, 892, 893, 899, 904, 916, 946, 947, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961], "first": [30, 31, 33, 36, 37, 42, 45, 47, 54, 55, 58, 64, 65, 67, 68, 69, 70, 71, 73, 90, 97, 98, 101, 107, 110, 111, 114, 115, 118, 122, 123, 131, 132, 136, 137, 140, 141, 142, 143, 148, 150, 158, 160, 161, 162, 163, 164, 167, 168, 169, 170, 172, 173, 176, 177, 178, 183, 184, 186, 187, 188, 189, 193, 194, 195, 196, 198, 199, 202, 203, 204, 206, 207, 208, 209, 210, 211, 216, 218, 219, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 252, 253, 256, 257, 258, 260, 261, 264, 265, 266, 269, 270, 271, 274, 278, 282, 283, 285, 286, 289, 291, 292, 293, 294, 295, 302, 304, 305, 311, 318, 319, 321, 322, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 357, 365, 366, 367, 372, 387, 392, 393, 425, 433, 434, 441, 447, 458, 485, 491, 492, 500, 508, 509, 510, 516, 517, 519, 523, 524, 525, 526, 527, 533, 535, 543, 551, 552, 553, 574, 577, 578, 580, 592, 598, 599, 604, 608, 614, 615, 637, 638, 639, 641, 643, 646, 648, 653, 658, 661, 685, 690, 702, 703, 706, 710, 721, 733, 739, 741, 742, 745, 747, 748, 763, 764, 765, 770, 774, 775, 776, 777, 779, 780, 781, 783, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 831, 834, 844, 850, 853, 862, 870, 874, 876, 877, 878, 879, 882, 883, 885, 889, 890, 891, 893, 898, 899, 900, 901, 904, 906, 908, 909, 937, 946, 949, 951, 952, 956, 960], "limo_epoch": 30, "note": [30, 33, 39, 42, 44, 47, 52, 73, 97, 102, 110, 121, 132, 137, 140, 142, 149, 162, 163, 167, 168, 169, 170, 172, 176, 178, 179, 183, 185, 187, 189, 193, 194, 195, 196, 197, 198, 199, 204, 207, 208, 209, 210, 217, 218, 220, 223, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 240, 244, 245, 246, 251, 252, 260, 261, 264, 265, 266, 271, 278, 304, 311, 312, 318, 321, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 362, 366, 367, 369, 371, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 387, 388, 389, 390, 391, 392, 398, 399, 400, 402, 404, 405, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 435, 436, 438, 441, 444, 445, 452, 458, 459, 460, 461, 462, 464, 477, 478, 484, 485, 487, 488, 489, 491, 492, 493, 494, 495, 497, 501, 502, 504, 505, 506, 507, 508, 509, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 535, 536, 538, 541, 542, 543, 544, 545, 546, 551, 552, 553, 554, 555, 561, 565, 566, 568, 569, 570, 572, 574, 576, 577, 578, 580, 581, 583, 584, 585, 590, 592, 593, 594, 595, 597, 599, 600, 601, 603, 605, 606, 607, 608, 609, 611, 612, 613, 616, 618, 620, 621, 622, 624, 625, 637, 638, 639, 640, 641, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 661, 663, 664, 665, 668, 672, 676, 677, 682, 683, 684, 685, 686, 690, 691, 694, 696, 698, 699, 700, 702, 703, 706, 707, 708, 710, 711, 713, 716, 722, 724, 725, 727, 728, 729, 730, 733, 735, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 766, 769, 770, 771, 772, 775, 776, 777, 778, 779, 780, 782, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 808, 809, 810, 812, 814, 815, 818, 822, 823, 824, 826, 827, 828, 829, 831, 832, 833, 834, 838, 839, 842, 844, 845, 846, 848, 855, 861, 862, 863, 864, 865, 867, 869, 870, 871, 873, 874, 876, 877, 878, 879, 880, 882, 883, 885, 886, 887, 889, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 918, 932, 936, 937, 938, 939, 940, 941, 946, 948, 953, 957, 959], "1055": 30, "good": [30, 31, 47, 57, 75, 97, 98, 100, 101, 104, 108, 109, 110, 118, 121, 145, 152, 164, 167, 168, 170, 173, 178, 184, 193, 194, 195, 196, 198, 204, 211, 219, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 258, 264, 266, 271, 274, 278, 285, 292, 294, 295, 309, 310, 311, 312, 319, 321, 322, 323, 328, 331, 333, 334, 335, 336, 338, 366, 367, 369, 371, 397, 415, 425, 429, 430, 441, 442, 443, 485, 487, 492, 493, 498, 501, 528, 529, 542, 547, 549, 550, 552, 553, 597, 616, 629, 632, 635, 637, 638, 640, 643, 645, 648, 653, 654, 657, 664, 665, 684, 691, 699, 710, 716, 757, 775, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 824, 826, 827, 874, 876, 877, 880, 886, 900, 907, 946, 947, 952, 959, 961], "299944": 30, "499907": 30, "213": [30, 61, 150, 196, 237, 247, 253], "524": [30, 45, 150, 261], "b": [30, 34, 36, 38, 48, 54, 63, 64, 70, 125, 138, 139, 156, 164, 218, 230, 233, 234, 239, 245, 247, 253, 256, 257, 260, 264, 265, 266, 271, 274, 278, 283, 285, 311, 319, 322, 325, 328, 333, 334, 335, 336, 340, 341, 343, 344, 345, 347, 348, 349, 356, 425, 431, 452, 477, 478, 506, 520, 522, 552, 553, 621, 622, 655, 656, 706, 707, 742, 770, 772, 775, 783, 789, 790, 791, 795, 796, 797, 798, 809, 823, 824, 826, 827, 844, 870, 876, 899, 906, 946], "531": [30, 261, 658, 662], "visualis": [30, 53, 55, 56, 74, 75, 76, 80, 81, 105, 112, 129, 192, 203, 239, 262, 263, 327, 333, 335, 336, 338, 388, 394, 424, 553, 583, 679, 683, 699, 780, 966], "distribut": [30, 45, 48, 52, 72, 74, 80, 81, 85, 87, 99, 144, 172, 177, 182, 189, 192, 193, 204, 214, 215, 219, 233, 235, 256, 258, 261, 264, 265, 270, 271, 278, 292, 304, 312, 318, 319, 321, 322, 330, 331, 333, 334, 335, 336, 337, 338, 342, 344, 435, 549, 552, 553, 604, 605, 616, 646, 683, 697, 706, 708, 721, 737, 741, 771, 774, 776, 777, 779, 780, 793, 794, 799, 800, 844, 854, 862, 874, 907, 914, 946, 958, 959, 966], "should": [30, 31, 33, 42, 45, 47, 66, 67, 90, 97, 109, 115, 118, 121, 148, 149, 160, 162, 163, 167, 168, 169, 171, 178, 179, 183, 184, 185, 187, 188, 192, 194, 199, 204, 207, 209, 210, 211, 218, 220, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 244, 245, 246, 247, 251, 260, 261, 269, 271, 275, 278, 282, 283, 285, 287, 288, 292, 295, 303, 304, 305, 309, 311, 312, 314, 318, 319, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 398, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 495, 496, 497, 498, 501, 502, 504, 506, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 535, 536, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 634, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 686, 688, 689, 690, 691, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 748, 749, 751, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 766, 771, 776, 777, 778, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 814, 815, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 840, 843, 844, 846, 847, 849, 853, 855, 862, 863, 864, 865, 869, 870, 871, 873, 874, 876, 877, 878, 879, 880, 881, 882, 885, 886, 889, 890, 891, 892, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 918, 924, 925, 926, 927, 928, 929, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 951, 952, 955, 956, 957, 958, 961], "appear": [30, 122, 129, 167, 171, 185, 195, 199, 207, 210, 219, 227, 230, 231, 236, 246, 294, 303, 311, 319, 321, 322, 325, 333, 334, 335, 336, 338, 343, 506, 552, 553, 561, 564, 568, 592, 864, 902], "clearli": [30, 47, 171, 179, 193, 219, 231, 233, 235, 237, 274], "suptitl": [30, 44, 48, 63, 68, 71, 97, 100, 107, 114, 118, 131, 137, 140, 144, 148, 160, 168, 171, 173, 178, 187, 203, 219, 223, 228, 230, 231, 233, 234, 235, 236, 238, 239, 256, 305], "seen": [30, 38, 53, 102, 167, 170, 171, 173, 177, 178, 183, 196, 197, 224, 227, 231, 234, 235, 239, 240, 244, 247, 311, 322, 323, 366, 492, 741, 742, 824, 827], "abov": [30, 47, 68, 69, 71, 75, 87, 97, 101, 102, 103, 109, 115, 135, 144, 167, 169, 171, 177, 178, 183, 187, 188, 193, 194, 195, 197, 198, 199, 202, 216, 218, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 244, 245, 247, 251, 253, 260, 261, 271, 278, 311, 318, 321, 322, 323, 327, 330, 333, 334, 335, 336, 338, 340, 341, 344, 346, 347, 348, 349, 424, 485, 487, 492, 496, 509, 515, 516, 518, 521, 523, 552, 553, 554, 561, 583, 637, 638, 640, 665, 675, 685, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 824, 827, 834, 844, 862, 870, 877, 878, 885, 889, 891, 901, 902, 906, 908, 946, 949, 952], "These": [30, 53, 71, 80, 81, 87, 97, 122, 142, 164, 165, 171, 172, 174, 178, 180, 182, 185, 187, 189, 190, 192, 193, 194, 197, 199, 200, 205, 207, 214, 216, 217, 218, 220, 221, 223, 224, 225, 229, 230, 233, 237, 239, 242, 247, 248, 253, 254, 256, 257, 262, 267, 271, 272, 276, 282, 295, 310, 311, 312, 314, 318, 319, 321, 322, 323, 324, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 350, 375, 376, 395, 425, 429, 430, 431, 504, 525, 552, 553, 578, 601, 638, 648, 665, 676, 707, 746, 751, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 946, 959], "easili": [30, 69, 70, 129, 140, 167, 171, 176, 187, 195, 197, 216, 218, 227, 230, 233, 235, 236, 244, 245, 246, 247, 264, 271, 297, 298, 311, 314, 318, 322, 512, 552, 553, 665, 775, 959], "access": [30, 78, 129, 159, 185, 193, 195, 196, 202, 220, 234, 241, 244, 246, 247, 269, 278, 284, 288, 291, 298, 299, 303, 310, 311, 312, 320, 326, 328, 333, 334, 335, 336, 337, 340, 341, 344, 346, 347, 348, 349, 552, 553, 700, 702, 793, 794, 795, 796, 797, 798, 799, 800, 825, 828, 958], "shown": [30, 58, 78, 97, 107, 110, 122, 129, 146, 148, 163, 169, 176, 177, 178, 183, 185, 189, 193, 199, 207, 209, 230, 234, 239, 241, 244, 245, 247, 261, 274, 275, 285, 291, 292, 293, 294, 295, 299, 303, 305, 306, 307, 309, 322, 323, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 382, 485, 492, 544, 552, 553, 587, 616, 637, 638, 653, 659, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 846, 862, 863, 864, 870, 871, 873, 874, 876, 878, 880, 881, 882, 883, 884, 885, 887, 889, 893, 896, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 916], "conveni": [30, 37, 71, 97, 101, 103, 164, 169, 178, 185, 188, 193, 196, 198, 199, 208, 224, 227, 230, 234, 235, 245, 251, 256, 257, 258, 261, 264, 265, 266, 270, 278, 283, 284, 288, 294, 299, 303, 309, 311, 318, 319, 322, 333, 334, 335, 336, 337, 343, 551, 552, 553, 559, 587, 611, 638, 646, 655, 656, 730, 733, 735, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 859, 956, 957], "491210": 30, "235572": 30, "043707": 30, "642398": 30, "659978": 30, "now": [30, 33, 45, 50, 52, 58, 67, 71, 76, 97, 99, 101, 102, 111, 114, 115, 137, 139, 140, 141, 148, 161, 162, 163, 164, 167, 168, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 199, 203, 205, 206, 207, 209, 210, 213, 223, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 246, 253, 258, 260, 261, 264, 265, 266, 270, 271, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 322, 331, 333, 334, 335, 336, 390, 538, 552, 553, 733, 845, 867, 874, 956], "closer": [30, 50, 67, 137, 168, 185, 238, 256, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 738, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "want": [30, 67, 76, 101, 110, 122, 140, 142, 143, 148, 162, 163, 167, 168, 169, 170, 171, 172, 176, 177, 178, 185, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 205, 207, 217, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 244, 245, 246, 251, 252, 256, 258, 260, 261, 264, 265, 271, 274, 275, 311, 312, 322, 325, 326, 333, 334, 335, 336, 338, 340, 344, 348, 388, 448, 509, 514, 552, 553, 638, 655, 812, 822, 869, 899, 904, 916, 946, 947, 949, 952, 955, 959, 960], "column": [30, 36, 57, 101, 122, 123, 129, 140, 167, 168, 170, 172, 178, 193, 199, 202, 216, 224, 235, 238, 239, 244, 256, 257, 282, 283, 286, 287, 292, 295, 299, 307, 310, 314, 321, 322, 327, 330, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 368, 397, 441, 485, 492, 509, 527, 543, 552, 553, 617, 620, 633, 637, 638, 639, 694, 701, 702, 703, 710, 774, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 878, 885, 886, 889, 897, 898, 901, 906, 936], "tabl": [30, 67, 101, 152, 170, 171, 198, 199, 212, 217, 230, 244, 245, 269, 289, 303, 308, 321, 322, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 537, 538, 552, 553, 616, 738, 844, 865, 870, 877, 904, 909, 910, 911, 915, 941, 949], "epochs_summari": 30, "describ": [30, 39, 42, 102, 127, 141, 145, 176, 178, 183, 185, 189, 192, 193, 195, 196, 197, 198, 199, 216, 220, 223, 227, 229, 234, 235, 236, 238, 239, 245, 246, 253, 254, 257, 262, 271, 278, 294, 312, 314, 318, 321, 322, 335, 336, 366, 424, 425, 431, 485, 493, 506, 509, 517, 552, 553, 565, 637, 638, 639, 676, 712, 739, 759, 760, 761, 762, 763, 764, 765, 810, 812, 815, 822, 886, 892, 946, 951, 965], "round": [30, 63, 137, 167, 172, 176, 187, 195, 199, 223, 230, 231, 233, 234, 240, 244, 253, 271, 286, 292, 294, 303, 305, 309, 310, 327, 331, 332, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 514, 552, 553, 789, 790, 791, 795, 796, 797, 798], "count": [30, 48, 97, 99, 167, 198, 239, 246, 256, 260, 264, 266, 291, 294, 295, 302, 307, 308, 309, 327, 328, 333, 334, 335, 336, 366, 367, 425, 429, 430, 439, 440, 441, 442, 443, 485, 492, 508, 528, 529, 547, 549, 550, 597, 616, 648, 699, 776, 777, 779, 780, 886, 965], "uniqu": [30, 36, 44, 129, 170, 177, 178, 193, 195, 245, 256, 261, 304, 307, 308, 310, 322, 327, 331, 332, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 391, 439, 514, 543, 552, 553, 561, 568, 599, 638, 700, 762, 765, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 824, 827, 870, 880], "nan": [30, 96, 97, 101, 171, 238, 258, 259, 260, 261, 271, 286, 287, 291, 292, 295, 303, 305, 309, 310, 333, 334, 335, 336, 552, 553, 583, 644, 665, 791, 797], "top": [30, 140, 143, 150, 163, 167, 178, 185, 187, 188, 199, 203, 208, 220, 228, 231, 233, 234, 235, 236, 244, 246, 247, 256, 274, 275, 282, 311, 321, 322, 325, 333, 334, 335, 336, 341, 347, 349, 844, 845, 846, 864, 876, 880, 881, 909], "freq": [30, 35, 47, 58, 59, 60, 95, 132, 135, 137, 140, 142, 160, 164, 193, 223, 227, 230, 231, 240, 251, 258, 259, 260, 261, 269, 270, 271, 273, 284, 285, 314, 325, 333, 334, 335, 336, 412, 414, 498, 524, 552, 553, 622, 769, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 810, 812, 814, 815, 820, 822, 823, 824, 825, 826, 827, 828, 869, 887, 894, 966], "std": [30, 42, 178, 219, 240, 253, 266, 269, 270, 271, 333, 334, 335, 336, 384, 485, 492, 552, 553, 593, 870, 877, 880, 883, 900], "min": [30, 35, 47, 48, 124, 125, 135, 140, 142, 144, 163, 164, 168, 173, 184, 199, 223, 227, 233, 235, 244, 256, 257, 258, 259, 260, 261, 264, 265, 266, 330, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 391, 485, 487, 492, 496, 521, 523, 552, 553, 637, 638, 650, 666, 667, 669, 671, 680, 684, 685, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 855, 863, 877, 878, 885, 889, 898, 899, 900, 901, 904, 906, 907, 908, 909], "619": [30, 261], "852": [30, 237], "084": 30, "875": [30, 45, 170, 209, 322], "642": [30, 85, 207, 215, 223, 224, 261, 278, 550, 966], "ran": [30, 261, 338], "There": [30, 101, 102, 110, 148, 150, 168, 171, 178, 183, 185, 186, 193, 197, 198, 199, 204, 207, 218, 220, 227, 229, 230, 231, 233, 234, 238, 240, 241, 244, 246, 256, 269, 274, 311, 319, 322, 333, 477, 509, 638, 659, 683, 738, 946, 947, 948, 956, 959], "subdivid": [30, 187, 188, 288, 325, 340, 344, 348, 457, 737, 904], "particular": [30, 53, 155, 167, 168, 182, 193, 195, 199, 202, 223, 224, 230, 233, 234, 244, 258, 266, 312, 322, 323, 325, 327, 333, 334, 343, 373, 502, 529, 552, 553, 561, 711, 769, 776, 777, 779, 780, 876, 899, 946], "addit": [30, 60, 68, 71, 87, 88, 97, 103, 109, 140, 142, 162, 167, 169, 172, 177, 179, 183, 187, 188, 189, 193, 197, 216, 217, 218, 219, 223, 224, 229, 230, 233, 234, 235, 236, 238, 240, 241, 244, 246, 247, 251, 261, 271, 283, 284, 288, 291, 292, 304, 309, 311, 313, 314, 318, 319, 322, 325, 330, 333, 334, 335, 336, 340, 341, 344, 345, 346, 347, 348, 349, 377, 379, 405, 424, 425, 430, 458, 485, 486, 487, 490, 492, 493, 496, 506, 509, 516, 518, 523, 552, 553, 559, 605, 606, 607, 608, 609, 611, 612, 618, 621, 622, 635, 636, 637, 638, 639, 650, 651, 677, 706, 732, 743, 775, 776, 777, 779, 780, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 815, 823, 824, 826, 827, 844, 859, 863, 876, 878, 880, 885, 891, 897, 899, 901, 904, 906, 908, 909, 946, 949, 955, 956, 958, 959], "score": [30, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 102, 110, 164, 199, 223, 224, 233, 238, 282, 285, 288, 292, 307, 319, 343, 485, 488, 491, 492, 495, 502, 638, 643, 653, 664, 665, 745, 776, 777, 779, 780, 892, 915, 946], "thei": [30, 31, 52, 67, 71, 73, 76, 97, 98, 102, 109, 110, 122, 135, 142, 147, 167, 168, 169, 171, 176, 178, 179, 185, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 203, 207, 208, 209, 216, 218, 219, 220, 224, 227, 228, 229, 230, 231, 233, 234, 235, 238, 239, 240, 241, 244, 245, 246, 247, 261, 264, 278, 282, 283, 284, 285, 287, 291, 295, 298, 304, 305, 306, 311, 312, 318, 320, 321, 322, 326, 328, 333, 334, 335, 336, 338, 343, 366, 377, 379, 395, 404, 425, 432, 434, 506, 508, 514, 518, 520, 527, 552, 553, 561, 568, 574, 576, 578, 584, 597, 614, 615, 627, 638, 649, 657, 659, 665, 676, 691, 699, 700, 702, 733, 795, 796, 839, 844, 863, 879, 880, 883, 941, 951, 955, 959], "deviat": [30, 80, 81, 118, 125, 128, 149, 177, 178, 205, 224, 233, 237, 256, 258, 270, 283, 292, 321, 322, 330, 333, 334, 335, 336, 356, 384, 485, 620, 621, 622, 638, 665, 751, 771, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 823, 826, 855, 871, 877, 880, 886, 889, 891, 906, 907], "how": [30, 31, 35, 36, 39, 44, 45, 48, 52, 53, 57, 59, 69, 70, 71, 73, 84, 89, 91, 93, 94, 95, 96, 97, 98, 101, 103, 106, 118, 122, 123, 126, 127, 133, 141, 144, 145, 148, 151, 153, 154, 157, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 207, 208, 209, 210, 216, 218, 220, 223, 224, 229, 230, 231, 232, 233, 234, 236, 237, 239, 241, 244, 245, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 266, 269, 270, 271, 274, 276, 278, 283, 284, 285, 288, 292, 295, 303, 304, 305, 307, 310, 311, 312, 314, 318, 319, 321, 322, 323, 326, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 344, 346, 347, 348, 349, 366, 367, 378, 382, 383, 408, 413, 419, 436, 437, 438, 445, 485, 491, 492, 497, 512, 527, 529, 543, 544, 547, 549, 550, 552, 553, 558, 565, 566, 574, 575, 578, 587, 605, 614, 615, 616, 637, 638, 641, 649, 665, 676, 677, 718, 719, 720, 721, 729, 733, 776, 777, 779, 780, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 815, 844, 845, 846, 853, 862, 863, 867, 870, 872, 876, 877, 878, 881, 885, 889, 890, 891, 892, 898, 899, 901, 904, 905, 906, 908, 909, 914, 916, 949, 951, 953, 960, 966], "onli": [30, 34, 36, 37, 38, 45, 47, 48, 57, 60, 65, 67, 70, 71, 73, 75, 76, 81, 90, 97, 101, 102, 106, 109, 110, 115, 118, 121, 122, 123, 124, 125, 131, 135, 137, 140, 142, 143, 144, 145, 148, 158, 160, 163, 164, 167, 168, 169, 170, 176, 177, 178, 184, 185, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 205, 207, 210, 213, 216, 217, 218, 219, 220, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 244, 245, 246, 247, 251, 252, 253, 256, 258, 259, 260, 261, 264, 265, 266, 270, 271, 274, 275, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 299, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 318, 319, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 389, 391, 392, 393, 395, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 504, 506, 509, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 533, 535, 536, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 634, 635, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 735, 737, 738, 740, 741, 742, 743, 752, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 766, 775, 776, 777, 778, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 813, 814, 815, 818, 819, 821, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 843, 844, 846, 853, 855, 862, 863, 864, 865, 867, 870, 871, 874, 876, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 915, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 951, 956, 959], "500": [30, 36, 37, 48, 97, 107, 108, 110, 113, 115, 144, 150, 162, 168, 170, 172, 208, 211, 218, 220, 223, 224, 230, 233, 237, 239, 240, 241, 253, 638], "ts_arg": [30, 129, 156, 224, 239, 257, 287, 333, 334, 335, 336, 638, 877, 883, 891], "xlim": [30, 45, 63, 65, 125, 187, 208, 223, 230, 231, 239, 240, 253, 256, 266, 271, 274, 335, 336, 880, 882], "plot_joint": [30, 98, 129, 177, 178, 193, 207, 209, 213, 224, 227, 233, 235, 239, 257, 270, 288, 292, 294, 306, 310, 335, 336, 789, 790, 791, 795, 796, 797, 798, 949, 965], "titl": [30, 34, 35, 41, 42, 45, 48, 56, 61, 65, 68, 69, 70, 72, 73, 74, 75, 76, 80, 81, 85, 96, 97, 98, 104, 109, 113, 118, 122, 129, 131, 135, 136, 137, 138, 142, 148, 152, 154, 159, 164, 168, 169, 171, 173, 178, 179, 187, 199, 202, 203, 204, 206, 207, 223, 224, 228, 230, 231, 233, 234, 235, 236, 240, 253, 256, 257, 258, 261, 266, 270, 271, 274, 278, 285, 286, 287, 288, 292, 293, 294, 295, 303, 304, 305, 306, 307, 309, 311, 316, 331, 333, 334, 335, 336, 338, 340, 343, 344, 348, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 866, 869, 870, 874, 875, 876, 877, 878, 880, 882, 883, 884, 887, 889, 890, 892, 893, 894, 899, 901, 902, 904, 907, 913], "differ": [30, 35, 42, 47, 48, 53, 54, 59, 63, 65, 70, 71, 73, 80, 81, 90, 95, 97, 101, 105, 107, 108, 112, 122, 124, 127, 129, 131, 135, 138, 139, 140, 142, 148, 151, 152, 157, 161, 162, 164, 167, 169, 170, 171, 174, 176, 177, 178, 179, 183, 185, 187, 189, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 207, 208, 210, 211, 212, 216, 217, 218, 219, 224, 227, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 244, 245, 246, 251, 256, 257, 258, 259, 261, 264, 265, 266, 270, 274, 275, 278, 280, 284, 287, 289, 292, 294, 295, 298, 301, 302, 303, 304, 307, 310, 311, 314, 318, 319, 320, 321, 322, 327, 328, 333, 334, 335, 336, 337, 338, 340, 341, 344, 347, 348, 349, 350, 366, 367, 368, 373, 390, 412, 425, 429, 430, 432, 434, 435, 441, 442, 443, 462, 477, 485, 492, 494, 506, 508, 509, 519, 526, 528, 529, 543, 544, 547, 549, 550, 552, 553, 561, 568, 576, 580, 590, 597, 611, 613, 614, 615, 616, 625, 638, 640, 648, 649, 655, 665, 674, 676, 678, 690, 693, 699, 700, 703, 707, 730, 740, 741, 742, 743, 749, 752, 753, 754, 755, 771, 776, 777, 778, 779, 780, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 850, 862, 872, 876, 880, 881, 884, 885, 886, 891, 893, 899, 902, 904, 910, 920, 937, 946, 951, 956, 960, 966], "wave": [30, 72, 123, 142, 164, 171, 178, 193, 230, 235, 257, 269, 278, 319, 322, 333, 334, 335, 336, 477, 478, 552, 553, 586, 650, 655, 666, 789, 791, 793, 795, 797, 799, 808, 814], "contrast": [30, 33, 115, 124, 127, 176, 178, 193, 197, 236, 253, 256, 257, 264, 269, 270, 296, 310, 314, 319, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798, 949], "although": [30, 47, 92, 129, 167, 170, 176, 188, 199, 229, 230, 232, 234, 244, 304, 322, 331, 518, 552, 553, 771, 959], "shouldn": [30, 178, 278, 344, 347, 625], "expect": [30, 58, 64, 122, 142, 149, 171, 183, 186, 188, 189, 192, 193, 194, 199, 207, 213, 218, 224, 230, 233, 234, 235, 239, 244, 245, 251, 253, 256, 260, 261, 266, 271, 295, 304, 307, 311, 312, 313, 321, 322, 323, 333, 334, 335, 336, 400, 402, 407, 429, 552, 553, 560, 569, 573, 581, 616, 638, 676, 700, 701, 705, 716, 727, 844, 876, 886, 893, 899, 946, 951], "among": [30, 36, 53, 62, 82, 199, 230, 256, 289, 292, 312, 344, 346, 435, 615, 617, 619, 638, 665, 708, 711, 769, 844, 850, 962, 966], "minu": [30, 168, 171, 258, 271, 322, 514, 638, 730, 774], "difference_wav": 30, "weight": [30, 31, 33, 37, 41, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 80, 81, 84, 85, 87, 100, 102, 118, 122, 127, 132, 135, 136, 137, 138, 152, 164, 168, 171, 176, 178, 184, 193, 195, 203, 204, 205, 206, 207, 208, 209, 212, 216, 219, 223, 224, 228, 230, 231, 232, 234, 235, 236, 239, 240, 252, 253, 256, 257, 259, 264, 265, 266, 278, 283, 285, 286, 288, 289, 292, 299, 302, 305, 318, 319, 321, 325, 338, 339, 344, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 424, 436, 489, 490, 491, 503, 506, 529, 530, 547, 549, 550, 564, 605, 611, 612, 616, 637, 638, 674, 745, 746, 751, 752, 755, 776, 777, 779, 780, 784, 803, 806, 814, 878, 901, 949], "clear": [30, 102, 141, 145, 167, 184, 228, 232, 234, 238, 240, 241, 253, 256, 289, 311, 314, 330, 333, 334, 338, 357, 372, 552, 553, 604, 658, 831, 844, 877], "pattern": [30, 37, 43, 45, 46, 47, 53, 72, 107, 110, 140, 141, 169, 170, 188, 193, 194, 199, 223, 227, 230, 233, 234, 235, 239, 271, 278, 280, 284, 285, 300, 302, 311, 318, 319, 322, 333, 334, 335, 336, 338, 343, 382, 398, 434, 445, 485, 489, 491, 492, 493, 500, 503, 509, 535, 568, 570, 580, 635, 639, 703, 716, 726, 727, 742, 789, 790, 791, 793, 794, 795, 796, 966], "when": [30, 47, 53, 54, 57, 70, 71, 72, 73, 87, 97, 101, 102, 103, 108, 109, 110, 111, 118, 122, 123, 131, 135, 143, 150, 155, 167, 169, 170, 171, 172, 173, 176, 177, 178, 184, 185, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 205, 207, 209, 211, 216, 217, 218, 219, 220, 224, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 252, 256, 258, 261, 269, 270, 274, 275, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 318, 320, 321, 322, 323, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 356, 366, 367, 379, 382, 386, 387, 409, 418, 419, 420, 424, 425, 429, 430, 431, 432, 434, 436, 441, 442, 443, 444, 447, 485, 492, 493, 496, 502, 504, 506, 510, 512, 514, 517, 519, 520, 521, 523, 524, 525, 526, 528, 529, 532, 535, 544, 547, 549, 550, 552, 553, 561, 566, 568, 569, 570, 574, 576, 578, 580, 583, 605, 606, 607, 608, 609, 611, 612, 616, 621, 622, 624, 627, 637, 638, 640, 643, 648, 649, 652, 653, 655, 658, 659, 664, 665, 666, 668, 669, 676, 677, 691, 694, 696, 700, 702, 704, 706, 719, 725, 727, 728, 729, 733, 738, 739, 750, 753, 776, 777, 778, 779, 780, 784, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 805, 808, 812, 814, 822, 834, 841, 844, 846, 853, 854, 863, 870, 874, 876, 878, 879, 880, 881, 882, 883, 885, 886, 888, 889, 891, 893, 896, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 912, 914, 925, 926, 937, 939, 946, 947, 949, 951, 955, 956, 958], "howev": [30, 42, 47, 71, 97, 101, 102, 103, 167, 169, 173, 176, 189, 194, 196, 197, 198, 199, 217, 218, 219, 220, 223, 224, 228, 230, 232, 233, 234, 235, 236, 240, 241, 244, 245, 256, 258, 260, 261, 264, 266, 271, 282, 303, 311, 312, 322, 333, 334, 338, 366, 382, 425, 477, 506, 518, 552, 553, 568, 570, 586, 605, 659, 778, 946, 957], "could": [30, 54, 55, 56, 64, 65, 67, 69, 96, 101, 111, 132, 167, 171, 178, 187, 188, 193, 196, 198, 199, 202, 206, 207, 208, 219, 227, 229, 230, 233, 234, 235, 236, 238, 244, 245, 246, 251, 256, 257, 264, 266, 271, 280, 282, 283, 286, 288, 289, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 333, 334, 335, 336, 338, 339, 343, 344, 366, 452, 477, 478, 484, 506, 508, 512, 528, 552, 553, 554, 561, 638, 641, 656, 659, 666, 667, 690, 848, 853, 932, 946], "narrow": [30, 101, 227, 231, 271, 305, 343], "search": [30, 178, 183, 224, 278, 310, 311, 343, 346, 366, 488, 495, 512, 533, 561, 568, 641, 646, 653, 812, 822, 823, 826, 862, 926, 946, 958], "bit": [30, 31, 33, 101, 137, 168, 171, 187, 198, 207, 213, 217, 230, 232, 237, 240, 256, 264, 266, 271, 274, 275, 302, 319, 322, 333, 334, 338, 412, 552, 553, 561, 568, 575, 951, 952, 958], "sinc": [30, 45, 58, 69, 70, 97, 101, 122, 143, 147, 162, 167, 168, 169, 171, 178, 187, 193, 194, 196, 198, 199, 202, 205, 213, 216, 217, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 244, 245, 246, 251, 256, 259, 264, 266, 271, 275, 281, 288, 311, 314, 318, 322, 327, 328, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 359, 382, 425, 429, 430, 506, 515, 516, 517, 518, 529, 541, 552, 553, 600, 625, 638, 649, 655, 665, 676, 776, 777, 778, 779, 780, 789, 790, 791, 795, 796, 797, 798, 863, 946], "paradigm": [30, 171, 189, 193, 227, 230, 301, 302, 319, 879], "might": [30, 31, 45, 47, 97, 101, 148, 168, 171, 178, 183, 188, 189, 194, 195, 220, 224, 229, 230, 233, 236, 256, 261, 264, 271, 274, 291, 311, 313, 318, 322, 340, 344, 348, 402, 509, 518, 552, 553, 555, 624, 638, 684, 776, 904, 946, 951, 952], "best": [30, 31, 36, 42, 100, 110, 149, 162, 169, 176, 189, 193, 203, 204, 205, 207, 220, 223, 229, 233, 238, 253, 311, 312, 313, 314, 320, 322, 339, 425, 430, 493, 552, 553, 653, 745, 747, 748, 845, 946, 958, 960], "electrod": [30, 53, 94, 105, 106, 112, 146, 148, 151, 157, 162, 165, 168, 170, 177, 186, 188, 192, 193, 197, 214, 215, 219, 223, 227, 230, 232, 236, 238, 244, 256, 275, 278, 284, 285, 286, 289, 291, 292, 295, 302, 303, 304, 305, 307, 310, 314, 318, 319, 321, 330, 333, 334, 335, 336, 337, 338, 342, 344, 350, 382, 383, 386, 396, 398, 400, 401, 402, 403, 404, 405, 408, 425, 437, 445, 485, 492, 526, 537, 544, 552, 553, 559, 561, 563, 568, 574, 576, 584, 600, 604, 605, 616, 637, 638, 646, 653, 671, 673, 675, 704, 733, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 836, 844, 845, 862, 863, 866, 868, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908, 914, 916, 966], "over": [30, 31, 34, 35, 38, 47, 53, 54, 71, 72, 84, 85, 94, 97, 107, 108, 131, 132, 135, 137, 140, 141, 143, 151, 157, 162, 163, 164, 176, 177, 178, 186, 188, 189, 193, 196, 199, 202, 203, 219, 220, 228, 230, 233, 235, 238, 240, 246, 247, 253, 256, 257, 260, 261, 269, 271, 278, 283, 285, 286, 289, 303, 304, 309, 311, 312, 319, 320, 321, 322, 325, 327, 332, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 360, 361, 364, 377, 391, 413, 425, 431, 485, 492, 494, 496, 524, 527, 552, 553, 591, 607, 609, 612, 621, 622, 638, 642, 661, 677, 690, 703, 738, 739, 764, 776, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 807, 815, 828, 844, 859, 877, 878, 888, 893, 946, 959, 966], "occipit": [30, 73, 75, 196, 232, 241, 271, 319, 322, 723], "lobe": [30, 73, 162, 163, 207], "easier": [30, 167, 169, 171, 177, 178, 183, 199, 219, 224, 228, 230, 233, 234, 235, 236, 284, 292, 311, 327, 444, 951], "spot": [30, 228, 231, 260, 285, 308, 343], "area": [30, 31, 80, 97, 122, 144, 150, 162, 205, 219, 220, 224, 228, 233, 241, 246, 252, 256, 260, 271, 280, 292, 311, 322, 333, 334, 335, 336, 339, 552, 553, 658, 662, 671, 750, 789, 790, 791, 795, 796, 797, 798, 868, 870, 880, 882, 900], "dictionari": [30, 36, 53, 62, 82, 85, 122, 143, 163, 167, 168, 169, 171, 172, 176, 177, 178, 193, 194, 196, 216, 233, 235, 238, 241, 244, 245, 251, 274, 278, 292, 293, 310, 325, 327, 328, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 357, 366, 367, 368, 372, 380, 382, 394, 395, 410, 425, 429, 430, 436, 439, 440, 441, 442, 443, 445, 485, 487, 492, 496, 509, 512, 514, 517, 520, 521, 523, 524, 526, 528, 529, 547, 548, 549, 550, 551, 552, 553, 555, 588, 599, 604, 616, 638, 648, 650, 651, 653, 655, 658, 663, 664, 665, 696, 703, 708, 719, 721, 724, 730, 738, 775, 789, 790, 791, 795, 796, 797, 798, 831, 834, 844, 846, 869, 870, 876, 877, 879, 881, 886, 889, 891, 899, 905, 959, 966], "concentr": [30, 218, 234, 239, 252, 291, 490, 611, 612, 678, 683, 803, 806, 814, 878], "b11": 30, "ylim": [30, 33, 35, 45, 61, 65, 66, 72, 77, 85, 86, 127, 140, 178, 187, 223, 230, 232, 239, 240, 256, 266, 271, 274, 285, 294, 302, 335, 336, 870, 880, 884], "pretti": [30, 168, 171, 230, 233, 235, 946], "determin": [30, 48, 101, 109, 156, 168, 172, 178, 188, 193, 196, 198, 205, 218, 230, 232, 238, 244, 245, 246, 256, 259, 261, 282, 283, 284, 286, 292, 302, 306, 322, 327, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 352, 366, 367, 375, 382, 384, 412, 419, 425, 429, 430, 441, 442, 443, 458, 485, 491, 492, 493, 502, 518, 524, 528, 529, 547, 549, 550, 552, 553, 565, 580, 592, 596, 616, 638, 671, 674, 676, 681, 682, 704, 723, 781, 789, 790, 791, 795, 796, 797, 798, 812, 822, 824, 827, 844, 874, 876, 877, 882, 884, 885, 886, 887, 896, 903, 909, 932, 946, 959], "whether": [30, 39, 109, 168, 171, 172, 173, 198, 205, 207, 224, 228, 233, 234, 238, 271, 284, 285, 286, 306, 322, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 356, 366, 367, 382, 391, 392, 393, 394, 396, 425, 430, 435, 458, 465, 485, 492, 507, 518, 526, 544, 551, 552, 553, 555, 564, 572, 597, 605, 606, 607, 608, 609, 612, 614, 615, 616, 620, 621, 622, 637, 638, 639, 647, 653, 655, 656, 658, 665, 666, 667, 671, 674, 677, 691, 730, 733, 753, 754, 776, 777, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 805, 808, 844, 846, 854, 863, 867, 870, 872, 874, 875, 876, 877, 878, 880, 881, 884, 885, 889, 891, 893, 896, 898, 899, 900, 901, 902, 904, 906, 907, 908, 909, 912, 916, 946, 958], "stronger": [30, 168, 219, 258, 266, 335, 336, 880], "along": [30, 45, 72, 94, 143, 147, 163, 167, 169, 187, 193, 195, 197, 205, 223, 224, 227, 228, 232, 233, 236, 237, 244, 246, 247, 253, 264, 285, 288, 291, 300, 311, 314, 319, 321, 322, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 356, 485, 488, 492, 495, 496, 498, 525, 543, 544, 549, 552, 553, 637, 638, 693, 768, 769, 776, 777, 779, 780, 783, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 821, 823, 824, 825, 826, 827, 844, 846, 862, 863, 870, 876, 877, 878, 881, 885, 889, 898, 901, 902, 904, 906, 907, 908, 909, 951, 952], "phase_coh": 30, "sort": [30, 33, 41, 47, 53, 73, 122, 149, 151, 157, 164, 170, 187, 197, 256, 283, 288, 333, 334, 335, 336, 338, 343, 394, 425, 430, 493, 511, 514, 538, 569, 638, 711, 792, 877, 880, 882, 941, 960, 966], "2f": [30, 85, 184, 340, 341, 344, 347, 348, 349, 638, 844, 889, 904, 909], "c22": 30, "subplot": [30, 36, 37, 38, 39, 41, 45, 47, 48, 65, 67, 71, 73, 84, 95, 96, 97, 98, 99, 100, 109, 113, 118, 121, 124, 127, 132, 135, 140, 141, 142, 143, 144, 148, 150, 163, 164, 169, 171, 173, 178, 187, 197, 199, 203, 204, 207, 208, 210, 223, 224, 230, 231, 235, 238, 239, 240, 247, 253, 256, 257, 258, 259, 260, 261, 270, 271, 274, 275, 292, 295, 298, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 868, 869, 878, 879, 884, 885, 889, 894, 898, 901, 906, 908, 911], "figsiz": [30, 38, 41, 45, 48, 71, 73, 97, 100, 124, 140, 141, 142, 143, 148, 163, 171, 187, 199, 203, 210, 223, 230, 231, 235, 238, 239, 253, 256, 257, 259, 260, 261, 270, 271, 274, 638, 891, 892], "cmap": [30, 35, 36, 39, 41, 42, 45, 48, 67, 97, 128, 129, 135, 137, 140, 143, 144, 148, 150, 163, 170, 187, 209, 223, 224, 238, 256, 258, 259, 260, 261, 270, 308, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 855, 861, 863, 870, 872, 877, 878, 882, 885, 888, 889, 898, 901, 902, 906, 907, 908, 917], "magma": 30, "consider": [30, 108, 127, 178, 229, 230, 233, 240, 252, 261, 278, 285, 314, 322, 343, 659, 775, 959], "chosen": [30, 71, 164, 172, 178, 227, 230, 232, 233, 235, 269, 322, 327, 330, 333, 334, 335, 336, 338, 340, 341, 342, 344, 346, 347, 348, 349, 429, 485, 487, 492, 496, 498, 521, 523, 524, 543, 552, 553, 590, 613, 637, 638, 653, 674, 693, 741, 742, 776, 777, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 844, 862, 863, 872, 876, 878, 882, 885, 889, 892, 898, 899, 900, 901, 902, 906, 908], "test": [30, 34, 36, 39, 41, 42, 45, 52, 53, 118, 123, 126, 130, 140, 152, 156, 162, 167, 178, 192, 195, 198, 199, 216, 223, 224, 237, 238, 244, 257, 258, 259, 262, 263, 266, 267, 268, 271, 278, 281, 285, 287, 288, 289, 291, 293, 299, 301, 303, 308, 309, 310, 314, 319, 322, 333, 334, 335, 336, 338, 344, 345, 346, 358, 360, 366, 388, 431, 458, 488, 502, 506, 508, 524, 552, 553, 562, 583, 587, 604, 605, 613, 619, 635, 638, 665, 676, 703, 716, 718, 761, 767, 769, 771, 773, 776, 777, 778, 779, 780, 781, 782, 783, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 853, 867, 870, 878, 885, 892, 906, 946, 951, 953, 956, 966], "interpol": [30, 41, 50, 53, 87, 97, 105, 112, 114, 118, 121, 122, 123, 147, 150, 162, 163, 178, 204, 208, 216, 224, 233, 238, 241, 253, 256, 269, 282, 283, 284, 285, 286, 287, 288, 291, 292, 294, 295, 297, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 330, 333, 334, 335, 336, 342, 346, 348, 349, 485, 492, 519, 542, 552, 553, 637, 638, 653, 657, 661, 668, 675, 706, 738, 740, 741, 742, 754, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 832, 844, 846, 863, 878, 881, 885, 889, 898, 901, 906, 908, 959, 966], "miss": [30, 70, 96, 111, 150, 162, 178, 185, 186, 207, 210, 216, 218, 230, 236, 241, 271, 282, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 308, 309, 310, 311, 321, 333, 334, 335, 336, 338, 346, 386, 409, 459, 477, 491, 552, 553, 561, 568, 574, 661, 676, 775, 879, 880, 956, 959, 960], "furthermor": [30, 182, 202, 205, 217, 232, 318, 322], "mark": [30, 34, 37, 75, 102, 106, 110, 120, 121, 139, 148, 155, 162, 164, 169, 171, 177, 178, 193, 196, 197, 198, 205, 217, 218, 219, 229, 230, 233, 234, 236, 237, 238, 239, 244, 246, 247, 261, 274, 278, 280, 281, 282, 288, 292, 295, 300, 302, 304, 306, 307, 308, 309, 311, 319, 320, 321, 326, 328, 333, 334, 335, 336, 384, 443, 452, 460, 477, 478, 542, 544, 551, 552, 553, 637, 638, 643, 646, 652, 653, 657, 665, 675, 676, 684, 691, 700, 702, 730, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 840, 866, 876, 878, 885, 890, 892, 899, 900, 906], "exg": 30, "prefix": [30, 102, 182, 197, 202, 321, 325, 330, 333, 334, 335, 336, 342, 426, 427, 485, 492, 552, 553, 561, 568, 569, 637, 638, 653, 689, 700, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 885, 889, 898, 901, 906], "interpolate_bad": [30, 97, 106, 228, 285, 287, 288, 291, 292, 310, 322, 333, 334, 335, 336, 542, 552, 553], "reset_bad": [30, 106, 228, 322, 333, 334, 335, 336, 552, 553], "exg1": 30, "exg2": 30, "exg3": 30, "exg4": 30, "spline": [30, 97, 98, 106, 178, 228, 278, 282, 302, 310, 322, 333, 334, 335, 336, 552, 553, 647], "524face": 30, "To": [30, 31, 37, 44, 45, 48, 59, 70, 71, 115, 118, 122, 123, 141, 144, 150, 160, 164, 167, 169, 171, 173, 176, 177, 178, 183, 185, 186, 187, 188, 193, 195, 196, 197, 198, 199, 202, 205, 207, 211, 216, 218, 219, 220, 223, 224, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 244, 246, 247, 251, 253, 256, 258, 260, 261, 265, 266, 270, 274, 282, 292, 295, 300, 302, 303, 304, 311, 312, 316, 318, 319, 320, 322, 325, 327, 328, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 366, 367, 425, 429, 430, 491, 498, 509, 515, 516, 517, 518, 520, 526, 552, 553, 561, 566, 572, 585, 590, 594, 600, 638, 652, 655, 665, 667, 672, 674, 676, 691, 693, 708, 734, 738, 741, 742, 743, 749, 752, 753, 755, 776, 777, 778, 779, 780, 782, 789, 790, 791, 795, 796, 797, 798, 802, 805, 812, 822, 824, 827, 828, 842, 844, 863, 876, 889, 891, 893, 899, 910, 911, 938, 946, 949, 951, 952, 955, 956, 958, 960], "predict": [30, 36, 38, 39, 41, 42, 43, 46, 53, 68, 129, 164, 168, 203, 223, 224, 278, 295, 303, 319, 338, 366, 382, 398, 445, 488, 491, 495, 497, 502, 525, 553, 606, 613, 908, 966], "purpos": [30, 34, 37, 38, 47, 101, 141, 167, 168, 176, 183, 195, 207, 217, 227, 228, 229, 230, 233, 234, 236, 260, 264, 266, 271, 278, 312, 318, 319, 321, 333, 334, 449, 450, 451, 452, 454, 455, 456, 458, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 496, 498, 552, 553, 789, 791, 862, 876, 899, 948, 949, 959], "intercept": [30, 129, 774], "predictor_var": 30, "where": [30, 36, 39, 57, 71, 95, 97, 102, 108, 109, 110, 118, 122, 123, 129, 140, 164, 167, 168, 169, 171, 176, 178, 182, 187, 192, 193, 194, 195, 196, 197, 199, 202, 209, 210, 211, 216, 218, 219, 220, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 244, 246, 251, 252, 253, 256, 258, 260, 261, 264, 265, 266, 271, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 318, 319, 321, 322, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 346, 347, 348, 349, 389, 391, 392, 393, 405, 424, 444, 449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 492, 498, 500, 519, 521, 524, 526, 552, 553, 590, 613, 637, 638, 640, 647, 653, 655, 656, 657, 676, 739, 745, 746, 747, 748, 749, 751, 753, 754, 769, 770, 775, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 823, 824, 826, 827, 844, 850, 862, 863, 864, 867, 868, 869, 876, 877, 878, 885, 889, 898, 899, 900, 901, 906, 908, 912, 946, 953, 955, 956, 958], "func": [30, 311, 340, 341, 344, 347, 348, 349, 561, 568, 576, 584], "reg": [30, 34, 35, 38, 47, 60, 75, 207, 253, 280, 284, 288, 322, 366, 367, 485, 492, 493, 639], "design_matrix": [30, 168, 774], "25728": 30, "target": [30, 43, 46, 53, 75, 105, 112, 129, 156, 168, 188, 224, 231, 233, 256, 257, 271, 285, 299, 311, 333, 335, 336, 338, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 502, 511, 552, 566, 598, 635, 638, 639, 703, 966], "regressor": [30, 96, 129, 224, 256, 774], "getattr": [30, 812, 822], "_field": [30, 168], "beta": [30, 38, 45, 58, 59, 60, 122, 129, 138, 140, 141, 143, 164, 168, 256, 270, 333, 334, 335, 336, 552, 553, 691, 774, 793, 794, 799, 800, 878], "stderr": [30, 168, 774], "t_val": [30, 168, 257, 774], "p_val": [30, 129, 168, 258, 259, 281, 770, 774], "mlog10_p_val": [30, 168, 281, 774], "just": [30, 31, 54, 58, 59, 67, 68, 70, 74, 76, 85, 97, 102, 109, 110, 129, 131, 137, 141, 142, 143, 148, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 178, 183, 185, 187, 188, 189, 192, 193, 195, 196, 197, 198, 199, 204, 206, 207, 208, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 244, 245, 246, 247, 253, 257, 258, 261, 264, 265, 266, 270, 271, 292, 305, 307, 310, 311, 320, 322, 330, 333, 334, 335, 336, 338, 340, 341, 342, 344, 346, 347, 348, 349, 382, 485, 492, 519, 520, 552, 553, 569, 613, 637, 638, 648, 653, 675, 689, 700, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 840, 855, 863, 870, 876, 878, 880, 882, 885, 886, 889, 893, 896, 898, 899, 900, 901, 902, 906, 908, 916, 951, 960], "would": [30, 31, 45, 69, 70, 97, 101, 167, 170, 171, 177, 178, 182, 183, 187, 188, 199, 202, 208, 218, 219, 224, 227, 229, 230, 231, 232, 233, 234, 235, 238, 251, 256, 257, 258, 261, 264, 266, 271, 282, 283, 285, 287, 288, 291, 292, 293, 294, 295, 303, 304, 306, 307, 308, 309, 310, 312, 321, 322, 333, 334, 335, 336, 340, 341, 343, 344, 346, 347, 348, 349, 359, 366, 367, 425, 429, 430, 441, 442, 443, 452, 458, 477, 478, 485, 492, 506, 507, 508, 520, 528, 529, 535, 547, 549, 550, 552, 553, 568, 603, 616, 638, 649, 676, 725, 789, 790, 791, 795, 796, 797, 798, 844, 880, 885, 886, 899, 958], "higher": [30, 52, 64, 70, 80, 96, 102, 122, 168, 178, 211, 220, 224, 227, 229, 231, 233, 238, 252, 258, 261, 271, 285, 295, 311, 322, 343, 664, 676, 812, 822, 956, 957], "better": [30, 35, 45, 69, 87, 97, 122, 169, 173, 178, 210, 211, 223, 230, 232, 233, 238, 241, 256, 278, 282, 285, 286, 288, 291, 292, 293, 294, 303, 304, 310, 311, 314, 322, 335, 336, 340, 341, 344, 347, 348, 349, 484, 653, 672, 676, 810, 812, 822, 844, 904, 909, 951], "visibl": [30, 73, 199, 219, 230, 231, 237, 246, 247, 271, 274, 286, 289, 321, 333, 334, 335, 336, 552, 553, 638, 729, 789, 790, 791, 795, 796, 797, 798, 844, 876, 882, 893, 899, 914], "neg": [30, 45, 48, 65, 98, 140, 142, 171, 177, 178, 189, 216, 219, 231, 233, 240, 256, 264, 271, 281, 284, 289, 295, 304, 310, 319, 322, 330, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 347, 348, 349, 355, 376, 485, 491, 492, 497, 504, 513, 527, 552, 553, 578, 637, 638, 658, 667, 674, 747, 748, 773, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 865, 870, 876, 878, 885, 889, 898, 899, 901, 904, 906, 908, 910, 946], "around": [30, 34, 35, 75, 97, 101, 103, 110, 122, 140, 150, 162, 168, 169, 171, 173, 178, 192, 193, 198, 199, 207, 210, 219, 227, 228, 229, 230, 231, 232, 233, 234, 235, 239, 241, 244, 251, 271, 321, 328, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 429, 485, 492, 504, 509, 511, 513, 514, 526, 552, 553, 590, 598, 633, 638, 650, 651, 655, 656, 693, 703, 751, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 870, 876, 879, 882, 885, 886, 893, 899, 936, 958], "200": [30, 35, 38, 73, 85, 103, 108, 118, 120, 123, 127, 128, 137, 139, 142, 150, 158, 162, 163, 169, 172, 173, 178, 185, 196, 199, 206, 208, 210, 213, 219, 224, 229, 231, 234, 235, 237, 241, 251, 259, 260, 266, 270, 274, 278, 294, 318, 322, 412, 414, 418, 524, 552, 553, 611, 612, 638, 674, 959], "follow": [30, 50, 53, 58, 59, 60, 67, 68, 94, 96, 97, 101, 107, 122, 131, 135, 137, 141, 144, 156, 162, 164, 168, 171, 178, 182, 185, 187, 188, 189, 195, 197, 199, 205, 207, 216, 217, 218, 220, 224, 229, 230, 231, 232, 236, 238, 240, 244, 245, 246, 251, 253, 256, 258, 260, 264, 266, 275, 279, 280, 281, 282, 283, 287, 289, 290, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 313, 318, 319, 321, 322, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 356, 357, 366, 367, 372, 373, 425, 436, 442, 458, 477, 485, 509, 511, 512, 520, 521, 523, 524, 525, 529, 551, 552, 553, 554, 559, 561, 568, 600, 604, 621, 622, 638, 655, 658, 665, 676, 677, 706, 716, 734, 770, 772, 774, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 823, 826, 827, 831, 834, 840, 844, 846, 859, 870, 878, 883, 885, 906, 946, 949, 951, 952, 954, 956, 958, 960], "onset": [30, 34, 35, 59, 60, 101, 140, 145, 150, 162, 163, 164, 167, 171, 173, 193, 195, 219, 229, 230, 232, 241, 246, 271, 287, 288, 289, 291, 294, 309, 310, 319, 321, 326, 327, 333, 334, 425, 514, 526, 552, 553, 572, 641, 658, 690, 694, 801, 802, 803], "correspond": [30, 33, 42, 57, 74, 76, 88, 99, 101, 104, 115, 120, 122, 131, 140, 148, 164, 170, 171, 178, 182, 183, 185, 187, 195, 197, 199, 202, 207, 208, 209, 216, 219, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 244, 245, 246, 247, 258, 260, 261, 266, 271, 282, 283, 301, 304, 307, 311, 319, 321, 322, 326, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 358, 366, 367, 369, 371, 374, 382, 392, 393, 394, 395, 405, 425, 429, 430, 433, 441, 442, 443, 452, 458, 477, 478, 485, 486, 488, 489, 491, 492, 495, 497, 501, 509, 514, 528, 529, 530, 538, 547, 549, 550, 552, 553, 561, 563, 565, 568, 573, 576, 578, 584, 585, 590, 594, 596, 599, 601, 603, 614, 615, 616, 637, 638, 639, 653, 655, 665, 666, 671, 701, 702, 705, 716, 729, 733, 738, 741, 754, 769, 770, 773, 774, 775, 776, 777, 779, 780, 781, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 808, 809, 815, 823, 826, 834, 835, 837, 844, 848, 855, 857, 859, 863, 864, 865, 870, 876, 877, 878, 880, 882, 884, 885, 886, 889, 898, 899, 901, 904, 906, 908, 909, 910, 946, 958], "unit": [30, 34, 40, 45, 47, 58, 110, 128, 131, 162, 163, 168, 183, 187, 195, 196, 207, 213, 217, 218, 220, 228, 233, 235, 238, 244, 253, 258, 259, 261, 269, 270, 274, 278, 282, 283, 285, 286, 288, 289, 291, 292, 293, 294, 295, 302, 305, 306, 307, 309, 310, 311, 321, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 366, 367, 375, 383, 400, 405, 407, 409, 430, 436, 445, 485, 487, 492, 494, 496, 506, 521, 523, 524, 529, 551, 552, 553, 555, 561, 563, 568, 569, 578, 637, 638, 649, 655, 659, 663, 665, 676, 689, 700, 739, 781, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 835, 837, 844, 855, 863, 870, 877, 878, 880, 882, 885, 886, 889, 898, 900, 901, 906, 907, 908, 914, 917, 965], "keep": [30, 37, 38, 53, 57, 87, 115, 132, 138, 139, 140, 164, 169, 172, 176, 178, 187, 188, 189, 192, 193, 196, 208, 228, 229, 230, 231, 232, 233, 244, 245, 246, 251, 258, 288, 303, 304, 311, 312, 320, 325, 330, 333, 334, 335, 336, 360, 361, 364, 367, 443, 491, 509, 552, 553, 564, 607, 609, 612, 638, 659, 677, 789, 791, 792, 795, 797, 808, 821, 823, 824, 825, 826, 827, 960], "avoid": [30, 34, 35, 54, 66, 85, 97, 115, 142, 164, 167, 178, 188, 193, 194, 196, 199, 210, 217, 219, 227, 230, 231, 235, 244, 246, 256, 269, 278, 280, 282, 286, 287, 288, 289, 291, 292, 295, 301, 303, 304, 307, 309, 310, 312, 320, 322, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 344, 347, 348, 349, 425, 502, 514, 552, 553, 561, 568, 572, 576, 618, 638, 710, 716, 749, 752, 755, 771, 782, 783, 789, 790, 791, 795, 796, 797, 798, 844, 904, 909, 946, 951, 956], "convers": [30, 183, 195, 217, 219, 220, 228, 230, 231, 286, 288, 291, 294, 300, 303, 306, 322, 327, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 552, 553, 578, 659, 685, 776, 777, 779, 780, 789, 790, 791, 795, 796, 797, 798], "micro": [30, 53, 105, 307, 333, 334, 335, 336, 552, 553], "volt": [30, 168, 229, 233, 235, 251, 294, 322, 333, 334, 335, 336, 552, 553], "topomap_arg": [30, 97, 129, 224, 239, 257, 287, 288, 335, 336, 638, 789, 790, 791, 795, 796, 797, 798, 866, 883, 891], "set_ylabel": [30, 38, 39, 47, 48, 71, 97, 124, 132, 140, 141, 143, 160, 171, 199, 210, 224, 230, 234, 259, 260, 261, 271, 275], "systemat": [30, 168, 189, 230, 278, 301, 488, 657, 946], "larg": [30, 36, 54, 97, 103, 107, 110, 111, 142, 148, 163, 169, 177, 178, 194, 198, 199, 205, 213, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 247, 256, 261, 264, 271, 278, 287, 291, 292, 293, 294, 295, 304, 306, 310, 320, 333, 334, 339, 366, 425, 429, 430, 434, 494, 524, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 597, 618, 638, 640, 736, 776, 777, 779, 780, 844, 864, 911], "consist": [30, 36, 69, 97, 104, 140, 152, 184, 185, 188, 195, 197, 202, 210, 217, 218, 219, 224, 228, 229, 230, 232, 233, 237, 256, 258, 259, 278, 282, 283, 284, 285, 286, 289, 291, 292, 293, 295, 301, 302, 304, 305, 306, 310, 312, 318, 319, 321, 322, 325, 333, 334, 335, 336, 346, 350, 391, 440, 552, 553, 602, 638, 646, 653, 657, 741, 742, 774, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803], "guillaum": [30, 41, 115, 178, 184, 224, 230, 256, 278, 283, 288, 289, 291, 292, 293, 294, 295, 303, 304, 319, 639, 782, 783], "rousselet": [30, 178, 230, 278, 319], "2016": [30, 45, 72, 110, 141, 155, 223, 230, 278, 315, 319, 460, 461, 491, 549, 550, 638], "7488": [30, 278], "1556": [30, 278], "carl": [30, 155, 278, 319, 460], "gaspar": [30, 278, 319], "cyril": [30, 278, 319], "pernet": [30, 278, 319], "jess": [30, 278, 319], "husk": [30, 278, 319], "patrick": [30, 278, 319, 322], "j": [30, 34, 38, 39, 44, 45, 47, 57, 61, 68, 70, 85, 86, 92, 97, 98, 102, 103, 110, 122, 127, 129, 141, 149, 155, 164, 171, 178, 182, 187, 189, 199, 205, 207, 223, 224, 230, 232, 233, 234, 235, 240, 256, 257, 261, 269, 278, 280, 282, 283, 287, 294, 310, 316, 319, 322, 325, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 347, 348, 349, 366, 369, 371, 425, 431, 452, 461, 466, 478, 485, 489, 491, 492, 493, 503, 505, 547, 550, 552, 553, 605, 606, 613, 616, 620, 637, 638, 646, 647, 652, 653, 664, 674, 680, 683, 746, 749, 751, 775, 776, 777, 779, 780, 782, 783, 789, 791, 793, 795, 797, 799, 808, 810, 812, 814, 822, 825, 828, 946], "bennett": [30, 278, 319], "allison": [30, 278, 319], "sekul": [30, 278, 319], "healthi": [30, 278, 319, 477, 478], "sensit": [30, 31, 33, 49, 51, 53, 109, 151, 157, 178, 185, 205, 231, 235, 240, 260, 266, 278, 299, 300, 302, 303, 312, 319, 333, 334, 335, 336, 337, 338, 343, 344, 346, 435, 529, 552, 553, 635, 638, 708, 714, 729, 757, 776, 777, 779, 780, 844, 966], "frontier": [30, 36, 45, 178, 223, 230, 278, 316, 319, 491, 643], "psychologi": [30, 36, 178, 230, 278, 319, 771], "2010": [30, 122, 145, 182, 223, 230, 278, 279, 319, 333, 334, 366, 425, 485, 795, 825, 828], "3389": [30, 36, 45, 178, 223, 230, 278, 316, 319, 491, 643], "fpsyg": [30, 178, 230, 278, 319], "00019": [30, 278, 319], "studi": [30, 59, 97, 149, 171, 178, 188, 205, 207, 230, 232, 238, 253, 258, 260, 261, 278, 287, 318, 321, 322, 359, 366, 477, 478, 509], "bmc": [30, 42, 224, 278, 486, 501], "98": [30, 33, 39, 41, 45, 59, 61, 68, 70, 73, 108, 140, 142, 145, 150, 152, 164, 186, 196, 204, 207, 218, 219, 223, 224, 235, 237, 240, 253, 256, 257, 258, 260, 261, 266, 278, 359, 366, 413, 415, 676, 776, 777, 779, 780], "2008": [30, 36, 61, 70, 178, 197, 207, 233, 253, 256, 257, 278, 345, 366, 367, 408, 431, 485, 506, 524, 547, 620, 638, 749, 776, 777, 779, 780], "1186": [30, 42, 224, 237, 278, 486, 501], "1471": [30, 42, 223, 224, 278, 486, 501], "2202": [30, 42, 224, 278, 486, 501], "375": [30, 32, 99, 108, 122, 150, 196, 227, 229, 235, 237, 261, 966], "585": [30, 224, 261, 278], "limo_data": [30, 32, 966], "electr": [31, 193, 207, 227, 235, 236, 278, 318, 321, 366, 367, 638, 646, 866, 953], "deliv": 31, "left": [31, 36, 37, 39, 41, 49, 51, 53, 56, 57, 61, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 78, 80, 81, 83, 84, 85, 87, 88, 94, 98, 100, 101, 106, 107, 110, 113, 114, 122, 135, 140, 144, 147, 148, 153, 156, 159, 161, 162, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 182, 183, 185, 187, 193, 195, 199, 202, 205, 207, 208, 209, 219, 220, 223, 224, 232, 233, 234, 235, 236, 238, 245, 246, 247, 252, 253, 257, 260, 264, 265, 266, 269, 274, 275, 283, 286, 288, 307, 308, 309, 319, 321, 322, 326, 327, 329, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 382, 384, 394, 395, 405, 406, 431, 452, 458, 485, 492, 507, 509, 512, 519, 543, 550, 552, 553, 572, 577, 590, 603, 637, 638, 658, 663, 723, 728, 737, 738, 741, 752, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862, 870, 876, 877, 878, 880, 882, 884, 885, 886, 889, 897, 898, 899, 900, 901, 906, 908, 910, 914, 966], "wrist": 31, "somatosensori": [31, 58, 60, 72, 141, 270, 278, 285, 293, 301, 465], "nine": [31, 169], "quspin": [31, 314], "serf": 31, "side": [31, 45, 58, 71, 97, 168, 183, 193, 232, 236, 264, 271, 289, 320, 322, 330, 331, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 485, 492, 552, 553, 637, 638, 653, 665, 676, 774, 776, 777, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 844, 863, 872, 874, 876, 878, 885, 889, 892, 898, 901, 904, 906, 908], "somatomotor": 31, "custom": [31, 53, 62, 82, 94, 137, 148, 150, 151, 155, 157, 167, 169, 172, 176, 177, 178, 194, 220, 229, 230, 231, 232, 233, 235, 236, 241, 251, 261, 271, 283, 284, 285, 287, 292, 295, 301, 302, 303, 305, 306, 307, 310, 311, 318, 319, 320, 321, 325, 330, 333, 334, 335, 336, 337, 338, 340, 341, 343, 344, 347, 348, 349, 391, 395, 397, 458, 552, 553, 635, 638, 697, 706, 708, 769, 799, 838, 844, 859, 864, 865, 876, 883, 893, 899, 904, 905, 909, 910, 946, 966], "opm_sampl": [31, 137], "subjects_dir": [31, 33, 37, 48, 50, 52, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 95, 108, 118, 122, 123, 132, 137, 143, 144, 146, 153, 154, 155, 158, 161, 162, 163, 177, 182, 183, 184, 185, 186, 187, 188, 193, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 218, 219, 224, 239, 240, 252, 253, 264, 265, 266, 274, 275, 284, 295, 318, 322, 325, 331, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 373, 377, 378, 379, 382, 431, 436, 437, 438, 444, 457, 459, 460, 461, 462, 504, 535, 537, 539, 541, 543, 544, 545, 546, 590, 594, 596, 624, 625, 672, 693, 711, 713, 720, 725, 726, 727, 728, 737, 738, 752, 755, 766, 784, 785, 836, 843, 844, 862, 864, 874, 904, 909, 910, 941, 958], "raw_fnam": [31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 52, 58, 59, 60, 68, 71, 72, 75, 96, 97, 99, 100, 102, 104, 109, 110, 115, 121, 124, 125, 127, 128, 135, 136, 138, 139, 141, 145, 147, 149, 159, 160, 168, 179, 183, 185, 186, 189, 204, 207, 210, 212, 224, 232, 253, 258, 259, 260, 261, 264, 266, 270, 319, 322], "opm_sef_raw": 31, "bem_fnam": [31, 71, 95, 137], "5120": [31, 33, 45, 52, 67, 71, 76, 95, 137, 177, 185, 186, 203, 208, 209, 240, 275, 318, 325, 484, 594, 600, 754], "sol": [31, 33, 48, 52, 67, 71, 76, 95, 137, 185, 186, 203, 208, 209, 240, 318, 325, 337, 600, 754], "fwd_fname": [31, 48, 57, 61, 66, 72, 77, 85, 86, 95, 118, 120, 121, 122, 123, 207, 219, 253], "fwd": [31, 37, 48, 52, 57, 58, 59, 60, 61, 66, 68, 69, 71, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 118, 120, 121, 122, 123, 137, 158, 185, 186, 199, 202, 203, 204, 205, 206, 207, 209, 219, 224, 240, 252, 253, 318, 322, 325, 337, 344, 353, 354, 355, 435, 519, 531, 532, 599, 600, 708, 729, 753, 754, 844, 862, 938], "coil_def_fnam": 31, "coil_def": [31, 137, 319, 322], "dat": [31, 137, 238, 291, 292, 319, 322, 402, 567, 585, 649, 665, 676, 687, 692], "h_trans_bandwidth": [31, 47, 141, 142, 219, 230, 239, 283, 302, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 552, 553, 680], "notch_width": [31, 240, 524, 552, 553], "threshold": [31, 56, 60, 64, 102, 109, 124, 140, 148, 172, 178, 192, 193, 198, 199, 209, 211, 216, 219, 228, 229, 233, 235, 238, 258, 259, 260, 261, 262, 263, 264, 265, 266, 278, 284, 285, 286, 287, 292, 295, 298, 299, 300, 301, 302, 304, 318, 322, 325, 328, 333, 334, 335, 336, 338, 378, 388, 394, 424, 428, 429, 524, 552, 553, 572, 578, 620, 638, 640, 643, 650, 653, 655, 656, 664, 665, 666, 667, 669, 671, 681, 699, 736, 745, 746, 747, 748, 749, 750, 751, 772, 773, 776, 777, 779, 780, 781, 795, 844, 870, 875, 876, 892, 966], "larger": [31, 75, 85, 97, 177, 206, 224, 227, 230, 232, 238, 247, 258, 271, 289, 312, 322, 333, 334, 343, 348, 349, 529, 552, 553, 572, 640, 667, 685, 784, 824, 825, 827, 828, 876, 899, 907, 910], "squid": [31, 137, 240, 278, 319, 321, 322], "257": [31, 143, 150, 196, 197, 237, 256, 319], "mask": [31, 54, 57, 109, 124, 128, 129, 140, 148, 169, 212, 230, 234, 252, 256, 257, 258, 259, 260, 261, 280, 283, 285, 286, 292, 293, 301, 302, 326, 330, 333, 334, 335, 336, 342, 485, 491, 492, 526, 552, 553, 561, 637, 638, 653, 703, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 882, 885, 889, 898, 901, 906, 908, 946], "mask_typ": [31, 212, 283, 285, 326, 526, 561, 703], "error": [31, 36, 39, 64, 68, 80, 81, 118, 121, 137, 142, 161, 162, 163, 164, 167, 171, 176, 179, 184, 189, 198, 199, 208, 210, 212, 213, 216, 223, 224, 229, 230, 233, 236, 240, 241, 256, 257, 260, 278, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 319, 322, 328, 333, 334, 335, 336, 338, 339, 340, 341, 344, 347, 348, 349, 353, 354, 386, 409, 419, 420, 425, 429, 432, 434, 436, 441, 442, 477, 504, 519, 520, 532, 533, 535, 552, 553, 569, 574, 620, 638, 649, 658, 665, 675, 676, 694, 696, 700, 725, 727, 735, 746, 749, 751, 767, 773, 774, 778, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 841, 842, 844, 877, 879, 890, 937, 939, 946, 952, 958, 961], "suppress": [31, 39, 53, 64, 75, 105, 111, 112, 163, 172, 177, 178, 198, 207, 211, 216, 227, 228, 230, 231, 232, 235, 240, 278, 289, 295, 304, 305, 307, 310, 319, 321, 322, 325, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 347, 348, 349, 412, 414, 418, 435, 520, 521, 523, 524, 552, 553, 635, 636, 654, 697, 708, 711, 734, 753, 755, 883, 966], "about": [31, 39, 45, 53, 60, 69, 70, 97, 102, 122, 129, 142, 167, 168, 170, 171, 173, 176, 178, 182, 187, 189, 193, 195, 196, 199, 202, 205, 211, 213, 216, 217, 218, 219, 220, 223, 224, 228, 230, 231, 233, 234, 238, 239, 244, 245, 246, 252, 253, 256, 258, 282, 285, 287, 289, 292, 293, 295, 299, 304, 306, 310, 311, 312, 313, 314, 318, 319, 321, 323, 325, 326, 328, 330, 332, 333, 334, 335, 336, 338, 342, 343, 344, 346, 351, 353, 354, 366, 367, 368, 375, 376, 380, 381, 388, 389, 390, 394, 396, 397, 410, 413, 415, 420, 429, 438, 441, 442, 443, 445, 485, 487, 492, 493, 494, 504, 509, 526, 529, 536, 551, 552, 553, 554, 558, 587, 589, 593, 600, 601, 606, 616, 634, 635, 638, 649, 652, 659, 672, 681, 682, 703, 723, 724, 753, 754, 757, 775, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 823, 824, 826, 827, 833, 844, 846, 855, 859, 862, 866, 871, 872, 881, 888, 898, 902, 946, 956], "caus": [31, 39, 70, 97, 169, 178, 188, 227, 228, 229, 230, 231, 234, 238, 240, 241, 246, 282, 283, 286, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 310, 318, 330, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 552, 553, 583, 638, 841, 880, 885, 953], "alias": [31, 39, 189, 208, 231, 285, 294, 328, 332, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 498, 552, 553, 655, 656, 789, 790, 791, 795, 796, 797, 798, 821, 823, 824, 825, 826, 827, 876, 899, 912, 946], "ideal": [31, 97, 136, 160, 162, 171, 178, 197, 230, 232, 235, 236, 257, 271, 311, 321, 322, 382, 887, 894, 946], "instead": [31, 69, 94, 102, 132, 142, 148, 163, 169, 170, 173, 176, 177, 178, 183, 185, 187, 188, 193, 195, 196, 197, 198, 199, 224, 228, 229, 230, 231, 233, 234, 238, 240, 244, 245, 247, 253, 256, 264, 265, 266, 269, 270, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 318, 319, 320, 322, 325, 328, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 358, 359, 360, 361, 364, 366, 377, 379, 382, 394, 424, 425, 430, 485, 492, 514, 515, 516, 517, 518, 519, 526, 533, 536, 541, 551, 552, 553, 607, 609, 612, 638, 639, 640, 683, 722, 733, 738, 753, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 823, 824, 825, 826, 827, 828, 844, 847, 870, 876, 878, 880, 885, 886, 893, 898, 899, 908, 914, 916, 951, 952, 956, 960], "isotrak": [31, 68, 129, 137, 152, 170, 189, 199, 213, 235, 237, 257, 322, 325, 407], "700999": 31, "700": [31, 45, 108, 119, 143, 156, 237, 812, 822, 844, 966], "999": [31, 60, 88, 93, 101, 104, 107, 111, 120, 124, 137, 139, 152, 158, 169, 171, 186, 195, 199, 210, 233, 234, 236, 237, 238, 261, 650, 655, 666, 669, 966], "lowpass": [31, 37, 98, 100, 101, 104, 108, 109, 110, 111, 118, 121, 168, 173, 178, 193, 194, 195, 196, 213, 219, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 274, 282, 287, 288, 289, 293, 294, 302, 304, 325, 332, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 520, 552, 553, 580, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 876, 899, 900], "331": [31, 33, 60, 111, 140, 142, 150, 196, 213, 230, 237, 238, 256], "48": [31, 33, 37, 38, 45, 47, 54, 61, 71, 72, 73, 108, 122, 131, 136, 137, 140, 142, 150, 164, 172, 178, 184, 195, 196, 198, 223, 224, 237, 246, 256, 257, 258, 260, 261, 264, 266, 278, 280], "initi": [31, 33, 42, 45, 47, 67, 69, 70, 97, 121, 124, 137, 140, 171, 176, 178, 183, 195, 207, 212, 219, 233, 240, 244, 251, 256, 257, 258, 259, 260, 261, 264, 265, 266, 271, 279, 282, 283, 287, 289, 291, 293, 294, 301, 302, 303, 305, 306, 311, 312, 322, 324, 325, 331, 333, 334, 339, 340, 341, 343, 344, 345, 347, 348, 349, 445, 447, 547, 552, 553, 560, 582, 590, 638, 674, 683, 685, 693, 741, 742, 743, 752, 753, 755, 768, 776, 777, 778, 779, 780, 795, 834, 844, 874, 876, 890, 893, 899, 904, 909, 910, 959], "initial_valu": [31, 33, 121, 137, 212, 303], "initial_ev": [31, 33, 118, 121, 137, 212, 253, 286, 526], "201": [31, 71, 150, 163, 196, 203, 208, 210, 237, 256, 261, 266, 274], "10251": 31, "examin": [31, 60, 73, 102, 163, 169, 172, 173, 178, 187, 193, 204, 205, 233, 244, 246, 311, 946], "co": [31, 48, 95, 184, 230, 238, 251, 278, 319, 321, 322, 412, 511], "registr": [31, 69, 70, 161, 184, 207, 278, 295, 319, 322, 345, 431, 673, 832, 833, 834, 958], "equat": [31, 162, 183, 223, 224, 234, 278, 314, 322, 333, 334, 506, 649, 795, 825, 828], "mi": [31, 319], "defin": [31, 34, 35, 36, 38, 44, 45, 47, 53, 57, 59, 69, 70, 87, 88, 104, 105, 112, 122, 123, 132, 135, 139, 142, 148, 150, 156, 163, 167, 168, 169, 171, 178, 182, 185, 187, 189, 190, 192, 194, 195, 197, 199, 202, 205, 207, 209, 218, 219, 223, 224, 229, 230, 234, 239, 241, 253, 259, 260, 261, 264, 266, 270, 271, 278, 282, 283, 289, 292, 294, 298, 299, 301, 308, 311, 312, 318, 319, 321, 322, 325, 326, 330, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 353, 354, 359, 366, 367, 382, 387, 390, 404, 405, 425, 431, 435, 458, 464, 485, 491, 492, 510, 511, 514, 518, 520, 540, 543, 552, 553, 559, 565, 588, 590, 591, 599, 605, 606, 607, 608, 609, 612, 616, 621, 622, 624, 635, 637, 638, 639, 641, 642, 652, 653, 663, 664, 674, 693, 698, 703, 738, 741, 742, 743, 746, 749, 751, 752, 753, 754, 755, 762, 765, 776, 777, 778, 779, 780, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 806, 807, 810, 812, 822, 823, 824, 826, 827, 844, 850, 863, 867, 870, 877, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908, 909, 958, 966], "lpa": [31, 163, 183, 187, 294, 319, 321, 376, 382, 395, 406, 416, 436, 438, 504, 560], "nasion": [31, 183, 184, 187, 197, 284, 294, 319, 321, 322, 376, 382, 395, 405, 406, 416, 436, 438, 504, 742], "rpa": [31, 163, 183, 187, 294, 319, 321, 376, 382, 395, 406, 416, 436, 438, 504, 560], "fine": [31, 208, 216, 238, 271, 281, 284, 338, 506, 648, 649, 665, 676, 687, 692], "analys": [31, 37, 53, 57, 67, 96, 126, 130, 144, 162, 170, 173, 177, 178, 185, 187, 220, 224, 228, 234, 235, 244, 257, 271, 278, 289, 292, 314, 319, 322, 335, 336, 552, 553, 699, 773, 774, 870, 882, 959, 966], "must": [31, 44, 58, 69, 70, 73, 87, 110, 156, 162, 171, 173, 183, 194, 196, 198, 199, 208, 211, 216, 218, 227, 228, 229, 233, 235, 238, 241, 246, 251, 256, 258, 260, 261, 264, 266, 271, 274, 310, 312, 318, 319, 322, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 352, 355, 360, 366, 367, 382, 384, 385, 388, 391, 395, 411, 412, 414, 418, 425, 429, 430, 431, 436, 441, 442, 443, 458, 464, 467, 484, 485, 491, 492, 493, 497, 500, 501, 502, 504, 509, 514, 517, 519, 526, 528, 529, 547, 549, 550, 551, 552, 553, 561, 568, 572, 574, 576, 578, 588, 592, 597, 598, 599, 614, 615, 616, 637, 638, 640, 649, 651, 653, 654, 655, 659, 660, 665, 672, 676, 699, 702, 730, 733, 738, 739, 750, 754, 755, 757, 759, 760, 763, 771, 774, 775, 776, 777, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 811, 815, 819, 823, 826, 844, 846, 848, 850, 855, 862, 863, 865, 869, 870, 874, 876, 877, 878, 880, 881, 882, 884, 885, 886, 887, 889, 893, 894, 896, 898, 899, 900, 901, 902, 904, 907, 908, 909, 910, 946, 956], "temporari": [31, 178, 199, 325, 338, 731, 853], "src": [31, 33, 48, 50, 52, 54, 56, 57, 61, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 85, 87, 95, 118, 120, 121, 122, 123, 137, 162, 163, 183, 185, 186, 187, 205, 207, 208, 209, 219, 236, 240, 252, 264, 265, 266, 287, 292, 310, 318, 325, 337, 339, 340, 341, 344, 346, 347, 348, 349, 351, 367, 431, 519, 539, 548, 591, 592, 600, 614, 615, 618, 620, 625, 718, 728, 737, 738, 739, 746, 749, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 784, 785, 844, 862, 864, 904, 905, 909, 910, 943], "orient": [31, 33, 37, 48, 52, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 107, 118, 120, 121, 122, 123, 132, 135, 136, 137, 138, 144, 153, 158, 183, 185, 186, 187, 192, 193, 198, 199, 202, 203, 204, 207, 208, 209, 210, 214, 215, 216, 219, 224, 236, 238, 240, 252, 253, 256, 264, 266, 278, 285, 286, 287, 288, 289, 291, 292, 294, 299, 300, 304, 305, 306, 308, 314, 318, 330, 331, 332, 335, 337, 338, 340, 341, 344, 347, 348, 349, 353, 354, 366, 367, 368, 435, 505, 519, 528, 529, 530, 544, 547, 549, 550, 573, 599, 600, 604, 605, 606, 607, 608, 609, 611, 612, 614, 615, 616, 617, 620, 621, 622, 687, 697, 698, 701, 705, 706, 708, 721, 737, 741, 753, 754, 844, 854, 862, 864, 865, 874, 914, 938, 948, 966], "later": [31, 37, 45, 58, 64, 69, 73, 96, 101, 129, 137, 163, 167, 168, 169, 171, 176, 178, 189, 199, 202, 204, 207, 208, 217, 219, 227, 228, 229, 230, 233, 234, 235, 236, 240, 241, 244, 245, 246, 247, 251, 264, 265, 271, 274, 278, 288, 293, 311, 319, 320, 322, 328, 333, 334, 335, 336, 341, 343, 345, 347, 350, 431, 527, 552, 553, 638, 700, 702, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 829, 844, 909, 956, 958], "force_fix": [31, 73, 74, 75, 80, 81, 95, 185, 252, 285, 435, 616], "pial": [31, 143, 153, 162, 163, 182, 187, 208, 295, 303, 306, 307, 310, 331, 346, 624, 711, 784, 844, 862, 874], "focalpoint": [31, 50, 78, 137, 144, 153, 162, 163, 183, 184, 185, 186, 187, 205, 253, 295, 844, 914], "04": [31, 45, 46, 50, 57, 60, 61, 67, 76, 82, 97, 98, 100, 111, 112, 118, 121, 123, 128, 131, 136, 152, 153, 157, 168, 185, 198, 210, 223, 224, 228, 229, 237, 239, 256, 257, 258, 260, 261, 263, 266, 274, 278, 291, 315, 322, 461, 506, 596, 601, 638, 676, 746, 751, 955, 966], "load": [31, 33, 37, 39, 40, 50, 52, 54, 55, 56, 58, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 95, 98, 101, 103, 107, 108, 109, 120, 121, 122, 124, 125, 127, 128, 129, 131, 132, 135, 137, 138, 140, 141, 145, 147, 148, 149, 152, 154, 156, 162, 169, 170, 172, 177, 178, 179, 183, 185, 187, 188, 189, 192, 194, 195, 196, 197, 198, 199, 203, 204, 207, 208, 209, 210, 211, 216, 217, 219, 220, 221, 224, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 245, 246, 247, 248, 256, 257, 258, 259, 260, 264, 265, 266, 269, 271, 274, 275, 284, 285, 286, 288, 291, 292, 295, 298, 303, 304, 305, 307, 308, 309, 310, 319, 320, 321, 325, 328, 329, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 383, 388, 392, 399, 430, 432, 447, 535, 536, 552, 553, 560, 561, 568, 573, 574, 582, 596, 599, 600, 616, 627, 638, 640, 650, 689, 699, 701, 705, 706, 708, 710, 716, 717, 719, 754, 787, 789, 795, 796, 817, 818, 829, 862, 876, 880, 884, 886, 893, 899, 938], "three": [31, 33, 57, 71, 101, 122, 131, 137, 148, 169, 172, 178, 183, 185, 186, 188, 195, 205, 209, 216, 217, 220, 227, 228, 231, 233, 234, 235, 244, 246, 247, 251, 256, 269, 271, 289, 291, 311, 319, 322, 325, 327, 330, 331, 333, 334, 335, 336, 338, 341, 342, 347, 349, 366, 367, 377, 378, 379, 394, 485, 492, 543, 547, 552, 553, 594, 614, 615, 637, 638, 648, 653, 687, 719, 722, 738, 741, 770, 772, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 834, 844, 863, 874, 876, 878, 885, 887, 889, 897, 898, 899, 901, 906, 908, 939, 944, 946], "colloc": [31, 33, 52, 67, 71, 76, 137, 185, 186, 203, 209, 240, 291, 595], "patch": [31, 33, 37, 48, 54, 55, 57, 60, 61, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 118, 120, 121, 122, 123, 132, 135, 136, 137, 138, 153, 158, 183, 185, 187, 193, 199, 204, 205, 206, 208, 209, 219, 224, 240, 252, 253, 264, 266, 274, 282, 285, 291, 299, 301, 308, 325, 330, 333, 334, 335, 336, 341, 342, 346, 347, 349, 351, 353, 354, 435, 485, 492, 552, 553, 605, 606, 607, 608, 609, 612, 616, 621, 622, 637, 638, 653, 696, 718, 737, 753, 754, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "3523": [31, 48, 57, 58, 59, 60, 61, 66, 68, 69, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 118, 120, 121, 122, 123, 158, 199, 204, 205, 206, 207, 219, 224, 252, 253], "8196": [31, 33, 209, 219, 240], "free": [31, 33, 48, 52, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 108, 118, 120, 121, 122, 123, 137, 158, 167, 178, 185, 186, 193, 199, 203, 204, 205, 207, 209, 219, 224, 236, 238, 240, 241, 252, 253, 257, 261, 278, 285, 286, 292, 299, 311, 312, 318, 319, 322, 331, 333, 334, 337, 366, 367, 368, 446, 528, 529, 530, 547, 549, 550, 605, 606, 607, 608, 609, 612, 616, 620, 621, 622, 647, 708, 729, 733, 776, 777, 779, 780, 938, 956, 958, 959], "frame": [31, 37, 48, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 107, 118, 120, 121, 122, 123, 132, 135, 136, 138, 140, 150, 153, 158, 162, 163, 167, 178, 186, 190, 191, 192, 193, 197, 199, 204, 205, 206, 207, 208, 209, 210, 211, 218, 219, 224, 238, 240, 252, 253, 264, 266, 282, 286, 289, 291, 292, 293, 294, 295, 298, 302, 304, 305, 312, 319, 321, 322, 325, 331, 333, 334, 335, 336, 337, 338, 346, 372, 373, 382, 386, 395, 400, 438, 462, 504, 544, 546, 552, 553, 557, 564, 586, 588, 596, 601, 649, 665, 676, 718, 719, 721, 735, 738, 819, 831, 839, 841, 844, 862, 874, 914, 920, 966], "emploi": [31, 33, 37, 48, 52, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 80, 81, 84, 85, 95, 118, 120, 122, 137, 185, 186, 203, 204, 205, 206, 209, 216, 217, 219, 224, 240, 253, 271, 312, 318, 319, 322, 637, 770], "rotat": [31, 33, 36, 41, 45, 48, 60, 61, 66, 67, 68, 70, 72, 73, 74, 75, 80, 81, 84, 85, 95, 107, 118, 120, 122, 137, 183, 185, 199, 204, 205, 206, 207, 209, 219, 220, 223, 224, 230, 232, 240, 253, 304, 322, 325, 335, 336, 338, 366, 367, 421, 436, 441, 506, 544, 642, 648, 676, 834, 835, 837, 844, 846, 862, 881, 951, 958], "convert": [31, 33, 48, 53, 60, 61, 66, 67, 68, 72, 73, 74, 75, 80, 81, 84, 85, 95, 101, 103, 118, 120, 122, 137, 140, 150, 151, 157, 163, 164, 167, 168, 169, 170, 171, 176, 177, 178, 183, 185, 187, 188, 196, 198, 204, 205, 206, 209, 216, 217, 218, 219, 220, 224, 229, 230, 234, 240, 241, 244, 246, 252, 253, 257, 261, 264, 265, 266, 270, 283, 284, 286, 287, 288, 289, 291, 295, 303, 304, 310, 311, 319, 322, 327, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 344, 347, 348, 349, 352, 359, 373, 382, 383, 408, 421, 435, 437, 487, 491, 496, 497, 500, 514, 521, 523, 524, 541, 545, 546, 548, 552, 553, 564, 574, 578, 592, 599, 659, 663, 678, 679, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 835, 837, 843, 845, 849, 862, 914, 916, 953, 956, 959, 966], "unknown": [31, 72, 98, 100, 101, 104, 110, 118, 121, 137, 168, 173, 178, 194, 195, 196, 208, 227, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 274, 286, 289, 295, 304, 305, 322, 338, 395, 400, 547, 552, 553, 561, 568, 586, 588, 831, 899, 932, 941], "deriv": [31, 58, 59, 60, 72, 98, 137, 152, 155, 167, 171, 176, 183, 195, 213, 228, 240, 256, 257, 269, 278, 283, 285, 292, 304, 322, 338, 436, 638, 683, 708, 938], "subset": [31, 71, 140, 167, 169, 171, 173, 178, 185, 187, 199, 202, 235, 236, 240, 246, 256, 269, 282, 283, 285, 289, 291, 292, 294, 295, 312, 322, 328, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 353, 354, 366, 367, 425, 429, 430, 441, 442, 443, 477, 485, 488, 492, 495, 509, 523, 528, 529, 542, 547, 549, 550, 552, 553, 616, 638, 762, 765, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 844, 876, 886, 899], "dip_opm": 31, "_": [31, 45, 63, 64, 71, 76, 87, 94, 140, 164, 173, 178, 187, 188, 199, 205, 207, 219, 223, 230, 233, 235, 240, 244, 252, 256, 257, 260, 261, 270, 311, 322, 373, 638, 649, 691, 812, 822], "040": [31, 108, 141, 149, 167, 176, 189, 196, 237, 253, 278, 335, 336, 425, 946], "080": [31, 64, 108, 212, 237, 257], "idx": [31, 57, 61, 66, 73, 85, 90, 111, 142, 160, 177, 208, 219, 227, 231, 235, 252, 264, 284, 327, 331, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 381, 551, 552, 553, 614, 615, 874], "argmax": [31, 61, 64, 66, 74, 76, 84, 85, 147, 203, 208, 223, 240], "1000": [31, 33, 66, 74, 97, 108, 111, 124, 141, 142, 156, 173, 183, 184, 186, 187, 203, 208, 209, 210, 211, 213, 219, 230, 231, 233, 235, 240, 241, 244, 251, 257, 261, 264, 265, 266, 287, 321, 344, 347, 514, 520, 522, 526, 552, 553, 638, 710, 776, 777, 779, 780, 812, 822, 844], "1f": [31, 56, 66, 73, 104, 111, 128, 137, 142, 183, 203, 210, 211, 213, 219, 224, 230, 252, 256, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 793, 794, 799, 800, 878, 885, 898], "n20m": 31, "plot_loc": [31, 203, 208, 292, 304, 331], "orthoview": [31, 61, 66, 85, 187, 203, 284, 289, 292, 331, 874], "36": [31, 39, 45, 54, 60, 61, 71, 73, 101, 108, 110, 131, 136, 140, 142, 150, 157, 171, 196, 198, 208, 218, 223, 224, 237, 256, 257, 258, 260, 261, 263, 265, 266, 271, 278, 301, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 477, 505, 552, 553, 685, 966], "77": [31, 37, 39, 41, 45, 61, 108, 109, 136, 137, 140, 142, 150, 183, 184, 195, 196, 198, 208, 218, 219, 220, 222, 223, 224, 235, 236, 237, 240, 246, 256, 257, 260, 261, 264, 269, 302, 405, 966], "10250": 31, "999800": [31, 137], "015800": [31, 137], "009200": [31, 137], "018100": [31, 137], "930500": [31, 137], "365900": [31, 137], "002800": [31, 137], "366000": [31, 137], "930600": [31, 137], "inner": [31, 52, 57, 67, 69, 71, 76, 137, 182, 185, 187, 188, 198, 203, 208, 209, 219, 278, 282, 318, 319, 321, 322, 325, 333, 334, 337, 374, 377, 528, 600, 676, 738, 754, 844, 946, 953, 956, 959], "skull": [31, 52, 67, 69, 71, 76, 137, 141, 182, 183, 185, 187, 188, 197, 203, 208, 209, 219, 278, 282, 284, 318, 319, 321, 322, 325, 337, 346, 374, 377, 528, 600, 601, 672, 738, 746, 751, 754, 844, 862, 946, 953, 956, 959], "102": [31, 37, 39, 40, 41, 42, 44, 48, 52, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 91, 95, 96, 98, 99, 100, 104, 106, 107, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 158, 159, 160, 167, 168, 169, 173, 176, 177, 178, 179, 183, 184, 185, 187, 189, 193, 194, 195, 196, 197, 199, 203, 204, 205, 206, 207, 208, 209, 210, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 244, 245, 246, 247, 252, 253, 256, 258, 259, 260, 261, 264, 266, 274, 275, 325], "73": [31, 39, 41, 45, 46, 59, 60, 61, 66, 71, 86, 107, 108, 119, 124, 134, 135, 136, 140, 142, 149, 150, 156, 172, 176, 196, 203, 209, 218, 223, 224, 237, 256, 257, 258, 259, 260, 261, 264, 266, 269, 278, 333, 334, 335, 336, 371, 552, 553, 793, 799, 815, 966], "42": [31, 34, 35, 37, 39, 40, 41, 42, 44, 45, 54, 55, 61, 68, 71, 73, 75, 95, 96, 98, 99, 100, 104, 107, 108, 110, 115, 118, 120, 121, 124, 125, 127, 128, 131, 132, 135, 136, 137, 138, 139, 140, 142, 145, 146, 149, 150, 152, 159, 160, 164, 168, 173, 178, 179, 183, 189, 193, 194, 195, 196, 199, 202, 203, 204, 207, 208, 209, 211, 218, 223, 224, 227, 230, 231, 232, 233, 234, 235, 236, 237, 241, 243, 244, 247, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 274, 278, 309, 319, 338, 605, 620, 749, 966], "108": [31, 42, 61, 108, 109, 141, 142, 149, 150, 189, 196, 219, 237, 256, 278, 335, 336, 425, 886, 946], "1080": [31, 36, 150, 223, 241, 278, 491, 658, 662, 855], "543": [31, 66, 224, 241], "least": [31, 67, 71, 97, 111, 142, 168, 185, 186, 203, 208, 229, 230, 231, 233, 234, 238, 256, 261, 278, 292, 312, 318, 322, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 487, 496, 500, 502, 521, 523, 524, 542, 552, 553, 638, 640, 641, 657, 659, 661, 665, 676, 774, 794, 800, 844, 876, 899, 946, 958], "awai": [31, 67, 71, 168, 171, 185, 186, 203, 208, 210, 216, 229, 234, 236, 240, 303, 322, 436, 565, 638, 671, 672, 742, 784, 824, 827, 844, 955], "few": [31, 33, 47, 52, 67, 70, 71, 76, 97, 122, 129, 137, 162, 171, 172, 176, 182, 183, 184, 185, 186, 188, 189, 194, 198, 199, 203, 208, 209, 227, 228, 229, 230, 232, 233, 235, 236, 237, 240, 241, 244, 247, 257, 261, 266, 269, 271, 285, 295, 307, 311, 320, 321, 322, 338, 506, 648, 649, 665, 676, 844, 862, 946, 948, 956, 960], "interior": [31, 33, 52, 67, 71, 76, 137, 185, 186, 203, 208, 209, 238, 240], "statu": [31, 33, 52, 67, 71, 76, 137, 185, 186, 203, 208, 209, 216, 240, 280, 285, 288, 308, 311, 321, 322, 333, 334, 335, 336, 338, 412, 434, 436, 552, 553, 561, 568, 576, 584, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844], "exterior": [31, 33, 52, 67, 71, 76, 137, 185, 186, 203, 208, 209, 238, 240], "284": [31, 140, 150, 196, 237, 278, 301, 485], "473": [31, 142, 150, 204, 256, 346], "qhull": [31, 33, 52, 67, 71, 76, 137, 185, 186, 203, 208, 209, 240, 295], "189": [31, 58, 59, 60, 72, 141, 150, 196, 219, 224, 237, 260, 261, 270, 278, 322], "solid": [31, 33, 52, 67, 71, 76, 137, 177, 185, 186, 188, 203, 208, 209, 235, 240, 322, 870, 897], "angl": [31, 33, 52, 67, 71, 76, 137, 146, 158, 185, 186, 188, 196, 197, 199, 203, 208, 209, 210, 213, 240, 241, 286, 303, 310, 322, 325, 338, 373, 377, 659, 660, 663, 674, 729, 844, 850, 914], "244": [31, 101, 112, 150, 162, 166, 196, 237, 260, 261, 966], "complet": [31, 33, 35, 52, 58, 59, 60, 67, 71, 76, 97, 137, 150, 171, 177, 182, 185, 186, 188, 196, 203, 207, 208, 209, 228, 230, 233, 236, 240, 253, 256, 278, 292, 293, 294, 295, 310, 311, 318, 319, 320, 322, 325, 333, 334, 346, 373, 587, 638, 675, 689, 786, 795, 796, 840, 844, 853, 861, 946, 948, 959], "124": [31, 34, 61, 140, 150, 186, 196, 233, 256, 260, 261, 278, 461], "299": [31, 60, 140, 150, 167, 196, 211, 237, 256, 261, 269], "limit": [31, 33, 57, 60, 66, 67, 68, 71, 76, 84, 85, 118, 122, 137, 141, 142, 162, 164, 168, 169, 185, 192, 193, 195, 203, 204, 206, 208, 209, 217, 219, 224, 228, 230, 231, 233, 238, 240, 244, 253, 261, 271, 274, 278, 281, 288, 292, 294, 295, 299, 302, 303, 309, 310, 311, 312, 314, 319, 322, 323, 327, 329, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 351, 485, 492, 511, 529, 549, 552, 553, 573, 642, 665, 676, 701, 705, 710, 716, 767, 773, 775, 793, 794, 799, 800, 861, 865, 870, 877, 878, 880, 882, 884, 885, 887, 894, 898, 904, 909, 910, 940, 951, 963], "214": [31, 150, 196, 256, 260, 261], "0642": [31, 196], "3779": 31, "6968": 31, "6600": 31, "1930": 31, "99": [31, 39, 41, 45, 52, 61, 73, 75, 96, 97, 108, 109, 118, 121, 131, 132, 135, 136, 137, 140, 142, 149, 150, 164, 178, 179, 184, 187, 189, 196, 204, 206, 207, 208, 211, 213, 218, 219, 223, 224, 237, 241, 243, 246, 252, 253, 256, 257, 259, 260, 261, 278, 300, 322, 333, 334, 343, 552, 553, 876, 899, 966], "leakag": [31, 53, 62, 71, 82, 231, 344, 346, 435, 615, 617, 619, 708, 711, 824, 827, 844, 850, 966], "constrain": [31, 36, 38, 39, 41, 45, 65, 67, 84, 97, 98, 99, 100, 118, 135, 137, 142, 143, 148, 171, 173, 187, 193, 199, 202, 203, 205, 206, 207, 208, 210, 223, 230, 231, 234, 235, 238, 239, 240, 253, 256, 258, 259, 260, 261, 270, 278, 293, 295, 309, 321, 322, 328, 333, 334, 362, 363, 364, 365, 366, 367, 431, 655, 812, 822, 946, 953, 959], "idea": [31, 47, 53, 141, 182, 198, 202, 204, 230, 232, 233, 234, 235, 264, 266, 271, 278, 313, 322, 323, 333, 334, 378, 508, 946], "inverse_oper": [31, 33, 37, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 73, 74, 80, 85, 118, 132, 135, 136, 137, 138, 199, 204, 264, 266, 343, 605, 606, 607, 608, 609, 611, 612, 617, 621, 622], "loos": [31, 33, 57, 60, 61, 66, 67, 68, 72, 74, 80, 81, 85, 87, 118, 122, 137, 171, 204, 206, 209, 219, 224, 240, 253, 285, 291, 292, 305, 318, 322, 529, 530, 547, 549, 550, 605, 606, 607, 608, 609, 611, 612, 616, 620, 621, 622], "depth": [31, 33, 37, 48, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 78, 80, 81, 83, 84, 85, 87, 118, 122, 132, 135, 136, 137, 138, 153, 193, 198, 199, 204, 205, 206, 208, 209, 219, 224, 240, 247, 252, 253, 264, 266, 278, 285, 288, 292, 294, 299, 304, 331, 366, 367, 529, 547, 549, 550, 616, 746, 751, 757], "pick_ori": [31, 33, 37, 54, 55, 58, 59, 60, 64, 65, 67, 75, 87, 118, 136, 204, 205, 207, 208, 253, 284, 285, 287, 288, 291, 292, 300, 305, 366, 367, 547, 549, 550, 605, 606, 607, 608, 609, 611, 612, 621, 622], "hemi": [31, 33, 37, 52, 58, 59, 60, 64, 67, 69, 73, 74, 75, 76, 84, 87, 94, 122, 132, 135, 137, 144, 158, 161, 163, 182, 187, 193, 202, 204, 205, 206, 207, 208, 219, 224, 240, 252, 253, 264, 265, 266, 274, 294, 339, 340, 341, 344, 347, 348, 349, 351, 543, 693, 711, 843, 844, 904, 909, 923, 941], "rh": [31, 50, 52, 60, 63, 64, 67, 69, 73, 85, 95, 118, 120, 122, 123, 135, 137, 144, 158, 163, 182, 185, 186, 187, 202, 204, 252, 253, 322, 329, 339, 340, 341, 344, 347, 348, 349, 541, 590, 693, 711, 716, 844, 904, 909, 923, 941], "view": [31, 33, 37, 52, 54, 55, 57, 58, 59, 61, 66, 69, 73, 76, 79, 84, 85, 96, 122, 123, 128, 132, 135, 136, 137, 141, 143, 146, 162, 163, 167, 169, 177, 178, 179, 185, 186, 187, 193, 196, 197, 199, 202, 204, 207, 208, 217, 218, 219, 224, 233, 235, 246, 247, 252, 253, 261, 264, 265, 266, 274, 278, 280, 288, 294, 295, 300, 303, 309, 312, 314, 318, 319, 321, 322, 330, 331, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 357, 372, 379, 552, 553, 604, 658, 659, 723, 789, 790, 791, 795, 796, 797, 798, 831, 844, 874, 876, 899, 904, 907, 909, 914, 916, 946], "lat": [31, 37, 52, 84, 122, 132, 163, 178, 187, 193, 224, 252, 266, 274, 844], "initial_tim": [31, 33, 37, 58, 67, 69, 84, 85, 87, 122, 132, 161, 193, 202, 204, 205, 206, 207, 208, 209, 219, 224, 240, 252, 274, 340, 341, 344, 347, 348, 349, 844, 904, 909, 910], "clim": [31, 33, 36, 48, 52, 68, 69, 73, 75, 80, 81, 84, 85, 132, 137, 158, 162, 163, 173, 202, 204, 206, 207, 208, 239, 252, 264, 265, 266, 274, 292, 294, 302, 335, 336, 340, 341, 344, 347, 348, 349, 844, 865, 882, 904, 909, 910], "percent": [31, 52, 68, 135, 137, 140, 206, 258, 261, 292, 310, 340, 341, 344, 347, 348, 349, 356, 621, 622, 638, 745, 746, 747, 748, 749, 751, 789, 790, 791, 795, 796, 797, 798, 865, 891, 904, 906, 909, 910], "lim": [31, 33, 48, 52, 68, 69, 75, 80, 81, 84, 85, 132, 137, 158, 162, 163, 202, 204, 206, 207, 208, 265, 266, 274, 340, 341, 344, 347, 348, 349, 865, 904, 909, 910], "400": [31, 33, 39, 66, 70, 103, 108, 120, 139, 150, 158, 162, 168, 169, 171, 173, 178, 183, 187, 198, 199, 203, 205, 208, 234, 235, 237, 239, 240, 256, 258, 274, 275, 544], "background": [31, 47, 69, 144, 155, 162, 169, 178, 187, 192, 193, 199, 233, 235, 239, 242, 243, 244, 246, 247, 274, 278, 286, 288, 292, 310, 312, 318, 331, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 485, 520, 521, 523, 552, 553, 574, 643, 664, 671, 714, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 844, 848, 854, 862, 874, 880, 884, 887, 894, 899, 904, 905, 907, 909, 910, 931, 966], "out": [31, 33, 42, 45, 48, 52, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 97, 102, 107, 110, 115, 118, 120, 122, 137, 143, 148, 152, 158, 164, 167, 168, 170, 178, 183, 185, 187, 193, 194, 197, 199, 204, 205, 206, 207, 209, 211, 212, 213, 217, 219, 223, 224, 228, 230, 232, 233, 234, 235, 236, 238, 240, 247, 253, 256, 270, 271, 274, 275, 284, 289, 304, 311, 319, 320, 322, 325, 330, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 357, 372, 408, 426, 427, 428, 485, 487, 492, 496, 521, 523, 552, 553, 561, 577, 604, 612, 637, 638, 639, 653, 658, 684, 690, 692, 781, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 823, 824, 831, 863, 870, 878, 882, 885, 889, 898, 901, 906, 908, 946, 949, 951, 952, 958], "adjust": [31, 33, 50, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 76, 77, 80, 81, 84, 85, 86, 118, 122, 137, 144, 148, 176, 183, 185, 188, 197, 199, 204, 205, 206, 207, 209, 216, 219, 224, 236, 238, 240, 246, 247, 253, 258, 274, 280, 282, 294, 295, 307, 308, 310, 314, 318, 322, 325, 330, 333, 334, 335, 336, 338, 342, 355, 413, 415, 485, 492, 552, 553, 554, 564, 572, 637, 638, 648, 667, 677, 767, 773, 778, 782, 783, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 815, 846, 859, 876, 877, 878, 882, 884, 885, 889, 898, 899, 901, 906, 907, 908, 946, 951, 956], "svd": [31, 33, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 118, 122, 137, 204, 205, 206, 209, 219, 224, 234, 240, 253, 292, 318, 322, 330, 341, 347, 349, 412, 613, 614, 615, 871], "lead": [31, 33, 48, 52, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 96, 97, 101, 115, 118, 122, 137, 171, 178, 189, 194, 204, 205, 206, 209, 219, 223, 224, 228, 230, 238, 240, 253, 283, 284, 288, 292, 293, 294, 295, 306, 307, 320, 321, 322, 327, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 425, 519, 547, 549, 550, 552, 553, 605, 606, 607, 608, 609, 659, 664, 677, 708, 733, 776, 777, 779, 780, 951], "largest": [31, 33, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 118, 122, 137, 162, 178, 204, 205, 206, 209, 216, 219, 224, 240, 253, 256, 485, 529, 578, 614, 615, 638], "38802": 31, "factor": [31, 33, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 74, 76, 80, 81, 84, 85, 87, 118, 122, 132, 135, 136, 137, 138, 162, 184, 198, 204, 205, 206, 208, 209, 219, 224, 230, 231, 238, 240, 252, 253, 258, 259, 260, 264, 266, 270, 278, 280, 281, 291, 292, 293, 295, 302, 303, 310, 321, 322, 325, 328, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 368, 425, 429, 436, 443, 493, 494, 497, 498, 506, 525, 552, 553, 563, 608, 618, 621, 622, 648, 649, 655, 656, 664, 665, 674, 676, 678, 725, 727, 728, 741, 742, 770, 772, 789, 790, 791, 795, 796, 797, 798, 802, 805, 808, 821, 823, 824, 825, 826, 827, 828, 834, 844, 859, 876, 884, 897, 899, 905, 907, 909], "35945e": 31, "nchan": [31, 33, 60, 66, 67, 68, 71, 74, 76, 78, 80, 81, 83, 84, 85, 118, 122, 137, 193, 194, 196, 204, 205, 206, 209, 219, 224, 240, 244, 251, 253, 280, 337, 338], "nzero": [31, 33, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 118, 122, 137, 204, 205, 206, 209, 219, 224, 240, 253], "invert": [31, 33, 47, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 80, 81, 83, 84, 85, 87, 118, 122, 132, 135, 136, 137, 138, 162, 183, 185, 188, 193, 204, 205, 206, 207, 208, 209, 219, 224, 230, 240, 252, 253, 264, 266, 271, 319, 352, 362, 365, 491, 494, 499, 547, 549, 550, 775, 819], "eigenlead": [31, 33, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 80, 81, 84, 85, 87, 118, 122, 132, 135, 136, 137, 138, 193, 204, 205, 206, 208, 209, 219, 224, 240, 252, 253, 264, 266, 322], "explain": [31, 33, 44, 54, 56, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 80, 81, 84, 85, 86, 87, 118, 122, 164, 186, 187, 193, 204, 205, 206, 208, 209, 210, 219, 220, 224, 233, 240, 252, 253, 264, 266, 281, 283, 291, 292, 293, 305, 309, 311, 322, 342, 369, 371, 426, 427, 428, 485, 492, 547, 549, 550, 614, 615, 638, 652, 890, 956], "97": [31, 37, 39, 41, 45, 60, 67, 70, 73, 98, 108, 110, 131, 136, 137, 140, 142, 145, 150, 183, 187, 193, 196, 219, 223, 224, 233, 236, 237, 238, 256, 257, 260, 261, 278, 280, 318, 322, 506, 601, 647, 649, 676, 770], "varianc": [31, 33, 34, 40, 42, 54, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 80, 81, 84, 85, 86, 87, 97, 118, 122, 142, 193, 204, 205, 206, 207, 208, 209, 210, 219, 224, 228, 233, 240, 252, 253, 264, 266, 278, 281, 283, 291, 292, 293, 299, 305, 309, 321, 322, 342, 344, 362, 363, 364, 365, 366, 367, 426, 427, 428, 494, 530, 547, 549, 550, 614, 615, 616, 638, 646, 771, 782, 783, 824, 827, 869, 890, 891], "control": [31, 37, 45, 48, 52, 58, 59, 60, 64, 67, 68, 73, 74, 76, 87, 122, 137, 142, 148, 161, 167, 176, 177, 183, 193, 195, 198, 199, 205, 206, 208, 209, 216, 219, 224, 229, 230, 231, 233, 234, 235, 238, 239, 240, 246, 252, 253, 256, 264, 274, 275, 284, 285, 286, 288, 289, 291, 292, 294, 295, 303, 304, 305, 306, 307, 309, 312, 319, 322, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 495, 496, 498, 501, 502, 504, 506, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 535, 536, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 634, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 737, 738, 740, 741, 742, 743, 753, 754, 757, 759, 760, 761, 762, 763, 764, 765, 776, 777, 778, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 812, 813, 814, 815, 818, 819, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 843, 844, 846, 853, 860, 862, 865, 871, 872, 874, 877, 878, 879, 880, 881, 886, 889, 890, 891, 892, 896, 897, 899, 900, 902, 903, 904, 905, 909, 910, 911, 912, 915, 917, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 958], "24807258e": 31, "55793898e": 31, "13115753e": 31, "441": [31, 32, 61, 150, 278, 638, 674, 966], "837": [31, 61, 261], "opm_data": [31, 32, 966], "spm_faces_dataset": [32, 33, 966], "037": [32, 33, 167, 176, 196, 244, 253, 966], "2100": [32, 966], "1221": [32, 60, 196, 229, 253, 966], "584": [32, 90, 93, 224, 261, 966], "836": [32, 237, 261, 966], "06": [32, 36, 45, 46, 52, 61, 67, 70, 71, 72, 76, 78, 82, 85, 93, 98, 103, 111, 122, 128, 130, 131, 134, 136, 157, 182, 185, 201, 203, 206, 208, 210, 223, 230, 235, 237, 249, 256, 257, 258, 261, 266, 278, 315, 321, 345, 431, 493, 547, 647, 966], "pipelin": [33, 34, 35, 36, 37, 38, 39, 41, 44, 137, 164, 188, 192, 193, 198, 199, 200, 223, 224, 228, 229, 233, 283, 295, 301, 319, 320, 485, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 538, 639, 834, 946, 952, 959], "doe": [33, 54, 57, 81, 84, 85, 87, 97, 98, 103, 107, 111, 140, 145, 148, 162, 167, 168, 176, 178, 185, 187, 188, 189, 195, 204, 205, 208, 209, 216, 217, 218, 220, 228, 230, 231, 232, 233, 234, 236, 238, 239, 240, 251, 253, 258, 260, 261, 264, 271, 274, 278, 284, 285, 291, 292, 294, 304, 307, 311, 312, 318, 322, 325, 326, 328, 330, 332, 333, 334, 335, 336, 340, 341, 344, 345, 347, 348, 349, 357, 366, 367, 372, 389, 402, 429, 432, 441, 442, 452, 459, 515, 516, 517, 518, 519, 543, 552, 553, 573, 577, 604, 624, 627, 640, 653, 655, 658, 668, 701, 705, 730, 735, 739, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 831, 834, 839, 848, 884, 907, 946, 956], "quit": [33, 47, 171, 177, 178, 189, 230, 231, 233, 238, 239, 244, 256, 257, 265, 274, 311, 320, 638, 946], "even": [33, 97, 102, 140, 156, 169, 182, 187, 193, 194, 195, 198, 199, 210, 218, 219, 227, 228, 230, 232, 233, 234, 235, 236, 240, 244, 246, 256, 271, 282, 286, 289, 291, 292, 293, 295, 303, 309, 310, 311, 319, 322, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 378, 394, 449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 518, 552, 553, 583, 638, 808, 907, 960], "fast": [33, 47, 70, 156, 178, 182, 219, 269, 271, 278, 285, 299, 306, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 434, 493, 502, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 596, 597, 638, 685, 793, 799, 815, 946, 951], "sever": [33, 97, 103, 108, 109, 142, 172, 177, 178, 180, 182, 185, 186, 192, 193, 195, 196, 198, 199, 207, 208, 216, 217, 218, 219, 227, 229, 234, 235, 240, 244, 246, 247, 256, 264, 266, 274, 283, 309, 311, 318, 319, 322, 328, 333, 334, 477, 520, 552, 553, 684, 824, 827, 946, 947, 955, 957, 959, 962], "alexandr": [33, 35, 36, 37, 38, 39, 41, 44, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 91, 115, 120, 124, 125, 128, 135, 136, 138, 139, 141, 145, 149, 154, 158, 159, 164, 186, 189, 207, 212, 224, 233, 258, 259, 260, 264, 265, 266, 270, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 335, 336, 425, 485, 549, 550, 606, 638, 946, 964], "gramfort": [33, 35, 36, 37, 39, 44, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 91, 120, 124, 125, 128, 135, 136, 138, 139, 141, 145, 149, 154, 158, 159, 164, 186, 189, 207, 212, 224, 233, 258, 259, 260, 264, 265, 266, 270, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 335, 336, 425, 549, 550, 606, 638, 886, 946, 964], "inria": [33, 35, 36, 37, 39, 44, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 86, 91, 120, 124, 125, 128, 135, 136, 138, 139, 145, 149, 154, 158, 159, 164, 186, 212, 258, 259, 260, 264, 265, 266, 270], "deni": [33, 37, 39, 42, 47, 52, 59, 68, 96, 106, 129, 137, 141, 142, 148, 149, 155, 159, 160, 178, 189, 224, 260, 261, 266, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 298, 299, 300, 301, 302, 307, 309, 316, 335, 336, 425, 606, 946, 964], "engemann": [33, 37, 39, 42, 47, 52, 59, 68, 96, 106, 129, 137, 141, 142, 148, 149, 155, 159, 160, 189, 224, 260, 261, 266, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 298, 299, 300, 301, 302, 307, 309, 316, 335, 336, 425, 606, 886, 946, 964], "spm_path": 33, "spm_ctf_meg_example_faces1_3d": [33, 152], "downsampl": [33, 45, 137, 163, 172, 193, 223, 229, 231, 259, 280, 282, 290, 291, 298, 307, 325, 332, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 484, 525, 526, 552, 553, 594, 665, 775, 789, 790, 791, 795, 796, 797, 798, 905, 946], "heavili": [33, 137, 184, 224, 358, 360, 834], "advis": [33, 97, 217, 230, 294, 318, 322, 325], "real": [33, 58, 76, 120, 121, 178, 182, 183, 185, 187, 188, 230, 233, 234, 235, 236, 246, 251, 253, 258, 278, 292, 294, 300, 310, 314, 366, 528, 552, 553, 555, 599, 685, 795, 796, 812, 822, 823, 824, 844, 917, 959, 962], "jitter": [33, 195, 231, 552, 553, 946], "n_compon": [33, 34, 35, 38, 41, 102, 104, 110, 115, 145, 193, 199, 224, 233, 284, 292, 293, 485, 492, 493, 499, 638, 639, 653], "max_it": [33, 102, 104, 110, 193, 233, 294, 306, 605, 638, 674, 754, 803, 814], "auto": [33, 36, 41, 42, 48, 57, 97, 102, 103, 104, 108, 109, 110, 118, 135, 141, 148, 149, 154, 163, 174, 175, 183, 189, 192, 198, 219, 223, 230, 233, 236, 238, 258, 259, 260, 261, 264, 265, 282, 283, 284, 285, 287, 288, 289, 291, 292, 294, 303, 305, 306, 309, 310, 318, 319, 325, 327, 330, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 375, 376, 382, 398, 412, 414, 418, 424, 425, 429, 430, 431, 436, 485, 487, 491, 492, 496, 497, 504, 506, 509, 514, 515, 516, 518, 519, 521, 523, 524, 525, 530, 547, 549, 550, 552, 553, 559, 561, 563, 565, 568, 569, 576, 581, 584, 596, 601, 616, 635, 637, 638, 639, 647, 648, 649, 650, 653, 665, 666, 669, 676, 680, 689, 694, 700, 719, 733, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 828, 844, 846, 862, 863, 865, 870, 876, 878, 880, 881, 882, 883, 885, 886, 889, 891, 893, 896, 898, 899, 900, 901, 902, 904, 906, 908, 909, 910, 914, 944, 946, 966], "random_st": [33, 34, 35, 36, 41, 66, 104, 110, 118, 120, 121, 122, 141, 145, 164, 193, 233, 252, 253, 288, 549, 590, 638, 674, 693, 741, 742, 743, 752, 753, 755, 768], "correl": [33, 38, 44, 48, 52, 70, 102, 131, 173, 189, 224, 232, 233, 238, 256, 257, 260, 278, 285, 288, 319, 322, 325, 338, 345, 413, 425, 431, 491, 492, 497, 638, 653, 676, 773, 778, 946], "indic": [33, 39, 42, 48, 57, 73, 74, 96, 97, 108, 128, 167, 168, 169, 171, 172, 173, 176, 178, 182, 183, 187, 195, 196, 197, 202, 205, 216, 219, 223, 227, 228, 229, 231, 233, 234, 237, 238, 240, 244, 246, 247, 251, 253, 258, 261, 283, 284, 286, 288, 289, 292, 294, 298, 308, 311, 312, 321, 322, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 380, 382, 383, 384, 394, 397, 399, 405, 425, 430, 441, 477, 485, 487, 491, 492, 493, 501, 506, 509, 514, 523, 524, 527, 552, 553, 561, 563, 565, 568, 569, 570, 576, 578, 581, 584, 614, 615, 629, 632, 634, 635, 637, 638, 639, 640, 641, 646, 648, 653, 654, 655, 656, 659, 664, 668, 672, 674, 675, 681, 682, 684, 685, 691, 700, 706, 707, 710, 719, 722, 728, 733, 757, 758, 762, 765, 769, 775, 776, 777, 779, 780, 781, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 826, 827, 844, 859, 862, 863, 864, 866, 870, 876, 877, 878, 880, 882, 883, 885, 889, 890, 891, 893, 895, 897, 898, 899, 900, 901, 906, 908, 917, 918, 919, 920, 921, 923, 939, 944], "eog_epoch": [33, 199, 227, 232, 656], "mrt31": 33, "2908": 33, "eog_ind": [33, 233, 638], "eog_scor": [33, 199, 233, 343], "find_bads_eog": [33, 199, 233, 284, 292, 295, 343, 638], "plot_scor": [33, 102, 110, 233, 292, 295, 638], "plot_compon": [33, 104, 233, 283, 286, 304, 306, 307, 638, 949], "topograph": [33, 34, 42, 44, 45, 53, 151, 157, 160, 178, 224, 278, 304, 308, 335, 336, 338, 342, 343, 485, 492, 566, 634, 635, 638, 706, 789, 790, 791, 795, 796, 797, 798, 863, 870, 880, 885, 891, 898, 906, 908, 966], "compon": [33, 34, 38, 40, 41, 47, 53, 55, 56, 57, 60, 67, 68, 70, 71, 73, 85, 97, 102, 104, 105, 106, 107, 112, 114, 115, 122, 147, 153, 164, 177, 178, 189, 193, 199, 204, 205, 206, 208, 209, 211, 219, 224, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 246, 253, 264, 266, 275, 278, 280, 281, 283, 284, 285, 286, 288, 289, 291, 292, 293, 294, 295, 298, 301, 304, 305, 306, 309, 314, 318, 319, 322, 335, 336, 337, 339, 343, 366, 367, 382, 398, 425, 429, 430, 441, 442, 443, 452, 477, 478, 485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 506, 524, 528, 529, 530, 547, 549, 550, 552, 553, 568, 608, 611, 612, 614, 615, 616, 617, 622, 638, 639, 646, 648, 649, 652, 653, 663, 665, 674, 676, 795, 796, 886, 889, 890, 891, 892, 893, 899, 946, 949, 959, 966], "saw": [33, 167, 169, 194, 195, 198, 227, 228, 229, 235, 244, 260], "2nd": [33, 101, 178, 223, 227, 258, 261, 271, 278, 287, 653, 730], "ecg": [33, 98, 100, 101, 104, 108, 109, 110, 118, 120, 121, 122, 137, 139, 158, 167, 168, 169, 173, 176, 178, 194, 195, 196, 199, 217, 219, 228, 229, 231, 232, 234, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 274, 280, 282, 288, 290, 294, 295, 297, 300, 301, 305, 321, 322, 333, 334, 335, 336, 338, 343, 381, 430, 445, 552, 553, 564, 565, 568, 581, 635, 638, 650, 655, 656, 666, 669, 741, 742, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 876, 892, 897, 899], "too": [33, 53, 96, 101, 105, 112, 167, 169, 171, 177, 178, 184, 185, 188, 192, 199, 205, 208, 227, 228, 229, 230, 231, 232, 235, 237, 239, 246, 256, 258, 260, 271, 274, 282, 283, 294, 295, 303, 304, 310, 311, 333, 334, 335, 336, 338, 382, 398, 413, 445, 506, 509, 552, 553, 559, 569, 641, 646, 648, 649, 665, 675, 676, 694, 700, 844, 866, 908, 946, 966], "dipolar": [33, 528], "plot_overlai": [33, 110, 233, 287, 305, 308, 638], "09": [33, 34, 35, 47, 69, 70, 71, 82, 103, 108, 109, 112, 130, 131, 144, 148, 152, 185, 186, 187, 201, 202, 207, 237, 257, 260, 261, 278, 315, 321, 333, 334, 339, 344, 601, 683, 770, 795, 825, 828, 966], "61": [33, 37, 39, 45, 56, 61, 71, 73, 77, 82, 83, 86, 98, 108, 110, 118, 121, 131, 136, 137, 140, 142, 144, 150, 152, 163, 173, 176, 193, 194, 195, 196, 197, 199, 203, 205, 206, 211, 212, 218, 223, 224, 227, 228, 231, 234, 235, 236, 237, 238, 244, 245, 246, 247, 256, 257, 258, 259, 260, 261, 265, 266, 274, 275, 278, 425, 966], "258": [33, 38, 47, 150, 152, 185, 193, 196, 261], "78": [33, 38, 45, 47, 60, 61, 73, 77, 107, 108, 131, 140, 142, 150, 152, 164, 184, 185, 193, 196, 203, 206, 212, 218, 223, 224, 237, 244, 256, 257, 258, 260, 261, 265, 266, 278, 322, 369, 477], "241": [33, 150, 152, 196, 231, 237, 256, 524, 552, 553], "87": [33, 37, 41, 44, 45, 59, 61, 73, 107, 122, 136, 137, 140, 142, 150, 152, 153, 196, 198, 223, 224, 237, 238, 256, 257, 260, 261, 264, 278, 322, 489, 491, 503], "324474": [33, 152], "340": [33, 39, 61, 77, 108, 109, 140, 150, 152, 196, 219, 237, 261, 278, 299, 369], "324473": 33, "675": [33, 223, 237, 261], "985": [33, 85, 237, 261], "uppt002": 33, "172": [33, 98, 110, 121, 150, 194, 195, 196, 227, 228, 230, 231, 234, 235, 236, 237, 238, 244, 245, 246, 247, 256, 260, 261, 274, 278, 332, 333, 334, 335, 336, 749, 754, 789, 790, 791, 795, 796, 797, 798], "255": [33, 140, 142, 150, 187, 196, 237, 260, 261, 274, 340, 341, 344, 347, 348, 349, 844, 865, 904, 909, 910], "310": [33, 39, 40, 41, 61, 104, 108, 115, 127, 137, 140, 149, 150, 160, 196, 224, 233, 237, 256, 261], "274": [33, 72, 108, 109, 140, 150, 152, 185, 191, 193, 196, 219, 224, 237, 261, 966], "patient": [33, 102, 104, 110, 163, 193, 199, 233, 288], "mai": [33, 52, 97, 102, 104, 110, 131, 162, 167, 168, 170, 171, 173, 176, 177, 178, 179, 183, 185, 188, 193, 195, 197, 199, 216, 217, 218, 220, 223, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 244, 245, 246, 247, 251, 253, 258, 261, 264, 278, 295, 311, 312, 314, 316, 318, 320, 322, 328, 330, 331, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 347, 348, 349, 368, 388, 399, 400, 405, 424, 436, 484, 485, 487, 492, 494, 498, 504, 509, 515, 516, 517, 518, 519, 524, 535, 537, 544, 552, 553, 555, 561, 568, 569, 574, 599, 602, 605, 625, 637, 638, 640, 653, 655, 656, 659, 664, 665, 667, 676, 677, 694, 696, 698, 700, 706, 725, 727, 771, 775, 776, 777, 779, 780, 782, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 821, 823, 824, 825, 826, 827, 828, 844, 846, 862, 863, 876, 878, 880, 881, 883, 885, 889, 893, 898, 899, 901, 906, 908, 929, 939, 946, 951, 953, 955, 958, 959, 960], "mlt35": 33, "mlt42": 33, "mlt45": 33, "mlt52": 33, "mrt14": 33, "mrt43": 33, "mrt44": 33, "mrt45": 33, "mrt53": 33, "mrt54": 33, "19200": 33, "19400": 33, "19600": 33, "19800": [33, 68, 189, 199, 235], "mlt24": 33, "mlt25": 33, "mlt34": 33, "67000": 33, "67200": 33, "mlf54": 33, "mlo11": 33, "mlo14": 33, "mlp51": 33, "mlp54": 33, "mlt14": 33, "mlt23": 33, "mlt36": 33, "mlt44": 33, "mro12": 33, "mro21": 33, "mro31": 33, "mro32": 33, "mro42": 33, "mro43": 33, "mrp41": 33, "mrp52": 33, "mrp53": 33, "67400": 33, "took": [33, 102, 104, 110, 193, 199, 233, 638], "dc": [33, 99, 193, 195, 199, 218, 227, 229, 230, 231, 232, 233, 235, 240, 245, 285, 288, 289, 309, 321, 328, 333, 335, 336, 338, 412, 552, 553, 638, 640, 676, 899], "offset": [33, 99, 121, 163, 188, 195, 199, 219, 227, 229, 230, 232, 233, 234, 235, 241, 244, 245, 246, 287, 291, 294, 302, 303, 308, 310, 321, 325, 327, 328, 332, 333, 334, 335, 336, 338, 432, 514, 518, 526, 552, 553, 572, 587, 641, 658, 690, 703, 769, 789, 790, 791, 795, 796, 797, 798, 844], "help": [33, 97, 99, 148, 162, 167, 171, 172, 173, 178, 186, 187, 188, 189, 193, 196, 198, 199, 208, 216, 218, 224, 227, 228, 229, 231, 232, 233, 235, 247, 260, 281, 283, 285, 287, 292, 304, 307, 308, 309, 310, 311, 312, 318, 320, 322, 323, 325, 331, 332, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 512, 514, 520, 552, 553, 561, 568, 569, 576, 587, 638, 694, 700, 733, 738, 752, 755, 781, 789, 790, 791, 795, 796, 797, 798, 841, 844, 853, 876, 890, 904, 951, 956, 958, 965], "distinguish": [33, 80, 99, 178, 199, 224, 227, 228, 229, 232, 233, 235, 244, 291, 321, 432, 789, 790, 791, 795, 796, 797, 798], "blink": [33, 97, 99, 110, 121, 122, 150, 171, 199, 220, 227, 229, 232, 233, 235, 236, 244, 246, 271, 278, 288, 308, 327, 333, 334, 572, 637, 653, 661, 741, 742, 795, 796], "saccad": [33, 99, 150, 199, 219, 220, 227, 229, 232, 233, 235, 241, 572, 637], "revers": [33, 44, 45, 99, 170, 173, 199, 216, 227, 229, 230, 232, 233, 235, 244, 292, 299, 330, 335, 336, 340, 341, 344, 346, 347, 348, 349, 880, 882, 884, 885, 904, 909], "firwin2": [33, 99, 173, 199, 219, 227, 229, 230, 232, 233, 235, 285, 297, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 524, 552, 553], "hann": [33, 99, 111, 136, 137, 173, 199, 227, 229, 230, 232, 233, 235, 285, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 496, 521, 523, 524, 552, 553, 611, 612, 740, 741, 742, 754], "144": [33, 55, 66, 82, 109, 150, 196, 198, 232, 239, 256, 301, 346, 966], "peak": [33, 64, 80, 81, 87, 97, 99, 102, 109, 118, 122, 123, 159, 167, 172, 176, 177, 193, 199, 202, 204, 205, 207, 210, 211, 212, 213, 219, 227, 232, 233, 235, 237, 239, 256, 271, 274, 280, 282, 288, 294, 295, 303, 310, 318, 322, 325, 328, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 430, 620, 638, 640, 643, 650, 651, 655, 656, 665, 666, 667, 669, 670, 671, 685, 746, 775, 789, 790, 791, 795, 796, 797, 798, 846, 876, 881, 883, 884, 885], "101": [33, 34, 97, 142, 150, 164, 185, 196, 218, 233, 235, 237, 256, 261, 278, 319, 452, 477, 478, 493], "back": [33, 97, 102, 110, 115, 144, 167, 170, 185, 188, 189, 193, 198, 199, 207, 208, 228, 230, 233, 234, 235, 236, 269, 282, 287, 291, 303, 311, 326, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 436, 441, 500, 526, 552, 553, 638, 880, 946], "scrambl": [33, 224, 319], "clean": [33, 100, 102, 103, 111, 168, 171, 186, 193, 194, 199, 217, 228, 230, 232, 233, 234, 235, 239, 261, 271, 286, 294, 310, 311, 328, 333, 334, 343, 552, 553, 566, 597, 638, 684, 699, 775, 890, 946], "default": [33, 47, 57, 69, 70, 102, 115, 131, 140, 142, 148, 162, 164, 167, 169, 172, 173, 176, 177, 178, 183, 185, 189, 193, 194, 195, 196, 197, 198, 199, 205, 206, 216, 217, 219, 220, 228, 229, 231, 233, 234, 235, 236, 238, 241, 244, 245, 246, 247, 251, 256, 260, 261, 266, 269, 270, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 319, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 391, 392, 393, 394, 396, 397, 398, 399, 400, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 509, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 535, 536, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 681, 682, 683, 684, 685, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 770, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 836, 839, 841, 843, 844, 846, 848, 853, 854, 855, 859, 860, 862, 863, 864, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 956], "168": [33, 61, 71, 150, 196, 203, 208, 224, 237, 243, 260, 261, 266, 966], "81": [33, 37, 39, 41, 42, 45, 60, 61, 108, 131, 136, 137, 140, 142, 150, 169, 183, 196, 207, 211, 218, 223, 224, 236, 237, 239, 256, 257, 260, 261, 269, 278, 280, 297, 746, 751, 810, 812, 822], "noise_cov": [33, 37, 57, 60, 66, 67, 68, 74, 75, 76, 77, 80, 81, 84, 85, 86, 122, 137, 149, 179, 189, 199, 204, 205, 207, 209, 219, 233, 240, 285, 330, 333, 334, 335, 336, 343, 367, 369, 371, 441, 442, 529, 547, 549, 550, 552, 553, 616, 638, 876, 880, 884, 886, 899], "plot_whit": [33, 121, 149, 179, 189, 204, 292, 302, 333, 334, 335, 336, 552, 553, 876, 880, 899, 946], "3507": 33, "legaci": [33, 47, 121, 149, 167, 169, 179, 189, 199, 204, 210, 247, 305, 307, 308, 309, 310, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 520, 521, 523, 524, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 826, 827, 828, 878, 900], "new": [33, 34, 40, 45, 47, 53, 57, 88, 96, 101, 108, 121, 141, 149, 164, 167, 169, 172, 176, 178, 179, 188, 189, 192, 199, 202, 204, 209, 210, 220, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 246, 247, 251, 256, 259, 260, 261, 269, 275, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 314, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 356, 357, 362, 366, 367, 369, 371, 372, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 388, 391, 392, 393, 394, 398, 400, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 441, 442, 443, 444, 452, 459, 461, 462, 477, 478, 484, 485, 487, 489, 491, 492, 496, 497, 504, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 532, 533, 535, 538, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 561, 564, 565, 566, 568, 569, 570, 574, 577, 583, 588, 590, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 611, 612, 613, 614, 615, 618, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 658, 659, 661, 664, 665, 666, 672, 675, 676, 677, 684, 686, 689, 690, 691, 696, 700, 702, 703, 707, 708, 711, 719, 721, 722, 723, 724, 725, 727, 730, 733, 738, 740, 741, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 766, 770, 772, 782, 783, 784, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 808, 810, 813, 814, 815, 818, 823, 824, 826, 827, 828, 829, 831, 832, 833, 834, 841, 844, 845, 846, 848, 853, 854, 855, 859, 862, 863, 864, 865, 867, 869, 870, 872, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 908, 909, 910, 912, 915, 918, 920, 921, 932, 935, 936, 937, 941, 942, 944, 946, 947, 952, 954, 956, 957, 958, 960, 961, 964], "inst": [33, 47, 121, 149, 179, 189, 199, 204, 210, 233, 283, 284, 286, 287, 289, 303, 304, 305, 307, 309, 325, 327, 332, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 350, 382, 384, 411, 429, 485, 486, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 544, 552, 553, 637, 638, 639, 646, 647, 652, 657, 659, 663, 668, 675, 691, 730, 733, 743, 774, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 826, 827, 828, 889, 890, 891, 893, 900], "trans_fnam": [33, 95, 108, 183, 205, 219], "spm_ctf_meg_example_faces1_3d_raw": 33, "oct": [33, 37, 48, 50, 54, 55, 57, 61, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 118, 120, 121, 122, 123, 132, 135, 136, 137, 138, 153, 158, 183, 185, 186, 187, 193, 199, 204, 205, 206, 208, 209, 219, 224, 240, 252, 253, 264, 266, 300, 325, 340, 344, 346, 348, 484, 737, 904], "conductor": [33, 52, 67, 71, 76, 137, 183, 185, 186, 203, 209, 240, 285, 321, 322, 374, 528, 601, 738, 862], "accur": [33, 39, 52, 67, 70, 71, 76, 137, 162, 185, 186, 203, 209, 216, 224, 232, 233, 235, 238, 240, 291, 292, 293, 304, 318, 326, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 528, 552, 553, 596, 638, 652, 671, 834, 885, 912], "999622": 33, "006802": 33, "026647": 33, "014131": 33, "958276": 33, "285497": 33, "023593": 33, "285765": 33, "958009": 33, "303": [33, 61, 115, 124, 140, 150, 196, 256, 265], "preselector": 33, "postselector": 33, "997940": 33, "049681": 33, "040594": 33, "054745": 33, "989330": 33, "135013": 33, "033453": 33, "136957": 33, "990012": 33, "4098": [33, 50, 69, 186, 187, 209, 240, 318], "1659": [33, 149], "52": [33, 37, 39, 45, 54, 61, 71, 73, 108, 109, 127, 131, 136, 137, 140, 142, 150, 172, 178, 195, 196, 210, 215, 218, 219, 223, 224, 230, 237, 256, 257, 260, 261, 266, 268, 278, 281, 333, 334, 477, 775, 795, 825, 828, 966], "2439": 33, "1289": 33, "1713": [33, 196], "2385": [33, 223], "1210": [33, 45], "74": [33, 37, 39, 42, 45, 52, 61, 67, 71, 76, 107, 108, 109, 121, 131, 136, 137, 140, 142, 150, 164, 185, 195, 196, 197, 203, 208, 211, 219, 223, 224, 230, 235, 237, 253, 256, 257, 260, 261, 264, 266, 770], "158": [33, 76, 150, 188, 196, 237, 256, 260, 261], "finish": [33, 52, 67, 71, 76, 137, 185, 186, 203, 209, 236, 240, 246, 303, 320], "both": [33, 45, 57, 58, 59, 64, 66, 67, 71, 73, 77, 84, 85, 86, 96, 97, 98, 102, 114, 118, 122, 127, 137, 142, 159, 167, 168, 176, 177, 178, 189, 193, 195, 196, 197, 198, 199, 202, 204, 205, 207, 208, 209, 210, 217, 218, 219, 220, 224, 227, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 244, 253, 258, 260, 264, 265, 266, 269, 270, 271, 275, 278, 284, 285, 288, 289, 294, 295, 299, 303, 306, 309, 311, 312, 319, 321, 322, 328, 329, 330, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 346, 347, 348, 349, 356, 366, 367, 376, 385, 425, 429, 430, 431, 441, 442, 443, 485, 492, 504, 509, 526, 528, 529, 547, 549, 550, 552, 553, 572, 596, 616, 637, 638, 641, 648, 653, 655, 690, 693, 706, 707, 711, 716, 738, 739, 743, 752, 770, 772, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 823, 826, 841, 844, 846, 855, 859, 863, 869, 870, 877, 878, 881, 882, 883, 885, 886, 889, 898, 901, 904, 906, 908, 909, 925, 941, 946, 947, 958], "ven": [33, 76], "gradiomet": [33, 48, 58, 60, 61, 72, 85, 98, 100, 104, 107, 109, 114, 121, 128, 131, 136, 137, 138, 139, 141, 145, 147, 148, 169, 172, 173, 177, 189, 193, 194, 195, 196, 207, 210, 211, 216, 219, 227, 228, 229, 231, 233, 234, 235, 237, 238, 240, 244, 245, 246, 247, 251, 253, 256, 258, 259, 260, 270, 282, 285, 287, 291, 294, 295, 299, 302, 310, 318, 321, 322, 325, 328, 330, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 366, 367, 425, 426, 427, 428, 429, 430, 441, 442, 443, 485, 492, 506, 528, 529, 547, 549, 550, 552, 553, 593, 616, 635, 636, 637, 638, 648, 649, 650, 651, 653, 654, 655, 656, 665, 676, 687, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 869, 870, 876, 877, 878, 880, 882, 884, 885, 886, 889, 898, 899, 901, 906, 907, 908, 946], "8109": 33, "042069": 33, "04483e": 33, "9662": 33, "48756e": 33, "prepar": [33, 37, 38, 45, 47, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 80, 81, 83, 84, 85, 87, 106, 114, 118, 122, 132, 135, 136, 137, 138, 147, 153, 177, 193, 198, 204, 205, 206, 208, 209, 219, 224, 228, 235, 240, 252, 253, 258, 264, 275, 287, 293, 302, 310, 311, 377, 388, 399, 441, 442, 605, 606, 607, 608, 609, 611, 612, 618, 621, 622, 677], "combin": [33, 48, 50, 55, 56, 57, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 114, 118, 120, 121, 122, 123, 129, 140, 155, 156, 158, 159, 164, 167, 168, 169, 172, 177, 178, 182, 193, 195, 197, 202, 204, 205, 206, 207, 208, 209, 216, 218, 219, 223, 224, 227, 229, 235, 236, 238, 239, 240, 241, 244, 246, 253, 256, 258, 261, 264, 266, 278, 284, 287, 288, 289, 291, 292, 294, 295, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 311, 314, 322, 328, 333, 334, 335, 336, 339, 340, 341, 344, 346, 347, 348, 349, 359, 366, 367, 375, 376, 384, 425, 426, 427, 428, 433, 443, 460, 485, 490, 492, 504, 507, 552, 553, 569, 572, 598, 599, 605, 608, 611, 612, 614, 615, 638, 650, 651, 689, 700, 710, 716, 723, 760, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 803, 806, 814, 844, 862, 870, 877, 878, 885, 888, 906], "2101": 33, "classifi": [34, 35, 36, 37, 39, 43, 46, 53, 224, 238, 286, 333, 335, 336, 338, 489, 500, 502, 503, 638, 665, 703, 747, 748, 966], "featur": [34, 37, 41, 44, 45, 53, 126, 130, 169, 177, 198, 199, 223, 224, 235, 238, 247, 256, 261, 271, 278, 285, 304, 311, 312, 313, 319, 322, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 485, 488, 491, 492, 494, 495, 497, 500, 518, 552, 553, 638, 665, 676, 699, 773, 774, 870, 880, 882, 904, 909, 911, 915, 946, 947, 952, 959, 960, 966], "extract": [34, 35, 44, 47, 50, 53, 62, 64, 67, 82, 88, 94, 100, 102, 107, 110, 128, 140, 141, 152, 156, 162, 163, 168, 169, 171, 176, 178, 185, 186, 192, 193, 196, 198, 208, 216, 218, 219, 224, 227, 231, 233, 234, 235, 242, 243, 245, 251, 257, 258, 259, 266, 274, 278, 289, 291, 292, 298, 301, 302, 303, 304, 309, 311, 318, 319, 321, 322, 325, 326, 333, 335, 338, 339, 340, 341, 344, 346, 347, 348, 349, 377, 412, 413, 414, 415, 416, 417, 420, 422, 423, 433, 443, 458, 485, 489, 492, 493, 509, 519, 526, 552, 556, 561, 568, 573, 592, 604, 605, 619, 638, 642, 676, 701, 705, 706, 710, 716, 761, 764, 843, 869, 888, 966], "en": [34, 45, 224, 278, 288, 324, 964], "wikipedia": [34, 224, 256, 278], "org": [34, 41, 58, 59, 97, 98, 110, 115, 141, 142, 143, 144, 148, 162, 163, 224, 258, 260, 261, 264, 270, 274, 278, 291, 311, 316, 333, 334, 340, 344, 348, 452, 477, 478, 493, 524, 639, 664, 734, 773, 795, 825, 828, 840, 904, 946], "wiki": [34, 182, 224, 318, 321, 340, 344, 348, 638, 840, 904], "common_spatial_pattern": [34, 224], "document": [34, 41, 90, 115, 162, 163, 170, 176, 178, 187, 193, 195, 196, 197, 199, 204, 208, 217, 230, 231, 233, 235, 238, 244, 246, 247, 251, 270, 274, 278, 284, 285, 288, 289, 292, 293, 294, 295, 296, 303, 304, 305, 306, 307, 309, 310, 313, 315, 316, 318, 319, 322, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 399, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 495, 496, 498, 501, 502, 504, 506, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 535, 536, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 630, 631, 634, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 737, 738, 740, 741, 742, 743, 746, 751, 753, 754, 757, 759, 760, 761, 762, 763, 764, 765, 776, 777, 778, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 814, 815, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 843, 844, 846, 853, 854, 862, 871, 874, 878, 879, 880, 881, 884, 886, 889, 890, 891, 896, 897, 899, 900, 902, 903, 904, 905, 909, 910, 911, 915, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 956, 959], "physionet": [34, 164, 233, 278, 288, 291, 319, 452, 477, 478], "martin": [34, 36, 61, 73, 132, 278, 279, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 310, 316, 319, 322, 485], "billing": [34, 292, 301, 302], "tugraz": 34, "sklearn": [34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 145, 164, 198, 223, 224, 233, 256, 287, 291, 293, 300, 311, 425, 430, 486, 488, 491, 494, 495, 499, 502, 664, 840, 952], "discriminant_analysi": [34, 35], "lineardiscriminantanalysi": [34, 35], "model_select": [34, 35, 36, 38, 41, 42, 45, 287, 425, 430, 502], "shufflesplit": 34, "cross_val_scor": [34, 35], "classif": [34, 35, 36, 37, 38, 41, 77, 86, 165, 166, 173, 189, 192, 224, 278, 288, 319, 327, 333, 369, 371, 477, 486, 514, 568, 694, 793, 879, 966], "start": [34, 48, 55, 59, 60, 66, 88, 92, 97, 101, 109, 121, 124, 150, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 183, 184, 185, 187, 188, 192, 193, 194, 195, 197, 200, 201, 204, 205, 216, 224, 228, 229, 231, 232, 233, 234, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 257, 258, 269, 270, 274, 285, 291, 292, 295, 302, 304, 305, 309, 310, 311, 313, 318, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 352, 353, 354, 365, 405, 412, 413, 414, 415, 425, 428, 430, 485, 491, 492, 497, 509, 525, 526, 527, 543, 544, 551, 552, 553, 559, 561, 568, 572, 579, 583, 598, 604, 608, 627, 638, 641, 645, 650, 651, 655, 656, 658, 665, 666, 667, 668, 669, 671, 690, 706, 754, 766, 776, 777, 779, 780, 789, 790, 791, 792, 795, 796, 797, 798, 801, 802, 803, 804, 805, 806, 807, 831, 844, 850, 870, 872, 879, 885, 890, 892, 893, 899, 946, 949, 951, 954, 955, 956, 960, 961, 966], "cue": [34, 162, 309, 509], "feet": [34, 35, 140, 452], "montag": [34, 45, 97, 110, 143, 154, 162, 163, 178, 186, 217, 218, 233, 251, 271, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 302, 303, 304, 307, 308, 309, 310, 314, 319, 321, 322, 333, 334, 335, 336, 338, 350, 382, 385, 386, 388, 393, 395, 398, 400, 401, 402, 403, 404, 405, 406, 407, 436, 518, 537, 552, 553, 565, 671, 673, 677, 896, 908, 916], "standard_1005": [34, 97, 110, 186, 197, 233], "set_montag": [34, 41, 45, 94, 97, 110, 154, 156, 162, 163, 178, 186, 197, 209, 217, 218, 233, 251, 271, 284, 286, 289, 291, 292, 294, 295, 302, 304, 306, 309, 322, 333, 334, 335, 336, 338, 350, 518, 552, 553, 565, 577], "renam": [34, 35, 140, 150, 178, 217, 239, 244, 271, 280, 282, 285, 289, 292, 295, 300, 303, 307, 308, 311, 327, 333, 334, 335, 336, 338, 382, 410, 552, 553, 561, 568, 724, 844, 856, 911, 960, 965], "t1": [34, 35, 56, 70, 76, 140, 183, 184, 185, 186, 187, 188, 203, 240, 288, 289, 306, 307, 319, 321, 322, 325, 346, 348, 349, 373, 377, 378, 379, 390, 439, 462, 552, 672, 738, 864, 910], "t2": [34, 35, 140, 306, 390, 552], "skip_by_annot": [34, 35, 285, 286, 287, 307, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 665, 676], "train": [34, 36, 37, 39, 41, 42, 45, 115, 164, 223, 224, 281, 311, 318, 319, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 502, 638, 639, 889], "epochs_train": [34, 164], "edf": [34, 35, 110, 140, 164, 186, 220, 233, 282, 283, 285, 287, 288, 289, 291, 292, 293, 295, 300, 301, 302, 304, 306, 307, 308, 309, 310, 319, 322, 518, 552, 553, 561, 568, 576, 694, 949], "eegmmidb": [34, 35, 110, 140, 186, 233, 291, 452], "s001": [34, 35, 110, 140, 186, 233], "s001r06": [34, 35, 140, 186], "19999": [34, 140, 186, 233], "994": [34, 35, 97, 110, 140, 186, 233, 261], "s001r10": [34, 35, 140], "s001r14": [34, 35, 140], "265": [34, 35, 108, 109, 140, 150, 196, 219, 237, 278, 746, 751], "656": [34, 35, 237, 261], "descript": [34, 35, 101, 140, 150, 156, 162, 163, 164, 167, 169, 171, 178, 195, 196, 197, 213, 216, 218, 219, 220, 229, 239, 244, 245, 246, 251, 256, 271, 289, 293, 294, 295, 303, 304, 307, 311, 319, 321, 327, 333, 334, 335, 336, 338, 342, 352, 392, 393, 426, 427, 430, 439, 514, 552, 553, 554, 572, 597, 638, 641, 655, 656, 661, 666, 700, 789, 790, 791, 795, 796, 797, 798, 799, 891, 900], "t0": [34, 35, 104, 128, 140, 212, 271, 326, 439, 801, 802, 803], "ignor": [34, 35, 36, 67, 73, 96, 108, 137, 140, 142, 150, 162, 164, 167, 173, 178, 189, 193, 199, 208, 211, 213, 219, 227, 228, 229, 235, 256, 281, 284, 285, 286, 288, 291, 292, 293, 294, 295, 304, 309, 310, 311, 321, 325, 328, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 351, 352, 353, 354, 366, 367, 386, 394, 409, 419, 420, 425, 429, 431, 432, 434, 436, 441, 442, 447, 449, 450, 451, 454, 455, 456, 458, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 485, 492, 494, 504, 512, 514, 519, 521, 526, 532, 535, 542, 547, 549, 550, 552, 553, 554, 564, 566, 570, 574, 583, 616, 633, 637, 638, 641, 649, 665, 676, 696, 700, 702, 703, 711, 725, 727, 730, 737, 738, 754, 776, 778, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 841, 863, 874, 875, 876, 878, 879, 882, 885, 889, 890, 898, 899, 900, 901, 906, 908, 937, 939, 941], "durat": [34, 35, 38, 47, 75, 92, 97, 98, 100, 101, 102, 103, 104, 108, 109, 110, 118, 121, 122, 140, 150, 152, 162, 164, 167, 168, 171, 173, 176, 177, 178, 193, 194, 195, 213, 219, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 253, 264, 265, 266, 274, 282, 287, 288, 292, 293, 294, 295, 303, 305, 307, 308, 309, 311, 321, 325, 327, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 352, 412, 414, 428, 430, 485, 487, 491, 492, 496, 497, 509, 514, 521, 523, 524, 526, 552, 553, 570, 597, 598, 638, 640, 641, 643, 665, 676, 684, 690, 739, 741, 781, 810, 812, 822, 876, 885, 893, 899], "801": [34, 171, 237, 261, 270], "discrim": 34, "mont": [34, 278], "carlo": [34, 278, 291, 306, 307], "cross": [34, 35, 36, 37, 38, 41, 42, 45, 53, 58, 59, 60, 62, 70, 82, 106, 114, 133, 134, 147, 149, 151, 157, 164, 189, 193, 204, 223, 224, 228, 233, 235, 238, 252, 253, 260, 278, 281, 282, 283, 284, 285, 286, 291, 300, 301, 302, 303, 305, 306, 309, 310, 314, 319, 321, 330, 333, 335, 337, 338, 344, 345, 357, 359, 366, 367, 368, 425, 430, 431, 435, 443, 485, 488, 491, 497, 501, 502, 506, 526, 552, 604, 614, 615, 616, 617, 620, 635, 638, 648, 655, 665, 666, 676, 697, 703, 706, 708, 716, 792, 801, 802, 803, 804, 805, 806, 807, 813, 844, 872, 946, 962, 966], "epochs_data": [34, 283, 487, 490, 494], "get_data": [34, 35, 36, 38, 39, 40, 42, 44, 47, 97, 99, 103, 111, 124, 125, 128, 142, 143, 160, 164, 167, 168, 173, 176, 193, 194, 224, 229, 231, 234, 257, 261, 269, 270, 271, 274, 284, 287, 288, 291, 292, 294, 295, 305, 309, 322, 333, 334, 335, 336, 552, 553, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800], "epochs_data_train": 34, "cv": [34, 35, 36, 37, 38, 41, 42, 45, 224, 283, 284, 286, 425, 430, 501, 502], "test_siz": 34, "cv_split": 34, "split": [34, 36, 37, 41, 42, 45, 84, 94, 115, 122, 172, 186, 193, 223, 224, 235, 240, 252, 257, 266, 274, 278, 280, 282, 284, 286, 288, 292, 293, 295, 301, 308, 309, 310, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 425, 430, 502, 551, 552, 553, 574, 577, 611, 612, 676, 766, 775, 792, 795, 825, 828, 844, 872, 904, 909, 965], "assembl": [34, 35, 260, 294, 320, 616, 781], "lda": [34, 35], "norm_trac": [34, 35, 224, 285, 485], "scikit": [34, 35, 42, 44, 45, 145, 224, 233, 282, 283, 285, 287, 289, 291, 293, 298, 311, 320, 489, 491, 493, 494, 495, 496, 498, 499, 500, 503, 638], "clf": [34, 35, 36, 37, 38, 39, 41, 44, 224, 282, 500], "class_bal": 34, "accuraci": [34, 36, 41, 59, 108, 164, 213, 278, 291, 295, 330, 333, 334, 335, 336, 342, 442, 443, 485, 491, 492, 497, 506, 528, 552, 553, 616, 637, 638, 652, 653, 671, 746, 751, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 824, 827, 834, 863, 878, 885, 889, 898, 901, 906, 908], "chanc": [34, 35, 36, 37, 224, 303, 312], "fit_transform": [34, 35, 36, 40, 44, 224, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 499, 500, 639], "plot_pattern": [34, 38, 224, 284, 304, 306, 485, 492], "ch_type": [34, 40, 48, 52, 68, 90, 107, 109, 114, 128, 140, 142, 148, 153, 154, 158, 168, 169, 172, 176, 177, 178, 193, 197, 203, 204, 218, 233, 238, 239, 247, 251, 261, 269, 270, 284, 291, 310, 330, 333, 334, 335, 336, 338, 388, 389, 445, 485, 492, 552, 553, 581, 596, 637, 638, 643, 653, 665, 729, 733, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 877, 878, 885, 889, 901, 902, 906, 908, 917], "au": [34, 321, 330, 333, 334, 335, 336, 342, 445, 485, 492, 552, 553, 663, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 885, 898, 906], "64": [34, 35, 38, 39, 45, 47, 52, 58, 59, 60, 61, 67, 71, 72, 73, 76, 84, 85, 108, 109, 110, 129, 131, 136, 140, 142, 150, 164, 170, 185, 186, 196, 197, 198, 203, 205, 208, 211, 212, 218, 219, 224, 237, 240, 253, 256, 257, 260, 261, 278, 319, 322, 330, 333, 334, 335, 336, 339, 342, 344, 485, 492, 550, 552, 553, 575, 611, 612, 621, 622, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908, 949, 952, 958], "7e": [34, 35, 58, 61, 71, 74, 80, 81, 84, 97, 122, 149, 177, 179, 189, 199, 205, 206, 219, 228], "9333333333333333": 34, "5333333333333333": 34, "00018": 34, "sfreq": [34, 35, 40, 45, 47, 57, 90, 92, 95, 96, 97, 101, 118, 120, 121, 122, 123, 137, 139, 142, 154, 156, 163, 164, 171, 193, 195, 196, 199, 218, 219, 223, 229, 230, 231, 239, 240, 241, 244, 245, 246, 251, 253, 271, 274, 282, 288, 291, 302, 327, 328, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 352, 445, 487, 490, 491, 496, 497, 498, 509, 511, 513, 520, 521, 523, 552, 553, 680, 690, 694, 781, 789, 790, 791, 794, 795, 796, 797, 798, 800, 801, 802, 803, 812, 814, 815, 820, 822, 823, 824, 825, 826, 879, 887], "w_length": 34, "int": [34, 37, 45, 57, 95, 99, 118, 121, 123, 137, 142, 170, 176, 187, 196, 198, 219, 223, 230, 231, 240, 244, 251, 253, 266, 271, 274, 287, 291, 295, 308, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 386, 387, 397, 399, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 501, 502, 504, 506, 507, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 535, 536, 538, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 735, 737, 738, 739, 740, 741, 742, 743, 752, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 772, 775, 776, 777, 778, 779, 780, 781, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 813, 814, 815, 818, 819, 820, 821, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 839, 843, 844, 846, 853, 854, 855, 859, 862, 863, 864, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 884, 885, 886, 889, 890, 891, 892, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 915, 923, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945], "w_step": 34, "w_start": 34, "scores_window": 34, "train_idx": 34, "test_idx": 34, "y_train": [34, 164, 223], "y_test": [34, 164, 223], "x_train": [34, 223], "x_test": [34, 223], "slide": [34, 38, 47, 183, 271, 343, 823, 824, 826, 827], "score_this_window": 34, "w_time": [34, 35], "linestyl": [34, 35, 37, 47, 125, 139, 140, 141, 177, 224, 230, 234, 239, 261, 274, 295, 812, 822, 870, 894], "axhlin": [34, 35, 36, 37, 39, 45, 47, 108, 109, 140, 141, 171, 187, 224, 271, 638, 892], "xlabel": [34, 35, 41, 42, 45, 48, 54, 55, 63, 65, 67, 79, 84, 95, 99, 109, 118, 121, 125, 135, 136, 138, 164, 178, 187, 204, 207, 208, 223, 230, 239, 240, 253, 256, 258, 266, 270, 271, 274, 285, 291, 812, 822], "ylabel": [34, 35, 41, 42, 45, 48, 54, 55, 63, 65, 67, 79, 84, 95, 96, 99, 109, 118, 121, 125, 135, 136, 138, 164, 178, 187, 204, 207, 208, 223, 230, 235, 239, 240, 253, 256, 258, 266, 270, 271, 274, 812, 822], "legend": [34, 35, 36, 37, 38, 42, 45, 47, 48, 54, 63, 64, 65, 67, 71, 95, 97, 124, 125, 138, 139, 164, 171, 172, 177, 189, 193, 199, 207, 223, 224, 239, 244, 245, 266, 270, 271, 274, 284, 286, 288, 289, 292, 294, 301, 305, 306, 310, 333, 334, 335, 336, 812, 822, 844, 859, 869, 870, 876, 879, 884], "loc": [34, 36, 42, 63, 65, 97, 140, 152, 163, 167, 170, 171, 172, 196, 203, 207, 210, 213, 239, 270, 274, 322, 338, 400, 687, 812, 822, 869, 916], "zoltan": [34, 224, 278, 485], "kole": [34, 224, 278, 485], "quantit": [34, 189, 224, 278, 312, 638, 946], "map": [34, 36, 42, 45, 49, 50, 51, 52, 53, 62, 66, 67, 69, 82, 84, 98, 101, 104, 106, 114, 122, 133, 134, 135, 137, 143, 147, 151, 153, 156, 157, 161, 162, 163, 170, 171, 172, 173, 178, 183, 185, 187, 192, 193, 195, 198, 202, 205, 208, 209, 223, 224, 227, 228, 229, 230, 233, 234, 235, 239, 244, 252, 254, 255, 256, 261, 264, 265, 266, 275, 278, 284, 285, 289, 292, 293, 296, 299, 300, 302, 304, 308, 311, 314, 318, 321, 327, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 357, 359, 366, 380, 382, 394, 410, 431, 434, 435, 443, 485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 506, 509, 512, 514, 526, 530, 538, 547, 548, 549, 550, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 593, 596, 597, 604, 605, 616, 634, 635, 638, 639, 647, 653, 663, 697, 703, 706, 708, 709, 713, 714, 723, 724, 729, 736, 738, 743, 749, 754, 757, 770, 772, 773, 776, 778, 782, 783, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 805, 844, 846, 863, 865, 870, 873, 874, 876, 880, 881, 885, 891, 898, 899, 904, 905, 906, 907, 908, 909, 910, 916, 951, 966], "abnorm": [34, 224, 278], "clinic": [34, 97, 98, 106, 140, 166, 178, 224, 228, 232, 233, 278, 319, 322, 333, 334, 605, 637, 638, 646, 647, 653, 676, 691, 795, 825, 828, 966], "electroencephalographi": [34, 84, 98, 106, 140, 178, 224, 228, 232, 278, 322, 344, 637, 647, 691], "neurophysiologi": [34, 97, 98, 106, 140, 178, 224, 228, 232, 233, 278, 322, 333, 334, 637, 638, 646, 647, 653, 691, 795, 825, 828], "79": [34, 39, 42, 45, 61, 67, 71, 73, 108, 131, 136, 140, 142, 147, 150, 184, 185, 196, 203, 208, 211, 218, 223, 224, 237, 256, 257, 260, 261, 278, 477, 505], "440": [34, 108, 150, 224, 278], "447": [34, 150, 224, 278], "1991": [34, 45, 224, 278, 485], "1016": [34, 38, 39, 44, 45, 47, 61, 68, 70, 85, 86, 97, 98, 102, 103, 106, 122, 129, 140, 141, 147, 149, 155, 171, 178, 182, 189, 207, 224, 228, 230, 232, 233, 240, 256, 257, 261, 278, 316, 319, 322, 333, 334, 335, 336, 339, 344, 345, 366, 371, 425, 431, 461, 489, 491, 492, 493, 503, 505, 547, 550, 605, 606, 616, 620, 637, 638, 646, 647, 652, 653, 680, 683, 691, 746, 749, 751, 776, 777, 779, 780, 782, 783, 795, 810, 812, 822, 825, 828, 863, 946], "0013": [34, 98, 106, 140, 178, 224, 228, 232, 278, 322, 637, 647, 691], "4694": [34, 98, 106, 140, 178, 224, 228, 232, 278, 322, 637, 647, 691], "90163": [34, 224, 278], "gerwin": [34, 233, 278, 319, 452], "schalk": [34, 233, 278, 319, 452], "denni": [34, 233, 278, 319, 452], "mcfarland": [34, 233, 278, 319, 452], "thilo": [34, 233, 278, 319, 452], "hinterberg": [34, 233, 278, 319, 452], "niel": [34, 233, 278, 307, 319, 452], "birbaum": [34, 233, 278, 319, 452], "jonathan": [34, 129, 233, 257, 278, 293, 319, 452, 466], "wolpaw": [34, 233, 278, 319, 452], "bci2000": [34, 233, 278, 319, 452], "bci": [34, 41, 115, 140, 186, 224, 233, 278, 301, 319, 452, 639], "ieee": [34, 41, 66, 72, 77, 98, 110, 111, 115, 145, 164, 171, 189, 207, 224, 233, 269, 278, 318, 319, 322, 333, 334, 335, 336, 366, 367, 369, 425, 452, 478, 485, 509, 549, 550, 552, 553, 638, 639, 647, 684, 793, 795, 799, 815, 825, 828, 946], "transact": [34, 41, 77, 98, 111, 115, 145, 164, 189, 207, 224, 233, 269, 278, 318, 319, 322, 333, 334, 335, 336, 366, 367, 369, 425, 452, 478, 485, 549, 552, 553, 605, 638, 639, 647, 684, 793, 799, 815, 946], "biomed": [34, 41, 98, 111, 115, 145, 164, 207, 217, 224, 233, 253, 278, 318, 319, 322, 324, 366, 367, 452, 478, 485, 638, 639, 647, 684, 964], "engin": [34, 41, 98, 110, 111, 115, 145, 207, 224, 233, 234, 235, 253, 278, 311, 318, 319, 322, 366, 367, 452, 478, 485, 605, 638, 639, 647, 684, 958], "1034": [34, 44, 233, 278, 319, 452, 742], "1043": [34, 196, 233, 278, 319, 452], "2004": [34, 97, 233, 278, 319, 322, 425, 452, 646, 749], "1109": [34, 41, 66, 72, 77, 98, 110, 111, 115, 145, 164, 171, 189, 207, 224, 233, 269, 278, 318, 319, 322, 333, 334, 335, 336, 366, 367, 369, 425, 452, 478, 485, 509, 549, 550, 552, 553, 638, 639, 647, 684, 793, 799, 815, 946], "tbme": [34, 41, 98, 111, 115, 145, 224, 233, 278, 318, 319, 452, 485, 638, 639, 647, 684], "827072": [34, 233, 278, 319, 452], "ari": [34, 164, 233, 278, 303, 319, 452, 477, 478, 959], "goldberg": [34, 164, 233, 278, 319, 452, 477, 478], "lui": [34, 164, 233, 278, 319, 452, 477, 478], "amar": [34, 164, 233, 278, 319, 452, 477, 478], "leon": [34, 164, 233, 278, 319, 452, 477, 478], "glass": [34, 57, 61, 66, 70, 85, 87, 164, 208, 233, 278, 319, 341, 347, 348, 349, 452, 477, 478, 905, 909, 910], "jeffrei": [34, 164, 233, 278, 319, 452, 477, 478, 605], "hausdorff": [34, 164, 233, 278, 319, 452, 477, 478], "plamen": [34, 164, 233, 278, 319, 452, 477, 478], "ivanov": [34, 164, 233, 278, 319, 452, 477, 478], "roger": [34, 36, 164, 233, 278, 319, 452, 477, 478], "joseph": [34, 164, 233, 278, 319, 452, 477, 478], "mietu": [34, 164, 233, 278, 319, 452, 477, 478], "georg": [34, 164, 233, 240, 278, 307, 308, 319, 452, 477, 478, 652], "moodi": [34, 164, 233, 278, 319, 452, 477, 478], "chung": [34, 164, 233, 278, 319, 452, 477, 478], "kang": [34, 164, 233, 278, 319, 452, 477, 478], "peng": [34, 164, 233, 278, 319, 452, 477, 478], "h": [34, 124, 129, 140, 164, 230, 232, 233, 246, 274, 278, 305, 307, 308, 316, 318, 319, 322, 325, 327, 333, 334, 391, 452, 477, 478, 521, 524, 637, 691, 749, 771, 787, 809, 876, 887], "eugen": [34, 164, 233, 278, 319, 452, 477, 478], "stanlei": [34, 164, 233, 278, 319, 452, 477, 478], "physiobank": [34, 164, 233, 278, 319, 452, 477, 478], "physiotoolkit": [34, 164, 233, 278, 319, 452, 477, 478], "research": [34, 94, 97, 150, 164, 168, 171, 178, 182, 195, 227, 233, 241, 253, 271, 278, 313, 316, 319, 324, 452, 477, 478, 572, 606, 680, 771, 960, 964], "resourc": [34, 152, 164, 171, 231, 233, 278, 314, 319, 323, 452, 477, 478, 952], "complex": [34, 58, 63, 142, 162, 164, 220, 233, 256, 278, 287, 292, 296, 303, 304, 307, 310, 311, 319, 321, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 359, 452, 477, 478, 498, 552, 553, 609, 741, 795, 796, 797, 798, 814, 815, 823, 824, 826], "circul": [34, 164, 233, 278, 319, 452, 477, 478], "2000": [34, 36, 164, 220, 229, 230, 232, 233, 235, 244, 278, 318, 319, 322, 333, 334, 335, 336, 338, 452, 477, 478, 485, 514, 552, 553, 554, 605, 637, 664, 768], "1161": [34, 164, 233, 278, 319, 452, 477, 478], "cir": [34, 164, 233, 278, 319, 452, 477, 478], "e215": [34, 164, 233, 278, 319, 452, 477, 478], "964": [34, 46, 966], "decoding_csp_eeg": [34, 46, 966], "decomposit": [35, 37, 40, 43, 46, 53, 54, 55, 56, 58, 64, 65, 70, 73, 78, 83, 87, 102, 104, 131, 132, 135, 136, 138, 140, 141, 153, 193, 199, 208, 224, 227, 233, 234, 251, 252, 256, 258, 259, 261, 264, 266, 270, 271, 278, 283, 291, 293, 294, 305, 318, 322, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 485, 492, 493, 498, 499, 519, 552, 553, 566, 598, 619, 638, 653, 674, 789, 791, 795, 797, 802, 805, 815, 821, 823, 824, 825, 826, 827, 966], "iter": [35, 45, 53, 61, 62, 69, 70, 82, 85, 110, 118, 121, 122, 123, 132, 140, 161, 164, 184, 196, 199, 206, 207, 223, 233, 246, 253, 260, 264, 265, 266, 278, 280, 288, 291, 295, 306, 308, 309, 322, 327, 328, 330, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 357, 360, 361, 364, 372, 418, 425, 431, 436, 488, 495, 502, 526, 547, 548, 549, 550, 551, 552, 553, 588, 604, 605, 607, 609, 612, 638, 641, 648, 653, 658, 674, 708, 739, 754, 774, 775, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 803, 814, 831, 834, 844, 859, 889, 905, 966], "roll": [35, 137, 153, 844, 914], "laura": [35, 224, 278, 284, 285], "gwilliam": [35, 224, 278, 284, 285], "nyu": [35, 63, 129, 148, 161, 198, 256, 289], "jean": [35, 36, 37, 38, 39, 40, 42, 44, 98, 106, 212, 224, 228, 233, 278, 280, 281, 282, 283, 284, 285, 286, 288, 291, 293, 294, 295, 301, 302, 304, 318, 322, 638, 647, 749], "remi": [35, 36, 37, 38, 39, 40, 42, 44, 280, 281, 282, 283, 284, 285, 286, 288, 291, 293, 294, 295, 301, 302, 304], "king": [35, 36, 37, 38, 39, 40, 42, 44, 224, 278, 280, 281, 282, 283, 284, 285, 286, 288, 291, 293, 294, 295, 301, 302, 304], "jeanremi": [35, 36, 37, 38, 39, 40, 42, 44], "alex": [35, 58, 64, 97, 98, 110, 142, 143, 144, 148, 162, 163, 212, 260, 261, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 964], "barach": [35, 38, 41, 115, 224, 278, 280, 283, 285, 485], "stratifiedkfold": [35, 36, 41, 42, 286, 502], "make_pipelin": [35, 36, 37, 38, 39, 41, 44, 164, 224, 500], "labelencod": 35, "n_split": [35, 36, 38, 41, 42, 45, 502], "speed": [35, 36, 37, 45, 58, 59, 67, 68, 70, 76, 102, 109, 110, 111, 122, 131, 137, 141, 162, 168, 172, 178, 185, 188, 189, 192, 199, 206, 207, 210, 223, 224, 227, 233, 235, 237, 240, 257, 258, 261, 264, 266, 280, 281, 285, 287, 289, 291, 292, 293, 294, 295, 298, 300, 303, 310, 311, 314, 323, 333, 334, 340, 341, 344, 345, 347, 348, 349, 490, 491, 497, 541, 552, 553, 611, 612, 638, 731, 814, 844, 876, 878, 899, 904, 909, 920, 946, 951], "shuffl": [35, 36, 38, 41, 261, 283], "n_cycl": [35, 58, 135, 138, 140, 142, 193, 230, 258, 259, 260, 261, 270, 333, 334, 335, 336, 498, 552, 553, 621, 622, 789, 791, 795, 797, 802, 805, 810, 812, 822, 823, 824, 826, 827], "mani": [35, 70, 97, 102, 140, 148, 149, 167, 169, 173, 176, 177, 178, 179, 182, 185, 187, 188, 189, 193, 194, 198, 199, 204, 218, 223, 227, 228, 229, 230, 231, 233, 234, 235, 251, 253, 256, 269, 271, 274, 275, 282, 287, 291, 292, 293, 294, 295, 298, 303, 305, 307, 310, 311, 314, 318, 320, 321, 322, 324, 325, 326, 333, 334, 338, 343, 345, 366, 419, 425, 509, 514, 527, 544, 638, 738, 774, 784, 792, 844, 862, 872, 889, 891, 892, 946, 948, 949, 955, 956, 957], "cycl": [35, 135, 142, 211, 213, 230, 270, 271, 287, 311, 333, 334, 412, 498, 552, 553, 621, 622, 638, 802, 805, 810, 812, 822, 823, 824, 826, 827, 870, 876, 879, 891, 899], "min_freq": 35, "max_freq": 35, "n_freq": [35, 142, 223, 260, 270, 333, 334, 335, 336, 490, 498, 552, 553, 622, 769, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 812, 814, 815, 821, 822, 823, 824, 826, 827], "bin": [35, 48, 53, 58, 97, 126, 130, 148, 152, 169, 171, 198, 230, 238, 240, 241, 258, 264, 269, 271, 291, 311, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 359, 366, 493, 552, 553, 560, 575, 665, 699, 769, 773, 774, 776, 777, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 870, 878, 882, 955, 956, 958, 961, 965, 966], "tupl": [35, 143, 177, 197, 198, 199, 223, 229, 233, 244, 246, 260, 261, 292, 293, 303, 305, 307, 308, 327, 328, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 356, 357, 372, 383, 392, 393, 431, 458, 485, 492, 500, 518, 519, 522, 525, 551, 552, 553, 561, 563, 564, 565, 568, 569, 570, 576, 581, 584, 592, 604, 621, 622, 637, 638, 641, 646, 653, 655, 656, 658, 663, 675, 678, 700, 706, 707, 740, 741, 742, 754, 766, 774, 776, 777, 779, 780, 781, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 815, 831, 834, 844, 845, 854, 855, 860, 863, 865, 866, 868, 870, 874, 875, 877, 878, 880, 882, 884, 885, 887, 889, 892, 894, 898, 900, 901, 904, 905, 906, 908, 909, 910, 914, 925], "linspac": [35, 45, 58, 66, 68, 95, 97, 141, 145, 163, 168, 177, 199, 204, 223, 227, 234, 235, 251, 252, 271], "freq_rang": [35, 271], "infer": [35, 36, 69, 70, 141, 183, 192, 197, 230, 245, 246, 257, 261, 262, 263, 278, 283, 285, 293, 295, 303, 309, 321, 322, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 366, 367, 388, 392, 425, 429, 430, 434, 441, 442, 443, 485, 492, 515, 516, 518, 528, 529, 547, 549, 550, 552, 553, 561, 563, 568, 616, 638, 719, 767, 773, 776, 777, 778, 779, 780, 782, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 859, 884, 885, 886, 893, 899, 908, 944, 959, 966], "gap": [35, 274, 278, 284, 285, 286, 310, 322, 549, 550, 552, 553, 572, 899], "window_spac": 35, "centered_w_tim": 35, "n_window": [35, 665], "instanti": [35, 171, 199, 224, 233, 251, 288, 302, 303, 328, 330, 331, 332, 333, 334, 338, 342, 343, 345, 382, 553, 789, 791, 793, 797, 799, 847, 859], "le": 35, "59999": [35, 211], "374": [35, 39, 108, 150, 196, 244, 256], "loop": [35, 68, 137, 164, 176, 228, 261, 266, 271, 278, 295, 319, 322, 478, 506, 649, 665, 676, 844], "init": [35, 311, 447], "freq_scor": 35, "fmin": [35, 58, 131, 132, 136, 141, 142, 144, 160, 164, 269, 270, 271, 288, 302, 303, 310, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 490, 552, 553, 611, 612, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 806, 814, 815, 825, 828, 844, 865, 900, 904, 906, 909, 910, 917], "fmax": [35, 58, 102, 131, 132, 136, 141, 142, 144, 160, 164, 193, 227, 231, 240, 269, 270, 271, 288, 302, 303, 310, 333, 334, 335, 336, 490, 552, 553, 611, 612, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 806, 814, 815, 825, 828, 844, 861, 900, 906, 917], "enumer": [35, 36, 41, 45, 54, 65, 66, 73, 98, 122, 124, 132, 135, 140, 142, 162, 163, 173, 176, 177, 178, 186, 223, 230, 233, 235, 239, 252, 261, 266, 271], "being": [35, 71, 142, 144, 163, 187, 193, 198, 199, 228, 230, 235, 236, 238, 244, 253, 256, 258, 261, 274, 284, 285, 287, 288, 291, 292, 294, 295, 303, 305, 306, 308, 309, 310, 311, 312, 322, 330, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 433, 436, 519, 529, 543, 552, 553, 592, 638, 665, 667, 711, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 864, 876, 877, 880, 882, 883, 900, 905, 910, 917, 918, 925], "w_size": 35, "isol": [35, 71, 142, 229, 233, 235, 301], "raw_filt": [35, 142, 168, 231, 233], "pad": [35, 142, 231, 256, 261, 271, 274, 283, 284, 285, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 391, 520, 523, 524, 525, 552, 553, 815], "drop_bad": [35, 169, 178, 219, 229, 282, 287, 288, 294, 295, 304, 322, 333, 334, 384, 542, 638, 793, 794, 795, 796], "fold": [35, 36, 38, 41, 42, 52, 164, 339, 344, 502, 752, 755], "roc_auc": [35, 37, 39, 224, 488, 495], "axi": [35, 36, 38, 40, 41, 42, 45, 47, 48, 54, 57, 61, 71, 84, 87, 95, 97, 99, 111, 118, 124, 128, 132, 135, 137, 138, 140, 141, 143, 144, 145, 147, 160, 164, 167, 168, 169, 171, 177, 178, 183, 187, 193, 199, 208, 210, 212, 213, 219, 223, 224, 228, 229, 230, 240, 244, 247, 251, 256, 259, 261, 264, 266, 270, 271, 274, 275, 278, 284, 287, 288, 289, 291, 293, 294, 295, 303, 304, 309, 310, 322, 325, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 347, 348, 349, 356, 384, 391, 436, 485, 492, 498, 505, 525, 544, 552, 553, 564, 637, 638, 652, 653, 742, 766, 768, 776, 777, 779, 780, 783, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 821, 823, 824, 825, 826, 827, 828, 844, 846, 859, 862, 863, 870, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 889, 891, 893, 894, 898, 899, 900, 901, 906, 907, 908, 958], "701": [35, 122, 162, 191, 261, 966], "00016": 35, "00017": 35, "205": [35, 82, 150, 196, 211, 213, 234, 243, 256, 966], "281": [35, 140, 150, 196, 224, 237, 249, 256], "629": [35, 261], "00015": 35, "165": [35, 150, 173, 196, 213, 215, 224, 230, 233, 237, 239, 256, 261, 278, 966], "031": [35, 156, 167, 176, 196, 211, 253], "581": [35, 145, 157, 224, 237, 966], "00013": 35, "00014": 35, "8e": [35, 58, 61, 75, 102, 137, 149, 189, 199, 210, 213, 219, 224], "139": [35, 134, 135, 150, 196, 208, 224, 237, 253, 282, 346, 966], "869": [35, 224, 237], "549": [35, 236, 278], "00011": 35, "756": [35, 144, 157, 237, 261, 966], "523": [35, 39, 150, 224, 261], "bar": [35, 170, 177, 198, 210, 246, 247, 271, 287, 288, 289, 293, 303, 304, 306, 307, 322, 330, 333, 334, 335, 336, 342, 343, 485, 488, 492, 495, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 870, 875, 876, 877, 878, 882, 885, 889, 893, 898, 899, 901, 906, 908, 915], "width": [35, 142, 150, 187, 198, 199, 227, 230, 231, 241, 247, 256, 271, 274, 286, 291, 294, 295, 303, 306, 321, 322, 331, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 383, 391, 396, 487, 496, 521, 523, 524, 544, 552, 553, 658, 660, 662, 680, 789, 790, 791, 795, 796, 797, 798, 810, 812, 822, 825, 828, 844, 854, 855, 874, 875, 902, 904, 905, 909, 946], "edgecolor": [35, 36, 270], "black": [35, 47, 71, 73, 74, 76, 140, 162, 169, 178, 187, 218, 235, 239, 275, 292, 330, 331, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 859, 862, 863, 874, 878, 880, 884, 885, 889, 897, 898, 900, 901, 904, 906, 907, 908, 909], "xtick": [35, 41, 45, 118, 223, 230, 240, 256, 274], "tf_score": 35, "center": [35, 63, 71, 95, 97, 107, 118, 123, 140, 148, 149, 178, 183, 185, 187, 197, 212, 227, 229, 230, 231, 235, 241, 256, 271, 283, 319, 322, 324, 325, 335, 336, 339, 344, 375, 494, 564, 590, 601, 638, 647, 659, 738, 741, 746, 752, 755, 789, 790, 791, 795, 796, 797, 798, 834, 844, 849, 886, 897, 905, 914, 964], "w_tmin": 35, "w_tmax": 35, "av_tfr": 35, "newaxi": [35, 41, 54, 128, 145, 261, 264, 265, 266, 844], "white": [35, 50, 52, 67, 78, 137, 140, 144, 149, 155, 160, 162, 169, 183, 185, 186, 187, 203, 205, 218, 238, 240, 252, 256, 261, 274, 275, 292, 303, 318, 321, 325, 331, 333, 334, 335, 336, 339, 340, 341, 344, 346, 347, 348, 349, 441, 543, 552, 553, 590, 624, 625, 693, 711, 737, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862, 864, 874, 884, 886, 904, 907, 909], "vlim": [35, 45, 97, 107, 128, 137, 142, 150, 168, 169, 232, 235, 239, 261, 271, 291, 292, 305, 306, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 855, 863, 878, 885, 889, 898, 901, 906, 908], "red": [35, 80, 85, 97, 107, 108, 110, 128, 140, 159, 160, 169, 171, 177, 183, 187, 197, 205, 208, 218, 223, 227, 228, 231, 235, 238, 239, 240, 241, 247, 261, 264, 270, 271, 293, 299, 311, 321, 329, 330, 331, 333, 334, 335, 336, 339, 342, 485, 492, 552, 553, 637, 638, 653, 710, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 861, 863, 870, 871, 874, 877, 878, 880, 885, 889, 898, 901, 906, 908], "433": [35, 46, 150, 237, 238, 243, 261, 966], "decoding_csp_timefreq": [35, 46, 966], "supervis": [36, 44, 115, 164, 485, 502], "It": [36, 39, 57, 65, 73, 81, 87, 97, 98, 102, 118, 122, 123, 131, 142, 144, 145, 149, 167, 169, 171, 172, 176, 177, 178, 183, 184, 185, 186, 187, 193, 196, 197, 198, 199, 202, 204, 207, 216, 217, 218, 220, 224, 228, 229, 231, 232, 233, 234, 236, 237, 238, 244, 245, 247, 251, 256, 258, 259, 261, 264, 266, 270, 271, 284, 287, 289, 293, 304, 311, 312, 314, 318, 319, 321, 322, 325, 326, 329, 332, 333, 334, 335, 336, 337, 338, 339, 341, 347, 348, 349, 351, 356, 366, 367, 373, 382, 400, 412, 425, 430, 436, 485, 493, 494, 520, 528, 547, 549, 550, 552, 553, 561, 568, 572, 573, 585, 596, 599, 605, 611, 612, 616, 621, 622, 638, 642, 648, 658, 664, 665, 676, 677, 684, 690, 697, 701, 705, 710, 714, 716, 755, 761, 764, 778, 783, 789, 790, 791, 794, 795, 796, 797, 798, 800, 812, 819, 822, 834, 844, 884, 889, 909, 935, 938, 942, 946, 951, 955, 956, 959, 962], "character": [36, 39, 224, 278, 322, 638, 751, 892], "confus": [36, 41, 164, 171, 220, 311, 749], "serv": [36, 195, 245, 261, 311, 312, 322, 330, 333, 334, 335, 336, 342, 350, 485, 492, 509, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 842, 862, 863, 878, 885, 889, 898, 901, 906, 908], "proxi": [36, 233, 237], "mental": [36, 39, 224, 278], "rsa": [36, 284, 319, 959], "imag": [36, 42, 53, 56, 58, 59, 61, 66, 70, 72, 81, 85, 97, 115, 135, 140, 148, 151, 153, 156, 157, 163, 170, 173, 176, 182, 183, 186, 187, 193, 197, 203, 207, 209, 218, 219, 227, 230, 233, 234, 235, 236, 253, 256, 257, 258, 259, 260, 261, 270, 271, 274, 278, 280, 282, 283, 285, 287, 288, 289, 293, 294, 295, 298, 301, 302, 303, 304, 305, 307, 310, 319, 321, 324, 330, 333, 334, 335, 336, 338, 342, 343, 345, 346, 348, 349, 358, 359, 360, 361, 366, 367, 373, 377, 382, 383, 391, 408, 424, 431, 437, 461, 485, 492, 547, 549, 550, 552, 553, 562, 574, 605, 637, 638, 653, 671, 673, 703, 738, 744, 745, 746, 747, 748, 749, 750, 751, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 832, 833, 834, 844, 845, 848, 862, 863, 864, 877, 878, 882, 884, 885, 889, 891, 898, 901, 902, 906, 907, 908, 910, 914, 916, 953, 958, 959, 964, 966], "92": [36, 39, 45, 60, 61, 70, 108, 131, 140, 142, 150, 170, 196, 207, 218, 224, 229, 237, 256, 257, 258, 260, 261, 265, 266, 322, 601], "human": [36, 45, 59, 84, 122, 141, 155, 171, 178, 182, 205, 207, 223, 253, 278, 318, 319, 321, 324, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 359, 366, 446, 460, 487, 491, 496, 521, 523, 524, 552, 553, 643, 778, 812, 822, 823, 826, 950, 959, 964], "anim": [36, 163, 282, 319, 335, 336], "inanim": [36, 319], "bodi": [36, 235, 236, 319, 834], "part": [36, 147, 167, 169, 171, 178, 182, 185, 187, 188, 189, 198, 209, 227, 230, 231, 235, 240, 244, 253, 274, 278, 281, 292, 295, 301, 308, 310, 311, 312, 314, 321, 322, 323, 324, 333, 335, 336, 338, 339, 348, 349, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 514, 528, 529, 547, 549, 550, 552, 554, 574, 611, 612, 616, 716, 766, 776, 777, 779, 780, 795, 844, 863, 882, 886, 953, 963], "6gb": 36, "build": [36, 38, 47, 58, 71, 182, 199, 202, 219, 227, 228, 230, 256, 264, 265, 266, 292, 293, 310, 312, 951, 956, 958], "jaakko": [36, 219, 280, 281, 282, 283, 284, 285, 302], "leppakanga": [36, 219, 280, 281, 282, 283, 284, 285, 302], "jaeilepp": [36, 219], "student": [36, 219, 311, 314], "jyu": [36, 219], "panda": [36, 40, 129, 140, 167, 170, 174, 175, 176, 178, 192, 198, 218, 219, 238, 244, 257, 269, 282, 283, 284, 288, 289, 291, 293, 294, 298, 299, 311, 314, 322, 327, 328, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 509, 552, 553, 703, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 952, 966], "read_csv": [36, 218, 219], "linear_model": [36, 37, 38, 39, 41, 44, 224, 314], "logisticregress": [36, 37, 39, 41, 224, 489, 500], "manifold": [36, 145, 147, 863], "md": [36, 278, 742], "standardscal": [36, 37, 39, 44, 224, 494], "stimulu": [36, 39, 59, 60, 75, 96, 98, 100, 101, 108, 109, 118, 121, 135, 148, 167, 169, 170, 171, 173, 176, 189, 193, 194, 195, 196, 207, 210, 216, 219, 220, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 244, 245, 246, 247, 253, 260, 266, 271, 286, 295, 307, 309, 310, 319, 321, 322, 325, 327, 333, 334, 335, 336, 338, 384, 417, 425, 491, 509, 514, 552, 553, 635, 641, 754, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "visual_stimuli": 36, "csv": [36, 152, 219, 246, 287, 294, 305, 327, 400, 406, 577, 694], "cond": [36, 66, 72, 85, 88, 127, 129, 177, 261, 266, 326], "restrict": [36, 54, 55, 132, 155, 169, 178, 185, 188, 193, 205, 231, 232, 235, 236, 244, 252, 256, 259, 260, 271, 283, 289, 291, 292, 294, 304, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 347, 348, 349, 353, 354, 366, 367, 531, 532, 552, 553, 605, 606, 607, 608, 609, 611, 612, 621, 622, 630, 631, 634, 635, 636, 752, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 807, 813, 925, 949, 965], "max_trigg": 36, "row": [36, 100, 129, 140, 168, 169, 170, 171, 172, 177, 193, 196, 199, 202, 224, 239, 244, 256, 257, 274, 282, 291, 295, 322, 328, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 368, 429, 441, 485, 491, 492, 509, 552, 553, 577, 617, 620, 638, 639, 665, 774, 775, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 844, 872, 877, 885, 889, 892], "cond_tag": 36, "els": [36, 41, 54, 57, 66, 73, 122, 124, 142, 178, 187, 202, 219, 230, 235, 244, 256, 271, 299, 311, 323, 330, 331, 333, 334, 335, 336, 338, 357, 372, 485, 492, 552, 553, 596, 604, 622, 638, 639, 658, 738, 744, 745, 746, 747, 748, 749, 750, 751, 772, 793, 794, 799, 800, 823, 824, 831, 874, 878, 899, 952], "bodypart": 36, "natur": [36, 45, 150, 155, 199, 223, 241, 260, 278, 303, 319, 322, 460, 491, 525, 680], "n_run": 36, "sample_subject_": 36, "_tsss_mc": 36, "on_split_miss": [36, 293, 552, 574], "filenam": [36, 69, 70, 98, 100, 101, 104, 108, 109, 110, 121, 162, 167, 168, 173, 178, 183, 184, 194, 195, 199, 227, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 253, 274, 283, 284, 289, 293, 294, 295, 302, 303, 304, 325, 327, 328, 330, 333, 334, 335, 336, 339, 343, 344, 346, 347, 357, 370, 379, 382, 422, 423, 515, 516, 518, 528, 538, 551, 552, 553, 557, 573, 574, 579, 585, 587, 599, 600, 687, 692, 694, 699, 701, 703, 705, 706, 709, 710, 711, 712, 715, 719, 723, 727, 734, 738, 754, 792, 816, 838, 844, 853, 899, 932, 933, 934, 936, 939, 940, 941, 944, 958], "min_dur": [36, 240, 241, 526, 640], "002": [36, 39, 58, 59, 74, 82, 149, 156, 167, 168, 169, 172, 175, 176, 193, 196, 213, 216, 223, 224, 229, 230, 232, 235, 240, 244, 247, 253, 278, 526, 966], "appel": 36, "dissimilar": 36, "rdm": 36, "cichi": [36, 278, 319], "et": [36, 42, 45, 47, 223, 230, 232, 241, 271, 280, 319, 322, 324, 333, 334, 616, 646, 812, 822, 823, 826, 964], "al": [36, 42, 45, 47, 223, 230, 232, 271, 280, 322, 333, 334, 616, 646, 812, 822, 823, 826], "multiclass": [36, 278, 283, 485, 502], "multinomi": 36, "logist": [36, 37, 41, 44, 224], "paper": [36, 42, 230, 234, 278, 316, 322, 366, 547, 605, 638, 749], "pairwis": [36, 73, 97, 145, 278, 646, 664], "binari": [36, 127, 187, 220, 224, 245, 291, 301, 322, 331, 486, 502, 526, 569, 570, 575, 578, 698, 769, 775, 787, 936, 951, 958], "roc": [36, 39, 750], "auc": [36, 39, 224, 750], "final": [36, 42, 45, 68, 94, 96, 97, 110, 111, 140, 141, 142, 164, 167, 168, 171, 173, 177, 178, 183, 187, 189, 193, 198, 206, 208, 209, 213, 218, 223, 228, 229, 233, 234, 235, 238, 239, 241, 256, 258, 260, 261, 264, 266, 271, 274, 282, 311, 312, 318, 333, 334, 335, 336, 388, 399, 491, 528, 552, 553, 739, 916, 946], "sake": [36, 101, 229, 260, 274, 949], "did": [36, 37, 54, 55, 56, 64, 65, 70, 73, 78, 83, 87, 110, 132, 135, 136, 138, 153, 187, 188, 189, 193, 197, 199, 202, 203, 208, 230, 233, 235, 236, 251, 252, 264, 266, 282, 292, 294, 307, 308, 320, 338, 346], "instant": [36, 39, 68, 148, 204, 210, 224, 331, 335, 336, 356, 424, 528, 763, 764, 765, 801, 802, 803, 804, 805, 806, 807, 846, 881, 883, 885], "50m": 36, "300m": 36, "focu": [36, 38, 110, 171, 229, 230, 274, 289, 958], "liblinear": [36, 37, 39, 41, 44, 224], "multi_class": [36, 41], "y_pred": [36, 38, 45, 164, 282, 488, 491, 495], "probabilist": [36, 278, 322, 425, 488, 495], "necessari": [36, 47, 57, 100, 122, 162, 173, 178, 182, 183, 185, 187, 188, 193, 196, 198, 207, 227, 229, 230, 231, 232, 233, 234, 235, 241, 244, 245, 251, 256, 274, 282, 286, 291, 293, 294, 302, 303, 305, 311, 312, 318, 319, 321, 322, 326, 333, 334, 335, 336, 337, 340, 341, 344, 345, 347, 348, 349, 366, 367, 386, 388, 395, 429, 447, 485, 492, 494, 509, 520, 528, 551, 552, 553, 561, 568, 573, 589, 605, 676, 684, 694, 701, 705, 733, 753, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 885, 904, 909, 947], "predict_proba": [36, 488, 495], "train_class": 36, "jj": 36, "im": [36, 39, 41, 48, 97, 143, 163, 224, 304, 848, 908, 916], "matshow": [36, 39], "rdbu_r": [36, 39, 42, 45, 48, 135, 223, 224, 258, 259, 311, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 877, 878, 882, 885, 889, 898, 901, 906, 907, 908], "set_ytick": 36, "set_yticklabel": [36, 140], "set_xtick": [36, 271], "set_xticklabel": [36, 271], "colorbar": [36, 39, 41, 48, 97, 98, 135, 140, 142, 143, 144, 148, 163, 169, 173, 177, 203, 209, 224, 235, 239, 247, 256, 257, 258, 260, 261, 274, 282, 283, 284, 286, 289, 291, 292, 294, 305, 309, 330, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 844, 860, 863, 865, 870, 871, 872, 877, 878, 882, 883, 885, 889, 898, 901, 904, 906, 907, 908, 909, 910], "relat": [36, 38, 45, 53, 58, 59, 60, 97, 105, 129, 133, 134, 140, 145, 156, 159, 163, 171, 173, 180, 181, 182, 185, 187, 189, 192, 193, 199, 200, 205, 216, 217, 220, 223, 224, 227, 229, 230, 232, 233, 234, 237, 238, 239, 246, 257, 264, 270, 271, 278, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 319, 320, 321, 322, 323, 333, 334, 335, 336, 338, 343, 356, 384, 399, 424, 466, 491, 492, 509, 521, 526, 542, 552, 553, 629, 638, 646, 703, 738, 768, 812, 822, 844, 859, 867, 870, 877, 892, 893, 899, 907, 931, 946, 947, 955, 966], "histor": [36, 177, 307, 314, 322, 332, 333, 334, 335, 336, 405, 789, 790, 791, 795, 796, 797, 798], "summar": [36, 71, 141, 178, 231, 233, 244, 299, 312, 318, 333, 334, 340, 341, 344, 347, 348, 349, 870, 877, 949], "dimension": [36, 177, 202, 224, 228, 234, 235, 244, 261, 264, 265, 266, 278, 288, 294, 303, 314, 321, 322, 335, 336, 340, 341, 344, 347, 348, 349, 425, 493, 498, 500, 638, 769, 789, 790, 791, 795, 796, 797, 798, 844, 880], "reduct": [36, 43, 46, 53, 142, 219, 231, 239, 240, 278, 294, 301, 333, 334, 335, 336, 338, 441, 445, 484, 493, 499, 552, 635, 638, 639, 676, 684, 703, 824, 827, 966], "multi": [36, 42, 53, 62, 72, 82, 110, 132, 155, 197, 217, 224, 230, 264, 265, 266, 278, 284, 287, 291, 298, 304, 309, 322, 330, 331, 333, 334, 335, 336, 337, 338, 342, 348, 372, 460, 485, 486, 490, 492, 501, 524, 526, 528, 550, 552, 553, 599, 604, 605, 607, 611, 612, 616, 637, 638, 652, 653, 695, 697, 698, 723, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 814, 819, 863, 878, 885, 889, 898, 901, 906, 908, 912, 959, 966], "togeth": [36, 69, 97, 102, 168, 176, 178, 193, 199, 202, 216, 227, 233, 235, 238, 239, 241, 244, 251, 261, 275, 295, 309, 311, 321, 333, 334, 335, 336, 343, 352, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 507, 509, 528, 529, 547, 549, 550, 552, 553, 578, 616, 638, 675, 702, 719, 722, 776, 777, 779, 780, 799, 814, 886, 925, 939, 944], "precomput": [36, 183, 198, 208, 219, 287, 333, 334, 431, 552, 553, 638, 737, 789, 790, 794, 796, 798, 800, 876, 893, 899], "colormap": [36, 50, 84, 137, 140, 141, 144, 150, 163, 169, 187, 235, 271, 274, 282, 283, 284, 291, 292, 295, 303, 309, 310, 311, 330, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 485, 492, 552, 553, 637, 638, 653, 781, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 844, 855, 861, 863, 865, 870, 872, 877, 878, 882, 885, 888, 889, 898, 901, 902, 904, 906, 907, 908, 909, 910, 917, 941], "rainbow": 36, "sel": [36, 57, 257, 629, 632, 634, 635, 723, 792], "this_nam": 36, "scatter": [36, 71, 143, 256, 288, 864], "facecolor": [36, 73, 178, 256], "scatterpoint": 36, "ncol": [36, 41, 100, 135, 140, 148, 164, 173, 178, 203, 210, 239, 274, 291, 306, 335, 336, 485, 492, 638, 885, 889], "shepard": [36, 278], "multidimension": [36, 256, 278, 488, 495, 502], "tree": [36, 278], "scienc": [36, 39, 59, 66, 129, 141, 207, 224, 253, 257, 271, 278, 319, 322, 324, 359, 366, 466, 549, 605, 638, 964], "210": [36, 39, 61, 108, 114, 150, 153, 177, 196, 213, 224, 237, 240, 260, 265, 268, 275, 278, 966], "4468": [36, 278], "390": [36, 38, 39, 47, 108, 150, 224, 237, 256, 278], "398": [36, 39, 108, 150, 256, 261, 278], "1980": [36, 178, 278], "1126": [36, 278], "aarr": [36, 278], "laakso": [36, 278], "garrison": [36, 278], "cottrel": [36, 278], "content": [36, 53, 133, 185, 193, 196, 199, 230, 231, 234, 239, 247, 270, 278, 294, 301, 304, 306, 310, 311, 321, 333, 334, 337, 343, 459, 460, 517, 587, 853, 870, 877], "assess": [36, 39, 164, 183, 189, 197, 227, 241, 278, 322, 605, 616, 638, 746, 751, 946], "neural": [36, 44, 45, 48, 53, 59, 89, 93, 97, 98, 110, 145, 164, 178, 205, 207, 224, 227, 230, 233, 236, 240, 253, 271, 272, 278, 285, 319, 321, 338, 359, 366, 367, 445, 485, 489, 491, 492, 547, 552, 553, 638, 647, 674, 953, 966], "philosoph": [36, 278, 322, 605], "76": [36, 39, 42, 44, 45, 60, 61, 72, 73, 107, 108, 131, 136, 137, 140, 142, 147, 150, 186, 196, 203, 218, 219, 224, 237, 256, 257, 258, 260, 261, 264, 265, 266, 278, 770, 863], "09515080050002726": [36, 278], "nikolau": [36, 278], "kriegeskort": [36, 278], "mariek": [36, 278], "mur": [36, 278], "peter": [36, 207, 269, 278, 287, 310, 322, 333, 334, 335, 336, 552, 553, 605, 638, 664, 793, 795, 799, 815, 825, 828], "bandettini": [36, 278], "branch": [36, 278, 311], "neuro": [36, 113, 278, 300], "radoslaw": [36, 278, 319], "aud": [36, 54, 55, 63, 65, 75, 120, 127, 132, 135, 136, 177, 261, 278, 319, 333, 870], "oliva": [36, 278, 319], "resolv": [36, 207, 233, 238, 278, 304, 305, 306, 319, 333, 334, 335, 336, 552, 553, 789, 790, 791, 795, 796, 797, 798, 807], "recognit": [36, 72, 129, 178, 230, 278, 319, 333, 334, 795, 825, 828], "455": [36, 150, 191, 196, 201, 256, 261, 278, 319, 346, 966], "462": [36, 150, 224, 256, 278, 319, 346], "2014": [36, 38, 39, 44, 45, 66, 98, 141, 149, 178, 189, 223, 224, 230, 278, 315, 316, 319, 333, 334, 335, 336, 425, 489, 491, 492, 493, 503, 549, 647, 680, 771, 795, 825, 828, 946], "1038": [36, 155, 223, 278, 319, 460, 491], "nn": [36, 205, 278, 292, 319, 346, 738], "3635": [36, 278, 319], "decoding_rsa_sgskip": [36, 46, 966], "cortic": [37, 50, 52, 53, 57, 58, 67, 69, 84, 105, 107, 112, 118, 122, 137, 141, 151, 157, 182, 185, 190, 192, 193, 199, 202, 205, 207, 214, 219, 228, 253, 256, 265, 278, 285, 288, 291, 292, 295, 300, 306, 308, 314, 319, 321, 325, 330, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 351, 353, 354, 366, 367, 431, 435, 461, 519, 530, 547, 549, 550, 552, 590, 605, 606, 607, 608, 609, 612, 616, 621, 622, 635, 636, 654, 693, 696, 697, 708, 711, 718, 746, 749, 751, 752, 753, 754, 755, 785, 844, 857, 905, 951, 953, 956, 959, 966], "confin": [37, 73, 185, 260, 322, 359], "potenti": [37, 41, 73, 97, 98, 100, 106, 115, 129, 145, 156, 168, 171, 180, 181, 192, 195, 199, 224, 228, 230, 231, 232, 236, 256, 257, 260, 271, 274, 278, 282, 284, 285, 312, 318, 319, 322, 333, 334, 335, 336, 338, 339, 344, 379, 384, 424, 431, 441, 466, 524, 541, 542, 552, 553, 554, 629, 639, 646, 647, 703, 752, 755, 775, 782, 861, 870, 877, 907, 931, 946, 966], "relev": [37, 38, 52, 129, 140, 155, 178, 196, 207, 224, 230, 231, 232, 239, 275, 278, 311, 316, 318, 322, 346, 444, 492, 638, 655, 788, 889, 891, 946], "eric": [37, 45, 48, 52, 60, 65, 76, 83, 92, 99, 107, 111, 121, 122, 137, 146, 148, 152, 155, 162, 163, 182, 184, 186, 206, 207, 209, 210, 211, 213, 219, 223, 224, 237, 256, 260, 261, 264, 265, 266, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 319, 339, 344, 461, 605, 684, 754, 776, 777, 779, 780, 964], "larson": [37, 45, 48, 52, 60, 65, 76, 83, 92, 99, 107, 111, 121, 122, 137, 146, 148, 152, 155, 162, 163, 186, 206, 207, 209, 210, 211, 213, 219, 223, 224, 237, 256, 260, 264, 265, 266, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 319, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 461, 552, 553, 684, 754, 964], "feature_select": 37, "selectkbest": 37, "f_classif": 37, "meg_path": [37, 39, 40, 41, 42, 48, 54, 56, 57, 61, 63, 65, 66, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 95, 96, 98, 99, 104, 106, 113, 114, 115, 120, 121, 122, 124, 125, 127, 128, 131, 132, 135, 136, 138, 139, 145, 146, 149, 158, 159, 160, 205, 206, 207, 208, 224, 253, 258, 259, 260, 261, 264, 265, 266], "fname_fwd": [37, 58, 59, 60, 67, 68, 69, 73, 74, 75, 80, 84, 204, 206, 252], "sample_audvi": [37, 48, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 95, 106, 113, 114, 118, 120, 121, 122, 123, 132, 135, 136, 138, 144, 147, 148, 153, 158, 161, 176, 177, 193, 199, 202, 203, 204, 205, 206, 207, 208, 224, 252, 253, 264, 265, 266, 274, 275, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "sample_audvis_filt": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 104, 115, 124, 125, 127, 128, 145, 149, 159, 160, 168, 172, 178, 179, 193, 196, 199, 204, 207, 224, 229, 233, 261, 264, 266, 322], "40_raw": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 104, 115, 124, 125, 127, 128, 145, 149, 159, 160, 168, 172, 178, 179, 193, 196, 199, 204, 207, 224, 229, 233, 261, 264, 266, 322], "event_fnam": [37, 40, 41, 42, 44, 96, 115, 124, 125, 128, 145, 149, 159, 259, 260, 261, 264, 266], "ev": [37, 39, 40, 41, 42, 44, 54, 96, 115, 122, 124, 125, 128, 131, 132, 145, 149, 159, 167, 172, 178, 199, 229, 245, 259, 260, 261, 264, 266, 275, 298, 302, 325, 703, 704, 936, 946], "fname_cov": [37, 67, 74, 75, 76, 80, 81, 84, 91, 122, 203, 206, 208], "fname_inv": [37, 54, 55, 56, 64, 65, 70, 73, 83, 87, 132, 135, 136, 138, 153, 208, 252, 264, 266], "inv": [37, 54, 55, 56, 64, 65, 70, 71, 73, 78, 83, 87, 122, 132, 135, 136, 138, 153, 183, 185, 187, 193, 199, 204, 205, 206, 208, 209, 219, 224, 240, 252, 253, 264, 266, 287, 311, 318, 322, 325, 519, 610, 613, 616, 618, 619, 623, 903], "aud_r": [37, 40, 41, 68, 260], "vis_r": [37, 40, 41, 68, 115, 260], "contra": 37, "setup": [37, 41, 42, 44, 50, 69, 70, 71, 96, 97, 99, 115, 124, 125, 128, 135, 136, 138, 145, 159, 182, 258, 259, 264, 266, 270, 275, 302, 306, 311, 319, 326, 346, 447, 526, 947, 952, 953, 954, 956, 958], "modifi": [37, 88, 96, 145, 167, 176, 177, 178, 188, 192, 195, 196, 199, 200, 201, 209, 224, 228, 234, 236, 239, 246, 251, 253, 256, 260, 269, 278, 291, 292, 296, 305, 307, 309, 310, 318, 319, 322, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 344, 345, 346, 347, 348, 349, 350, 356, 382, 388, 410, 411, 432, 434, 435, 436, 457, 485, 487, 489, 490, 492, 493, 494, 496, 497, 499, 500, 507, 544, 547, 552, 553, 561, 568, 586, 602, 605, 618, 629, 630, 631, 634, 637, 638, 659, 661, 663, 668, 672, 673, 675, 676, 677, 678, 679, 691, 708, 724, 730, 733, 740, 741, 742, 743, 771, 782, 783, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 815, 840, 844, 846, 848, 862, 867, 881, 883, 899, 913, 914, 966], "your": [37, 57, 73, 87, 96, 97, 122, 123, 145, 148, 149, 162, 167, 168, 169, 176, 178, 182, 184, 185, 186, 188, 189, 193, 194, 195, 199, 204, 208, 209, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 244, 245, 246, 256, 269, 270, 271, 274, 288, 303, 309, 310, 313, 316, 318, 319, 320, 322, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 350, 366, 367, 379, 388, 399, 402, 405, 425, 429, 430, 441, 442, 443, 461, 485, 492, 509, 526, 528, 529, 547, 549, 550, 552, 553, 564, 569, 580, 616, 624, 637, 638, 641, 648, 655, 663, 676, 694, 700, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 823, 826, 844, 876, 883, 886, 892, 893, 899, 904, 916, 946, 947, 951, 955, 956, 958, 959, 960], "2443": [37, 68, 100, 104, 115, 120, 121, 135, 136, 138, 139, 145, 149, 173, 193, 194, 195, 196, 204, 207, 224, 227, 228, 229, 234, 235, 238, 244, 245, 246, 247, 253, 258, 259, 260, 264, 266], "4000e": [37, 42, 54, 68, 71, 72, 104, 124, 125, 128, 131, 132, 135, 138, 141, 145, 149, 159, 179, 193, 204, 207, 224, 235, 258, 259, 260, 264, 266, 270, 318, 328, 333, 334, 430, 638, 655, 656, 775], "150e": [37, 42, 54, 68, 71, 124, 125, 128, 132, 135, 138, 145, 168, 169, 179, 193, 204, 207, 224, 235, 258, 259, 260, 261, 264, 266, 318, 322, 333, 334, 343, 552, 553, 876, 899], "v1": [37, 39, 40, 41, 42, 44, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 104, 106, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 138, 139, 144, 145, 146, 147, 148, 149, 152, 153, 159, 160, 167, 168, 173, 176, 178, 179, 183, 184, 185, 187, 189, 193, 194, 195, 196, 199, 203, 204, 205, 206, 207, 208, 209, 217, 224, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 244, 245, 246, 247, 252, 253, 258, 259, 260, 261, 264, 266, 274, 275, 327, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 371, 374, 377, 378, 382, 386, 392, 393, 394, 411, 419, 436, 485, 492, 504, 509, 512, 525, 535, 544, 546, 552, 553, 561, 565, 568, 569, 588, 595, 596, 614, 615, 622, 623, 637, 638, 640, 646, 652, 653, 659, 661, 664, 675, 677, 686, 689, 691, 700, 725, 727, 733, 738, 744, 745, 746, 747, 748, 749, 750, 751, 758, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 808, 810, 815, 833, 834, 844, 846, 854, 855, 863, 867, 870, 874, 876, 878, 880, 881, 885, 887, 889, 890, 891, 893, 896, 897, 898, 899, 901, 906, 908, 912, 935, 937, 942], "idl": [37, 39, 40, 41, 42, 44, 52, 54, 55, 68, 71, 75, 88, 95, 96, 98, 99, 100, 104, 110, 111, 115, 120, 121, 122, 124, 125, 127, 128, 131, 132, 135, 138, 139, 145, 146, 149, 152, 158, 159, 160, 168, 169, 173, 178, 179, 183, 184, 185, 187, 189, 193, 194, 195, 196, 199, 204, 207, 209, 210, 219, 224, 227, 231, 232, 233, 234, 235, 237, 238, 244, 247, 252, 253, 258, 259, 260, 261, 264, 266, 274], "v2": [37, 39, 40, 41, 42, 44, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 104, 106, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 138, 139, 144, 145, 146, 147, 148, 149, 152, 153, 159, 160, 167, 168, 173, 176, 178, 179, 183, 184, 185, 187, 189, 193, 194, 195, 196, 199, 203, 204, 205, 206, 207, 208, 209, 217, 224, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 244, 245, 246, 247, 252, 253, 258, 259, 260, 261, 264, 266, 274, 275, 278, 281, 460, 676], "v3": [37, 39, 40, 41, 42, 44, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 104, 106, 110, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 135, 136, 138, 139, 144, 145, 146, 147, 148, 149, 152, 153, 159, 160, 167, 168, 173, 176, 178, 179, 183, 184, 185, 187, 189, 193, 194, 195, 196, 199, 203, 204, 205, 206, 207, 208, 209, 224, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 244, 245, 246, 247, 252, 253, 258, 259, 260, 261, 264, 266, 274, 275], "refer": [37, 40, 48, 53, 54, 55, 56, 57, 64, 65, 67, 71, 73, 74, 75, 76, 78, 83, 87, 88, 91, 94, 95, 96, 99, 100, 104, 105, 108, 109, 112, 113, 114, 118, 120, 121, 123, 124, 125, 127, 128, 132, 135, 136, 138, 144, 148, 153, 159, 160, 172, 176, 177, 179, 183, 185, 186, 192, 193, 194, 196, 197, 199, 202, 204, 206, 208, 209, 213, 216, 220, 229, 237, 242, 243, 244, 252, 264, 266, 270, 271, 274, 275, 278, 281, 282, 283, 285, 286, 287, 288, 289, 292, 296, 299, 300, 302, 304, 305, 306, 308, 309, 310, 312, 314, 316, 321, 323, 325, 326, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 359, 366, 367, 369, 371, 372, 405, 425, 430, 431, 441, 452, 457, 460, 461, 464, 465, 466, 477, 478, 485, 486, 489, 491, 492, 493, 495, 501, 503, 505, 506, 509, 511, 524, 547, 549, 550, 552, 553, 564, 578, 600, 601, 605, 606, 616, 620, 635, 636, 637, 638, 639, 643, 646, 647, 649, 650, 651, 652, 653, 654, 664, 665, 674, 676, 677, 680, 683, 684, 691, 728, 730, 733, 738, 742, 746, 749, 751, 754, 771, 773, 775, 776, 777, 778, 779, 780, 782, 783, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 808, 810, 812, 814, 815, 822, 823, 825, 826, 828, 844, 847, 862, 863, 878, 885, 886, 889, 890, 893, 898, 900, 901, 906, 908, 931, 956, 966], "6450": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 104, 115, 124, 125, 127, 128, 145, 149, 159, 160, 168, 178, 179, 193, 196, 199, 204, 207, 224, 233, 261, 264, 266], "48149": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 104, 115, 124, 125, 127, 128, 145, 149, 159, 160, 168, 178, 179, 193, 196, 199, 204, 207, 224, 233, 261, 264, 266], "956": [37, 39, 40, 41, 42, 44, 54, 55, 68, 71, 75, 95, 96, 98, 99, 100, 104, 107, 110, 115, 120, 121, 124, 125, 127, 128, 131, 132, 135, 138, 139, 145, 146, 149, 152, 159, 160, 168, 170, 173, 178, 179, 183, 189, 193, 194, 195, 196, 199, 204, 207, 209, 224, 227, 231, 232, 233, 234, 235, 236, 244, 247, 252, 253, 258, 259, 260, 261, 264, 266, 274], "320": [37, 39, 40, 41, 42, 44, 54, 55, 68, 71, 75, 95, 96, 98, 99, 100, 104, 108, 110, 115, 120, 121, 124, 125, 127, 128, 131, 132, 135, 136, 138, 139, 140, 145, 146, 149, 150, 152, 159, 160, 167, 168, 173, 176, 178, 179, 183, 189, 193, 194, 195, 196, 198, 199, 204, 207, 209, 224, 227, 228, 231, 232, 233, 234, 235, 237, 244, 247, 252, 253, 256, 258, 259, 260, 261, 264, 266, 274, 484], "665": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 104, 115, 118, 122, 123, 124, 125, 127, 128, 145, 149, 159, 160, 168, 178, 179, 193, 196, 199, 204, 207, 224, 233, 261, 264, 266], "41699": [37, 39, 40, 41, 42, 44, 68, 99, 100, 115, 127, 149, 160, 168, 179, 193, 224, 261], "277": [37, 39, 40, 41, 42, 44, 68, 98, 99, 100, 115, 127, 140, 149, 150, 160, 168, 179, 193, 194, 196, 209, 224, 229, 232, 244, 261], "709": [37, 39, 40, 41, 42, 44, 68, 99, 100, 115, 127, 149, 160, 168, 179, 193, 224, 261], "199": [37, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 106, 113, 114, 130, 144, 147, 148, 150, 176, 196, 199, 201, 203, 205, 206, 208, 210, 219, 237, 238, 251, 256, 266, 274, 275, 278, 810, 812, 822, 966], "325": [37, 110, 112, 140, 150, 196, 223, 261, 966], "143": [37, 75, 100, 150, 196, 229, 237, 238, 260, 278, 346], "19979521315838786": [37, 54, 88, 96, 98, 99, 107, 121, 122, 124, 125, 128, 131, 132, 135, 138, 145, 159, 169, 172, 176, 177, 179, 193, 199, 204, 207, 209, 228, 229, 232, 252, 259, 260, 264, 266], "151": [37, 47, 148, 150, 178, 196, 199, 229, 233, 239, 243, 256, 266, 346, 966], "061": [37, 42, 54, 58, 59, 71, 72, 88, 98, 99, 100, 121, 122, 124, 128, 135, 141, 145, 167, 172, 178, 179, 193, 194, 195, 196, 199, 204, 207, 227, 228, 229, 232, 233, 234, 235, 238, 244, 245, 246, 247, 256, 257, 258, 259, 260, 261, 264, 266, 270, 278, 776, 777, 779, 780], "366": [37, 39, 48, 57, 61, 66, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 91, 95, 108, 118, 120, 121, 122, 123, 137, 150, 158, 171, 176, 186, 191, 196, 199, 205, 206, 224, 237, 252, 253, 269, 966], "305": [37, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 104, 106, 114, 122, 132, 135, 136, 137, 138, 140, 150, 153, 167, 177, 179, 193, 196, 199, 203, 204, 205, 206, 207, 208, 236, 252, 264, 266, 275, 278, 333, 334, 335, 336, 552, 553, 733], "22494": [37, 48, 54, 55, 61, 64, 65, 78, 83, 87, 132, 135, 136, 138, 153, 193, 199, 208, 264, 266], "diagon": [37, 54, 55, 56, 64, 65, 70, 73, 78, 83, 87, 97, 132, 135, 136, 138, 153, 193, 199, 207, 208, 224, 252, 253, 264, 266, 278, 299, 322, 330, 366, 367, 425, 443, 593, 605, 613], "retriev": [37, 224, 233, 237, 270, 283, 284, 291, 295, 303, 304, 305, 307, 398, 399, 420, 503, 561, 568, 706], "lh_data": [37, 144, 202, 266, 344, 347], "hemispher": [37, 50, 53, 66, 69, 73, 78, 94, 151, 155, 157, 168, 178, 182, 185, 202, 205, 210, 264, 265, 266, 274, 285, 291, 295, 299, 309, 329, 339, 340, 341, 344, 345, 346, 347, 348, 349, 394, 431, 460, 543, 590, 693, 711, 713, 716, 737, 752, 760, 785, 843, 844, 904, 909, 923, 941, 966], "seri": [37, 42, 53, 54, 55, 57, 62, 67, 82, 98, 108, 118, 121, 122, 123, 139, 164, 188, 195, 202, 207, 208, 216, 233, 234, 247, 253, 266, 271, 278, 292, 299, 311, 321, 322, 332, 333, 334, 335, 336, 339, 340, 341, 344, 346, 347, 348, 349, 366, 367, 425, 488, 495, 498, 519, 553, 604, 605, 608, 619, 638, 643, 647, 706, 710, 775, 776, 777, 789, 790, 791, 792, 795, 796, 797, 798, 801, 802, 803, 812, 821, 822, 859, 870, 910, 951, 966], "time_decod": [37, 224], "03": [37, 39, 45, 50, 59, 60, 61, 82, 85, 93, 98, 100, 103, 104, 110, 111, 112, 118, 121, 122, 131, 134, 136, 137, 148, 157, 168, 173, 177, 178, 185, 191, 193, 194, 195, 196, 197, 210, 211, 218, 224, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 241, 243, 244, 245, 246, 247, 251, 253, 256, 257, 258, 260, 261, 265, 266, 274, 278, 315, 327, 331, 425, 638, 776, 777, 779, 780, 874, 966], "18it": [37, 39, 45, 60, 131, 132, 136, 140, 223, 224, 237, 256, 257, 261], "00it": [37, 39, 45, 60, 131, 136, 140, 223, 224, 237, 256, 260, 261], "81it": [37, 39, 45, 70, 131, 140, 223, 224, 237, 256, 257, 260, 261, 265, 266], "62it": [37, 39, 45, 60, 131, 140, 223, 224, 237, 256, 261, 266], "08it": [37, 39, 45, 59, 131, 140, 223, 224, 237, 256, 257, 258, 261, 265], "27it": [37, 45, 60, 131, 136, 137, 140, 223, 224, 237, 256, 257, 260, 261], "23it": [37, 39, 45, 60, 124, 131, 223, 224, 237, 256, 257, 261], "02it": [37, 45, 131, 136, 137, 140, 224, 237, 256, 259, 260, 261], "05it": [37, 45, 60, 131, 136, 137, 140, 237, 256, 258, 260, 261, 265, 266], "39": [37, 38, 39, 45, 47, 54, 61, 67, 71, 73, 108, 131, 136, 137, 142, 150, 164, 167, 184, 185, 186, 196, 206, 207, 211, 212, 215, 218, 219, 223, 224, 229, 237, 238, 243, 256, 257, 258, 260, 261, 264, 265, 266, 278, 318, 346, 477, 966], "77it": [37, 39, 45, 59, 60, 131, 136, 137, 140, 223, 224, 237, 256, 257, 260, 261, 265, 266], "43it": [37, 45, 60, 131, 140, 224, 237, 256, 257, 260, 261, 266], "55it": [37, 39, 45, 59, 131, 136, 224, 237, 256, 257, 258, 260, 261, 265, 266], "04it": [37, 45, 136, 140, 223, 224, 237, 256, 257, 260, 261, 264, 265], "99it": [37, 39, 45, 60, 131, 140, 224, 237, 256, 257, 258, 260, 261, 265], "47it": [37, 45, 59, 60, 131, 140, 223, 224, 237, 256, 260, 261, 266], "91it": [37, 39, 136, 137, 140, 207, 223, 224, 237, 256, 257, 260, 261], "32it": [37, 39, 45, 131, 136, 140, 223, 224, 237, 256, 259, 260, 261], "68": [37, 39, 45, 60, 61, 67, 71, 73, 108, 109, 118, 129, 131, 136, 137, 140, 142, 150, 155, 164, 167, 170, 172, 185, 196, 203, 208, 211, 218, 219, 223, 224, 237, 256, 257, 260, 261, 264, 278, 335, 336, 366, 367, 405, 425, 429, 430, 441, 442, 443, 477, 485, 492, 528, 529, 547, 549, 550, 616, 886, 966], "36it": [37, 39, 45, 60, 131, 140, 224, 237, 256, 257, 260, 261, 265], "16it": [37, 45, 131, 224, 237, 256, 257, 261], "52it": [37, 39, 45, 59, 60, 131, 207, 223, 224, 237, 256, 257, 260, 261, 265], "61it": [37, 39, 45, 59, 60, 131, 137, 140, 223, 224, 237, 256, 257, 258, 260, 261, 264], "97it": [37, 45, 60, 137, 140, 237, 256, 258, 261], "65it": [37, 45, 60, 131, 136, 140, 223, 237, 256, 257, 261, 265], "94": [37, 39, 45, 61, 73, 108, 131, 136, 137, 140, 142, 150, 164, 196, 197, 207, 210, 218, 219, 224, 235, 237, 240, 256, 257, 258, 260, 261, 264, 265, 266, 278, 322], "11it": [37, 45, 60, 124, 131, 137, 140, 223, 224, 237, 256, 257, 258, 260, 261], "96it": [37, 39, 45, 136, 140, 223, 224, 237, 256, 257, 260, 261, 264, 266], "84it": [37, 39, 45, 59, 137, 140, 223, 224, 237, 256, 258, 261, 266], "93it": [37, 45, 60, 131, 136, 223, 224, 237, 256, 260, 261, 265], "45it": [37, 39, 45, 59, 131, 137, 140, 223, 224, 237, 256, 258, 260, 261], "01it": [37, 45, 131, 132, 137, 140, 223, 224, 237, 256, 257, 258, 260, 261, 264, 266], "31it": [37, 39, 45, 60, 131, 140, 224, 237, 257, 258, 260, 261], "26it": [37, 39, 45, 131, 137, 140, 224, 237, 256, 257, 260, 261, 266], "15it": [37, 45, 60, 131, 137, 140, 223, 224, 237, 256, 257, 258, 261, 264, 266], "86it": [37, 45, 131, 137, 140, 223, 224, 237, 256, 257, 260, 261, 266], "48it": [37, 39, 45, 131, 136, 137, 140, 207, 223, 224, 237, 260, 261], "09it": [37, 39, 45, 131, 136, 137, 140, 237, 256, 258, 260, 261], "68it": [37, 39, 45, 59, 60, 131, 140, 223, 224, 237, 256, 258, 260, 261, 266], "21it": [37, 45, 60, 131, 136, 140, 223, 224, 237, 256, 257, 260, 261, 265], "57it": [37, 39, 45, 59, 131, 137, 140, 207, 223, 224, 237, 256, 261, 265], "87it": [37, 39, 45, 131, 137, 140, 223, 224, 237, 256, 258, 260, 261, 265, 266], "79it": [37, 45, 59, 131, 136, 137, 223, 224, 237, 256, 260, 261, 266], "20it": [37, 45, 137, 223, 224, 237, 256, 258, 261, 264, 265], "58it": [37, 39, 45, 60, 131, 140, 224, 237, 256, 258, 259, 261, 264, 265], "19it": [37, 39, 45, 131, 136, 140, 223, 224, 237, 256, 257, 258, 260, 261], "53it": [37, 39, 45, 59, 131, 136, 137, 140, 207, 223, 224, 237, 256, 257, 258, 261], "94it": [37, 45, 140, 223, 224, 237, 256, 257, 260, 261, 264], "28it": [37, 39, 45, 59, 60, 131, 223, 224, 237, 256, 257, 258, 261], "60it": [37, 39, 45, 60, 131, 136, 140, 207, 223, 224, 237, 256, 260, 261, 264], "33it": [37, 45, 59, 60, 124, 131, 136, 137, 223, 237, 257, 260, 261, 265], "72it": [37, 39, 45, 59, 60, 131, 137, 223, 224, 256, 260, 261, 266], "88it": [37, 39, 45, 60, 131, 140, 223, 224, 237, 258, 260, 261], "46it": [37, 39, 45, 59, 60, 131, 136, 223, 237, 256, 257, 258, 260, 261, 265], "74it": [37, 45, 59, 137, 152, 237, 256, 260, 261, 266], "50it": [37, 39, 45, 59, 131, 136, 140, 223, 224, 237, 256, 257, 261], "73it": [37, 39, 45, 60, 131, 140, 224, 237, 256, 257, 260, 261, 264], "70it": [37, 39, 45, 59, 60, 70, 131, 140, 224, 237, 256, 258, 260, 261, 265, 266], "51it": [37, 39, 45, 59, 124, 131, 136, 140, 223, 224, 237, 260, 261, 266], "82it": [37, 39, 45, 59, 70, 131, 136, 140, 223, 224, 237, 256, 257, 258, 260, 261, 266], "35it": [37, 45, 131, 136, 152, 224, 237, 256, 258, 260, 261, 264], "24it": [37, 39, 45, 131, 132, 137, 140, 223, 224, 237, 256, 257, 258, 261, 265], "63it": [37, 39, 45, 60, 131, 136, 140, 207, 224, 237, 256, 257, 260, 261], "75it": [37, 39, 45, 59, 60, 136, 140, 152, 224, 237, 256, 257, 258, 260, 261, 264, 266], "12it": [37, 45, 137, 140, 223, 224, 237, 256, 257, 258, 261], "03it": [37, 39, 60, 124, 131, 136, 140, 223, 224, 237, 256, 261], "49it": [37, 39, 45, 59, 60, 131, 137, 140, 223, 224, 237, 256, 260, 261, 264], "80it": [37, 39, 45, 131, 223, 224, 237, 256, 258, 260, 261, 266], "10it": [37, 39, 45, 60, 131, 132, 136, 137, 140, 224, 237, 256, 260, 261, 265], "39it": [37, 39, 45, 60, 131, 137, 140, 223, 224, 237, 256, 257, 260, 261, 265], "83it": [37, 39, 45, 59, 60, 136, 137, 140, 224, 237, 256, 260, 261, 264, 266], "92it": [37, 45, 60, 131, 223, 224, 237, 256, 257, 258, 260, 261], "06it": [37, 39, 45, 60, 131, 136, 140, 223, 224, 237, 256, 257, 258, 260, 261, 266], "64it": [37, 39, 45, 60, 124, 131, 140, 207, 224, 237, 256, 260, 261, 266], "13it": [37, 39, 45, 60, 131, 207, 223, 237, 256, 260, 261], "95it": [37, 60, 124, 131, 136, 137, 140, 223, 224, 237, 256, 257, 258, 260, 261], "29it": [37, 39, 45, 131, 136, 140, 223, 224, 237, 256, 257, 258, 260, 261, 265], "85it": [37, 45, 59, 60, 131, 140, 223, 237, 256, 261, 265, 266], "78it": [37, 39, 45, 59, 60, 131, 137, 140, 223, 224, 237, 257, 261, 266], "54it": [37, 39, 45, 59, 60, 131, 136, 137, 140, 207, 224, 237, 256, 257, 260, 261], "14it": [37, 45, 60, 131, 137, 140, 223, 224, 253, 256, 257, 260, 261], "59it": [37, 39, 45, 60, 131, 132, 137, 223, 224, 237, 256, 257, 258, 260, 261, 265, 266], "34it": [37, 45, 60, 131, 136, 137, 223, 224, 237, 256, 257, 259, 260, 261, 266], "76it": [37, 39, 45, 59, 131, 136, 137, 140, 223, 224, 237, 256, 258, 260, 261, 264, 266], "17it": [37, 45, 60, 140, 224, 237, 256, 261], "investig": [37, 47, 171, 178, 219, 230, 266, 319, 335, 336, 638, 886], "patterns_": [37, 41, 44, 45, 47, 224, 285, 291, 485, 489, 491, 492, 493, 503, 639], "inverse_transform": [37, 44, 224, 493, 494, 499, 500, 503, 639], "lookup": [37, 67, 308, 310, 321, 326, 333, 334, 335, 336, 338, 346, 537, 538, 552, 553, 738, 844], "vertic": [37, 48, 50, 54, 64, 65, 67, 69, 74, 78, 79, 95, 135, 144, 161, 163, 167, 169, 182, 185, 186, 187, 188, 202, 205, 208, 219, 228, 231, 236, 237, 244, 247, 253, 256, 257, 264, 265, 266, 274, 275, 283, 285, 289, 291, 292, 293, 309, 310, 321, 322, 329, 333, 334, 335, 336, 339, 340, 341, 344, 345, 346, 347, 348, 349, 353, 354, 366, 367, 429, 431, 519, 532, 541, 543, 552, 553, 590, 592, 614, 615, 621, 622, 658, 710, 739, 752, 754, 755, 757, 758, 759, 760, 761, 763, 764, 765, 776, 777, 779, 780, 781, 784, 785, 843, 844, 860, 865, 870, 876, 884, 899, 904, 909, 941], "lh_vertno": [37, 144, 202, 344, 347, 752], "empti": [37, 41, 167, 169, 177, 188, 189, 193, 196, 198, 199, 211, 212, 219, 229, 233, 234, 236, 238, 244, 251, 266, 282, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 309, 310, 311, 318, 321, 322, 327, 330, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 357, 372, 380, 389, 396, 419, 420, 425, 430, 449, 450, 451, 454, 455, 456, 458, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 512, 533, 552, 553, 561, 565, 568, 569, 576, 581, 604, 629, 630, 631, 635, 636, 638, 639, 641, 648, 649, 658, 665, 676, 677, 700, 708, 719, 729, 733, 770, 776, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 813, 831, 854, 870, 871, 876, 877, 883, 885, 893, 899, 900], "stc_feat": 37, "ab": [37, 45, 61, 64, 66, 73, 85, 87, 95, 125, 147, 148, 162, 178, 206, 210, 213, 219, 223, 230, 256, 258, 259, 264, 265, 266, 271, 274, 303, 322, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 485, 492, 552, 553, 640, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 878, 885, 898], "tstep": [37, 48, 57, 72, 85, 118, 122, 123, 208, 253, 264, 265, 266, 282, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 430, 550, 552, 553, 592, 638, 739, 756, 775, 781, 811, 819], "transpar": [37, 84, 129, 150, 199, 208, 228, 271, 293, 298, 312, 325, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 789, 790, 791, 795, 796, 797, 798, 844, 865, 882, 899, 904, 909, 910, 911, 912], "07it": [37, 45, 60, 132, 136, 137, 140, 223, 224, 237, 256, 257, 258, 260, 261, 265], "89it": [37, 39, 45, 124, 131, 136, 140, 223, 224, 237, 256, 257, 260, 261, 264, 265], "41it": [37, 39, 45, 59, 131, 140, 223, 237, 256, 258, 260, 261, 265, 266], "25it": [37, 45, 60, 131, 140, 224, 237, 256, 257, 261, 265], "37it": [37, 39, 60, 131, 136, 137, 223, 237, 256, 258, 260, 261], "44it": [37, 39, 45, 60, 131, 140, 207, 223, 224, 237, 256, 260, 261], "50724321": 37, "37721471": 37, "59502306": 37, "770": [37, 46, 108, 224, 966], "191": [37, 38, 46, 47, 150, 196, 224, 237, 256, 260, 261, 966], "decoding_spatio_temporal_sourc": [37, 46, 966], "comodul": [38, 492], "composit": [38, 216, 224, 322, 340, 341, 344, 347, 348, 349, 844, 904, 909], "orthogon": [38, 142, 183, 187, 205, 224, 234, 235, 238, 289, 293, 314, 322, 366, 367, 638, 824, 827], "spatial": [38, 40, 41, 43, 44, 46, 53, 57, 58, 59, 60, 62, 73, 82, 97, 98, 107, 110, 111, 118, 141, 147, 149, 178, 179, 182, 183, 189, 202, 227, 228, 230, 234, 235, 240, 247, 251, 253, 256, 258, 261, 264, 265, 266, 270, 271, 278, 281, 283, 284, 285, 291, 293, 295, 300, 302, 304, 305, 309, 318, 319, 321, 322, 330, 333, 334, 335, 336, 337, 338, 339, 342, 344, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 382, 398, 425, 431, 434, 435, 445, 485, 486, 492, 493, 499, 501, 503, 552, 553, 565, 566, 568, 598, 604, 616, 617, 620, 635, 636, 637, 638, 639, 652, 653, 675, 676, 697, 703, 706, 708, 743, 746, 751, 759, 760, 761, 762, 766, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 815, 834, 844, 863, 878, 880, 885, 886, 889, 898, 901, 906, 908, 946, 966], "maxim": [38, 87, 115, 169, 187, 203, 204, 207, 210, 224, 230, 232, 278, 285, 322, 341, 347, 348, 349, 366, 367, 493, 638, 674, 759, 760, 761, 763, 764, 775, 910], "variabl": [38, 42, 53, 57, 69, 105, 112, 129, 131, 140, 145, 168, 170, 177, 182, 195, 197, 224, 227, 230, 232, 234, 244, 246, 260, 261, 266, 278, 285, 289, 292, 294, 303, 304, 318, 321, 322, 326, 327, 331, 333, 334, 338, 339, 340, 341, 343, 344, 347, 348, 349, 373, 377, 378, 379, 382, 431, 436, 437, 438, 444, 447, 449, 450, 451, 452, 454, 455, 456, 459, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 492, 502, 504, 509, 514, 526, 527, 533, 535, 537, 541, 543, 544, 545, 546, 552, 553, 559, 573, 580, 590, 594, 596, 624, 637, 638, 665, 672, 691, 693, 701, 705, 711, 720, 725, 726, 727, 728, 735, 737, 738, 752, 755, 766, 776, 777, 778, 779, 780, 784, 785, 836, 844, 862, 864, 874, 876, 879, 893, 899, 904, 909, 910, 912, 941, 946, 949, 951, 958, 966], "fluctuat": [38, 168, 169, 178, 227, 229, 235, 236, 240, 253, 321, 335, 336, 886], "electromyogram": [38, 285], "cortico": 38, "muscular": [38, 227, 233], "coher": [38, 58, 59, 131, 135, 142, 207, 253, 278, 319, 321, 333, 334, 358, 359, 360, 361, 366, 792, 823, 824, 825, 826, 827, 828, 872, 959], "fieldtrip": [38, 183, 219, 230, 236, 256, 258, 264, 285, 287, 291, 292, 301, 302, 304, 314, 322, 392, 399, 573, 701, 705, 823, 824, 826, 827], "ridg": [38, 45, 223, 491, 497], "kfold": [38, 42, 45, 286, 425, 430, 502], "cross_val_predict": [38, 287], "fieldtrip_cmc": [38, 47, 198], "subjectcmc": [38, 47], "emg": [38, 110, 164, 196, 217, 224, 244, 251, 278, 282, 305, 306, 319, 321, 322, 333, 334, 335, 336, 338, 343, 381, 445, 492, 552, 553, 565, 568, 581, 635, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 876, 899], "emglft": 38, "ref_meg": [38, 47, 102, 147, 152, 196, 240, 244, 285, 321, 322, 333, 334, 335, 336, 338, 343, 381, 445, 552, 553, 555, 635, 636, 652, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 876, 899], "meg_epoch": [38, 44], "detrend": [38, 138, 162, 239, 283, 299, 328, 333, 334, 335, 336, 597, 699, 965], "emg_epoch": 38, "oa": [38, 47, 111, 210, 425], "first_samp": [38, 97, 103, 164, 193, 195, 211, 244, 245, 246, 282, 284, 285, 288, 291, 294, 302, 303, 308, 321, 327, 333, 334, 338, 343, 352, 433, 551, 552, 553, 574, 598, 638, 677, 702, 739, 754, 879, 893, 899], "set_xlabel": [38, 39, 45, 47, 48, 71, 97, 124, 132, 141, 160, 171, 173, 199, 210, 224, 234, 259, 260, 261, 275], "set_titl": [38, 39, 48, 71, 97, 98, 124, 127, 140, 142, 148, 163, 171, 223, 224, 238, 239, 259, 260, 261, 270, 271, 274, 275], "62": [38, 39, 42, 45, 47, 60, 61, 71, 73, 97, 108, 131, 136, 140, 142, 150, 157, 163, 164, 196, 207, 218, 224, 237, 256, 257, 260, 261, 264, 278, 966], "256": [38, 47, 97, 143, 150, 153, 183, 187, 196, 197, 198, 199, 210, 237, 253, 256, 260, 322, 346, 517, 815, 861, 951, 952], "114": [38, 47, 61, 108, 112, 113, 150, 178, 196, 203, 208, 215, 224, 237, 256, 260, 280, 966], "12000": [38, 47, 309], "911610": [38, 47], "180000": 38, "793": [38, 171], "661": [38, 213, 230, 257], "1057": [38, 198], "881": [38, 47, 173, 261, 346], "1801": 38, "183": [38, 45, 150, 196, 237, 256, 261, 265, 268, 966], "contribut": [38, 45, 71, 95, 176, 178, 207, 258, 261, 278, 284, 285, 286, 287, 291, 292, 293, 294, 295, 312, 313, 319, 324, 333, 334, 505, 514, 654, 745, 951, 956], "sven": [38, 44, 45, 224, 278, 489, 491, 492, 493, 503], "d\u00e4hne": [38, 44, 45, 224, 278, 489, 491, 492, 503], "frank": [38, 44, 45, 103, 224, 233, 278, 489, 491, 492, 503, 638, 683], "meineck": [38, 44, 45, 224, 278, 489, 491, 492, 503], "stefan": [38, 44, 45, 59, 141, 224, 233, 258, 261, 264, 270, 274, 278, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 489, 491, 492, 493, 503, 653, 964], "hauf": [38, 44, 45, 224, 278, 489, 491, 492, 493, 503], "johann": [38, 224, 278, 283, 292, 294, 295, 304, 309, 492], "h\u00f6hne": [38, 224, 278, 492], "michael": [38, 45, 129, 223, 224, 232, 233, 278, 283, 319, 322, 425, 485, 491, 492, 637, 638, 680, 691, 810, 812, 822], "tangermann": [38, 224, 233, 278, 492], "klau": [38, 224, 233, 278, 485, 492, 638], "robert": [38, 103, 207, 223, 224, 233, 240, 261, 278, 291, 292, 293, 294, 295, 303, 304, 307, 309, 319, 485, 491, 492, 652, 776, 777, 779, 780, 964], "m\u00fcller": [38, 102, 224, 233, 278, 485, 492, 638], "vadim": [38, 47, 224, 278, 492, 493], "nikulin": [38, 47, 224, 278, 492, 493], "novel": [38, 47, 224, 278, 402, 492, 493], "framework": [38, 61, 224, 278, 322, 492, 547, 962], "neuron": [38, 47, 164, 171, 223, 224, 227, 278, 319, 321, 322, 366, 478, 491, 492, 493, 605, 652], "oscil": [38, 47, 95, 122, 141, 142, 213, 224, 227, 231, 253, 278, 492, 493, 742, 810, 812, 822], "behavior": [38, 171, 196, 216, 224, 227, 229, 230, 235, 278, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 295, 303, 307, 308, 310, 311, 312, 313, 326, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 492, 520, 521, 523, 524, 526, 552, 553, 598, 603, 605, 676, 703, 738, 793, 794, 795, 796, 799, 800, 916, 946], "111": [38, 58, 61, 72, 141, 150, 172, 196, 218, 222, 224, 256, 274, 278, 492, 966], "122": [38, 42, 150, 187, 196, 197, 224, 233, 256, 260, 261, 278, 287, 289, 322, 405, 486, 492, 501], "2013": [38, 42, 44, 45, 69, 85, 108, 109, 171, 196, 224, 278, 315, 316, 339, 344, 345, 351, 431, 486, 489, 491, 492, 501, 503, 509, 550, 643, 680, 746, 751], "07": [38, 45, 46, 61, 72, 82, 85, 108, 111, 112, 131, 134, 161, 187, 197, 203, 206, 210, 211, 212, 215, 218, 219, 223, 224, 237, 241, 257, 258, 260, 261, 271, 278, 322, 391, 492, 749, 966], "079": [38, 163, 224, 278, 492], "156": [38, 46, 61, 71, 150, 196, 203, 208, 224, 260, 261, 268, 346, 966], "decoding_spoc_cmc": [38, 46, 966], "illustr": [39, 53, 54, 95, 96, 118, 122, 123, 154, 161, 165, 169, 173, 177, 178, 192, 193, 198, 216, 227, 228, 229, 231, 233, 235, 239, 244, 256, 260, 266, 270, 318, 321, 322, 552, 553], "discriminatori": 39, "given": [39, 42, 45, 52, 57, 97, 107, 122, 123, 140, 148, 149, 164, 170, 171, 176, 177, 178, 185, 187, 189, 192, 193, 196, 197, 198, 202, 205, 207, 214, 215, 216, 223, 224, 229, 230, 233, 234, 235, 238, 240, 244, 245, 247, 256, 258, 260, 261, 269, 271, 283, 289, 291, 293, 303, 307, 311, 312, 319, 321, 322, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 347, 348, 349, 357, 366, 367, 372, 380, 382, 386, 387, 388, 397, 399, 400, 425, 430, 436, 437, 438, 440, 441, 449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 492, 493, 495, 500, 501, 505, 506, 510, 520, 521, 524, 526, 528, 530, 541, 547, 549, 550, 551, 552, 553, 555, 597, 600, 601, 604, 605, 606, 607, 608, 609, 611, 612, 613, 616, 621, 622, 637, 638, 639, 640, 641, 643, 649, 653, 654, 655, 656, 658, 664, 665, 668, 672, 676, 682, 684, 690, 691, 696, 699, 733, 738, 743, 753, 756, 757, 769, 771, 775, 776, 777, 779, 780, 782, 784, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 808, 809, 812, 814, 816, 820, 822, 827, 831, 832, 836, 844, 846, 849, 851, 862, 863, 864, 870, 874, 876, 877, 878, 880, 881, 882, 883, 885, 890, 893, 897, 899, 900, 901, 902, 904, 906, 908, 909, 913, 914, 925, 926, 928, 946, 951, 966], "subsequ": [39, 96, 111, 140, 141, 167, 169, 172, 184, 188, 193, 224, 228, 231, 233, 244, 264, 278, 288, 295, 304, 318, 321, 322, 333, 334, 552, 553, 638, 641, 648, 665, 781, 946, 955], "events_fnam": 39, "auditori": [39, 41, 56, 57, 63, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 86, 87, 88, 92, 98, 106, 107, 113, 114, 122, 135, 140, 144, 147, 148, 153, 159, 167, 168, 169, 170, 172, 173, 176, 177, 178, 179, 192, 193, 195, 199, 202, 203, 205, 206, 207, 208, 209, 221, 222, 223, 224, 230, 235, 240, 245, 252, 260, 264, 266, 269, 271, 274, 275, 278, 283, 326, 327, 328, 330, 333, 334, 335, 336, 338, 339, 344, 424, 426, 430, 432, 434, 491, 512, 526, 552, 566, 594, 595, 600, 603, 604, 605, 616, 651, 680, 700, 702, 708, 714, 721, 737, 794, 844, 966], "050": [39, 108, 167, 169, 176, 196, 207, 228, 236, 237, 253, 278], "faster": [39, 44, 70, 148, 167, 210, 224, 231, 233, 271, 278, 282, 283, 286, 288, 290, 291, 299, 325, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 431, 434, 525, 541, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 597, 638, 640, 776, 777, 779, 780, 951, 955, 958], "constructor": [39, 115, 167, 169, 178, 192, 193, 199, 229, 231, 234, 246, 251, 254, 283, 284, 288, 299, 301, 303, 305, 311, 328, 340, 341, 344, 347, 348, 349, 551, 639, 655, 791, 904, 909, 946], "497": [39, 40, 41, 104, 115, 127, 149, 150, 160, 205, 233, 256, 261, 278, 346], "lbfg": [39, 44, 224], "time_gen": [39, 224], "experiment": [39, 42, 71, 97, 98, 100, 101, 104, 108, 109, 110, 118, 121, 167, 168, 173, 176, 177, 178, 180, 192, 194, 195, 196, 207, 224, 227, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 256, 274, 278, 295, 301, 318, 321, 322, 328, 333, 334, 335, 336, 338, 486, 501, 513, 514, 526, 552, 553, 554, 598, 605, 633, 665, 676, 677, 703, 741, 742, 749, 789, 790, 794, 795, 796, 879, 936, 949], "57": [39, 45, 60, 61, 66, 71, 108, 124, 131, 136, 140, 142, 145, 150, 155, 162, 163, 166, 177, 178, 184, 196, 207, 210, 211, 219, 223, 224, 237, 240, 243, 246, 256, 257, 258, 260, 261, 265, 266, 269, 278, 302, 333, 334, 335, 336, 405, 549, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814, 952, 966], "89": [39, 45, 60, 61, 73, 98, 106, 107, 108, 109, 131, 136, 140, 142, 150, 163, 196, 211, 218, 219, 223, 224, 228, 237, 256, 257, 260, 261, 278, 322, 647], "67it": [39, 60, 131, 136, 140, 223, 224, 257, 260, 261, 266], "1225": [39, 224], "321": [39, 150, 196, 230, 256], "367": [39, 108, 150, 196, 228, 237, 256], "383": [39, 76, 108, 150, 224, 261], "357": [39, 45, 108, 150, 196, 230, 237, 256, 277], "69it": [39, 45, 59, 60, 70, 131, 137, 140, 224, 237, 256, 257, 258, 260, 261], "333": [39, 61, 103, 140, 150, 196, 237], "93": [39, 45, 59, 61, 66, 73, 107, 131, 136, 140, 142, 150, 173, 196, 223, 224, 237, 256, 257, 260, 261, 278, 664, 680], "106": [39, 42, 51, 61, 99, 124, 125, 128, 149, 150, 168, 172, 179, 193, 196, 199, 204, 207, 229, 233, 256, 261, 966], "346": [39, 67, 150, 171, 196, 237, 256, 261], "358": [39, 108, 150, 196, 261], "364": [39, 61, 66, 74, 75, 80, 81, 84, 85, 95, 108, 120, 122, 149, 150, 189, 193, 196, 205, 256, 261, 269], "149": [39, 57, 71, 82, 150, 196, 208, 237, 260, 261, 346, 966], "370": [39, 108, 150, 196, 224, 237, 261, 278, 339, 344], "164": [39, 109, 150, 196, 230, 237, 260, 261, 278, 776, 777, 779, 780], "377": [39, 108, 150, 223, 261, 273, 966], "380": [39, 108, 150, 237, 256], "98it": [39, 45, 60, 131, 140, 223, 224, 237, 256, 257, 260, 261], "193": [39, 143, 150, 157, 196, 224, 237, 260, 261, 300, 966], "386": [39, 108, 150, 261], "208": [39, 150, 196, 198, 216, 237, 256, 260, 261, 278], "391": [39, 108, 150, 189, 223, 275, 277, 966], "221": [39, 140, 150, 173, 196, 237, 256, 260, 261], "236": [39, 72, 140, 150, 196, 237, 256, 260, 261], "394": [39, 108, 150, 256, 771], "251": [39, 150, 196, 224, 226, 231, 240, 243, 260, 278, 505, 552, 553, 966], "71it": [39, 45, 59, 131, 136, 223, 224, 237, 256, 257, 261, 265], "264": [39, 108, 109, 140, 150, 178, 196, 219, 256, 278], "397": [39, 108, 150, 237, 256, 257, 263, 966], "279": [39, 140, 150, 196, 231, 256, 261, 278, 333, 334, 638, 795, 825, 828], "294": [39, 140, 150, 196, 237], "403": [39, 76, 108, 150, 224, 237, 256, 261], "308": [39, 140, 150, 196, 271, 273, 966], "404": [39, 108, 134, 142, 150, 199, 201, 237, 261, 966], "323": [39, 150, 196, 237, 238, 261], "406": [39, 108, 150, 256], "337": [39, 140, 150, 196, 223, 256], "407": [39, 108, 150], "409": [39, 108, 147, 150, 224, 237, 256, 261, 278, 863], "381": [39, 108, 150, 256, 261], "411": [39, 137, 150, 162, 261, 278, 425], "395": [39, 108, 119, 121, 150, 237, 261, 966], "410": [39, 85, 98, 108, 110, 150, 227, 231, 235, 247, 256, 261, 269, 278, 550], "413": [39, 142, 150, 205, 278], "424": [39, 150, 237, 261], "438": [39, 74, 81, 150], "37": [39, 45, 47, 54, 60, 61, 68, 71, 73, 108, 131, 136, 140, 142, 150, 172, 184, 196, 209, 215, 218, 224, 237, 239, 243, 256, 257, 258, 260, 261, 264, 265, 266, 269, 277, 292, 299, 301, 405, 477, 526, 649, 966], "452": [39, 69, 82, 150, 256, 346, 966], "38": [39, 45, 47, 54, 60, 61, 71, 73, 98, 100, 108, 109, 119, 121, 122, 124, 131, 136, 140, 142, 150, 164, 166, 167, 168, 169, 171, 185, 196, 203, 204, 207, 211, 215, 218, 219, 223, 224, 229, 237, 256, 257, 258, 260, 261, 263, 265, 266, 274, 649, 966], "466": [39, 150, 261], "480": [39, 102, 108, 150, 198, 219, 237], "493": [39, 80, 82, 107, 112, 150, 237, 261, 966], "508": [39, 150, 178, 256, 257, 261], "66it": [39, 45, 59, 60, 131, 140, 223, 224, 237, 256, 257, 260, 261], "415": [39, 150, 237, 256, 261], "537": [39, 209, 224, 237, 261], "551": [39, 72, 96, 112, 142, 224, 966], "566": [39, 96, 124, 224], "416": [39, 150, 171, 198, 261], "580": [39, 108, 191, 224, 229, 237], "595": [39, 261, 278], "417": [39, 61, 147, 150, 278, 638, 674, 863], "608": [39, 204, 224], "622": [39, 223, 224, 237, 278, 425], "637": 39, "652": [39, 171, 261], "418": [39, 82, 86, 150, 237, 256, 261, 301, 966], "38it": [39, 45, 131, 136, 223, 224, 237, 256, 257, 261, 265], "54": [39, 45, 54, 60, 61, 71, 73, 108, 131, 136, 140, 142, 150, 171, 178, 185, 196, 218, 223, 224, 237, 238, 256, 257, 260, 261, 278, 280, 346], "667": [39, 201, 224, 237, 261], "419": [39, 45, 150, 237, 256], "56": [39, 41, 45, 58, 61, 71, 73, 103, 107, 108, 109, 115, 131, 132, 136, 140, 142, 150, 153, 157, 178, 187, 196, 199, 203, 207, 218, 219, 224, 237, 239, 256, 257, 260, 261, 278, 327, 485, 639, 776, 777, 779, 780, 966], "682": [39, 224, 257], "420": [39, 61, 108, 150], "56it": [39, 45, 131, 137, 140, 207, 223, 224, 237, 256, 257, 258, 261, 266], "696": [39, 261], "710": [39, 108, 237, 261, 278, 646], "59": [39, 45, 54, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 74, 80, 81, 84, 85, 87, 96, 98, 100, 104, 106, 108, 110, 118, 120, 121, 122, 131, 136, 139, 140, 142, 144, 146, 149, 150, 158, 168, 169, 172, 177, 178, 179, 183, 185, 189, 194, 195, 196, 199, 203, 205, 209, 211, 218, 223, 224, 227, 228, 229, 233, 234, 235, 237, 238, 241, 244, 245, 246, 247, 256, 257, 258, 260, 261, 266, 274, 275, 278, 346, 506, 649, 665, 676, 782, 783], "722": [39, 131, 224, 278, 812, 822, 823, 826, 965], "735": [39, 245, 249, 966], "748": [39, 231, 243, 966], "412": [39, 150, 256], "761": 39, "774": [39, 243], "789": [39, 224, 237, 261], "802": [39, 171, 224, 237, 261], "67": [39, 45, 59, 61, 73, 83, 108, 109, 131, 136, 140, 142, 144, 150, 176, 185, 196, 199, 203, 205, 208, 219, 223, 224, 237, 256, 257, 258, 260, 261, 265, 266, 275, 278, 282, 605], "816": 39, "829": [39, 223, 224], "408": [39, 61, 108, 150, 212, 222, 261], "841": [39, 164], "405": [39, 108, 150], "853": [39, 261], "402": [39, 61, 108, 150, 171, 256], "865": 39, "879": [39, 92, 93, 966], "892": [39, 219, 261], "399": [39, 108, 150, 237], "906": [39, 172, 261], "920": [39, 108, 129, 170, 237, 257], "934": [39, 237], "401": [39, 50, 108, 150, 237, 261], "948": [39, 237, 261], "963": 39, "978": [39, 85, 141, 153, 157, 178, 230, 233, 253, 278, 332, 333, 334, 335, 336, 366, 367, 425, 550, 638, 771, 789, 790, 791, 795, 796, 797, 798, 966], "992": [39, 223, 239, 261], "1006": [39, 278, 322, 773], "83": [39, 45, 61, 66, 73, 86, 108, 131, 136, 140, 142, 150, 196, 218, 223, 224, 229, 232, 237, 238, 256, 257, 260, 261, 278, 371, 405, 637, 691, 776, 777, 779, 780], "1019": 39, "1033": [39, 46, 196, 966], "1046": 39, "1058": [39, 237, 278, 369, 778], "88": [39, 45, 52, 61, 67, 71, 73, 76, 107, 108, 109, 131, 137, 140, 142, 150, 185, 196, 203, 207, 208, 209, 213, 218, 219, 223, 224, 237, 256, 257, 258, 260, 261, 265, 266, 278, 425], "1073": [39, 59, 207, 253, 278, 359, 366], "1086": [39, 84, 237, 278, 344], "1100": 39, "1112": [39, 196], "1124": [39, 224], "1136": [39, 278], "396": [39, 71, 108, 150, 203, 208, 256, 278, 366], "1146": 39, "1157": 39, "387": [39, 61, 108, 150, 256, 261, 278, 366], "1168": 39, "384": [39, 47, 61, 108, 150, 171, 198, 237, 256], "96": [39, 41, 44, 45, 70, 73, 109, 131, 136, 140, 141, 142, 150, 164, 189, 196, 198, 207, 211, 223, 224, 234, 235, 237, 256, 257, 258, 260, 261, 265, 266, 278, 335, 336, 489, 491, 503, 886, 946], "1179": 39, "1189": [39, 224], "376": [39, 108, 121, 122, 123, 137, 150, 176, 193, 194, 196, 206, 237, 244, 252, 255, 256, 966], "1202": [39, 141, 224], "1213": [39, 196], "1224": [39, 237], "371": [39, 63, 82, 108, 150, 196, 223, 224, 256, 261, 966], "vmin": [39, 45, 115, 135, 140, 142, 144, 145, 163, 168, 187, 203, 223, 224, 238, 239, 256, 258, 259, 270, 282, 284, 292, 305, 306, 307, 310, 330, 333, 334, 335, 336, 342, 343, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 863, 877, 878, 885, 889, 898, 901, 906, 907, 908], "vmax": [39, 45, 97, 115, 135, 140, 142, 144, 145, 153, 163, 168, 187, 203, 223, 224, 238, 239, 256, 258, 259, 270, 282, 292, 305, 306, 307, 310, 330, 333, 334, 335, 336, 342, 343, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 846, 863, 877, 878, 881, 885, 889, 898, 901, 906, 907, 908], "xaxi": [39, 274], "set_ticks_posit": 39, "bottom": [39, 97, 102, 140, 167, 173, 188, 219, 246, 247, 256, 274, 303, 310, 321, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 859, 876, 886, 904, 909], "ntest": 39, "ntrain": 39, "fontweight": [39, 171, 238, 274], "bold": [39, 171, 178, 228, 231, 234, 235, 236, 238, 239, 256, 274], "r\u00e9mi": [39, 224, 278], "stanisla": [39, 42, 164, 224, 278, 288, 486, 501], "dehaen": [39, 42, 224, 278, 486, 501], "dynam": [39, 47, 53, 58, 59, 97, 122, 133, 134, 140, 193, 207, 224, 230, 232, 233, 240, 253, 278, 285, 319, 321, 322, 333, 336, 339, 344, 356, 358, 359, 360, 361, 366, 493, 524, 526, 552, 553, 605, 638, 639, 646, 768, 899, 959, 966], "represent": [39, 43, 46, 53, 69, 70, 122, 131, 140, 143, 167, 176, 187, 193, 195, 196, 197, 199, 202, 218, 224, 233, 244, 245, 264, 265, 266, 269, 270, 278, 280, 283, 284, 288, 293, 294, 295, 302, 305, 309, 319, 321, 333, 334, 335, 336, 340, 341, 343, 344, 345, 347, 348, 349, 431, 434, 520, 526, 552, 553, 587, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 823, 824, 826, 827, 828, 853, 959, 966], "tempor": [39, 42, 45, 53, 72, 85, 105, 112, 133, 134, 141, 142, 162, 163, 164, 167, 169, 173, 178, 192, 207, 211, 213, 225, 226, 229, 230, 231, 232, 235, 238, 246, 256, 258, 259, 260, 261, 267, 268, 278, 281, 291, 292, 297, 299, 304, 310, 319, 320, 322, 328, 333, 334, 335, 336, 338, 344, 345, 346, 425, 431, 491, 497, 505, 508, 511, 525, 526, 528, 548, 549, 550, 552, 553, 597, 601, 604, 605, 619, 621, 622, 635, 638, 640, 654, 676, 683, 684, 699, 703, 714, 716, 718, 723, 744, 745, 746, 747, 748, 749, 750, 751, 761, 763, 764, 765, 770, 772, 779, 780, 781, 809, 812, 822, 823, 824, 825, 826, 827, 828, 844, 966], "trend": [39, 92, 141, 168, 224, 278], "cognit": [39, 68, 69, 224, 230, 278, 324, 345, 431, 606, 964], "203": [39, 61, 66, 68, 75, 76, 84, 85, 100, 104, 107, 114, 120, 121, 122, 139, 144, 147, 149, 150, 152, 153, 158, 169, 173, 177, 179, 183, 184, 185, 189, 194, 195, 196, 197, 199, 204, 205, 206, 207, 224, 227, 228, 229, 234, 235, 237, 238, 244, 245, 246, 247, 253, 261, 278], "tic": [39, 224, 278], "decoding_time_generalization_condit": [39, 46, 966], "Then": [40, 45, 71, 94, 109, 137, 141, 143, 162, 163, 167, 183, 188, 208, 218, 219, 220, 235, 261, 271, 311, 322, 335, 336, 387, 510, 653, 784, 882, 946, 956, 960, 961], "virtual": [40, 97, 127, 178, 233, 236, 291, 302, 310, 321, 333, 334, 335, 336, 384, 506, 552, 553, 675, 730, 733, 951, 960], "output": [40, 45, 58, 61, 66, 70, 72, 73, 85, 135, 141, 142, 151, 162, 167, 170, 176, 178, 182, 188, 190, 191, 192, 195, 198, 199, 216, 220, 223, 224, 230, 231, 233, 234, 235, 241, 244, 245, 247, 251, 256, 258, 274, 280, 283, 284, 286, 287, 289, 292, 294, 295, 303, 305, 306, 307, 310, 311, 314, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 495, 496, 497, 498, 501, 502, 504, 506, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 535, 536, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 633, 634, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 734, 737, 738, 740, 741, 742, 743, 752, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 776, 777, 778, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 814, 815, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 843, 844, 846, 849, 853, 862, 871, 874, 878, 879, 880, 881, 886, 887, 889, 890, 891, 896, 897, 899, 900, 902, 903, 904, 905, 909, 910, 911, 914, 915, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 952, 956, 960, 966], "asish": [40, 282, 283, 284], "asishrocks95": 40, "fastica": [40, 104, 233, 638], "aud_l": [40, 41, 44, 68, 204, 260, 879], "vis_l": [40, 41, 44, 68, 260], "ie": [40, 79, 138, 330, 340, 344, 348, 693, 812, 822, 844, 871, 904, 905], "pca_data": 40, "window_titl": [40, 219, 335, 336, 880], "ica_data": 40, "ev1": [40, 283], "778": [40, 46, 193, 201, 261, 966], "decoding_unsupervised_spatial_filt": [40, 46, 966], "erp": [41, 101, 127, 129, 145, 156, 180, 181, 192, 199, 224, 227, 228, 230, 233, 235, 236, 241, 278, 280, 298, 333, 335, 336, 338, 384, 424, 542, 552, 629, 638, 639, 703, 775, 870, 889, 891, 931, 949, 959, 966], "concaten": [41, 97, 102, 108, 140, 164, 178, 195, 216, 219, 232, 234, 244, 271, 283, 284, 285, 286, 295, 296, 301, 302, 303, 309, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 432, 433, 434, 485, 494, 549, 552, 553, 641, 657, 665, 676, 754, 888], "fed": [41, 509], "classification_report": [41, 164], "confusion_matrix": [41, 164], "minmaxscal": 41, "n_filter": 41, "penalti": [41, 66, 72, 278, 314, 549, 550], "l1": [41, 66, 549, 550], "pred": 41, "target_nam": [41, 164], "cm_normal": 41, "astyp": [41, 99, 172, 187, 219, 223, 231, 244], "float": [41, 45, 57, 66, 92, 121, 143, 163, 170, 171, 172, 176, 187, 196, 198, 216, 220, 223, 233, 244, 246, 256, 281, 286, 288, 289, 291, 292, 293, 295, 301, 303, 309, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 359, 366, 367, 374, 375, 382, 391, 396, 398, 400, 412, 413, 414, 415, 418, 424, 425, 426, 427, 428, 429, 430, 431, 436, 443, 445, 485, 487, 490, 491, 492, 493, 496, 497, 498, 502, 506, 509, 511, 513, 514, 520, 521, 523, 524, 525, 526, 528, 529, 530, 537, 543, 544, 547, 549, 550, 551, 552, 553, 563, 564, 572, 578, 590, 592, 593, 594, 597, 598, 600, 601, 605, 606, 607, 608, 609, 611, 612, 616, 617, 618, 620, 621, 622, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 649, 650, 651, 653, 655, 656, 657, 658, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 676, 678, 680, 681, 682, 684, 685, 694, 719, 725, 726, 727, 728, 738, 739, 744, 745, 746, 747, 748, 749, 750, 751, 754, 756, 759, 760, 761, 763, 764, 767, 768, 771, 772, 773, 775, 776, 777, 779, 780, 781, 782, 783, 784, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 814, 815, 820, 822, 823, 824, 825, 827, 828, 832, 833, 834, 844, 846, 849, 850, 855, 859, 863, 865, 866, 870, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 896, 898, 899, 900, 901, 902, 904, 905, 906, 907, 908, 909, 910, 914, 917, 918, 920, 921, 944], "sum": [41, 54, 57, 67, 73, 87, 99, 109, 137, 141, 142, 145, 164, 171, 176, 188, 189, 195, 202, 210, 211, 213, 230, 256, 257, 261, 271, 289, 292, 322, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 355, 424, 429, 552, 553, 620, 638, 643, 741, 776, 777, 779, 780, 784, 792, 793, 794, 799, 800, 878, 946, 965], "imshow": [41, 42, 48, 97, 135, 143, 144, 150, 163, 173, 187, 199, 224, 256, 258, 259, 260, 261, 274, 333, 334, 335, 336, 391, 789, 790, 791, 795, 796, 797, 798, 845, 848, 884, 907, 916], "nearest": [41, 52, 107, 144, 148, 163, 167, 172, 187, 195, 209, 244, 256, 282, 289, 291, 292, 304, 322, 327, 330, 333, 334, 335, 336, 339, 340, 341, 342, 344, 346, 347, 348, 349, 351, 431, 436, 485, 492, 552, 553, 637, 638, 653, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 832, 844, 846, 863, 864, 870, 878, 881, 885, 889, 898, 901, 906, 908], "blue": [41, 80, 81, 107, 110, 140, 159, 162, 169, 178, 183, 199, 202, 204, 205, 208, 218, 235, 264, 265, 271, 321, 331, 844, 861, 862, 870, 874], "tick_mark": 41, "ytick": [41, 223, 230, 256, 274], "precis": [41, 73, 97, 118, 164, 184, 211, 220, 230, 231, 238, 244, 253, 287, 299, 304, 318, 327, 333, 334, 339, 366, 367, 526, 552, 553, 575, 676, 745, 747, 766, 823, 824, 826, 827, 946], "recal": [41, 118, 164, 176, 177, 183, 245, 745, 746, 748, 751], "f1": [41, 97, 118, 164, 745], "support": [41, 60, 87, 88, 148, 152, 162, 163, 164, 165, 167, 169, 176, 177, 178, 192, 193, 197, 199, 204, 208, 209, 212, 217, 218, 220, 247, 269, 270, 271, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 320, 321, 325, 326, 327, 330, 331, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 366, 367, 374, 382, 388, 390, 410, 425, 430, 431, 441, 442, 443, 445, 464, 485, 492, 493, 501, 505, 506, 509, 515, 516, 518, 519, 523, 524, 525, 551, 552, 553, 559, 564, 569, 574, 577, 578, 579, 580, 581, 584, 586, 592, 596, 599, 600, 638, 645, 649, 663, 665, 676, 678, 698, 700, 701, 702, 716, 723, 724, 733, 737, 738, 754, 770, 772, 781, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862, 864, 867, 870, 874, 875, 876, 880, 885, 893, 899, 900, 904, 909, 910, 911, 912, 915, 946, 949, 951, 955, 957, 958, 959, 962], "288": [41, 61, 98, 99, 140, 150, 159, 168, 172, 187, 196, 198, 241, 256, 261, 266, 278, 647], "macro": [41, 164], "avg": [41, 164, 171, 256, 325, 823, 824], "last": [41, 97, 109, 132, 164, 167, 171, 173, 178, 187, 193, 210, 216, 224, 228, 229, 230, 231, 233, 234, 244, 247, 256, 257, 264, 271, 274, 282, 285, 287, 289, 295, 310, 312, 319, 321, 322, 328, 330, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 356, 357, 372, 390, 413, 425, 433, 488, 495, 496, 498, 509, 523, 524, 525, 526, 551, 552, 553, 578, 598, 604, 633, 638, 641, 658, 770, 775, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 814, 825, 831, 844, 878, 883, 885, 890, 893, 900, 906, 952], "nrow": [41, 71, 100, 148, 173, 178, 203, 210, 239, 257, 274, 291, 306, 335, 336, 485, 492, 638, 885, 889], "fitted_xdawn": 41, "get_channel_typ": [41, 167, 196, 286, 291, 292, 304, 333, 334, 335, 336, 338, 552, 553, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "get_montag": [41, 143, 162, 163, 292, 295, 304, 307, 333, 334, 335, 336, 338, 552, 553], "cur_class": 41, "cur_pattern": 41, "pattern_evok": 41, "time_format": [41, 47, 128, 137, 140, 172, 203, 246, 295, 304, 327, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 638, 789, 790, 791, 795, 796, 797, 798, 885, 893, 899], "show_nam": [41, 94, 128, 148, 178, 197, 209, 257, 285, 287, 305, 306, 330, 333, 334, 335, 336, 338, 342, 382, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 882, 885, 889, 896, 898, 901, 902, 906], "bertrand": [41, 98, 106, 115, 224, 228, 278, 287, 322, 639, 647, 812, 822, 823, 826], "rivet": [41, 115, 224, 278, 639], "antoin": [41, 115, 224, 278, 287, 288, 295, 639], "souloumiac": [41, 115, 224, 278, 639], "virgini": [41, 115, 224, 278, 639], "attina": [41, 115, 224, 278, 639], "gibert": [41, 115, 224, 278, 639], "algorithm": [41, 53, 57, 97, 102, 105, 110, 111, 112, 115, 141, 155, 179, 183, 184, 189, 193, 224, 228, 230, 233, 238, 256, 261, 264, 265, 266, 278, 280, 283, 286, 288, 291, 307, 310, 314, 318, 319, 320, 338, 339, 343, 379, 425, 484, 485, 499, 506, 549, 552, 605, 624, 638, 639, 641, 646, 648, 649, 655, 664, 665, 667, 674, 676, 683, 684, 685, 749, 766, 771, 834, 959, 962, 966], "enhanc": [41, 115, 223, 224, 257, 261, 278, 286, 298, 299, 310, 311, 313, 314, 491, 638, 639, 665, 776, 777, 779, 780], "2035": [41, 115, 207, 224, 278, 639], "2043": [41, 115, 196, 224, 278, 639], "2009": [41, 61, 84, 115, 145, 198, 224, 233, 256, 257, 278, 280, 318, 344, 547, 639, 653, 776, 777, 779, 780], "2012869": [41, 115, 224, 278, 639], "hubert": [41, 115, 278, 287, 288, 292, 295, 639], "cecotti": [41, 115, 278, 639], "emmanuel": [41, 115, 230, 278, 639], "mabi": [41, 115, 278, 639], "j\u00e9r\u00e9mie": [41, 115, 278, 639], "mattout": [41, 115, 278, 639], "theoret": [41, 115, 223, 224, 230, 251, 278, 321, 485, 639, 664], "effici": [41, 68, 70, 115, 219, 230, 231, 256, 278, 292, 298, 307, 320, 328, 333, 334, 335, 336, 497, 552, 553, 638, 639, 640, 749, 793, 794, 799, 800, 826, 827], "p300": [41, 115, 219, 224, 230, 278, 333, 334, 639, 795, 825, 828], "proceed": [41, 59, 66, 72, 115, 193, 207, 232, 233, 253, 278, 318, 322, 333, 334, 359, 366, 550, 639, 795, 825, 828], "eusipco": [41, 115, 278, 333, 334, 639, 795, 825, 828], "1382": [41, 115, 278, 639], "1386": [41, 115, 278, 639], "barcelona": [41, 115, 278, 639], "url": [41, 115, 141, 178, 224, 278, 291, 311, 322, 333, 334, 425, 452, 458, 460, 464, 477, 478, 547, 605, 639, 664, 771, 795, 825, 828], "ieeexplor": [41, 115, 278, 333, 334, 639, 795, 825, 828], "7073970": [41, 115, 278, 639], "576": [41, 46, 224, 241, 243, 966], "decoding_xdawn_eeg": [41, 46, 966], "reconstruct": [42, 79, 185, 186, 189, 190, 191, 192, 209, 214, 215, 219, 223, 227, 228, 233, 238, 266, 278, 289, 292, 301, 306, 310, 319, 322, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 362, 367, 373, 377, 378, 379, 382, 425, 431, 436, 437, 438, 462, 465, 493, 520, 521, 523, 524, 526, 537, 541, 543, 544, 545, 546, 549, 552, 553, 590, 594, 596, 624, 638, 639, 648, 649, 665, 672, 676, 684, 693, 708, 711, 718, 720, 732, 737, 738, 752, 755, 766, 784, 785, 836, 844, 857, 862, 864, 874, 880, 885, 904, 909, 910, 941, 946, 966], "cours": [42, 53, 58, 62, 64, 65, 67, 76, 82, 97, 102, 110, 118, 120, 123, 129, 141, 144, 162, 163, 169, 170, 178, 192, 193, 199, 202, 203, 204, 207, 214, 215, 224, 227, 230, 234, 235, 253, 261, 266, 278, 282, 283, 292, 298, 301, 309, 321, 322, 331, 332, 333, 334, 335, 336, 339, 340, 341, 344, 346, 347, 348, 349, 358, 360, 362, 365, 431, 486, 501, 519, 528, 538, 547, 549, 550, 552, 553, 592, 599, 604, 605, 619, 635, 706, 710, 716, 739, 753, 755, 756, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 843, 844, 870, 897, 904, 909, 966], "techniqu": [42, 43, 46, 53, 85, 97, 100, 102, 103, 176, 178, 192, 193, 224, 227, 230, 232, 233, 235, 236, 238, 239, 240, 242, 253, 256, 278, 319, 321, 322, 323, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 445, 487, 496, 499, 521, 523, 524, 552, 553, 635, 638, 703, 733, 966], "By": [42, 71, 97, 107, 110, 131, 132, 140, 162, 169, 172, 176, 177, 178, 185, 193, 195, 196, 197, 198, 199, 205, 216, 217, 228, 230, 231, 233, 234, 235, 236, 238, 240, 241, 244, 245, 247, 269, 275, 282, 283, 284, 287, 288, 289, 291, 309, 310, 322, 325, 333, 334, 335, 336, 338, 339, 340, 341, 344, 347, 348, 349, 379, 396, 509, 526, 552, 553, 638, 641, 730, 754, 766, 782, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 872, 876, 884, 892, 899, 909, 925, 929], "onto": [42, 44, 66, 100, 162, 163, 169, 182, 193, 197, 202, 207, 223, 228, 234, 235, 238, 252, 284, 292, 295, 303, 307, 319, 322, 339, 341, 347, 349, 493, 672, 738, 766, 844, 862, 897, 916], "surrog": [42, 184, 210, 235, 289, 293, 305, 436, 501, 546], "expos": [42, 160, 223, 260, 285, 291, 300, 306], "exhibit": [42, 271, 322, 335, 336, 340, 341, 344, 347, 348, 349], "evolut": [42, 141, 638, 893], "audl": [42, 99], "visl": [42, 99], "wai": [42, 47, 53, 60, 69, 70, 101, 102, 142, 143, 167, 168, 169, 171, 176, 177, 178, 183, 187, 188, 193, 195, 196, 197, 198, 199, 204, 207, 218, 223, 228, 229, 230, 231, 233, 234, 235, 238, 240, 245, 246, 247, 251, 253, 256, 258, 259, 264, 266, 271, 274, 278, 280, 287, 291, 294, 299, 304, 309, 311, 312, 313, 316, 318, 319, 320, 321, 323, 327, 328, 332, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 425, 509, 519, 568, 597, 638, 640, 655, 661, 668, 677, 699, 706, 738, 770, 771, 772, 778, 784, 789, 790, 791, 795, 796, 797, 798, 810, 812, 822, 844, 951, 955, 958], "n_epoch": [42, 142, 167, 173, 176, 193, 223, 224, 251, 261, 270, 285, 328, 333, 334, 384, 485, 486, 487, 490, 491, 492, 493, 494, 496, 497, 499, 500, 523, 524, 639, 646, 793, 794, 795, 796, 801, 802, 803, 823, 824, 825, 876, 877], "n_channel": [42, 45, 57, 90, 92, 94, 97, 102, 103, 108, 110, 111, 142, 164, 167, 170, 176, 178, 186, 193, 213, 218, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 239, 244, 247, 251, 261, 271, 288, 321, 325, 328, 330, 332, 333, 334, 335, 336, 337, 338, 366, 367, 383, 384, 388, 399, 441, 485, 486, 487, 490, 491, 492, 493, 494, 496, 498, 499, 501, 523, 524, 552, 553, 637, 638, 639, 643, 646, 757, 774, 775, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 823, 824, 825, 863, 866, 870, 876, 877, 878, 885, 899, 901, 906, 908, 916], "n_time": [42, 45, 57, 90, 92, 94, 97, 103, 110, 142, 167, 173, 176, 186, 193, 218, 219, 223, 224, 229, 233, 236, 244, 251, 253, 256, 260, 261, 264, 265, 266, 288, 328, 332, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 384, 419, 485, 486, 487, 490, 491, 492, 493, 494, 496, 498, 499, 501, 519, 521, 523, 524, 551, 552, 553, 574, 613, 639, 674, 739, 744, 745, 746, 747, 748, 749, 750, 751, 756, 763, 764, 765, 769, 775, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 814, 815, 819, 821, 823, 824, 825, 844, 870, 877, 878, 885, 906], "993": [42, 44, 141, 224], "613": [42, 44, 45, 261], "x_transform": 42, "leav": [42, 164, 171, 199, 219, 227, 232, 244, 284, 684, 929, 958, 960], "recommend": [42, 67, 69, 70, 71, 97, 142, 182, 185, 188, 199, 216, 218, 220, 230, 231, 233, 234, 236, 238, 278, 282, 283, 288, 295, 311, 313, 322, 328, 333, 334, 335, 336, 340, 344, 348, 351, 377, 379, 388, 400, 418, 425, 430, 431, 445, 484, 487, 493, 529, 547, 552, 553, 561, 568, 573, 586, 597, 605, 611, 618, 638, 643, 655, 664, 676, 683, 699, 701, 705, 730, 737, 738, 775, 779, 780, 789, 812, 822, 854, 862, 904, 946, 951, 956, 957, 958], "stratifi": [42, 502], "tend": [42, 189, 205, 230, 232, 233, 256, 322, 648, 946], "overfit": [42, 115, 223], "cannot": [42, 85, 188, 196, 199, 216, 218, 220, 230, 231, 234, 236, 246, 266, 294, 311, 312, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 359, 412, 414, 507, 552, 553, 605, 638, 663, 665, 708, 738, 844, 882, 904, 909, 938, 951], "x_scale": 42, "futur": [42, 97, 198, 233, 247, 287, 310, 311, 312, 320, 351, 491, 497, 665, 946, 956], "filters_": [42, 44, 291, 485, 486, 489, 492, 493, 503, 639], "individu": [42, 52, 58, 63, 68, 69, 70, 129, 167, 169, 171, 182, 186, 193, 197, 199, 202, 228, 234, 235, 239, 246, 247, 256, 270, 271, 278, 284, 289, 295, 310, 311, 312, 318, 319, 322, 328, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 366, 367, 398, 420, 485, 518, 526, 552, 553, 606, 614, 615, 655, 684, 706, 767, 773, 781, 795, 825, 828, 864, 876, 880, 884, 897, 899, 937, 956], "argsort": [42, 57, 145, 156, 170, 208], "reorder": [42, 73, 145, 286, 310, 333, 334, 335, 336, 343, 552, 553, 564, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 877, 907, 965], "kei": [42, 122, 123, 164, 167, 168, 169, 176, 177, 179, 193, 196, 197, 198, 208, 217, 234, 235, 241, 244, 245, 247, 251, 274, 281, 285, 286, 288, 291, 293, 303, 305, 307, 308, 311, 319, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 357, 366, 367, 372, 394, 395, 425, 429, 430, 436, 439, 440, 441, 442, 443, 458, 464, 477, 485, 492, 494, 501, 509, 512, 514, 528, 529, 530, 533, 547, 549, 550, 552, 553, 555, 588, 593, 604, 605, 616, 628, 637, 638, 640, 653, 655, 656, 658, 660, 665, 687, 700, 702, 719, 732, 740, 741, 742, 754, 758, 774, 775, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 831, 834, 844, 862, 863, 868, 869, 870, 874, 876, 877, 878, 879, 880, 882, 884, 885, 886, 889, 898, 899, 901, 902, 904, 906, 908, 909, 910, 944, 958], "ems_av": 42, "u": [42, 45, 47, 73, 97, 101, 132, 140, 143, 144, 164, 168, 171, 173, 176, 178, 187, 193, 198, 199, 207, 208, 216, 217, 223, 229, 230, 233, 234, 235, 241, 244, 245, 251, 278, 283, 288, 295, 311, 312, 313, 322, 324, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 519, 552, 553, 613, 955, 960], "schurger": [42, 224, 278, 486, 501], "thu": [42, 44, 69, 73, 81, 97, 131, 142, 167, 168, 176, 179, 197, 198, 202, 207, 209, 216, 220, 224, 230, 233, 235, 236, 238, 240, 256, 303, 311, 318, 319, 321, 322, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 418, 487, 496, 508, 519, 521, 523, 552, 553, 605, 613, 616, 640, 812, 822, 823, 824, 826, 827, 946], "equalize_event_count": [42, 176, 178, 193, 260, 261, 266, 294, 295, 333, 334, 795], "103": [42, 61, 76, 140, 142, 149, 150, 196, 256, 260], "aaron": [42, 224, 278, 308, 486, 501], "sebastien": [42, 224, 278, 294, 486, 501], "marti": [42, 224, 278, 301, 486, 501], "reveal": [42, 129, 141, 171, 197, 219, 224, 230, 271, 278, 333, 334, 486, 501, 795, 825, 828], "771": [42, 46, 237, 966], "ems_filt": [42, 46, 966], "motor": [43, 46, 53, 58, 103, 110, 137, 140, 171, 208, 224, 239, 301, 333, 338, 382, 398, 434, 452, 485, 492, 568, 635, 966], "imageri": [43, 46, 53, 140, 224, 301, 333, 338, 382, 398, 434, 452, 485, 568, 635, 966], "continu": [43, 45, 46, 47, 53, 126, 130, 167, 169, 172, 175, 178, 188, 195, 216, 224, 225, 226, 227, 229, 230, 233, 234, 238, 242, 245, 249, 251, 256, 269, 278, 285, 294, 295, 298, 300, 311, 312, 314, 318, 319, 321, 325, 327, 333, 334, 335, 336, 338, 416, 424, 428, 430, 434, 485, 491, 492, 493, 497, 525, 526, 552, 553, 566, 572, 573, 586, 597, 598, 635, 637, 638, 641, 650, 694, 699, 773, 774, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 821, 870, 882, 889, 891, 966], "spectro": [43, 46, 53, 142, 192, 225, 226, 333, 335, 336, 338, 491, 493, 497, 525, 566, 598, 815, 966], "mvpa": [44, 192, 225, 226, 299, 330, 333, 335, 336, 338, 344, 425, 485, 486, 488, 489, 492, 494, 495, 500, 502, 503, 526, 605, 616, 639, 708, 844, 966], "neurophysiolog": [44, 45, 950], "interpret": [44, 45, 131, 140, 169, 178, 186, 187, 216, 224, 230, 231, 246, 258, 260, 261, 266, 278, 280, 308, 311, 314, 322, 328, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 347, 348, 349, 351, 373, 380, 383, 397, 399, 425, 426, 428, 430, 441, 487, 488, 489, 491, 495, 498, 501, 502, 503, 506, 523, 524, 528, 541, 543, 544, 552, 553, 561, 568, 576, 578, 596, 599, 600, 605, 611, 612, 621, 622, 637, 638, 640, 643, 650, 651, 654, 655, 656, 664, 665, 668, 672, 682, 684, 691, 737, 738, 740, 741, 742, 745, 754, 757, 775, 776, 777, 778, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 814, 815, 823, 824, 825, 826, 827, 844, 846, 870, 876, 877, 878, 880, 881, 882, 883, 890, 895, 897, 899, 900, 955, 956, 961], "romain": [44, 280, 295, 299, 300, 302], "trachel": [44, 280, 299, 300, 302], "trachelr": 44, "sample_path": [44, 153, 162, 163], "meg_data": [44, 167], "reshap": [44, 164, 223, 256, 257, 260, 264, 266, 491, 500], "coef": [44, 45, 223, 224, 503], "sequenti": [44, 167, 177, 213, 251, 321, 331, 332, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 405, 425, 426, 428, 430, 488, 495, 498, 501, 502, 528, 541, 543, 552, 553, 596, 599, 600, 611, 612, 621, 622, 643, 650, 651, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 829, 834, 844, 846, 865, 870, 878, 881, 900, 904, 909, 910, 959], "kai": [44, 45, 171, 278, 489, 491, 503, 509], "g\u00f6rgen": [44, 45, 278, 489, 491, 503], "dylan": [44, 45, 110, 278, 489, 491, 503, 638], "hayn": [44, 45, 278, 489, 491, 503], "benjamin": [44, 45, 278, 485, 489, 491, 503], "blankertz": [44, 45, 278, 485, 489, 491, 503], "felix": [44, 45, 140, 278, 283, 294, 306, 307, 489, 491, 503], "bie\u00dfmann": [44, 45, 278, 489, 491, 503], "On": [44, 45, 97, 98, 193, 195, 228, 230, 233, 234, 271, 278, 294, 311, 320, 322, 325, 351, 489, 491, 503, 514, 534, 638, 647, 951, 958, 960], "multivari": [44, 45, 118, 122, 164, 189, 223, 224, 278, 283, 319, 425, 489, 491, 503, 743, 946], "067": [44, 45, 278, 489, 491, 503], "539": [44, 46, 224, 234, 237, 243, 966], "linear_model_pattern": [44, 46, 966], "reproduc": [45, 71, 97, 121, 178, 223, 245, 286, 311, 366, 590, 638, 674, 693, 741, 742, 743, 752, 753, 755, 776, 777, 778, 779, 780], "lalor": [45, 223, 278, 319, 491], "speech": [45, 223, 278, 319, 333, 334, 491, 680, 795, 825, 828], "envelop": [45, 109, 141, 142, 143, 163, 173, 224, 288, 289, 293, 319, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 492, 552, 553, 643, 812, 822, 823, 826], "128": [45, 50, 67, 76, 100, 112, 127, 130, 148, 150, 168, 175, 185, 187, 195, 196, 197, 198, 233, 237, 251, 253, 260, 261, 263, 280, 304, 319, 333, 334, 484, 864, 966], "try": [45, 57, 97, 102, 110, 167, 168, 170, 178, 183, 185, 188, 189, 194, 198, 203, 207, 220, 229, 230, 231, 232, 233, 234, 235, 244, 252, 253, 271, 283, 291, 292, 304, 306, 311, 320, 343, 351, 502, 522, 535, 561, 568, 638, 653, 862, 932, 946, 947, 951, 952], "known": [45, 70, 115, 140, 142, 171, 178, 183, 187, 192, 207, 254, 255, 256, 285, 294, 310, 319, 321, 322, 330, 333, 334, 335, 336, 337, 338, 339, 344, 425, 435, 509, 520, 526, 552, 553, 555, 561, 568, 586, 604, 605, 619, 684, 708, 711, 745, 753, 756, 771, 799, 844, 962, 966], "literatur": [45, 171, 271, 321, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "simpli": [45, 69, 162, 170, 171, 173, 176, 197, 198, 216, 228, 229, 233, 235, 238, 245, 246, 256, 270, 271, 295, 311, 319, 322, 328, 332, 333, 334, 335, 336, 366, 367, 552, 553, 655, 656, 789, 790, 791, 795, 796, 797, 798, 951, 955, 960], "chri": [45, 142, 163, 223, 224, 278, 280, 282, 283, 284, 285, 286, 294, 302], "holdgraf": [45, 142, 143, 163, 223, 224, 278, 280, 282, 283, 284, 285, 286, 302, 491], "choldgraf": [45, 142, 143, 163, 223], "nicola": [45, 73, 278, 285, 291, 294, 749], "barascud": [45, 285, 291], "loadmat": [45, 223], "collect": [45, 97, 178, 184, 195, 199, 210, 211, 218, 219, 220, 228, 238, 241, 271, 274, 278, 283, 303, 311, 316, 318, 321, 322, 326, 330, 333, 334, 335, 336, 391, 485, 492, 512, 552, 553, 637, 638, 658, 662, 774, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 860, 870, 878, 885, 889, 901, 906, 908], "listen": [45, 312, 319, 927], "know": [45, 66, 169, 183, 187, 196, 199, 217, 220, 228, 230, 233, 234, 235, 246, 260, 274, 295, 310, 311, 320, 322, 335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 613, 616, 729, 886, 946, 955, 958, 959], "primarili": [45, 97, 197, 227, 230, 241, 321, 487, 552, 553, 690, 789, 868, 959], "speech_data": [45, 223], "down": [45, 47, 97, 140, 178, 188, 220, 223, 224, 230, 234, 246, 247, 258, 260, 285, 301, 303, 310, 311, 312, 330, 331, 333, 334, 335, 336, 342, 343, 485, 492, 525, 552, 553, 637, 638, 674, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 874, 876, 877, 878, 882, 885, 889, 898, 899, 901, 906, 908, 951], "polyphas": [45, 137, 231, 310, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 525, 552, 553], "biosemi128": [45, 197], "ln": [45, 120, 135, 322, 812, 822, 958], "800": [45, 59, 69, 77, 86, 108, 110, 155, 161, 162, 171, 182, 183, 187, 193, 202, 204, 220, 230, 237, 240, 261, 264, 274, 340, 341, 344, 347, 348, 349, 544, 844, 904, 909], "alpha": [45, 47, 54, 61, 65, 66, 70, 72, 75, 76, 85, 97, 124, 125, 138, 140, 141, 144, 150, 162, 164, 173, 178, 199, 204, 208, 218, 223, 234, 240, 256, 258, 261, 266, 270, 271, 275, 286, 293, 295, 303, 314, 329, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 425, 491, 497, 543, 547, 549, 550, 552, 553, 621, 710, 767, 773, 776, 777, 779, 780, 793, 794, 799, 800, 844, 846, 855, 862, 865, 878, 881, 882, 894, 900, 904, 909, 917], "ln1": 45, "frameon": [45, 274], "neighborhood": [45, 50, 67, 76, 137, 183, 185, 231, 236, 346, 664], "input": [45, 121, 122, 137, 142, 182, 199, 216, 223, 224, 230, 231, 235, 238, 241, 244, 256, 260, 261, 266, 285, 286, 287, 288, 292, 294, 303, 304, 305, 306, 307, 310, 312, 318, 322, 325, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 352, 384, 400, 426, 427, 428, 432, 440, 485, 486, 488, 489, 491, 492, 493, 495, 497, 502, 509, 514, 520, 542, 544, 549, 552, 553, 578, 581, 638, 639, 647, 648, 650, 651, 655, 656, 665, 666, 671, 689, 703, 755, 766, 768, 775, 776, 777, 779, 780, 787, 789, 790, 791, 795, 796, 797, 798, 814, 815, 844, 845, 846, 848, 849, 862, 870, 881, 885, 893, 904, 907, 909], "float64": [45, 90, 92, 94, 97, 103, 110, 120, 122, 142, 186, 194, 218, 229, 233, 236, 251, 308, 322, 551, 769], "7677": 45, "7676": 45, "119": [45, 150, 152, 162, 187, 196, 224, 237, 256, 302], "938": [45, 224], "construct": [45, 68, 96, 131, 167, 171, 189, 195, 205, 207, 210, 211, 216, 219, 224, 230, 233, 234, 235, 238, 253, 256, 270, 271, 282, 283, 285, 287, 289, 294, 310, 318, 321, 322, 333, 334, 335, 336, 340, 341, 344, 346, 347, 348, 349, 353, 354, 366, 383, 431, 509, 520, 521, 523, 524, 552, 553, 570, 653, 700, 733, 738, 739, 775, 784, 795, 796, 802, 805, 859, 865, 899, 904, 910], "relationship": [45, 48, 170, 187, 220, 232, 256, 312, 319, 321, 322, 491, 497, 529, 812, 822, 823, 824, 826, 827], "rf": [45, 223, 308, 491], "feature_nam": [45, 223, 288, 491], "corrcoef": [45, 48, 73, 491], "extra": [45, 108, 109, 172, 187, 193, 196, 197, 219, 235, 244, 252, 282, 284, 286, 307, 321, 330, 333, 334, 335, 336, 338, 342, 375, 376, 382, 405, 407, 485, 486, 492, 504, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 840, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908, 956, 960], "inclus": [45, 152, 167, 170, 212, 304, 325, 333, 334, 343, 346, 452, 477, 478, 530, 547, 549, 550, 564, 616, 633, 638, 665, 781, 792], "n_delai": [45, 491], "held": [45, 107, 198, 223, 312], "coef_": [45, 223, 489, 491, 637], "n_output": [45, 491, 497], "n_featur": [45, 223, 224, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 500, 639, 674, 769], "delays_": [45, 223, 491], "mean_coef": 45, "mean_scor": 45, "ix_ch": 45, "sometim": [45, 53, 87, 110, 140, 143, 145, 156, 167, 171, 183, 188, 195, 196, 217, 218, 228, 229, 230, 231, 233, 235, 236, 256, 274, 293, 304, 305, 308, 311, 318, 321, 322, 330, 333, 334, 335, 336, 338, 342, 485, 492, 552, 553, 569, 637, 638, 653, 694, 700, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 870, 878, 885, 889, 898, 901, 906, 908, 946, 960], "well": [45, 48, 58, 63, 73, 97, 106, 144, 148, 163, 164, 167, 170, 171, 177, 179, 187, 189, 192, 193, 196, 199, 202, 209, 211, 216, 217, 219, 223, 227, 228, 230, 232, 233, 234, 235, 236, 238, 240, 242, 244, 251, 253, 261, 269, 271, 275, 278, 283, 284, 285, 292, 303, 304, 311, 312, 314, 319, 320, 321, 322, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 390, 413, 425, 441, 485, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 509, 524, 525, 552, 553, 638, 639, 652, 661, 663, 676, 683, 814, 825, 826, 827, 828, 876, 878, 892, 946, 948, 951, 956, 958, 962], "recreat": [45, 167, 230, 274, 275, 869], "time_plot": 45, "180": [45, 50, 61, 108, 120, 135, 139, 150, 183, 196, 205, 213, 219, 224, 227, 229, 231, 233, 237, 240, 260, 261, 263, 288, 340, 341, 344, 347, 348, 349, 519, 850, 966], "highlight": [45, 47, 118, 123, 142, 148, 177, 178, 199, 202, 203, 231, 233, 238, 246, 304, 308, 311, 330, 331, 333, 334, 335, 336, 343, 485, 492, 552, 553, 637, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 874, 878, 880, 885, 901, 906, 908], "max_coef": 45, "pcolormesh": [45, 223, 292], "shade": [45, 198, 223, 234, 292, 854, 870, 911, 912], "gouraud": [45, 223], "ncoeffici": 45, "setp": [45, 223], "get_xticklabel": [45, 223], "2c": [45, 322], "ix_plot": 45, "argmin": [45, 148, 171, 271], "nfor": 45, "case": [45, 70, 84, 97, 100, 118, 122, 123, 131, 142, 148, 152, 165, 167, 170, 171, 176, 182, 188, 189, 192, 195, 196, 198, 199, 207, 208, 212, 216, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 244, 245, 246, 256, 257, 258, 264, 266, 269, 271, 274, 275, 278, 282, 283, 284, 286, 288, 291, 292, 295, 301, 303, 305, 306, 307, 311, 312, 314, 321, 322, 327, 328, 330, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 357, 366, 367, 372, 378, 388, 399, 424, 425, 429, 430, 441, 442, 443, 444, 485, 492, 502, 509, 514, 528, 529, 536, 543, 547, 549, 550, 552, 553, 561, 568, 576, 584, 586, 589, 592, 597, 604, 605, 606, 607, 608, 609, 616, 627, 633, 641, 653, 658, 674, 693, 699, 716, 730, 733, 749, 754, 775, 776, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 814, 824, 827, 831, 844, 862, 864, 870, 877, 879, 882, 883, 886, 904, 917, 918, 919, 920, 921, 922, 923, 946, 951, 960], "aim": [45, 164, 185, 204, 252, 253, 373, 426, 427, 428], "exploit": [45, 115, 280], "context": [45, 68, 144, 198, 199, 202, 224, 230, 256, 289, 303, 312, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 485, 488, 495, 498, 501, 502, 528, 541, 543, 552, 553, 596, 599, 600, 606, 611, 612, 621, 622, 627, 638, 643, 650, 651, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 838, 839, 846, 876, 878, 881, 893, 899, 900, 924, 930, 931, 958], "treat": [45, 47, 178, 199, 224, 231, 235, 236, 256, 260, 285, 286, 294, 301, 333, 334, 337, 343, 564, 566, 629, 776, 777, 779, 780, 870, 888], "independ": [45, 97, 102, 110, 137, 140, 178, 185, 189, 193, 206, 207, 208, 224, 227, 229, 230, 232, 233, 234, 238, 246, 256, 275, 278, 283, 284, 292, 318, 319, 322, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 429, 488, 495, 500, 552, 553, 638, 639, 646, 653, 665, 674, 676, 771, 773, 776, 777, 779, 780, 783, 823, 824, 826, 827, 889, 891, 893, 946, 959], "therefor": [45, 97, 122, 135, 163, 169, 173, 178, 185, 189, 196, 197, 217, 224, 228, 229, 230, 232, 233, 236, 238, 256, 271, 311, 312, 318, 322, 333, 334, 343, 388, 390, 509, 552, 561, 568, 569, 573, 638, 694, 700, 701, 705, 795, 796], "qualiti": [45, 149, 184, 192, 193, 199, 229, 230, 233, 235, 241, 247, 271, 276, 278, 298, 301, 302, 311, 312, 314, 318, 322, 328, 333, 334, 335, 336, 552, 553, 596, 638, 655, 680, 890], "expens": [45, 192, 193, 199, 283, 323, 684], "especi": [45, 81, 97, 140, 148, 170, 176, 189, 193, 196, 227, 228, 230, 232, 233, 237, 244, 271, 274, 283, 287, 289, 311, 318, 321, 322, 335, 336, 344, 552, 553, 638, 666, 684, 776, 777, 779, 780, 886, 946, 955], "lag": [45, 53, 105, 112, 223, 253, 278, 299, 333, 335, 336, 338, 491, 497, 511, 552, 635, 703, 966], "footcit": [45, 311, 457], "crosseetal2016": 45, "earlier": [45, 172, 194, 198, 219, 227, 230, 244, 275, 301, 335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 527, 528, 529, 547, 549, 550, 616, 886], "wherea": [45, 108, 163, 170, 183, 185, 195, 202, 224, 230, 231, 232, 238, 256, 286, 311, 321, 322, 327, 333, 334, 352, 366, 367, 552, 553, 561, 876, 899, 905, 949], "affect": [45, 75, 98, 108, 168, 169, 176, 178, 194, 218, 227, 228, 230, 231, 233, 234, 236, 238, 271, 278, 287, 293, 301, 302, 306, 309, 310, 311, 318, 322, 326, 328, 333, 334, 335, 336, 340, 343, 344, 348, 436, 477, 526, 527, 552, 553, 574, 655, 706, 741, 742, 823, 824, 826, 827, 899, 904], "obvious": [45, 101, 185, 238, 271], "cf": [45, 172, 182, 812, 822], "next": [45, 80, 81, 84, 142, 144, 149, 162, 163, 168, 172, 177, 178, 183, 184, 188, 193, 198, 202, 204, 206, 216, 218, 227, 229, 233, 235, 239, 244, 245, 246, 256, 270, 271, 285, 287, 290, 292, 295, 305, 309, 311, 322, 330, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 425, 484, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 825, 828, 863, 864, 885, 889, 898, 901, 906, 951, 960], "section": [45, 102, 144, 163, 164, 167, 169, 171, 176, 177, 178, 183, 192, 193, 194, 198, 199, 202, 216, 217, 218, 220, 227, 229, 230, 231, 233, 236, 238, 244, 245, 271, 280, 283, 286, 289, 292, 295, 302, 304, 306, 308, 309, 310, 311, 312, 318, 322, 323, 328, 330, 331, 332, 333, 334, 335, 336, 342, 343, 345, 366, 367, 382, 464, 485, 492, 506, 512, 520, 522, 552, 553, 570, 583, 637, 638, 653, 659, 665, 677, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908, 917, 918, 956], "haufeetal2014": 45, "sr": [45, 150, 241, 319, 322, 572], "1e4": 45, "mean_pattern": 45, "max_pattern": 45, "8384": [45, 293], "1089": [45, 224], "116": [45, 150, 170, 196, 224, 256, 260, 261], "1696": [45, 237], "2197": [45, 236], "260": [45, 108, 140, 150, 196, 220, 237, 256, 319, 685], "2649": 45, "315": [45, 82, 83, 150, 196, 256, 261, 279, 966], "2769": 45, "389": [45, 108, 150, 237, 256], "3029": [45, 223], "467": [45, 94, 150, 237, 243, 256, 966], "3261": 45, "90it": [45, 60, 131, 136, 137, 140, 207, 223, 224, 237, 256, 257, 261], "547": [45, 224, 261], "3466": 45, "627": [45, 61, 224, 237], "3632": 45, "704": [45, 171, 261], "3749": 45, "762": [45, 98, 112, 224, 966], "3737": [45, 60], "851": [45, 103, 112, 237, 261, 966], "3908": 45, "937": [45, 104, 112, 182, 191, 223, 261, 966], "4039": 45, "1026": [45, 67, 137, 318], "4169": 45, "1113": [45, 196], "4275": 45, "1203": 45, "4382": 45, "1290": 45, "4463": 45, "1372": [45, 67, 256], "4512": 45, "1459": [45, 256], "4578": 45, "1548": [45, 278], "4649": 45, "1639": [45, 278, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "4720": 45, "1727": 45, "4773": 45, "1815": 45, "4822": 45, "4867": 45, "4908": 45, "2079": 45, "4946": 45, "2167": 45, "4980": 45, "40it": [45, 60, 131, 132, 140, 223, 237, 256, 257, 258, 260, 261], "2257": 45, "5018": 45, "2345": 45, "5047": 45, "2431": [45, 60, 196, 253], "5067": 45, "2522": [45, 128, 196], "5102": 45, "2610": 45, "5123": 45, "2693": 45, "5125": 45, "22it": [45, 60, 131, 140, 223, 224, 237, 253, 256, 257, 258, 261, 264], "2783": 45, "5152": 45, "2873": 45, "5179": 45, "2962": 45, "5199": 45, "3051": 45, "5217": 45, "3139": 45, "5229": [45, 278, 333, 334, 795, 825, 828], "3229": 45, "5250": 45, "3319": 45, "5268": 45, "3409": 45, "5286": 45, "3499": 45, "5302": 45, "3588": 45, "5316": 45, "3677": 45, "5326": 45, "3767": 45, "5340": 45, "3856": 45, "5350": 45, "3946": 45, "5363": 45, "30it": [45, 131, 136, 137, 140, 207, 224, 237, 256, 257, 260, 261], "4034": 45, "5369": 45, "4123": 45, "5379": 45, "4211": 45, "5383": [45, 219], "4300": 45, "5389": 45, "4389": 45, "5398": 45, "4480": 45, "5413": 45, "4570": 45, "5421": 45, "4659": 45, "5428": 45, "4748": 45, "5432": 45, "4821": 45, "5385": 45, "4900": 45, "5361": 45, "4983": 45, "5351": 45, "5073": 45, "5365": 45, "5155": 45, "5349": 45, "5245": 45, "5333": 45, "5422": 45, "5505": 45, "5366": 45, "5590": 45, "5655": 45, "5293": 45, "5726": 45, "5249": 45, "5798": 45, "5209": 45, "5885": 45, "5220": 45, "5973": 45, "5233": [45, 278, 333, 334, 795, 825, 828], "6061": 45, "6151": 45, "5263": 45, "6218": 45, "5208": 45, "6280": 45, "5138": 45, "6355": 45, "5114": 45, "6446": 45, "5142": [45, 61], "6537": 45, "5168": 45, "6628": 45, "5194": 45, "42it": [45, 60, 136, 137, 140, 224, 237, 256, 261, 264, 266], "6718": 45, "5214": 45, "6796": 45, "5196": 45, "6887": 45, "5219": 45, "6977": 45, "5239": 45, "7069": 45, "5262": 45, "7160": 45, "5282": 45, "7252": 45, "5304": [45, 77, 86], "7342": 45, "5318": 45, "7431": 45, "5330": 45, "7510": 45, "5307": 45, "7596": 45, "5308": 45, "7687": 45, "5325": 45, "7778": 45, "7869": 45, "5356": 45, "7961": 45, "5374": 45, "8052": 45, "5387": 45, "8144": 45, "5405": 45, "8239": 45, "5431": 45, "8320": [45, 293], "5408": 45, "5136": [45, 219], "2135": 45, "179": [45, 51, 52, 61, 103, 150, 196, 219, 224, 237, 256, 261, 278, 322, 683, 966], "3110": 45, "267": [45, 140, 150, 170, 195, 196, 256, 278, 316], "3658": 45, "4038": 45, "3999": 45, "482": [45, 150, 224], "3988": 45, "558": [45, 215, 224, 966], "4088": 45, "648": [45, 176, 224, 261, 273, 966], "4276": 45, "737": [45, 169, 261], "4423": 45, "827": [45, 237], "4553": 45, "897": [45, 141, 237, 273], "4527": 45, "957": [45, 170, 224], "4448": [45, 278, 333, 334, 795, 825, 828], "1031": [45, 60, 196, 253], "1121": [45, 60, 196, 253], "4563": 45, "4644": 45, "1300": 45, "4725": 45, "1375": 45, "4715": 45, "1434": 45, "4634": 45, "1508": 45, "4631": 45, "1598": 45, "4702": 45, "1687": 45, "4763": 45, "1777": 45, "4823": 45, "1857": [45, 140, 278], "4832": 45, "1917": 45, "4758": 45, "1974": 45, "4677": 45, "2048": [45, 136, 139, 142, 160, 223, 231, 333, 334, 335, 336, 484, 552, 553, 611, 900], "4672": 45, "2137": 45, "4728": 45, "2227": 45, "4783": 45, "2316": 45, "2403": 45, "2491": [45, 223], "4906": 45, "2577": 45, "4931": 45, "2666": 45, "4966": 45, "2755": 45, "4999": 45, "2839": 45, "5013": 45, "2896": 45, "4925": 45, "2957": 45, "4859": [45, 314], "3045": 45, "4893": 45, "3135": 45, "4932": [45, 163], "3224": 45, "4967": 45, "3315": [45, 278], "5006": 45, "3400": [45, 223], "5021": 45, "3489": 45, "5050": 45, "3572": 45, "5056": 45, "3646": 45, "5030": 45, "3710": 45, "4970": 45, "3797": 45, "4994": 45, "3878": 45, "4995": 45, "3966": 45, "4043": 45, "5008": 45, "4109": 45, "4961": 45, "4175": 45, "4914": 45, "4250": 45, "4901": 45, "4309": 45, "4377": 45, "4799": 45, "4445": 45, "4768": 45, "4520": 45, "4610": 45, "4808": 45, "4699": 45, "4846": 45, "4784": 45, "4870": 45, "4839": 45, "4794": 45, "4894": 45, "4722": 45, "4709": 45, "5053": 45, "4746": 45, "4787": 45, "5225": 45, "4807": 45, "5288": 45, "4760": 45, "5355": 45, "4727": [45, 219], "5518": 45, "4761": 45, "5607": 45, "4801": 45, "5697": 45, "4840": 45, "5786": 45, "4876": 45, "5868": 45, "4886": 45, "5954": 45, "4910": 45, "6037": 45, "4923": 45, "6119": 45, "6204": 45, "4950": 45, "6294": 45, "4982": 45, "6357": 45, "4928": 45, "6432": 45, "4913": 45, "6511": 45, "4912": 45, "6593": 45, "4921": 45, "6674": 45, "4927": 45, "6755": 45, "6834": 45, "4929": 45, "6915": 45, "4935": 45, "6999": 45, "4948": 45, "7080": 45, "4951": 45, "7162": [45, 314], "4959": 45, "7245": 45, "4969": 45, "7315": 45, "4936": 45, "7375": 45, "4873": 45, "7451": 45, "4866": 45, "7527": 45, "4858": 45, "7610": 45, "7699": 45, "4904": 45, "7763": 45, "7829": 45, "4819": 45, "7903": 45, "7990": 45, "8079": [45, 52], "4875": 45, "8169": 45, "4911": 45, "8240": 45, "8332": 45, "4926": 45, "4851": 45, "2340": 45, "176": [45, 150, 169, 196, 198, 224, 256, 278, 638], "3286": 45, "3792": 45, "4148": 45, "437": [45, 80, 82, 111, 150, 164, 210, 261, 966], "4365": 45, "4529": 45, "4769": 45, "787": [45, 61, 82, 237, 261, 966], "4848": 45, "4918": 45, "949": [45, 224], "4885": 45, "1011": [45, 60, 196, 253], "4782": 45, "1077": [45, 61, 84, 278, 344, 620, 749], "4717": 45, "1164": [45, 224], "4780": 45, "1249": 45, "4827": 45, "1336": 45, "4878": 45, "1424": 45, "1510": [45, 256], "4958": 45, "1597": 45, "1682": 45, "1769": 45, "5046": 45, "1850": 45, "5041": 45, "1936": [45, 952], "5064": 45, "2023": [45, 196, 198, 241, 315, 952], "5089": 45, "2112": [45, 196], "5119": 45, "2198": 45, "5133": 45, "2281": 45, "5134": 45, "2361": 45, "2437": 45, "5098": 45, "2515": 45, "5082": 45, "2599": 45, "5091": 45, "2686": 45, "5111": 45, "2773": 45, "5130": 45, "2855": [45, 124], "5127": 45, "2934": 45, "5115": 45, "3001": [45, 240], "5059": 45, "3077": 45, "5036": 45, "3156": 45, "5028": 45, "3236": 45, "5026": 45, "3325": 45, "5054": 45, "3411": 45, "5071": 45, "3481": 45, "5032": 45, "3544": 45, "3605": 45, "3693": 45, "3772": 45, "3861": 45, "4968": 45, "3950": 45, "4996": 45, "5024": 45, "4129": 45, "5055": 45, "4218": 45, "4307": 45, "5106": 45, "4397": 45, "5131": 45, "4488": 45, "5158": 45, "4575": 45, "5171": 45, "4653": 45, "5153": 45, "4743": 45, "5175": 45, "5193": 45, "4920": 45, "5224": 45, "5242": 45, "5170": 45, "5202": 45, "5319": 45, "5146": 45, "5406": 45, "5159": 45, "5477": 45, "5122": 45, "5559": 45, "5641": 45, "5118": 45, "5724": 45, "5796": 45, "5088": 45, "5862": 45, "5038": 45, "5950": 45, "5061": 45, "6034": 45, "6114": 45, "6180": 45, "5011": 45, "6237": 45, "6304": 45, "6372": 45, "4861": 45, "6461": 45, "4895": 45, "6520": 45, "6587": 45, "4798": 45, "6676": 45, "4835": 45, "6765": 45, "4871": 45, "6855": 45, "4909": 45, "6938": 45, "7004": 45, "4880": 45, "7063": 45, "7140": 45, "4818": 45, "7230": 45, "7319": 45, "4892": 45, "7408": 45, "7483": 45, "7541": 45, "4843": 45, "7619": 45, "4844": 45, "7707": 45, "7797": 45, "7885": 45, "4938": 45, "7972": 45, "8038": 45, "4915": 45, "8098": 45, "4857": 45, "8189": 45, "4897": 45, "8282": 45, "4940": 45, "8378": 45, "4991": 45, "4984": 45, "sens": [45, 87, 97, 169, 187, 230, 235, 240, 241, 271, 311, 312, 321, 322, 335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 616, 868, 886], "actual": [45, 49, 53, 67, 69, 87, 90, 108, 143, 156, 171, 178, 185, 187, 189, 195, 197, 199, 202, 209, 210, 211, 212, 217, 218, 223, 228, 229, 230, 231, 241, 246, 256, 258, 261, 264, 265, 266, 271, 285, 286, 292, 293, 304, 310, 311, 319, 321, 322, 326, 343, 519, 618, 638, 658], "valid_samples_": [45, 491], "grei": [45, 141, 169, 271, 286, 335, 336, 789, 790, 791, 795, 796, 797, 798, 882], "attempt": [45, 103, 223, 227, 258, 285, 293, 312, 321, 333, 334, 335, 336, 341, 347, 349, 447, 552, 553, 560, 570, 638, 719, 733, 788, 909, 944], "reflect": [45, 97, 168, 176, 178, 187, 188, 227, 232, 233, 235, 244, 283, 288, 291, 292, 305, 307, 309, 310, 311, 318, 321, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 523, 524, 525, 528, 529, 547, 549, 550, 552, 553, 616, 706, 769, 789, 790, 885, 886, 899], "toward": [45, 69, 72, 80, 81, 97, 131, 187, 207, 220, 229, 260, 271, 278, 286, 322, 527, 529, 620, 641], "obtain": [45, 64, 68, 69, 87, 118, 122, 123, 164, 173, 178, 182, 184, 185, 197, 199, 202, 204, 205, 211, 212, 213, 230, 232, 238, 244, 245, 253, 256, 258, 261, 270, 283, 288, 292, 298, 300, 301, 303, 305, 312, 318, 319, 321, 322, 331, 333, 334, 335, 336, 337, 340, 341, 344, 347, 348, 349, 367, 379, 413, 415, 425, 427, 431, 445, 491, 493, 535, 536, 546, 549, 550, 552, 553, 561, 568, 573, 590, 605, 613, 624, 638, 642, 649, 674, 693, 701, 705, 711, 738, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 759, 763, 776, 777, 778, 779, 780, 792, 824, 827, 844, 846, 865, 881, 904, 905, 910, 947], "via": [45, 162, 163, 167, 169, 171, 172, 176, 177, 184, 195, 196, 197, 198, 199, 202, 207, 220, 227, 228, 229, 231, 233, 234, 244, 247, 256, 257, 260, 264, 266, 269, 270, 278, 284, 286, 287, 288, 291, 292, 293, 294, 295, 298, 300, 301, 303, 304, 305, 309, 310, 311, 321, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 343, 344, 345, 346, 347, 348, 349, 352, 366, 367, 379, 388, 392, 398, 399, 447, 496, 519, 520, 521, 523, 524, 537, 544, 552, 553, 566, 638, 770, 776, 777, 779, 780, 789, 793, 795, 797, 798, 799, 800, 846, 847, 862, 866, 867, 876, 880, 881, 885, 893, 899, 937, 946, 951, 952, 954, 955, 960], "procedur": [45, 141, 171, 188, 189, 216, 232, 233, 238, 256, 258, 259, 260, 266, 271, 278, 291, 303, 319, 321, 322, 326, 328, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 418, 425, 430, 493, 552, 553, 638, 639, 653, 655, 674, 684, 706, 776, 946], "straightforward": [45, 131, 217, 230, 253, 303, 322], "sign": [45, 54, 64, 65, 73, 178, 233, 256, 259, 264, 285, 287, 292, 295, 296, 303, 310, 311, 322, 335, 336, 340, 341, 344, 347, 348, 349, 405, 519, 527, 547, 549, 550, 591, 605, 606, 607, 608, 609, 674, 776, 777, 779, 780], "strength": [45, 48, 61, 122, 178, 202, 233, 275, 322, 341, 347, 349, 653], "direct": [45, 87, 107, 152, 177, 183, 187, 188, 195, 205, 207, 212, 228, 234, 235, 237, 271, 278, 283, 285, 292, 307, 311, 312, 321, 322, 325, 331, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 359, 366, 367, 507, 519, 520, 521, 523, 524, 527, 552, 553, 564, 605, 648, 671, 741, 789, 793, 797, 799, 844, 876, 888, 899, 909, 925, 946, 958], "nbetween": 45, "giovanni": [45, 223, 278, 319, 491], "di": [45, 66, 170, 213, 223, 278, 319, 491], "liberto": [45, 223, 278, 319, 491], "adam": [45, 162, 163, 223, 278, 291, 292, 293, 294, 295, 303, 304, 309, 319, 491, 964], "bednar": [45, 223, 278, 319, 491], "edmund": [45, 223, 278, 319, 491], "fnhum": [45, 178, 223, 278, 319, 491, 643], "00604": [45, 223, 278, 319, 491], "448": [45, 46, 150, 155, 198, 224, 261, 288, 346, 966], "receptive_field_mtrf": [45, 46, 966], "160": [46, 108, 109, 111, 150, 152, 196, 197, 198, 213, 216, 224, 237, 238, 243, 260, 261, 278, 408, 616, 650, 666, 669, 746, 751, 966], "ssd_spatial_filt": [46, 47, 966], "591": [46, 47, 237, 261, 966], "retain": [47, 140, 176, 205, 228, 229, 244, 256, 293, 304, 314, 328, 333, 334, 335, 336, 340, 341, 343, 344, 346, 347, 348, 349, 509, 520, 521, 523, 524, 552, 553, 638, 776, 777, 779, 780, 789, 795, 889, 951], "oscillatori": [47, 141, 253, 270, 278, 366, 367, 812, 822, 823, 826], "propos": [47, 271, 311, 314, 653, 665], "surround": [47, 109, 129, 241, 271, 311, 493, 643, 671, 685, 784], "victoria": [47, 293, 294], "peterson": [47, 293, 294, 295, 309], "victoriapeterson09": 47, "freqs_sig": 47, "freqs_nois": 47, "sort_by_spectral_ratio": [47, 493], "filt_params_sign": [47, 493], "l_trans_bandwidth": [47, 141, 142, 230, 239, 283, 302, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 552, 553, 680], "filt_params_nois": [47, 493], "72000": [47, 109, 219], "196608": 47, "262144": 47, "327680": 47, "393216": 47, "458752": 47, "67108864": 47, "67174400": 47, "134742016": 47, "136314880": 47, "268435456": 47, "825": [47, 110, 142, 237, 278, 638], "086": [47, 278, 746, 751], "preserv": [47, 60, 182, 183, 187, 193, 194, 223, 228, 233, 244, 256, 260, 287, 291, 292, 303, 304, 322, 328, 333, 334, 335, 336, 484, 515, 516, 517, 518, 552, 553, 572, 655, 672, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "ratio": [47, 84, 115, 171, 193, 224, 230, 233, 235, 253, 258, 259, 260, 261, 274, 278, 285, 318, 322, 340, 341, 344, 347, 348, 349, 356, 493, 620, 621, 622, 638, 639, 729, 747, 748, 789, 790, 791, 795, 796, 797, 798, 848, 906], "accord": [47, 183, 196, 197, 220, 223, 244, 283, 286, 292, 304, 319, 322, 326, 333, 334, 335, 336, 491, 493, 514, 552, 553, 561, 564, 568, 570, 633, 677, 694, 733, 739], "either": [47, 58, 69, 169, 176, 177, 178, 193, 194, 195, 197, 198, 199, 218, 227, 231, 236, 238, 245, 246, 252, 256, 271, 299, 311, 318, 319, 328, 330, 333, 334, 335, 336, 337, 340, 341, 342, 344, 346, 347, 348, 349, 357, 372, 391, 408, 425, 426, 427, 428, 485, 492, 493, 502, 509, 512, 520, 543, 545, 552, 553, 565, 586, 587, 590, 596, 600, 603, 604, 637, 638, 640, 649, 653, 658, 659, 665, 676, 706, 716, 733, 735, 740, 741, 742, 754, 774, 775, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 808, 823, 824, 826, 827, 831, 844, 862, 863, 867, 870, 877, 878, 885, 889, 890, 898, 899, 900, 901, 904, 906, 908, 909, 914, 917, 946, 958], "multipli": [47, 216, 230, 256, 322, 338, 340, 341, 344, 347, 348, 349, 368, 493, 519, 605, 611, 789, 790, 791, 795, 796, 797, 798], "eq": [47, 322, 493, 812, 822], "c_n": [47, 322], "reli": [47, 196, 229, 271, 287, 295, 311, 318, 322, 382, 946], "suggest": [47, 52, 168, 171, 189, 229, 230, 231, 232, 233, 235, 307, 312, 333, 334, 358, 360, 844, 946, 952, 956], "pariet": [47, 75, 319, 723, 844], "ssd_sourc": [47, 493], "psd": [47, 53, 95, 102, 120, 133, 134, 139, 160, 164, 167, 193, 199, 224, 227, 231, 240, 247, 251, 269, 270, 282, 284, 285, 287, 288, 289, 292, 297, 298, 302, 303, 305, 306, 308, 310, 319, 330, 333, 334, 335, 336, 338, 339, 343, 344, 430, 490, 526, 552, 553, 595, 600, 604, 611, 612, 616, 619, 635, 695, 710, 737, 793, 794, 799, 800, 803, 806, 814, 815, 838, 844, 862, 878, 900, 914, 966], "n_fft": [47, 136, 137, 142, 160, 213, 231, 240, 251, 269, 271, 283, 284, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 493, 552, 553, 611, 792, 793, 799, 801, 803, 804, 806, 815, 825, 828, 900], "4096": [47, 209, 231, 337], "spec_ratio": [47, 493], "sorter": 47, "get_spectral_ratio": [47, 493], "orang": [47, 178, 183, 218, 239, 261, 266, 903], "frac": [47, 176, 230, 231, 238, 256, 322, 344, 613, 749, 809, 812, 822, 823, 824, 826, 827], "p_f": 47, "p_": [47, 322], "sf": [47, 256], "lowest": [47, 150, 271, 328, 333, 334, 335, 336, 339, 412, 655, 766, 789, 790, 791, 792, 795, 796, 797, 798, 870, 880], "below50": 47, "bandfilt": 47, "loglog": 47, "fill_between": [47, 141, 178, 266, 270, 271], "10000": [47, 111, 139, 213, 514, 547, 674, 754, 778], "green": [47, 74, 75, 76, 108, 144, 178, 183, 208, 218, 235, 271, 288, 335, 336, 844, 867, 880, 897, 903], "enjoi": [47, 271], "situat": [47, 232, 236, 251, 253, 294, 311, 312, 343, 389, 512, 638, 956], "chunk": [47, 107, 111, 164, 167, 173, 211, 238, 285, 304, 318, 428, 430, 514, 552, 553, 638, 665, 739], "overlap": [47, 97, 111, 127, 137, 167, 170, 173, 178, 179, 193, 195, 219, 229, 245, 246, 251, 269, 278, 280, 283, 285, 288, 292, 293, 294, 295, 299, 303, 308, 321, 327, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 396, 430, 487, 496, 509, 521, 523, 524, 543, 552, 553, 597, 598, 611, 624, 639, 655, 656, 676, 756, 775, 815, 844, 900], "ssd_epoch": 47, "pattern_epoch": 47, "1251": 47, "449": [47, 150, 173, 224, 237, 256, 261, 346], "647": [47, 173, 224], "1151": [47, 173], "1457": [47, 166, 173, 966], "guido": [47, 278, 493], "nolt": [47, 278, 493], "gabriel": [47, 66, 232, 278, 493, 549, 637, 691], "curio": [47, 278, 493], "reliabl": [47, 131, 196, 231, 278, 493, 638], "basi": [47, 173, 189, 224, 278, 292, 294, 309, 322, 493, 506, 649, 652, 665, 676, 946], "spatio": [47, 72, 85, 192, 211, 223, 224, 256, 257, 267, 268, 278, 292, 293, 299, 322, 333, 335, 336, 338, 344, 345, 346, 431, 491, 493, 508, 548, 549, 552, 604, 605, 619, 635, 676, 703, 716, 718, 744, 745, 746, 747, 748, 749, 750, 751, 761, 763, 764, 765, 770, 772, 779, 780, 781, 844, 966], "1528": [47, 278, 493], "1535": [47, 278, 493], "057": [47, 167, 169, 176, 196, 253, 278, 493], "produc": [48, 64, 109, 110, 145, 147, 156, 171, 188, 192, 199, 206, 210, 218, 220, 230, 232, 238, 256, 271, 276, 278, 283, 285, 286, 289, 291, 304, 307, 309, 312, 318, 322, 325, 328, 331, 333, 334, 339, 343, 346, 373, 374, 397, 400, 422, 426, 427, 428, 430, 437, 460, 543, 552, 553, 590, 596, 597, 600, 611, 624, 638, 641, 647, 650, 651, 665, 672, 674, 693, 699, 703, 723, 738, 740, 741, 742, 743, 752, 753, 754, 755, 757, 776, 777, 778, 779, 780, 784, 833, 844, 862, 863, 899, 940], "abl": [48, 118, 162, 164, 171, 186, 188, 192, 199, 232, 233, 238, 253, 264, 282, 306, 311, 314, 319, 322, 343, 518, 524, 552, 553, 638, 889, 946, 951], "region": [48, 64, 67, 73, 75, 122, 123, 135, 156, 162, 164, 177, 182, 208, 218, 230, 231, 256, 257, 270, 271, 283, 292, 295, 318, 321, 331, 333, 334, 335, 336, 338, 340, 341, 344, 346, 347, 348, 349, 394, 487, 496, 521, 523, 524, 537, 538, 539, 543, 552, 553, 590, 693, 738, 749, 789, 790, 791, 795, 796, 797, 798, 844, 876, 899, 902], "source_estim": [48, 53, 62, 82, 339, 344, 710, 716, 843, 966], "surf_ori": [48, 73, 74, 75, 80, 81, 95, 185, 205, 252, 285, 337, 435, 616], "leadfield": [48, 67, 185, 190, 192, 199, 291, 366, 367, 368], "7498": [48, 57, 61, 66, 68, 69, 73, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 95, 118, 120, 121, 122, 123, 158, 199, 202, 204, 205, 206, 208, 224, 252, 253], "grad_map": 48, "mag_map": [48, 52], "eeg_map": 48, "204": [48, 60, 140, 150, 158, 185, 193, 196, 199, 210, 211, 238, 244, 253, 256, 260, 261, 270, 299], "gain": [48, 50, 57, 67, 92, 118, 121, 122, 123, 137, 185, 207, 230, 253, 285, 287, 288, 292, 294, 295, 301, 303, 304, 305, 306, 307, 322, 366, 367, 520, 529, 887, 894], "picks_meg": 48, "picks_eeg": 48, "sharex": [48, 71, 100, 118, 141, 223, 235, 271], "fontsiz": [48, 63, 140, 148, 171, 203, 238, 274, 905], "fig_2": [48, 199], "hist": [48, 97, 158, 171, 239], "ravel": [48, 139, 141, 145, 158, 223, 230, 257], "brain_sen": 48, "add_text": [48, 69, 73, 74, 75, 76, 80, 81, 202, 204, 206, 310, 844], "font_siz": [48, 69, 73, 74, 75, 76, 80, 81, 202, 204, 206, 844], "02108201": 48, "32186553": 48, "euclidean": [48, 339, 344, 346, 620, 664, 749, 752, 755, 757, 760], "maxdep": 48, "vertno": [48, 69, 74, 75, 76, 185, 202, 205, 252, 264, 265, 266, 344, 346, 347], "depths_map": 48, "brain_dep": 48, "like": [48, 52, 53, 57, 60, 61, 62, 66, 67, 68, 73, 82, 85, 87, 97, 101, 109, 110, 129, 137, 140, 162, 163, 167, 168, 169, 170, 171, 176, 177, 178, 182, 183, 187, 188, 189, 193, 194, 195, 196, 198, 199, 202, 204, 208, 209, 213, 216, 217, 218, 220, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 244, 245, 246, 247, 251, 256, 260, 271, 274, 275, 283, 284, 286, 287, 288, 289, 292, 294, 295, 299, 303, 304, 306, 308, 309, 310, 311, 312, 314, 318, 320, 321, 322, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 357, 370, 372, 373, 374, 377, 378, 379, 382, 383, 391, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 418, 422, 423, 424, 425, 431, 436, 437, 438, 440, 444, 452, 457, 458, 460, 462, 485, 492, 506, 508, 509, 514, 520, 526, 528, 535, 537, 538, 541, 543, 544, 545, 546, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 592, 594, 596, 599, 600, 604, 605, 607, 616, 619, 623, 624, 625, 627, 628, 637, 638, 643, 653, 656, 658, 659, 661, 662, 667, 671, 672, 673, 674, 676, 684, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 734, 737, 738, 740, 741, 742, 743, 752, 753, 754, 755, 758, 766, 770, 772, 775, 776, 777, 778, 779, 780, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 816, 817, 818, 822, 829, 831, 832, 836, 838, 841, 844, 853, 862, 863, 864, 870, 874, 876, 878, 880, 882, 884, 885, 886, 889, 893, 896, 898, 899, 900, 901, 902, 904, 906, 908, 909, 910, 932, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 946, 951, 952, 953, 955, 956, 958, 959, 960, 966], "corr": [48, 325], "gradiomt": 48, "815476": 48, "sensitivii": 48, "highest": [48, 203, 233, 322, 328, 331, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 529, 552, 553, 561, 568, 655, 766, 789, 790, 791, 792, 795, 796, 797, 798, 874, 886], "close": [48, 87, 97, 125, 139, 145, 148, 167, 169, 171, 176, 178, 185, 187, 199, 219, 228, 229, 232, 233, 235, 236, 239, 247, 253, 256, 261, 274, 285, 294, 303, 308, 311, 322, 331, 333, 334, 335, 336, 338, 339, 413, 429, 452, 508, 528, 544, 552, 553, 638, 656, 667, 760, 784, 793, 794, 799, 800, 812, 822, 844, 851, 852, 874, 876, 893, 899, 902, 919, 946, 962, 965], "decreas": [48, 81, 140, 230, 253, 283, 285, 299, 322, 332, 333, 334, 335, 336, 485, 506, 638, 785, 789, 790, 791, 795, 796, 797, 798, 823, 824, 826, 827, 844], "rapidli": [48, 240], "inreas": 48, "confirm": [48, 73, 97, 198, 218, 229, 233, 241, 311, 322], "573": [48, 51, 224, 237, 966], "107": [48, 61, 88, 141, 143, 150, 167, 196, 237, 260, 261, 278, 280], "forward_sensitivity_map": [48, 51, 966], "displai": [49, 50, 51, 53, 70, 73, 104, 140, 144, 154, 167, 170, 178, 183, 185, 187, 189, 193, 220, 233, 236, 241, 244, 247, 257, 261, 280, 281, 282, 284, 286, 288, 289, 293, 294, 295, 298, 300, 301, 303, 304, 305, 306, 308, 309, 314, 321, 322, 325, 326, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 346, 347, 348, 349, 382, 435, 552, 553, 596, 635, 637, 638, 658, 662, 708, 729, 757, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 845, 846, 861, 862, 870, 875, 876, 877, 879, 880, 881, 882, 884, 885, 886, 887, 890, 891, 896, 899, 900, 901, 902, 904, 905, 907, 909, 910, 946, 951, 952, 955, 958, 962, 966], "cerebellum": [49, 51, 53, 67, 346, 737, 738, 862, 914, 966], "volum": [49, 51, 53, 57, 62, 70, 82, 85, 98, 162, 163, 182, 183, 185, 187, 193, 199, 203, 207, 238, 278, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 300, 302, 305, 307, 314, 316, 318, 321, 322, 325, 330, 331, 335, 337, 338, 340, 341, 344, 345, 346, 347, 348, 349, 373, 379, 382, 431, 519, 530, 538, 539, 547, 549, 550, 592, 600, 604, 605, 615, 616, 617, 619, 671, 673, 697, 706, 716, 719, 728, 737, 738, 761, 764, 781, 784, 832, 833, 834, 844, 862, 904, 909, 910, 914, 944, 966], "morph": [49, 51, 53, 62, 66, 82, 161, 163, 182, 187, 204, 208, 264, 265, 266, 280, 285, 287, 288, 289, 291, 292, 293, 298, 299, 300, 318, 319, 321, 325, 335, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 431, 541, 558, 600, 604, 605, 619, 624, 625, 634, 635, 673, 706, 708, 713, 716, 717, 718, 729, 738, 832, 833, 834, 844, 904, 910, 965, 966], "its": [50, 97, 103, 122, 155, 162, 164, 167, 168, 170, 172, 177, 183, 185, 187, 193, 195, 196, 197, 198, 199, 202, 207, 210, 217, 218, 224, 227, 228, 230, 231, 233, 234, 235, 236, 238, 244, 245, 247, 256, 261, 269, 271, 275, 278, 283, 285, 286, 291, 293, 295, 302, 303, 307, 311, 312, 318, 320, 321, 322, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 350, 382, 485, 488, 492, 499, 500, 519, 526, 549, 550, 551, 552, 553, 561, 568, 637, 638, 653, 729, 745, 755, 775, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 814, 815, 822, 823, 826, 834, 863, 870, 874, 876, 877, 878, 885, 889, 897, 898, 899, 901, 904, 906, 908, 909, 946, 952, 956, 958], "freesurf": [50, 58, 59, 60, 64, 67, 69, 70, 73, 144, 162, 163, 183, 185, 188, 190, 191, 192, 198, 199, 202, 209, 219, 240, 278, 291, 292, 295, 298, 302, 304, 306, 307, 319, 321, 329, 331, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 373, 377, 378, 379, 382, 431, 436, 437, 438, 444, 457, 459, 460, 462, 465, 484, 504, 519, 537, 538, 539, 541, 543, 544, 545, 546, 558, 590, 592, 594, 596, 624, 671, 672, 693, 709, 710, 711, 712, 718, 719, 720, 721, 732, 737, 738, 752, 755, 766, 784, 785, 787, 836, 843, 844, 857, 862, 864, 874, 904, 909, 910, 914, 940, 941, 944, 946, 956, 958, 959, 962, 966], "alan": [50, 278, 280, 300, 301, 302, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "leggitt": [50, 280, 300, 301, 302], "ucsf": 50, "aseg_fnam": 50, "aseg": [50, 67, 162, 203, 208, 292, 321, 331, 340, 341, 344, 347, 348, 349, 519, 537, 538, 592, 738, 844], "mgz": [50, 56, 67, 70, 76, 183, 185, 187, 188, 203, 207, 208, 209, 240, 286, 288, 291, 292, 304, 308, 321, 322, 325, 340, 341, 344, 346, 347, 348, 349, 373, 377, 378, 379, 462, 519, 538, 592, 738, 864, 910, 946], "surf": [50, 52, 67, 108, 137, 146, 162, 182, 183, 184, 185, 186, 187, 188, 199, 203, 208, 252, 256, 318, 319, 322, 325, 331, 339, 344, 346, 348, 349, 377, 535, 536, 590, 595, 625, 696, 719, 752, 755, 786, 830, 844, 864, 874, 934], "add_dist": [50, 67, 137, 185, 291, 301, 322, 325, 737, 759, 763], "lh_surf": 50, "cortex": [50, 52, 57, 63, 67, 69, 78, 79, 80, 81, 84, 87, 122, 137, 144, 155, 162, 172, 178, 185, 193, 205, 208, 218, 223, 233, 239, 253, 278, 295, 318, 319, 321, 322, 340, 341, 344, 346, 347, 348, 349, 460, 491, 680, 693, 755, 844, 904, 909], "volume_label": [50, 67, 289, 292, 340, 341, 344, 346, 347, 348, 349, 519, 592, 738], "lh_cereb": 50, "sphere_unit": [50, 185, 291, 738], "octahedron": [50, 67, 137, 183, 185, 187, 325, 340, 344, 348, 737, 904], "subdivis": [50, 67, 137, 185], "octahedr": [50, 67, 137, 185, 484], "vertex": [50, 52, 67, 74, 75, 76, 110, 118, 137, 183, 184, 185, 187, 188, 202, 204, 207, 208, 252, 253, 256, 266, 285, 295, 303, 304, 322, 333, 334, 335, 336, 339, 340, 341, 344, 345, 346, 347, 348, 349, 351, 366, 367, 519, 541, 543, 552, 553, 590, 614, 615, 624, 638, 710, 711, 722, 723, 728, 755, 756, 757, 762, 765, 766, 781, 784, 785, 786, 843, 844, 923], "lh": [50, 52, 54, 55, 63, 64, 65, 67, 69, 73, 74, 75, 80, 81, 87, 95, 118, 120, 122, 123, 132, 135, 136, 137, 144, 155, 161, 162, 182, 183, 184, 185, 186, 187, 188, 199, 202, 203, 205, 206, 209, 210, 219, 252, 253, 265, 266, 274, 322, 325, 329, 339, 340, 341, 344, 347, 348, 349, 541, 590, 693, 711, 716, 726, 844, 904, 909, 923, 941], "triangl": [50, 52, 67, 78, 137, 183, 184, 185, 187, 188, 202, 205, 252, 322, 339, 346, 484, 722, 758, 762, 765, 786], "neighbor": [50, 52, 67, 137, 169, 183, 184, 185, 188, 228, 252, 256, 258, 271, 289, 292, 301, 302, 310, 312, 322, 392, 399, 412, 527, 577, 664, 672, 759, 760, 761, 763, 764, 769, 776, 777, 779, 780, 786], "geometri": [50, 67, 87, 97, 137, 185, 188, 210, 211, 238, 278, 292, 295, 303, 318, 321, 325, 462, 485, 529, 719, 844], "triangul": [50, 67, 78, 137, 185, 202, 257, 258, 285, 322, 325, 346, 388, 719, 722, 939, 944], "155407": [50, 52, 67, 69, 78, 185, 187], "156866": [50, 52, 67, 69, 78, 185, 187], "132651": 50, "57769": 50, "50733": 50, "voxel": [50, 67, 70, 76, 183, 185, 187, 236, 256, 278, 289, 292, 303, 322, 343, 346, 348, 349, 431, 671, 782, 783, 834, 844, 864, 910], "005000": [50, 185], "001000": [50, 67, 76, 185], "556177": 50, "16777216": 50, "nonzero": [50, 239, 322], "nifti": [50, 56, 67, 182, 287, 346, 348, 349], "nii_fnam": [50, 67], "mne_sample_lh": 50, "nii": [50, 56, 67, 182, 325], "export_volum": [50, 67, 292, 310, 346], "mri_resolut": [50, 56, 67, 70, 292, 345, 346, 348, 349, 519], "And": [50, 68, 80, 97, 137, 187, 206, 208, 218, 224, 230, 235, 239, 311, 318, 322, 346, 603, 613, 779, 780], "freeview": [50, 150, 209, 280, 307, 322, 946], "run_subprocess": 50, "mri_fnam": 50, "lut": [50, 321, 538, 709, 844], "opac": [50, 57, 61, 66, 72, 85, 120, 183, 198, 303, 325, 335, 336, 343, 544, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 846, 855, 881, 905, 911, 917], "jet": 50, "colorscal": 50, "slice": [50, 61, 66, 85, 167, 170, 183, 185, 187, 199, 208, 223, 246, 260, 282, 284, 288, 290, 292, 303, 314, 322, 325, 327, 328, 331, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 380, 383, 397, 399, 430, 441, 487, 488, 491, 495, 498, 501, 506, 523, 524, 552, 553, 561, 568, 637, 638, 640, 652, 654, 655, 656, 664, 665, 668, 672, 682, 684, 691, 757, 775, 776, 777, 779, 780, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 806, 807, 809, 821, 823, 824, 825, 826, 827, 864, 870, 874, 876, 877, 880, 882, 883, 889, 890, 891, 893, 895, 897, 899, 900, 910], "157": [50, 150, 152, 164, 178, 191, 196, 197, 216, 224, 237, 239, 256, 266, 278, 282, 408, 749, 966], "137": [50, 61, 86, 102, 112, 131, 134, 150, 196, 224, 237, 346, 966], "left_cerebellum_volume_sourc": [50, 51, 966], "053": [51, 54, 64, 75, 82, 96, 100, 120, 121, 132, 135, 136, 138, 139, 145, 167, 168, 176, 178, 189, 193, 194, 195, 196, 204, 227, 228, 229, 233, 234, 235, 236, 238, 244, 245, 246, 247, 253, 258, 259, 274, 966], "source_space_morph": [51, 52, 966], "486": [51, 52, 61, 150, 170, 237, 256, 966], "136": [51, 82, 150, 193, 196, 198, 256, 260, 346, 966], "oppos": [52, 87, 241, 253, 282, 311, 321, 418, 494], "evenli": [52, 236, 238, 322, 335, 336, 430, 676, 883], "caution": [52, 53, 169, 184, 196, 220, 333, 334, 335, 336, 338, 487, 552, 553, 554, 854], "fname_tran": [52, 67, 76, 78, 153, 203, 208, 318], "sample_audvis_raw": [52, 55, 67, 71, 76, 78, 95, 98, 110, 120, 121, 122, 131, 132, 135, 136, 138, 139, 144, 146, 152, 153, 167, 169, 173, 176, 177, 183, 185, 187, 189, 193, 194, 195, 197, 199, 203, 205, 208, 209, 227, 228, 231, 232, 234, 235, 236, 238, 244, 245, 246, 247, 252, 253, 258, 259, 260, 269, 274, 275, 311, 325], "fname_bem": [52, 67, 76, 186, 203, 208, 209], "fname_src_f": 52, "fsaverag": [52, 66, 69, 70, 154, 155, 162, 163, 183, 184, 187, 198, 208, 218, 239, 264, 265, 266, 278, 284, 288, 292, 295, 303, 318, 331, 339, 340, 344, 345, 348, 349, 374, 382, 398, 431, 436, 437, 438, 444, 457, 459, 460, 541, 596, 600, 624, 672, 725, 726, 757, 781, 784, 785, 833, 844, 862, 904, 910], "ico": [52, 66, 69, 163, 185, 186, 188, 219, 264, 265, 266, 300, 318, 325, 340, 344, 348, 351, 484, 594, 737, 761, 764, 904], "src_f": [52, 70, 207], "src_morph": 52, "subject_to": [52, 66, 69, 70, 264, 266, 318, 325, 339, 345, 348, 349, 431, 624, 625, 713, 725, 726, 727, 728, 910], "return": [52, 57, 60, 95, 96, 103, 111, 120, 121, 122, 127, 131, 135, 136, 137, 138, 141, 142, 143, 145, 149, 164, 167, 168, 171, 173, 176, 177, 178, 187, 188, 193, 194, 195, 196, 198, 205, 216, 229, 233, 234, 235, 236, 238, 241, 244, 246, 253, 256, 257, 260, 266, 269, 270, 271, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 320, 322, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 454, 455, 456, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 729, 730, 733, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 842, 843, 844, 845, 847, 848, 849, 850, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 915, 916, 932, 943, 944, 945], "mag_map_f": 52, "to_original_src": [52, 280, 285, 344, 347], "sulcal": [52, 187, 844], "gyral": [52, 187, 844], "outlier": [52, 97, 184, 278, 310, 504, 638, 664, 892], "occur": [52, 70, 73, 97, 101, 103, 118, 122, 123, 167, 170, 171, 178, 188, 195, 229, 230, 231, 235, 241, 244, 258, 259, 282, 304, 311, 312, 318, 322, 326, 328, 332, 333, 334, 335, 336, 344, 351, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 508, 509, 511, 527, 528, 529, 547, 549, 550, 552, 553, 583, 616, 655, 656, 658, 739, 789, 790, 791, 795, 796, 797, 798, 799, 876, 886, 899, 953, 958], "kwarg": [52, 84, 137, 140, 144, 152, 168, 206, 207, 223, 230, 252, 270, 311, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 488, 495, 552, 553, 559, 627, 844, 845, 868, 883, 902, 905], "smooth": [52, 64, 69, 85, 98, 110, 142, 150, 161, 162, 169, 178, 183, 193, 198, 208, 223, 235, 256, 257, 264, 265, 266, 278, 291, 298, 301, 303, 313, 333, 334, 335, 336, 339, 340, 341, 344, 345, 347, 348, 349, 431, 552, 553, 638, 647, 776, 777, 779, 780, 785, 812, 814, 822, 823, 824, 826, 827, 844, 854, 855, 877, 904, 907, 909, 911, 912, 915, 965], "smoothing_step": [52, 67, 68, 69, 81, 85, 87, 132, 137, 144, 158, 163, 202, 204, 206, 208, 252, 264, 340, 341, 344, 347, 348, 349, 844, 904, 909], "almost": [52, 142, 167, 195, 322], "equidist": [52, 343], "unevenli": [52, 599], "achiev": [52, 69, 70, 101, 140, 169, 171, 173, 187, 188, 207, 230, 239, 246, 253, 274, 291, 300, 310, 314, 322, 335, 336, 425, 434, 590, 613, 638, 674, 693, 741, 742, 743, 752, 753, 755, 776, 777, 778, 779, 780, 886, 946, 949], "closest": [52, 171, 184, 185, 244, 271, 294, 303, 322, 328, 333, 334, 335, 336, 339, 346, 552, 553, 785, 793, 794, 799, 800, 844, 864, 878], "brain_subject": 52, "time_label": [52, 59, 60, 85, 87, 137, 153, 158, 253, 264, 265, 266, 275, 335, 336, 340, 341, 344, 347, 348, 349, 844, 846, 881, 904, 909], "brain_f": 52, "remap": [52, 53, 105, 112, 291, 302, 335, 336, 706, 966], "destin": [52, 69, 70, 107, 182, 187, 282, 291, 292, 299, 327, 330, 331, 333, 334, 335, 336, 337, 340, 341, 343, 344, 345, 346, 347, 348, 349, 357, 378, 379, 382, 383, 431, 444, 484, 506, 515, 516, 517, 518, 552, 553, 588, 623, 625, 637, 638, 665, 676, 725, 726, 728, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 829, 830, 831, 888, 933, 934, 935, 936, 937, 938, 939, 942, 943, 944, 945], "n_vertic": [52, 67, 69, 79, 137, 185, 186, 187, 329, 339, 340, 341, 344, 347, 348, 349, 519, 529, 620, 621, 719, 722, 757, 776, 777, 779, 780, 787, 843, 844, 939, 944], "n_use": [52, 67, 69, 71, 76, 137, 185, 186, 187, 203, 236], "10242": [52, 69, 186, 264, 265, 266, 318, 339, 351, 541, 781], "coord": [52, 67, 69, 71, 76, 137, 154, 185, 186, 187, 188, 203, 236, 413, 528, 844, 845, 916, 944], "20484": [52, 163, 186, 188, 264, 265, 325, 594], "999310": [52, 67, 76, 185, 203, 208, 209], "009985": [52, 67, 76, 185, 203, 208, 209], "035787": [52, 67, 76, 185, 203, 208, 209], "012759": [52, 67, 76, 185, 203, 208, 209], "812405": [52, 67, 76, 185, 203, 208], "582954": [52, 67, 76, 185, 203, 208], "034894": [52, 67, 76, 185, 203, 208, 209], "583008": [52, 67, 76, 185, 203, 208], "811716": [52, 67, 76, 185, 203, 208, 209], "991420": [52, 67, 71, 76, 185, 203, 208], "039936": [52, 67, 71, 76, 185, 203, 208], "124467": [52, 67, 71, 76, 185, 203, 208], "060661": [52, 67, 71, 76, 185, 203, 208], "984012": [52, 67, 71, 76, 185, 203, 208], "167456": [52, 67, 71, 76, 185, 203, 208], "115790": [52, 67, 71, 76, 185, 203, 208], "173570": [52, 67, 71, 76, 185, 203, 208], "977991": [52, 67, 71, 76, 185, 203, 208], "homogen": [52, 67, 76, 137, 185, 203, 236, 278, 281, 286, 322, 652], "2154": 52, "8088": 52, "10233": [52, 303], "4208": [52, 186], "2113": [52, 196], "8129": 52, "8125": 52, "10237": 52, "4200": 52, "20470": 52, "00205101": 52, "08784125": 52, "17433707": 52, "often": [53, 94, 97, 102, 103, 110, 167, 169, 177, 193, 195, 196, 202, 205, 207, 216, 218, 220, 224, 228, 230, 231, 234, 236, 238, 245, 246, 258, 271, 294, 311, 312, 318, 321, 322, 323, 335, 336, 340, 341, 344, 347, 348, 349, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 616, 677, 844, 886, 904, 909, 946, 956], "lack": [53, 97, 218, 308, 323, 330, 357, 372, 604, 658, 677, 831], "narr": [53, 192, 321, 323], "explan": [53, 100, 169, 182, 192, 260, 307, 323, 333, 334, 793, 794, 795, 796, 964], "discov": [53, 304, 320, 323], "ve": [53, 143, 167, 176, 178, 183, 187, 198, 227, 229, 233, 235, 244, 245, 247, 271, 310, 311, 320, 323, 916, 946], "flag": [53, 192, 194, 282, 289, 318, 325, 333, 334, 338, 340, 341, 344, 347, 348, 349, 379, 552, 553, 594, 795, 796, 865, 899, 904, 909, 910, 946], "tutorial_script": [53, 192], "them": [53, 73, 76, 94, 97, 102, 143, 161, 162, 164, 167, 168, 169, 171, 172, 176, 177, 178, 183, 187, 188, 192, 193, 195, 197, 198, 199, 219, 220, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 253, 256, 257, 264, 266, 271, 274, 288, 289, 295, 299, 303, 310, 311, 312, 314, 318, 319, 320, 321, 322, 325, 327, 333, 334, 335, 336, 339, 360, 361, 364, 430, 433, 438, 488, 489, 503, 564, 565, 572, 598, 599, 607, 609, 612, 633, 637, 638, 657, 677, 684, 698, 703, 743, 753, 766, 797, 798, 799, 800, 839, 892, 951, 960], "shortcut": [53, 247, 288, 304, 834, 844], "intention": [53, 237], "record": [53, 89, 92, 97, 101, 102, 110, 111, 137, 150, 164, 167, 171, 173, 178, 183, 189, 193, 195, 196, 197, 199, 202, 211, 214, 216, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 244, 245, 246, 251, 253, 256, 271, 278, 280, 284, 286, 288, 289, 291, 292, 293, 294, 295, 301, 303, 304, 307, 308, 309, 310, 314, 318, 319, 320, 321, 322, 327, 328, 333, 334, 335, 336, 338, 343, 350, 369, 390, 418, 425, 430, 434, 477, 508, 517, 552, 553, 555, 562, 566, 572, 574, 577, 583, 585, 598, 638, 640, 641, 642, 646, 648, 649, 658, 662, 665, 676, 677, 684, 690, 706, 733, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 879, 893, 899, 946, 959, 962], "past": [53, 178, 230, 312, 497, 739, 946, 956], "recip": [53, 89, 311], "write": [53, 55, 67, 89, 93, 136, 138, 167, 187, 188, 197, 198, 199, 204, 217, 231, 244, 266, 269, 281, 282, 283, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 309, 310, 311, 318, 320, 322, 325, 327, 330, 331, 335, 336, 338, 339, 340, 341, 343, 344, 346, 347, 349, 357, 377, 423, 526, 558, 588, 589, 623, 637, 692, 697, 788, 829, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 955, 956, 966], "ensembl": [53, 89, 93, 164, 338, 445, 552, 553, 966], "neo": [53, 89, 93, 198, 216, 302, 338, 445, 552, 553, 580, 966], "xdf": [53, 89, 93, 338, 445, 553, 966], "anatomi": [53, 117, 119, 183, 202, 288, 319, 321, 330, 333, 335, 336, 337, 338, 339, 344, 346, 378, 553, 558, 604, 605, 616, 697, 703, 708, 711, 739, 741, 742, 743, 754, 844, 966], "contact": [53, 105, 162, 165, 192, 227, 295, 303, 304, 307, 310, 311, 319, 402, 671], "contralater": [53, 105, 112, 122, 178, 236, 338, 394, 559, 730, 966], "css": [53, 105, 112, 199, 278, 286, 295, 310, 330, 336, 337, 338, 339, 343, 344, 435, 552, 635, 636, 654, 697, 708, 711, 753, 755, 966], "bridg": [53, 105, 112, 278, 304, 305, 338, 382, 398, 445, 553, 559, 646, 675, 866, 908, 966], "much": [53, 70, 81, 102, 105, 110, 112, 164, 167, 168, 169, 171, 176, 188, 192, 193, 197, 210, 219, 224, 230, 232, 233, 234, 235, 236, 237, 240, 244, 253, 271, 278, 282, 304, 311, 322, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 382, 398, 445, 509, 520, 524, 525, 552, 553, 559, 646, 675, 729, 866, 908, 955, 966], "gel": [53, 105, 112, 304, 338, 382, 398, 445, 553, 559, 646, 675, 866, 908, 966], "csd": [53, 58, 59, 60, 105, 112, 133, 134, 196, 244, 253, 300, 304, 321, 322, 333, 334, 335, 336, 338, 359, 366, 396, 400, 443, 445, 526, 552, 553, 635, 647, 703, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 813, 816, 872, 966], "autom": [53, 70, 105, 110, 112, 141, 149, 171, 183, 189, 190, 191, 192, 193, 198, 227, 228, 229, 232, 233, 238, 278, 287, 288, 289, 299, 300, 301, 302, 310, 314, 322, 325, 327, 333, 335, 336, 338, 345, 425, 431, 436, 461, 509, 514, 552, 558, 559, 727, 736, 862, 879, 886, 914, 946, 960, 966], "maxwel": [53, 105, 111, 112, 192, 193, 211, 227, 242, 243, 281, 282, 286, 291, 294, 304, 307, 333, 335, 336, 338, 366, 367, 418, 419, 422, 425, 429, 430, 441, 442, 443, 485, 492, 506, 526, 528, 529, 547, 549, 550, 552, 553, 616, 649, 665, 676, 677, 886, 888, 966], "movement": [53, 102, 103, 105, 110, 112, 140, 164, 192, 220, 227, 233, 234, 235, 241, 242, 243, 246, 247, 278, 281, 282, 291, 303, 319, 321, 325, 327, 333, 335, 336, 338, 412, 413, 414, 415, 416, 418, 420, 422, 423, 434, 506, 526, 544, 552, 566, 642, 645, 665, 676, 742, 754, 846, 862, 869, 881, 888, 914, 966], "reestim": [53, 105, 112, 303, 327, 338, 415, 416, 434, 566, 642, 645, 648, 862, 888, 914, 966], "muscl": [53, 105, 112, 171, 233, 278, 292, 304, 327, 382, 398, 566, 568, 638, 643, 966], "denois": [53, 105, 112, 224, 280, 286, 330, 333, 335, 336, 338, 425, 430, 493, 505, 526, 528, 552, 601, 635, 639, 649, 684, 703, 877, 966], "oversampl": [53, 105, 112, 278, 333, 335, 336, 425, 505, 526, 528, 552, 601, 684, 966], "shift": [53, 103, 105, 112, 167, 193, 223, 227, 230, 231, 236, 247, 278, 286, 287, 288, 291, 294, 295, 299, 304, 328, 332, 333, 334, 335, 336, 348, 349, 491, 513, 552, 553, 561, 568, 638, 640, 672, 683, 706, 789, 790, 791, 795, 796, 797, 798, 808, 844, 887, 899, 910, 966], "3d": [53, 57, 61, 64, 66, 78, 85, 87, 124, 125, 151, 157, 162, 163, 169, 178, 183, 185, 187, 188, 198, 202, 203, 212, 218, 224, 234, 238, 256, 259, 261, 274, 284, 288, 289, 292, 293, 294, 295, 301, 303, 304, 306, 309, 311, 319, 320, 321, 325, 331, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 359, 382, 383, 395, 408, 437, 493, 523, 524, 552, 553, 574, 586, 596, 649, 665, 676, 770, 776, 777, 844, 845, 846, 847, 852, 854, 856, 857, 862, 867, 874, 881, 896, 902, 904, 905, 909, 911, 912, 914, 916, 930, 947, 952, 956, 962, 966], "2d": [53, 57, 61, 66, 85, 124, 125, 147, 151, 157, 178, 193, 199, 218, 224, 228, 231, 233, 234, 235, 236, 256, 261, 284, 285, 294, 295, 299, 303, 304, 319, 321, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 382, 383, 388, 391, 399, 408, 437, 488, 493, 495, 496, 500, 502, 523, 524, 552, 553, 565, 574, 586, 592, 638, 774, 776, 777, 844, 845, 858, 862, 863, 867, 884, 905, 907, 908, 914, 915, 916, 931, 956, 966], "arrowmap": [53, 151, 157, 287, 335, 338, 566, 634, 635, 706, 863, 966], "heatmap": [53, 151, 157, 162, 238, 241, 319, 333, 572, 658, 659, 661, 662, 855, 966], "parcel": [53, 64, 67, 95, 118, 122, 123, 151, 157, 162, 182, 203, 208, 252, 278, 284, 285, 288, 298, 299, 304, 321, 339, 457, 459, 460, 537, 693, 711, 844, 857, 941, 966], "roi": [53, 64, 151, 157, 178, 182, 228, 257, 278, 283, 292, 321, 322, 331, 333, 335, 336, 338, 394, 511, 514, 569, 605, 844, 882, 966], "rt": [53, 151, 157, 195, 333, 338, 394, 511, 514, 569, 966], "lock": [53, 101, 133, 134, 167, 183, 189, 195, 232, 235, 260, 271, 278, 328, 333, 338, 339, 509, 526, 552, 604, 619, 622, 635, 638, 710, 893, 946, 966], "vectorview": [53, 88, 133, 134, 147, 197, 210, 310, 319, 321, 322, 326, 330, 335, 336, 338, 344, 383, 389, 390, 404, 408, 430, 462, 505, 506, 552, 555, 595, 600, 611, 616, 649, 665, 676, 695, 737, 838, 844, 862, 914, 962, 966], "induc": [53, 133, 134, 135, 189, 193, 258, 259, 260, 271, 278, 285, 333, 334, 338, 344, 526, 552, 604, 619, 621, 622, 635, 812, 822, 823, 826, 946, 966], "erd": [53, 133, 134, 270, 278, 285, 287, 319, 330, 333, 334, 335, 336, 342, 434, 485, 492, 552, 553, 568, 637, 638, 776, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908, 966], "multitap": [53, 102, 110, 131, 133, 134, 137, 140, 164, 169, 170, 193, 199, 224, 233, 261, 269, 270, 278, 282, 285, 288, 302, 305, 306, 309, 310, 314, 333, 334, 335, 336, 338, 445, 498, 524, 552, 553, 611, 789, 790, 791, 793, 795, 796, 797, 798, 799, 803, 806, 823, 824, 825, 826, 827, 828, 966], "stockwel": [53, 133, 134, 261, 278, 283, 302, 305, 333, 334, 338, 445, 553, 789, 790, 791, 795, 796, 823, 825, 826, 827, 828, 966], "hilbert": [53, 109, 133, 134, 141, 194, 261, 287, 305, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 445, 552, 553, 789, 790, 791, 795, 796, 798, 823, 826, 827, 828, 966], "permut": [53, 126, 130, 140, 192, 256, 257, 258, 259, 262, 263, 266, 267, 268, 278, 299, 301, 302, 303, 333, 335, 336, 338, 344, 345, 346, 388, 431, 508, 552, 604, 605, 619, 635, 703, 716, 718, 761, 769, 776, 777, 778, 779, 780, 781, 791, 795, 844, 867, 870, 966], "1d": [53, 126, 130, 145, 238, 333, 338, 352, 356, 549, 550, 552, 592, 635, 649, 665, 676, 685, 703, 776, 777, 779, 780, 849, 887, 966], "fdr": [53, 126, 129, 130, 290, 333, 338, 552, 635, 703, 767, 773, 966], "rer": [53, 126, 130, 333, 335, 336, 338, 424, 526, 552, 635, 775, 966], "p": [53, 73, 77, 84, 86, 124, 125, 126, 128, 129, 130, 140, 183, 187, 199, 216, 230, 253, 256, 257, 258, 260, 261, 264, 265, 266, 271, 278, 280, 281, 285, 289, 291, 311, 318, 322, 325, 332, 333, 334, 335, 336, 338, 344, 424, 524, 526, 547, 552, 553, 616, 635, 638, 649, 746, 749, 751, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 789, 790, 791, 795, 796, 797, 798, 864, 877, 946, 966], "sloreta": [53, 54, 56, 57, 62, 64, 65, 67, 74, 76, 82, 85, 118, 132, 192, 193, 202, 205, 206, 208, 214, 215, 252, 264, 266, 278, 297, 299, 321, 330, 333, 335, 336, 338, 339, 340, 341, 344, 347, 348, 349, 425, 526, 552, 604, 605, 606, 607, 608, 609, 611, 612, 616, 617, 618, 619, 621, 622, 708, 710, 844, 871, 966], "timecours": [53, 59, 62, 68, 82, 330, 331, 333, 335, 336, 337, 338, 344, 348, 357, 361, 366, 372, 526, 528, 552, 599, 604, 605, 607, 616, 695, 697, 698, 708, 723, 791, 792, 795, 807, 844, 966], "dic": [53, 57, 62, 82, 131, 192, 207, 254, 255, 278, 284, 286, 300, 302, 306, 319, 321, 330, 333, 337, 338, 344, 357, 358, 359, 360, 361, 363, 366, 367, 425, 429, 526, 552, 553, 559, 593, 604, 605, 606, 616, 634, 635, 708, 723, 743, 754, 791, 792, 795, 805, 807, 844, 959, 966], "er": [53, 58, 59, 62, 82, 140, 270, 278, 305, 319, 330, 333, 334, 337, 338, 344, 359, 363, 366, 367, 425, 429, 526, 552, 606, 616, 635, 708, 775, 805, 844, 877, 966], "lcmv": [53, 57, 62, 82, 192, 202, 214, 215, 284, 285, 286, 287, 288, 297, 299, 300, 302, 321, 330, 333, 335, 336, 337, 338, 344, 345, 346, 348, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 425, 429, 431, 435, 443, 526, 529, 552, 606, 614, 616, 635, 697, 708, 718, 805, 844, 966], "gamma": [53, 62, 82, 140, 141, 145, 278, 299, 322, 330, 333, 334, 335, 336, 337, 338, 344, 443, 547, 548, 552, 553, 613, 697, 706, 708, 793, 794, 799, 800, 812, 822, 823, 826, 873, 874, 878, 905, 966], "bayesian": [53, 62, 82, 278, 322, 330, 335, 337, 338, 344, 425, 443, 547, 548, 697, 706, 708, 873, 874, 905, 959, 966], "mix": [53, 62, 82, 85, 131, 224, 233, 271, 278, 284, 287, 292, 295, 297, 298, 302, 306, 307, 308, 314, 330, 331, 335, 337, 338, 340, 341, 344, 345, 346, 347, 348, 349, 366, 367, 431, 519, 530, 547, 548, 549, 550, 561, 568, 592, 600, 604, 605, 616, 638, 674, 697, 706, 708, 711, 716, 718, 737, 738, 744, 745, 746, 747, 748, 749, 750, 751, 781, 784, 844, 873, 874, 889, 904, 905, 909, 966], "mxne": [53, 57, 62, 82, 202, 280, 285, 297, 298, 321, 330, 331, 333, 335, 336, 337, 338, 344, 345, 346, 425, 431, 526, 548, 549, 550, 604, 605, 616, 697, 706, 708, 718, 844, 873, 874, 905, 966], "irmxn": [53, 62, 82, 330, 331, 335, 337, 338, 344, 345, 346, 431, 548, 549, 604, 605, 616, 697, 706, 708, 718, 873, 874, 905, 966], "volumetr": [53, 62, 76, 82, 162, 185, 187, 202, 204, 208, 285, 289, 292, 293, 303, 314, 321, 335, 340, 341, 344, 345, 346, 347, 348, 349, 431, 592, 604, 605, 619, 671, 706, 718, 844, 904, 909, 910, 912, 966], "xfit": [53, 62, 82, 282, 291, 298, 304, 330, 331, 333, 335, 336, 337, 338, 348, 372, 526, 528, 552, 599, 604, 605, 607, 616, 695, 697, 698, 723, 966], "reweight": [53, 62, 66, 82, 278, 330, 333, 335, 336, 337, 344, 425, 526, 548, 549, 550, 708, 905, 966], "tf": [53, 57, 62, 82, 85, 230, 280, 285, 298, 330, 333, 335, 336, 337, 344, 425, 526, 548, 550, 708, 905, 966], "multiscal": [53, 62, 82, 330, 333, 335, 336, 337, 344, 425, 526, 548, 550, 708, 905, 966], "circular": [53, 62, 82, 178, 252, 298, 322, 344, 346, 435, 543, 615, 617, 619, 708, 711, 844, 850, 959, 966], "graph": [53, 62, 82, 145, 278, 298, 344, 346, 435, 615, 617, 619, 708, 711, 759, 760, 761, 762, 763, 764, 765, 844, 850, 966], "spread": [53, 62, 68, 80, 81, 82, 98, 108, 110, 111, 141, 192, 195, 230, 235, 236, 238, 254, 255, 278, 291, 301, 311, 322, 330, 333, 335, 336, 337, 338, 339, 344, 346, 348, 425, 435, 526, 552, 600, 604, 605, 606, 614, 615, 616, 617, 619, 620, 646, 676, 697, 706, 708, 711, 738, 751, 753, 756, 844, 966], "psf": [53, 62, 80, 81, 82, 291, 330, 335, 337, 338, 344, 346, 348, 435, 600, 604, 614, 615, 616, 617, 620, 697, 706, 708, 738, 844, 966], "talk": [53, 62, 82, 187, 230, 238, 258, 281, 286, 291, 301, 312, 321, 330, 333, 335, 337, 338, 344, 357, 367, 368, 425, 435, 443, 506, 526, 604, 614, 615, 616, 617, 620, 635, 648, 665, 676, 697, 706, 708, 844, 966], "rap": [53, 62, 82, 86, 278, 302, 330, 335, 337, 369, 371, 697, 706, 708, 873, 874, 966], "music": [53, 62, 82, 233, 278, 302, 307, 330, 335, 337, 369, 371, 697, 706, 708, 873, 874, 966], "resolut": [53, 56, 62, 70, 73, 74, 76, 82, 142, 148, 150, 173, 183, 184, 185, 203, 231, 240, 241, 258, 259, 278, 283, 285, 291, 295, 303, 304, 310, 312, 318, 321, 322, 326, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 368, 431, 435, 485, 492, 518, 519, 541, 544, 552, 553, 604, 605, 614, 615, 616, 617, 620, 636, 637, 638, 658, 659, 662, 697, 706, 708, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 823, 824, 825, 826, 827, 828, 844, 855, 863, 878, 885, 889, 898, 901, 904, 906, 908, 909, 923, 959, 966], "trap": [53, 62, 82, 85, 278, 307, 330, 335, 337, 371, 697, 706, 708, 873, 874, 966], "auto_examples_python": 53, "auto_examples_jupyt": 53, "fname_raw": [54, 55, 88, 131, 132, 184, 209, 237, 274], "fname_ev": [54, 122, 131, 132], "label_nam": [54, 55, 73, 120, 122, 132, 135, 208, 252, 538], "fname_label": [54, 55, 132, 135, 136], "assumpt": [54, 137, 149, 167, 168, 171, 179, 189, 230, 234, 238, 256, 289, 305, 322, 335, 336, 684, 771, 886, 946], "sqrt": [54, 145, 210, 211, 213, 252, 253, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 643, 674, 812, 822, 900, 965], "mean_stc": 54, "flip": [54, 64, 65, 143, 188, 233, 256, 285, 288, 294, 296, 322, 325, 340, 341, 344, 347, 348, 349, 373, 519, 591, 776, 916], "cancel": [54, 108, 207, 230, 238, 318, 322, 340, 341, 344, 347, 348, 349, 506, 519, 676], "label_mean": 54, "label_mean_flip": 54, "stc_evok": 54, "sub": [54, 58, 59, 60, 67, 72, 92, 94, 97, 110, 141, 150, 173, 182, 197, 213, 240, 241, 270, 271, 304, 322, 333, 334, 335, 336, 338, 512, 552, 553, 674, 738, 792, 844, 872, 946, 962], "stc_evoked_label": 54, "in_label": [54, 63, 64, 65, 289, 292, 302, 344, 347, 348, 349], "polar": [54, 73, 169, 235, 868], "label_mean_evok": 54, "1711": [54, 60, 71, 135, 149, 159, 169, 172, 173, 179, 193, 196, 204, 207, 229, 253, 261, 264, 266], "benefit": [54, 71, 72, 81, 85, 98, 155, 199, 218, 278, 310, 312, 318, 620, 647, 749], "1e3": [54, 55, 64, 65, 67, 96, 99, 125, 141, 150, 164, 176, 178, 183, 184, 204, 212, 220, 229, 241, 252, 258, 259, 260, 266, 344, 347], "h0": [54, 124, 128, 256, 257, 258, 259, 260, 264, 265, 266, 776, 777, 778, 779, 780], "h1": [54, 124, 140, 256, 257, 258, 259, 260, 261, 264, 265, 266], "linewidth": [54, 65, 125, 140, 141, 163, 177, 187, 234, 256, 330, 333, 334, 335, 336, 485, 492, 552, 553, 637, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 863, 870, 878, 885, 901, 902, 905, 906, 908], "h2": 54, "unflip": 54, "pool": [54, 167, 176, 178, 193, 245, 314, 366, 367, 547, 549, 550, 605, 606, 607, 608, 609, 611, 612, 622], "stc_trial": 54, "_nolegend_": 54, "283": [54, 67, 82, 98, 140, 150, 196, 261, 278, 647, 966], "compute_mne_inverse_epochs_in_label": [54, 82, 966], "smaller": [55, 67, 103, 132, 169, 176, 185, 230, 231, 235, 238, 256, 257, 271, 274, 287, 303, 307, 318, 322, 328, 333, 334, 340, 341, 344, 347, 348, 349, 514, 550, 572, 640, 655, 664, 665, 674, 776, 777, 779, 780, 811, 819, 844, 904, 909], "time_as_index": [55, 66, 111, 167, 176, 202, 244, 287, 298, 331, 332, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 789, 790, 791, 795, 796, 797, 798], "mne_": [55, 56], "_raw_inverse_": 55, "overwrit": [55, 67, 132, 136, 138, 167, 188, 199, 219, 246, 284, 288, 292, 293, 294, 299, 303, 308, 309, 325, 327, 330, 331, 333, 334, 335, 336, 337, 340, 341, 343, 344, 345, 346, 347, 348, 349, 357, 377, 378, 379, 382, 383, 515, 516, 517, 518, 552, 553, 588, 623, 637, 638, 647, 726, 727, 730, 734, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 829, 831, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945], "25800": [55, 71, 95, 98, 107, 110, 120, 121, 131, 132, 135, 138, 139, 146, 152, 173, 183, 189, 194, 195, 199, 209, 227, 231, 232, 234, 235, 236, 244, 247, 252, 253, 258, 259, 260, 274], "192599": [55, 71, 95, 98, 110, 120, 121, 131, 132, 135, 138, 139, 146, 152, 173, 183, 189, 194, 195, 199, 209, 227, 231, 232, 234, 235, 244, 247, 252, 253, 258, 259, 260, 274], "670": [55, 71, 95, 98, 108, 110, 120, 121, 131, 132, 135, 138, 139, 146, 152, 173, 183, 189, 194, 195, 199, 209, 227, 231, 232, 234, 235, 237, 244, 247, 252, 253, 258, 259, 260, 274], "compute_mne_inverse_raw_in_label": [55, 82, 966], "nilearn": [56, 67, 70, 198, 203, 208, 209, 348, 349, 910, 952], "index_img": 56, "plot_stat_map": 56, "vol": [56, 70, 76, 162, 187, 203, 207, 208, 278, 331, 333, 334, 335, 336, 346, 369, 506, 716, 744, 745, 746, 747, 748, 749, 750, 751, 886, 923], "4d": [56, 152, 192, 214, 215, 216, 282, 286, 289, 299, 322, 330, 331, 333, 334, 335, 336, 338, 372, 425, 526, 528, 552, 553, 564, 601, 635, 636, 776, 777, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 862, 874, 966], "img": [56, 144, 187, 209, 256, 310, 348, 349], "as_volum": [56, 287, 348, 349], "nib": [56, 70, 183, 240], "s_invers": 56, "gz": [56, 167, 182, 199, 234, 294, 298, 325, 332, 333, 334, 335, 336, 337, 346, 382, 458, 552, 553, 574, 619, 623, 638, 688, 694, 697, 699, 706, 708, 714, 718, 754, 932, 935, 937, 938, 942, 943, 958], "t1_fname": [56, 187, 203], "499": [56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 106, 113, 114, 144, 147, 148, 150, 169, 170, 176, 195, 199, 203, 205, 206, 208, 256, 259, 260, 261, 274, 275], "11271": [56, 70, 208, 306], "856": [56, 82, 261, 966], "286": [56, 82, 140, 150, 196, 966], "compute_mne_inverse_volum": [56, 82, 966], "plug": [57, 311, 322], "facil": [57, 326], "wmne": [57, 549, 550], "eloreta": [57, 192, 193, 202, 205, 206, 214, 215, 264, 266, 286, 287, 291, 292, 321, 330, 333, 335, 336, 338, 344, 366, 367, 425, 526, 547, 549, 550, 604, 605, 606, 607, 608, 609, 611, 612, 616, 618, 621, 622, 708, 844, 871, 966], "educ": [57, 312], "shall": [57, 101, 171, 229, 311, 312, 335, 336, 509, 638, 757, 846, 881], "develop": [57, 97, 198, 233, 238, 295, 310, 312, 319, 324, 325, 402, 665, 788, 789, 854, 946, 955, 956, 958, 959], "meant": [57, 118, 123, 137, 198, 256, 292, 342, 358, 360, 412, 487, 497, 592, 735, 838, 839, 848], "practic": [57, 98, 127, 142, 178, 187, 195, 229, 230, 236, 238, 271, 278, 311, 312, 314, 321, 322, 339, 366, 509, 638, 647, 710, 716, 775], "apply_solv": 57, "linalg": [57, 111, 183, 187, 212, 234, 240, 282, 287, 429, 775, 946], "ave_fnam": [57, 66, 85, 95, 120], "cov_fnam": [57, 61, 66, 71, 77, 85, 86, 95, 120, 199, 253, 343], "handl": [57, 66, 72, 85, 160, 167, 171, 173, 178, 182, 187, 192, 193, 195, 197, 199, 200, 235, 238, 242, 243, 274, 275, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 298, 300, 303, 304, 306, 307, 308, 309, 310, 311, 321, 328, 333, 334, 335, 336, 338, 413, 512, 518, 526, 552, 553, 632, 635, 638, 676, 733, 845, 854, 863, 866, 868, 879, 890, 894, 931, 966], "365": [57, 66, 67, 71, 85, 108, 140, 150, 196, 237, 261, 278, 339, 344, 425], "auxiliari": [57, 169, 444], "def": [57, 60, 95, 104, 111, 120, 121, 122, 137, 141, 145, 160, 164, 177, 178, 183, 187, 229, 230, 231, 234, 253, 256, 260, 266, 271, 275, 311], "account": [57, 107, 137, 152, 168, 169, 183, 185, 189, 207, 212, 220, 228, 229, 235, 236, 238, 244, 245, 256, 261, 271, 281, 282, 288, 291, 292, 293, 304, 311, 322, 327, 330, 335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 616, 638, 641, 674, 886, 946], "constraint": [57, 87, 185, 193, 205, 223, 236, 278, 285, 333, 334, 356, 368, 528, 616, 877], "weigth": 57, "formul": [57, 322, 812, 822, 823, 826], "problem": [57, 66, 85, 97, 101, 115, 124, 125, 142, 164, 171, 188, 193, 202, 203, 216, 217, 224, 228, 232, 233, 235, 236, 244, 256, 257, 261, 264, 265, 266, 271, 278, 283, 285, 286, 287, 288, 292, 304, 310, 311, 314, 322, 549, 569, 638, 665, 694, 700, 776, 777, 779, 780, 782, 783, 912, 946, 947, 952], "bia": [57, 66, 97, 111, 168, 178, 211, 230, 264, 266, 270, 278, 280, 292, 293, 299, 304, 322, 330, 335, 336, 366, 367, 431, 498, 547, 549, 550, 616, 674, 815, 880, 885], "callabl": [57, 177, 292, 294, 306, 310, 330, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 352, 382, 384, 410, 436, 485, 488, 492, 495, 502, 514, 552, 553, 608, 637, 638, 653, 724, 755, 756, 768, 775, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 842, 844, 859, 863, 870, 877, 878, 880, 885, 889, 898, 901, 904, 906, 907, 908, 909, 927, 929], "boolean": [57, 129, 168, 170, 196, 198, 229, 234, 235, 244, 246, 283, 289, 302, 304, 308, 311, 330, 333, 334, 335, 336, 342, 344, 485, 492, 552, 553, 637, 638, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 877, 878, 882, 885, 889, 898, 901, 906, 908, 949], "tangenti": [57, 322, 366, 367, 530, 547, 549, 550, 616], "discret": [57, 71, 132, 185, 203, 224, 236, 269, 278, 285, 289, 295, 300, 304, 306, 312, 332, 333, 334, 335, 336, 346, 492, 530, 547, 549, 550, 552, 553, 599, 616, 738, 789, 790, 791, 793, 795, 796, 797, 798, 799, 808, 814], "coeffici": [57, 129, 137, 168, 173, 185, 223, 230, 232, 280, 284, 285, 287, 293, 489, 491, 497, 503, 520, 521, 522, 549, 550, 637, 648, 649, 665, 676, 687, 691, 743, 752, 753, 774, 775, 793, 794, 799, 800, 809, 811, 814, 815, 819, 887], "privat": [57, 302, 310, 311], "mxne_invers": 57, "_make_sparse_stc": 57, "_prepare_gain": 57, "_reapply_source_weight": 57, "is_fixed_ori": [57, 288], "all_ch_nam": 57, "gain_info": 57, "source_weight": 57, "weights_min": [57, 66, 85, 289, 549, 550], "dot": [57, 106, 114, 140, 147, 153, 171, 177, 187, 202, 205, 209, 212, 218, 223, 228, 235, 239, 241, 264, 266, 274, 275, 306, 307, 311, 322, 331, 335, 336, 340, 344, 348, 775, 874, 880], "n_orient": [57, 340, 341, 344, 347, 348, 349, 519, 620], "active_set": 57, "penal": 57, "strongest": [57, 61, 66, 73, 85, 178], "n_dipol": [57, 77, 86, 95, 120, 121, 185, 331, 340, 341, 344, 347, 348, 349, 369, 371, 505, 614, 615, 617, 755], "depend": [57, 97, 109, 129, 155, 162, 163, 164, 168, 176, 178, 182, 184, 185, 189, 197, 198, 199, 218, 223, 229, 230, 232, 234, 235, 238, 246, 253, 256, 257, 258, 266, 271, 278, 283, 285, 289, 293, 294, 295, 305, 307, 311, 316, 318, 319, 322, 327, 333, 334, 335, 336, 340, 341, 344, 346, 347, 348, 349, 368, 388, 399, 413, 414, 478, 491, 497, 511, 519, 529, 552, 553, 555, 561, 568, 570, 638, 648, 659, 665, 671, 684, 690, 770, 776, 777, 779, 780, 782, 784, 785, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 854, 867, 869, 870, 876, 877, 880, 893, 899, 946, 951, 952, 955, 958, 959, 960], "n_active_dipol": 57, "bool": [57, 148, 198, 229, 261, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 386, 387, 390, 391, 392, 393, 394, 396, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 533, 535, 536, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 661, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 681, 683, 684, 685, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 770, 773, 776, 777, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 812, 813, 814, 815, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 839, 843, 844, 846, 850, 853, 854, 855, 859, 860, 862, 863, 864, 865, 867, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 917, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946], "entri": [57, 137, 167, 169, 171, 177, 178, 193, 197, 198, 224, 228, 229, 244, 284, 288, 291, 293, 305, 310, 311, 322, 327, 330, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 355, 384, 412, 413, 414, 415, 416, 417, 485, 492, 495, 507, 517, 520, 550, 551, 552, 553, 555, 605, 613, 637, 638, 653, 734, 738, 740, 741, 742, 754, 769, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 846, 855, 863, 864, 876, 877, 878, 881, 882, 885, 889, 898, 899, 901, 904, 905, 906, 908, 909, 955], "x_full": 57, "solv": [57, 85, 188, 202, 314, 322, 485, 569, 638, 694, 700, 775], "dtype": [57, 120, 122, 142, 148, 171, 183, 194, 251, 253, 261, 308, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 491, 551, 552, 553], "bgcolor": [57, 61, 66, 72, 85, 120, 183, 187, 205, 552, 553, 854, 865, 899, 905], "001": [57, 58, 59, 82, 98, 101, 107, 110, 111, 149, 156, 167, 168, 169, 171, 172, 176, 177, 178, 187, 193, 195, 196, 199, 213, 216, 223, 227, 229, 230, 231, 232, 235, 240, 244, 253, 256, 257, 258, 260, 261, 264, 265, 270, 275, 278, 319, 322, 613, 647, 739, 776, 777, 779, 780, 966], "custom_inverse_solv": [57, 82, 966], "synchron": [58, 59, 60, 140, 173, 239, 270, 278, 304, 311, 319, 326, 366, 554, 561, 568], "rockhil": [58, 97, 98, 110, 142, 143, 144, 148, 162, 163, 260, 261, 278, 291, 292, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 964], "aprockhil": [58, 97, 98, 110, 142, 143, 144, 148, 162, 163, 260, 261], "mailbox": [58, 59, 97, 98, 110, 141, 142, 143, 144, 148, 162, 163, 258, 260, 261, 264, 270, 274], "organ": [58, 98, 260, 261, 278, 312, 319, 647, 779, 780], "_task": [58, 59, 60, 72, 141, 270], "_meg": [58, 59, 60, 72, 141, 199, 270, 289, 294, 325, 552, 553, 574, 575], "5000e": 58, "mostli": [58, 137, 168, 202, 205, 216, 229, 232, 319, 321, 449, 450, 451, 454, 455, 456, 458, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 530, 547, 549, 550, 552, 553, 616, 844], "wavelet": [58, 131, 141, 193, 230, 260, 278, 286, 321, 333, 334, 335, 336, 498, 552, 553, 622, 789, 791, 795, 797, 802, 805, 810, 812, 821, 822, 823, 824, 826, 827], "wish": [58, 171, 198, 218, 236, 251, 257, 258, 264, 311, 312, 434, 552, 553, 665, 845, 848, 960], "epochs_tfr": [58, 361, 609, 807], "compute_tfr": [58, 140, 142, 193, 258, 259, 260, 261, 270, 310, 333, 334, 335, 336, 552, 553, 789, 790, 791, 795, 796, 797, 798, 826, 827, 828, 965], "return_itc": [58, 140, 142, 193, 258, 259, 260, 261, 270, 333, 334, 825, 826, 827, 828], "buffer": [58, 142, 217, 241, 283, 284, 286, 287, 300, 302, 310, 325, 338, 551, 552, 553, 569, 661, 665, 676, 694, 700], "01_task": [58, 59, 60, 72, 94, 141, 150, 197, 213, 241, 270, 271], "somato_meg": [58, 59, 60, 72, 141, 270], "237600": [58, 59, 60, 72, 141, 270], "506999": [58, 59, 60, 72, 141, 270], "791": [58, 59, 60, 72, 141, 208, 261, 270], "1688": [58, 59, 60, 72, 141, 237, 270], "266": [58, 59, 60, 72, 140, 141, 150, 196, 223, 230, 261, 270, 278], "sti": [58, 59, 60, 68, 71, 72, 75, 96, 98, 99, 100, 107, 118, 121, 122, 123, 127, 135, 136, 138, 141, 167, 168, 169, 173, 176, 179, 189, 193, 195, 196, 199, 204, 207, 209, 216, 224, 228, 231, 232, 233, 235, 241, 245, 252, 253, 258, 269, 270, 280, 284, 309, 321, 326, 526, 527, 552, 553, 570], "014": [58, 59, 60, 68, 71, 72, 75, 88, 96, 98, 99, 100, 107, 118, 121, 122, 123, 127, 135, 136, 138, 141, 156, 167, 168, 169, 173, 176, 179, 189, 193, 195, 196, 199, 204, 207, 209, 216, 224, 228, 231, 232, 233, 235, 241, 245, 252, 253, 258, 269, 270, 280, 284, 309, 326, 526, 527, 552, 553, 570], "9989760657919393": 58, "1052": [58, 59, 60], "0121": [58, 60, 172, 193, 196, 244, 253], "0211": [58, 60, 193, 196, 253], "1331": [58, 60, 172, 196, 229, 237, 253], "2211": [58, 60, 196, 253], "2241": [58, 60, 186, 196, 253], "2521": [58, 60, 167, 176, 196, 253], "1641": [58, 60, 196, 253], "1831": [58, 60, 196, 253], "1921": [58, 60, 196, 253], "1941": [58, 60, 61, 196, 253], "1611": [58, 60, 148, 196, 253], "0441": [58, 60, 196, 253], "1631": [58, 60, 148, 196, 241, 253], "752": [58, 229], "period": [58, 108, 149, 167, 168, 171, 172, 176, 177, 199, 207, 227, 229, 230, 231, 233, 240, 241, 271, 291, 292, 293, 295, 304, 306, 308, 311, 312, 321, 328, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 425, 638, 641, 642, 643, 655, 706, 707, 789, 790, 791, 795, 796, 797, 798, 808, 840, 880], "baseline_csd": 58, "scalar": [58, 168, 187, 207, 253, 292, 294, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 359, 366, 367, 368, 485, 492, 552, 553, 638, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 878, 885, 889, 898, 904, 909], "beamfom": 58, "noise_csd": [58, 59, 366], "reduce_rank": [58, 59, 60, 75, 291, 366, 367], "real_filt": [58, 59, 60, 253, 284, 294, 366], "epochs_stc": 58, "return_gener": [58, 132, 360, 361, 364, 519, 607, 609, 612], "nsourc": [58, 78, 337], "epoch_stc": 58, "conj": [58, 366, 367], "apply_baselin": [58, 140, 168, 176, 199, 205, 227, 232, 233, 235, 241, 258, 259, 260, 261, 270, 274, 275, 280, 282, 283, 286, 293, 303, 304, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 789, 790, 791, 795, 796, 797, 798], "8155": [58, 59, 60, 72], "003": [58, 59, 99, 149, 156, 167, 168, 169, 172, 176, 193, 194, 196, 199, 213, 229, 230, 232, 233, 235, 244, 253, 278], "006": [58, 59, 149, 156, 167, 169, 172, 176, 185, 193, 196, 232, 235, 253, 278, 318, 325, 339, 344, 594], "015": [58, 59, 156, 167, 169, 176, 196, 232, 233, 253, 264, 278, 331, 653, 749, 874], "005": [58, 59, 149, 156, 167, 169, 176, 184, 186, 189, 193, 196, 232, 253, 266, 270, 331, 415, 640, 874], "074": [58, 77, 82, 204, 215, 966], "gyri": [58, 122, 182, 185, 252, 278], "border": [58, 64, 85, 132, 144, 155, 182, 208, 291, 292, 304, 306, 330, 333, 334, 335, 336, 342, 485, 492, 511, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 878, 884, 885, 889, 898, 901, 906, 907, 908], "central": [58, 156, 168], "sulcu": 58, "primari": [58, 122, 176, 312, 322], "s1": [58, 577], "m1": [58, 94, 197, 236, 256, 271, 291, 333, 334, 335, 336, 552, 553, 733], "4500": 58, "dorsal": [58, 844], "brain_kwarg": [58, 67, 144, 207, 208, 340, 341, 344, 347, 348, 349, 904, 909], "add_data_kwarg": [58, 162, 208, 340, 341, 344, 347, 348, 349, 904, 909], "fmid": [58, 302, 340, 341, 344, 347, 348, 349, 844, 865, 904, 909, 910, 917], "scale_factor": [58, 61, 74, 75, 76, 85, 204, 341, 347, 349, 382, 844, 896, 905, 909], "0001": [58, 106, 114, 147, 153, 177, 206, 228, 275, 549, 550], "colorbar_kwarg": [58, 162, 208, 844], "label_font_s": [58, 162, 208], "688": [58, 224, 237, 261], "33913449": 58, "817": [58, 261], "80202112": 58, "3163": 58, "68479992": 58, "530": [58, 82, 102, 108, 236, 261, 278, 966], "1397": [58, 82, 966], "dics_epoch": [58, 82, 284, 286, 966], "roman": [59, 278, 299, 300, 301, 316], "goj": [59, 278, 299, 300, 301, 316], "appelhoff": [59, 141, 258, 261, 264, 270, 274, 286, 287, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 964], "shorter": [59, 142, 230, 238, 271, 285, 340, 341, 344, 347, 348, 349, 509, 514, 552, 553, 643, 677, 683, 812, 822, 823, 824, 826, 827, 899], "498464098687909": [59, 60], "logspac": [59, 60, 223, 270, 425], "log10": [59, 60, 128, 160, 230, 240, 253, 256, 270, 271], "loss": [59, 97, 101, 229, 234, 322, 333, 334, 335, 336, 488, 495, 515, 516, 517, 518, 552, 553, 771], "csd_baselin": [59, 60], "csd_er": [59, 60], "block": [59, 60, 85, 90, 131, 150, 160, 169, 170, 199, 220, 229, 231, 241, 253, 280, 285, 287, 303, 304, 308, 322, 331, 333, 334, 335, 336, 338, 343, 526, 544, 549, 552, 553, 627, 638, 674, 707, 776, 777, 779, 780, 793, 794, 799, 800, 844, 874, 876, 893, 899, 900, 902, 951], "rather": [59, 60, 87, 167, 168, 173, 176, 183, 193, 194, 195, 197, 198, 205, 216, 224, 229, 235, 236, 240, 244, 256, 260, 264, 269, 284, 286, 287, 288, 291, 292, 294, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 318, 319, 321, 322, 333, 334, 337, 340, 341, 344, 347, 348, 349, 492, 552, 553, 603, 611, 612, 622, 675, 781, 784, 795, 796, 844, 864, 899, 951], "entir": [59, 102, 132, 171, 178, 203, 211, 229, 230, 231, 232, 238, 240, 245, 256, 271, 292, 293, 308, 311, 328, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 356, 486, 501, 605, 606, 607, 608, 609, 638, 655, 706, 739, 789, 790, 791, 795, 796, 797, 798], "baseline_source_pow": 59, "beta_source_pow": 59, "messag": [59, 198, 241, 269, 282, 285, 287, 288, 289, 291, 292, 304, 307, 309, 311, 325, 340, 341, 344, 347, 348, 349, 436, 519, 569, 572, 694, 700, 734, 735, 839, 840, 841, 844, 946, 951, 958, 961], "40188307": 59, "5102619": 59, "34636424": 59, "joachim": [59, 207, 253, 278, 359, 366], "gro\u00df": [59, 207, 253, 278, 359, 366], "jan": [59, 207, 253, 278, 291, 292, 295, 303, 307, 318, 359, 366, 367], "kujala": [59, 207, 253, 278, 359, 366, 367], "matti": [59, 66, 80, 81, 84, 85, 86, 155, 189, 205, 207, 238, 253, 278, 279, 301, 304, 316, 322, 344, 359, 366, 371, 549, 550, 605, 616, 620, 649, 654, 676, 746, 751, 946, 959], "h\u00e4m\u00e4l\u00e4inen": [59, 66, 84, 85, 155, 205, 207, 253, 278, 279, 301, 344, 359, 366, 506, 549, 550, 605, 616, 620, 654, 746, 749, 751, 959], "lar": [59, 207, 253, 278, 359, 366], "timmermann": [59, 207, 253, 278, 359, 366], "alfon": [59, 207, 253, 278, 359, 366], "schnitzler": [59, 207, 253, 278, 359, 366], "riitta": [59, 141, 205, 207, 253, 278, 359, 366, 367], "salmelin": [59, 141, 207, 253, 278, 359, 366, 367], "nation": [59, 207, 253, 278, 324, 359, 366, 964], "academi": [59, 207, 253, 278, 359, 366], "694": [59, 124, 207, 253, 261, 278, 359, 366, 966], "699": [59, 167, 178, 207, 253, 261, 278, 359, 366], "2001": [59, 67, 97, 207, 223, 236, 253, 278, 333, 334, 335, 336, 359, 366, 491, 552, 553, 646, 733, 773], "pna": [59, 207, 253, 278, 359, 366], "813": [59, 82, 237, 261, 966], "dics_source_pow": [59, 82, 284, 286, 966], "luke": [60, 64, 68, 103, 108, 109, 137, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 300, 303, 304, 307, 308, 309, 964], "bloi": [60, 64, 68, 108, 109, 137, 284, 285, 286, 287, 289, 291, 292, 294, 295, 300, 303], "90092": 60, "maxfilt": [60, 216, 238, 284, 293, 297, 302, 309, 338, 421, 422, 423, 506, 552, 553, 611, 612, 621, 622, 648, 649, 665, 676, 740, 741, 742, 754], "conserv": [60, 97, 173, 256, 302, 646, 738, 844], "onc": [60, 69, 70, 97, 122, 160, 169, 170, 171, 172, 177, 178, 193, 195, 196, 197, 199, 227, 228, 230, 232, 233, 234, 235, 241, 244, 246, 274, 283, 288, 294, 300, 304, 311, 312, 318, 322, 326, 327, 333, 334, 335, 336, 340, 341, 344, 345, 347, 348, 349, 351, 447, 520, 521, 523, 524, 552, 553, 657, 674, 824, 827, 867, 899], "advanc": [60, 100, 188, 189, 192, 198, 232, 246, 274, 276, 278, 299, 306, 314, 322, 330, 333, 334, 335, 336, 342, 425, 445, 485, 492, 547, 552, 553, 637, 638, 653, 754, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 854, 863, 878, 885, 889, 898, 901, 906, 908, 946, 947, 948, 952, 954, 956], "correctli": [60, 69, 70, 177, 218, 232, 266, 280, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 309, 310, 318, 319, 322, 333, 334, 335, 336, 402, 518, 552, 553, 659, 663, 861, 880, 951, 952, 958], "active_win": 60, "baseline_win": 60, "baseline_cov": 60, "active_cov": 60, "common_cov": 60, "ref": [60, 88, 94, 152, 178, 289, 293, 311, 325, 844, 862, 960], "ex": [60, 238, 311, 338, 952, 956], "_gen_dic": 60, "stc_base": [60, 68], "stc_act": 60, "_gen_lcmv": 60, "_gen_mn": 60, "stc_dic": 60, "stc_lcmv": 60, "stc_dspm": [60, 66, 85], "1041": [60, 196, 253], "0821": [60, 196, 253], "2331": [60, 196, 253, 632], "0411": [60, 196, 253], "2031": [60, 196, 253], "1431": [60, 196, 229, 253], "1341": [60, 196, 237, 253], "1321": [60, 196, 229, 253], "0231": [60, 148, 193, 196, 253], "0911": [60, 196, 229, 253], "0311": [60, 193, 196, 253], "2231": [60, 196, 253], "1241": [60, 196, 253], "2311": [60, 196, 253], "0421": [60, 196, 253], "1231": [60, 196, 253], "1621": [60, 148, 196, 253], "1211": [60, 196, 253], "0141": [60, 196, 229, 253], "1131": [60, 196, 253], "0921": [60, 196, 253], "2321": [60, 196, 253], "0721": [60, 196, 253], "2411": [60, 148, 196, 253], "2421": [60, 148, 196, 229, 253], "1741": [60, 196, 229, 253, 278], "2621": [60, 196, 229, 253], "0531": [60, 196, 253], "0641": [60, 196, 253], "0511": [60, 173, 196, 253], "0341": [60, 196, 253], "0741": [60, 196, 253], "1411": [60, 172, 173, 196, 229, 235, 253], "2441": [60, 196, 253], "2341": [60, 196, 253], "2131": [60, 196, 229, 253, 256, 278, 782, 783], "0221": [60, 193, 196, 253], "2021": [60, 171, 196, 207, 218, 240, 253, 278, 304, 312, 315, 319, 461, 583, 652], "2611": [60, 196, 229, 253], "0431": [60, 196, 253], "0321": [60, 193, 196, 253], "1821": [60, 196, 253], "2141": [60, 196, 229, 253, 256, 278, 782, 783], "1511": [60, 193, 196, 253], "1531": [60, 193, 196, 253, 325], "0331": [60, 193, 196, 253], "0521": [60, 196, 229, 253], "0241": [60, 196, 253], "1911": [60, 196, 253], "2531": [60, 196, 229, 253], "1931": [60, 196, 253], "1421": [60, 172, 173, 196, 229, 235, 253], "1721": [60, 196, 253], "1311": [60, 162, 196, 237, 253], "0131": [60, 172, 193, 196, 253], "1021": [60, 196, 223, 253, 278, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "2221": [60, 196, 253], "0541": [60, 196, 253], "0611": [60, 196, 253], "2641": [60, 196, 253], "0731": [60, 196, 253], "0631": [60, 196, 253], "1111": [60, 127, 168, 178, 196, 230, 253, 261, 278, 425, 775, 776, 777, 779, 780], "2511": [60, 196, 253], "1731": [60, 61, 196, 253], "2541": [60, 196, 229, 253], "0621": [60, 196, 253], "0811": [60, 196, 229, 253], "1441": [60, 172, 196, 219, 229, 237, 253], "2041": [60, 196, 223, 253], "2111": [60, 196, 253], "2121": [60, 196, 253], "1141": [60, 196, 253], "1521": [60, 193, 196, 253], "1541": [60, 196, 229, 237, 253], "0111": [60, 172, 193, 196, 229, 235, 244, 253, 723], "0711": [60, 196, 253], "0941": [60, 196, 253], "1811": [60, 148, 177, 196, 244, 253], "1841": [60, 196, 253], "2631": [60, 196, 229, 253], "0931": [60, 196, 253], "n_chan": [60, 75, 244, 769, 823, 824, 908], "_pl": [60, 75], "planar": [60, 66, 68, 76, 84, 85, 98, 111, 120, 122, 137, 139, 147, 158, 169, 173, 199, 204, 205, 206, 210, 216, 224, 227, 234, 235, 238, 253, 256, 291, 322, 863], "7615": [60, 155, 278, 460], "004172": 60, "17919e": 60, "37501": 60, "82112e": 60, "brain_dic": 60, "5205929": 60, "6585548": 60, "71744034": 60, "brain_lcmv": 60, "47975676": 60, "58609544": 60, "05115173": 60, "brain_dspm": 60, "71153425": 60, "88773084": 60, "99261235": 60, "650": [60, 82, 108, 109, 173, 240, 966], "298": [60, 72, 82, 103, 150, 196, 237, 658, 662, 966], "evoked_ers_source_pow": [60, 82, 966], "detail": [61, 70, 71, 107, 147, 167, 169, 176, 177, 178, 182, 183, 185, 193, 194, 195, 196, 197, 198, 199, 202, 204, 207, 216, 217, 218, 223, 224, 228, 229, 231, 233, 234, 235, 238, 244, 245, 246, 247, 266, 269, 278, 283, 292, 298, 305, 308, 311, 313, 314, 318, 319, 321, 323, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 495, 496, 498, 501, 502, 504, 506, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 535, 536, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 634, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 737, 738, 740, 741, 742, 743, 752, 753, 754, 755, 757, 759, 760, 761, 762, 763, 764, 765, 776, 777, 778, 779, 780, 782, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 814, 815, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 843, 844, 846, 853, 861, 862, 863, 870, 871, 874, 877, 878, 879, 880, 881, 884, 885, 886, 888, 889, 890, 891, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 915, 925, 926, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946], "luessi": [61, 73, 132, 278, 279, 290, 296, 297, 298, 299, 300, 301, 302, 316], "mluessi": [61, 73, 132], "nmr": [61, 69, 73, 132, 142, 182, 244, 322, 340, 344, 348, 438, 904], "mgh": [61, 69, 73, 84, 132, 142, 182, 197, 244, 282, 285, 303, 314, 319, 322, 340, 344, 348, 398, 438, 738, 904, 961], "harvard": [61, 69, 73, 84, 132, 142, 182, 322, 324, 340, 344, 348, 438, 904, 964], "daniel": [61, 66, 72, 84, 85, 120, 237, 274, 278, 280, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 344, 549, 550, 964], "strohmeier": [61, 66, 72, 85, 120, 278, 280, 285, 286, 297, 298, 299, 300, 301, 302, 316, 549, 550], "tu": [61, 66, 72, 85, 120], "ilmenau": [61, 66, 72, 85, 120, 324, 964], "de": [61, 66, 72, 85, 120, 127, 140, 223, 224, 241, 271, 278, 280, 291, 303, 306, 307, 310, 314, 318, 324, 491, 638, 653, 964], "evoked_fnam": [61, 77, 86, 118, 123, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "50e": [61, 120, 178, 229, 232], "300e": 61, "xyz_same_gamma": [61, 292, 547], "return_residu": [61, 66, 72, 77, 85, 86, 204, 285, 369, 371, 547, 549, 550, 605], "return_as_dipol": [61, 66, 72, 85, 292, 547, 549, 550], "converg": [61, 66, 72, 85, 199, 206, 233, 286, 306, 322, 547, 605, 638, 803, 814], "055e": 61, "22233": 61, "855e": 61, "20712": 61, "375e": 61, "17166": 61, "061e": 61, "12996": 61, "272e": 61, "10107": 61, "574e": 61, "8307": 61, "319e": 61, "7209": 61, "369e": 61, "6342": 61, "631e": 61, "5694": 61, "047e": 61, "579e": 61, "4692": 61, "199e": 61, "4287": 61, "889e": 61, "4002": [61, 203, 322], "634e": 61, "3696": 61, "422e": 61, "3429": 61, "246e": 61, "3153": [61, 223], "099e": 61, "2952": [61, 189], "747e": 61, "2745": 61, "702e": 61, "2559": 61, "817e": 61, "2394": 61, "062e": 61, "2229": 61, "417e": 61, "2067": 61, "883e": 61, "711e": 61, "1836": 61, "552e": 61, "400e": 61, "1617": 61, "266e": 61, "1509": [61, 237], "166e": 61, "1440": 61, "066e": 61, "1350": [61, 223, 256], "965e": 61, "1245": [61, 237], "861e": 61, "1200": [61, 252], "754e": 61, "1128": 61, "643e": 61, "529e": 61, "1017": [61, 278], "410e": 61, "975": [61, 237, 261], "288e": 61, "924": [61, 237, 261], "163e": 61, "873": 61, "036e": 61, "906e": 61, "798": [61, 171], "776e": 61, "744": [61, 261], "644e": 61, "705": [61, 224, 268], "513e": 61, "687": [61, 88, 261], "382e": 61, "660": [61, 108], "253e": 61, "125e": 61, "600": [61, 66, 73, 82, 84, 85, 98, 102, 108, 110, 118, 121, 155, 161, 182, 183, 187, 194, 195, 205, 206, 207, 211, 219, 227, 228, 231, 234, 235, 236, 237, 238, 240, 244, 245, 246, 247, 253, 274, 278, 282, 550, 844, 966], "000e": 61, "588": [61, 224, 261], "877e": 61, "570": [61, 108, 224, 261], "758e": 61, "552": [61, 237, 261], "642e": 61, "528": [61, 170, 237], "495": [61, 109, 150, 237, 251, 256], "421e": 61, "316e": 61, "465": [61, 150, 231, 237, 256], "215e": 61, "118e": 61, "026e": 61, "937e": 61, "853e": 61, "772e": 61, "378": [61, 108, 149, 150, 157, 256, 270, 966], "695e": 61, "348": [61, 150, 196, 230, 261, 282], "622e": 61, "339": [61, 140, 150, 196], "486e": 61, "330": [61, 66, 76, 82, 108, 109, 140, 150, 196, 210, 224, 237, 253, 255, 261, 299, 966], "423e": 61, "312": [61, 150, 196], "306e": 61, "252e": 61, "297": [61, 150, 196, 256, 261], "201e": 61, "152e": 61, "273": [61, 72, 140, 150, 193, 196, 211, 237, 280], "106e": 61, "261": [61, 140, 150, 196, 224, 237, 256, 261], "020e": 61, "807e": 61, "234": [61, 150, 196, 210, 237, 256], "432e": 61, "222": [61, 72, 134, 150, 196, 203, 215, 219, 237, 266, 966], "075e": 61, "219": [61, 67, 82, 150, 196, 206, 237, 253, 255, 260, 261, 298, 966], "735e": 61, "413e": 61, "207": [61, 142, 150, 177, 181, 185, 196, 223, 237, 260, 261, 278, 966], "814e": 61, "198": [61, 150, 196, 211, 237, 260, 261, 266, 966], "536e": 61, "192": [61, 150, 196, 198, 237, 256, 263, 269, 273, 966], "271e": 61, "186": [61, 71, 82, 87, 150, 171, 196, 203, 208, 237, 256, 260, 966], "019e": 61, "779e": 61, "174": [61, 147, 150, 155, 157, 196, 237, 256, 260, 261, 278, 346, 966], "549e": 61, "122e": 61, "159": [61, 142, 150, 176, 196, 224, 256, 261], "922e": 61, "732e": 61, "550e": 61, "138": [61, 150, 193, 196, 198, 237, 260, 261, 278, 300, 346, 643], "896e": 61, "132": [61, 72, 150, 178, 179, 181, 196, 224, 237, 241, 256, 260, 261, 966], "749e": 61, "129": [61, 88, 150, 156, 157, 196, 197, 203, 237, 241, 247, 249, 256, 260, 261, 278, 966], "609e": 61, "126": [61, 71, 150, 196, 237, 256], "345e": 61, "123": [61, 129, 130, 150, 152, 196, 233, 235, 237, 256, 416, 966], "220e": 61, "104": [61, 88, 119, 122, 150, 196, 237, 256, 278, 298, 664, 749, 966], "101e": 61, "117": [61, 88, 150, 172, 196, 237, 256, 257, 263, 278, 281, 333, 334, 795, 825, 828, 966], "986e": 61, "875e": 61, "769e": 61, "667e": 61, "474e": 61, "209e": 61, "127e": 61, "689e": 61, "500e": 61, "441e": 61, "384e": 61, "329e": 61, "127": [61, 65, 82, 150, 196, 256, 260, 261, 966], "275e": 61, "985e": 61, "154": [61, 150, 164, 195, 196, 224, 237, 256, 260, 261], "273e": 61, "247e": 61, "650e": 61, "177": [61, 150, 172, 196, 237, 260, 261, 278, 776, 777, 779, 780], "815e": 61, "524e": 61, "211": [61, 67, 85, 150, 172, 196, 256, 260, 261], "307e": 61, "226": [61, 112, 140, 150, 171, 188, 191, 196, 211, 237, 256, 261, 298, 966], "274e": 61, "042e": 61, "293": [61, 72, 82, 140, 150, 196, 210, 237, 278, 966], "161e": 61, "313": [61, 140, 150, 196, 237, 298], "784e": 61, "169e": 61, "343": [61, 150, 170, 196, 197, 237, 302], "949e": 61, "886e": 61, "857e": 61, "reach": [61, 66, 72, 85, 199, 271, 306, 326, 333, 334, 335, 336, 552, 553, 745, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 803, 814, 824, 827, 841, 878, 885, 906], "mri_head_t": [61, 66, 77, 85, 86, 208, 337, 338, 545, 546], "fig_nam": [61, 66, 72, 85, 905], "david": [61, 68, 147, 155, 223, 230, 269, 278, 287, 288, 295, 322, 333, 334, 335, 336, 425, 460, 491, 547, 552, 553, 606, 789, 791, 793, 795, 797, 799, 808, 814, 825, 828, 863], "wipf": [61, 278, 547], "srikantan": [61, 253, 278, 366, 367, 547], "nagarajan": [61, 253, 278, 366, 367, 547], "unifi": [61, 164, 207, 230, 278, 282, 287, 291, 299, 301, 411, 547, 749], "947": [61, 237, 278, 547], "966": [61, 68, 189, 199, 235, 274, 277, 278, 547, 966], "059": [61, 167, 169, 176, 196, 228, 244, 253, 278, 547], "318": [61, 82, 150, 196, 261, 966], "gamma_map_invers": [61, 82, 966], "form": [63, 168, 170, 187, 195, 202, 205, 227, 230, 232, 233, 234, 238, 256, 258, 261, 264, 283, 287, 301, 311, 312, 313, 322, 330, 333, 334, 335, 336, 338, 340, 341, 342, 344, 347, 348, 349, 405, 485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 520, 547, 549, 550, 552, 553, 590, 599, 605, 607, 608, 609, 637, 638, 639, 647, 653, 676, 719, 722, 738, 739, 740, 741, 742, 754, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 863, 878, 880, 885, 889, 898, 901, 906, 908, 939, 944, 946], "merg": [63, 168, 245, 246, 282, 285, 289, 293, 298, 307, 311, 312, 328, 333, 335, 336, 424, 527, 572, 603, 730, 738], "christian": [63, 148, 155, 161, 171, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 304, 305, 316, 319, 460, 461, 485, 509, 749], "brodbeck": [63, 148, 161, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 297, 298, 299, 300, 301, 302, 305, 316], "christianbrodbeck": [63, 148, 161], "aud_lh": 63, "aud_rh": 63, "stc_lh": [63, 73], "stc_rh": [63, 73], "stc_bh": 63, "calcul": [63, 64, 84, 108, 129, 135, 140, 156, 171, 177, 178, 185, 189, 193, 197, 203, 207, 216, 223, 229, 230, 233, 235, 240, 244, 256, 257, 261, 270, 282, 283, 285, 286, 287, 289, 291, 292, 293, 294, 295, 299, 300, 302, 303, 321, 328, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 366, 367, 374, 388, 425, 429, 430, 441, 442, 443, 485, 492, 493, 520, 528, 529, 542, 547, 549, 550, 552, 553, 594, 599, 600, 601, 616, 638, 645, 650, 651, 655, 660, 665, 676, 680, 696, 706, 718, 754, 768, 776, 777, 779, 780, 782, 783, 792, 808, 815, 886, 891, 900, 946], "mni": [63, 162, 163, 186, 203, 208, 209, 218, 286, 289, 294, 295, 322, 331, 348, 349, 382, 398, 438, 545, 720, 836, 843, 844, 910], "vtx": 63, "t_lh": 63, "center_of_mass": [63, 252, 283, 339, 344, 752, 755, 965], "mni_lh": 63, "t_rh": 63, "mni_rh": 63, "275": [63, 72, 140, 150, 152, 193, 196, 197, 219, 256, 278, 319, 322, 408, 485], "625": [63, 170], "hl": 63, "hr": 63, "hb": 63, "figlegend": 63, "label_activation_from_stc": [63, 82, 966], "typic": [64, 70, 87, 97, 110, 170, 172, 176, 178, 183, 187, 194, 195, 197, 216, 219, 220, 224, 227, 228, 230, 232, 233, 234, 235, 236, 238, 240, 246, 256, 271, 284, 285, 311, 312, 319, 320, 321, 322, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 349, 366, 367, 382, 383, 401, 413, 415, 425, 429, 430, 431, 433, 485, 492, 503, 509, 528, 538, 541, 552, 553, 618, 637, 638, 640, 648, 653, 677, 687, 690, 700, 738, 760, 774, 775, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 855, 863, 878, 884, 885, 889, 893, 897, 898, 899, 901, 906, 908, 946, 952, 958], "anatom": [64, 70, 97, 122, 162, 183, 187, 203, 208, 278, 295, 301, 321, 322, 331, 344, 347, 348, 349, 436, 537, 844, 864, 868, 910], "yield": [64, 167, 169, 172, 176, 178, 182, 188, 198, 207, 220, 231, 233, 244, 245, 271, 288, 294, 319, 320, 321, 322, 328, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 388, 485, 492, 502, 506, 552, 553, 638, 641, 648, 649, 665, 676, 702, 741, 742, 781, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 824, 827, 844, 878, 885, 898, 946], "banksst": [64, 67, 73], "aparc_label_nam": 64, "stc_mean": 64, "grow": [64, 118, 123, 271, 312, 543, 590, 693, 959], "halt": [64, 169, 304, 331, 333, 334, 335, 336, 338, 544, 552, 553, 638, 793, 794, 799, 800, 874, 876, 893, 899, 902, 958], "parc": [64, 67, 73, 711, 941], "aparc": [64, 67, 73, 95, 118, 122, 123, 155, 162, 182, 203, 208, 252, 288, 321, 331, 340, 341, 344, 347, 348, 349, 457, 519, 537, 592, 711, 726, 844], "regexp": [64, 118, 122, 123, 228, 233, 235, 240, 288, 514, 632, 711], "stc_mean_label": 64, "func_label": 64, "maximum": [64, 73, 74, 76, 84, 110, 143, 147, 178, 203, 204, 208, 209, 229, 230, 233, 244, 275, 278, 285, 292, 294, 299, 301, 303, 306, 321, 322, 328, 333, 334, 335, 336, 340, 341, 342, 344, 346, 347, 348, 349, 366, 367, 396, 413, 436, 485, 492, 493, 518, 519, 522, 543, 547, 549, 550, 552, 553, 580, 590, 598, 605, 614, 615, 620, 638, 640, 655, 658, 671, 674, 675, 729, 754, 776, 777, 779, 780, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 812, 814, 822, 825, 828, 844, 846, 870, 875, 878, 881, 884, 885, 898, 904, 909, 910, 917], "anat_label": 64, "stc_anat_label": 64, "pca_anat": 64, "pca_flip": [64, 65, 340, 341, 344, 347, 348, 349, 519], "stc_func_label": 64, "pca_func": 64, "show_view": [64, 74, 137, 144, 162, 187, 208, 218, 239, 253, 266, 275, 294, 295, 304, 309, 340, 341, 344, 347, 348, 349, 844, 904, 909], "add_label": [64, 85, 132, 144, 155, 844], "73227205": 64, "80078852": 64, "62750681": 64, "label_from_stc": [64, 82, 966], "strategi": [65, 224, 227, 233, 235, 236, 278, 424, 436, 490, 502, 549, 749, 814, 878, 946], "simpl": [65, 72, 101, 156, 171, 172, 178, 187, 188, 193, 208, 223, 224, 230, 234, 253, 256, 271, 278, 301, 311, 319, 322, 394, 424, 485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 570, 639, 812, 822, 894], "patheffect": [65, 187], "path_effect": [65, 187], "label_fnam": 65, "stc_label": 65, "mean_flip": [65, 285, 340, 341, 344, 347, 348, 349, 519], "tc": 65, "pe": 65, "stroke": [65, 187], "foreground": [65, 169, 187, 292, 340, 341, 344, 347, 348, 349, 844, 904, 909], "possibl": [65, 69, 71, 142, 164, 167, 169, 170, 172, 176, 177, 178, 183, 187, 188, 195, 196, 197, 198, 199, 205, 207, 216, 218, 220, 224, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 244, 245, 246, 247, 251, 253, 256, 260, 261, 269, 271, 283, 286, 287, 289, 293, 299, 303, 304, 306, 309, 312, 319, 320, 322, 327, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 396, 425, 485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 502, 508, 526, 536, 544, 552, 553, 561, 578, 638, 639, 658, 683, 684, 702, 703, 733, 771, 776, 778, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 830, 846, 862, 872, 880, 881, 884, 889, 892, 893, 900, 917, 918, 946, 949, 951], "stc_vec": [65, 67, 207], "stc_vec_label": 65, "ee6677": [65, 187, 812, 822], "228833": 65, "4477aa": 65, "xyz": [65, 183, 187, 205, 294, 340, 341, 344, 347, 348, 349, 382, 400, 519, 547, 578, 916], "763": [65, 82, 224, 966], "label_source_activ": [65, 82, 966], "ir": 66, "l0": [66, 549], "sparser": [66, 340, 344, 348, 904], "convex": [66, 72, 85, 278, 292, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "sure": [66, 69, 71, 94, 97, 137, 141, 162, 167, 168, 171, 178, 183, 188, 189, 193, 197, 198, 199, 203, 217, 228, 231, 232, 233, 235, 238, 244, 260, 264, 265, 266, 288, 291, 295, 311, 325, 333, 334, 335, 336, 338, 350, 516, 517, 549, 552, 553, 565, 622, 637, 648, 784, 812, 822, 823, 824, 826, 883, 937, 951, 952, 960], "criterion": [66, 282, 285, 605], "n_mxne_it": [66, 549], "use_cp": [66, 120, 185, 252, 285, 286, 291, 322, 341, 347, 349, 353, 354, 435, 605, 606, 607, 608, 609, 612, 616, 621, 622, 753, 754], "maxit": [66, 85, 547, 549, 550], "3000": [66, 75, 141, 164, 169, 172, 173, 220, 229, 235, 240, 325, 549, 550], "active_set_s": [66, 549], "debia": [66, 85, 549, 550], "slower": [66, 70, 72, 230, 311, 314, 328, 333, 434, 484, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 597, 608, 684], "sure_alpha_grid": [66, 549], "tidx": [66, 208], "7262": [66, 84, 85, 122, 205, 224, 253], "020866": [66, 84, 224], "58122e": [66, 84, 85, 122, 205, 224, 253], "element": [66, 84, 118, 195, 199, 205, 206, 209, 219, 220, 224, 230, 234, 235, 244, 246, 256, 258, 278, 288, 311, 312, 321, 327, 330, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 392, 393, 485, 492, 497, 506, 507, 519, 520, 540, 552, 553, 592, 593, 594, 637, 653, 661, 676, 738, 769, 777, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 850, 863, 865, 870, 878, 885, 898, 901, 904, 906, 908, 909, 910, 947, 958], "21995": 66, "82623e": 66, "360": [66, 74, 75, 80, 81, 84, 85, 108, 109, 121, 122, 149, 150, 178, 179, 181, 189, 196, 199, 205, 219, 237, 256, 270, 966], "warm": 66, "33333333333333": 66, "66666666666667": 66, "66666666666666": 66, "666666666666664": 66, "60279": 66, "603691776916": 66, "59855": 66, "333815908605": 66, "60434": 66, "87086632466": 66, "60386": 66, "80654523449": 66, "60336": 66, "582405508074": 66, "60303": 66, "83155505918": 66, "60157": 66, "01344243241": 66, "59974": 66, "67525570647": 66, "59597": 66, "869136562775": 66, "59084": 66, "52688072865": 66, "subject_from": [66, 69, 70, 207, 318, 339, 345, 431, 624, 625, 713, 725, 726, 727, 728], "stc_fsaverag": [66, 69, 70, 318], "src_fsaverage_fnam": 66, "src_fsaverag": 66, "matthieu": [66, 85, 278, 549, 550], "kowalski": [66, 85, 278, 549, 550], "acceler": [66, 278, 295, 322, 549, 946, 958], "gradient": [66, 147, 240, 278, 283, 295, 307, 328, 333, 334, 335, 336, 338, 549, 551, 552, 553, 600, 638, 652, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863], "physic": [66, 183, 187, 197, 203, 205, 217, 238, 278, 307, 321, 322, 335, 336, 338, 506, 518, 549, 552, 553, 605, 649, 665, 676, 880], "medicin": [66, 110, 203, 238, 278, 322, 549, 638, 676], "biologi": [66, 110, 203, 238, 278, 322, 549, 638, 676], "1937": [66, 278, 549], "1961": [66, 223, 278, 549], "2012": [66, 85, 178, 196, 230, 256, 278, 315, 339, 344, 351, 425, 549, 550, 782, 783], "1088": [66, 203, 223, 236, 238, 278, 322, 333, 334, 335, 336, 491, 549, 552, 553, 676, 733], "0031": [66, 203, 238, 278, 322, 549, 676], "9155": [66, 203, 238, 278, 322, 549, 676], "jen": [66, 72, 85, 278, 286, 287, 549, 550], "haueisen": [66, 72, 85, 278, 549, 550], "improv": [66, 97, 171, 223, 224, 232, 235, 240, 278, 281, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 318, 320, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 375, 412, 414, 418, 442, 443, 487, 496, 520, 521, 523, 524, 525, 552, 553, 616, 639, 684, 687, 746, 751, 824, 827, 946], "prni": [66, 72, 278, 550], "t\u00fcbingen": [66, 278], "6858545": [66, 278], "charl": [66, 70, 278, 345, 431, 549], "alban": [66, 278, 549], "deledal": [66, 278, 549], "samuel": [66, 122, 123, 278, 288, 304, 307, 308, 310, 549], "vaiter": [66, 278, 549], "jalal": [66, 278, 549], "fadili": [66, 278, 549], "peyr\u00e9": [66, 278, 549], "stein": [66, 278, 549], "unbias": [66, 278, 549], "risk": [66, 208, 230, 233, 260, 278, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 549, 552, 553, 665, 844], "sugar": [66, 278, 549], "siam": [66, 278, 549], "journal": [66, 69, 97, 98, 102, 147, 184, 224, 230, 238, 261, 269, 278, 316, 333, 334, 335, 336, 345, 425, 431, 505, 506, 549, 552, 553, 638, 646, 647, 649, 676, 749, 776, 777, 779, 780, 789, 791, 793, 795, 797, 799, 808, 812, 814, 822, 823, 825, 826, 828, 863], "2448": [66, 278, 549], "2487": [66, 278, 549], "1137": [66, 278, 549], "140968045": [66, 278, 549], "mixed_norm_invers": [66, 82, 966], "annalisa": [67, 284, 286], "pascarella": [67, 284, 286], "iac": 67, "cnr": 67, "dir": [67, 198, 322, 325, 844], "data_dir": [67, 83, 101, 161, 171], "bem_dir": [67, 71, 137, 186, 188, 209], "fname_mixed_src": 67, "fname_aseg": [67, 208], "fname_model": 67, "_audvi": 67, "_audvis_raw": [67, 184], "substructur": 67, "labels_vol": 67, "amygdala": 67, "thalamu": 67, "proper": [67, 97, 256, 271, 283, 285, 292, 302, 303, 307, 314, 319, 334, 335, 336, 339, 366, 367, 425, 429, 430, 436, 441, 442, 443, 445, 485, 492, 528, 529, 547, 549, 550, 553, 616, 857, 886], "stem": [67, 99, 344, 348, 560, 581], "oct6": [67, 137, 185, 318, 325, 340, 344, 348, 728, 737, 904], "oct5": [67, 137, 318], "bound": [67, 101, 185, 275, 281, 282, 292, 305, 309, 322, 330, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 485, 492, 509, 529, 552, 553, 637, 638, 738, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 814, 832, 844, 855, 861, 863, 865, 870, 878, 885, 889, 898, 899, 900, 901, 904, 906, 908, 909, 910, 914, 917], "10mm": 67, "someth": [67, 176, 188, 198, 199, 219, 230, 235, 236, 244, 274, 294, 309, 311, 321, 340, 341, 344, 347, 348, 349, 794, 800, 844, 845, 904, 909, 951, 952, 955, 956, 959], "vol_src": [67, 162, 185], "add_interpol": [67, 76, 185, 738], "usual": [67, 76, 97, 110, 140, 142, 150, 167, 170, 172, 176, 177, 178, 182, 183, 187, 188, 193, 194, 195, 197, 199, 207, 210, 216, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 244, 245, 246, 247, 264, 266, 269, 270, 308, 311, 321, 322, 325, 331, 332, 333, 334, 335, 336, 337, 338, 346, 373, 395, 400, 405, 407, 409, 536, 552, 553, 578, 754, 776, 777, 779, 780, 946, 953, 955, 958, 960], "nuse": [67, 338, 346], "2562": [67, 137, 177, 185, 275, 318], "node": [67, 73, 185, 301, 763, 764, 765, 850], "4590": 67, "2961": [67, 256], "1275": [67, 224], "2615": 67, "1340": 67, "1589": 67, "736": [67, 175, 966], "1306": [67, 237], "010000": [67, 183], "2169": 67, "again": [67, 168, 169, 171, 177, 178, 182, 183, 188, 199, 224, 227, 228, 230, 232, 233, 234, 235, 244, 256, 261, 271, 303, 304, 307, 312, 322, 333, 334, 335, 336, 343, 552, 553, 638, 684, 897, 937, 952], "plot_img": 67, "nipy_spectr": 67, "5mm": [67, 111, 162, 505, 844], "innerskul": 67, "815": [67, 237], "509": [67, 150, 224, 257], "807": [67, 261], "459": [67, 150, 237, 261], "6003": 67, "inv_method": [67, 118], "a2009": [67, 122, 162, 182, 203, 340, 341, 344, 347, 348, 349, 519, 592, 711], "39266": 67, "01344e": 67, "coron": [67, 162, 185, 187, 207, 331, 844, 864, 874], "silhouett": [67, 207, 208, 294, 340, 341, 344, 347, 348, 349, 844, 904, 909], "43101017": 67, "98225664": 67, "7504814": 67, "45409596": 67, "02821048": 67, "97219252": 67, "vox": [67, 187, 207, 208, 209], "2045": 67, "21567156": 67, "47889133": 67, "39837939": 67, "labels_parc": 67, "label_t": 67, "allow_empti": [67, 340, 341, 344, 347, 348, 349, 519], "nam": [67, 121, 122, 123, 210, 211, 213, 253, 284, 291, 321, 755], "561": [67, 82, 224, 966], "235": [67, 82, 140, 150, 185, 196, 208, 213, 237, 260, 966], "mixed_source_space_invers": [67, 82, 966], "computation": [68, 199, 230, 233, 234, 322, 684], "sabbagh": [68, 278, 287, 606], "pierr": [68, 104, 233, 278, 286, 295, 606, 638], "ablin": [68, 104, 233, 278, 286, 606, 638], "ga\u00ebl": [68, 278, 606], "varoquaux": [68, 278, 606], "state": [68, 118, 121, 137, 155, 167, 189, 193, 195, 202, 227, 228, 235, 236, 245, 256, 271, 278, 280, 287, 302, 311, 312, 314, 321, 322, 326, 328, 333, 334, 420, 509, 549, 569, 590, 597, 606, 638, 674, 693, 694, 699, 700, 741, 742, 743, 752, 753, 755, 776, 777, 778, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 844, 889, 951, 960], "2020": [68, 102, 171, 184, 278, 315, 319, 461, 606, 638], "116893": [68, 278, 606], "alexand": [68, 240, 278, 281, 283, 284, 285, 288, 306, 307, 310, 319, 652], "captur": [68, 72, 101, 164, 171, 193, 210, 211, 224, 232, 233, 234, 235, 236, 302, 321, 338, 343, 529, 637, 650, 651, 655, 690, 691], "environ": [68, 69, 70, 182, 199, 202, 275, 292, 294, 304, 305, 307, 310, 318, 322, 331, 339, 340, 341, 343, 344, 346, 347, 348, 349, 373, 377, 378, 379, 382, 431, 436, 437, 438, 444, 449, 450, 451, 452, 454, 455, 456, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 504, 533, 535, 537, 541, 543, 544, 545, 546, 590, 594, 596, 624, 625, 672, 693, 711, 713, 720, 725, 726, 727, 728, 732, 735, 737, 738, 752, 755, 766, 784, 785, 836, 843, 844, 862, 864, 874, 904, 909, 910, 912, 941, 946, 951, 952, 955, 956, 957, 958, 960], "raw_empty_room_fnam": [68, 189], "ernoise_raw": [68, 189, 199, 235], "raw_empty_room": [68, 189], "85867": [68, 189, 199, 235], "142": [68, 110, 150, 189, 196, 199, 235, 237, 256, 261, 264, 268, 302, 346, 966], "965": [68, 189, 199, 235, 261], "18000": 68, "249": [68, 72, 140, 150, 178, 196, 204, 224, 237, 256, 260, 261, 278], "658": [68, 224, 261], "319": [68, 75, 99, 100, 127, 150, 168, 179, 193, 196, 204, 207, 224, 229, 278, 638], "environment": [68, 193, 227, 231, 234, 236, 238, 244, 246, 247, 318], "rest": [68, 97, 100, 137, 155, 164, 167, 189, 193, 195, 196, 245, 278, 287, 292, 311, 312, 321, 323, 333, 334, 335, 336, 344, 445, 465, 552, 553, 733, 742], "base_cov": 68, "data_cov": [68, 207, 363, 367], "fig_noise_cov": 68, "show_svd": [68, 91, 330, 871], "fig_base_cov": 68, "fig_data_cov": 68, "1680": 68, "_cov": 68, "_kw": 68, "7265": [68, 204, 206], "037795": [68, 204], "52065e": [68, 204, 206], "4402": 68, "63065e": 68, "stc_data": [68, 122, 756], "11947585": 68, "4597394": 68, "04311947": 68, "215": [68, 82, 150, 196, 213, 237, 278, 654, 966], "mne_cov_pow": [68, 82, 966], "pre": [69, 75, 167, 168, 189, 193, 207, 229, 230, 233, 244, 251, 289, 292, 299, 301, 311, 333, 334, 335, 336, 425, 552, 553, 638, 730, 733, 795, 953, 957, 962], "surfer": [69, 182, 322, 340, 344, 348, 438, 844, 904], "fswiki": [69, 182, 322, 340, 344, 348, 438, 904], "surfaceregandtempl": 69, "depict": [69, 322, 335, 336, 341, 347, 349, 886, 909], "success": [69, 171, 311, 325, 333, 334, 340, 341, 344, 345, 347, 348, 349, 431, 550, 614, 615, 674, 739, 776, 777, 779, 780, 793, 794, 795, 796, 811, 819, 834, 867], "inflat": [69, 74, 75, 80, 81, 85, 87, 155, 162, 178, 202, 219, 278, 291, 294, 307, 322, 340, 344, 348, 484, 844, 862, 904, 958], "overlaid": [69, 70, 163, 199, 291, 322, 325, 738], "tommi": [69, 70, 286, 287], "clausner": [69, 70, 286, 287], "sample_dir": [69, 70, 144, 185, 199, 202], "fname_src": [69, 162, 186, 209], "fname_fsaverage_src": 69, "fname_stc": [69, 202, 208, 274], "repres": [69, 97, 102, 108, 143, 147, 167, 168, 169, 170, 171, 176, 178, 183, 185, 188, 189, 193, 195, 196, 197, 198, 202, 217, 223, 230, 233, 247, 278, 287, 298, 303, 311, 318, 321, 322, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 346, 347, 348, 349, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 519, 528, 529, 547, 549, 550, 552, 553, 569, 575, 578, 590, 604, 616, 638, 653, 689, 700, 702, 777, 789, 790, 791, 794, 795, 796, 797, 798, 800, 844, 863, 886, 889, 891, 893, 904, 905, 909, 946], "itself": [69, 97, 170, 178, 187, 199, 216, 230, 233, 234, 235, 246, 256, 308, 311, 322, 327, 333, 334, 339, 344, 347, 377, 625, 844, 946, 951], "proxim": [69, 162, 295, 337, 784], "src_orig": [69, 344, 347], "3732": [69, 202], "3766": 69, "src_to": [69, 70, 207, 291, 292, 293, 431], "argument": [69, 70, 148, 178, 182, 188, 189, 196, 197, 199, 207, 216, 217, 218, 219, 220, 228, 229, 230, 231, 234, 238, 241, 244, 256, 260, 266, 270, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 318, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 389, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 495, 496, 498, 501, 502, 504, 506, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 535, 536, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 633, 634, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 737, 738, 740, 741, 742, 743, 753, 754, 757, 759, 760, 761, 762, 763, 764, 765, 771, 776, 777, 778, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 814, 815, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 840, 841, 842, 843, 844, 845, 846, 853, 861, 862, 866, 868, 871, 874, 877, 878, 879, 880, 881, 883, 886, 889, 890, 891, 896, 897, 898, 899, 900, 902, 903, 904, 905, 907, 909, 910, 911, 915, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945], "special": [69, 187, 196, 234, 244, 271, 275, 288, 312, 314, 322, 443, 561, 568, 956], "alwai": [69, 100, 170, 171, 176, 178, 187, 194, 195, 196, 202, 218, 227, 229, 230, 231, 232, 233, 234, 235, 236, 244, 251, 256, 271, 280, 287, 289, 291, 293, 294, 295, 302, 305, 307, 308, 309, 311, 321, 322, 331, 333, 334, 338, 340, 341, 343, 344, 346, 347, 348, 349, 388, 509, 519, 587, 638, 665, 706, 708, 776, 792, 797, 798, 853, 864, 874, 875, 905, 907, 916, 938, 949], "10239": 69, "10240": 69, "10241": 69, "give": [69, 70, 85, 97, 102, 123, 169, 179, 188, 195, 198, 207, 209, 224, 228, 230, 231, 234, 256, 285, 293, 311, 312, 318, 321, 322, 325, 330, 333, 334, 335, 336, 338, 340, 341, 342, 344, 346, 347, 348, 349, 382, 485, 486, 487, 492, 496, 501, 502, 506, 521, 523, 524, 528, 549, 550, 552, 553, 569, 637, 638, 653, 665, 676, 694, 700, 775, 776, 777, 779, 780, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 812, 822, 844, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908, 946, 951, 958], "surfer_kwarg": [69, 202, 204], "brain_inf": 69, "under": [69, 70, 87, 170, 171, 189, 217, 224, 227, 230, 231, 234, 252, 256, 258, 264, 274, 282, 285, 295, 304, 308, 309, 311, 312, 314, 318, 322, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 382, 394, 425, 426, 428, 430, 449, 450, 451, 452, 454, 455, 456, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 488, 495, 498, 501, 502, 528, 541, 543, 552, 553, 565, 573, 596, 599, 600, 611, 612, 621, 622, 643, 650, 651, 653, 684, 701, 705, 737, 738, 740, 741, 742, 750, 754, 774, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 846, 878, 881, 900, 957], "h5": [69, 70, 199, 207, 253, 287, 292, 337, 340, 341, 343, 344, 345, 347, 348, 349, 357, 637, 686, 708, 792, 816, 829, 933, 934, 938], "respect": [69, 70, 73, 81, 95, 98, 118, 159, 167, 171, 178, 183, 186, 195, 196, 199, 202, 216, 224, 228, 230, 233, 234, 236, 237, 244, 245, 261, 288, 289, 292, 293, 294, 295, 303, 304, 305, 306, 307, 309, 310, 318, 322, 328, 330, 333, 334, 335, 336, 340, 341, 342, 343, 344, 347, 348, 349, 366, 367, 368, 405, 425, 429, 430, 436, 441, 442, 443, 485, 487, 492, 496, 509, 521, 523, 525, 528, 529, 547, 549, 550, 552, 553, 559, 578, 580, 590, 593, 601, 616, 637, 638, 639, 640, 642, 653, 655, 660, 694, 702, 738, 746, 749, 751, 757, 777, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 815, 823, 824, 826, 827, 844, 846, 862, 863, 867, 870, 876, 878, 880, 881, 885, 886, 889, 890, 893, 898, 899, 901, 906, 908, 910, 946, 955, 958], "my": [69, 70, 199, 209, 251], "further": [69, 168, 178, 184, 193, 195, 205, 216, 224, 229, 233, 235, 238, 244, 256, 261, 266, 271, 293, 304, 312, 320, 322, 333, 334, 358, 360, 390, 436, 638, 642, 776, 777, 779, 780, 861, 877, 962], "assign": [69, 71, 129, 131, 148, 163, 167, 170, 171, 178, 188, 195, 197, 202, 205, 216, 217, 220, 235, 238, 245, 251, 281, 286, 292, 303, 304, 318, 322, 327, 333, 338, 343, 346, 543, 561, 565, 568, 570, 576, 578, 590, 599, 638, 655, 656, 666, 667, 669, 670, 698, 732, 844, 868, 941], "chain": [69, 194, 224, 228, 244, 320, 322, 491], "handi": [69, 218, 233, 275], "liner": 69, "shortest": [69, 183, 230, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 524, 552, 553, 643], "dougla": [69, 278, 345, 431], "greve": [69, 278, 345, 431], "lise": [69, 278, 345, 431], "der": [69, 278, 287, 292, 322, 345, 431], "haegen": [69, 278, 345, 431], "qing": [69, 278, 345, 431], "cai": [69, 278, 345, 431], "steven": [69, 84, 155, 171, 178, 230, 278, 287, 292, 294, 319, 344, 345, 431, 485, 616, 746, 751], "stufflebeam": [69, 84, 155, 278, 344, 345, 431, 616, 620, 746, 749, 751], "mert": [69, 278, 345, 431], "sabuncu": [69, 278, 345, 431], "bruce": [69, 122, 182, 278, 322, 345, 431, 605], "fischl": [69, 122, 182, 278, 322, 345, 431, 605], "marc": [69, 278, 345, 431], "brysbaert": [69, 278, 345, 431], "languag": [69, 178, 199, 230, 260, 266, 278, 288, 330, 333, 334, 335, 336, 342, 343, 345, 431, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 885, 889, 898, 901, 906, 948, 956], "asymmetri": [69, 278, 345, 431], "1477": [69, 278, 345, 431], "1492": [69, 278, 318, 345, 431], "1162": [69, 278, 345, 431, 638], "jocn_a_00405": [69, 278, 345, 431], "morph_surface_stc": [69, 82, 966], "symmetr": [70, 230, 278, 295, 306, 333, 334, 335, 336, 340, 341, 344, 345, 347, 348, 349, 431, 520, 521, 523, 524, 552, 553, 673, 776, 777, 779, 780, 792, 808, 832, 833, 834, 844, 865, 904, 909, 910], "diffeomorph": [70, 278, 295, 345, 431, 673, 832, 833, 834], "sdr": [70, 207, 292, 345, 431, 673, 832, 833, 834], "afterward": [70, 176, 293, 304, 333, 334, 335, 336, 552, 553, 733, 753], "nibabel": [70, 183, 187, 198, 209, 240, 304, 311, 322, 346, 545, 546, 671, 844, 952], "plot_glass_brain": [70, 209], "sample_dir_raw": [70, 202], "fname_t1_fsaverag": 70, "ensur": [70, 71, 110, 140, 171, 176, 186, 188, 189, 207, 228, 230, 231, 234, 236, 238, 239, 253, 283, 289, 291, 293, 294, 295, 311, 312, 314, 322, 330, 333, 334, 335, 336, 338, 339, 340, 341, 344, 347, 348, 349, 390, 412, 425, 518, 519, 520, 552, 553, 554, 572, 602, 629, 630, 631, 641, 676, 677, 708, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 812, 813, 822, 839, 951, 956, 960], "exist": [70, 127, 129, 167, 170, 176, 177, 183, 188, 197, 198, 199, 203, 207, 229, 230, 231, 234, 235, 236, 246, 251, 256, 258, 274, 275, 285, 286, 287, 288, 289, 291, 292, 295, 299, 300, 303, 310, 311, 312, 314, 318, 319, 325, 327, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 357, 377, 378, 379, 382, 383, 444, 449, 450, 451, 452, 454, 455, 456, 458, 459, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 507, 511, 515, 516, 517, 518, 520, 537, 552, 553, 554, 568, 572, 588, 623, 625, 627, 637, 638, 641, 648, 677, 696, 706, 726, 727, 730, 733, 734, 735, 739, 741, 742, 759, 760, 763, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 829, 831, 832, 844, 869, 885, 900, 933, 934, 935, 936, 937, 938, 939, 941, 942, 943, 944, 945, 946, 949, 960], "fname_src_fsaverag": 70, "root": [70, 109, 162, 163, 176, 177, 178, 186, 199, 207, 213, 218, 253, 283, 291, 311, 322, 330, 335, 336, 340, 341, 344, 347, 348, 349, 366, 367, 452, 458, 477, 789, 790, 791, 795, 796, 797, 798, 871, 880], "txt": [70, 162, 186, 207, 210, 245, 246, 287, 298, 311, 327, 400, 409, 458, 556, 560, 578, 694, 702, 703, 936, 946], "zoom": [70, 97, 178, 187, 207, 233, 235, 275, 293, 294, 303, 345, 431, 834], "reslic": [70, 207, 431, 834], "isotrop": [70, 322], "niter_affin": [70, 207, 295, 345, 431], "niter_sdr": [70, 207, 295, 345, 431], "999999888241291": 70, "translat": [70, 162, 183, 187, 207, 217, 238, 264, 281, 286, 325, 333, 334, 335, 336, 421, 436, 485, 492, 506, 564, 638, 642, 676, 789, 790, 791, 795, 796, 797, 798, 834, 844, 862, 877, 882, 885, 890, 893], "optim": [70, 85, 109, 169, 184, 187, 189, 206, 207, 229, 230, 233, 238, 256, 264, 265, 266, 278, 287, 292, 295, 299, 321, 333, 334, 335, 336, 339, 425, 485, 528, 549, 552, 553, 638, 648, 664, 676, 766, 795, 825, 828, 834, 946], "r\u00b2": [70, 207], "rigid": [70, 207, 240, 834], "compute_vol_morph_mat": [70, 293, 345, 431], "equival": [70, 162, 168, 177, 183, 185, 187, 189, 192, 198, 214, 215, 217, 230, 233, 236, 252, 256, 269, 280, 283, 305, 311, 314, 318, 321, 322, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 347, 348, 349, 366, 367, 382, 424, 485, 491, 492, 520, 521, 523, 524, 528, 529, 547, 549, 550, 552, 553, 599, 605, 616, 637, 638, 641, 643, 653, 665, 706, 735, 753, 776, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 826, 827, 834, 844, 862, 863, 870, 876, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 904, 906, 908, 909, 946, 949, 966], "reus": [70, 102, 164, 322, 335, 336, 882], "exce": [70, 256, 291, 328, 333, 334, 335, 336, 412, 414, 485, 492, 552, 553, 640, 643, 655, 776, 823, 826, 885, 899], "thousand": [70, 129, 234, 257, 278, 294, 319, 431, 466], "nifti1": [70, 345, 348, 349], "img_fsaverag": 70, "t1_fsaverag": 70, "plot_anat": [70, 203], "draw_cross": 70, "overlai": [70, 182, 187, 199, 207, 233, 284, 335, 336, 340, 341, 344, 347, 348, 349, 638, 844, 846, 881, 890, 904, 909], "add_overlai": [70, 844], "brian": [70, 223, 278, 322, 345, 431, 491], "avant": [70, 278, 345, 431], "epstein": [70, 278, 345, 431], "murrai": [70, 178, 278, 345, 431], "grossman": [70, 278, 345, 431], "jame": [70, 230, 278, 345, 431], "gee": [70, 278, 345, 431], "elderli": [70, 278, 345, 431], "neurodegen": [70, 278, 345, 431], "medic": [70, 85, 234, 235, 278, 322, 324, 345, 431, 549, 550, 605, 964], "media": [70, 278, 345, 431], "2007": [70, 207, 261, 278, 333, 334, 345, 431, 547, 638, 776, 777, 779, 780, 795, 825, 828], "197": [70, 82, 150, 196, 237, 256, 319, 966], "711": [70, 82, 236, 237, 261, 278, 333, 334, 335, 336, 552, 553, 733, 966], "morph_volume_stc": [70, 82, 966], "megin": [71, 183, 289, 309, 676], "program": [71, 178, 188, 199, 311, 322, 325, 331, 333, 334, 335, 336, 338, 343, 377, 544, 552, 553, 638, 793, 794, 799, 800, 874, 876, 893, 899, 902, 948, 956, 958, 959], "offer": [71, 208, 224, 230, 236, 253, 256, 257, 288, 311, 314, 326, 327, 844, 949, 957], "guid": [71, 182, 294, 312, 313, 323, 338, 951, 956], "ecd": [71, 192, 214, 215, 304, 321, 331, 332, 335, 336, 337, 338, 348, 424, 528, 599, 706, 753, 966], "manual": [71, 110, 148, 164, 169, 176, 178, 183, 184, 187, 188, 189, 199, 209, 216, 218, 220, 227, 228, 229, 231, 234, 238, 274, 278, 283, 286, 288, 292, 303, 304, 319, 322, 326, 329, 338, 339, 388, 398, 425, 447, 506, 518, 520, 552, 553, 638, 648, 649, 665, 676, 677, 729, 946, 958], "advantag": [71, 141, 164, 177, 178, 194, 195, 230, 232, 233, 236, 240, 256, 271, 951, 960], "graphic": [71, 182, 217, 288, 292, 302, 311, 319, 333, 334, 343, 552, 553, 638, 876, 893, 899, 951, 956, 958, 959], "everyth": [71, 132, 140, 162, 186, 187, 196, 205, 209, 219, 230, 244, 274, 311, 319, 320, 335, 336, 884, 946, 951, 954], "audvi": [71, 319], "evoked_left": [71, 239], "evoked_right": [71, 239], "09989760657919393": [71, 88], "80m": 71, "picks_left": 71, "evoked_fit_left": 71, "cov_fit_left": 71, "picks_right": 71, "evoked_fit_right": 71, "cov_fit_right": 71, "sss": [71, 189, 192, 227, 237, 242, 243, 281, 287, 292, 294, 295, 322, 333, 334, 335, 336, 338, 412, 414, 418, 419, 422, 443, 506, 552, 553, 574, 638, 649, 665, 676, 706, 876, 880, 888, 899, 946, 966], "normalize_proj": [71, 282, 338], "dip_left": 71, "dip_right": 71, "153": [71, 150, 196, 224, 237, 256, 261, 477], "38720": [71, 209], "900": [71, 108, 203, 208, 213, 223, 226, 966], "354": [71, 108, 140, 150, 196, 203, 208, 237, 261], "195": [71, 109, 112, 124, 150, 193, 196, 203, 208, 213, 237, 261, 278, 966], "9828": [71, 295], "152": [71, 150, 196, 218, 223, 224, 237, 260, 261, 270, 346], "9340": [71, 294], "prevent": [71, 97, 148, 228, 238, 281, 283, 285, 291, 292, 295, 303, 304, 305, 306, 310, 590, 643, 671, 676, 754], "lambda": [71, 94, 128, 140, 172, 224, 229, 239, 252, 271, 322, 330, 333, 334, 335, 336, 342, 384, 485, 492, 552, 553, 613, 637, 638, 653, 755, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 870, 877, 885, 889, 898, 901, 906], "fulli": [71, 102, 199, 229, 231, 256, 260, 280, 285, 314, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 390, 552, 553, 554, 770, 844, 865, 904, 909, 910], "stc_left": 71, "stc_right": 71, "sharei": [71, 100, 141, 142, 223, 231, 235, 271], "supylabel": 71, "meter": [71, 108, 121, 122, 178, 183, 184, 187, 197, 203, 209, 220, 235, 241, 251, 283, 306, 322, 325, 330, 331, 333, 334, 335, 336, 338, 339, 342, 344, 347, 351, 382, 398, 407, 436, 485, 492, 506, 552, 553, 569, 578, 596, 637, 638, 642, 647, 648, 649, 653, 658, 659, 662, 665, 676, 681, 682, 689, 700, 710, 738, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 863, 870, 874, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "kb": [71, 76, 164, 170, 203, 208, 236, 251], "7006": 71, "97034e": 71, "stcs_left": 71, "stcs_right": 71, "90m": 71, "amplitudes_left": 71, "amplitudes_right": 71, "vstack": [71, 143, 163, 168, 211, 253], "ampltud": 71, "n_left": 71, "mean_left": 71, "mean_right": 71, "transition_point": 71, "c0": [71, 178, 234], "c1": [71, 97, 140, 178, 234], "text": [71, 95, 162, 169, 178, 187, 204, 210, 216, 217, 219, 220, 230, 231, 234, 235, 245, 246, 256, 271, 274, 283, 291, 292, 308, 310, 311, 318, 322, 325, 333, 334, 346, 402, 552, 553, 578, 703, 754, 844, 936, 956], "368": [71, 82, 108, 150, 196, 198, 237, 256, 264, 966], "610": [71, 108, 237, 261], "multi_dipole_model": [71, 82, 966], "promot": [72, 85], "focal": [72, 85, 110, 207, 292, 638, 844, 914], "assum": [72, 85, 90, 101, 121, 122, 143, 152, 162, 168, 171, 178, 185, 187, 192, 199, 209, 216, 217, 220, 229, 230, 231, 233, 240, 246, 256, 258, 260, 271, 294, 295, 305, 308, 311, 321, 322, 325, 327, 330, 331, 333, 334, 335, 336, 338, 339, 342, 346, 366, 367, 373, 374, 377, 382, 395, 407, 425, 429, 430, 436, 441, 442, 443, 445, 485, 492, 504, 509, 512, 520, 526, 527, 528, 529, 535, 547, 549, 550, 552, 553, 560, 561, 568, 585, 596, 600, 608, 616, 637, 638, 652, 653, 659, 696, 703, 722, 725, 727, 738, 754, 776, 777, 779, 780, 783, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 832, 844, 862, 863, 870, 878, 880, 882, 885, 886, 887, 888, 889, 896, 898, 900, 901, 902, 906, 908, 939, 949, 960], "stationar": [72, 85, 524, 552, 553], "properti": [72, 85, 102, 129, 142, 170, 188, 199, 217, 223, 228, 233, 234, 244, 247, 274, 283, 284, 287, 288, 291, 292, 293, 306, 326, 327, 330, 331, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 372, 436, 484, 552, 553, 580, 604, 624, 638, 655, 656, 677, 739, 754, 771, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 831, 844, 847, 865, 874, 876, 880, 886, 887, 889, 891, 899, 904, 909, 910, 917, 918, 919, 920, 921, 922, 923, 949], "bias": [72, 97, 178, 193, 207, 228, 230, 235, 241, 260, 278, 291, 518, 529, 552, 553], "short": [72, 85, 92, 109, 131, 140, 142, 163, 164, 167, 187, 195, 199, 227, 230, 234, 235, 237, 239, 246, 257, 269, 271, 274, 278, 280, 282, 283, 295, 299, 311, 319, 321, 322, 323, 333, 334, 335, 336, 552, 553, 570, 681, 684, 793, 799, 801, 804, 811, 812, 815, 819, 822], "transient": [72, 109, 227, 238, 271, 643], "mathurin": [72, 278, 284, 285, 286, 291], "massia": [72, 278, 284, 285, 286, 291], "yousra": [72, 77, 121, 155, 278, 280, 282, 285, 299, 300, 302, 549, 550], "bekhti": [72, 77, 121, 155, 278, 280, 282, 285, 299, 300, 302, 549, 550], "350e": [72, 141, 270], "49948803289596966": 72, "301": [72, 140, 142, 150, 196, 219, 237, 241, 269], "16610": 72, "multidict": 72, "l1_ratio": [72, 85, 286, 550], "wsize": [72, 85, 550, 811, 819, 820], "n_tfmxne_it": [72, 550], "dgap": [72, 85], "89e": 72, "p_obj": [72, 85], "289": [72, 150, 176, 196, 223, 224, 260, 261, 278, 491, 638], "000835": 72, "d_obj": [72, 85], "190": [72, 85, 103, 108, 144, 150, 196, 211, 213, 224, 256, 261, 278, 776, 777, 779, 780], "083203": 72, "n_activ": [72, 85, 238, 419], "247": [72, 140, 150, 196, 237, 240, 261, 278, 319], "27e": 72, "253": [72, 150, 196, 224, 237, 260, 278], "327890": 72, "582652": 72, "53e": 72, "70728489606853": 72, "246": [72, 140, 150, 196, 207, 256, 260, 278], "182100742846": 72, "18e": 72, "589468": 72, "408712": 72, "82e": 72, "24368799194082": 72, "248": [72, 150, 152, 196, 215, 239, 256, 261, 966], "42055602514122": 72, "67e": [72, 85], "09497054568342": 72, "57e": 72, "99106679958624": 72, "49e": [72, 85], "93649794913645": 72, "44246671365377": 72, "08e": 72, "90687133785252": 72, "82986983078422": 72, "70e": 72, "88720460783557": 72, "0172226353639": 72, "24e": 72, "87210737833448": 72, "14858291085997": 72, "11e": 72, "872107": 72, "762424": 72, "94e": 72, "85401187838713": 72, "25962912136112": 72, "854012": 72, "259629": 72, "659": [72, 195, 223], "867870": 72, "46e": 72, "04359564810164": 72, "270": [72, 108, 140, 150, 196, 219, 224, 237, 280], "58784111574016": 72, "87e": 72, "72222975698287": 72, "272": [72, 119, 120, 140, 147, 150, 196, 198, 237, 261, 278, 746, 751, 966], "8563990998922": 72, "29e": 72, "6780129582858": 72, "8492833846": 72, "678013": 72, "849283": 72, "335": [72, 137, 140, 150, 196, 223, 235, 237, 243, 256, 261, 278, 322, 966], "966495": 72, "73e": 72, "239": [72, 95, 108, 109, 150, 185, 196, 219, 231, 237, 256, 261], "2153412769196": 72, "48179575685003": 72, "17e": 72, "09550882069445": 72, "238": [72, 98, 112, 150, 196, 256, 257, 260, 261, 966], "17850381087044": 72, "77e": 72, "06850689154575": 72, "59128622007833": 72, "068507": 72, "591286": 72, "546285": 72, "06e": 72, "223": [72, 150, 196, 237, 256, 260], "13301276504686": 72, "82666551176433": 72, "133013": 72, "826666": 72, "295": [72, 81, 82, 140, 150, 196, 261, 966], "194637": 72, "debias": [72, 85], "d0": [72, 85], "235947e": 72, "000000e": [72, 85], "irtf": 72, "comment": [72, 88, 143, 176, 177, 179, 198, 199, 213, 217, 236, 251, 270, 274, 292, 293, 294, 302, 303, 309, 311, 321, 322, 326, 332, 333, 334, 335, 336, 339, 343, 405, 543, 705, 710, 789, 790, 795, 796, 798, 829, 870, 884, 944, 951], "2015": [72, 98, 127, 129, 141, 149, 189, 230, 233, 257, 271, 278, 315, 319, 333, 334, 335, 336, 425, 461, 466, 505, 647, 775, 795, 825, 828, 886, 946], "intern": [72, 97, 98, 110, 160, 163, 187, 195, 197, 210, 218, 220, 228, 235, 238, 258, 274, 278, 281, 288, 292, 309, 311, 321, 333, 334, 335, 336, 382, 425, 430, 436, 462, 485, 506, 552, 553, 568, 574, 635, 638, 646, 647, 648, 649, 665, 676, 706, 775, 776, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 844, 892], "workshop": [72, 278, 485], "roland": [72, 278, 550], "badeau": [72, 278, 550], "trento": [72, 278, 550], "7552337": [72, 278, 550], "885": [72, 82, 261, 966], "multidict_reweighted_tfmxn": [72, 82, 966], "plane": [73, 183, 197, 234, 258, 261, 270, 321, 322, 505, 742, 797, 798, 824, 827, 864], "olaf": [73, 74, 75, 76, 80, 81, 129, 278, 291, 292, 293, 301, 305, 620, 746, 751], "hauk": [73, 74, 75, 76, 80, 81, 129, 278, 291, 292, 293, 301, 305, 620, 746, 751], "mrc": [73, 74, 75, 76, 80, 81, 322], "cbu": [73, 74, 75, 76, 80, 81, 322], "cam": [73, 74, 75, 76, 80, 81, 322], "ac": [73, 74, 75, 76, 80, 81, 218, 227, 231, 278, 321, 322, 425, 443], "uk": [73, 74, 75, 76, 80, 81, 278, 322, 425], "rougier": 73, "borrow": [73, 260, 266], "hi": [73, 325], "plot_connectivity_circl": [73, 868], "rm_mne": [73, 80], "n_label": [73, 252, 340, 341, 344, 347, 348, 349, 519, 592, 621, 622, 756], "label_color": [73, 538], "lh_label": [73, 844], "endswith": [73, 197], "label_ypo": 73, "ypo": 73, "yp": 73, "rh_label": [73, 844], "summaris": [73, 240], "five": [73, 169, 177, 198, 210, 237, 247, 278, 322, 412, 552, 553, 638, 823, 826, 844, 891], "princip": [73, 233, 234, 278, 281, 322, 339, 425, 638, 766], "probabl": [73, 97, 192, 216, 227, 228, 229, 230, 233, 234, 256, 258, 261, 271, 311, 322, 495, 514, 552, 553, 565, 844, 903, 958, 959], "n_comp": [73, 614, 615], "stcs_psf_mne": 73, "pca_vars_mn": 73, "return_pca_var": [73, 614, 615], "n_vert": 73, "printopt": 73, "caudalanteriorcingul": 73, "caudalmiddlefront": [73, 118, 123, 162], "cuneu": [73, 844], "entorhin": 73, "frontalpol": 73, "fusiform": 73, "inferiorpariet": [73, 252], "inferiortempor": 73, "insula": 73, "isthmuscingul": 73, "lateraloccipit": 73, "lateralorbitofront": 73, "lingual": 73, "medialorbitofront": 73, "middletempor": 73, "paracentr": 73, "parahippocamp": [73, 95], "parsoperculari": 73, "parsorbitali": 73, "parstriangulari": 73, "pericalcarin": 73, "postcentr": [73, 95], "posteriorcingul": 73, "precentr": [73, 162], "precuneu": 73, "rostralanteriorcingul": 73, "rostralmiddlefront": [73, 252], "superiorfront": [73, 162], "superiorpariet": 73, "superiortempor": 73, "supramargin": 73, "temporalpol": 73, "transversetempor": [73, 252], "overal": [73, 235, 258, 264, 265, 274, 294, 312, 550], "bigger": [73, 108, 265, 274, 333, 334, 552, 553], "leaker": 73, "psfs_mat": 73, "pearson": [73, 230, 233, 278, 332, 333, 334, 335, 336, 638, 789, 790, 791, 795, 796, 797, 798], "arbitrari": [73, 143, 187, 192, 193, 194, 198, 220, 230, 251, 254, 258, 261, 285, 287, 291, 301, 302, 304, 312, 322, 330, 332, 333, 334, 335, 336, 342, 485, 492, 552, 553, 570, 638, 656, 667, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 885, 892, 898, 906], "absolut": [73, 87, 109, 113, 152, 162, 178, 206, 217, 256, 291, 303, 311, 321, 328, 332, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 429, 485, 492, 519, 552, 553, 556, 614, 615, 620, 638, 655, 688, 738, 750, 782, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 864, 870, 878, 885, 890, 898, 910, 958], "leakage_mn": 73, "node_ord": [73, 850], "mirror": [73, 94, 97, 197, 292, 314, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 523, 524, 525, 552, 553, 861, 865, 904, 910], "node_angl": [73, 850], "start_po": [73, 850], "group_boundari": [73, 850], "subplot_kw": 73, "n_line": 73, "node_color": 73, "neighbour": [73, 291, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 885, 889, 898, 901, 906, 908], "deeper": [73, 80, 81, 207, 322], "versu": [73, 168, 178, 193, 245, 253, 368, 789, 790, 791, 795, 796, 797, 798, 960], "fname_fig": 73, "plot_label_leakag": 73, "png": [73, 143, 150, 199, 264, 266, 285, 306, 325, 343], "savefig": [73, 143], "inde": [73, 97, 168, 195, 202, 234, 235, 271], "max_val": 73, "brain_lh": 73, "caudal": [73, 118, 123, 844], "pos_lim": [73, 80, 81, 207, 252, 264, 340, 341, 344, 347, 348, 349, 865, 904, 909, 910], "brain_rh": 73, "541": [73, 82, 224, 258, 261, 278, 506, 966], "psf_ctf_label_leakag": [73, 82, 966], "fname_evo": [74, 75, 76, 80, 81, 91], "regularis": [74, 80, 81, 617], "rm_lor": 74, "stc_psf": 74, "stc_ctf": 74, "31738": [74, 80, 81], "68644e": [74, 80, 81], "vertno_lh": 74, "verttru": [74, 75], "maxima": [74, 172, 303, 310, 333, 334, 335, 336, 685, 883, 885], "vert_max_psf": 74, "vert_max_ctf": 74, "brain_psf": 74, "ventral": [74, 844], "add_foci": [74, 75, 76, 187, 202, 204, 253, 303, 844], "coords_as_vert": [74, 75, 76, 202, 204, 253, 844], "22842778": 74, "2956258": 74, "85246681": 74, "brain_ctf": 74, "10932369": 74, "16149934": 74, "93351158": 74, "psf_ctf_vertic": [74, 82, 966], "vi": [75, 177, 261, 333, 870], "cov_pr": 75, "post": [75, 148, 207, 230, 235, 238, 311, 312, 313, 321, 946, 958, 959], "cov_post": 75, "4433": 75, "filters_pr": 75, "weight_norm": [75, 207, 253, 285, 287, 288, 292, 366, 367], "filters_post": 75, "rm_pre": 75, "stc_pre": 75, "rm_post": 75, "stc_post": 75, "brain_pr": 75, "ndata": 75, "brain_post": 75, "983": [75, 82, 261, 966], "436": [75, 82, 150, 256, 278, 966], "psf_ctf_vertices_lcmv": [75, 82, 966], "coars": 76, "don": [76, 123, 143, 145, 148, 168, 171, 172, 173, 184, 185, 186, 189, 195, 198, 228, 231, 233, 234, 235, 241, 244, 258, 259, 260, 261, 266, 271, 275, 302, 303, 310, 311, 312, 323, 325, 328, 333, 334, 444, 564, 565, 627, 677, 693, 700, 702, 738, 776, 779, 794, 946, 953, 958, 960], "src_vol": 76, "forward_vol": 76, "3375": 76, "1045": [76, 224], "895": [76, 237], "015000": [76, 236], "860": [76, 108, 219, 222, 223, 237, 966], "304": [76, 137, 140, 150, 153, 177, 196, 198, 211, 257, 275, 302], "488": [76, 150, 224, 256, 261], "233": [76, 150, 196, 215, 237, 966], "492": [76, 150, 237], "inverse_operator_vol": 76, "rm_lor_vol": 76, "sources_vol": 76, "stc_psf_vol": 76, "140193": 76, "7904e": 76, "66519": 76, "31885e": 76, "1209": [76, 223, 224, 237], "verttrue_vol": 76, "max_vert_idx": 76, "unravel_index": [76, 208, 258], "vert_max_ctf_vol": 76, "brain_psf_vol": 76, "plot_3d": [76, 162, 207, 292, 293, 348, 349], "volume_opt": [76, 340, 341, 344, 347, 348, 349, 844, 904, 909], "32501697": 76, "38884743": 76, "87974682": 76, "894": [76, 82, 157, 159, 966], "psf_volum": [76, 82, 966], "recurs": [77, 86, 187, 230, 278, 325, 340, 344, 348, 369, 371, 737, 904], "n100": [77, 86, 193, 219, 230, 235], "1834": [77, 86], "ori": [77, 86, 203, 207, 210, 212, 213, 253, 331, 366, 367, 505, 528], "24703241416441227": [77, 86], "7764326014867741": [77, 86], "5797649538395561": [77, 86], "5154591813858822": [77, 86], "5345116895485351": [77, 86], "6697753997131923": [77, 86], "332": [77, 140, 150, 196, 219, 256, 278, 369], "1999": [77, 140, 271, 278, 322, 332, 333, 334, 335, 336, 369, 425, 638, 674, 789, 790, 791, 795, 796, 797, 798], "740118": [77, 278, 369], "inv_fnam": 78, "fmri": [78, 224, 278, 319, 321, 322, 549, 550, 605], "fmri_prior": 78, "rr": [78, 187, 188, 202, 205, 346, 413, 415, 416, 417, 719, 722, 738, 758, 939], "use_tri": [78, 187, 346], "8192": [78, 209, 212, 484], "664": [78, 82, 157, 161, 966], "read_invers": [78, 82, 966], "nb": [79, 552, 553], "565": [79, 82, 224, 261, 966], "read_stc": [79, 82, 966], "localis": [80, 81, 212, 256, 257, 278, 307, 620, 776, 777, 779, 780], "mimic": [80, 81, 486, 509, 605], "ple": [80, 81, 620], "sd": [80, 81, 271, 751, 793, 794, 799, 800], "ple_mne_psf": 80, "peak_err": [80, 81, 620], "sd_mne_psf": 80, "sd_ext": [80, 81, 620], "rm_dspm": 80, "ple_dspm_psf": 80, "sd_dspm_psf": 80, "brain_ple_mn": 80, "brain_ple_dspm": 80, "subtract": [80, 81, 92, 97, 100, 135, 141, 148, 161, 168, 178, 203, 230, 236, 238, 256, 258, 283, 300, 302, 321, 322, 325, 328, 329, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 347, 348, 349, 356, 366, 367, 424, 425, 429, 430, 441, 442, 443, 485, 492, 493, 528, 529, 547, 549, 550, 552, 553, 554, 616, 621, 622, 638, 639, 655, 676, 706, 707, 730, 733, 776, 779, 789, 790, 791, 793, 795, 796, 797, 798, 799, 814, 815, 886, 906], "diff_pl": [80, 81], "brain_ple_diff": [80, 81], "superfici": [80, 207, 322], "brain_sd_mn": 80, "brain_sd_dspm": 80, "diff_sd": [80, 81], "brain_sd_diff": [80, 81], "wors": [80, 198, 318, 676], "stenroo": [80, 81, 86, 278, 371, 620, 746, 751], "matthia": [80, 81, 278, 303, 304, 620], "treder": [80, 81, 278, 620], "biorxiv": [80, 81, 253, 278, 366, 367, 620], "2019": [80, 81, 92, 103, 168, 236, 239, 256, 261, 278, 315, 333, 334, 620, 654, 683, 776, 777, 779, 780, 795, 810, 812, 822, 825, 828, 958], "1101": [80, 81, 142, 253, 278, 366, 367, 620], "672956": [80, 81, 278, 620], "resolution_matrix": 81, "spatial_resolut": 81, "fname_fwd_emeg": 81, "forward_emeg": 81, "forward_meg": 81, "inv_emeg": 81, "inv_meg": 81, "63485": 81, "05542e": 81, "rm_emeg": 81, "ple_psf_emeg": 81, "sd_psf_emeg": 81, "rm_meg": 81, "ple_psf_meg": 81, "sd_psf_meg": 81, "brain_ple_emeg": 81, "emeg": 81, "brain_ple_meg": 81, "bring": [81, 97, 183, 208, 233, 246, 322, 338, 348, 349, 506, 649, 665, 676, 910], "brain_sd_emeg": 81, "brain_sd_meg": 81, "resolution_metrics_eegmeg": [81, 82, 966], "vector_mne_solut": [82, 87, 966], "609": [82, 178, 278, 966], "time_frequency_mixed_norm_invers": [82, 85, 966], "950": [82, 85, 108, 163, 166, 237, 271, 966], "source_space_snr": [82, 84, 966], "689": [82, 84, 966], "snr_estim": [82, 83, 966], "padma": [84, 278, 291, 654], "sundaram": [84, 278, 291, 654], "tottochan": 84, "kaisu": [84, 291], "lankinen": [84, 291], "klankinen": 84, "inv_op": [84, 252], "snr_stc": [84, 344], "maxidx": 84, "med": [84, 122, 163, 193, 224, 252], "viridi": [84, 129, 150, 163, 170, 256, 274, 792, 888], "70263": [84, 205], "18949e": [84, 205], "evoked_eeg": [84, 176, 235], "inv_op_eeg": 84, "stc_eeg": 84, "snr_stc_eeg": 84, "7499": [84, 118], "118742": [84, 118], "155292": [84, 118], "81981": 84, "0644e": 84, "goldenholz": [84, 278, 344], "seppo": [84, 278, 344, 616, 746, 751], "ahlfor": [84, 278, 344, 506, 616, 746, 751], "dahlia": [84, 278, 344], "sharon": [84, 278, 344], "mamiko": [84, 278, 344], "ishitobi": [84, 278, 344], "lucia": [84, 155, 278, 344], "vaina": [84, 155, 278, 344], "magnetoencephalographi": [84, 184, 205, 278, 322, 333, 334, 344, 505, 749, 795, 825, 828], "1002": [84, 111, 205, 269, 278, 318, 333, 334, 335, 336, 344, 552, 553, 684, 742, 778, 789, 791, 793, 795, 797, 799, 808, 814], "hbm": [84, 205, 278, 318, 344, 778], "20571": [84, 278, 344], "206": [84, 150, 196, 237, 260], "built": [85, 167, 177, 178, 184, 186, 192, 193, 194, 202, 208, 231, 233, 239, 244, 248, 249, 256, 285, 289, 291, 294, 304, 311, 331, 333, 334, 335, 336, 338, 374, 398, 399, 408, 437, 514, 536, 537, 552, 553, 574, 596, 600, 672, 723, 757, 784, 799, 833, 844, 862, 946, 947, 957, 958, 962, 966], "fourier": [85, 131, 230, 269, 271, 278, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 789, 791, 793, 795, 797, 799, 801, 804, 808, 811, 812, 814, 815, 819, 822, 823, 824, 826, 827], "henc": [85, 101, 142, 169, 177, 183, 189, 202, 218, 232, 235, 244, 256, 269, 271, 321, 332, 333, 334, 335, 336, 343, 789, 790, 791, 795, 796, 797, 798, 859, 946, 959], "minima": [85, 310, 333, 334, 685], "slightli": [85, 97, 101, 187, 207, 211, 230, 235, 238, 239, 260, 274, 282, 292, 295, 307, 318, 319, 322, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 430, 552, 553, 608, 616, 766, 844, 883], "eventu": [85, 163, 311, 318, 388, 399, 657], "020865": [85, 122, 205, 253], "96729": 85, "38524e": 85, "descent": [85, 278, 280, 295, 298, 549], "4411": 85, "845725527499": 85, "4408": [85, 211, 219], "353440672158": 85, "4410": 85, "859492179654": 85, "2929455873245": 85, "51e": 85, "670058": 85, "519426": 85, "61e": 85, "669663490482": 85, "668049322227": 85, "669663": 85, "668049": 85, "547913e": 85, "049948803289596964": [85, 123, 206, 208], "2996928197375818": [85, 167, 176, 178, 258], "10e": [85, 95, 118, 123], "15e": 85, "20e": [85, 333, 334, 343, 552, 553, 876, 899], "medial": [85, 266, 776, 777, 844], "yellow": [85, 235, 335, 336, 861, 880, 897], "scalar_thresh": [85, 844], "stationari": [85, 107, 233, 235, 240, 278, 318, 418, 550], "422": [85, 150, 256, 278, 550], "051": [85, 167, 169, 176, 196, 228, 253, 278, 550], "sparsiti": [85, 278, 550, 749], "g\u00e1bor": [85, 278, 550], "sz\u00e9keli": [85, 278, 550], "horst": [85, 278, 550], "hahn": [85, 278, 550], "editor": [85, 219, 278, 310, 311, 320, 333, 334, 402, 547, 550, 638, 795, 825, 828, 956], "6801": [85, 278, 550], "page": [85, 199, 230, 247, 278, 285, 286, 296, 303, 310, 311, 312, 313, 314, 316, 318, 322, 323, 333, 334, 399, 460, 550, 552, 553, 638, 795, 812, 822, 823, 825, 826, 828, 844, 876, 899, 946, 947, 951, 953, 956, 958, 959, 962], "611": [85, 223, 278, 425, 550], "springer": [85, 253, 278, 366, 367, 460, 550, 638], "berlin": [85, 253, 278, 366, 367, 550], "heidelberg": [85, 253, 278, 366, 367, 550], "1007": [85, 178, 234, 235, 236, 253, 278, 322, 366, 367, 485, 550, 605, 638, 654, 754], "22092": [85, 278, 550], "0_49": [85, 278, 550], "220": [85, 108, 140, 150, 164, 196, 213, 224, 237, 256, 261], "truncat": [86, 106, 114, 147, 153, 177, 228, 235, 245, 275, 278, 286, 289, 331, 332, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 371, 508, 514, 552, 553, 566, 789, 790, 791, 795, 796, 797, 798, 870], "th\u00e9odor": [86, 289, 307], "papadopoulo": [86, 289, 307, 309], "theodor": [86, 307], "niko": [86, 278, 322, 371], "m\u00e4kel\u00e4": [86, 278, 371, 465], "jukka": [86, 203, 205, 278, 281, 371], "sarva": [86, 203, 278, 371], "risto": [86, 205, 234, 235, 278, 322, 371, 605], "ilmoniemi": [86, 205, 234, 235, 278, 322, 371, 605], "167": [86, 150, 196, 224, 233, 237, 243, 261, 278, 371, 966], "2018": [86, 103, 111, 155, 164, 224, 233, 253, 278, 315, 366, 367, 371, 638, 683, 684], "2017": [86, 111, 178, 233, 278, 291, 315, 371, 465, 638, 684, 749, 754], "013": [86, 92, 156, 167, 168, 176, 178, 196, 253, 278, 371], "magnitud": [87, 90, 97, 140, 141, 162, 169, 172, 176, 177, 193, 195, 205, 207, 227, 228, 230, 245, 253, 264, 265, 292, 341, 347, 349, 425, 485, 506, 529, 613, 643, 649, 665, 676, 685, 781, 887, 909, 946, 951], "accomplish": [87, 162, 176, 188, 198, 318, 319, 322, 951, 958], "hood": [87, 170, 217, 227, 230, 231, 234, 274, 282, 957], "impos": [87, 223, 229, 294, 812, 822], "underli": [87, 187, 193, 230, 234, 256, 257, 269, 278, 286, 289, 292, 306, 327, 332, 333, 334, 335, 336, 339, 344, 485, 559, 667, 789, 790, 791, 795, 796, 797, 798, 834], "getter": [87, 204, 284], "peak_tim": [87, 202], "get_peak": [87, 176, 178, 202, 204, 205, 207, 274, 281, 285, 286, 301, 304, 335, 336, 340, 341, 344, 347, 348, 349], "movi": [87, 162, 163, 204, 208, 292, 844], "save_movi": [87, 162, 163, 204, 208, 292, 844], "time_dil": [87, 162, 163, 204, 208, 844], "framer": [87, 162, 163, 204, 208, 844], "time_view": [87, 137, 153, 162, 163, 204, 208, 219, 274, 292, 335, 336, 340, 341, 344, 347, 348, 349, 844, 846, 881, 904, 909], "browser": [87, 148, 162, 198, 199, 204, 208, 219, 244, 280, 303, 309, 311, 325, 333, 334, 343, 552, 553, 626, 638, 853, 858, 876, 893, 899, 915, 931, 952], "video": [87, 148, 162, 183, 187, 188, 204, 208, 304, 307, 319, 920, 948], "tag": [87, 148, 162, 167, 171, 178, 192, 204, 208, 272, 273, 278, 283, 291, 294, 295, 303, 308, 311, 314, 319, 321, 325, 333, 334, 338, 343, 382, 398, 509, 563, 587, 635, 793, 853, 908, 966], "95048065": 87, "56941314": 87, "72451438": 87, "stc_max": 87, "cosin": [87, 118, 230, 251, 322, 744], "source_nn": [87, 337, 366, 367], "brain_max": 87, "975978731472672": 87, "90575168": 87, "52414196": 87, "71336747": 87, "brain_norm": 87, "83607509": 87, "44726242": 87, "57923594": 87, "lot": [87, 97, 179, 185, 187, 193, 196, 228, 230, 232, 233, 234, 239, 244, 246, 274, 311, 430, 436, 504, 535, 696, 725, 727, 939], "fname_inv_fix": 87, "inv_fix": 87, "stc_fix": 87, "brain_fix": [87, 205], "00351751": 87, "62842071": 87, "43519503": 87, "pars": [88, 167, 178, 192, 198, 200, 201, 218, 229, 245, 283, 288, 291, 292, 293, 294, 301, 302, 305, 309, 321, 326, 327, 333, 338, 352, 514, 526, 533, 552, 561, 568, 569, 576, 584, 598, 628, 703, 966], "elekta": [88, 111, 183, 192, 214, 215, 238, 282, 283, 286, 297, 319, 322, 326, 330, 331, 333, 334, 335, 336, 338, 343, 372, 425, 505, 526, 528, 552, 553, 601, 862, 874, 876, 886, 899, 914, 962, 966], "triux": [88, 210, 309, 319, 321, 322, 326, 333, 334, 335, 336, 462, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "dacq": [88, 319, 326], "accordingli": [88, 177, 185, 205, 217, 244, 287, 322, 328, 333, 334, 335, 336, 552, 553, 561, 568, 574, 677, 795, 796], "multimodal_raw": 88, "grad_ssp_upright": 88, "mag_ssp_upright": 88, "v4": [88, 237, 238], "v5": [88, 237, 238], "183600": 88, "576599": 88, "960": [88, 106, 108, 112, 129, 170, 241, 257, 319, 966], "categori": [88, 140, 172, 283, 285, 291, 311, 321, 322, 323, 326, 405, 707, 841], "acqpars": [88, 283, 326, 552], "get_condit": [88, 326], "plot_topo": [88, 177, 179, 193, 247, 269, 270, 280, 285, 286, 292, 299, 302, 306, 307, 333, 334, 335, 336, 391, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 965], "background_color": [88, 159, 285, 335, 336, 884], "cat": [88, 140], "flat": [88, 110, 139, 162, 167, 168, 177, 208, 228, 229, 230, 234, 235, 236, 238, 281, 288, 292, 295, 299, 310, 318, 321, 326, 328, 333, 334, 340, 344, 348, 428, 430, 638, 640, 650, 651, 655, 656, 665, 775, 844, 904], "fiff": [88, 143, 183, 187, 281, 283, 289, 291, 293, 294, 296, 299, 300, 301, 302, 309, 319, 333, 334, 337, 343, 346, 552, 553, 555, 557, 570, 587, 588, 638, 650, 651, 830, 853], "fname_out": [88, 853], "118": [88, 150, 196, 224, 237, 256, 260, 261, 278, 297, 638], "0812": [88, 196], "0123": [88, 172, 193, 196, 244], "0942": [88, 196], "2232": [88, 196, 223, 405], "newcat": 88, "longer": [88, 142, 172, 189, 194, 195, 199, 219, 228, 229, 230, 231, 233, 256, 271, 281, 282, 283, 284, 287, 288, 289, 291, 292, 293, 295, 299, 302, 303, 304, 308, 310, 311, 322, 333, 334, 335, 336, 338, 412, 509, 520, 524, 526, 552, 553, 640, 676, 795, 823, 824, 826, 827, 844, 856, 876, 879, 914, 946, 958], "reqev": [88, 326], "requir": [88, 137, 162, 163, 167, 169, 171, 177, 183, 185, 188, 189, 193, 195, 197, 198, 199, 209, 217, 218, 219, 220, 224, 227, 230, 231, 233, 236, 238, 240, 244, 251, 253, 256, 257, 260, 264, 284, 285, 286, 287, 288, 290, 291, 292, 293, 295, 302, 308, 310, 312, 314, 318, 319, 321, 322, 325, 326, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 366, 367, 373, 378, 382, 425, 426, 427, 428, 430, 431, 434, 458, 484, 485, 487, 488, 492, 494, 495, 498, 501, 502, 523, 524, 526, 528, 541, 543, 545, 546, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 592, 596, 597, 599, 600, 608, 611, 612, 621, 622, 637, 638, 640, 643, 650, 651, 653, 668, 677, 685, 694, 731, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 785, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 838, 844, 846, 863, 869, 876, 878, 881, 885, 889, 893, 898, 899, 900, 901, 904, 906, 908, 909, 915, 951, 953, 956, 957], "reqwithin": [88, 326], "reqwhen": [88, 326], "freeli": 88, "elekta_epoch": [88, 93, 966], "scratch": [90, 167, 176, 192, 216, 218, 219, 244, 254, 255, 271, 333, 334, 335, 336, 338, 445, 552, 553, 598, 794, 799, 800, 815, 966], "exampleio": 90, "won": [90, 178, 234, 235, 246, 260, 278, 333, 334, 335, 336, 431, 552, 553, 638, 706, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 834], "consult": [90, 230, 234, 311, 312, 318, 322, 676, 946, 958], "reader": [90, 193, 202, 216, 234, 244, 281, 282, 286, 287, 289, 291, 292, 293, 302, 304, 305, 308, 309, 314, 322, 400, 551, 559, 561, 562, 563, 565, 568, 571, 572, 574, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 700, 702, 704, 949], "fakedata": 90, "nof": 90, "lazi": 90, "analogsign": 90, "multichannel": [90, 97, 140, 178, 224, 238, 278, 506, 646, 649, 676], "sampling_r": 90, "show_scrollbar": [90, 103, 178, 233, 239, 251, 289, 333, 334, 552, 553, 638, 876, 893, 899], "100000": [90, 522], "99999": [90, 514], "read_neo_format": [90, 93, 966], "ev_info": 91, "15972": 91, "468": [91, 93, 150, 224, 227, 232, 256, 261, 278, 637, 691, 966], "read_noise_covariance_matrix": [91, 93, 966], "analyz": [92, 98, 167, 192, 195, 207, 220, 224, 227, 228, 230, 231, 238, 241, 245, 246, 256, 278, 294, 295, 311, 318, 322, 333, 334, 511, 641, 647, 772, 950], "pabr": 92, "maddox": [92, 278, 280, 285, 295, 301], "lab": [92, 95, 313, 314], "clemen": [92, 140, 280, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 307, 308, 309, 310, 964], "brunner": [92, 140, 280, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 307, 308, 309, 310, 964], "pyxdf": [92, 217], "p001_se": 92, "s004_task": 92, "default_run": 92, "001_eeg_a2": 92, "stream": [92, 217, 228, 231, 288, 309, 314], "header": [92, 141, 152, 183, 187, 209, 217, 219, 240, 282, 283, 285, 286, 288, 291, 292, 294, 295, 303, 335, 336, 366, 367, 409, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 551, 560, 563, 565, 580, 581, 583, 585, 616, 886], "load_xdf": 92, "time_seri": 92, "assert": [92, 137, 167, 171, 176, 183, 198, 213, 219, 245, 253, 256, 258, 289, 306, 310, 312], "four": [92, 97, 101, 168, 171, 178, 193, 212, 230, 256, 266, 278, 318, 322, 323, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 863, 878, 885, 889, 898, 901, 906, 908], "plu": [92, 193, 195, 204, 209, 213, 230, 233, 235, 237, 260, 282, 292, 303, 320, 322, 344, 347, 815, 959], "rerefer": 92, "bipolar": [92, 94, 219, 232, 233, 256, 283, 288, 302, 333, 334, 335, 336, 552, 553, 730, 733], "subselect": [92, 144, 170, 176, 177, 178, 193, 244, 258, 261, 269, 271, 282, 283, 292, 332, 333, 334, 335, 336, 338, 442, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 946], "uv": [92, 282, 333, 334, 335, 336, 552, 553], "preamp": 92, "nominal_sr": 92, "100e": [92, 172, 178, 229, 253], "2320128": 92, "2320127": 92, "232": [92, 150, 171, 196, 224, 237, 256, 260, 261], "melissa": [92, 278], "polonenko": [92, 278], "ross": [92, 278, 280, 285, 295, 301], "brainstem": [92, 278], "hear": [92, 278, 680], "2331216519871395": [92, 278], "1177": [92, 129, 257, 278, 319, 466], "read_xdf": [92, 93, 966], "930": [93, 108, 237, 261], "mastoid": [94, 217, 236, 333, 334, 335, 336, 552, 553, 733], "bone": [94, 340, 341, 344, 347, 348, 349, 844, 904, 909], "sleep": [94, 165, 166, 192, 195, 278, 288, 321, 327, 333, 477, 478, 514, 568, 694, 793, 879, 946, 966], "ssvep_fold": [94, 197], "ssvep_data_raw_path": [94, 197], "se": [94, 197, 229, 240, 271, 322], "02_se": [94, 197, 271], "ssvep_eeg": [94, 197, 271], "vhdr": [94, 163, 197, 271, 285, 302, 304, 319, 322, 518, 552, 553, 694], "easycap": [94, 197, 256, 271, 291, 308], "467579": 94, "579": [94, 96, 211, 215, 224, 261, 966], "tp9": 94, "tp10": 94, "m2": [94, 236, 333, 334, 335, 336, 552, 553, 733], "midlin": [94, 156, 196, 197, 247, 257, 307, 394], "return_ch_nam": [94, 307, 394], "rereferenc": [94, 194, 271], "rereferenced_midline_ch": 94, "alter": [94, 236, 238, 244, 293, 305, 327, 677], "anod": [94, 236, 285, 288, 730], "cathod": [94, 236, 288, 730], "strip": [94, 140, 278], "suffix": [94, 286, 303, 325, 343, 552, 553, 561, 566, 568], "replac": [94, 106, 115, 129, 168, 170, 178, 186, 199, 216, 218, 229, 234, 235, 238, 244, 246, 278, 280, 282, 283, 285, 287, 288, 292, 293, 294, 295, 303, 306, 307, 309, 310, 311, 322, 330, 333, 334, 335, 336, 342, 343, 485, 492, 507, 520, 552, 553, 565, 583, 603, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 823, 824, 863, 885, 889, 898, 901, 906, 956, 958, 961], "unreferenc": [94, 730], "add_channel": [94, 97, 102, 241, 287, 294, 305, 333, 334, 335, 336, 552, 553, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "467580": 94, "o1": [94, 97, 156, 186, 251, 271], "po9": [94, 271], "p7": [94, 97, 156, 186, 577], "p3": [94, 97, 156, 171, 186, 577], "cp5": [94, 156, 577], "cp1": [94, 97, 156], "t7": [94, 156, 186, 197, 304, 330, 333, 334, 335, 336, 338, 342, 382, 485, 492, 552, 553, 577, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "c3": [94, 140, 156, 171, 186, 577], "fc1": [94, 97, 156, 551], "fc5": [94, 156, 577], "f3": [94, 97, 156, 171, 186, 236, 577], "f7": [94, 171, 186, 405, 577], "fp1": [94, 171, 186, 236, 251, 405, 521, 524, 561, 568, 656, 667], "o2": [94, 156, 186, 251, 271], "po10": [94, 271], "p8": [94, 97, 156, 186], "p4": [94, 97, 156, 171, 186], "cp6": [94, 156], "cp2": [94, 97, 156], "c4": [94, 97, 140, 156, 171, 186], "t8": [94, 97, 156, 186, 197, 304, 330, 333, 334, 335, 336, 338, 342, 382, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "fc2": [94, 97, 156], "fc6": [94, 97, 156], "f4": [94, 97, 156, 171, 186, 197, 236], "f8": [94, 171, 186], "fp2": [94, 171, 186, 251, 405, 521, 524, 656, 667], "still": [94, 97, 102, 106, 143, 148, 169, 170, 171, 187, 198, 216, 217, 227, 228, 230, 231, 232, 234, 236, 238, 240, 244, 247, 256, 264, 287, 293, 295, 298, 307, 311, 320, 333, 338, 346, 390, 436, 504, 535, 552, 638, 676, 696, 725, 727, 771, 789, 795, 854, 869, 870, 911, 939, 951, 958], "fpz": [94, 156, 197, 233, 304, 330, 333, 334, 335, 336, 338, 342, 382, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "oz": [94, 97, 156, 186, 197, 271, 304, 330, 333, 334, 335, 336, 338, 342, 382, 485, 492, 552, 553, 637, 638, 653, 738, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "338": [94, 112, 140, 150, 196, 223, 256, 966], "227": [94, 150, 178, 196, 237, 260, 261, 278, 319, 461], "contralateral_referenc": [94, 112, 966], "facilit": [95, 140, 162, 163, 194, 218, 224, 257, 288, 291, 292, 293, 305, 314, 318, 322, 333, 334, 335, 336, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "subcort": [95, 278, 295, 654], "samuelsson": [95, 278, 295, 654], "johnsam": 95, "mit": [95, 98, 178, 278, 319, 322, 547, 647, 961], "all_label": 95, "select_label": 95, "hiplab": 95, "postcenlab": 95, "cortical_waveform": 95, "waveform": [95, 127, 230, 232, 235, 239, 278, 341, 347, 349, 739, 741, 755, 756, 775, 905, 959], "pi": [95, 118, 121, 122, 123, 142, 230, 235, 251, 252, 253, 322, 613, 685, 755, 812, 820, 822, 823, 826], "subcortical_waveform": 95, "data_fun": [95, 120, 121, 122, 755], "isin": [95, 140, 148, 171], "evoked_subcort": [95, 654], "n_proj": [95, 654], "fft": [95, 136, 160, 230, 231, 269, 271, 280, 283, 295, 299, 306, 310, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 493, 497, 498, 525, 552, 553, 611, 621, 622, 792, 801, 802, 803, 804, 805, 806, 808, 815, 821, 823, 824, 825, 826, 827, 828, 900], "rfft": 95, "psd_proc": 95, "transax": 95, "footbibliographi": [95, 311], "081": [95, 112, 966], "put": [96, 142, 144, 152, 168, 171, 182, 183, 188, 197, 199, 209, 210, 212, 223, 230, 233, 244, 251, 252, 253, 256, 274, 304, 311, 335, 336, 339, 458, 844, 880], "earli": [96, 97, 168, 199, 228, 230, 271, 278, 328, 333, 334, 335, 336, 552, 553, 597, 699], "button": [96, 98, 122, 149, 156, 167, 169, 171, 179, 183, 188, 193, 195, 219, 227, 229, 234, 245, 246, 247, 289, 294, 303, 304, 311, 319, 330, 333, 334, 335, 336, 342, 343, 485, 492, 511, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 876, 877, 878, 880, 882, 885, 889, 898, 899, 900, 901, 906, 908], "press": [96, 98, 141, 149, 156, 167, 169, 171, 178, 179, 183, 188, 193, 195, 199, 219, 227, 229, 245, 246, 247, 278, 284, 288, 289, 319, 333, 334, 425, 511, 524, 547, 552, 553, 638, 647, 876, 891, 893, 899], "590": [96, 108, 134, 137, 195, 201, 261, 966], "millisecond": [96, 109, 140, 167, 172, 176, 195, 244, 264, 265, 266, 304, 308, 310, 327, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 511, 552, 553, 789, 790, 791, 795, 796, 797, 798, 844, 904, 909], "late": [96, 189, 946], "quickli": [96, 192, 193, 223, 233, 234, 246, 280, 282, 291, 311, 323], "slowli": 96, "quick": [96, 100, 121, 210, 227, 270, 311, 603, 789], "reference_id": [96, 156, 511], "smilei": [96, 98, 122, 179, 193, 195, 245, 319], "target_id": [96, 156, 511], "new_id": [96, 156, 511, 603], "hit": [96, 271, 286, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 877, 878, 882, 885, 889, 898, 901, 906, 908], "fill_na": [96, 511], "fill": [96, 252, 285, 298, 301, 339, 344, 346, 347, 431, 511, 541, 552, 553, 668, 756, 785, 844, 965], "events_": 96, "besid": [96, 229, 234], "tmin_": 96, "tmax_": 96, "8522": [96, 293], "10649": 96, "12859": 96, "14830": 96, "16850": 96, "18826": 96, "21224": [96, 223], "23200": 96, "25272": 96, "27243": 96, "29525": 96, "31530": 96, "33481": 96, "35611": 96, "38007": 96, "08643728": 96, "532": [96, 236], "78723509": 96, "352": [96, 108, 150, 196, 198, 261], "97154325": 96, "359": [96, 108, 140, 150, 196, 261], "63138369": 96, "446": [96, 150, 237, 256, 261, 278, 316], "20930939": 96, "40611816": 96, "512": [96, 99, 150, 343, 346, 484], "80771377": 96, "ft": [96, 169, 172, 193, 229, 235, 270, 321, 322, 325, 330, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 485, 492, 552, 553, 593, 637, 638, 653, 665, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 877, 878, 880, 882, 885, 889, 898, 901, 906, 907, 908], "conduct": [97, 98, 129, 178, 185, 219, 256, 257, 258, 260, 278, 291, 304, 311, 313, 318, 321, 322, 325, 594, 601, 658, 746, 751], "undesir": [97, 232, 304, 638], "otherwis": [97, 110, 148, 171, 178, 189, 199, 216, 229, 230, 261, 264, 266, 285, 292, 311, 322, 327, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 357, 366, 367, 372, 382, 394, 407, 425, 429, 430, 431, 441, 442, 443, 458, 478, 485, 492, 520, 523, 524, 528, 529, 543, 547, 549, 550, 552, 553, 561, 563, 568, 602, 603, 604, 605, 611, 616, 637, 638, 653, 658, 694, 703, 725, 726, 728, 734, 738, 755, 774, 775, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 808, 820, 831, 834, 844, 846, 862, 863, 870, 874, 876, 877, 878, 880, 881, 882, 883, 884, 885, 886, 889, 896, 898, 899, 900, 901, 902, 904, 905, 906, 908, 909, 936, 951], "introduc": [97, 103, 167, 168, 176, 178, 192, 193, 200, 202, 227, 229, 230, 231, 233, 234, 235, 240, 244, 264, 266, 294, 314, 322, 328, 333, 334, 335, 336, 390, 552, 553, 638, 876, 880, 899, 946], "smear": [97, 107, 108, 169, 230, 271, 304, 675, 823, 824, 826, 827], "unfortun": [97, 189, 946], "brigd": 97, "far": [97, 110, 167, 168, 171, 184, 198, 205, 229, 230, 231, 234, 236, 244, 245, 256, 274, 310, 322, 436, 565, 641, 776, 777, 779, 780, 824, 827, 870], "address": [97, 101, 124, 125, 193, 230, 256, 257, 264, 265, 266, 278, 311, 338, 776, 777, 779, 780, 958], "Or": [97, 148, 198, 227, 237, 251, 311, 653, 789], "quantifi": [97, 239, 271, 344], "outcom": 97, "awar": [97, 131, 167, 171, 194, 195, 241, 246, 258, 264, 284, 308, 333, 334, 335, 336, 338, 552, 553, 883], "mitig": [97, 207, 230, 231, 238, 322], "confound": [97, 178, 638], "psychophysiologi": [97, 98, 127, 168, 178, 230, 261, 278, 647, 775, 776, 777, 779, 780], "cpmc": 97, "columbia": 97, "ebridg": 97, "html": [97, 170, 196, 198, 278, 281, 285, 288, 292, 294, 295, 301, 305, 309, 311, 325, 343, 653, 734], "linearsegmentedcolormap": [97, 861], "nearli": [97, 311], "exactli": [97, 167, 171, 202, 211, 224, 244, 271, 274, 291, 292, 294, 640, 775, 864, 908], "suffici": [97, 228, 230, 238, 258, 291, 311, 318, 322, 333, 334, 335, 336, 338, 351, 425, 552, 553, 596, 876, 899, 946, 951, 958], "portion": [97, 205, 227, 229, 244, 270, 307, 311, 312, 333, 334, 391, 552, 553, 638, 876, 893, 899, 946], "plenti": 97, "settl": [97, 366], "ed_data": 97, "raw_data": 97, "1959919512423807e": 97, "665886892347761": 97, "iz": 97, "43673209034739": 97, "fcz": [97, 171, 271], "fc4": [97, 171], "f2": 97, "4835197413857302e": 97, "5878177987698265": 97, "fc3": [97, 171, 577], "cp3": [97, 577], "af7": 97, "af3": 97, "af4": 97, "af8": 97, "f5": [97, 577], "fz": [97, 156, 171, 186, 251, 257, 518, 552, 553, 568], "ft8": 97, "tp8": 97, "p5": [97, 577], "p1": [97, 140, 239], "p6": 97, "po3": [97, 156, 271], "po4": [97, 156, 271], "po8": [97, 156, 271, 304], "746002687400852": 97, "cz": [97, 140, 156, 171, 186, 197, 217, 219, 234, 236, 251, 257, 304, 333, 334, 335, 336, 552, 553, 733], "c2": [97, 140, 234], "cp4": 97, "pz": [97, 156, 170, 186, 219, 251, 257], "p2": [97, 140], "590631749463075": 97, "f6": 97, "understand": [97, 162, 171, 218, 230, 271, 307, 311, 314, 322, 323], "physiologi": 97, "clip": [97, 199, 247, 292, 309, 325, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 899, 901, 906, 908], "bridged_idx": [97, 646, 675, 866], "ed_matrix": [97, 646, 866], "ax1": [97, 113, 118, 127, 164, 210, 223], "ax2": [97, 113, 118, 124, 127, 164, 210, 223, 258, 259], "triangular": [97, 187, 188, 318, 322, 339, 719, 776, 777, 779, 780, 905, 944], "ed_plot": 97, "triu_idx": 97, "triu_indic": 97, "idx0": 97, "idx1": 97, "nanmedian": 97, "im1": 97, "cax1": 97, "set_label": [97, 224, 256], "mu": [97, 230, 256, 303, 646], "im2": 97, "cax2": 97, "histogram": [97, 185, 333, 334, 876], "previou": [97, 101, 150, 167, 171, 178, 188, 197, 198, 199, 208, 229, 230, 234, 236, 247, 283, 287, 289, 292, 295, 311, 335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 491, 492, 528, 529, 547, 549, 550, 616, 648, 665, 676, 844, 864, 886, 956, 961], "pair": [97, 131, 148, 164, 171, 195, 216, 217, 218, 220, 224, 238, 239, 256, 264, 271, 282, 285, 294, 299, 307, 311, 325, 330, 333, 334, 335, 336, 338, 340, 341, 344, 346, 347, 348, 349, 352, 357, 372, 485, 492, 552, 553, 577, 604, 637, 638, 646, 658, 675, 687, 719, 776, 778, 779, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 831, 844, 862, 866, 867, 870, 878, 884, 885, 889, 901, 904, 906, 908, 909, 944], "isnan": 97, "arrang": [97, 178, 192, 197, 247, 274, 278, 394, 789, 790, 791, 795, 796, 797, 798, 850], "light": [97, 164, 169, 198, 218, 228, 303, 319, 321, 333, 334, 335, 336, 488, 495, 552, 553, 638, 844, 876, 880, 893, 899], "horizont": [97, 108, 162, 167, 168, 169, 207, 219, 227, 238, 256, 289, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 638, 658, 844, 865, 880, 892, 893, 899, 904, 909], "stand": [97, 182, 196, 202, 311, 750, 962], "insert": [97, 178, 196, 244, 330, 338, 357, 372, 511, 527, 604, 658, 831, 850], "syring": 97, "tip": [97, 233, 278, 425, 947, 949, 956], "saniti": [97, 148, 171, 209, 213, 230, 284, 292, 314, 521, 754], "implausibli": [97, 230, 256, 782], "interestingli": [97, 322], "though": [97, 102, 140, 178, 183, 187, 195, 199, 206, 210, 218, 227, 230, 231, 233, 234, 235, 240, 256, 286, 319, 321, 322, 338, 518, 552, 553, 848], "distinct": [97, 98, 224, 278, 330, 333, 334, 335, 336, 485, 492, 552, 553, 637, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 901, 906, 908], "unlik": [97, 167, 168, 176, 177, 183, 187, 197, 208, 227, 230, 232, 244, 283, 318, 322, 332, 333, 334, 335, 336, 341, 347, 349, 432, 462, 493, 677, 797, 798, 799, 800, 909], "ch1": 97, "ch2": [97, 251], "9760": [97, 110], "9759": [97, 110], "lesser": [97, 288, 293, 552, 553, 899], "trough": [97, 171], "monoton": [97, 129, 564, 671, 849], "discrep": [97, 310, 322], "driven": [97, 224, 256, 443, 492, 547], "flatten": [97, 147, 234, 256, 260, 266, 278, 291, 863], "axvspan": [97, 124, 178], "compel": 97, "evid": [97, 141, 230, 231, 278, 333, 334, 638, 795, 825, 828], "judici": [97, 311], "electrolyt": [97, 278, 646], "tri": [97, 187, 188, 195, 202, 205, 285, 320, 322, 333, 334, 339, 340, 344, 346, 348, 388, 436, 508, 540, 719, 722, 738, 758, 762, 765, 904, 939], "those": [97, 102, 106, 127, 169, 171, 178, 184, 188, 192, 193, 195, 196, 197, 198, 199, 202, 207, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 241, 244, 245, 246, 251, 252, 256, 274, 280, 289, 292, 304, 311, 312, 318, 322, 325, 328, 333, 334, 335, 336, 338, 340, 341, 344, 346, 347, 348, 349, 366, 380, 382, 394, 397, 426, 427, 428, 430, 440, 441, 487, 491, 501, 506, 508, 509, 514, 537, 552, 553, 564, 583, 616, 624, 637, 638, 640, 641, 654, 655, 656, 664, 668, 672, 682, 684, 691, 738, 741, 742, 757, 775, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 823, 824, 826, 827, 870, 876, 877, 880, 882, 883, 890, 897, 899, 900, 948, 951], "biolog": [97, 227, 231, 234, 235, 278, 318, 322, 605], "midwai": [97, 675], "aid": [97, 278, 303, 307, 675], "recov": [97, 193, 289, 436], "impli": [97, 189, 252, 271, 338, 400, 435, 568, 946], "unbridg": 97, "ch0": 97, "bridged_idx_simul": 97, "data_orig": 97, "rng": [97, 120, 121, 122, 142, 223, 230, 256, 590, 638, 674, 693, 741, 742, 743, 752, 753, 755, 776, 777, 778, 779, 780], "random": [97, 111, 118, 120, 121, 122, 142, 186, 218, 219, 223, 227, 230, 233, 253, 256, 257, 259, 264, 265, 266, 285, 286, 288, 549, 590, 638, 674, 693, 741, 742, 743, 752, 753, 755, 776, 777, 778, 779, 780], "default_rng": [97, 259], "seed": [97, 118, 123, 140, 142, 233, 252, 253, 257, 259, 264, 265, 266, 285, 299, 543, 590, 638, 674, 693, 741, 742, 743, 752, 753, 755, 768, 776, 777, 778, 779, 780], "raw_sim": [97, 121, 122], "bridged_data": 97, "tile": [97, 142], "raw_virtu": 97, "data_virtu": 97, "raw_comp": 97, "data_comp": 97, "With": [97, 135, 142, 149, 189, 198, 199, 216, 219, 234, 235, 240, 246, 253, 311, 312, 321, 322, 333, 334, 335, 336, 351, 527, 552, 553, 578, 638, 726, 844, 881, 894, 946, 955, 960, 962], "comp": [97, 196, 287, 338], "108628963104301e": 97, "1398345563221063e": 97, "brought": [97, 183], "impend": 97, "quest": 97, "technician": [97, 318, 319], "noisi": [97, 120, 169, 177, 228, 230, 235, 238, 241, 256, 264, 266, 271, 295, 318, 338, 665, 666, 669, 741, 742, 753], "bid": [97, 163, 198, 278, 287, 292, 293, 294, 295, 314, 319, 333, 334, 382, 552, 553, 952, 959], "tsv": [97, 213, 294, 400], "kohm": 97, "passiv": [97, 227], "accept": [97, 122, 167, 196, 198, 199, 216, 228, 229, 230, 233, 234, 235, 244, 282, 284, 285, 286, 287, 289, 291, 292, 294, 295, 303, 304, 305, 307, 308, 309, 310, 311, 313, 328, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 384, 415, 430, 449, 450, 451, 458, 460, 552, 553, 578, 640, 655, 656, 774, 776, 777, 779, 780, 793, 794, 799, 800, 844, 877, 878, 884, 902, 944], "from_list": 97, "impedance_cmap": 97, "cn": [97, 908], "cax": [97, 140, 144, 261, 274], "omega": [97, 137], "hopefulli": [97, 227, 271, 525], "convinc": [97, 178], "tenk": [97, 98, 278, 646, 647], "kayser": [97, 98, 278, 646, 647], "electroencephalogram": [97, 278, 646], "offici": [97, 98, 218, 278, 303, 311, 312, 578, 638, 646, 647, 702, 948, 960], "feder": [97, 278, 638, 646], "112": [97, 143, 150, 196, 198, 235, 236, 237, 243, 244, 249, 256, 260, 261, 278, 646, 966], "545": [97, 224, 278, 646], "550": [97, 108, 189, 224, 253, 261, 278, 506, 646], "march": [97, 278, 303, 646], "s1388": [97, 140, 278, 646], "2457": [97, 140, 278, 646], "00553": [97, 278, 646], "arnaud": [97, 278, 638, 646], "delorm": [97, 278, 638, 646], "scott": [97, 140, 171, 241, 278, 303, 304, 307, 308, 309, 310, 318, 509, 547, 638, 646], "makeig": [97, 140, 171, 278, 318, 509, 547, 638, 646], "134": [97, 150, 196, 237, 256, 260, 278, 346, 603, 646], "jneumeth": [97, 102, 230, 261, 278, 505, 638, 646, 749, 776, 777, 779, 780], "2003": [97, 223, 271, 278, 318, 491, 646], "009": [97, 100, 149, 156, 167, 176, 196, 253, 278, 646], "605": [97, 112, 966], "eeg_bridg": [97, 112, 966], "laplacian": [98, 223, 278, 285, 291, 497, 647, 733], "sharper": [98, 230], "impact": [98, 164, 205, 228, 271, 282, 302, 485], "166799": [98, 194, 209, 232], "714": [98, 194, 209, 232], "date": [98, 100, 101, 104, 108, 109, 110, 118, 121, 168, 173, 178, 194, 195, 196, 217, 227, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 274, 282, 283, 286, 287, 288, 289, 291, 293, 303, 304, 308, 310, 311, 325, 327, 333, 334, 335, 336, 338, 552, 553, 554, 565, 568, 580, 677, 788, 951], "decemb": [98, 100, 104, 108, 109, 110, 118, 121, 168, 173, 178, 194, 195, 196, 227, 228, 229, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 253, 274], "2002": [98, 100, 104, 110, 118, 121, 140, 168, 173, 178, 193, 194, 195, 196, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 253, 274, 278, 322, 327, 605, 771, 773, 778], "gmt": [98, 100, 104, 108, 109, 110, 118, 121, 168, 173, 178, 194, 195, 196, 227, 228, 229, 231, 233, 234, 235, 236, 238, 239, 241, 244, 245, 246, 247, 253, 274], "146": [98, 100, 104, 110, 118, 121, 150, 168, 173, 178, 193, 194, 195, 196, 224, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 244, 245, 246, 247, 253, 260, 261, 274, 278], "hh": [98, 100, 101, 104, 108, 109, 110, 118, 121, 168, 173, 178, 194, 195, 227, 228, 229, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 253, 274], "ss": [98, 100, 101, 104, 108, 109, 110, 118, 121, 168, 173, 178, 194, 195, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 253, 274, 322], "raw_csd": 98, "421": [98, 135, 138, 150, 169, 189, 203, 209, 232, 252, 259, 260, 261], "evoked_csd": 98, "stiff": [98, 647], "flexibl": [98, 170, 199, 217, 240, 293, 295, 305, 844], "set_size_inch": [98, 232], "this_evoked_csd": 98, "contour": [98, 129, 148, 185, 199, 270, 284, 285, 292, 301, 309, 325, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 672, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 846, 863, 864, 878, 881, 882, 885, 889, 898, 901, 906, 908, 965], "n\u03bb\u00b2": 98, "perrin": [98, 106, 228, 278, 322, 647], "pernier": [98, 106, 228, 278, 322, 647, 812, 822, 823, 826], "bme": [98, 278, 647], "1987": [98, 203, 230, 278, 647], "326089": [98, 278, 647], "jacqu": [98, 106, 228, 278, 322, 647, 812, 822, 823, 826], "olivi": [98, 106, 228, 278, 322, 425, 638, 647, 812, 822, 823, 826], "fran\u0107oi": [98, 106, 228, 278, 322, 647], "echalli": [98, 106, 228, 278, 322, 647], "184": [98, 103, 106, 150, 196, 228, 237, 260, 261, 278, 322, 647, 683], "187": [98, 103, 106, 150, 196, 224, 228, 237, 260, 261, 278, 322, 638, 647], "1989": [98, 106, 228, 278, 322, 647], "90180": [98, 106, 228, 278, 322, 647], "mike": [98, 278, 647], "cohen": [98, 147, 278, 287, 647, 810, 812, 822, 863], "theori": [98, 192, 205, 238, 278, 647, 676], "j\u00fcrgen": [98, 233, 278, 638, 647], "craig": [98, 278, 647], "methodologi": [98, 129, 278, 425, 647], "electrophysiologi": [98, 278, 647], "171": [98, 103, 150, 155, 196, 224, 230, 233, 237, 261, 278, 281, 460, 616, 647, 683, 746, 751], "173": [98, 150, 172, 185, 196, 224, 237, 261, 278, 346, 647], "ijpsycho": [98, 278, 647], "eeg_csd": [98, 112, 966], "eog_event_id": 99, "eog_ev": [99, 229, 327, 651, 667, 670], "add_ev": [99, 199, 287, 301, 343, 552, 553], "audr": 99, "visr": 99, "squeez": [99, 168, 260, 261, 266], "1502": [99, 199, 229, 233], "237": [99, 112, 140, 150, 196, 237, 966], "eog_artifact_histogram": [99, 112, 966], "basic": [100, 110, 140, 177, 178, 185, 188, 189, 192, 193, 198, 199, 200, 203, 221, 227, 232, 233, 234, 235, 238, 244, 247, 248, 253, 272, 273, 278, 295, 319, 322, 325, 333, 338, 382, 398, 445, 462, 520, 563, 635, 793, 908, 966], "thorough": [100, 192, 228, 323], "elimin": [100, 196, 232, 234, 238, 256, 264, 266, 297, 322, 426, 427, 428, 485, 668, 946], "slow": [100, 156, 164, 168, 171, 177, 230, 232, 239, 278, 311, 319, 333, 334, 477, 478, 490, 611, 612, 674, 814, 834, 878], "drift": [100, 168, 230, 232, 239, 240, 293, 518, 552, 553, 638, 690], "1653": [100, 102], "offpca": [100, 104, 121, 194, 195, 196, 227, 228, 229, 231, 233, 234, 235, 238, 244, 245, 246, 247], "offaverag": [100, 121, 196, 229, 233], "raw_clean": [100, 111, 232, 684], "evoked_befor": 100, "evoked_aft": 100, "epochs_aft": 100, "spatial_color": [100, 122, 127, 164, 171, 177, 178, 235, 247, 251, 284, 285, 289, 305, 333, 334, 335, 336, 552, 553, 793, 794, 799, 800, 880, 883, 900], "076": [100, 112, 966], "eog_regress": [100, 112, 966], "invalu": 101, "brief": [101, 118, 123, 193, 227, 247, 256, 311], "h\u00f6chenberg": [101, 237, 270, 282, 284, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 964], "hoechenberg": [101, 237, 270], "eriksen": [101, 171], "flanker": [101, 171, 319], "infil": [101, 171], "core_subject": [101, 171], "001_task": [101, 171, 240], "flankers_eeg": [101, 171], "core": [101, 131, 171, 193, 195, 198, 217, 251, 278, 283, 291, 293, 311, 312, 314, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 488, 495, 498, 501, 502, 528, 541, 543, 552, 553, 596, 599, 600, 611, 612, 621, 622, 643, 650, 651, 676, 728, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 846, 878, 881, 900, 951, 952, 959], "935935": [101, 171], "913": [101, 171, 207, 215, 261, 966], "33793": [101, 171], "heog_left": 101, "heog_right": 101, "veog_low": 101, "1024": [101, 142, 237, 776, 777, 779, 780], "all_ev": [101, 171], "all_event_id": [101, 171], "compat": [101, 164, 171, 198, 280, 282, 285, 287, 289, 294, 295, 299, 300, 302, 307, 308, 310, 322, 326, 328, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 390, 433, 443, 458, 466, 491, 493, 496, 498, 499, 500, 520, 521, 523, 524, 544, 552, 553, 611, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862, 876, 878, 899, 900, 911, 946, 958, 960], "target_left": [101, 171], "target_right": [101, 171], "incompat": [101, 171, 284, 292, 710, 716, 951], "row_ev": [101, 171, 509], "fall": [101, 170, 178, 195, 198, 238, 246, 282, 291, 294, 321, 322, 326, 343, 436, 478, 509, 526, 640], "until": [101, 169, 228, 229, 236, 239, 322, 328, 331, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 544, 551, 552, 553, 638, 641, 793, 794, 799, 800, 841, 844, 874, 876, 893, 899, 902], "metadata_tmin": [101, 171], "metadata_tmax": [101, 171], "event_nam": [101, 171, 261, 509, 512, 927, 929], "551758": [101, 171], "434570": [101, 171], "058594": 101, "549805": 101, "020508": 101, "508789": [101, 171], "516602": 101, "965820": 101, "503906": [101, 171], "449219": [101, 171], "542969": [101, 171], "464844": 101, "931641": 101, "524414": 101, "900391": 101, "416016": [101, 171], "916992": 101, "484375": [101, 171], "466797": [101, 171], "899414": 101, "450195": [101, 171], "906250": 101, "982422": 101, "432617": [101, 171], "960938": 101, "473633": 101, "411133": [101, 171], "875000": 101, "458984": 101, "977539": 101, "401367": 101, "460938": 101, "012695": 101, "532227": 101, "976562": 101, "480469": 101, "426758": 101, "010742": 101, "565430": 101, "445312": 101, "glanc": 101, "3rd": [101, 216, 227, 340, 341, 344, 347, 348, 349, 775], "wide": [101, 187, 193, 244, 311, 312], "becom": [101, 163, 168, 209, 229, 230, 232, 233, 238, 240, 264, 265, 266, 303, 311, 312, 314, 322, 333, 334, 335, 336, 659, 690, 867, 882, 960], "ultim": [101, 245, 311], "aris": [101, 188, 227, 665], "difficult": [101, 187, 217, 229, 261, 322, 638], "One": [101, 118, 124, 125, 128, 168, 170, 176, 177, 178, 182, 184, 193, 198, 205, 219, 229, 230, 232, 233, 240, 244, 256, 278, 304, 311, 318, 322, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 382, 384, 512, 518, 552, 553, 638, 771, 778, 864, 876, 877, 893, 899, 948], "workaround": [101, 286], "first_respons": [101, 171, 509], "challeng": [101, 178, 240, 278, 314, 319, 946], "paass": 101, "express": [101, 196, 228, 295, 299, 312, 322, 502, 514, 561, 568, 576, 613, 632, 665, 694, 711, 810], "026": [101, 112, 156, 167, 176, 196, 213, 253, 278, 966], "epochs_metadata": [101, 112, 966], "intermitt": 102, "extern": [102, 178, 207, 216, 238, 278, 303, 318, 319, 322, 333, 334, 335, 336, 412, 414, 418, 506, 515, 516, 517, 518, 552, 553, 638, 648, 649, 665, 676, 795, 796], "magnet": [102, 108, 147, 177, 183, 203, 216, 231, 232, 240, 261, 275, 278, 310, 318, 319, 321, 413, 605, 638, 652, 863, 953], "fail": [102, 235, 283, 285, 288, 295, 303, 305, 306, 307, 308, 309, 311, 312, 429, 436, 504, 506, 535, 569, 570, 648, 649, 665, 676, 694, 696, 700, 725, 727, 939], "succe": [102, 188, 198, 958], "choos": [102, 109, 135, 142, 143, 162, 168, 173, 178, 187, 189, 207, 208, 217, 223, 227, 230, 231, 232, 233, 238, 258, 271, 285, 292, 306, 311, 312, 326, 333, 334, 340, 341, 344, 346, 347, 348, 349, 389, 526, 561, 568, 605, 613, 637, 643, 650, 664, 666, 669, 676, 703, 752, 755, 775, 844, 862, 865, 904, 909, 910, 946, 951], "made": [102, 144, 182, 199, 227, 230, 256, 282, 284, 287, 293, 299, 302, 303, 304, 308, 311, 312, 319, 333, 334, 339, 341, 346, 347, 349, 384, 398, 561, 568, 690, 754, 877, 879, 909, 951], "whose": [102, 123, 171, 195, 197, 216, 224, 253, 294, 312, 322, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 514, 519, 528, 529, 547, 549, 550, 552, 553, 597, 616, 638, 643, 653, 655, 656, 666, 742, 791, 797, 799, 870, 873, 876, 886, 891, 900, 901, 924, 925, 928], "particularli": [102, 188, 218, 232, 256, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 509, 512, 552, 553, 638, 665, 955], "heavi": [102, 264, 266, 293, 946], "jeff": [102, 278, 293, 295, 303, 638], "hanna": [102, 278, 288, 289, 306, 307, 638], "sample_reference_meg_nois": 102, "refmeg": 102, "165353": 102, "30000": [102, 484], "select_pick": 102, "plot_kwarg": [102, 184, 232, 240], "raw_tog": 102, "ica_kwarg": 102, "picard": [102, 104, 110, 233, 286, 638, 959], "fit_param": [102, 104, 199, 285, 288, 291, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 502, 638, 639], "all_pick": 102, "ica_tog": 102, "allow_ref_meg": [102, 638], "bad_comp": 102, "find_bads_ref": [102, 295, 638], "plot_properti": [102, 110, 193, 233, 283, 285, 288, 292, 293, 294, 304, 638, 949], "147": [102, 150, 196, 224, 256, 260, 261], "dpss": [102, 110, 131, 132, 164, 169, 170, 193, 199, 233, 269, 270, 288, 306, 333, 334, 335, 336, 498, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814, 824, 827], "raw_sep": 102, "ref_pick": 102, "ica_ref": 102, "ica_sep": 102, "think": [102, 171, 199, 224, 230, 256, 313, 321], "ekg": [102, 163], "cardiac": [102, 239], "ref_comp": 102, "get_sourc": [102, 284, 301, 638], "ref_": 102, "recognis": 102, "cora": [102, 278, 294, 304, 638], "kim": [102, 278, 294, 304, 638], "nadia": [102, 278, 638], "voggel": [102, 278, 638], "magnetoencephalograph": [102, 278, 638], "108592": [102, 278, 638], "794": [102, 112, 171, 237, 261, 966], "find_ref_artifact": [102, 112, 966], "fnir": [103, 192, 196, 197, 221, 222, 242, 243, 278, 283, 291, 292, 293, 294, 295, 303, 304, 309, 321, 322, 333, 334, 335, 336, 338, 381, 382, 398, 424, 443, 445, 514, 552, 553, 577, 583, 586, 635, 678, 679, 680, 682, 683, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862, 870, 879, 884, 959, 966], "mail": [103, 256, 961], "robertluk": 103, "net": [103, 197, 223, 278, 304, 322, 491, 771, 958], "exact": [103, 131, 231, 256, 264, 271, 278, 285, 302, 304, 321, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 359, 502, 552, 553, 605, 776, 778, 779, 792, 801, 803, 804, 806, 956], "fnirs_data_fold": [103, 239], "fnirs_cw_amplitude_dir": [103, 239], "raw_intens": [103, 239], "npad": [103, 108, 109, 219, 223, 264, 265, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 525, 552, 553, 946], "raw_od": [103, 239], "new_annot": [103, 246], "317": [103, 140, 150, 196, 256, 261], "set_annot": [103, 108, 109, 164, 195, 219, 229, 246, 287, 288, 289, 327, 333, 334, 552, 553, 640, 677, 965], "23238": [103, 239], "2974": [103, 239], "464": [103, 150, 171, 198, 239, 346], "spike": [103, 110, 229, 318, 326, 683], "person": [103, 178, 220, 239, 311, 312, 318, 338], "optod": [103, 218, 239, 292, 294, 310, 319, 586, 680, 844, 862], "corrupted_data": 103, "450": [103, 108, 150, 168, 187, 256, 303, 346], "750": [103, 108, 170, 224, 319], "corrupted_od": 103, "245": [103, 150, 196, 212, 229, 237, 256, 278, 322], "8924": 103, "8923": 103, "suppli": [103, 129, 179, 199, 207, 235, 251, 256, 286, 288, 289, 292, 293, 294, 295, 331, 332, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 431, 458, 509, 519, 520, 552, 553, 638, 653, 682, 683, 730, 789, 790, 791, 795, 796, 797, 798, 869, 870, 889], "corrected_tddr": 103, "said": [103, 202], "fishburn": [103, 278, 683], "ruth": [103, 278, 683], "ludlum": [103, 278, 683], "chandan": [103, 278, 683], "vaidya": [103, 278, 683], "andrei": [103, 278, 683], "medvedev": [103, 278, 683], "tddr": [103, 278, 292, 304, 683], "motion": [103, 278, 291, 642, 683], "025": [103, 127, 130, 156, 163, 167, 176, 196, 219, 227, 230, 253, 256, 278, 661, 683, 966], "fnirs_artifact_remov": [103, 112, 966], "pierreablin": 104, "9009": [104, 199, 233], "run_ica": [104, 282, 288, 291], "fit_tim": 104, "ica_comparison": [104, 112, 966], "evoked_interp": 106, "product": [106, 114, 147, 153, 177, 197, 216, 217, 223, 228, 235, 275, 278, 304, 312, 322, 333, 334, 338, 401, 498, 769, 795, 824, 825, 827, 828, 854], "evoked_interp_mn": 106, "\u03b1": [106, 169, 235, 247], "0e": [106, 223, 235], "interpolate_bad_channel": [106, 112, 966], "bilater": [107, 235, 291, 737], "repeat": [107, 121, 129, 141, 167, 188, 192, 194, 234, 235, 244, 245, 256, 262, 263, 267, 268, 280, 288, 291, 299, 302, 303, 311, 327, 333, 334, 335, 336, 338, 344, 346, 431, 509, 552, 604, 605, 619, 635, 638, 653, 685, 703, 718, 761, 770, 772, 773, 777, 780, 781, 791, 795, 844, 884, 946, 960, 966], "head_po": [107, 108, 237, 238, 291, 506, 665, 676, 740, 741, 742, 754], "simulated_quat": 107, "simulated_movement_raw": 107, "raw_stat": 107, "simulated_stationary_raw": 107, "34208": 107, "955": [107, 110, 170, 237], "backward": [107, 230, 280, 282, 283, 287, 289, 295, 302, 322, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 443, 485, 491, 492, 496, 513, 520, 521, 523, 524, 552, 553, 611, 793, 794, 799, 800, 844, 878, 887, 911], "quiver": [107, 331, 844, 874, 888], "306m": [107, 137, 144, 152, 153, 177, 183, 185, 197, 199, 210, 275], "topo_kwarg": [107, 168], "evoked_stat": 107, "naiv": [107, 260], "therebi": [107, 202, 232, 234, 322, 824, 827], "third": [107, 122, 123, 178, 196, 199, 216, 235, 239, 246, 311, 322, 327, 527, 552, 553, 638, 702, 779, 780, 797, 798, 799, 800], "restor": [107, 229, 236, 292, 298, 335, 336, 485, 489, 638, 639, 688, 844, 937], "raw_sss": [107, 199, 238, 325, 552, 553, 574, 676], "evoked_raw_mc": 107, "harmon": [107, 121, 210, 211, 219, 227, 231, 237, 238, 271, 278, 307, 322, 652], "fourth": [107, 230, 246, 322, 543], "cleanli": [107, 196], "evoked_evo_mc": 107, "movement_compens": [107, 112, 966], "contamin": [108, 230, 233, 278, 638], "similarli": [108, 127, 140, 170, 176, 198, 224, 230, 236, 239, 320, 322, 327, 638, 870], "suffer": [108, 318], "adonai": [108, 109, 291, 292], "nune": [108, 109, 278, 291, 292, 749], "data_path_meg": 108, "raw_fname1": [108, 219], "s01_aef_20131218_01": [108, 109, 219], "raw_fname2": [108, 219], "s01_aef_20131218_02": [108, 219], "mismatch": [108, 187, 188, 219, 284, 287, 306, 425, 519, 613, 903], "on_mismatch": [108, 219, 295, 425, 432, 434, 937], "350": [108, 140, 144, 145, 150, 168, 187, 196, 224, 237], "s01_20131218_01": [108, 109, 219], "2400": [108, 109, 211, 219], "864000": [108, 109, 219], "263": [108, 109, 140, 150, 196, 219, 237, 238], "udio001": [108, 109], "eab": [108, 109], "s01": [108, 109], "lt": [108, 143], "br": 108, "gt": 108, "chpi_loc": [108, 237, 413, 415, 416, 417], "original_head_dev_t": 108, "invert_transform": [108, 162], "average_head_dev_t": 108, "val": [108, 129], "val_ori": 108, "010": [108, 122, 156, 167, 176, 182, 196, 253, 278], "020": [108, 156, 167, 176, 196, 253], "090": [108, 237], "280": [108, 140, 150, 196, 197, 304, 408], "290": [108, 140, 150, 171, 196, 211, 237, 278, 749], "430": [108, 150, 261], "460": [108, 150, 211, 219, 229, 256, 261, 278, 316], "470": [108, 150, 223, 237, 256], "490": [108, 150, 224], "510": [108, 150, 171, 237, 256, 261, 271], "520": [108, 150, 261], "540": [108, 253, 261, 278, 366, 367], "560": [108, 164, 166, 224, 236, 261, 966], "620": 108, "630": 108, "640": [108, 210, 237, 251], "680": [108, 202, 215, 261, 966], "690": 108, "720": [108, 237, 278, 319, 646], "730": 108, "740": [108, 237, 261], "760": [108, 237, 261], "780": 108, "790": [108, 237, 261], "810": [108, 237, 261], "820": [108, 231, 237, 261], "830": 108, "840": [108, 251, 255, 966], "850": [108, 237, 303], "870": [108, 111, 112, 261, 278, 773, 966], "880": [108, 207, 237, 261, 278, 366, 367], "890": [108, 237, 261, 278, 346], "910": [108, 261], "940": [108, 237, 261], "970": [108, 167, 175, 237, 261, 966], "980": [108, 233, 237, 261], "353": [108, 140, 150, 196, 237, 256], "355": [108, 150, 196], "356": [108, 150, 196, 256], "369": [108, 150, 196, 278, 322, 605, 749], "361": [108, 137, 150, 157, 160, 196, 237, 256, 265, 966], "362": [108, 140, 150, 196, 252, 257, 261], "363": [108, 150, 196, 224], "372": [108, 150, 196, 224, 256], "373": [108, 150, 157, 196, 966], "379": [108, 150], "382": [108, 112, 150, 256, 278, 749, 966], "385": [108, 150, 237], "388": [108, 150, 278], "392": [108, 150, 261], "393": [108, 150, 261], "mean_distance_limit": [108, 642], "0015": 108, "annotation_mov": 108, "hpi_disp": [108, 642], "disp": 108, "0015m": 108, "0036m": 108, "new_dev_head_t": 108, "ctf_275": [108, 152, 211], "033": [108, 112, 167, 176, 196, 253, 966], "movement_detect": [108, 112, 966], "contract": [109, 312], "clench": [109, 233], "jaw": [109, 233], "swallow": [109, 227, 233], "twitch": 109, "cranial": 109, "notic": [109, 111, 167, 168, 170, 172, 176, 177, 178, 183, 187, 189, 193, 194, 197, 202, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 244, 246, 247, 251, 252, 311, 665], "taken": [109, 122, 164, 169, 220, 228, 232, 234, 235, 261, 264, 271, 285, 288, 292, 312, 319, 326, 327, 335, 336, 338, 339, 343, 344, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 551, 552, 553, 616, 674, 694, 792, 808, 886, 899], "analyt": [109, 141, 278, 296, 300, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "divid": [109, 129, 169, 170, 171, 174, 175, 189, 192, 238, 256, 258, 261, 274, 301, 321, 323, 333, 334, 335, 336, 338, 339, 340, 341, 344, 347, 348, 349, 356, 550, 552, 553, 597, 621, 622, 643, 646, 650, 676, 710, 766, 776, 779, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 811, 819, 878, 902, 906, 946, 966], "squar": [109, 141, 156, 167, 176, 177, 178, 189, 195, 196, 205, 217, 230, 244, 251, 253, 256, 258, 269, 278, 291, 321, 322, 330, 333, 334, 335, 336, 340, 341, 342, 344, 347, 348, 349, 366, 367, 397, 485, 492, 529, 552, 553, 613, 620, 637, 638, 653, 769, 774, 776, 777, 779, 780, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 844, 863, 871, 872, 878, 880, 885, 887, 889, 892, 898, 901, 904, 906, 908, 909, 946], "hundr": [109, 233, 234, 543], "bad_muscl": [109, 643], "min_length_good": [109, 643], "fraction": [109, 141, 171, 202, 227, 233, 256, 305, 312, 396, 611, 620, 638, 657, 784, 890], "notch": [109, 219, 231, 240, 418, 524, 552, 553], "1981": 109, "603": 109, "scores_muscl": [109, 643], "threshold_muscl": 109, "annot_muscl": 109, "filter_freq": [109, 643], "zscore": [109, 356, 621, 622, 638, 789, 790, 791, 795, 796, 797, 798, 906], "muscle_detect": [109, 112, 966], "gross": [110, 278, 485], "widespread": [110, 233], "recover": 110, "ubiquit": 110, "postur": [110, 233], "mainten": [110, 235, 303, 311], "appropri": [110, 135, 173, 176, 189, 193, 209, 210, 218, 229, 231, 233, 235, 238, 251, 256, 258, 260, 271, 275, 278, 282, 289, 311, 316, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 388, 394, 431, 461, 462, 518, 552, 553, 601, 616, 775, 844, 870, 899, 904, 909, 946, 951], "wouldn": [110, 282], "pronounc": [110, 230, 946], "simultan": [110, 164, 169, 220, 224, 231, 233, 241, 247, 275, 293, 303, 314, 319, 322, 493, 543, 577, 599, 690, 698, 778, 925], "18019": 110, "1983": [110, 232, 278, 332, 333, 334, 335, 336, 637, 691, 789, 790, 791, 795, 796, 797, 798], "18020": 110, "exclus": [110, 197, 228, 233, 284, 570, 633, 638, 890, 892, 893], "mdash": [110, 233], "plot_sourc": [110, 233, 289, 292, 293, 294, 295, 303, 304, 308, 310, 333, 334, 552, 553, 638, 876, 893, 899], "85861": 110, "103880": 110, "criteria": [110, 167, 193, 229, 234, 235, 239, 286, 326, 333, 334, 343, 633, 638, 795, 796], "slope": [110, 216, 230, 299, 325, 326, 338, 412, 413, 578, 638], "peripher": [110, 638], "pole": [110, 187], "foci": [110, 303, 844], "blob": [110, 264, 265], "worth": [110, 129, 176, 257, 278, 311, 319, 320, 466, 561, 568, 946], "fire": 110, "fuzzi": 110, "textbook": [110, 234, 278, 771], "temporali": 110, "ear": [110, 193, 197, 207, 319], "muscle_idx": [110, 638], "log_scal": [110, 638, 891], "blink_idx": 110, "heartbeat_idx": 110, "muscle_idx_auto": 110, "find_bads_muscl": [110, 304, 305, 306, 638], "s001r01": 110, "529": [110, 223, 224], "s002": [110, 233], "s002r01": 110, "dhani": [110, 278, 638], "dharmaprani": [110, 278, 638], "hoang": [110, 278, 638], "nguyen": [110, 278, 638], "trent": [110, 278, 638], "lewi": [110, 278, 322, 638], "delosangel": [110, 278, 638], "willoughbi": [110, 278, 638], "kenneth": [110, 171, 278, 509, 638], "pope": [110, 278, 638], "38th": [110, 278, 638], "annual": [110, 235, 278, 638, 948], "confer": [110, 171, 278, 369, 509, 638, 948], "societi": [110, 218, 278, 322, 333, 334, 425, 605, 638, 795, 825, 828], "embc": [110, 233, 278, 638], "828": [110, 261, 278, 638], "orlando": [110, 278, 638], "fl": [110, 135, 278, 638], "usa": [110, 227, 278, 638], "7590828": [110, 278, 638], "muscle_ica": [110, 112, 966], "otp": [111, 112, 684, 966], "flux": [111, 238, 240, 319, 321, 322, 333, 334, 335, 336, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "jump": [111, 140, 171, 227, 238, 301, 776, 777, 779, 780], "bst_phantom_elekta": [111, 210], "rid": [111, 260], "1522": [111, 196], "dipole_numb": 111, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [111, 210], "47000": [111, 210], "437999": [111, 210], "alongsid": [111, 172, 176, 182, 228, 233, 234, 236, 245, 321, 897, 959], "lump": [111, 676], "compute_bia": 111, "sti201": [111, 210, 338], "036": [111, 167, 176, 196, 210, 253, 278, 749], "worst": [111, 149, 292, 425, 430, 745, 747, 748], "bias_clean": 111, "1mm": [111, 183], "2mm": [111, 322], "4m": [111, 218], "samu": [111, 189, 238, 278, 281, 649, 676, 684, 754, 946], "taulu": [111, 189, 238, 278, 281, 506, 649, 676, 684, 754, 946], "1013": [111, 196, 278, 684], "2734641": [111, 278, 684], "324": [112, 140, 150, 196, 237, 256], "virtual_evok": [112, 114, 966], "xdawn_denois": [112, 115, 966], "062": [112, 115, 966], "shift_evok": [112, 113, 966], "hut": 113, "2332": [113, 196, 632], "ax3": [113, 118, 127, 210, 223], "magnomet": 114, "virt_evok": 114, "as_typ": [114, 285, 291, 302, 333, 334, 335, 336], "signal_cov": [115, 639], "xd": 115, "1388": 115, "41640": 115, "epochs_denois": 115, "introduct": [118, 123, 178, 261, 269, 271, 278, 343, 948], "simplest": [118, 123, 195, 224, 240, 256, 322], "kostiantyn": [118, 122, 123, 278, 286, 288, 289, 305, 749], "maksymenko": [118, 122, 123, 278, 286, 288, 289, 305, 749], "functool": [118, 256, 311, 340, 341, 344, 347, 348, 349], "partial": [118, 176, 178, 193, 229, 244, 245, 256, 278, 288, 293, 295, 310, 314, 319, 333, 334, 340, 341, 344, 347, 348, 349, 388, 678, 789, 790, 791, 795, 796, 797, 798, 825, 828, 844, 870, 911, 915], "determinist": [118, 233, 282], "middl": [118, 123, 140, 187, 193, 230, 234, 251, 299, 311, 322, 331, 338, 340, 341, 344, 347, 348, 349, 521, 865, 874, 904, 909, 910], "frontal": [118, 123, 193, 227, 233, 235, 241, 244, 253, 375, 723, 844], "selected_label": [118, 123], "term": [118, 131, 155, 193, 195, 220, 223, 230, 234, 256, 260, 266, 271, 304, 311, 312, 314, 319, 321, 322, 323, 332, 333, 334, 335, 336, 400, 412, 449, 450, 451, 460, 613, 625, 647, 652, 749, 789, 790, 791, 795, 796, 797, 798, 811, 812, 819, 822], "label_region": 118, "1915": 118, "label_dipol": 118, "source_time_seri": [118, 122, 123], "sin": [118, 120, 121, 122, 123, 142, 230, 251, 252, 253, 412, 685, 755], "n_event": [118, 123, 321, 328, 333, 334, 338, 343, 352, 434, 513, 514, 526, 552, 553, 570, 598, 633, 641, 668, 690, 700, 702, 703, 739, 775, 794, 795, 796, 876, 879, 936], "source_simulator_region": 118, "add_data": [118, 122, 123, 144, 340, 341, 344, 347, 348, 349, 739, 844, 904, 909], "source_simulator_dipol": 118, "gaussian": [118, 122, 142, 149, 179, 188, 189, 230, 233, 252, 256, 318, 322, 333, 334, 335, 336, 547, 674, 743, 812, 822, 823, 825, 826, 828, 855, 877, 886, 907, 946], "raw_region": 118, "iir_filt": [118, 120, 121, 123, 253, 743, 753], "raw_dipol": 118, "cos2": [118, 121, 122, 123, 253, 740, 741, 742, 754], "498": [118, 150, 261], "evoked_region": 118, "evoked_dipol": 118, "stc_true_region": 118, "get_stc": [118, 122, 739], "start_sampl": [118, 244, 739], "stop_sampl": [118, 244, 739], "stc_true_dipol": 118, "stc_est_region": 118, "stc_est_dipol": 118, "0004": 118, "2931": 118, "34986e": 118, "scorer": [118, 282, 291, 491, 502], "rle": [118, 749], "region_result": 118, "thx": 118, "per_sampl": [118, 744, 745, 746, 747, 748, 749, 750, 751], "ax4": 118, "col": [118, 140, 295, 844], "super": [118, 271], "ticklabel_format": 118, "style": [118, 177, 178, 198, 216, 239, 274, 282, 283, 286, 294, 303, 304, 308, 325, 328, 330, 333, 334, 335, 336, 343, 348, 349, 366, 485, 491, 492, 544, 552, 553, 578, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 846, 862, 863, 870, 877, 878, 881, 883, 884, 885, 893, 894, 899, 901, 906, 907, 908, 910], "sci": [118, 239, 680], "scilimit": 118, "tweak": [118, 142, 271, 274, 320, 946, 951], "dipole_result": 118, "322": [118, 119, 150, 196, 224, 261, 966], "plot_stc_metr": [118, 119, 966], "259": [119, 150, 196, 237, 278, 322], "simulated_raw_data_using_subject_anatomi": [119, 122, 966], "simulate_raw_data": [119, 121, 966], "source_simul": [119, 122, 123, 966], "933": [119, 123, 966], "simulate_evoked_data": [119, 120, 966], "505": [119, 120, 150, 237, 966], "sample_audvis_ecg": [120, 139, 158, 169, 199, 234, 325], "randomst": [120, 121, 122, 142, 186, 223, 230, 253, 256, 285, 590, 638, 674, 693, 741, 742, 743, 752, 753, 755, 776, 777, 778, 779, 780], "randn": [120, 142, 186, 223, 230, 253, 256, 264, 265, 266], "high_resolut": [120, 905], "wronkiewicz": [121, 280, 281, 282, 300, 302], "wronk": 121, "epoch_dur": [121, 646], "stagger": 121, "sinusoid": [121, 122, 142, 210, 211, 213, 230, 237, 251, 253, 321, 412, 524, 552, 553, 755], "10hz": 121, "global": [121, 141, 149, 156, 169, 171, 176, 177, 182, 189, 193, 210, 235, 278, 280, 294, 309, 310, 311, 321, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 509, 842, 870, 877, 880, 883, 885, 886, 904, 909, 946], "n_samp": [121, 244, 253, 281], "25e": 121, "1e9": [121, 211, 213, 253], "plt_show": [121, 207], "millimet": [121, 122, 183, 187, 209, 306, 322, 344, 347, 405, 409, 528, 543, 569, 590, 689, 700], "calc": 121, "orphan": 121, "ivana": [122, 288], "kojcic": [122, 288], "deslauri": [122, 123, 288], "gauthier": [122, 123, 287, 288], "sam": [122, 123, 287], "doesn": [122, 167, 183, 197, 198, 233, 235, 236, 238, 244, 258, 261, 271, 292, 294, 295, 307, 308, 311, 318, 449, 450, 451, 454, 455, 456, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 627, 638, 641, 656, 667, 676, 696, 735, 792, 816, 891, 946], "fname_info": 122, "g_temp_sup": 122, "g_t_transv": 122, "s_calcarin": 122, "vice": [122, 161, 187, 230, 322, 344, 659], "versa": [122, 161, 187, 230, 322, 344, 659], "moreov": [122, 164, 234, 235, 256], "ipsilater": [122, 178, 203], "activation_list": 122, "region_nam": 122, "latenc": [122, 170, 171, 172, 176, 261, 278, 286, 335, 336, 340, 341, 344, 347, 348, 349, 509, 776, 777, 779, 780, 846, 881], "sigma": [122, 145, 150, 156, 164, 169, 224, 256, 322, 333, 334, 601, 782, 783, 812, 822, 823, 826, 834, 855, 877, 907], "gf": 122, "rand": [122, 253], "100m": 122, "30m": 122, "15m": 122, "region_id": 122, "events_tmp": 122, "label_tmp": 122, "amplitude_tmp": 122, "latency_tmp": 122, "wf_tmp": 122, "evoked_aud_left": 122, "evoked_vis_right": 122, "mere": [122, 199, 233, 312, 706], "stc_aud": 122, "stc_vi": 122, "stc_diff": 122, "49264": [122, 205], "64e": [122, 205], "32593086": 122, "92039904": 122, "51106599": 122, "christoph": [122, 143, 178, 182, 223, 278, 280, 282, 283, 285, 294, 299, 300, 302, 425, 491, 773], "destrieux": [122, 182, 278], "ander": [122, 182, 205, 278, 322, 605], "dale": [122, 182, 205, 278, 322, 605], "halgren": [122, 182, 278, 605], "sulci": [122, 182, 187, 252, 278], "nomenclatur": [122, 182, 244, 278], "sine": [123, 251, 325, 811, 819], "everi": [123, 131, 141, 168, 171, 178, 195, 199, 202, 224, 231, 232, 233, 247, 271, 274, 310, 328, 332, 333, 334, 335, 336, 419, 534, 542, 549, 550, 552, 553, 590, 638, 640, 655, 656, 662, 674, 693, 741, 742, 743, 752, 753, 755, 776, 777, 778, 779, 780, 789, 790, 791, 795, 796, 797, 798, 821, 823, 824, 825, 826, 827, 946, 947], "significantli": [124, 125, 128, 256, 259, 264, 265, 271, 308, 312, 340, 341, 344, 347, 348, 349, 518, 552, 553, 776, 777, 779, 780], "1332": [124, 125, 172, 193, 196, 258, 259, 260], "epochs1": [124, 264, 508], "condition1": [124, 264], "epochs2": [124, 264, 508], "condition2": [124, 264], "t_ob": [124, 257, 258, 264, 303, 776, 778, 779], "cluster_p_valu": [124, 258, 259, 260, 264, 265, 266], "n_permut": [124, 128, 140, 256, 257, 258, 259, 260, 261, 265, 266, 776, 777, 778, 779, 780], "tail": [124, 140, 178, 256, 258, 259, 260, 261, 264, 271, 284, 331, 776, 777, 778, 779, 780, 823, 826, 874, 905], "out_typ": [124, 140, 256, 258, 259, 260, 292, 294, 776, 777, 779, 780], "stat_fun": [124, 140, 141, 256, 257, 258, 259, 260, 261, 264, 265, 266, 768, 776, 777, 779, 780], "00022698366437456956": 124, "16709257110227": 124, "2463": 124, "2972": 124, "442": [124, 150, 237, 261], "3274": 124, "3355": 124, "3434": 124, "835": [124, 134, 141, 966], "3548": 124, "946": 124, "3509": 124, "3449": 124, "3422": 124, "erf": [124, 145, 156, 219, 227, 230, 261, 278, 280, 298, 638, 889, 891, 959], "i_c": 124, "812": [124, 130, 261, 966], "cluster_stats_evok": [124, 130, 966], "discoveri": [125, 260, 278, 307, 773], "pval": [125, 260, 767, 773, 776, 777, 779, 780], "ttest_1samp": [125, 256, 782], "n_test": [125, 778], "threshold_uncorrect": 125, "ppf": [125, 239, 256, 258, 261, 264, 265, 678, 776, 777, 779, 780], "reject_bonferroni": 125, "pval_bonferroni": 125, "threshold_bonferroni": 125, "reject_fdr": 125, "pval_fdr": 125, "indep": [125, 773], "threshold_fdr": 125, "xmin": 125, "xmax": 125, "hline": [125, 168, 335, 336, 880], "uncorrect": [125, 256], "bonferroni": [125, 290, 524, 552, 553, 767, 778], "fdr_stats_evok": [125, 130, 966], "generalis": 127, "tradit": [127, 170, 236, 240, 823, 824, 826, 827, 870], "predictor": [127, 168, 256, 637, 691, 775], "inapplic": 127, "rerp": [127, 278, 775], "smith": [127, 155, 256, 257, 278, 460, 775, 776, 777, 779, 780], "kuta": [127, 278, 775], "jona": [127, 129, 156, 224, 261, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 302, 304, 776, 777, 779, 780], "sassenhagen": [127, 129, 156, 224, 261, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 302, 304, 776, 777, 779, 780], "rerf": 127, "param": [127, 141, 142, 283, 294, 485, 486, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 627, 639, 715], "nathaniel": [127, 278, 775], "marta": [127, 278, 775], "169": [127, 150, 196, 237, 256, 261, 278, 775], "psyp": [127, 168, 178, 230, 261, 278, 775, 776, 777, 779, 780], "12320": [127, 278, 775], "temporal_mask": 128, "logical_and": [128, 142], "50000": 128, "p_valu": [128, 256, 261, 524, 552, 553, 778], "significant_sensor": 128, "significant_sensors_nam": 128, "49999": 128, "0243": [128, 169, 196], "1323": [128, 196], "1333": [128, 196, 264, 266], "1613": [128, 196], "1643": [128, 196], "2423": [128, 196], "2622": [128, 196], "2632": [128, 196], "2642": [128, 196], "2643": [128, 196], "cbar_fmt": [128, 137, 306, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 885, 889, 898, 901, 906], "538": [128, 130, 171, 224, 966], "sensor_permutation_test": [128, 130, 966], "psycholinguist": [129, 256], "tal": [129, 148, 155, 278, 284, 285, 288, 291, 301, 561, 568], "linzen": [129, 148, 301], "pd": [129, 140, 163, 170, 178, 218, 219, 238], "kword_metadata": [129, 170, 257], "epo": [129, 167, 170, 199, 257, 295, 325, 333, 334, 699], "concret": [129, 170, 171], "consonantvowelproport": [129, 170], "visualcomplex": [129, 170], "film": [129, 170, 257], "783710": [129, 170], "cent": [129, 170], "141553": [129, 170], "shot": [129, 170], "600033": [129, 170], "cold": [129, 170], "657457": [129, 170], "945661": [129, 170], "characterist": [129, 178, 230, 231, 278, 321, 333, 334, 477, 508, 520, 665], "imagin": [129, 140, 234], "df": [129, 140, 167, 172, 219, 244, 256, 257, 258, 264, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 621, 776, 779, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "cut": [129, 140, 141, 207, 234, 271, 295, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 552, 553, 650, 651, 667, 670, 676, 680, 960], "split_legend": [129, 261, 870], "percentil": [129, 162, 163, 173, 302, 333, 334, 340, 341, 343, 344, 347, 348, 349, 552, 553, 832, 865, 870, 876, 899, 904, 909, 910], "gfp": [129, 141, 156, 169, 171, 177, 189, 193, 219, 280, 283, 289, 294, 308, 310, 321, 333, 334, 335, 336, 613, 638, 870, 877, 880, 886, 890, 903, 946], "7424": 129, "null": [129, 292, 352, 511, 771], "hypothesi": [129, 199, 257, 767, 771, 773, 778], "colour": [129, 203, 305], "palett": [129, 140, 172], "dark": [129, 198, 199, 294, 303, 333, 334, 552, 553, 638, 844, 876, 893, 899], "reject_h0": 129, "fdr_pval": 129, "plot_imag": [129, 156, 169, 170, 173, 177, 193, 227, 229, 239, 257, 282, 285, 287, 291, 294, 301, 306, 309, 333, 334, 335, 336, 343], "st\u00e9phane": [129, 257, 278, 319, 466], "dufau": [129, 257, 278, 319, 466], "grainger": [129, 257, 278, 319, 466], "katherin": [129, 257, 278, 319, 333, 334, 466, 795, 825, 828], "midglei": [129, 257, 278, 319, 466], "phillip": [129, 168, 257, 278, 283, 285, 286, 304, 319, 461, 466], "holcomb": [129, 257, 278, 319, 466], "pictur": [129, 257, 278, 319, 343, 466], "snapshot": [129, 199, 257, 278, 284, 292, 295, 311, 319, 466, 916], "megastudi": [129, 257, 278, 319, 466], "psycholog": [129, 257, 278, 319, 466], "1887": [129, 257, 278, 319, 466], "1897": [129, 257, 278, 319, 466], "0956797615603934": [129, 257, 278, 319, 466], "matt": [129, 278, 284, 285, 294, 302, 304], "davi": [129, 278], "ford": [129, 278], "friedmann": [129, 278], "pulverm\u00fcl": [129, 278], "william": [129, 223, 278, 491], "marslen": [129, 278], "wilson": [129, 278], "1383": [129, 278], "1400": [129, 278], "2006": [129, 205, 223, 238, 278, 333, 334, 616, 676, 746, 751, 795, 825, 828], "2005": [129, 189, 238, 278, 506, 616, 649, 676, 746, 749, 751, 946], "048": [129, 167, 169, 176, 196, 210, 247, 253, 257, 278, 810, 812, 822], "sensor_regress": [129, 130, 966], "503": [130, 150, 256], "clariti": [131, 949], "adapt": [131, 141, 193, 218, 236, 253, 256, 278, 280, 306, 311, 312, 319, 333, 334, 335, 336, 366, 367, 490, 524, 525, 552, 553, 611, 612, 638, 664, 676, 793, 799, 803, 806, 812, 814, 822, 840, 878, 958, 959], "csd_fft": 131, "csd_mt": 131, "convolv": [131, 139, 230, 256, 271, 491, 498], "600hz": 131, "enough": [131, 185, 207, 231, 232, 233, 235, 238, 244, 256, 271, 282, 301, 306, 312, 322, 330, 333, 334, 335, 336, 338, 342, 375, 376, 382, 485, 492, 504, 552, 553, 637, 638, 653, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 854, 863, 870, 876, 878, 880, 882, 885, 886, 889, 893, 896, 898, 899, 900, 901, 902, 906, 908, 956], "10th": 131, "greatli": [131, 310, 509], "minim": [131, 168, 196, 230, 251, 271, 322, 333, 334, 431, 493, 508, 648, 775, 824, 827, 844, 946, 956], "csd_wav": 131, "trick": [131, 271, 278, 290, 778, 956], "comma": [131, 293, 294, 295, 325, 789], "plot_dict": [131, 270], "compute_csd": [131, 134, 966], "taper": [132, 142, 287, 298, 303, 306, 333, 334, 335, 336, 490, 498, 524, 552, 553, 611, 612, 789, 791, 793, 795, 797, 798, 799, 803, 806, 808, 814, 824, 827, 878], "prolat": [132, 269, 278, 333, 334, 335, 336, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814], "spheroid": [132, 269, 278, 333, 334, 335, 336, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814], "sequenc": [132, 164, 278, 319, 322, 325, 333, 334, 335, 336, 552, 553, 766, 793, 794, 795, 796, 799, 800, 808, 844, 878], "n_epochs_us": 132, "psd_avg": 132, "set_xlim": [132, 141, 178, 213, 234], "589": [132, 134, 224, 966], "source_power_spectrum_opm": [134, 137, 966], "334": [134, 137, 140, 150, 196, 223, 256, 966], "time_frequency_erd": [134, 140, 303, 966], "766": [134, 140, 261, 966], "time_frequency_global_field_pow": [134, 141, 966], "507": [134, 141, 150, 224, 261, 966], "source_label_time_frequ": [134, 135, 966], "754": [134, 135, 166, 261, 278, 318, 966], "time_frequency_simul": [134, 142, 966], "source_space_time_frequ": [134, 138, 966], "082": [134, 138, 966], "586": [134, 224, 966], "source_power_spectrum": [134, 136, 966], "594": [134, 136, 966], "temporal_whiten": [134, 139, 966], "635": [134, 139, 229, 243, 261, 966], "former": [135, 169, 260, 302, 312, 425, 638], "latter": [135, 169, 178, 195, 322, 485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 639], "epochs_induc": 135, "subtract_evok": [135, 141, 232, 292, 333, 334, 691, 965], "this_epoch": 135, "itc": [135, 333, 334, 823, 824, 825, 826, 827, 828], "baseline_mod": [135, 621, 622], "multi_label_pow": 135, "return_plv": [135, 622], "l_idx": 135, "l_power": 135, "100hz": 136, "psd_dspm": 136, "welch": [137, 231, 253, 269, 270, 271, 278, 282, 302, 306, 307, 309, 333, 334, 335, 336, 552, 553, 793, 799, 815, 900], "next_fast_len": 137, "src_fname": [137, 264, 265, 266], "vv_fname": 137, "squid_resting_st": 137, "vv_erm_fnam": 137, "squid_empty_room": 137, "vv_trans_fnam": 137, "opm_fnam": 137, "opm_resting_state_raw": 137, "opm_erm_fnam": 137, "opm_empty_room_raw": 137, "opm_tran": 137, "opm_coil_def_fnam": 137, "vv": 137, "simplifi": [137, 206, 230, 278, 288, 301, 303, 304, 310, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 946, 947], "housekeep": [137, 240], "raw_erm": [137, 211, 219, 318], "new_sfreq": 137, "nyquist": [137, 230, 231, 285, 291, 580], "meg2233": 137, "meg1842": 137, "hold": [137, 219, 253, 256, 314, 321, 322, 333, 334, 335, 336, 338, 342, 506, 552, 553, 665, 676, 787, 880, 900, 902], "61999": 137, "60999": 137, "dist": [137, 183, 184, 239, 252, 325, 339, 346, 351, 436, 504, 537, 682, 759, 760, 761, 763, 764], "dig": [137, 146, 154, 163, 183, 184, 185, 186, 187, 193, 196, 197, 210, 211, 244, 251, 275, 288, 289, 302, 338, 376, 382, 413, 504, 560, 601, 862], "169022": 137, "169992": 137, "202": [137, 150, 196, 237, 257, 260, 261, 300], "2052": 137, "995623": 137, "029776": 137, "088592": 137, "062622": 137, "916188": 137, "395825": 137, "069381": 137, "399641": 137, "914042": 137, "993107": 137, "074371": 137, "090590": 137, "079171": 137, "995577": 137, "050589": 137, "086427": 137, "057412": 137, "994603": 137, "691": [137, 223], "692": [137, 171, 185, 191, 237, 261, 271, 966], "percentag": [137, 233, 281, 333, 334, 640, 745, 746, 747, 748, 749, 751, 832, 875], "freq_band": [137, 164], "topo": [137, 143, 169, 177, 239, 270, 284, 288, 309, 333, 334, 848, 859, 870, 907], "stc_psd": [137, 611], "sensor_psd": [137, 611], "return_sensor": [137, 611, 612], "topo_norm": 137, "keepdim": [137, 164], "stc_norm": 137, "3660": 137, "1969": 137, "014611": 137, "18765e": 137, "291": [137, 150, 196, 224], "34225": 137, "22911e": 137, "3720": 137, "1698": 137, "007069": 137, "0841e": 137, "44071": 137, "21355e": 137, "worthwhil": [137, 178, 233], "plot_band": 137, "inferno": [137, 163, 256], "cau": 137, "show_trac": [137, 162, 274, 292, 340, 341, 344, 347, 348, 349, 844, 904, 909], "fig_alpha": 137, "brain_alpha": [137, 341, 347, 349, 909], "7886907": 137, "03080629": 137, "41411318": 137, "profil": [137, 198, 240, 311, 951, 952], "beneath": 137, "fig_beta": 137, "brain_beta": 137, "92447839": 137, "97472119": 137, "48612204": 137, "fig_beta_opm": 137, "brain_beta_opm": 137, "92961132": 137, "26312948": 137, "60426766": 137, "use_fft": [138, 140, 333, 334, 335, 336, 498, 552, 553, 621, 622, 789, 791, 795, 797, 802, 805, 821, 823, 824, 826, 827], "induced_power_": 138, "587": [138, 224, 237], "proj_fnam": [139, 219], "20000": 139, "innov": 139, "d_": 139, "lfilter": [139, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 520, 521, 523, 524, 552, 553], "regener": [139, 288, 333, 334], "r_": [139, 213, 322, 746, 751], "dummi": [139, 154, 251, 266], "nfft": [139, 253], "written": [140, 198, 199, 202, 220, 237, 246, 286, 287, 291, 292, 302, 314, 318, 329, 373, 377, 517, 518, 551, 552, 553, 710, 716, 936, 941, 944, 959], "desynchron": [140, 270, 278, 319], "conceptu": [140, 178, 230, 233, 278], "ersp": [140, 285], "perturb": 140, "goal": [140, 164, 311, 312, 314, 320], "35hz": 140, "customari": [140, 322], "klotzsch": [140, 294, 306, 307], "cb": 140, "mpg": 140, "seaborn": [140, 172, 238], "sn": [140, 172, 238], "twoslopenorm": 140, "pcluster_test": 140, "961": [140, 187, 224], "suitabl": [140, 173, 186, 188, 241, 258, 260, 314, 318, 319, 321, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 376, 424, 445, 484, 509, 540, 552, 553, 577, 594, 776, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "cnorm": [140, 306, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "asymmetr": [140, 861], "thing": [140, 168, 172, 178, 187, 198, 199, 208, 216, 228, 230, 244, 253, 261, 264, 266, 275, 292, 311, 314, 382, 552, 553, 794, 800, 946], "rdbu": 140, "equal": [140, 167, 174, 175, 176, 178, 192, 195, 199, 202, 203, 207, 227, 230, 246, 247, 264, 266, 287, 289, 292, 293, 294, 301, 304, 312, 321, 322, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 343, 355, 366, 367, 387, 424, 425, 429, 430, 441, 442, 443, 485, 492, 493, 498, 508, 509, 510, 528, 529, 542, 547, 549, 550, 552, 553, 570, 597, 605, 616, 621, 622, 637, 638, 650, 656, 674, 681, 682, 707, 745, 770, 771, 776, 777, 779, 780, 781, 783, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 815, 823, 826, 863, 864, 870, 874, 877, 878, 879, 880, 882, 885, 886, 901, 902, 906, 908, 949, 966], "promin": [140, 170, 227, 239, 271, 426, 427, 428], "extrem": [140, 169, 271, 335, 336, 366, 367, 391, 425, 429, 430, 441, 442, 443, 485, 492, 493, 528, 529, 547, 549, 550, 616, 776, 777, 779, 780, 886], "vcenter": 140, "step_down_p": [140, 776, 777, 779, 780], "buffer_s": [140, 256, 260, 261, 264, 265, 266, 608, 776, 777, 779, 780], "tfr_ev": 140, "gridspec_kw": [140, 203, 239, 274], "width_ratio": [140, 203, 239], "stack": [140, 168, 253, 264, 735, 839, 841, 960], "mask_styl": [140, 335, 336, 789, 790, 791, 795, 796, 797, 798, 882], "set_yscal": 140, "724718": 140, "55207615547708": 140, "183230800245869": 140, "271": [140, 150, 193, 196, 224, 237, 256, 261], "285": [140, 150, 196, 256], "276": [140, 150, 196], "307": [140, 141, 150, 196, 223, 237, 261], "528367198129923": 140, "7064219374431917": 140, "349": [140, 150, 196, 256, 278, 322], "336": [140, 150, 176, 181, 196, 198, 237, 261, 300, 966], "581589289696407": 140, "346448151996899": 140, "345": [140, 150, 196, 237, 256], "344": [140, 150, 170, 171, 175, 196, 261, 966], "347": [140, 150, 196, 282], "329": [140, 150, 196, 223, 237, 261], "328": [140, 141, 149, 150, 189, 196, 256, 278, 335, 336, 425, 886, 946], "713872": 140, "754759498497248": 140, "3607039428313787": 140, "296": [140, 150, 196, 256], "282": [140, 150, 196, 223, 237, 256], "229": [140, 150, 196, 237, 260], "224": [140, 150, 196, 198, 216, 237], "268": [140, 146, 150, 157, 196, 212, 219, 237, 256, 261, 966], "992503139561789": 140, "416450269990024": 140, "269": [140, 150, 163, 196, 237], "044339991978302": 140, "070443782271568": 140, "311": [140, 150, 196, 237, 256, 261], "326": [140, 150, 196], "datafram": [140, 167, 174, 175, 176, 178, 192, 218, 219, 238, 244, 257, 269, 288, 291, 294, 299, 314, 322, 327, 328, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 509, 552, 553, 703, 775, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 966], "to_data_fram": [140, 163, 167, 172, 176, 244, 257, 285, 288, 291, 294, 302, 304, 307, 310, 322, 327, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "0000": 140, "473093": 140, "474571": 140, "764021": 140, "9875": 140, "491659": 140, "480088": 140, "762445": 140, "9750": [140, 295], "500872": 140, "469376": 140, "749421": 140, "9625": 140, "500605": 140, "449373": 140, "728686": 140, "9500": 140, "515911": 140, "443439": 140, "719536": 140, "lineplot": [140, 172], "confid": [140, 141, 169, 172, 178, 193, 203, 235, 285, 295, 331, 338, 638, 768, 793, 794, 799, 800, 870, 891, 947], "long_format": [140, 172, 288, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "freq_bound": 140, "delta": [140, 164, 230, 333, 334, 335, 336, 549, 552, 553, 621, 793, 794, 799, 800, 878], "theta": [140, 141, 164, 333, 334, 335, 336, 552, 553, 793, 794, 799, 800, 878], "freq_bands_of_interest": 140, "remove_unused_categori": 140, "reorder_categori": 140, "facetgrid": 140, "margin_titl": 140, "n_boot": 140, "axline_kw": 140, "dash": [140, 167, 177, 199, 231, 234, 238, 239, 247, 293, 309, 310, 330, 333, 334, 335, 336, 552, 553, 793, 794, 799, 800, 870, 871, 897, 900], "set_axis_label": 140, "col_templ": 140, "col_nam": [140, 338], "row_templ": 140, "row_nam": [140, 337], "add_legend": [140, 844], "subplots_adjust": [140, 178, 228, 231, 233, 234, 235, 236, 274], "df_mean": 140, "queri": [140, 167, 172, 176, 192, 248, 257, 269, 328, 333, 334, 512, 795, 796], "groupbi": [140, 172, 178, 257], "reset_index": [140, 172], "col_ord": 140, "violinplot": [140, 172], "deep": [140, 164, 172, 185, 208, 230, 278, 294, 322, 333, 334, 335, 336, 357, 485, 486, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 552, 553, 635, 636, 639, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 841, 844, 862], "hue_ord": 140, "gert": [140, 278], "pfurtschel": [140, 278], "fernando": [140, 278, 318], "lope": [140, 278, 318], "da": [140, 278, 308, 318], "silva": [140, 278, 318], "principl": [140, 231, 256, 261, 278, 320, 322], "1842": [140, 196, 278], "00141": [140, 278], "bernhard": [140, 278, 547], "graimann": [140, 278], "jane": [140, 278], "huggin": [140, 278], "simon": [140, 278, 283, 285, 299, 304, 308], "levin": [140, 278], "ecog": [140, 143, 162, 165, 166, 192, 196, 244, 251, 256, 278, 282, 284, 286, 288, 289, 292, 293, 294, 295, 303, 305, 310, 321, 322, 333, 334, 335, 336, 338, 344, 346, 381, 382, 391, 443, 445, 454, 552, 553, 568, 635, 636, 672, 718, 733, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862, 902, 914, 916, 950, 959, 966], "00697": [140, 278], "exposur": [140, 233, 278, 311], "tone": [140, 193, 278, 319], "1993": [140, 205, 278], "90110": [140, 278], "rectifi": 141, "uncertainti": [141, 269, 278, 333, 334, 335, 336, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814, 959], "importantli": [141, 142, 229, 318], "hari": [141, 142, 155, 205, 278, 301, 302], "neuromagnet": [141, 233, 278, 638], "1997": [141, 207, 234, 235, 278, 322, 366, 367, 742, 812, 822, 823, 826], "s0166": [141, 278], "2236": [141, 278], "10065": [141, 278], "342": [141, 149, 150, 189, 196, 224, 256, 278, 335, 336, 425, 886, 946], "bradlei": [141, 278], "efron": [141, 278], "trevor": [141, 278], "hasti": [141, 278], "institut": [141, 278, 333, 334, 795, 825, 828], "mathemat": [141, 178, 203, 228, 230, 238, 256, 278, 294, 311, 318, 322, 333, 334, 583, 605, 776, 795, 825, 828], "monograph": [141, 278], "cambridg": [141, 178, 278, 425], "univers": [141, 278, 283, 312, 319, 324, 425, 524, 964], "york": [141, 230, 278, 289, 324, 524, 964], "isbn": [141, 178, 230, 253, 278, 332, 333, 334, 335, 336, 366, 367, 425, 771, 789, 790, 791, 795, 796, 797, 798], "14989": [141, 278], "web": [141, 173, 233, 241, 271, 278, 304, 343, 626, 853], "stanford": [141, 278], "casi": [141, 278], "iter_freq": 141, "frequency_map": 141, "job": [141, 231, 233, 240, 306, 309, 325, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 487, 488, 490, 491, 495, 496, 497, 498, 501, 502, 523, 524, 525, 528, 541, 543, 552, 553, 596, 599, 600, 611, 612, 621, 622, 643, 650, 651, 728, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 828, 846, 878, 881, 900], "apply_hilbert": [141, 142, 143, 163, 194, 283, 284, 288, 310, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "269399": 141, "077": 141, "emerg": 141, "bootstrap": [141, 169, 199, 285, 768, 793, 794, 799, 800, 870], "domin": [141, 232, 238, 271, 340, 341, 344, 347, 348, 349, 519, 638], "winter_r": 141, "freq_nam": 141, "ci_low": 141, "ci_up": 141, "dhz": 141, "xy": [141, 143, 163, 208, 322, 391, 505, 845, 916], "horizontalalign": [141, 230, 234], "xycoord": 141, "trade": [142, 230, 824, 827], "bharadwaj": [142, 155, 278, 301, 302], "berkelei": [142, 143, 324, 964], "sim0001": 142, "sim0002": 142, "burst": [142, 210, 213, 227, 319], "ramp": [142, 230], "logical_or": 142, "on_tim": 142, "han": [142, 278, 291, 292, 294, 664, 668, 741, 742, 823, 824, 826, 827], "sin50hz": 142, "4000": [142, 193, 235, 325, 577], "41160": 142, "41159": 142, "time_bandwidth": [142, 333, 334, 335, 336, 498, 552, 553, 789, 791, 795, 797, 824, 827], "sim": [142, 322, 613], "nmore": 142, "1025": [142, 171, 223, 269], "balanc": [142, 229, 230, 256, 260, 280, 745, 770], "strictli": [142, 178, 188, 195, 196, 205, 230, 232, 283, 295, 359, 844], "regard": [142, 236, 253, 261, 270, 285, 301, 322, 658], "recoverd": 142, "lossless": 142, "disregard": 142, "numer": [142, 183, 189, 198, 230, 233, 241, 244, 256, 261, 283, 289, 303, 304, 312, 314, 322, 330, 333, 334, 335, 336, 339, 342, 346, 424, 448, 485, 492, 520, 552, 553, 637, 638, 766, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 809, 829, 855, 863, 878, 885, 889, 898, 901, 906, 908, 946, 952], "request": [142, 167, 188, 193, 198, 199, 233, 235, 238, 244, 245, 283, 291, 293, 304, 307, 310, 312, 321, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 484, 520, 521, 523, 524, 552, 553, 555, 561, 568, 638, 650, 651, 696, 733, 770, 772, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 854, 878, 887, 889, 904, 909, 919, 946, 947, 958, 959], "all_n_cycl": 142, "isinst": [142, 167, 328, 551, 791], "exagger": 142, "wise": [142, 189, 227, 231, 288, 310, 321, 335, 336, 340, 341, 344, 347, 348, 349, 494, 518, 552, 553, 778], "epochs_hilb": 142, "3301": [142, 241], "avgpow": 142, "collaps": [142, 205, 343, 507, 795, 796], "avg_pow": [142, 823, 824], "zero_mean": [142, 260, 310, 333, 334, 335, 336, 552, 553, 622, 789, 791, 795, 797, 812, 822, 823, 824, 826], "electrocorticographi": [143, 163, 278, 282, 319, 322, 333, 334, 335, 336, 552, 553, 635, 636, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "scatterplot": 143, "pyvista": [143, 198, 208, 288, 292, 293, 295, 304, 309, 314, 320, 331, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 552, 553, 844, 847, 856, 860, 862, 874, 902, 904, 905, 909, 911, 916, 951, 952], "own": [143, 178, 204, 210, 235, 247, 258, 261, 274, 275, 311, 312, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 391, 550, 552, 553, 676, 844, 877, 904, 946, 955, 956], "noqa": [143, 145, 234, 256], "f401": [143, 256], "misc_path": [143, 162, 209], "ecog_data_fnam": 143, "sample_ecog_ieeg": 143, "click": [143, 160, 169, 177, 178, 183, 188, 208, 219, 228, 233, 246, 247, 270, 280, 283, 286, 288, 293, 294, 300, 301, 302, 310, 311, 314, 320, 330, 333, 334, 335, 336, 338, 342, 348, 349, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 845, 859, 867, 876, 877, 878, 880, 882, 884, 885, 889, 893, 898, 899, 900, 901, 902, 906, 907, 908, 910, 951, 958], "layout_nam": 143, "custom_layout": 143, "lout": [143, 197, 298, 383, 396, 397, 408], "sample_ecog": 143, "apply_tran": [143, 162, 183, 187, 209, 295, 382], "conjunct": [143, 256, 314, 328, 333, 334], "xy_pt": [143, 163], "beta_pow": 143, "fig2": [143, 178, 197, 275], "coolwarm": 143, "cbar": [143, 173, 224, 256, 274, 865], "set_axis_off": [143, 163, 199], "bbox_inch": [143, 303], "tight": [143, 178, 188, 302, 303, 309, 335, 336, 819, 880, 882], "669": [143, 261], "mous": [143, 219, 246, 275, 285, 294, 320, 330, 331, 333, 334, 335, 336, 342, 485, 492, 544, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 845, 846, 860, 862, 874, 876, 877, 878, 880, 881, 882, 885, 889, 898, 900, 901, 906, 908], "imread": [143, 150, 199], "plot_click": [143, 845, 965], "to_layout": [143, 845, 965], "got": [143, 171, 198, 228, 233, 253, 295, 955], "3d_to_2d": [143, 157, 966], "scalarmapp": 144, "low_contrast": [144, 155, 162, 208, 218, 340, 341, 344, 347, 348, 349, 844, 904, 909], "rh_data": [144, 202, 344, 347], "rh_vertno": [144, 202, 344, 347, 752], "recon": [144, 162, 182, 187, 289, 295, 303, 307, 379, 437, 624], "brodmann": 144, "ba44": 144, "add_head": [144, 162, 183, 218, 295, 844], "seghead": [144, 183, 184, 185, 188, 199, 203, 209, 210, 325, 331, 844, 862, 874], "add_sensor": [144, 162, 163, 218, 239, 295, 307, 844], "role": [144, 192, 197, 204, 214, 215, 311, 312, 330, 331, 335, 337, 338, 344, 435, 604, 605, 616, 697, 706, 708, 721, 737, 844, 854, 862, 874, 914, 966], "sample_audvis_set1": 144, "ylorrd": 144, "add_dipol": [144, 303, 844], "1e8": 144, "static": [144, 207, 238, 244, 278, 284, 288, 291, 294, 325, 332, 460, 673, 832, 833, 834, 951], "add_ax": [144, 274], "embed": [145, 183, 199, 229, 230, 285, 311, 343, 959], "simplic": [145, 204, 224, 230, 256, 260, 303, 946], "instal": [145, 162, 163, 173, 182, 188, 198, 208, 287, 288, 295, 303, 307, 310, 311, 323, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 351, 373, 377, 457, 460, 484, 487, 491, 496, 523, 524, 525, 552, 553, 946, 947, 960], "order_func": 145, "spectral_embed": 145, "rbf_kernel": 145, "this_data": 145, "good_pick": 145, "bad_pick": [145, 240], "plt_time": 145, "overlay_tim": [145, 156, 282, 333, 334, 877], "renaud": [145, 278], "keriven": [145, 278], "maureen": [145, 278], "clerc": [145, 278], "1051": [145, 237, 278], "1061": [145, 278], "2037139": [145, 278], "channel_epochs_imag": [145, 157, 966], "eeg_on_scalp": [146, 157, 966], "upon": [147, 171, 184, 197, 199, 275, 287, 295, 311, 312, 333, 334, 343, 491, 552, 553, 845, 863, 916, 958], "hosaka": [147, 278, 287, 863], "flow": [147, 205, 278, 287, 863], "underneath": [147, 287, 863], "poor": [147, 227, 230, 239, 288, 863], "man": [147, 178, 199, 278, 863], "hidehiro": [147, 278, 863], "electrocardiologi": [147, 278, 863], "1976": [147, 278, 863], "s0022": [147, 278, 863], "0736": [147, 278, 863], "80041": [147, 278, 863], "khansheraz": 147, "evoked_mag": 147, "evoked_grad": 147, "topoplot": [147, 171, 197, 233, 271, 304, 863, 866], "max_time_idx": 147, "latitud": [147, 863], "longitud": [147, 187, 863], "radial": [147, 185, 611, 612, 622, 729, 863], "cartesian": [147, 202, 205, 322, 863], "info_from": [147, 305, 863], "info_to": [147, 863], "raw_ctf": 147, "raw_ctf_info": 147, "evoked_arrowmap": [147, 157, 966], "engeman": 148, "miko\u0142aj": [148, 283, 284, 285, 286, 288, 291, 293, 295, 303, 304, 306, 307, 964], "magnuski": [148, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 303, 304, 306, 307, 964], "mmagnuski": [148, 282], "swp": [148, 324, 964], "pl": 148, "sphinx_gallery_thumbnail_numb": [148, 224], "20m": [148, 218], "regularli": [148, 193, 195], "multilin": [148, 291], "all_tim": 148, "rm": [148, 169, 177, 178, 193, 216, 253, 261, 282, 294, 308, 310, 322, 330, 333, 334, 335, 336, 344, 485, 492, 552, 553, 613, 637, 638, 789, 790, 791, 795, 796, 797, 798, 870, 877, 880, 884, 885, 889, 890, 901, 908], "drawn": [148, 177, 247, 256, 295, 305, 330, 333, 334, 335, 336, 341, 342, 347, 349, 485, 492, 552, 553, 637, 638, 653, 741, 742, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 864, 869, 870, 876, 878, 879, 882, 884, 885, 889, 898, 900, 901, 902, 906, 908, 909, 918], "spectral_r": 148, "circl": [148, 188, 197, 220, 252, 280, 301, 304, 311, 321, 330, 333, 334, 335, 336, 338, 342, 382, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 850, 863, 868, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "extrapol": [148, 177, 239, 288, 291, 292, 293, 306, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "box": [148, 188, 217, 292, 302, 309, 330, 333, 334, 335, 336, 342, 383, 391, 408, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 840, 863, 878, 880, 882, 884, 885, 889, 898, 901, 906, 908, 958], "stretch": [148, 229, 844], "beyond": [148, 171, 193, 218, 266, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 590, 637, 638, 653, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 840, 863, 878, 885, 889, 898, 899, 901, 906, 908], "axes_row": 148, "extr": 148, "margin": [148, 274, 333, 334, 795, 796, 870, 877], "exceed": [148, 211, 229, 235, 238, 258, 333, 638, 674, 795], "mask_param": [148, 261, 330, 333, 334, 335, 336, 485, 492, 552, 553, 637, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 901, 906, 908], "markers": [148, 261, 330, 333, 334, 335, 336, 485, 492, 552, 553, 637, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 901, 906, 908], "markerfacecolor": [148, 330, 333, 334, 335, 336, 485, 492, 552, 553, 637, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 901, 906, 908], "_time": 148, "significant_channel": 148, "_channel": 148, "_ch": 148, "perhap": [148, 230, 235, 244, 256], "imped": [148, 230, 278, 292], "image_interp": [148, 304, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "cubic": [148, 304, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 846, 863, 878, 881, 885, 889, 898, 901, 906, 908], "smoothest": 148, "voronoi": [148, 304, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "debug": [148, 189, 198, 311, 325, 449, 450, 451, 454, 455, 456, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 735, 839, 842, 946], "unalt": [148, 432], "properli": [148, 163, 182, 183, 188, 195, 210, 217, 228, 234, 235, 244, 245, 264, 266, 275, 278, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 325, 328, 332, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 373, 377, 418, 431, 487, 491, 496, 523, 524, 525, 552, 553, 655, 656, 733, 754, 789, 790, 791, 795, 796, 797, 798, 840, 886, 912, 951, 955], "animate_topomap": [148, 282, 291, 304, 305, 335, 336], "frame_r": [148, 335, 336], "blit": [148, 335, 336], "672": [148, 157, 223, 237, 966], "evoked_topomap": [148, 157, 966], "excel": [149, 177, 187, 230, 253], "diagnost": [149, 192, 199, 233, 238, 242], "rare": [149, 282, 283, 295, 311, 312, 343], "80e": [149, 239, 322], "uncom": 149, "fewer": [149, 171, 178, 188, 197, 199, 227, 230, 245, 256, 266, 285, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 487, 491, 496, 497, 521, 523, 524, 552, 553, 667, 672, 795, 796, 824, 827, 844, 882], "007": [149, 156, 167, 168, 169, 172, 176, 193, 196, 229, 235, 253, 257, 278, 351, 680], "008": [149, 156, 167, 172, 176, 178, 193, 196, 238, 253, 278, 676], "method_param": [149, 206, 425, 430, 605, 606, 607, 608, 609, 611, 612, 618, 621, 622], "diagonal_fix": [149, 189, 287, 425], "return_estim": [149, 189, 425, 430, 946], "likelihood": [149, 178, 189, 204, 278, 322, 330, 335, 336, 425, 430, 638, 886, 946], "loglik": [149, 330], "1891": 149, "unseen": [149, 189, 204, 425, 946], "descend": [149, 189, 204, 288], "1629": 149, "617": [149, 237, 261], "891": [149, 259, 261], "1802": [149, 207, 228, 278], "6172970459183": 149, "891121741394": 149, "1031535820446": 149, "evoked_whiten": [149, 157, 966], "cover": [150, 167, 174, 176, 178, 180, 182, 189, 190, 192, 193, 195, 198, 199, 200, 214, 221, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 242, 244, 247, 248, 256, 267, 271, 272, 276, 292, 303, 311, 322, 323, 339, 343, 518, 552, 553, 676, 684, 693, 773, 941], "tracker": [150, 192, 219, 242, 243, 308, 311, 319, 327, 333, 526, 570, 572, 629, 658, 661, 662, 690, 855, 946, 966], "asc": [150, 241, 322, 572, 662], "plot_gaz": [150, 241, 659], "task_fpath": 150, "et_fpath": [150, 241], "freeview_eyetrack": 150, "stim_fpath": 150, "naturalist": 150, "screen_resolut": [150, 658, 662], "1920": [150, 241, 658, 662, 855], "screen_siz": [150, 658, 660, 662], "screen_dist": [150, 658, 660, 662], "pixel": [150, 169, 199, 220, 241, 256, 274, 303, 310, 319, 321, 330, 331, 333, 334, 335, 336, 340, 341, 342, 343, 344, 347, 348, 349, 485, 492, 544, 552, 553, 637, 638, 658, 659, 662, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 855, 862, 863, 874, 878, 885, 889, 898, 901, 904, 906, 908, 909], "eyegaz": [150, 196, 220, 241, 244, 309, 310, 321, 322, 333, 334, 335, 336, 338, 445, 552, 553, 635, 659, 661, 663, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 855], "legibl": [150, 220, 241], "pupil": [150, 196, 241, 244, 309, 321, 322, 333, 334, 335, 336, 338, 445, 552, 553, 635, 661, 663, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "bad_acq_skip": [150, 220, 241, 286, 303, 308, 327, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 572, 574, 665, 676], "interpolate_gaz": [150, 241, 661], "dvn": 150, "intuit": [150, 199, 224, 271, 486, 501, 747, 748], "xpos_left": 150, "ypos_left": 150, "pupil_left": 150, "bad_": [150, 241, 246, 288, 308, 310, 552, 553], "bad_blink": [150, 220, 229, 241, 308, 661], "194": [150, 196, 215, 256, 260, 278, 280, 322], "429": [150, 224, 230, 237, 243, 256, 966], "504": [150, 256], "calib_animation_onset": 150, "148": [150, 196, 256, 261], "163": [150, 196, 237, 260, 261, 263, 346, 966], "188": [150, 164, 185, 196, 211, 237], "218": [150, 196, 215, 230, 237, 256, 260, 278, 966], "228": [150, 196, 219, 237, 256, 278, 654], "278": [150, 196, 237, 256, 261], "423": [150, 224], "428": [150, 224], "443": [150, 170, 224, 256, 278], "453": [150, 256, 261, 346], "458": [150, 211, 223, 256, 261], "463": [150, 237, 256, 261, 270, 273, 346, 966], "478": [150, 194, 201, 256, 261, 966], "483": [150, 224, 237, 256, 261], "513": [150, 171, 181, 261], "518": [150, 224, 261], "185": [150, 196, 213, 223, 224, 229, 237, 346], "225": [150, 171, 196, 213, 256, 260, 274, 278, 319], "425": [150, 965], "445": [150, 163], "475": [150, 261, 346], "515": [150, 302], "175": [150, 169, 177, 196, 213, 223, 237, 260, 261, 278, 638], "435": [150, 224, 255, 261], "485": [150, 152, 157, 261, 346, 966], "212": [150, 196, 224, 230, 237, 249, 256, 260, 261, 278, 966], "427": [150, 258, 261, 263, 966], "457": [150, 256], "477": [150, 237, 256, 261], "487": [150, 178, 194, 201, 224, 966], "517": [150, 237], "display_blank": 150, "217": [150, 195, 196, 237, 261, 263], "292": [150, 196, 237, 256, 261], "327": [150, 196, 223, 237], "432": [150, 198, 237, 256, 261], "502": [150, 224, 261, 603], "162": [150, 196, 224, 237, 260, 261, 278, 346], "242": [150, 196, 237, 260, 261, 271, 273, 301, 966], "309": [150, 196, 260, 261, 263, 278, 333, 334, 680, 795, 825, 828, 966], "434": [150, 237, 256], "444": [150, 237, 244, 249, 256, 261, 266, 966], "454": [150, 171, 237, 261, 346], "469": [150, 224, 261], "472": [150, 261, 278, 485], "519": [150, 261, 271], "522": [150, 224, 261], "209": [150, 196, 211, 230, 256, 278], "314": [150, 196, 256], "479": [150, 261], "484": [150, 170, 232, 256, 278, 637, 691], "494": [150, 261], "514": [150, 261], "109": [150, 164, 196, 233, 237, 256, 260, 319, 452], "254": [150, 187, 191, 196, 237, 256, 966], "414": [150, 237, 256], "439": [150, 237, 256, 261, 520], "474": [150, 185, 237, 256, 346], "489": [150, 237, 261, 271], "426": [150, 219, 256, 261], "431": [150, 256], "451": [150, 155, 157, 346, 966], "461": 150, "471": [150, 230, 256, 278], "476": [150, 278, 485], "496": [150, 198, 237, 261, 346], "501": [150, 195, 231, 237, 240, 256], "506": [150, 224, 256], "521": [150, 213, 237, 278, 425], "131": [150, 196, 224, 256, 405], "166": [150, 177, 196, 212, 230, 237, 260, 261, 266, 278], "196": [150, 196, 237, 260], "231": [150, 196, 237, 260, 261], "341": [150, 196, 223, 237, 256, 261, 603], "481": [150, 237, 256], "511": 150, "516": [150, 171, 185, 261], "216": [150, 196, 237, 246, 249, 256, 260, 966], "316": [150, 171, 196, 223, 237, 278, 491], "456": [150, 171, 183, 346], "141": [150, 196, 237, 256, 260, 261, 346], "gaze_to_calib": 150, "tracker_tim": 150, "934630": 150, "994633": 150, "1054655": 150, "986": [150, 223], "dvss": 150, "fixat": [150, 162, 220, 241, 309, 319, 509, 572], "canva": [150, 275, 322, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798, 855, 859, 884, 907], "screen": [150, 167, 198, 220, 241, 278, 285, 288, 307, 309, 310, 319, 333, 334, 552, 553, 638, 658, 659, 660, 662, 855, 876, 893, 899, 912], "1920x1080": [150, 658, 662, 855], "height": [150, 198, 241, 274, 286, 305, 321, 325, 338, 340, 341, 344, 347, 348, 349, 379, 383, 391, 396, 544, 658, 660, 662, 844, 854, 855, 904, 909], "get_cmap": [150, 163], "10001": [150, 230, 303], "gaze": [150, 241, 321, 322, 658, 659, 663, 855], "greater": [150, 171, 193, 228, 229, 233, 256, 259, 283, 293, 333, 334, 345, 426, 427, 428, 429, 526, 638, 671, 672, 778, 825, 828, 844], "darkest": 150, "set_und": 150, "0003": [150, 324], "scientif": [150, 278, 948, 956], "radian": [150, 220, 241, 310, 322, 436, 659, 660], "eyetracking_plot_heatmap": [150, 157, 966], "pathlib": [152, 184, 197, 199, 289, 294, 295, 303, 321, 343, 449, 450, 451, 454, 455, 456, 458, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 600], "root_path": 152, "__file__": [152, 197, 198, 199], "parent": [152, 177, 188, 197, 198, 199, 306, 310], "bti_path": 152, "test_pdf_linux": 152, "test_config_linux": 152, "test_hs_linux": 152, "magn": [152, 216, 322], "3600wh": 152, "pdf": [152, 212, 223, 278, 323, 325, 460, 547, 564], "critic": [152, 178, 187, 198, 205, 212, 230, 238, 256, 258, 261, 319, 676, 735, 842, 949], "mne_create_comp_data": [152, 212, 325, 564], "print_tabl": [152, 212], "magnes_3600wh": [152, 212], "kit_path": 152, "sqd": [152, 198, 322, 325, 556, 578, 702], "artemis_data_2017": 152, "10h": 152, "38m": 152, "59s_phantom_1k_hpi_1": 152, "artemis123_mneloc": 152, "1863": 152, "hpifit": [152, 237, 325], "ok": [152, 216, 237, 329, 339], "997": [152, 230, 238, 278], "cardin": [152, 193, 196, 244, 251, 291, 321, 375, 376, 405, 504], "meg_sensor": [152, 157, 284, 966], "plot_field": [153, 177, 304, 335, 336], "mne_helmet": [153, 157, 966], "ship": [154, 197, 256, 303, 322, 333, 334, 335, 336, 338, 392, 393, 398, 399, 537, 552, 553, 962], "joan": [154, 164, 186, 285, 286, 287, 288, 289, 291, 305], "massich": [154, 164, 186, 285, 286, 287, 288, 289, 291, 305], "mailsik": [154, 164, 186], "op": [154, 186, 211, 212, 237, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "against": [154, 167, 168, 176, 233, 244, 278, 281, 284, 295, 311, 746, 751], "current_montag": 154, "fiduci": [154, 163, 183, 186, 187, 197, 216, 217, 284, 285, 287, 289, 291, 293, 294, 295, 300, 303, 304, 305, 309, 318, 321, 322, 382, 385, 386, 395, 405, 406, 436, 437, 438, 459, 557, 560, 578, 588, 702, 727, 862], "dirnam": [154, 186, 198, 580], "mri_fiduci": [154, 183, 186, 210, 293, 862], "montage_sgskip": [154, 157, 966], "hcp": [155, 278, 284, 460, 959], "mmp1": [155, 278, 284, 460], "mmp": [155, 460], "Of": [155, 169, 227, 234, 235, 253, 681, 682], "acknowledg": [155, 230], "wu": 155, "minn": 155, "publicli": [155, 193, 312, 319, 477, 478], "hcpmmp1": 155, "add_annot": [155, 162, 182, 208, 309, 844], "aud_label": 155, "l_a1_roi": 155, "hcpmmp1_combin": [155, 208, 460], "aparc_sub": 155, "matthew": [155, 207, 278, 460], "glasser": [155, 278, 460], "timothi": [155, 278, 295, 460], "coalson": [155, 278, 460], "emma": [155, 278, 460, 638], "robinson": [155, 207, 278, 460], "hacker": [155, 278, 460], "harwel": [155, 278, 460], "essa": [155, 278, 460], "yacoub": [155, 278, 460], "kamil": [155, 278, 460], "ugurbil": [155, 278, 460], "jesper": [155, 278, 285, 460], "andersson": [155, 278, 460], "beckmann": [155, 278, 460], "jenkinson": [155, 278, 460], "stephen": [155, 207, 223, 256, 257, 278, 285, 333, 334, 460, 491, 638, 776, 777, 779, 780, 795, 825, 828], "essen": [155, 278, 460], "modal": [155, 217, 260, 266, 278, 460], "cerebr": [155, 278, 460], "536": [155, 215, 224, 237, 278, 460, 966], "nature18933": [155, 278, 460], "javeria": [155, 278], "hashmi": [155, 278], "fahimeh": [155, 278, 291], "mamashli": [155, 278, 291], "konstantino": [155, 278], "michmizo": [155, 278], "manfr": [155, 278, 290], "kitzbichl": [155, 278, 290], "santosh": [155, 278], "ganesan": [155, 278], "keri": [155, 278], "lee": [155, 278, 302, 339, 344, 638, 674], "garel": [155, 278], "susan": [155, 278, 742], "whitfield": [155, 278], "gabri": [155, 278], "randi": [155, 278, 605], "gollub": [155, 278], "jian": [155, 278], "kong": [155, 278], "kunjan": [155, 278], "rana": [155, 278], "kenet": [155, 278], "matur": [155, 278], "trajectori": [155, 278], "network": [155, 223, 278, 309, 366, 491, 638, 961], "mediat": [155, 278, 333, 334, 795, 825, 828], "018": [155, 156, 167, 176, 196, 253, 278, 654], "notat": [156, 234, 260, 266, 314, 322], "odd": [156, 230, 322, 394, 484], "test_raw": [156, 195, 325], "eog1": 156, "eog2": 156, "011": [156, 167, 176, 196, 230, 253, 278], "012": [156, 167, 176, 196, 247, 253], "017": [156, 167, 176, 196, 244, 253], "019": [156, 167, 176, 196, 236, 253, 278], "021": [156, 167, 168, 176, 193, 196, 253], "022": [156, 167, 176, 196, 211, 253], "023": [156, 167, 169, 176, 196, 253, 278], "024": [156, 167, 176, 196, 253, 261, 278, 776, 777, 779, 780], "po7": [156, 271], "poz": [156, 271], "027": [156, 167, 176, 196, 253, 256, 278, 316, 366, 638, 782, 783], "028": [156, 167, 176, 196, 253, 278, 333, 334, 646, 795, 825, 828], "029": [156, 167, 176, 196, 253, 278], "standard_1020": [156, 178, 186, 197, 251, 577], "fdt": [156, 195, 310, 569, 700], "msec": [156, 178], "new_ev": [156, 245, 511, 513, 603], "203125": 156, "12z": [156, 257], "group_bi": [156, 169, 257, 287, 289, 293, 304, 325, 333, 334, 335, 336, 552, 553, 876, 877, 882, 899], "vline": [156, 288, 310, 335, 336, 870, 884], "roi_erpimage_by_rt": [156, 157, 966], "998": [157, 211, 219, 238, 261, 651, 656, 667, 670], "xhemi": [157, 161, 345, 431, 713, 966], "topo_custom": [157, 160, 966], "ssp_projs_sensitivity_map": [157, 158, 966], "643": [157, 158, 966], "topo_compare_condit": [157, 159, 966], "ecg_fnam": 158, "ssp_ecg_map": 158, "arg": [158, 260, 266, 311, 325, 338, 346, 771], "audio": [159, 202, 219, 224, 269, 278, 333, 334, 335, 336, 492, 552, 553, 793, 799, 815], "nleft": 159, "20hz": 160, "return_freq": [160, 164, 269, 270, 271, 305, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "my_callback": 160, "ch_idx": [160, 237, 258, 270, 310, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "callback": [160, 275, 284, 301, 436, 844, 859, 926, 927, 929], "fig_facecolor": [160, 169, 269, 333, 334, 335, 336, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 859, 907], "axis_facecolor": [160, 269, 333, 334, 335, 336, 552, 553, 793, 794, 799, 800, 859], "axis_spinecolor": [160, 859], "on_pick": [160, 859], "gcf": 160, "639": [160, 193, 199, 237], "stc_path": [161, 199], "fsaverage_sym": [161, 431], "left_right": [161, 431], "stc_xhemi": 161, "70314401": 161, "48867635": 161, "29875944": 161, "stereoelectroencephalographi": [162, 319], "talairach": [162, 187, 207, 208, 286, 289, 322, 348, 349, 437, 438, 720, 910, 946], "xfm": [162, 286, 322, 348, 349, 438, 720, 910], "involv": [162, 163, 183, 185, 187, 227, 230, 231, 234, 246, 312, 322, 438, 640, 928], "pip": [162, 163, 173, 188, 311, 951, 954, 957, 960], "conda": [162, 163, 188, 287, 311, 314, 951, 952, 954, 957, 960], "li": [162, 163, 187, 199, 236, 278, 291, 292, 293, 294, 295, 303, 304, 309, 322, 964], "adam2392": [162, 163], "sample_seeg_ieeg": 162, "1310640": 162, "1370605": 162, "1371": [162, 184, 224, 269, 278, 333, 334, 335, 336, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814], "isi": [162, 219], "mni_tal": [162, 163, 382, 395], "this_subject_dir": 162, "head_mri_t": 162, "sample_seeg": 162, "mri_mni_t": [162, 720], "taliarach": 162, "fro": [162, 529, 831], "rostral": [162, 844], "warp": [162, 183, 186, 198, 278, 295, 319, 673], "combine_transform": 162, "view_kwarg": [162, 184, 187], "tan": [162, 240, 295], "nearbi": [162, 163, 223, 227, 235, 238, 252, 278, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 671, 676, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "atla": [162, 208, 278, 295, 319, 321, 322, 325, 331, 340, 341, 344, 346, 347, 348, 349, 379, 519, 592, 738, 946], "lami": 162, "lttr": 162, "isdigit": 162, "lpm": 162, "lsma": 162, "elec": [162, 257], "lpli": 162, "lpcn": 162, "ltpo": 162, "lpit": 162, "lacn": 162, "lofc": 162, "lbri": 162, "rahp": 162, "rphp": 162, "lent": 162, "lphg": 162, "lstg": 162, "ctx": 162, "putamen": 162, "add_volume_label": [162, 208, 295, 303, 306, 308, 844], "lfp": 162, "Its": [162, 237, 322], "view_layout": [162, 207, 340, 341, 344, 347, 348, 349, 844, 904, 909], "sagitt": [162, 187, 207, 331, 844, 864, 874], "websit": [162, 163, 178, 204, 208, 217, 235, 275, 311, 312, 477, 478, 653, 955], "m4": 162, "sai": [162, 163, 230, 231, 234, 236, 244, 251, 258, 261, 311, 318, 840, 958], "568": [162, 224, 237, 261], "20_seeg": [162, 166, 966], "epilepsi": [163, 294], "seizur": [163, 294], "complementari": [163, 229, 314], "seeg": [163, 165, 166, 192, 196, 244, 251, 282, 286, 288, 289, 292, 293, 294, 295, 302, 305, 307, 310, 321, 322, 333, 334, 335, 336, 338, 346, 348, 381, 382, 386, 437, 443, 445, 537, 552, 553, 559, 568, 634, 635, 636, 638, 718, 720, 733, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 862, 868, 902, 950, 959, 966], "liberti": [163, 278, 292, 294, 310], "hamilton": [163, 278, 292, 294, 310], "libertyhamilton": 163, "mne_bid": [163, 213], "bidspath": [163, 213, 310], "read_raw_bid": [163, 213], "bids_root": 163, "bids_path": [163, 213], "pt1": 163, "session": [163, 167, 169, 176, 177, 193, 198, 199, 228, 238, 240, 246, 298, 303, 309, 318, 323, 333, 334, 447, 448, 552, 553, 638, 662, 876, 893, 899, 907, 946, 951], "presurgeri": 163, "ictal": 163, "datatyp": [163, 213, 220, 286], "trans_bandwidth": [163, 230, 521, 524, 552, 553], "get_posit": [163, 274, 293, 382], "add_mni_fiduci": [163, 295, 382], "posterior": [163, 183, 187, 303, 321, 339, 382, 394, 547, 766], "commissur": [163, 382], "epoch_length": 163, "269079": 163, "2201": 163, "ad1": 163, "att1": 163, "ast1": 163, "g16": 163, "slt1": 163, "sensor_color": [163, 309, 844, 862], "gamma_power_t": 163, "gamma_info": 163, "gamma_power_at_15": 163, "rgba": [163, 295, 339, 340, 341, 344, 347, 348, 349, 844, 861, 865, 904, 909, 910], "tolist": 163, "funcanim": [163, 335, 336], "gamma_pow": 163, "x_line": 163, "epileptiform": 163, "progress": [163, 178, 192, 198, 229, 278, 287, 288, 293, 306, 307, 311, 488, 495], "posteriorli": 163, "xyz_pt": 163, "vmid": 163, "intra": [163, 760], "646": [163, 166, 261, 966], "30_ecog": [163, 166, 966], "cite": [164, 311, 319, 332, 333, 334, 335, 336, 461, 524, 789, 790, 791, 795, 796, 797, 798], "toi": [164, 256, 314], "answer": [164, 235, 261, 271, 311, 946], "question": [164, 168, 238, 271, 311, 313, 947, 955], "alic": 164, "tackl": 164, "chambon": [164, 278, 288], "stan": 164, "randomforestclassifi": 164, "accuracy_scor": 164, "functiontransform": 164, "associ": [164, 171, 195, 199, 219, 227, 234, 235, 237, 241, 256, 258, 275, 278, 289, 308, 310, 311, 322, 327, 328, 332, 333, 334, 335, 336, 493, 536, 552, 553, 555, 599, 700, 702, 739, 771, 776, 781, 789, 790, 791, 794, 795, 796, 797, 798, 868, 877, 879, 880, 882, 897, 898, 951], "ground": [164, 193, 235, 314, 638, 897], "truth": [164, 235, 638, 897], "expert": [164, 189, 311, 312, 946], "alice_fil": 164, "bob_fil": 164, "raw_train": 164, "marker": [164, 178, 195, 198, 204, 216, 217, 223, 229, 234, 287, 288, 289, 292, 294, 295, 310, 319, 325, 330, 333, 334, 335, 336, 339, 340, 341, 342, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 485, 488, 492, 495, 498, 501, 502, 528, 541, 543, 552, 553, 556, 578, 596, 599, 600, 611, 612, 621, 622, 637, 638, 643, 650, 651, 653, 702, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 846, 863, 876, 878, 881, 885, 889, 898, 899, 900, 901, 905, 906, 908], "infer_typ": [164, 303, 307, 561, 568], "issu": [164, 167, 168, 171, 178, 188, 223, 230, 231, 234, 245, 246, 280, 288, 289, 293, 294, 303, 304, 311, 312, 313, 314, 321, 333, 334, 339, 344, 358, 360, 496, 552, 553, 580, 638, 683, 752, 755, 876, 893, 899, 947, 951], "annot_train": 164, "emit_warn": [164, 327, 552, 553, 677], "resp": [164, 196, 244, 294, 321, 322, 333, 334, 335, 336, 338, 343, 381, 445, 552, 553, 568, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 876, 899], "physionet_sleep": 164, "wake": 164, "rem": [164, 195], "abbrevi": [164, 202, 234, 305, 322, 844], "rapid": [164, 171, 223, 230, 278, 491], "long": [164, 167, 168, 173, 227, 230, 231, 233, 237, 245, 246, 251, 257, 264, 265, 283, 288, 291, 292, 303, 305, 311, 312, 314, 318, 331, 333, 334, 335, 336, 340, 341, 344, 345, 347, 348, 349, 425, 431, 552, 553, 608, 641, 646, 676, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 955], "awak": 164, "night": [164, 319, 477], "imbal": [164, 260, 648, 649, 665, 676, 687], "trim": [164, 333, 334], "occurr": [164, 171, 227, 509, 511], "annotation_desc_2_event_id": 164, "redefin": 164, "events_train": 164, "chunk_dur": [164, 195, 288, 310, 514], "stage_color": 164, "rcparam": [164, 230, 274, 287, 902], "prop_cycl": 164, "by_kei": 164, "raw_test": 164, "annot_test": 164, "events_test": 164, "epochs_test": 164, "1103": [164, 205, 224, 278], "562": [164, 224], "signatur": [164, 228, 260, 305, 307, 311, 320, 488, 495, 502], "ci": [164, 173, 230, 239, 256, 269, 283, 311, 314, 638, 768, 793, 794, 799, 800, 870, 891], "\u00b5v\u00b2": 164, "eeg_power_band": 164, "psds_band": 164, "boilerpl": 164, "sckit": 164, "manner": [164, 178, 205, 256, 257, 284], "thank": [164, 167, 311], "pipe": [164, 311, 319], "n_estim": [164, 488, 495], "acc": 164, "6854034451495921": 164, "ye": [164, 237, 238, 256, 293, 335, 552, 574, 706, 946], "databas": [164, 278, 461, 477, 478], "mathieu": [164, 278, 295, 303, 304, 305, 306, 307, 308, 309, 310, 964], "galtier": [164, 278], "pierrick": [164, 278], "arnal": [164, 278], "gill": [164, 278], "wainrib": [164, 278], "architectur": [164, 278, 293], "rehabilit": [164, 278], "758": [164, 198, 201, 278, 966], "769": [164, 237, 278], "tnsre": [164, 278], "2813138": [164, 278], "kemp": [164, 278, 319, 477, 478], "zwinderman": [164, 278, 319, 477, 478], "tuk": [164, 278, 319, 478], "kamphuisen": [164, 278, 319, 477, 478], "obery\u00e9": [164, 278, 319, 478], "feedback": [164, 278, 300, 319, 478], "microcontinu": [164, 278, 319, 478], "1185": [164, 278, 319, 478], "1194": [164, 278, 319, 478], "867928": [164, 278, 319, 478], "1458": 164, "60_sleep": [164, 166, 966], "polysomnographi": [165, 166, 192, 288, 319, 327, 333, 477, 478, 514, 568, 694, 793, 879, 966], "psg": [165, 166, 192, 288, 319, 327, 333, 477, 514, 568, 694, 793, 879, 966], "auto_tutori": [166, 175, 181, 191, 198, 201, 215, 222, 226, 243, 249, 250, 255, 263, 268, 273, 277], "567": [166, 224, 237, 278, 966], "possibli": [167, 176, 193, 199, 230, 258, 259, 303, 318, 333, 334, 335, 336, 342, 345, 366, 367, 380, 425, 429, 430, 441, 442, 443, 458, 485, 492, 528, 529, 547, 549, 550, 552, 553, 555, 616, 638, 657, 665, 771, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 878, 885, 886, 898], "del_proj": [167, 176, 227, 229, 234, 235, 236, 284, 333, 334, 335, 336, 552, 553, 965], "plot_psd": [167, 169, 247, 269, 270, 282, 284, 285, 286, 289, 291, 292, 295, 302, 308, 311, 322, 333, 334, 335, 336, 343, 552, 553, 965], "plot_psd_topomap": [167, 169, 269, 291, 292, 295, 302, 305, 333, 334, 335, 336, 552, 553, 965], "sample_data_fold": [167, 169, 172, 173, 182, 193, 194, 195, 196, 197, 227, 228, 229, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 269], "sample_data_raw_fil": [167, 169, 172, 173, 193, 194, 195, 196, 227, 228, 229, 231, 233, 234, 235, 236, 238, 244, 245, 246, 247, 269], "sample_data_events_fil": [167, 172, 245], "events_from_fil": [167, 245], "bare": [167, 193], "integ": [167, 169, 170, 172, 176, 177, 178, 187, 193, 195, 196, 198, 202, 217, 220, 231, 233, 244, 245, 251, 261, 274, 284, 288, 289, 291, 292, 293, 295, 321, 322, 325, 327, 328, 330, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 366, 367, 380, 383, 384, 391, 397, 399, 425, 426, 427, 428, 429, 430, 441, 442, 443, 485, 487, 492, 501, 502, 506, 507, 514, 523, 524, 527, 528, 529, 543, 547, 549, 550, 552, 553, 588, 614, 615, 616, 637, 638, 640, 653, 654, 655, 656, 664, 668, 672, 682, 684, 691, 700, 702, 706, 737, 739, 757, 775, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 827, 830, 863, 870, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 889, 890, 891, 893, 895, 897, 898, 899, 900, 901, 906, 908], "299693": [167, 178], "699283": 167, "quot": [167, 223, 311, 322, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "didn": [167, 171, 286, 289, 293, 294, 303, 333, 520, 795], "string": [167, 170, 171, 172, 176, 177, 195, 196, 198, 199, 229, 241, 244, 245, 246, 269, 275, 282, 286, 287, 288, 289, 291, 292, 294, 295, 299, 303, 305, 307, 309, 310, 311, 314, 316, 326, 327, 328, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 380, 382, 391, 397, 399, 410, 424, 425, 429, 430, 434, 441, 446, 449, 450, 451, 454, 455, 456, 458, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 485, 487, 488, 492, 495, 501, 502, 506, 509, 514, 519, 520, 533, 535, 537, 551, 552, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 592, 597, 605, 611, 612, 635, 636, 637, 638, 640, 641, 653, 654, 655, 656, 658, 661, 664, 665, 667, 668, 672, 676, 682, 684, 691, 700, 702, 706, 724, 745, 746, 747, 748, 749, 751, 754, 757, 766, 770, 772, 775, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 827, 829, 831, 832, 834, 844, 853, 862, 863, 870, 876, 877, 878, 880, 882, 883, 884, 885, 886, 889, 890, 897, 898, 899, 900, 901, 904, 906, 908, 909, 910, 917, 929, 946, 951, 952], "event_dict": [167, 169, 172, 176, 178, 193, 195, 239, 241, 245, 251, 269], "buttonpress": [167, 176, 178, 193, 195, 199, 245], "mention": [167, 171, 178, 193, 195, 196, 197, 202, 230, 234, 235, 236, 244, 261, 311, 424, 917, 918], "haven": [167, 246, 287, 311, 323], "turn": [167, 176, 177, 179, 202, 219, 228, 231, 233, 234, 235, 236, 271, 275, 283, 284, 285, 305, 312, 319, 322, 326, 328, 333, 334, 526, 594, 738, 845, 867], "accommod": [167, 285, 288], "drop_log": [167, 169, 229, 292, 294, 299, 301, 328, 333, 334, 343, 650, 651, 795, 796, 875], "too_short": [167, 178, 333, 795], "forget": [167, 184, 185, 195, 311], "brows": [167, 198, 199, 208, 228, 246, 289, 307, 320, 331, 333, 334, 552, 553, 638, 874, 876, 893, 899, 962], "seem": [167, 168, 170, 171, 178, 179, 189, 219, 230, 233, 235, 251, 271, 311, 638], "duplic": [167, 170, 178, 179, 188, 251, 283, 284, 285, 287, 288, 289, 303, 328, 333, 334, 335, 336, 338, 339, 343, 382, 410, 552, 553, 724], "scrollbar": [167, 289, 303, 333, 334, 552, 553, 638, 876, 893, 899], "focus": [167, 168, 208, 246, 311, 333, 334, 552, 553, 638, 746, 751, 876, 893, 899, 948, 956, 959], "bracket": [167, 176, 178, 196, 217, 244, 251, 269, 303], "catch": [167, 169, 193, 208, 260, 266, 311], "charact": [167, 193, 196, 228, 244, 245, 283, 288, 291, 292, 294, 295, 303, 309, 310, 311, 394, 569, 587, 694, 700, 745, 746, 747, 748, 749, 751, 853], "complain": 167, "ask": [167, 171, 187, 311, 312, 316, 319, 947], "except": [167, 170, 198, 202, 203, 220, 238, 244, 289, 292, 293, 295, 303, 307, 311, 322, 333, 334, 335, 336, 338, 353, 354, 398, 419, 420, 425, 477, 526, 552, 553, 554, 627, 639, 665, 716, 780, 784, 834], "keyerror": [167, 330, 333, 334, 338, 357, 372, 604, 658, 831], "rais": [167, 171, 236, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 307, 309, 311, 312, 328, 330, 333, 334, 335, 336, 338, 339, 343, 344, 347, 353, 354, 357, 372, 386, 409, 413, 419, 420, 425, 429, 432, 434, 436, 441, 442, 477, 504, 512, 526, 532, 533, 535, 552, 553, 574, 604, 627, 638, 658, 675, 696, 707, 725, 727, 730, 734, 739, 776, 777, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 823, 824, 831, 879, 890, 937, 939], "reorder_channel": [167, 176, 244, 286, 293, 333, 334, 335, 336, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "exploratori": [167, 176, 194, 234, 244, 257, 320], "epochs_eeg": 167, "new_ord": [167, 176], "epochs_subset": 167, "032": [167, 176, 196, 253, 257, 278], "034": [167, 176, 196, 253], "035": [167, 176, 196, 253], "038": [167, 176, 196, 253], "039": [167, 169, 176, 196, 253], "041": [167, 169, 176, 196, 253], "042": [167, 176, 196, 253, 322], "043": [167, 176, 196, 253], "045": [167, 169, 176, 196, 253], "046": [167, 169, 176, 196, 253, 278, 322, 749], "047": [167, 169, 176, 196, 197, 201, 253, 966], "049": [167, 169, 176, 196, 253], "052": [167, 169, 176, 189, 196, 212, 228, 253, 278, 333, 334, 795, 825, 828], "054": [167, 169, 176, 196, 236, 253, 278, 616, 746, 751], "055": [167, 169, 176, 196, 236, 253, 278, 461], "056": [167, 169, 176, 196, 253], "058": [167, 169, 176, 196, 247, 253], "unchang": [167, 176, 234, 333, 334, 335, 336, 552, 553, 677, 728], "blinkchannel": 167, "20auditori": 167, "20buttonpress": 167, "4face": [167, 178], "4visual": 167, "19visual": 167, "shorter_epoch": 167, "include_tmax": [167, 289, 295, 305, 331, 332, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 789, 790, 791, 795, 796, 797, 798], "obj": [167, 188, 292, 719, 944], "0998976": 167, "expand": [167, 171, 187, 229, 234, 241, 295, 301, 303, 304, 307, 333, 334, 335, 336, 339, 344, 347, 425, 515, 518, 543, 552, 553, 793, 794, 799, 800, 878, 946, 965], "later_epoch": 167, "tshift": [167, 332, 333, 334, 335, 336, 513, 789, 790, 791, 795, 796, 797, 798], "amount": [167, 168, 189, 194, 205, 228, 235, 236, 252, 271, 291, 322, 330, 332, 333, 334, 335, 336, 340, 341, 342, 343, 344, 347, 348, 349, 434, 446, 485, 492, 525, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 597, 613, 637, 638, 685, 701, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 855, 876, 878, 885, 889, 898, 899, 901, 904, 906, 908, 909, 946], "00166496": 167, "00332992": 167, "99833504": 167, "99667008": 167, "enforc": [167, 291, 671], "eog_data": 167, "channel_4_6_8": 167, "arr": [167, 244, 271, 768], "repeatedli": [167, 233, 235, 291, 552, 553, 958], "hierarch": [167, 170, 171, 269, 278, 283, 321, 509, 547, 603], "multiindex": [167, 333, 334, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "aggreg": [167, 170, 172, 270, 285, 309, 311, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 384, 509, 519, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 870, 877, 878], "endpoint": [167, 170, 195, 199, 251, 311, 328, 333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 356, 655, 706, 707, 789, 790, 791, 795, 796, 797, 798, 812, 822], "sort_index": 167, "inplac": [167, 172, 311, 327, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 387, 510, 520, 552, 553, 634, 690, 743], "audiovisu": [167, 193, 244], "epochs_from_fil": 167, "convent": [167, 187, 197, 199, 216, 218, 234, 235, 245, 278, 305, 308, 322, 325, 338, 373, 394, 404, 570, 684, 707, 723, 812, 821, 822, 844], "basenam": [167, 245, 344, 347], "_epo": 167, "adher": [167, 170, 429, 517], "epochsfif": [167, 170, 699], "anyth": [167, 216, 233, 310, 311, 459, 844, 957], "557": [167, 224, 261, 278, 477], "10_epochs_overview": [167, 175, 966], "aldai": [168, 278, 283, 285, 286, 304], "reason": [168, 176, 177, 189, 193, 198, 199, 211, 228, 229, 230, 231, 232, 234, 235, 236, 244, 246, 256, 265, 266, 278, 303, 311, 312, 318, 322, 332, 333, 334, 335, 336, 343, 367, 425, 443, 497, 552, 553, 638, 650, 666, 669, 676, 776, 777, 779, 780, 782, 789, 790, 791, 795, 796, 797, 798, 844, 875, 912, 914, 946], "safer": [168, 340, 341, 344, 347, 348, 349, 565], "distort": [168, 217, 230, 247, 271, 565, 834], "spuriou": [168, 173, 189, 526, 946], "carina": [168, 304, 310], "forster": [168, 304, 310], "email": [168, 311, 958], "carinaforster0611": 168, "baseline_tmin": 168, "baseline_tmax": 168, "4957": [168, 178, 405], "trad_aud": 168, "trad_vi": 168, "heterogen": [168, 229, 283, 288], "aud_predictor": 168, "vis_predictor": 168, "trickier": 168, "seaprat": 168, "baseline_predictor": 168, "singleton": [168, 293, 844], "1e6": [168, 176, 178, 274, 330, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 425, 429, 430, 485, 492, 494, 552, 553, 877, 880, 882, 884, 885, 907], "\u03bcv": 168, "microvolt": [168, 216, 322, 563], "unstabl": [168, 189, 232, 293, 425, 946], "transpos": [168, 244, 256, 257, 261, 264, 265, 266, 293], "reg_model": 168, "6360": 168, "lm": [168, 646], "namedtupl": [168, 774], "dict_kei": [168, 196, 234], "1998": [168, 176, 278, 322], "49949": [168, 176], "tell": [168, 177, 182, 189, 193, 198, 229, 233, 235, 241, 244, 258, 260, 266, 311, 313, 322, 346, 955, 956], "strongli": [168, 199, 227, 228, 236, 311, 318, 322, 552, 553, 586, 946, 951], "\u03b2": [168, 169, 247], "constant": [168, 183, 187, 197, 224, 227, 230, 240, 271, 286, 288, 289, 319, 321, 322, 328, 333, 334, 335, 336, 338, 443, 552, 553, 555, 557, 588, 832], "effect_of_baselin": 168, "unsurprisingli": 168, "farther": [168, 946], "weaker": [168, 322], "pure": [168, 311, 344], "influenc": [168, 230, 232, 233, 278, 312], "reg_aud": 168, "reg_vi": 168, "show_sensor": [168, 171, 193, 286, 870], "truncate_yaxi": [168, 261, 285, 289, 870], "subtl": 168, "apart": [168, 177, 195, 251], "diff_tradit": 168, "diff_regress": 168, "themselv": [168, 312, 335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 616, 886], "ought": 168, "persist": [168, 169, 227, 231, 281, 946], "interaction_effect": 168, "randomli": [168, 193, 256, 590, 674, 693, 755], "glm": [168, 278, 959], "lift": [168, 205, 224, 264, 266, 278], "13451": [168, 278], "15_baseline_regress": [168, 175, 966], "imagemap": 169, "discontinu": [169, 173, 174, 175, 178, 192, 195, 230, 233, 244, 245, 251, 269, 321, 333, 526, 572, 699, 793, 794, 799, 800, 966], "That": [169, 171, 188, 189, 230, 261, 274, 309, 322, 335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 616, 789, 886], "scroll": [169, 193, 246, 247, 275, 286, 303, 331, 333, 334, 552, 553, 638, 874, 876, 893, 899, 915], "enabl": [169, 199, 247, 271, 280, 282, 283, 285, 289, 292, 294, 302, 304, 305, 307, 309, 312, 318, 322, 325, 326, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 445, 544, 552, 553, 653, 683, 735, 776, 777, 779, 780, 793, 794, 795, 796, 839, 844, 846, 854, 859, 862, 881, 899, 904, 909, 912, 951, 958], "unappli": [169, 177, 234, 236, 303, 333, 334, 335, 336, 515, 516, 517, 518, 552, 553], "purg": 169, "catch_trials_and_buttonpress": 169, "event_color": [169, 241, 245, 291, 293, 333, 334, 552, 553, 876, 899], "butterfli": [169, 176, 178, 179, 199, 228, 234, 238, 247, 285, 288, 289, 303, 333, 334, 335, 336, 343, 552, 553, 638, 876, 880, 883, 890, 899, 915, 949], "ecg_proj_fil": [169, 234], "ecg_proj": [169, 173, 234, 235], "41auditori": 169, "40button": 169, "8face": 169, "8visual": 169, "40visual": 169, "room": [169, 178, 189, 199, 211, 219, 231, 233, 234, 236, 238, 240, 274, 278, 286, 304, 318, 321, 322, 344, 425, 430, 648, 649, 665, 676, 677], "inherit": [169, 269, 306, 425], "joint": [169, 209, 235, 278, 291, 292, 304, 305, 314, 333, 334, 335, 336, 342, 485, 492, 552, 553, 733, 793, 794, 799, 800, 878, 885, 898], "\u03b4": [169, 247], "\u03b8": [169, 247], "\u03b3": [169, 247], "jointli": [169, 189, 233, 235, 280, 288, 291, 305, 333, 334, 335, 336, 342, 366, 367, 426, 427, 428, 485, 492, 552, 553, 638, 650, 651, 793, 794, 799, 800, 878, 885, 897, 898, 946], "prefer": [169, 178, 197, 198, 217, 218, 220, 230, 233, 234, 311, 312, 313, 322, 328, 333, 334, 335, 336, 431, 492, 514, 533, 552, 553, 638, 732, 789, 793, 795, 797, 799, 900, 951, 956, 958, 959], "untransform": 169, "docstr": [169, 178, 207, 230, 231, 238, 244, 247, 269, 280, 288, 295, 303, 305, 306, 307, 308, 310, 352, 366, 367, 547, 549, 550, 616, 793, 794, 795, 796, 840, 842, 861], "plot_topo_imag": [169, 282, 333, 334], "accompani": [169, 312, 754], "scalebar": [169, 294], "highli": [169, 216, 235, 252, 260, 573, 701, 705, 775], "customiz": [169, 335, 336, 789, 790, 791, 795, 796, 797, 798, 883], "respond": [169, 171, 223, 275, 312], "opposit": [169, 195, 322, 592], "0242": [169, 196], "pop": [169, 177, 228, 304, 307, 330, 333, 334, 338, 357, 372, 604, 658, 831, 907, 951], "had": [169, 178, 194, 195, 202, 208, 229, 230, 231, 234, 235, 247, 269, 271, 287, 289, 294, 295, 301, 303, 304, 308, 314, 322, 333, 334, 478, 508, 665, 706, 795, 926], "At": [169, 219, 232, 233, 239, 287, 311, 318, 390, 552, 958], "fullscreen": [169, 304, 544], "unusu": [169, 211, 228, 232], "reject_criteria": [169, 172, 178, 193, 229, 239], "3000e": [169, 172, 229], "\u00b5v": [169, 171, 172, 176, 178, 193, 229, 235, 257, 274, 294, 321, 322, 325, 330, 333, 334, 335, 336, 340, 341, 342, 343, 344, 347, 348, 349, 485, 492, 552, 553, 593, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 876, 877, 878, 880, 882, 885, 889, 898, 899, 901, 906, 907, 908], "font_color": [169, 333, 334, 789, 790, 791, 795, 796, 797, 798, 907], "reinforc": 169, "disguis": 169, "mayb": [169, 332, 333, 334, 335, 336, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "20_visualize_epoch": [169, 175, 966], "who": [170, 284, 285, 286, 287, 291, 292, 293, 294, 295, 310, 311, 312, 319, 325, 338, 638, 956], "lexic": [170, 319], "decis": [170, 219, 230, 271, 319, 328, 333, 334, 597, 699], "kiloword_data_fold": 170, "kiloword_data_fil": 170, "capabl": [170, 182, 193, 195, 275, 287, 300, 311, 319, 448, 844, 911, 915, 930, 931, 951, 959], "surviv": [170, 338], "reload": 170, "attach": [170, 196, 228, 241, 244, 257, 269, 319, 321, 509, 604], "numberoflett": [170, 257], "english": [170, 319], "lexicon": 170, "wordfrequ": 170, "render": [170, 183, 187, 198, 199, 285, 288, 292, 293, 295, 303, 304, 309, 311, 322, 323, 325, 333, 334, 340, 341, 343, 344, 347, 348, 349, 552, 553, 638, 844, 854, 876, 893, 899, 904, 905, 909, 912, 914, 958], "orthographicdist": 170, "bigramfrequ": 170, "450000": 170, "189490": 170, "900000": 170, "700704": 170, "546": 170, "600000": 170, "858537": 170, "700000": 170, "454540": 170, "1095": 170, "539076": 170, "686": 170, "drudgeri": 170, "473684": 170, "556303": 170, "732357": 170, "991226": 170, "859": [170, 261], "545879": 170, "billiard": 170, "500000": [170, 171, 223], "672098": 170, "838597": 170, "958": [170, 209, 215, 233, 257, 966], "698970": 170, "615": 170, "088112": 170, "959": [170, 261], "solenoid": 170, "111111": 170, "301030": 170, "544507": 170, "iloc": [170, 172], "iat": 170, "nindex": 170, "arbitrarili": [170, 185, 261, 322], "highcomplex": 170, "But": [170, 171, 199, 211, 230, 238, 240, 251, 256, 264, 271, 274, 320, 638], "startswith": [170, 295], "district": 170, "disarrai": 170, "disast": 170, "diseas": 170, "discord": 170, "dispos": 170, "lasso": [170, 278, 283, 333, 334, 335, 336, 338, 552, 553, 876, 899, 902], "tentacl": 170, "banjo": 170, "corsag": 170, "rich": [170, 198, 951, 956], "typhoon": 170, "bungalow": 170, "colossu": 170, "linguist": 170, "dozen": [170, 228, 233, 235, 320], "share": [170, 218, 230, 241, 246, 289, 291, 295, 304, 311, 320, 322, 327, 366, 690, 776, 777, 779, 780, 925], "letter": [170, 197, 216, 257, 278, 284, 844], "n_letter": 170, "intens": [170, 187, 198, 208, 209, 218, 233, 303, 321, 335, 336, 340, 341, 344, 347, 348, 349, 351, 614, 615, 671, 844, 846, 881, 904, 909], "sort_ord": 170, "obviou": [170, 198, 228, 233, 247, 264], "reaction": [170, 256, 282, 333, 334, 877], "new_metadata": 170, "foo": [170, 177, 198, 311, 333, 334, 458], "30_epochs_metadata": [170, 175, 966], "introductori": [171, 177, 189, 195, 196, 227, 244, 245, 256, 946], "straight": [171, 333, 334, 335, 336, 338, 552, 553, 902], "creation": [171, 176, 182, 195, 229, 246, 280, 282, 284, 285, 291, 292, 294, 300, 303, 304, 310, 322, 325, 327, 330, 333, 334, 343, 346, 378, 484, 650, 651], "familiar": [171, 227, 274, 319, 954], "ourselv": [171, 202, 232, 233, 235], "incorrect": [171, 220, 229, 230, 240, 278, 291, 294, 301, 302, 303, 304, 305, 308, 309, 310, 322, 794, 800, 951], "sophist": [171, 217, 527], "decid": [171, 239, 271, 312, 328, 333, 334, 597, 699, 875], "1500": 171, "invalid": [171, 258, 287, 293, 303, 304, 661], "why": [171, 178, 185, 187, 220, 229, 230, 234, 244, 253, 256, 260, 278, 312, 333, 334, 795, 825, 828], "997070": 171, "797": [171, 261], "343750": 171, "917969": 171, "425781": 171, "799": 171, "392578": 171, "990234": 171, "402344": 171, "eleg": 171, "pertain": 171, "00000": 171, "792": 171, "496094": 171, "437500": 171, "465820": 171, "796": 171, "547852": 171, "46582": 171, "descriptor": [171, 193, 269, 278, 321, 509, 552, 553], "hed": [171, 178, 269, 278, 321, 509], "keep_first": [171, 509], "regardless": [171, 178, 198, 218, 232, 235, 321, 526, 897], "notna": 171, "454102": 171, "443359": 171, "400391": 171, "499023": 171, "584961": 171, "421875": 171, "399414": 171, "316406": 171, "416992": 171, "386719": 171, "410156": 171, "467773": 171, "377930": 171, "483398": 171, "457031": 171, "566406": 171, "395508": 171, "354492": 171, "326172": 171, "322266": 171, "482422": 171, "606": [171, 213, 215, 224, 966], "371094": 171, "342773": 171, "307617": 171, "706": 171, "442383": 171, "728": [171, 210, 215, 237, 966], "376953": 171, "first_stimulu": 171, "perfect": [171, 185, 230, 238], "stimulus_sid": 171, "response_correct": 171, "correct_response_count": 171, "rememb": [171, 177, 188, 198, 203, 228, 233, 234, 244, 261, 322], "epochs_tmin": 171, "epochs_tmax": 171, "strong": [171, 210, 228, 233, 260, 318, 638, 746, 751], "099609375": 171, "lastli": [171, 199, 237, 239, 270, 271], "vis_erp": 171, "vis_erp_slow": 171, "asid": [171, 199, 227, 266], "fact": [171, 176, 178, 208, 209, 227, 233, 234, 238, 245, 318, 321, 322, 491, 497, 638, 706], "noisier": [171, 219], "deal": [171, 189, 198, 207, 230, 233, 234, 236, 245, 256, 260, 264, 266, 286, 288, 289, 291, 293, 314, 335, 336, 340, 341, 344, 347, 348, 349, 366, 367, 529, 638, 649, 665, 676, 690], "keep_last": [171, 509], "previous": [171, 176, 197, 232, 233, 282, 283, 284, 291, 292, 294, 295, 303, 304, 310, 325, 359, 366, 367, 726, 844], "last_": [171, 509], "last_stimulu": 171, "last_respons": 171, "431641": 171, "795": 171, "576172": 171, "puls": [171, 173, 193, 195, 227, 233, 235, 245, 322, 666, 669], "c5": [171, 577], "cpz": 171, "isna": 171, "bummer": 171, "nice": [171, 177, 196, 198, 244, 256, 271, 274, 301, 311, 322], "impress": 171, "resp_erp_correct": 171, "resp_erp_incorrect": 171, "deflect": [171, 227, 234, 235, 292], "immedi": [171, 183, 195, 228, 233, 236, 271, 294, 303, 311, 312, 321, 322, 326, 502, 552, 553, 641, 699, 761, 764, 854, 899], "doubt": [171, 960], "resp_erp_diff": 171, "bolder": 171, "set_linewidth": 171, "grai": [171, 183, 187, 199, 228, 238, 241, 245, 258, 259, 260, 261, 266, 309, 339, 543, 638, 693, 844, 861, 862, 870, 889], "trough_time_idx": 171, "trough_tim": 171, "emili": [171, 230, 278, 279, 285, 319], "kappenman": [171, 230, 278, 319], "jaclyn": [171, 278, 319], "farren": [171, 278, 319], "wendi": [171, 223, 278, 319, 491], "zhang": [171, 278, 294, 305, 309, 319, 322], "andrew": [171, 207, 278, 285, 299, 300, 301, 302, 305, 309, 319, 638, 778], "stewart": [171, 278, 319], "luck": [171, 178, 230, 278, 319], "117465": [171, 278, 319], "nima": [171, 278, 509], "bigd": [171, 278, 509], "shamlo": [171, 278, 509], "kreutz": [171, 278, 509], "delgado": [171, 278, 509], "robbin": [171, 278, 509], "makoto": [171, 278, 509], "miyakoshi": [171, 278, 509], "marissa": [171, 278, 509], "westerfield": [171, 278, 509], "tarik": [171, 278, 509], "bel": [171, 278, 509], "bahar": [171, 278, 509], "koth": [171, 278, 509], "jessica": [171, 278, 509], "hsi": [171, 278, 509], "globalsip": [171, 278, 509], "6736796": [171, 278, 509], "833": [171, 175, 237, 261, 966], "571": [171, 175, 224, 966], "40_autogenerate_metadata": [171, 175, 966], "workflow": [172, 182, 229, 299, 313, 319], "200e": [172, 178, 229], "0113": [172, 193, 196, 244], "0112": [172, 193, 196, 244], "0122": [172, 193, 196, 244, 270], "0132": [172, 196], "199795": 172, "320252": 172, "567619": 172, "248584": 172, "609895": 172, "700540": 172, "352746": 172, "908667": 172, "193135": 172, "049675": 172, "702938": 172, "168267": 172, "480975": 172, "182237": 172, "225684": 172, "072452": 172, "186476": 172, "283711": 172, "006895": 172, "912317": 172, "130290": 172, "157198": 172, "842466": 172, "986073": 172, "179816": 172, "040471": 172, "643716": 172, "835772": 172, "517952": 172, "214631": 172, "043144": 172, "672744": 172, "173156": 172, "688943": 172, "974112": 172, "561683": 172, "450115": 172, "778315": 172, "795987": 172, "277138": 172, "timedelta": [172, 246, 310, 327, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 789, 790, 791, 795, 796, 797, 798], "132025e": 172, "156762e": 172, "324858e": 172, "060990e": 172, "870054e": 172, "835275e": 172, "790867e": 172, "049675e": 172, "702938e": 172, "416827e": 172, "748098e": 172, "018224e": 172, "212257e": 172, "072452e": 172, "283711e": 172, "300690e": 172, "691232e": 172, "213029e": 172, "515720e": 172, "178425e": 172, "986073e": 172, "304047e": 172, "643716e": 172, "783577e": 172, "851795e": 172, "521463e": 172, "204314e": 172, "672744e": 172, "568894e": 172, "974112e": 172, "556168e": 172, "450115e": 172, "377831e": 172, "117960e": 172, "727714e": 172, "0133": [172, 196], "dai": [172, 235, 325, 333, 334, 335, 336, 338, 552, 553, 554], "800204787": 172, "379736": 172, "123525": 172, "806864627": 172, "734826": 172, "339465": 172, "813524468": 172, "996158": 172, "627037": 172, "820184308": 172, "748030": 172, "024973": 172, "826844149": 172, "123811": 172, "917677": 172, "pivot": [172, 331, 874, 905], "long_df": [172, 257], "coupl": [172, 239, 244, 266, 291, 488, 680, 948, 959], "1342": [172, 196, 264, 266], "categorydtyp": 172, "nicer": [172, 234, 295], "hue": 172, "peak_lat": 172, "regex": [172, 291], "2123": [172, 196], "idxmax": 172, "melt": 172, "id_var": 172, "var_nam": 172, "value_nam": 172, "satur": [172, 583], "751": [172, 175, 229, 261, 966], "50_epochs_to_data_fram": [172, 175, 966], "equidistantli": 173, "consecut": [173, 195, 264, 285, 340, 341, 344, 347, 348, 349, 526, 597, 640, 641], "briefli": [173, 178, 230, 247, 256], "hous": 173, "envelope_correl": [173, 288, 289, 293], "manag": [173, 193, 198, 199, 289, 294, 303, 310, 311, 312, 314, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 488, 495, 498, 501, 502, 528, 541, 543, 552, 553, 596, 599, 600, 611, 612, 621, 622, 627, 638, 643, 650, 651, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 838, 839, 846, 876, 878, 881, 893, 899, 900, 924, 959], "server": [173, 193, 199, 231, 233, 244, 274, 912, 956], "chan": [173, 229, 324, 769], "heart": [173, 227, 232, 278, 293, 333, 334, 795, 825, 828], "beat": [173, 239, 650, 666, 669, 741], "onpca": 173, "onecg": 173, "unsuit": [173, 295], "misalign": [173, 205, 291, 564], "event_related_plot": 173, "1142": [173, 196], "n_sensor": [173, 270, 340, 344, 348], "alpha_data": 173, "epochconnect": 173, "corr_matrix": 173, "first_30": 173, "last_30": 173, "corr_matric": 173, "color_lim": 173, "mpbl": 173, "954": [173, 175, 233, 261, 966], "60_make_fixed_length_epoch": [173, 175, 966], "556": [175, 223, 224, 966], "905": [175, 261, 966], "raw_fil": [176, 178], "happen": [176, 178, 183, 187, 188, 194, 195, 198, 224, 229, 231, 233, 256, 305, 311, 312, 319, 321, 326, 333, 334, 387, 508, 510, 946], "discuss": [176, 178, 183, 192, 193, 195, 200, 207, 219, 224, 227, 230, 231, 244, 247, 256, 261, 271, 278, 292, 311, 312, 313, 319, 322, 795, 796, 946, 952], "transfer": [176, 224, 228, 230, 318, 321, 677], "maintain": [176, 228, 256, 285, 299, 303, 311, 312, 313, 322, 333, 334, 335, 336, 338, 552, 553, 554, 629], "proven": [176, 301, 304], "never": [176, 291, 311, 322, 333, 334, 388, 657, 864], "72160572e": 176, "57859354e": 176, "98040833e": 176, "75128428e": 176, "15309907e": 176, "83186429e": 176, "bewar": [176, 187, 322], "evoked_subset": 176, "repair": [176, 192, 193, 227, 228, 229, 234, 238, 242, 243, 247, 278, 292, 304, 318, 330, 333, 335, 336, 338, 426, 428, 526, 552, 568, 632, 635, 637, 638, 650, 651, 653, 655, 656, 666, 683, 684, 688, 799, 897, 898, 931, 966], "evk_fil": 176, "evokeds_list": [176, 177], "right_vi": 176, "remedi": 176, "left_right_aud": 176, "6992832460543575": [176, 178], "fairli": [176, 193, 227, 229, 230, 231, 233, 235, 236], "left_aud": 176, "right_aud": 176, "keyword": [176, 182, 196, 199, 219, 230, 238, 270, 274, 284, 285, 287, 291, 293, 303, 304, 305, 308, 309, 311, 318, 321, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 384, 386, 387, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 490, 491, 495, 496, 498, 501, 502, 504, 506, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 535, 536, 540, 541, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 599, 600, 601, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 634, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 683, 684, 685, 688, 689, 690, 691, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 733, 737, 738, 740, 741, 742, 743, 753, 754, 757, 759, 760, 761, 762, 763, 764, 765, 775, 776, 777, 778, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 813, 814, 815, 818, 819, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 839, 842, 843, 844, 845, 846, 853, 862, 863, 868, 871, 874, 878, 879, 880, 881, 886, 889, 890, 891, 896, 897, 899, 900, 902, 903, 904, 905, 909, 910, 911, 915, 925, 926, 927, 928, 929, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945], "proport": [176, 256, 292, 305, 322, 340, 341, 342, 344, 347, 348, 349, 424, 436, 550, 638, 646, 904, 909], "intend": [176, 198, 238, 245, 326, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 509, 552, 553, 638, 677, 683, 959], "standard_error": [176, 298, 333, 334, 335, 336, 706, 965], "iter_evok": [176, 178, 291, 333, 334, 795, 796, 965], "ix": [176, 178], "return_amplitud": [176, 178, 335, 336], "569": [176, 223, 224], "1166": 176, "10_evoked_overview": [176, 181, 966], "evoked_fil": 177, "life": [177, 312], "evk": [177, 178], "superimpos": [177, 199, 227, 247, 638, 845, 890], "timeseri": [177, 253, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 756, 792], "resembl": [177, 189, 202, 605, 669, 670], "wing": 177, "behav": [177, 230, 244, 304, 337, 338, 514, 658], "time_ranges_of_interest": 177, "drag": [177, 178, 188, 246, 308, 320, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 877, 878, 882, 885, 889, 898, 900, 901, 906, 908, 951], "averaging_dur": 177, "augment": 177, "custom_func": 177, "0x7f3adbca4820": 177, "substr": [177, 299, 711, 723], "action": [177, 198, 311, 314], "ambigu": [177, 295, 303, 308, 341, 347, 349], "temp_list": 177, "_comment": 177, "_evk": 177, "overhead": [177, 294, 735, 839], "trans_fil": 177, "00097": [177, 275], "meg_surf": [177, 596], "_map": 177, "749": [177, 181, 237, 261, 966], "20_visualize_evok": [177, 181, 966], "materi": [178, 189, 311, 321, 946], "link": [178, 192, 217, 276, 277, 278, 291, 294, 303, 304, 309, 310, 311, 314, 322, 335, 340, 344, 348, 424, 520, 596, 706, 716, 844, 846, 860, 881, 904, 921, 922, 926, 927, 928, 946, 958, 966], "events_fil": [178, 229], "discard": [178, 228, 233, 234, 235, 238, 266, 282, 514, 675, 676, 703], "last_samp": [178, 302, 321, 338, 433, 551, 552, 553], "13514": 178, "mislabel": 178, "lowercas": 178, "channel_renaming_dict": [178, 244], "schemat": 178, "diagram": [178, 233, 321], "addition": [178, 198, 218, 227, 234, 246, 269, 311, 316, 324, 341, 347, 349, 388, 399, 734, 824, 827, 909, 948], "realist": [178, 278, 318, 322], "xx": [178, 228, 231, 234, 235, 236, 311, 327], "backend": [178, 183, 187, 193, 198, 199, 208, 228, 231, 233, 234, 235, 236, 285, 288, 289, 292, 293, 294, 295, 303, 304, 309, 310, 314, 333, 334, 340, 341, 344, 347, 348, 349, 552, 553, 638, 844, 852, 854, 856, 857, 858, 876, 893, 899, 904, 909, 911, 915, 916, 930, 931, 946, 951, 952, 956], "qt": [178, 193, 198, 199, 228, 231, 233, 234, 235, 236, 294, 303, 304, 307, 309, 310, 333, 334, 552, 553, 638, 844, 876, 893, 899, 915, 931, 946, 951, 952], "scheme": [178, 216, 251, 260, 283, 285, 292, 311, 322, 330, 333, 334, 335, 336, 338, 342, 485, 492, 501, 552, 553, 637, 638, 653, 730, 733, 770, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 876, 878, 885, 889, 898, 901, 902, 906, 908], "eeg53": 178, "eog61": 178, "chose": 178, "proce": [178, 328, 333, 334, 477, 638, 641, 648, 854, 946], "consol": [178, 303, 308, 956], "eeg03": 178, "eeg01": 178, "eeg02": 178, "eeg04": 178, "eeg06": 178, "eeg07": 178, "eeg25": 178, "25auditori": 178, "27buttonpress": 178, "5visual": 178, "28visual": 178, "barplot": [178, 233], "lose": [178, 217, 246, 946], "break": [178, 192, 242, 243, 246, 292, 295, 302, 303, 304, 307, 311, 318, 327, 333, 335, 338, 552, 553, 598, 635, 641, 667, 703, 944, 966], "l_aud": [178, 266], "l_vi": [178, 266], "fig1": [178, 197, 275], "speak": [178, 194, 195, 232, 957, 960], "agreement": [178, 312], "warrant": 178, "popul": [178, 182, 192, 251, 254, 259, 278, 287, 289, 293, 321, 334, 336, 445, 485, 517, 553, 677, 771, 840], "leverag": [178, 312], "verifi": [178, 209, 213, 271, 322, 958], "plain": [178, 220, 232, 271, 402, 936], "ddof": [178, 189, 946], "lime": 178, "revisit": [178, 278, 485], "eeg17": 178, "eeg18": 178, "eeg26": 178, "eeg23": 178, "eeg24": 178, "eeg34": 178, "eeg35": 178, "left_ix": 178, "right_ix": 178, "roi_dict": 178, "left_roi": [178, 333, 334, 335, 336, 877, 882], "right_roi": [178, 333, 334, 335, 336, 877, 882], "roi_evok": 178, "aud_minus_vi": 178, "29969": 178, "69928": 178, "weak": [178, 233], "chapter": 178, "erplab": [178, 278], "consequ": [178, 189, 196, 238, 302, 322, 426, 427, 428, 514, 525, 570, 625, 946], "voltag": [178, 193, 195, 216, 217, 236, 245, 302, 321, 578], "p100": 178, "submit": [178, 257, 311, 312], "throughout": [178, 198, 239, 307, 309, 319, 638], "remaind": 178, "print_peak_measur": 178, "3f": [178, 238, 257, 261, 271, 333, 334, 335, 336, 552, 553, 793, 794, 799, 800, 878, 885], "good_tmin": 178, "good_tmax": 178, "eeg55": 178, "578": [178, 213, 224], "pull": [178, 234, 312, 321, 916, 959], "priori": [178, 271, 322], "believ": [178, 271, 311, 322], "eeg59": 178, "fist": 178, "l_vis_roi": 178, "ch_roi": 178, "lat_roi": 178, "amp_roi": 178, "FOR": 178, "ONE": [178, 184, 224, 278], "713": [178, 259, 261, 263, 966], "suscept": [178, 231, 665], "meth": [178, 199, 311], "guarante": [178, 216, 228, 231, 233, 236, 238, 256, 295, 333, 334, 335, 336, 515, 516, 517, 518, 552, 553, 586], "rise": [178, 321, 569, 694, 700], "crucial": [178, 183, 227, 264], "095": [178, 197, 291, 330, 333, 334, 335, 336, 338, 342, 382, 400, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 870, 878, 880, 882, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "bad_tmin": 178, "bad_tmax": 178, "bad_lat_roi": 178, "bad_amp_roi": 178, "898": 178, "unclear": [178, 311], "truli": [178, 230, 776], "panel": [178, 183, 189, 197, 207, 271, 274, 308, 335, 336, 638, 844, 886, 890, 946], "pink": [178, 183, 321, 862], "star": 178, "yourself": [178, 183, 196, 227, 231, 244, 311, 325, 335, 336, 564, 885], "c6": 178, "act": [178, 196, 231, 232, 234, 238, 303, 307, 312, 320, 321, 333, 334, 335, 336, 346, 366, 367, 418, 547, 549, 550, 552, 553, 616, 676, 733, 946], "eeg54": 178, "eeg57": 178, "l_vis_mean_roi": 178, "mean_amp_roi": 178, "mean_amp_roi_df": 178, "mean_amp": 178, "numeric_onli": 178, "279764": 178, "685840": 178, "reiter": 178, "hypothes": [178, 256, 257], "l_vis_crop": 178, "mean_amp_al": 178, "mean_amp_all_df": 178, "option_context": 178, "max_column": 178, "689513": 178, "078492": 178, "381191": 178, "609264": 178, "eeg05": 178, "113717": 178, "eeg56": 178, "064174": 178, "259681": 178, "eeg58": 178, "156472": 178, "802306": 178, "eeg60": 178, "878811": 178, "dietrich": [178, 278, 322, 605], "lehmann": [178, 278, 322, 605], "wolfgang": [178, 278, 333, 334, 795, 825, 828], "skrandi": [178, 278], "identif": [178, 233, 278, 653], "checkerboard": [178, 193, 271, 278, 319], "621": [178, 261, 278], "90419": [178, 278], "review": [178, 205, 232, 233, 278, 311, 312, 637, 643], "neurobiologi": [178, 278], "1984": [178, 223, 278], "0301": [178, 278], "0082": [178, 278], "90003": [178, 278], "micah": [178, 278], "brunet": [178, 278], "michel": [178, 212, 278, 461, 638, 749], "s10548": [178, 236, 278, 654, 754], "0054": [178, 278], "ma": [178, 278, 306, 307], "edit": [178, 196, 198, 228, 230, 233, 246, 274, 278, 304, 311, 332, 333, 334, 335, 336, 771, 789, 790, 791, 795, 796, 797, 798, 867, 915, 946, 956], "52585": [178, 278], "mitpress": [178, 278], "book": [178, 278, 311, 524], "javier": [178, 278], "lopez": [178, 278], "calderon": [178, 278], "00213": [178, 278], "preclud": [178, 230, 238, 278, 676], "00131": [178, 230, 278], "rufin": [178, 230, 278], "vanrullen": [178, 230, 278], "fallaci": [178, 230, 278], "00365": [178, 230, 278], "nichola": [178, 240, 278, 319, 652], "gaspelin": [178, 278], "12639": [178, 278], "30_eeg_erp": [178, 181, 966], "perspect": [179, 234, 844], "satisfi": [179, 188, 256, 322, 333, 366, 367, 771, 793, 794, 799, 800], "068": [179, 181, 966], "40_whiten": [179, 181, 966], "repetit": [180, 192, 754], "1165": [181, 966], "outer": [182, 185, 187, 188, 210, 318, 319, 321, 322, 325, 377, 638, 676, 844, 892, 946, 953, 956, 959], "tissu": [182, 185, 321], "boundari": [182, 185, 199, 209, 219, 247, 282, 284, 288, 292, 303, 309, 321, 330, 333, 334, 335, 336, 339, 342, 343, 434, 485, 492, 543, 552, 553, 637, 638, 665, 693, 754, 768, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 850, 855, 863, 864, 878, 885, 889, 898, 900, 901, 906, 908, 958], "analog": [182, 216, 218, 224, 234, 238, 288, 289, 295, 310, 321, 333, 334, 335, 336, 520, 552, 553, 561, 568, 576, 584, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "freesurfer_hom": [182, 444, 958], "setupfreesurf": 182, "sh": [182, 955, 958], "folder": [182, 183, 185, 188, 197, 216, 244, 292, 295, 304, 306, 307, 311, 343, 346, 373, 377, 449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 533, 534, 539, 569, 580, 583, 700, 732, 862, 864, 955, 958], "my_subject": 182, "my_nifti": 182, "subfold": [182, 458], "hour": [182, 552, 553, 638, 893, 899], "beforehand": [182, 333, 334, 876], "scan": [182, 193, 203, 207, 210, 238, 338, 462, 671, 672, 953, 956, 959, 962], "buckner40not": 182, "10_background_freesurf": [182, 191, 966], "landmark": [183, 251, 295, 318, 321, 322, 405, 436], "t1w": [183, 382], "nifti1imag": [183, 209, 345, 348, 349, 377], "dataobj": [183, 187, 209], "xyzt_unit": 183, "uint8": 183, "t1_mgh": 183, "mghimag": [183, 322], "ight": 183, "medium": [183, 210, 274, 304, 314, 325, 378], "nterior": 183, "longest": 183, "uperior": 183, "camera": [183, 187, 220, 293, 304, 335, 336, 544, 844, 846, 860, 862, 881, 914], "na": [183, 271, 321, 560], "preauricular": [183, 321, 322, 382, 406], "manufactur": [183, 197, 216, 217, 218, 220, 304, 314, 321, 322], "faq": [183, 217, 230, 236, 379, 443, 561, 676, 947], "intersect": [183, 187, 188, 211, 289, 318, 676, 693], "purpl": [183, 185, 266], "perpendicular": [183, 205, 322], "goe": [183, 187, 230, 246, 275, 322], "upward": [183, 187, 233, 237, 844, 870], "compani": [183, 278, 312, 771], "acquir": [183, 228, 282, 295, 304, 312, 319, 322, 353, 354, 377, 577, 962], "emit": [183, 237, 275, 282, 287, 294, 295, 307, 309, 321, 327, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 353, 354, 386, 409, 419, 420, 425, 429, 432, 434, 436, 441, 442, 504, 519, 532, 535, 552, 553, 574, 638, 677, 696, 725, 727, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 841, 879, 890, 937, 939], "coregist": [183, 377, 544], "front": [183, 321, 322, 335, 336, 343, 376, 504, 844, 880], "magenta": 183, "anisotrop": [183, 278, 322], "incorrectli": [183, 287, 288, 291, 292, 293, 303, 304, 306, 307, 309, 310, 946], "identity_tran": 183, "mri_voxel": [183, 395, 588, 831], "corner": [183, 219, 230, 231, 234, 247, 286, 301, 325, 333, 334, 335, 336, 338, 552, 553, 859, 870, 876, 884, 899], "inferior": [183, 187, 321], "seghead_rr": 183, "seghead_tri": 183, "mri_to_head": 183, "scalp_pts_in_head_coord": 183, "head_to_meg": 183, "scalp_pts_in_meg_coord": 183, "vox_to_mri": 183, "get_vox2ras_tkr": [183, 187, 209, 240], "mri_to_vox": 183, "scalp_points_in_vox": 183, "mesh": [183, 187, 188, 202, 285, 291, 292, 295, 303, 304, 335, 336, 339, 341, 347, 349, 378, 379, 431, 484, 540, 541, 719, 844, 846, 881, 905, 909, 923, 944, 958], "scene": [183, 187, 198, 223, 278, 286, 292, 303, 319, 320, 335, 336, 340, 341, 344, 347, 348, 349, 491, 544, 844, 846, 851, 852, 854, 862, 881, 904, 909, 913, 914, 916, 951], "nose": [183, 236, 376], "behind": [183, 198, 223, 228, 233, 320, 865], "roughli": [183, 291, 425, 665, 951], "world": [183, 187, 199, 209, 230, 246, 258, 310, 345, 528], "anonym": [183, 282, 283, 286, 291, 294, 301, 308, 333, 334, 335, 336, 338, 552, 553, 554, 946], "blur": [183, 322], "fiffv_point_cardin": [183, 187, 338], "fiffv_point_nas": [183, 187, 338], "fiffv_coord_head": [183, 337, 338], "nasion_mri": [183, 187], "nasion_vox": [183, 187], "toggl": [183, 193, 199, 219, 228, 233, 247, 280, 285, 288, 289, 292, 294, 303, 304, 333, 334, 552, 553, 638, 844, 876, 891, 893, 899, 915], "radio": 183, "icon": [183, 199, 310], "fid": [183, 309, 788], "icp": [183, 286, 289, 305], "finetun": 183, "inner_skul": [183, 185, 186, 188, 199, 210, 240, 318, 319, 346, 725, 862], "outer_skul": [183, 185, 186, 188, 197, 199, 318, 319, 346, 862], "00348961": [183, 236], "944714": [183, 236], "137173": [183, 236], "667447": [183, 236], "683794": [183, 236], "26595": [183, 236], "0105972": [183, 236], "6156": 183, "2300": 183, "1905": 183, "20_source_align": [183, 191, 966], "hsp": [184, 216, 283, 284, 322, 325, 382, 395, 407, 436, 578, 702], "preprat": 184, "jon": [184, 278, 282, 284, 285, 286, 289, 304], "houck": [184, 278, 282, 284, 285, 286, 289, 304], "faveli": [184, 288, 289, 291, 292, 293, 294, 295, 303, 304], "skin": [184, 185, 188, 305, 319, 321, 322, 325, 333, 334, 335, 336, 377, 436, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 946], "fit_fiduci": [184, 436], "fit_icp": [184, 436], "n_iter": [184, 436, 674], "nasion_weight": [184, 436], "omit_head_shape_point": [184, 436], "compute_dig_mri_dist": [184, 436], "abil": [184, 205, 207, 224, 280, 282, 283, 284, 286, 287, 291, 292, 295, 298, 299, 301, 307, 310, 312, 314, 320, 747, 748, 824, 827], "set_scale_mod": [184, 436], "clau": [184, 278], "plo": [184, 224, 278], "e0232100": [184, 278], "pone": [184, 224, 278], "0232100": [184, 278], "768": [184, 191, 210, 966], "25_automated_coreg": [184, 191, 966], "concept": [185, 203, 256, 278, 321, 323, 949], "watershed_bem": [185, 287, 289, 322, 672, 946, 959], "flash_bem": [185, 280, 287, 288, 304, 322, 672, 959], "plot_bem_kwarg": 185, "brain_surfac": [185, 864], "mrilab": 185, "isn": [185, 193, 253, 271, 311, 329, 333, 477, 478, 710, 713, 716, 795, 946], "candid": [185, 228, 312, 321], "oct4": 185, "90mm": 185, "57798": 185, "24365": 185, "20377": 185, "32480": 185, "22941": 185, "2787": 185, "9357": 185, "20154": 185, "846": [185, 209], "10797": 185, "12738": 185, "6047": 185, "10203": 185, "2362": [185, 233, 278, 638], "10376": 185, "midpoint": [185, 218, 292, 322, 333, 334, 335, 336, 342, 485, 492, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 823, 826, 864, 878, 885, 898], "4th": [185, 227, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 520, 521, 523, 524, 552, 553, 650, 651], "icosahedron": [185, 187, 188, 325, 340, 344, 348, 737, 904], "n_tri": [185, 187, 339, 939], "topologi": [185, 230, 286, 625], "commonli": [185, 195, 197, 202, 230, 271, 306, 314, 321, 338, 543, 638], "gone": 185, "adequ": [185, 235, 338], "1422": [185, 196], "fwd_fix": 185, "explicitli": [185, 199, 216, 224, 229, 231, 232, 233, 264, 282, 285, 291, 292, 294, 303, 309, 311, 312, 314, 318, 328, 333, 334, 335, 336, 338, 340, 341, 343, 344, 347, 348, 349, 366, 367, 373, 380, 383, 399, 425, 429, 430, 441, 442, 443, 485, 487, 492, 501, 506, 523, 524, 528, 529, 547, 549, 550, 552, 553, 590, 616, 637, 638, 640, 654, 655, 656, 664, 668, 674, 682, 684, 691, 693, 733, 741, 742, 743, 752, 753, 755, 757, 775, 776, 777, 778, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 823, 827, 870, 876, 877, 880, 882, 883, 886, 895, 899, 900, 951], "src_hemi": 185, "justifi": [185, 303, 524, 552, 553], "claim": 185, "30_forward": [185, 191, 966], "centimet": 186, "fs_dir": [186, 459], "live": [186, 230, 288, 311], "1005": [186, 237], "new_nam": 186, "rstrip": 186, "fp": [186, 521, 747], "999994": 186, "003552": 186, "000202": 186, "003558": 186, "998389": 186, "056626": 186, "000001": 186, "998395": 186, "2433": [186, 196], "7809": 186, "8001": 186, "4295": 186, "6mo": [186, 461], "ants6": 186, "0months3t": 186, "come": [186, 202, 208, 216, 217, 230, 231, 233, 235, 246, 257, 271, 275, 283, 294, 295, 311, 319, 321, 322, 339, 344, 444, 577, 598, 663, 703, 951, 956], "fname_1020": 186, "mon": [186, 577], "03d": [186, 570], "99975431": 186, "01839625": 186, "01236795": 186, "00087239": 186, "0143472": 186, "96230429": 186, "27159646": 186, "01252444": 186, "01689809": 186, "27135229": 186, "96233177": 186, "03137219": 186, "48640": 186, "48214": 186, "702": [186, 224], "35_eeg_no_mri": [186, 191, 966], "outlin": [187, 199, 203, 230, 271, 274, 291, 292, 304, 305, 306, 330, 331, 333, 334, 335, 336, 338, 342, 382, 485, 492, 552, 553, 637, 638, 653, 691, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 870, 874, 878, 880, 882, 883, 885, 886, 889, 896, 898, 900, 901, 902, 906, 908], "readabl": [187, 311, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 446, 487, 496, 521, 523, 524, 552, 553, 671], "anterior": [187, 303, 321, 322, 339, 394, 766], "superior": [187, 321, 322, 341, 347, 349, 711, 844], "unfamiliar": [187, 956], "asarrai": [187, 260], "unsign": [187, 303, 340, 341, 344, 347, 348, 349], "triplet": [187, 338, 529, 605, 739], "geograph": 187, "earth": 187, "north": 187, "prime": [187, 197], "meridian": 187, "degre": [187, 189, 220, 234, 241, 256, 258, 261, 264, 288, 291, 321, 322, 325, 330, 335, 336, 338, 373, 377, 564, 642, 658, 659, 674, 742, 776, 777, 779, 780, 844, 850, 882, 914, 946, 958], "nonetheless": [187, 230], "scanner": [187, 240, 319, 322, 346, 546], "nativ": [187, 209, 216, 217, 282, 288, 292, 294, 300, 303, 319, 333, 334, 335, 336, 386, 395, 400, 515, 516, 517, 518, 552, 553, 570, 578, 702, 844, 847, 946], "mind": [187, 189, 202, 230, 324, 659], "si": [187, 218, 220, 256, 270, 333, 334, 335, 336, 367, 529, 552, 553, 663, 880, 882], "xyz_ra": 187, "00000000e": 187, "15484021e": 187, "91852465e": 187, "22726395e": 187, "56816911e": 187, "57160827e": 187, "18960930e": 187, "49011647e": 187, "40284092e": 187, "00712036e": 187, "726": [187, 208], "ras_coords_mm": 187, "inv_affin": 187, "i_": [187, 216], "j_": 187, "k_": 187, "imshow_mri": 187, "aff2axcod": 187, "ori_slic": 187, "ori_nam": 187, "va": [187, 274], "set_path_effect": 187, "reorient": 187, "rightward": 187, "x_order": 187, "lip": 187, "y_order": 187, "torig": 187, "vox2ras_tkr": [187, 209], "conform": [187, 218, 292, 322, 327], "matter": [187, 197, 303, 309, 312, 318, 333, 334, 335, 336, 339, 543, 552, 553, 590, 638, 693, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 880], "freeurfer": 187, "whenev": [187, 230, 275, 311, 320, 335, 336, 885, 927], "everywher": 187, "xyz_mri": 187, "digpoint": [187, 288, 436], "nasion_head": 187, "nasion_dig_mri": 187, "nasion_dig_vox": 187, "convention": 187, "facet": [187, 274], "rr_mm": 187, "313728": 187, "80481719970703": 187, "rr_vox": 187, "tricontour": 187, "renderer_kwarg": 187, "curv": [187, 224, 308, 322, 333, 334, 335, 336, 338, 552, 553, 750, 787, 793, 794, 799, 800], "y_shift": 187, "z_shift": 187, "this_rr": 187, "this_tri": 187, "copper_r": 187, "quiver3d": [187, 234, 304], "1050": 187, "wirefram": 187, "cyan": [187, 552, 553, 899], "66ccee": [187, 274, 812, 822], "line_width": 187, "cull": 187, "render_lines_as_tub": 187, "uniformli": [187, 219, 235, 549], "uniform": [187, 284, 292, 293, 307, 321, 436, 506, 605, 741, 756, 779, 780], "subsampl": [187, 291, 318, 328, 332, 333, 334, 335, 336, 346, 552, 553, 594, 655, 656, 737, 775, 789, 790, 791, 795, 796, 797, 798, 808, 844], "rr_sph": 187, "mri_mni_tran": 187, "xyz_mni": 187, "02248488": 187, "00844919": 187, "03621711": 187, "00111715": 187, "07107091": 187, "91486582": 187, "40609791": 187, "02300193": 187, "00875602": 187, "43369992": 187, "02811882": 187, "03356932": 187, "land": [187, 251], "gist": [187, 203, 217, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 946], "github": [187, 309, 312, 313, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 788, 946, 947, 951, 959, 960, 962, 963], "alexrockhil": 187, "b5a1ce6c6ba363cf3f277cd321a763bf": 187, "50_background_freesurfer_mn": [187, 191, 966], "ezemikulan": 188, "blender_freesurf": 188, "ezequiel": [188, 287, 291, 292], "mikulan": [188, 287, 291, 292], "manorama": [188, 294], "kadwani": [188, 294], "shutil": 188, "flash": [188, 241, 280, 304, 319, 346, 373, 377, 672, 862], "surf_dir": 188, "problemat": [188, 217, 230, 233, 234, 238, 256, 333, 334, 343, 378, 400], "skill": [188, 311], "conv": 188, "conv_dir": 188, "makedir": 188, "exist_ok": 188, "read_metadata": [188, 719], "wavefront": [188, 292, 719, 944], "navig": [188, 244, 323, 325, 333, 334, 343, 348, 349, 552, 553, 876, 899, 910, 951, 956], "vert": [188, 205, 253, 271, 346], "preset": [188, 340, 341, 344, 347, 348, 349, 844, 904, 909], "beginn": [188, 948, 954], "teach": [188, 204, 278, 303], "_fix": 188, "inner_skull_fix": 188, "Be": [188, 241, 244, 246, 333, 334, 335, 336, 552, 553, 883], "backup": 188, "mistak": [188, 311, 946], "inner_skull_orig": 188, "volume_info": [188, 719, 944], "vol_info": 188, "faulti": [188, 310], "head_dir": 188, "shrinkwrap": 188, "\u2460": 188, "\u2461": 188, "\u2462": 188, "\u2464": 188, "tab": [188, 220, 309, 310, 311, 320, 325, 626, 853], "\u2465": 188, "\u2467": 188, "snap": [188, 289], "noth": [188, 211, 212, 229, 240, 286, 307, 319, 330, 333, 334, 335, 336, 342, 345, 425, 436, 485, 492, 496, 498, 552, 553, 637, 638, 653, 730, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 848, 859, 863, 878, 885, 889, 898, 901, 906, 908], "toolbar": [188, 911], "\u2468": 188, "extrus": 188, "extrud": 188, "rough": [188, 946], "mri_convert": [188, 322], "t1_smoothed_3": 188, "delet": [188, 198, 228, 229, 239, 284, 285, 287, 294, 311, 322, 327, 330, 333, 334, 335, 336, 342, 434, 485, 492, 552, 553, 637, 638, 653, 732, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 885, 889, 898, 901, 906, 960, 965], "cleaner": [188, 230], "encount": [188, 192, 217, 230, 519, 946, 951, 958], "runtimeerror": 188, "20516": 188, "isomorph": 188, "defect": [188, 295, 303, 325, 378, 436, 504, 535, 696, 725, 727, 939, 946], "733": 188, "1014": [188, 223], "2068": 188, "7732": 188, "8435": [188, 293], "8489": 188, "10181": 188, "11120": [188, 305], "11121": 188, "11122": [188, 305], "11304": 188, "11788": 188, "disrupt": 188, "999668": 188, "wrong": [188, 289, 291, 293, 294, 295, 298, 306, 307, 308, 952], "easiest": [188, 227, 229, 231, 251, 311, 955], "unedit": 188, "gpl": 188, "water": 188, "clean_from_arrai": 188, "80_fix_bem_in_blend": [188, 191, 966], "bb": [189, 514], "pp": [189, 333, 334, 506, 771], "desc": [189, 234, 342], "66000": 189, "inaccur": [189, 244, 318, 322, 330, 333, 334, 335, 336, 342, 425, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "noise_cov_baselin": 189, "noise_cov_reg": 189, "1768": [189, 238, 278, 676], "746": [189, 236, 243, 261, 966], "1785": 189, "1797": 189, "freedom": [189, 234, 256, 258, 261, 264, 291, 330, 335, 336, 544, 776, 777, 779, 780, 846, 862, 881, 946], "violat": [189, 311, 946], "hack": [189, 271], "evoked_meg": 189, "empty_room": 189, "improp": [189, 288, 309, 310], "overestim": [189, 232], "juha": [189, 238, 278, 676, 946], "simola": [189, 238, 278, 676, 946], "kajola": [189, 238, 278, 322, 506, 649, 676, 946], "3359": [189, 278, 946], "3372": [189, 278, 946], "tsp": [189, 233, 278, 425, 638, 946], "853302": [189, 278, 946], "089": [189, 191, 966], "90_compute_covari": [189, 191, 966], "aka": [190, 192, 218], "emphasi": [192, 323, 335, 336, 880], "topic": [192, 193, 217, 227, 230, 232, 278, 316, 323, 366, 948], "knowledg": [192, 271, 312, 318], "unexplain": 192, "experienc": [192, 312, 640], "troubl": [192, 304], "infrar": [192, 218, 242, 243, 278, 283, 319, 322, 333, 334, 335, 336, 338, 424, 514, 552, 553, 583, 635, 678, 679, 680, 682, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 870, 879, 884, 959, 966], "spectroscopi": [192, 218, 242, 243, 278, 283, 319, 322, 333, 334, 335, 336, 338, 424, 514, 552, 553, 583, 635, 678, 679, 680, 682, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 870, 879, 884, 959, 966], "vssr": [192, 272, 273, 319, 333, 338, 382, 398, 563, 635, 793, 908, 966], "bti": [192, 214, 215, 256, 282, 286, 289, 299, 302, 322, 330, 331, 333, 335, 336, 338, 372, 425, 526, 528, 564, 601, 862, 874, 966], "twowai": [192, 262, 263, 303, 333, 338, 552, 635, 703, 770, 772, 773, 777, 791, 795, 966], "anova": [192, 224, 256, 259, 262, 263, 267, 268, 280, 299, 303, 333, 335, 336, 338, 344, 346, 431, 552, 604, 605, 619, 635, 703, 718, 761, 770, 771, 772, 773, 777, 780, 781, 791, 795, 844, 966], "spatiotempor": [192, 258, 262, 263, 278, 299, 302, 303, 333, 335, 336, 338, 388, 552, 635, 676, 703, 769, 776, 780, 781, 791, 795, 867, 870, 966], "strf": [192, 225, 226, 491, 497, 525, 966], "submodul": [192, 193, 227, 233, 235, 244, 251, 254, 305, 311], "corrupt": [192, 227, 228, 254, 255, 292, 307, 308, 330, 333, 336, 337, 338, 339, 344, 425, 435, 526, 552, 604, 605, 619, 708, 711, 753, 756, 844, 946, 966], "auto_tutorials_python": 192, "auto_tutorials_jupyt": 192, "varieti": [193, 216, 218, 227, 244, 322], "smoothli": [193, 229, 244, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 885, 889, 898, 901, 906, 908], "substitut": [193, 312, 322, 444, 951], "glimps": [193, 244], "41700": 193, "custom_ref_appli": [193, 196, 244, 251, 292, 338], "hpi_mea": [193, 196, 244, 287, 338], "hpi_result": [193, 196, 244, 287, 338], "meas_dat": [193, 195, 196, 229, 244, 246, 251, 286, 287, 289, 291, 292, 293, 303, 327, 333, 334, 335, 336, 338, 551, 552, 553, 554, 580, 638, 677, 893, 899], "utc": [193, 196, 244, 246, 303, 333, 334, 335, 336, 338, 552, 553], "meas_id": [193, 196, 244, 284, 333, 334, 335, 336, 338, 552, 553, 554], "breviti": 193, "walk": [193, 233, 235], "orig_raw": 193, "chan_idx": 193, "sent": [193, 195, 218, 219, 233, 241, 245, 319, 343], "deliveri": 193, "squarewav": 193, "unambigu": [193, 195], "older": [193, 195, 197, 283, 284, 294, 390, 505, 552], "summat": [193, 195, 230, 781], "6994": 193, "7086": 193, "7192": 193, "7304": 193, "7413": 193, "ordinari": [193, 195, 228, 234, 256, 312, 656, 667, 774], "autoreject": [193, 228, 229, 959], "aren": [193, 236, 529], "fewest": 193, "conds_we_care_about": 193, "aud_epoch": 193, "vis_epoch": 193, "richer": 193, "aud_evok": 193, "vis_evok": 193, "classic": [193, 271, 340, 341, 344, 347, 348, 349, 825, 828, 844, 904, 909], "p200": [193, 219], "dorso": 193, "evoked_diff": [193, 239], "underdetermin": 193, "akin": 193, "inverse_operator_fil": 193, "inv_oper": 193, "\u03bb\u00b2": 193, "61922423e": 193, "06837855e": 193, "49139511e": 193, "935": [193, 201, 261, 966], "10_overview": [193, 201, 966], "obligatorili": 194, "unexpect": [194, 224, 278, 333, 334, 335, 336, 388, 425, 583, 659, 946], "apply_funct": [194, 284, 288, 294, 296, 310, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "unprocess": 194, "original_raw": 194, "complex128": [194, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "certain": [194, 195, 219, 227, 231, 233, 238, 251, 270, 298, 301, 304, 305, 307, 308, 309, 311, 312, 322, 331, 335, 336, 458, 511, 540, 552, 553, 616, 638, 657, 677, 776, 777, 880, 912, 951], "unaffect": [194, 231, 491], "rereferenced_raw": 194, "ref_data": [194, 733], "fig_orig": 194, "fig_reref": 194, "unless": [194, 284, 287, 289, 303, 304, 311, 312, 322, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 485, 488, 492, 495, 498, 501, 502, 504, 509, 528, 530, 541, 543, 547, 549, 550, 552, 553, 555, 563, 596, 599, 600, 611, 612, 616, 621, 622, 637, 638, 643, 650, 651, 676, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 834, 846, 870, 876, 877, 878, 881, 885, 893, 899, 900, 901], "15_inplac": [194, 201, 966], "broadli": 195, "ram": [195, 227, 229, 244, 245, 246, 247, 294, 333, 334, 552, 553, 638, 876, 893, 899], "36037": [195, 227, 231, 234, 235, 236, 238, 245, 246, 247], "necessarili": [195, 197, 217, 227, 229, 232, 322, 326, 333, 334, 366, 795, 796, 854], "instantan": [195, 253], "receiv": [195, 218, 275, 287, 322, 506, 570, 750, 925, 951], "rectangular": [195, 230, 256, 340, 341, 344, 347, 348, 349, 904, 909], "ttl": [195, 690], "upcom": 195, "newer": [195, 197, 233, 306, 951, 955, 956, 958, 960], "27977": 195, "28345": 195, "28771": 195, "29219": 195, "29652": 195, "preced": [195, 279, 280, 281, 282, 290, 296, 297, 298, 299, 300, 301, 302, 311, 321, 431, 844], "config": [195, 198, 216, 282, 289, 292, 305, 307, 310, 311, 325, 326, 333, 334, 447, 449, 450, 451, 452, 454, 455, 456, 458, 459, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 526, 527, 533, 534, 544, 552, 553, 564, 628, 638, 715, 725, 728, 732, 844, 854, 876, 893, 899], "mne_stim_channel": [195, 198, 326, 526, 527, 552, 553], "mne_stim_channel_1": [195, 326, 526, 527], "saver": [195, 229, 231, 320, 946], "testing_data_fold": 195, "eeglab_raw_fil": 195, "eeglab_raw": 195, "began": 195, "000068": 195, "602": [195, 224, 231, 237], "unmodifi": [195, 236, 308, 583], "custom_map": 195, "orig_tim": [195, 229, 246, 284, 287, 288, 291, 292, 303, 327, 352], "annot_from_ev": 195, "event_desc": [195, 352], "suppos": [195, 234, 274, 322, 859], "rem_annot": 195, "rem_ev": 195, "rem_event_dict": 195, "modulo": 195, "onlin": [195, 228, 233, 247, 283, 286, 314, 326, 580, 948, 962], "20_events_from_raw": [195, 201, 966], "alon": [196, 962], "gantri": [196, 286, 338], "blank": [196, 244, 303, 958], "file_id": [196, 244, 284, 333, 334, 335, 336, 338, 552, 553, 554], "subject_info": [196, 286, 305, 309, 310, 333, 334, 335, 336, 338, 552, 553, 554], "device_info": [196, 289, 333, 334, 335, 336, 338, 517, 552, 553, 554], "helium_info": [196, 289, 333, 334, 335, 336, 338, 552, 553, 554], "hpi_subsystem": [196, 338], "proc_histori": [196, 333, 334, 335, 336, 338, 552, 553, 554], "proj_id": [196, 244, 333, 334, 335, 336, 338, 552, 553, 554], "proj_nam": [196, 244, 333, 334, 335, 336, 338, 552, 553, 554], "utc_offset": [196, 289, 303, 333, 334, 335, 336, 338, 552, 553, 554], "line_freq": [196, 271, 338], "gantry_angl": [196, 338], "ctf_head_t": [196, 338], "dev_ctf_t": [196, 338], "acq_par": [196, 244, 326, 338], "acq_stim": [196, 338], "xplotter_layout": [196, 338], "kit_system_id": [196, 338], "0143": 196, "0142": 196, "0213": 196, "0212": [196, 405], "0222": 196, "0223": 196, "0232": 196, "0233": 196, "0313": 196, "0312": 196, "0322": 196, "0323": 196, "0333": 196, "0332": 196, "0343": 196, "0342": 196, "0413": 196, "0412": 196, "0422": 196, "0423": 196, "0432": 196, "0433": 196, "0443": 196, "0442": 196, "0513": 196, "0512": 196, "0523": [196, 278, 754], "0522": 196, "0532": 196, "0533": 196, "0542": 196, "0543": 196, "0613": 196, "0612": 196, "0622": 196, "0623": 196, "0633": 196, "0632": 196, "0643": 196, "0713": 196, "0712": 196, "0723": 196, "0722": 196, "0733": 196, "0732": 196, "0743": 196, "0742": 196, "0813": 196, "0822": 196, "0823": 196, "0913": 196, "0912": 196, "0923": 196, "0922": 196, "0932": 196, "0933": 196, "0943": 196, "1012": [196, 224], "1023": 196, "1022": [196, 224], "1032": 196, "1042": [196, 224, 237, 405], "1123": [196, 224], "1122": [196, 231], "1133": [196, 237], "1132": 196, "1143": [196, 224], "1212": 196, "1223": 196, "1232": 196, "1233": 196, "1243": 196, "1242": 196, "1312": [196, 223], "1313": 196, "1322": 196, "1343": 196, "1412": 196, "1413": [196, 237], "1423": 196, "1433": [196, 237], "1432": 196, "1442": 196, "1443": 196, "1512": [196, 223, 278, 547], "1513": 196, "1523": [196, 237, 278, 333, 334, 795, 812, 822, 823, 825, 826, 828], "1533": 196, "1532": 196, "1543": 196, "1542": 196, "1612": 196, "1622": 196, "1623": 196, "1632": 196, "1633": 196, "1642": [196, 223], "1712": 196, "1722": [196, 223], "1723": 196, "1732": 196, "1733": [196, 223], "1743": 196, "1742": 196, "1813": 196, "1812": 196, "1822": 196, "1823": 196, "1832": 196, "1833": 196, "1843": 196, "1912": 196, "1913": 196, "1923": 196, "1922": 196, "1932": 196, "1933": 196, "1943": 196, "1942": 196, "2022": [196, 207, 240, 278, 315, 319, 652, 664], "2032": 196, "2033": 196, "2042": 196, "2122": 196, "2133": 196, "2132": 196, "2143": [196, 278, 333, 334, 795, 825, 828], "2142": 196, "2212": 196, "2213": 196, "2223": 196, "2222": 196, "2233": 196, "2242": [196, 244], "2243": 196, "2312": 196, "2313": [196, 238], "2323": 196, "2322": 196, "2333": [196, 632], "2343": 196, "2342": 196, "2412": 196, "2413": 196, "2422": 196, "2432": 196, "2442": 196, "2512": [196, 223], "2513": 196, "2523": 196, "2533": 196, "2532": 196, "2543": 196, "2542": 196, "2612": 196, "2613": 196, "2623": 196, "2633": 196, "bear": [196, 289, 311, 946], "scanno": [196, 338], "logno": [196, 338], "cal": [196, 241, 338, 390, 551, 658], "coil_typ": [196, 319, 338, 555], "unit_mul": [196, 338], "oxyhemoglobin": [196, 321, 322, 333, 334, 335, 336, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "deoxyhemoglobin": [196, 218, 321, 322, 333, 334, 335, 336, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "hbo": [196, 218, 239, 244, 251, 321, 322, 333, 334, 335, 336, 338, 443, 445, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "hbr": [196, 218, 239, 244, 251, 321, 322, 333, 334, 335, 336, 338, 443, 445, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "unawar": 196, "accident": [196, 246, 284, 294, 303, 308, 754], "emb": 196, "comprehens": [196, 224, 244, 256, 258, 311, 312, 485], "ch_idx_by_typ": 196, "exci": [196, 244, 321, 322, 333, 334, 335, 336, 338, 381, 445, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "ia": [196, 244, 283, 289, 321, 322, 333, 334, 335, 336, 338, 381, 445, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "syst": [196, 244, 321, 322, 333, 334, 335, 336, 338, 381, 445, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "bio": [196, 244, 251, 321, 322, 333, 334, 335, 336, 338, 381, 445, 552, 553, 568, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "temperatur": [196, 244, 305, 319, 321, 322, 333, 334, 335, 336, 338, 381, 445, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "gsr": [196, 244, 305, 321, 322, 333, 334, 335, 336, 338, 381, 445, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "fnirs_cw_amplitud": [196, 218, 239, 244, 321, 333, 334, 335, 336, 338, 443, 445, 552, 553], "fnirs_fd_ac_amplitud": [196, 218, 244, 321, 333, 334, 335, 336, 338, 443, 445, 552, 553], "fnirs_fd_phas": [196, 218, 244, 321, 333, 334, 335, 336, 338, 443, 445, 552, 553], "fnirs_od": [196, 244, 321, 333, 334, 335, 336, 338, 443, 445, 552, 553], "eeg_indic": 196, "ipython": [196, 312, 323, 333, 334, 552, 553, 638, 876, 893, 899, 946, 951, 961], "30_info": [196, 201, 966], "plai": [197, 233, 253, 271, 312, 322, 824, 827], "eeg_posit": 197, "builtin_montag": 197, "montage_nam": 197, "montage_descript": 197, "standard_alphabet": 197, "a1": [197, 236], "b2": 197, "standard_postfix": 197, "postfix": 197, "intermedi": [197, 228, 307, 322, 339, 358, 360, 775, 844, 917], "standard_prefix": 197, "standard_prim": 197, "biosemi16": [197, 256], "biosemi": [197, 256, 322, 408, 561], "cap": [197, 224, 256, 303, 319, 321], "biosemi32": [197, 256], "biosemi64": [197, 256], "biosemi160": 197, "biosemi256": 197, "m10": [197, 291], "m43": [197, 308], "egi_256": 197, "geodes": [197, 304, 543, 590, 759, 760, 761, 763, 764], "gsn": [197, 517], "hydrocel": [197, 517], "64_1": 197, "65_1": 197, "mgh60": [197, 306], "mgh70": [197, 287], "brainvis": [197, 281, 283, 284, 285, 287, 288, 289, 292, 293, 295, 300, 302, 303, 304, 310, 319, 322, 400, 401, 514, 518, 552, 553, 563, 694], "artini": [197, 218, 294, 303, 309, 398], "octamon": [197, 218, 294], "detector": [197, 218, 239, 244, 292, 295, 310, 322, 577, 681, 682, 844, 862], "brite23": [197, 294], "brainproduct": 197, "rnp": 197, "ba": [197, 283, 305, 322, 520], "easycap_montag": 197, "headshap": [197, 292, 325, 375, 382, 395, 407, 578], "gca": 197, "view_init": [197, 234, 256], "azim": [197, 234], "ssvep_raw": 197, "circumfer": 197, "t4": 197, "t3": [197, 292, 390, 552], "075": 197, "sample_data_raw_path": 197, "sample_raw": 197, "ax2d": 197, "add_subplot": [197, 256], "ax3d": 197, "irregular": [197, 282, 946], "fastrak": 197, "predefin": [197, 321], "layout_dir": 197, "iterdir": 197, "IN": 197, "ctf151": [197, 256, 408], "lai": [197, 292, 295, 304, 322, 408, 585], "ctf275": [197, 256, 408], "eeg1005": [197, 408], "egi256": [197, 408], "geodesicheadweb": [197, 408], "AS": [197, 408], "umd": [197, 256, 408], "neuromag_122": [197, 408], "grad_norm": [197, 408], "magneswh3600": [197, 408, 564], "biosemi_layout": 197, "layout_from_raw": 197, "make_meg_layout": 197, "snugli": 197, "40_sensor_loc": [197, 201, 966], "suit": [198, 962], "unnam": 198, "mne_use_cuda": [198, 447, 951], "json": [198, 534], "unset": [198, 286, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 488, 495, 498, 501, 502, 528, 541, 543, 552, 553, 596, 599, 600, 611, 612, 621, 622, 643, 650, 651, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 846, 878, 881, 900], "typeerror": [198, 203, 283, 870], "err": [198, 232, 415], "nonetyp": 198, "unsur": [198, 231, 311], "fallback": [198, 283, 312, 333, 334, 552, 553, 876, 899], "missing_config_kei": 198, "mne_browse_raw_s": 198, "mne_datasets_brainstorm_path": 198, "mne_datasets_eegbci_path": [198, 452, 458], "mne_datasets_epilepsy_ecog_path": [198, 454], "mne_datasets_erp_core_path": [198, 455], "mne_datasets_eyelink_path": [198, 456], "mne_datasets_fieldtrip_cmc_path": 198, "mne_datasets_fnirs_motor_path": [198, 463], "mne_datasets_hf_sef_path": [198, 465], "mne_datasets_kiloword_path": [198, 466], "mne_datasets_limo_path": [198, 467], "mne_datasets_misc_path": [198, 468], "mne_datasets_mtrf_path": [198, 469], "mne_datasets_multimodal_path": [198, 470], "mne_datasets_opm_path": 198, "mne_datasets_phantom_4dbti_path": [198, 472], "mne_datasets_phantom_kernel_path": [198, 473], "mne_datasets_phantom_kit_path": [198, 474], "mne_datasets_refmeg_noise_path": [198, 475], "mne_datasets_sample_path": [198, 458, 476], "mne_datasets_somato_path": [198, 479], "mne_datasets_spm_face_path": 198, "mne_datasets_ssvep_path": [198, 481], "mne_datasets_testing_path": 198, "mne_datasets_ucl_opm_auditory_path": [198, 482], "mne_logging_level": [198, 735], "mne_3d_option_them": [198, 303, 844], "mne_browser_backend": [198, 303, 309, 333, 334, 552, 553, 638, 876, 893, 899], "mne_browser_them": [198, 303, 333, 334, 552, 553, 638, 876, 893, 899], "mne_browser_precomput": [198, 333, 334, 552, 553, 638, 876, 893, 899], "mne_browser_overview_mod": [198, 333, 334, 552, 553, 638, 876, 893, 899], "hidden": [198, 199, 293, 294, 305, 333, 334, 552, 553, 638, 844, 876, 893, 899], "recogn": [198, 235, 289, 291, 294, 307, 312, 568], "mne_3d_option_antialia": [198, 292, 912, 951], "antialias": [198, 292, 951], "mne_3d_option_depth_peel": [198, 912], "peel": 198, "mne_3d_option_multi_sampl": [198, 304, 951], "mne_3d_option_smooth_shad": [198, 854, 912], "theme": [198, 294, 303, 304, 310, 333, 334, 552, 553, 638, 844, 876, 893, 899], "inch": [198, 274, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 885, 889, 898, 901, 906, 908], "mne_browser_use_opengl": [198, 303, 333, 334, 552, 553, 638, 876, 893, 899], "opengl": [198, 333, 334, 552, 553, 638, 876, 893, 899, 951, 952, 958, 962], "mne_cache_dir": 198, "cach": [198, 951], "mne_coreg_advanced_rend": 198, "mne_coreg_copy_annot": 198, "mne_coreg_fullscreen": [198, 544], "mne_coreg_guess_mri_subject": 198, "mne_coreg_head_high_r": [198, 544], "mne_coreg_head_opac": [198, 544], "mne_coreg_head_insid": 198, "opaqu": [198, 199, 294, 343], "occlud": 198, "mne_coreg_interact": 198, "trackbal": [198, 325, 335, 336, 544, 844, 846, 862, 881], "terrain": [198, 286, 303, 325, 335, 336, 544, 844, 846, 862, 881], "mne_coreg_mark_insid": 198, "mne_coreg_prepare_bem": 198, "mne_coreg_orient_to_surfac": 198, "mne_coreg_scale_label": 198, "mne_coreg_scale_by_dist": 198, "mne_coreg_scene_scal": 198, "mne_coreg_window_height": 198, "mne_coreg_window_width": [198, 544], "mne_coreg_subjects_dir": 198, "mne_cuda_devic": [198, 289], "gpu": [198, 289, 946], "mne_datasets_megsim_path": 198, "megsim": [198, 285], "mne_datasets_spm_face_datasets_test": 198, "mne_datasets_visual_92_categories_path": [198, 483], "mne_force_seri": 198, "serial": [198, 338], "decor": [198, 840, 842], "stabl": [198, 207, 230, 232, 278, 311, 328, 366, 367, 412, 524, 551, 552, 553, 626, 638, 648, 854, 946, 958], "intro": [198, 199, 201, 271, 966], "50_configure_mn": [198, 201, 966], "mne_memmap_min_s": 198, "worker": [198, 314], "1m": [198, 218, 736], "5g": 198, "mne_repr_html": [198, 305], "mne_skip_network_test": 198, "requires_good_network": 198, "mne_skip_testing_dataset_test": 198, "requires_spm_data": 198, "requires_bstraw_data": 198, "mne_tqdm": [198, 292, 293], "tqdm": [198, 292, 293], "presenc": [198, 228, 239, 253, 271, 278, 282, 291, 293, 304, 311, 318, 338, 464, 509, 518, 552, 553], "absenc": [198, 509], "mne_use_numba": 198, "numba": [198, 289, 291, 292, 293, 952], "compil": [198, 677], "misspel": 198, "mnee_use_cuudaa": 198, "runtimewarn": [198, 310, 841], "unrecogn": [198, 294, 333, 334, 335, 336, 338, 552, 553], "concern": [198, 232, 256, 573, 665, 701, 705], "userprofil": [198, 534], "linux": [198, 287, 311, 953, 955, 958, 960], "maco": [198, 288, 294, 311, 953, 955, 956], "home_dir": [198, 533, 534, 732], "use_env": [198, 533], "set_env": [198, 283, 732], "python_env": [198, 233], "minimal_cmd": 198, "usr": [198, 958, 961], "sbin": 198, "statement": [198, 199, 256, 734, 958], "fresh": 198, "me": [198, 784], "worrisom": 198, "temporarili": [198, 234, 235, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 448, 487, 523, 552, 553, 638, 876, 893, 899, 924], "kit_data_path": 198, "abspath": 198, "meg160": 198, "v2r004": 198, "160ch": 198, "jan24": 198, "eq1160c": 198, "dewar": 198, "fll": 198, "board": 198, "adc": [198, 217], "alloc": [198, 776, 777, 779, 780], "shorthand": 198, "whatev": [198, 236, 311, 552, 553], "recent": [198, 230, 304, 311, 318, 485, 952, 956], "hasn": [198, 294, 303, 650], "stdout": [198, 305, 734, 788], "platform": [198, 324, 333, 334, 335, 336, 552, 553, 793, 794, 799, 800, 899, 952, 955, 960, 962, 964], "aw": [198, 324], "x86_64": [198, 958], "glibc2": 198, "nov": 198, "gcc": 198, "cpu": [198, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 488, 495, 497, 498, 501, 502, 528, 541, 543, 552, 553, 596, 599, 600, 611, 612, 621, 622, 638, 643, 650, 651, 676, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 846, 876, 878, 881, 893, 899, 900, 951, 952], "gb": [198, 951, 952, 958], "latest": [198, 291, 304, 311, 788, 946, 951, 960], "releas": [198, 217, 230, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 309, 311, 312, 788, 946, 960], "openbla": [198, 946, 952], "dev": [198, 253, 626, 734, 952], "thread": [198, 266, 322, 333, 334, 552, 553, 638, 876, 893, 899, 952], "agg": 198, "dipi": [198, 307, 345, 673, 832, 833, 834, 952], "openmeeg": [198, 305, 595, 600, 952], "h5io": [198, 946, 956], "h5py": [198, 946, 956], "unavail": [198, 291, 952], "cupi": [198, 287, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 491, 496, 523, 524, 525, 552, 553, 951, 952], "mesa": [198, 292, 303, 304, 306, 912, 952], "1ubuntu3": 198, "llvmpipe": [198, 951, 952], "llvm": [198, 951, 952], "pyvistaqt": [198, 295, 340, 344, 348, 856, 904, 911, 930, 951, 952], "vtk": [198, 303, 484, 844, 861, 951, 952], "qtpy": [198, 952], "pyqt6": 198, "ipympl": [198, 952], "pyqtgraph": [198, 295, 303, 333, 334, 552, 553, 638, 876, 893, 899, 952], "ipywidget": 198, "trame_cli": 198, "trame_serv": 198, "trame_vtk": 198, "trame_vuetifi": 198, "ecosystem": [198, 952, 953, 956, 959], "eeglabio": [198, 294, 333, 334, 515, 518, 552, 553], "edfio": [198, 310, 518, 552, 553], "mffpy": [198, 293, 517], "pybv": [198, 217, 310, 518, 552, 553], "icalabel": [198, 304, 952, 959], "shell": [199, 210, 238, 278, 311, 322, 325, 594, 601, 946, 952, 958, 959], "deploi": [199, 946], "tempfil": 199, "ndimag": 199, "raw_tsss": [199, 325, 552, 553, 574], "_eeg": [199, 294, 325, 552, 553], "_ieeg": [199, 294, 325, 552, 553], "underscor": [199, 229, 233, 244, 638], "parse_fold": [199, 286, 287, 291, 292, 293, 294, 295, 302, 343], "add_raw": [199, 303, 343], "slider": [199, 275, 287, 294, 303, 304, 335, 336, 343, 885, 951], "scrub": 199, "report_raw": 199, "jqueri": 199, "bundl": [199, 303, 955], "tableexport": 199, "highlightj": 199, "atom": 199, "meaning": [199, 245, 311, 730], "events_path": 199, "report_ev": 199, "add_epoch": [199, 303, 310, 343], "fly": [199, 258, 302, 333, 334, 552, 553, 829, 842, 876, 899], "report_epoch": 199, "add_evok": [199, 343], "n_time_point": [199, 343], "evoked_path": 199, "cov_path": 199, "evokeds_subset": 199, "report_evok": 199, "add_covari": [199, 343], "report_cov": 199, "ecg_proj_path": 199, "report_proj": 199, "add_ica": [199, 305, 309, 343], "ecg_evok": [199, 233, 235, 343], "eog_evok": [199, 232, 233, 235, 343], "artifactu": [199, 227, 230, 233, 278, 638], "find_bads_ecg": [199, 233, 284, 292, 295, 343, 638], "ecg_scor": [199, 233, 343], "liber": 199, "eog_compon": 199, "report_ica": 199, "add_bem": [199, 295, 343], "th": [199, 322, 333, 638, 746, 749, 751, 795, 946], "report_mri_and_bem": 199, "add_tran": [199, 303, 343], "trans_path": 199, "report_coregistr": 199, "add_forward": [199, 303, 343, 844, 965], "fwd_path": 199, "report_forward_sol": 199, "add_inverse_oper": [199, 343], "inverse_op_path": 199, "report_inverse_op": 199, "add_stc": [199, 303, 343], "report_inverse_sol": 199, "01632618": 199, "06303297": 199, "63565434": 199, "add_cod": [199, 343], "syntax": [199, 310, 311, 322, 343], "snippet": [199, 264, 343, 946], "liter": [199, 322, 343], "mne_init_py_path": 199, "__init__": [199, 627], "mne_init_py_cont": 199, "read_text": 199, "utf": [199, 287, 304, 569, 694, 700], "report_cod": 199, "add_figur": [199, 295, 303, 304, 343], "caption": [199, 295, 343], "num": [199, 270, 789, 790, 791, 795, 796, 797, 798], "sky": 199, "image_format": [199, 306, 307, 325, 343], "report_custom_figur": 199, "fig_1": 199, "ax_1": 199, "ax_2": 199, "report_custom_figure_sect": 199, "logo": [199, 280], "mne_logo_path": 199, "mne_icon": 199, "fig_arrai": 199, "rotation_angl": 199, "fig_array_rot": 199, "fun": [199, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "photo": 199, "screenshot": [199, 274, 295, 844, 916], "sketch": 199, "add_imag": [199, 295, 304, 306, 343], "jpeg": [199, 343], "gif": [199, 306, 343, 844], "svg": [199, 285, 302, 307, 325, 343], "report_custom_imag": 199, "add_": 199, "dropdown": [199, 303], "menu": [199, 246, 323, 955, 958], "hide": [199, 246, 269, 280, 289, 303], "checkbox": [199, 303], "report_tag": 199, "hdf5": [199, 287, 301, 309, 337, 340, 341, 343, 347, 349, 357, 370, 627, 637, 686, 716, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 816, 817, 818, 829, 933, 934, 938, 946], "report_parti": 199, "amend": [199, 402], "report_from_disk": 199, "report_fin": 199, "invok": [199, 301, 325, 859, 958], "barebon": [199, 325], "render_bem": [199, 286, 343], "raw_butterfli": [199, 343], "report_parse_folder_bas": 199, "raw_psd": [199, 287, 343], "refin": [199, 345, 390, 431], "report_parse_folder_raw_psd_proj": 199, "mri_decim": [199, 325, 343], "report_parse_folder_mri_bem": 199, "temporarydirectori": 199, "n_time_points_evok": [199, 343], "report_parse_folder_evok": 199, "tmp": 199, "tmpctna6w7": 199, "add_html": [199, 295, 310, 343], "remind": [199, 311, 638], "my_html": 199, "ol": [199, 301, 314, 774], "manifest": [199, 231, 232, 233, 235, 321], "n1": 199, "report_add_html": 199, "70_report": [199, 201, 966], "realli": 202, "carri": [202, 227, 233, 271, 561, 770], "belong": [202, 338, 339, 343, 710, 766, 843, 844], "shape_lh": 202, "is_equ": 202, "suspect": 202, "nth": [202, 233, 328, 332, 333, 334, 335, 336, 552, 553, 655, 656, 789, 790, 791, 795, 796, 797, 798, 821, 823, 824, 825, 826, 827], "peak_vertex": 202, "vert_as_index": [202, 207, 340, 341, 344, 347, 348, 349], "peak_vertex_surf": 202, "peak_valu": 202, "logic": [202, 251, 258, 261, 305, 333, 334, 335, 336, 338, 544, 552, 553, 554, 638, 665], "lh_coordin": 202, "rh_coordin": 202, "10_stc_class": [202, 215, 966], "load_mni152_templ": 203, "fname_av": 203, "fname_surf_lh": 203, "n100m": 203, "evoked_ful": 203, "posixpath": [203, 208], "6179": 203, "5857": 203, "5882": 203, "2253": 203, "0605": 203, "6832": 203, "mni_po": 203, "to_mni": [203, 294, 331], "mri_po": 203, "to_mri": [203, 305, 331], "best_dip_idx": 203, "to_volume_label": [203, 295, 331], "fig_t1": 203, "cut_coord": 203, "fig_templ": 203, "pred_evok": 203, "inf": [203, 219, 227, 252, 284, 333, 334, 335, 336, 351, 490, 549, 550, 552, 553, 587, 651, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 806, 814, 815, 853, 900, 906], "best_idx": 203, "best_tim": 203, "conf": [203, 311, 331], "plot_param": 203, "0f": [203, 335, 336, 846, 881], "dip_fix": 203, "0103": 203, "7509": 203, "6604": 203, "electromagnet": [203, 205, 227, 235, 238, 253, 278, 321, 322, 366, 367, 506, 605, 649, 676], "biomagnet": [203, 278], "20_dipole_fit": [203, 215, 966], "200m": [204, 218], "500m": 204, "fig_cov": [204, 330, 871], "fig_spectra": 204, "1705": [204, 207, 223], "1468": 204, "1574": 204, "68182": 204, "16191e": 204, "set_color": [204, 210], "98df81": [204, 210], "vertno_max": 204, "time_max": [204, 205], "30_mne_dspm_loreta": [204, 215, 966], "left_auditori": 205, "dip_po": 205, "dip_ori": 205, "dip_len": 205, "dip_tim": 205, "rgb": [205, 340, 341, 344, 347, 348, 349, 538, 543, 844, 865, 904, 909, 910], "outward": [205, 331, 341, 347, 349, 436, 874, 946], "moment": [205, 207, 338, 341, 347, 349, 388, 413, 415, 416, 417, 506, 648, 649, 665, 676, 909], "06165525": 205, "70033915": 205, "34794621": 205, "inward": [205, 946], "curvatur": [205, 295, 340, 341, 344, 347, 348, 349, 787, 844, 904, 909], "brain_mag": 205, "overlay_alpha": [205, 341, 347, 349, 909], "2188": 205, "44205e": 205, "79973942": 205, "38378769": 205, "8347911": 205, "somewhat": [205, 227], "strai": 205, "unrestrict": 205, "brain_loos": 205, "03844879": 205, "68532258": 205, "12541436": 205, "knuutila": [205, 278], "olli": [205, 278], "lounasmaa": [205, 278], "instrument": [205, 227, 233, 278], "noninvas": [205, 278], "modern": [205, 216, 278, 288, 295, 322, 459, 948, 951], "revmodphi": [205, 278], "fa": [205, 278, 616, 746, 751], "hsuan": [205, 278, 616, 746, 751], "lin": [205, 223, 278, 491, 616, 746, 751], "belliveau": [205, 278, 605, 616, 746, 751], "20155": [205, 278], "941": [205, 215, 966], "559": [205, 224, 237, 261], "35_dipole_orient": [205, 215, 966], "variant": [206, 217, 291, 538, 649, 951], "1498464098687909": [206, 208], "037797": 206, "65922": 206, "72259e": 206, "28047949e": 206, "72734062e": 206, "97200565e": 206, "56295849": 206, "27742998": 206, "00597185": 206, "65359441": 206, "22223216": 206, "63030546": 206, "eigen": [206, 339, 766], "34003429e": 206, "79067976e": 206, "93243713e": 206, "61893": 206, "8713e": 206, "81398590e": 206, "00293217e": 206, "59049573e": 206, "79225614": 206, "45181115": 206, "88420759": 206, "65906465": 206, "11446799": 206, "4224023": 206, "41240750e": 206, "15338772e": 206, "80101709e": 206, "712": [206, 215, 966], "40_mne_fixed_fre": [206, 215, 966], "britta": [207, 278, 285, 286, 287, 288, 291, 292, 294, 295, 303, 306, 307, 308, 310, 964], "westner": [207, 278, 285, 286, 287, 288, 291, 292, 294, 295, 303, 306, 307, 308, 310, 964], "wstnr": 207, "linearli": [207, 234, 238, 278, 321, 362, 363, 364, 365, 366, 367, 946], "ingredi": 207, "valuabl": [207, 322], "gaug": 207, "incorpor": [207, 256, 261, 304, 311, 322, 390, 509, 518, 552, 553, 643], "rule": [207, 227, 231, 278, 310, 322, 638], "thumb": [207, 227, 231, 319, 638], "advic": [207, 311], "defici": [207, 284, 285, 322, 441, 638], "misrepres": 207, "3757": [207, 208], "inher": [207, 217, 261, 502], "somehow": [207, 209, 233], "nai": [207, 287, 292, 366, 367], "switch": [207, 210, 211, 230, 237, 253, 278, 288, 292, 295, 310, 311, 325, 339, 344, 420, 552, 553, 951, 958], "invari": [207, 366, 367], "filters_vec": 207, "087": 207, "stat_map": [207, 348, 349, 910], "5184": 207, "glass_brain": [207, 208, 289, 348, 349, 910], "022485": [207, 208], "008449": [207, 208], "036217": [207, 208], "071071": [207, 208], "914866": [207, 208], "406098": [207, 208], "008756": [207, 208], "433700": [207, 208], "028119": [207, 208], "plotter": [207, 280, 293, 320, 333, 334, 638, 844, 847, 876, 893], "peak_vox": 207, "ori_label": 207, "fname_fs_src": 207, "stc_f": [207, 208], "085": [207, 227, 243, 966], "17352": 207, "barri": [207, 230, 232, 233, 278, 366, 367, 637, 653], "veen": [207, 278, 366, 367], "wim": [207, 278, 366, 367], "drongelen": [207, 278, 366, 367], "mosh": [207, 278, 366, 367], "yuchtman": [207, 278, 366, 367], "akifumi": [207, 278, 366, 367], "suzuki": [207, 278, 366, 367], "867": [207, 278, 366, 367], "623056": [207, 278, 366, 367], "brook": [207, 278, 280, 281, 282, 283, 284, 285, 287, 288, 292, 298, 299, 300, 301, 302, 316], "jiri": [207, 278], "vrba": [207, 278], "clair": [207, 278, 286], "stevenson": [207, 278], "gareth": [207, 240, 278, 319, 652], "barn": [207, 240, 278, 319, 652], "arjan": [207, 278], "hillebrand": [207, 278], "morri": [207, 278], "optimis": [207, 278], "1788": [207, 278], "sarang": [207, 278, 314], "dalal": [207, 278, 314], "vladimir": [207, 256, 278, 782, 783], "litvak": [207, 256, 278, 782, 783], "oostenveld": [207, 261, 278, 291, 776, 777, 779, 780], "mathij": [207, 278], "schoffelen": [207, 278], "118789": [207, 278], "50_beamformer_lcmv": [207, 215, 966], "flatmap": [208, 294, 340, 344, 348, 844, 904], "mpl_fig": 208, "94880328959697": 208, "84640986879091": 208, "649601096532322": 208, "5653": 208, "67635542": 208, "11717401": 208, "19136023": 208, "atlas": [208, 292, 738], "label_tc": [208, 340, 341, 344, 347, 348, 349, 519], "lidx": 208, "xytext": 208, "arrowprop": [208, 223], "arrowstyl": [208, 223], "spine": [208, 274, 859, 870], "set_vis": 208, "grain": [208, 295], "loci": 208, "stc_back": 208, "6210": 208, "69834054": 208, "98871778": 208, "62206532": 208, "70708526": 208, "36619556": 208, "64056812": 208, "5945": 208, "60_visualize_stc": [208, 215, 966], "reconstrct": 209, "elc": [209, 283, 400], "synthes": [209, 216, 288, 373, 377, 578, 666], "fname_t1_electrod": 209, "sample_eeg_mri": 209, "t1_electrod": 209, "fname_mon": 209, "sample_mri_montag": 209, "ras_mni_t": [209, 836], "mni_affin": 209, "img_mni": 209, "hot_black_bon": 209, "black_bg": 209, "resampling_interpol": 209, "pos_vox": 209, "fname_t1": 209, "vox2mri_t": 209, "pos_mri": [209, 331], "tkmedit": [209, 322, 958], "dig_montag": 209, "head_siz": [209, 398, 400], "99930957": 209, "00998471": 209, "03578661": 209, "00316747": 209, "01275917": 209, "81240435": 209, "58295487": 209, "00685511": 209, "03489383": 209, "58300899": 209, "81171605": 209, "02888406": 209, "812404": 209, "582955": 209, "583009": 209, "3252": 209, "3250": 209, "1853": 209, "3223": 209, "4097": [209, 230], "1864": 209, "8193": 209, "040598": 209, "157084": 209, "86184": 209, "24877e": 209, "17591891": 209, "939572": 209, "86348066": 209, "70_eeg_mri_coord": [209, 215, 966], "planor": 210, "meg1933": 210, "meg2421": 210, "645": 210, "1792": 210, "3840": 210, "7936": 210, "bmax": [210, 325], "ring": [210, 230, 285, 286, 520, 522], "otaniemi": [210, 284, 295, 319, 462, 505], "phantom_otaniemi": 210, "32640": 210, "32639": 210, "976295": 210, "211976": 210, "043756": 210, "206488": 210, "972764": 210, "105326": 210, "064891": 210, "093794": 210, "993475": 210, "rad2deg": [210, 213], "arcco": [210, 213], "80_brainstorm_phantom_elekta": [210, 215, 966], "phantomctf": 211, "bst_phantom_ctf": 211, "phantom_200ua_20150709_01": 211, "dip_freq": [211, 213], "phantom_20ua_20150603_03": 211, "erm_path": 211, "emptyroom_20150709_01": 211, "24000": 211, "23999": 211, "hdac006": 211, "zeros_lik": [211, 223], "ones_lik": [211, 258, 259], "tsss": [211, 281, 307, 335, 338, 552, 574, 676, 684, 706], "apply_gradient_compens": [211, 216, 283, 322, 552, 553], "un": [211, 231, 234, 238, 247, 322, 552, 553, 614, 615, 899], "mf_kwarg": 211, "st_durat": [211, 238, 665, 676], "021666666666666667": 211, "catch_warn": 211, "simplefilt": 211, "60000": 211, "999939": 211, "002039": 211, "010868": 211, "001115": 211, "959234": 211, "282612": 211, "011001": 211, "282607": 211, "959173": 211, "expected_po": 211, "array_str": 211, "773": [211, 215, 261, 966], "85_brainstorm_phantom_ctf": [211, 215, 966], "4dbti": 212, "badier": [212, 278, 749], "marseil": [212, 319], "franc": 212, "rfhp1": 212, "0hz": 212, "a173": 212, "a213": 212, "a232": 212, "4350": 212, "not_and": [212, 285, 326, 526, 703], "hs_file": [212, 216, 564], "13599": 212, "20053968578577042": 212, "6576": 212, "6575": 212, "975564": 212, "033891": 212, "217085": 212, "044586": 212, "998011": 212, "044560": 212, "215143": 212, "053150": 212, "975135": 212, "975554": 212, "034041": 212, "217109": 212, "044503": 212, "998063": 212, "043482": 212, "215208": 212, "052081": 212, "975178": 212, "975577": 212, "033678": 212, "217061": 212, "044611": 212, "997960": 212, "045666": 212, "215080": 212, "054233": 212, "975089": 212, "975557": 212, "033946": 212, "217110": 212, "044391": 212, "998071": 212, "043409": 212, "215218": 212, "051986": 212, "975181": 212, "44409481": 212, "3777228": 212, "21222012": 212, "17616473": 212, "951": [212, 215, 237, 261, 966], "90_phantom_4dbti": [212, 215, 966], "oyama": [213, 278, 505], "picks_artifact": [213, 232, 240, 637, 691], "plot_scal": 213, "raw_plot_kwarg": 213, "n_dip": 213, "phantom_run": 213, "01_meg": [213, 293], "605800": 213, "01_event": 213, "01_channel": 213, "dip01": 213, "dip02": 213, "dip03": 213, "dip04": 213, "dip05": 213, "dip06": 213, "dip07": 213, "dip08": 213, "dip09": 213, "dip10": 213, "dip11": 213, "dip12": 213, "dip13": 213, "dip14": 213, "dip15": 213, "dip16": 213, "dip17": 213, "dip18": 213, "dip19": 213, "dip20": 213, "dip21": 213, "dip22": 213, "dip23": 213, "dip24": 213, "dip25": 213, "dip26": 213, "dip27": 213, "dip28": 213, "dip29": 213, "dip30": 213, "dip31": 213, "dip32": 213, "dip33": 213, "dip34": 213, "dip35": 213, "dip36": 213, "dip37": 213, "dip38": 213, "dip39": 213, "dip40": 213, "dip41": 213, "dip42": 213, "dip43": 213, "dip44": 213, "dip45": 213, "dip46": 213, "dip47": 213, "dip48": 213, "dip49": 213, "boxcar": [213, 271, 287, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 525, 552, 553, 946], "1029": [213, 224], "02d": 213, "17493": 213, "17492": [213, 223], "998477": 213, "050618": 213, "021924": 213, "052328": 213, "994909": 213, "086126": 213, "017452": 213, "087142": 213, "996043": 213, "1684": [213, 215, 966], "95_phantom_kit": [213, 215, 966], "725": [215, 224, 237, 966], "maxshield": [216, 283, 286, 325, 335, 338, 552, 574, 676, 706], "allow_maxshield": [216, 237, 238, 335, 552, 574, 706], "ucl": [216, 240, 278, 307, 425], "mandatori": [216, 322, 366, 367, 390, 552, 638], "rfdc": [216, 325], "realiz": [216, 230], "carefulli": [216, 228, 230, 319], "technic": [216, 269, 278, 312, 318, 322, 333, 334, 335, 336, 552, 553, 605, 789, 791, 793, 795, 797, 799, 808, 814], "disturb": [216, 318, 322], "mainli": [216, 271, 311, 322], "nicknam": 216, "n_1": 216, "n_2": 216, "n_3": 216, "x_1": [216, 322], "x_2": [216, 322], "x_3": 216, "denot": [216, 224, 246, 321, 322, 341, 347, 349, 674, 746, 749, 751, 770, 772, 792], "x_": [216, 224, 322], "m_": 216, "bmatrix": [216, 322], "c_": [216, 256, 322], "standardize_nam": [216, 292, 578, 702], "nx3": [216, 540], "mrk": [216, 289, 325, 556, 578, 702], "elp": [216, 283, 291, 322, 325, 400, 407, 578, 702, 704], "onward": [216, 739], "miscellan": [216, 244, 322, 333, 334, 335, 336, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "eight": [216, 305, 322], "endian": [216, 293], "big": [216, 233, 274, 280, 282, 293, 295, 320, 494, 778], "stimthresh": [216, 325, 578], "sum_": [216, 230, 322, 749], "t_p": 216, "d_p": 216, "bigg": 216, "leq": [216, 256], "intent": [216, 320], "original_data": 216, "read_raw_fiff": 216, "original_info": 216, "data_from_ft": 216, "evoked_data": [216, 258], "untest": 216, "cnt": [216, 282, 288, 289, 307, 322, 514, 565, 694], "egi": [216, 241, 284, 285, 286, 287, 288, 289, 292, 293, 301, 302, 304, 310, 319, 322, 400, 403, 570], "eximia": [216, 286, 322, 571], "parti": 216, "librari": [216, 289, 298, 311, 320, 847, 946, 951, 958, 962], "abund": 216, "electrophysiolog": [216, 230, 278, 321], "10_reading_meg_data": [216, 222, 966], "meta": [217, 310, 314, 333, 334, 335, 336, 338, 552, 553, 554], "ini": 217, "host": [217, 285, 312], "mnelab": [217, 959], "pyedflib": 217, "amplifi": [217, 232, 236, 304, 583, 962], "byte": [217, 292, 308, 325, 333, 334, 552, 553, 587, 853], "overcom": [217, 231], "gender": [217, 278, 477], "danger": [217, 338], "x_coord": 217, "y_coord": 217, "electloc": 217, "encourag": [217, 253, 306, 312, 961], "netstat": [217, 301, 570], "nexstim": 217, "nk": 217, "11d": 217, "cmt": 217, "cn2": 217, "histori": [217, 302, 321, 338, 517], "successfulli": [217, 218, 245, 311], "neither": [217, 452, 542, 552, 553, 960], "nor": [217, 236, 312, 542, 552, 553, 960], "20_reading_eeg_data": [217, 222, 966], "emitt": 218, "transmitt": 218, "oxyhaemoglobin": [218, 239], "modif": [218, 220, 266, 301, 400, 445, 959], "Near": 218, "effort": [218, 311, 314, 561, 947], "sfnir": 218, "gowerlab": [218, 304], "cortivis": 218, "provis": 218, "haemoglobin": [218, 291, 303, 678], "optode_fram": [218, 586], "vendor": [218, 322], "icbm": 218, "2009b": 218, "nirstar": [218, 583], "aurora": [218, 295, 304, 583], "nirscout": [218, 583], "nirsport": [218, 295, 583], "iss": [218, 293, 562], "paren": 218, "unmodul": 218, "unpars": 218, "organis": 218, "digaux": 218, "port": [218, 958, 962], "discourag": [218, 305, 333, 334, 335, 336, 552, 553, 789, 793, 794, 799, 800, 878, 946], "standardis": [218, 305], "to_csv": [218, 244], "_d": 218, "wavelength": [218, 227, 310, 678], "s1_d1": [218, 239], "s2_d1": 218, "s3_d1": 218, "s4_d1": 218, "s5_d2": 218, "s6_d2": 218, "s7_d2": 218, "s8_d2": 218, "ficidu": 218, "196m": 218, "39m": 218, "9mb": 218, "7m": 218, "6mb": 218, "0m": 218, "7mb": 218, "5m": 218, "8mb": 218, "3mb": 218, "2mb": 218, "2m": 218, "3m": 218, "6m": 218, "0mb": 218, "105m": 218, "113m": 218, "120m": 218, "4mb": 218, "129m": 218, "136m": 218, "143m": 218, "149m": 218, "154m": 218, "159m": 218, "167m": 218, "175m": 218, "183m": 218, "1mb": 218, "191m": 218, "620gb": 218, "239m": 218, "9m": 218, "108m": 218, "117m": 218, "126m": 218, "134m": 218, "142m": 218, "158m": 218, "5mb": 218, "166m": 218, "192m": 218, "209m": 218, "217m": 218, "226m": 218, "234m": 218, "796gb": 218, "821": [218, 222, 966], "30_reading_fnirs_data": [218, 222, 966], "site": [219, 232, 233, 238, 278, 311, 338, 390, 552, 649, 665, 676], "beep": 219, "deviant": [219, 230], "finger": [219, 319], "bug": [219, 230, 290, 310, 311, 312, 313, 326, 526, 788, 844, 947], "consumpt": [219, 286, 294, 303, 335, 336, 502, 880], "use_precomput": 219, "erm_fnam": 219, "s01_noise_20131218_01": 219, "demand": [219, 244, 280, 322, 502, 506, 551, 699], "n_times_run1": 219, "4800": 219, "unus": [219, 286, 291, 303, 309, 311, 346, 665], "heog": [219, 565], "veog": [219, 305, 565], "favorit": [219, 311], "annotations_df": 219, "csv_fname": 219, "events_bad_0": 219, "concat": [219, 485], "saccades_ev": 219, "7625": 219, "2776": 219, "142459": 219, "216954": 219, "345135": 219, "5816": 219, "357687": 219, "1053": 219, "409101": 219, "3736": 219, "461110": 219, "479866": 219, "764914": 219, "11500": [219, 307], "798174": 219, "6589": 219, "846880": 219, "858863": 219, "5583": 219, "9256": 219, "3114": 219, "14287": 219, "3456": 219, "116432": 219, "134489": 219, "1329": [219, 223, 237], "464527": 219, "494136": 219, "4519": 219, "749288": 219, "788623": 219, "7937": 219, "21179": 219, "72993": 219, "134527": 219, "196555": 219, "249894": 219, "343357": 219, "400771": 219, "450256": 219, "593101": 219, "733942": 219, "765939": 219, "789476": 219, "792852": 219, "833208": 219, "859869": 219, "862888": 219, "saccade_epoch": 219, "reject_by_annot": [219, 239, 246, 284, 285, 286, 288, 292, 310, 333, 430, 552, 553, 597, 638, 655, 656, 666, 667, 791, 797, 799, 891, 900], "projs_saccad": 219, "n_mag": [219, 235, 309, 325, 426, 427, 428, 650, 651], "n_eeg": [219, 235, 309, 325, 426, 427, 428, 650, 651, 844, 862], "desc_prefix": [219, 426, 427], "projs_eog": 219, "1201": [219, 278, 369], "spectra": [219, 251, 269, 278, 309, 321, 333, 334, 335, 336, 490, 552, 553, 611, 612, 776, 793, 794, 799, 800, 803, 806, 814, 815, 878, 900], "doubl": [219, 230, 233, 271, 281, 283, 299, 311, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 518, 520, 521, 523, 524, 551, 552, 553, 575, 676, 958], "filter_length": [219, 230, 231, 235, 283, 292, 325, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 524, 552, 553, 650, 651, 666, 667], "sound": [219, 223, 224, 233, 278, 333, 334, 492, 795, 825, 828], "uadc001": 219, "sound_data": 219, "min_diff": 219, "\u03bc": [219, 238, 494], "\u03c3": [219, 238, 494, 601], "mlo52": 219, "mrt51": 219, "mlo42": 219, "mlo43": 219, "epochs_standard": 219, "epochs_devi": 219, "mlp52": 219, "evoked_std": 219, "evoked_dev": 219, "p50": 219, "paint": [219, 333, 334, 335, 336, 552, 553, 880, 900], "mmn": 219, "emphasis": 219, "evoked_differ": 219, "ico4": [219, 318, 728], "8033": 219, "015871": 219, "10585e": 219, "09843": 219, "11765e": 219, "stc_standard": 219, "80289065": 219, "69025561": 219, "89954825": 219, "stc_deviant": 219, "12814543": 219, "29154718": 219, "6203076": 219, "stc_differ": 219, "96162575": 219, "78319301": 219, "94351171": 219, "695": [219, 222, 966], "60_ctf_bst_auditori": [219, 222, 966], "glossari": [220, 310, 311, 323], "ascii": [220, 284, 292, 295, 304, 309, 319, 322, 325, 569, 572, 694, 700, 722], "edf2asc": 220, "european": [220, 322, 324], "ocular": [220, 232, 233, 235, 278, 308, 637, 691], "binocular": [220, 241], "ypos_right": [220, 241], "fpath": 220, "px_textpage_w": 220, "create_annot": [220, 241, 572], "custom_sc": 220, "trackabl": 220, "href_textpage_w": 220, "diamet": [220, 322], "ellips": 220, "delimint": 220, "2000hz": 220, "timestamp": [220, 246, 289, 327, 340, 341, 344, 347, 348, 349, 552, 553, 570, 694], "727": [220, 222, 261, 966], "70_reading_eyetracking_data": [220, 222, 966], "multivariate_norm": 223, "1337": 223, "path_audio": 223, "spectrogram": [223, 261, 271, 300, 314, 321], "n_decim": 223, "explicit": [223, 283, 292, 294, 295, 311, 332, 429, 441, 442], "delays_samp": 223, "delays_sec": 223, "5000": [223, 258], "meshgrid": [223, 234, 261], "swap": [223, 260, 266, 294, 322, 722], "swapax": [223, 260, 266], "gabor": 223, "means_high": 223, "means_low": 223, "2500": [223, 282], "gauss_high": 223, "gauss_low": 223, "artifici": [223, 278, 319, 570, 638], "convolut": [223, 230, 271, 295, 333, 334, 335, 336, 498, 552, 553, 621, 622, 789, 791, 795, 797, 802, 805, 812, 821, 822, 823, 824, 825, 826, 827, 959], "n_second": 223, "x_del": 223, "ix_delai": 223, "ndim": [223, 271], "elif": 223, "rollaxi": 223, "weights_sim": 223, "iep": 223, "noise_amp": 223, "x_plt": 223, "hstack": [223, 234], "y_plt": 223, "autocorrel": [223, 491, 497], "ix_best_alpha": 223, "best_mod": 223, "best_pr": 223, "iax": 223, "time_pr": 223, "3450": 223, "1320": 223, "1652": [223, 237], "2317": 223, "2647": 223, "2985": 223, "3314": 223, "21291": 223, "685": [223, 224, 237], "21388": 223, "21321": 223, "1364": 223, "21273": 223, "21277": 223, "21305": 223, "21260": 223, "2705": 223, "21066": 223, "3022": [223, 322, 390, 552], "20888": 223, "3332": 223, "20695": 223, "20757": 223, "19152": 223, "19424": 223, "19502": 223, "1255": 223, "19592": 223, "1564": [223, 237], "19518": 223, "1872": 223, "19462": 223, "2175": 223, "19369": 223, "2479": 223, "19310": 223, "2766": 223, "19123": 223, "3070": 223, "19107": 223, "3383": 223, "19156": 223, "19179": 223, "19165": 223, "19050": 223, "918": 223, "19085": 223, "19049": 223, "18844": 223, "18676": 223, "2099": 223, "18670": 223, "2344": 223, "18168": 223, "2595": 223, "17827": 223, "2857": 223, "17635": 223, "3122": 223, "17509": 223, "17634": 223, "17888": 223, "17744": 223, "17893": 223, "1156": 223, "18050": 223, "1448": 223, "18083": 223, "17898": 223, "17953": 223, "2314": 223, "18069": 223, "2569": 223, "17781": 223, "2792": 223, "17297": 223, "3009": 223, "16856": 223, "3213": 223, "16403": 223, "3428": 223, "16095": 223, "16411": 223, "11539": 223, "11556": [223, 307], "13434": 223, "928": 223, "14618": 223, "15261": 223, "15468": 223, "15613": 223, "1988": 223, "15655": 223, "2320": 223, "16339": 223, "2648": 223, "16855": 223, "2991": 223, "17371": 223, "3296": 223, "17554": 223, "17269": 223, "20555": 223, "654": 223, "20400": 223, "20591": 223, "20742": 223, "1666": 223, "20805": 223, "20925": 223, "2353": [223, 233, 278, 638], "21008": 223, "2696": 223, "21069": 223, "3016": 223, "20917": 223, "3356": 223, "20954": 223, "20932": 223, "subplot2grid": [223, 274], "i_alpha": 223, "ddot": 223, "tikhonov": 223, "trf": [223, 260], "insensit": [223, 284, 333, 334, 514, 561, 568, 576, 584, 641], "whilst": [223, 240], "mse": 223, "scores_lap": 223, "models_lap": 223, "reg_typ": [223, 497], "ix_best_alpha_lap": 223, "10896": 223, "11765": 223, "14466": 223, "987": [223, 261], "15546": 223, "1302": 223, "16457": 223, "17350": 223, "1973": 223, "17899": 223, "2266": 223, "17952": 223, "17600": 223, "2782": 223, "17508": 223, "3055": 223, "17452": 223, "3333": 223, "17439": 223, "17263": 223, "17617": 223, "17349": 223, "17234": 223, "1098": [223, 278, 322, 605], "17117": 223, "1381": 223, "17224": 223, "17789": 223, "17490": 223, "2228": [223, 278, 549], "17368": 223, "2551": 223, "17747": 223, "2878": [223, 278, 318], "18076": 223, "3207": 223, "18363": 223, "18308": 223, "20894": 223, "21061": 223, "21090": 223, "1358": 223, "21188": 223, "1699": 223, "21204": 223, "21230": 223, "2382": 223, "21235": 223, "2726": 223, "21268": 223, "3063": 223, "21237": 223, "3404": 223, "21243": 223, "21210": 223, "21023": 223, "679": [223, 252], "21192": 223, "1018": 223, "21177": 223, "1357": 223, "21169": 223, "1694": [223, 237], "21136": 223, "2037": 223, "21189": 223, "2379": 223, "21214": 223, "2722": 223, "21241": 223, "3062": 223, "21238": 223, "3401": 223, "21089": 223, "683": [223, 261], "21312": 223, "21226": 223, "21276": 223, "21283": 223, "21301": 223, "2359": 223, "20991": 223, "2654": 223, "20603": 223, "2978": 223, "20553": 223, "3278": 223, "20326": 223, "20351": 223, "21102": 223, "662": [223, 224, 261], "20644": 223, "20501": 223, "20466": 223, "1640": [223, 237], "20463": 223, "1950": 223, "20251": 223, "19815": 223, "19275": 223, "2813": 223, "19383": 223, "19613": 223, "19811": 223, "20822": 223, "20959": 223, "1009": [223, 230, 278], "20979": 223, "21067": 223, "1685": 223, "21033": 223, "20933": 223, "20969": 223, "2690": 223, "21003": 223, "3365": 223, "21000": 223, "20977": 223, "rf_lap": 223, "fr\u00e9d\u00e9ric": [223, 278, 491], "theunissen": [223, 278, 491], "nandini": [223, 278, 491], "singh": [223, 278, 282, 491], "ann": [223, 246, 278, 286, 491], "hsu": [223, 278, 491], "vinj": [223, 278, 491], "jack": [223, 278, 294, 305, 309, 491], "gallant": [223, 278, 491], "ben": [223, 278, 304, 491], "willmor": [223, 278, 491], "darragh": [223, 278, 491], "smyth": [223, 278, 491], "cell": [223, 227, 278, 291, 491], "553": [223, 224, 261, 278, 491], "577": [223, 224, 237, 261, 278, 491], "0954": [223, 278, 491], "898x_14_3_309": [223, 278, 491], "heer": [223, 278, 491], "paslei": [223, 278, 491], "jochem": [223, 278, 491], "rieger": [223, 278, 491], "nathan": [223, 278, 491], "crone": [223, 278, 491], "knight": [223, 278, 491], "tune": [223, 235, 278, 491], "ncomms13654": [223, 278, 491], "30_strf": [223, 226, 966], "visit": [224, 278, 311, 962], "insight": [224, 322], "eas": 224, "camel": 224, "n_meg_channel": 224, "standand": 224, "interquartil": 224, "robustscal": [224, 494], "n_frequenc": [224, 366, 621, 622, 792], "popular": [224, 321, 956], "win": [224, 271], "grasp": 224, "competit": 224, "kaggl": 224, "week": [224, 312], "clf_csp": 224, "ssnr": [224, 639], "rewrit": [224, 280], "boil": [224, 951], "evoked_time_gen": 224, "joint_kwarg": 224, "diag": [224, 769], "1296": [224, 237, 278], "525": 224, "548": [224, 261], "527": [224, 261], "572": [224, 261], "574": [224, 261], "575": [224, 261], "628": 224, "668": 224, "809": 224, "849": 224, "889": [224, 237, 346], "909": 224, "929": [224, 261], "969": 224, "989": 224, "1008": 224, "582": [224, 278], "1049": 224, "1069": [224, 278, 620, 749], "1129": [224, 278, 638, 674], "1149": 224, "1169": 224, "583": [224, 237, 261, 278, 493], "1228": 224, "1246": 224, "1263": 224, "1281": 224, "555": [224, 261], "554": [224, 261], "563": 224, "743": 224, "783": [224, 261], "804": 224, "824": [224, 261], "844": [224, 261], "864": [224, 346], "884": [224, 237, 259, 261, 278], "903": [224, 237], "919": [224, 261], "977": 224, "564": [224, 261, 278, 477], "1030": 224, "1065": 224, "1085": 224, "1105": [224, 237], "1139": 224, "1154": 224, "1171": 224, "1187": 224, "542": [224, 261], "1218": 224, "533": [224, 261], "1236": 224, "1256": 224, "1294": 224, "742": [224, 261], "782": 224, "822": [224, 261], "842": [224, 237, 261], "862": [224, 237, 261], "882": [224, 259], "902": 224, "922": 224, "942": [224, 261], "982": [224, 261], "1001": 224, "1062": [224, 237], "1082": 224, "1184": 224, "1205": 224, "1266": 224, "1287": 224, "lanczo": 224, "1353": 224, "91709": 224, "26373e": 224, "98776221": 224, "41838256": 224, "06628583": 224, "methodolog": [224, 278], "uncov": [224, 278], "hal": [224, 278], "01848442": [224, 278], "archiv": [224, 278, 311, 315, 458, 946, 958, 960], "ouvert": [224, 278], "lionel": [224, 278], "naccach": [224, 278], "subtend": [224, 278, 310, 322, 659, 660], "e85791": [224, 278], "0085791": [224, 278], "50_decod": [224, 226, 966], "vibrat": 227, "door": [227, 229], "slam": [227, 229], "phone": 227, "geomagnet": 227, "unshield": 227, "headphon": 227, "malfunct": [227, 228, 318], "qr": [227, 298, 300, 325, 650, 666, 669], "sensori": 227, "plan": [227, 228, 231, 236, 310, 312, 509, 951, 956], "genesi": 227, "intact": [227, 244, 274], "ssp_projector": 227, "readili": [227, 231, 314, 509], "mag_channel": 227, "remove_dc": [227, 231, 289, 303, 309, 333, 334, 335, 336, 552, 553, 793, 799, 814, 815, 899], "get_xdata": [227, 231], "get_ydata": [227, 231], "searchsort": [227, 231], "dx": [227, 231], "dy": [227, 231], "head_width": [227, 231], "length_includes_head": [227, 231], "ecg_epoch": [227, 233, 655], "6007": [227, 232], "streak": 227, "avg_ecg_epoch": 227, "blocki": 227, "efficaci": 227, "pro": [227, 230, 311], "con": [227, 230], "10_preprocessing_overview": [227, 243, 966], "deepcopi": [228, 343], "usabl": [228, 282, 293, 294, 500, 648, 684], "wildcard": 228, "original_bad": 228, "bad_chan": 228, "paus": [228, 295, 335, 336, 844], "codebas": [228, 310, 311, 314, 316, 323], "good_eeg": 228, "all_eeg": 228, "setdiff1d": 228, "excess": [228, 230, 305, 307, 552, 553, 899], "protocol": [228, 318], "sheet": [228, 318], "offlin": 228, "raw2": [228, 246], "invest": [228, 312], "unrealist": [228, 318], "shrink": [228, 256, 257, 274, 672, 946], "dramat": 228, "robust": [228, 232, 233, 270, 278, 282, 287, 296, 333, 334, 485, 638, 664, 746, 751], "uninform": 228, "deweight": 228, "fair": [228, 236], "eeg_data": [228, 244], "eeg_data_interp": 228, "interp": [228, 284, 740, 741, 742, 754], "00000022": 228, "bad_color": [228, 552, 553, 899], "grad_data": 228, "grad_data_interp": 228, "00000009": 228, "propag": [228, 231, 327, 953], "921": [228, 237, 243, 261, 966], "15_handling_bad_channel": [228, 243, 966], "fake_keypress": [229, 246], "keyboard": [229, 247, 288, 291, 304, 319, 844], "push": [229, 230, 303, 311], "enter": [229, 235, 246, 247, 311, 952, 955], "bad_cough": 229, "wrapper": [229, 282, 297, 299, 337, 516, 520, 559, 779, 780], "blink_annot": 229, "eeg_pick": 229, "albeit": 229, "first_tim": [229, 291, 292, 551, 552, 553, 574, 677, 690], "block_1": 229, "block_2": 229, "block_annot": 229, "break_annot": [229, 641], "min_break_dur": [229, 641], "t_start_after_previ": [229, 641], "t_stop_before_next": [229, 641], "bad_break": [229, 641], "events_subset": 229, "flat_criteria": 229, "stringent": 229, "reject_tmin": [229, 292, 294, 328, 333, 334, 655], "reject_tmax": [229, 292, 294, 328, 333, 334, 655], "disappear": [229, 271, 307, 310], "subsum": 229, "stronger_reject_criteria": 229, "2000e": 229, "versatil": [229, 247], "new_data": 229, "edit_raw": 229, "max_condit": 229, "median_condit": 229, "20_rejecting_bad_data": [229, 243, 966], "park": [230, 278], "burru": [230, 278], "ifeachor": [230, 278], "jervi": [230, 278], "widmann": [230, 278], "somedai": 230, "conclud": [230, 260], "lightli": [230, 311], "cautious": 230, "hope": [230, 231, 233, 271], "math": [230, 946], "b_0": 230, "b_1": [230, 322], "b_2": 230, "ldot": 230, "b_m": [230, 322], "a_1": 230, "a_2": 230, "a_n": 230, "mb_kz": 230, "na_kz": 230, "b_k": [230, 322, 344], "denomin": [230, 261, 291, 366, 367, 743, 753, 777, 780, 809], "a_k": 230, "autoregress": 230, "broken": [230, 304, 311, 338], "finit": [230, 252, 261, 278, 295, 318, 322, 529], "impuls": [230, 946], "infinit": [230, 289, 295, 322], "qquad": 230, "foral": [230, 322], "steeper": [230, 231], "accumul": [230, 333, 334], "despit": [230, 260], "throughput": 230, "sharp": [230, 256, 294], "steep": 230, "broader": [230, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "fundament": 230, "fftfreq": 230, "minimum_phas": [230, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 520, 521, 523, 524, 552, 553], "f_p": [230, 322], "flim": [230, 231, 887, 894], "dlim": [230, 887], "f_": 230, "nyq": [230, 521, 524], "third_height": 230, "hypothet": [230, 638], "na\u00efv": 230, "brick": [230, 231], "wall": [230, 231, 278, 776, 777], "correspondingli": [230, 322, 333, 334, 795, 796], "tighter": [230, 286], "fortun": [230, 234, 322], "remez": 230, "firl": 230, "ifft": 230, "relax": [230, 266, 285], "shallow": 230, "gradual": 230, "shorten": [230, 247, 271, 292, 322, 870, 956], "benefici": [230, 345], "wherebi": 230, "came": [230, 958], "falloff": 230, "h_min": 230, "uncompens": 230, "imaginari": [230, 278, 291, 795, 796, 823, 824], "dur": 230, "morlet_freq": 230, "tlim": 230, "ttick": 230, "blip": 230, "n_onset": 230, "x_orig": 230, "transition_band": 230, "x_v16": 230, "twice": [230, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 520, 521, 523, 524, 552, 553, 899], "filter_dur": 230, "x_v14": 230, "x_v13": 230, "h_eff": 230, "design_mne_c_filt": 230, "x_mne_c": 230, "hpw": 230, "lpw": 230, "x_min": [230, 383], "cost": [230, 314, 322, 340, 341, 344, 347, 348, 349, 491, 497, 638, 776, 777, 779, 780, 844, 904, 909], "plot_sign": 230, "yscale": [230, 284, 789, 790, 791, 795, 796, 797, 798], "yticklabel": 230, "get_yticklabel": 230, "iirfilt": [230, 520], "iirdesign": [230, 520], "butterworth": [230, 298, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 520, 521, 523, 524, 552, 553, 650, 651], "worsen": 230, "filtfilt": [230, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 496, 520, 521, 523, 524, 552, 553, 899], "btype": [230, 520], "ftype": [230, 340, 341, 344, 347, 348, 349, 520], "butter": [230, 520], "x_shallow": 230, "sosfiltfilt": 230, "sosfilt": 230, "zpk2so": 230, "polynomi": [230, 295, 322, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 596], "iir_param": [230, 235, 288, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 520, 521, 523, 524, 552, 553, 650, 651], "filt": [230, 521], "x_steep": 230, "chebychev": [230, 520], "cheby1": [230, 520], "rp": [230, 520], "chebyshev": [230, 298, 520], "substanti": [230, 238, 312, 314, 322, 333, 334, 339, 445, 541], "errant": [230, 309, 310], "misappl": 230, "deleteri": 230, "schr\u00f6ger": [230, 278], "uncontrol": 230, "acunzo": [230, 278], "misinterpret": 230, "tanner": [230, 278], "semant": 230, "syntact": 230, "n400": 230, "p600": 230, "5\u00b5v": 230, "sic": 230, "poststimulu": 230, "octav": 230, "energi": [230, 302, 324, 946], "understood": [230, 844], "cos_t": 230, "sig": [230, 260, 265, 266], "iir_lp_30": 230, "iir_hp_p1": 230, "iir_lp_2": 230, "iir_hp_2": 230, "x_lp_30": 230, "padlen": [230, 520], "x_hp_p1": 230, "x_lp_2": 230, "x_hp_2": 230, "x_f": 230, "lp": 230, "_2": [230, 322], "hp": [230, 238, 325], "evolv": 230, "maess": [230, 278, 284], "rebut": 230, "old": [230, 244, 246, 269, 278, 285, 287, 289, 291, 292, 294, 297, 301, 310, 311, 315, 327, 330, 333, 334, 335, 336, 338, 344, 347, 382, 390, 410, 477, 552, 553, 565, 578, 603, 680, 702, 723, 724, 735, 789, 795, 844, 911, 915, 960], "baseline_plot": 230, "all_ax": 230, "ri": [230, 256, 278, 333, 334, 795, 825, 828], "iir_hp": 230, "x_hp": 230, "leak": [230, 252, 312, 322], "n_pre": 230, "sig_pr": 230, "adopt": [230, 310, 311], "reciproc": [230, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 412, 487, 496, 506, 521, 523, 524, 552, 553, 649, 665, 676], "decent": 230, "blackman": [230, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 496, 521, 523, 524, 552, 553], "fir_window": [230, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 524, 552, 553], "fir_desgin": 230, "meet": [230, 312], "8197": 230, "outdat": 230, "transition_bandwidth": 230, "fir_coef": 230, "0545": 230, "0017": 230, "wider": [230, 231], "thoma": [230, 256, 257, 278, 287, 289, 291, 292, 293, 303, 307, 308, 310, 616, 746, 751, 773, 776, 777, 778, 779, 780], "sidnei": [230, 278], "wilei": [230, 278], "82896": [230, 278], "andrea": [230, 278, 283, 284, 366], "erich": [230, 278], "burkhard": [230, 278, 284], "00233": [230, 278], "graham": [230, 278], "mackenzi": [230, 278], "rossum": [230, 278], "darren": [230, 278], "kara": [230, 278], "morgan": [230, 278], "inappropri": [230, 278, 340, 341, 344, 347, 348, 349], "conclus": [230, 258, 278], "12437": [230, 278], "1469": [230, 278], "8986": [230, 278], "01009": [230, 278], "commentari": [230, 278], "artefact": [230, 240, 278], "norton": [230, 278], "ermf": [230, 278], "25_background_filt": [230, 243, 966], "mathrm": [231, 238, 256, 812, 822, 824, 827], "raw_highpass": 231, "19821": 231, "9911": [231, 295], "filter_param": 231, "add_arrow": 231, "ymax": [231, 261, 266, 274], "shield": [231, 240, 278, 321, 322, 333, 334, 335, 336, 338, 552, 553, 635, 676, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "meg_pick": 231, "raw_notch": 231, "3965": 231, "raw_notch_fit": 231, "spectrum_fit": [231, 292, 524, 552, 553], "notabl": [231, 270, 304, 311], "consum": [231, 295, 343, 648, 782], "raw_downsampl": 231, "drawback": [231, 256], "resample_poli": [231, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 525, 552, 553], "upfirdn": [231, 310, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 525, 552, 553], "raw_downsampled_poli": 231, "pitfal": 231, "safe": [231, 244, 278, 333, 334, 390, 449, 450, 451, 454, 455, 456, 458, 463, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 552, 958, 960], "614990234375": [231, 244], "current_sfreq": 231, "desired_sfreq": 231, "obtained_sfreq": 231, "lowpass_freq": 231, "19813025304873463": 231, "80214146205357": 231, "synch": 231, "30_filtering_resampl": [231, 243, 966], "gratton": [232, 278, 637, 691], "croft": [232, 278, 637], "articl": [232, 316], "6607": 232, "bleed": [232, 351, 671], "250m": 232, "model_plain": 232, "epochs_clean_plain": 232, "redo": 232, "partli": 232, "variat": [232, 253, 303, 318, 485], "prone": 232, "allevi": [232, 322], "epochs_sub": 232, "model_sub": 232, "epochs_clean_sub": 232, "piec": [232, 246, 322, 333, 334, 552, 553], "ongo": [232, 314, 318, 641], "alik": 232, "model_evok": 232, "epochs_clean_evok": 232, "eog_evoked_clean": 232, "raw_kwarg": 232, "cole": [232, 278, 637, 691], "emanuel": [232, 278, 300, 637, 691, 742], "donchin": [232, 278, 637, 691], "90135": [232, 278, 637, 691], "s0987": [232, 278, 637], "7053": [232, 278, 637], "00055": [232, 278, 637], "896": [232, 237, 243, 261, 966], "35_artifact_correction_regress": [232, 243, 966], "guidanc": [233, 235, 312], "blind": [233, 278, 638, 674], "microphon": 233, "unmix": [233, 293, 301, 638, 639, 674, 890, 893], "analogi": 233, "unwant": [233, 235, 239, 303, 388], "ic": [233, 280, 283, 343, 638, 653, 889, 891, 893], "n_pca_compon": [233, 293, 638, 890], "pc": 233, "smallest": [233, 261, 322, 412, 485, 638, 946], "runica": [233, 638], "mixing_matrix_": [233, 638], "unmixing_matrix_": [233, 638], "tesla": [233, 235, 251, 322], "artifact_pick": [233, 235], "harder": [233, 311], "filt_raw": 233, "huge": [233, 775], "parallelfun": 233, "logcoshfun_arg": 233, "nonemax_it": 233, "9010": 233, "get_explained_variance_ratio": [233, 305, 638], "explained_var_ratio": 233, "9358001342790973": 233, "7798689203334388": 233, "ratio_perc": 233, "trackpad": [233, 335, 336, 544, 846, 862, 881], "15459": 233, "ica000": [233, 285], "ica001": [233, 343, 638, 889, 891, 893], "anywai": [233, 245, 303, 311, 958], "reconst_raw": 233, "tediou": 233, "reset": [233, 291, 302, 330, 333, 334, 335, 336, 342, 436, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 844, 877, 878, 882, 885, 889, 898, 901, 906, 908, 965], "eog_indic": 233, "prefront": 233, "ctp": [233, 292, 638], "ecg_indic": 233, "caught": 233, "ica014": 233, "refit": [233, 291], "new_ica": 233, "neck": [233, 378], "trail": [233, 308, 638, 676, 840], "s001r03": 233, "s002r03": 233, "19679": 233, "s003": 233, "s003r03": 233, "lib": [233, 951, 958], "python3": [233, 301], "_fastica": 233, "convergencewarn": 233, "s004": 233, "s004r03": 233, "6250": 233, "6249": 233, "6150": 233, "6149": 233, "ica002": 233, "labels_": [233, 638, 653, 892], "get_compon": [233, 284, 638], "subject_index": 233, "component_index": 233, "template_eog_compon": 233, "33638605": 233, "32708878": 233, "32846765": 233, "32807248": 233, "35916344": 233, "37615216": 233, "42464993": 233, "21789139": 233, "22387812": 233, "22237922": 233, "21342143": 233, "2425263": 233, "26757238": 233, "27806995": 233, "15470616": 233, "1693302": 233, "17711037": 233, "17373137": 233, "19651749": 233, "21091786": 233, "22459439": 233, "68783519": 233, "46717407": 233, "64182737": 233, "34165002": 233, "28991817": 233, "76938995": 233, "0057612": 233, "54311043": 233, "54567127": 233, "63806031": 233, "57058636": 233, "52637437": 233, "51788659": 233, "55774431": 233, "56188149": 233, "69340923": 233, "73333856": 233, "2829121": 233, "39253171": 233, "16120286": 233, "25431324": 233, "06352167": 233, "1647002": 233, "11930156": 233, "1811579": 233, "10112171": 233, "12638332": 233, "13623739": 233, "1301851": 233, "14380943": 233, "15329772": 233, "1715539": 233, "16560352": 233, "13293812": 233, "08175318": 233, "10173655": 233, "10764581": 233, "12707317": 233, "09785876": 233, "07433338": 233, "08470678": 233, "07373196": 233, "03379354": 233, "recomput": [233, 236, 261, 301, 302, 526, 638, 674, 728], "ecg_ind": 233, "francoi": [233, 278, 638], "cardoso": [233, 278, 638], "precondit": [233, 238, 278, 304, 638, 677], "hessian": [233, 278, 638], "4040": [233, 278, 638], "4049": [233, 278, 638], "2844203": [233, 278, 638], "iren": [233, 278], "winkler": [233, 278], "deben": [233, 278, 653], "4101": [233, 278], "4105": [233, 278], "milan": [233, 278, 289], "7319296": [233, 278], "dammer": [233, 278, 286, 301, 638], "schiek": [233, 278, 638], "boer": [233, 278, 638], "carmen": [233, 278, 461, 638], "silex": [233, 278, 638], "mikhail": [233, 278, 638], "zvyagintsev": [233, 278, 638], "uw": [233, 241, 278, 638], "pietrzyk": [233, 278, 638], "mathiak": [233, 278, 638], "926677": [233, 278, 638], "filipa": [233, 278, 653], "campo": [233, 278, 653], "viola": [233, 278, 280, 653], "jeremi": [233, 278, 653], "thorn": [233, 278, 653], "edmond": [233, 278, 653], "till": [233, 278, 653], "schneider": [233, 278, 653], "tom": [233, 278, 282, 287, 306, 307, 653], "eichel": [233, 278, 653], "semi": [233, 278, 280, 653], "868": [233, 261, 278, 653], "877": [233, 278, 653], "clinph": [233, 278, 333, 334, 638, 646, 653, 795, 825, 828], "40_artifact_correction_ica": [233, 243, 966], "mpl_toolkit": [234, 256, 261, 274, 870], "mplot3d": [234, 256], "axes3d": [234, 256, 294, 331, 333, 334, 335, 336, 338, 382, 552, 553, 874, 896, 902], "setup_3d_ax": 234, "set_zlabel": 234, "set_ylim": [234, 271], "set_zlim": 234, "geometr": [234, 318, 322, 340, 341, 344, 347, 348, 349, 519, 911], "shadow": [234, 729], "cast": [234, 292, 326, 526, 849], "sun": 234, "xy_projection_matrix": 234, "projected_point": 234, "projected_vector": 234, "arrow_coord": 234, "arrow_length_ratio": 234, "symbol": [234, 304, 322, 325, 788, 947], "expans": [234, 238, 322, 333, 334, 335, 336, 506, 552, 553, 596, 648, 649, 665, 676], "unpack": [234, 261, 859, 958], "lucki": 234, "bother": [234, 244], "trigger_effect": 234, "internet": [234, 312], "algebra": [234, 290, 291, 946], "full_matric": 234, "trigger_projection_matrix": 234, "plot_trisurf": 234, "interchang": [234, 321, 366], "ten": [234, 271, 319, 543], "hyperplan": [234, 488, 495], "synonym": 234, "incident": [234, 335, 336, 544, 846, 862, 881], "phrase": 234, "publish": [234, 275, 278, 320, 335, 336, 638, 844, 846, 885, 917, 918, 919, 920, 921, 922, 923, 925, 927], "first_projector": 234, "explained_var": [234, 281, 342], "inact": [234, 238, 312, 333, 334, 335, 336, 552, 553], "ortho": [234, 638], "forgo": 234, "offecg": 234, "remove_exist": [234, 235, 333, 334, 335, 336, 552, 553, 844], "perman": [234, 303, 318, 951], "mags_ecg": 234, "_projector": 234, "cheaper": 234, "consequenti": 234, "mikko": [234, 235, 278, 322], "uusitalo": [234, 235, 278, 322], "bf02534144": [234, 235, 278, 322], "45_projectors_background": [234, 243, 966], "equip": [235, 322], "system_proj": 235, "empty_room_fil": 235, "empty_room_raw": 235, "_ex": 235, "xscale": [235, 291, 333, 334, 335, 336, 552, 553, 793, 794, 799, 800, 900], "n_grad": [235, 309, 325, 426, 427, 428, 650, 651], "empty_room_proj": 235, "distant": [235, 946], "_proj": [235, 302], "no_proj": [235, 650, 651], "picks_trac": [235, 897], "ecg_l_freq": [235, 325, 650], "ecg_h_freq": [235, 325, 650], "filter_method": [235, 650, 651], "presum": 235, "clutter": 235, "eog_proj": 235, "okai": 235, "eog_projs_bad": 235, "perfectli": [235, 271, 322, 819], "get_titl": [235, 239], "get_ylabel": 235, "yaxi": [235, 274], "set_tick_param": 235, "labelbottom": 235, "50_artifact_correction_ssp": [235, 243, 966], "earlob": 236, "collarbon": 236, "disadvantag": [236, 256], "ref_channel": [236, 333, 334, 335, 336, 350, 552, 553, 733, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "raw_new_ref": 236, "raw_avg_ref": 236, "wasn": [236, 305], "infin": [236, 278, 292, 333, 334, 335, 336, 552, 553, 733], "raw_rest": 236, "_raw": [236, 239], "655": 236, "00413508": 236, "01598787": 236, "05175598": 236, "eeg_bipolar": [236, 730], "transvers": [236, 331], "raw_bip_ref": 236, "36038": [236, 244], "61837": 236, "valueerror": [236, 344, 347, 519, 707, 730, 739, 870], "yao": [236, 278, 333, 334, 335, 336, 552, 553, 733, 749], "693": [236, 261, 278, 333, 334, 335, 336, 552, 553, 733], "0967": [236, 278, 333, 334, 335, 336, 552, 553, 733], "3334": [236, 278, 333, 334, 335, 336, 552, 553, 733], "dezhong": [236, 278], "yun": [236, 278], "qin": [236, 278], "shiang": [236, 278], "hu": [236, 278], "dong": [236, 278, 301], "maria": [236, 278], "bringa": [236, 278], "vega": [236, 278], "pedro": [236, 278], "vald": [236, 278], "\u00e9": [236, 278], "sosa": [236, 278], "00707": [236, 278], "55_setting_eeg_refer": [236, 243, 966], "mccloi": [237, 274, 280, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 312, 964], "dan": [237, 274, 280, 298, 301, 302], "test_move_anon_raw": [237, 238], "v6": [237, 238], "v7": [237, 238, 287, 305], "10800": [237, 238, 304], "31199": [237, 238], "20399": 237, "chpi_freq": 237, "chpi_cod": 237, "chpi_amplitud": [237, 412, 413], "786": 237, "866": 237, "904": [237, 346], "636": [237, 261], "684": [237, 257], "741": 237, "1074": 237, "1090": [237, 278, 333, 334, 795, 825, 828], "764": [237, 261], "1125": 237, "1144": 237, "1158": 237, "803": 237, "1175": 237, "1193": [237, 278], "831": [237, 261], "1227": 237, "1260": 237, "854": 237, "1276": 237, "858": 237, "1292": 237, "1309": 237, "883": 237, "1348": [237, 256], "1363": [237, 240, 243, 966], "1378": 237, "1394": 237, "899": [237, 261, 271], "911": 237, "925": [237, 266, 268, 966], "1451": 237, "931": [237, 261], "1462": 237, "1478": 237, "1491": 237, "915": 237, "917": 237, "1537": 237, "1550": 237, "908": [237, 261], "1581": 237, "1600": [237, 256], "1620": 237, "1657": 237, "1673": 237, "952": 237, "4385": 237, "757": 237, "785": 237, "805": 237, "819": 237, "823": [237, 261], "848": [237, 259, 261], "1004": 237, "1040": 237, "1072": 237, "1173": 237, "1286": 237, "1301": 237, "1315": 237, "1319": 237, "1325": 237, "1379": 237, "1417": 237, "1480": 237, "1526": 237, "1565": [237, 278], "1573": 237, "1580": [237, 333, 334], "1586": 237, "1590": 237, "1594": 237, "1599": 237, "1609": 237, "1644": 237, "snr_dict": [237, 869], "59_head_posit": [237, 243, 966], "obliqu": 238, "crosstalk": 238, "fine_cal_fil": 238, "sss_cal_mgh": 238, "crosstalk_fil": 238, "ct_sparse_mgh": 238, "raw_check": 238, "auto_noisy_ch": 238, "auto_flat_ch": 238, "auto_scor": 238, "cross_talk": [238, 648, 665, 676], "return_scor": [238, 664, 665], "ei": [238, 338], "ch_subset": 238, "scores_noisi": [238, 665], "limits_noisi": [238, 665], "bin_label": 238, "data_to_plot": 238, "cbar_kw": 238, "nanmin": 238, "nanmax": [238, 259], "appar": [238, 318], "fashion": [238, 295, 443], "min_count": [238, 665], "qualifi": 238, "int_ord": [238, 307, 506, 649, 665, 676], "ext_ord": [238, 412, 414, 418, 506, 648, 649, 665, 676], "thick": [238, 322], "mathtt": [238, 812, 822, 823, 824, 826, 827], "st": [238, 325], "_durat": 238, "penultim": 238, "st_correl": [238, 665, 676, 684], "st_onli": [238, 282, 665, 676], "doublecheck": 238, "chpi_fif_fil": 238, "head_pos_fil": 238, "headpo": [238, 325, 422], "patent": [238, 676, 684], "legal": [238, 312, 870], "commerci": [238, 676], "124905": [238, 278, 506, 649, 676], "1063": [238, 278, 649, 676], "1935742": [238, 278, 649, 676], "1759": [238, 278, 676], "60_maxwell_filtering_sss": [238, 243, 966], "deoxyhaemoglobin": [239, 295], "itertool": 239, "compress": [239, 286, 328, 332, 333, 334, 335, 336, 458, 552, 553, 655, 656, 789, 790, 791, 795, 796, 797, 798, 958], "novemb": [239, 278, 369, 746, 751], "cw": [239, 321, 322, 443], "set_dur": [239, 295, 327, 965], "mid": [239, 256], "photodetect": 239, "beer": 239, "lambert": 239, "law": [239, 295, 312], "raw_haemo": 239, "haemodynam": 239, "predominantli": 239, "raw_haemo_unfilt": 239, "1291": 239, "s4_d4": 239, "s8_d8": 239, "s3_d3": 239, "s7_d6": 239, "s7_d7": 239, "s6_d8": 239, "oxi": [239, 295], "morphologi": 239, "evoked_dict": 239, "color_dict": 239, "aa3377": 239, "styles_dict": 239, "chroma": 239, "drive": [239, 434, 551, 552, 553, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 597], "tidi": 239, "leg_lin": 239, "get_c": 239, "70_fnirs_process": [239, 243, 966], "technologi": [240, 278, 324, 964], "placement": [240, 288, 291, 321, 335, 336, 883], "opm_fil": 240, "002_se": 240, "aef_run": 240, "001_meg": 240, "540000": 240, "6000": [240, 674], "pt": [240, 309, 557, 588], "amp_scal": 240, "1e12": [240, 442], "data_d": 240, "time_d": 240, "set_kwarg": 240, "ambient": 240, "knowldg": 240, "evironment": [240, 652], "g2": 240, "psd_kwarg": 240, "psd_pre": 240, "psd_post_reg": 240, "9901": [240, 295], "relatiship": 240, "hfc": [240, 307, 652], "homgen": 240, "psd_post_hfc": 240, "broadband": 240, "remnant": 240, "motiv": [240, 271], "minimis": 240, "interfec": 240, "39601": 240, "ni": 240, "trig": 240, "auditory_opm_stationari": 240, "535": [240, 261], "3563": 240, "9795": [240, 295], "3597": 240, "1767": 240, "106978": 240, "7888": 240, "028156": 240, "9787e": 240, "39473": 240, "52253e": 240, "25382465": 240, "85477031": 240, "75261481": 240, "seymour": [240, 278, 294, 307, 319, 652], "stephani": [240, 278, 319, 652], "mellor": [240, 278, 319, 652], "neill": [240, 278, 307, 308, 319, 652], "tim": [240, 278, 319, 652], "tiernei": [240, 278, 319, 652], "eleanor": [240, 278, 319, 652], "maguir": [240, 278, 319, 652], "opportun": [240, 278, 319], "118834": [240, 278, 319], "februari": [240, 278, 319], "80_opm_process": [240, 243, 966], "huberti": [241, 303, 304, 307, 308, 309, 310], "seh33": 241, "dominik": [241, 271, 286, 291, 294, 304, 305, 307, 309, 310], "welk": [241, 271, 291, 294, 304, 307, 309, 310], "mff": [241, 284, 285, 286, 287, 288, 293, 295, 304, 309, 310, 322, 335, 336, 403, 516, 517, 570, 707], "plr_eyetrack": 241, "eeg_fpath": 241, "plr_eeg": 241, "raw_et": 241, "raw_eeg": 241, "june": 241, "signal1": [241, 253], "monocular": 241, "xpos_right": 241, "pupil_right": 241, "first_cal": 241, "hv5": 241, "photodiod": [241, 319], "signifi": [241, 405, 638], "et_ev": 241, "shortest_ev": [241, 526], "uint_cast": [241, 326, 526], "eeg_ev": 241, "din3": 241, "din": [241, 309], "et_flash_tim": 241, "eeg_flash_tim": 241, "force_update_info": [241, 333, 334, 335, 336, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "e19": 241, "e11": 241, "e4": 241, "e12": 241, "e5": 241, "e61": 241, "e62": 241, "e78": 241, "e67": 241, "e72": 241, "e77": 241, "picks_idx": 241, "constrict": 241, "crosshair": 241, "kept": [241, 269, 282, 288, 308, 311, 328, 333, 334, 339, 394, 443, 509, 547, 549, 550, 572, 597, 605, 606, 607, 608, 609, 611, 612, 622, 638, 639, 649, 699, 890], "767": [241, 243, 261, 278, 318, 966], "90_eyetracking_data": [241, 243, 966], "166800": 244, "read_raw_": [244, 287, 310, 322, 551], "famili": [244, 778, 952], "seriou": [244, 312], "parenthes": [244, 322], "estimate_rank": [244, 282, 288], "n_time_samp": 244, "time_sec": 244, "000167471573526": 244, "megacq": 244, "acqch001": 244, "110113": 244, "acqch002": 244, "110112": 244, "acqch003": 244, "110111": 244, "acqch004": 244, "110122": 244, "frequent": [244, 291, 292, 311, 320, 572, 947, 951], "12012": 244, "18018": 244, "24024": 244, "underlyingli": [244, 320], "n_timepoint": [244, 774], "pose": [244, 311], "undo": [244, 292, 706], "eeg_and_eog": 244, "raw_temp": 244, "channel_nam": [244, 284, 570, 707], "eog_and_frontal_eeg": 244, "frivol": 244, "eeg_059": 244, "eeg_060": 244, "blink_detector": 244, "makeshift": 244, "eeg_001": 244, "raw_select": 244, "1503": 244, "unspecifi": [244, 251, 870], "500770084699155": 244, "5001290587975622": 244, "raw_selection1": 244, "raw_selection2": 244, "raw_selection3": 244, "5041000049184614": 244, "sampling_freq": [244, 251], "start_stop_second": 244, "channel_index": [244, 859], "85742192e": 244, "64355481e": 244, "89306644e": 244, "99872648": 244, "00039144": 244, "0020564": 244, "9933487": 244, "99501366": 244, "99667862": 244, "data_arrai": 244, "times_arrai": 244, "meg_0712": 244, "meg_1022": 244, "two_meg_chan": 244, "y_offset": 244, "safest": [244, 318], "eeg_channel_indic": 244, "planar1": [244, 330, 333, 334, 335, 336, 485, 492, 552, 553, 635, 636, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 885, 889, 901, 906, 908], "planar2": [244, 330, 333, 334, 335, 336, 485, 492, 552, 553, 635, 636, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 885, 889, 901, 906, 908], "return_tim": [244, 274, 552, 553, 789, 790, 791, 795, 796, 797, 798], "first_channel_data": [244, 322], "eeg_and_eog_data": 244, "two_meg_chans_data": 244, "my_data": 244, "npy": [244, 245], "afford": 244, "scaling_tim": 244, "start_end_sec": 244, "to_hdf": 244, "eeg_002": 244, "999750": 244, "847885e": 244, "243790e": 244, "952283e": 244, "001415": 244, "612900e": 244, "200958e": 244, "069226e": 244, "003080": 244, "589401e": 244, "176483e": 244, "080921e": 244, "004745": 244, "724518e": 244, "182602e": 244, "010755e": 244, "006410": 244, "286621e": 244, "10_raw_overview": [244, 249, 966], "lst": [245, 703, 936], "array_equ": 245, "_eve": 245, "my_experi": 245, "told": 245, "events_no_button": 245, "merged_ev": 245, "send": [245, 841], "cumbersom": 245, "20_event_arrai": [245, 249, 966], "datetim": [246, 291, 303, 310, 327, 333, 334, 335, 336, 338, 352, 552, 553], "compris": [246, 251, 322, 333, 334, 777, 793, 794, 799, 800], "posix": [246, 327], "my_annot": 246, "aaa": 246, "bbb": 246, "ccc": 246, "microsecond": [246, 327, 333, 334, 335, 336, 338, 552, 553], "time_of_first_sampl": 246, "95597083": 246, "iso": 246, "8601": 246, "new_orig_tim": 246, "strftime": 246, "later_annot": 246, "ddd": 246, "eee": 246, "fff": 246, "720100": 246, "rectangl": [246, 274, 310, 863], "darker": 246, "spinbox": 246, "safeguard": [246, 281, 338], "interactive_annot": 246, "ordereddict": 246, "95597082905339": [246, 327], "tzinfo": 246, "timezon": [246, 333, 334, 335, 336, 338, 552, 553], "descr": 246, "70597082905339": 246, "45597082905339": 246, "20597082905339": 246, "WILL": 246, "NOT": 246, "annot_from_fil": 246, "972": [246, 249, 966], "30_annotate_raw": [246, 249, 966], "lengthen": 247, "unmark": 247, "newli": [247, 314, 867], "hover": 247, "thumbnail": 247, "plot_psd_topo": [247, 269, 333, 334, 335, 336, 552, 553, 965], "40_visualize_raw": [247, 249, 966], "synthet": [251, 282, 309, 322, 570, 655, 666], "hertz": [251, 253, 338, 792, 801, 802, 803, 804, 805, 806], "eog001": 251, "meg001": 251, "meg002": 251, "meg003": 251, "meg004": 251, "meg005": 251, "meg006": 251, "meg007": 251, "meg008": 251, "seven": [251, 281, 322], "molar": [251, 322], "amper": [251, 322], "simulated_raw": 251, "show_scalebar": [251, 295, 333, 334, 552, 553, 876, 899], "995": 251, "simulated_epoch": 251, "column_stack": 251, "condition_a": 251, "condition_b": 251, "evoked_arrai": 251, "n_per_seg": [251, 271, 284, 333, 334, 335, 336, 552, 553, 793, 799, 815], "psd_ave": 251, "10_array_obj": [251, 255, 966], "dt": [252, 506, 808], "17545": 252, "hemi_to_ind": 252, "elig": [252, 312], "surf_vertic": 252, "restrict_vert": 252, "intersect1d": 252, "restrict_vertic": [252, 339, 344], "cent_idx": 252, "elsewher": 252, "distances_to_outsid": [252, 295, 339], "compute_area": [252, 295, 339], "stc_gen": 252, "value_fun": [252, 756], "brain_gen": 252, "evoked_gen": 252, "stc_inv": 252, "brain_inv": 252, "45968308": 252, "57021267": 252, "69354621": 252, "evoked_snr": 252, "70_point_spread": [252, 255, 966], "unit_impuls": 253, "coh_signal_gen": 253, "t_rand": 253, "base_freq": 253, "cumsum": 253, "signal2": 253, "am": [253, 284, 331, 334, 336, 445, 553], "nperseg": 253, "coh": [253, 792, 872], "noverlap": 253, "146374": 253, "33830": 253, "stc_signal": 253, "stc_nois": 253, "pretend": [253, 256], "s_rm": 253, "59828": 253, "89697e": 253, "40489756": 253, "65479053": 253, "61269642": 253, "dampen": [253, 729], "consensu": [253, 312], "csd_signal": 253, "filters_approach1": 253, "filters_approach2": 253, "filters_1": 253, "power_approach1": 253, "power_approach2": 253, "plot_approach": 253, "brain1": 253, "42918831e": 253, "04345299e": 253, "40589757e": 253, "brain2": 253, "mia": [253, 278, 366, 367], "liljestr\u00f6m": [253, 278, 366, 367], "susanna": [253, 278, 286, 366, 367], "aro": [253, 278, 286, 366, 367], "245530": [253, 278, 366, 367], "kensuk": [253, 278, 366, 367], "sekihara": [253, 278, 366, 367], "79369": [253, 278, 366, 367], "79370": [253, 278, 366, 367], "80_dic": [253, 255, 966], "678": [255, 966], "phenomena": 256, "n_subject": [256, 264, 266, 772], "signal_mean": 256, "signal_sd": 256, "noise_sd": 256, "gaussian_sd": 256, "n_src": [256, 341, 346], "h_0": 256, "colon": [256, 325, 458], "h_1": 256, "neq": [256, 322], "geq": 256, "cdot": [256, 322, 749, 823, 826], "mcc": 256, "plot_t_p": 256, "p_lim": 256, "t_lim": 256, "mgrid": 256, "plot_surfac": [256, 291, 292], "rstride": 256, "cstride": 256, "ztick": 256, "mappabl": 256, "set_tick": 256, "set_ticklabel": 256, "get_xaxi": 256, "set_label_coord": 256, "set_weight": 256, "use_p": 256, "log_": 256, "t_": [256, 322], "exchang": [256, 282], "verid": 256, "n_": [256, 322], "samp": 256, "gymnast": 256, "declar": [256, 312], "p_type_i": 256, "combat": 256, "familywis": 256, "fwer": 256, "benjamini": [256, 773], "hochberg": [256, 773], "strict": [256, 335, 336, 528, 956], "indistinguish": 256, "mathbf": [256, 649], "perm_": 256, "aforement": 256, "rethink": 256, "thought": [256, 321, 770], "refram": 256, "touch": [256, 391], "feature_extract": 256, "grid_to_graph": 256, "e402": 256, "mini_adjac": 256, "toarrai": 256, "builtin_ch_adj": 256, "adj_nam": 256, "adj_descript": 256, "bti148": 256, "bti248": 256, "bti248grad": 256, "ctf64": 256, "easycap128ch": 256, "easycap32ch": 256, "easycap64ch": 256, "easycapm1": [256, 304], "easycapm11": 256, "m11": 256, "easycapm14": 256, "m14": 256, "easycapm15": 256, "m15": 256, "ecog256": 256, "256channel": 256, "ecog256bipolar": 256, "eeg1010_neighb": 256, "elec1005": 256, "elec1010": 256, "elec1020": 256, "itab153": 256, "itab": 256, "itab28": 256, "language29ch": 256, "mpi": 256, "mpi_59_channel": 256, "neuromag122cmb": 256, "neuromag122": [256, 294], "neuromag306cmb": 256, "neuromag306": 256, "neuromag306mag": [256, 261], "neuromag306planar": [256, 258], "yokogawa160": 256, "yokogawa440": 256, "n_space": 256, "t_thresh": [256, 258], "t_clust": 256, "viewabl": 256, "p_clust": 256, "cl": 256, "195526713940576": 256, "1204338596605075": 256, "1392": 256, "1384": 256, "1373": 256, "1405": 256, "1401": 256, "1540": 256, "stat_fun_hat": 256, "t_hat": 256, "p_hat": 256, "04360308801187525": 256, "127369419320333": 256, "2545": 256, "2785": 256, "2902": 256, "2920": 256, "2925": 256, "riemann": 256, "threshold_tfc": 256, "t_tfce": 256, "p_tfce": 256, "h_power": [256, 257], "e_pow": [256, 257], "t_tfce_hat": 256, "p_tfce_hat": 256, "jag": 256, "peaki": 256, "broad": [256, 271], "tighten": 256, "broaden": 256, "exhaust": [256, 366], "unbalanc": 256, "anova_lm": 256, "wrap": [256, 292, 333, 334, 335, 336, 337, 340, 341, 344, 347, 348, 349, 525, 552, 553, 611, 789], "q": [256, 322, 325, 749, 776, 777, 779, 780], "unpair": 256, "gerard": [256, 278, 782, 783], "ridgwai": [256, 278, 782, 783], "flandin": [256, 278, 782, 783], "karl": [256, 278, 324, 782, 783, 964], "friston": [256, 278, 782, 783], "Will": [256, 278, 310, 325, 333, 334, 337, 344, 347, 381, 521, 551, 638, 782, 783, 788, 808, 815, 840, 932], "penni": [256, 278, 782, 783], "haircut": [256, 278, 782, 783], "nichol": [256, 257, 278, 773, 776, 777, 778, 779, 780], "10_background_stat": [256, 263, 966], "confirmatori": 257, "tfce": [257, 292, 299, 303, 776, 777, 779, 780], "ttest_ind": [257, 783], "unsaf": [257, 795, 796], "median_valu": 257, "long_word": 257, "short_word": 257, "time_window": [257, 789, 790, 791, 795, 796, 797, 798], "ntarget": 257, "short_df": 257, "format_dict": 257, "096": 257, "453939": 257, "232879": 257, "222424": 257, "518939": 257, "214091": 257, "371515": 257, "064": [257, 278, 417, 620, 749], "811667": 257, "793636": 257, "250152": 257, "039697": 257, "188636": 257, "318030": 257, "163030": 257, "018939": 257, "425152": 257, "absent": [257, 285, 293, 436], "amongst": [257, 271], "temor": 257, "cluster_pv": [257, 776, 777, 779, 780], "significant_point": 257, "delaunai": [257, 258, 285, 388], "176438127884552e": 257, "91729757691468": 257, "1856": 257, "20_erp_stat": [257, 263, 966], "whom": [258, 261, 311], "picks_eog": 258, "picks_grad": 258, "picks_rtemp": 258, "downstream": [258, 259, 794, 800], "nonparametr": [258, 259, 261, 278, 776, 777, 778, 779, 780], "spectrotempor": [258, 259, 333, 334, 335, 336, 552, 553, 789, 790, 791, 795, 796, 797, 798, 823, 824, 826, 827], "tfr_epoch": 258, "logratio": [258, 270, 356, 621, 622, 789, 790, 791, 795, 796, 797, 798, 906], "epochs_pow": [258, 260, 261], "lattic": [258, 261, 769, 776, 777, 779, 780], "sensor_adjac": 258, "use_idx": 258, "n_ch": 258, "unrol": 258, "degrees_of_freedom": 258, "455144461077353": 258, "26512548299184": 258, "caveat": [258, 261, 278, 322, 638], "anywher": [258, 288, 664], "t_obs_plot": 258, "f_idx": 258, "t_idx": [258, 552, 553], "nanargmax": 258, "40_cluster_1samp_time_freq": [258, 263, 966], "epochs_condition_1": 259, "epochs_condition_2": 259, "comptuat": 259, "tfr_kwarg": 259, "tfr_epochs_1": 259, "tfr_epochs_2": 259, "epochs_power_1": 259, "epochs_power_2": 259, "f_ob": [259, 260, 261, 265, 266, 777, 780], "8675309": 259, "6034281884752926e": 259, "566823828075004": 259, "evoked_power_1": 259, "evoked_power_2": 259, "evoked_power_contrast": 259, "f_obs_plot": [259, 260, 261], "max_f": 259, "evoked_condition_1": 259, "evoked_condition_2": 259, "evoked_contrast": 259, "50_cluster_between_time_freq": [259, 263, 966], "interplai": 260, "perceptu": 260, "56aud_r": 260, "60vis_l": 260, "64vis_r": 260, "forgiv": 260, "this_tfr": [260, 261], "this_pow": 260, "n_condit": [260, 261, 266, 777, 780], "n_replic": 260, "factor_level": [260, 266, 770, 772], "formula": [260, 266, 289, 291, 314, 322, 366, 367, 425, 745, 749, 809, 810], "a1b1": [260, 770], "a1b2": [260, 770], "a2b1": [260, 770], "b2b2": 260, "fval": 260, "effect_label": 260, "autumn": [260, 261], "overrid": [260, 312, 343, 442, 444, 552, 553, 570, 725, 726, 727, 728, 842, 870, 956, 958], "necessit": [260, 266, 306], "return_pv": [260, 266, 770], "pthresh": [260, 266], "f_thresh": [260, 261, 266], "658469887768358e": 260, "419588379647639": 260, "good_clust": [260, 264], "f_imag": [260, 261], "f_obs_plot2": 260, "70_cluster_rmanova_time_freq": [260, 263, 966], "differenti": [261, 278, 314, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 509, 552, 553, 795, 825, 828], "axes_grid1": [261, 274, 870], "make_axes_locat": [261, 274], "_csr": 261, "csr_matrix": [261, 345, 346, 388, 399, 713], "bind": [261, 266, 310], "stackexchang": 261, "73993": 261, "alpha_cluster_form": 261, "n_observ": [261, 774, 776, 777, 779, 780, 870], "dfn": [261, 777, 780], "dfd": [261, 777, 780], "cluster_stat": [261, 314], "0033787374718191373": 261, "77535362731717": 261, "607": 261, "612": 261, "618": [261, 278, 771], "623": 261, "641": 261, "657": 261, "663": 261, "681": 261, "716": 261, "721": 261, "732": 261, "738": 261, "772": 261, "777": 261, "806": 261, "839": [261, 322], "845": 261, "874": 261, "907": 261, "936": 261, "953": 261, "971": 261, "976": 261, "981": 261, "p_accept": 261, "good_cluster_ind": [261, 265, 266], "crimson": [261, 844], "steelblu": [261, 552, 553, 899], "i_clu": 261, "clu_idx": 261, "time_ind": 261, "space_ind": 261, "ch_ind": 261, "f_map": 261, "sig_tim": 261, "ax_topo": 261, "f_evok": 261, "ax_colorbar": 261, "append_ax": [261, 274], "ax_sign": 261, "ymin": [261, 266], "get_ylim": 261, "fill_betweenx": [261, 266], "tfr_adjac": 261, "tfr_threshold": 261, "752417805734057e": 261, "408365559505015": 261, "596": 261, "597": [261, 264, 268, 278, 493, 966], "604": 261, "624": 261, "626": [261, 278, 638], "632": 261, "634": [261, 278, 638], "651": 261, "671": 261, "674": 261, "677": 261, "697": 261, "698": 261, "708": 261, "715": 261, "717": 261, "718": 261, "734": [261, 278, 812, 822, 823, 826], "745": 261, "753": 261, "776": 261, "781": 261, "811": 261, "855": 261, "857": 261, "863": 261, "871": 261, "876": [261, 346], "887": 261, "912": 261, "914": 261, "916": [261, 271], "926": 261, "927": 261, "943": 261, "962": 261, "967": 261, "968": 261, "973": 261, "988": 261, "996": 261, "difficulti": [261, 478, 946, 951], "freq_ind": 261, "ax_spec": 261, "f_obs_plot_sig": 261, "ax_colorbar2": 261, "mari": [261, 278, 292, 776, 777, 779, 780], "dejan": [261, 278, 776, 777, 779, 780], "draschkow": [261, 278, 776, 777, 779, 780], "e13335": [261, 278, 776, 777, 779, 780], "13335": [261, 278, 776, 777, 779, 780], "75_cluster_ftest_spatiotempor": [261, 263, 966], "1000e": [264, 266], "sample_vertic": [264, 266], "evoked1": [264, 949], "evoked2": [264, 949], "n_vertices_sampl": [264, 266], "morph_data": [264, 287, 297], "fsave_vertic": [264, 265, 266], "morph_mat": [264, 266, 345], "n_vertices_fsav": [264, 265, 266], "govern": 264, "member": [264, 312, 774], "max_step": [264, 776, 777, 779, 780], "p_threshold": [264, 265], "t_threshold": 264, "clu": [264, 265, 266, 781], "56353657484037": 264, "79154693338163": 264, "permutationt": 264, "good_clusters_idx": 264, "stc_all_cluster_vi": [264, 265, 266], "save_imag": [264, 266, 844], "20_cluster_1samp_spatiotempor": [264, 268, 966], "stc_fname": [265, 275], "n_subjects1": 265, "n_subjects2": 265, "x1": [265, 774, 777], "x2": [265, 774, 777], "subjects_k": 265, "f_threshold": [265, 772], "8724146338349605e": 265, "63217183709247": 265, "30_cluster_ftest_spatiotempor": [265, 268, 966], "engemannn": 266, "r_aud": 266, "r_vi": 266, "tini": [266, 367], "9303783365463673e": 266, "1782": 266, "8512814494813": 266, "brighter": 266, "inds_t": 266, "inds_v": 266, "cluster_ind": 266, "eve_id": 266, "mean_tc": 266, "std_tc": 266, "60_cluster_rmanova_spatiotempor": [266, 268, 966], "v\u00b2": 269, "\u00b2": [269, 270], "t\u00b2": [269, 271], "overridden": [269, 291, 550], "esp": 269, "method_kw": [269, 333, 334, 335, 336, 552, 553, 789, 791, 793, 795, 797, 799], "irrelev": [269, 311, 322, 325], "epo_spectrum": 269, "npsd": 269, "__getitem__": [269, 291, 292, 326, 327, 328, 330, 331, 333, 334, 338, 346, 357, 372, 552, 553, 604, 658, 792, 793, 794, 795, 796, 797, 798, 799, 800, 831], "evk_spectrum": 269, "61863537e": 269, "13487136e": 269, "88010499e": 269, "89065956e": 269, "24056397e": 269, "91160668e": 269, "56762015e": 269, "65842303e": 269, "39426775e": 269, "38758770e": 269, "03771739e": 269, "98519756e": 269, "agg_fun": [269, 333, 334, 335, 336, 552, 553, 793, 794, 799, 800, 878], "psd_welch": [269, 282, 284, 285, 289, 291, 292, 293, 305], "psd_multitap": [269, 282, 285, 305], "area_mod": [269, 333, 334, 335, 336, 552, 553, 900], "periodogram": [269, 278, 333, 334, 335, 336, 552, 553, 793, 799, 815], "electroacoust": [269, 278, 333, 334, 335, 336, 552, 553, 793, 799, 815], "1967": [269, 278, 333, 334, 335, 336, 552, 553, 793, 799, 815], "tau": [269, 278, 333, 334, 335, 336, 552, 553, 793, 799, 815], "1161901": [269, 278, 333, 334, 335, 336, 552, 553, 793, 799, 815], "slepian": [269, 278, 333, 334, 335, 336, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814], "bell": [269, 278, 333, 334, 335, 336, 552, 553, 638, 674, 789, 791, 793, 795, 797, 799, 808, 814], "1430": [269, 278, 333, 334, 335, 336, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814], "1978": [269, 278, 333, 334, 335, 336, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814], "1538": [269, 278, 333, 334, 335, 336, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814], "7305": [269, 278, 333, 334, 335, 336, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814], "tb02104": [269, 278, 333, 334, 335, 336, 552, 553, 789, 791, 793, 795, 797, 799, 808, 814], "649": 269, "10_spectrum_class": [269, 273, 966], "72074": 270, "mean_spectrum": 270, "psds_mean": [270, 271], "psds_std": [270, 271], "arithmet": [270, 281, 296, 638, 815], "psds_welch_mean": 270, "freqs_mean": 270, "psds_welch_median": 270, "freqs_median": 270, "epo_idx": 270, "unaggreg": [270, 289, 306, 795, 796, 815], "n_segment": [270, 815], "welch_unagg": 270, "topomap_kw": 270, "fmin_fmax": 270, "timefreq": [270, 789, 790, 791, 795, 796, 797, 798], "20_sensors_time_frequ": [270, 273, 966], "fpv": 271, "steadi": 271, "assr": 271, "norcia": 271, "picton": 271, "wet": [271, 319], "evgenii": [271, 292, 293, 294], "kalenkovich": [271, 288, 292, 293, 294], "ttest_rel": 271, "bids_fnam": 271, "s255": 271, "12hz": 271, "s155": 271, "15hz": 271, "decai": 271, "stabil": [271, 302, 520, 638, 649], "bach": 271, "meigen": 271, "n_overlap": [271, 333, 334, 335, 336, 552, 553, 793, 799, 815, 900], "snr_spectrum": 271, "noise_n_neighbor_freq": 271, "noise_skip_neighbor_freq": 271, "n_trial": [271, 501], "n_frequency_bin": 271, "increment": [271, 549, 638], "ON": 271, "averaging_kernel": 271, "mean_nois": 271, "apply_along_axi": 271, "psd_": 271, "edge_width": 271, "pad_width": 271, "constant_valu": 271, "drastic": [271, 303, 345], "reappear": 271, "grand": [271, 302, 322, 542], "floor": [271, 498, 674, 824, 827], "ceil": [271, 819], "psds_plot": 271, "snr_mean": 271, "snr_std": 271, "stim_freq": 271, "i_bin_12hz": 271, "1st": [271, 730], "i_bin_24hz": 271, "i_bin_36hz": 271, "i_bin_15hz": 271, "i_bin_30hz": 271, "i_bin_45hz": 271, "i_trial_12hz": 271, "i_trial_15hz": 271, "roi_vi": 271, "o9": 271, "o10": 271, "picks_roi_vi": 271, "hotel": 271, "snrs_target": 271, "6936554171862": 271, "wait": [271, 287, 311, 328, 333, 960], "snrs_12hz": 271, "snrs_12hz_chaverag": 271, "tstat_roi_vs_scalp": 271, "98590219033801": 271, "681036517815686e": 271, "Such": [271, 312, 321, 322, 332, 333, 334, 335, 336, 366, 367, 729, 789, 790, 791, 795, 796, 797, 798], "somewher": [271, 323, 333, 334, 552, 553, 899], "unintend": 271, "preregist": 271, "peopl": [271, 284, 285, 286, 287, 291, 292, 293, 294, 295, 311, 312, 319, 961], "detour": 271, "snrs_roi": 271, "freq_plot": 271, "color_plot": 271, "darkblu": [271, 552, 553, 899], "darkgreen": 271, "mediumblu": 271, "seagreen": 271, "xpos_plot": 271, "stim_12hz_tmp": 271, "stim_15hz_tmp": 271, "snr_tmp": 271, "yerr": 271, "stim_12hz_snrs_": 271, "ihz": 271, "stim_15hz_snrs_": 271, "tick": [271, 274, 295, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 870, 878, 882, 885, 889, 898, 901, 906, 907, 908], "strike": 271, "tstat_12hz_trial_stim": 271, "stim_12hz_snrs_12hz": 271, "stim_12hz_snrs_15hz": 271, "tstat_12hz_trial_1st_harmon": 271, "stim_12hz_snrs_24hz": 271, "stim_12hz_snrs_30hz": 271, "tstat_12hz_trial_2nd_harmon": 271, "stim_12hz_snrs_36hz": 271, "stim_12hz_snrs_45hz": 271, "tstat_15hz_trial_stim": 271, "stim_15hz_snrs_12hz": 271, "stim_15hz_snrs_15hz": 271, "tstat_15hz_trial_1st_harmon": 271, "stim_15hz_snrs_24hz": 271, "stim_15hz_snrs_30hz": 271, "tstat_15hz_trial_2nd_harmon": 271, "stim_15hz_snrs_36hz": 271, "stim_15hz_snrs_45hz": 271, "6543191814520666e": 271, "3738935966392492e": 271, "1962135626456762e": 271, "000297367500462259": 271, "4086269810225017e": 271, "006524965733998798": 271, "tour": [271, 282, 287], "overli": 271, "stim_bandwidth": 271, "window_length": 271, "window_snr": 271, "i_win": 271, "this_spectrum": 271, "windowed_psd": 271, "windowed_freq": 271, "stimfreq": 271, "bin_width": 271, "skip_neighbor_freq": 271, "n_neighbor_freq": 271, "windowed_snr": 271, "boxplot": 271, "stochast": [271, 278, 638], "window_start": 271, "greyscal": 271, "optimist": 271, "serious": [271, 322], "50_ssvep": [271, 273, 966], "imagegrid": 274, "inset_loc": [274, 870], "max_t": 274, "17909658": [274, 275], "18448887": [274, 275], "83197989": [274, 275], "nonwhite_pix": 274, "nonwhite_row": 274, "nonwhite_col": 274, "cropped_screenshot": 274, "nrows_ncol": 274, "axes_pad": 274, "labels": 274, "titles": 274, "gridspec": [274, 335, 336, 885], "height_ratio": 274, "rowspan": 274, "775": 274, "bot": 274, "evoked_idx": 274, "brain_idx": 274, "peak_lin": 274, "columnspac": 274, "labelspac": 274, "fancybox": 274, "handlelength": 274, "n_ave": 274, "set_axisbelow": 274, "wspace": 274, "hspace": 274, "transfigur": 274, "to_plot": 274, "inset_ax": [274, 870], "axin": 274, "tast": 274, "luckili": 274, "set_": 274, "get_children": 274, "line2d": 274, "0x7f3af9768f10": 274, "0x7f3af9768610": 274, "0x7f3af97694b0": 274, "0x7f3af9768a00": 274, "pathcollect": 274, "0x7f3af97693c0": 274, "0x7f3afaba5f60": 274, "0x7f3afaba5570": 274, "0x7f3afaba67d0": 274, "0x7f3afaba6500": 274, "0x7f3afaba5630": 274, "0x7f3afaba63e0": 274, "0x7f3b49643b50": 274, "certainli": 274, "artistlist": 274, "sensor_dot": 274, "set_siz": 274, "10_publication_figur": [274, 277, 966], "timechang": [275, 335, 336, 844, 846, 885], "subscrib": [275, 335, 336, 844, 846, 885, 926, 929, 961], "ion": 275, "evokeds_fnam": 275, "avg_evok": 275, "fieldlin": [275, 846, 908], "fig_brain": 275, "field_map": 275, "fig_field": 275, "set_tim": [275, 293, 844, 846, 965], "ing": 275, "snake": [275, 917, 918, 919, 920, 921, 922, 923], "time_chang": 275, "hassl": 275, "fig3": 275, "fig4": 275, "fig5": 275, "time_bar": 275, "on_motion_notifi": 275, "mpl_event": 275, "xdata": 275, "on_time_chang": 275, "set_xdata": 275, "curstom": 275, "motion_notify_ev": 275, "20_ui_ev": [275, 277, 966], "alphabet": [278, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 311], "fiorenzo": [278, 638], "artoni": [278, 638], "magazin": [278, 485], "962275": 278, "stephan": [278, 485], "bonnet": [278, 485], "marco": [278, 485, 664], "congedo": [278, 485], "jutten": [278, 485], "riemannian": [278, 485], "multimedia": [278, 485], "mmsp": [278, 485], "5662067": [278, 485], "barber": [278, 425], "51814": [278, 425], "www": [278, 311, 425, 524, 561, 653, 946], "staff": [278, 425, 958], "brml": [278, 425], "becker": [278, 749], "albera": [278, 749], "comon": [278, 749], "gribonv": [278, 749], "fleureau": [278, 749], "guillotel": [278, 749], "merlet": [278, 749], "sissi": [278, 749], "august": [278, 505, 749], "anthoni": [278, 638], "terrenc": [278, 638], "sejnowski": [278, 638, 674], "deconvolut": [278, 638, 674], "1159": [278, 638, 674], "1995": [278, 322, 477, 638, 674], "neco": [278, 638], "anna": [278, 294, 742], "rita": [278, 742], "bentivoglio": [278, 742], "bressman": [278, 742], "cassetta": [278, 742], "donatella": [278, 742], "carretta": [278, 742], "pietro": [278, 742], "tonali": [278, 742], "alberto": [278, 742], "albanes": [278, 742], "disord": [278, 742], "1028": [278, 742], "870120629": [278, 742], "berg": [278, 322], "scherg": [278, 322], "1994": [278, 322, 605], "90113": [278, 322], "quentin": [278, 287, 307], "anderson": [278, 295], "arindam": 278, "banerje": 278, "kenji": 278, "fukumizu": 278, "24th": 278, "1288": 278, "pmlr": 278, "apr": 278, "mlr": 278, "v130": 278, "bertrand21a": 278, "ryota": [278, 485], "tomioka": [278, 485], "lemm": [278, 485], "motoaki": [278, 485], "kawanab": [278, 485], "msp": [278, 485], "4408441": [278, 485], "fred": 278, "bookstein": 278, "thin": 278, "plate": 278, "24792": 278, "marku": [278, 366, 664], "breunig": [278, 664], "kriegel": [278, 664], "raymond": [278, 664], "ng": [278, 664], "\u00f6": [278, 664], "rg": [278, 664], "sander": [278, 664], "lof": [278, 310, 664], "sigmod": [278, 664], "rec": [278, 664], "1145": [278, 664], "335191": [278, 664], "335388": [278, 664], "oleg": 278, "burdakov": 278, "bori": 278, "merkulov": 278, "lith": 278, "ping": 278, "yilun": [278, 425], "chen": [278, 425], "ami": [278, 425], "wiesel": [278, 425], "yonina": [278, 425], "eldar": [278, 425], "alfr": [278, 318, 425], "hero": [278, 425], "shrinkag": [278, 285, 425, 485, 492, 493, 639], "mmse": [278, 425], "5016": [278, 425], "5029": [278, 425], "2053029": [278, 425], "readthedoc": 278, "octob": [278, 749], "ronald": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "crochier": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "lawrenc": [278, 332, 333, 334, 335, 336, 646, 789, 790, 791, 795, 796, 797, 798], "rabin": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "multir": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "englewood": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "cliff": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "nj": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "605162": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "adrian": [278, 339, 344], "guggisberg": 278, "erik": [278, 286, 306, 307], "edward": 278, "findlai": 278, "ryan": [278, 295, 652], "canolti": 278, "mitchel": 278, "berger": 278, "barbaro": 278, "heidi": 278, "kirsch": 278, "1686": 278, "1700": 278, "sereno": [278, 322], "nimg": [278, 322, 773], "0395": [278, 322], "arthur": [278, 333, 334, 605, 795, 825, 828], "liu": [278, 605], "buckner": [278, 605], "lewin": [278, 605], "s0896": [278, 605], "6273": [278, 605], "81138": [278, 605], "jocn": 278, "darva": 278, "ermer": 278, "20171": 278, "salat": [278, 322], "andr\u00e9": [278, 322], "kouw": [278, 322], "makri": [278, 322], "florent": [278, 322], "s\u00e9gonn": [278, 322], "quinn": [278, 305, 322], "reson": [278, 322], "s69": [278, 322], "s84": [278, 322], "0396": 278, "tootel": 278, "intersubject": 278, "sici": 278, "1097": 278, "0193": 278, "hbm10": 278, "genoves": [278, 773], "nicol": [278, 285, 773], "lazar": [278, 485, 773], "878": [278, 773], "1037": [278, 773], "supplementari": [278, 460], "neuroanatom": [278, 460], "esm": [278, 460], "art": [278, 314, 460], "3a10": [278, 460], "2fnature18933": [278, 460], "mediaobject": [278, 460], "41586_2016_bfnature18933_moesm330_esm": [278, 460], "s\u00f3nia": [278, 318], "gon\u00e7alv": [278, 318], "casper": [278, 318], "munck": [278, 318], "jeroen": [278, 292, 318], "verbunt": [278, 318], "fetsj": [278, 318], "bijma": [278, 318], "rob": [278, 304, 307, 308, 309, 318], "heethaar": [278, 318], "vivo": [278, 318], "resist": [278, 318], "eit": [278, 318], "812164": [278, 318], "teon": [278, 280, 281, 282, 283, 284, 285, 287, 288, 292, 298, 299, 300, 301, 302, 316], "lauri": [278, 316], "parkkonen": [278, 316], "\u00e4": [278, 316, 493], "inen": [278, 316], "fnin": [278, 316], "00267": [278, 316], "greischar": [278, 646], "cori": [278, 646], "burghi": [278, 646], "carien": [278, 646], "reekum": [278, 646], "daren": [278, 646], "jackson": [278, 646], "diego": [278, 646], "pizzag": [278, 646], "corrina": [278, 646], "mueller": [278, 646], "davidson": [278, 646], "electroencephalograph": [278, 646], "neuroinformat": 278, "fninf": 278, "00062": 278, "hne": [278, 493], "073": [278, 493], "gari": [278, 771], "heiman": [278, 771], "houghton": [278, 771], "mifflin": [278, 771], "boston": [278, 324, 771, 964], "17028": [278, 771], "joerg": [278, 366], "hipp": [278, 366], "hawellek": 278, "maurizio": 278, "corbetta": 278, "siegel": [278, 366], "engel": [278, 366], "spontan": [278, 318], "3101": 278, "percept": [278, 294, 319, 321, 366], "aapo": [278, 638], "hyv\u00e4rinen": [278, 638], "761722": [278, 638], "toga": 278, "mazziotta": 278, "academ": 278, "san": 278, "b978": 278, "012693019": 278, "50012": 278, "bf02512476": [278, 605], "tkk": 278, "a559": 278, "helsinki": 278, "16463": 278, "kevin": [278, 333, 334, 795, 825, 828], "jone": [278, 333, 334, 795, 825, 828], "bernic": [278, 333, 334, 795, 825, 828], "porjesz": [278, 333, 334, 795, 825, 828], "chorlian": [278, 333, 334, 795, 825, 828], "madhavi": [278, 333, 334, 795, 825, 828], "rangaswami": [278, 333, 334, 795, 825, 828], "chella": [278, 333, 334, 795, 825, 828], "kamarajan": [278, 333, 334, 795, 825, 828], "ajayan": [278, 333, 334, 795, 825, 828], "padmanabhapillai": [278, 333, 334, 795, 825, 828], "stimu": [278, 333, 334, 795, 825, 828], "henri": [278, 333, 334, 795, 825, 828], "begleit": [278, 333, 334, 795, 825, 828], "deficit": [278, 333, 334, 795, 825, 828], "diagnos": [278, 302, 333, 334, 795, 825, 828], "alcohol": [278, 333, 334, 795, 825, 828], "2128": [278, 333, 334, 795, 825, 828], "jorg": 278, "jovicich": 278, "silvest": 278, "czanner": 278, "elizabeth": 278, "halei": 278, "andr": [278, 294], "kennedi": 278, "franz": 278, "schmitt": 278, "gregori": 278, "brown": [278, 620, 749], "macfal": 278, "056101": 278, "4802845": 278, "antti": [278, 284], "ahonen": 278, "lain": 278, "claudia": [278, 322], "tesch": [278, 322], "3320": 278, "281163": 278, "zhou": [278, 485], "1990": [278, 485], "bf01129656": [278, 485], "velu": [278, 310, 664], "prabhakar": [278, 310, 664], "kumaravel": [278, 310, 664], "buiatti": [278, 664], "eugenio": [278, 664], "paris": [278, 664], "elisabetta": [278, 664], "farella": [278, 664], "7314": [278, 664], "septemb": [278, 664], "3390": [278, 664], "s22197314": [278, 664], "philipp": 278, "lachaux": 278, "rodriguez": [278, 294], "martineri": 278, "francisco": 278, "varela": 278, "synchroni": 278, "hbm4": 278, "attent": [278, 311, 339, 344], "ledoit": [278, 425], "wolf": [278, 425], "s0047": [278, 425], "259x": [278, 425], "00096": [278, 425], "te": [278, 291, 638], "girolami": [278, 638, 674], "subgaussian": [278, 280, 638, 674], "supergaussian": [278, 638, 674], "089976699300016719": [278, 638], "seok": [278, 318], "lew": [278, 318], "carsten": [278, 318], "wolter": [278, 318], "anwand": [278, 318], "macleod": [278, 318], "compart": [278, 318, 321, 325, 601], "2862": [278, 318], "20714": [278, 318], "witzel": [278, 616, 746, 751], "8945": 278, "8950": 278, "10024": [278, 303], "lowri": [278, 771], "vassarstat": [278, 771], "bernard": [278, 749], "giusiano": [278, 749], "roehri": [278, 749], "b\u00e9nar": [278, 749], "kathryn": [278, 460], "mill": [278, 460], "6084": [278, 460], "m9": [278, 460], "figshar": [278, 460], "3498446": [278, 460], "molin": [278, 620, 749], "quantif": [278, 506, 620, 749, 959], "thirtieth": [278, 369], "asilomar": [278, 369], "1207": [278, 369], "1996": [278, 369], "issn": [278, 369], "6393": [278, 369], "acssc": [278, 369], "599135": [278, 369], "paul": [278, 284, 288, 309, 322], "748978": [278, 322], "ali": [278, 310, 333, 334, 795, 825, 828], "moukadem": [278, 333, 334, 795, 825, 828], "zi": [278, 333, 334, 795, 825, 828], "bouguila": [278, 333, 334, 795, 825, 828], "djaffar": [278, 333, 334, 795, 825, 828], "ould": [278, 333, 334, 795, 825, 828], "abdeslam": [278, 333, 334, 795, 825, 828], "alain": [278, 333, 334, 795, 825, 828], "dieterlen": [278, 333, 334, 795, 825, 828], "lisbon": [278, 333, 334, 795, 825, 828], "6952743": [278, 333, 334, 795, 825, 828], "mourtazaev": [278, 477], "1093": [278, 477], "suresh": [278, 643], "muthukumaraswami": [278, 643], "00138": [278, 643], "ndiay": 278, "fercoq": 278, "salmon": 278, "sugiyama": 278, "luxburg": 278, "guyon": 278, "garnett": 278, "curran": 278, "inc": [278, 311], "nip": [278, 547], "cc": [278, 312, 547], "6405": 278, "holm": [278, 652, 778], "primer": [278, 778], "ou": 278, "bai": 278, "wheaton": 278, "sherri": 278, "vorbach": 278, "hallett": 278, "2292": 278, "2307": 278, "zieh": 278, "aloi": 278, "schl\u00f6gl": 278, "kr\u00e4mer": 278, "brismar": 278, "robustli": 278, "physrevlett": 278, "234101": 278, "hilla": [278, 465], "paananen": [278, 465], "jyrki": [278, 465], "5281": [278, 316, 465], "zenodo": [278, 316, 465], "889234": [278, 465], "reilli": [278, 291, 292, 294, 304, 319, 461], "mayada": [278, 319, 461], "elsabbagh": [278, 319, 461], "infant": [278, 284, 294, 461], "117682": [278, 319, 461], "thom": [278, 318], "oostendorp": [278, 318], "delbek": [278, 318], "dick": [278, 318], "stegeman": [278, 318], "vitro": [278, 318], "1487": [278, 318], "880100": [278, 318], "oppenheim": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "schafer": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "buck": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "prentic": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "hall": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "saddl": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "river": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "754920": [278, 332, 333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798], "daisuk": [278, 505], "yoshiaki": [278, 505], "adachi": [278, 505], "masato": [278, 505], "yumoto": [278, 505], "isao": [278, 505], "hashimoto": [278, 505], "gen": [278, 505, 859], "uehara": [278, 505], "dry": [278, 505, 653], "roberto": [278, 322, 605], "pascual": [278, 322, 605], "marqui": [278, 322, 605], "martha": [278, 322, 605], "koukkou": [278, 322, 605], "kieko": [278, 322, 605], "kochi": [278, 322, 605], "bernd": [278, 322, 605], "saletu": [278, 322, 605], "hideaki": [278, 322, 605], "tanaka": [278, 322, 605], "koichi": [278, 322, 605], "hirata": [278, 322, 605], "lesli": [278, 322, 605], "prichep": [278, 322, 605], "rolando": [278, 322, 605], "biscai": [278, 322, 605], "lirio": [278, 322, 605], "toshihiko": [278, 322, 605], "kinoshita": [278, 322, 605], "tomographi": [278, 307, 321, 322, 605], "royal": [278, 322, 425, 605], "1952": [278, 322, 605], "3768": [278, 322, 605], "3784": [278, 322, 605], "rsta": [278, 322, 605], "0081": [278, 322, 605], "donald": 278, "perciv": 278, "walden": 278, "35532": 278, "cbo9780511622762": 278, "dinh": [278, 299, 300, 302], "tuan": 278, "pham": 278, "hermitian": 278, "1152": 278, "s089547980035689x": 278, "luca": [278, 680], "pollonini": [278, 680], "cristen": [278, 680], "homer": [278, 680], "abaya": [278, 680], "heather": [278, 680], "bortfeld": [278, 680], "beauchamp": [278, 340, 344, 348, 680, 904], "oghalai": [278, 680], "cochlear": [278, 680], "implant": [278, 680], "ernesto": 278, "pereda": 278, "ricardo": 278, "bru": 278, "\u00f1": 278, "maest": 278, "\u00fa": 278, "dog": 278, "056011": 278, "2552": 278, "aacfe4": 278, "sanchez": [278, 461], "meek": [278, 461], "wanz": [278, 461], "xie": [278, 461], "1254": [278, 461], "1259": [278, 461], "hat": [278, 292, 299, 322, 613, 649, 749, 782, 783], "brittani": 278, "stedelin": 278, "alessandra": 278, "mantovani": 278, "ahm": 278, "raslan": 278, "swann": 278, "3897": 278, "21105": 278, "joss": 278, "03897": 278, "noam": [278, 654], "pele": [278, 654], "00694": [278, 654], "abraham": [278, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "savitzki": [278, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "marcel": [278, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "golai": [278, 302, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "chemistri": [278, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "1627": [278, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "1964": [278, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "ac60214a047": [278, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "corn": 278, "stam": 278, "daffertshof": 278, "diminish": 278, "1178": 278, "20346": 278, "luigi": [278, 333, 334, 795, 825, 828], "rodino": [278, 333, 334, 795, 825, 828], "bert": [278, 333, 334, 795, 825, 828], "schulz": [278, 292, 294, 295, 303, 304, 309, 333, 334, 795, 825, 828], "wong": [278, 291, 292, 305, 333, 334, 795, 825, 828], "pseudo": [278, 333, 334, 366, 367, 384, 795, 825, 828], "american": [278, 333, 334, 795, 825, 828], "fic": [278, 333, 334, 795, 825, 828], "2218": [278, 549], "tmi": [278, 549], "2553445": [278, 549], "evelina": 278, "busa": 278, "glessner": 278, "hybrid": 278, "1060": 278, "1075": 278, "catherin": [278, 812, 822, 823, 826], "tallon": [278, 812, 822, 823, 826], "baudri": [278, 812, 822, 823, 826], "claud": [278, 812, 822, 823, 826], "delpuech": [278, 812, 822, 823, 826], "jneurosci": [278, 333, 334, 795, 812, 822, 823, 825, 826, 828], "00722": [278, 812, 822, 823, 826], "minna": [278, 322], "huotilainen": [278, 322], "oili": [278, 322], "salonen": [278, 322], "00064": [278, 322], "niall": [278, 652], "118484": [278, 652], "nd": [278, 652], "timm": [278, 652], "119338": [278, 652], "bishop": [278, 425], "1467": [278, 425], "9868": [278, 425], "00196": [278, 425], "vinck": 278, "wingerden": 278, "franscesco": 278, "battaglia": 278, "cyriel": 278, "pennartz": 278, "womelsdorf": 278, "pascal": 278, "fri": 278, "rhythmic": 278, "wehner": [278, 506], "modi": [278, 506], "children": [278, 324, 506, 964], "wheat": [278, 333, 334, 795, 825, 828], "pier": [278, 333, 334, 795, 825, 828], "cornelissen": [278, 333, 334, 795, 825, 828], "frost": [278, 333, 334, 795, 825, 828], "hansen": [278, 333, 334, 795, 825, 828], "phonologi": [278, 333, 334, 795, 825, 828], "whitham": [278, 638], "sean": [278, 638], "fitzgibbon": [278, 638], "clark": [278, 294, 638], "loveless": [278, 638], "marita": [278, 638], "broberg": [278, 638], "angu": [278, 638], "wallac": [278, 638], "lilli": [278, 638], "hardi": [278, 638], "rik": [278, 638], "fronsko": [278, 638], "alyson": [278, 638], "pulbrook": [278, 638], "paralysi": [278, 638], "1877": [278, 638], "1888": [278, 638], "rei": [278, 547], "ram\u00edrez": [278, 547], "jason": [278, 547], "palmer": [278, 547], "bhaskar": [278, 547], "rao": [278, 547], "neuroelectromagnet": [278, 547], "sch\u00f6lkopf": [278, 547], "platt": [278, 547], "hoffman": [278, 547], "1505": [278, 547], "3089": [278, 547], "jun": [278, 749, 952], "juliu": [278, 305, 749], "dewald": [278, 749], "april": [278, 317, 749], "zhi": [278, 294, 322], "multilay": [278, 322], "moritz": [278, 305, 306, 307, 485], "wentrup": [278, 485], "buss": [278, 485], "921154": [278, 485], "jair": [278, 280, 283, 638], "montoya": [278, 280, 283, 638], "mart\u00ednez": [278, 638], "petr": [278, 638], "tichavsk\u00fd": [278, 638], "massoud": [278, 638], "babai": [278, 638], "zadeh": [278, 638], "nad\u00e8g": [278, 638], "thirion": [278, 638], "moreau": [278, 308, 638], "latent": [278, 638, 893], "10169": [278, 638], "lectur": [278, 638, 948], "cham": [278, 638], "53547": [278, 638], "0_27": [278, 638], "pharmacologi": [278, 322, 605], "pubm": [278, 322, 605], "ncbi": [278, 322, 605], "nlm": [278, 322, 605], "nih": [278, 322, 605], "gov": [278, 322, 605], "12575463": [278, 322, 605], "encyclopedia": 278, "php": 278, "international_system_of_unit": 278, "oldid": 278, "982683558": 278, "commit": [279, 280, 281, 282, 290, 296, 297, 298, 299, 300, 301, 302, 311, 312, 314], "committ": [279, 280, 281, 282, 283, 290, 296, 297, 298, 299, 300, 301, 302], "ellen": 279, "lau": [279, 292], "ruzich": 279, "keypress": [280, 294], "timedecod": [280, 282, 284, 285], "freeview_bem_surfac": 280, "skirt": [280, 305], "martinez": [280, 283], "clarifi": [280, 292, 304, 310, 312], "jeythekei": [280, 287, 288], "lorenzo": [280, 284], "desanti": 280, "add_slider_to_sect": [280, 294, 295], "federico": [280, 281, 282, 283, 286, 291, 295, 301, 302, 303], "raimondo": [280, 281, 282, 283, 285, 286, 291, 292, 293, 295, 301, 302], "bailei": [280, 282, 283, 285, 286, 294], "_setup_vmin_vmax": 280, "concatenatechannel": 280, "epochsvector": [280, 283], "ledoit_wolf": [280, 425], "redesign": [280, 301], "rewrot": 280, "gsoc": [280, 287, 314], "plot_image_epoch": 280, "preload_data": [280, 302], "rawbrainvis": [280, 563], "santi": 280, "natali": [280, 282], "klein": [280, 282], "fede": [280, 281, 282, 285, 286, 291, 292, 293, 295], "roan": [280, 301, 302], "laplant": [280, 301, 302], "wakeman": [280, 298, 301, 302], "googl": [281, 314, 317, 324, 911], "summer": [281, 314, 324], "nenonen": 281, "nicolet": [281, 322, 581], "generalizationacrosstim": [281, 282, 284, 285, 302], "add_eeg_average_proj": 281, "silent": [281, 289, 295, 307, 320, 328, 333, 334, 477, 677, 789, 790, 791, 795, 796, 797, 798], "add_eeg_ref": [281, 283], "n_samp_tot": 281, "rudiuk": [281, 283, 284, 285], "emilyps14": 281, "lennyvarghes": 281, "marian": [281, 295, 305], "dovgialo": [281, 295, 305], "show_info": 282, "neuroscan": [282, 284, 322, 514], "cwt_morlet": [282, 283], "read_select": [282, 294], "compute_raw_psd": [282, 302], "compute_epochs_psd": [282, 302], "614990234": 282, "00064103": 282, "99897607": 282, "minor": [282, 283, 311, 314], "spectral_connect": [282, 285, 291, 294], "vision": [282, 312, 563], "orth": [282, 429], "train_tim": 282, "ecg_criterion": 282, "eog_criterion": 282, "replace_ev": [282, 603], "rawedf": [282, 561, 568, 584], "coordinan": 282, "plot_tran": [282, 283, 284, 285], "ware": 282, "score_mod": 282, "stimserv": [282, 300], "superflu": [282, 284], "ip": 282, "mesh_color": 282, "brain_color": [282, 905], "multitaper_psd": 282, "dig_kind": [282, 375, 376, 504], "inconsist": [282, 289, 303, 307], "pseudoinvers": [282, 285, 322, 638, 649], "choleski": [282, 322, 775], "vertor": 282, "renorm": 282, "drop_bad_epoch": [282, 290], "drop_epoch": 282, "do_forward_solut": 282, "favor": [282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 301, 302, 303, 305, 306, 307, 308, 309, 314, 322], "chronolog": [282, 295], "kaichogami": 282, "cl\u00e9ment": [282, 302], "moutard": [282, 302], "camilo": [282, 283], "lamu": [282, 283], "martinbab": 282, "mikolaj": [282, 283, 284, 285, 286, 287, 291, 292, 293], "nikla": [282, 284], "wilm": [282, 284], "sagun": 282, "pai": [282, 311], "sourav": 282, "dupr\u00e9": [282, 287], "la": [282, 287, 291, 306, 307, 319, 324, 964], "kambyses": 282, "pbnsilva": 282, "sviter": [282, 302], "zuxfoucault": 282, "csd_arrai": [283, 286], "nick": [283, 301], "foti": 283, "pop_prop": 283, "maryland": 283, "kit2fiff": [283, 295, 300, 301], "read_dig_montag": [283, 284, 285, 289], "preview": 283, "repr": [283, 291, 292, 305, 306], "selector": [283, 310, 333, 334, 335, 336, 338, 552, 553, 876, 899, 902], "filterchpi": [283, 325], "browse_raw": [283, 288, 289, 292, 294, 311], "raimundo": 283, "transform_into": [283, 485, 492], "hid": 283, "pablo": [283, 309], "aria": 283, "merge_grad": [283, 335, 336, 884], "assertionerror": [283, 284, 295], "duma": 283, "fieldtripcli": 283, "get_data_as_epoch": 283, "crash": [283, 285, 288, 291, 327], "unitsposit": 283, "mullin": 283, "bva": 283, "latin": [283, 287, 295, 303], "strictest": 283, "weakest": [283, 335, 336, 880], "hojlund": 283, "niediek": 283, "refactor": [283, 286, 294, 309, 311], "slight": [283, 326], "revert": [283, 333, 334, 708, 938], "csd_epoch": [283, 286], "csd_compute_epoch": 283, "ev2": 283, "\u00b5": 283, "aru": 283, "unsupport": 283, "pysurf": [283, 291, 295, 298, 299], "config_opt": 283, "favour": 283, "compli": [283, 285, 959], "single_trial_pow": 283, "uint16_codec": [283, 569, 694, 700], "f\u00e9lix": 283, "keith": [283, 284, 288, 289, 293], "doell": [283, 284, 288, 289, 293], "kraus": 283, "shlomo": 283, "poil": 283, "yaroslav": [283, 284, 286, 290, 300], "halchenko": [283, 284, 286, 290, 300], "artemis123": [284, 287, 304, 322, 560], "toddler": 284, "fasttrack": 284, "boggess": [284, 285], "tf_dic": [284, 294], "brovelli": 284, "score_sourc": [284, 288, 638, 965], "to_spher": [284, 333, 334, 335, 336, 338, 552, 553, 902], "improperli": [284, 289, 335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 616, 886], "_plot_topo_onpick": 284, "erkka": [284, 287, 306, 307, 310], "heinila": [284, 287, 306, 307, 310], "read_montag": [284, 285, 287, 289, 302], "rtepoch": [284, 287, 300, 487], "rantala": 284, "_bad_drop": 284, "_filenam": 284, "pasler": 284, "partit": [284, 322, 333, 334, 430, 552, 553, 777], "predict_mod": 284, "chanloc": 284, "conflict": [284, 339, 951, 956], "dualiti": [284, 285, 286, 549, 550], "mxne_optim": [284, 285, 286], "dgap_l21": 284, "band_pass_filt": 284, "band_stop_filt": 284, "low_pass_filt": 284, "high_pass_filt": 284, "eeg_sensor": 284, "typecheck": 284, "mislead": [284, 303], "nz": [284, 322], "leonardo": 284, "barbosa": 284, "mne_root": [284, 322, 958], "protect": [284, 295], "crist\u00f3bal": [284, 285, 288], "mo\u00ebnn": [284, 285, 288], "loccoz": [284, 285, 288], "hermann": 284, "sonntag": 284, "jakub": 284, "kaczmarzyk": 284, "lorenz": [284, 287], "esch": [284, 287], "alfin": 284, "matteo": [284, 294], "visconti": 284, "reppling": [284, 285, 286, 287, 288, 291], "bvef": [285, 400], "baptist": 285, "schiratti": 285, "utilis": 285, "gdf": [285, 287, 288, 289, 293, 322, 561, 568, 576], "find_edf_ev": [285, 288], "dgap_l21l1": 285, "find_ch_connect": [285, 289, 292], "ramonapariciog": 285, "get_pos2d": 285, "\u03c7\u00b2": 285, "writabl": 285, "anti": [285, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 912], "plot_roi_erpimage_by_rt": 285, "spatial_src_connect": [285, 292], "spatio_temporal_src_connect": [285, 292], "hcpmmp": [285, 321], "compute_morph_matrix": [285, 287], "return_drop_log": [285, 650, 651], "ansi": 285, "codepag": 285, "okba": 285, "bekhelifi": 285, "duemos": 285, "nielsen": 285, "luk\u00e1\u0161": 285, "hejtm\u00e1nek": 285, "_v": [285, 333, 334, 335, 336], "_virtual": 285, "char": [285, 303], "treatment": 285, "alejandro": [285, 286, 292], "weinstein": [285, 286, 292], "mrn": 285, "reformat": [285, 310], "lcmv_epoch": [285, 286, 299], "lcmv_raw": [285, 286], "plot_gat_tim": 285, "plot_gat_matrix": 285, "read_events_eeglab": 285, "tf_lcmv": 285, "scale_tim": 285, "scalings_tim": 285, "akshay0724": 285, "dykstra": [285, 299, 300, 301, 302], "laetitia": 285, "grabot": 285, "proulx": 285, "apariciogarcia": 285, "robin": 285, "tibor": 285, "schirrmeist": 285, "rodrigo": 285, "h\u00fcbner": 285, "gutstein": [285, 287], "kern": [285, 304, 308], "nathali": [286, 288], "gayraud": [286, 288], "mayavi": [286, 292, 295, 302, 314], "tilt": [286, 322, 338, 564, 844], "read_annotations_eeglab": [286, 287], "builtin": [286, 311, 392, 393, 844], "trainsform": 286, "sophi": [286, 291, 310], "dubarri": 286, "tf_mxne_optim": 286, "alpha_spac": [286, 550], "alpha_tim": [286, 550], "dgap_freq": [286, 549, 550], "multidictionari": 286, "base_estim": [286, 488, 495], "cp": [286, 322, 325, 958], "add_figs_to_sect": [286, 294, 295, 302], "bypass": [286, 311], "failur": [286, 311], "unread": [286, 303, 322], "keep_ecg": [286, 655], "bdf": [286, 288, 289, 291, 300, 310, 322, 561, 568, 576], "anymor": [286, 291, 293, 294, 303, 305, 638, 960], "image_mask": 286, "capit": [286, 394], "clean_nam": [286, 566], "oleh": 286, "kozynet": 286, "braboszcz": 286, "desislava": 286, "petkova": 286, "krzemi\u0144ski": 286, "hornberg": 286, "henrich": [286, 287, 291], "kolkhorst": [286, 287, 291], "evan": [286, 287, 293, 295, 304], "juergen": [286, 301], "kambiz": [286, 287], "tavabi": [286, 287], "katrin": 286, "leinweb": 286, "larri": [286, 288], "eisenman": [286, 288], "hartmann": [287, 291, 292, 293, 303], "dirk": [287, 288, 289], "g\u00fctlin": [287, 288, 289], "rasmu": [287, 309], "zetter": 287, "molfes": [287, 310], "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 287, "pymatread": [287, 305, 956], "trig_shift_by_typ": 287, "split_nam": [287, 292, 293, 295, 333, 334, 552, 553], "read_annotations_brainvis": 287, "bcd": [287, 295, 549], "get_blas_func": 287, "_compute_covariance_auto": 287, "flash30": [287, 288, 304, 308, 322, 325, 373], "onewai": 287, "sara": [287, 292], "sommariva": [287, 292], "marcin": 287, "koculak": 287, "buildup": 287, "incom": 287, "bethard": 287, "ed": [287, 749], "thrown": [287, 844], "resiz": [287, 303, 333, 334, 335, 336, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 885], "buffer_size_sec": [287, 551, 552, 553], "parser": [287, 310, 326, 514], "dateutil": 287, "jasper": 287, "den": [287, 294], "bosch": 287, "_current": 287, "symlink": [287, 325, 377, 379], "unit_noise_gain": 287, "buildqa": 287, "synthesi": [287, 288], "sti014": [287, 326, 526], "annotmap": 287, "runtimeexcept": 287, "fmt": [287, 322, 333, 334, 335, 336, 515, 516, 518, 552, 553], "morph_precomput": 287, "morph_data_precomput": 287, "pycuda": 287, "warn_explicit": 287, "save_stc_as_volum": 287, "save_as_volum": [287, 302, 348, 349], "stop_receive_thread": 287, "memmap": [287, 333, 334, 335, 336, 552, 553, 731, 736, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "banvil": [287, 288, 292, 295], "johan": 287, "meer": 287, "manu": 287, "sutela": 287, "perri": 287, "sergei": 287, "antopolskii": 287, "teekuninga": 287, "jochmann": 287, "tristan": [287, 294, 310], "stenner": [287, 294, 310], "filtord": [288, 325, 552, 553, 899], "hoc": [288, 593, 959], "drop_ref": [288, 730], "jevri": [288, 289, 306, 307], "card": [288, 951, 958], "mark_flat": [288, 291, 292], "mixin": [288, 301], "channel_wis": [288, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "__repr__": [288, 303], "lslclient": 288, "nikola": [288, 292], "chala": 288, "mocklslstream": 288, "roujanski": [288, 309], "fault": 288, "vmrk": [288, 304, 319, 518, 552, 553, 694], "kovrig": 288, "n_pad": 288, "bruno": 288, "nicenboim": 288, "32bit": 288, "edge_": 288, "topolog": [288, 295, 303, 318, 325, 378, 436, 484, 504, 535, 696, 725, 727, 939], "lang": [288, 343], "v0": [288, 301, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 357, 362, 366, 367, 369, 375, 376, 377, 379, 382, 383, 387, 388, 391, 398, 400, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 441, 442, 443, 459, 461, 462, 484, 485, 487, 489, 491, 492, 496, 497, 504, 506, 509, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 532, 533, 538, 542, 544, 547, 549, 550, 551, 552, 553, 561, 564, 565, 566, 568, 569, 570, 574, 577, 583, 590, 592, 593, 594, 595, 596, 597, 598, 599, 601, 605, 606, 607, 608, 611, 612, 613, 618, 620, 621, 622, 624, 625, 629, 630, 631, 637, 638, 639, 641, 647, 648, 649, 650, 651, 653, 655, 656, 665, 666, 676, 684, 690, 696, 700, 702, 703, 707, 708, 711, 719, 721, 722, 724, 730, 733, 738, 740, 741, 743, 752, 753, 754, 755, 756, 770, 772, 784, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 813, 814, 815, 818, 823, 824, 826, 827, 828, 829, 832, 834, 841, 844, 845, 846, 848, 862, 863, 864, 865, 869, 870, 873, 874, 876, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 906, 908, 909, 910, 912, 915, 932, 937, 941, 944, 963], "dicom": [288, 319], "hidpi": [288, 289], "retina": 288, "hash": [288, 458, 464], "mishandl": 288, "haslach": 288, "clean_eog_ecg": 288, "ascend": [288, 711, 887, 894, 946], "_criterion": 288, "detect_artifact": [288, 291, 295], "katarina": 288, "slama": 288, "limit_depth_ch": [288, 529], "rework": [288, 367], "patch_info": 288, "sebastian": [288, 291], "castano": 288, "finder": 288, "formerli": [288, 657], "enclos": [288, 322, 340, 341, 344, 347, 348, 349, 844, 904, 909], "xml": [289, 322, 401, 403, 517, 707], "read_dig_captrack": [289, 292], "captrak": [289, 292, 401], "bvct": [289, 322, 401], "polici": [289, 312], "markerfil": 289, "brainmask": [289, 291, 325, 379, 946], "autorecon1": [289, 379, 946], "curri": [289, 293, 295, 308, 567, 694], "infrastructur": [289, 312], "complic": [289, 311], "10x": 289, "jit": 289, "plot_sensors_connect": [289, 294], "ryb\u00e1\u0159": 289, "errantli": [289, 292, 293, 294, 306, 308, 309], "mri_spac": [289, 345], "1970": [289, 291], "abram": 289, "hindl": 289, "mv": [289, 292, 321, 333, 334], "2gb": [289, 333, 334, 552, 553], "joshua": [289, 295, 303, 308], "eberhard": 289, "eich": 289, "radman": 289, "macosx": [289, 294], "erron": [289, 294, 295, 304, 321], "pycord": 289, "set_dig": 289, "update_ch_nam": 289, "raweeglab": [289, 569], "raise_if_subset": 289, "bump": [289, 291], "zen": [289, 294, 333, 334, 552, 553, 638, 876, 893, 899], "smartshield": [289, 338], "_smsh_": 289, "_smartshield": 289, "max_tick": 289, "truncate_xaxi": [289, 870], "show_legend": 289, "textual": [289, 321], "biosig": 289, "nightli": [290, 958], "pick_types_evok": [290, 302], "migrat": [290, 294, 638], "upgrad": [290, 390, 552], "herbst": [291, 310], "allow_line_onli": [291, 418], "set_meas_d": [291, 292, 308, 333, 334, 335, 336, 338, 552, 553], "victor": 291, "ferat": 291, "mohammad": 291, "daneshzand": 291, "dist_limit": [291, 338, 346, 351, 415], "return_event_id": [291, 333, 334, 703, 793, 794, 795, 796], "plv": [291, 622], "match_cas": [291, 333, 334, 335, 336, 338, 552, 553], "nirx": [291, 295, 322, 583], "dmitrii": [291, 309], "altukhov": [291, 309], "epochs_color": 291, "setup_forward_model": [291, 292], "prepare_bem_model": 291, "bdip": [291, 331, 698], "besa": [291, 304, 400, 704], "return_n_it": [291, 674], "n_iter_": [291, 638], "eg": [291, 400], "force_equ": [291, 605], "reappli": [291, 305, 638, 890, 938], "compromis": [291, 310], "nfree": [291, 330, 331], "roc_auc_ovo": 291, "roc_auc_ovo_weight": 291, "major": [291, 311, 312, 314, 390, 552, 946], "old_tim": 291, "unix": [291, 959], "subprocess": 291, "servic": [291, 300, 312], "anticip": [291, 312], "cpp": [291, 959], "htp": 291, "insuffici": [291, 951], "demetr": 291, "kosta": 291, "glyph": [291, 304, 331, 341, 347, 349, 844, 862, 874, 905, 909, 911], "gridsearchcv": 291, "chun": 291, "hui": 291, "yu": [291, 292, 294], "luo": [291, 292, 294], "fu": 291, "geoff": 291, "brookshir": 291, "eegmi_url": 291, "ramiro": 291, "gatti": 291, "tandem": 291, "point_spread_funct": 291, "cross_talk_funct": 291, "ariel": 291, "rokem": 291, "torr": [291, 306, 307], "jos\u00e9": 291, "garc\u00eda": 291, "moham": 291, "sherif": 291, "nataliia": 291, "kozhemiako": 291, "legrand": 291, "f\u00e9rat": 291, "rahul": 292, "nadkarni": 292, "m\u00f8ller": 292, "andersen": 292, "kyle": [292, 293], "mathewson": [292, 293], "sedivi": 292, "benerradi": [292, 294, 295, 304, 309], "donckt": 292, "simeon": [292, 305], "svea": 292, "meyer": 292, "lx37": 292, "bierer": [292, 294], "divis": [292, 322], "rai": 292, "n_iter_sdr": 292, "single_volum": [292, 738], "subvolum": [292, 348, 349], "bg_img": [292, 348, 349, 910], "alia": [292, 304, 311, 333, 334, 335, 336, 338, 346, 552, 553, 683, 842, 862, 899], "immut": 292, "show_orient": [292, 864], "on_miss": [292, 305, 328, 333, 334, 335, 336, 338, 353, 354, 386, 419, 420, 477, 512, 532, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 879], "max_pca_compon": [292, 293], "fxaa": 292, "_split": 292, "_part": 292, "read_raw_xxx": 292, "esss": [292, 294, 314, 649, 665, 676], "blender": [292, 304], "ricoh": [292, 578, 702], "component_ord": [292, 485], "mutual_info": [292, 485], "simpler": 292, "persyst": [292, 322, 585], "snirf": [292, 294, 295, 307, 586], "birthdai": [292, 309, 333, 334, 335, 336, 338, 552, 553, 554], "permit": 292, "src_mri_t": [292, 346], "use_lut": [292, 346], "outermost": 292, "wrongli": [292, 306], "sfp": [292, 400], "add_bem_to_sect": [292, 294, 295, 302], "hull": [292, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "event_rep": [292, 328, 333], "trip": [292, 294, 303, 309], "unicod": [292, 301, 325, 788], "conjug": 292, "watersh": [292, 319, 379], "throw": 292, "trialinfo": [292, 701], "read_ch_connect": [292, 301], "spatial_dist_connect": 292, "spatial_inter_hemi_connect": 292, "spatial_tris_connect": 292, "spatio_temporal_dist_connect": 292, "spatio_temporal_tris_connect": 292, "reserv": [292, 311, 312, 391], "normalize_fwd": 292, "n_col": [292, 397, 638, 792, 872, 892], "stc_mix": 292, "use_dev_head_tran": [292, 642], "spell": 292, "captrack": 292, "annotate_flat": [292, 303], "anton": 292, "waniek": 292, "harmelen": 292, "chapochn": 292, "mshader": 292, "austin": 293, "hurst": 293, "aniket": 293, "pradhan": 293, "eduard": [293, 294, 303, 305], "ort": [293, 294, 303, 305], "hathawai": [293, 295, 304], "hongjiang": 293, "stout": [293, 295, 303], "kuziek": 293, "qianliang": 293, "tod": 293, "flak": 293, "8354": 293, "7070": 293, "imgag": 293, "boxi": [293, 322, 562], "7717": 293, "8275": 293, "8445": 293, "8553": 293, "clearer": [293, 295, 303, 343], "8351": 293, "8190": 293, "realign": [293, 321, 690], "8539": 293, "8379": 293, "8366": 293, "8642": 293, "8447": 293, "8323": 293, "reset_drop_log_select": [293, 333, 334], "8449": 293, "8402": 293, "8460": 293, "8532": 293, "8482": 293, "8608": 293, "8502": 293, "8515": 293, "on_header_miss": [293, 409], "8622": 293, "8862": [293, 294], "8381": 293, "8584": 293, "8442": 293, "8534": 293, "8624": 293, "8519": 293, "8452": 293, "8415": 293, "8395": 293, "8658": 293, "cascad": 293, "8633": 293, "8580": 293, "8400": 293, "test_egi": 293, "mandatorili": 293, "8474": 293, "8339": 293, "8558": 293, "s390x": 293, "8618": 293, "8594": 293, "8610": 293, "8377": 293, "8285": 293, "tight_layout": 293, "8344": 293, "8318": 293, "8637": 293, "8306": 293, "overflow": 293, "8448": 293, "8283": 293, "name_split": 293, "name_meg": 293, "8464": 293, "8326": 293, "8343": 293, "8425": 293, "8317": 293, "8663": 293, "8303": 293, "8484": 293, "8349": 293, "max_pca_components_": 293, "8321": 293, "8341": 293, "999999": [293, 638], "n_components_": [293, 638], "everyhwer": 293, "8368": 293, "8393": 293, "ch_info": [293, 730], "8416": 293, "8434": 293, "8486": 293, "8491": 293, "8492": 293, "led": [293, 295, 303, 308], "inset": [293, 870], "8545": 293, "8590": 293, "tukei": 293, "8542": 293, "8520": 293, "8589": 293, "8564": 293, "doc": [293, 311, 314, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 734, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 812, 822, 863, 878, 885, 889, 898, 901, 906, 908, 946], "tstart": [293, 299, 325, 340, 341, 344, 347, 348, 349, 650, 651, 666, 667, 669], "8605": 293, "8374": 293, "8357": 293, "8356": 293, "8389": 293, "justu": 293, "schwabed": 293, "mad": [293, 300, 301, 302], "jensen": [293, 300, 301, 302], "sumalyo": 294, "datta": 294, "pade": 294, "koehler": 294, "rotem": 294, "falach": 294, "sanderson": 294, "enrico": 294, "varano": 294, "judi": [294, 309, 310], "zhu": [294, 309, 310], "valerii": [294, 295, 305], "chirkov": [294, 295, 305], "anelli": 294, "apoorva": 294, "karek": 294, "silvia": 294, "cotroneo": 294, "pari": [294, 324], "erica": [294, 295, 309], "maggi": 294, "9192": 294, "9285": 294, "9278": 294, "9124": 294, "9203": 294, "9174": 294, "9088": 294, "9156": 294, "9043": 294, "9096": 294, "citat": [294, 311], "8867": 294, "8739": 294, "9169": 294, "yokogawa": 294, "8813": 294, "match_alia": [294, 304, 333, 334, 335, 336, 338, 552, 553], "8799": 294, "ipyvtk_simpl": 294, "8503": 294, "allow_dupl": [294, 333, 334, 335, 336, 338, 382, 410, 552, 553, 724], "8346": 294, "8896": 294, "8723": 294, "8738": 294, "8789": 294, "incomplet": [294, 314, 951], "9268": 294, "8790": 294, "8697": 294, "8801": 294, "8829": 294, "8744": 294, "add_custom_j": [294, 343, 965], "add_custom_css": [294, 343, 965], "javascript": [294, 343], "8762": 294, "9037": 294, "8793": 294, "projoff": [294, 325], "9262": 294, "8806": 294, "starstim": 294, "enobio": 294, "nedf": [294, 308, 310, 579], "8734": 294, "8760": 294, "8783": 294, "8822": 294, "8771": 294, "8805": 294, "canon": [294, 316, 436, 560, 844, 862], "8794": 294, "auto_clos": 294, "8730": 294, "8841": 294, "respiratori": [294, 333, 334, 335, 336, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "8858": 294, "checker": 294, "pylanc": 294, "8874": 294, "interobail": 294, "8868": 294, "qt_mac_wants_lay": 294, "pyqt": [294, 956], "8959": 294, "8879": 294, "8834": 294, "9023": 294, "9015": 294, "9087": 294, "9113": 294, "add_estimated_fiduci": [294, 382, 965], "9118": 294, "sex": [294, 306, 338], "keep_hi": [294, 325, 333, 334, 335, 336, 338, 552, 553, 554], "9103": 294, "9175": 294, "9149": 294, "9166": 294, "9210": 294, "9136": 294, "9241": 294, "9261": 294, "9269": 294, "9270": 294, "9141": 294, "9347": 294, "misbehav": 294, "8013": 294, "9207": 294, "9187": 294, "9151": 294, "9162": 294, "9152": 294, "x_label": 294, "9115": 294, "9062": 294, "8989": 294, "8839": 294, "stim_pick": [294, 552, 553], "8844": 294, "8311": 294, "8688": 294, "8983": 294, "superset": 294, "8675": 294, "8713": 294, "8689": 294, "8954": 294, "8884": 294, "num_sampl": 294, "duration_in_sec": 294, "8712": 294, "8780": 294, "8804": 294, "8842": 294, "8857": 294, "9315": 294, "overwritten": [294, 333, 334, 335, 336, 338, 459, 552, 553, 554, 653, 677, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "8956": 294, "9284": 294, "forev": [294, 333, 334], "9317": 294, "mne_realtim": 294, "8845": 294, "8811": 294, "8736": 294, "8831": 294, "8728": 294, "8731": 294, "8996": 294, "8752": 294, "8759": 294, "8775": 294, "8800": 294, "8817": 294, "8821": 294, "8856": 294, "viewer": [294, 314, 321, 335, 336, 340, 341, 344, 347, 348, 349, 844, 846, 881, 904, 909], "8965": 294, "8985": 294, "8891": 294, "8963": 294, "9109": 294, "9178": 294, "9252": 294, "concis": [294, 303], "9027": 294, "9236": 294, "9246": 294, "9305": 294, "9277": 294, "9099": 294, "cbar_label": 294, "9248": 294, "8870": 294, "9122": 294, "9033": 294, "ana": [294, 309], "radanov": [294, 309], "catalina": [294, 955], "magalvan": 294, "mista": 294, "christina": 294, "zhao": 294, "giorgio": 294, "marinato": 294, "jori": 294, "bossch": 294, "gensollen": 294, "treguer": 294, "timon": [294, 306, 307, 319], "merk": [294, 306, 307], "julien": 295, "dominiqu": [295, 304], "makowski": [295, 304], "derollepot": 295, "sosulski": [295, 303], "xiaokai": 295, "xia": 295, "bannier": 295, "darin": 295, "erat": 295, "sleiter": 295, "scheltienn": [295, 303, 304, 305, 306, 307, 308, 309, 310, 964], "gate": 295, "reza": [295, 304], "shoorangiz": [295, 304], "evgeni": 295, "goldstein": 295, "teve": [295, 303], "riessariu": 295, "stargardski": 295, "pooch": [295, 303, 458, 952], "9801": 295, "9575": 295, "nirsport2": 295, "9348": 295, "9401": 295, "9376": 295, "9430": 295, "9481": 295, "9637": 295, "9872": 295, "9782": 295, "9858": 295, "9640": 295, "6888": 295, "9892": 295, "9725": 295, "ckdtree": 295, "9568": 295, "9643": 295, "9369": 295, "9427": 295, "hitachi": [295, 577], "9391": 295, "9396": 295, "9424": 295, "9403": 295, "9463": 295, "9431": 295, "9443": 295, "9406": 295, "9438": 295, "datablock": 295, "9437": 295, "9445": 295, "9419": 295, "9458": 295, "9444": 295, "ct": [295, 303, 671, 834], "9503": 295, "mr": [295, 303, 322, 834], "9484": 295, "9697": 295, "9468": 295, "9514": 295, "9541": 295, "9519": 295, "9525": 295, "9529": 295, "9558": 295, "9555": 295, "9553": 295, "warp_montage_volum": [295, 307], "insens": 295, "9544": 295, "9556": 295, "9578": 295, "9570": 295, "9545": 295, "9540": 295, "9601": 295, "9605": 295, "abort": 295, "9614": 295, "9516": 295, "9618": 295, "localit": [295, 406], "9658": 295, "9585": 295, "9682": 295, "remove_fiduci": [295, 382], "circumst": [295, 304, 382, 514], "9684": 295, "9688": [295, 322], "9789": 295, "9694": 295, "9586": 295, "9742": 295, "9796": 295, "9763": 295, "9784": 295, "9810": 295, "revamp": 295, "9754": 295, "9847": 295, "9860": 295, "9861": 295, "9862": 295, "9863": 295, "9871": 295, "9881": 295, "9891": 295, "9800": 295, "tild": [295, 307, 322, 613], "9613": 295, "9845": 295, "9851": 295, "9869": 295, "by_event_typ": [295, 333, 334], "9859": 295, "9687": 295, "9708": 295, "typo": [295, 311, 313], "9706": 295, "9378": 295, "ceo": [295, 312], "cdt": [295, 567, 694], "9381": 295, "9712": 295, "9719": 295, "9765": 295, "9849": 295, "9897": 295, "9920": 295, "9384": 295, "9404": 295, "9435": 295, "9531": 295, "9447": 295, "9612": 295, "9831": 295, "9522": 295, "9485": 295, "9513": 295, "9489": 295, "9524": 295, "9603": 295, "9528": 295, "imposs": 295, "9893": 295, "9535": 295, "9564": 295, "9565": 295, "spawn": [295, 502], "9629": 295, "9771": 295, "9607": 295, "9663": 295, "9630": 295, "9580": 295, "9758": 295, "dollar": 295, "9695": 295, "9746": 295, "9799": 295, "9804": 295, "9777": 295, "9780": 295, "9933": 295, "9864": 295, "9873": 295, "9940": 295, "9867": 295, "9904": 295, "launch": [295, 311, 544, 626, 951, 956, 958], "mne_kit_gui": 295, "niter": [295, 834], "finer": [295, 305, 824, 827], "9505": 295, "9596": 295, "prox": 295, "cd": [295, 311, 322, 549, 946, 958], "outperform": 295, "9608": 295, "9493": 295, "9685": 295, "dataset_nam": [295, 458, 464], "has_": 295, "_data": 295, "9781": 295, "add_images_to_sect": [295, 302], "add_htmls_to_sect": [295, 302], "sort_sect": 295, "sort_cont": [295, 343], "9815": 295, "center_cmap": 295, "pathlength": [295, 310, 678], "9843": 295, "9909": 295, "gansheng": 295, "josh": 295, "koen": 295, "luka": [295, 301, 304, 305, 306, 307], "hecker": [295, 306, 307], "steve": [295, 303], "matindi": [295, 303], "l21": [297, 298], "speedup": [297, 298], "backport": [297, 311], "mne_analyz": [297, 314, 319, 346, 754, 861, 958], "mne_compute_proj_ecg": 297, "mne_compute_proj_eog": [297, 299], "mne_maxfilt": 297, "tm": [297, 322], "loui": 297, "thibault": 297, "brad": [297, 299, 301], "buran": [297, 299, 301], "mne_dipole_fit": [298, 331], "nitim": [298, 490, 808, 814, 878], "clike": 298, "gzip": [298, 552, 553], "bessel": 298, "time_to_index": 298, "zeroth": [299, 328, 333], "kornblith": 299, "smarter": 299, "sources_as_epoch": 299, "psi": 299, "applicationon": 299, "proj_act": 299, "keep_comp": 299, "dest_comp": 299, "stimclient": 300, "rtclient": 300, "mockrtclient": 300, "polygon": [300, 330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908, 912], "trelli": 300, "debian": 300, "travi": [300, 308], "ki2fiff": 300, "anaconda": [300, 311, 951, 956, 957, 961], "pick_norm": 300, "write_stc": 300, "praveen": [300, 301], "sripad": [300, 301], "olivetti": 300, "ward": 301, "radic": 301, "tack": 301, "membership": [301, 333, 334, 335, 336, 552, 553, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "equalize_channnel": 301, "s\u00e9bastien": 301, "add_channels_epoch": [301, 305], "connector": 301, "client": [301, 302, 311], "cathi": 301, "nangini": 301, "events_list": [301, 434], "succinctli": 301, "breuer": 301, "aesthet": 301, "qunxi": 301, "drop_pick": 301, "labels_from_parc": 301, "parc_from_label": 301, "setno": 301, "plot_": 301, "marmaduk": [301, 302], "woodman": [301, 302], "tanai": 301, "saket": 301, "choudhari": 301, "add_sect": 302, "stereotact": [302, 322, 333, 334, 335, 336, 552, 553, 635, 636, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "whiten_evok": 302, "oddbal": 302, "label_1": 302, "label_2": 302, "savitski": 302, "_baseraw": 302, "prof": 302, "decoupl": 302, "read_hsp": 302, "read_elp": 302, "write_hsp": 302, "write_mrk": 302, "label_time_cours": 302, "as_data_fram": 302, "textbox": 302, "iir_filter_raw": 302, "ingoo": 302, "kj": 302, "basil": 302, "pinsard": 302, "hafeza": 302, "anevar": 302, "manoj": 302, "kumar": 302, "tucker": 302, "use_orig_tim": [303, 327], "10396": 303, "michiru": [303, 304, 307, 310], "kaneda": [303, 304, 307, 310], "10089": 303, "senwen": 303, "deng": 303, "10076": 303, "zerfowski": 303, "10054": 303, "etienn": 303, "montalivet": 303, "10174": 303, "veillett": [303, 309], "10307": 303, "10281": 303, "9952": 303, "10379": 303, "cval": [303, 832], "9922": 303, "9978": 303, "9994": 303, "9929": 303, "fill_hole_s": [303, 844], "hole": [303, 844], "debugg": [303, 311], "10042": 303, "10056": 303, "10077": 303, "load_bad_channel": [303, 552, 553, 965], "10102": 303, "10058": 303, "10109": 303, "10115": 303, "10119": 303, "feel": [303, 311, 312, 959], "10114": 303, "10116": 303, "dpi": 303, "10126": 303, "10129": 303, "10135": 303, "10142": 303, "10166": 303, "on_defect": [303, 436, 504, 535, 696, 725, 727, 939], "10175": 303, "drop_log_ignor": [303, 343], "10182": 303, "10186": 303, "10185": 303, "9969": 303, "10019": 303, "10200": 303, "10255": 303, "cube": [303, 331, 874], "10202": 303, "9972": 303, "10206": 303, "widget": [303, 844, 847], "10220": 303, "10230": 303, "10249": 303, "10243": 303, "10212": 303, "10222": 303, "10183": 303, "10247": 303, "10297": 303, "map_surfac": [303, 844], "10299": 303, "10330": 303, "remove_dipol": [303, 844], "remove_forward": [303, 844], "10373": [303, 304], "10384": 303, "10417": 303, "10418": 303, "10408": 303, "subsurfac": 303, "10421": 303, "10429": 303, "eberlein": 303, "10431": 303, "rawmff": 303, "10304": 303, "10361": 303, "shift_jist": 303, "10356": 303, "eog_ch": [303, 325, 564], "10093": 303, "adina": 303, "wagner": 303, "loadtxt": 303, "10189": 303, "zamberlan": 303, "10007": 303, "nikolai": [303, 309, 310], "chapochnikov": [303, 309], "use_opengl": [303, 333, 334, 552, 553, 638, 876, 893, 899], "9957": 303, "9966": 303, "9998": 303, "9968": 303, "alphanumer": 303, "10002": 303, "9975": 303, "9980": 303, "9990": 303, "suboptim": 303, "9991": 303, "10004": 303, "9970": 303, "10021": 303, "roundtrip": [303, 338], "10040": 303, "10358": 303, "10047": 303, "10399": 303, "10073": 303, "10087": 303, "annotate_": 303, "meas_tim": 303, "10067": 303, "10118": 303, "10074": 303, "grant": [303, 311, 312, 324, 335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 616, 886], "10082": 303, "10112": 303, "10177": 303, "10127": 303, "10132": 303, "10095": 303, "10176": 303, "10210": 303, "10235": 303, "10267": 303, "unabl": [303, 312], "german": 303, "de_d": 303, "french": 303, "fr_fr": 303, "italian": 303, "it_it": 303, "10277": 303, "10292": 303, "10309": 303, "10265": 303, "10415": 303, "10289": 303, "10324": 303, "10342": 303, "10347": 303, "10313": 303, "10400": 303, "10335": 303, "10393": 303, "10392": 303, "10401": 303, "mne_qt_brows": [303, 304, 333, 334, 552, 553, 638, 876, 893, 899], "9960": 303, "10039": 303, "slash": [303, 321, 512], "10348": 303, "event_list": [303, 434], "10143": 303, "max_ori_out": 303, "10366": 303, "10323": 303, "jinja2": [303, 952], "tempita": 303, "10211": 303, "julia": 303, "guiomar": 303, "niso": 303, "gal\u00e1n": 303, "10974": 304, "ilia": 304, "machaira": 304, "10942": 304, "tziona": 304, "nessaiv": 304, "10922": 304, "mingjian": 304, "he": 304, "10736": 304, "jordan": 304, "drew": 304, "10632": 304, "courtemanch": 304, "ahdr": [304, 694], "10515": 304, "alessandro": 304, "tonin": 304, "10555": 304, "powel": 304, "10627": 304, "10615": 304, "overview_mod": [304, 333, 334, 552, 553, 638, 876, 893, 899], "10501": 304, "crop_by_annot": [304, 552, 553, 965], "10460": 304, "10544": 304, "10720": 304, "10464": 304, "10699": 304, "10534": 304, "head_sourc": [304, 331, 596, 874], "10568": 304, "joblib": [304, 314, 325, 333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 488, 495, 498, 501, 502, 528, 541, 543, 552, 553, 596, 599, 600, 611, 612, 621, 622, 643, 650, 651, 731, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 846, 878, 881, 900], "parallel_backend": 304, "10567": 304, "10533": 304, "10557": 304, "10591": 304, "10571": 304, "10587": 304, "hemoglobin": [304, 683], "10125": 304, "10606": 304, "10610": 304, "10614": 304, "10611": 304, "10633": 304, "get_view": [304, 309, 844], "10661": 304, "10668": 304, "10681": 304, "timeformat": 304, "yyyi": 304, "dd": [304, 514, 565], "_convert_tim": 304, "10674": 304, "10694": 304, "10572": 304, "10734": 304, "10284": 304, "10749": 304, "10788": 304, "avr": [304, 704], "mul": [304, 704], "10892": 304, "10940": 304, "vref": 304, "10823": 304, "10979": 304, "_project_onto_surfac": 304, "return_nn": 304, "10930": 304, "10927": 304, "nasri": 304, "hypnodyn": 304, "zmax": 304, "10754": 304, "frederik": 304, "weber": 304, "10718": 304, "gemein": [304, 305], "t1t2": 304, "10639": 304, "toivonen": 304, "10217": 304, "wang": 304, "10517": 304, "10470": 304, "dold": 304, "10485": 304, "10487": 304, "10500": 304, "10491": 304, "10662": 304, "10866": 304, "10957": 304, "10513": 304, "10493": 304, "10504": 304, "10705": 304, "10521": 304, "10547": 304, "10543": 304, "10912": 304, "10560": 304, "10619": 304, "10618": 304, "10638": 304, "10664": 304, "honor": 304, "10686": 304, "10685": 304, "10688": 304, "8754": 304, "10703": 304, "10730": 304, "10753": 304, "10765": 304, "po6": 304, "youtub": [304, 314], "10778": 304, "10802": 304, "10471": 304, "orig_format": [304, 551, 552, 553], "10851": 304, "10898": 304, "10990": 304, "10968": 304, "10936": 304, "10963": 304, "10978": 304, "10531": 304, "bilinear": 304, "smoother": [304, 322], "set_interpol": 304, "10617": 304, "flash5": [304, 322, 325, 373, 377], "mef05_": [304, 325, 373], "mef30_": [304, 325, 373], "10715": 304, "10950": 304, "10925": 304, "10945": 304, "adelin": 304, "fecker": 304, "ciok": 304, "archit": 304, "singhal": 304, "ashlei": 304, "beaslei": 304, "hamid": 304, "maymandi": 304, "naveen": 304, "srinivasan": 304, "sondr": 304, "foslien": 304, "11073": 305, "10656": 305, "gerster": [305, 306, 307], "10784": 305, "11011": 305, "11006": 305, "6233": 305, "10986": 305, "11048": 305, "8639": 305, "11083": 305, "redund": [305, 310, 322, 425], "11051": 305, "starting_affin": [305, 834], "11020": 305, "11075": 305, "galvan": [305, 321, 322, 333, 334, 335, 336, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "electroderm": 305, "11090": 305, "11108": 305, "10980": 305, "11099": 305, "11077": 305, "11094": 305, "11095": 305, "probe": [305, 577], "11186": 305, "11116": 305, "11147": 305, "11150": 305, "unscal": [305, 306, 546], "11185": 305, "utf8": [305, 561, 568, 694], "11154": 305, "11141": 305, "on_baselin": [305, 638, 890], "11232": 305, "11159": 305, "11196": 305, "unlabel": 305, "11074": 305, "sebastiaan": 305, "mathot": 305, "11072": 305, "chetan": 305, "gohil": 305, "clone": [305, 311, 488, 495, 951], "11004": 305, "carlstr\u00f6m": 305, "schad": 305, "sy": [305, 788, 956], "11190": 305, "wetzel": 305, "11019": 305, "sena": 305, "subject_id": [305, 844], "11049": 305, "11084": 305, "11145": 305, "11182": 305, "11040": 305, "11171": 305, "11181": 305, "11193": 305, "11102": 305, "11081": 305, "11191": 305, "6870": 305, "11197": 305, "11212": 305, "11203": 305, "11201": 305, "h\u00fcseyin": 305, "orkun": 305, "elma": 305, "futurewarn": [305, 311, 823, 840], "deprecationwarn": 305, "11123": 305, "11050": 305, "show_toolbar": 305, "10184": 305, "11180": 305, "11046": 305, "welzel": 305, "luzpaz": 305, "11333": 306, "tooma": [306, 307], "anij\u00e4rv": [306, 307], "11237": 306, "11236": 306, "11241": 306, "11357": 306, "webp": [306, 343], "11359": 306, "11096": 306, "11353": 306, "montage_unit": [306, 309, 569, 689, 700], "11283": 306, "11329": 306, "edflib": [306, 310], "11375": 306, "hennei": [306, 307], "11310": 306, "santeri": [306, 307, 309], "ruuskanen": [306, 307, 309], "11289": 306, "mauricio": [306, 307], "cesped": [306, 307], "tenorio": 306, "11235": 306, "hasegan": [306, 307], "11245": 306, "dinara": [306, 307], "issagaliyeva": [306, 307], "jennif": [306, 307], "behnk": [306, 307], "hakimeh": [306, 307], "aslsardroud": [306, 307], "pavel": [306, 307], "navratil": [306, 307], "ear_left": 306, "ear_right": 306, "11255": 306, "11263": 306, "ortiz": 306, "11351": 306, "enzo": [306, 307], "altamiranda": [306, 307], "reject_": 306, "11244": 306, "11303": 306, "11290": 306, "11248": 306, "11258": 306, "outli": 306, "11298": 306, "11345": 306, "11311": 306, "11300": 306, "11340": 306, "11318": 306, "11346": 306, "11344": 306, "11347": 306, "11293": 306, "11322": 306, "11369": 306, "11361": 306, "nowadai": 306, "interp_from": 306, "interp_kind": 306, "sym": [306, 808], "11371": 306, "brayet": [306, 307], "omer": [306, 307], "shubi": [306, 307], "11631": 307, "jacob": [307, 308, 309, 310], "woessner": [307, 308, 309, 310], "11469": 307, "sawradip": 307, "saha": 307, "11458": 307, "binn": [307, 310], "ch_group": [307, 333, 334, 335, 336, 338, 552, 553, 902], "11465": 307, "hyonyoung": 307, "shin": 307, "fil": [307, 314, 319, 322, 575], "11366": 307, "11536": 307, "11470": 307, "ebert": 307, "11078": 307, "barth\u00e9lemi": 307, "11397": 307, "11401": 307, "11407": 307, "11166": 307, "11388": 307, "11419": 307, "11430": 307, "11440": 307, "11436": 307, "microelectrod": 307, "11567": 307, "imwarp": 307, "diffeomorphicmap": [307, 345, 673, 832, 833, 834], "transform_point": 307, "11572": 307, "11614": 307, "10554": 307, "11152": 307, "11632": 307, "on_unit_chang": [307, 333, 334, 335, 336, 338, 552, 553], "11668": 307, "11679": 307, "qt6": 307, "aa_usehighdpipixmap": 307, "11662": 307, "florin": 307, "gave": [307, 321], "11479": 307, "stone": 307, "setuptool": [307, 310], "11454": 307, "arn": 307, "pelzer": 307, "11666": 307, "timur": 307, "sokhin": 307, "11457": 307, "zvi": 307, "baratz": 307, "11505": 307, "fock": 307, "sanit": 307, "11399": 307, "splash": [307, 309, 333, 334, 552, 553, 638, 876, 893, 899], "11398": 307, "lta": [307, 712], "11402": 307, "11421": 307, "11427": 307, "11441": 307, "11450": 307, "11489": 307, "11473": 307, "11499": 307, "dialog": [307, 325, 333, 334, 335, 336, 338, 552, 553, 899, 902, 958], "11409": 307, "11537": 307, "11562": 307, "11563": 307, "11521": 307, "11569": 307, "11502": 307, "11607": 307, "11612": 307, "11664": 307, "11623": 307, "11654": 307, "11683": 307, "11616": 307, "aligned_ct": 307, "base_imag": [307, 671], "unalign": 307, "pick_channels_evok": 307, "11665": 307, "dimitri": [307, 309], "orfano": [307, 309], "giulio": 307, "nsx": [308, 584], "blackrock": [308, 584], "microsystem": [308, 584], "11432": 308, "proloi": 308, "11720": 308, "gennadii": 308, "belonosov": 308, "11736": 308, "quotat": 308, "11718": 308, "11744": 308, "diptyajit": 308, "11719": 308, "11746": 308, "11740": 308, "11770": 308, "show_byt": [308, 587], "11800": 308, "11796": 308, "11830": 308, "11839": 308, "11841": 308, "flash5_reg": [308, 322], "11842": 308, "hamza": [308, 309, 310], "abdelhedi": [308, 309, 310], "11786": 308, "louviot": 308, "codec": [308, 569, 694, 700, 844], "11773": 308, "yipe": 308, "zuo": 308, "11704": 308, "earl": 308, "richardson": 308, "11575": 308, "calder": 308, "indexerror": 308, "11808": 308, "11804": 308, "tse": 308, "upsampl": [308, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 519, 525, 552, 553, 561, 568], "11549": 308, "unnecessari": [308, 318, 320, 561, 568, 576], "11828": 308, "11730": 308, "11694": 308, "pyside6": 308, "11721": 308, "11853": 308, "hang": 308, "_mpl_figur": 308, "spyder": [308, 311, 946, 951, 955, 956], "11696": 308, "11698": 308, "11857": 308, "gap_descript": 308, "11733": 308, "11754": 308, "11755": 308, "11748": 308, "11846": 308, "fit_intercept_": 308, "fit_intercept": [308, 491, 497], "sl": 308, "11852": 308, "11822": 308, "11778": 308, "11766": 308, "11823": 308, "11862": 308, "11713": 308, "11445": 308, "neuralynx": [309, 310, 580], "11969": 309, "kristijan": [309, 310], "armeni": [309, 310], "ivan": 309, "skelin": 309, "11884": 309, "11685": 309, "11891": 309, "anchor": 309, "incrementor": 309, "11890": 309, "complement": [309, 322], "11918": 309, "11769": 309, "cumul": [309, 426, 427, 428, 638], "11919": 309, "12001": 309, "11926": 309, "11306": 309, "12067": 309, "11925": 309, "11951": 309, "11803": 309, "12036": 309, "11964": 309, "12098": 309, "12181": 309, "check_vers": [309, 458, 788], "12146": 309, "12142": 309, "12050": 309, "12103": 309, "11942": 309, "uievent": [309, 926], "12057": 309, "12105": 309, "12118": 309, "12026": 309, "12160": 309, "12185": 309, "12194": 309, "12168": 309, "aagaard": 309, "unsync": 309, "11950": 309, "qian": 309, "chu": 309, "11958": 309, "gilbert": 309, "test_adjacency_matches_ft": 309, "test_fetch_uncompressed_fil": 309, "12041": 309, "maksym": 309, "balatsko": 309, "11608": 309, "zubarev": 309, "12121": 309, "mainar": 309, "11876": 309, "11896": 309, "12154": 309, "11912": 309, "12186": 309, "11934": 309, "compliant": [309, 314, 770], "11915": 309, "11927": 309, "trame": [309, 314], "11956": 309, "11910": 309, "11946": 309, "12155": 309, "12167": 309, "11999": 309, "11952": 309, "12145": 309, "glitch": 309, "12038": 309, "12147": 309, "12164": 309, "11960": 309, "12017": 309, "12044": 309, "12004": 309, "apply_offset": [309, 572], "12003": 309, "prune": 309, "12010": 309, "12025": 309, "12080": 309, "12019": 309, "12078": 309, "12113": 309, "12122": 309, "12165": 309, "12198": 309, "12192": 309, "12189": 309, "12205": 309, "apply_maxfilt": 309, "11938": 309, "pickl": 309, "savetxt": 309, "delimit": [309, 327], "newlin": 309, "11937": 309, "wherev": [309, 683], "11907": 309, "reset_camera": 309, "scrollabl": 309, "head_insid": 309, "guess_mri_subject": 309, "advanced_rend": 309, "andi": 309, "gonzalo": 309, "reina": 309, "12633": 310, "12661": 310, "hint": [310, 311, 333, 334, 335, 336, 552, 553, 877], "pycharm": [310, 946, 956], "read_epochs_": 310, "12250": 310, "defusedxml": 310, "12264": 310, "pytest": [310, 951], "12376": 310, "harvest": 310, "12451": 310, "12491": 310, "oberg": 310, "12319": 310, "motofumi": 310, "fushimi": 310, "12348": 310, "regist": [310, 312, 321, 322, 325, 377, 673, 832, 833, 834], "kiefer": 310, "12430": 310, "sei": 310, "yahya": 310, "shirazi": 310, "12523": 310, "11282": 310, "12190": 310, "12206": 310, "12236": 310, "12248": 310, "nc": [310, 580], "12279": 310, "12282": 310, "12324": 310, "shaft": [310, 319], "12336": 310, "12345": [310, 311], "set_vmax": [310, 846, 965], "12354": 310, "12357": 310, "12380": 310, "12382": 310, "12389": 310, "data_format": [310, 565], "12393": 310, "toc": 310, "12399": 310, "12410": 310, "12436": 310, "prefilt": 310, "12441": 310, "12444": 310, "12456": 310, "12470": 310, "12474": 310, "12476": 310, "12481": 310, "12483": 310, "12484": 310, "whitespac": 310, "12489": 310, "12498": 310, "12507": 310, "his_id": [310, 333, 334, 335, 336, 338, 552, 553, 554], "12526": 310, "expressli": 310, "disallow": [310, 333, 334, 876], "nomin": [310, 312, 338], "12535": 310, "12536": 310, "12537": 310, "12544": 310, "epoch_data": [310, 823, 824], "12308": 310, "11234": 310, "kapralov": 310, "12238": 310, "scholz": 310, "12446": 310, "ivo": 310, "jong": 310, "12467": 310, "supersed": 310, "12195": 310, "12207": 310, "12218": 310, "12237": 310, "12297": 310, "12268": 310, "hatchl": 310, "12281": 310, "12269": 310, "12289": 310, "save_as_surfac": [310, 344, 347], "gifti": [310, 344, 347], "12309": 310, "12311": 310, "savgol_filt": [310, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "12323": 310, "12332": 310, "12343": 310, "12371": 310, "12383": 310, "12394": 310, "image_kwarg": [310, 343], "12443": 310, "12445": 310, "pr": [310, 314], "12453": 310, "12454": 310, "12462": 310, "12463": 310, "physical_rang": [310, 518, 552, 553], "channelwis": [310, 518, 552, 553], "12510": 310, "get_cont": [310, 343], "12513": 310, "exclude_after_uniqu": [310, 561, 568], "12518": 310, "btkcodedev": 310, "12326": 310, "nabil": 310, "alib": 310, "12420": 310, "dead": 310, "readm": 310, "rst": [310, 311], "turner": 310, "12461": 310, "hasrat": 310, "arzoo": 310, "12464": 310, "towncrier": [310, 311], "changelog": 310, "12299": 310, "stub": 310, "12318": 310, "refresh": 310, "ruff": [310, 311], "pyupgrad": 310, "12358": 310, "12450": 310, "12509": 310, "florian": 310, "hofer": 310, "donoghu": 310, "sustain": [311, 312], "volunt": 311, "welcom": 311, "anyon": [311, 312], "abid": 311, "forum": [311, 313, 319, 946, 947, 951, 952, 955, 958, 959], "fastest": [311, 958], "upstream": 311, "usernam": [311, 458], "desktop": 311, "appreci": 311, "sudo": [311, 953, 958], "apt": [311, 953, 958], "dmg": [311, 958], "atlassian": 311, "macport": [311, 958], "homebrew": [311, 958], "bash": [311, 325, 952, 958, 961], "subsystem": [311, 338], "yourdomain": 311, "sooner": 311, "emac": 311, "vim": 311, "nano": 311, "subl": 311, "makefil": 311, "newest": 311, "guil": 311, "w32": 311, "ezwinport": 311, "path_to_git": 311, "mingw64": 311, "mnedev": 311, "path_to_anaconda": 311, "miniconda": [311, 957], "team": [311, 312], "curl": 311, "githubusercont": 311, "yml": 311, "env": [311, 447, 533, 951, 952, 956, 960], "github_usernam": 311, "insert_your_actual_github_username_her": 311, "install_loc": 311, "opt": [311, 956, 958], "blame": 311, "ignorerevsfil": 311, "rev": 311, "site_packag": 311, "graphviz": 311, "graphviz_dot": 311, "conda_prefix": 311, "optipng": 311, "unzip": [311, 458], "traceback": [311, 952], "test_eyelink": 311, "url_of_remote_repo": 311, "nickname_of_remot": 311, "repo": [311, 312], "undoubtedli": 311, "checkout": 311, "colleagu": 311, "unstag": 311, "some_fil": 311, "some_new_fil": 311, "entireti": 311, "some_other_fil": 311, "enh": 311, "some_testing_fil": 311, "new_tutorial_fil": 311, "stuck": 311, "password": [311, 458], "secur": [311, 958], "authent": [311, 458], "secret": 311, "test_evok": 311, "python_refer": 311, "my_funct": 311, "my_new_funct": 311, "old_param": 311, "new_param": 311, "my_other_funct": 311, "depr_messag": 311, "changeset": 311, "six": 311, "devel": 311, "overarch": 311, "bugfix": [311, 960], "apichang": 311, "newfeatur": 311, "sentenc": [311, 840], "credit": 311, "happi": 311, "newcontrib": 311, "firstnam": 311, "lastnam": 311, "_your": 311, "parenthet": 311, "gh": 311, "12346": 311, "test_topo": 311, "pep": 311, "hook": 311, "ins": 311, "linter": 311, "snake_cas": 311, "nsampl": 311, "diverg": [311, 340, 341, 344, 347, 348, 349, 844, 865, 904, 909, 910], "sphinxcontrib": 311, "bibtex": [311, 316], "grep": [311, 951, 960], "bibliograph": 311, "bib": 311, "singleauthor2019": 311, "authoroneauthortwo2020": 311, "firstauthoretal2021a": 311, "firstauthoretal2021b": 311, "param_nam": 311, "test_docstring_paramet": 311, "mod": 311, "attr": [311, 503], "intersphinx": 311, "Their": [311, 665], "inventori": 311, "sphobjinv": 311, "dump": 311, "ext": 311, "backtick": [311, 946], "idiom": [311, 333, 334, 335, 336, 552, 553, 900], "nest": [311, 338, 485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 639, 841], "subsect": 311, "exit": [311, 325, 339, 544, 627], "pdb": 311, "ultraslowtest": 311, "test_io_evok": 311, "restructuredtext": 311, "imit": 311, "noplot": 311, "regex_to_select_my_tutori": 311, "unrel": 311, "mortem": 311, "pm": 311, "everyon": 311, "scientist": [311, 313, 956], "spare": 311, "streamlin": 311, "collabor": [311, 312, 959], "fruit": 311, "road": 311, "someon": 311, "occasion": [311, 319], "cosmet": 311, "whats_new": 311, "draft": 311, "wip": 311, "mrg": 311, "notifi": [311, 734], "sty": 311, "azp": 311, "azur": 311, "convei": 311, "sg_execution_tim": 311, "sg_api_usag": 311, "exemplifi": 311, "formal": 312, "extraordinari": 312, "profit": 312, "entiti": 312, "openli": 312, "affili": 312, "discours": 312, "foundat": [312, 324], "behalf": 312, "strive": [312, 824, 827], "barrier": 312, "leadership": 312, "neutral": 312, "tradition": [312, 322], "reward": 312, "benevol": 312, "dictat": 312, "defer": 312, "vote": 312, "deadlock": 312, "fork": 312, "disagre": 312, "deleg": 312, "appoint": 312, "successor": 312, "faith": 312, "director": 312, "quantiti": [312, 322, 436, 674], "year": [312, 316, 324, 338, 477], "everydai": 312, "peer": 312, "privileg": 312, "scope": 312, "strateg": 312, "mechan": [312, 333, 334], "willing": 312, "capac": 312, "outreach": 312, "deliber": 312, "divers": 312, "viewpoint": 312, "talent": 312, "sole": [312, 319, 641], "soon": [312, 319, 322, 844], "grace": 312, "retir": 312, "eject": 312, "deem": 312, "harm": 312, "financi": 312, "employ": 312, "proprietari": [312, 951], "disclos": 312, "recus": 312, "themself": 312, "sparingli": 312, "privaci": [312, 958], "apach": 312, "veto": 312, "rational": 312, "opinion": 312, "suffic": 312, "usurp": 312, "duti": [312, 324], "likewis": [312, 322, 333, 334], "countri": 312, "gift": 312, "partnership": 312, "approv": 312, "employe": [312, 324], "commenc": 312, "laps": 312, "resum": [312, 335, 336], "pursu": 312, "monei": 312, "donor": 312, "umbrella": 312, "trademark": 312, "invit": 312, "waiv": 312, "troubleshoot": [313, 947, 952], "cluster_based_statist": 314, "ob": 314, "cluster_alpha": 314, "wilkinson": 314, "patsi": 314, "dmatric": 314, "clusterstat": 314, "facto": 314, "mint": 314, "recruit": 314, "8221": 314, "11275": 314, "11276": 314, "11579": 314, "12179": 314, "vet": [314, 676], "6784": 314, "crossspectrum": 314, "multitaperspectrum": 314, "6290": 314, "7671": 314, "8026": 314, "8724": 314, "9045": 314, "6609": 314, "6629": 314, "6672": 314, "6673": 314, "8397": 314, "8892": 314, "ipyvtklink": [314, 952], "addon": 314, "openneuro": 314, "fund": 314, "mnefun": 314, "pde": 314, "swig": 314, "ambit": 314, "cleanup": [314, 844], "useless": 314, "cibuildwheel": 314, "deploy": 314, "pypi": [314, 957], "forg": [314, 951, 952, 956], "nutmegtrip": 314, "view_vol_stc": 314, "cloud": 314, "dask": 314, "czi": 314, "eoss2": [314, 324], "7751": 314, "docker": 314, "2024": [315, 317], "sidebar": 316, "592483": 316, "gramfortetal2013a": 316, "gramfortetal2014": 316, "bibliographi": 316, "scholar": 317, "1730": 317, "2570": 317, "meg2443": 318, "essenti": [318, 322, 346, 459], "vanish": 318, "advers": 318, "preliminari": 318, "implicitli": [318, 322, 429, 497, 676], "stamp": 318, "mm2": 318, "ico5": 318, "tessel": 318, "prerequisit": 318, "bulletproof": 318, "feasibl": 318, "sep": 318, "homog": [318, 325, 594], "bem_sol": 318, "reestablish": 318, "corregistr": 318, "charg": 318, "photograph": 318, "uninterest": 318, "epilept": 318, "infrequ": 318, "hesit": [319, 946], "hm": [319, 961], "athinoula": [319, 324, 964], "martino": [319, 324, 964], "siemen": [319, 322], "sonata": 319, "mprage": [319, 322, 946], "interspers": 319, "lv": 319, "audvis_raw": 319, "auvi": 319, "agre": 319, "aalto": [319, 324, 964], "macquari": [319, 324, 964], "tap": [319, 325, 650, 651, 666, 667], "khz": 319, "richli": 319, "sydnei": 319, "australia": 319, "hospit": [319, 324, 964], "ilab": 319, "washington": [319, 324, 964], "9999": 319, "msr": 319, "retrospect": 319, "satisfactori": 319, "chin": 319, "respir": [319, 321, 322], "hypnogram": 319, "rechtschaffen": 319, "kale": 319, "erlangen": 319, "germani": 319, "pend": 319, "craft": 319, "elicit": [319, 335, 552, 574, 706], "lrp": 319, "ern": 319, "pupillari": 319, "reflex": 319, "unrecogniz": 319, "neuroscientist": 320, "keystrok": 320, "vocabulari": [321, 323], "spindl": 321, "acronym": [321, 323], "definion": 321, "m\u00b2": [321, 339, 445], "\u00b5m": 321, "fd": [321, 322, 443], "od": [321, 322], "dealt": 321, "synapt": 321, "intracellular": 321, "pyramid": [321, 322], "perpendicularli": 321, "peculiar": 321, "encapsul": [321, 322], "cartoon": 321, "pependicular": 321, "monitor": [321, 322, 416, 658, 660, 662], "excit": [321, 322, 333, 334, 335, 336, 338, 552, 553, 635, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "laser": 321, "ga": 321, "rubidium": 321, "rear": [321, 844], "superconduct": 321, "quantum": 321, "scaleogram": 321, "uncorrel": 321, "irrespect": [322, 328, 333, 334, 436, 504, 535, 696, 725, 727, 939], "mole": 322, "unitless": [322, 333, 334, 335, 336, 552, 553], "sensibl": 322, "femtotesla": 322, "typecast": 322, "electrocardiographi": 322, "electromyographi": 322, "electrooculographi": 322, "celsiu": 322, "nxe": [322, 571], "hpt": [322, 405], "compumed": [322, 402, 565], "fastscan": [322, 409, 578], "channels_3_and_4": 322, "boldsymbol": 322, "r_i": [322, 746, 751], "c_0": 322, "g_": 322, "infti": 322, "2n": [322, 763, 764, 765], "legendr": [322, 333, 334, 335, 336, 552, 553, 596, 647], "r_j": 322, "t_d": 322, "underbrac": 322, "b_": 322, "b_n": 322, "dotso": 322, "uc_n": 322, "constitut": 322, "orthonorm": 322, "c_e": 322, "perp": 322, "uu": 322, "approx": [322, 608], "eigenvector": [322, 330], "segonn": 322, "mri_watersh": [322, 325, 379, 946], "_brain_surfac": 322, "_inner_skull_surfac": 322, "_outer_skull_surfac": 322, "_outer_skin_surfac": 322, "availablili": 322, "echo": [322, 325, 373, 952, 958], "fov": 322, "dcm2niix": 322, "mne_organize_dicom": 322, "flash05": 322, "fat32": 322, "noflash30": [322, 325], "mef": [322, 373], "unwarp": [322, 325, 373], "grad_unwarp": [322, 325, 373], "parameter_map": [322, 325, 377], "mri_ms_fitparm": 322, "mri_synthes": 322, "fsl_rigid_regist": 322, "cor": 322, "mri_make_bem_surfac": 322, "tringul": 322, "t_x": 322, "auricular": [322, 405], "ti": 322, "feed": [322, 653], "mm3": 322, "hardli": 322, "mnitalairach": 322, "mni305": 322, "y_2": 322, "z_2": 322, "y_1": 322, "z_1": 322, "x_0": 322, "y_0": 322, "z_0": 322, "x_k": 322, "y_k": 322, "z_k": 322, "jk": 322, "0485": 322, "9189": 322, "coordinatesystem": [322, 438], "t_1": 322, "s_1": 322, "s_n": 322, "t_2": 322, "filessepar": 322, "t_3": 322, "mghformat": 322, "t_4": 322, "hardcod": 322, "periauricular": [322, 395], "idiosyncrasi": 322, "conceiv": 322, "s_k": [322, 344], "s_p": 322, "50mm": 322, "r_0": 322, "e_x": 322, "e_i": 322, "e_z": 322, "r_c": 322, "r_d": 322, "0d": 322, "n_k": 322, "w_": 322, "kp": 322, "pickup": [322, 506, 649, 665, 676], "sixteen": 322, "centerpoint": 322, "mne_list_coil_def": 322, "3012": 322, "8mm": 322, "3013": 322, "3023": [322, 390, 552], "3024": [322, 390, 552], "4001": 322, "wh": 322, "3600": 322, "4003": 322, "4004": 322, "4005": 322, "5001": 322, "5002": 322, "5003": 322, "5004": 322, "6001": 322, "pound": [322, 405], "nx": 322, "ny": 322, "csf": [322, 601], "r_1": 322, "dotsc": 322, "r_m": 322, "mu_1": 322, "mu_m": 322, "int_": 322, "v_": 322, "ly": 322, "ensu": 322, "posteriori": 322, "viabl": 322, "mantl": [322, 616], "3p": 322, "unconstrain": 322, "mx": 322, "arriv": 322, "min_": [322, 749], "bigl": 322, "bigr": 322, "u_c": 322, "lambda_c": 322, "grg": 322, "possess": 322, "sum_k": [322, 344], "varepsilon_k": 322, "sigma_k": 322, "rout": 322, "superscript": 322, "gamma_k": [322, 613], "lambda_k": [322, 613], "v_k": 322, "w_k": 322, "propto": 322, "dimensionless": 322, "tendenc": 322, "2_k": 322, "g_i": 322, "u_": 322, "lambda_": 322, "_i": 322, "noiseless": 322, "misfit": 322, "pi_k": 322, "recolor": 322, "eigenfield": 322, "n_d": 322, "a_d": 322, "sigma_d": [322, 665], "postsynapt": 322, "microscop": 322, "rigidli": 322, "floc": 322, "lie": [322, 339], "thereaft": 322, "vloc": 322, "1p": 322, "2p": 322, "l_": 322, "eff": 322, "w_i": 322, "x_i": 322, "c_y": 322, "l_i": 322, "w_1": 322, "w_2": 322, "l_1": 322, "l_2": 322, "supposedli": 322, "x_j": 322, "t_j": 322, "biject": 322, "smudg": 322, "n_j": 322, "prod_": 322, "kindli": 323, "function_nam": 323, "health": 324, "r01": 324, "eb009048": 324, "eb006385": 324, "hd040712": 324, "ns044319": 324, "ns037462": 324, "ns104585": 324, "p41": 324, "eb015896": 324, "rr014075": 324, "0958669": 324, "1042134": 324, "council": 324, "ystg": 324, "263584": 324, "676943": 324, "depart": 324, "fg02": 324, "99er62764": 324, "agenc": 324, "national": 324, "recherch": [324, 964], "neuc": 324, "0002": 324, "idex": 324, "saclai": 324, "amazon": 324, "zuckerberg": 324, "eoss4": 324, "yliopiston": [324, 964], "perustieteiden": [324, 964], "korkeakoulu": [324, 964], "ae": [324, 964], "studio": [324, 955, 956, 964], "philadelphia": [324, 964], "donder": [324, 964], "behaviour": [324, 327, 583, 586, 964], "radboud": [324, 964], "school": [324, 964], "fondat": [324, 964], "campu": [324, 964], "biotech": [324, 964], "geneva": [324, 964], "informatiqu": [324, 964], "automatiqu": [324, 964], "franzen": [324, 964], "universit\u00e4t": [324, 964], "graz": [324, 964], "massachusett": [324, 964], "planck": [324, 964], "f\u00fcr": [324, 964], "bildungsforschung": [324, 964], "uniwersytet": [324, 964], "humanistycznospo\u0142eczni": [324, 964], "aarhu": [324, 964], "universitet": [324, 964], "commissariat": [324, 964], "\u00e0": [324, 964], "\u00e9nergi": [324, 964], "atomiqu": [324, 964], "aux": [324, 964], "forschungszentrum": [324, 964], "j\u00fclich": [324, 964], "du": [324, 964], "cerveau": [324, 964], "moell": [324, 964], "\u00e9pini\u00e8r": [324, 964], "sant\u00e9": [324, 964], "m\u00e9dical": [324, 964], "technisch": [324, 964], "t\u00e9l\u00e9com": [324, 964], "outfil": 325, "anon": 325, "n_dai": 325, "daysback": [325, 333, 334, 335, 336, 338, 552, 553, 554], "resav": 325, "show_opt": [325, 552, 553, 899], "allowmaxshield": 325, "clamp": [325, 552, 553, 844, 899], "head_shap": 325, "out_fnam": 325, "rotation_x": [325, 564], "compensatori": 325, "deg": [325, 663], "ecg_ch": [325, 564], "e31": [325, 564], "e63": [325, 564], "my_raw": 325, "quiet": [325, 333, 334], "mne_process_raw": 325, "in_raw": 325, "clean_raw": 325, "file_a": 325, "file_b": 325, "test_raw_sss": 325, "filters": 325, "rej": 325, "rej_grad": 325, "rej_mag": 325, "rej_eeg": 325, "rej_eog": 325, "bad_fnam": 325, "raw_event_fnam": 325, "qrsthr": 325, "qrs_threshold": [325, 650, 666, 669], "eog_l_freq": [325, 651], "eog_h_freq": [325, 651], "head_opac": [325, 544], "multiecho": [325, 373, 377], "noconvert": 325, "flash_path": 325, "mef05": 325, "mef30": 325, "spin": [325, 377], "kt2fiff": 325, "mkheadsurf": [325, 378], "_sss": 325, "origin_out": 325, "autobad": 325, "maxst": 325, "buflen": 325, "st_buflen": 325, "st_corr": 325, "mv_tran": 325, "in_fnam": 325, "movecomp": 325, "mv_hp": 325, "hpistep": 325, "mv_hpistep": 325, "hpisubt": 325, "mv_hpisubt": 325, "nohpicon": 325, "linefreq": 325, "nooverwrit": 325, "mx_arg": 325, "sof": 325, "bmin": 325, "TO": 325, "1280": [325, 484, 594], "brainc": 325, "skullc": 325, "scalpc": 325, "7mm": 325, "gcaatla": [325, 379, 946], "brain_atla": [325, 379], "preflood": [325, 379, 946], "fname2": 325, "reaverag": 326, "category_nam": 326, "acq_dict": 326, "subav": 326, "subaverag": 326, "__len__": [326, 327, 329, 330, 331, 333, 334, 338, 339, 343, 357, 372, 552, 553, 604, 658, 792, 793, 794, 795, 796, 831], "n_cat": 326, "delayed_lookup": 326, "acqp": 326, "mne_stim_channel_2": [326, 526, 527], "uint16": [326, 526], "sti016": [326, 526], "32768": [326, 484, 526], "mne_fix_stim14": [326, 526], "asynchroni": 326, "conds_data": 326, "n_epochs_out": 326, "n_annot": 327, "iso8601": 327, "bad_flux": 327, "bad_nois": 327, "meg0111": [327, 328, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 380, 397, 399, 430, 441, 487, 501, 506, 552, 553, 637, 638, 640, 654, 655, 656, 664, 668, 672, 682, 684, 691, 723, 757, 775, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 827, 870, 876, 877, 880, 882, 883, 890, 897, 899, 900], "meg2563": 327, "meg1443": 327, "n_blink": 327, "yy": [327, 565], "______________": 327, "_________": 327, "anot": 327, "___________________": 327, "o_________": 327, "________________________": 327, "o______________": 327, "o________________________": 327, "__add__": [327, 329, 330, 339, 340, 341, 344, 346, 347, 348, 349, 382, 789, 790, 791, 795, 796, 797, 798], "concatenc": 327, "with_ch_nam": 327, "__iter__": [327, 330, 333, 334, 338, 357, 372, 604, 658, 739, 793, 794, 795, 796, 831], "array_lik": [327, 328, 330, 331, 333, 334, 335, 336, 338, 340, 341, 342, 343, 344, 347, 348, 349, 352, 380, 382, 397, 430, 440, 441, 485, 487, 492, 495, 498, 500, 501, 502, 506, 512, 550, 552, 553, 564, 578, 596, 601, 637, 638, 639, 640, 643, 647, 648, 649, 652, 653, 654, 655, 656, 658, 661, 662, 664, 665, 668, 672, 676, 682, 684, 690, 691, 726, 727, 743, 757, 767, 768, 771, 773, 774, 775, 783, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 812, 822, 826, 827, 844, 850, 861, 862, 863, 870, 876, 877, 878, 880, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 894, 896, 897, 898, 899, 900, 901, 902, 906, 908], "676071": 327, "shortstimulu": 327, "longstimulu": 327, "tabular": [327, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "preload_at_end": 328, "raw_sfreq": [328, 334], "abstract": [328, 922], "meg2623": [328, 333, 334, 335, 336, 338, 340, 341, 344, 347, 348, 349, 380, 397, 399, 430, 441, 487, 501, 506, 552, 553, 637, 638, 640, 654, 655, 656, 664, 668, 672, 682, 684, 691, 757, 775, 784, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 809, 827, 870, 876, 877, 880, 882, 883, 890, 897, 899, 900], "ptp": [328, 333, 334, 428, 638, 640, 655], "40e": [328, 333, 334, 430, 638, 655, 656, 775], "unproject": [328, 333, 334, 597, 699], "postpon": [328, 333, 334, 597, 699], "coincid": [328, 333], "my_epoch": 328, "compensation_grad": [328, 333, 334, 335, 336, 338, 551, 552, 553, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "__sub__": [329, 339, 340, 341, 344, 347, 348, 349, 789, 790, 791, 795, 796, 797, 798], "eig": 330, "eigvec": 330, "__contains__": [330, 333, 334, 335, 336, 338, 357, 372, 552, 553, 604, 638, 658, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 831], "as_diag": [330, 965], "diagnois": 330, "fromkei": [330, 338, 357, 372, 604, 658, 831], "fig_svd": [330, 871], "1e13": [330, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 425, 429, 430, 485, 492, 494, 552, 553, 877, 880, 882, 884, 885, 907], "1e15": [330, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 425, 429, 430, 485, 492, 494, 552, 553, 877, 880, 882, 884, 885, 907], "pluss": [330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "markeredgecolor": [330, 333, 334, 335, 336, 485, 492, 552, 553, 637, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 901, 906, 908], "mask_po": [330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "cloughtocher2dinterpol": [330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "linearndinterpol": [330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "encompass": [330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 653, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 863, 878, 885, 889, 898, 901, 906, 908], "rightmost": [330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 885, 889, 898, 901, 906], "mini": [330, 333, 334, 335, 336, 342, 485, 492, 552, 553, 637, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878, 885, 889, 898, 901, 906], "unrepresent": [330, 338, 357, 372, 604, 658, 831], "popitem": [330, 338, 357, 372, 604, 658, 831], "lifo": [330, 338, 357, 372, 604, 658, 831], "setdefault": [330, 338, 357, 372, 604, 658, 831], "khi2": 331, "longitudin": 331, "qlong": 331, "qtran": 331, "\u03c7": 331, "plot_amplitud": [331, 965], "show_al": [331, 874], "highlight_color": [331, 874], "mri_rot": [331, 874], "600x600": [331, 862, 874], "use_round": [331, 332, 333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 514, 552, 553, 789, 790, 791, 795, 796, 797, 798], "pos_mni": 331, "n_po": [331, 413, 415, 545, 546, 888], "subdirectori": [331, 537, 844], "aspect_kind": 332, "id_numb": 333, "event_id_1": 333, "event_id_2": 333, "new_id_numb": 333, "programmat": 333, "lost": [333, 334, 335, 336, 515, 516, 517, 518, 552, 553, 951], "no_data": [333, 795], "equalized_count": [333, 795], "audio_left": [333, 334], "name_1": [333, 334], "name_2": [333, 334], "eval": [333, 334], "col_a": [333, 334], "col_b": [333, 334], "add_annotations_to_metadata": [333, 334, 965], "annot_onset": [333, 334], "annot_dur": [333, 334], "annot_descript": [333, 334], "add_list": [333, 334, 335, 336, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "januari": [333, 334, 335, 336, 338, 552, 553, 554], "1\u02e2\u1d57": [333, 334, 335, 336, 338, 552, 553, 554], "tailor": [333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "parallel_config": [333, 334, 335, 336, 339, 340, 341, 343, 344, 347, 348, 349, 351, 425, 426, 428, 430, 488, 495, 498, 501, 502, 528, 541, 543, 552, 553, 596, 599, 600, 611, 612, 621, 622, 643, 650, 651, 737, 738, 740, 741, 742, 754, 776, 777, 778, 779, 780, 789, 791, 793, 795, 797, 799, 801, 802, 803, 804, 805, 806, 814, 815, 823, 824, 825, 826, 827, 846, 878, 881, 900], "workload": [333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "x_a": [333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "2u": [333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "enevlop": [333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "projs_a": [333, 334, 335, 336, 552, 553], "proj_a": [333, 334, 335, 336, 552, 553], "projs_b": [333, 334, 335, 336, 552, 553], "proj_b": [333, 334, 335, 336, 552, 553], "emphas": [333, 334, 335, 336], "trim_mean": [333, 334], "low_bia": [333, 334, 335, 336, 490, 552, 553, 611, 612, 793, 799, 803, 806, 808, 814, 878], "__setstate__": [333, 334, 335, 336, 552, 553, 789, 791, 795, 797], "undrop": [333, 334, 795, 796], "timeout": [333, 334, 788, 795, 796], "99th": [333, 334], "lenient": [333, 334], "drop_log_stat": [333, 334], "perc": [333, 334], "mintim": [333, 334, 508], "seek": [333, 334, 493, 508], "nonspati": [333, 334], "cart_to_eeglab": [333, 334, 515, 518, 552, 553], "5500m": [333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 487, 496, 521, 523, 524, 552, 553], "reflect_limit": [333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 523, 524, 525, 552, 553], "get_annotations_per_epoch": [333, 334], "epoch_annot": [333, 334], "only_data_ch": [333, 334, 335, 336, 338, 552, 553, 638, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "epoch_color": [333, 334, 876], "5th": [333, 334, 335, 336, 340, 341, 343, 344, 347, 348, 349, 552, 553, 876, 899], "1e2": [333, 334, 343, 552, 553, 876, 899], "20\u00b5v": [333, 334, 343, 552, 553, 876, 899], "ital": [333, 334, 335, 336, 552, 553, 876, 880, 884, 899], "processor": [333, 334, 458, 552, 553, 638, 876, 893, 899], "pyopengl": [333, 334, 552, 553, 638, 876, 893, 899], "stylesheet": [333, 334, 552, 553, 638, 844, 876, 893, 899], "qdarkstyl": [333, 334, 552, 553, 638, 844, 876, 893, 899], "darkdetect": [333, 334, 552, 553, 638, 844, 876, 893, 899], "startup": [333, 334, 552, 553, 638, 876, 893, 899], "mneqtbrows": [333, 334, 552, 553, 638, 876, 893, 899], "mpl": [333, 334, 340, 341, 344, 347, 348, 349, 552, 553, 844, 876, 899, 904, 909], "tkagg": [333, 334, 552, 553, 876, 899], "f11": [333, 334, 552, 553, 876, 899], "magic": [333, 334, 552, 553, 638, 876, 893, 899, 946, 951], "qt5": [333, 334, 552, 553, 638, 876, 893, 899, 956], "n_max_plot": [333, 334, 875], "good_epoch": [333, 334, 877], "area_alpha": [333, 334, 335, 336, 552, 553, 900], "line_alpha": [333, 334, 335, 336, 552, 553, 900], "asd": [333, 334, 335, 336, 552, 553, 900], "decibel": [333, 334, 335, 336, 344, 552, 553, 611, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878], "log\u2081\u2080": [333, 334, 335, 336, 552, 553, 774, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 878], "n_ch_group": [333, 334, 335, 336, 338, 552, 553], "n_pick": [333, 334, 335, 336, 338, 552, 553, 664, 691], "downward": [333, 334, 335, 336, 338, 552, 553, 902], "layout_scal": [333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798, 859, 884, 907], "fig_background": [333, 334, 335, 336, 789, 790, 791, 795, 796, 797, 798, 884, 907], "eeg061": [333, 334, 335, 336, 338, 382, 410, 552, 553, 724], "eeg161": [333, 334, 335, 336, 338, 382, 410, 552, 553, 724], "kaiser": [333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 525, 552, 553], "meaningless": [333, 334], "split_siz": [333, 334, 552, 553], "100mb": [333, 334, 552, 553], "schema": [333, 334, 552, 553], "fname_split": [333, 334, 552, 553], "bbac101d50176611136b": [333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553], "setter": [333, 334, 552, 553], "channel_loc_alias": [333, 334, 335, 336, 338, 552, 553], "std_err": [333, 334], "1591": [333, 334], "juli": [333, 334], "rangeindex": [333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800], "timedeltaindex": [333, 334, 335, 336, 340, 341, 344, 347, 348, 349, 552, 553, 789, 790, 791, 795, 796, 797, 798], "__neg__": [335, 336, 340, 341, 344, 347, 348, 349], "negat": [335, 336, 340, 341, 344, 347, 348, 349], "evoked_neg": [335, 336], "prepend": [335, 336, 572], "unsort": [335, 336, 880], "obscur": [335, 336, 880], "multiax": [335, 336, 880], "t_start": [335, 336, 880], "t_end": [335, 336, 880], "surf_map": [335, 336, 596, 846, 881], "n_contour": [335, 336, 846, 881], "show_dens": [335, 336, 846, 881], "interp1d": [335, 336, 844, 846, 881], "slinear": [335, 336, 844, 846, 881], "quadrat": [335, 336, 844, 846, 881], "turntabl": [335, 336, 544, 844, 846, 862, 881], "unintent": [335, 336, 544, 846, 862, 881], "mask_cmap": [335, 336, 789, 790, 791, 795, 796, 797, 798, 882], "mask_alpha": [335, 336, 789, 790, 791, 795, 796, 797, 798, 882], "do_mask": [335, 336, 882], "illeg": [335, 336, 883], "945": [335, 336, 789, 790, 791, 795, 796, 797, 798, 884], "01d": [335, 336, 485, 492, 885], "set_posit": [335, 336, 885], "amplif": [335, 336, 366, 367, 425, 429, 430, 441, 442, 443, 485, 492, 528, 529, 547, 549, 550, 616, 886], "logger": [335, 336, 839, 841, 886], "_ave": [335, 336], "source_ori": 337, "fiffv_mne_fixed_ori": 337, "fiffv_mne_free_ori": 337, "n_ori": 337, "source_rr": 337, "n_sourc": [337, 366, 367, 485, 492, 530, 547, 549, 550, 622], "temp": 338, "fiffv_coil_meg": 338, "fiffv_eeg_ch": 338, "ez": 338, "fiff_unit_t_m": 338, "fiff_unitm_non": 338, "ctfkind": 338, "colcal": 338, "rowcal": 338, "save_calibr": 338, "fiffv_point_eeg": 338, "fiffc_vers": 338, "machid": 338, "mac": 338, "usec": 338, "he_level_raw": 338, "helium": 338, "helium_level": 338, "orig_file_guid": 338, "mea": 338, "creator": 338, "ncoil": 338, "hpi_coil": 338, "corr_coeff": 338, "coil_freq": 338, "dig_point": 338, "good_limit": 338, "coord_tran": 338, "event_channel": 338, "mri_id": 338, "block_id": 338, "max_info": 338, "sss_info": 338, "max_st": 338, "sss_ctc": 338, "sss_cal": 338, "last_nam": 338, "first_nam": 338, "middle_nam": 338, "month": 338, "male": [338, 477], "femal": [338, 477], "handed": 338, "ambidextr": 338, "kilogram": 338, "command_lin": [338, 346], "meas_fil": 338, "mri_fil": 338, "shh": 338, "working_dir": [338, 346], "xplotter": 338, "__setitem__": 338, "accuru": [339, 344], "versionad": 339, "outside_vertic": 339, "get_tri": 339, "label_tri": 339, "get_vertices_us": 339, "label_vert": 339, "n_label_vertic": 339, "icosahedr": [339, 431, 484, 540, 541], "div1": [339, 766], "div2": [339, 766], "mris_divide_parcel": [339, 766], "n_part": [339, 766], "fring": 339, "sens_data": [340, 341, 344, 347, 348, 349], "__div__": [340, 341, 344, 347, 348, 349], "__mul__": [340, 341, 344, 347, 348, 349, 789, 790, 791, 795, 796, 797, 798], "vertice_wis": [340, 341, 344, 347, 348, 349], "tstop": [340, 341, 344, 347, 348, 349], "pane": [340, 344, 348, 844, 904, 958], "n_color": [340, 341, 344, 347, 348, 349, 865, 904, 909, 910], "hot": [340, 341, 344, 347, 348, 349, 904, 909], "binar": [340, 341, 344, 347, 348, 349, 745, 747, 748, 844, 904, 909], "colorschem": [340, 341, 344, 347, 348, 349, 904, 909], "high_contrast": [340, 341, 344, 347, 348, 349, 844, 904, 909], "resort": [340, 344, 348, 904, 946], "devot": [340, 341, 344, 347, 348, 349, 904, 909], "occupi": [340, 341, 344, 347, 348, 349, 543, 738, 904, 909], "blend": [340, 341, 344, 347, 348, 349, 844, 865, 904, 909], "mip": [340, 341, 344, 347, 348, 349, 844, 904, 909], "surface_alpha": [340, 341, 344, 347, 348, 349, 844, 904, 909], "silhouette_alpha": [340, 341, 344, 347, 348, 349, 844, 904, 909], "silhouette_linewidth": [340, 341, 344, 347, 348, 349, 844, 904, 909], "time_label_s": [340, 341, 344, 347, 348, 349, 844, 904, 909], "freesurferoccipitalflattenedpatch": [340, 344, 348, 904], "openwetwar": [340, 344, 348, 904], "transform_data": [340, 341, 344, 347, 348, 349], "tmin_idx": [340, 341, 344, 347, 348, 349], "tmax_idx": [340, 341, 344, 347, 348, 349], "indicic": [340, 341, 344, 347, 348, 349], "data_t": [340, 341, 344, 347, 348, 349], "direction": [341, 347, 349], "vector_alpha": [341, 347, 349, 844, 909], "sane": [341, 347, 349, 909], "fiffv_proj_item_field": 342, "compute_proj_": 342, "info_fnam": 343, "fidel": 343, "n_file": 343, "topomap_kwarg": [343, 897], "declutt": 343, "inverse_op": 343, "altogeth": 343, "stc_plot_kwarg": 343, "add_sys_info": [343, 965], "sysinfo": 343, "on_error": 343, "n_time_points_stc": 343, "remove_al": 343, "removed_index": 343, "open_brows": 343, "nanoamper": 344, "log_10": 344, "scale_rr": [344, 347], "gii": [344, 347], "subject_orig": [344, 347], "vertices_to": [345, 431], "pre_affin": 345, "sdr_morph": [345, 673, 832, 833, 834], "src_data": 345, "vol_morph_mat": 345, "affinemap": 345, "stc_from": 345, "nifti2": [345, 348, 349], "stc_to": 345, "nifti2imag": 345, "src_from": [345, 625], "monolith": 346, "fiffv_mne_surf_left_hemi": 346, "fiffv_mne_surf_right_hemi": 346, "fiffv_mne_surf_unknown": 346, "fiffv_coord_mri": 346, "inus": 346, "subject_his_id": [346, 431], "ntri": 346, "nuse_tri": 346, "pinfo": 346, "155295": 346, "155323": 346, "155330": 346, "patch_ind": 346, "n_src_remain": 346, "115407": 346, "nearest_dist": 346, "mri_width": 346, "mri_height": 346, "mri_depth": 346, "neighbor_vert": 346, "mri_ras_t": 346, "fiffv_mne_coord_ra": 346, "vox_mri_t": 346, "fiffv_mne_coord_mri_voxel": 346, "mri_volume_nam": 346, "seg_nam": 346, "include_surfac": 346, "include_discret": 346, "dest": [346, 348, 349, 830], "4x4": [346, 577, 740, 741, 742, 754], "trilinear": [348, 349, 519], "ensnur": [348, 349, 519], "initial_po": [348, 349, 910], "nutmeg": [348, 349, 910], "spatialimag": [348, 349, 373, 671, 673, 832, 833, 834, 910], "src_sampl": [348, 349, 910], "stc_vol_sampl": [348, 349, 910], "vl": [348, 716], "evoked_templ": 353, "zlogratio": [356, 621, 622, 789, 790, 791, 795, 796, 797, 798, 906], "data_sc": 356, "meaningfulli": 359, "quadrant": 359, "borgiotti": [366, 367], "kaplan": [366, 367], "\u03b8i": [366, 367], "arguabl": [366, 367], "max_pow": [366, 367], "expon": [366, 367, 529, 547, 549, 550, 616], "n_weight": 366, "src_type": [366, 367], "is_free_ori": [366, 367], "supplement": 366, "is_ssp": 367, "vec_stc": 367, "resmat": [368, 614, 615, 617, 620], "n_dipoles_lcmv": 368, "n_dipoles_fwd": 368, "mef05_001": 373, "mef30_001": 373, "flash5_img": [373, 377], "origin_head": 375, "origin_devic": 375, "exclude_front": [376, 504], "n_pt": 376, "no_decim": 378, "idx_by_typ": 380, "acpc": 382, "ch_po": [382, 395], "x_max": 383, "y_min": 383, "y_max": 383, "my_layout": 383, "keep_stim": 384, "combined_inst": 384, "native_head_t": 386, "equalized_inst": [387, 510], "ch_adjac": [388, 399], "use_c": 390, "sq20483n": [390, 552], "sq20483": [390, 552], "sq20950n": [390, 552], "ch_indic": 391, "bg_imag": 391, "neighbor_nam": 392, "heurist": 394, "n_point": [395, 409, 436, 504, 556, 578, 702], "n_hpi": 395, "fs_tal": [395, 588, 831], "ctf_head": [395, 588, 831], "ctf_meg": [395, 588, 831], "viewport": [396, 552, 553, 899], "95mm": 398, "eloc": 400, "095m": 400, "weakli": 400, "eeg001": 404, "eeg002": 404, "filepath": [405, 407, 787, 844], "digitz": 405, "6729": 405, "3873": 405, "3671": 405, "6782": 405, "5228": 405, "3127": 405, "3976": 405, "2363": 405, "4493": 405, "8450": 405, "3601": 405, "5353": 405, "6828": 405, "8518": 405, "0697": 405, "0829": 405, "3744": 405, "6297": 405, "1376": 405, "4264": 405, "7352": 405, "7756": 405, "8676": 405, "0439": 405, "9297": 405, "6852": 405, "4881": 405, "2969": 405, "4939": 405, "union": [411, 509, 526, 638, 677], "t_step_min": [412, 413, 414], "t_window": [412, 414, 418, 648], "interf": [412, 414, 418], "_setup_hpi_amplitude_fit": 412, "disambigu": 412, "t_step_max": 413, "too_clos": 413, "adjust_dig": [413, 415], "\u03b4t": 413, "veloc": [413, 642], "chpi_snr": 414, "snr_mag": 414, "power_mag": 414, "resid_mag": 414, "snr_grad": 414, "power_grad": 414, "resid_grad": 414, "gof_limit": 415, "quat": [415, 421, 835, 837], "q1": [415, 552, 553, 835, 837], "q2": [415, 835, 837], "q3": [415, 552, 553, 835, 837], "hlc001": 416, "hlc002": 416, "hlc003": 416, "rawkit": [417, 578], "include_lin": 418, "t_step": 418, "hpi_freq": 420, "n_coil": 420, "hpi_pick": 420, "hpi_on": 420, "all_evok": 424, "keep_sample_mean": 425, "factor_analysi": 425, "store_precis": 425, "assume_cent": 425, "shrikag": 425, "iter_n_compon": 425, "emprici": 425, "on_rank_mismatch": [429, 441, 442], "resultingmorph": 431, "vertices_from": 431, "vert_rh": 431, "vert_lh": 431, "mris_left_right_regist": 431, "epochs_list": [432, 508], "add_offset": 432, "lpa_weight": 436, "rpa_weight": 436, "hsp_weight": 436, "eeg_weight": 436, "hpi_weight": 436, "set_fid_match": 436, "set_grow_hair": 436, "hair": 436, "set_rot": 436, "rot": [436, 835, 837], "set_scal": 436, "sca": 436, "scale_mod": 436, "set_transl": 436, "tra": 436, "fids_mri": 438, "return_rank": 441, "return_color": [441, 538], "n_nonzero": 441, "1e11": 442, "1e5": 442, "reg_cov": 443, "fs_home": 444, "create_raw": 445, "ignore_config": 447, "device_id": 448, "force_upd": [449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483], "update_path": [449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483], "mne_datasets_brainstorm_data_path": [449, 450, 451], "prompt": [449, 450, 451, 452, 454, 455, 456, 458, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 946, 952, 955, 961], "base_url": [452, 477, 478], "foot": 452, "khanetal2018": 457, "dataset_param": 458, "return_vers": 458, "auth": 458, "token": 458, "archive_nam": [458, 464], "folder_nam": [458, 464], "config_kei": 458, "untar": [458, 951], "decompress": 458, "httpdownload": 458, "012345": 458, "uncompress": 458, "cryptograph": 458, "sha256": 458, "19uheid": 458, "md5": 458, "upodh2io": 458, "tar": [458, 951, 958], "12b75d1cb7df9dfb4ad73ed82f61094f": 458, "osf": 458, "86qa2": 458, "webpag": 460, "2wk": 461, "1mo": 461, "2mo": 461, "3mo": 461, "5mo": 461, "9mo": 461, "12mo": 461, "15mo": 461, "18mo": 461, "2yr": 461, "ants4": 461, "5month3t": 461, "subject_dir": 462, "\u00ecnt": 467, "mne_datasets_opml_path": 471, "edfx": [477, 478], "cassett": 477, "physionet_sleep_path": [477, 478], "telemetri": 478, "mild": 478, "asleep": 478, "mne_datasets_spm_data_path": 480, "n_triangl": 484, "quadric": 484, "30001": 484, "20480": 484, "cov_est": 485, "average_pow": [485, 492], "cov_method_param": [485, 492, 493], "csp_space": [485, 492], "mutual": [485, 570, 834], "simplif": 485, "mean_": [485, 492], "std_": [485, 492], "x_new": [485, 486, 487, 490, 492, 493, 496, 639], "n_features_new": [485, 486, 487, 490, 492, 493, 496, 639], "get_param": [485, 486, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 639], "subobject": [485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 639], "name_format": [485, 492], "n_pattern": [485, 492], "set_param": [485, 486, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 639], "__": [485, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 639], "classes_": [486, 488], "n_class": [486, 488, 495, 501], "allow_2d": [488, 495], "score_func": [488, 495, 638], "decision_funct": [488, 495], "nd_featur": [488, 495], "n_slice": 488, "n_features_1": [488, 495], "n_features_2": [488, 495], "n_task": [488, 495], "n_target": [488, 489, 495, 502], "xt": [488, 495, 498], "283185307179586": 490, "n_signal": [490, 819, 821], "r2": 491, "edge_correct": [491, 497], "baseestim": [491, 499, 502], "return_filt": 493, "flank": 493, "spectal": 493, "sprectal": 493, "sorter_spec": 493, "x_ssd": 493, "with_mean": 494, "with_std": 494, "quantil": 494, "estimators_": 495, "unsupervis": 499, "spatialfilt": 500, "_xdawntransform": 500, "features_shape_": 500, "objective_funct": 501, "leaveoneout": 501, "surrogate_tri": 501, "mean_spatial_filt": 501, "pre_dispatch": 502, "n_dimensional_featur": 502, "dispatch": 502, "explos": 502, "lightweight": 502, "n_score": 502, "extrema": [505, 671, 685], "orig_sfreq": 506, "weight_al": 506, "ignore_ref": [506, 600, 649, 665, 676], "return_map": 506, "mag_scal": [506, 649, 665, 676], "multipolar": [506, 648, 649, 665, 676], "magenetomet": [506, 649, 665, 676], "0168": [506, 649, 665, 676], "sp": 506, "old_event_id": 507, "new_event_id": 507, "safeti": [507, 960], "collat": 509, "ancillari": 509, "myevent": 509, "last_myev": 509, "first_": 509, "event_typ": 509, "respet": 509, "n_new_ev": 513, "aa": 514, "ee": 514, "gg": 514, "syncstatu": 514, "99998": 514, "xml_file": 517, "add_ch_typ": [518, 552, 553], "f_pass": 520, "f_stop": 520, "return_copi": 520, "ellipt": 520, "gpass": 520, "gstop": 520, "weren": 520, "triag": [520, 788], "fs1": 521, "fs2": [521, 524], "fstop": 521, "max_tri": 522, "mt_bandwidth": [524, 552, 553], "centr": [524, 552, 553, 620], "xf": 524, "chronux": 524, "partha": 524, "mitra": 524, "hemant": 524, "bokil": 524, "oxford": 524, "00000101": 526, "0000111": 526, "0100101": 526, "0000101": 526, "0000010": 526, "pad_start": 527, "pad_stop": 527, "whichev": [527, 529, 864], "v_from": 527, "v_to": 527, "min_dist": 528, "rhoend": 528, "fmin_cobyla": 528, "combine_xyz": 529, "gk": 529, "frobeniu": 529, "depth_prior": 529, "orient_prior": 530, "fwd_out": [531, 532], "raise_error": 533, "config_path": 534, "mnemn": 534, "mgz_fname": 538, "atlas_id": [538, 709], "labels_aseg": 539, "all_inst": 542, "grown": 543, "territori": 543, "invad": 543, "broadcast": [543, 844, 862], "head_high_r": 544, "orient_to_surfac": 544, "scale_by_dist": 544, "mark_insid": 544, "coregistrationui": 544, "update_mod": 547, "bay": 547, "mackai": 547, "time_pca": 549, "alpha_max": [549, 550], "epsilon": [549, 605], "raw_extra": 551, "orig_unit": 551, "unsplit": 551, "orig_nchan": 551, "nv": 551, "my_raw_object": 551, "subclass": 551, "_read_segment_fil": 551, "mult": 551, "time_slic": [552, 553], "data_fram": [552, 553], "quartil": [552, 553], "mne_fix_mag_coil_typ": 552, "bad_fil": [552, 553], "mne_mark_bad_channel": [552, 553], "europ": [552, 553], "lightgrai": [552, 553, 875, 899], "show_first_samp": [552, 553, 638, 893, 899], "eventloop": [552, 553, 899], "prj": [552, 553, 899], "secondari": [552, 553, 899], "supersampl": [552, 553], "optimum": [552, 553], "drop_small_buff": [552, 553], "projecton": [552, 553], "datetimeindex": [552, 553], "include_default": 555, "fiffv_coil_magnes_offdiag_ref_grad": 555, "fiffv_coil_vv_mag_t3": 555, "mrk_point": 556, "fiffv_coord_": [557, 588], "input_fnam": [560, 561, 565, 568, 569, 570, 576, 578, 581, 584, 700, 702], "pos_fnam": 560, "add_head_tran": 560, "rawartemis123": 560, "batteri": 561, "trigger_sign": 561, "htm": 561, "cms_bit": 561, "cms_high": 561, "rawboxi": 562, "vhdr_fname": 563, "heogl": 563, "heogr": 563, "veogb": 563, "pdf_fname": 564, "config_fnam": 564, "head_shape_fnam": 564, "sort_by_ch_nam": 564, "e64": 564, "rawbti": 564, "date_format": 565, "rawcnt": 565, "int16": 565, "int32": 565, "numsampl": 565, "system_clock": 566, "rawctf": 566, "rawcurri": 567, "dap": [567, 694], "rs3": 567, "dpa": [567, 694], "cef": [567, 694], "storag": [568, 731], "sao2": 568, "subsecond": 568, "latin1": [569, 694, 700], "rawegi": 570, "trev": 570, "e1": [570, 707], "e2": [570, 707], "e3": [570, 707], "raweximia": 571, "find_overlap": 572, "overlap_threshold": 572, "raweyelink": 572, "occular": 572, "blink_l": 572, "blink_r": 572, "blink_both": 572, "data_nam": [573, 701, 705], "ft_datatype_raw": 573, "binfil": 575, "rawfil": 575, "opmeg": 575, "rawgdf": 576, "rawhitachi": 577, "3x5": 577, "etg": 577, "7000": 577, "d1": 577, "s2": 577, "d2": 577, "s3": 577, "d3": 577, "s4": 577, "d4": 577, "s5": 577, "d5": 577, "s6": 577, "d6": 577, "s7": 577, "d7": 577, "s8": 577, "ft7": 577, "tp7": 577, "3x3": [577, 605], "laid": 577, "d8": 577, "s9": 577, "d9": 577, "s10": 577, "3x11": 577, "d10": 577, "s11": 577, "d11": 577, "s12": 577, "d12": 577, "s13": 577, "d13": 577, "s14": 577, "d14": 577, "s16": 577, "d16": 577, "s17": 577, "d17": 577, "s18": 577, "stim_cod": 578, "allow_unknown_format": [578, 702], "bad_coil": 578, "laboratori": [578, 702], "rawnedf": 579, "neuroelectr": 579, "exclude_fname_pattern": 580, "rawneuralynx": 580, "glob": 580, "recording_open": 580, "dsplowcutfrequ": 580, "dsphighcutfrequ": 580, "minimumlowpass": 580, "neuralynxio": 580, "doctest": [580, 655], "nlx_reader": 580, "file_head": 580, "rawnicolet": 581, "rawnihon": 582, "nihon": 582, "kohden": 582, "rawnirx": 583, "nosatflag": 583, "wlx": 583, "nosatflags_wlx": 583, "rawnsx": 584, "neuralsg": 584, "rawpersyst": 585, "rawsnirf": 586, "jnir": 586, "indent": [587, 853], "read_limit": [587, 853], "max_str": [587, 853], "mne_show_fiff": 587, "mri_tal": [588, 831], "data_typ": 589, "reset_rang": 589, "fifft_float": 589, "fifft_doubl": 589, "fifft_dau_pack16": 589, "uniti": 589, "grow_outsid": 590, "standard_devi": 593, "relative_radii": 601, "radii": [601, 741], "n_events_in": 603, "n_events_out": 603, "1111111111111111": [605, 606, 611, 612, 617, 621, 622], "time_func": 608, "inv_split": [611, 612], "snr_est": 613, "unregular": 613, "biggest": 613, "chi": 613, "normalis": [614, 615], "willb": [614, 615], "n_orient_inv": [614, 615, 617], "n_orient_fwd": [614, 615, 617], "pca_var": [614, 615], "cog_err": 620, "graviti": 620, "cog": 620, "maxrad_ext": 620, "peak_amp": 620, "sum_amp": 620, "surf_nam": [624, 711], "mne_docs_kind": 626, "mne_docs_vers": 626, "grad_reject": 628, "mag_reject": 628, "eeg_reject": 628, "eog_reject": 628, "explanatori": [637, 691], "info_": 637, "intercept_": 637, "instabl": 638, "debat": 638, "zca": 638, "tol_fastica": 638, "tol_picard": 638, "current_fit": 638, "unfit": 638, "pre_whitener_": 638, "pca_components_": 638, "pca_mean_": 638, "pca_explained_variance_": 638, "scrap": 638, "n_samples_": 638, "ummix": [638, 639], "supra": [638, 640], "ecg_idx": 638, "kuiper": 638, "eog_idx": 638, "paralyz": 638, "threefold": 638, "farthest": 638, "msucl": 638, "ref_ica": 638, "ref_idx": 638, "unclean": 638, "pvaf": 638, "usecas": [638, 893], "plot_std": [638, 889, 891], "image_arg": [638, 789, 790, 791, 795, 796, 797, 798, 889, 891], "psd_arg": [638, 889, 891], "topomap_axi": [638, 891], "image_axi": [638, 891], "erp_axi": [638, 891], "spectrum_axi": [638, 891], "variance_axi": [638, 891], "logarithm": [638, 891], "ass": [638, 892], "n_ica_compon": [638, 892], "sublabel": [638, 892], "pearsonr": 638, "skew": 638, "correct_overlap": 639, "overlapp_correct": 639, "evokeds_": 639, "event_id_": 639, "correct_overlap_": 639, "n_event_typ": 639, "bad_perc": 640, "bad_peak": 640, "bad_flat": 640, "uncommon": 640, "rotation_velocity_limit": 642, "translation_velocity_limit": 642, "lm_cutoff": 646, "epoch_threshold": 646, "bw_method": 646, "intrins": 646, "hjorth": 646, "gaussian_kd": 646, "n_legendre_term": 647, "lap": [647, 733], "inst_csd": 647, "n_imbal": 648, "multipol": [648, 676], "bad_condit": [649, 665, 676], "extended_proj": [649, 665, 676], "ill": [649, 665, 676], "n_meg": [649, 665], "n_moment": 649, "n_good_meg": 649, "reg_moment": 649, "n_use_in": 649, "dagger": 649, "phi": 649, "phi_in": 649, "data_meg_good": 649, "raw_ev": [650, 651], "00025": 650, "avg_ref": [650, 651], "ecg_ev": [650, 666, 669], "0005": [651, 946], "e0g": 651, "magentomet": 652, "quadratur": 652, "corrmapplugin1": 653, "categoris": 653, "preexist": 653, "template_fig": 653, "labelled_": 653, "mag_pick": 654, "grad_pick": 654, "r_peak_events_arrai": 655, "thresh": [656, 667, 671, 685, 776, 777, 779, 780, 844], "interp_thresh": 657, "insts_bad": 657, "avg_error": 658, "max_error": 658, "h3": 658, "hv3": 658, "n_calibration_point": 658, "show_offset": 658, "11879": 659, "increasingli": 659, "unpredict": 661, "px": 663, "l_x": 663, "r_pupil": 663, "n_neighbor": [664, 672], "distance_metr": 664, "hyperparamet": 664, "noisy_ch": [664, 665], "flat_ch": 665, "scores_flat": 665, "limits_flat": 665, "st_fix": [665, 676], "d_k": 665, "mu_d": 665, "textrm": 665, "return_ecg": 666, "ch_ecg": [666, 669], "average_puls": [666, 669], "ecg_sourc": 669, "eog_sourc": 670, "max_peak_dist": 671, "voxels_max": 671, "use_min": 671, "hypointens": 671, "hyperintens": 671, "elec_imag": 671, "pressur": 672, "craniotomi": 672, "reg_affin": [673, 832, 833, 834], "montage_warp": 673, "l_rate": 674, "w_chang": 674, "anneal_deg": 674, "anneal_step": 674, "n_subgauss": 674, "kurt_siz": 674, "ext_block": 674, "blowup": [674, 754], "blowup_fac": 674, "n_small_angl": 674, "use_bia": 674, "kurtosi": 674, "unmixing_matrix": 674, "return_max_it": 674, "bad_limit": 675, "forth": 676, "relicens": 676, "permiss": 676, "certifi": 676, "seamless": 676, "abramowitz": 676, "stegun": 676, "us2006031038": 676, "us6876196": 676, "wo2005067789": 676, "wo2005078467": 676, "wo2006114473": 676, "lawyer": 676, "raw_er": 677, "from_raw": 677, "inject": 677, "raw_er_prepar": 677, "provision": 684, "x0": [685, 774], "peak_loc": 685, "peak_mag": 685, "nathanael": 685, "yoder": 685, "ncyoder": 685, "purdu": 685, "36900026": 685, "76007351": 685, "imb_cal": 687, "t_raw": 690, "t_other": 690, "n_picks_ref": 691, "epochs_no_av": 691, "epochs_clean": 691, "n_parcel": 693, "amrk": 694, "patch_stat": [696, 718], "s_id": 696, "epochseeglab": 700, "eventtyp": 700, "trialinfo_column": 701, "epochskit": 702, "mne_browse_raw": 703, "sidecar": 704, "timelock": 705, "_fwd": 708, "annot_fnam": [711, 941], "mne_make_morph_map": 713, "morph_map": 713, "left_map": 713, "right_map": 713, "asterisk": 716, "source_morph": 717, "return_dict": 719, "file_format": [719, 944], "voxels": [719, 944], "xra": [719, 944], "yra": [719, 944], "zra": [719, 944], "cra": [719, 944], "n_face": [719, 722, 944], "return_al": 721, "fname_in": 722, "clockwis": [722, 850], "counterclockwis": 722, "spcecifi": 723, "bem_nam": 725, "subjects_from": [725, 728], "ba3a": 726, "cfg": 726, "skip_fiduci": 727, "oserror": 727, "src_name": 728, "my_source_spac": 728, "mne_sensitivity_map": 729, "on_bad": 730, "cache_dir": 731, "output_format": 734, "howto": 734, "asctim": 734, "levelnam": 734, "return_old_level": 735, "add_fram": [735, 839], "old_level": 735, "memmap_min_s": 736, "megabyt": 736, "ox": 738, "oi": 738, "iii": 738, "get_stim_channel": 739, "stim_data": 739, "inhomogen": 742, "poisson": 742, "stc_true": [744, 745, 746, 747, 748, 749, 750, 751], "stc_est": [744, 745, 746, 747, 748, 749, 750, 751], "ppe": 746, "dfrac": [746, 751], "sum_i": [746, 751], "s_i": [746, 751], "tp": [747, 748], "fn": 748, "2q": 749, "r_k": 749, "r_l": 749, "mathbb": 749, "dle": 749, "terminologi": 749, "actual_snr": 753, "sti001": 754, "allow_overlap": 756, "coo_matrix": [759, 760, 761, 762, 763, 764, 765, 769], "additit": 760, "remap_vertic": [762, 765], "reassign": [762, 765], "pval_correct": [767, 773], "n_bootstrap": 768, "spmatrix": [769, 776, 777, 779, 780], "n_ob": 769, "chan_adj": 769, "5600x5600": 769, "27076": 769, "slowest": 770, "a2b2": 770, "greenhous": 770, "geisser": 770, "f_val": 770, "homoscedast": 771, "kruskal": 771, "walli": 771, "pvalu": 772, "yekuti": 773, "negcorr": 773, "n_regressor": 774, "n_cond": 775, "enorm": 775, "overload": 775, "subepoch": 775, "n_predictor": 775, "time_window_length": 775, "t_power": [776, 777, 779, 780], "check_disjoint": [776, 777, 779, 780], "subarrai": 776, "kth": 776, "unconnect": [776, 777, 779, 780], "disjoint": [776, 777, 779, 780], "rv_continu": [776, 777, 779, 780], "untract": 778, "spatial_exclud": [779, 780], "p_thresh": 781, "equal_var": 783, "ball": 784, "volu": 784, "do_neighbor_vert": 786, "do_neighbor_tri": 786, "show_path": 788, "expedi": 789, "inst_tfr": [789, 790, 791, 795, 796, 797, 798], "unmask": [789, 790, 791, 795, 796, 797, 798], "frequency_window": [789, 790, 791, 795, 796, 797, 798], "my_obj": 791, "as_cov": 792, "pick_frequ": 792, "getitem_epochspectrum_return": [793, 794], "ci_alpha": [793, 794, 799, 800], "latex": [793, 794, 799, 800], "n_taper": [795, 796, 814, 824], "12676": [795, 796], "epochtfr": [795, 796], "pointer": [795, 796], "getitem_tfr_return": [797, 798], "raw_tfr": [797, 798], "subscript": [797, 798, 799, 800], "freq_indic": [797, 798, 799, 800], "getitem_spectrum_return": [799, 800], "sixth": [799, 800], "half_nbw": 808, "kmax": 808, "nw": 808, "half_bw": 808, "bw": 808, "f0": 808, "tridiagon": 808, "jw": 809, "jnw": 809, "tx": 811, "n_step": [811, 819, 844], "_cycl": [812, 822, 823, 824, 826, 827], "desired_fwhm": [812, 822], "this_fwhm": [812, 822], "half_max": [812, 822], "get_window": [815, 900], "avg_power_itc": [823, 824], "power_": [823, 824], "interrel": [823, 824, 826, 827, 959], "undermin": [824, 827], "intertri": [825, 828], "st_power": 825, "from_str": 831, "to_str": 831, "reg_img": 832, "trans2": 833, "shear": 834, "affine_registr": 834, "contextlib": 838, "contextmanag": 838, "my_fnam": 838, "moin": 840, "pythondecoratorlibrari": 840, "ignore_namespac": 841, "travers": 841, "_funct": 842, "dec": 842, "filler": 842, "5880": 842, "offscreen": 844, "buggi": 844, "playbackspe": [844, 965], "colormaprang": [844, 846, 965], "distributed_source_pow": 844, "vertexselect": [844, 965], "add_skul": [844, 965], "remove_data": 844, "remove_head": 844, "remove_label": 844, "remove_annot": 844, "remove_sensor": 844, "remove_skul": 844, "remove_text": 844, "remove_volume_label": 844, "timeview": 844, "get_picked_point": 844, "geo": 844, "ctab": 844, "lh_ctab": 844, "rh_ctab": 844, "rbga": 844, "icefir": 844, "rocket": 844, "nvtx": 844, "font": [844, 905], "add_scalar_bar": 844, "title_font_s": 844, "hex": [844, 870], "n_coord": 844, "stereotax": 844, "coord_as_vert": 844, "1cm": 844, "subdir": 844, "max_dist": 844, "eeg_color": [844, 862], "to_rgba_arrai": [844, 862], "justif": 844, "update_text": 844, "dilat": 844, "apply_auto_sc": 844, "clear_glyph": 844, "zenith": [844, 914], "plot_time_cours": [844, 965], "vertex_id": [844, 923], "plot_time_lin": [844, 965], "reset_view": [844, 965], "restore_user_sc": [844, 965], "bitrat": 844, "imageio": 844, "mov": 844, "n_frame": 844, "separate_canva": 844, "set_data_smooth": [844, 965], "set_playback_spe": [844, 965], "playback": [844, 920], "set_time_interpol": [844, 965], "set_time_point": [844, 965], "time_idx": 844, "setup_time_view": [844, 965], "time_interpol": 844, "toggle_interfac": [844, 965], "toggle_playback": [844, 965], "update_lut": 844, "imdata": 845, "onclick": [845, 965], "backend_bas": 845, "bg": [845, 848], "field_strength_meg": 846, "field_strength_eeg": 846, "set_contour": [846, 965], "set_ratio": 848, "ax_im": 848, "node_nam": 850, "start_between": 850, "group_sep": 850, "n_node_nam": 850, "fname_1": 853, "fname_2": 853, "smooth_shad": [854, 912], "_render": 854, "undocu": 854, "backend_us": [856, 858], "ch_dx": 859, "teal": 861, "onselect": [863, 908], "rectangleselector": [863, 908], "show_indic": 864, "halfwai": 864, "colorbarbas": 865, "polarax": 868, "type_snr": 869, "type_pow": 869, "type_resid": 869, "invert_i": 870, "unweight": 870, "n_evok": 870, "hexadecim": 870, "equal_spac": 879, "1f77b4": 887, "fscale": [887, 894], "alim": [887, 894], "pointsiz": 902, "bet": 902, "bluish": 903, "fig_numb": 905, "cone": 905, "axesimag": 908, "contourset": 908, "backend_nam": [911, 915, 930, 931], "old_backend_nam": [911, 915], "inlin": [911, 951, 956], "jupyterlab": 911, "colab": 911, "antialia": [912, 951], "depth_peel": 912, "multi_sampl": 912, "hide_sensor": 916, "dn": 916, "include_ev": 925, "exclude_ev": 925, "bi": 925, "untouch": 929, "hsv": 941, "table_nam": 941, "colort": 941, "create_stamp": 944, "appnop": 946, "nope": 946, "nsappsleepdis": 946, "tempt": 946, "benfrederickson": 946, "dont": 946, "stackoverflow": 946, "21752259": 946, "write_": 946, "resid": 946, "plot_find_ecg_artifact": 946, "ordinarili": 946, "multithread": [946, 951], "intel": [946, 951, 955], "mkl": 946, "openmp": 946, "omp_num_thread": 946, "openblas_num_thread": 946, "num_cpu": 946, "sample_audvis_eog": 946, "implic": 946, "simplist": 946, "nvidia": [946, 951], "epochs_path": 946, "protrud": 946, "shrunken": 946, "dura": 946, "mri_norm": 946, "xopt": 946, "gentl": 946, "listserv": 946, "recon_al": 946, "autorecon2": 946, "autorecon3": 946, "w3school": 948, "carpentri": 948, "lesson": 948, "cond1": 949, "cond2": 949, "addpath": 949, "pop_fileio": 949, "pop_eegfiltnew": 949, "pop_averef": 949, "pop_select": 949, "pop_runica": 949, "pop_binica": 949, "pop_compprop": 949, "comp_num": 949, "winhandl": 949, "comphead": 949, "pop_selectcomp": 949, "list_of_components_to_exclud": 949, "pop_epoch": 949, "eeg_epoch": 949, "pop_timtopo": 949, "pop_compareerp": 949, "eeg_epochs1": 949, "eeg_epochs2": 949, "pop_saveset": 949, "lfreq": 949, "hfreq": 949, "filtered_raw": 949, "nb_conda_kernel": 951, "osmesa": 951, "xvfb": 951, "mesalib": 951, "git": [951, 952], "driver": 951, "test_filt": 951, "swr": 951, "cento": 951, "mesa_gl_version_overrid": 951, "rend": 951, "msaa": 951, "libgl_always_softwar": 951, "prebuilt": 951, "xzvf": 951, "mesa_18": 951, "6_centos_lib": 951, "tgz": 951, "libgl_drivers_path": 951, "pwd": 951, "ld_library_path": 951, "went": [951, 952], "glxinfo": 951, "uninstal": [951, 960], "20348": 952, "sp0": 952, "msc": 952, "amd64": 952, "miniconda3": 952, "intel64": 952, "genuineintel": 952, "dev67": 952, "gb12384562": 952, "qtagg": 952, "d92815a": 952, "gallium": 952, "pyqt5": [952, 956], "modulenotfounderror": 952, "bashrc": [952, 958], "zprofil": 952, "zsh": [952, 958], "tcsh": [953, 958], "ubuntu": [953, 955, 958], "bionic": 955, "beaver": 955, "1_0": 955, "appl": 955, "silicon": 955, "python_1": 955, "prioriti": 956, "unlock": 956, "vscode": 956, "microsoft": 956, "anaconda3": 956, "paid": 956, "profession": 956, "miniforg": 957, "mambaforg": 957, "cpython": 957, "poetri": 957, "venv": 957, "unproblemat": 957, "leopard": 958, "powerpc": 958, "runtim": 958, "mne_convert_mne_data": 958, "mne_epochs2mat": 958, "mne_raw2mat": 958, "mne_simu": 958, "xcode": 958, "xquartz": 958, "x11": 958, "libxt": 958, "dylib": 958, "bak": 958, "flat_namespac": 958, "netpbm": 958, "brew": 958, "app": 958, "path_to_desired_install_loc": 958, "zxvf": 958, "path_to_archive_fil": 958, "pkg": 958, "untrust": 958, "matlab_root": 958, "r2018b": 958, "undefin": 958, "mne_setup_sh": 958, "csh": 958, "mne_setup": 958, "path_to_mn": 958, "path_to_matlab": 958, "emul": 958, "zshrc": 958, "cshrc": 958, "tcshrc": 958, "setenv": [958, 961], "mne_opengl_test": 958, "redraw": 958, "spent": 958, "revolut": 958, "interrupt": 958, "glx": 958, "nondirect": 958, "IT": 958, "vnc": 958, "libxp": 958, "launchpad": 958, "7ezeehio": 958, "ppa": 958, "zeehio": 958, "libxp6": 958, "libgfortran": 958, "libfortran": 958, "gnu": 958, "maxdepth": 958, "interoper": 959, "reimplement": 959, "connectom": 959, "alphacsc": 959, "pactool": 959, "microst": 959, "conpi": 959, "eelbrain": 959, "posthoc": 959, "prep": 959, "pyprep": 959, "sesam": 959, "sesameeg": 959, "niseq": 959, "plugin": 959, "meggi": 959, "name_of_environ": 960, "fool": 960, "proof": 960, "old_mn": 960, "dep": 960, "pubsw": 961, "modular": 962, "qt3d": 962, "babymeg": 962, "tmsi": 962, "refa": 962, "brainamp": 962, "ant": 962, "eegosport": 962, "gusbamp": 962, "bdfl": 964, "figureclos": 965, "disable_ui_ev": 965, "unlink": 965, "unsubscrib": 965}, "objects": {"": [[14, 0, 0, "-", "mne"]], "mne": [[326, 1, 1, "", "AcqParserFIF"], [327, 1, 1, "", "Annotations"], [328, 1, 1, "", "BaseEpochs"], [329, 1, 1, "", "BiHemiLabel"], [330, 1, 1, "", "Covariance"], [331, 1, 1, "", "Dipole"], [332, 1, 1, "", "DipoleFixed"], [333, 1, 1, "", "Epochs"], [334, 1, 1, "", "EpochsArray"], [335, 1, 1, "", "Evoked"], [336, 1, 1, "", "EvokedArray"], [337, 1, 1, "", "Forward"], [338, 1, 1, "", "Info"], [339, 1, 1, "", "Label"], [340, 1, 1, "", "MixedSourceEstimate"], [341, 1, 1, "", "MixedVectorSourceEstimate"], [342, 1, 1, "", "Projection"], [343, 1, 1, "", "Report"], [344, 1, 1, "", "SourceEstimate"], [345, 1, 1, "", "SourceMorph"], [346, 1, 1, "", "SourceSpaces"], [347, 1, 1, "", "VectorSourceEstimate"], [348, 1, 1, "", "VolSourceEstimate"], [349, 1, 1, "", "VolVectorSourceEstimate"], [350, 4, 1, "", "add_reference_channels"], [351, 4, 1, "", "add_source_space_distances"], [352, 4, 1, "", "annotations_from_events"], [353, 4, 1, "", "apply_forward"], [354, 4, 1, "", "apply_forward_raw"], [355, 4, 1, "", "average_forward_solutions"], [18, 0, 0, "-", "baseline"], [9, 0, 0, "-", "beamformer"], [8, 0, 0, "-", "bem"], [380, 4, 1, "", "channel_indices_by_type"], [381, 4, 1, "", "channel_type"], [13, 0, 0, "-", "channels"], [13, 0, 0, "-", "chpi"], [424, 4, 1, "", "combine_evoked"], [425, 4, 1, "", "compute_covariance"], [426, 4, 1, "", "compute_proj_epochs"], [427, 4, 1, "", "compute_proj_evoked"], [428, 4, 1, "", "compute_proj_raw"], [429, 4, 1, "", "compute_rank"], [430, 4, 1, "", "compute_raw_covariance"], [431, 4, 1, "", "compute_source_morph"], [432, 4, 1, "", "concatenate_epochs"], [433, 4, 1, "", "concatenate_events"], [434, 4, 1, "", "concatenate_raws"], [435, 4, 1, "", "convert_forward_solution"], [439, 4, 1, "", "count_annotations"], [440, 4, 1, "", "count_events"], [444, 4, 1, "", "create_default_subject"], [445, 4, 1, "", "create_info"], [10, 0, 0, "-", "cuda"], [3, 0, 0, "-", "datasets"], [484, 4, 1, "", "decimate_surface"], [4, 0, 0, "-", "decoding"], [504, 4, 1, "", "dig_mri_distances"], [9, 0, 0, "-", "dipole"], [5, 0, 0, "-", "epochs"], [510, 4, 1, "", "equalize_channels"], [5, 0, 0, "-", "event"], [514, 4, 1, "", "events_from_annotations"], [6, 0, 0, "-", "export"], [519, 4, 1, "", "extract_label_time_course"], [13, 0, 0, "-", "filter"], [526, 4, 1, "", "find_events"], [527, 4, 1, "", "find_stim_steps"], [528, 4, 1, "", "fit_dipole"], [533, 4, 1, "", "get_config"], [534, 4, 1, "", "get_config_path"], [535, 4, 1, "", "get_head_surf"], [536, 4, 1, "", "get_meg_helmet_surf"], [537, 4, 1, "", "get_montage_volume_labels"], [538, 4, 1, "", "get_volume_labels_from_aseg"], [539, 4, 1, "", "get_volume_labels_from_src"], [540, 4, 1, "", "grade_to_tris"], [541, 4, 1, "", "grade_to_vertices"], [542, 4, 1, "", "grand_average"], [543, 4, 1, "", "grow_labels"], [545, 4, 1, "", "head_to_mni"], [546, 4, 1, "", "head_to_mri"], [9, 0, 0, "-", "inverse_sparse"], [15, 0, 0, "-", "io"], [591, 4, 1, "", "label_sign_flip"], [592, 4, 1, "", "labels_to_stc"], [593, 4, 1, "", "make_ad_hoc_cov"], [594, 4, 1, "", "make_bem_model"], [595, 4, 1, "", "make_bem_solution"], [596, 4, 1, "", "make_field_map"], [597, 4, 1, "", "make_fixed_length_epochs"], [598, 4, 1, "", "make_fixed_length_events"], [599, 4, 1, "", "make_forward_dipole"], [600, 4, 1, "", "make_forward_solution"], [601, 4, 1, "", "make_sphere_model"], [602, 4, 1, "", "match_channel_orders"], [603, 4, 1, "", "merge_events"], [9, 0, 0, "-", "minimum_norm"], [624, 4, 1, "", "morph_labels"], [625, 4, 1, "", "morph_source_spaces"], [626, 4, 1, "", "open_docs"], [627, 4, 1, "", "open_report"], [628, 4, 1, "", "parse_config"], [629, 4, 1, "", "pick_channels"], [630, 4, 1, "", "pick_channels_cov"], [631, 4, 1, "", "pick_channels_forward"], [632, 4, 1, "", "pick_channels_regexp"], [633, 4, 1, "", "pick_events"], [634, 4, 1, "", "pick_info"], [635, 4, 1, "", "pick_types"], [636, 4, 1, "", "pick_types_forward"], [13, 0, 0, "-", "preprocessing"], [693, 4, 1, "", "random_parcellation"], [694, 4, 1, "", "read_annotations"], [695, 4, 1, "", "read_bem_solution"], [696, 4, 1, "", "read_bem_surfaces"], [697, 4, 1, "", "read_cov"], [698, 4, 1, "", "read_dipole"], [699, 4, 1, "", "read_epochs"], [700, 4, 1, "", "read_epochs_eeglab"], [701, 4, 1, "", "read_epochs_fieldtrip"], [702, 4, 1, "", "read_epochs_kit"], [703, 4, 1, "", "read_events"], [704, 4, 1, "", "read_evoked_besa"], [705, 4, 1, "", "read_evoked_fieldtrip"], [706, 4, 1, "", "read_evokeds"], [707, 4, 1, "", "read_evokeds_mff"], [708, 4, 1, "", "read_forward_solution"], [709, 4, 1, "", "read_freesurfer_lut"], [710, 4, 1, "", "read_label"], [711, 4, 1, "", "read_labels_from_annot"], [712, 4, 1, "", "read_lta"], [713, 4, 1, "", "read_morph_map"], [714, 4, 1, "", "read_proj"], [715, 4, 1, "", "read_reject_parameters"], [716, 4, 1, "", "read_source_estimate"], [717, 4, 1, "", "read_source_morph"], [718, 4, 1, "", "read_source_spaces"], [719, 4, 1, "", "read_surface"], [720, 4, 1, "", "read_talxfm"], [721, 4, 1, "", "read_trans"], [722, 4, 1, "", "read_tri"], [723, 4, 1, "", "read_vectorview_selection"], [724, 4, 1, "", "rename_channels"], [725, 4, 1, "", "scale_bem"], [726, 4, 1, "", "scale_labels"], [727, 4, 1, "", "scale_mri"], [728, 4, 1, "", "scale_source_space"], [729, 4, 1, "", "sensitivity_map"], [730, 4, 1, "", "set_bipolar_reference"], [731, 4, 1, "", "set_cache_dir"], [732, 4, 1, "", "set_config"], [733, 4, 1, "", "set_eeg_reference"], [734, 4, 1, "", "set_log_file"], [735, 4, 1, "", "set_log_level"], [736, 4, 1, "", "set_memmap_min_size"], [737, 4, 1, "", "setup_source_space"], [738, 4, 1, "", "setup_volume_source_space"], [19, 0, 0, "-", "simulation"], [759, 4, 1, "", "spatial_dist_adjacency"], [760, 4, 1, "", "spatial_inter_hemi_adjacency"], [761, 4, 1, "", "spatial_src_adjacency"], [762, 4, 1, "", "spatial_tris_adjacency"], [763, 4, 1, "", "spatio_temporal_dist_adjacency"], [764, 4, 1, "", "spatio_temporal_src_adjacency"], [765, 4, 1, "", "spatio_temporal_tris_adjacency"], [766, 4, 1, "", "split_label"], [21, 0, 0, "-", "stats"], [784, 4, 1, "", "stc_near_sensors"], [785, 4, 1, "", "stc_to_label"], [788, 4, 1, "", "sys_info"], [22, 0, 0, "-", "time_frequency"], [830, 4, 1, "", "transform_surface_to"], [13, 0, 0, "-", "transforms"], [838, 4, 1, "", "use_coil_def"], [839, 1, 1, "", "use_log_level"], [10, 0, 0, "-", "utils"], [842, 4, 1, "", "verbose"], [843, 4, 1, "", "vertex_to_mni"], [23, 0, 0, "-", "viz"], [932, 4, 1, "", "what"], [933, 4, 1, "", "write_bem_solution"], [934, 4, 1, "", "write_bem_surfaces"], [935, 4, 1, "", "write_cov"], [936, 4, 1, "", "write_events"], [937, 4, 1, "", "write_evokeds"], [938, 4, 1, "", "write_forward_solution"], [939, 4, 1, "", "write_head_bem"], [940, 4, 1, "", "write_label"], [941, 4, 1, "", "write_labels_to_annot"], [942, 4, 1, "", "write_proj"], [943, 4, 1, "", "write_source_spaces"], [944, 4, 1, "", "write_surface"], [945, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[326, 2, 1, "", "__getitem__"], [326, 2, 1, "", "__len__"], [326, 3, 1, "", "categories"], [326, 3, 1, "", "events"], [326, 2, 1, "", "get_condition"]], "mne.Annotations": [[327, 2, 1, "", "__add__"], [327, 2, 1, "", "__getitem__"], [327, 2, 1, "", "__iter__"], [327, 2, 1, "", "__len__"], [327, 2, 1, "", "append"], [327, 2, 1, "", "copy"], [327, 2, 1, "", "count"], [327, 2, 1, "", "crop"], [327, 2, 1, "", "delete"], [327, 3, 1, "", "orig_time"], [327, 2, 1, "", "rename"], [327, 2, 1, "", "save"], [327, 2, 1, "", "set_durations"], [327, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[329, 2, 1, "", "__add__"], [329, 2, 1, "", "__len__"], [329, 2, 1, "", "__sub__"]], "mne.Covariance": [[330, 2, 1, "", "__add__"], [330, 2, 1, "", "__contains__"], [330, 2, 1, "", "__getitem__"], [330, 2, 1, "", "__iter__"], [330, 2, 1, "", "__len__"], [330, 2, 1, "", "as_diag"], [330, 3, 1, "", "ch_names"], [330, 2, 1, "", "clear"], [330, 2, 1, "", "copy"], [330, 3, 1, "", "data"], [330, 2, 1, "", "fromkeys"], [330, 2, 1, "", "get"], [330, 2, 1, "", "items"], [330, 2, 1, "", "keys"], [330, 3, 1, "", "nfree"], [330, 2, 1, "", "pick_channels"], [330, 2, 1, "", "plot"], [330, 2, 1, "", "plot_topomap"], [330, 2, 1, "", "pop"], [330, 2, 1, "", "popitem"], [330, 2, 1, "", "save"], [330, 2, 1, "", "setdefault"], [330, 2, 1, "", "update"], [330, 2, 1, "", "values"]], "mne.Dipole": [[331, 2, 1, "", "__getitem__"], [331, 2, 1, "", "__len__"], [331, 2, 1, "", "copy"], [331, 2, 1, "", "crop"], [331, 2, 1, "", "plot_amplitudes"], [331, 2, 1, "", "plot_locations"], [331, 2, 1, "", "save"], [331, 2, 1, "", "time_as_index"], [331, 3, 1, "", "times"], [331, 2, 1, "", "to_mni"], [331, 2, 1, "", "to_mri"], [331, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[332, 3, 1, "", "ch_names"], [332, 2, 1, "", "copy"], [332, 2, 1, "", "crop"], [332, 2, 1, "", "decimate"], [332, 2, 1, "", "plot"], [332, 2, 1, "", "save"], [332, 2, 1, "", "shift_time"], [332, 2, 1, "", "time_as_index"], [332, 3, 1, "", "times"], [332, 3, 1, "", "tmax"], [332, 3, 1, "", "tmin"]], "mne.Epochs": [[333, 2, 1, "", "__contains__"], [333, 2, 1, "", "__getitem__"], [333, 2, 1, "", "__iter__"], [333, 2, 1, "", "__len__"], [333, 2, 1, "", "add_annotations_to_metadata"], [333, 2, 1, "", "add_channels"], [333, 2, 1, "", "add_proj"], [333, 2, 1, "", "add_reference_channels"], [333, 2, 1, "", "anonymize"], [333, 2, 1, "", "apply_baseline"], [333, 2, 1, "", "apply_function"], [333, 2, 1, "", "apply_hilbert"], [333, 2, 1, "", "apply_proj"], [333, 2, 1, "", "as_type"], [333, 2, 1, "", "average"], [333, 3, 1, "", "ch_names"], [333, 3, 1, "", "compensation_grade"], [333, 2, 1, "", "compute_psd"], [333, 2, 1, "", "compute_tfr"], [333, 2, 1, "", "copy"], [333, 2, 1, "", "crop"], [333, 2, 1, "", "decimate"], [333, 2, 1, "", "del_proj"], [333, 2, 1, "", "drop"], [333, 2, 1, "", "drop_bad"], [333, 2, 1, "", "drop_channels"], [333, 2, 1, "", "drop_log_stats"], [333, 2, 1, "", "equalize_event_counts"], [333, 2, 1, "", "export"], [333, 3, 1, "", "filename"], [333, 2, 1, "", "filter"], [333, 2, 1, "", "get_annotations_per_epoch"], [333, 2, 1, "", "get_channel_types"], [333, 2, 1, "", "get_data"], [333, 2, 1, "", "get_montage"], [333, 2, 1, "", "interpolate_bads"], [333, 2, 1, "", "iter_evoked"], [333, 2, 1, "", "load_data"], [333, 3, 1, "", "metadata"], [333, 2, 1, "", "next"], [333, 2, 1, "", "pick"], [333, 2, 1, "", "pick_channels"], [333, 2, 1, "", "pick_types"], [333, 2, 1, "", "plot"], [333, 2, 1, "", "plot_drop_log"], [333, 2, 1, "", "plot_image"], [333, 2, 1, "", "plot_projs_topomap"], [333, 2, 1, "", "plot_psd"], [333, 2, 1, "", "plot_psd_topo"], [333, 2, 1, "", "plot_psd_topomap"], [333, 2, 1, "", "plot_sensors"], [333, 2, 1, "", "plot_topo_image"], [333, 3, 1, "", "proj"], [333, 2, 1, "", "rename_channels"], [333, 2, 1, "", "reorder_channels"], [333, 2, 1, "", "resample"], [333, 2, 1, "", "reset_drop_log_selection"], [333, 2, 1, "", "save"], [333, 2, 1, "", "savgol_filter"], [333, 2, 1, "", "set_annotations"], [333, 2, 1, "", "set_channel_types"], [333, 2, 1, "", "set_eeg_reference"], [333, 2, 1, "", "set_meas_date"], [333, 2, 1, "", "set_montage"], [333, 2, 1, "", "shift_time"], [333, 2, 1, "", "standard_error"], [333, 2, 1, "", "subtract_evoked"], [333, 2, 1, "", "time_as_index"], [333, 3, 1, "", "times"], [333, 3, 1, "", "tmax"], [333, 3, 1, "", "tmin"], [333, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[334, 2, 1, "", "__contains__"], [334, 2, 1, "", "__getitem__"], [334, 2, 1, "", "__iter__"], [334, 2, 1, "", "__len__"], [334, 2, 1, "", "add_annotations_to_metadata"], [334, 2, 1, "", "add_channels"], [334, 2, 1, "", "add_proj"], [334, 2, 1, "", "add_reference_channels"], [334, 2, 1, "", "anonymize"], [334, 2, 1, "", "apply_baseline"], [334, 2, 1, "", "apply_function"], [334, 2, 1, "", "apply_hilbert"], [334, 2, 1, "", "apply_proj"], [334, 2, 1, "", "as_type"], [334, 2, 1, "", "average"], [334, 3, 1, "", "ch_names"], [334, 3, 1, "", "compensation_grade"], [334, 2, 1, "", "compute_psd"], [334, 2, 1, "", "compute_tfr"], [334, 2, 1, "", "copy"], [334, 2, 1, "", "crop"], [334, 2, 1, "", "decimate"], [334, 2, 1, "", "del_proj"], [334, 2, 1, "", "drop"], [334, 2, 1, "", "drop_bad"], [334, 2, 1, "", "drop_channels"], [334, 2, 1, "", "drop_log_stats"], [334, 2, 1, "", "equalize_event_counts"], [334, 2, 1, "", "export"], [334, 3, 1, "", "filename"], [334, 2, 1, "", "filter"], [334, 2, 1, "", "get_annotations_per_epoch"], [334, 2, 1, "", "get_channel_types"], [334, 2, 1, "", "get_data"], [334, 2, 1, "", "get_montage"], [334, 2, 1, "", "interpolate_bads"], [334, 2, 1, "", "iter_evoked"], [334, 2, 1, "", "load_data"], [334, 3, 1, "", "metadata"], [334, 2, 1, "", "next"], [334, 2, 1, "", "pick"], [334, 2, 1, "", "pick_channels"], [334, 2, 1, "", "pick_types"], [334, 2, 1, "", "plot"], [334, 2, 1, "", "plot_drop_log"], [334, 2, 1, "", "plot_image"], [334, 2, 1, "", "plot_projs_topomap"], [334, 2, 1, "", "plot_psd"], [334, 2, 1, "", "plot_psd_topo"], [334, 2, 1, "", "plot_psd_topomap"], [334, 2, 1, "", "plot_sensors"], [334, 2, 1, "", "plot_topo_image"], [334, 3, 1, "", "proj"], [334, 2, 1, "", "rename_channels"], [334, 2, 1, "", "reorder_channels"], [334, 2, 1, "", "resample"], [334, 2, 1, "", "reset_drop_log_selection"], [334, 2, 1, "", "save"], [334, 2, 1, "", "savgol_filter"], [334, 2, 1, "", "set_annotations"], [334, 2, 1, "", "set_channel_types"], [334, 2, 1, "", "set_eeg_reference"], [334, 2, 1, "", "set_meas_date"], [334, 2, 1, "", "set_montage"], [334, 2, 1, "", "shift_time"], [334, 2, 1, "", "standard_error"], [334, 2, 1, "", "subtract_evoked"], [334, 2, 1, "", "time_as_index"], [334, 3, 1, "", "times"], [334, 3, 1, "", "tmax"], [334, 3, 1, "", "tmin"], [334, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[335, 2, 1, "", "__contains__"], [335, 2, 1, "", "__neg__"], [335, 2, 1, "", "add_channels"], [335, 2, 1, "", "add_proj"], [335, 2, 1, "", "add_reference_channels"], [335, 2, 1, "", "animate_topomap"], [335, 2, 1, "", "anonymize"], [335, 2, 1, "", "apply_baseline"], [335, 2, 1, "", "apply_function"], [335, 2, 1, "", "apply_hilbert"], [335, 2, 1, "", "apply_proj"], [335, 2, 1, "", "as_type"], [335, 3, 1, "", "ch_names"], [335, 3, 1, "", "compensation_grade"], [335, 2, 1, "", "compute_psd"], [335, 2, 1, "", "compute_tfr"], [335, 2, 1, "", "copy"], [335, 2, 1, "", "crop"], [335, 3, 1, "", "data"], [335, 2, 1, "", "decimate"], [335, 2, 1, "", "del_proj"], [335, 2, 1, "", "detrend"], [335, 2, 1, "", "drop_channels"], [335, 2, 1, "", "export"], [335, 2, 1, "", "filter"], [335, 2, 1, "", "get_channel_types"], [335, 2, 1, "", "get_data"], [335, 2, 1, "", "get_montage"], [335, 2, 1, "", "get_peak"], [335, 2, 1, "", "interpolate_bads"], [335, 3, 1, "", "kind"], [335, 2, 1, "", "pick"], [335, 2, 1, "", "pick_channels"], [335, 2, 1, "", "pick_types"], [335, 2, 1, "", "plot"], [335, 2, 1, "", "plot_field"], [335, 2, 1, "", "plot_image"], [335, 2, 1, "", "plot_joint"], [335, 2, 1, "", "plot_projs_topomap"], [335, 2, 1, "", "plot_psd"], [335, 2, 1, "", "plot_psd_topo"], [335, 2, 1, "", "plot_psd_topomap"], [335, 2, 1, "", "plot_sensors"], [335, 2, 1, "", "plot_topo"], [335, 2, 1, "", "plot_topomap"], [335, 2, 1, "", "plot_white"], [335, 3, 1, "", "proj"], [335, 2, 1, "", "rename_channels"], [335, 2, 1, "", "reorder_channels"], [335, 2, 1, "", "resample"], [335, 2, 1, "", "save"], [335, 2, 1, "", "savgol_filter"], [335, 2, 1, "", "set_channel_types"], [335, 2, 1, "", "set_eeg_reference"], [335, 2, 1, "", "set_meas_date"], [335, 2, 1, "", "set_montage"], [335, 2, 1, "", "shift_time"], [335, 2, 1, "", "time_as_index"], [335, 3, 1, "", "times"], [335, 3, 1, "", "tmax"], [335, 3, 1, "", "tmin"], [335, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[336, 2, 1, "", "__contains__"], [336, 2, 1, "", "__neg__"], [336, 2, 1, "", "add_channels"], [336, 2, 1, "", "add_proj"], [336, 2, 1, "", "add_reference_channels"], [336, 2, 1, "", "animate_topomap"], [336, 2, 1, "", "anonymize"], [336, 2, 1, "", "apply_baseline"], [336, 2, 1, "", "apply_function"], [336, 2, 1, "", "apply_hilbert"], [336, 2, 1, "", "apply_proj"], [336, 2, 1, "", "as_type"], [336, 3, 1, "", "ch_names"], [336, 3, 1, "", "compensation_grade"], [336, 2, 1, "", "compute_psd"], [336, 2, 1, "", "compute_tfr"], [336, 2, 1, "", "copy"], [336, 2, 1, "", "crop"], [336, 3, 1, "", "data"], [336, 2, 1, "", "decimate"], [336, 2, 1, "", "del_proj"], [336, 2, 1, "", "detrend"], [336, 2, 1, "", "drop_channels"], [336, 2, 1, "", "export"], [336, 2, 1, "", "filter"], [336, 2, 1, "", "get_channel_types"], [336, 2, 1, "", "get_data"], [336, 2, 1, "", "get_montage"], [336, 2, 1, "", "get_peak"], [336, 2, 1, "", "interpolate_bads"], [336, 3, 1, "", "kind"], [336, 2, 1, "", "pick"], [336, 2, 1, "", "pick_channels"], [336, 2, 1, "", "pick_types"], [336, 2, 1, "", "plot"], [336, 2, 1, "", "plot_field"], [336, 2, 1, "", "plot_image"], [336, 2, 1, "", "plot_joint"], [336, 2, 1, "", "plot_projs_topomap"], [336, 2, 1, "", "plot_psd"], [336, 2, 1, "", "plot_psd_topo"], [336, 2, 1, "", "plot_psd_topomap"], [336, 2, 1, "", "plot_sensors"], [336, 2, 1, "", "plot_topo"], [336, 2, 1, "", "plot_topomap"], [336, 2, 1, "", "plot_white"], [336, 3, 1, "", "proj"], [336, 2, 1, "", "rename_channels"], [336, 2, 1, "", "reorder_channels"], [336, 2, 1, "", "resample"], [336, 2, 1, "", "save"], [336, 2, 1, "", "savgol_filter"], [336, 2, 1, "", "set_channel_types"], [336, 2, 1, "", "set_eeg_reference"], [336, 2, 1, "", "set_meas_date"], [336, 2, 1, "", "set_montage"], [336, 2, 1, "", "shift_time"], [336, 2, 1, "", "time_as_index"], [336, 3, 1, "", "times"], [336, 3, 1, "", "tmax"], [336, 3, 1, "", "tmin"], [336, 2, 1, "", "to_data_frame"]], "mne.Forward": [[337, 2, 1, "", "copy"], [337, 2, 1, "", "pick_channels"], [337, 2, 1, "", "save"]], "mne.Info": [[338, 2, 1, "", "__contains__"], [338, 2, 1, "", "__getitem__"], [338, 2, 1, "", "__iter__"], [338, 2, 1, "", "__len__"], [338, 2, 1, "", "anonymize"], [338, 2, 1, "", "clear"], [338, 3, 1, "", "compensation_grade"], [338, 2, 1, "", "copy"], [338, 2, 1, "", "fromkeys"], [338, 2, 1, "", "get"], [338, 2, 1, "", "get_channel_types"], [338, 2, 1, "", "get_montage"], [338, 2, 1, "", "items"], [338, 2, 1, "", "keys"], [338, 2, 1, "", "normalize_proj"], [338, 2, 1, "", "plot_sensors"], [338, 2, 1, "", "pop"], [338, 2, 1, "", "popitem"], [338, 2, 1, "", "rename_channels"], [338, 2, 1, "", "save"], [338, 2, 1, "", "set_channel_types"], [338, 2, 1, "", "set_meas_date"], [338, 2, 1, "", "set_montage"], [338, 2, 1, "", "setdefault"], [338, 2, 1, "", "update"], [338, 2, 1, "", "values"]], "mne.Label": [[339, 2, 1, "", "__add__"], [339, 2, 1, "", "__len__"], [339, 2, 1, "", "__sub__"], [339, 2, 1, "", "center_of_mass"], [339, 2, 1, "", "compute_area"], [339, 2, 1, "", "copy"], [339, 2, 1, "", "distances_to_outside"], [339, 2, 1, "", "fill"], [339, 2, 1, "", "get_tris"], [339, 2, 1, "", "get_vertices_used"], [339, 2, 1, "", "morph"], [339, 2, 1, "", "restrict"], [339, 2, 1, "", "save"], [339, 2, 1, "", "smooth"], [339, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[340, 2, 1, "", "__add__"], [340, 2, 1, "", "__div__"], [340, 2, 1, "", "__mul__"], [340, 2, 1, "", "__neg__"], [340, 2, 1, "", "__sub__"], [340, 2, 1, "", "apply_baseline"], [340, 2, 1, "", "apply_function"], [340, 2, 1, "", "apply_hilbert"], [340, 2, 1, "", "bin"], [340, 2, 1, "", "copy"], [340, 2, 1, "", "crop"], [340, 3, 1, "", "data"], [340, 2, 1, "", "extract_label_time_course"], [340, 2, 1, "", "filter"], [340, 2, 1, "", "get_peak"], [340, 2, 1, "", "mean"], [340, 2, 1, "", "plot"], [340, 2, 1, "", "resample"], [340, 2, 1, "", "save"], [340, 2, 1, "", "savgol_filter"], [340, 3, 1, "", "sfreq"], [340, 3, 1, "", "shape"], [340, 2, 1, "", "sqrt"], [340, 2, 1, "", "sum"], [340, 2, 1, "", "surface"], [340, 2, 1, "", "time_as_index"], [340, 3, 1, "", "times"], [340, 3, 1, "", "tmin"], [340, 2, 1, "", "to_data_frame"], [340, 2, 1, "", "transform"], [340, 2, 1, "", "transform_data"], [340, 3, 1, "", "tstep"], [340, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[341, 2, 1, "", "__add__"], [341, 2, 1, "", "__div__"], [341, 2, 1, "", "__mul__"], [341, 2, 1, "", "__neg__"], [341, 2, 1, "", "__sub__"], [341, 2, 1, "", "apply_baseline"], [341, 2, 1, "", "apply_function"], [341, 2, 1, "", "apply_hilbert"], [341, 2, 1, "", "bin"], [341, 2, 1, "", "copy"], [341, 2, 1, "", "crop"], [341, 3, 1, "", "data"], [341, 2, 1, "", "extract_label_time_course"], [341, 2, 1, "", "filter"], [341, 2, 1, "", "get_peak"], [341, 2, 1, "", "magnitude"], [341, 2, 1, "", "mean"], [341, 2, 1, "", "plot"], [341, 2, 1, "", "project"], [341, 2, 1, "", "resample"], [341, 2, 1, "", "save"], [341, 2, 1, "", "savgol_filter"], [341, 3, 1, "", "sfreq"], [341, 3, 1, "", "shape"], [341, 2, 1, "", "sqrt"], [341, 2, 1, "", "sum"], [341, 2, 1, "", "surface"], [341, 2, 1, "", "time_as_index"], [341, 3, 1, "", "times"], [341, 3, 1, "", "tmin"], [341, 2, 1, "", "to_data_frame"], [341, 2, 1, "", "transform"], [341, 2, 1, "", "transform_data"], [341, 3, 1, "", "tstep"], [341, 2, 1, "", "volume"]], "mne.Projection": [[342, 2, 1, "", "plot_topomap"]], "mne.Report": [[343, 2, 1, "", "__len__"], [343, 2, 1, "", "add_bem"], [343, 2, 1, "", "add_code"], [343, 2, 1, "", "add_covariance"], [343, 2, 1, "", "add_custom_css"], [343, 2, 1, "", "add_custom_js"], [343, 2, 1, "", "add_epochs"], [343, 2, 1, "", "add_events"], [343, 2, 1, "", "add_evokeds"], [343, 2, 1, "", "add_figure"], [343, 2, 1, "", "add_forward"], [343, 2, 1, "", "add_html"], [343, 2, 1, "", "add_ica"], [343, 2, 1, "", "add_image"], [343, 2, 1, "", "add_inverse_operator"], [343, 2, 1, "", "add_projs"], [343, 2, 1, "", "add_raw"], [343, 2, 1, "", "add_stc"], [343, 2, 1, "", "add_sys_info"], [343, 2, 1, "", "add_trans"], [343, 2, 1, "", "copy"], [343, 2, 1, "", "get_contents"], [343, 3, 1, "", "html"], [343, 2, 1, "", "parse_folder"], [343, 2, 1, "", "remove"], [343, 2, 1, "", "reorder"], [343, 2, 1, "", "save"], [343, 3, 1, "", "tags"]], "mne.SourceEstimate": [[344, 2, 1, "", "__add__"], [344, 2, 1, "", "__div__"], [344, 2, 1, "", "__mul__"], [344, 2, 1, "", "__neg__"], [344, 2, 1, "", "__sub__"], [344, 2, 1, "", "apply_baseline"], [344, 2, 1, "", "apply_function"], [344, 2, 1, "", "apply_hilbert"], [344, 2, 1, "", "bin"], [344, 2, 1, "", "center_of_mass"], [344, 2, 1, "", "copy"], [344, 2, 1, "", "crop"], [344, 3, 1, "", "data"], [344, 2, 1, "", "estimate_snr"], [344, 2, 1, "", "expand"], [344, 2, 1, "", "extract_label_time_course"], [344, 2, 1, "", "filter"], [344, 2, 1, "", "get_peak"], [344, 2, 1, "", "in_label"], [344, 3, 1, "", "lh_data"], [344, 3, 1, "", "lh_vertno"], [344, 2, 1, "", "mean"], [344, 2, 1, "", "plot"], [344, 2, 1, "", "resample"], [344, 3, 1, "", "rh_data"], [344, 3, 1, "", "rh_vertno"], [344, 2, 1, "", "save"], [344, 2, 1, "", "save_as_surface"], [344, 2, 1, "", "savgol_filter"], [344, 3, 1, "", "sfreq"], [344, 3, 1, "", "shape"], [344, 2, 1, "", "sqrt"], [344, 2, 1, "", "sum"], [344, 2, 1, "", "time_as_index"], [344, 3, 1, "", "times"], [344, 3, 1, "", "tmin"], [344, 2, 1, "", "to_data_frame"], [344, 2, 1, "", "to_original_src"], [344, 2, 1, "", "transform"], [344, 2, 1, "", "transform_data"], [344, 3, 1, "", "tstep"]], "mne.SourceMorph": [[345, 2, 1, "", "apply"], [345, 2, 1, "", "compute_vol_morph_mat"], [345, 2, 1, "", "save"]], "mne.SourceSpaces": [[346, 2, 1, "", "__add__"], [346, 2, 1, "", "__getitem__"], [346, 2, 1, "", "copy"], [346, 2, 1, "", "export_volume"], [346, 2, 1, "", "plot"], [346, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[347, 2, 1, "", "__add__"], [347, 2, 1, "", "__div__"], [347, 2, 1, "", "__mul__"], [347, 2, 1, "", "__neg__"], [347, 2, 1, "", "__sub__"], [347, 2, 1, "", "apply_baseline"], [347, 2, 1, "", "apply_function"], [347, 2, 1, "", "apply_hilbert"], [347, 2, 1, "", "bin"], [347, 2, 1, "", "copy"], [347, 2, 1, "", "crop"], [347, 3, 1, "", "data"], [347, 2, 1, "", "expand"], [347, 2, 1, "", "extract_label_time_course"], [347, 2, 1, "", "filter"], [347, 2, 1, "", "get_peak"], [347, 2, 1, "", "in_label"], [347, 3, 1, "", "lh_data"], [347, 3, 1, "", "lh_vertno"], [347, 2, 1, "", "magnitude"], [347, 2, 1, "", "mean"], [347, 2, 1, "", "plot"], [347, 2, 1, "", "project"], [347, 2, 1, "", "resample"], [347, 3, 1, "", "rh_data"], [347, 3, 1, "", "rh_vertno"], [347, 2, 1, "", "save"], [347, 2, 1, "", "save_as_surface"], [347, 2, 1, "", "savgol_filter"], [347, 3, 1, "", "sfreq"], [347, 3, 1, "", "shape"], [347, 2, 1, "", "sqrt"], [347, 2, 1, "", "sum"], [347, 2, 1, "", "time_as_index"], [347, 3, 1, "", "times"], [347, 3, 1, "", "tmin"], [347, 2, 1, "", "to_data_frame"], [347, 2, 1, "", "to_original_src"], [347, 2, 1, "", "transform"], [347, 2, 1, "", "transform_data"], [347, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[348, 2, 1, "", "__add__"], [348, 2, 1, "", "__div__"], [348, 2, 1, "", "__mul__"], [348, 2, 1, "", "__neg__"], [348, 2, 1, "", "__sub__"], [348, 2, 1, "", "apply_baseline"], [348, 2, 1, "", "apply_function"], [348, 2, 1, "", "apply_hilbert"], [348, 2, 1, "", "as_volume"], [348, 2, 1, "", "bin"], [348, 2, 1, "", "copy"], [348, 2, 1, "", "crop"], [348, 3, 1, "", "data"], [348, 2, 1, "", "extract_label_time_course"], [348, 2, 1, "", "filter"], [348, 2, 1, "", "get_peak"], [348, 2, 1, "", "in_label"], [348, 2, 1, "", "mean"], [348, 2, 1, "", "plot"], [348, 2, 1, "", "plot_3d"], [348, 2, 1, "", "resample"], [348, 2, 1, "", "save"], [348, 2, 1, "", "save_as_volume"], [348, 2, 1, "", "savgol_filter"], [348, 3, 1, "", "sfreq"], [348, 3, 1, "", "shape"], [348, 2, 1, "", "sqrt"], [348, 2, 1, "", "sum"], [348, 2, 1, "", "time_as_index"], [348, 3, 1, "", "times"], [348, 3, 1, "", "tmin"], [348, 2, 1, "", "to_data_frame"], [348, 2, 1, "", "transform"], [348, 2, 1, "", "transform_data"], [348, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[349, 2, 1, "", "__add__"], [349, 2, 1, "", "__div__"], [349, 2, 1, "", "__mul__"], [349, 2, 1, "", "__neg__"], [349, 2, 1, "", "__sub__"], [349, 2, 1, "", "apply_baseline"], [349, 2, 1, "", "apply_function"], [349, 2, 1, "", "apply_hilbert"], [349, 2, 1, "", "as_volume"], [349, 2, 1, "", "bin"], [349, 2, 1, "", "copy"], [349, 2, 1, "", "crop"], [349, 3, 1, "", "data"], [349, 2, 1, "", "extract_label_time_course"], [349, 2, 1, "", "filter"], [349, 2, 1, "", "get_peak"], [349, 2, 1, "", "in_label"], [349, 2, 1, "", "magnitude"], [349, 2, 1, "", "mean"], [349, 2, 1, "", "plot"], [349, 2, 1, "", "plot_3d"], [349, 2, 1, "", "project"], [349, 2, 1, "", "resample"], [349, 2, 1, "", "save"], [349, 2, 1, "", "save_as_volume"], [349, 2, 1, "", "savgol_filter"], [349, 3, 1, "", "sfreq"], [349, 3, 1, "", "shape"], [349, 2, 1, "", "sqrt"], [349, 2, 1, "", "sum"], [349, 2, 1, "", "time_as_index"], [349, 3, 1, "", "times"], [349, 3, 1, "", "tmin"], [349, 2, 1, "", "to_data_frame"], [349, 2, 1, "", "transform"], [349, 2, 1, "", "transform_data"], [349, 3, 1, "", "tstep"]], "mne.baseline": [[356, 4, 1, "", "rescale"]], "mne.beamformer": [[357, 1, 1, "", "Beamformer"], [358, 4, 1, "", "apply_dics"], [359, 4, 1, "", "apply_dics_csd"], [360, 4, 1, "", "apply_dics_epochs"], [361, 4, 1, "", "apply_dics_tfr_epochs"], [362, 4, 1, "", "apply_lcmv"], [363, 4, 1, "", "apply_lcmv_cov"], [364, 4, 1, "", "apply_lcmv_epochs"], [365, 4, 1, "", "apply_lcmv_raw"], [366, 4, 1, "", "make_dics"], [367, 4, 1, "", "make_lcmv"], [368, 4, 1, "", "make_lcmv_resolution_matrix"], [369, 4, 1, "", "rap_music"], [370, 4, 1, "", "read_beamformer"], [371, 4, 1, "", "trap_music"]], "mne.beamformer.Beamformer": [[357, 2, 1, "", "__contains__"], [357, 2, 1, "", "__getitem__"], [357, 2, 1, "", "__iter__"], [357, 2, 1, "", "__len__"], [357, 2, 1, "", "clear"], [357, 2, 1, "", "copy"], [357, 2, 1, "", "fromkeys"], [357, 2, 1, "", "get"], [357, 2, 1, "", "items"], [357, 2, 1, "", "keys"], [357, 2, 1, "", "pop"], [357, 2, 1, "", "popitem"], [357, 2, 1, "", "save"], [357, 2, 1, "", "setdefault"], [357, 2, 1, "", "update"], [357, 2, 1, "", "values"]], "mne.bem": [[372, 1, 1, "", "ConductorModel"], [373, 4, 1, "", "convert_flash_mris"], [374, 4, 1, "", "distance_to_bem"], [375, 4, 1, "", "fit_sphere_to_headshape"], [376, 4, 1, "", "get_fitting_dig"], [377, 4, 1, "", "make_flash_bem"], [378, 4, 1, "", "make_scalp_surfaces"], [379, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[372, 2, 1, "", "__contains__"], [372, 2, 1, "", "__getitem__"], [372, 2, 1, "", "__iter__"], [372, 2, 1, "", "__len__"], [372, 2, 1, "", "clear"], [372, 2, 1, "", "copy"], [372, 2, 1, "", "fromkeys"], [372, 2, 1, "", "get"], [372, 2, 1, "", "items"], [372, 2, 1, "", "keys"], [372, 2, 1, "", "pop"], [372, 2, 1, "", "popitem"], [372, 3, 1, "", "radius"], [372, 2, 1, "", "setdefault"], [372, 2, 1, "", "update"], [372, 2, 1, "", "values"]], "mne.channels": [[382, 1, 1, "", "DigMontage"], [383, 1, 1, "", "Layout"], [384, 4, 1, "", "combine_channels"], [385, 4, 1, "", "compute_dev_head_t"], [386, 4, 1, "", "compute_native_head_t"], [387, 4, 1, "", "equalize_channels"], [388, 4, 1, "", "find_ch_adjacency"], [389, 4, 1, "", "find_layout"], [390, 4, 1, "", "fix_mag_coil_types"], [391, 4, 1, "", "generate_2d_layout"], [392, 4, 1, "", "get_builtin_ch_adjacencies"], [393, 4, 1, "", "get_builtin_montages"], [394, 4, 1, "", "make_1020_channel_selections"], [395, 4, 1, "", "make_dig_montage"], [396, 4, 1, "", "make_eeg_layout"], [397, 4, 1, "", "make_grid_layout"], [398, 4, 1, "", "make_standard_montage"], [399, 4, 1, "", "read_ch_adjacency"], [400, 4, 1, "", "read_custom_montage"], [401, 4, 1, "", "read_dig_captrak"], [402, 4, 1, "", "read_dig_dat"], [403, 4, 1, "", "read_dig_egi"], [404, 4, 1, "", "read_dig_fif"], [405, 4, 1, "", "read_dig_hpts"], [406, 4, 1, "", "read_dig_localite"], [407, 4, 1, "", "read_dig_polhemus_isotrak"], [408, 4, 1, "", "read_layout"], [409, 4, 1, "", "read_polhemus_fastscan"], [410, 4, 1, "", "rename_channels"], [411, 4, 1, "", "unify_bad_channels"]], "mne.channels.DigMontage": [[382, 2, 1, "", "__add__"], [382, 2, 1, "", "add_estimated_fiducials"], [382, 2, 1, "", "add_mni_fiducials"], [382, 2, 1, "", "apply_trans"], [382, 2, 1, "", "copy"], [382, 2, 1, "", "get_positions"], [382, 2, 1, "", "plot"], [382, 2, 1, "", "remove_fiducials"], [382, 2, 1, "", "rename_channels"], [382, 2, 1, "", "save"]], "mne.channels.Layout": [[383, 2, 1, "", "plot"], [383, 2, 1, "", "save"]], "mne.chpi": [[412, 4, 1, "", "compute_chpi_amplitudes"], [413, 4, 1, "", "compute_chpi_locs"], [414, 4, 1, "", "compute_chpi_snr"], [415, 4, 1, "", "compute_head_pos"], [416, 4, 1, "", "extract_chpi_locs_ctf"], [417, 4, 1, "", "extract_chpi_locs_kit"], [418, 4, 1, "", "filter_chpi"], [419, 4, 1, "", "get_active_chpi"], [420, 4, 1, "", "get_chpi_info"], [421, 4, 1, "", "head_pos_to_trans_rot_t"], [422, 4, 1, "", "read_head_pos"], [423, 4, 1, "", "write_head_pos"]], "mne.coreg": [[436, 1, 1, "", "Coregistration"], [437, 4, 1, "", "estimate_head_mri_t"], [438, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[436, 2, 1, "", "compute_dig_mri_distances"], [436, 2, 1, "", "fit_fiducials"], [436, 2, 1, "", "fit_icp"], [436, 2, 1, "", "omit_head_shape_points"], [436, 2, 1, "", "reset"], [436, 3, 1, "", "scale"], [436, 2, 1, "", "set_fid_match"], [436, 2, 1, "", "set_grow_hair"], [436, 2, 1, "", "set_rotation"], [436, 2, 1, "", "set_scale"], [436, 2, 1, "", "set_scale_mode"], [436, 2, 1, "", "set_translation"], [436, 3, 1, "", "trans"]], "mne.cov": [[441, 4, 1, "", "compute_whitener"], [442, 4, 1, "", "prepare_noise_cov"], [443, 4, 1, "", "regularize"]], "mne.cuda": [[446, 4, 1, "", "get_cuda_memory"], [447, 4, 1, "", "init_cuda"], [448, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[449, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[450, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[451, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[452, 4, 1, "", "load_data"], [453, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[454, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[455, 4, 1, "", "data_path"]], "mne.datasets.eyelink": [[456, 4, 1, "", "data_path"]], "mne.datasets": [[457, 4, 1, "", "fetch_aparc_sub_parcellation"], [458, 4, 1, "", "fetch_dataset"], [459, 4, 1, "", "fetch_fsaverage"], [460, 4, 1, "", "fetch_hcp_mmp_parcellation"], [461, 4, 1, "", "fetch_infant_template"], [462, 4, 1, "", "fetch_phantom"], [464, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[463, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[465, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[466, 4, 1, "", "data_path"]], "mne.datasets.limo": [[467, 4, 1, "", "load_data"]], "mne.datasets.misc": [[468, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[469, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[470, 4, 1, "", "data_path"]], "mne.datasets.opm": [[471, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[472, 4, 1, "", "data_path"]], "mne.datasets.phantom_kernel": [[473, 4, 1, "", "data_path"]], "mne.datasets.phantom_kit": [[474, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[475, 4, 1, "", "data_path"]], "mne.datasets.sample": [[476, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[477, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[478, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[479, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[480, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[481, 4, 1, "", "data_path"]], "mne.datasets.ucl_opm_auditory": [[482, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[483, 4, 1, "", "data_path"]], "mne.decoding": [[485, 1, 1, "", "CSP"], [486, 1, 1, "", "EMS"], [487, 1, 1, "", "FilterEstimator"], [488, 1, 1, "", "GeneralizingEstimator"], [489, 1, 1, "", "LinearModel"], [490, 1, 1, "", "PSDEstimator"], [491, 1, 1, "", "ReceptiveField"], [492, 1, 1, "", "SPoC"], [493, 1, 1, "", "SSD"], [494, 1, 1, "", "Scaler"], [495, 1, 1, "", "SlidingEstimator"], [496, 1, 1, "", "TemporalFilter"], [497, 1, 1, "", "TimeDelayingRidge"], [498, 1, 1, "", "TimeFrequency"], [499, 1, 1, "", "UnsupervisedSpatialFilter"], [500, 1, 1, "", "Vectorizer"], [501, 4, 1, "", "compute_ems"], [502, 4, 1, "", "cross_val_multiscore"], [503, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[485, 2, 1, "", "fit"], [485, 2, 1, "", "fit_transform"], [485, 2, 1, "", "get_params"], [485, 2, 1, "", "plot_filters"], [485, 2, 1, "", "plot_patterns"], [485, 2, 1, "", "set_params"], [485, 2, 1, "", "transform"]], "mne.decoding.EMS": [[486, 2, 1, "", "fit"], [486, 2, 1, "", "fit_transform"], [486, 2, 1, "", "get_params"], [486, 2, 1, "", "set_params"], [486, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[487, 2, 1, "", "fit"], [487, 2, 1, "", "fit_transform"], [487, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[488, 2, 1, "", "decision_function"], [488, 2, 1, "", "fit"], [488, 2, 1, "", "fit_transform"], [488, 2, 1, "", "get_params"], [488, 2, 1, "", "predict"], [488, 2, 1, "", "predict_proba"], [488, 2, 1, "", "score"], [488, 2, 1, "", "set_params"], [488, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[489, 2, 1, "", "fit"], [489, 2, 1, "", "get_params"], [489, 2, 1, "", "set_params"]], "mne.decoding.PSDEstimator": [[490, 2, 1, "", "fit"], [490, 2, 1, "", "fit_transform"], [490, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[491, 2, 1, "", "fit"], [491, 2, 1, "", "get_params"], [491, 2, 1, "", "predict"], [491, 2, 1, "", "score"], [491, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[492, 2, 1, "", "fit"], [492, 2, 1, "", "fit_transform"], [492, 2, 1, "", "get_params"], [492, 2, 1, "", "plot_filters"], [492, 2, 1, "", "plot_patterns"], [492, 2, 1, "", "set_params"], [492, 2, 1, "", "transform"]], "mne.decoding.SSD": [[493, 2, 1, "", "apply"], [493, 2, 1, "", "fit"], [493, 2, 1, "", "fit_transform"], [493, 2, 1, "", "get_params"], [493, 2, 1, "", "get_spectral_ratio"], [493, 2, 1, "", "inverse_transform"], [493, 2, 1, "", "set_params"], [493, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[494, 2, 1, "", "fit"], [494, 2, 1, "", "fit_transform"], [494, 2, 1, "", "get_params"], [494, 2, 1, "", "inverse_transform"], [494, 2, 1, "", "set_params"], [494, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[495, 2, 1, "", "decision_function"], [495, 2, 1, "", "fit"], [495, 2, 1, "", "fit_transform"], [495, 2, 1, "", "get_params"], [495, 2, 1, "", "predict"], [495, 2, 1, "", "predict_proba"], [495, 2, 1, "", "score"], [495, 2, 1, "", "set_params"], [495, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[496, 2, 1, "", "fit"], [496, 2, 1, "", "fit_transform"], [496, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[497, 2, 1, "", "fit"], [497, 2, 1, "", "get_params"], [497, 2, 1, "", "predict"], [497, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[498, 2, 1, "", "fit"], [498, 2, 1, "", "fit_transform"], [498, 2, 1, "", "get_params"], [498, 2, 1, "", "set_params"], [498, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[499, 2, 1, "", "fit"], [499, 2, 1, "", "fit_transform"], [499, 2, 1, "", "get_params"], [499, 2, 1, "", "inverse_transform"], [499, 2, 1, "", "set_params"], [499, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[500, 2, 1, "", "fit"], [500, 2, 1, "", "fit_transform"], [500, 2, 1, "", "inverse_transform"], [500, 2, 1, "", "transform"]], "mne.dipole": [[505, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[506, 4, 1, "", "average_movements"], [507, 4, 1, "", "combine_event_ids"], [508, 4, 1, "", "equalize_epoch_counts"], [509, 4, 1, "", "make_metadata"]], "mne.event": [[511, 4, 1, "", "define_target_events"], [512, 4, 1, "", "match_event_names"], [513, 4, 1, "", "shift_time_events"]], "mne.export": [[515, 4, 1, "", "export_epochs"], [516, 4, 1, "", "export_evokeds"], [517, 4, 1, "", "export_evokeds_mff"], [518, 4, 1, "", "export_raw"]], "mne.filter": [[520, 4, 1, "", "construct_iir_filter"], [521, 4, 1, "", "create_filter"], [522, 4, 1, "", "estimate_ringing_samples"], [523, 4, 1, "", "filter_data"], [524, 4, 1, "", "notch_filter"], [525, 4, 1, "", "resample"]], "mne.forward": [[529, 4, 1, "", "compute_depth_prior"], [530, 4, 1, "", "compute_orient_prior"], [531, 4, 1, "", "restrict_forward_to_label"], [532, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[544, 4, 1, "", "coregistration"]], "mne.inverse_sparse": [[547, 4, 1, "", "gamma_map"], [548, 4, 1, "", "make_stc_from_dipoles"], [549, 4, 1, "", "mixed_norm"], [550, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[551, 1, 1, "", "BaseRaw"], [552, 1, 1, "", "Raw"], [553, 1, 1, "", "RawArray"], [554, 4, 1, "", "anonymize_info"], [555, 4, 1, "", "get_channel_type_constants"], [15, 0, 0, "-", "kit"], [557, 4, 1, "", "read_fiducials"], [558, 4, 1, "", "read_info"], [559, 4, 1, "", "read_raw"], [560, 4, 1, "", "read_raw_artemis123"], [561, 4, 1, "", "read_raw_bdf"], [562, 4, 1, "", "read_raw_boxy"], [563, 4, 1, "", "read_raw_brainvision"], [564, 4, 1, "", "read_raw_bti"], [565, 4, 1, "", "read_raw_cnt"], [566, 4, 1, "", "read_raw_ctf"], [567, 4, 1, "", "read_raw_curry"], [568, 4, 1, "", "read_raw_edf"], [569, 4, 1, "", "read_raw_eeglab"], [570, 4, 1, "", "read_raw_egi"], [571, 4, 1, "", "read_raw_eximia"], [572, 4, 1, "", "read_raw_eyelink"], [573, 4, 1, "", "read_raw_fieldtrip"], [574, 4, 1, "", "read_raw_fif"], [575, 4, 1, "", "read_raw_fil"], [576, 4, 1, "", "read_raw_gdf"], [577, 4, 1, "", "read_raw_hitachi"], [578, 4, 1, "", "read_raw_kit"], [579, 4, 1, "", "read_raw_nedf"], [580, 4, 1, "", "read_raw_neuralynx"], [581, 4, 1, "", "read_raw_nicolet"], [582, 4, 1, "", "read_raw_nihon"], [583, 4, 1, "", "read_raw_nirx"], [584, 4, 1, "", "read_raw_nsx"], [585, 4, 1, "", "read_raw_persyst"], [586, 4, 1, "", "read_raw_snirf"], [587, 4, 1, "", "show_fiff"], [588, 4, 1, "", "write_fiducials"], [589, 4, 1, "", "write_info"]], "mne.io.Raw": [[552, 2, 1, "", "__contains__"], [552, 2, 1, "", "__getitem__"], [552, 2, 1, "", "__len__"], [552, 3, 1, "", "acqparser"], [552, 2, 1, "", "add_channels"], [552, 2, 1, "", "add_events"], [552, 2, 1, "", "add_proj"], [552, 2, 1, "", "add_reference_channels"], [552, 3, 1, "", "annotations"], [552, 2, 1, "", "anonymize"], [552, 2, 1, "", "append"], [552, 2, 1, "", "apply_function"], [552, 2, 1, "", "apply_gradient_compensation"], [552, 2, 1, "", "apply_hilbert"], [552, 2, 1, "", "apply_proj"], [552, 3, 1, "", "ch_names"], [552, 2, 1, "", "close"], [552, 3, 1, "", "compensation_grade"], [552, 2, 1, "", "compute_psd"], [552, 2, 1, "", "compute_tfr"], [552, 2, 1, "", "copy"], [552, 2, 1, "", "crop"], [552, 2, 1, "", "crop_by_annotations"], [552, 2, 1, "", "del_proj"], [552, 2, 1, "", "describe"], [552, 2, 1, "", "drop_channels"], [552, 2, 1, "", "export"], [552, 3, 1, "", "filenames"], [552, 2, 1, "", "filter"], [552, 3, 1, "", "first_samp"], [552, 3, 1, "", "first_time"], [552, 2, 1, "", "fix_mag_coil_types"], [552, 2, 1, "", "get_channel_types"], [552, 2, 1, "", "get_data"], [552, 2, 1, "", "get_montage"], [552, 2, 1, "", "interpolate_bads"], [552, 3, 1, "", "last_samp"], [552, 2, 1, "", "load_bad_channels"], [552, 2, 1, "", "load_data"], [552, 3, 1, "", "n_times"], [552, 2, 1, "", "notch_filter"], [552, 2, 1, "", "pick"], [552, 2, 1, "", "pick_channels"], [552, 2, 1, "", "pick_types"], [552, 2, 1, "", "plot"], [552, 2, 1, "", "plot_projs_topomap"], [552, 2, 1, "", "plot_psd"], [552, 2, 1, "", "plot_psd_topo"], [552, 2, 1, "", "plot_psd_topomap"], [552, 2, 1, "", "plot_sensors"], [552, 3, 1, "", "proj"], [552, 2, 1, "", "rename_channels"], [552, 2, 1, "", "reorder_channels"], [552, 2, 1, "", "resample"], [552, 2, 1, "", "save"], [552, 2, 1, "", "savgol_filter"], [552, 2, 1, "", "set_annotations"], [552, 2, 1, "", "set_channel_types"], [552, 2, 1, "", "set_eeg_reference"], [552, 2, 1, "", "set_meas_date"], [552, 2, 1, "", "set_montage"], [552, 2, 1, "", "time_as_index"], [552, 3, 1, "", "times"], [552, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[553, 2, 1, "", "__contains__"], [553, 2, 1, "", "__getitem__"], [553, 2, 1, "", "__len__"], [553, 2, 1, "", "add_channels"], [553, 2, 1, "", "add_events"], [553, 2, 1, "", "add_proj"], [553, 2, 1, "", "add_reference_channels"], [553, 3, 1, "", "annotations"], [553, 2, 1, "", "anonymize"], [553, 2, 1, "", "append"], [553, 2, 1, "", "apply_function"], [553, 2, 1, "", "apply_gradient_compensation"], [553, 2, 1, "", "apply_hilbert"], [553, 2, 1, "", "apply_proj"], [553, 3, 1, "", "ch_names"], [553, 2, 1, "", "close"], [553, 3, 1, "", "compensation_grade"], [553, 2, 1, "", "compute_psd"], [553, 2, 1, "", "compute_tfr"], [553, 2, 1, "", "copy"], [553, 2, 1, "", "crop"], [553, 2, 1, "", "crop_by_annotations"], [553, 2, 1, "", "del_proj"], [553, 2, 1, "", "describe"], [553, 2, 1, "", "drop_channels"], [553, 2, 1, "", "export"], [553, 3, 1, "", "filenames"], [553, 2, 1, "", "filter"], [553, 3, 1, "", "first_samp"], [553, 3, 1, "", "first_time"], [553, 2, 1, "", "get_channel_types"], [553, 2, 1, "", "get_data"], [553, 2, 1, "", "get_montage"], [553, 2, 1, "", "interpolate_bads"], [553, 3, 1, "", "last_samp"], [553, 2, 1, "", "load_bad_channels"], [553, 2, 1, "", "load_data"], [553, 3, 1, "", "n_times"], [553, 2, 1, "", "notch_filter"], [553, 2, 1, "", "pick"], [553, 2, 1, "", "pick_channels"], [553, 2, 1, "", "pick_types"], [553, 2, 1, "", "plot"], [553, 2, 1, "", "plot_projs_topomap"], [553, 2, 1, "", "plot_psd"], [553, 2, 1, "", "plot_psd_topo"], [553, 2, 1, "", "plot_psd_topomap"], [553, 2, 1, "", "plot_sensors"], [553, 3, 1, "", "proj"], [553, 2, 1, "", "rename_channels"], [553, 2, 1, "", "reorder_channels"], [553, 2, 1, "", "resample"], [553, 2, 1, "", "save"], [553, 2, 1, "", "savgol_filter"], [553, 2, 1, "", "set_annotations"], [553, 2, 1, "", "set_channel_types"], [553, 2, 1, "", "set_eeg_reference"], [553, 2, 1, "", "set_meas_date"], [553, 2, 1, "", "set_montage"], [553, 2, 1, "", "time_as_index"], [553, 3, 1, "", "times"], [553, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[556, 4, 1, "", "read_mrk"]], "mne.label": [[590, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[604, 1, 1, "", "InverseOperator"], [605, 4, 1, "", "apply_inverse"], [606, 4, 1, "", "apply_inverse_cov"], [607, 4, 1, "", "apply_inverse_epochs"], [608, 4, 1, "", "apply_inverse_raw"], [609, 4, 1, "", "apply_inverse_tfr_epochs"], [610, 4, 1, "", "compute_rank_inverse"], [611, 4, 1, "", "compute_source_psd"], [612, 4, 1, "", "compute_source_psd_epochs"], [613, 4, 1, "", "estimate_snr"], [614, 4, 1, "", "get_cross_talk"], [615, 4, 1, "", "get_point_spread"], [616, 4, 1, "", "make_inverse_operator"], [617, 4, 1, "", "make_inverse_resolution_matrix"], [618, 4, 1, "", "prepare_inverse_operator"], [619, 4, 1, "", "read_inverse_operator"], [620, 4, 1, "", "resolution_metrics"], [621, 4, 1, "", "source_band_induced_power"], [622, 4, 1, "", "source_induced_power"], [623, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[604, 2, 1, "", "__contains__"], [604, 2, 1, "", "__getitem__"], [604, 2, 1, "", "__iter__"], [604, 2, 1, "", "__len__"], [604, 3, 1, "", "ch_names"], [604, 2, 1, "", "clear"], [604, 2, 1, "", "copy"], [604, 2, 1, "", "fromkeys"], [604, 2, 1, "", "get"], [604, 3, 1, "", "info"], [604, 2, 1, "", "items"], [604, 2, 1, "", "keys"], [604, 2, 1, "", "pop"], [604, 2, 1, "", "popitem"], [604, 2, 1, "", "setdefault"], [604, 2, 1, "", "update"], [604, 2, 1, "", "values"]], "mne.preprocessing": [[637, 1, 1, "", "EOGRegression"], [638, 1, 1, "", "ICA"], [639, 1, 1, "", "Xdawn"], [640, 4, 1, "", "annotate_amplitude"], [641, 4, 1, "", "annotate_break"], [642, 4, 1, "", "annotate_movement"], [643, 4, 1, "", "annotate_muscle_zscore"], [644, 4, 1, "", "annotate_nan"], [645, 4, 1, "", "compute_average_dev_head_t"], [646, 4, 1, "", "compute_bridged_electrodes"], [647, 4, 1, "", "compute_current_source_density"], [648, 4, 1, "", "compute_fine_calibration"], [649, 4, 1, "", "compute_maxwell_basis"], [650, 4, 1, "", "compute_proj_ecg"], [651, 4, 1, "", "compute_proj_eog"], [652, 4, 1, "", "compute_proj_hfc"], [653, 4, 1, "", "corrmap"], [654, 4, 1, "", "cortical_signal_suppression"], [655, 4, 1, "", "create_ecg_epochs"], [656, 4, 1, "", "create_eog_epochs"], [657, 4, 1, "", "equalize_bads"], [13, 0, 0, "-", "eyetracking"], [664, 4, 1, "", "find_bad_channels_lof"], [665, 4, 1, "", "find_bad_channels_maxwell"], [666, 4, 1, "", "find_ecg_events"], [667, 4, 1, "", "find_eog_events"], [668, 4, 1, "", "fix_stim_artifact"], [669, 4, 1, "", "ica_find_ecg_events"], [670, 4, 1, "", "ica_find_eog_events"], [13, 0, 0, "-", "ieeg"], [674, 4, 1, "", "infomax"], [675, 4, 1, "", "interpolate_bridged_electrodes"], [676, 4, 1, "", "maxwell_filter"], [677, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [13, 0, 0, "-", "nirs"], [684, 4, 1, "", "oversampled_temporal_projection"], [685, 4, 1, "", "peak_finder"], [686, 4, 1, "", "read_eog_regression"], [687, 4, 1, "", "read_fine_calibration"], [688, 4, 1, "", "read_ica"], [689, 4, 1, "", "read_ica_eeglab"], [690, 4, 1, "", "realign_raw"], [691, 4, 1, "", "regress_artifact"], [692, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[637, 2, 1, "", "apply"], [637, 2, 1, "", "fit"], [637, 2, 1, "", "plot"], [637, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[638, 2, 1, "", "__contains__"], [638, 2, 1, "", "apply"], [638, 3, 1, "", "compensation_grade"], [638, 2, 1, "", "copy"], [638, 2, 1, "", "find_bads_ecg"], [638, 2, 1, "", "find_bads_eog"], [638, 2, 1, "", "find_bads_muscle"], [638, 2, 1, "", "find_bads_ref"], [638, 2, 1, "", "fit"], [638, 2, 1, "", "get_channel_types"], [638, 2, 1, "", "get_components"], [638, 2, 1, "", "get_explained_variance_ratio"], [638, 2, 1, "", "get_sources"], [638, 2, 1, "", "plot_components"], [638, 2, 1, "", "plot_overlay"], [638, 2, 1, "", "plot_properties"], [638, 2, 1, "", "plot_scores"], [638, 2, 1, "", "plot_sources"], [638, 2, 1, "", "save"], [638, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[639, 2, 1, "", "apply"], [639, 2, 1, "", "fit"], [639, 2, 1, "", "fit_transform"], [639, 2, 1, "", "get_params"], [639, 2, 1, "", "inverse_transform"], [639, 2, 1, "", "set_params"], [639, 2, 1, "", "transform"]], "mne.preprocessing.eyetracking": [[658, 1, 1, "", "Calibration"], [659, 4, 1, "", "convert_units"], [660, 4, 1, "", "get_screen_visual_angle"], [661, 4, 1, "", "interpolate_blinks"], [662, 4, 1, "", "read_eyelink_calibration"], [663, 4, 1, "", "set_channel_types_eyetrack"]], "mne.preprocessing.eyetracking.Calibration": [[658, 2, 1, "", "__contains__"], [658, 2, 1, "", "__getitem__"], [658, 2, 1, "", "__iter__"], [658, 2, 1, "", "__len__"], [658, 2, 1, "", "clear"], [658, 2, 1, "", "copy"], [658, 2, 1, "", "fromkeys"], [658, 2, 1, "", "get"], [658, 2, 1, "", "items"], [658, 2, 1, "", "keys"], [658, 2, 1, "", "plot"], [658, 2, 1, "", "pop"], [658, 2, 1, "", "popitem"], [658, 2, 1, "", "setdefault"], [658, 2, 1, "", "update"], [658, 2, 1, "", "values"]], "mne.preprocessing.ieeg": [[671, 4, 1, "", "make_montage_volume"], [672, 4, 1, "", "project_sensors_onto_brain"], [673, 4, 1, "", "warp_montage"]], "mne.preprocessing.nirs": [[678, 4, 1, "", "beer_lambert_law"], [679, 4, 1, "", "optical_density"], [680, 4, 1, "", "scalp_coupling_index"], [681, 4, 1, "", "short_channels"], [682, 4, 1, "", "source_detector_distances"], [683, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[739, 1, 1, "", "SourceSimulator"], [740, 4, 1, "", "add_chpi"], [741, 4, 1, "", "add_ecg"], [742, 4, 1, "", "add_eog"], [743, 4, 1, "", "add_noise"], [19, 0, 0, "-", "metrics"], [752, 4, 1, "", "select_source_in_label"], [753, 4, 1, "", "simulate_evoked"], [754, 4, 1, "", "simulate_raw"], [755, 4, 1, "", "simulate_sparse_stc"], [756, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[739, 2, 1, "", "__iter__"], [739, 2, 1, "", "add_data"], [739, 3, 1, "", "duration"], [739, 2, 1, "", "get_stc"], [739, 2, 1, "", "get_stim_channel"], [739, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[744, 4, 1, "", "cosine_score"], [745, 4, 1, "", "f1_score"], [746, 4, 1, "", "peak_position_error"], [747, 4, 1, "", "precision_score"], [748, 4, 1, "", "recall_score"], [749, 4, 1, "", "region_localization_error"], [750, 4, 1, "", "roc_auc_score"], [751, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[757, 4, 1, "", "compute_distance_to_sensors"], [758, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[767, 4, 1, "", "bonferroni_correction"], [768, 4, 1, "", "bootstrap_confidence_interval"], [769, 4, 1, "", "combine_adjacency"], [770, 4, 1, "", "f_mway_rm"], [771, 4, 1, "", "f_oneway"], [772, 4, 1, "", "f_threshold_mway_rm"], [773, 4, 1, "", "fdr_correction"], [774, 4, 1, "", "linear_regression"], [775, 4, 1, "", "linear_regression_raw"], [776, 4, 1, "", "permutation_cluster_1samp_test"], [777, 4, 1, "", "permutation_cluster_test"], [778, 4, 1, "", "permutation_t_test"], [779, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [780, 4, 1, "", "spatio_temporal_cluster_test"], [781, 4, 1, "", "summarize_clusters_stc"], [782, 4, 1, "", "ttest_1samp_no_p"], [783, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[786, 4, 1, "", "complete_surface_info"], [787, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[789, 1, 1, "", "AverageTFR"], [790, 1, 1, "", "AverageTFRArray"], [791, 1, 1, "", "BaseTFR"], [792, 1, 1, "", "CrossSpectralDensity"], [793, 1, 1, "", "EpochsSpectrum"], [794, 1, 1, "", "EpochsSpectrumArray"], [795, 1, 1, "", "EpochsTFR"], [796, 1, 1, "", "EpochsTFRArray"], [797, 1, 1, "", "RawTFR"], [798, 1, 1, "", "RawTFRArray"], [799, 1, 1, "", "Spectrum"], [800, 1, 1, "", "SpectrumArray"], [801, 4, 1, "", "csd_array_fourier"], [802, 4, 1, "", "csd_array_morlet"], [803, 4, 1, "", "csd_array_multitaper"], [804, 4, 1, "", "csd_fourier"], [805, 4, 1, "", "csd_morlet"], [806, 4, 1, "", "csd_multitaper"], [807, 4, 1, "", "csd_tfr"], [808, 4, 1, "", "dpss_windows"], [809, 4, 1, "", "fit_iir_model_raw"], [810, 4, 1, "", "fwhm"], [811, 4, 1, "", "istft"], [812, 4, 1, "", "morlet"], [813, 4, 1, "", "pick_channels_csd"], [814, 4, 1, "", "psd_array_multitaper"], [815, 4, 1, "", "psd_array_welch"], [816, 4, 1, "", "read_csd"], [817, 4, 1, "", "read_spectrum"], [818, 4, 1, "", "read_tfrs"], [819, 4, 1, "", "stft"], [820, 4, 1, "", "stftfreq"], [22, 0, 0, "-", "tfr"], [823, 4, 1, "", "tfr_array_morlet"], [824, 4, 1, "", "tfr_array_multitaper"], [825, 4, 1, "", "tfr_array_stockwell"], [826, 4, 1, "", "tfr_morlet"], [827, 4, 1, "", "tfr_multitaper"], [828, 4, 1, "", "tfr_stockwell"], [829, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[789, 2, 1, "", "__add__"], [789, 2, 1, "", "__contains__"], [789, 2, 1, "", "__mul__"], [789, 2, 1, "", "__sub__"], [789, 2, 1, "", "add_channels"], [789, 2, 1, "", "add_reference_channels"], [789, 2, 1, "", "apply_baseline"], [789, 3, 1, "", "baseline"], [789, 3, 1, "", "ch_names"], [789, 3, 1, "", "compensation_grade"], [789, 2, 1, "", "copy"], [789, 2, 1, "", "crop"], [789, 3, 1, "", "data"], [789, 2, 1, "", "decimate"], [789, 2, 1, "", "drop_channels"], [789, 3, 1, "", "freqs"], [789, 2, 1, "", "get_channel_types"], [789, 2, 1, "", "get_data"], [789, 3, 1, "", "method"], [789, 2, 1, "", "pick"], [789, 2, 1, "", "pick_channels"], [789, 2, 1, "", "pick_types"], [789, 2, 1, "", "plot"], [789, 2, 1, "", "plot_joint"], [789, 2, 1, "", "plot_topo"], [789, 2, 1, "", "plot_topomap"], [789, 2, 1, "", "reorder_channels"], [789, 2, 1, "", "save"], [789, 3, 1, "", "sfreq"], [789, 3, 1, "", "shape"], [789, 2, 1, "", "shift_time"], [789, 2, 1, "", "time_as_index"], [789, 3, 1, "", "times"], [789, 3, 1, "", "tmax"], [789, 3, 1, "", "tmin"], [789, 2, 1, "", "to_data_frame"]], "mne.time_frequency.AverageTFRArray": [[790, 2, 1, "", "__add__"], [790, 2, 1, "", "__contains__"], [790, 2, 1, "", "__mul__"], [790, 2, 1, "", "__sub__"], [790, 2, 1, "", "add_channels"], [790, 2, 1, "", "add_reference_channels"], [790, 2, 1, "", "apply_baseline"], [790, 3, 1, "", "baseline"], [790, 3, 1, "", "ch_names"], [790, 3, 1, "", "compensation_grade"], [790, 2, 1, "", "copy"], [790, 2, 1, "", "crop"], [790, 3, 1, "", "data"], [790, 2, 1, "", "decimate"], [790, 2, 1, "", "drop_channels"], [790, 3, 1, "", "freqs"], [790, 2, 1, "", "get_channel_types"], [790, 2, 1, "", "get_data"], [790, 3, 1, "", "method"], [790, 2, 1, "", "pick"], [790, 2, 1, "", "pick_channels"], [790, 2, 1, "", "pick_types"], [790, 2, 1, "", "plot"], [790, 2, 1, "", "plot_joint"], [790, 2, 1, "", "plot_topo"], [790, 2, 1, "", "plot_topomap"], [790, 2, 1, "", "reorder_channels"], [790, 2, 1, "", "save"], [790, 3, 1, "", "sfreq"], [790, 3, 1, "", "shape"], [790, 2, 1, "", "shift_time"], [790, 2, 1, "", "time_as_index"], [790, 3, 1, "", "times"], [790, 3, 1, "", "tmax"], [790, 3, 1, "", "tmin"], [790, 2, 1, "", "to_data_frame"]], "mne.time_frequency.BaseTFR": [[791, 2, 1, "", "__add__"], [791, 2, 1, "", "__contains__"], [791, 2, 1, "", "__mul__"], [791, 2, 1, "", "__sub__"], [791, 2, 1, "", "add_channels"], [791, 2, 1, "", "add_reference_channels"], [791, 2, 1, "", "apply_baseline"], [791, 3, 1, "", "baseline"], [791, 3, 1, "", "ch_names"], [791, 3, 1, "", "compensation_grade"], [791, 2, 1, "", "copy"], [791, 2, 1, "", "crop"], [791, 3, 1, "", "data"], [791, 2, 1, "", "decimate"], [791, 2, 1, "", "drop_channels"], [791, 3, 1, "", "freqs"], [791, 2, 1, "", "get_channel_types"], [791, 2, 1, "", "get_data"], [791, 3, 1, "", "method"], [791, 2, 1, "", "pick"], [791, 2, 1, "", "pick_channels"], [791, 2, 1, "", "pick_types"], [791, 2, 1, "", "plot"], [791, 2, 1, "", "plot_joint"], [791, 2, 1, "", "plot_topo"], [791, 2, 1, "", "plot_topomap"], [791, 2, 1, "", "reorder_channels"], [791, 2, 1, "", "save"], [791, 3, 1, "", "sfreq"], [791, 3, 1, "", "shape"], [791, 2, 1, "", "shift_time"], [791, 2, 1, "", "time_as_index"], [791, 3, 1, "", "times"], [791, 3, 1, "", "tmax"], [791, 3, 1, "", "tmin"], [791, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[792, 2, 1, "", "__getitem__"], [792, 2, 1, "", "__len__"], [792, 2, 1, "", "copy"], [792, 2, 1, "", "get_data"], [792, 2, 1, "", "mean"], [792, 3, 1, "", "n_channels"], [792, 2, 1, "", "pick_channels"], [792, 2, 1, "", "pick_frequency"], [792, 2, 1, "", "plot"], [792, 2, 1, "", "save"], [792, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[793, 2, 1, "", "__contains__"], [793, 2, 1, "", "__getitem__"], [793, 2, 1, "", "__iter__"], [793, 2, 1, "", "__len__"], [793, 2, 1, "", "add_channels"], [793, 2, 1, "", "add_reference_channels"], [793, 2, 1, "", "average"], [793, 3, 1, "", "compensation_grade"], [793, 2, 1, "", "copy"], [793, 2, 1, "", "drop_channels"], [793, 2, 1, "", "get_channel_types"], [793, 2, 1, "", "get_data"], [793, 3, 1, "", "metadata"], [793, 2, 1, "", "next"], [793, 2, 1, "", "pick"], [793, 2, 1, "", "pick_channels"], [793, 2, 1, "", "pick_types"], [793, 2, 1, "", "plot"], [793, 2, 1, "", "plot_topo"], [793, 2, 1, "", "plot_topomap"], [793, 2, 1, "", "reorder_channels"], [793, 2, 1, "", "save"], [793, 2, 1, "", "to_data_frame"], [793, 2, 1, "", "units"]], "mne.time_frequency.EpochsSpectrumArray": [[794, 2, 1, "", "__contains__"], [794, 2, 1, "", "__getitem__"], [794, 2, 1, "", "__iter__"], [794, 2, 1, "", "__len__"], [794, 2, 1, "", "add_channels"], [794, 2, 1, "", "add_reference_channels"], [794, 2, 1, "", "average"], [794, 3, 1, "", "compensation_grade"], [794, 2, 1, "", "copy"], [794, 2, 1, "", "drop_channels"], [794, 2, 1, "", "get_channel_types"], [794, 2, 1, "", "get_data"], [794, 3, 1, "", "metadata"], [794, 2, 1, "", "next"], [794, 2, 1, "", "pick"], [794, 2, 1, "", "pick_channels"], [794, 2, 1, "", "pick_types"], [794, 2, 1, "", "plot"], [794, 2, 1, "", "plot_topo"], [794, 2, 1, "", "plot_topomap"], [794, 2, 1, "", "reorder_channels"], [794, 2, 1, "", "save"], [794, 2, 1, "", "to_data_frame"], [794, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[795, 2, 1, "", "__add__"], [795, 2, 1, "", "__contains__"], [795, 2, 1, "", "__getitem__"], [795, 2, 1, "", "__iter__"], [795, 2, 1, "", "__len__"], [795, 2, 1, "", "__mul__"], [795, 2, 1, "", "__sub__"], [795, 2, 1, "", "add_channels"], [795, 2, 1, "", "add_reference_channels"], [795, 2, 1, "", "apply_baseline"], [795, 2, 1, "", "average"], [795, 3, 1, "", "baseline"], [795, 3, 1, "", "ch_names"], [795, 3, 1, "", "compensation_grade"], [795, 2, 1, "", "copy"], [795, 2, 1, "", "crop"], [795, 3, 1, "", "data"], [795, 2, 1, "", "decimate"], [795, 2, 1, "", "drop"], [795, 2, 1, "", "drop_channels"], [795, 3, 1, "", "freqs"], [795, 2, 1, "", "get_channel_types"], [795, 2, 1, "", "get_data"], [795, 2, 1, "", "iter_evoked"], [795, 3, 1, "", "metadata"], [795, 3, 1, "", "method"], [795, 2, 1, "", "next"], [795, 2, 1, "", "pick"], [795, 2, 1, "", "pick_channels"], [795, 2, 1, "", "pick_types"], [795, 2, 1, "", "plot"], [795, 2, 1, "", "plot_joint"], [795, 2, 1, "", "plot_topo"], [795, 2, 1, "", "plot_topomap"], [795, 2, 1, "", "reorder_channels"], [795, 2, 1, "", "save"], [795, 3, 1, "", "sfreq"], [795, 3, 1, "", "shape"], [795, 2, 1, "", "shift_time"], [795, 2, 1, "", "time_as_index"], [795, 3, 1, "", "times"], [795, 3, 1, "", "tmax"], [795, 3, 1, "", "tmin"], [795, 2, 1, "", "to_data_frame"]], "mne.time_frequency.EpochsTFRArray": [[796, 2, 1, "", "__add__"], [796, 2, 1, "", "__contains__"], [796, 2, 1, "", "__getitem__"], [796, 2, 1, "", "__iter__"], [796, 2, 1, "", "__len__"], [796, 2, 1, "", "__mul__"], [796, 2, 1, "", "__sub__"], [796, 2, 1, "", "add_channels"], [796, 2, 1, "", "add_reference_channels"], [796, 2, 1, "", "apply_baseline"], [796, 2, 1, "", "average"], [796, 3, 1, "", "baseline"], [796, 3, 1, "", "ch_names"], [796, 3, 1, "", "compensation_grade"], [796, 2, 1, "", "copy"], [796, 2, 1, "", "crop"], [796, 3, 1, "", "data"], [796, 2, 1, "", "decimate"], [796, 2, 1, "", "drop"], [796, 2, 1, "", "drop_channels"], [796, 3, 1, "", "freqs"], [796, 2, 1, "", "get_channel_types"], [796, 2, 1, "", "get_data"], [796, 2, 1, "", "iter_evoked"], [796, 3, 1, "", "metadata"], [796, 3, 1, "", "method"], [796, 2, 1, "", "next"], [796, 2, 1, "", "pick"], [796, 2, 1, "", "pick_channels"], [796, 2, 1, "", "pick_types"], [796, 2, 1, "", "plot"], [796, 2, 1, "", "plot_joint"], [796, 2, 1, "", "plot_topo"], [796, 2, 1, "", "plot_topomap"], [796, 2, 1, "", "reorder_channels"], [796, 2, 1, "", "save"], [796, 3, 1, "", "sfreq"], [796, 3, 1, "", "shape"], [796, 2, 1, "", "shift_time"], [796, 2, 1, "", "time_as_index"], [796, 3, 1, "", "times"], [796, 3, 1, "", "tmax"], [796, 3, 1, "", "tmin"], [796, 2, 1, "", "to_data_frame"]], "mne.time_frequency.RawTFR": [[797, 2, 1, "", "__add__"], [797, 2, 1, "", "__contains__"], [797, 2, 1, "", "__getitem__"], [797, 2, 1, "", "__mul__"], [797, 2, 1, "", "__sub__"], [797, 2, 1, "", "add_channels"], [797, 2, 1, "", "add_reference_channels"], [797, 2, 1, "", "apply_baseline"], [797, 3, 1, "", "baseline"], [797, 3, 1, "", "ch_names"], [797, 3, 1, "", "compensation_grade"], [797, 2, 1, "", "copy"], [797, 2, 1, "", "crop"], [797, 3, 1, "", "data"], [797, 2, 1, "", "decimate"], [797, 2, 1, "", "drop_channels"], [797, 3, 1, "", "freqs"], [797, 2, 1, "", "get_channel_types"], [797, 2, 1, "", "get_data"], [797, 3, 1, "", "method"], [797, 2, 1, "", "pick"], [797, 2, 1, "", "pick_channels"], [797, 2, 1, "", "pick_types"], [797, 2, 1, "", "plot"], [797, 2, 1, "", "plot_joint"], [797, 2, 1, "", "plot_topo"], [797, 2, 1, "", "plot_topomap"], [797, 2, 1, "", "reorder_channels"], [797, 2, 1, "", "save"], [797, 3, 1, "", "sfreq"], [797, 3, 1, "", "shape"], [797, 2, 1, "", "shift_time"], [797, 2, 1, "", "time_as_index"], [797, 3, 1, "", "times"], [797, 3, 1, "", "tmax"], [797, 3, 1, "", "tmin"], [797, 2, 1, "", "to_data_frame"]], "mne.time_frequency.RawTFRArray": [[798, 2, 1, "", "__add__"], [798, 2, 1, "", "__contains__"], [798, 2, 1, "", "__getitem__"], [798, 2, 1, "", "__mul__"], [798, 2, 1, "", "__sub__"], [798, 2, 1, "", "add_channels"], [798, 2, 1, "", "add_reference_channels"], [798, 2, 1, "", "apply_baseline"], [798, 3, 1, "", "baseline"], [798, 3, 1, "", "ch_names"], [798, 3, 1, "", "compensation_grade"], [798, 2, 1, "", "copy"], [798, 2, 1, "", "crop"], [798, 3, 1, "", "data"], [798, 2, 1, "", "decimate"], [798, 2, 1, "", "drop_channels"], [798, 3, 1, "", "freqs"], [798, 2, 1, "", "get_channel_types"], [798, 2, 1, "", "get_data"], [798, 3, 1, "", "method"], [798, 2, 1, "", "pick"], [798, 2, 1, "", "pick_channels"], [798, 2, 1, "", "pick_types"], [798, 2, 1, "", "plot"], [798, 2, 1, "", "plot_joint"], [798, 2, 1, "", "plot_topo"], [798, 2, 1, "", "plot_topomap"], [798, 2, 1, "", "reorder_channels"], [798, 2, 1, "", "save"], [798, 3, 1, "", "sfreq"], [798, 3, 1, "", "shape"], [798, 2, 1, "", "shift_time"], [798, 2, 1, "", "time_as_index"], [798, 3, 1, "", "times"], [798, 3, 1, "", "tmax"], [798, 3, 1, "", "tmin"], [798, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[799, 2, 1, "", "__contains__"], [799, 2, 1, "", "__getitem__"], [799, 2, 1, "", "add_channels"], [799, 2, 1, "", "add_reference_channels"], [799, 3, 1, "", "compensation_grade"], [799, 2, 1, "", "copy"], [799, 2, 1, "", "drop_channels"], [799, 2, 1, "", "get_channel_types"], [799, 2, 1, "", "get_data"], [799, 2, 1, "", "pick"], [799, 2, 1, "", "pick_channels"], [799, 2, 1, "", "pick_types"], [799, 2, 1, "", "plot"], [799, 2, 1, "", "plot_topo"], [799, 2, 1, "", "plot_topomap"], [799, 2, 1, "", "reorder_channels"], [799, 2, 1, "", "save"], [799, 2, 1, "", "to_data_frame"], [799, 2, 1, "", "units"]], "mne.time_frequency.SpectrumArray": [[800, 2, 1, "", "__contains__"], [800, 2, 1, "", "__getitem__"], [800, 2, 1, "", "add_channels"], [800, 2, 1, "", "add_reference_channels"], [800, 3, 1, "", "compensation_grade"], [800, 2, 1, "", "copy"], [800, 2, 1, "", "drop_channels"], [800, 2, 1, "", "get_channel_types"], [800, 2, 1, "", "get_data"], [800, 2, 1, "", "pick"], [800, 2, 1, "", "pick_channels"], [800, 2, 1, "", "pick_types"], [800, 2, 1, "", "plot"], [800, 2, 1, "", "plot_topo"], [800, 2, 1, "", "plot_topomap"], [800, 2, 1, "", "reorder_channels"], [800, 2, 1, "", "save"], [800, 2, 1, "", "to_data_frame"], [800, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[821, 4, 1, "", "cwt"], [822, 4, 1, "", "morlet"]], "mne.transforms": [[831, 1, 1, "", "Transform"], [832, 4, 1, "", "apply_volume_registration"], [833, 4, 1, "", "apply_volume_registration_points"], [834, 4, 1, "", "compute_volume_registration"], [835, 4, 1, "", "quat_to_rot"], [836, 4, 1, "", "read_ras_mni_t"], [837, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[831, 2, 1, "", "__contains__"], [831, 2, 1, "", "__getitem__"], [831, 2, 1, "", "__iter__"], [831, 2, 1, "", "__len__"], [831, 2, 1, "", "clear"], [831, 2, 1, "", "copy"], [831, 3, 1, "", "from_str"], [831, 2, 1, "", "fromkeys"], [831, 2, 1, "", "get"], [831, 2, 1, "", "items"], [831, 2, 1, "", "keys"], [831, 2, 1, "", "pop"], [831, 2, 1, "", "popitem"], [831, 2, 1, "", "save"], [831, 2, 1, "", "setdefault"], [831, 3, 1, "", "to_str"], [831, 2, 1, "", "update"], [831, 2, 1, "", "values"]], "mne.utils": [[840, 1, 1, "", "deprecated"], [841, 4, 1, "", "warn"]], "mne.viz": [[844, 1, 1, "", "Brain"], [845, 1, 1, "", "ClickableImage"], [846, 1, 1, "", "EvokedField"], [847, 1, 1, "", "Figure3D"], [848, 4, 1, "", "add_background_image"], [849, 4, 1, "", "centers_to_edges"], [850, 4, 1, "", "circular_layout"], [851, 4, 1, "", "close_3d_figure"], [852, 4, 1, "", "close_all_3d_figures"], [853, 4, 1, "", "compare_fiff"], [854, 4, 1, "", "create_3d_figure"], [23, 0, 0, "-", "eyetracking"], [856, 4, 1, "", "get_3d_backend"], [857, 4, 1, "", "get_brain_class"], [858, 4, 1, "", "get_browser_backend"], [859, 4, 1, "", "iter_topography"], [860, 4, 1, "", "link_brains"], [861, 4, 1, "", "mne_analyze_colormap"], [862, 4, 1, "", "plot_alignment"], [863, 4, 1, "", "plot_arrowmap"], [864, 4, 1, "", "plot_bem"], [865, 4, 1, "", "plot_brain_colorbar"], [866, 4, 1, "", "plot_bridged_electrodes"], [867, 4, 1, "", "plot_ch_adjacency"], [868, 4, 1, "", "plot_channel_labels_circle"], [869, 4, 1, "", "plot_chpi_snr"], [870, 4, 1, "", "plot_compare_evokeds"], [871, 4, 1, "", "plot_cov"], [872, 4, 1, "", "plot_csd"], [873, 4, 1, "", "plot_dipole_amplitudes"], [874, 4, 1, "", "plot_dipole_locations"], [875, 4, 1, "", "plot_drop_log"], [876, 4, 1, "", "plot_epochs"], [877, 4, 1, "", "plot_epochs_image"], [878, 4, 1, "", "plot_epochs_psd_topomap"], [879, 4, 1, "", "plot_events"], [880, 4, 1, "", "plot_evoked"], [881, 4, 1, "", "plot_evoked_field"], [882, 4, 1, "", "plot_evoked_image"], [883, 4, 1, "", "plot_evoked_joint"], [884, 4, 1, "", "plot_evoked_topo"], [885, 4, 1, "", "plot_evoked_topomap"], [886, 4, 1, "", "plot_evoked_white"], [887, 4, 1, "", "plot_filter"], [888, 4, 1, "", "plot_head_positions"], [889, 4, 1, "", "plot_ica_components"], [890, 4, 1, "", "plot_ica_overlay"], [891, 4, 1, "", "plot_ica_properties"], [892, 4, 1, "", "plot_ica_scores"], [893, 4, 1, "", "plot_ica_sources"], [894, 4, 1, "", "plot_ideal_filter"], [895, 4, 1, "", "plot_layout"], [896, 4, 1, "", "plot_montage"], [897, 4, 1, "", "plot_projs_joint"], [898, 4, 1, "", "plot_projs_topomap"], [899, 4, 1, "", "plot_raw"], [900, 4, 1, "", "plot_raw_psd"], [901, 4, 1, "", "plot_regression_weights"], [902, 4, 1, "", "plot_sensors"], [903, 4, 1, "", "plot_snr_estimate"], [904, 4, 1, "", "plot_source_estimates"], [905, 4, 1, "", "plot_sparse_source_estimates"], [906, 4, 1, "", "plot_tfr_topomap"], [907, 4, 1, "", "plot_topo_image_epochs"], [908, 4, 1, "", "plot_topomap"], [909, 4, 1, "", "plot_vector_source_estimates"], [910, 4, 1, "", "plot_volume_source_estimates"], [911, 4, 1, "", "set_3d_backend"], [912, 4, 1, "", "set_3d_options"], [913, 4, 1, "", "set_3d_title"], [914, 4, 1, "", "set_3d_view"], [915, 4, 1, "", "set_browser_backend"], [916, 4, 1, "", "snapshot_brain_montage"], [23, 0, 0, "-", "ui_events"], [930, 4, 1, "", "use_3d_backend"], [931, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[844, 2, 1, "", "add_annotation"], [844, 2, 1, "", "add_data"], [844, 2, 1, "", "add_dipole"], [844, 2, 1, "", "add_foci"], [844, 2, 1, "", "add_forward"], [844, 2, 1, "", "add_head"], [844, 2, 1, "", "add_label"], [844, 2, 1, "", "add_sensors"], [844, 2, 1, "", "add_skull"], [844, 2, 1, "", "add_text"], [844, 2, 1, "", "add_volume_labels"], [844, 2, 1, "", "apply_auto_scaling"], [844, 2, 1, "", "clear_glyphs"], [844, 2, 1, "", "close"], [844, 3, 1, "", "data"], [844, 2, 1, "", "get_picked_points"], [844, 2, 1, "", "get_view"], [844, 2, 1, "", "help"], [844, 3, 1, "", "interaction"], [844, 2, 1, "", "plot_time_course"], [844, 2, 1, "", "plot_time_line"], [844, 2, 1, "", "remove_annotations"], [844, 2, 1, "", "remove_data"], [844, 2, 1, "", "remove_dipole"], [844, 2, 1, "", "remove_forward"], [844, 2, 1, "", "remove_head"], [844, 2, 1, "", "remove_labels"], [844, 2, 1, "", "remove_sensors"], [844, 2, 1, "", "remove_skull"], [844, 2, 1, "", "remove_text"], [844, 2, 1, "", "remove_volume_labels"], [844, 2, 1, "", "reset"], [844, 2, 1, "", "reset_view"], [844, 2, 1, "", "restore_user_scaling"], [844, 2, 1, "", "save_image"], [844, 2, 1, "", "save_movie"], [844, 2, 1, "", "screenshot"], [844, 2, 1, "", "set_data_smoothing"], [844, 2, 1, "", "set_playback_speed"], [844, 2, 1, "", "set_time"], [844, 2, 1, "", "set_time_interpolation"], [844, 2, 1, "", "set_time_point"], [844, 2, 1, "", "setup_time_viewer"], [844, 2, 1, "", "show"], [844, 2, 1, "", "show_view"], [844, 3, 1, "", "time_interpolation"], [844, 2, 1, "", "toggle_interface"], [844, 2, 1, "", "toggle_playback"], [844, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[845, 2, 1, "", "onclick"], [845, 2, 1, "", "plot_clicks"], [845, 2, 1, "", "to_layout"]], "mne.viz.EvokedField": [[846, 2, 1, "", "set_contours"], [846, 2, 1, "", "set_time"], [846, 2, 1, "", "set_vmax"]], "mne.viz.Figure3D": [[847, 3, 1, "", "plotter"]], "mne.viz.eyetracking": [[855, 4, 1, "", "plot_gaze"]], "mne.viz.ui_events": [[917, 1, 1, "", "ColormapRange"], [918, 1, 1, "", "Contours"], [919, 1, 1, "", "FigureClosing"], [920, 1, 1, "", "PlaybackSpeed"], [921, 1, 1, "", "TimeChange"], [922, 1, 1, "", "UIEvent"], [923, 1, 1, "", "VertexSelect"], [924, 4, 1, "", "disable_ui_events"], [925, 4, 1, "", "link"], [926, 4, 1, "", "publish"], [927, 4, 1, "", "subscribe"], [928, 4, 1, "", "unlink"], [929, 4, 1, "", "unsubscribe"]], "mne.viz.ui_events.ColormapRange": [[917, 3, 1, "", "name"]], "mne.viz.ui_events.Contours": [[918, 3, 1, "", "name"]], "mne.viz.ui_events.FigureClosing": [[919, 3, 1, "", "name"]], "mne.viz.ui_events.PlaybackSpeed": [[920, 3, 1, "", "name"]], "mne.viz.ui_events.TimeChange": [[921, 3, 1, "", "name"]], "mne.viz.ui_events.UIEvent": [[922, 3, 1, "", "name"]], "mne.viz.ui_events.VertexSelect": [[923, 3, 1, "", "name"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 24, 53, 173, 311], "estim": [0, 45, 60, 64, 67, 68, 69, 70, 83, 118, 180, 192, 193, 208, 209, 223, 237, 252, 267, 318, 322], "covari": [1, 60, 68, 75, 91, 149, 189, 199, 204, 207, 252, 318, 322, 330, 946], "comput": [1, 25, 32, 42, 46, 47, 51, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 68, 71, 72, 73, 75, 77, 80, 81, 82, 84, 85, 86, 93, 97, 112, 116, 118, 119, 122, 130, 131, 132, 134, 135, 136, 137, 138, 140, 157, 163, 166, 175, 181, 185, 186, 189, 191, 197, 201, 204, 206, 207, 215, 222, 226, 230, 232, 233, 234, 237, 243, 249, 250, 255, 258, 259, 261, 263, 264, 265, 266, 268, 273, 277, 314, 318, 322, 325, 966], "creat": [2, 45, 118, 122, 143, 144, 164, 167, 171, 176, 216, 223, 232, 235, 236, 246, 251, 252, 260, 311, 318, 322, 325], "data": [2, 15, 18, 20, 29, 30, 31, 33, 34, 37, 39, 41, 44, 45, 47, 53, 55, 56, 67, 68, 75, 77, 83, 86, 90, 92, 98, 100, 103, 107, 108, 113, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 137, 142, 143, 144, 147, 148, 149, 150, 162, 163, 164, 167, 168, 169, 173, 174, 176, 177, 179, 186, 192, 193, 194, 195, 196, 199, 202, 204, 205, 207, 216, 217, 218, 219, 220, 221, 223, 229, 231, 232, 239, 240, 241, 244, 245, 246, 247, 248, 251, 252, 253, 257, 260, 261, 262, 264, 265, 266, 269, 271, 318, 319, 322, 325, 754, 946], "object": [2, 63, 70, 164, 167, 169, 170, 172, 176, 177, 195, 196, 244, 246, 247, 251, 269, 319, 946], "from": [2, 33, 34, 41, 45, 63, 64, 69, 70, 88, 118, 132, 164, 167, 169, 171, 176, 195, 196, 216, 217, 218, 220, 232, 235, 239, 241, 244, 245, 246, 247, 251, 252, 325, 949], "arrai": [2, 142, 195, 245, 322], "dataset": [3, 26, 27, 28, 30, 33, 53, 97, 110, 210, 211, 212, 213, 219, 244, 271, 319, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 946], "decod": [4, 34, 35, 37, 38, 39, 41, 43, 44, 53, 224, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503], "event": [5, 23, 30, 96, 101, 141, 164, 171, 178, 193, 195, 199, 241, 245, 275, 511, 512, 513], "export": [6, 144, 172, 188, 244, 515, 516, 517, 518], "file": [7, 79, 88, 197, 199, 217, 245, 246, 318, 322, 325, 946], "i": [7, 189, 195, 197, 233, 234, 235, 322, 946, 951, 958, 959], "o": [7, 322], "forward": [8, 49, 53, 73, 137, 185, 186, 190, 192, 199, 207, 318, 322, 337, 529, 530, 531, 532, 946], "model": [8, 30, 45, 49, 53, 71, 139, 184, 185, 190, 192, 193, 204, 207, 223, 225, 236, 312, 314, 318, 322, 325], "invers": [9, 53, 54, 55, 56, 57, 61, 62, 65, 66, 67, 68, 73, 78, 83, 122, 132, 192, 193, 204, 214, 240, 316, 318, 322, 946], "solut": [9, 54, 55, 56, 61, 65, 66, 67, 73, 87, 132, 185, 199, 204, 206, 230, 233, 318, 322, 325, 946], "log": [10, 198, 217], "configur": [10, 198, 311, 958], "most": 11, "us": [11, 34, 35, 40, 44, 52, 58, 59, 60, 61, 65, 73, 83, 90, 94, 98, 111, 122, 164, 170, 173, 176, 182, 183, 184, 187, 188, 198, 207, 223, 229, 233, 236, 238, 260, 275, 311, 318, 322, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 356, 357, 359, 361, 362, 363, 366, 367, 368, 369, 371, 372, 380, 381, 382, 383, 384, 386, 388, 392, 393, 394, 396, 398, 400, 404, 408, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 443, 445, 454, 461, 476, 477, 485, 486, 488, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 511, 514, 519, 520, 521, 525, 526, 528, 533, 534, 537, 538, 542, 544, 547, 548, 549, 550, 552, 553, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 574, 575, 576, 578, 581, 582, 583, 585, 586, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 625, 627, 629, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 645, 646, 647, 650, 651, 652, 653, 654, 655, 656, 658, 659, 661, 662, 663, 665, 666, 667, 668, 675, 676, 678, 679, 680, 682, 683, 684, 688, 690, 691, 694, 695, 696, 697, 698, 699, 700, 703, 706, 708, 710, 711, 714, 716, 718, 719, 720, 721, 723, 727, 729, 730, 732, 733, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 761, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 804, 805, 806, 807, 809, 812, 815, 823, 826, 827, 828, 836, 838, 839, 843, 844, 845, 846, 850, 854, 855, 857, 859, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 877, 879, 881, 882, 884, 886, 887, 888, 894, 897, 898, 903, 904, 905, 908, 909, 913, 914, 916, 921, 922, 925, 926, 927, 931, 939, 944, 946, 951], "class": [11, 224, 269, 314, 951, 958], "mri": [12, 182, 183, 186, 187, 199, 207, 209, 319, 322, 325], "process": [12, 67, 150, 194, 207, 311, 314], "preprocess": [13, 53, 105, 137, 163, 168, 192, 193, 239, 240, 242, 246, 271, 318, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692], "python": [14, 150, 164, 165, 182, 187, 188, 192, 193, 198, 199, 228, 230, 233, 234, 238, 241, 244, 251, 311, 313, 314, 316, 317, 320, 325, 946, 948, 950, 954, 955, 956, 957, 960], "api": [14, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 320, 965], "refer": [14, 26, 30, 34, 36, 38, 39, 41, 42, 44, 45, 47, 59, 61, 66, 68, 69, 70, 72, 77, 80, 81, 84, 85, 86, 92, 97, 98, 102, 103, 106, 110, 111, 115, 122, 129, 137, 140, 141, 145, 147, 149, 155, 164, 168, 171, 178, 182, 184, 189, 203, 205, 207, 210, 211, 217, 219, 223, 224, 228, 230, 232, 233, 234, 235, 236, 238, 240, 253, 256, 257, 261, 269, 311, 318, 319, 322, 946], "read": [15, 69, 70, 73, 78, 79, 91, 92, 164, 192, 195, 197, 217, 221, 245, 246, 261, 264, 266, 946], "raw": [15, 26, 33, 55, 97, 108, 118, 121, 122, 164, 167, 179, 195, 199, 204, 232, 239, 240, 241, 244, 245, 246, 247, 251, 322, 325, 552, 946], "realtim": [16, 314], "mne": [17, 54, 56, 67, 68, 80, 87, 104, 144, 150, 153, 165, 182, 187, 188, 192, 193, 198, 199, 204, 206, 216, 228, 230, 233, 234, 238, 241, 244, 251, 256, 311, 313, 316, 317, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 950, 954, 955, 956, 958, 959, 960, 962], "report": [17, 199, 230, 325, 343], "sensor": [18, 39, 44, 48, 111, 124, 125, 128, 129, 144, 146, 152, 154, 160, 163, 169, 192, 197, 218, 224, 235, 239, 240, 247, 252, 261, 262, 270, 322], "space": [18, 20, 35, 37, 39, 44, 50, 52, 56, 67, 80, 84, 129, 132, 135, 138, 173, 185, 186, 190, 192, 205, 224, 234, 235, 238, 245, 252, 264, 266, 318, 322, 325], "simul": [19, 53, 117, 118, 120, 121, 122, 123, 142, 192, 223, 233, 252, 253, 254, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756], "sourc": [20, 37, 50, 52, 53, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 70, 71, 73, 80, 84, 98, 118, 122, 123, 132, 135, 136, 137, 138, 144, 183, 185, 186, 190, 192, 199, 203, 204, 205, 207, 208, 209, 214, 224, 236, 252, 264, 265, 266, 267, 314, 318, 322, 325], "statist": [21, 53, 126, 192, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 271, 314, 322], "time": [22, 25, 32, 35, 39, 46, 51, 53, 58, 63, 65, 72, 82, 85, 93, 96, 97, 99, 101, 112, 113, 116, 119, 122, 130, 133, 134, 142, 157, 163, 166, 167, 169, 171, 172, 175, 181, 191, 192, 193, 201, 208, 215, 222, 224, 226, 233, 243, 244, 249, 250, 255, 258, 259, 261, 263, 268, 270, 271, 272, 273, 277, 314, 966], "frequenc": [22, 35, 53, 58, 72, 85, 133, 141, 142, 163, 192, 193, 218, 227, 230, 237, 258, 259, 261, 269, 270, 271, 272, 314, 319], "visual": [23, 30, 45, 53, 73, 74, 75, 76, 80, 81, 101, 140, 145, 150, 151, 163, 167, 169, 171, 176, 177, 183, 185, 192, 197, 204, 207, 208, 209, 223, 232, 233, 234, 235, 237, 240, 256, 261, 264, 265, 266, 269, 276, 311, 314, 319], "eyetrack": [23, 220, 319, 658, 659, 660, 661, 662, 663, 855], "ui": 23, "analysi": [24, 30, 36, 40, 53, 62, 164, 173, 178, 192, 193, 246, 262, 267, 270, 271, 272, 320, 946, 949], "exampl": [24, 28, 53, 126, 133, 165, 173, 183, 192, 202, 224, 233, 234, 235, 314, 319, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 356, 357, 359, 361, 362, 363, 366, 367, 368, 369, 371, 372, 380, 381, 382, 383, 384, 386, 388, 392, 393, 394, 396, 398, 400, 404, 408, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 443, 445, 454, 461, 476, 477, 485, 486, 488, 489, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 511, 514, 519, 520, 521, 525, 526, 528, 533, 534, 537, 538, 542, 544, 547, 548, 549, 550, 552, 553, 558, 559, 560, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 574, 575, 576, 578, 581, 582, 583, 585, 586, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 611, 612, 614, 615, 616, 617, 619, 620, 621, 622, 625, 627, 629, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 645, 646, 647, 650, 651, 652, 653, 654, 655, 656, 658, 659, 661, 662, 663, 665, 666, 667, 668, 675, 676, 678, 679, 680, 682, 683, 684, 688, 690, 691, 694, 695, 696, 697, 698, 699, 700, 703, 706, 708, 710, 711, 714, 716, 718, 719, 720, 721, 723, 727, 729, 730, 732, 733, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 761, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 804, 805, 806, 807, 809, 812, 815, 823, 826, 827, 828, 836, 838, 839, 843, 844, 845, 846, 850, 854, 855, 857, 859, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873, 874, 877, 879, 881, 882, 884, 886, 887, 888, 894, 897, 898, 903, 904, 905, 908, 909, 913, 914, 916, 921, 922, 925, 926, 927, 931, 939, 944], "brainstorm": [26, 210, 211, 219, 319, 449, 450, 451], "median": [26, 319], "nerv": [26, 319], "hf": 27, "sef": [27, 319], "open": [28, 53, 311, 314, 325], "kernel": [29, 319], "opm": [29, 31, 137, 216, 240, 314, 319, 471], "phantom": [29, 210, 211, 212, 213, 319], "singl": [30, 54, 132, 156, 258, 259, 260], "trial": [30, 156, 239, 245, 258, 259, 260, 270, 271], "linear": [30, 44, 322, 325], "regress": [30, 100, 127, 129, 168, 232, 240], "limo": [30, 319, 467], "about": [30, 197, 198, 227, 322], "load": [30, 45, 73, 100, 143, 144, 150, 163, 164, 167, 168, 176, 186, 193, 202, 205, 218, 223, 234, 241, 244, 252, 322], "condit": [30, 39, 159, 178, 259, 260], "erp": [30, 168, 171, 178, 319], "effect": [30, 42, 223, 224, 232, 234, 256, 271, 322], "stimulu": [30, 45, 241], "phase": [30, 135], "coher": [30, 270], "prepar": [30, 31, 171, 232, 266], "defin": [30, 96, 118, 183, 256, 258], "predictor": 30, "variabl": [30, 101, 198, 311], "design": [30, 164, 224, 230, 320], "matrix": [30, 67, 91, 97, 131, 189, 256, 264, 318, 322, 946], "extract": [30, 63, 65, 122, 164, 167, 237, 239, 241, 244, 271], "coeffici": [30, 45], "plot": [30, 44, 60, 67, 68, 69, 70, 73, 74, 76, 87, 96, 97, 108, 109, 111, 144, 146, 147, 148, 150, 152, 153, 154, 155, 156, 160, 163, 168, 169, 177, 179, 189, 197, 239, 240, 241, 245, 247, 252, 258, 259, 270, 271, 274, 275, 946, 951], "result": [30, 69, 70, 80, 271], "optic": [31, 239, 240], "pump": [31, 240], "magnetomet": [31, 240], "local": [31, 57, 192, 203, 204, 205, 209, 214, 311, 318], "perform": [31, 100, 118, 163, 223], "dipol": [31, 71, 118, 144, 203, 205, 208, 331, 505], "fit": [31, 45, 184, 203, 208, 223, 233], "minimum": [31, 322], "norm": [31, 66, 322], "dspm": [33, 54, 56, 60, 80, 122, 138, 204, 322], "spm": [33, 319], "face": [33, 319], "motor": [34, 319], "imageri": [34, 319], "eeg": [34, 41, 48, 81, 84, 92, 94, 97, 98, 106, 146, 154, 178, 186, 193, 209, 216, 217, 236, 241, 257, 271, 314, 318, 319, 322], "common": [34, 35, 224, 241, 264, 266, 269], "spatial": [34, 35, 42, 47, 80, 81, 207, 224, 252], "pattern": [34, 35, 44, 224], "csp": [34, 35, 485], "represent": [36, 142, 239, 260, 322], "similar": [36, 176], "continu": [38, 108, 127, 129, 173, 174, 192, 193, 218, 223, 237, 244, 246, 247, 248, 322], "target": [38, 96], "spoc": [38, 224, 492], "gener": [39, 50, 64, 101, 120, 121, 123, 171, 217, 224, 229, 240, 252, 278, 311, 322, 946], "across": [39, 97, 109, 178, 239], "evok": [40, 56, 60, 67, 77, 86, 96, 113, 118, 120, 122, 147, 148, 149, 159, 176, 177, 178, 179, 180, 192, 193, 199, 204, 232, 240, 251, 274, 318, 335], "respons": [40, 96, 159, 171, 178, 180, 192, 193, 204, 223, 232, 239, 240, 964], "ica": [40, 104, 110, 199, 233, 318, 638], "pca": [40, 73, 325], "reduct": [40, 233, 234, 235], "techniqu": 40, "xdawn": [41, 115, 224, 639], "match": [42, 224, 233], "filter": [42, 44, 47, 75, 107, 142, 178, 207, 224, 230, 231, 233, 238, 240, 322, 520, 521, 522, 523, 524, 525], "em": [42, 486], "machin": [43, 53, 192, 225], "learn": [43, 53, 164, 192, 225], "encod": [43, 53, 754], "mvpa": [43, 53, 224], "classifi": 44, "logisticregress": 44, "recept": [45, 223], "field": [45, 177, 178, 223, 240, 322], "predict": [45, 322], "public": [45, 274], "investig": 45, "reconstruct": [45, 118, 122, 182, 187, 207, 235, 318], "spectro": [47, 223], "decomposit": 47, "ssd": [47, 493], "epoch": [47, 54, 68, 101, 122, 132, 142, 145, 150, 164, 167, 169, 170, 171, 172, 173, 174, 176, 178, 179, 192, 193, 199, 229, 232, 233, 239, 251, 261, 264, 266, 318, 322, 333, 506, 507, 508, 509], "displai": [48, 150], "sensit": [48, 158], "map": [48, 61, 140, 148, 158, 169, 176, 177, 245, 253, 322], "meg": [48, 81, 102, 106, 114, 152, 160, 193, 216, 240, 252, 314, 319, 322], "left": [50, 239], "cerebellum": 50, "volum": [50, 56, 67, 76, 208], "morph": [52, 69, 70, 207, 322], "galleri": 53, "input": [53, 89], "output": [53, 89, 187, 207], "problem": [53, 62, 230], "sloreta": [55, 204, 322], "custom": [57, 160, 199, 218, 274, 275], "solver": 57, "level": [58, 124], "timecours": [58, 71, 274], "dic": [58, 59, 60, 253], "beamform": [58, 59, 60, 75, 207, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371], "power": [59, 60, 68, 132, 135, 136, 137, 138, 163, 169, 178, 224, 227, 231, 253, 258, 259, 260, 270, 271], "er": 60, "lcmv": [60, 75, 207], "spars": [61, 66, 85], "gamma": [61, 163], "empir": 61, "bayesian": 61, "method": [61, 103, 240, 244, 247, 256], "cours": [63, 122, 208], "source_estim": 63, "function": [64, 73, 74, 75, 76, 164, 229, 239, 256, 266, 311, 946], "label": [64, 65, 67, 73, 132, 135, 136, 252, 339, 590], "seri": [65, 97, 169], "activ": [65, 118, 122, 156, 192, 207, 225, 239, 274], "view": [65, 67, 109, 144, 170, 239, 258, 259, 325], "vector": [65, 69, 87, 199, 207, 208, 224, 500], "mix": [66, 67], "mxne": [66, 72, 85], "irmxn": 66, "set": [67, 69, 172, 178, 184, 198, 217, 236, 258, 260, 261, 264, 265, 266, 311, 318, 319, 325], "up": [67, 69, 184, 188, 311, 318, 325], "our": [67, 209], "fwd": 67, "surfac": [67, 69, 185, 187, 188, 197, 208, 209, 239, 318, 322, 325, 786, 787], "project": [68, 111, 143, 158, 197, 199, 224, 234, 312, 322, 325, 342], "empti": [68, 235], "room": [68, 235], "appli": [68, 69, 70, 103, 164, 171, 207, 216, 218, 230, 232, 234, 271, 325], "oper": [68, 73, 78, 122, 142, 185, 186, 188, 246, 318, 320, 322], "sourcemorph": [69, 70, 345], "sourceestim": [69, 199, 202, 344], "write": [69, 70, 91, 245, 246], "disk": [69, 70, 167], "volumetr": [70, 207, 322], "get": [70, 88, 186, 188, 198, 199, 209, 271, 946, 947, 948, 959], "volsourceestim": [70, 348], "convert": [70, 143, 172, 195, 239, 325], "nifti": 70, "an": [71, 78, 79, 83, 97, 145, 169, 170, 172, 184, 186, 188, 195, 196, 199, 207, 209, 233, 236, 240, 271, 318], "xfit": 71, "like": [71, 197], "multi": 71, "iter": [72, 167], "reweight": 72, "tf": 72, "multiscal": 72, "dictionari": 72, "leakag": 73, "among": [73, 176], "circular": 73, "graph": 73, "organis": 73, "cortic": [73, 95, 155, 163, 187, 264, 266, 318, 322], "parcel": [73, 155], "point": [73, 74, 76, 184, 252, 322], "spread": [73, 74, 76, 252], "summari": [73, 97, 194, 202, 227, 228, 230, 244, 290], "all": [73, 207, 228, 260, 264, 266, 311, 946, 956, 960], "evalu": [73, 239], "base": [73, 96, 164, 168, 229, 320, 322, 325], "psf": [73, 74, 76], "correl": 73, "save": [73, 167, 176, 199, 234, 244], "figur": [73, 199, 274, 275], "option": [73, 148, 311, 325, 946], "individu": 73, "cross": [74, 75, 131, 161, 311], "talk": [74, 75], "ctf": [74, 152, 211, 216, 219], "differ": [75, 104, 118, 159, 168, 192, 221, 223, 271], "matric": [75, 189, 207], "resolut": [75, 80, 81, 188, 220, 325], "two": [75, 252], "rap": 77, "music": [77, 86], "stc": [79, 118, 202, 208], "metric": [80, 81, 97, 744, 745, 746, 747, 748, 749, 750, 751], "compar": [81, 97, 104, 118, 159, 177, 178, 223, 239, 240, 256, 325], "eegmeg": 81, "snr": [83, 84, 237, 271], "prior": 85, "trap": 86, "full": [87, 261], "valu": [87, 172, 271], "averag": [88, 142, 176, 178, 236, 322], "info": [88, 196, 244, 251, 325, 338], "fif": [88, 216, 325, 946], "how": [90, 143, 187, 189, 228, 235, 246, 316, 946], "neural": [90, 192, 223, 225, 239], "ensembl": 90, "neo": 90, "format": [90, 172, 217, 218, 322], "nois": [91, 149, 204, 227, 231, 234, 235, 252, 271, 318, 319, 322], "xdf": [92, 217], "contralater": 94, "referenc": [94, 220], "signal": [95, 177, 194, 195, 234, 235, 237, 238, 239, 240, 252, 271, 322], "suppress": [95, 318], "css": 95, "remov": [95, 100, 110, 233, 234, 239, 264, 266], "lag": 96, "identifi": 97, "electrod": [97, 143, 163, 209, 217, 322], "bridg": 97, "too": 97, "much": 97, "gel": 97, "electr": 97, "distanc": 97, "examin": [97, 168, 240], "distribut": [97, 103, 205, 314, 957], "topomap": [97, 148], "voltag": 97, "subject": [97, 122, 237, 319, 325], "eegbci": [97, 110, 319, 452, 453], "The": [97, 167, 171, 176, 194, 195, 196, 197, 202, 205, 207, 229, 244, 269, 312, 318, 319, 322], "relationship": [97, 202], "between": [97, 195, 259], "imped": 97, "transform": [98, 142, 164, 183, 187, 224, 264, 266, 322, 831, 832, 833, 834, 835, 836, 837], "current": [98, 144, 203, 322, 324, 964], "densiti": [98, 131, 132, 136, 137, 239, 247, 271], "csd": [98, 131], "show": [99, 241, 325], "eog": [99, 100, 227, 232, 233, 235, 325], "artifact": [99, 100, 102, 103, 108, 109, 227, 231, 232, 233, 235, 241, 318, 325], "reduc": 100, "through": 100, "import": [100, 103, 216, 217, 218, 220, 274, 311, 325], "packag": [100, 322, 960], "befor": [100, 232, 311], "after": [100, 951], "comparison": [100, 161, 256, 260], "autom": [101, 184], "metadata": [101, 170, 171], "window": [101, 946, 951], "declar": 101, "row": 101, "specifi": [101, 171, 218], "fix": [101, 173, 188, 205, 206], "keep_first": 101, "simplifi": 101, "find": [102, 252, 261, 264], "channel": [102, 106, 114, 145, 167, 172, 176, 178, 194, 195, 196, 197, 216, 228, 229, 233, 236, 239, 244, 261, 264, 266, 271, 318, 319, 322, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 754], "visualis": [103, 257], "nir": [103, 678, 679, 680, 681, 682, 683], "correct": [103, 125, 168, 171, 240, 256], "add": [103, 144], "artifici": 103, "tempor": [103, 111, 139, 223, 224, 264, 265, 266], "deriv": 103, "repair": [103, 231, 232, 233, 235, 322], "algorithm": [104, 316, 322, 325], "interpol": [106, 148, 228, 322], "bad": [106, 183, 184, 188, 228, 229, 264, 266, 318, 322], "maxwel": [107, 238, 322], "movement": [107, 108, 237, 238], "compens": [107, 216, 238, 322], "annot": [108, 109, 164, 195, 229, 239, 241, 246, 318, 327], "reestim": 108, "dev_head_t": 108, "head": [108, 144, 183, 185, 187, 188, 209, 217, 220, 237, 318, 322, 325], "posit": [108, 143, 144, 220, 237], "respect": 108, "mean": [108, 178], "record": [108, 109, 192, 217, 221, 235], "muscl": [109, 110], "z": 109, "score": [109, 118], "compon": [110, 171, 207, 233], "let": 110, "": [110, 142, 187, 315], "now": 110, "replic": 110, "thi": [110, 223], "denois": [111, 115, 240], "oversampl": 111, "shift": 113, "scale": [113, 172, 179, 322], "remap": 114, "type": [114, 167, 178, 196, 223, 230, 244, 271, 311, 322, 325], "main": 118, "paramet": [118, 194, 229, 258, 260, 261, 264, 265, 266], "true": 118, "correspond": [118, 318], "amplitud": [118, 178, 229], "threshold": [118, 256, 257], "For": 118, "region": [118, 144, 178], "anatomi": 122, "responss": 122, "permut": [124, 128, 260, 261, 264, 265], "f": [124, 127, 261], "test": [124, 125, 128, 164, 256, 260, 261, 264, 265, 311, 952, 958], "1d": 124, "cluster": [124, 256, 258, 259, 260, 261, 264, 265, 266, 314], "fdr": [125, 256, 260], "t": [125, 128, 264, 946], "rer": 127, "p": 127, "analys": [129, 318], "featur": [129, 163, 164, 310], "bin": [129, 216, 946], "spectral": [131, 132, 136, 137, 247, 269, 271], "psd": [132, 136, 137, 271], "lock": [135, 171], "vectorview": [137, 216, 244], "align": [137, 183, 187, 241, 318, 325, 754], "alpha": 137, "beta": 137, "induc": 138, "whiten": [139, 149, 179, 322], "ar": [139, 176, 198, 227, 234, 946], "erd": 140, "explor": [141, 163], "relat": [141, 178, 959], "dynam": 141, "specif": 141, "band": 141, "multitap": 142, "v": [142, 224, 244, 955], "morlet": [142, 812, 822], "stockwel": 142, "hilbert": 142, "calcul": [142, 271, 318, 322], "tfr": [142, 260, 821, 822], "wavelet": 142, "narrow": 142, "bandpass": 142, "without": [142, 183], "over": [142, 145, 167, 224, 239, 275], "3d": [143, 177, 197, 207, 314, 322, 946, 951], "2d": [143, 197, 207, 314], "imag": [143, 144, 145, 150, 169, 177, 199, 239, 314, 316, 322, 325], "snapshot": 143, "manual": [143, 197, 233], "viz": [144, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931], "brain": [144, 153, 163, 187, 207, 239, 274, 844], "inform": [144, 196, 198, 205, 230, 239, 318, 322, 325], "modifi": [144, 170, 194, 244, 311], "highlight": 144, "includ": [144, 245, 325], "screenshot": 144, "scalp": [146, 168, 177], "topograph": [147, 148, 177, 179, 239], "arrowmap": 147, "basic": [148, 163, 167, 171, 176, 230, 271, 311], "plot_topomap": [148, 908], "addit": 148, "more": [148, 239, 274], "advanc": [148, 951], "usag": 148, "anim": 148, "ey": [150, 220, 241, 314], "track": [150, 241, 314], "heatmap": 150, "overlai": [150, 275], "unit": [150, 251, 322], "angl": [150, 220], "layout": [152, 154, 197, 260, 383], "system": [152, 154, 192, 198, 216, 218, 221, 275, 322, 325, 958], "neuromag": [152, 216], "bti": [152, 212, 216, 319, 325], "kit": [152, 213, 216, 319, 325, 556], "artemis123": [152, 216], "helmet": 153, "group": [156, 171, 318], "roi": [156, 271], "sort": 156, "rt": 156, "ssp": [158, 234, 235, 318, 322, 325], "topographi": [160, 168, 177, 271], "hemispher": [161, 318, 325], "work": [162, 163, 170, 192, 197, 199, 219, 228, 241, 245, 248, 946, 951], "seeg": [162, 314, 319], "ecog": [163, 314, 319], "templat": [163, 186, 233, 319], "evolut": 163, "sleep": [164, 319], "stage": 164, "classif": 164, "polysomnographi": 164, "psg": 164, "hypnogram": 164, "30": 164, "found": [164, 946], "same": 164, "step": [164, 182, 946, 955], "bob": 164, "engin": 164, "scikit": 164, "multiclass": 164, "workflow": [164, 311, 318], "further": 164, "exercis": [164, 185, 224, 252, 261, 270, 271], "clinic": [165, 192, 314], "applic": [165, 192], "gui": [165, 183, 192, 311, 325, 544], "addon": [165, 192], "structur": [167, 176, 195, 196, 202, 216, 244, 251, 322], "discontinu": 167, "subselect": [167, 245], "select": [167, 170, 176, 233, 239, 244, 264], "index": [167, 172, 244, 271], "drop": [167, 176, 196, 244], "reorder": [167, 176, 244], "chang": [167, 236, 244, 290, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 311], "name": [167, 178, 216, 244, 311], "domain": [167, 218, 233, 244, 269], "other": [167, 176, 230, 310, 311, 316, 322, 324, 949, 956, 957], "form": [167, 271], "baselin": [168, 230, 252, 356], "tradit": 168, "regressor": 168, "wave": [168, 218], "interact": [168, 169, 246, 247, 275, 320], "term": 168, "pipelin": [169, 314], "script": [169, 199, 320], "projector": [169, 234, 235, 236, 247], "locat": [169, 178, 197, 209, 217, 218, 239, 247, 322], "spectrum": [169, 269, 799], "restrict": 170, "datafram": [170, 172], "queri": [170, 196, 244], "ad": [170, 171, 199, 234], "auto": 171, "make_metadata": [171, 509], "keep": 171, "onli": [171, 960], "first": [171, 182, 314, 955], "new": [171, 310, 311, 315], "column": [171, 195], "describ": [171, 311], "stimul": [171, 271], "side": 171, "knowledg": 171, "ern": 171, "panda": 172, "wide": 172, "versu": [172, 260, 320], "long": [172, 244], "divid": 173, "equal": [173, 245], "characterist": 173, "length": [173, 230], "case": 173, "segment": [174, 192], "subset": [176, 196, 271], "memori": [176, 216, 322], "core": [176, 319, 946, 956], "combin": [176, 245], "trace": 177, "butterfli": 177, "arrow": 177, "joint": [177, 270], "subplot": 177, "potenti": [178, 949], "global": 178, "gfp": 178, "interest": [178, 261, 312], "grand": 178, "latenc": 178, "measur": [178, 260, 266, 325], "peak": [178, 229], "freesurf": [182, 187, 318, 322, 325, 953], "anatom": [182, 318], "fsaverag": [182, 186, 207, 319], "coordin": [183, 187, 218, 318, 322, 325], "frame": [183, 187, 318], "understand": [183, 187], "definit": [183, 261, 322], "A": [183, 946], "good": 183, "defac": 183, "tran": 183, "approach": [184, 325], "coregistr": [184, 185, 199, 240, 325, 436, 544], "initi": 184, "fiduci": 184, "refin": 184, "icp": 184, "omit": 184, "final": 184, "bem": [185, 188, 199, 318, 322, 325, 372, 373, 374, 375, 376, 377, 378, 379, 946], "adult": 186, "setup": [186, 253, 260, 261, 951, 955, 961], "infant": [186, 319], "surrog": 186, "under": [187, 946], "hood": 187, "ra": [187, 209], "spheric": 187, "decim": [187, 946], "mni": [187, 207], "affin": 187, "inflat": 187, "blender": 188, "edit": [188, 199], "low": [188, 227, 230], "high": [188, 230, 319, 325], "tip": 188, "what": [188, 195, 227, 233, 234, 235, 315, 325, 932, 946, 959], "you": 188, "still": [188, 946], "error": 188, "clean": [188, 325], "dens": 188, "smooth": [188, 322], "topolog": 188, "deal": 188, "topologi": [188, 322], "pymeshfix": 188, "should": [189, 946, 959], "regular": [189, 204, 223, 322, 443, 946], "tutori": [192, 200, 210, 211, 212, 213, 276, 314], "introductori": [192, 200], "overview": [193, 227, 311, 318, 319, 323, 959], "detect": [193, 227, 229, 239], "experiment": 193, "place": [194, 197, 320], "pick": 194, "copi": 194, "pars": 195, "stim": [195, 754], "middl": 195, "embed": 195, "make": [195, 245, 274, 311, 312], "multipl": [195, 256, 260, 946], "per": [195, 318], "obtain": 196, "montag": [197, 274], "built": [197, 247], "eeglab": [197, 217, 949], "sphere": [197, 322], "keyword": 197, "avail": 197, "mani": 197, "control": 197, "digit": [197, 322], "render": [197, 207, 951], "where": 198, "store": 198, "environ": [198, 311], "your": [198, 311, 952], "start": [199, 948], "inverseoper": [199, 604], "code": [199, 269, 311, 319, 955], "e": 199, "g": 199, "tag": [199, 271], "entir": 199, "folder": [199, 325], "html": 199, "descript": [199, 322], "text": 199, "inspect": [202, 270, 322], "sourcespac": [202, 346], "src": 202, "equival": 203, "ecd": 203, "eloreta": [204, 322], "role": 205, "orient": [205, 206, 322], "loos": 205, "limit": 205, "them": 205, "discard": 205, "variou": 206, "free": [206, 256], "introduct": 207, "handl": [207, 228, 241], "depth": [207, 322], "bia": [207, 235], "On": 207, "slice": 207, "orthoview": 207, "glass": 207, "maximum": [207, 256], "voxel": [207, 209], "three": 207, "given": 209, "prerequisit": 209, "coord": 209, "elekta": [210, 216], "4d": [212, 319, 325], "neuroimag": [212, 216, 319], "devic": [216, 217, 218, 220, 322], "megin": 216, "triux": 216, "fil": 216, "4": [216, 297, 307], "d": 216, "dir": 216, "polhemu": 216, "softwar": [216, 230, 316, 322, 949, 959], "gradient": [216, 322], "ricoh": 216, "con": 216, "sqd": 216, "fieldtrip": [216, 261], "mat": 216, "arbitrari": [216, 266], "brainvis": 217, "vhdr": 217, "vmrk": 217, "european": 217, "edf": 217, "biosemi": 217, "bdf": 217, "gdf": 217, "neuroscan": 217, "cnt": 217, "egi": 217, "simpl": [217, 946], "binari": 217, "mff": 217, "fdt": 217, "nicolet": 217, "eximia": 217, "nxe": 217, "persyst": 217, "lai": 217, "dat": 217, "nihon": 217, "kohden": 217, "21e": 217, "pnt": 217, "xdfz": 217, "shape": 217, "fnir": [218, 239, 319], "standard": [218, 239, 256, 311, 453], "snirf": 218, "nirx": 218, "directori": [218, 319, 322], "hdr": 218, "hitachi": 218, "csv": 218, "boxi": 218, "txt": 218, "legaci": [218, 269], "tsv": 218, "auditori": [219, 319], "sr": 220, "research": 220, "eyelink": [220, 319, 456], "asc": 220, "gaze": 220, "href": 220, "pupil": 220, "size": [220, 256], "veloc": 220, "strf": 223, "audio": 223, "recov": 223, "philosophi": [224, 320], "scaler": [224, 494], "psdestim": [224, 490], "filterestim": [224, 487], "comodul": 224, "do": [227, 946], "drift": [227, 231, 233], "line": [227, 231, 311, 325], "heartbeat": 227, "ecg": [227, 233, 235, 325], "ocular": [227, 241], "mark": [228, 318], "block": 228, "execut": 228, "when": [228, 234, 311], "look": [228, 233, 946], "why": [228, 322, 946], "reject": [229, 318], "span": 229, "break": 229, "reject_by_annot": 229, "programmat": [229, 246], "callabl": 229, "background": [230, 231, 234, 236, 238, 252], "statement": 230, "fir": 230, "iir": 230, "some": 230, "pitfal": [230, 949], "pass": 230, "default": [230, 322], "c": [230, 958], "cutoff": 230, "order": 230, "transit": 230, "bandwidth": 230, "roll": 230, "off": [230, 951], "passband": 230, "rippl": 230, "stopband": 230, "attenu": 230, "delai": 230, "direct": 230, "resampl": [231, 256, 525, 946], "slow": [231, 233, 946], "best": [231, 234], "practic": [231, 234], "origin": [232, 252], "subtract": 232, "dimension": 233, "ignor": 233, "terminologi": 234, "environment": 235, "affect": [235, 246], "choos": 235, "number": [235, 244, 322], "via": [235, 240, 314, 322, 956], "infinit": 236, "rest": [236, 319], "bipolar": 236, "hpi": 237, "separ": [238, 271], "sss": 238, "spatiotempor": [238, 261], "tsss": 238, "caveat": 238, "infrar": 239, "spectroscopi": 239, "provid": [239, 256], "meaning": 239, "appropri": 239, "intens": 239, "qualiti": 239, "haemoglobin": 239, "heart": 239, "rate": [239, 256], "consist": [239, 251, 311], "tap": 239, "right": 239, "hand": 239, "homogen": 240, "nuisanc": 240, "tracker": 241, "check": [241, 271, 322, 325], "calibr": [241, 658], "blink": 241, "pupillari": 241, "light": 241, "reflex": 241, "attribut": 244, "sampl": [244, 258, 260, 265, 319, 476], "len": 244, "get_data": 244, "wai": 244, "exclud": 245, "id": [245, 956], "descriptor": 245, "togeth": 245, "brows": [247, 325], "scratch": 251, "corrupt": 252, "known": 252, "period": 252, "sinusoid": 252, "distant": 252, "center": [252, 961], "vertic": 252, "each": 252, "infer": 256, "hypothesi": 256, "null": 256, "parametr": [256, 258, 259], "hat": 256, "varianc": 256, "adjust": 256, "non": [256, 258, 259], "bonferroni": 256, "fals": 256, "discoveri": 256, "adjac": [256, 258, 261, 264], "enhanc": [256, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309], "tfce": 256, "signific": [257, 264], "1": [258, 279, 303, 304, 305, 306, 307, 308, 309, 310], "mass": 260, "univari": 260, "twowai": 260, "repeat": [260, 266], "anova": [260, 266], "account": 260, "neighbor": 261, "spatio": [264, 265, 266], "one": [264, 266, 275], "2": [265, 290, 305], "contrast": 266, "epochsspectrum": [269, 793], "migrat": [269, 949], "quick": 269, "action": 269, "inter": 270, "itc": 270, "ssvep": [271, 319, 481], "vssr": 271, "ratio": 271, "spectra": 271, "12": [271, 281, 282, 293, 298, 306], "hz": 271, "indic": 271, "15": [271, 285, 299], "debrief": 271, "bonu": 271, "durat": 271, "resolv": 271, "readi": 274, "inset": 274, "link": [275, 925], "anoth": 275, "hook": 275, "bibliographi": 278, "version": [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 951, 960, 963], "0": [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "2011": [279, 290], "09": [279, 283, 289, 292], "23": [279, 294, 296], "author": [279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "10": [280, 282, 285, 305, 307], "2015": [280, 281, 302], "26": [280, 300], "changelog": [280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 300, 301, 302, 311], "bug": [280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 306, 307, 308, 309, 946], "11": [281, 287, 290, 295, 300, 305, 309], "24": [281, 284, 289, 295, 297], "2016": [282, 283], "05": [282, 286, 288, 302, 307], "13": 283, "27": [283, 291, 294, 298], "14": [284, 308, 310], "2017": [284, 285], "03": [284, 291, 295, 296, 303, 304], "20": [285, 291, 309], "16": 286, "2018": [286, 287], "01": 286, "17": [287, 293], "19": [287, 288, 289, 310], "18": 288, "2019": [288, 289], "08": [290, 297, 304, 308], "2020": [291, 292, 293], "21": [292, 303, 306], "22": [293, 302], "2021": [294, 295], "04": [294, 310], "3": [296, 306, 325], "2012": [296, 297, 298], "5": [298, 308], "6": [299, 309], "2013": [299, 300], "06": [299, 301, 310], "7": [300, 310], "8": 301, "2014": 301, "25": 301, "9": 302, "2022": [303, 304, 305, 306], "depend": [303, 310, 956], "behavior": 304, "2023": [307, 308, 309], "2024": 310, "bugfix": 310, "notabl": 310, "deprec": [310, 311, 840], "contribut": 311, "guid": 311, "develop": [311, 313, 951, 960], "git": 311, "altern": 311, "gnu": 311, "fork": 311, "repositori": 311, "virtual": 311, "support": [311, 314, 322, 324, 956], "command": [311, 325, 946], "github": 311, "ssh": 311, "convent": 311, "requir": [311, 958], "must": 311, "have": [311, 318, 946], "coverag": 311, "document": [311, 312, 314, 323, 963, 964], "avoid": 311, "possibl": 311, "decor": 311, "warn": [311, 841], "pull": 311, "request": 311, "pr": 311, "fast": 311, "thorough": 311, "style": 311, "adher": 311, "guidelin": [311, 964], "we": 311, "mostli": [311, 320], "follow": 311, "numpi": [311, 322], "docstr": 311, "everywher": 311, "guidanc": 311, "organ": [311, 320, 322], "return": 311, "run": [311, 946], "suit": [311, 959], "pytest": 311, "flag": 311, "build": 311, "tool": [311, 325, 959], "govern": 312, "bdfl": 312, "steer": [312, 964], "council": [312, 964], "membership": 312, "conflict": 312, "privat": 312, "commun": [312, 964], "decis": 312, "institut": [312, 324, 964], "partner": [312, 324, 964], "fund": [312, 324], "histori": [312, 964], "acknowledg": 312, "licens": 312, "roadmap": 314, "modern": 314, "In": [314, 320], "progress": 314, "divers": 314, "equiti": 314, "inclus": 314, "dei": 314, "deep": 314, "updat": [314, 960], "complet": 314, "improv": 314, "db": 314, "access": [314, 322], "databas": [314, 319], "pediatr": 314, "integr": [314, 320], "openmeeg": 314, "bind": 314, "overhaul": 314, "cite": [316, 317, 946], "paper": 317, "typic": 318, "m": [318, 946], "recommend": 318, "subdivis": 318, "icosahedron": 318, "octahedron": 318, "creation": 318, "approxim": 318, "area": 318, "been": 318, "assum": 318, "1000": 318, "cm2": 318, "mesh": [318, 322, 946], "triangul": 318, "boundari": [318, 322], "element": [318, 322], "trigger": 319, "content": [319, 325], "ucl": 319, "state": 319, "somatosensori": 319, "multimod": [319, 470], "92": 319, "categori": 319, "mtrf": [319, 469], "kiloword": [319, 466], "polysomnograph": 319, "miscellan": 319, "freeview": [319, 325], "scientif": 320, "stack": 320, "submodul": 320, "unifi": 320, "glossari": 321, "implement": 322, "detail": 322, "intern": 322, "float": 322, "precis": 322, "effici": 322, "preload": 322, "explicitli": 322, "concept": 322, "subspac": 322, "watersh": [322, 325, 946], "flash": [322, 325], "tessel": 322, "discret": 322, "geometri": 322, "coil": 322, "magnet": 322, "normal": 322, "accur": 322, "accuraci": 322, "purpos": 322, "patch": 322, "constraint": 322, "weight": 322, "former": [324, 964], "anonym": 325, "browse_raw": 325, "bti2fiff": 325, "magneswh3600": 325, "note": 325, "clean_eog_ecg": 325, "ie": 325, "compare_fiff": [325, 853], "fiff": 325, "compute_proj_ecg": [325, 650], "compute_proj_eog": [325, 651], "coreg": [325, 436, 437, 438], "flash_bem": 325, "layer": 325, "freeview_bem_surfac": 325, "kit2fiff": 325, "nyu": 325, "make_scalp_surfac": [325, 378], "maxfilt": 325, "prepare_bem_model": 325, "colloc": 325, "setup_forward_model": 325, "setup_source_spac": [325, 737], "bilater": 325, "subsampl": 325, "show_fiff": [325, 587], "show_info": 325, "surf2bem": 325, "sys_info": [325, 788], "watershed_bem": 325, "acqparserfif": 326, "baseepoch": 328, "bihemilabel": 329, "dipolefix": 332, "epochsarrai": 334, "evokedarrai": 336, "mixedsourceestim": 340, "mixedvectorsourceestim": 341, "vectorsourceestim": 347, "volvectorsourceestim": 349, "add_reference_channel": 350, "add_source_space_dist": 351, "annotations_from_ev": 352, "apply_forward": 353, "apply_forward_raw": 354, "average_forward_solut": 355, "rescal": 356, "apply_d": 358, "apply_dics_csd": 359, "apply_dics_epoch": 360, "apply_dics_tfr_epoch": 361, "apply_lcmv": 362, "apply_lcmv_cov": 363, "apply_lcmv_epoch": 364, "apply_lcmv_raw": 365, "make_d": 366, "make_lcmv": 367, "make_lcmv_resolution_matrix": 368, "rap_mus": 369, "read_beamform": 370, "trap_mus": 371, "conductormodel": 372, "convert_flash_mri": 373, "distance_to_bem": 374, "fit_sphere_to_headshap": 375, "get_fitting_dig": 376, "make_flash_bem": 377, "make_watershed_bem": 379, "channel_indices_by_typ": 380, "channel_typ": 381, "digmontag": 382, "combine_channel": 384, "compute_dev_head_t": 385, "compute_native_head_t": 386, "equalize_channel": [387, 510], "find_ch_adjac": 388, "find_layout": 389, "fix_mag_coil_typ": 390, "generate_2d_layout": 391, "get_builtin_ch_adjac": 392, "get_builtin_montag": 393, "make_1020_channel_select": 394, "make_dig_montag": 395, "make_eeg_layout": 396, "make_grid_layout": 397, "make_standard_montag": 398, "read_ch_adjac": 399, "read_custom_montag": 400, "read_dig_captrak": 401, "read_dig_dat": 402, "read_dig_egi": 403, "read_dig_fif": 404, "read_dig_hpt": 405, "read_dig_localit": 406, "read_dig_polhemus_isotrak": 407, "read_layout": 408, "read_polhemus_fastscan": 409, "rename_channel": [410, 724], "unify_bad_channel": 411, "chpi": [412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "compute_chpi_amplitud": 412, "compute_chpi_loc": 413, "compute_chpi_snr": 414, "compute_head_po": 415, "extract_chpi_locs_ctf": 416, "extract_chpi_locs_kit": 417, "filter_chpi": 418, "get_active_chpi": 419, "get_chpi_info": 420, "head_pos_to_trans_rot_t": 421, "read_head_po": 422, "write_head_po": 423, "combine_evok": 424, "compute_covari": 425, "compute_proj_epoch": 426, "compute_proj_evok": 427, "compute_proj_raw": 428, "compute_rank": 429, "compute_raw_covari": 430, "compute_source_morph": 431, "concatenate_epoch": 432, "concatenate_ev": 433, "concatenate_raw": 434, "convert_forward_solut": 435, "estimate_head_mri_t": 437, "get_mni_fiduci": 438, "count_annot": 439, "count_ev": 440, "cov": [441, 442, 443], "compute_whiten": 441, "prepare_noise_cov": 442, "create_default_subject": 444, "create_info": 445, "cuda": [446, 447, 448, 951], "get_cuda_memori": 446, "init_cuda": 447, "set_cuda_devic": 448, "bst_auditori": 449, "data_path": [449, 450, 451, 454, 455, 456, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483], "bst_raw": 450, "bst_rest": 451, "load_data": [452, 467], "epilepsy_ecog": 454, "erp_cor": 455, "fetch_aparc_sub_parcel": 457, "fetch_dataset": 458, "fetch_fsaverag": 459, "fetch_hcp_mmp_parcel": 460, "fetch_infant_templ": 461, "fetch_phantom": 462, "fnirs_motor": 463, "has_dataset": 464, "hf_sef": 465, "misc": 468, "phantom_4dbti": 472, "phantom_kernel": 473, "phantom_kit": 474, "refmeg_nois": 475, "sleep_physionet": [477, 478], "ag": 477, "fetch_data": [477, 478], "temazepam": 478, "somato": 479, "spm_face": 480, "ucl_opm_auditori": 482, "visual_92_categori": 483, "decimate_surfac": 484, "generalizingestim": 488, "linearmodel": 489, "receptivefield": 491, "slidingestim": 495, "temporalfilt": 496, "timedelayingridg": 497, "timefrequ": 498, "unsupervisedspatialfilt": 499, "compute_em": 501, "cross_val_multiscor": 502, "get_coef": 503, "dig_mri_dist": 504, "get_phantom_dipol": 505, "average_mov": 506, "combine_event_id": 507, "equalize_epoch_count": 508, "define_target_ev": 511, "match_event_nam": 512, "shift_time_ev": 513, "events_from_annot": 514, "export_epoch": 515, "export_evok": 516, "export_evokeds_mff": 517, "export_raw": 518, "extract_label_time_cours": 519, "construct_iir_filt": 520, "create_filt": 521, "estimate_ringing_sampl": 522, "filter_data": 523, "notch_filt": 524, "find_ev": 526, "find_stim_step": 527, "fit_dipol": 528, "compute_depth_prior": 529, "compute_orient_prior": 530, "restrict_forward_to_label": 531, "restrict_forward_to_stc": 532, "get_config": 533, "get_config_path": 534, "get_head_surf": 535, "get_meg_helmet_surf": 536, "get_montage_volume_label": 537, "get_volume_labels_from_aseg": 538, "get_volume_labels_from_src": 539, "grade_to_tri": 540, "grade_to_vertic": 541, "grand_averag": 542, "grow_label": 543, "head_to_mni": 545, "head_to_mri": 546, "inverse_spars": [547, 548, 549, 550], "gamma_map": 547, "make_stc_from_dipol": 548, "mixed_norm": 549, "tf_mixed_norm": 550, "io": [551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589], "baseraw": 551, "rawarrai": 553, "anonymize_info": 554, "get_channel_type_const": 555, "read_mrk": 556, "read_fiduci": 557, "read_info": 558, "read_raw": 559, "read_raw_artemis123": 560, "read_raw_bdf": 561, "read_raw_boxi": 562, "read_raw_brainvis": 563, "read_raw_bti": 564, "read_raw_cnt": 565, "read_raw_ctf": 566, "read_raw_curri": 567, "read_raw_edf": 568, "read_raw_eeglab": 569, "read_raw_egi": 570, "read_raw_eximia": 571, "read_raw_eyelink": 572, "read_raw_fieldtrip": 573, "read_raw_fif": 574, "read_raw_fil": 575, "read_raw_gdf": 576, "read_raw_hitachi": 577, "read_raw_kit": 578, "read_raw_nedf": 579, "read_raw_neuralynx": 580, "read_raw_nicolet": 581, "read_raw_nihon": 582, "read_raw_nirx": 583, "read_raw_nsx": 584, "read_raw_persyst": 585, "read_raw_snirf": 586, "write_fiduci": 588, "write_info": 589, "select_sourc": 590, "label_sign_flip": 591, "labels_to_stc": 592, "make_ad_hoc_cov": 593, "make_bem_model": 594, "make_bem_solut": 595, "make_field_map": 596, "make_fixed_length_epoch": 597, "make_fixed_length_ev": 598, "make_forward_dipol": 599, "make_forward_solut": 600, "make_sphere_model": 601, "match_channel_ord": 602, "merge_ev": 603, "minimum_norm": [604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623], "apply_invers": 605, "apply_inverse_cov": 606, "apply_inverse_epoch": 607, "apply_inverse_raw": 608, "apply_inverse_tfr_epoch": 609, "compute_rank_invers": 610, "compute_source_psd": 611, "compute_source_psd_epoch": 612, "estimate_snr": 613, "get_cross_talk": 614, "get_point_spread": 615, "make_inverse_oper": 616, "make_inverse_resolution_matrix": 617, "prepare_inverse_oper": 618, "read_inverse_oper": 619, "resolution_metr": 620, "source_band_induced_pow": 621, "source_induced_pow": 622, "write_inverse_oper": 623, "morph_label": 624, "morph_source_spac": 625, "open_doc": 626, "open_report": 627, "parse_config": 628, "pick_channel": 629, "pick_channels_cov": 630, "pick_channels_forward": 631, "pick_channels_regexp": 632, "pick_ev": 633, "pick_info": 634, "pick_typ": 635, "pick_types_forward": 636, "eogregress": 637, "annotate_amplitud": 640, "annotate_break": 641, "annotate_mov": 642, "annotate_muscle_zscor": 643, "annotate_nan": 644, "compute_average_dev_head_t": 645, "compute_bridged_electrod": 646, "compute_current_source_dens": 647, "compute_fine_calibr": 648, "compute_maxwell_basi": 649, "compute_proj_hfc": 652, "corrmap": 653, "cortical_signal_suppress": 654, "create_ecg_epoch": 655, "create_eog_epoch": 656, "equalize_bad": 657, "convert_unit": 659, "get_screen_visual_angl": 660, "interpolate_blink": 661, "read_eyelink_calibr": 662, "set_channel_types_eyetrack": 663, "find_bad_channels_lof": 664, "find_bad_channels_maxwel": 665, "find_ecg_ev": 666, "find_eog_ev": 667, "fix_stim_artifact": 668, "ica_find_ecg_ev": 669, "ica_find_eog_ev": 670, "ieeg": [671, 672, 673], "make_montage_volum": 671, "project_sensors_onto_brain": 672, "warp_montag": 673, "infomax": 674, "interpolate_bridged_electrod": 675, "maxwell_filt": 676, "maxwell_filter_prepare_emptyroom": 677, "beer_lambert_law": 678, "optical_dens": 679, "scalp_coupling_index": 680, "short_channel": 681, "source_detector_dist": 682, "temporal_derivative_distribution_repair": 683, "oversampled_temporal_project": 684, "peak_find": 685, "read_eog_regress": 686, "read_fine_calibr": 687, "read_ica": 688, "read_ica_eeglab": 689, "realign_raw": 690, "regress_artifact": 691, "write_fine_calibr": 692, "random_parcel": 693, "read_annot": 694, "read_bem_solut": 695, "read_bem_surfac": 696, "read_cov": 697, "read_dipol": 698, "read_epoch": 699, "read_epochs_eeglab": 700, "read_epochs_fieldtrip": 701, "read_epochs_kit": 702, "read_ev": 703, "read_evoked_besa": 704, "read_evoked_fieldtrip": 705, "read_evok": 706, "read_evokeds_mff": 707, "read_forward_solut": 708, "read_freesurfer_lut": 709, "read_label": 710, "read_labels_from_annot": 711, "read_lta": 712, "read_morph_map": 713, "read_proj": 714, "read_reject_paramet": 715, "read_source_estim": 716, "read_source_morph": 717, "read_source_spac": 718, "read_surfac": 719, "read_talxfm": 720, "read_tran": 721, "read_tri": 722, "read_vectorview_select": 723, "scale_bem": 725, "scale_label": 726, "scale_mri": 727, "scale_source_spac": 728, "sensitivity_map": 729, "set_bipolar_refer": 730, "set_cache_dir": 731, "set_config": 732, "set_eeg_refer": 733, "set_log_fil": 734, "set_log_level": 735, "set_memmap_min_s": 736, "setup_volume_source_spac": 738, "sourcesimul": 739, "add_chpi": 740, "add_ecg": 741, "add_eog": 742, "add_nois": 743, "cosine_scor": 744, "f1_score": 745, "peak_position_error": 746, "precision_scor": 747, "recall_scor": 748, "region_localization_error": 749, "roc_auc_scor": 750, "spatial_deviation_error": 751, "select_source_in_label": 752, "simulate_evok": 753, "simulate_raw": 754, "simulate_sparse_stc": 755, "simulate_stc": 756, "source_spac": [757, 758], "compute_distance_to_sensor": 757, "get_decimated_surfac": 758, "spatial_dist_adjac": 759, "spatial_inter_hemi_adjac": 760, "spatial_src_adjac": 761, "spatial_tris_adjac": 762, "spatio_temporal_dist_adjac": 763, "spatio_temporal_src_adjac": 764, "spatio_temporal_tris_adjac": 765, "split_label": 766, "stat": [767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783], "bonferroni_correct": 767, "bootstrap_confidence_interv": 768, "combine_adjac": 769, "f_mway_rm": 770, "f_onewai": 771, "f_threshold_mway_rm": 772, "fdr_correct": 773, "linear_regress": 774, "linear_regression_raw": 775, "permutation_cluster_1samp_test": 776, "permutation_cluster_test": 777, "permutation_t_test": 778, "spatio_temporal_cluster_1samp_test": 779, "spatio_temporal_cluster_test": 780, "summarize_clusters_stc": 781, "ttest_1samp_no_p": 782, "ttest_ind_no_p": 783, "stc_near_sensor": 784, "stc_to_label": 785, "complete_surface_info": 786, "read_curvatur": 787, "time_frequ": [789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829], "averagetfr": 789, "averagetfrarrai": 790, "basetfr": 791, "crossspectraldens": 792, "epochsspectrumarrai": 794, "epochstfr": 795, "epochstfrarrai": 796, "rawtfr": 797, "rawtfrarrai": 798, "spectrumarrai": 800, "csd_array_fouri": 801, "csd_array_morlet": 802, "csd_array_multitap": 803, "csd_fourier": 804, "csd_morlet": 805, "csd_multitap": 806, "csd_tfr": 807, "dpss_window": 808, "fit_iir_model_raw": 809, "fwhm": 810, "istft": 811, "pick_channels_csd": 813, "psd_array_multitap": 814, "psd_array_welch": 815, "read_csd": 816, "read_spectrum": 817, "read_tfr": 818, "stft": 819, "stftfreq": 820, "cwt": 821, "tfr_array_morlet": 823, "tfr_array_multitap": 824, "tfr_array_stockwel": 825, "tfr_morlet": 826, "tfr_multitap": 827, "tfr_stockwel": 828, "write_tfr": 829, "transform_surface_to": 830, "apply_volume_registr": 832, "apply_volume_registration_point": 833, "compute_volume_registr": 834, "quat_to_rot": 835, "read_ras_mni_t": 836, "rot_to_quat": 837, "use_coil_def": 838, "use_log_level": 839, "util": [840, 841], "verbos": 842, "vertex_to_mni": 843, "clickableimag": 845, "evokedfield": 846, "figure3d": 847, "add_background_imag": 848, "centers_to_edg": 849, "circular_layout": 850, "close_3d_figur": 851, "close_all_3d_figur": 852, "create_3d_figur": 854, "plot_gaz": 855, "get_3d_backend": 856, "get_brain_class": 857, "get_browser_backend": 858, "iter_topographi": 859, "link_brain": 860, "mne_analyze_colormap": 861, "plot_align": 862, "plot_arrowmap": 863, "plot_bem": 864, "plot_brain_colorbar": 865, "plot_bridged_electrod": 866, "plot_ch_adjac": 867, "plot_channel_labels_circl": 868, "plot_chpi_snr": 869, "plot_compare_evok": 870, "plot_cov": 871, "plot_csd": 872, "plot_dipole_amplitud": 873, "plot_dipole_loc": 874, "plot_drop_log": 875, "plot_epoch": 876, "plot_epochs_imag": 877, "plot_epochs_psd_topomap": 878, "plot_ev": 879, "plot_evok": 880, "plot_evoked_field": 881, "plot_evoked_imag": 882, "plot_evoked_joint": 883, "plot_evoked_topo": 884, "plot_evoked_topomap": 885, "plot_evoked_whit": 886, "plot_filt": 887, "plot_head_posit": 888, "plot_ica_compon": 889, "plot_ica_overlai": 890, "plot_ica_properti": 891, "plot_ica_scor": 892, "plot_ica_sourc": 893, "plot_ideal_filt": 894, "plot_layout": 895, "plot_montag": 896, "plot_projs_joint": 897, "plot_projs_topomap": 898, "plot_raw": 899, "plot_raw_psd": 900, "plot_regression_weight": 901, "plot_sensor": 902, "plot_snr_estim": 903, "plot_source_estim": 904, "plot_sparse_source_estim": 905, "plot_tfr_topomap": 906, "plot_topo_image_epoch": 907, "plot_vector_source_estim": 909, "plot_volume_source_estim": 910, "set_3d_backend": 911, "set_3d_opt": 912, "set_3d_titl": 913, "set_3d_view": 914, "set_browser_backend": 915, "snapshot_brain_montag": 916, "ui_ev": [917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929], "colormaprang": 917, "contour": 918, "figureclos": 919, "playbackspe": 920, "timechang": 921, "uievent": 922, "vertexselect": 923, "disable_ui_ev": 924, "publish": 926, "subscrib": 927, "unlink": 928, "unsubscrib": 929, "use_3d_backend": 930, "use_browser_backend": 931, "write_bem_solut": 933, "write_bem_surfac": 934, "write_cov": 935, "write_ev": 936, "write_evok": 937, "write_forward_solut": 938, "write_head_bem": 939, "write_label": 940, "write_labels_to_annot": 941, "write_proj": 942, "write_source_spac": 943, "write_surfac": 944, "write_tran": 945, "frequent": 946, "ask": 946, "question": 946, "faq": 946, "issu": 946, "help": [946, 947, 959], "can": 946, "pyvista": 946, "maco": [946, 951, 958], "extrem": 946, "even": 946, "sure": 946, "x": 946, "my": 946, "y": 946, "think": 946, "danger": 946, "pickl": 946, "later": 946, "download": [946, 958], "onc": 946, "again": 946, "cpu": 946, "though": 946, "didn": 946, "tell": 946, "mysteri": 946, "take": 946, "forev": 946, "incorrect": 946, "homepag": 950, "jupyt": 951, "notebook": 951, "jupyterlab": 951, "fa": [951, 958], "brand": [951, 958], "instal": [951, 952, 953, 954, 955, 956, 957, 958, 959], "headless": 951, "linux": 951, "server": 951, "gpu": 951, "acceler": 951, "screen": 951, "mesa": 951, "troubleshoot": [951, 958], "troubl": 951, "upgrad": [951, 960], "pip": 956, "conda": 956, "hdf5": 956, "scenario": 956, "appl": 958, "martino": 961, "cpp": 962, "archiv": 963, "old": 963, "benevol": 964, "dictat": 964, "life": 964, "particip": 964, "lead": 964, "unus": 965, "entri": 965}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Connectivity Estimation": [[0, "connectivity-estimation"]], "Covariance computation": [[1, "covariance-computation"]], "Creating data objects from arrays": [[2, "creating-data-objects-from-arrays"]], "Datasets": [[3, "datasets"]], "Decoding": [[4, "decoding"]], "Events": [[5, "events"]], "Exporting": [[6, "exporting"]], "File I/O": [[7, "file-i-o"]], "Forward Modeling": [[8, "forward-modeling"]], "Inverse Solutions": [[9, "inverse-solutions"]], "Logging and Configuration": [[10, "logging-and-configuration"]], "Most-used classes": [[11, "most-used-classes"]], "MRI Processing": [[12, "mri-processing"]], "Preprocessing": [[13, "preprocessing"], [53, "preprocessing"], [105, "preprocessing"], [137, "preprocessing"], [168, "preprocessing"], [192, "preprocessing"], [193, "preprocessing"], [242, "preprocessing"], [318, "preprocessing"]], "Python API Reference": [[14, "python-api-reference"]], "Reading raw data": [[15, "reading-raw-data"]], "Realtime": [[16, "realtime"]], "MNE-Report": [[17, "mne-report"]], "Sensor Space Data": [[18, "sensor-space-data"]], "Simulation": [[19, "simulation"], [192, "simulation"], [254, "simulation"]], "Source Space Data": [[20, "source-space-data"]], "Statistics": [[21, "statistics"]], "Time-Frequency": [[22, "time-frequency"]], "Visualization": [[23, "visualization"], [53, "visualization"], [81, "visualization"], [151, "visualization"], [204, "visualization"], [311, "visualization"]], "Eyetracking": [[23, "eyetracking"]], "UI Events": [[23, "ui-events"]], "Connectivity Analysis Examples": [[24, "connectivity-analysis-examples"], [53, "connectivity-analysis-examples"]], "Computation times": [[25, "computation-times"], [32, "computation-times"], [46, "computation-times"], [51, "computation-times"], [82, "computation-times"], [93, "computation-times"], [112, "computation-times"], [116, "computation-times"], [119, "computation-times"], [130, "computation-times"], [134, "computation-times"], [157, "computation-times"], [166, "computation-times"], [175, "computation-times"], [181, "computation-times"], [191, "computation-times"], [201, "computation-times"], [215, "computation-times"], [222, "computation-times"], [226, "computation-times"], [243, "computation-times"], [249, "computation-times"], [250, "computation-times"], [255, "computation-times"], [263, "computation-times"], [268, "computation-times"], [273, "computation-times"], [277, "computation-times"], [966, "computation-times"]], "Brainstorm raw (median nerve) dataset": [[26, "brainstorm-raw-median-nerve-dataset"]], "References": [[26, "references"], [30, "references"], [34, "references"], [36, "references"], [38, "references"], [39, "references"], [41, "references"], [42, "references"], [44, "references"], [45, "references"], [47, "references"], [59, "references"], [61, "references"], [66, "references"], [68, "references"], [69, "references"], [70, "references"], [72, "references"], [77, "references"], [80, "references"], [81, "references"], [84, "references"], [85, "references"], [86, "references"], [92, "references"], [97, "references"], [98, "references"], [102, "references"], [103, "references"], [106, "references"], [110, "references"], [111, "references"], [115, "references"], [122, "references"], [129, "references"], [137, "references"], [140, "references"], [141, "references"], [145, "references"], [147, "references"], [149, "references"], [155, "references"], [164, "references"], [168, "references"], [171, "references"], [178, "references"], [182, "references"], [184, "references"], [189, "references"], [203, "references"], [205, "references"], [207, "references"], [210, "references"], [211, "references"], [219, "references"], [223, "references"], [224, "references"], [228, "references"], [230, "references"], [232, "references"], [233, "references"], [234, "references"], [235, "references"], [236, "references"], [238, "references"], [240, "references"], [253, "references"], [256, "references"], [257, "references"], [261, "references"], [269, "references"], [318, "references"], [319, "references"], [322, "references"], [946, "references"]], "HF-SEF dataset": [[27, "hf-sef-dataset"]], "Examples on open datasets": [[28, "examples-on-open-datasets"], [53, "examples-on-open-datasets"]], "Kernel OPM phantom data": [[29, "kernel-opm-phantom-data"]], "Single trial linear regression analysis with the LIMO dataset": [[30, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[30, "about-the-data"]], "Load the data": [[30, "load-the-data"], [164, "load-the-data"], [168, "load-the-data"], [186, "load-the-data"]], "Visualize events": [[30, "visualize-events"]], "Visualize condition ERPs": [[30, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[30, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[30, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[30, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[30, "extract-regression-coefficients"]], "Plot model results": [[30, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[31, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[31, "prepare-data-for-localization"]], "Perform dipole fitting": [[31, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[31, "perform-minimum-norm-localization"]], "From raw data to dSPM on SPM Faces dataset": [[33, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[34, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[35, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[36, "representational-similarity-analysis"]], "Decoding source space data": [[37, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[38, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[39, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[40, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[41, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[42, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[43, "machine-learning-decoding-encoding-and-mvpa"], [53, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[44, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[44, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[45, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[45, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[45, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[45, "investigate-model-coefficients"], [45, "id7"]], "Create and fit a stimulus reconstruction model": [[45, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[45, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[47, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[47, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[48, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[49, "forward-modeling"], [53, "forward-modeling"]], "Generate a left cerebellum volume source space": [[50, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[52, "use-source-space-morphing"]], "Examples Gallery": [[53, "examples-gallery"]], "Input/Output": [[53, "input-output"], [89, "input-output"]], "Data Simulation": [[53, "data-simulation"], [117, "data-simulation"]], "Time-Frequency Examples": [[53, "time-frequency-examples"], [133, "time-frequency-examples"]], "Statistics Examples": [[53, "statistics-examples"], [126, "statistics-examples"]], "Inverse problem and source analysis": [[53, "inverse-problem-and-source-analysis"], [62, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[54, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[55, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[56, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[57, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[58, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[59, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[60, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[60, "compute-covariances"]], "Plot source estimates": [[60, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[61, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[63, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[64, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[65, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[65, "compute-inverse-solution"], [67, "compute-inverse-solution"], [204, "compute-inverse-solution"]], "View source activations": [[65, "view-source-activations"]], "Using vector solutions": [[65, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[66, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[67, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[67, "set-up-our-source-space"]], "View the source space": [[67, "view-the-source-space"]], "Compute the fwd matrix": [[67, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[67, "plot-the-mixed-source-estimate"]], "Plot the surface": [[67, "plot-the-surface"]], "Plot the volume": [[67, "plot-the-volume"]], "Process labels": [[67, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[68, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[68, "compute-empty-room-covariance"]], "Epoch the data": [[68, "epoch-the-data"]], "Compute and plot covariances": [[68, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[68, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[69, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[69, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[69, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[69, "plot-results"], [70, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[69, "reading-and-writing-sourcemorph-from-and-to-disk"], [70, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[70, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[70, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[70, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[70, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[71, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[72, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[73, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[73, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[73, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[73, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[73, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[73, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[73, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[74, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[74, "visualize"], [75, "visualize"], [76, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[75, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[75, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[75, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[76, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[77, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[78, "reading-an-inverse-operator"]], "Reading an STC file": [[79, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[80, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[80, "mne"]], "dSPM": [[80, "dspm"], [322, "dspm"]], "Visualize results": [[80, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[81, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[81, "eegmeg"]], "MEG": [[81, "meg"]], "Estimate data SNR using an inverse": [[83, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[84, "computing-source-space-snr"]], "EEG": [[84, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[85, "compute-mxne-with-time-frequency-sparse-prior"]], "Compute Trap-Music on evoked data": [[86, "compute-trap-music-on-evoked-data"]], "Plotting the full vector-valued MNE solution": [[87, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[88, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[90, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[91, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[92, "reading-xdf-eeg-data"]], "Using contralateral referencing for EEG": [[94, "using-contralateral-referencing-for-eeg"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[95, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[96, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[97, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[97, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[97, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[97, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[97, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[97, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[97, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[97, "the-relationship-between-bridging-and-impedances"]], "Summary": [[97, "summary"], [194, "summary"], [202, "summary"], [227, "summary"], [228, "summary"], [230, "summary"]], "Transform EEG data using current source density (CSD)": [[98, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[99, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[100, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[100, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[100, "perform-regression-and-remove-eog"]], "Before/after comparison": [[100, "before-after-comparison"]], "Automated epochs metadata generation with variable time windows": [[101, "automated-epochs-metadata-generation-with-variable-time-windows"]], "Visualizing the events": [[101, "visualizing-the-events"]], "Declaring \u201crow events\u201d": [[101, "declaring-row-events"]], "Specifying metadata time windows": [[101, "specifying-metadata-time-windows"]], "Fixed time window": [[101, "fixed-time-window"]], "Fixed time window with keep_first": [[101, "fixed-time-window-with-keep-first"]], "Variable time window": [[101, "variable-time-window"]], "Variable time window (simplified)": [[101, "variable-time-window-simplified"]], "Find MEG reference channel artifacts": [[102, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[103, "visualise-nirs-artifact-correction-methods"]], "Import data": [[103, "import-data"]], "Add artificial artifacts to data": [[103, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[103, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[104, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[106, "interpolate-bad-channels-for-meg-eeg-channels"]], "Maxwell filter data with movement compensation": [[107, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[108, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[108, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[108, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[109, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[109, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[109, "view-the-annotations"]], "Removing muscle ICA components": [[110, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[110, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[111, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[113, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[114, "remap-meg-channel-types"]], "XDAWN Denoising": [[115, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[118, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[118, "define-main-parameters-of-sources"]], "Create simulated source activity": [[118, "create-simulated-source-activity"], [122, "create-simulated-source-activity"]], "Simulate raw data": [[118, "simulate-raw-data"], [122, "simulate-raw-data"]], "Compute evoked from raw data": [[118, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[118, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[118, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[118, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[118, "for-region"]], "For Dipoles": [[118, "for-dipoles"]], "Generate simulated evoked data": [[120, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[121, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[122, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[122, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[122, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[123, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[124, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[125, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[127, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[128, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[129, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[131, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[132, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[132, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[135, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[136, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[137, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[137, "alignment-and-forward"]], "Alpha": [[137, "alpha"]], "Beta": [[137, "beta"]], "Compute induced power in the source space with dSPM": [[138, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[139, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[140, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[141, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[142, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[142, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[142, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[142, "multitaper-transform"]], "Stockwell (S) transform": [[142, "stockwell-s-transform"]], "Morlet Wavelets": [[142, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[142, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[142, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[142, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[143, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[143, "load-data"], [144, "load-data"], [205, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[143, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[143, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[144, "plotting-with-mne-viz-brain"]], "Add source information": [[144, "add-source-information"]], "Modify the view of the brain": [[144, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[144, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[144, "include-the-head-in-the-image"]], "Add sensors positions": [[144, "add-sensors-positions"]], "Add current dipoles": [[144, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[144, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[145, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[146, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[147, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[148, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[148, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[148, "additional-plot-topomap-options"]], "More advanced usage": [[148, "more-advanced-usage"]], "Interpolating topomaps": [[148, "interpolating-topomaps"]], "Animating the topomap": [[148, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[149, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting eye-tracking heatmaps in MNE-Python": [[150, "plotting-eye-tracking-heatmaps-in-mne-python"]], "Data loading": [[150, "data-loading"], [241, "data-loading"]], "Process and epoch the data": [[150, "process-and-epoch-the-data"]], "Plot a heatmap of the eye-tracking data": [[150, "plot-a-heatmap-of-the-eye-tracking-data"]], "Overlaying plots with images": [[150, "overlaying-plots-with-images"]], "Displaying the heatmap in units of visual angle": [[150, "displaying-the-heatmap-in-units-of-visual-angle"]], "Plotting sensor layouts of MEG systems": [[152, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[152, "neuromag"]], "CTF": [[152, "ctf"]], "BTi": [[152, "bti"]], "KIT": [[152, "kit"]], "Artemis123": [[152, "artemis123"]], "Plot the MNE brain and helmet": [[153, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[154, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[155, "plot-a-cortical-parcellation"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[156, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Sensitivity map of SSP projections": [[158, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[159, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[160, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[161, "cross-hemisphere-comparison"]], "Working with sEEG data": [[162, "working-with-seeg-data"]], "Working with ECoG data": [[163, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[163, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[163, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[163, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[163, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[163, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[164, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[164, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[164, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[164, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[164, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[164, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[164, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[164, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[164, "further-analysis-of-the-data"]], "Exercise": [[164, "exercise"], [185, "exercise"], [224, "exercise"], [270, "exercise"]], "Clinical applications": [[165, "clinical-applications"], [192, "clinical-applications"]], "MNE-GUI-addons examples": [[165, "mne-gui-addons-examples"], [192, "mne-gui-addons-examples"]], "MNE-Python examples": [[165, "mne-python-examples"], [192, "mne-python-examples"]], "The Epochs data structure: discontinuous data": [[167, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[167, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[167, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[167, "subselecting-epochs"]], "Selecting epochs by index": [[167, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[167, "selecting-dropping-and-reordering-channels"], [176, "selecting-dropping-and-reordering-channels"], [244, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[167, "changing-channel-name-and-type"], [244, "changing-channel-name-and-type"]], "Selection in the time domain": [[167, "selection-in-the-time-domain"], [244, "selection-in-the-time-domain"]], "Extracting data in other forms": [[167, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[167, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[167, "iterating-over-epochs"]], "Regression-based baseline correction": [[168, "regression-based-baseline-correction"]], "Traditional baselining": [[168, "traditional-baselining"]], "Regression-based baselining": [[168, "regression-based-baselining"]], "Plot the baseline regressor": [[168, "plot-the-baseline-regressor"]], "Plot the ERPs": [[168, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[168, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[168, "examine-the-interaction-term"]], "Visualizing epoched data": [[169, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[169, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[169, null]], "Plotting projectors from an Epochs object": [[169, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[169, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[169, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[169, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[170, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[170, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[170, null]], "Modifying the metadata": [[170, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[170, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[170, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[171, "auto-generating-epochs-metadata"]], "Preparation": [[171, "preparation"]], "Creating metadata from events": [[171, "creating-metadata-from-events"]], "The basics of make_metadata": [[171, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[171, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[171, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[171, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[171, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[171, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[172, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[172, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[172, "scaling-time-and-channel-values"]], "Setting the index": [[172, "setting-the-index"]], "Wide- versus long-format DataFrames": [[172, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[173, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[173, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[173, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[174, "segmenting-continuous-data-into-epochs"], [192, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[176, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[176, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[176, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[176, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[176, null]], "Similarities among the core data structures": [[176, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[176, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[176, "combining-evoked-objects"]], "Other uses of Evoked objects": [[176, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[177, "visualizing-evoked-data"]], "Plotting signal traces": [[177, "plotting-signal-traces"]], "Butterfly plots": [[177, null]], "Plotting scalp topographies": [[177, "plotting-scalp-topographies"]], "Arrow maps": [[177, "arrow-maps"]], "Joint plots": [[177, "joint-plots"]], "Comparing Evoked objects": [[177, "comparing-evoked-objects"]], "Image plots": [[177, "image-plots"]], "Topographical subplots": [[177, "topographical-subplots"]], "3D Field Maps": [[177, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[178, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[178, "channel-names-and-types"]], "Channel locations": [[178, "channel-locations"]], "Setting the EEG reference": [[178, "setting-the-eeg-reference"], [236, "setting-the-eeg-reference"]], "Filtering": [[178, "filtering"]], "Evoked responses: epoching and averaging": [[178, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[178, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[178, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[178, "comparing-conditions"]], "Grand averages": [[178, "grand-averages"]], "Amplitude and latency measures": [[178, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[178, "peak-latency-and-amplitude"]], "Mean Amplitude": [[178, "mean-amplitude"]], "Plotting whitened data": [[179, "plotting-whitened-data"]], "Raw data with whitening": [[179, "raw-data-with-whitening"]], "Epochs with whitening": [[179, "epochs-with-whitening"]], "Evoked data with whitening": [[179, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[179, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[179, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[180, "estimating-evoked-responses"], [192, "estimating-evoked-responses"], [193, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[182, "freesurfer-mri-reconstruction"]], "First steps": [[182, "first-steps"], [955, "first-steps"]], "Anatomical reconstruction": [[182, "anatomical-reconstruction"]], "Use with MNE-Python": [[182, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[182, "fsaverage"]], "Source alignment and coordinate frames": [[183, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[183, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[183, "coordinate-frame-definitions"]], "A bad example": [[183, "a-bad-example"]], "A good example": [[183, "a-good-example"]], "Visualizing the transformations": [[183, "visualizing-the-transformations"]], "Example: MRI defacing": [[183, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[183, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[183, "alignment-without-mri"]], "Using an automated approach to coregistration": [[184, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[184, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[184, "initial-fit-with-fiducials"]], "Refining with ICP": [[184, "refining-with-icp"]], "Omitting bad points": [[184, "omitting-bad-points"]], "Final coregistration fit": [[184, "final-coregistration-fit"]], "Head model and forward computation": [[185, "head-model-and-forward-computation"]], "Computing the forward operator": [[185, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[185, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[185, "visualizing-the-coregistration"]], "Compute Source Space": [[185, "compute-source-space"]], "Compute forward solution": [[185, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[186, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[186, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[186, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[186, "infant-mri-surrogates"]], "Get an infant MRI template": [[186, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[187, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[187, "mri-coordinate-frames"]], "Under the hood": [[187, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[187, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[187, null]], "Using FreeSurfer\u2019s surface reconstructions": [[187, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[187, "cortical-alignment-spherical"]], "Surface decimation": [[187, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[187, "freesurfer-s-mni-affine-transformation"]], "Understanding the inflated brain": [[187, "understanding-the-inflated-brain"]], "Fixing BEM and head surfaces": [[188, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[188, "exporting-surfaces-to-blender"]], "Editing in Blender": [[188, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[188, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[188, "editing-the-head-surfaces"]], "Low-resolution head": [[188, "low-resolution-head"]], "High-resolution head": [[188, "high-resolution-head"]], "Blender editing tips": [[188, "blender-editing-tips"]], "What if you still get an error?": [[188, "what-if-you-still-get-an-error"]], "Blender operations": [[188, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[188, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[188, "topological-errors"]], "Dealing with topology in blender": [[188, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[188, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[189, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[189, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[189, "how-should-i-regularize-the-covariance-matrix"], [946, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[190, "forward-models-and-source-spaces"], [192, "forward-models-and-source-spaces"]], "Tutorials": [[192, "tutorials"]], "Introductory tutorials": [[192, "introductory-tutorials"], [200, "introductory-tutorials"]], "Reading data for different recording systems": [[192, "reading-data-for-different-recording-systems"], [221, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[192, "working-with-continuous-data"], [248, "working-with-continuous-data"]], "Time-frequency analysis": [[192, "time-frequency-analysis"], [193, "time-frequency-analysis"], [272, "time-frequency-analysis"]], "Source localization and inverses": [[192, "source-localization-and-inverses"], [214, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[192, "statistical-analysis-of-sensor-data"], [262, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[192, "statistical-analysis-of-source-estimates"], [267, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[192, "machine-learning-models-of-neural-activity"], [225, "machine-learning-models-of-neural-activity"]], "Visualization tutorials": [[192, "visualization-tutorials"], [276, "visualization-tutorials"]], "Overview of MEG/EEG analysis with MNE-Python": [[193, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[193, "loading-data"]], "Detecting experimental events": [[193, "detecting-experimental-events"]], "Epoching continuous data": [[193, "epoching-continuous-data"]], "Inverse modeling": [[193, "inverse-modeling"]], "Modifying data in-place": [[194, "modifying-data-in-place"]], "Signal processing": [[194, "signal-processing"]], "Channel picking": [[194, "channel-picking"]], "The copy parameter": [[194, "the-copy-parameter"]], "Parsing events from raw data": [[195, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[195, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[195, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[195, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[195, null]], "Reading embedded events as Annotations": [[195, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[195, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[195, "making-multiple-events-per-annotation"]], "The Info data structure": [[196, "the-info-data-structure"]], "Querying the Info object": [[196, "querying-the-info-object"]], "Obtaining subsets of channels": [[196, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[196, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[196, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[197, "working-with-sensor-locations"]], "About montages and layouts": [[197, "about-montages-and-layouts"]], "Working with built-in montages": [[197, "working-with-built-in-montages"]], "Computing sensor locations": [[197, null]], "Plotting 2D sensor locations like EEGLAB": [[197, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[197, null]], "Manually controlling 2D channel projection": [[197, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[197, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[197, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[197, "working-with-layout-files"]], "Configuring MNE-Python": [[198, "configuring-mne-python"]], "Getting and setting configuration variables": [[198, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[198, "where-configurations-are-stored"]], "Using environment variables": [[198, "using-environment-variables"]], "Logging": [[198, "logging"]], "Getting information about your system": [[198, "getting-information-about-your-system"]], "Getting started with mne.Report": [[199, "getting-started-with-mne-report"]], "Adding Raw data": [[199, "adding-raw-data"]], "Adding events": [[199, "adding-events"]], "Adding Epochs": [[199, "adding-epochs"]], "Adding Evoked": [[199, "adding-evoked"]], "Adding Covariance": [[199, "adding-covariance"]], "Adding Projection vectors": [[199, "adding-projection-vectors"]], "Adding ICA": [[199, "adding-ica"]], "Adding MRI with BEM": [[199, "adding-mri-with-bem"]], "Adding coregistration": [[199, "adding-coregistration"]], "Adding a Forward solution": [[199, "adding-a-forward-solution"]], "Adding an InverseOperator": [[199, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[199, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[199, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[199, "adding-custom-figures"]], "Adding image files": [[199, "adding-image-files"]], "Working with tags": [[199, "working-with-tags"]], "Editing a saved report": [[199, "editing-a-saved-report"]], "Adding an entire folder of files": [[199, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[199, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[202, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[202, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[202, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[202, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[203, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[204, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[204, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[204, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[204, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[205, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[205, "the-source-space"]], "Fixed dipole orientations": [[205, "fixed-dipole-orientations"]], "Loose dipole orientations": [[205, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[205, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[205, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[206, "computing-various-mne-solutions"]], "Fixed orientation": [[206, "fixed-orientation"]], "Free orientation": [[206, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[207, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[207, "introduction-to-beamformers"]], "Data processing": [[207, "data-processing"]], "Computing the covariance matrices": [[207, "computing-the-covariance-matrices"]], "The forward model": [[207, "the-forward-model"]], "Handling depth bias": [[207, "handling-depth-bias"]], "Compute the spatial filter": [[207, "compute-the-spatial-filter"]], "Apply the spatial filter": [[207, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[207, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[207, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[207, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[207, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[207, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[207, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[208, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[208, "surface-source-estimates"]], "Volume Source Estimates": [[208, "volume-source-estimates"]], "Vector Source Estimates": [[208, "vector-source-estimates"]], "Dipole fits": [[208, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[209, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[209, "prerequisites"]], "Visualizing the MRI": [[209, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[209, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[209, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[210, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[211, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[212, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "KIT phantom dataset tutorial": [[213, "kit-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[216, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[216, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "FIL OPM (.bin)": [[216, "fil-opm-bin"]], "Artemis123 (.bin)": [[216, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[216, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[216, "ctf-data-dir"]], "CTF Polhemus data": [[216, "ctf-polhemus-data"]], "Applying software gradient compensation": [[216, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[216, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[216, null]], "FieldTrip MEG/EEG data (.mat)": [[216, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[216, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[217, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[217, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[217, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[217, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[217, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[217, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[217, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[217, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[217, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[217, "nicolet-data"]], "eXimia EEG data (.nxe)": [[217, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[217, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[217, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[217, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[217, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[217, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[218, "importing-data-from-fnirs-devices"]], "Standardized data": [[218, "standardized-data"]], "SNIRF (.snirf)": [[218, "snirf-snirf"]], "Specifying the coordinate system": [[218, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[218, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[218, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[218, "hitachi-csv"]], "Frequency Domain Devices": [[218, "frequency-domain-devices"]], "BOXY (.txt)": [[218, "boxy-txt"]], "Custom Data Import": [[218, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[218, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[218, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[219, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Importing Data from Eyetracking devices": [[220, "importing-data-from-eyetracking-devices"]], "SR Research (Eyelink) (.asc)": [[220, "sr-research-eyelink-asc"]], "Eye Position Data": [[220, "eye-position-data"]], "Gaze": [[220, "gaze"]], "Head-Referenced Eye Angle (HREF)": [[220, "head-referenced-eye-angle-href"]], "Pupil Position": [[220, "pupil-position"]], "Pupil Size Data": [[220, "pupil-size-data"]], "Velocity, resolution, and head position data": [[220, "velocity-resolution-and-head-position-data"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[223, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[223, "load-audio-data"]], "Create a receptive field": [[223, "create-a-receptive-field"]], "Simulate a neural response": [[223, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[223, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[223, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[223, "using-different-regularization-types"]], "Compare model performance": [[223, "compare-model-performance"]], "Decoding (MVPA)": [[224, "decoding-mvpa"]], "Design philosophy": [[224, "design-philosophy"], [320, "design-philosophy"]], "Transformation classes": [[224, "transformation-classes"]], "Scaler": [[224, "scaler"]], "Vectorizer": [[224, "vectorizer"]], "PSDEstimator": [[224, "psdestimator"]], "FilterEstimator": [[224, "filterestimator"]], "Spatial filters": [[224, "spatial-filters"]], "Common spatial pattern": [[224, "common-spatial-pattern"]], "Examples": [[224, null], [224, null], [224, null], [224, null], [224, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [319, null], [325, "examples"], [325, "id6"], [325, "id9"], [325, "id12"], [325, "id15"], [325, "id18"], [325, "id21"], [325, "id24"], [325, "id27"], [325, "id31"], [325, "id34"], [325, "id37"], [325, "id40"], [325, "id43"], [325, "id46"], [325, "id49"], [325, "id52"], [325, "id55"], [325, "id58"], [325, "id61"], [325, "id64"], [325, "id67"], [325, "id70"]], "Source power comodulation (SPoC)": [[224, "source-power-comodulation-spoc"]], "xDAWN": [[224, "xdawn"]], "Effect-matched spatial filtering": [[224, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[224, "patterns-vs-filters"]], "Decoding over time": [[224, "decoding-over-time"]], "Temporal decoding": [[224, "temporal-decoding"]], "Temporal generalization": [[224, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[224, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[224, "source-space-decoding"]], "Overview of artifact detection": [[227, "overview-of-artifact-detection"]], "What are artifacts?": [[227, "what-are-artifacts"]], "What to do about artifacts": [[227, "what-to-do-about-artifacts"]], "Artifact detection": [[227, "artifact-detection"]], "Low-frequency drifts": [[227, "low-frequency-drifts"]], "Power line noise": [[227, "power-line-noise"], [231, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[227, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[227, "ocular-artifacts-eog"]], "Handling bad channels": [[228, "handling-bad-channels"]], "Marking bad channels": [[228, "marking-bad-channels"], [318, "marking-bad-channels"]], "Blocking execution": [[228, null]], "When to look for bad channels": [[228, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[228, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[228, "interpolating-bad-channels"]], "How interpolation works": [[228, "how-interpolation-works"]], "Interpolation in MNE-Python": [[228, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[229, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[229, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[229, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[229, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[229, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on peak-to-peak channel amplitude": [[229, "rejecting-epochs-based-on-peak-to-peak-channel-amplitude"]], "Rejecting Epochs using callables (functions)": [[229, "rejecting-epochs-using-callables-functions"]], "Background information on filtering": [[230, "background-information-on-filtering"]], "Problem statement": [[230, "problem-statement"]], "Filtering basics": [[230, "filtering-basics"]], "FIR Filters": [[230, "fir-filters"]], "Designing FIR filters": [[230, "designing-fir-filters"]], "Applying FIR filters": [[230, "applying-fir-filters"]], "IIR filters": [[230, "iir-filters"]], "Designing IIR filters": [[230, "designing-iir-filters"]], "Applying IIR filters": [[230, "applying-iir-filters"]], "Some pitfalls of filtering": [[230, "some-pitfalls-of-filtering"]], "Low-pass problems": [[230, "low-pass-problems"]], "High-pass problems": [[230, "high-pass-problems"]], "Baseline problems (or solutions?)": [[230, "baseline-problems-or-solutions"]], "Filtering defaults": [[230, "filtering-defaults"]], "Defaults in MNE-Python": [[230, "defaults-in-mne-python"]], "Defaults in MNE-C": [[230, "defaults-in-mne-c"]], "Defaults in other software": [[230, "defaults-in-other-software"]], "Reporting Filters": [[230, "reporting-filters"]], "Filter type": [[230, "filter-type"]], "Cutoff frequency": [[230, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[230, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[230, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[230, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[231, "filtering-and-resampling-data"]], "Background on filtering": [[231, "background-on-filtering"]], "Repairing artifacts by filtering": [[231, "repairing-artifacts-by-filtering"]], "Slow drifts": [[231, "slow-drifts"]], "Resampling": [[231, "resampling"]], "Best practices": [[231, "best-practices"], [234, "best-practices"]], "Repairing artifacts with regression": [[232, "repairing-artifacts-with-regression"]], "Prepare the data": [[232, "prepare-the-data"]], "Visualize the original data": [[232, "visualize-the-original-data"]], "Compute and apply EOG regression": [[232, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[232, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[232, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[232, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[233, "repairing-artifacts-with-ica"]], "What is ICA?": [[233, "what-is-ica"]], "ICA in MNE-Python": [[233, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[233, null]], "Example: EOG and ECG artifact repair": [[233, "example-eog-and-ecg-artifact-repair"], [235, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[233, "visualizing-the-artifacts"], [235, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[233, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[233, "fitting-ica"]], "Ignoring the time domain": [[233, null]], "Looking at the ICA solution": [[233, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[233, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[233, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[233, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[233, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[233, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[234, "background-on-projectors-and-projections"]], "What is a projection?": [[234, "what-is-a-projection"]], "Example: projection as noise reduction": [[234, "example-projection-as-noise-reduction"]], "Terminology": [[234, null]], "Signal-space projection (SSP)": [[234, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[234, "projectors-in-mne-python"]], "Computing projectors": [[234, "computing-projectors"]], "Visualizing the effect of projectors": [[234, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[234, "loading-and-saving-projectors"]], "Adding and removing projectors": [[234, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[234, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[235, "repairing-artifacts-with-ssp"]], "What is SSP?": [[235, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[235, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[235, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[235, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[235, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[235, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[235, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[235, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[235, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[235, null]], "Background": [[236, "background"]], "Setting or changing the reference channel": [[236, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[236, "setting-average-reference"]], "Creating the average reference as a projector": [[236, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[236, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[236, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[236, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[237, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[237, "hpi-frequencies"]], "Estimating continuous head position": [[237, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[237, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[237, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[238, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[238, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[238, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[238, "spatiotemporal-sss-tsss"]], "Movement compensation": [[238, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[238, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[239, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[239, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[239, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[239, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[239, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[239, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[239, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[239, "removing-heart-rate-from-signal"]], "Extract epochs": [[239, "extract-epochs"]], "View consistency of responses across trials": [[239, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[239, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[239, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[239, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[239, "compare-tapping-of-left-and-right-hands"]], "Preprocessing optically pumped magnetometer (OPM) MEG data": [[240, "preprocessing-optically-pumped-magnetometer-opm-meg-data"]], "Examining raw data": [[240, "examining-raw-data"]], "Denoising: Regressing via reference sensors": [[240, "denoising-regressing-via-reference-sensors"]], "Denoising: Regressing via homogeneous field correction": [[240, "denoising-regressing-via-homogeneous-field-correction"]], "Comparing denoising methods": [[240, "comparing-denoising-methods"]], "Filtering nuisance signals": [[240, "filtering-nuisance-signals"]], "Generating an evoked response": [[240, "generating-an-evoked-response"]], "Visualizing coregistration": [[240, "visualizing-coregistration"]], "Plotting the inverse": [[240, "plotting-the-inverse"]], "Working with eye tracker data in MNE-Python": [[241, "working-with-eye-tracker-data-in-mne-python"]], "Ocular annotations": [[241, "ocular-annotations"]], "Checking the calibration": [[241, "checking-the-calibration"]], "Plot the raw eye-tracking data": [[241, "plot-the-raw-eye-tracking-data"]], "Handling blink artifacts": [[241, "handling-blink-artifacts"]], "Extract common stimulus events from the data": [[241, "extract-common-stimulus-events-from-the-data"]], "Align the eye-tracking data with EEG data": [[241, "align-the-eye-tracking-data-with-eeg-data"]], "Showing the pupillary light reflex": [[241, "showing-the-pupillary-light-reflex"]], "The Raw data structure: continuous data": [[244, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[244, "loading-continuous-data"]], "Datasets in MNE-Python": [[244, null]], "Querying the Raw object": [[244, "querying-the-raw-object"]], "Attributes vs. Methods": [[244, null]], "The Raw.info attribute": [[244, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[244, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[244, null]], "Modifying Raw objects": [[244, "modifying-raw-objects"]], "len(raw)": [[244, null]], "Long channel names": [[244, null]], "Extracting data from Raw objects": [[244, "extracting-data-from-raw-objects"]], "Extracting data by index": [[244, "extracting-data-by-index"]], "Extracting channels by name": [[244, "extracting-channels-by-name"]], "Extracting channels by type": [[244, "extracting-channels-by-type"]], "The Raw.get_data() method": [[244, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[244, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[244, "exporting-and-saving-raw-objects"]], "Working with events": [[245, "working-with-events"]], "Reading and writing events from/to a file": [[245, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[245, "subselecting-and-combining-events"]], "Including/excluding events": [[245, null]], "Mapping Event IDs to trial descriptors": [[245, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[245, "plotting-events"]], "Plotting events and raw data together": [[245, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[245, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[246, "annotating-continuous-data"]], "Creating annotations programmatically": [[246, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[246, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[246, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[246, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[246, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[247, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[247, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[247, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[247, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[247, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[251, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[251, "creating-info-objects"]], "Info objects": [[251, null]], "Info consistency": [[251, null]], "Creating Raw objects": [[251, "creating-raw-objects"]], "Units": [[251, null]], "Creating Epochs objects": [[251, "creating-epochs-objects"]], "Creating Evoked Objects": [[251, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[252, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[252, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[252, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[252, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[252, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[252, "create-source-space-data-with-known-signals"]], "Plot original signals": [[252, "plot-original-signals"]], "Simulate sensor-space signals": [[252, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[252, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[252, "exercises"], [261, "exercises"]], "DICS for power mapping": [[253, "dics-for-power-mapping"]], "Setup": [[253, "setup"]], "Data simulation": [[253, "data-simulation"]], "Power mapping": [[253, "power-mapping"]], "Statistical inference": [[256, "statistical-inference"]], "Hypothesis testing": [[256, "hypothesis-testing"]], "Null hypothesis": [[256, "null-hypothesis"]], "Parametric tests": [[256, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[256, "hat-variance-adjustment"], [256, "id5"]], "Non-parametric tests": [[256, "non-parametric-tests"]], "Multiple comparisons": [[256, "multiple-comparisons"]], "Bonferroni correction": [[256, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[256, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[256, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[256, "clustering"]], "Effect size": [[256, null]], "Defining the adjacency matrix": [[256, "defining-the-adjacency-matrix"]], "Standard clustering": [[256, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[256, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[256, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[256, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[256, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[256, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[257, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[258, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[258, "set-parameters"], [260, "set-parameters"], [261, "set-parameters"], [264, "set-parameters"], [265, "set-parameters"], [266, "set-parameters"]], "Define adjacency for statistics": [[258, "define-adjacency-for-statistics"]], "Compute statistic": [[258, "compute-statistic"], [259, "compute-statistic"], [264, "compute-statistic"], [265, "compute-statistic"]], "View time-frequency plots": [[258, "view-time-frequency-plots"], [259, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[259, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[260, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[260, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[260, "setup-repeated-measures-anova"]], "Sample data layout": [[260, "id3"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[260, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[261, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[261, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[261, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[261, "compute-permutation-statistic"]], "Visualize clusters": [[261, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[261, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[264, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[264, "read-epochs-for-all-channels-removing-a-bad-one"], [266, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[264, "transform-to-source-space"], [266, "transform-to-source-space"]], "Transform to common cortical space": [[264, "transform-to-common-cortical-space"], [266, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[264, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[264, "selecting-significant-clusters"]], "Visualize the clusters": [[264, "visualize-the-clusters"], [265, "visualize-the-clusters"], [266, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[265, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[266, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[266, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[266, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[269, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[269, "visualizing-spectrum-objects"]], "Migrating legacy code": [[269, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[269, "id6"]], "Frequency and time-frequency sensor analysis": [[270, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[270, "frequency-analysis"], [271, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[270, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[270, "inspect-power"]], "Joint Plot": [[270, "joint-plot"]], "Inspect ITC": [[270, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[271, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[271, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[271, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[271, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[271, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[271, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[271, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[271, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[271, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[271, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[271, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[271, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[271, "debriefing"]], "Bonus exercises": [[271, "bonus-exercises"]], "Effect of trial duration on SNR": [[271, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[271, "time-resolved-snr"]], "Make figures more publication ready": [[274, "make-figures-more-publication-ready"]], "Imports": [[274, "imports"]], "Evoked plot with brain activation": [[274, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[274, "custom-timecourse-with-montage-inset"]], "Using the event system to link figures": [[275, "using-the-event-system-to-link-figures"]], "Linking interactive plots": [[275, "linking-interactive-plots"]], "Overlaying one figure over another": [[275, "overlaying-one-figure-over-another"]], "Hooking a custom plot into the event system": [[275, "hooking-a-custom-plot-into-the-event-system"]], "General bibliography": [[278, "general-bibliography"]], "Version 0.1 (2011-09-23)": [[279, "version-0-1-2011-09-23"]], "Authors": [[279, "authors"], [280, "authors"], [281, "authors"], [282, "authors"], [283, "authors"], [284, "authors"], [285, "authors"], [286, "authors"], [287, "authors"], [290, "authors"], [291, "authors"], [292, "authors"], [293, "authors"], [294, "authors"], [295, "authors"], [296, "authors"], [297, "authors"], [298, "authors"], [299, "authors"], [300, "authors"], [301, "authors"], [302, "authors"], [303, "authors"], [304, "authors"], [305, "authors"], [306, "authors"], [307, "authors"], [308, "authors"], [309, "authors"], [310, "authors"], [310, "id6"]], "Version 0.10 (2015-10-26)": [[280, "version-0-10-2015-10-26"]], "Changelog": [[280, "changelog"], [281, "changelog"], [282, "changelog"], [283, "changelog"], [284, "changelog"], [285, "changelog"], [286, "changelog"], [287, "changelog"], [288, "changelog"], [289, "changelog"], [290, "changelog"], [291, "changelog"], [296, "changelog"], [297, "changelog"], [298, "changelog"], [299, "changelog"], [300, "changelog"], [301, "changelog"], [302, "changelog"]], "BUG": [[280, "bug"], [281, "bug"], [282, "bug"], [283, "bug"], [284, "bug"], [285, "bug"], [301, "bug"], [302, "bug"]], "API": [[280, "api"], [281, "api"], [282, "api"], [283, "api"], [284, "api"], [285, "api"], [286, "api"], [287, "api"], [288, "api"], [289, "api"], [291, "api"], [298, "api"], [299, "api"], [300, "api"], [301, "api"], [302, "api"]], "Version 0.11 (2015-12-24)": [[281, "version-0-11-2015-12-24"]], "Version 0.12 (2016-05-10)": [[282, "version-0-12-2016-05-10"]], "Version 0.13 (2016-09-27)": [[283, "version-0-13-2016-09-27"]], "Version 0.14 (2017-03-24)": [[284, "version-0-14-2017-03-24"]], "Version 0.15 (2017-10-20)": [[285, "version-0-15-2017-10-20"]], "Version 0.16 (2018-05-01)": [[286, "version-0-16-2018-05-01"]], "Bug": [[286, "bug"], [287, "bug"], [288, "bug"], [289, "bug"], [291, "bug"]], "Version 0.17 (2018-11-19)": [[287, "version-0-17-2018-11-19"]], "Version 0.18 (2019-05-19)": [[288, "version-0-18-2019-05-19"]], "Version 0.19 (2019-09-24)": [[289, "version-0-19-2019-09-24"]], "Version 0.2 (2011-11-08)": [[290, "version-0-2-2011-11-08"]], "API changes summary": [[290, "api-changes-summary"]], "Version 0.20 (2020-03-27)": [[291, "version-0-20-2020-03-27"]], "Version 0.21 (2020-09-21)": [[292, "version-0-21-2020-09-21"]], "Enhancements": [[292, "enhancements"], [293, "enhancements"], [294, "enhancements"], [295, "enhancements"], [303, "enhancements"], [304, "enhancements"], [305, "enhancements"], [306, "enhancements"], [307, "enhancements"], [308, "enhancements"], [309, "enhancements"]], "Bugs": [[292, "bugs"], [293, "bugs"], [294, "bugs"], [295, "bugs"], [303, "bugs"], [304, "bugs"], [305, "bugs"], [306, "bugs"], [307, "bugs"], [308, "bugs"], [309, "bugs"]], "API changes": [[292, "api-changes"], [293, "api-changes"], [294, "api-changes"], [295, "api-changes"], [303, "api-changes"], [305, "api-changes"], [306, "api-changes"], [307, "api-changes"], [308, "api-changes"], [309, "api-changes"]], "Version 0.22.0 (2020-12-17)": [[293, "version-0-22-0-2020-12-17"]], "Version 0.23.0 (2021-04-27)": [[294, "version-0-23-0-2021-04-27"]], "Version 0.24.0 (2021-11-03)": [[295, "version-0-24-0-2021-11-03"]], "Version 0.3 (2012-03-23)": [[296, "version-0-3-2012-03-23"]], "Version 0.4 (2012-08-24)": [[297, "version-0-4-2012-08-24"]], "Version 0.5 (2012-12-27)": [[298, "version-0-5-2012-12-27"]], "Version 0.6 (2013-06-15)": [[299, "version-0-6-2013-06-15"]], "Version 0.7 (2013-11-26)": [[300, "version-0-7-2013-11-26"]], "Version 0.8 (2014-06-25)": [[301, "version-0-8-2014-06-25"]], "Version 0.9 (2015-05-22)": [[302, "version-0-9-2015-05-22"]], "Version 1.0.0 (2022-03-21)": [[303, "version-1-0-0-2022-03-21"]], "Dependencies": [[303, "dependencies"], [310, "dependencies"]], "Version 1.1.0 (2022-08-03)": [[304, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[304, "api-and-behavior-changes"]], "Version 1.2.0 (2022-10-11)": [[305, "version-1-2-0-2022-10-11"]], "Version 1.3.0 (2022-12-21)": [[306, "version-1-3-0-2022-12-21"]], "Version 1.4.0 (2023-05-10)": [[307, "version-1-4-0-2023-05-10"]], "Version 1.5.0 (2023-08-14)": [[308, "version-1-5-0-2023-08-14"]], "Version 1.6.0 (2023-11-20)": [[309, "version-1-6-0-2023-11-20"]], "1.7.1 (2024-06-14)": [[310, "changes-1-7-1"]], "Bugfixes": [[310, "bugfixes"], [310, "id5"]], "1.7.0 (2024-04-19)": [[310, "changes-1-7-0"]], "Notable changes": [[310, "notable-changes"]], "API changes by deprecation": [[310, "api-changes-by-deprecation"]], "New features": [[310, "new-features"]], "Other changes": [[310, "other-changes"]], "Contributing guide": [[311, "contributing-guide"]], "Overview of contribution process": [[311, "overview-of-contribution-process"]], "Setting up your local development environment": [[311, "setting-up-your-local-development-environment"]], "Configuring git": [[311, "configuring-git"]], "Git GUI alternative": [[311, null]], "GNU Make": [[311, "gnu-make"]], "Forking the MNE-Python repository": [[311, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[311, "creating-the-virtual-environment"]], "Supported Python environments": [[311, null]], "Basic git commands": [[311, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[311, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[311, "mne-python-coding-conventions"]], "General requirements": [[311, "general-requirements"]], "All new functionality must have test coverage": [[311, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[311, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[311, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[311, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[311, "describe-your-changes-in-the-changelog"]], "Test locally before opening pull requests (PRs)": [[311, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[311, "make-tests-fast-and-thorough"]], "Code style": [[311, "code-style"]], "Adhere to standard Python style guidelines": [[311, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[311, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[311, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[311, "cross-reference-everywhere"]], "Other style guidance": [[311, "other-style-guidance"]], "Code organization": [[311, "code-organization"]], "Importing": [[311, "importing"]], "Return types": [[311, "return-types"]], "Running the test suite": [[311, "running-the-test-suite"]], "pytest flags": [[311, null]], "Building the documentation": [[311, "building-the-documentation"]], "Modifying command-line tools": [[311, "modifying-command-line-tools"]], "GitHub workflow": [[311, "github-workflow"]], "Project Governance": [[312, "project-governance"]], "The Project": [[312, "the-project"]], "Governance model": [[312, "governance-model"]], "BDFL": [[312, "bdfl"]], "Steering Council": [[312, "steering-council"], [964, "steering-council"]], "Council membership": [[312, "council-membership"]], "Conflict of interest": [[312, "conflict-of-interest"]], "Private communications of the Council": [[312, "private-communications-of-the-council"]], "Council decision making": [[312, "council-decision-making"]], "Institutional Partners and funding": [[312, "institutional-partners-and-funding"]], "Document history": [[312, "document-history"], [964, "document-history"]], "Acknowledgements": [[312, "acknowledgements"]], "License": [[312, "license"]], "MNE-Python Development": [[313, "mne-python-development"]], "Roadmap": [[314, "roadmap"]], "Open": [[314, "open"]], "Clustering statistics API": [[314, "clustering-statistics-api"]], "Modernization of realtime processing": [[314, "modernization-of-realtime-processing"]], "In progress": [[314, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[314, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[314, "first-class-opm-support"]], "Deep source modeling": [[314, "deep-source-modeling"]], "Time-frequency classes": [[314, "time-frequency-classes"]], "3D visualization": [[314, "d-visualization"]], "Documentation updates": [[314, "documentation-updates"]], "Completed": [[314, "completed"]], "Improved sEEG/ECoG/DBS support": [[314, "improved-seeg-ecog-dbs-support"]], "Access to open EEG/MEG databases": [[314, "access-to-open-eeg-meg-databases"]], "Eye-tracking support": [[314, "eye-tracking-support"]], "Pediatric and clinical MEG pipelines": [[314, "pediatric-and-clinical-meg-pipelines"]], "Integrate OpenMEEG via improved Python bindings": [[314, "integrate-openmeeg-via-improved-python-bindings"]], "Time-frequency visualization": [[314, "time-frequency-visualization"]], "Distributed computing support": [[314, "distributed-computing-support"]], "2D visualization": [[314, "id4"]], "Tutorial / example overhaul": [[314, "tutorial-example-overhaul"]], "Cluster computing images": [[314, "cluster-computing-images"]], "What\u2019s new": [[315, "what-s-new"]], "How to cite MNE-Python": [[316, "how-to-cite-mne-python"]], "Citing the software": [[316, "citing-the-software"]], "Citing the inverse imaging algorithms": [[316, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[316, "citing-other-algorithms"]], "Papers citing MNE-Python": [[317, "papers-citing-mne-python"]], "The typical M/EEG workflow": [[318, "the-typical-m-eeg-workflow"]], "Overview": [[318, "overview"]], "Artifact suppression": [[318, "artifact-suppression"]], "SSP": [[318, "ssp"]], "ICA": [[318, "ica"]], "Epoching and evoked data": [[318, "epoching-and-evoked-data"]], "Rejection using annotations": [[318, "rejection-using-annotations"]], "Source localization": [[318, "source-localization"]], "Anatomical information": [[318, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[318, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[318, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[318, "id11"]], "Creating the BEM model meshes": [[318, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[318, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[318, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[318, "aligning-coordinate-frames"]], "Computing the forward solution": [[318, "computing-the-forward-solution"], [322, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[318, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[318, "calculating-the-inverse-operator"]], "Creating source estimates": [[318, "creating-source-estimates"]], "Group analyses": [[318, "group-analyses"]], "Datasets Overview": [[319, "datasets-overview"]], "Sample": [[319, "sample"]], "Trigger codes for the sample data set.": [[319, "id23"]], "Contents of the data set": [[319, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[319, "id24"]], "Overview of the contents of the subjects/sample directory.": [[319, "id25"]], "UCL OPM Auditory": [[319, "ucl-opm-auditory"]], "Brainstorm": [[319, "brainstorm"]], "Auditory": [[319, "auditory"]], "Resting state": [[319, "resting-state"]], "Median nerve": [[319, "median-nerve"]], "SPM faces": [[319, "spm-faces"]], "EEGBCI motor imagery": [[319, "eegbci-motor-imagery"]], "Somatosensory": [[319, "somatosensory"]], "Multimodal": [[319, "multimodal"]], "fNIRS motor": [[319, "fnirs-motor"]], "High frequency SEF": [[319, "high-frequency-sef"]], "Visual 92 object categories": [[319, "visual-92-object-categories"]], "mTRF Dataset": [[319, "mtrf-dataset"]], "Kiloword dataset": [[319, "kiloword-dataset"]], "KIT phantom dataset": [[319, "kit-phantom-dataset"]], "4D Neuroimaging / BTi dataset": [[319, "d-neuroimaging-bti-dataset"]], "Kernel OPM phantom dataset": [[319, "kernel-opm-phantom-dataset"]], "OPM": [[319, "opm"]], "The Sleep PolySomnoGraphic Database": [[319, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[319, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[319, "miscellaneous-datasets"]], "fsaverage": [[319, "fsaverage"]], "Infant template MRIs": [[319, "infant-template-mris"]], "ECoG Dataset": [[319, "ecog-dataset"]], "sEEG Dataset": [[319, "seeg-dataset"]], "LIMO Dataset": [[319, "limo-dataset"]], "ERP CORE Dataset": [[319, "erp-core-dataset"]], "SSVEP": [[319, "ssvep"]], "EYELINK": [[319, "eyelink"]], "EEG-Eyetracking": [[319, "eeg-eyetracking"]], "Freeviewing": [[319, "freeviewing"]], "Interactive versus scripted analysis": [[320, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[320, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[320, "submodule-based-organization"]], "(Mostly) unified API": [[320, "mostly-unified-api"]], "In-place operation": [[320, "in-place-operation"]], "Glossary": [[321, "glossary"]], "Algorithms and other implementation details": [[322, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[322, "internal-representation-units"]], "Floating-point precision": [[322, "floating-point-precision"]], "Supported channel types": [[322, "supported-channel-types"]], "Supported data formats": [[322, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[322, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[322, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[322, "preloading-continuous-raw-data"]], "Preloading epoched data": [[322, "preloading-epoched-data"]], "Loading data explicitly": [[322, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[322, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[322, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[322, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[322, "signal-space-projection-ssp"]], "General concepts": [[322, "general-concepts"]], "Estimation of the noise subspace": [[322, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[322, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[322, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[322, "using-the-watershed-algorithm"]], "Using FLASH images": [[322, "using-flash-images"]], "Organizing MRI data into directories": [[322, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[322, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[322, "inspecting-the-meshes"]], "The forward solution": [[322, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[322, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[322, "id20"]], "The head and device coordinate systems": [[322, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[322, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[322, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[322, "creating-the-bem-meshes"]], "Topology checks": [[322, "topology-checks"]], "Computing the BEM geometry data": [[322, "computing-the-bem-geometry-data"]], "Coil geometry information": [[322, "coil-geometry-information"]], "The sensor coordinate system": [[322, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[322, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[322, "implemented-coil-geometries"]], "Normal coil descriptions.": [[322, "id22"]], "Accurate coil descriptions": [[322, "id23"]], "The coil definition file": [[322, "the-coil-definition-file"]], "Coil representation accuracies.": [[322, "id24"]], "Purpose": [[322, "purpose"]], "Implementation of software gradient compensation": [[322, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[322, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[322, "id25"]], "EEG forward solution in the sphere model": [[322, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[322, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[322, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[322, "the-linear-inverse-operator"]], "Regularization": [[322, "regularization"]], "Whitening and scaling": [[322, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[322, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[322, "computation-of-the-solution"]], "Noise normalization": [[322, "noise-normalization"]], "sLORETA": [[322, "sloreta"]], "eLORETA": [[322, "eloreta"]], "Predicted data": [[322, "predicted-data"]], "Cortical patch statistics": [[322, "cortical-patch-statistics"]], "Orientation constraints": [[322, "orientation-constraints"]], "Depth weighting": [[322, "depth-weighting"]], "Effective number of averages": [[322, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[322, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[322, "why-morphing"]], "The morphing maps": [[322, "the-morphing-maps"]], "About smoothing": [[322, "about-smoothing"]], "Documentation overview": [[323, "documentation-overview"]], "Funding and other support": [[324, "funding-and-other-support"]], "Institutional partners": [[324, "institutional-partners"]], "Current partners": [[324, "current-partners"], [964, "current-partners"]], "Former partners": [[324, "former-partners"], [964, "former-partners"]], "Command line tools using Python": [[325, "command-line-tools-using-python"]], "mne anonymize": [[325, "mne-anonymize"]], "Anonymize raw fif file.": [[325, "anonymize-raw-fif-file"]], "Options": [[325, "options"], [325, "id5"], [325, "id8"], [325, "id11"], [325, "id14"], [325, "id17"], [325, "id20"], [325, "id23"], [325, "id26"], [325, "id30"], [325, "id33"], [325, "id36"], [325, "id39"], [325, "id42"], [325, "id45"], [325, "id48"], [325, "id51"], [325, "id54"], [325, "id57"], [325, "id60"], [325, "id63"], [325, "id66"], [325, "id69"]], "mne browse_raw": [[325, "mne-browse-raw"]], "Browse raw data.": [[325, "browse-raw-data"]], "mne bti2fiff": [[325, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[325, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[325, "notes"], [325, "id28"]], "mne clean_eog_ecg": [[325, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[325, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[325, "mne-compare-fiff"]], "Compare FIFF files.": [[325, "compare-fiff-files"]], "mne compute_proj_ecg": [[325, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[325, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[325, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[325, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[325, "mne-coreg"]], "Open the coregistration GUI.": [[325, "open-the-coregistration-gui"]], "mne flash_bem": [[325, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[325, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[325, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[325, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[325, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[325, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[325, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[325, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[325, "mne-maxfilter"]], "Apply MaxFilter.": [[325, "apply-maxfilter"]], "mne prepare_bem_model": [[325, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[325, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[325, "mne-report"]], "Create mne report for a folder.": [[325, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[325, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[325, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[325, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[325, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[325, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[325, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[325, "mne-show-info"]], "Show measurement info from .fif file.": [[325, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[325, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[325, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[325, "mne-sys-info"]], "Show system information.": [[325, "show-system-information"]], "mne watershed_bem": [[325, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[325, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[325, "mne-what"]], "Check type of FIF file.": [[325, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[326, "mne-acqparserfif"]], "mne.Annotations": [[327, "mne-annotations"]], "Examples using mne.Annotations": [[327, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[328, "mne-baseepochs"]], "mne.BiHemiLabel": [[329, "mne-bihemilabel"]], "mne.Covariance": [[330, "mne-covariance"]], "Examples using mne.Covariance": [[330, "examples-using-mne-covariance"]], "mne.Dipole": [[331, "mne-dipole"]], "Examples using mne.Dipole": [[331, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[332, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[332, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[333, "mne-epochs"]], "Examples using mne.Epochs": [[333, "examples-using-mne-epochs"]], "mne.EpochsArray": [[334, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[334, "examples-using-mne-epochsarray"]], "mne.Evoked": [[335, "mne-evoked"]], "Examples using mne.Evoked": [[335, "examples-using-mne-evoked"]], "mne.EvokedArray": [[336, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[336, "examples-using-mne-evokedarray"]], "mne.Forward": [[337, "mne-forward"]], "Examples using mne.Forward": [[337, "examples-using-mne-forward"]], "mne.Info": [[338, "mne-info"]], "Examples using mne.Info": [[338, "examples-using-mne-info"]], "mne.Label": [[339, "mne-label"]], "Examples using mne.Label": [[339, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[340, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[340, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[341, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[341, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[342, "mne-projection"]], "Examples using mne.Projection": [[342, "examples-using-mne-projection"]], "mne.Report": [[343, "mne-report"]], "Examples using mne.Report": [[343, "examples-using-mne-report"]], "mne.SourceEstimate": [[344, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[344, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[345, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[345, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[346, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[346, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[347, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[347, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[348, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[348, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[349, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[350, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[350, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[351, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[352, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[352, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[353, "mne-apply-forward"]], "mne.apply_forward_raw": [[354, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[355, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[356, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[356, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[357, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[357, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[358, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[359, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[359, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[360, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[361, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[361, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[362, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[362, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[363, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[363, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[364, "mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[365, "mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[366, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[366, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[367, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[367, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[368, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[368, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[369, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[369, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[370, "mne-beamformer-read-beamformer"]], "mne.beamformer.trap_music": [[371, "mne-beamformer-trap-music"]], "Examples using mne.beamformer.trap_music": [[371, "examples-using-mne-beamformer-trap-music"]], "mne.bem.ConductorModel": [[372, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[372, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[373, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[374, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[375, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[376, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[377, "mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[378, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[379, "mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[380, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[380, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[381, "mne-channel-type"]], "Examples using mne.channel_type": [[381, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[382, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[382, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[383, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[383, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[384, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[384, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[385, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[386, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[386, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[387, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[388, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[388, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[389, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[390, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[391, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[392, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[392, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[393, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[393, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[394, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[394, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[395, "mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[396, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[396, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[397, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[398, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[398, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[399, "mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[400, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[400, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[401, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[402, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[403, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[404, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[404, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[405, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[406, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[407, "mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[408, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[408, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[409, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[410, "mne-channels-rename-channels"]], "mne.channels.unify_bad_channels": [[411, "mne-channels-unify-bad-channels"]], "mne.chpi.compute_chpi_amplitudes": [[412, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[412, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[413, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[413, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[414, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[414, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[415, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[415, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[416, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[416, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[417, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[418, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[418, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[419, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[419, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[420, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[420, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[421, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[422, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[422, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[423, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[423, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[424, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[424, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[425, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[425, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[426, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[426, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[427, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[427, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[428, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[428, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[429, "mne-compute-rank"]], "Examples using mne.compute_rank": [[429, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[430, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[430, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[431, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[431, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[432, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[432, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[433, "mne-concatenate-events"]], "mne.concatenate_raws": [[434, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[434, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[435, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[435, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[436, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[436, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[437, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[437, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[438, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[438, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.count_annotations": [[439, "mne-count-annotations"]], "mne.count_events": [[440, "mne-count-events"]], "mne.cov.compute_whitener": [[441, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[442, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[443, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[443, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[444, "mne-create-default-subject"]], "mne.create_info": [[445, "mne-create-info"]], "Examples using mne.create_info": [[445, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[446, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[447, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[448, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[449, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[450, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[451, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[452, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[453, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[454, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[454, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[455, "mne-datasets-erp-core-data-path"]], "mne.datasets.eyelink.data_path": [[456, "mne-datasets-eyelink-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[457, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[458, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[459, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[460, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[461, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[461, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[462, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[463, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[464, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[465, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[466, "mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[467, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[468, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[469, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[470, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[471, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[472, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.phantom_kernel.data_path": [[473, "mne-datasets-phantom-kernel-data-path"]], "mne.datasets.phantom_kit.data_path": [[474, "mne-datasets-phantom-kit-data-path"]], "mne.datasets.refmeg_noise.data_path": [[475, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[476, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[476, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[477, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[477, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[478, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[479, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[480, "mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[481, "mne-datasets-ssvep-data-path"]], "mne.datasets.ucl_opm_auditory.data_path": [[482, "mne-datasets-ucl-opm-auditory-data-path"]], "mne.datasets.visual_92_categories.data_path": [[483, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[484, "mne-decimate-surface"]], "mne.decoding.CSP": [[485, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[485, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[486, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[486, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[487, "mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[488, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[488, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[489, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[489, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[490, "mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[491, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[491, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[492, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[492, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[493, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[493, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[494, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[494, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[495, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[495, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[496, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[497, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[497, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[498, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[499, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[499, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[500, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[500, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[501, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[501, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[502, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[502, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[503, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[503, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[504, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[504, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[505, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[505, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[506, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[506, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[507, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[508, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[508, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[509, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[509, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[510, "mne-equalize-channels"]], "mne.event.define_target_events": [[511, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[511, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[512, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[513, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[514, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[514, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[515, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[516, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[517, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[518, "mne-export-export-raw"]], "mne.extract_label_time_course": [[519, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[519, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[520, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[520, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[521, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[521, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[522, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[523, "mne-filter-filter-data"]], "mne.filter.notch_filter": [[524, "mne-filter-notch-filter"]], "mne.filter.resample": [[525, "mne-filter-resample"]], "Examples using mne.filter.resample": [[525, "examples-using-mne-filter-resample"]], "mne.find_events": [[526, "mne-find-events"]], "Examples using mne.find_events": [[526, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[527, "mne-find-stim-steps"]], "mne.fit_dipole": [[528, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[528, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[529, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[530, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[531, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[532, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[533, "mne-get-config"]], "Examples using mne.get_config": [[533, "examples-using-mne-get-config"]], "mne.get_config_path": [[534, "mne-get-config-path"]], "Examples using mne.get_config_path": [[534, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[535, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[536, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[537, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[537, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[538, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[538, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[539, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[540, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[541, "mne-grade-to-vertices"]], "mne.grand_average": [[542, "mne-grand-average"]], "Examples using mne.grand_average": [[542, "examples-using-mne-grand-average"]], "mne.grow_labels": [[543, "mne-grow-labels"]], "mne.gui.coregistration": [[544, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[544, "examples-using-mne-gui-coregistration"]], "mne.head_to_mni": [[545, "mne-head-to-mni"]], "mne.head_to_mri": [[546, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[547, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[547, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[548, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[548, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[549, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[549, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[550, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[550, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[551, "mne-io-baseraw"]], "mne.io.Raw": [[552, "mne-io-raw"]], "Examples using mne.io.Raw": [[552, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[553, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[553, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[554, "mne-io-anonymize-info"]], "mne.io.get_channel_type_constants": [[555, "mne-io-get-channel-type-constants"]], "mne.io.kit.read_mrk": [[556, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[557, "mne-io-read-fiducials"]], "mne.io.read_info": [[558, "mne-io-read-info"]], "Examples using mne.io.read_info": [[558, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[559, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[559, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[560, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[560, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[561, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[561, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[562, "mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[563, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[563, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[564, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[564, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[565, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[565, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[566, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[566, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[567, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[568, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[568, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[569, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[569, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[570, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[570, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[571, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[571, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_eyelink": [[572, "mne-io-read-raw-eyelink"]], "Examples using mne.io.read_raw_eyelink": [[572, "examples-using-mne-io-read-raw-eyelink"]], "mne.io.read_raw_fieldtrip": [[573, "mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[574, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[574, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_fil": [[575, "mne-io-read-raw-fil"]], "Examples using mne.io.read_raw_fil": [[575, "examples-using-mne-io-read-raw-fil"]], "mne.io.read_raw_gdf": [[576, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[576, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[577, "mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[578, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[578, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[579, "mne-io-read-raw-nedf"]], "mne.io.read_raw_neuralynx": [[580, "mne-io-read-raw-neuralynx"]], "mne.io.read_raw_nicolet": [[581, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[581, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[582, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[582, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[583, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[583, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_nsx": [[584, "mne-io-read-raw-nsx"]], "mne.io.read_raw_persyst": [[585, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[585, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[586, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[586, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[587, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[588, "mne-io-write-fiducials"]], "mne.io.write_info": [[589, "mne-io-write-info"]], "mne.label.select_sources": [[590, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[590, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[591, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[591, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[592, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[592, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[593, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[593, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[594, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[594, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[595, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[595, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[596, "mne-make-field-map"]], "Examples using mne.make_field_map": [[596, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[597, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[597, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[598, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[598, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[599, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[599, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[600, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[600, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[601, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[601, "examples-using-mne-make-sphere-model"]], "mne.match_channel_orders": [[602, "mne-match-channel-orders"]], "mne.merge_events": [[603, "mne-merge-events"]], "Examples using mne.merge_events": [[603, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[604, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[604, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[605, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[605, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[606, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[606, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[607, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[607, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[608, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[608, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[609, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[610, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[611, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[611, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[612, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[612, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[613, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[614, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[614, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[615, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[615, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[616, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[616, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[617, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[617, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[618, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[619, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[619, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[620, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[620, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[621, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[621, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[622, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[622, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[623, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[624, "mne-morph-labels"]], "mne.morph_source_spaces": [[625, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[625, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[626, "mne-open-docs"]], "mne.open_report": [[627, "mne-open-report"]], "Examples using mne.open_report": [[627, "examples-using-mne-open-report"]], "mne.parse_config": [[628, "mne-parse-config"]], "mne.pick_channels": [[629, "mne-pick-channels"]], "Examples using mne.pick_channels": [[629, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[630, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[631, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[632, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[632, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[633, "mne-pick-events"]], "Examples using mne.pick_events": [[633, "examples-using-mne-pick-events"]], "mne.pick_info": [[634, "mne-pick-info"]], "Examples using mne.pick_info": [[634, "examples-using-mne-pick-info"]], "mne.pick_types": [[635, "mne-pick-types"]], "Examples using mne.pick_types": [[635, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[636, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[636, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[637, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[637, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[638, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[638, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[639, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[639, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[640, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[641, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[641, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[642, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[642, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[643, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[643, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[644, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[645, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[645, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[646, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[646, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[647, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[647, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[648, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[649, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[650, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[650, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[651, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[651, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.compute_proj_hfc": [[652, "mne-preprocessing-compute-proj-hfc"]], "Examples using mne.preprocessing.compute_proj_hfc": [[652, "examples-using-mne-preprocessing-compute-proj-hfc"]], "mne.preprocessing.corrmap": [[653, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[653, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[654, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[654, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[655, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[655, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[656, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[656, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[657, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.eyetracking.Calibration": [[658, "mne-preprocessing-eyetracking-calibration"]], "Examples using mne.preprocessing.eyetracking.Calibration": [[658, "examples-using-mne-preprocessing-eyetracking-calibration"]], "mne.preprocessing.eyetracking.convert_units": [[659, "mne-preprocessing-eyetracking-convert-units"]], "Examples using mne.preprocessing.eyetracking.convert_units": [[659, "examples-using-mne-preprocessing-eyetracking-convert-units"]], "mne.preprocessing.eyetracking.get_screen_visual_angle": [[660, "mne-preprocessing-eyetracking-get-screen-visual-angle"]], "mne.preprocessing.eyetracking.interpolate_blinks": [[661, "mne-preprocessing-eyetracking-interpolate-blinks"]], "Examples using mne.preprocessing.eyetracking.interpolate_blinks": [[661, "examples-using-mne-preprocessing-eyetracking-interpolate-blinks"]], "mne.preprocessing.eyetracking.read_eyelink_calibration": [[662, "mne-preprocessing-eyetracking-read-eyelink-calibration"]], "Examples using mne.preprocessing.eyetracking.read_eyelink_calibration": [[662, "examples-using-mne-preprocessing-eyetracking-read-eyelink-calibration"]], "mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[663, "mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "Examples using mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[663, "examples-using-mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "mne.preprocessing.find_bad_channels_lof": [[664, "mne-preprocessing-find-bad-channels-lof"]], "mne.preprocessing.find_bad_channels_maxwell": [[665, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[665, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[666, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[666, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[667, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[667, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[668, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[668, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[669, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[670, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.make_montage_volume": [[671, "mne-preprocessing-ieeg-make-montage-volume"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[672, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.ieeg.warp_montage": [[673, "mne-preprocessing-ieeg-warp-montage"]], "mne.preprocessing.infomax": [[674, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[675, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[675, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[676, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[676, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[677, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[678, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[678, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[679, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[679, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[680, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[680, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[681, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[682, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[682, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[683, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[683, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[684, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[684, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[685, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[686, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[687, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[688, "mne-preprocessing-read-ica"]], "Examples using mne.preprocessing.read_ica": [[688, "examples-using-mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[689, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[690, "mne-preprocessing-realign-raw"]], "Examples using mne.preprocessing.realign_raw": [[690, "examples-using-mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[691, "mne-preprocessing-regress-artifact"]], "Examples using mne.preprocessing.regress_artifact": [[691, "examples-using-mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[692, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[693, "mne-random-parcellation"]], "mne.read_annotations": [[694, "mne-read-annotations"]], "Examples using mne.read_annotations": [[694, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[695, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[695, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[696, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[696, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[697, "mne-read-cov"]], "Examples using mne.read_cov": [[697, "examples-using-mne-read-cov"]], "mne.read_dipole": [[698, "mne-read-dipole"]], "Examples using mne.read_dipole": [[698, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[699, "mne-read-epochs"]], "Examples using mne.read_epochs": [[699, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[700, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[700, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[701, "mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[702, "mne-read-epochs-kit"]], "mne.read_events": [[703, "mne-read-events"]], "Examples using mne.read_events": [[703, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[704, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[705, "mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[706, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[706, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[707, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[708, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[708, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[709, "mne-read-freesurfer-lut"]], "mne.read_label": [[710, "mne-read-label"]], "Examples using mne.read_label": [[710, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[711, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[711, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[712, "mne-read-lta"]], "mne.read_morph_map": [[713, "mne-read-morph-map"]], "mne.read_proj": [[714, "mne-read-proj"]], "Examples using mne.read_proj": [[714, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[715, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[716, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[716, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[717, "mne-read-source-morph"]], "mne.read_source_spaces": [[718, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[718, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[719, "mne-read-surface"]], "Examples using mne.read_surface": [[719, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[720, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[720, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[721, "mne-read-trans"]], "Examples using mne.read_trans": [[721, "examples-using-mne-read-trans"]], "mne.read_tri": [[722, "mne-read-tri"]], "mne.read_vectorview_selection": [[723, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[723, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[724, "mne-rename-channels"]], "mne.scale_bem": [[725, "mne-scale-bem"]], "mne.scale_labels": [[726, "mne-scale-labels"]], "mne.scale_mri": [[727, "mne-scale-mri"]], "Examples using mne.scale_mri": [[727, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[728, "mne-scale-source-space"]], "mne.sensitivity_map": [[729, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[729, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[730, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[730, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[731, "mne-set-cache-dir"]], "mne.set_config": [[732, "mne-set-config"]], "Examples using mne.set_config": [[732, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[733, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[733, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[734, "mne-set-log-file"]], "mne.set_log_level": [[735, "mne-set-log-level"]], "mne.set_memmap_min_size": [[736, "mne-set-memmap-min-size"]], "mne.setup_source_space": [[737, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[737, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[738, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[738, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[739, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[739, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[740, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[741, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[741, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[742, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[742, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[743, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[743, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[744, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[744, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[745, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[745, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[746, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[746, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[747, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[747, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[748, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[748, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[749, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[749, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[750, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[751, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[751, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[752, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[753, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[753, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[754, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[754, "id5"]], "Examples using mne.simulation.simulate_raw": [[754, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[755, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[755, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[756, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[756, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[757, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[757, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[758, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[759, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[760, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[761, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[761, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[762, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[763, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[764, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[765, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[766, "mne-split-label"]], "mne.stats.bonferroni_correction": [[767, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[767, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[768, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[768, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[769, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[769, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[770, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[770, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[771, "mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[772, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[772, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[773, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[773, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[774, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[774, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[775, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[775, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[776, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[776, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[777, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[777, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[778, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[778, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[779, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[779, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[780, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[780, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[781, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[781, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[782, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[782, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[783, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[784, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[784, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[785, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[785, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[786, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[787, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[787, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[788, "mne-sys-info"]], "Examples using mne.sys_info": [[788, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[789, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[789, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.AverageTFRArray": [[790, "mne-time-frequency-averagetfrarray"]], "Examples using mne.time_frequency.AverageTFRArray": [[790, "examples-using-mne-time-frequency-averagetfrarray"]], "mne.time_frequency.BaseTFR": [[791, "mne-time-frequency-basetfr"]], "Examples using mne.time_frequency.BaseTFR": [[791, "examples-using-mne-time-frequency-basetfr"]], "mne.time_frequency.CrossSpectralDensity": [[792, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[792, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[793, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[793, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsSpectrumArray": [[794, "mne-time-frequency-epochsspectrumarray"]], "Examples using mne.time_frequency.EpochsSpectrumArray": [[794, "examples-using-mne-time-frequency-epochsspectrumarray"]], "mne.time_frequency.EpochsTFR": [[795, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[795, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.EpochsTFRArray": [[796, "mne-time-frequency-epochstfrarray"]], "Examples using mne.time_frequency.EpochsTFRArray": [[796, "examples-using-mne-time-frequency-epochstfrarray"]], "mne.time_frequency.RawTFR": [[797, "mne-time-frequency-rawtfr"]], "mne.time_frequency.RawTFRArray": [[798, "mne-time-frequency-rawtfrarray"]], "mne.time_frequency.Spectrum": [[799, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[799, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.SpectrumArray": [[800, "mne-time-frequency-spectrumarray"]], "Examples using mne.time_frequency.SpectrumArray": [[800, "examples-using-mne-time-frequency-spectrumarray"]], "mne.time_frequency.csd_array_fourier": [[801, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[802, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[803, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[804, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[804, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[805, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[805, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[806, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[806, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[807, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[807, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[808, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[809, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[809, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[810, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[811, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[812, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[812, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[813, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[814, "mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[815, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[815, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[816, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[817, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[818, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[819, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[820, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[821, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[822, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[823, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[823, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[824, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[825, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[826, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[826, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[827, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[827, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[828, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[828, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[829, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[830, "mne-transform-surface-to"]], "mne.transforms.Transform": [[831, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[832, "mne-transforms-apply-volume-registration"]], "mne.transforms.apply_volume_registration_points": [[833, "mne-transforms-apply-volume-registration-points"]], "mne.transforms.compute_volume_registration": [[834, "mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[835, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[836, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[836, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[837, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[838, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[838, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[839, "mne-use-log-level"]], "Examples using mne.use_log_level": [[839, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[840, "mne-utils-deprecated"]], "mne.utils.warn": [[841, "mne-utils-warn"]], "mne.verbose": [[842, "mne-verbose"]], "mne.vertex_to_mni": [[843, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[843, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[844, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[844, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[845, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[845, "examples-using-mne-viz-clickableimage"]], "mne.viz.EvokedField": [[846, "mne-viz-evokedfield"]], "Examples using mne.viz.EvokedField": [[846, "examples-using-mne-viz-evokedfield"]], "mne.viz.Figure3D": [[847, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[848, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[849, "mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[850, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[850, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[851, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[852, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[853, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[854, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[854, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.eyetracking.plot_gaze": [[855, "mne-viz-eyetracking-plot-gaze"]], "Examples using mne.viz.eyetracking.plot_gaze": [[855, "examples-using-mne-viz-eyetracking-plot-gaze"]], "mne.viz.get_3d_backend": [[856, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[857, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[857, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[858, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[859, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[859, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[860, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[861, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[862, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[862, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[863, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[863, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[864, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[864, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[865, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[865, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[866, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[866, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[867, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[867, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[868, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[868, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[869, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[869, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[870, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[870, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[871, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[871, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[872, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[873, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[873, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[874, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[874, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[875, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[876, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[877, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[877, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[878, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[879, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[879, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[880, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[881, "mne-viz-plot-evoked-field"]], "Examples using mne.viz.plot_evoked_field": [[881, "examples-using-mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[882, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[882, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[883, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[884, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[884, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[885, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[886, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[886, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[887, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[887, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[888, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[888, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[889, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[890, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[891, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[892, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[893, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[894, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[894, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[895, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[896, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[897, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[897, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[898, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[898, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[899, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[900, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[901, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[902, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[903, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[903, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[904, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[904, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[905, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[905, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[906, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[907, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[908, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[908, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[909, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[909, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[910, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[911, "mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[912, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[913, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[913, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[914, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[914, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[915, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[916, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[916, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.ui_events.ColormapRange": [[917, "mne-viz-ui-events-colormaprange"]], "mne.viz.ui_events.Contours": [[918, "mne-viz-ui-events-contours"]], "mne.viz.ui_events.FigureClosing": [[919, "mne-viz-ui-events-figureclosing"]], "mne.viz.ui_events.PlaybackSpeed": [[920, "mne-viz-ui-events-playbackspeed"]], "mne.viz.ui_events.TimeChange": [[921, "mne-viz-ui-events-timechange"]], "Examples using mne.viz.ui_events.TimeChange": [[921, "examples-using-mne-viz-ui-events-timechange"]], "mne.viz.ui_events.UIEvent": [[922, "mne-viz-ui-events-uievent"]], "Examples using mne.viz.ui_events.UIEvent": [[922, "examples-using-mne-viz-ui-events-uievent"]], "mne.viz.ui_events.VertexSelect": [[923, "mne-viz-ui-events-vertexselect"]], "mne.viz.ui_events.disable_ui_events": [[924, "mne-viz-ui-events-disable-ui-events"]], "mne.viz.ui_events.link": [[925, "mne-viz-ui-events-link"]], "Examples using mne.viz.ui_events.link": [[925, "examples-using-mne-viz-ui-events-link"]], "mne.viz.ui_events.publish": [[926, "mne-viz-ui-events-publish"]], "Examples using mne.viz.ui_events.publish": [[926, "examples-using-mne-viz-ui-events-publish"]], "mne.viz.ui_events.subscribe": [[927, "mne-viz-ui-events-subscribe"]], "Examples using mne.viz.ui_events.subscribe": [[927, "examples-using-mne-viz-ui-events-subscribe"]], "mne.viz.ui_events.unlink": [[928, "mne-viz-ui-events-unlink"]], "mne.viz.ui_events.unsubscribe": [[929, "mne-viz-ui-events-unsubscribe"]], "mne.viz.use_3d_backend": [[930, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[931, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[931, "examples-using-mne-viz-use-browser-backend"]], "mne.what": [[932, "mne-what"]], "mne.write_bem_solution": [[933, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[934, "mne-write-bem-surfaces"]], "mne.write_cov": [[935, "mne-write-cov"]], "mne.write_events": [[936, "mne-write-events"]], "mne.write_evokeds": [[937, "mne-write-evokeds"]], "mne.write_forward_solution": [[938, "mne-write-forward-solution"]], "mne.write_head_bem": [[939, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[939, "examples-using-mne-write-head-bem"]], "mne.write_label": [[940, "mne-write-label"]], "mne.write_labels_to_annot": [[941, "mne-write-labels-to-annot"]], "mne.write_proj": [[942, "mne-write-proj"]], "mne.write_source_spaces": [[943, "mne-write-source-spaces"]], "mne.write_surface": [[944, "mne-write-surface"]], "Examples using mne.write_surface": [[944, "examples-using-mne-write-surface"]], "mne.write_trans": [[945, "mne-write-trans"]], "Frequently Asked Questions (FAQ)": [[946, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[946, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[946, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[946, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[946, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[946, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[946, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[946, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[946, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[946, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[946, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[946, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[946, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[946, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[946, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[946, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[946, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[946, "my-watershed-bem-meshes-look-incorrect"]], "Getting help": [[947, "getting-help"], [959, "getting-help"]], "Getting started with Python": [[948, "getting-started-with-python"]], "Migrating from other analysis software": [[949, "migrating-from-other-analysis-software"]], "EEGLAB": [[949, "eeglab"]], "Potential pitfalls": [[949, "potential-pitfalls"]], "MNE-Python Homepage": [[950, "mne-python-homepage"]], "Advanced setup": [[951, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[951, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[951, null]], "Installing to a headless Linux server": [[951, "installing-to-a-headless-linux-server"]], "Using the development version": [[951, "using-the-development-version"]], "GPU acceleration with CUDA": [[951, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[951, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[951, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[951, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[952, "testing-your-installation"]], "Installing FreeSurfer": [[953, "installing-freesurfer"]], "Installing MNE-Python": [[954, "installing-mne-python"]], "MNE-Python installers": [[955, "mne-python-installers"]], "VS Code Setup": [[955, "vs-code-setup"]], "Install via pip or conda": [[956, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[956, "installing-mne-python-with-all-dependencies"]], "Installing MNE-Python with core dependencies": [[956, "installing-mne-python-with-core-dependencies"]], "Installing MNE-Python with HDF5 support": [[956, "installing-mne-python-with-hdf5-support"]], "Installing MNE-Python for other scenarios": [[956, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[956, "python-ides"]], "Installing Python": [[957, "installing-python"]], "Other Python distributions": [[957, "other-python-distributions"]], "Installing MNE-C": [[958, "installing-mne-c"]], "System requirements": [[958, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[958, null]], "Downloading and Installing MNE-C": [[958, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[958, "configuring-mne-c"]], "Testing MNE-C installation": [[958, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[958, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[959, "overview-of-the-mne-tools-suite"]], "Related software": [[959, "related-software"]], "What should I install?": [[959, "what-should-i-install"]], "Updating MNE-Python": [[960, "updating-mne-python"]], "Upgrading MNE-Python only": [[960, "upgrading-mne-python-only"]], "Upgrading all packages": [[960, "upgrading-all-packages"]], "Upgrading to the development version": [[960, "upgrading-to-the-development-version"]], "Martinos Center setup": [[961, "martinos-center-setup"]], "MNE with CPP": [[962, "mne-with-cpp"]], "Archived documentation for old versions": [[963, "archived-documentation-for-old-versions"]], "Current steering council and institutional partners": [[964, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[964, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[964, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[964, "institutional-partners"]], "Unused API Entries": [[965, "unused-api-entries"]]}, "indexentries": {"mne.datasets": [[3, "module-mne.datasets"]], "module": [[3, "module-mne.datasets"], [4, "module-mne.decoding"], [5, "module-mne.epochs"], [5, "module-mne.event"], [6, "module-mne.export"], [8, "module-mne.bem"], [9, "module-mne.beamformer"], [9, "module-mne.dipole"], [9, "module-mne.inverse_sparse"], [9, "module-mne.minimum_norm"], [10, "module-mne.cuda"], [10, "module-mne.utils"], [13, "module-mne.channels"], [13, "module-mne.chpi"], [13, "module-mne.filter"], [13, "module-mne.preprocessing"], [13, "module-mne.preprocessing.eyetracking"], [13, "module-mne.preprocessing.ieeg"], [13, "module-mne.preprocessing.nirs"], [13, "module-mne.transforms"], [14, "module-mne"], [15, "module-mne.io"], [15, "module-mne.io.kit"], [18, "module-mne.baseline"], [19, "module-mne.simulation"], [19, "module-mne.simulation.metrics"], [21, "module-mne.stats"], [22, "module-mne.time_frequency"], [22, "module-mne.time_frequency.tfr"], [23, "module-mne.viz"], [23, "module-mne.viz.eyetracking"], [23, "module-mne.viz.ui_events"]], "mne.decoding": [[4, "module-mne.decoding"]], "mne.epochs": [[5, "module-mne.epochs"]], "mne.event": [[5, "module-mne.event"]], "mne.export": [[6, "module-mne.export"]], "mne.bem": [[8, "module-mne.bem"]], "mne.beamformer": [[9, "module-mne.beamformer"]], "mne.dipole": [[9, "module-mne.dipole"]], "mne.inverse_sparse": [[9, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[9, "module-mne.minimum_norm"]], "mne.cuda": [[10, "module-mne.cuda"]], "mne.utils": [[10, "module-mne.utils"]], "mne.channels": [[13, "module-mne.channels"]], "mne.chpi": [[13, "module-mne.chpi"]], "mne.filter": [[13, "module-mne.filter"]], "mne.preprocessing": [[13, "module-mne.preprocessing"]], "mne.preprocessing.eyetracking": [[13, "module-mne.preprocessing.eyetracking"]], "mne.preprocessing.ieeg": [[13, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[13, "module-mne.preprocessing.nirs"]], "mne.transforms": [[13, "module-mne.transforms"]], "mne": [[14, "module-mne"], [321, "term-MNE"]], "mne.io": [[15, "module-mne.io"]], "mne.io.kit": [[15, "module-mne.io.kit"]], "mne.baseline": [[18, "module-mne.baseline"]], "mne.simulation": [[19, "module-mne.simulation"]], "mne.simulation.metrics": [[19, "module-mne.simulation.metrics"]], "mne.stats": [[21, "module-mne.stats"]], "mne.time_frequency": [[22, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[22, "module-mne.time_frequency.tfr"]], "mne.viz": [[23, "module-mne.viz"]], "mne.viz.eyetracking": [[23, "module-mne.viz.eyetracking"]], "mne.viz.ui_events": [[23, "module-mne.viz.ui_events"]], "bem": [[321, "term-BEM"]], "dc": [[321, "term-DC"]], "dics": [[321, "term-DICS"]], "ecd": [[321, "term-ECD"]], "freesurfer lut": [[321, "term-FreeSurfer-LUT"]], "gfp": [[321, "term-GFP"]], "hed": [[321, "term-HED"]], "hpi": [[321, "term-HPI"]], "lcmv": [[321, "term-LCMV"]], "lcmv beamformer": [[321, "term-LCMV-beamformer"]], "lut": [[321, "term-LUT"]], "opm": [[321, "term-OPM"]], "ras": [[321, "term-RAS"]], "roi": [[321, "term-ROI"]], "squid": [[321, "term-SQUID"]], "ssp": [[321, "term-SSP"]], "stc": [[321, "term-STC"]], "anatomical landmark": [[321, "term-anatomical-landmark"]], "annotations": [[321, "term-annotations"]], "beamformer": [[321, "term-beamformer"]], "boundary element method": [[321, "term-boundary-element-method"]], "boundary element model": [[321, "term-boundary-element-model"]], "chpi": [[321, "term-cHPI"]], "channels": [[321, "term-channels"]], "dspm": [[321, "term-dSPM"]], "data channels": [[321, "term-data-channels"]], "digitization": [[321, "term-digitization"]], "dipole": [[321, "term-dipole"]], "direct current": [[321, "term-direct-current"]], "dynamic imaging of coherent sources": [[321, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[321, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[321, "term-eLORETA"]], "epochs": [[321, "term-epochs"]], "equivalent current dipole": [[321, "term-equivalent-current-dipole"]], "events": [[321, "term-events"]], "evoked": [[321, "term-evoked"]], "fiducial": [[321, "term-fiducial"]], "fiducial point": [[321, "term-fiducial-point"]], "first_samp": [[321, "term-first_samp"]], "forward": [[321, "term-forward"]], "forward solution": [[321, "term-forward-solution"]], "global field power": [[321, "term-global-field-power"]], "head position indicator": [[321, "term-head-position-indicator"]], "hierarchical event descriptors": [[321, "term-hierarchical-event-descriptors"]], "info": [[321, "term-info"]], "inverse": [[321, "term-inverse"]], "inverse operator": [[321, "term-inverse-operator"]], "label": [[321, "term-label"]], "last_samp": [[321, "term-last_samp"]], "layout": [[321, "term-layout"]], "maximum intensity projection": [[321, "term-maximum-intensity-projection"]], "measurement info": [[321, "term-measurement-info"]], "minimum-norm estimate": [[321, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[321, "term-minimum-norm-estimation"]], "montage": [[321, "term-montage"]], "morphing": [[321, "term-morphing"]], "noise covariance": [[321, "term-noise-covariance"]], "non-data channels": [[321, "term-non-data-channels"]], "optically pumped magnetometer": [[321, "term-optically-pumped-magnetometer"]], "path-like": [[321, "term-path-like"]], "pick": [[321, "term-pick"]], "projector": [[321, "term-projector"]], "raw": [[321, "term-raw"]], "region of interest": [[321, "term-region-of-interest"]], "sloreta": [[321, "term-sLORETA"]], "selection": [[321, "term-selection"]], "sensor types": [[321, "term-sensor-types"]], "source estimate": [[321, "term-source-estimate"]], "source space": [[321, "term-source-space"]], "source time course": [[321, "term-source-time-course"]], "stim channel": [[321, "term-stim-channel"]], "superconducting quantum interference device": [[321, "term-superconducting-quantum-interference-device"]], "template montage": [[321, "term-template-montage"]], "tfr": [[321, "term-tfr"]], "trans": [[321, "term-trans"]], "trigger channel": [[321, "term-trigger-channel"]], "whitening": [[321, "term-whitening"]], "acqparserfif (class in mne)": [[326, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[326, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[326, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[326, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[326, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[326, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[327, "mne.Annotations"]], "__add__() (mne.annotations method)": [[327, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[327, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[327, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[327, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[327, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[327, "mne.Annotations.copy"]], "count() (mne.annotations method)": [[327, "mne.Annotations.count"]], "crop() (mne.annotations method)": [[327, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[327, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[327, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[327, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[327, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[327, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[327, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[328, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[329, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[329, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[329, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[329, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[330, "mne.Covariance"]], "__add__() (mne.covariance method)": [[330, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[330, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[330, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[330, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[330, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[330, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[330, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[330, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[330, "mne.Covariance.copy"]], "data (mne.covariance property)": [[330, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[330, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[330, "mne.Covariance.get"]], "items() (mne.covariance method)": [[330, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[330, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[330, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[330, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[330, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[330, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[330, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[330, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[330, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[330, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[330, "mne.Covariance.update"]], "values() (mne.covariance method)": [[330, "mne.Covariance.values"]], "dipole (class in mne)": [[331, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[331, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[331, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[331, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[331, "mne.Dipole.crop"]], "plot_amplitudes() (mne.dipole method)": [[331, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[331, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[331, "mne.Dipole.save"]], "time_as_index() (mne.dipole method)": [[331, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[331, "mne.Dipole.times"]], "to_mni() (mne.dipole method)": [[331, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[331, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[331, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[332, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[332, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[332, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[332, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[332, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[332, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[332, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[332, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[332, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[332, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[332, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[332, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[333, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[333, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[333, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[333, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[333, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[333, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[333, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[333, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[333, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[333, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[333, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[333, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[333, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[333, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[333, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[333, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[333, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[333, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[333, "mne.Epochs.compute_psd"]], "compute_tfr() (mne.epochs method)": [[333, "mne.Epochs.compute_tfr"]], "copy() (mne.epochs method)": [[333, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[333, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[333, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[333, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[333, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[333, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[333, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[333, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[333, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[333, "mne.Epochs.export"]], "filename (mne.epochs property)": [[333, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[333, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[333, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[333, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[333, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[333, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[333, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[333, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[333, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[333, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[333, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[333, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[333, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[333, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[333, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[333, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[333, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[333, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[333, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[333, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[333, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[333, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[333, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[333, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[333, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[333, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[333, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[333, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[333, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[333, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[333, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[333, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[333, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[333, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[333, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[333, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[333, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[333, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[333, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[333, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[333, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[333, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[333, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[334, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[334, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[334, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[334, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[334, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[334, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[334, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[334, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[334, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[334, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[334, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[334, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[334, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[334, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[334, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[334, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[334, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[334, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[334, "mne.EpochsArray.compute_psd"]], "compute_tfr() (mne.epochsarray method)": [[334, "mne.EpochsArray.compute_tfr"]], "copy() (mne.epochsarray method)": [[334, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[334, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[334, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[334, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[334, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[334, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[334, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[334, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[334, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[334, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[334, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[334, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[334, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[334, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[334, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[334, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[334, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[334, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[334, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[334, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[334, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[334, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[334, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[334, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[334, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[334, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[334, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[334, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[334, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[334, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[334, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[334, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[334, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[334, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[334, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[334, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[334, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[334, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[334, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[334, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[334, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[334, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[334, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[334, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[334, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[334, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[334, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[334, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[334, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[334, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[334, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[334, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[334, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[335, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[335, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[335, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[335, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[335, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[335, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[335, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[335, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[335, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[335, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[335, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[335, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[335, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[335, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[335, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[335, "mne.Evoked.compute_psd"]], "compute_tfr() (mne.evoked method)": [[335, "mne.Evoked.compute_tfr"]], "copy() (mne.evoked method)": [[335, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[335, "mne.Evoked.crop"]], "data (mne.evoked property)": [[335, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[335, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[335, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[335, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[335, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[335, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[335, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[335, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[335, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[335, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[335, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[335, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[335, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[335, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[335, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[335, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[335, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[335, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[335, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[335, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[335, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[335, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[335, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[335, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[335, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[335, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[335, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[335, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[335, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[335, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[335, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[335, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[335, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[335, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[335, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[335, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[335, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[335, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[335, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[335, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[335, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[335, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[335, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[335, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[336, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[336, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[336, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[336, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[336, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[336, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[336, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[336, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[336, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[336, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[336, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[336, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[336, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[336, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[336, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[336, "mne.EvokedArray.compute_psd"]], "compute_tfr() (mne.evokedarray method)": [[336, "mne.EvokedArray.compute_tfr"]], "copy() (mne.evokedarray method)": [[336, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[336, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[336, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[336, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[336, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[336, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[336, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[336, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[336, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[336, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[336, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[336, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[336, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[336, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[336, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[336, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[336, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[336, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[336, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[336, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[336, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[336, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[336, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[336, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[336, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[336, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[336, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[336, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[336, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[336, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[336, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[336, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[336, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[336, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[336, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[337, "mne.Forward"]], "copy() (mne.forward method)": [[337, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[337, "mne.Forward.pick_channels"]], "save() (mne.forward method)": [[337, "mne.Forward.save"]], "info (class in mne)": [[338, "mne.Info"]], "__contains__() (mne.info method)": [[338, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[338, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[338, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[338, "mne.Info.__len__"]], "anonymize() (mne.info method)": [[338, "mne.Info.anonymize"]], "clear() (mne.info method)": [[338, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[338, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[338, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[338, "mne.Info.fromkeys"]], "get() (mne.info method)": [[338, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[338, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[338, "mne.Info.get_montage"]], "items() (mne.info method)": [[338, "mne.Info.items"]], "keys() (mne.info method)": [[338, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[338, "mne.Info.normalize_proj"]], "plot_sensors() (mne.info method)": [[338, "mne.Info.plot_sensors"]], "pop() (mne.info method)": [[338, "mne.Info.pop"]], "popitem() (mne.info method)": [[338, "mne.Info.popitem"]], "rename_channels() (mne.info method)": [[338, "mne.Info.rename_channels"]], "save() (mne.info method)": [[338, "mne.Info.save"]], "set_channel_types() (mne.info method)": [[338, "mne.Info.set_channel_types"]], "set_meas_date() (mne.info method)": [[338, "mne.Info.set_meas_date"]], "set_montage() (mne.info method)": [[338, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[338, "mne.Info.setdefault"]], "update() (mne.info method)": [[338, "mne.Info.update"]], "values() (mne.info method)": [[338, "mne.Info.values"]], "label (class in mne)": [[339, "mne.Label"]], "__add__() (mne.label method)": [[339, "mne.Label.__add__"]], "__len__() (mne.label method)": [[339, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[339, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[339, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[339, "mne.Label.compute_area"]], "copy() (mne.label method)": [[339, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[339, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[339, "mne.Label.fill"]], "get_tris() (mne.label method)": [[339, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[339, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[339, "mne.Label.morph"]], "restrict() (mne.label method)": [[339, "mne.Label.restrict"]], "save() (mne.label method)": [[339, "mne.Label.save"]], "smooth() (mne.label method)": [[339, "mne.Label.smooth"]], "split() (mne.label method)": [[339, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[340, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.apply_baseline"]], "apply_function() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.apply_function"]], "apply_hilbert() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.apply_hilbert"]], "bin() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[340, "mne.MixedSourceEstimate.data"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.extract_label_time_course"]], "filter() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.filter"]], "get_peak() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.save"]], "savgol_filter() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.savgol_filter"]], "sfreq (mne.mixedsourceestimate property)": [[340, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[340, "mne.MixedSourceEstimate.shape"]], "sqrt() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[340, "mne.MixedSourceEstimate.times"]], "tmin (mne.mixedsourceestimate property)": [[340, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[340, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[340, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[341, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.apply_baseline"]], "apply_function() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.apply_function"]], "apply_hilbert() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.apply_hilbert"]], "bin() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[341, "mne.MixedVectorSourceEstimate.data"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "filter() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.filter"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.save"]], "savgol_filter() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.savgol_filter"]], "sfreq (mne.mixedvectorsourceestimate property)": [[341, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[341, "mne.MixedVectorSourceEstimate.shape"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[341, "mne.MixedVectorSourceEstimate.times"]], "tmin (mne.mixedvectorsourceestimate property)": [[341, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[341, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[341, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[342, "mne.Projection"]], "plot_topomap() (mne.projection method)": [[342, "mne.Projection.plot_topomap"]], "report (class in mne)": [[343, "mne.Report"]], "__len__() (mne.report method)": [[343, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[343, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[343, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[343, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[343, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[343, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[343, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[343, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[343, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[343, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[343, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[343, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[343, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[343, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[343, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[343, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[343, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[343, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[343, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[343, "mne.Report.add_trans"]], "copy() (mne.report method)": [[343, "mne.Report.copy"]], "get_contents() (mne.report method)": [[343, "mne.Report.get_contents"]], "html (mne.report property)": [[343, "mne.Report.html"]], "parse_folder() (mne.report method)": [[343, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[343, "mne.Report.remove"]], "reorder() (mne.report method)": [[343, "mne.Report.reorder"]], "save() (mne.report method)": [[343, "mne.Report.save"]], "tags (mne.report property)": [[343, "mne.Report.tags"]], "sourceestimate (class in mne)": [[344, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.apply_baseline"]], "apply_function() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.apply_function"]], "apply_hilbert() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.apply_hilbert"]], "bin() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[344, "mne.SourceEstimate.data"]], "estimate_snr() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.extract_label_time_course"]], "filter() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.filter"]], "get_peak() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[344, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[344, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[344, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[344, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.save"]], "save_as_surface() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.save_as_surface"]], "savgol_filter() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.savgol_filter"]], "sfreq (mne.sourceestimate property)": [[344, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[344, "mne.SourceEstimate.shape"]], "sqrt() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[344, "mne.SourceEstimate.times"]], "tmin (mne.sourceestimate property)": [[344, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[344, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[344, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[345, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[345, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[345, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[345, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[346, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[346, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[346, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[346, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[346, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[346, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[346, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[347, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.apply_baseline"]], "apply_function() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.apply_function"]], "apply_hilbert() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.apply_hilbert"]], "bin() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[347, "mne.VectorSourceEstimate.data"]], "expand() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.extract_label_time_course"]], "filter() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.filter"]], "get_peak() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[347, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[347, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[347, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[347, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.save"]], "save_as_surface() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.save_as_surface"]], "savgol_filter() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.savgol_filter"]], "sfreq (mne.vectorsourceestimate property)": [[347, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[347, "mne.VectorSourceEstimate.shape"]], "sqrt() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[347, "mne.VectorSourceEstimate.times"]], "tmin (mne.vectorsourceestimate property)": [[347, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[347, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[347, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[348, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.apply_baseline"]], "apply_function() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.apply_function"]], "apply_hilbert() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.apply_hilbert"]], "as_volume() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[348, "mne.VolSourceEstimate.data"]], "extract_label_time_course() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.extract_label_time_course"]], "filter() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.filter"]], "get_peak() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.save_as_volume"]], "savgol_filter() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.savgol_filter"]], "sfreq (mne.volsourceestimate property)": [[348, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[348, "mne.VolSourceEstimate.shape"]], "sqrt() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[348, "mne.VolSourceEstimate.times"]], "tmin (mne.volsourceestimate property)": [[348, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[348, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[348, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[349, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.apply_baseline"]], "apply_function() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.apply_function"]], "apply_hilbert() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.apply_hilbert"]], "as_volume() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[349, "mne.VolVectorSourceEstimate.data"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "filter() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.filter"]], "get_peak() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.save_as_volume"]], "savgol_filter() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.savgol_filter"]], "sfreq (mne.volvectorsourceestimate property)": [[349, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[349, "mne.VolVectorSourceEstimate.shape"]], "sqrt() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[349, "mne.VolVectorSourceEstimate.times"]], "tmin (mne.volvectorsourceestimate property)": [[349, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[349, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[349, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[350, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[351, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[352, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[353, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[354, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[355, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[356, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[357, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[357, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[358, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[359, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[360, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[361, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[362, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[363, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[364, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[365, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[366, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[367, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[368, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[369, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[370, "mne.beamformer.read_beamformer"]], "trap_music() (in module mne.beamformer)": [[371, "mne.beamformer.trap_music"]], "conductormodel (class in mne.bem)": [[372, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[372, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[372, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[373, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[374, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[375, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[376, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[377, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[378, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[379, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[380, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[381, "mne.channel_type"]], "digmontage (class in mne.channels)": [[382, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[382, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[382, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[382, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[382, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[382, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[382, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[382, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[382, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[382, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[382, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[383, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[383, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[383, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[384, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[385, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[386, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[387, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[388, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[389, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[390, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[391, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[392, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[393, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[394, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[395, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[396, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[397, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[398, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[399, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[400, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[401, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[402, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[403, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[404, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[405, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[406, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[407, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[408, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[409, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[410, "mne.channels.rename_channels"]], "unify_bad_channels() (in module mne.channels)": [[411, "mne.channels.unify_bad_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[412, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[413, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[414, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[415, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[416, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[417, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[418, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[419, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[420, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[421, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[422, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[423, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[424, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[425, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[426, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[427, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[428, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[429, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[430, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[431, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[432, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[433, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[434, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[435, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[436, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[436, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[436, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[436, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[436, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[436, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[436, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[436, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[436, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[436, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[436, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[436, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[436, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[436, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[437, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[438, "mne.coreg.get_mni_fiducials"]], "count_annotations() (in module mne)": [[439, "mne.count_annotations"]], "count_events() (in module mne)": [[440, "mne.count_events"]], "compute_whitener() (in module mne.cov)": [[441, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[442, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[443, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[444, "mne.create_default_subject"]], "create_info() (in module mne)": [[445, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[446, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[447, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[448, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[449, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[450, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[451, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[452, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[453, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[454, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[455, "mne.datasets.erp_core.data_path"]], "data_path() (in module mne.datasets.eyelink)": [[456, "mne.datasets.eyelink.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[457, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[458, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[459, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[460, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[461, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[462, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[463, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[464, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[465, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[466, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[467, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[468, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[469, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[470, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[471, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[472, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.phantom_kernel)": [[473, "mne.datasets.phantom_kernel.data_path"]], "data_path() (in module mne.datasets.phantom_kit)": [[474, "mne.datasets.phantom_kit.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[475, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[476, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[477, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[478, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[479, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[480, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[481, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.ucl_opm_auditory)": [[482, "mne.datasets.ucl_opm_auditory.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[483, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[484, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[485, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[485, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[485, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[485, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[485, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[485, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[485, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[485, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[486, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[486, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[486, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[486, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[486, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[486, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[487, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[487, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[487, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[487, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[488, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[488, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[488, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[488, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[488, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[488, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[488, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[488, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[488, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[488, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[489, "mne.decoding.LinearModel"]], "fit() (mne.decoding.linearmodel method)": [[489, "mne.decoding.LinearModel.fit"]], "get_params() (mne.decoding.linearmodel method)": [[489, "mne.decoding.LinearModel.get_params"]], "set_params() (mne.decoding.linearmodel method)": [[489, "mne.decoding.LinearModel.set_params"]], "psdestimator (class in mne.decoding)": [[490, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[490, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[490, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[490, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[491, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[491, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[491, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[491, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[491, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[491, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[492, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[492, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[492, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[492, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[492, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[492, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[492, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[492, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[493, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[493, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[493, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[493, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[493, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[493, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[493, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[493, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[493, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[494, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[494, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[494, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[494, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[494, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[494, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[494, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[495, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[495, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[495, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[495, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[495, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[495, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[495, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[495, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[495, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[495, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[496, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[496, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[496, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[496, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[497, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[497, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[497, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[497, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[497, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[498, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[498, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[498, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[498, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[498, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[498, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[499, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[499, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[499, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[499, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[499, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[499, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[499, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[500, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[500, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[500, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[500, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[500, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[501, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[502, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[503, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[504, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[505, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[506, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[507, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[508, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[509, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[510, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[511, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[512, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[513, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[514, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[515, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[516, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[517, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[518, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[519, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[520, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[521, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[522, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[523, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[524, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[525, "mne.filter.resample"]], "find_events() (in module mne)": [[526, "mne.find_events"]], "find_stim_steps() (in module mne)": [[527, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[528, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[529, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[530, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[531, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[532, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[533, "mne.get_config"]], "get_config_path() (in module mne)": [[534, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[535, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[536, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[537, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[538, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[539, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[540, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[541, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[542, "mne.grand_average"]], "grow_labels() (in module mne)": [[543, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[544, "mne.gui.coregistration"]], "head_to_mni() (in module mne)": [[545, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[546, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[547, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[548, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[549, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[550, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[551, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[552, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[552, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[552, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[552, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[552, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[552, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[552, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[552, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[552, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[552, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[552, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[552, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[552, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[552, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[552, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[552, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[552, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[552, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[552, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[552, "mne.io.Raw.compute_psd"]], "compute_tfr() (mne.io.raw method)": [[552, "mne.io.Raw.compute_tfr"]], "copy() (mne.io.raw method)": [[552, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[552, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[552, "mne.io.Raw.crop_by_annotations"]], "del_proj() (mne.io.raw method)": [[552, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[552, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[552, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[552, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[552, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[552, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[552, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[552, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[552, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[552, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[552, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[552, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[552, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[552, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[552, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[552, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[552, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[552, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[552, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[552, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[552, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[552, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[552, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[552, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[552, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[552, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[552, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[552, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[552, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[552, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[552, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[552, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[552, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[552, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[552, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[552, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[552, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[552, "mne.io.Raw.set_montage"]], "time_as_index() (mne.io.raw method)": [[552, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[552, "mne.io.Raw.times"]], "to_data_frame() (mne.io.raw method)": [[552, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[553, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[553, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[553, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[553, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[553, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[553, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[553, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[553, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[553, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[553, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[553, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[553, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[553, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[553, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[553, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[553, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[553, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[553, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[553, "mne.io.RawArray.compute_psd"]], "compute_tfr() (mne.io.rawarray method)": [[553, "mne.io.RawArray.compute_tfr"]], "copy() (mne.io.rawarray method)": [[553, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[553, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[553, "mne.io.RawArray.crop_by_annotations"]], "del_proj() (mne.io.rawarray method)": [[553, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[553, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[553, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[553, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[553, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[553, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[553, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[553, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[553, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[553, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[553, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[553, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[553, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[553, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[553, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[553, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[553, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[553, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[553, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[553, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[553, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[553, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[553, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[553, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[553, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[553, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[553, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[553, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[553, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[553, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[553, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[553, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[553, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[553, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[553, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[553, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[553, "mne.io.RawArray.set_montage"]], "time_as_index() (mne.io.rawarray method)": [[553, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[553, "mne.io.RawArray.times"]], "to_data_frame() (mne.io.rawarray method)": [[553, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[554, "mne.io.anonymize_info"]], "get_channel_type_constants() (in module mne.io)": [[555, "mne.io.get_channel_type_constants"]], "read_mrk() (in module mne.io.kit)": [[556, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[557, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[558, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[559, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[560, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[561, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[562, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[563, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[564, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[565, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[566, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[567, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[568, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[569, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[570, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[571, "mne.io.read_raw_eximia"]], "read_raw_eyelink() (in module mne.io)": [[572, "mne.io.read_raw_eyelink"]], "read_raw_fieldtrip() (in module mne.io)": [[573, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[574, "mne.io.read_raw_fif"]], "read_raw_fil() (in module mne.io)": [[575, "mne.io.read_raw_fil"]], "read_raw_gdf() (in module mne.io)": [[576, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[577, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[578, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[579, "mne.io.read_raw_nedf"]], "read_raw_neuralynx() (in module mne.io)": [[580, "mne.io.read_raw_neuralynx"]], "read_raw_nicolet() (in module mne.io)": [[581, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[582, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[583, "mne.io.read_raw_nirx"]], "read_raw_nsx() (in module mne.io)": [[584, "mne.io.read_raw_nsx"]], "read_raw_persyst() (in module mne.io)": [[585, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[586, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[587, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[588, "mne.io.write_fiducials"]], "write_info() (in module mne.io)": [[589, "mne.io.write_info"]], "select_sources() (in module mne.label)": [[590, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[591, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[592, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[593, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[594, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[595, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[596, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[597, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[598, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[599, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[600, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[601, "mne.make_sphere_model"]], "match_channel_orders() (in module mne)": [[602, "mne.match_channel_orders"]], "merge_events() (in module mne)": [[603, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[604, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.__len__"]], "ch_names (mne.minimum_norm.inverseoperator property)": [[604, "mne.minimum_norm.InverseOperator.ch_names"]], "clear() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.get"]], "info (mne.minimum_norm.inverseoperator property)": [[604, "mne.minimum_norm.InverseOperator.info"]], "items() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[604, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[605, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[606, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[607, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[608, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[609, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[610, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[611, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[612, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[613, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[614, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[615, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[616, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[617, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[618, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[619, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[620, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[621, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[622, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[623, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[624, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[625, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[626, "mne.open_docs"]], "open_report() (in module mne)": [[627, "mne.open_report"]], "parse_config() (in module mne)": [[628, "mne.parse_config"]], "pick_channels() (in module mne)": [[629, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[630, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[631, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[632, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[633, "mne.pick_events"]], "pick_info() (in module mne)": [[634, "mne.pick_info"]], "pick_types() (in module mne)": [[635, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[636, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[637, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[637, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[637, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[637, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[637, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[638, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[638, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[638, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[639, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[639, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[639, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[639, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[639, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[639, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[639, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[639, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[640, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[641, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[642, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[643, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[644, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[645, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[646, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[647, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[648, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[649, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[650, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[651, "mne.preprocessing.compute_proj_eog"]], "compute_proj_hfc() (in module mne.preprocessing)": [[652, "mne.preprocessing.compute_proj_hfc"]], "corrmap() (in module mne.preprocessing)": [[653, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[654, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[655, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[656, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[657, "mne.preprocessing.equalize_bads"]], "calibration (class in mne.preprocessing.eyetracking)": [[658, "mne.preprocessing.eyetracking.Calibration"]], "__contains__() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.__contains__"]], "__getitem__() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.__getitem__"]], "__iter__() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.__iter__"]], "__len__() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.__len__"]], "clear() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.clear"]], "copy() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.copy"]], "fromkeys() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.fromkeys"]], "get() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.get"]], "items() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.items"]], "keys() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.keys"]], "plot() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.plot"]], "pop() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.pop"]], "popitem() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.popitem"]], "setdefault() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.setdefault"]], "update() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.update"]], "values() (mne.preprocessing.eyetracking.calibration method)": [[658, "mne.preprocessing.eyetracking.Calibration.values"]], "convert_units() (in module mne.preprocessing.eyetracking)": [[659, "mne.preprocessing.eyetracking.convert_units"]], "get_screen_visual_angle() (in module mne.preprocessing.eyetracking)": [[660, "mne.preprocessing.eyetracking.get_screen_visual_angle"]], "interpolate_blinks() (in module mne.preprocessing.eyetracking)": [[661, "mne.preprocessing.eyetracking.interpolate_blinks"]], "read_eyelink_calibration() (in module mne.preprocessing.eyetracking)": [[662, "mne.preprocessing.eyetracking.read_eyelink_calibration"]], "set_channel_types_eyetrack() (in module mne.preprocessing.eyetracking)": [[663, "mne.preprocessing.eyetracking.set_channel_types_eyetrack"]], "find_bad_channels_lof() (in module mne.preprocessing)": [[664, "mne.preprocessing.find_bad_channels_lof"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[665, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[666, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[667, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[668, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[669, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[670, "mne.preprocessing.ica_find_eog_events"]], "make_montage_volume() (in module mne.preprocessing.ieeg)": [[671, "mne.preprocessing.ieeg.make_montage_volume"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[672, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "warp_montage() (in module mne.preprocessing.ieeg)": [[673, "mne.preprocessing.ieeg.warp_montage"]], "infomax() (in module mne.preprocessing)": [[674, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[675, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[676, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[677, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[678, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[679, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[680, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[681, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[682, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[683, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[684, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[685, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[686, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[687, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[688, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[689, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[690, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[691, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[692, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[693, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[694, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[695, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[696, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[697, "mne.read_cov"]], "read_dipole() (in module mne)": [[698, "mne.read_dipole"]], "read_epochs() (in module mne)": [[699, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[700, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[701, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[702, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[703, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[704, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[705, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[706, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[707, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[708, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[709, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[710, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[711, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[712, "mne.read_lta"]], "read_morph_map() (in module mne)": [[713, "mne.read_morph_map"]], "read_proj() (in module mne)": [[714, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[715, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[716, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[717, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[718, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[719, "mne.read_surface"]], "read_talxfm() (in module mne)": [[720, "mne.read_talxfm"]], "read_trans() (in module mne)": [[721, "mne.read_trans"]], "read_tri() (in module mne)": [[722, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[723, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[724, "mne.rename_channels"]], "scale_bem() (in module mne)": [[725, "mne.scale_bem"]], "scale_labels() (in module mne)": [[726, "mne.scale_labels"]], "scale_mri() (in module mne)": [[727, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[728, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[729, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[730, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[731, "mne.set_cache_dir"]], "set_config() (in module mne)": [[732, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[733, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[734, "mne.set_log_file"]], "set_log_level() (in module mne)": [[735, "mne.set_log_level"]], "set_memmap_min_size() (in module mne)": [[736, "mne.set_memmap_min_size"]], "setup_source_space() (in module mne)": [[737, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[738, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[739, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[739, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[739, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[739, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[739, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[739, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[739, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[740, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[741, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[742, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[743, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[744, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[745, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[746, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[747, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[748, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[749, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[750, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[751, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[752, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[753, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[754, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[755, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[756, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[757, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[758, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[759, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[760, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[761, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[762, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[763, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[764, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[765, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[766, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[767, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[768, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[769, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[770, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[771, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[772, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[773, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[774, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[775, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[776, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[777, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[778, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[779, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[780, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[781, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[782, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[783, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[784, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[785, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[786, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[787, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[788, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[789, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.apply_baseline"]], "baseline (mne.time_frequency.averagetfr property)": [[789, "mne.time_frequency.AverageTFR.baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[789, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[789, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.crop"]], "data (mne.time_frequency.averagetfr property)": [[789, "mne.time_frequency.AverageTFR.data"]], "decimate() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.drop_channels"]], "freqs (mne.time_frequency.averagetfr property)": [[789, "mne.time_frequency.AverageTFR.freqs"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.get_channel_types"]], "get_data() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.get_data"]], "method (mne.time_frequency.averagetfr property)": [[789, "mne.time_frequency.AverageTFR.method"]], "pick() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.save"]], "sfreq (mne.time_frequency.averagetfr property)": [[789, "mne.time_frequency.AverageTFR.sfreq"]], "shape (mne.time_frequency.averagetfr property)": [[789, "mne.time_frequency.AverageTFR.shape"]], "shift_time() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[789, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[789, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[789, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[789, "mne.time_frequency.AverageTFR.to_data_frame"]], "averagetfrarray (class in mne.time_frequency)": [[790, "mne.time_frequency.AverageTFRArray"]], "__add__() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.__add__"]], "__contains__() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.__contains__"]], "__mul__() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.__mul__"]], "__sub__() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.__sub__"]], "add_channels() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.apply_baseline"]], "baseline (mne.time_frequency.averagetfrarray property)": [[790, "mne.time_frequency.AverageTFRArray.baseline"]], "ch_names (mne.time_frequency.averagetfrarray property)": [[790, "mne.time_frequency.AverageTFRArray.ch_names"]], "compensation_grade (mne.time_frequency.averagetfrarray property)": [[790, "mne.time_frequency.AverageTFRArray.compensation_grade"]], "copy() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.copy"]], "crop() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.crop"]], "data (mne.time_frequency.averagetfrarray property)": [[790, "mne.time_frequency.AverageTFRArray.data"]], "decimate() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.decimate"]], "drop_channels() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.drop_channels"]], "freqs (mne.time_frequency.averagetfrarray property)": [[790, "mne.time_frequency.AverageTFRArray.freqs"]], "get_channel_types() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.get_channel_types"]], "get_data() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.get_data"]], "method (mne.time_frequency.averagetfrarray property)": [[790, "mne.time_frequency.AverageTFRArray.method"]], "pick() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.pick"]], "pick_channels() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.pick_channels"]], "pick_types() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.pick_types"]], "plot() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.plot"]], "plot_joint() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.reorder_channels"]], "save() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.save"]], "sfreq (mne.time_frequency.averagetfrarray property)": [[790, "mne.time_frequency.AverageTFRArray.sfreq"]], "shape (mne.time_frequency.averagetfrarray property)": [[790, "mne.time_frequency.AverageTFRArray.shape"]], "shift_time() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.shift_time"]], "time_as_index() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.time_as_index"]], "times (mne.time_frequency.averagetfrarray property)": [[790, "mne.time_frequency.AverageTFRArray.times"]], "tmax (mne.time_frequency.averagetfrarray property)": [[790, "mne.time_frequency.AverageTFRArray.tmax"]], "tmin (mne.time_frequency.averagetfrarray property)": [[790, "mne.time_frequency.AverageTFRArray.tmin"]], "to_data_frame() (mne.time_frequency.averagetfrarray method)": [[790, "mne.time_frequency.AverageTFRArray.to_data_frame"]], "basetfr (class in mne.time_frequency)": [[791, "mne.time_frequency.BaseTFR"]], "__add__() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.__add__"]], "__contains__() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.__contains__"]], "__mul__() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.__mul__"]], "__sub__() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.__sub__"]], "add_channels() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.apply_baseline"]], "baseline (mne.time_frequency.basetfr property)": [[791, "mne.time_frequency.BaseTFR.baseline"]], "ch_names (mne.time_frequency.basetfr property)": [[791, "mne.time_frequency.BaseTFR.ch_names"]], "compensation_grade (mne.time_frequency.basetfr property)": [[791, "mne.time_frequency.BaseTFR.compensation_grade"]], "copy() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.copy"]], "crop() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.crop"]], "data (mne.time_frequency.basetfr property)": [[791, "mne.time_frequency.BaseTFR.data"]], "decimate() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.decimate"]], "drop_channels() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.drop_channels"]], "freqs (mne.time_frequency.basetfr property)": [[791, "mne.time_frequency.BaseTFR.freqs"]], "get_channel_types() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.get_channel_types"]], "get_data() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.get_data"]], "method (mne.time_frequency.basetfr property)": [[791, "mne.time_frequency.BaseTFR.method"]], "pick() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.pick"]], "pick_channels() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.pick_channels"]], "pick_types() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.pick_types"]], "plot() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.plot"]], "plot_joint() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.plot_joint"]], "plot_topo() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.reorder_channels"]], "save() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.save"]], "sfreq (mne.time_frequency.basetfr property)": [[791, "mne.time_frequency.BaseTFR.sfreq"]], "shape (mne.time_frequency.basetfr property)": [[791, "mne.time_frequency.BaseTFR.shape"]], "shift_time() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.shift_time"]], "time_as_index() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.time_as_index"]], "times (mne.time_frequency.basetfr property)": [[791, "mne.time_frequency.BaseTFR.times"]], "tmax (mne.time_frequency.basetfr property)": [[791, "mne.time_frequency.BaseTFR.tmax"]], "tmin (mne.time_frequency.basetfr property)": [[791, "mne.time_frequency.BaseTFR.tmin"]], "to_data_frame() (mne.time_frequency.basetfr method)": [[791, "mne.time_frequency.BaseTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[792, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[792, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[792, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[792, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[792, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[792, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[792, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[792, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[792, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[792, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[792, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[792, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[793, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[793, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[793, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[793, "mne.time_frequency.EpochsSpectrum.units"]], "epochsspectrumarray (class in mne.time_frequency)": [[794, "mne.time_frequency.EpochsSpectrumArray"]], "__contains__() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.__iter__"]], "__len__() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.__len__"]], "add_channels() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.average"]], "compensation_grade (mne.time_frequency.epochsspectrumarray property)": [[794, "mne.time_frequency.EpochsSpectrumArray.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.copy"]], "drop_channels() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.get_data"]], "metadata (mne.time_frequency.epochsspectrumarray property)": [[794, "mne.time_frequency.EpochsSpectrumArray.metadata"]], "next() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.next"]], "pick() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.pick"]], "pick_channels() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.pick_types"]], "plot() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.plot"]], "plot_topo() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.reorder_channels"]], "save() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.save"]], "to_data_frame() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.to_data_frame"]], "units() (mne.time_frequency.epochsspectrumarray method)": [[794, "mne.time_frequency.EpochsSpectrumArray.units"]], "epochstfr (class in mne.time_frequency)": [[795, "mne.time_frequency.EpochsTFR"]], "__add__() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.__add__"]], "__contains__() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.__len__"]], "__mul__() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.__mul__"]], "__sub__() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.__sub__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.average"]], "baseline (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.baseline"]], "ch_names (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.crop"]], "data (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.data"]], "decimate() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.decimate"]], "drop() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.drop"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.drop_channels"]], "freqs (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.freqs"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.get_channel_types"]], "get_data() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.get_data"]], "iter_evoked() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.iter_evoked"]], "metadata (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.metadata"]], "method (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.method"]], "next() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.pick_types"]], "plot() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.plot"]], "plot_joint() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.plot_joint"]], "plot_topo() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.save"]], "sfreq (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.sfreq"]], "shape (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.shape"]], "shift_time() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[795, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[795, "mne.time_frequency.EpochsTFR.to_data_frame"]], "epochstfrarray (class in mne.time_frequency)": [[796, "mne.time_frequency.EpochsTFRArray"]], "__add__() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.__add__"]], "__contains__() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.__contains__"]], "__getitem__() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.__getitem__"]], "__iter__() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.__iter__"]], "__len__() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.__len__"]], "__mul__() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.__mul__"]], "__sub__() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.__sub__"]], "add_channels() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.apply_baseline"]], "average() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.average"]], "baseline (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.baseline"]], "ch_names (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.ch_names"]], "compensation_grade (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.compensation_grade"]], "copy() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.copy"]], "crop() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.crop"]], "data (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.data"]], "decimate() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.decimate"]], "drop() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.drop"]], "drop_channels() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.drop_channels"]], "freqs (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.freqs"]], "get_channel_types() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.get_channel_types"]], "get_data() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.get_data"]], "iter_evoked() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.iter_evoked"]], "metadata (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.metadata"]], "method (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.method"]], "next() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.next"]], "pick() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.pick"]], "pick_channels() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.pick_channels"]], "pick_types() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.pick_types"]], "plot() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.plot"]], "plot_joint() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.plot_joint"]], "plot_topo() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.plot_topo"]], "plot_topomap() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.reorder_channels"]], "save() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.save"]], "sfreq (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.sfreq"]], "shape (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.shape"]], "shift_time() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.shift_time"]], "time_as_index() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.time_as_index"]], "times (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.times"]], "tmax (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.tmax"]], "tmin (mne.time_frequency.epochstfrarray property)": [[796, "mne.time_frequency.EpochsTFRArray.tmin"]], "to_data_frame() (mne.time_frequency.epochstfrarray method)": [[796, "mne.time_frequency.EpochsTFRArray.to_data_frame"]], "rawtfr (class in mne.time_frequency)": [[797, "mne.time_frequency.RawTFR"]], "__add__() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.__add__"]], "__contains__() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.__contains__"]], "__getitem__() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.__getitem__"]], "__mul__() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.__mul__"]], "__sub__() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.__sub__"]], "add_channels() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.apply_baseline"]], "baseline (mne.time_frequency.rawtfr property)": [[797, "mne.time_frequency.RawTFR.baseline"]], "ch_names (mne.time_frequency.rawtfr property)": [[797, "mne.time_frequency.RawTFR.ch_names"]], "compensation_grade (mne.time_frequency.rawtfr property)": [[797, "mne.time_frequency.RawTFR.compensation_grade"]], "copy() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.copy"]], "crop() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.crop"]], "data (mne.time_frequency.rawtfr property)": [[797, "mne.time_frequency.RawTFR.data"]], "decimate() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.decimate"]], "drop_channels() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.drop_channels"]], "freqs (mne.time_frequency.rawtfr property)": [[797, "mne.time_frequency.RawTFR.freqs"]], "get_channel_types() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.get_channel_types"]], "get_data() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.get_data"]], "method (mne.time_frequency.rawtfr property)": [[797, "mne.time_frequency.RawTFR.method"]], "pick() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.pick"]], "pick_channels() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.pick_channels"]], "pick_types() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.pick_types"]], "plot() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.plot"]], "plot_joint() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.plot_joint"]], "plot_topo() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.reorder_channels"]], "save() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.save"]], "sfreq (mne.time_frequency.rawtfr property)": [[797, "mne.time_frequency.RawTFR.sfreq"]], "shape (mne.time_frequency.rawtfr property)": [[797, "mne.time_frequency.RawTFR.shape"]], "shift_time() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.shift_time"]], "time_as_index() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.time_as_index"]], "times (mne.time_frequency.rawtfr property)": [[797, "mne.time_frequency.RawTFR.times"]], "tmax (mne.time_frequency.rawtfr property)": [[797, "mne.time_frequency.RawTFR.tmax"]], "tmin (mne.time_frequency.rawtfr property)": [[797, "mne.time_frequency.RawTFR.tmin"]], "to_data_frame() (mne.time_frequency.rawtfr method)": [[797, "mne.time_frequency.RawTFR.to_data_frame"]], "rawtfrarray (class in mne.time_frequency)": [[798, "mne.time_frequency.RawTFRArray"]], "__add__() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.__add__"]], "__contains__() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.__contains__"]], "__getitem__() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.__getitem__"]], "__mul__() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.__mul__"]], "__sub__() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.__sub__"]], "add_channels() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.add_channels"]], "add_reference_channels() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.add_reference_channels"]], "apply_baseline() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.apply_baseline"]], "baseline (mne.time_frequency.rawtfrarray property)": [[798, "mne.time_frequency.RawTFRArray.baseline"]], "ch_names (mne.time_frequency.rawtfrarray property)": [[798, "mne.time_frequency.RawTFRArray.ch_names"]], "compensation_grade (mne.time_frequency.rawtfrarray property)": [[798, "mne.time_frequency.RawTFRArray.compensation_grade"]], "copy() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.copy"]], "crop() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.crop"]], "data (mne.time_frequency.rawtfrarray property)": [[798, "mne.time_frequency.RawTFRArray.data"]], "decimate() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.decimate"]], "drop_channels() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.drop_channels"]], "freqs (mne.time_frequency.rawtfrarray property)": [[798, "mne.time_frequency.RawTFRArray.freqs"]], "get_channel_types() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.get_channel_types"]], "get_data() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.get_data"]], "method (mne.time_frequency.rawtfrarray property)": [[798, "mne.time_frequency.RawTFRArray.method"]], "pick() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.pick"]], "pick_channels() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.pick_channels"]], "pick_types() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.pick_types"]], "plot() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.plot"]], "plot_joint() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.plot_joint"]], "plot_topo() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.plot_topo"]], "plot_topomap() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.plot_topomap"]], "reorder_channels() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.reorder_channels"]], "save() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.save"]], "sfreq (mne.time_frequency.rawtfrarray property)": [[798, "mne.time_frequency.RawTFRArray.sfreq"]], "shape (mne.time_frequency.rawtfrarray property)": [[798, "mne.time_frequency.RawTFRArray.shape"]], "shift_time() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.shift_time"]], "time_as_index() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.time_as_index"]], "times (mne.time_frequency.rawtfrarray property)": [[798, "mne.time_frequency.RawTFRArray.times"]], "tmax (mne.time_frequency.rawtfrarray property)": [[798, "mne.time_frequency.RawTFRArray.tmax"]], "tmin (mne.time_frequency.rawtfrarray property)": [[798, "mne.time_frequency.RawTFRArray.tmin"]], "to_data_frame() (mne.time_frequency.rawtfrarray method)": [[798, "mne.time_frequency.RawTFRArray.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[799, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[799, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[799, "mne.time_frequency.Spectrum.units"]], "spectrumarray (class in mne.time_frequency)": [[800, "mne.time_frequency.SpectrumArray"]], "__contains__() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.__contains__"]], "__getitem__() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.__getitem__"]], "add_channels() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrumarray property)": [[800, "mne.time_frequency.SpectrumArray.compensation_grade"]], "copy() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.copy"]], "drop_channels() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.get_channel_types"]], "get_data() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.get_data"]], "pick() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.pick"]], "pick_channels() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.pick_channels"]], "pick_types() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.pick_types"]], "plot() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.plot"]], "plot_topo() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.reorder_channels"]], "save() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.save"]], "to_data_frame() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.to_data_frame"]], "units() (mne.time_frequency.spectrumarray method)": [[800, "mne.time_frequency.SpectrumArray.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[801, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[802, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[803, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[804, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[805, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[806, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[807, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[808, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[809, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[810, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[811, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[812, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[813, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[814, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[815, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[816, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[817, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[818, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[819, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[820, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[821, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[822, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[823, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[824, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[825, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[826, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[827, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[828, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[829, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[830, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[831, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[831, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[831, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[831, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[832, "mne.transforms.apply_volume_registration"]], "apply_volume_registration_points() (in module mne.transforms)": [[833, "mne.transforms.apply_volume_registration_points"]], "compute_volume_registration() (in module mne.transforms)": [[834, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[835, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[836, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[837, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[838, "mne.use_coil_def"]], "use_log_level (class in mne)": [[839, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[840, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[841, "mne.utils.warn"]], "verbose() (in module mne)": [[842, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[843, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[844, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[844, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[844, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[844, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[844, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[844, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[844, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[844, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[844, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[844, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[844, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[844, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[844, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[844, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[844, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[844, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[844, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[844, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[844, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[844, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[844, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[844, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[844, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[844, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[844, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[844, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[844, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[844, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[844, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[844, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[844, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[844, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[844, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[844, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[844, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[844, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[844, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[844, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[844, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[844, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[844, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[844, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[844, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[844, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[844, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[844, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[844, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[844, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[844, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[844, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[845, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[845, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[845, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[845, "mne.viz.ClickableImage.to_layout"]], "evokedfield (class in mne.viz)": [[846, "mne.viz.EvokedField"]], "set_contours() (mne.viz.evokedfield method)": [[846, "mne.viz.EvokedField.set_contours"]], "set_time() (mne.viz.evokedfield method)": [[846, "mne.viz.EvokedField.set_time"]], "set_vmax() (mne.viz.evokedfield method)": [[846, "mne.viz.EvokedField.set_vmax"]], "figure3d (class in mne.viz)": [[847, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[847, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[848, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[849, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[850, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[851, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[852, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[853, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[854, "mne.viz.create_3d_figure"]], "plot_gaze() (in module mne.viz.eyetracking)": [[855, "mne.viz.eyetracking.plot_gaze"]], "get_3d_backend() (in module mne.viz)": [[856, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[857, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[858, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[859, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[860, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[861, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[862, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[863, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[864, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[865, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[866, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[867, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[868, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[869, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[870, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[871, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[872, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[873, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[874, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[875, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[876, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[877, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[878, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[879, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[880, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[881, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[882, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[883, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[884, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[885, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[886, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[887, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[888, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[889, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[890, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[891, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[892, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[893, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[894, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[895, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[896, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[897, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[898, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[899, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[900, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[901, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[902, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[903, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[904, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[905, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[906, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[907, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[908, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[909, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[910, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[911, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[912, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[913, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[914, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[915, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[916, "mne.viz.snapshot_brain_montage"]], "colormaprange (class in mne.viz.ui_events)": [[917, "mne.viz.ui_events.ColormapRange"]], "name (mne.viz.ui_events.colormaprange property)": [[917, "mne.viz.ui_events.ColormapRange.name"]], "contours (class in mne.viz.ui_events)": [[918, "mne.viz.ui_events.Contours"]], "name (mne.viz.ui_events.contours property)": [[918, "mne.viz.ui_events.Contours.name"]], "figureclosing (class in mne.viz.ui_events)": [[919, "mne.viz.ui_events.FigureClosing"]], "name (mne.viz.ui_events.figureclosing property)": [[919, "mne.viz.ui_events.FigureClosing.name"]], "playbackspeed (class in mne.viz.ui_events)": [[920, "mne.viz.ui_events.PlaybackSpeed"]], "name (mne.viz.ui_events.playbackspeed property)": [[920, "mne.viz.ui_events.PlaybackSpeed.name"]], "timechange (class in mne.viz.ui_events)": [[921, "mne.viz.ui_events.TimeChange"]], "name (mne.viz.ui_events.timechange property)": [[921, "mne.viz.ui_events.TimeChange.name"]], "uievent (class in mne.viz.ui_events)": [[922, "mne.viz.ui_events.UIEvent"]], "name (mne.viz.ui_events.uievent property)": [[922, "mne.viz.ui_events.UIEvent.name"]], "vertexselect (class in mne.viz.ui_events)": [[923, "mne.viz.ui_events.VertexSelect"]], "name (mne.viz.ui_events.vertexselect property)": [[923, "mne.viz.ui_events.VertexSelect.name"]], "disable_ui_events() (in module mne.viz.ui_events)": [[924, "mne.viz.ui_events.disable_ui_events"]], "link() (in module mne.viz.ui_events)": [[925, "mne.viz.ui_events.link"]], "publish() (in module mne.viz.ui_events)": [[926, "mne.viz.ui_events.publish"]], "subscribe() (in module mne.viz.ui_events)": [[927, "mne.viz.ui_events.subscribe"]], "unlink() (in module mne.viz.ui_events)": [[928, "mne.viz.ui_events.unlink"]], "unsubscribe() (in module mne.viz.ui_events)": [[929, "mne.viz.ui_events.unsubscribe"]], "use_3d_backend() (in module mne.viz)": [[930, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[931, "mne.viz.use_browser_backend"]], "what() (in module mne)": [[932, "mne.what"]], "write_bem_solution() (in module mne)": [[933, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[934, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[935, "mne.write_cov"]], "write_events() (in module mne)": [[936, "mne.write_events"]], "write_evokeds() (in module mne)": [[937, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[938, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[939, "mne.write_head_bem"]], "write_label() (in module mne)": [[940, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[941, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[942, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[943, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[944, "mne.write_surface"]], "write_trans() (in module mne)": [[945, "mne.write_trans"]]}})