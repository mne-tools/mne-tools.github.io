Search.setIndex({"docnames": ["auto_examples/connectivity/index", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/trap_music", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/contralateral_referencing", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/publication_figure", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sensor_noise_level", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/70_reading_eyetracking_data", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/80_opm_processing", "auto_tutorials/preprocessing/90_eyetracking_data", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "bibliography", "cited", "connectivity", "covariance", "creating_from_arrays", "datasets", "decoding", "events", "export", "file_io", "forward", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.beamformer.trap_music", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.count_annotations", "generated/mne.count_events", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.eyelink.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.ucl_opm_auditory.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_eyelink", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_fil", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_nsx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.match_channel_orders", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.compute_proj_hfc", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.eyetracking.Calibration", "generated/mne.preprocessing.eyetracking.interpolate_blinks", "generated/mne.preprocessing.eyetracking.read_eyelink_calibration", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.make_montage_volume", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.ieeg.warp_montage", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.set_memmap_min_size", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.apply_volume_registration_points", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "glossary", "index", "install/advanced", "install/check_installation", "install/contributing", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "inverse", "logging", "martinos", "mne_cpp", "most_used_classes", "mri", "overview/cite", "overview/cookbook", "overview/datasets_index", "overview/design_philosophy", "overview/development", "overview/faq", "overview/get_help", "overview/governance", "overview/implementation", "overview/index", "overview/learn_python", "overview/matlab", "overview/migrating", "overview/people", "overview/roadmap", "preprocessing", "python_reference", "reading_raw_data", "realtime", "report", "sensor_space", "simulation", "source_space", "statistics", "time_frequency", "visualization", "whats_new"], "filenames": ["auto_examples/connectivity/index.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/trap_music.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/contralateral_referencing.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/publication_figure.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sensor_noise_level.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/70_reading_eyetracking_data.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/80_opm_processing.rst", "auto_tutorials/preprocessing/90_eyetracking_data.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "bibliography.rst", "cited.rst", "connectivity.rst", "covariance.rst", "creating_from_arrays.rst", "datasets.rst", "decoding.rst", "events.rst", "export.rst", "file_io.rst", "forward.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.beamformer.trap_music.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.count_annotations.rst", "generated/mne.count_events.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.eyelink.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.ucl_opm_auditory.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_eyelink.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_fil.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_nsx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.match_channel_orders.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.compute_proj_hfc.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.eyetracking.Calibration.rst", "generated/mne.preprocessing.eyetracking.interpolate_blinks.rst", "generated/mne.preprocessing.eyetracking.read_eyelink_calibration.rst", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.make_montage_volume.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.ieeg.warp_montage.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.set_memmap_min_size.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.apply_volume_registration_points.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "glossary.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/contributing.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "inverse.rst", "logging.rst", "martinos.rst", "mne_cpp.rst", "most_used_classes.rst", "mri.rst", "overview/cite.rst", "overview/cookbook.rst", "overview/datasets_index.rst", "overview/design_philosophy.rst", "overview/development.rst", "overview/faq.rst", "overview/get_help.rst", "overview/governance.rst", "overview/implementation.rst", "overview/index.rst", "overview/learn_python.rst", "overview/matlab.rst", "overview/migrating.rst", "overview/people.rst", "overview/roadmap.rst", "preprocessing.rst", "python_reference.rst", "reading_raw_data.rst", "realtime.rst", "report.rst", "sensor_space.rst", "simulation.rst", "source_space.rst", "statistics.rst", "time_frequency.rst", "visualization.rst", "whats_new.rst"], "titles": ["Connectivity Analysis Examples", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Compute Trap-Music on evoked data", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Using contralateral referencing for EEG", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Make figures more publication ready", "Plot single trial activity, grouped by ROI and sorted by RT", "Show noise levels from empty room data", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Importing Data from Eyetracking devices", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing optically pumped magnetometer (OPM) MEG data", "Working with eye tracker data in MNE-Python", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "General bibliography", "Papers citing MNE-Python", "Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.beamformer.trap_music", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.count_annotations", "mne.count_events", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.eyelink.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.ucl_opm_auditory.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_eyelink", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_fil", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_nsx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.match_channel_orders", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.compute_proj_hfc", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.eyetracking.Calibration", "mne.preprocessing.eyetracking.interpolate_blinks", "mne.preprocessing.eyetracking.read_eyelink_calibration", "mne.preprocessing.eyetracking.set_channel_types_eyetrack", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.make_montage_volume", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.ieeg.warp_montage", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.set_memmap_min_size", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.apply_volume_registration_points", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Glossary", "MNE", "Advanced setup", "Testing your installation", "Contributing guide", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Inverse Solutions", "Logging and Configuration", "Martinos Center setup", "MNE with CPP", "Most-used classes", "MRI Processing", "How to cite MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "MNE-Python Development", "Frequently Asked Questions (FAQ)", "Getting help", "Project Governance", "Algorithms and other implementation details", "Documentation overview", "Getting started with Python", "MNE-MATLAB documentation", "Migrating from other analysis software", "Current steering council and institutional partners", "Roadmap", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "What\u2019s new"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891], "8": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891], "demonstr": [0, 5, 19, 27, 33, 41, 43, 44, 45, 64, 68, 71, 72, 74, 80, 84, 99, 103, 114, 117, 145, 146, 151, 152, 161, 168, 170, 171, 172, 190, 192, 195, 199, 201, 202, 204, 205, 208, 210, 216, 223, 224, 227, 235, 240, 581, 859, 868, 871, 874, 875, 892], "sensor": [0, 4, 5, 11, 15, 16, 17, 20, 23, 25, 27, 28, 32, 34, 41, 42, 45, 49, 69, 71, 72, 78, 79, 80, 85, 88, 90, 92, 94, 95, 98, 102, 103, 109, 119, 120, 122, 124, 127, 130, 132, 135, 144, 146, 150, 151, 156, 157, 158, 159, 162, 166, 168, 169, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 191, 199, 200, 202, 204, 205, 206, 208, 209, 210, 216, 224, 227, 228, 229, 234, 240, 243, 244, 245, 258, 260, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 285, 286, 298, 299, 300, 307, 308, 312, 313, 314, 315, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 340, 342, 344, 346, 351, 356, 357, 358, 359, 360, 366, 372, 373, 374, 376, 414, 415, 416, 417, 418, 421, 422, 423, 424, 429, 430, 432, 433, 434, 455, 457, 458, 465, 480, 481, 482, 483, 486, 488, 491, 492, 494, 506, 519, 525, 526, 527, 532, 534, 537, 538, 542, 555, 560, 561, 563, 564, 565, 569, 575, 578, 579, 587, 594, 595, 599, 604, 605, 607, 610, 622, 625, 626, 631, 644, 646, 647, 652, 664, 665, 676, 677, 680, 690, 692, 696, 697, 699, 700, 701, 702, 703, 707, 712, 713, 714, 715, 716, 742, 749, 760, 773, 776, 777, 780, 781, 783, 784, 785, 786, 790, 792, 794, 795, 796, 798, 799, 800, 802, 803, 804, 809, 810, 812, 813, 815, 816, 820, 821, 822, 827, 828, 830, 847, 852, 858, 867, 868, 869, 871, 877, 880, 881, 882, 892], "sourc": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 35, 37, 40, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 99, 100, 101, 103, 105, 106, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 157, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 175, 179, 183, 184, 185, 187, 188, 189, 190, 191, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 245, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 855, 857, 858, 860, 863, 868, 871, 872, 873, 877, 882, 892], "space": [0, 5, 10, 17, 20, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 61, 69, 75, 83, 88, 90, 92, 93, 94, 95, 98, 102, 105, 106, 108, 109, 113, 115, 119, 120, 124, 127, 131, 134, 135, 136, 140, 147, 148, 151, 155, 156, 160, 162, 166, 168, 170, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 191, 195, 199, 205, 208, 214, 215, 216, 219, 222, 224, 227, 228, 232, 234, 236, 239, 240, 241, 245, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 298, 299, 314, 318, 327, 332, 349, 350, 353, 357, 358, 359, 361, 362, 365, 366, 369, 372, 376, 414, 417, 418, 421, 422, 424, 428, 431, 432, 435, 443, 448, 455, 459, 468, 470, 472, 475, 476, 477, 478, 479, 481, 482, 484, 486, 489, 496, 506, 517, 518, 523, 525, 526, 530, 531, 532, 533, 534, 535, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 560, 561, 563, 564, 574, 575, 576, 577, 588, 594, 599, 620, 622, 626, 629, 631, 633, 634, 641, 643, 646, 648, 650, 651, 652, 660, 661, 662, 669, 672, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 696, 697, 699, 700, 702, 703, 704, 707, 708, 712, 714, 716, 724, 746, 760, 776, 778, 784, 790, 791, 792, 793, 796, 797, 799, 802, 803, 807, 812, 813, 815, 818, 819, 820, 823, 824, 828, 844, 847, 857, 868, 871, 880, 882, 892], "function": [0, 1, 4, 5, 8, 9, 12, 16, 18, 19, 21, 27, 28, 31, 35, 36, 40, 42, 44, 45, 46, 51, 54, 55, 56, 57, 58, 59, 60, 62, 70, 71, 72, 74, 77, 80, 82, 83, 90, 93, 94, 95, 99, 101, 103, 107, 112, 113, 114, 115, 116, 119, 121, 127, 132, 133, 135, 136, 140, 141, 143, 144, 146, 149, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 222, 223, 224, 228, 229, 230, 231, 232, 235, 240, 241, 242, 245, 247, 250, 251, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 292, 298, 299, 300, 305, 307, 309, 314, 319, 320, 322, 323, 326, 331, 332, 334, 342, 343, 344, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 374, 376, 378, 390, 393, 414, 417, 419, 420, 421, 423, 424, 431, 433, 435, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 453, 454, 455, 457, 471, 472, 474, 475, 479, 480, 481, 482, 487, 489, 490, 492, 493, 496, 498, 501, 502, 504, 506, 510, 511, 513, 514, 516, 518, 526, 530, 531, 534, 537, 538, 539, 540, 541, 542, 543, 545, 546, 553, 559, 561, 563, 564, 566, 567, 568, 573, 574, 575, 576, 577, 579, 581, 582, 584, 585, 587, 588, 591, 597, 599, 600, 601, 602, 603, 605, 606, 613, 616, 617, 620, 623, 624, 625, 626, 627, 628, 629, 631, 634, 639, 647, 650, 653, 656, 661, 662, 664, 665, 666, 675, 676, 678, 679, 696, 698, 699, 700, 701, 702, 703, 707, 708, 711, 712, 713, 714, 715, 716, 719, 722, 724, 730, 731, 740, 742, 743, 750, 754, 755, 756, 757, 758, 760, 770, 773, 775, 776, 777, 784, 786, 790, 792, 793, 798, 799, 800, 803, 806, 811, 812, 814, 815, 816, 818, 820, 822, 823, 824, 825, 829, 847, 849, 855, 858, 859, 860, 866, 867, 868, 869, 874, 875, 878, 880, 881, 882, 884, 886, 889, 890, 892], "ha": [0, 1, 5, 9, 10, 27, 32, 42, 45, 49, 54, 71, 72, 75, 79, 83, 84, 93, 94, 103, 109, 114, 126, 127, 136, 140, 142, 144, 145, 146, 149, 150, 151, 155, 156, 157, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 185, 188, 189, 190, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 219, 222, 224, 227, 228, 232, 240, 242, 247, 256, 257, 258, 259, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 289, 290, 291, 292, 298, 299, 304, 305, 310, 356, 360, 361, 362, 372, 373, 374, 380, 381, 382, 385, 386, 387, 389, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 414, 420, 421, 435, 449, 450, 452, 453, 455, 457, 458, 461, 476, 478, 479, 481, 482, 483, 489, 490, 502, 510, 527, 530, 531, 532, 534, 542, 563, 564, 565, 567, 579, 584, 595, 599, 606, 629, 630, 648, 651, 693, 694, 699, 700, 702, 703, 712, 713, 714, 715, 716, 719, 728, 730, 738, 739, 740, 742, 743, 747, 770, 784, 792, 794, 796, 797, 798, 799, 800, 803, 805, 807, 812, 813, 814, 815, 816, 818, 820, 822, 847, 849, 851, 855, 857, 858, 867, 868, 869, 870, 871, 872, 873, 874, 877, 880, 884, 892], "move": [0, 27, 61, 76, 80, 81, 116, 140, 145, 156, 161, 177, 192, 202, 205, 206, 209, 212, 235, 242, 247, 257, 262, 265, 266, 267, 268, 274, 280, 281, 367, 414, 421, 449, 481, 482, 563, 564, 568, 596, 712, 714, 716, 748, 749, 750, 791, 792, 796, 799, 803, 812, 815, 820, 824, 871, 873, 874, 884, 892], "mne_connect": [0, 27, 47, 146, 247, 782], "packag": [0, 27, 138, 146, 160, 165, 166, 189, 196, 200, 201, 202, 205, 224, 227, 247, 257, 259, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 375, 376, 417, 424, 427, 430, 431, 457, 470, 472, 481, 482, 521, 522, 525, 526, 537, 538, 547, 548, 569, 576, 577, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 792, 795, 814, 847, 848, 849, 851, 852, 854, 855, 856, 857, 858, 862, 868, 869, 892], "can": [0, 4, 5, 7, 12, 13, 15, 16, 19, 21, 22, 24, 26, 27, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 61, 62, 71, 72, 75, 76, 79, 80, 82, 83, 84, 88, 94, 95, 99, 101, 103, 109, 112, 113, 114, 115, 116, 119, 120, 121, 126, 127, 129, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 230, 232, 235, 236, 237, 240, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 288, 291, 298, 299, 305, 306, 307, 308, 311, 312, 314, 316, 318, 319, 322, 323, 324, 325, 329, 330, 331, 332, 334, 337, 341, 342, 343, 344, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 389, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 433, 435, 438, 439, 440, 441, 443, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 461, 464, 465, 466, 467, 470, 472, 473, 475, 476, 478, 479, 481, 482, 489, 493, 496, 497, 500, 501, 502, 504, 506, 510, 513, 514, 516, 518, 521, 522, 523, 525, 526, 529, 531, 537, 538, 540, 541, 542, 544, 548, 550, 551, 552, 553, 561, 562, 563, 564, 566, 567, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 598, 599, 600, 603, 605, 606, 607, 613, 614, 617, 619, 622, 623, 624, 625, 628, 629, 630, 632, 634, 636, 642, 646, 647, 648, 650, 651, 653, 656, 658, 660, 661, 668, 675, 676, 677, 678, 680, 682, 684, 686, 687, 691, 692, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 711, 712, 713, 714, 715, 716, 720, 721, 722, 723, 725, 728, 735, 738, 740, 742, 743, 746, 748, 749, 750, 755, 757, 758, 760, 761, 765, 768, 773, 776, 777, 778, 779, 780, 781, 782, 783, 784, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 810, 811, 812, 813, 814, 815, 816, 818, 820, 822, 823, 824, 826, 834, 835, 838, 840, 845, 847, 849, 850, 851, 855, 856, 857, 858, 859, 863, 866, 867, 868, 869, 873, 874, 875, 877, 880, 881, 882, 892], "found": [0, 1, 2, 4, 5, 8, 9, 11, 12, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 124, 127, 128, 129, 132, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 158, 159, 161, 162, 166, 168, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 196, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 217, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 257, 258, 260, 262, 265, 266, 267, 268, 270, 274, 289, 304, 320, 321, 331, 350, 351, 367, 380, 381, 382, 383, 385, 386, 387, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 433, 441, 455, 456, 462, 463, 464, 473, 481, 482, 488, 508, 530, 564, 567, 576, 581, 582, 584, 589, 590, 592, 593, 608, 619, 642, 648, 650, 655, 656, 661, 699, 747, 760, 770, 772, 776, 790, 807, 813, 840, 847, 850, 851, 856, 868, 872, 874, 880, 882, 892], "go": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 278, 359, 464, 481, 482, 564, 661, 851, 862, 871, 872, 873, 874], "end": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 288, 289, 314, 319, 326, 342, 343, 345, 356, 359, 361, 414, 420, 421, 426, 432, 437, 438, 439, 454, 455, 481, 482, 494, 502, 503, 508, 524, 537, 545, 547, 548, 549, 563, 564, 567, 581, 582, 591, 609, 611, 613, 620, 622, 629, 630, 631, 637, 641, 645, 647, 668, 669, 670, 671, 672, 674, 677, 689, 712, 713, 715, 717, 718, 719, 720, 721, 722, 723, 725, 734, 745, 747, 760, 790, 799, 804, 807, 813, 820, 833, 834, 835, 836, 838, 839, 843, 844, 845, 846, 847, 849, 851, 871, 873, 874, 877, 892], "download": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 849, 851, 852, 853, 854, 858, 859, 868, 892], "full": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 240, 241, 242, 265, 266, 267, 268, 270, 272, 273, 276, 278, 279, 281, 298, 299, 301, 303, 320, 321, 356, 360, 361, 362, 372, 373, 374, 414, 419, 421, 422, 427, 444, 447, 457, 458, 476, 478, 479, 481, 482, 530, 531, 542, 545, 561, 564, 626, 629, 692, 698, 699, 701, 703, 715, 726, 728, 730, 737, 738, 740, 742, 743, 750, 760, 776, 778, 781, 784, 790, 792, 800, 807, 813, 818, 823, 825, 826, 829, 849, 851, 857, 863, 867, 868, 873, 892], "exampl": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 260, 281, 311, 337, 364, 370, 371, 372, 373, 383, 389, 397, 407, 413, 436, 441, 458, 480, 505, 552, 574, 583, 608, 625, 648, 657, 738, 740, 750, 758, 790, 792, 799, 803, 805, 813, 815, 820, 824, 847, 849, 851, 854, 858, 867, 869, 871, 872, 874, 875, 892], "code": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 256, 260, 265, 266, 267, 268, 275, 284, 351, 441, 443, 453, 455, 458, 480, 481, 482, 489, 498, 506, 532, 599, 608, 624, 698, 712, 714, 715, 716, 728, 738, 741, 742, 744, 760, 790, 792, 794, 814, 847, 855, 867, 870, 871, 873, 874, 875, 878, 880, 887, 890, 892], "here": [1, 4, 5, 7, 9, 10, 11, 12, 15, 18, 19, 21, 28, 31, 33, 34, 38, 41, 42, 43, 45, 66, 68, 71, 72, 75, 76, 82, 83, 84, 90, 94, 95, 100, 101, 104, 109, 111, 112, 114, 116, 117, 120, 121, 127, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 224, 227, 228, 229, 231, 232, 235, 236, 237, 241, 242, 271, 275, 276, 278, 280, 281, 336, 362, 389, 395, 420, 431, 438, 454, 480, 516, 526, 529, 539, 564, 581, 597, 600, 614, 616, 629, 661, 664, 665, 666, 675, 676, 678, 699, 700, 701, 702, 703, 707, 793, 824, 849, 851, 858, 859, 868, 871, 874, 875, 876, 878, 892], "we": [1, 4, 5, 7, 9, 10, 11, 13, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 58, 59, 66, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 87, 88, 90, 94, 95, 101, 103, 109, 111, 112, 113, 114, 115, 116, 117, 120, 121, 126, 127, 129, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 262, 265, 266, 267, 268, 270, 272, 275, 276, 278, 280, 283, 309, 332, 422, 424, 444, 445, 446, 447, 454, 464, 481, 482, 483, 513, 539, 564, 581, 598, 606, 672, 715, 760, 761, 776, 785, 800, 818, 849, 855, 856, 859, 862, 866, 867, 868, 869, 871, 873, 874, 878, 880, 892], "comput": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 31, 36, 38, 43, 44, 48, 50, 52, 57, 61, 69, 72, 73, 77, 79, 81, 87, 88, 92, 93, 95, 96, 97, 98, 100, 105, 113, 114, 115, 119, 120, 121, 123, 124, 131, 134, 135, 141, 142, 145, 146, 149, 150, 151, 152, 155, 156, 157, 160, 163, 165, 166, 167, 168, 171, 172, 175, 176, 178, 181, 182, 183, 184, 185, 186, 189, 191, 195, 196, 200, 201, 203, 207, 208, 210, 212, 216, 219, 222, 223, 224, 227, 228, 231, 240, 241, 242, 245, 258, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 285, 286, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 303, 304, 306, 317, 318, 320, 322, 327, 331, 343, 344, 345, 346, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 372, 373, 374, 383, 414, 415, 418, 419, 420, 421, 422, 426, 430, 433, 443, 448, 453, 455, 457, 458, 459, 464, 470, 472, 476, 477, 478, 479, 481, 482, 486, 488, 493, 494, 496, 517, 520, 521, 522, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 561, 562, 564, 565, 568, 571, 572, 574, 575, 576, 577, 578, 581, 588, 595, 597, 616, 618, 619, 620, 621, 626, 629, 630, 631, 633, 634, 641, 643, 646, 648, 650, 652, 654, 656, 660, 661, 662, 667, 668, 669, 670, 671, 672, 673, 674, 677, 680, 682, 683, 684, 685, 686, 687, 688, 693, 694, 695, 698, 699, 700, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 730, 731, 736, 737, 738, 739, 740, 741, 742, 743, 744, 748, 749, 754, 760, 776, 777, 778, 784, 785, 787, 788, 790, 791, 792, 799, 800, 807, 812, 813, 819, 828, 840, 847, 851, 852, 854, 857, 858, 863, 868, 871, 877, 882, 887, 889, 892], "evok": [1, 2, 4, 5, 7, 8, 15, 16, 17, 18, 20, 27, 28, 31, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 61, 62, 69, 72, 74, 78, 79, 80, 84, 85, 87, 88, 89, 91, 93, 95, 96, 97, 99, 100, 101, 107, 113, 116, 117, 122, 124, 130, 135, 136, 141, 143, 144, 154, 162, 167, 169, 170, 176, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 196, 199, 200, 201, 202, 203, 205, 206, 207, 210, 213, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 242, 245, 257, 260, 262, 264, 265, 266, 268, 269, 270, 272, 273, 275, 276, 278, 280, 282, 285, 286, 290, 291, 294, 295, 298, 299, 301, 303, 316, 319, 355, 356, 358, 360, 376, 396, 419, 428, 435, 439, 440, 445, 446, 448, 455, 457, 471, 473, 476, 478, 479, 481, 482, 486, 494, 522, 523, 526, 530, 531, 532, 533, 534, 535, 539, 542, 545, 555, 560, 561, 562, 563, 564, 565, 572, 573, 576, 577, 580, 583, 587, 591, 598, 599, 614, 620, 622, 626, 627, 628, 629, 630, 631, 633, 634, 637, 653, 656, 660, 661, 666, 676, 678, 698, 707, 712, 714, 715, 716, 721, 725, 730, 740, 742, 743, 744, 760, 777, 784, 787, 788, 790, 791, 794, 795, 796, 797, 798, 799, 800, 804, 807, 811, 813, 814, 817, 819, 822, 827, 838, 847, 851, 868, 869, 871, 874, 877, 878, 882, 892], "from": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 145, 146, 147, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 212, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 304, 305, 309, 311, 314, 315, 317, 320, 323, 326, 327, 328, 330, 332, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 372, 373, 374, 375, 376, 383, 389, 397, 398, 406, 407, 414, 418, 420, 421, 422, 423, 429, 432, 436, 437, 438, 440, 443, 444, 445, 446, 447, 448, 453, 455, 456, 457, 458, 459, 462, 464, 466, 467, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 516, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 537, 538, 539, 540, 541, 542, 544, 545, 546, 550, 551, 555, 556, 557, 561, 562, 563, 564, 565, 566, 567, 568, 571, 573, 574, 575, 578, 579, 580, 581, 582, 584, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 608, 609, 610, 611, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 651, 653, 656, 661, 662, 663, 664, 665, 666, 672, 675, 676, 677, 678, 679, 681, 682, 684, 685, 686, 687, 688, 689, 691, 692, 694, 698, 699, 700, 701, 702, 703, 704, 707, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 738, 740, 741, 742, 743, 744, 747, 748, 749, 750, 752, 755, 756, 759, 760, 768, 773, 776, 777, 784, 788, 789, 790, 792, 793, 794, 796, 797, 798, 799, 800, 801, 803, 804, 805, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 820, 822, 828, 830, 838, 839, 842, 845, 847, 849, 851, 854, 855, 856, 857, 858, 859, 863, 867, 868, 869, 871, 873, 874, 876, 877, 880, 882, 890, 892], "tutori": [1, 27, 32, 63, 71, 74, 84, 109, 124, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 180, 181, 182, 186, 187, 190, 191, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 232, 233, 235, 237, 238, 240, 242, 243, 245, 262, 263, 265, 266, 267, 268, 270, 298, 304, 356, 361, 414, 434, 449, 452, 455, 457, 481, 482, 492, 494, 527, 552, 599, 739, 740, 742, 743, 776, 788, 800, 828, 847, 851, 868, 871, 874, 875, 876, 892], "For": [1, 4, 15, 19, 34, 43, 44, 47, 50, 55, 64, 68, 70, 71, 80, 95, 101, 103, 109, 113, 115, 120, 121, 123, 127, 134, 135, 136, 140, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 212, 213, 216, 217, 219, 222, 227, 229, 231, 232, 235, 237, 240, 241, 242, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 298, 299, 316, 327, 337, 356, 360, 361, 362, 369, 372, 373, 374, 383, 389, 406, 407, 413, 414, 416, 417, 420, 421, 422, 424, 426, 427, 431, 435, 436, 437, 438, 440, 443, 444, 445, 447, 449, 450, 452, 453, 455, 456, 457, 458, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 487, 489, 496, 502, 505, 506, 529, 537, 542, 546, 551, 563, 564, 565, 566, 575, 580, 583, 584, 586, 588, 599, 603, 610, 617, 626, 642, 646, 648, 653, 656, 658, 661, 692, 697, 698, 699, 700, 702, 703, 707, 712, 713, 714, 715, 716, 730, 732, 739, 740, 742, 743, 750, 760, 775, 776, 778, 784, 785, 790, 791, 792, 794, 796, 799, 800, 801, 803, 804, 805, 807, 813, 815, 816, 820, 822, 824, 847, 849, 851, 853, 857, 862, 863, 867, 868, 869, 870, 871, 874, 878, 892], "comparison": [1, 27, 31, 38, 83, 96, 97, 101, 112, 122, 130, 151, 155, 157, 167, 176, 183, 184, 191, 202, 207, 211, 232, 235, 236, 237, 241, 242, 245, 276, 277, 362, 564, 567, 600, 639, 696, 700, 701, 859, 867, 874, 889, 892], "see": [1, 4, 7, 8, 10, 19, 21, 22, 26, 27, 32, 34, 35, 39, 43, 44, 63, 64, 71, 72, 74, 76, 80, 82, 83, 84, 101, 113, 115, 119, 120, 121, 127, 129, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 229, 230, 232, 235, 240, 242, 250, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 424, 425, 427, 430, 431, 433, 435, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 464, 465, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 558, 560, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 657, 660, 661, 663, 664, 665, 666, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 688, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 730, 731, 734, 735, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 755, 759, 760, 765, 768, 775, 776, 777, 784, 785, 788, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 807, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 829, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 865, 867, 868, 869, 871, 873, 874, 875, 878, 879, 880, 882, 889, 892], "1": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 291, 298, 299, 300, 301, 303, 306, 309, 310, 311, 314, 316, 320, 323, 324, 325, 337, 343, 344, 345, 349, 355, 356, 357, 359, 361, 362, 367, 370, 371, 374, 383, 390, 391, 392, 396, 397, 398, 406, 407, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 435, 436, 437, 438, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 457, 458, 459, 470, 472, 473, 475, 476, 478, 479, 480, 481, 482, 489, 491, 496, 498, 500, 505, 506, 507, 511, 517, 518, 520, 522, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 555, 556, 557, 558, 561, 563, 564, 565, 566, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 588, 589, 590, 591, 592, 593, 594, 597, 599, 600, 603, 606, 607, 608, 614, 621, 623, 625, 631, 633, 646, 652, 656, 658, 659, 660, 661, 662, 663, 664, 665, 668, 669, 670, 671, 672, 674, 676, 677, 679, 686, 687, 688, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 735, 737, 738, 739, 740, 741, 742, 743, 744, 748, 750, 755, 760, 764, 773, 776, 777, 781, 784, 788, 789, 790, 791, 792, 794, 795, 796, 799, 800, 801, 803, 805, 807, 808, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 826, 847, 849, 850, 851, 854, 856, 857, 859, 866, 867, 868, 871, 873, 874, 877, 880], "http": [1, 8, 15, 43, 71, 88, 113, 151, 155, 160, 171, 184, 196, 232, 245, 265, 266, 267, 268, 272, 276, 280, 356, 369, 383, 389, 391, 406, 407, 422, 476, 481, 482, 489, 531, 565, 657, 694, 696, 741, 744, 756, 818, 849, 851, 859, 866, 871, 874, 892], "neuroimag": [1, 10, 12, 18, 19, 21, 35, 42, 46, 59, 60, 76, 94, 101, 113, 121, 126, 144, 155, 162, 165, 180, 184, 186, 187, 196, 212, 227, 228, 245, 262, 263, 265, 266, 267, 268, 270, 271, 276, 303, 304, 356, 392, 418, 420, 421, 422, 432, 435, 455, 457, 476, 479, 492, 527, 532, 542, 546, 564, 578, 606, 669, 672, 674, 696, 699, 700, 701, 702, 703, 705, 706, 726, 728, 738, 742, 776, 788, 800, 847, 858, 866, 869, 871, 874, 875, 880], "usc": [1, 184], "edu": [1, 9, 24, 35, 37, 43, 47, 58, 69, 71, 101, 104, 113, 114, 115, 120, 134, 151, 155, 184, 213, 245, 272, 276, 280, 369, 608, 818, 874], "mediannervectf": 1, "author": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 195, 202, 209, 213, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 606, 728, 738, 742, 851, 866, 873], "mainak": [1, 46, 79, 86, 87, 191, 245, 479, 866, 879, 892], "ja": [1, 46, 79, 86, 87, 191, 245, 479, 866, 879, 892], "telecom": [1, 79, 87, 191], "paristech": [1, 79, 87, 191, 256, 879], "fr": [1, 7, 9, 10, 11, 13, 18, 19, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 60, 65, 79, 87, 92, 96, 97, 100, 107, 108, 110, 111, 117, 121, 125, 131, 132, 137, 159, 185, 191, 196, 229, 230, 231, 235, 236, 237, 241, 245, 892], "licens": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 195, 209, 213, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242, 380, 381, 382, 389, 391, 868, 892], "bsd": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 195, 209, 213, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242, 599, 873], "claus": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 185, 191, 195, 209, 213, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242], "import": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 259, 265, 266, 267, 268, 270, 314, 330, 376, 383, 406, 407, 454, 481, 482, 489, 491, 493, 496, 497, 498, 499, 500, 501, 502, 504, 508, 509, 512, 513, 564, 587, 608, 623, 624, 628, 642, 656, 677, 692, 694, 712, 714, 715, 716, 728, 738, 755, 758, 760, 808, 845, 849, 850, 855, 858, 859, 862, 867, 868, 869, 871, 873, 874, 878, 880, 892], "numpi": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 47, 50, 58, 59, 61, 64, 69, 71, 72, 73, 75, 82, 84, 90, 92, 93, 94, 95, 97, 100, 107, 111, 112, 113, 114, 115, 117, 119, 120, 125, 127, 133, 135, 136, 137, 140, 141, 143, 146, 149, 150, 151, 156, 157, 158, 159, 160, 166, 168, 170, 171, 172, 176, 177, 178, 181, 182, 183, 184, 185, 190, 191, 192, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 212, 216, 217, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 259, 262, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 414, 420, 421, 422, 452, 453, 454, 478, 479, 480, 481, 482, 516, 564, 579, 597, 608, 616, 664, 665, 666, 675, 676, 678, 692, 697, 699, 700, 701, 702, 703, 712, 713, 714, 715, 716, 717, 719, 720, 722, 728, 738, 739, 740, 741, 742, 743, 744, 760, 792, 794, 799, 812, 847, 850, 869, 873, 876, 892], "np": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 45, 47, 50, 58, 59, 61, 69, 71, 72, 73, 75, 82, 84, 90, 92, 93, 94, 95, 97, 100, 107, 111, 112, 113, 114, 115, 117, 119, 120, 125, 127, 133, 135, 136, 137, 141, 143, 146, 150, 151, 156, 157, 158, 159, 160, 166, 168, 170, 172, 176, 177, 178, 181, 182, 183, 184, 185, 190, 191, 195, 196, 199, 200, 202, 203, 204, 206, 207, 210, 211, 212, 216, 217, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 259, 265, 266, 267, 268, 271, 272, 273, 276, 278, 279, 280, 281, 283, 316, 356, 371, 448, 449, 453, 470, 481, 482, 498, 514, 564, 579, 588, 597, 608, 678, 692, 704, 712, 714, 715, 716, 728, 730, 738, 739, 740, 742, 743, 760, 768, 774, 779, 784, 791, 814, 818, 820, 823, 824, 851, 874, 877, 890, 892], "mne": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 163, 164, 167, 168, 169, 170, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 203, 204, 207, 208, 209, 211, 212, 214, 215, 217, 218, 219, 220, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 250, 251, 252, 253, 255, 256, 847, 849, 850, 852, 856, 860, 861, 862, 867, 868, 869, 872, 873, 875, 878, 879, 880, 881, 882, 883, 886, 887, 889, 890, 891, 892], "bst_raw": [1, 119, 868, 882], "io": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 32, 33, 34, 42, 45, 46, 49, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 127, 128, 129, 132, 133, 135, 137, 140, 141, 142, 144, 145, 146, 149, 151, 152, 156, 157, 158, 159, 160, 162, 166, 167, 168, 169, 170, 171, 172, 177, 180, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 252, 257, 258, 259, 264, 265, 266, 267, 268, 270, 275, 284, 297, 367, 389, 419, 447, 449, 452, 526, 564, 572, 576, 577, 578, 588, 599, 712, 714, 715, 716, 730, 760, 805, 849, 851, 855, 867, 868, 869, 871, 874, 878, 882, 883, 892], "read_raw_ctf": [1, 7, 12, 21, 81, 82, 119, 123, 184, 188, 191, 487, 874, 882, 892], "print": [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 70, 71, 72, 73, 74, 75, 77, 79, 80, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 128, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 156, 157, 158, 159, 160, 166, 167, 168, 169, 170, 171, 175, 176, 179, 181, 182, 183, 184, 185, 191, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 216, 217, 218, 222, 223, 224, 227, 228, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 265, 266, 267, 268, 274, 356, 397, 449, 455, 481, 482, 514, 657, 658, 711, 714, 715, 755, 768, 784, 795, 797, 800, 855, 857, 868, 871, 892], "__doc__": [1, 2, 4, 7, 8, 10, 11, 13, 14, 15, 16, 18, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 70, 71, 72, 73, 74, 75, 77, 79, 80, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 100, 103, 104, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 128, 131, 132, 133, 136, 175, 179, 183, 184, 191, 230, 231, 236, 237], "tmin": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 61, 70, 72, 73, 74, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 112, 113, 114, 117, 121, 128, 132, 133, 136, 137, 140, 141, 142, 144, 145, 149, 151, 162, 166, 172, 177, 180, 181, 183, 184, 185, 191, 195, 196, 200, 201, 205, 209, 211, 212, 213, 216, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 343, 345, 356, 357, 358, 361, 420, 426, 438, 440, 481, 482, 518, 537, 554, 576, 577, 581, 582, 591, 679, 698, 704, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 760, 792, 814, 820, 867, 874, 878, 892], "tmax": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 61, 70, 72, 73, 74, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 112, 113, 114, 117, 121, 128, 129, 132, 133, 136, 137, 140, 141, 142, 144, 145, 146, 149, 151, 152, 162, 166, 167, 168, 172, 177, 180, 181, 182, 183, 184, 185, 191, 195, 196, 199, 200, 201, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 343, 345, 356, 357, 358, 361, 420, 426, 438, 440, 481, 482, 537, 554, 576, 577, 581, 582, 591, 698, 701, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 760, 792, 801, 814, 820, 867, 871, 874, 878, 892], "event_idtake": [1, 4, 5, 7, 10, 16, 19, 26, 31, 38, 41, 43, 44, 45, 47, 50, 71, 72, 75, 77, 80, 83, 94, 96, 97, 101, 109, 110, 113, 115, 119, 123, 127, 131, 133, 135, 137, 140, 141, 142, 144, 145, 149, 150, 152, 155, 158, 159, 160, 162, 166, 167, 168, 169, 171, 172, 176, 179, 181, 182, 183, 185, 189, 192, 195, 196, 201, 202, 205, 206, 207, 208, 210, 216, 222, 224, 227, 235, 236, 237, 241, 242, 257, 259, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 288, 298, 299, 311, 314, 332, 342, 344, 356, 360, 361, 362, 369, 372, 373, 374, 414, 421, 438, 443, 447, 455, 457, 458, 471, 473, 476, 478, 479, 481, 482, 508, 531, 532, 533, 534, 535, 537, 538, 542, 547, 548, 564, 567, 569, 572, 647, 653, 660, 662, 673, 678, 698, 707, 712, 714, 715, 716, 757, 760, 761, 777, 784, 792, 794, 799, 800, 803, 812, 820, 830, 847, 851, 854, 855, 859, 873, 874, 875, 877, 892], "right": [1, 5, 8, 10, 11, 13, 15, 39, 40, 41, 43, 45, 47, 51, 52, 57, 60, 62, 68, 71, 72, 74, 80, 83, 94, 109, 112, 113, 114, 116, 120, 127, 128, 132, 134, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 158, 160, 161, 166, 168, 172, 175, 176, 178, 179, 180, 181, 191, 192, 195, 201, 202, 204, 205, 206, 207, 210, 213, 216, 217, 218, 219, 223, 224, 229, 231, 232, 235, 236, 237, 240, 241, 261, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 279, 280, 281, 314, 316, 326, 327, 337, 338, 362, 383, 414, 421, 436, 438, 441, 448, 472, 479, 481, 482, 500, 505, 516, 529, 563, 564, 584, 587, 646, 675, 712, 714, 715, 716, 728, 738, 760, 773, 783, 784, 790, 791, 792, 796, 798, 799, 803, 811, 812, 813, 815, 820, 824, 847, 849, 851, 854, 868, 871, 873, 874, 877, 892], "hand": [1, 5, 8, 9, 112, 156, 160, 200, 205, 206, 207, 242, 270, 383, 564, 874, 892], "somato": [1, 32, 33, 34, 46, 62, 113, 171, 241, 868, 882, 892], "reject": [1, 5, 7, 11, 13, 16, 27, 28, 32, 42, 45, 46, 62, 70, 77, 78, 83, 96, 97, 99, 100, 101, 103, 104, 107, 110, 113, 114, 117, 121, 132, 140, 141, 142, 144, 145, 146, 151, 152, 165, 166, 172, 177, 180, 189, 191, 196, 200, 205, 206, 207, 210, 211, 214, 215, 218, 227, 229, 230, 231, 232, 235, 237, 241, 245, 257, 258, 259, 260, 265, 266, 267, 270, 275, 359, 361, 481, 482, 523, 561, 564, 566, 567, 576, 577, 578, 581, 582, 589, 590, 599, 622, 626, 638, 690, 696, 698, 790, 803, 804, 805, 806, 874, 892], "dict": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 21, 22, 26, 28, 32, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 60, 62, 66, 68, 70, 71, 75, 77, 79, 80, 86, 88, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 128, 131, 132, 135, 136, 137, 140, 141, 142, 143, 145, 150, 151, 152, 157, 158, 159, 160, 166, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 184, 191, 192, 195, 196, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 287, 289, 298, 299, 304, 306, 312, 314, 316, 326, 327, 342, 343, 344, 345, 346, 347, 348, 356, 359, 360, 361, 367, 368, 369, 370, 371, 372, 373, 374, 389, 395, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 436, 438, 441, 443, 446, 448, 449, 450, 452, 453, 457, 458, 459, 460, 462, 464, 465, 466, 467, 476, 478, 479, 480, 481, 482, 485, 489, 496, 501, 505, 515, 518, 519, 520, 521, 522, 525, 526, 530, 531, 532, 533, 534, 535, 537, 538, 542, 544, 547, 548, 549, 554, 556, 557, 560, 562, 563, 564, 565, 566, 574, 576, 577, 579, 581, 582, 584, 587, 588, 595, 610, 615, 619, 623, 624, 625, 626, 628, 632, 638, 642, 644, 647, 653, 661, 663, 664, 665, 675, 677, 680, 681, 697, 698, 699, 700, 702, 703, 707, 709, 712, 714, 715, 716, 728, 738, 746, 747, 749, 750, 760, 761, 776, 777, 779, 780, 782, 783, 784, 788, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 803, 805, 811, 812, 813, 815, 818, 819, 820, 821, 822, 823, 824, 830, 835, 845, 846, 851, 867, 874, 878, 892], "mag": [1, 5, 7, 8, 9, 12, 13, 21, 22, 26, 28, 31, 32, 33, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 70, 75, 77, 80, 81, 82, 87, 93, 94, 104, 107, 109, 116, 119, 120, 121, 123, 124, 132, 140, 142, 145, 146, 150, 152, 156, 157, 158, 162, 166, 169, 170, 172, 176, 177, 178, 179, 180, 181, 183, 184, 185, 191, 196, 199, 201, 203, 205, 206, 207, 209, 210, 216, 222, 223, 232, 235, 237, 240, 257, 260, 262, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 298, 299, 313, 320, 321, 340, 356, 360, 361, 372, 373, 374, 376, 414, 421, 423, 457, 458, 476, 478, 479, 481, 482, 519, 542, 561, 562, 563, 564, 569, 574, 576, 577, 579, 581, 582, 588, 652, 698, 712, 714, 715, 716, 783, 784, 790, 791, 792, 794, 796, 798, 799, 800, 803, 813, 815, 816, 820, 821, 822, 847, 867, 874, 892], "4e": [1, 9, 28, 31, 42, 45, 70, 79, 82, 104, 107, 121, 132, 152, 162, 177, 180, 185, 191, 196, 205, 223, 224, 232, 260, 265, 266, 275, 361, 481, 482, 564, 581, 582, 698, 790, 813, 867], "12": [1, 7, 9, 11, 12, 13, 18, 19, 20, 21, 24, 28, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 59, 65, 70, 73, 77, 80, 81, 83, 85, 90, 91, 96, 101, 103, 104, 107, 108, 109, 112, 113, 114, 121, 127, 132, 137, 143, 145, 146, 148, 151, 152, 161, 162, 166, 168, 169, 171, 172, 175, 177, 179, 180, 183, 191, 195, 196, 199, 201, 202, 203, 204, 205, 207, 209, 210, 213, 215, 216, 218, 219, 221, 222, 224, 227, 228, 229, 230, 231, 232, 234, 235, 237, 241, 245, 259, 260, 264, 265, 266, 267, 268, 270, 275, 277, 278, 298, 307, 311, 315, 337, 349, 353, 354, 356, 361, 362, 383, 397, 420, 436, 455, 457, 479, 481, 482, 493, 525, 529, 531, 564, 575, 576, 577, 581, 582, 597, 599, 665, 698, 712, 714, 715, 716, 740, 743, 778, 790, 792, 797, 809, 813, 816, 867, 868, 871, 874, 877], "eog": [1, 4, 8, 9, 11, 12, 14, 15, 16, 27, 28, 32, 33, 42, 45, 46, 62, 70, 72, 75, 77, 78, 81, 82, 83, 85, 88, 90, 93, 94, 96, 97, 100, 104, 107, 108, 109, 110, 113, 117, 127, 128, 137, 140, 141, 145, 146, 149, 151, 152, 166, 167, 168, 169, 172, 177, 180, 189, 191, 192, 196, 200, 201, 203, 206, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 229, 230, 231, 232, 235, 237, 241, 260, 265, 266, 267, 268, 270, 275, 313, 361, 376, 447, 455, 481, 482, 489, 491, 492, 493, 496, 497, 498, 504, 508, 511, 555, 561, 563, 564, 577, 581, 582, 590, 593, 609, 614, 623, 664, 665, 698, 712, 714, 715, 716, 790, 791, 806, 811, 813, 847, 867, 868, 869, 874, 877, 878, 892], "250e": [1, 32, 144, 166, 191, 204, 207, 260, 265, 266, 361, 564, 581, 582, 698], "6": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 124, 127, 130, 131, 133, 136, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 154, 156, 157, 158, 159, 160, 162, 164, 166, 168, 169, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 218, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 241, 242, 244, 245, 257, 260, 262, 264, 265, 266, 267, 268, 270, 274, 275, 278, 283, 316, 337, 361, 383, 390, 414, 416, 419, 421, 449, 450, 452, 453, 481, 482, 500, 531, 563, 564, 573, 579, 580, 581, 582, 597, 601, 652, 665, 699, 700, 702, 703, 712, 714, 715, 716, 728, 738, 739, 740, 742, 743, 775, 776, 777, 790, 791, 792, 796, 799, 803, 805, 812, 813, 815, 819, 820, 822, 849, 850, 857, 867, 868, 874, 877], "data_path": [1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 223, 224, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 265, 266, 267, 268, 275, 389, 481, 482, 851, 868, 874, 882, 892], "raw_path": [1, 172, 184], "meg": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 127, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 222, 224, 229, 230, 231, 232, 235, 236, 237, 240, 241, 245, 257, 260, 262, 265, 266, 267, 268, 269, 270, 274, 276, 278, 285, 286, 298, 299, 301, 303, 312, 317, 320, 321, 322, 327, 329, 331, 343, 355, 356, 357, 358, 359, 360, 361, 366, 372, 373, 374, 376, 396, 405, 414, 416, 421, 422, 430, 435, 455, 457, 458, 465, 471, 476, 478, 479, 481, 482, 484, 488, 492, 494, 500, 502, 503, 506, 513, 515, 522, 524, 526, 530, 531, 532, 542, 543, 545, 546, 558, 561, 562, 563, 564, 566, 569, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 591, 595, 599, 600, 605, 607, 614, 620, 625, 629, 631, 646, 652, 664, 665, 669, 672, 674, 677, 680, 698, 699, 700, 702, 703, 707, 712, 714, 715, 716, 720, 721, 722, 723, 725, 742, 743, 746, 747, 760, 773, 776, 777, 783, 784, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 802, 803, 804, 811, 812, 814, 815, 820, 822, 827, 847, 848, 851, 858, 863, 866, 867, 871, 877, 878, 882, 892], "subj001_somatosensory_20111109_01_aux": [1, 119], "f": [1, 5, 8, 9, 10, 18, 19, 21, 22, 27, 28, 29, 32, 33, 39, 40, 41, 46, 47, 61, 64, 71, 72, 83, 86, 90, 92, 94, 98, 102, 104, 107, 109, 111, 112, 113, 114, 115, 119, 126, 127, 135, 141, 144, 149, 150, 151, 157, 158, 159, 160, 165, 167, 170, 172, 176, 182, 191, 195, 196, 199, 200, 202, 205, 207, 209, 210, 211, 213, 218, 222, 223, 224, 227, 229, 230, 231, 233, 234, 235, 236, 237, 240, 241, 242, 245, 257, 259, 262, 265, 266, 267, 268, 270, 274, 289, 298, 304, 320, 340, 355, 391, 453, 455, 481, 482, 530, 561, 573, 584, 626, 668, 692, 693, 694, 695, 698, 700, 703, 715, 728, 738, 742, 747, 781, 784, 791, 847, 857, 859, 867, 868, 874, 892], "d": [1, 4, 7, 11, 12, 15, 19, 21, 22, 26, 34, 39, 41, 46, 50, 52, 57, 59, 66, 73, 80, 81, 82, 84, 93, 94, 100, 101, 109, 111, 113, 118, 119, 120, 123, 126, 127, 129, 135, 136, 141, 157, 158, 159, 160, 171, 179, 180, 182, 183, 184, 185, 191, 195, 202, 208, 209, 218, 224, 227, 231, 235, 236, 237, 240, 242, 245, 257, 259, 262, 265, 266, 267, 268, 270, 274, 289, 298, 299, 304, 323, 356, 391, 422, 476, 481, 482, 494, 498, 530, 531, 584, 630, 656, 705, 706, 714, 716, 731, 747, 761, 800, 813, 859, 868, 869, 874, 880, 892], "crop": [1, 5, 8, 9, 10, 12, 21, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 45, 46, 51, 59, 60, 75, 77, 81, 82, 83, 84, 109, 112, 116, 127, 137, 140, 141, 142, 146, 149, 151, 167, 168, 172, 176, 179, 180, 181, 183, 184, 185, 199, 200, 203, 205, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 224, 228, 229, 235, 237, 240, 241, 259, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 574, 600, 613, 712, 715, 869, 892], "half": [1, 71, 202, 203, 237, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 343, 416, 450, 452, 453, 481, 482, 583, 699, 700, 702, 703, 707, 724, 726, 728, 738, 740, 742, 743, 760, 784, 790, 792, 813, 818, 823, 851, 874, 892], "length": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 111, 112, 113, 114, 115, 121, 133, 136, 141, 143, 144, 149, 151, 172, 175, 191, 196, 199, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 216, 219, 222, 228, 232, 240, 257, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 288, 315, 361, 397, 414, 416, 419, 420, 421, 422, 425, 426, 429, 450, 452, 453, 472, 479, 480, 481, 482, 534, 546, 548, 563, 564, 566, 572, 581, 582, 599, 606, 629, 630, 651, 662, 678, 692, 693, 697, 698, 712, 714, 715, 716, 717, 718, 719, 720, 722, 724, 727, 730, 731, 735, 739, 740, 741, 742, 743, 744, 750, 760, 775, 776, 777, 784, 791, 792, 794, 796, 799, 801, 803, 812, 815, 818, 819, 820, 821, 822, 823, 847, 867, 868, 874, 892], "save": [1, 5, 7, 9, 11, 29, 30, 32, 34, 41, 43, 44, 61, 62, 71, 75, 108, 109, 110, 113, 115, 135, 136, 142, 143, 150, 151, 156, 157, 158, 160, 161, 162, 168, 170, 177, 180, 181, 183, 188, 190, 191, 200, 201, 203, 205, 207, 208, 210, 217, 218, 219, 224, 231, 235, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 289, 314, 315, 340, 389, 418, 444, 445, 446, 447, 473, 480, 481, 482, 498, 501, 506, 537, 538, 553, 563, 564, 612, 624, 625, 628, 629, 633, 636, 639, 650, 702, 703, 712, 713, 714, 715, 716, 732, 733, 745, 747, 760, 834, 838, 839, 841, 849, 851, 855, 869, 871, 874, 877, 878, 892], "memori": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 257, 260, 265, 266, 267, 268, 283, 292, 293, 296, 332, 361, 363, 365, 377, 416, 423, 426, 427, 431, 452, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 523, 533, 534, 535, 537, 538, 544, 566, 599, 654, 659, 661, 699, 700, 702, 703, 718, 721, 737, 739, 740, 741, 742, 743, 744, 760, 794, 849, 850, 857, 869, 878, 880, 892], "120": [1, 5, 7, 24, 33, 35, 38, 42, 45, 59, 81, 82, 85, 86, 108, 133, 135, 142, 151, 160, 169, 176, 181, 191, 196, 199, 201, 203, 205, 209, 212, 227, 231, 232, 241, 245, 257, 265, 266, 437, 481, 482, 574, 579, 790, 813], "load_data": [1, 4, 8, 9, 12, 21, 34, 42, 71, 72, 75, 76, 77, 81, 82, 83, 84, 99, 109, 112, 113, 115, 136, 146, 151, 159, 166, 168, 172, 182, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 216, 217, 218, 219, 241, 265, 266, 267, 268, 481, 482, 868, 874, 882, 892], "plot": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 49, 51, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 122, 129, 130, 131, 132, 134, 135, 137, 140, 143, 144, 145, 146, 149, 151, 153, 154, 156, 158, 159, 160, 165, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 220, 221, 222, 224, 227, 228, 232, 235, 236, 237, 240, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 314, 315, 323, 325, 326, 330, 340, 356, 366, 376, 414, 418, 421, 429, 432, 434, 440, 443, 455, 457, 481, 482, 488, 492, 494, 497, 502, 506, 522, 526, 527, 530, 531, 540, 541, 542, 543, 545, 560, 561, 563, 564, 579, 584, 607, 620, 621, 626, 629, 631, 634, 639, 644, 651, 661, 698, 712, 713, 714, 715, 716, 728, 738, 760, 761, 762, 763, 765, 769, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 830, 847, 850, 851, 855, 867, 868, 869, 872, 874, 875, 878, 880, 881, 892], "set": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 152, 155, 156, 158, 159, 160, 161, 162, 165, 166, 168, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 218, 222, 223, 224, 227, 230, 241, 242, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 288, 289, 298, 299, 301, 303, 304, 305, 319, 327, 332, 343, 356, 357, 359, 361, 362, 363, 367, 372, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 437, 438, 439, 442, 443, 444, 447, 448, 449, 453, 455, 457, 470, 471, 472, 473, 478, 481, 482, 483, 489, 496, 497, 501, 504, 506, 511, 516, 518, 520, 522, 524, 525, 526, 527, 529, 530, 533, 534, 535, 537, 538, 542, 547, 548, 550, 551, 552, 555, 563, 564, 565, 566, 567, 569, 576, 577, 578, 579, 581, 582, 584, 587, 588, 600, 612, 617, 623, 624, 628, 629, 630, 633, 636, 639, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 677, 689, 690, 694, 696, 698, 699, 700, 701, 702, 703, 707, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 728, 730, 731, 738, 739, 740, 741, 742, 743, 747, 750, 751, 753, 758, 759, 760, 763, 777, 779, 784, 787, 788, 790, 792, 795, 796, 797, 798, 799, 803, 805, 806, 807, 812, 813, 814, 815, 816, 818, 820, 822, 823, 824, 825, 826, 829, 832, 847, 849, 850, 855, 856, 858, 869, 871, 873, 874, 877, 878, 881, 892], "channel": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 66, 68, 69, 70, 71, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 136, 137, 141, 142, 144, 146, 150, 152, 156, 157, 158, 159, 162, 165, 166, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 195, 196, 199, 203, 204, 206, 207, 209, 210, 212, 213, 214, 215, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 240, 241, 245, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 279, 280, 281, 282, 285, 286, 298, 299, 310, 312, 313, 343, 345, 347, 348, 351, 355, 356, 357, 358, 359, 360, 361, 372, 373, 374, 376, 384, 414, 416, 421, 422, 423, 425, 427, 430, 435, 439, 444, 446, 447, 452, 453, 455, 456, 457, 458, 466, 471, 476, 478, 479, 480, 481, 482, 489, 491, 492, 493, 494, 496, 497, 498, 501, 504, 505, 506, 508, 511, 519, 522, 526, 528, 532, 542, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 569, 570, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 603, 604, 605, 607, 610, 613, 614, 623, 624, 625, 626, 628, 629, 630, 631, 646, 647, 652, 653, 656, 662, 664, 665, 666, 680, 692, 698, 699, 700, 702, 703, 707, 712, 713, 714, 715, 716, 720, 721, 722, 723, 725, 729, 735, 739, 742, 743, 744, 760, 773, 776, 777, 780, 781, 782, 784, 785, 786, 789, 790, 791, 792, 794, 796, 797, 798, 799, 800, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 816, 820, 821, 822, 830, 832, 847, 849, 851, 855, 858, 869, 871, 873, 878, 881, 882, 892], "set_channel_typ": [1, 128, 140, 149, 151, 191, 216, 265, 266, 267, 268, 270, 447, 481, 482, 587, 892], "eeg058": 1, "set_eeg_refer": [1, 29, 68, 72, 93, 94, 151, 159, 162, 167, 182, 189, 204, 206, 208, 223, 242, 265, 266, 267, 268, 481, 482, 563, 653, 676, 878, 882, 892], "averag": [1, 2, 4, 5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 69, 70, 72, 73, 74, 77, 79, 80, 81, 82, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 107, 108, 110, 112, 113, 116, 117, 119, 120, 121, 124, 127, 129, 132, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 150, 152, 153, 154, 158, 159, 162, 165, 166, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 257, 258, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 287, 355, 356, 358, 375, 392, 414, 421, 428, 433, 435, 448, 455, 471, 481, 482, 506, 517, 518, 532, 533, 534, 535, 537, 538, 544, 547, 548, 563, 564, 568, 569, 571, 576, 577, 579, 581, 584, 588, 589, 592, 595, 625, 629, 630, 653, 656, 668, 676, 712, 713, 714, 715, 716, 730, 731, 739, 740, 741, 742, 743, 744, 760, 784, 792, 794, 795, 799, 803, 811, 812, 814, 815, 820, 822, 847, 867, 868, 871, 877, 878, 880, 892], "project": [1, 5, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 83, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 241, 242, 245, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 285, 286, 298, 299, 301, 303, 343, 345, 349, 356, 357, 358, 359, 361, 372, 374, 391, 422, 434, 455, 457, 458, 480, 481, 482, 502, 523, 525, 527, 530, 532, 542, 563, 564, 575, 576, 577, 578, 580, 588, 595, 599, 607, 614, 622, 631, 637, 652, 653, 656, 676, 689, 707, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 760, 776, 777, 782, 785, 792, 794, 796, 798, 799, 803, 811, 812, 813, 814, 816, 818, 823, 829, 830, 832, 843, 847, 851, 856, 858, 863, 866, 867, 868, 870, 880, 881, 882, 892], "true": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 86, 87, 88, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 222, 223, 224, 227, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 289, 298, 299, 301, 303, 304, 305, 308, 309, 310, 311, 314, 315, 316, 319, 322, 323, 324, 325, 326, 327, 340, 342, 343, 344, 345, 346, 349, 356, 360, 361, 362, 363, 365, 366, 372, 373, 374, 378, 380, 381, 382, 383, 385, 386, 387, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 432, 433, 435, 436, 439, 443, 444, 445, 446, 447, 448, 449, 452, 453, 455, 457, 458, 459, 462, 467, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 523, 524, 526, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 540, 541, 542, 544, 546, 547, 548, 549, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 573, 575, 576, 577, 579, 581, 582, 583, 584, 585, 588, 589, 590, 595, 597, 599, 614, 622, 625, 626, 629, 631, 634, 642, 644, 647, 650, 653, 655, 656, 658, 660, 661, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 682, 686, 689, 690, 693, 694, 696, 699, 700, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 721, 722, 724, 728, 729, 730, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 755, 758, 760, 765, 768, 769, 773, 774, 776, 777, 778, 779, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 828, 830, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 849, 851, 867, 868, 871, 874, 892], "show": [1, 4, 7, 8, 10, 12, 13, 14, 15, 16, 19, 22, 26, 27, 28, 29, 31, 32, 35, 37, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 58, 59, 61, 64, 69, 70, 72, 74, 75, 78, 79, 85, 97, 99, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 159, 160, 166, 168, 169, 170, 172, 176, 178, 179, 180, 181, 182, 190, 191, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 218, 219, 222, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 278, 279, 280, 281, 309, 311, 314, 315, 414, 421, 455, 473, 481, 482, 514, 555, 561, 563, 564, 579, 584, 588, 590, 711, 712, 713, 714, 716, 728, 738, 760, 768, 769, 776, 777, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 829, 847, 849, 851, 856, 859, 867, 874, 880, 892], "power": [1, 12, 21, 27, 32, 36, 38, 56, 61, 69, 72, 82, 83, 105, 106, 112, 113, 114, 115, 121, 128, 133, 137, 145, 146, 149, 150, 162, 165, 166, 172, 180, 183, 191, 195, 201, 202, 206, 209, 212, 219, 222, 225, 226, 228, 232, 233, 234, 240, 245, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 279, 280, 281, 289, 290, 291, 292, 295, 298, 299, 320, 355, 356, 360, 361, 414, 416, 419, 421, 422, 425, 427, 448, 450, 452, 453, 454, 455, 481, 482, 487, 519, 521, 526, 530, 531, 532, 537, 538, 542, 545, 547, 548, 555, 560, 561, 564, 618, 626, 631, 633, 646, 660, 666, 677, 692, 693, 694, 695, 696, 699, 700, 701, 702, 703, 712, 713, 714, 715, 716, 721, 730, 731, 739, 740, 741, 742, 743, 744, 754, 760, 776, 783, 784, 785, 791, 792, 794, 797, 799, 800, 805, 811, 814, 820, 828, 847, 851, 868, 871, 873, 877, 892], "line": [1, 71, 81, 82, 101, 109, 120, 121, 123, 127, 136, 137, 140, 141, 143, 144, 151, 152, 155, 156, 158, 160, 162, 169, 171, 172, 177, 183, 190, 191, 192, 202, 204, 207, 208, 209, 210, 211, 216, 219, 222, 229, 230, 241, 242, 245, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 337, 343, 349, 414, 421, 473, 481, 482, 514, 520, 563, 564, 579, 606, 614, 626, 633, 642, 645, 712, 714, 716, 760, 768, 773, 776, 777, 784, 785, 790, 791, 792, 794, 796, 798, 799, 800, 802, 803, 806, 807, 808, 811, 812, 813, 814, 815, 817, 818, 819, 820, 822, 823, 840, 845, 849, 850, 854, 856, 858, 863, 867, 868, 869, 871, 874, 882, 892], "interfer": [1, 123, 136, 199, 200, 203, 208, 209, 210, 212, 218, 245, 257, 578, 599, 847, 868, 871], "remov": [1, 7, 16, 18, 21, 27, 28, 31, 32, 35, 42, 51, 58, 59, 60, 68, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 85, 90, 93, 99, 103, 109, 112, 113, 119, 127, 132, 136, 140, 141, 142, 143, 146, 149, 150, 151, 157, 158, 160, 161, 162, 166, 167, 168, 170, 172, 176, 177, 180, 181, 182, 183, 184, 191, 196, 199, 200, 201, 202, 203, 204, 207, 208, 210, 212, 213, 216, 218, 219, 224, 229, 230, 231, 232, 240, 242, 245, 257, 259, 262, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 289, 304, 314, 330, 349, 356, 365, 366, 420, 422, 426, 437, 453, 457, 466, 478, 479, 481, 482, 483, 496, 500, 502, 530, 561, 562, 563, 564, 565, 578, 580, 584, 588, 606, 607, 614, 620, 629, 631, 634, 653, 656, 676, 678, 712, 714, 715, 716, 747, 760, 781, 790, 797, 813, 829, 830, 847, 851, 868, 873, 874, 877, 878, 880, 892], "compute_psd": [1, 72, 75, 109, 129, 133, 137, 140, 142, 143, 166, 167, 183, 191, 199, 201, 203, 207, 209, 211, 212, 219, 240, 241, 242, 265, 266, 267, 268, 419, 481, 482, 564, 714, 716, 730, 792, 803, 805, 814, 892], "60": [1, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 29, 30, 31, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 65, 69, 70, 71, 73, 74, 75, 77, 79, 81, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 114, 116, 117, 119, 120, 121, 123, 124, 127, 131, 132, 133, 136, 137, 140, 141, 143, 144, 149, 150, 151, 152, 159, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 191, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 216, 217, 218, 219, 223, 224, 227, 228, 230, 231, 232, 235, 237, 240, 257, 453, 481, 482, 597, 801, 868, 892], "fals": [1, 4, 5, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 58, 60, 64, 65, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 88, 90, 94, 96, 97, 99, 100, 101, 104, 107, 108, 109, 110, 112, 114, 115, 118, 119, 120, 123, 124, 126, 127, 129, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 162, 166, 167, 168, 169, 170, 171, 172, 176, 178, 180, 181, 182, 183, 185, 188, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 222, 223, 224, 228, 229, 230, 231, 232, 237, 240, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 292, 293, 296, 298, 299, 301, 303, 304, 305, 309, 310, 311, 314, 315, 316, 319, 322, 324, 325, 326, 328, 342, 344, 346, 349, 356, 361, 362, 363, 365, 366, 372, 375, 378, 380, 381, 382, 383, 385, 386, 387, 389, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 417, 419, 420, 421, 422, 424, 428, 432, 433, 435, 439, 444, 445, 446, 447, 448, 449, 455, 458, 462, 467, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 523, 526, 529, 530, 531, 532, 533, 534, 535, 537, 538, 540, 541, 542, 544, 547, 548, 549, 555, 556, 557, 559, 560, 561, 562, 563, 564, 569, 576, 577, 579, 581, 582, 584, 585, 588, 589, 590, 594, 595, 597, 599, 600, 603, 619, 622, 625, 626, 629, 631, 636, 641, 642, 644, 645, 647, 649, 650, 653, 656, 657, 658, 661, 667, 668, 669, 670, 671, 672, 673, 674, 679, 685, 688, 689, 690, 693, 696, 699, 700, 702, 703, 708, 709, 711, 712, 713, 714, 715, 716, 719, 722, 724, 728, 729, 730, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 755, 758, 760, 769, 773, 774, 776, 777, 778, 781, 784, 785, 788, 790, 791, 792, 794, 796, 798, 799, 801, 803, 805, 807, 809, 812, 813, 814, 815, 816, 818, 819, 820, 822, 823, 826, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 849, 874, 877, 892], "pick": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 127, 129, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 157, 158, 160, 162, 166, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 260, 262, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 279, 280, 281, 288, 298, 299, 312, 315, 316, 319, 329, 331, 361, 372, 416, 422, 430, 435, 439, 452, 453, 481, 482, 555, 556, 557, 558, 561, 562, 563, 564, 566, 578, 580, 581, 582, 591, 595, 605, 607, 614, 680, 698, 707, 712, 713, 714, 715, 716, 720, 721, 722, 723, 725, 729, 742, 743, 760, 774, 778, 782, 784, 790, 791, 794, 796, 797, 803, 804, 805, 807, 809, 811, 814, 816, 818, 823, 847, 851, 867, 874, 877, 878, 892], "data": [1, 2, 3, 6, 9, 10, 12, 14, 16, 17, 20, 22, 24, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 82, 83, 84, 85, 87, 88, 91, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 117, 118, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 138, 139, 143, 144, 145, 148, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 170, 171, 173, 174, 176, 179, 181, 182, 183, 184, 185, 186, 187, 194, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 210, 214, 215, 221, 225, 226, 227, 229, 230, 234, 238, 239, 241, 243, 244, 245, 252, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 312, 313, 314, 315, 316, 318, 320, 322, 326, 328, 329, 330, 331, 337, 339, 341, 343, 345, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 372, 373, 374, 376, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 466, 471, 473, 476, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 531, 532, 533, 534, 537, 538, 539, 542, 545, 546, 547, 548, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 593, 595, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 613, 614, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 637, 639, 641, 643, 644, 653, 656, 660, 661, 662, 663, 664, 665, 666, 668, 670, 671, 672, 676, 678, 680, 684, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 707, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 730, 731, 739, 740, 741, 742, 743, 744, 748, 754, 755, 760, 764, 768, 773, 775, 776, 777, 778, 779, 781, 782, 784, 785, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 830, 832, 838, 845, 846, 847, 848, 851, 852, 858, 863, 866, 869, 872, 873, 878, 879, 880, 882, 887, 892], "exclud": [1, 5, 7, 8, 9, 11, 13, 14, 15, 16, 24, 26, 28, 31, 34, 35, 40, 41, 43, 45, 49, 50, 51, 58, 59, 60, 65, 69, 70, 71, 72, 75, 79, 83, 86, 88, 92, 96, 97, 100, 104, 107, 108, 109, 110, 111, 112, 129, 133, 137, 142, 143, 144, 150, 156, 157, 158, 166, 169, 172, 176, 177, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 205, 206, 207, 208, 209, 211, 219, 222, 224, 229, 230, 231, 235, 237, 240, 241, 242, 257, 262, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 307, 308, 321, 328, 361, 367, 372, 374, 422, 433, 481, 482, 489, 496, 498, 500, 504, 527, 555, 556, 557, 559, 561, 562, 563, 564, 565, 576, 577, 578, 579, 588, 599, 614, 626, 631, 652, 656, 661, 699, 700, 702, 703, 712, 714, 715, 716, 720, 721, 722, 723, 729, 785, 794, 796, 797, 798, 804, 806, 807, 814, 867, 877, 878, 892], "bad": [1, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 49, 51, 58, 59, 60, 65, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 85, 88, 90, 92, 93, 96, 97, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 127, 128, 129, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 162, 165, 166, 167, 168, 169, 170, 172, 176, 177, 180, 181, 182, 183, 184, 185, 191, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 229, 230, 231, 232, 240, 241, 242, 257, 259, 260, 262, 265, 266, 267, 268, 270, 299, 312, 315, 316, 321, 328, 331, 361, 365, 372, 373, 374, 416, 430, 435, 443, 452, 453, 455, 471, 481, 482, 500, 523, 542, 556, 557, 558, 561, 562, 563, 564, 566, 567, 568, 571, 576, 577, 578, 580, 581, 582, 583, 588, 589, 590, 591, 599, 600, 605, 607, 614, 626, 629, 652, 653, 656, 680, 698, 712, 714, 715, 716, 720, 721, 722, 723, 725, 743, 784, 785, 790, 791, 794, 796, 797, 798, 805, 809, 813, 814, 832, 847, 858, 869, 871, 877, 892], "notch_filt": [1, 5, 82, 136, 167, 191, 203, 210, 212, 265, 266, 267, 268, 452, 481, 482, 882, 892], "arang": [1, 4, 8, 9, 15, 19, 43, 45, 69, 82, 90, 92, 94, 95, 107, 112, 114, 120, 127, 166, 191, 195, 196, 202, 211, 212, 222, 224, 227, 229, 230, 231, 232, 236, 237, 242, 271, 278, 453, 470, 481, 482, 498, 608, 704, 728, 738, 739, 740, 742, 743], "181": [1, 35, 126, 169, 191, 209, 227, 232, 245, 677, 698], "fir_design": [1, 7, 8, 9, 11, 13, 14, 15, 16, 18, 77, 88, 99, 121, 133, 191, 202, 205, 242, 265, 266, 267, 268, 416, 425, 450, 452, 453, 481, 482, 892], "firwin": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 191, 196, 202, 203, 204, 205, 210, 211, 212, 213, 232, 242, 265, 266, 267, 268, 416, 425, 450, 452, 453, 481, 482, 892], "event": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 32, 33, 34, 42, 45, 46, 49, 62, 71, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 117, 121, 128, 132, 135, 136, 140, 141, 142, 143, 145, 146, 149, 152, 153, 154, 162, 165, 169, 173, 174, 177, 180, 182, 183, 184, 185, 188, 189, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 216, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 257, 258, 259, 260, 265, 266, 267, 268, 270, 275, 284, 288, 316, 355, 356, 363, 364, 365, 371, 397, 415, 430, 435, 437, 438, 443, 455, 456, 471, 481, 482, 489, 496, 497, 498, 500, 504, 506, 511, 524, 529, 554, 555, 559, 561, 564, 565, 566, 567, 572, 576, 577, 581, 582, 589, 590, 591, 592, 593, 613, 623, 624, 625, 626, 662, 691, 698, 712, 714, 715, 760, 761, 784, 790, 791, 793, 807, 813, 821, 829, 832, 837, 847, 867, 868, 871, 874, 877, 878, 882, 892], "find_ev": [1, 5, 7, 10, 32, 33, 34, 42, 45, 46, 49, 72, 73, 74, 80, 84, 90, 93, 95, 99, 107, 108, 110, 113, 140, 141, 142, 149, 152, 162, 166, 168, 171, 172, 177, 180, 182, 183, 185, 191, 196, 200, 203, 204, 205, 207, 212, 213, 217, 223, 224, 229, 240, 241, 270, 440, 456, 489, 496, 504, 511, 524, 559, 613, 626, 847, 867, 874, 878, 882, 892], "stim_channel": [1, 5, 7, 42, 46, 80, 107, 108, 110, 113, 137, 140, 142, 149, 152, 166, 168, 177, 191, 200, 205, 207, 213, 217, 229, 240, 241, 258, 348, 455, 456, 481, 482, 489, 496, 504, 511, 591, 892], "uppt001": [1, 7, 191], "pick_typ": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 28, 31, 34, 35, 40, 45, 46, 49, 51, 58, 59, 60, 69, 70, 72, 73, 75, 82, 83, 88, 90, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 113, 119, 121, 127, 133, 136, 140, 141, 149, 150, 152, 162, 166, 168, 169, 170, 172, 176, 177, 181, 182, 183, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 211, 212, 216, 224, 229, 230, 231, 232, 235, 237, 241, 242, 265, 266, 267, 268, 481, 482, 555, 712, 714, 715, 716, 851, 874, 878, 882, 892], "info": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 80, 81, 82, 83, 84, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 133, 135, 136, 137, 140, 142, 144, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 274, 275, 276, 278, 283, 285, 286, 298, 299, 300, 307, 308, 312, 313, 315, 319, 320, 321, 322, 326, 328, 329, 331, 342, 344, 346, 351, 356, 360, 361, 367, 372, 373, 374, 376, 414, 416, 421, 422, 423, 425, 430, 433, 435, 439, 444, 445, 446, 447, 450, 452, 453, 457, 458, 465, 466, 476, 478, 479, 480, 481, 482, 483, 486, 488, 501, 519, 522, 525, 526, 527, 530, 532, 542, 555, 558, 560, 561, 562, 563, 564, 566, 568, 575, 578, 580, 581, 582, 584, 586, 588, 591, 595, 599, 603, 604, 605, 607, 614, 617, 624, 628, 646, 647, 652, 653, 656, 658, 663, 664, 665, 666, 676, 677, 680, 698, 712, 713, 714, 715, 716, 720, 721, 722, 723, 725, 743, 749, 755, 758, 760, 773, 776, 777, 780, 781, 784, 785, 786, 790, 791, 794, 795, 796, 797, 800, 802, 807, 809, 812, 813, 814, 816, 822, 830, 838, 847, 849, 851, 854, 856, 867, 868, 869, 871, 874, 880, 882, 892], "eeg": [1, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 63, 64, 65, 67, 69, 70, 73, 74, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 237, 240, 241, 245, 257, 260, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 298, 299, 301, 303, 304, 307, 308, 312, 313, 314, 316, 318, 320, 321, 325, 326, 328, 329, 330, 331, 332, 333, 336, 337, 339, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 372, 373, 374, 376, 392, 405, 406, 407, 414, 416, 418, 421, 422, 423, 429, 430, 433, 435, 438, 443, 446, 447, 455, 457, 458, 471, 473, 476, 478, 479, 481, 482, 487, 489, 491, 492, 493, 496, 497, 498, 499, 500, 502, 504, 506, 508, 509, 512, 519, 522, 524, 526, 527, 530, 531, 532, 542, 543, 545, 546, 555, 561, 562, 563, 564, 565, 566, 569, 572, 573, 576, 577, 579, 580, 581, 582, 590, 591, 595, 598, 605, 607, 614, 618, 620, 622, 623, 625, 626, 629, 630, 631, 641, 644, 652, 653, 656, 661, 665, 672, 677, 680, 698, 699, 700, 702, 703, 707, 712, 714, 715, 716, 720, 721, 722, 723, 725, 742, 743, 752, 760, 776, 777, 780, 784, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 804, 810, 811, 812, 813, 814, 815, 816, 820, 821, 822, 827, 828, 832, 847, 848, 858, 863, 866, 868, 871, 877, 878, 881, 882, 892], "stim": [1, 8, 9, 11, 14, 15, 16, 28, 42, 45, 46, 66, 70, 72, 73, 88, 90, 99, 100, 104, 107, 108, 110, 140, 141, 142, 149, 151, 166, 169, 172, 182, 188, 191, 196, 203, 204, 205, 213, 216, 217, 224, 229, 230, 231, 241, 242, 257, 258, 265, 266, 267, 268, 270, 275, 313, 351, 376, 447, 455, 456, 481, 482, 489, 496, 504, 506, 511, 561, 564, 591, 626, 662, 712, 714, 715, 716, 790, 813, 847, 874, 877, 878, 892], "epoch": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 27, 32, 33, 34, 36, 45, 46, 49, 56, 59, 62, 70, 71, 72, 73, 74, 79, 80, 83, 84, 88, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 121, 122, 128, 130, 132, 135, 136, 141, 148, 150, 162, 167, 168, 169, 170, 177, 179, 180, 181, 182, 183, 184, 185, 188, 191, 195, 196, 199, 200, 203, 206, 207, 210, 212, 213, 217, 218, 223, 224, 228, 229, 230, 231, 240, 241, 242, 252, 257, 258, 259, 260, 264, 266, 267, 268, 270, 271, 275, 276, 282, 292, 293, 296, 315, 316, 319, 355, 356, 357, 359, 360, 361, 363, 398, 414, 416, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 439, 440, 443, 444, 455, 473, 478, 481, 482, 487, 500, 517, 522, 523, 529, 530, 531, 532, 533, 534, 535, 537, 538, 545, 547, 548, 559, 561, 563, 564, 565, 566, 572, 573, 576, 577, 581, 582, 583, 587, 591, 598, 599, 614, 622, 623, 624, 625, 626, 633, 637, 653, 656, 666, 676, 697, 698, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 730, 739, 740, 741, 742, 743, 744, 760, 784, 789, 790, 791, 792, 803, 804, 805, 807, 811, 813, 814, 821, 847, 851, 868, 869, 871, 877, 878, 880, 882, 892], "baselin": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 70, 72, 73, 74, 75, 76, 79, 80, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 124, 127, 128, 132, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 160, 162, 165, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 207, 211, 212, 213, 222, 224, 228, 229, 230, 231, 232, 235, 237, 241, 242, 245, 257, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 355, 356, 361, 383, 455, 481, 482, 523, 529, 547, 548, 564, 581, 582, 606, 622, 629, 630, 697, 712, 715, 784, 800, 804, 817, 820, 838, 847, 867, 871, 874, 877, 882, 886, 892], "none": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 70, 71, 72, 74, 77, 79, 81, 82, 83, 84, 86, 87, 88, 90, 93, 94, 96, 97, 99, 100, 103, 104, 107, 109, 110, 112, 113, 114, 117, 119, 120, 121, 124, 127, 132, 135, 136, 137, 141, 142, 143, 144, 145, 149, 150, 151, 152, 158, 159, 160, 161, 162, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 195, 196, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 218, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 321, 323, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 605, 606, 607, 608, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 691, 697, 698, 699, 700, 701, 702, 703, 704, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 752, 755, 759, 760, 763, 765, 768, 769, 770, 772, 773, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 851, 867, 873, 874, 892], "preload": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 49, 68, 71, 72, 73, 74, 81, 82, 83, 84, 88, 99, 103, 107, 110, 112, 113, 114, 117, 121, 129, 133, 137, 140, 141, 142, 144, 145, 146, 149, 151, 152, 159, 166, 167, 170, 172, 180, 182, 183, 184, 185, 188, 191, 196, 199, 201, 204, 205, 206, 207, 211, 213, 216, 223, 224, 229, 230, 231, 232, 235, 237, 240, 241, 242, 257, 265, 266, 267, 268, 275, 349, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 523, 576, 577, 581, 582, 622, 624, 628, 653, 656, 712, 714, 715, 716, 790, 813, 867, 868, 892], "physiolog": [1, 8, 42, 137, 192, 203, 205, 208, 245, 265, 266, 267, 268, 383, 406, 407, 481, 482, 656, 868, 892], "artifact": [1, 7, 27, 32, 42, 71, 78, 83, 84, 85, 109, 110, 142, 144, 146, 149, 165, 166, 172, 183, 191, 192, 201, 202, 206, 208, 210, 211, 214, 215, 218, 219, 245, 259, 260, 262, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 346, 347, 357, 358, 359, 360, 361, 365, 416, 420, 427, 455, 479, 481, 482, 489, 494, 496, 510, 555, 558, 561, 563, 564, 568, 569, 571, 576, 577, 579, 581, 582, 589, 590, 591, 593, 599, 602, 606, 611, 614, 664, 665, 712, 715, 716, 737, 739, 740, 742, 743, 776, 802, 804, 811, 812, 813, 828, 832, 868, 871, 874, 880, 881, 892], "eyeblink": [1, 577, 582], "heartbeat": [1, 83, 142, 146, 201, 205, 206, 207, 208, 210, 218, 576, 581, 589, 592], "us": [1, 3, 4, 5, 7, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 36, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 63, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 95, 99, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 132, 133, 134, 135, 136, 138, 140, 141, 142, 144, 145, 150, 151, 152, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 229, 230, 232, 235, 236, 237, 240, 241, 242, 245, 258, 260, 281, 283, 285, 286, 287, 290, 292, 296, 297, 305, 306, 307, 308, 309, 310, 311, 319, 321, 322, 331, 341, 342, 348, 364, 372, 373, 375, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 416, 419, 425, 427, 439, 441, 442, 444, 445, 446, 447, 452, 453, 458, 459, 464, 465, 469, 470, 472, 474, 475, 480, 483, 485, 490, 495, 505, 507, 511, 514, 515, 535, 539, 544, 549, 550, 556, 557, 566, 570, 574, 575, 592, 593, 594, 595, 596, 597, 600, 608, 612, 614, 624, 625, 627, 630, 635, 636, 645, 647, 648, 651, 654, 657, 658, 659, 663, 675, 682, 683, 685, 686, 687, 688, 689, 694, 709, 717, 718, 719, 724, 726, 727, 729, 730, 734, 735, 737, 738, 740, 741, 745, 746, 747, 748, 749, 750, 757, 758, 762, 768, 770, 772, 775, 786, 789, 790, 792, 794, 795, 797, 799, 803, 804, 805, 806, 807, 810, 813, 814, 815, 816, 820, 821, 824, 825, 826, 829, 831, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 846, 847, 850, 852, 853, 854, 855, 856, 857, 858, 859, 862, 863, 865, 866, 868, 869, 873, 875, 878, 880, 881, 882, 892], "ssp": [1, 11, 15, 18, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 69, 70, 72, 74, 84, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 122, 130, 132, 140, 141, 142, 145, 146, 149, 151, 152, 162, 165, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 199, 200, 201, 203, 204, 205, 208, 210, 214, 215, 216, 219, 223, 232, 235, 237, 260, 262, 265, 266, 267, 268, 269, 270, 274, 275, 276, 357, 358, 359, 455, 481, 482, 523, 558, 561, 563, 576, 577, 581, 582, 589, 614, 622, 631, 637, 652, 714, 716, 792, 794, 796, 798, 799, 811, 812, 814, 832, 847, 871, 877, 880, 881, 892], "add_proj": [1, 2, 4, 5, 42, 92, 101, 109, 111, 140, 142, 146, 149, 162, 172, 184, 185, 191, 196, 199, 204, 206, 207, 211, 212, 216, 228, 265, 266, 267, 268, 275, 481, 482, 578, 676], "compute_proj_evok": [1, 206, 357, 359, 882], "copi": [1, 2, 4, 5, 8, 9, 10, 12, 18, 19, 22, 27, 38, 45, 46, 47, 48, 49, 54, 58, 62, 68, 71, 74, 75, 79, 84, 107, 109, 114, 119, 127, 136, 140, 141, 144, 149, 150, 151, 155, 161, 162, 166, 168, 169, 171, 172, 176, 178, 185, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 218, 224, 228, 231, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 288, 289, 304, 309, 311, 314, 319, 366, 373, 375, 380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 423, 436, 439, 452, 453, 481, 482, 528, 530, 544, 556, 557, 560, 563, 564, 573, 576, 577, 583, 584, 591, 595, 600, 614, 623, 650, 653, 656, 709, 712, 713, 714, 715, 716, 718, 720, 721, 722, 723, 724, 729, 746, 747, 851, 869, 871, 874, 877, 878, 892], "apply_proj": [1, 72, 94, 142, 146, 149, 159, 167, 182, 206, 207, 208, 212, 265, 266, 267, 268, 444, 445, 446, 447, 481, 482, 578, 656, 813, 892], "fix": [1, 5, 22, 31, 40, 41, 45, 47, 48, 49, 54, 55, 58, 61, 80, 90, 100, 140, 142, 158, 163, 164, 165, 168, 170, 176, 180, 196, 211, 212, 223, 245, 258, 263, 264, 267, 268, 269, 276, 298, 299, 310, 322, 356, 363, 366, 427, 455, 457, 459, 473, 476, 478, 479, 481, 520, 524, 526, 531, 532, 533, 534, 535, 542, 543, 546, 547, 548, 564, 568, 572, 597, 619, 631, 642, 652, 718, 721, 728, 738, 739, 740, 742, 743, 776, 795, 839, 840, 845, 849, 851, 856, 870, 871, 874, 877, 892], "preprocess": [1, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 88, 99, 112, 137, 144, 146, 172, 184, 188, 191, 192, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 213, 215, 219, 259, 265, 266, 267, 268, 270, 275, 355, 414, 418, 421, 423, 435, 443, 455, 481, 482, 501, 503, 510, 558, 561, 624, 716, 760, 780, 784, 790, 793, 798, 802, 803, 804, 805, 806, 807, 813, 847, 858, 868, 869, 871, 874, 878, 880, 882, 892], "fix_stim_artifact": [1, 882, 892], "correct": [1, 8, 9, 11, 12, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 70, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 127, 128, 131, 132, 135, 136, 137, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 156, 159, 160, 161, 162, 165, 166, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 213, 222, 223, 224, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 257, 259, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 288, 311, 322, 355, 356, 361, 367, 414, 420, 421, 426, 433, 435, 453, 455, 464, 481, 482, 487, 489, 493, 496, 510, 512, 529, 532, 547, 548, 561, 563, 564, 565, 574, 575, 578, 581, 582, 588, 599, 602, 606, 613, 619, 626, 629, 630, 648, 650, 667, 668, 669, 670, 671, 672, 673, 674, 690, 693, 696, 697, 698, 699, 700, 701, 712, 714, 715, 716, 724, 731, 784, 791, 792, 798, 799, 804, 812, 814, 815, 817, 820, 838, 840, 847, 849, 851, 856, 866, 867, 870, 871, 874, 886, 889, 892], "delai": [1, 4, 19, 191, 195, 206, 207, 211, 245, 258, 260, 265, 266, 267, 268, 420, 426, 431, 449, 450, 452, 453, 481, 482, 523, 622, 801, 868, 892], "due": [1, 5, 40, 43, 47, 81, 168, 189, 190, 199, 201, 202, 206, 210, 211, 212, 216, 219, 223, 242, 261, 265, 266, 267, 268, 269, 271, 406, 413, 420, 431, 435, 448, 478, 479, 481, 482, 574, 575, 588, 595, 599, 613, 633, 639, 715, 760, 841, 847, 867, 871, 874, 892], "hardwar": [1, 166, 190, 201, 208, 258, 265, 266, 270, 378, 406, 481, 482, 564, 790, 807, 813, 847, 857, 874, 877, 892], "i": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 26, 27, 28, 31, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 58, 59, 60, 61, 62, 64, 66, 68, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 126, 127, 128, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 169, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 297, 298, 299, 301, 303, 304, 306, 308, 309, 310, 314, 316, 319, 320, 322, 324, 325, 326, 327, 329, 331, 332, 333, 339, 341, 343, 344, 345, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 550, 551, 553, 554, 555, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 603, 604, 606, 607, 608, 613, 614, 616, 617, 619, 622, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 636, 639, 642, 645, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 682, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 728, 730, 731, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 750, 754, 755, 756, 758, 759, 760, 761, 763, 765, 768, 769, 770, 772, 773, 776, 777, 778, 781, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 837, 838, 840, 842, 845, 847, 850, 851, 852, 854, 855, 856, 859, 862, 863, 865, 867, 868, 869, 870, 872, 873, 875, 876, 877, 878, 879, 880, 882, 892], "4": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 123, 124, 125, 127, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 156, 157, 158, 160, 161, 162, 166, 168, 169, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 298, 299, 303, 307, 308, 314, 315, 316, 326, 337, 356, 383, 392, 414, 420, 421, 422, 427, 433, 437, 438, 449, 455, 457, 472, 478, 479, 481, 482, 520, 531, 538, 555, 556, 557, 563, 564, 569, 571, 573, 576, 578, 579, 590, 596, 598, 608, 614, 631, 633, 652, 656, 661, 665, 672, 692, 693, 696, 700, 712, 714, 715, 716, 728, 729, 731, 735, 738, 739, 740, 741, 742, 743, 744, 747, 748, 749, 750, 760, 763, 775, 776, 777, 779, 784, 790, 791, 792, 794, 796, 799, 800, 803, 810, 812, 813, 814, 815, 816, 818, 820, 822, 823, 824, 847, 849, 850, 856, 857, 867, 868, 871, 874, 877], "m": [1, 2, 4, 5, 8, 16, 18, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 70, 72, 73, 74, 79, 86, 87, 96, 97, 98, 99, 100, 101, 103, 105, 109, 110, 113, 114, 116, 119, 120, 123, 126, 127, 135, 137, 140, 141, 143, 144, 145, 149, 150, 151, 156, 157, 158, 159, 161, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 200, 201, 202, 205, 207, 209, 210, 212, 213, 217, 218, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 245, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 301, 306, 307, 327, 332, 337, 339, 341, 343, 345, 346, 347, 349, 356, 361, 367, 376, 383, 391, 406, 407, 414, 416, 418, 420, 421, 422, 425, 435, 438, 450, 452, 453, 457, 474, 475, 478, 479, 481, 482, 484, 497, 500, 519, 527, 531, 539, 542, 546, 563, 564, 566, 572, 573, 575, 578, 579, 581, 582, 585, 587, 588, 597, 599, 604, 607, 623, 661, 665, 669, 672, 674, 677, 682, 683, 684, 686, 687, 693, 698, 699, 700, 702, 703, 707, 712, 714, 715, 716, 728, 738, 741, 744, 760, 763, 777, 784, 792, 794, 795, 796, 799, 800, 803, 812, 813, 815, 818, 820, 822, 823, 824, 828, 830, 847, 851, 858, 866, 868, 874, 877, 878, 892], "shift_tim": [1, 86, 140, 264, 265, 266, 267, 268, 712, 715, 892], "004": [1, 10, 32, 33, 44, 121, 128, 140, 142, 145, 149, 166, 169, 176, 204, 224, 245, 277, 362, 527, 760], "result": [1, 8, 9, 26, 29, 30, 45, 46, 55, 58, 61, 71, 80, 83, 90, 99, 101, 103, 107, 114, 126, 127, 134, 136, 137, 144, 146, 149, 151, 155, 156, 157, 159, 160, 162, 166, 167, 170, 172, 176, 178, 188, 195, 196, 199, 202, 204, 205, 206, 207, 209, 216, 217, 219, 222, 224, 227, 228, 231, 232, 235, 236, 237, 245, 257, 259, 260, 265, 266, 267, 268, 270, 272, 273, 276, 277, 279, 280, 281, 290, 292, 299, 316, 319, 320, 355, 356, 361, 363, 365, 391, 393, 413, 415, 416, 430, 439, 448, 454, 472, 476, 478, 479, 481, 482, 498, 516, 523, 527, 531, 533, 534, 535, 537, 542, 543, 550, 564, 569, 575, 581, 582, 584, 588, 597, 599, 616, 622, 630, 653, 664, 665, 666, 675, 676, 678, 697, 698, 699, 700, 701, 702, 703, 704, 712, 714, 715, 716, 760, 768, 784, 790, 791, 813, 851, 856, 867, 868, 871, 874, 877, 892], "time_unit": [1, 11, 14, 35, 40, 42, 43, 51, 59, 60, 62, 70, 72, 86, 92, 93, 99, 100, 101, 121, 150, 151, 152, 162, 175, 177, 178, 183, 184, 185, 191, 196, 223, 228, 229, 230, 264, 267, 268, 272, 273, 276, 279, 280, 281, 784, 794, 796, 799, 800, 818, 823, 892], "": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 58, 59, 60, 62, 64, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 289, 291, 298, 299, 304, 305, 306, 323, 326, 330, 355, 356, 359, 360, 362, 368, 369, 388, 389, 391, 406, 407, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 435, 438, 444, 445, 446, 447, 448, 450, 452, 453, 454, 473, 475, 478, 479, 481, 482, 486, 489, 496, 498, 504, 505, 511, 514, 518, 522, 525, 527, 530, 531, 542, 546, 547, 548, 563, 564, 565, 566, 575, 582, 583, 584, 586, 590, 591, 598, 599, 603, 606, 629, 630, 639, 641, 642, 643, 644, 648, 649, 651, 653, 656, 657, 661, 662, 669, 672, 674, 689, 698, 699, 700, 701, 702, 703, 707, 708, 710, 712, 713, 714, 715, 716, 724, 728, 730, 731, 736, 738, 740, 741, 742, 743, 744, 747, 752, 759, 760, 768, 769, 777, 778, 784, 786, 788, 790, 791, 794, 796, 797, 799, 800, 801, 803, 807, 813, 815, 816, 818, 820, 821, 822, 823, 824, 828, 841, 842, 847, 849, 851, 855, 857, 863, 866, 867, 868, 869, 871, 873, 874, 876, 877, 878, 879, 880], "topomap": [1, 19, 42, 74, 83, 87, 119, 142, 151, 170, 204, 207, 232, 241, 262, 265, 266, 267, 268, 270, 274, 275, 314, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 790, 792, 794, 797, 799, 803, 810, 811, 812, 813, 814, 815, 816, 820, 822, 847, 892], "plot_topomap": [1, 15, 16, 18, 19, 21, 42, 71, 72, 80, 87, 100, 109, 141, 142, 144, 150, 151, 166, 170, 176, 177, 191, 199, 207, 211, 219, 232, 240, 241, 242, 262, 265, 266, 267, 268, 274, 481, 482, 564, 712, 714, 716, 780, 792, 797, 805, 882, 892], "time": [1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 141, 143, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 222, 223, 224, 227, 228, 231, 235, 236, 237, 240, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 297, 298, 343, 344, 345, 346, 347, 348, 349, 350, 352, 355, 356, 359, 361, 362, 363, 365, 376, 406, 414, 415, 416, 417, 420, 421, 423, 424, 425, 426, 427, 428, 430, 437, 438, 440, 442, 443, 448, 450, 452, 453, 455, 456, 457, 467, 472, 476, 477, 478, 479, 480, 481, 482, 494, 496, 500, 502, 510, 516, 518, 524, 525, 530, 531, 532, 534, 535, 537, 538, 539, 542, 543, 545, 547, 548, 555, 559, 561, 563, 564, 566, 567, 568, 569, 572, 573, 574, 576, 577, 579, 581, 582, 583, 585, 588, 590, 591, 597, 607, 613, 616, 620, 621, 625, 626, 629, 630, 631, 633, 639, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 686, 687, 688, 692, 697, 698, 699, 700, 701, 702, 703, 704, 705, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 728, 731, 737, 738, 739, 740, 741, 742, 743, 744, 759, 760, 764, 774, 777, 783, 784, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 807, 811, 812, 813, 814, 815, 818, 819, 820, 821, 822, 823, 824, 837, 847, 849, 850, 855, 857, 858, 863, 867, 868, 869, 871, 873, 874, 877, 878, 882, 892], "arraidirectori": [1, 12, 21, 33, 34, 81, 82, 94, 95, 116, 119, 123, 155, 156, 161, 166, 171, 172, 184, 191, 257, 263, 270, 271, 272, 275, 276, 279, 280, 281, 305, 309, 310, 311, 314, 362, 367, 368, 369, 375, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 433, 464, 466, 470, 472, 473, 474, 475, 488, 494, 508, 512, 516, 520, 522, 550, 595, 616, 630, 634, 636, 643, 649, 650, 651, 654, 660, 661, 675, 678, 689, 707, 708, 752, 760, 776, 778, 788, 818, 824, 842, 851, 854, 857, 867, 871, 892], "home": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 137, 140, 141, 143, 144, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 203, 204, 205, 206, 207, 209, 210, 211, 213, 216, 219, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 265, 266, 375, 481, 482, 790, 813, 850, 856, 892], "circleci": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 137, 140, 141, 143, 144, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 203, 204, 205, 206, 207, 209, 210, 211, 213, 216, 219, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 851], "mne_data": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 137, 141, 143, 144, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 203, 204, 205, 206, 207, 209, 210, 211, 213, 216, 219, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 380, 381, 382, 383, 385, 386, 387, 389, 390, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 851, 871, 892], "res4": [1, 12, 21, 81, 82, 119, 123, 184, 191], "read": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 146, 149, 151, 152, 156, 157, 158, 159, 160, 161, 162, 166, 167, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 222, 223, 224, 228, 229, 230, 231, 236, 241, 257, 258, 259, 260, 262, 265, 266, 267, 268, 270, 276, 278, 298, 299, 302, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 356, 360, 361, 372, 373, 374, 376, 414, 421, 422, 446, 455, 456, 457, 458, 462, 464, 467, 473, 476, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 493, 494, 495, 496, 497, 498, 501, 502, 504, 506, 507, 508, 513, 514, 530, 542, 544, 545, 553, 566, 591, 609, 610, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 651, 658, 665, 713, 732, 734, 752, 768, 776, 800, 828, 838, 839, 847, 851, 854, 859, 867, 869, 874, 875, 878, 880, 882, 892], "hc": [1, 12, 21, 81, 82, 119, 123, 184, 191], "separ": [1, 10, 12, 16, 21, 32, 33, 45, 47, 71, 75, 81, 82, 83, 94, 119, 123, 135, 140, 141, 142, 145, 146, 149, 150, 151, 155, 156, 160, 161, 162, 165, 168, 175, 184, 189, 191, 192, 196, 199, 202, 204, 205, 206, 207, 209, 214, 215, 216, 217, 218, 235, 237, 240, 245, 247, 257, 259, 260, 265, 266, 267, 268, 270, 274, 275, 298, 299, 326, 347, 349, 350, 353, 357, 358, 359, 364, 374, 389, 396, 414, 421, 435, 447, 476, 481, 482, 497, 500, 505, 522, 524, 564, 574, 575, 576, 577, 581, 588, 597, 599, 613, 623, 630, 661, 667, 668, 669, 670, 671, 672, 673, 674, 699, 700, 702, 703, 714, 715, 716, 717, 718, 719, 742, 743, 750, 760, 765, 783, 784, 790, 791, 792, 799, 800, 802, 807, 812, 813, 814, 847, 849, 851, 855, 867, 868, 869, 871, 874, 877, 880, 892], "posit": [1, 4, 12, 19, 21, 24, 27, 38, 39, 41, 45, 71, 76, 79, 80, 82, 83, 90, 93, 94, 95, 101, 112, 119, 122, 123, 127, 130, 135, 136, 150, 151, 156, 158, 159, 160, 170, 175, 176, 178, 183, 184, 185, 188, 190, 191, 199, 200, 204, 206, 210, 212, 213, 224, 227, 231, 235, 242, 245, 257, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 291, 306, 308, 314, 315, 316, 327, 330, 332, 334, 337, 340, 344, 346, 347, 352, 353, 354, 356, 368, 384, 393, 414, 417, 420, 421, 424, 426, 433, 434, 435, 442, 456, 457, 466, 473, 481, 482, 494, 497, 502, 505, 506, 513, 525, 561, 563, 564, 568, 569, 571, 579, 584, 585, 588, 590, 597, 599, 621, 623, 661, 663, 664, 665, 669, 670, 671, 672, 673, 674, 675, 677, 680, 681, 696, 712, 714, 715, 716, 727, 735, 736, 760, 761, 765, 773, 776, 777, 779, 784, 790, 791, 792, 795, 797, 798, 799, 802, 803, 809, 812, 813, 815, 816, 818, 820, 821, 822, 824, 828, 830, 847, 851, 867, 868, 874, 877, 881, 892], "file": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 56, 59, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 96, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 123, 127, 128, 129, 130, 132, 133, 135, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 174, 177, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 194, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 219, 221, 223, 224, 226, 229, 230, 231, 232, 234, 235, 237, 239, 241, 244, 252, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 302, 305, 306, 309, 310, 311, 314, 315, 320, 322, 323, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 346, 359, 364, 365, 367, 368, 369, 375, 383, 388, 389, 390, 391, 397, 406, 407, 433, 435, 443, 444, 445, 446, 447, 455, 456, 462, 463, 464, 466, 467, 471, 473, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 522, 523, 525, 526, 537, 544, 545, 549, 553, 554, 563, 564, 574, 575, 576, 577, 586, 588, 595, 599, 609, 610, 611, 612, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 654, 655, 657, 661, 663, 664, 665, 677, 680, 689, 707, 710, 711, 712, 713, 714, 715, 716, 732, 733, 734, 745, 747, 749, 754, 760, 768, 776, 778, 813, 824, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 863, 868, 878, 882, 892], "present": [1, 4, 10, 12, 13, 16, 21, 31, 40, 43, 44, 70, 82, 116, 119, 123, 126, 134, 140, 142, 144, 149, 150, 158, 166, 168, 169, 170, 180, 188, 189, 191, 192, 199, 200, 204, 206, 207, 208, 210, 213, 217, 219, 227, 231, 235, 236, 237, 245, 257, 258, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 285, 286, 289, 298, 299, 304, 309, 314, 320, 322, 326, 331, 336, 345, 349, 356, 360, 361, 362, 371, 372, 373, 374, 395, 414, 421, 433, 435, 438, 443, 455, 456, 457, 458, 462, 476, 478, 479, 481, 482, 489, 492, 496, 504, 511, 522, 530, 542, 561, 563, 564, 566, 567, 574, 575, 579, 581, 584, 589, 599, 607, 626, 627, 676, 681, 697, 712, 714, 715, 716, 730, 747, 760, 776, 777, 783, 784, 792, 794, 796, 799, 800, 803, 810, 812, 813, 814, 815, 816, 819, 820, 822, 847, 857, 867, 868, 874, 877, 892], "quaternion": [1, 12, 21, 81, 82, 119, 123, 184, 191, 352, 353, 354, 568, 571, 751, 753, 802, 892], "match": [1, 8, 9, 11, 12, 17, 18, 20, 21, 27, 28, 31, 32, 33, 34, 40, 41, 45, 46, 47, 49, 51, 58, 59, 60, 62, 70, 72, 73, 74, 75, 80, 81, 82, 83, 88, 90, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 119, 121, 123, 128, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 157, 161, 162, 166, 169, 172, 177, 180, 182, 183, 184, 185, 191, 195, 199, 200, 201, 203, 204, 207, 211, 213, 216, 217, 218, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 258, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 319, 331, 356, 360, 367, 372, 373, 414, 415, 420, 421, 422, 424, 430, 435, 438, 439, 441, 443, 445, 446, 448, 464, 480, 481, 482, 489, 496, 504, 511, 528, 550, 553, 555, 556, 557, 561, 563, 564, 573, 574, 579, 585, 588, 600, 613, 623, 625, 626, 631, 646, 649, 662, 677, 698, 703, 707, 712, 713, 714, 715, 716, 728, 729, 738, 750, 784, 790, 791, 792, 796, 799, 800, 803, 806, 812, 813, 814, 815, 838, 851, 855, 874, 892], "desir": [1, 5, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 71, 81, 82, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 112, 119, 123, 124, 127, 131, 142, 146, 151, 157, 161, 166, 168, 170, 172, 177, 178, 179, 180, 181, 184, 188, 189, 191, 195, 196, 200, 201, 202, 203, 206, 217, 223, 224, 235, 237, 258, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 362, 413, 438, 449, 481, 482, 524, 542, 563, 591, 608, 656, 712, 714, 715, 716, 728, 738, 742, 746, 760, 823, 857, 867, 869, 871, 877, 892], "v": [1, 4, 8, 9, 12, 13, 21, 24, 27, 28, 32, 43, 54, 55, 64, 66, 71, 76, 81, 82, 105, 106, 119, 123, 127, 132, 137, 141, 171, 172, 178, 184, 191, 195, 199, 202, 206, 228, 231, 232, 237, 240, 245, 257, 260, 262, 264, 265, 266, 267, 268, 270, 274, 284, 288, 289, 299, 304, 322, 346, 361, 376, 383, 420, 421, 422, 435, 481, 482, 530, 539, 564, 572, 575, 581, 582, 584, 588, 599, 606, 698, 712, 714, 715, 716, 724, 730, 739, 742, 743, 744, 747, 764, 847, 851, 855, 867, 874, 877, 892], "transform": [1, 5, 7, 8, 11, 12, 14, 16, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 75, 78, 81, 82, 83, 85, 88, 90, 92, 93, 94, 95, 103, 104, 107, 108, 109, 110, 112, 113, 115, 119, 123, 124, 125, 127, 131, 135, 145, 150, 155, 157, 158, 159, 166, 167, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 205, 208, 216, 223, 224, 240, 242, 245, 257, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 306, 314, 317, 318, 328, 356, 362, 363, 365, 367, 368, 369, 376, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 427, 428, 429, 432, 433, 435, 455, 457, 465, 473, 474, 475, 481, 482, 488, 513, 522, 525, 526, 537, 538, 547, 548, 564, 565, 568, 571, 573, 575, 588, 595, 599, 600, 631, 635, 643, 644, 651, 656, 677, 680, 697, 707, 709, 714, 716, 718, 721, 727, 728, 731, 735, 736, 737, 738, 739, 740, 741, 744, 746, 760, 776, 777, 824, 830, 838, 839, 846, 847, 858, 867, 868, 871, 881, 882, 892], "84": [1, 11, 19, 34, 35, 41, 47, 58, 81, 90, 108, 109, 112, 114, 119, 129, 136, 151, 169, 196, 200, 209, 227, 228, 229, 231, 232, 235, 236, 237, 245, 490, 603], "69": [1, 13, 15, 19, 35, 40, 47, 49, 81, 82, 103, 108, 112, 114, 119, 137, 140, 143, 169, 176, 180, 184, 185, 191, 196, 204, 209, 227, 228, 229, 231, 232, 235, 236, 237, 245, 265, 266, 298, 406], "49": [1, 5, 13, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 79, 81, 86, 87, 103, 106, 108, 112, 113, 114, 116, 119, 120, 123, 127, 137, 139, 149, 156, 157, 164, 169, 172, 176, 178, 179, 181, 184, 185, 191, 195, 196, 209, 210, 211, 213, 218, 224, 227, 228, 229, 231, 232, 236, 237, 245, 758, 850, 892], "00": [1, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 33, 34, 41, 42, 44, 45, 46, 50, 56, 59, 67, 71, 72, 73, 74, 77, 81, 82, 83, 84, 85, 88, 90, 91, 93, 96, 99, 101, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 119, 121, 123, 127, 130, 133, 136, 139, 141, 143, 144, 146, 148, 151, 154, 156, 157, 158, 159, 160, 164, 167, 168, 169, 172, 174, 176, 180, 181, 182, 183, 184, 185, 187, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 244, 245, 531, 563, 572], "mm": [1, 4, 5, 12, 21, 24, 26, 41, 44, 45, 50, 71, 72, 74, 77, 79, 80, 81, 82, 83, 90, 93, 94, 95, 109, 119, 123, 127, 136, 141, 146, 151, 156, 157, 158, 159, 160, 161, 167, 168, 176, 178, 180, 181, 182, 183, 184, 185, 191, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 223, 224, 257, 263, 270, 272, 273, 276, 279, 280, 281, 307, 337, 339, 341, 362, 367, 433, 457, 466, 472, 474, 475, 493, 497, 516, 526, 584, 586, 587, 623, 660, 661, 750, 752, 759, 760, 818, 823, 828, 867, 874, 892], "orig": [1, 12, 21, 81, 82, 119, 123, 160, 184, 191, 200, 544, 556, 557, 562], "44": [1, 13, 19, 28, 35, 41, 43, 45, 46, 47, 56, 81, 103, 108, 112, 113, 114, 116, 119, 158, 168, 169, 176, 180, 181, 184, 195, 196, 202, 209, 210, 227, 228, 229, 231, 232, 235, 236, 237, 245, 298, 299, 435, 476, 699, 700, 702, 703, 892], "30": [1, 5, 7, 8, 9, 11, 12, 13, 14, 19, 24, 28, 33, 34, 35, 41, 42, 45, 46, 47, 50, 58, 71, 74, 75, 77, 81, 82, 83, 85, 90, 92, 94, 97, 101, 103, 104, 107, 108, 109, 113, 114, 115, 119, 123, 127, 136, 146, 150, 156, 158, 160, 166, 169, 171, 172, 182, 183, 184, 187, 196, 199, 201, 202, 204, 205, 207, 208, 209, 211, 212, 213, 216, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 242, 245, 257, 265, 266, 267, 268, 276, 278, 305, 309, 337, 356, 481, 482, 514, 563, 567, 572, 588, 665, 676, 677, 714, 716, 728, 738, 739, 741, 742, 744, 764, 768, 792, 849, 867, 868, 874, 877, 892], "51": [1, 5, 8, 13, 19, 28, 34, 35, 45, 47, 71, 72, 80, 81, 82, 91, 94, 103, 108, 109, 112, 114, 119, 127, 137, 152, 156, 158, 169, 172, 184, 185, 191, 196, 201, 205, 207, 208, 209, 210, 215, 216, 227, 228, 229, 231, 232, 237, 245, 275, 383, 599, 868, 892], "45": [1, 5, 8, 9, 11, 15, 16, 19, 28, 35, 45, 50, 81, 84, 103, 108, 109, 112, 113, 114, 119, 121, 123, 141, 143, 144, 145, 149, 156, 157, 158, 168, 169, 176, 180, 181, 191, 195, 196, 202, 204, 205, 207, 208, 209, 210, 212, 215, 218, 227, 228, 229, 231, 232, 235, 237, 242, 259, 265, 266, 267, 268, 298, 299, 337, 356, 360, 361, 372, 373, 374, 414, 421, 449, 457, 458, 476, 478, 479, 481, 482, 542, 564, 693, 714, 716, 764, 792, 800, 874, 892], "252": [1, 35, 80, 85, 119, 123, 169, 196, 209, 227, 231, 232], "43": [1, 9, 13, 19, 26, 28, 34, 35, 41, 45, 46, 47, 48, 50, 54, 55, 81, 82, 96, 103, 107, 108, 112, 114, 119, 123, 145, 148, 157, 158, 169, 176, 181, 182, 196, 209, 227, 228, 229, 230, 231, 232, 236, 237, 245, 265, 266, 337, 714, 715], "diff": [1, 9, 12, 21, 71, 81, 82, 119, 123, 134, 176, 183, 184, 191, 216, 235, 768, 851, 859], "000": [1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 34, 42, 59, 64, 66, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 88, 90, 93, 94, 95, 99, 109, 112, 113, 114, 115, 119, 120, 121, 123, 128, 129, 130, 133, 136, 137, 140, 141, 142, 143, 144, 146, 149, 151, 152, 159, 166, 167, 168, 172, 179, 181, 182, 183, 184, 185, 190, 191, 194, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 224, 228, 230, 231, 232, 241, 506, 625], "46": [1, 12, 13, 19, 21, 28, 33, 34, 35, 40, 45, 47, 51, 55, 60, 73, 81, 103, 108, 112, 114, 119, 123, 149, 150, 154, 169, 195, 196, 201, 202, 204, 209, 218, 227, 228, 229, 231, 232, 235, 236, 237, 245, 874, 892], "28": [1, 11, 13, 18, 19, 26, 28, 34, 35, 41, 45, 47, 50, 77, 81, 85, 96, 103, 108, 109, 114, 119, 140, 158, 169, 171, 176, 181, 182, 183, 184, 185, 195, 196, 201, 203, 209, 227, 228, 229, 231, 232, 235, 236, 237, 241, 245, 337, 892], "53": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 74, 77, 81, 82, 83, 84, 88, 94, 99, 103, 108, 113, 114, 115, 119, 121, 123, 130, 133, 136, 141, 144, 145, 146, 151, 155, 162, 169, 184, 191, 196, 202, 203, 204, 205, 209, 210, 211, 212, 213, 218, 227, 228, 229, 231, 232, 236, 237, 245, 693, 871], "58": [1, 11, 13, 19, 35, 40, 45, 47, 48, 49, 54, 55, 57, 58, 59, 79, 81, 90, 93, 94, 103, 108, 109, 112, 114, 116, 119, 121, 127, 136, 137, 149, 151, 152, 162, 169, 172, 174, 178, 182, 191, 194, 195, 196, 199, 205, 207, 209, 216, 227, 228, 231, 232, 234, 235, 245, 356, 874, 892], "243": [1, 81, 100, 102, 119, 169, 191, 196, 231, 232], "47": [1, 10, 13, 16, 19, 20, 28, 33, 35, 45, 51, 81, 84, 103, 108, 112, 114, 119, 137, 159, 168, 169, 176, 181, 183, 191, 194, 195, 196, 209, 218, 227, 228, 229, 231, 232, 235, 236, 237, 245, 301, 337, 407, 867, 868, 874], "86": [1, 5, 12, 13, 15, 19, 26, 34, 35, 40, 41, 47, 50, 81, 103, 108, 112, 114, 119, 137, 140, 151, 156, 157, 158, 168, 169, 172, 176, 181, 182, 184, 195, 196, 203, 205, 207, 208, 209, 212, 217, 227, 228, 229, 230, 231, 232, 237, 245, 421, 726, 728, 738, 742, 866], "41": [1, 19, 28, 34, 35, 41, 44, 45, 47, 56, 81, 82, 103, 104, 106, 108, 109, 114, 119, 146, 148, 168, 169, 171, 183, 184, 191, 196, 205, 207, 208, 209, 216, 227, 228, 229, 231, 232, 235, 236, 237, 242, 245, 277, 362, 406, 414, 892], "63": [1, 19, 35, 45, 47, 71, 81, 82, 101, 103, 108, 114, 117, 119, 137, 143, 169, 184, 185, 191, 195, 196, 209, 227, 228, 229, 231, 232, 235, 236, 237, 892], "55": [1, 11, 13, 19, 21, 28, 30, 31, 32, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 54, 55, 57, 58, 61, 79, 81, 86, 87, 101, 103, 108, 109, 112, 114, 116, 119, 120, 124, 127, 143, 149, 151, 160, 169, 172, 177, 178, 180, 181, 195, 196, 204, 205, 207, 209, 211, 215, 218, 227, 228, 229, 231, 232, 235, 236, 237, 245, 414, 422, 531, 563, 564, 614, 849, 892], "82": [1, 13, 15, 19, 35, 46, 81, 103, 112, 114, 119, 145, 169, 171, 180, 181, 184, 191, 195, 196, 209, 227, 228, 229, 231, 232, 236, 237, 241, 406, 449], "230": [1, 81, 88, 119, 169, 227, 231, 232], "26": [1, 5, 11, 13, 16, 19, 28, 32, 34, 35, 44, 45, 47, 56, 65, 67, 81, 82, 101, 103, 108, 109, 114, 119, 136, 137, 145, 152, 154, 158, 160, 169, 171, 178, 183, 184, 185, 187, 191, 195, 196, 209, 227, 228, 229, 231, 232, 235, 236, 237, 241, 244, 245, 277, 278, 362, 397, 531, 868], "coordin": [1, 5, 11, 12, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 72, 81, 82, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 115, 119, 123, 124, 127, 131, 135, 136, 150, 158, 159, 163, 164, 165, 166, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 192, 196, 208, 210, 212, 213, 223, 224, 235, 237, 245, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 278, 280, 281, 304, 306, 307, 308, 314, 317, 318, 323, 327, 330, 332, 333, 335, 337, 341, 366, 367, 369, 393, 414, 421, 433, 435, 457, 465, 473, 474, 475, 478, 481, 482, 485, 488, 492, 493, 506, 513, 515, 522, 527, 563, 564, 575, 579, 584, 588, 599, 631, 641, 642, 644, 645, 661, 665, 689, 692, 712, 714, 716, 746, 747, 759, 760, 761, 776, 777, 778, 784, 788, 792, 794, 796, 798, 799, 800, 802, 803, 810, 812, 814, 815, 816, 820, 822, 828, 830, 839, 840, 845, 847, 868, 892], "establish": [1, 12, 21, 81, 82, 119, 123, 184, 188, 191, 202, 232, 245, 699, 700, 702, 703], "digit": [1, 72, 74, 77, 81, 82, 83, 90, 93, 118, 119, 123, 127, 141, 146, 151, 156, 157, 159, 160, 167, 168, 169, 171, 182, 185, 188, 189, 191, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 245, 257, 258, 262, 264, 265, 266, 267, 268, 270, 274, 307, 308, 314, 327, 328, 330, 332, 335, 336, 339, 341, 343, 344, 346, 367, 414, 421, 433, 435, 455, 473, 481, 482, 485, 488, 494, 506, 515, 522, 527, 563, 564, 573, 574, 575, 579, 588, 599, 625, 626, 661, 712, 714, 715, 716, 760, 776, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 830, 847, 867, 868, 877, 892], "point": [1, 5, 8, 9, 11, 12, 16, 18, 21, 22, 26, 27, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 49, 54, 55, 56, 58, 61, 72, 73, 74, 77, 81, 82, 83, 90, 93, 94, 96, 97, 100, 101, 103, 107, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 123, 127, 128, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 298, 299, 307, 308, 314, 317, 318, 323, 327, 332, 336, 337, 338, 339, 341, 344, 350, 352, 356, 361, 362, 366, 367, 369, 413, 414, 415, 416, 420, 421, 423, 430, 433, 435, 448, 450, 452, 455, 473, 475, 476, 480, 481, 482, 484, 485, 488, 494, 501, 506, 515, 525, 526, 527, 530, 531, 540, 541, 542, 543, 545, 546, 563, 564, 566, 574, 575, 578, 579, 584, 588, 599, 620, 624, 625, 628, 629, 631, 634, 639, 642, 645, 656, 660, 661, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 686, 688, 697, 698, 699, 700, 702, 703, 704, 712, 713, 714, 715, 716, 730, 731, 760, 761, 764, 765, 776, 777, 778, 779, 784, 788, 792, 794, 795, 796, 797, 799, 800, 803, 804, 807, 810, 812, 814, 815, 816, 818, 819, 820, 822, 823, 824, 828, 840, 845, 847, 851, 867, 869, 871, 873, 877, 880, 892], "subj00111092011": [1, 119], "po": [1, 19, 41, 47, 50, 80, 81, 82, 84, 93, 115, 119, 136, 151, 156, 176, 183, 184, 185, 191, 208, 210, 263, 267, 268, 271, 272, 273, 276, 279, 280, 281, 306, 315, 340, 353, 354, 434, 457, 474, 475, 494, 568, 571, 633, 661, 802, 822, 877, 892], "polhemu": [1, 12, 21, 81, 82, 119, 123, 156, 170, 184, 191, 270, 314, 339, 341, 494, 506, 874, 877, 892], "hpi": [1, 12, 21, 81, 82, 119, 123, 156, 166, 169, 170, 184, 188, 191, 199, 210, 216, 257, 265, 266, 267, 268, 270, 307, 308, 314, 317, 327, 337, 339, 343, 344, 345, 348, 349, 350, 367, 433, 434, 481, 482, 488, 506, 561, 568, 712, 714, 715, 716, 783, 847, 874, 877, 881, 892], "coil": [1, 5, 12, 21, 26, 41, 45, 50, 81, 82, 109, 119, 123, 124, 150, 156, 158, 159, 176, 181, 182, 183, 184, 185, 188, 191, 199, 208, 209, 210, 257, 265, 266, 267, 268, 270, 322, 337, 343, 344, 346, 347, 348, 350, 351, 434, 457, 481, 482, 488, 506, 561, 574, 575, 578, 599, 610, 625, 653, 712, 714, 715, 716, 754, 783, 847, 881, 892], "ad": [1, 4, 5, 11, 12, 21, 22, 27, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 68, 69, 71, 72, 81, 82, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 119, 120, 123, 124, 127, 131, 140, 141, 142, 146, 151, 156, 158, 159, 160, 161, 162, 166, 170, 175, 177, 178, 179, 181, 182, 184, 191, 196, 201, 205, 207, 208, 210, 218, 219, 222, 223, 224, 227, 228, 235, 237, 257, 259, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 314, 340, 343, 345, 349, 362, 363, 374, 414, 421, 435, 458, 480, 481, 482, 505, 519, 524, 525, 526, 529, 563, 564, 566, 579, 581, 621, 656, 661, 662, 666, 676, 704, 707, 712, 714, 715, 716, 756, 760, 763, 765, 777, 778, 784, 788, 789, 792, 794, 796, 799, 800, 803, 807, 810, 812, 814, 815, 816, 818, 820, 822, 823, 851, 868, 874, 877, 880, 892], "devic": [1, 5, 12, 21, 26, 41, 45, 50, 72, 80, 81, 82, 109, 119, 123, 150, 156, 158, 165, 166, 169, 170, 171, 176, 181, 183, 184, 185, 191, 193, 194, 206, 208, 212, 213, 216, 257, 259, 267, 268, 270, 307, 314, 317, 330, 363, 365, 376, 379, 435, 446, 473, 481, 482, 488, 489, 491, 493, 496, 497, 498, 499, 500, 502, 504, 508, 509, 510, 512, 513, 568, 571, 587, 599, 600, 613, 623, 656, 760, 776, 795, 838, 847, 863, 867, 868, 877, 892], "locat": [1, 4, 5, 12, 21, 26, 27, 31, 35, 40, 41, 45, 47, 48, 49, 50, 55, 59, 61, 68, 69, 78, 80, 81, 82, 90, 93, 94, 95, 100, 109, 115, 118, 119, 123, 124, 135, 136, 137, 138, 141, 149, 150, 155, 156, 158, 159, 160, 161, 163, 165, 166, 171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 200, 206, 208, 209, 210, 212, 213, 216, 222, 223, 224, 227, 228, 229, 231, 232, 237, 242, 245, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 298, 299, 308, 309, 310, 314, 315, 318, 320, 323, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 340, 344, 346, 347, 348, 356, 369, 380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 421, 434, 435, 444, 447, 455, 465, 470, 481, 482, 491, 493, 501, 506, 513, 516, 526, 530, 531, 540, 541, 542, 546, 550, 563, 564, 568, 579, 590, 593, 594, 599, 610, 624, 625, 628, 633, 634, 650, 651, 653, 661, 664, 665, 675, 678, 699, 700, 702, 703, 704, 712, 714, 716, 752, 760, 776, 777, 781, 784, 788, 792, 794, 798, 799, 802, 803, 812, 813, 814, 815, 816, 820, 822, 828, 830, 847, 852, 857, 867, 868, 871, 877, 880, 881, 892], "measur": [1, 4, 5, 12, 21, 26, 41, 45, 50, 72, 74, 77, 80, 81, 82, 83, 90, 93, 103, 109, 119, 123, 127, 141, 144, 145, 146, 156, 158, 159, 162, 165, 166, 167, 168, 169, 170, 172, 176, 182, 184, 188, 189, 190, 191, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 232, 233, 234, 238, 239, 241, 242, 245, 258, 260, 262, 264, 265, 266, 267, 268, 269, 270, 274, 276, 278, 285, 286, 298, 299, 300, 307, 308, 312, 313, 320, 321, 322, 326, 328, 329, 342, 344, 346, 348, 351, 356, 360, 361, 362, 367, 372, 373, 374, 376, 414, 416, 418, 421, 422, 423, 433, 445, 446, 447, 457, 458, 465, 476, 478, 479, 480, 481, 482, 483, 486, 494, 496, 510, 519, 522, 525, 526, 527, 530, 531, 532, 539, 540, 541, 542, 545, 560, 561, 564, 575, 578, 595, 599, 600, 603, 604, 605, 626, 641, 646, 647, 656, 668, 669, 676, 677, 680, 684, 693, 694, 695, 696, 700, 703, 704, 712, 713, 714, 715, 716, 742, 749, 760, 773, 776, 777, 780, 785, 786, 800, 802, 811, 812, 816, 838, 847, 859, 867, 868, 874, 877, 880, 892], "compos": [1, 12, 21, 26, 41, 45, 50, 81, 82, 109, 119, 123, 137, 158, 176, 184, 188, 191, 196, 867, 877], "find": [1, 5, 7, 11, 12, 19, 21, 27, 28, 29, 30, 38, 39, 44, 47, 48, 49, 50, 52, 57, 58, 61, 69, 70, 78, 81, 82, 83, 85, 104, 107, 108, 110, 119, 123, 124, 127, 128, 136, 140, 141, 145, 150, 151, 155, 156, 157, 161, 166, 170, 172, 175, 176, 180, 181, 184, 191, 196, 199, 201, 202, 205, 210, 218, 224, 227, 228, 229, 237, 242, 245, 263, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 320, 357, 358, 359, 367, 448, 453, 455, 456, 481, 482, 501, 531, 561, 564, 567, 570, 576, 577, 579, 580, 581, 582, 588, 589, 590, 592, 593, 594, 608, 624, 628, 649, 671, 675, 678, 689, 760, 797, 799, 847, 849, 851, 854, 855, 856, 857, 866, 868, 871, 874, 875, 877, 892], "sampl": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 65, 66, 69, 70, 72, 73, 74, 77, 79, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 217, 218, 219, 222, 223, 224, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 245, 257, 258, 259, 260, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 297, 320, 356, 362, 364, 376, 389, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 431, 435, 438, 440, 442, 443, 449, 450, 451, 452, 453, 455, 456, 479, 480, 481, 482, 489, 496, 504, 524, 526, 534, 540, 541, 559, 561, 564, 566, 569, 578, 581, 582, 607, 613, 617, 624, 625, 626, 639, 641, 646, 662, 667, 668, 669, 670, 671, 672, 673, 674, 677, 678, 679, 684, 692, 694, 698, 699, 700, 701, 702, 703, 704, 705, 706, 712, 713, 715, 717, 718, 719, 720, 721, 722, 723, 727, 728, 730, 731, 735, 736, 738, 739, 740, 741, 742, 758, 760, 790, 792, 793, 801, 813, 818, 823, 824, 826, 837, 847, 851, 867, 871, 872, 874, 875, 877, 882, 892], "meg4": [1, 12, 21, 81, 82, 119, 123, 184, 191], "system": [1, 5, 8, 10, 12, 19, 21, 27, 63, 71, 75, 80, 81, 82, 109, 116, 119, 122, 124, 129, 130, 136, 137, 150, 151, 155, 156, 158, 159, 160, 166, 168, 169, 170, 172, 178, 183, 184, 185, 189, 191, 192, 195, 199, 200, 205, 206, 207, 208, 210, 212, 213, 216, 217, 218, 227, 240, 245, 264, 265, 266, 267, 268, 270, 275, 278, 280, 281, 285, 286, 301, 314, 317, 322, 325, 330, 332, 333, 335, 336, 337, 339, 341, 366, 367, 369, 376, 383, 420, 434, 449, 451, 463, 474, 475, 476, 481, 482, 488, 489, 490, 492, 493, 494, 506, 516, 527, 561, 564, 566, 597, 599, 616, 646, 664, 665, 666, 675, 676, 678, 698, 699, 700, 701, 702, 703, 711, 712, 714, 715, 716, 724, 730, 746, 776, 777, 790, 793, 798, 801, 807, 813, 821, 827, 828, 840, 847, 849, 850, 851, 852, 854, 855, 856, 863, 867, 868, 870, 877, 880, 892], "clock": [1, 12, 21, 81, 82, 119, 123, 184, 191, 481, 482, 494, 564, 613, 807, 813, 868, 892], "avail": [1, 2, 5, 7, 8, 12, 19, 21, 22, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 69, 72, 74, 77, 79, 81, 82, 83, 86, 87, 90, 92, 93, 94, 95, 101, 109, 116, 119, 120, 123, 127, 131, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 159, 162, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 184, 188, 189, 191, 192, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 228, 240, 257, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 305, 307, 308, 314, 334, 340, 375, 377, 383, 406, 407, 413, 414, 420, 421, 426, 433, 440, 462, 478, 481, 482, 522, 540, 541, 555, 556, 557, 563, 564, 579, 629, 636, 677, 708, 712, 713, 714, 716, 729, 742, 760, 777, 784, 790, 792, 794, 796, 799, 800, 803, 807, 810, 812, 813, 814, 815, 816, 818, 820, 822, 823, 831, 832, 847, 849, 851, 852, 857, 858, 859, 862, 865, 868, 871, 874, 875, 876, 877, 880, 892], "check": [1, 5, 12, 21, 26, 41, 43, 45, 50, 62, 71, 81, 82, 109, 119, 120, 121, 123, 125, 135, 137, 140, 142, 143, 144, 157, 158, 159, 161, 166, 168, 170, 171, 172, 175, 176, 181, 182, 184, 191, 200, 202, 205, 206, 216, 217, 219, 227, 228, 241, 260, 262, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 320, 322, 389, 395, 433, 447, 450, 480, 481, 482, 489, 492, 539, 553, 564, 572, 574, 699, 700, 702, 703, 712, 714, 715, 716, 746, 760, 776, 794, 796, 797, 798, 799, 830, 849, 850, 851, 867, 868, 871, 880, 892], "which": [1, 4, 5, 12, 16, 18, 19, 21, 26, 31, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 61, 71, 75, 80, 81, 82, 83, 88, 94, 101, 103, 109, 112, 114, 115, 116, 119, 120, 123, 127, 128, 134, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 178, 180, 182, 184, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 291, 298, 299, 307, 308, 314, 316, 323, 330, 332, 333, 334, 335, 336, 342, 343, 345, 349, 351, 355, 356, 361, 362, 365, 369, 375, 376, 383, 389, 406, 414, 416, 421, 422, 425, 431, 433, 435, 438, 440, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 465, 472, 473, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 516, 517, 518, 522, 523, 525, 531, 532, 540, 541, 544, 545, 549, 553, 563, 564, 565, 566, 572, 574, 575, 578, 579, 581, 582, 583, 584, 588, 595, 597, 599, 604, 613, 616, 622, 624, 628, 629, 630, 631, 633, 634, 636, 641, 642, 645, 646, 647, 648, 650, 651, 653, 654, 656, 661, 662, 666, 669, 672, 674, 675, 678, 680, 681, 689, 691, 692, 698, 704, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 728, 731, 734, 738, 739, 740, 742, 743, 745, 747, 750, 760, 761, 763, 765, 766, 775, 776, 778, 781, 783, 784, 786, 788, 790, 791, 792, 794, 795, 798, 799, 803, 805, 807, 812, 813, 814, 818, 820, 823, 827, 828, 830, 838, 839, 840, 842, 844, 845, 846, 847, 849, 851, 852, 854, 855, 856, 859, 863, 865, 866, 867, 868, 869, 871, 873, 874, 877, 878, 880, 890, 892], "ar": [1, 4, 5, 11, 12, 14, 15, 16, 18, 19, 21, 24, 26, 27, 31, 32, 33, 34, 38, 41, 43, 45, 46, 47, 50, 59, 68, 71, 75, 76, 77, 81, 82, 83, 84, 87, 88, 94, 99, 101, 103, 104, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 128, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 285, 286, 289, 290, 292, 298, 299, 304, 305, 307, 308, 309, 310, 312, 314, 315, 316, 318, 319, 322, 324, 325, 326, 327, 330, 331, 332, 334, 336, 337, 340, 343, 344, 345, 349, 355, 356, 360, 361, 362, 363, 365, 367, 372, 373, 374, 376, 389, 390, 397, 406, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 435, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 464, 466, 467, 471, 472, 473, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 500, 502, 504, 506, 507, 508, 509, 510, 511, 512, 513, 516, 519, 522, 523, 525, 527, 529, 530, 539, 540, 541, 542, 543, 546, 548, 553, 556, 557, 559, 560, 561, 563, 564, 565, 566, 567, 569, 571, 572, 574, 579, 580, 581, 582, 584, 588, 589, 591, 594, 598, 599, 600, 603, 604, 605, 607, 608, 610, 614, 616, 617, 619, 622, 623, 624, 625, 626, 629, 631, 634, 637, 639, 646, 648, 649, 650, 651, 652, 653, 656, 658, 661, 662, 664, 665, 668, 669, 672, 674, 675, 677, 678, 680, 683, 684, 686, 687, 688, 693, 694, 697, 698, 699, 700, 701, 702, 703, 704, 708, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 729, 730, 731, 736, 739, 740, 741, 742, 743, 745, 747, 750, 755, 760, 761, 765, 775, 776, 777, 778, 781, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 830, 837, 839, 840, 841, 842, 847, 849, 851, 852, 854, 855, 856, 857, 858, 859, 863, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 878, 879, 880, 882, 892], "valid": [1, 8, 9, 10, 11, 12, 15, 16, 21, 75, 81, 82, 111, 119, 121, 123, 137, 162, 171, 177, 184, 190, 191, 196, 202, 211, 227, 242, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 327, 340, 356, 361, 406, 414, 420, 421, 430, 431, 435, 446, 448, 455, 462, 466, 481, 482, 540, 541, 563, 564, 566, 579, 581, 582, 642, 656, 694, 699, 700, 702, 703, 712, 714, 715, 716, 737, 747, 760, 763, 776, 777, 784, 791, 792, 793, 794, 796, 798, 799, 803, 812, 815, 818, 820, 821, 822, 823, 845, 851, 857, 858, 867, 871, 874, 892], "240": [1, 24, 35, 42, 46, 76, 81, 85, 109, 119, 169, 171, 181, 199, 203, 209, 227, 231, 232, 241], "x": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 68, 69, 70, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 192, 195, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 219, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 242, 245, 257, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 278, 279, 280, 281, 289, 304, 314, 315, 337, 346, 347, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 452, 453, 454, 481, 482, 492, 493, 530, 531, 539, 563, 564, 565, 573, 579, 584, 586, 587, 608, 631, 664, 685, 688, 693, 697, 698, 699, 700, 701, 702, 703, 705, 712, 714, 716, 717, 718, 719, 724, 726, 727, 728, 730, 731, 735, 737, 738, 742, 747, 750, 751, 753, 760, 761, 764, 777, 779, 781, 784, 792, 794, 796, 798, 799, 800, 801, 802, 803, 808, 810, 812, 814, 815, 816, 818, 820, 822, 823, 824, 826, 828, 839, 847, 851, 857, 868, 874, 877, 892], "1800": [1, 119, 192], "432000": [1, 119], "302": [1, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 76, 83, 84, 85, 93, 94, 104, 107, 108, 110, 119, 121, 152, 162, 166, 169, 172, 176, 177, 178, 179, 180, 181, 209, 223, 232, 235, 237, 877], "ch": [1, 2, 8, 12, 21, 69, 81, 82, 112, 115, 119, 120, 123, 136, 137, 141, 149, 151, 166, 169, 170, 184, 191, 205, 216, 222, 224, 245, 257, 270, 321, 322, 383, 406, 407, 481, 482, 830, 847, 868, 892], "current": [1, 12, 21, 22, 27, 29, 30, 31, 34, 41, 42, 44, 59, 78, 79, 81, 82, 85, 94, 119, 123, 140, 149, 161, 162, 165, 166, 171, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 200, 202, 210, 212, 218, 224, 235, 237, 245, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 285, 286, 298, 299, 320, 322, 328, 355, 362, 367, 375, 376, 379, 420, 435, 438, 447, 452, 454, 455, 457, 476, 480, 481, 482, 487, 492, 496, 511, 525, 526, 531, 534, 564, 573, 575, 576, 577, 588, 599, 629, 636, 656, 676, 693, 695, 712, 714, 715, 716, 737, 760, 767, 769, 770, 771, 772, 773, 777, 781, 784, 790, 813, 822, 823, 830, 847, 851, 854, 857, 859, 867, 868, 871, 873, 877, 880, 892], "compens": [1, 2, 12, 21, 27, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 78, 79, 81, 82, 85, 86, 87, 101, 116, 119, 120, 123, 127, 140, 143, 149, 172, 176, 178, 179, 181, 184, 185, 191, 192, 202, 209, 227, 228, 245, 257, 260, 265, 266, 267, 268, 270, 353, 367, 435, 437, 449, 450, 452, 453, 455, 480, 481, 482, 494, 502, 526, 561, 564, 575, 588, 595, 599, 629, 677, 712, 714, 715, 716, 801, 802, 892], "grade": [1, 12, 21, 24, 41, 71, 81, 82, 101, 109, 119, 123, 158, 161, 184, 188, 191, 235, 237, 260, 265, 266, 267, 268, 270, 271, 469, 470, 480, 481, 482, 564, 712, 714, 715, 716, 892], "144000": [1, 81], "sec": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 127, 129, 132, 133, 135, 136, 137, 141, 144, 146, 149, 151, 152, 156, 159, 162, 166, 167, 168, 169, 172, 177, 179, 180, 181, 182, 183, 184, 185, 190, 196, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 223, 224, 229, 230, 231, 232, 235, 237, 241, 270, 877, 892], "type": [1, 2, 5, 15, 16, 22, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 68, 72, 76, 78, 79, 81, 82, 83, 85, 86, 90, 93, 94, 95, 103, 109, 113, 114, 115, 116, 118, 119, 120, 123, 124, 127, 128, 131, 135, 136, 137, 141, 142, 143, 144, 145, 146, 149, 150, 156, 157, 158, 159, 162, 166, 167, 168, 170, 171, 172, 176, 178, 179, 180, 181, 182, 183, 185, 188, 190, 192, 196, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 217, 219, 222, 223, 224, 227, 231, 232, 240, 241, 258, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 298, 299, 310, 312, 313, 315, 316, 319, 320, 321, 322, 323, 329, 331, 337, 345, 356, 357, 358, 359, 360, 361, 371, 372, 373, 374, 376, 383, 389, 406, 407, 414, 416, 421, 423, 430, 435, 438, 439, 446, 447, 449, 452, 453, 454, 455, 457, 458, 459, 464, 471, 476, 478, 479, 480, 481, 482, 489, 496, 501, 508, 513, 514, 522, 542, 554, 561, 562, 563, 564, 565, 566, 569, 573, 575, 578, 579, 580, 581, 582, 587, 588, 590, 591, 595, 599, 605, 607, 614, 624, 626, 628, 629, 652, 653, 656, 663, 664, 665, 677, 680, 683, 692, 698, 699, 700, 702, 703, 707, 712, 713, 714, 715, 716, 720, 721, 722, 723, 725, 743, 746, 760, 775, 779, 783, 784, 785, 786, 788, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 811, 812, 813, 814, 815, 816, 818, 820, 821, 822, 823, 824, 826, 833, 847, 849, 850, 856, 857, 858, 862, 867, 869, 871, 875, 877, 878, 892], "select": [1, 5, 7, 11, 15, 21, 24, 28, 29, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 60, 68, 72, 73, 75, 77, 82, 83, 88, 90, 93, 94, 95, 99, 103, 109, 112, 113, 119, 120, 121, 128, 137, 141, 142, 144, 150, 151, 158, 159, 161, 162, 166, 167, 169, 170, 172, 175, 177, 178, 179, 180, 181, 182, 189, 191, 196, 199, 200, 201, 202, 204, 207, 208, 210, 217, 218, 219, 223, 224, 228, 232, 236, 237, 240, 241, 242, 245, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 275, 276, 280, 321, 326, 356, 367, 416, 422, 445, 452, 473, 478, 481, 482, 487, 516, 556, 557, 559, 560, 561, 562, 564, 565, 569, 578, 579, 581, 582, 592, 593, 608, 634, 646, 653, 656, 675, 678, 698, 712, 713, 714, 715, 716, 723, 729, 777, 784, 790, 794, 796, 798, 799, 800, 803, 805, 807, 813, 816, 818, 822, 825, 829, 847, 851, 854, 867, 871, 874, 878, 892], "re": [1, 4, 29, 45, 68, 72, 93, 94, 101, 103, 113, 114, 120, 127, 140, 141, 144, 151, 156, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 182, 189, 200, 201, 202, 204, 205, 206, 207, 208, 216, 218, 223, 229, 231, 237, 242, 245, 257, 259, 262, 265, 266, 267, 268, 270, 274, 282, 315, 319, 414, 421, 439, 481, 482, 506, 556, 557, 560, 562, 563, 564, 573, 625, 653, 656, 661, 712, 714, 715, 716, 723, 729, 746, 777, 792, 799, 803, 812, 815, 817, 820, 822, 851, 855, 856, 859, 869, 871, 872, 874, 880, 892], "referenc": [1, 27, 29, 72, 78, 85, 93, 94, 140, 150, 151, 159, 162, 167, 182, 189, 200, 204, 208, 223, 227, 259, 265, 266, 267, 268, 270, 282, 326, 481, 482, 487, 653, 656, 712, 714, 715, 716, 794, 847, 851, 874, 878, 881, 892], "item": [1, 8, 11, 12, 13, 14, 15, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 156, 157, 158, 159, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 258, 262, 263, 265, 266, 270, 274, 278, 284, 289, 304, 481, 482, 530, 584, 714, 715, 716, 747, 760, 857, 877, 892], "deactiv": [1, 29, 42, 51, 60, 69, 72, 92, 93, 94, 111, 142, 146, 159, 162, 182, 191, 206, 207, 208, 212, 223, 781, 849, 859], "wa": [1, 5, 7, 13, 18, 21, 33, 61, 66, 72, 94, 115, 140, 144, 149, 151, 158, 159, 160, 166, 167, 168, 170, 171, 181, 182, 183, 189, 191, 192, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 218, 219, 222, 230, 231, 232, 242, 258, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 286, 298, 299, 334, 349, 393, 413, 414, 421, 436, 438, 478, 481, 482, 498, 501, 510, 516, 526, 537, 538, 540, 541, 546, 547, 548, 563, 564, 565, 576, 577, 582, 584, 586, 588, 589, 590, 599, 606, 624, 628, 649, 661, 664, 665, 697, 707, 712, 713, 714, 715, 716, 728, 732, 738, 760, 776, 777, 792, 794, 799, 803, 812, 815, 820, 822, 825, 829, 847, 850, 851, 856, 857, 858, 868, 873, 874, 877, 880, 892], "been": [1, 9, 10, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 72, 75, 79, 80, 84, 86, 87, 94, 116, 119, 120, 127, 140, 142, 145, 149, 150, 151, 159, 160, 162, 166, 167, 169, 171, 172, 175, 176, 178, 179, 181, 182, 183, 188, 191, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 240, 247, 256, 257, 260, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 290, 291, 292, 298, 299, 305, 356, 360, 361, 372, 373, 374, 380, 381, 382, 385, 386, 387, 389, 394, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 414, 421, 435, 457, 458, 476, 478, 479, 481, 482, 483, 489, 490, 502, 510, 532, 542, 563, 564, 565, 576, 599, 606, 629, 712, 713, 714, 715, 716, 740, 743, 770, 784, 790, 794, 796, 798, 800, 814, 851, 863, 868, 871, 873, 874, 877, 880, 892], "appli": [1, 5, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 127, 128, 132, 134, 135, 136, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 156, 158, 159, 160, 161, 162, 166, 167, 169, 170, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 189, 191, 196, 199, 200, 201, 203, 205, 207, 208, 210, 211, 212, 213, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 245, 258, 260, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 314, 340, 355, 360, 369, 372, 374, 414, 416, 417, 421, 422, 423, 425, 427, 435, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 458, 472, 478, 479, 481, 482, 520, 523, 531, 532, 533, 534, 535, 540, 541, 543, 546, 547, 548, 563, 564, 565, 566, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 588, 589, 590, 591, 596, 599, 606, 614, 622, 626, 629, 630, 631, 651, 656, 668, 669, 670, 671, 672, 674, 679, 693, 694, 699, 700, 701, 712, 713, 714, 715, 716, 724, 741, 744, 748, 749, 750, 760, 784, 785, 790, 791, 792, 794, 796, 798, 799, 803, 804, 805, 807, 813, 814, 818, 820, 821, 823, 830, 839, 842, 847, 851, 867, 869, 871, 874, 875, 877, 880, 892], "yet": [1, 72, 94, 159, 182, 189, 192, 206, 208, 242, 265, 380, 381, 382, 385, 386, 387, 389, 394, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 422, 427, 553, 579, 760, 851], "method": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 71, 72, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 88, 93, 94, 95, 97, 99, 101, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 121, 127, 133, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 159, 160, 162, 165, 166, 167, 168, 169, 170, 172, 175, 177, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 218, 220, 221, 222, 223, 224, 228, 232, 235, 237, 240, 241, 242, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 289, 298, 299, 300, 301, 303, 304, 307, 308, 312, 313, 314, 315, 316, 320, 321, 322, 323, 326, 328, 329, 342, 344, 346, 349, 351, 356, 360, 361, 362, 367, 372, 373, 374, 376, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 433, 435, 437, 449, 450, 452, 453, 454, 458, 465, 476, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 519, 526, 527, 530, 531, 532, 533, 534, 535, 537, 538, 542, 543, 544, 546, 547, 548, 560, 561, 563, 564, 565, 572, 575, 576, 577, 578, 580, 584, 595, 597, 599, 602, 603, 604, 605, 606, 614, 616, 620, 623, 629, 631, 646, 647, 656, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 690, 693, 694, 696, 699, 700, 701, 702, 703, 705, 712, 713, 714, 715, 716, 719, 722, 724, 730, 731, 739, 740, 742, 743, 747, 749, 755, 756, 758, 760, 761, 773, 776, 780, 785, 786, 787, 788, 791, 799, 802, 804, 812, 816, 819, 847, 849, 851, 866, 867, 869, 871, 874, 875, 877, 878, 889, 892], "5": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 61, 62, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 86, 88, 90, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 162, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 190, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 245, 257, 259, 260, 262, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 283, 298, 299, 301, 303, 305, 309, 316, 328, 337, 356, 362, 371, 383, 389, 413, 414, 420, 431, 434, 435, 437, 455, 456, 457, 470, 478, 481, 482, 500, 506, 519, 520, 531, 537, 542, 546, 547, 548, 555, 556, 557, 563, 564, 566, 567, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 585, 588, 589, 592, 594, 597, 599, 603, 607, 608, 625, 631, 633, 652, 661, 665, 698, 712, 714, 715, 716, 724, 728, 729, 730, 738, 739, 740, 742, 743, 750, 760, 775, 779, 790, 791, 792, 796, 797, 803, 805, 808, 813, 818, 823, 849, 850, 851, 854, 856, 857, 867, 868, 871, 873, 874, 877, 880], "becaus": [1, 4, 5, 11, 16, 18, 21, 26, 34, 41, 43, 44, 45, 50, 61, 71, 75, 81, 82, 83, 101, 114, 115, 119, 140, 142, 143, 144, 146, 149, 150, 151, 158, 160, 161, 162, 166, 167, 168, 170, 171, 176, 180, 181, 182, 183, 184, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 218, 222, 227, 228, 229, 232, 235, 242, 265, 266, 267, 268, 349, 360, 435, 457, 574, 585, 588, 598, 699, 700, 702, 703, 715, 769, 821, 847, 851, 855, 859, 867, 869, 871, 873, 874, 878, 892], "all": [1, 4, 5, 10, 13, 14, 18, 19, 21, 27, 28, 31, 33, 35, 40, 45, 59, 62, 64, 68, 71, 74, 81, 82, 83, 90, 95, 97, 99, 103, 107, 111, 112, 113, 114, 116, 117, 119, 120, 121, 125, 127, 135, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 176, 179, 181, 182, 183, 184, 185, 188, 189, 190, 191, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 232, 236, 240, 241, 242, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 292, 293, 296, 298, 299, 301, 303, 304, 309, 310, 311, 312, 314, 315, 316, 319, 324, 325, 329, 330, 331, 340, 350, 351, 355, 356, 360, 361, 362, 363, 367, 368, 371, 372, 373, 374, 376, 390, 414, 416, 417, 421, 423, 430, 431, 435, 438, 439, 441, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 462, 464, 470, 471, 472, 473, 476, 478, 479, 481, 482, 483, 487, 489, 493, 496, 504, 506, 509, 511, 514, 518, 530, 531, 533, 535, 538, 540, 541, 542, 543, 547, 548, 550, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 574, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 591, 594, 595, 599, 605, 607, 614, 619, 622, 623, 625, 626, 629, 630, 631, 634, 644, 649, 650, 656, 660, 662, 671, 677, 680, 689, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 704, 707, 712, 713, 714, 715, 716, 720, 721, 722, 723, 725, 728, 729, 730, 734, 738, 739, 740, 742, 743, 747, 750, 758, 760, 767, 768, 776, 777, 778, 784, 788, 790, 791, 792, 794, 795, 796, 797, 799, 800, 801, 803, 804, 807, 809, 810, 811, 812, 813, 814, 815, 816, 818, 820, 821, 822, 823, 824, 847, 854, 858, 862, 866, 867, 868, 869, 873, 874, 877, 878, 880, 892], "were": [1, 4, 5, 10, 18, 21, 38, 81, 82, 119, 127, 137, 140, 141, 142, 143, 144, 149, 150, 151, 161, 167, 168, 171, 172, 181, 182, 183, 184, 188, 190, 191, 192, 200, 201, 202, 205, 206, 207, 208, 210, 211, 213, 216, 217, 218, 219, 222, 227, 229, 231, 232, 265, 266, 267, 268, 270, 273, 275, 276, 279, 281, 282, 298, 299, 322, 350, 351, 362, 365, 406, 407, 438, 440, 481, 482, 505, 564, 574, 575, 588, 599, 707, 712, 713, 714, 715, 716, 804, 806, 813, 847, 851, 858, 868, 871, 873, 877, 892], "effect": [1, 7, 17, 19, 20, 21, 26, 27, 39, 57, 59, 71, 72, 75, 83, 84, 99, 103, 109, 112, 113, 120, 121, 129, 133, 141, 145, 149, 151, 160, 162, 166, 167, 168, 172, 183, 191, 199, 201, 202, 203, 207, 208, 209, 210, 211, 212, 219, 222, 223, 224, 228, 229, 231, 232, 237, 240, 241, 245, 265, 266, 267, 268, 270, 271, 272, 275, 276, 280, 298, 299, 322, 356, 360, 361, 372, 373, 374, 406, 407, 414, 415, 421, 430, 435, 437, 438, 453, 457, 458, 476, 478, 479, 481, 482, 497, 498, 531, 534, 542, 561, 564, 567, 572, 626, 693, 695, 698, 699, 700, 702, 703, 714, 716, 719, 730, 790, 794, 800, 803, 805, 807, 813, 814, 816, 818, 847, 857, 858, 871, 892], "window": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 59, 72, 73, 74, 75, 77, 82, 83, 84, 88, 93, 99, 100, 103, 104, 108, 109, 113, 114, 115, 121, 123, 129, 133, 136, 137, 141, 142, 143, 144, 146, 151, 166, 171, 172, 180, 183, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 218, 219, 222, 228, 232, 240, 241, 242, 257, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 291, 343, 345, 349, 414, 415, 419, 421, 425, 427, 430, 438, 440, 449, 450, 452, 453, 454, 463, 473, 479, 481, 482, 537, 538, 564, 566, 574, 588, 591, 597, 599, 607, 664, 665, 698, 712, 713, 714, 716, 719, 722, 724, 727, 730, 731, 735, 736, 739, 740, 741, 742, 743, 744, 760, 790, 791, 792, 799, 807, 813, 814, 818, 823, 851, 854, 855, 856, 857, 892], "size": [1, 5, 8, 9, 10, 21, 22, 32, 35, 41, 43, 44, 45, 46, 53, 58, 65, 71, 72, 75, 83, 100, 108, 109, 114, 120, 126, 127, 129, 133, 134, 135, 136, 142, 144, 146, 150, 151, 155, 156, 158, 160, 166, 171, 172, 175, 177, 178, 179, 180, 181, 183, 184, 185, 189, 190, 199, 200, 202, 203, 206, 207, 208, 209, 211, 212, 213, 216, 219, 222, 223, 224, 229, 232, 235, 240, 241, 242, 245, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 314, 322, 330, 332, 362, 414, 416, 421, 425, 426, 449, 450, 452, 453, 454, 478, 480, 481, 482, 523, 537, 561, 563, 564, 579, 588, 594, 597, 659, 678, 694, 698, 699, 700, 702, 703, 712, 714, 715, 716, 736, 750, 760, 769, 773, 788, 790, 792, 798, 799, 803, 805, 806, 807, 810, 812, 813, 815, 816, 818, 819, 820, 821, 822, 823, 827, 874, 877, 892], "707": [1, 209, 232], "need": [1, 4, 5, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 58, 59, 61, 70, 71, 75, 76, 86, 90, 94, 95, 103, 104, 107, 108, 109, 110, 112, 114, 117, 119, 127, 135, 136, 140, 141, 142, 143, 144, 145, 149, 150, 151, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 175, 177, 178, 179, 180, 181, 182, 188, 190, 191, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 242, 245, 265, 266, 267, 268, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 298, 320, 331, 375, 378, 389, 415, 416, 424, 430, 438, 447, 452, 472, 480, 481, 482, 489, 496, 505, 522, 527, 551, 564, 606, 661, 699, 700, 702, 703, 712, 714, 715, 716, 760, 766, 777, 783, 798, 803, 813, 849, 851, 852, 854, 855, 856, 857, 858, 859, 867, 868, 873, 874, 875, 877, 880, 892], "more": [1, 4, 18, 19, 27, 28, 34, 42, 43, 44, 49, 54, 58, 71, 72, 74, 76, 81, 82, 83, 84, 86, 94, 104, 107, 110, 113, 114, 121, 122, 130, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 180, 181, 184, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 216, 217, 218, 219, 224, 227, 228, 229, 230, 232, 235, 237, 241, 242, 250, 259, 260, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 290, 298, 299, 307, 308, 331, 356, 360, 362, 367, 369, 374, 406, 407, 413, 414, 416, 418, 419, 421, 422, 426, 431, 433, 444, 445, 447, 448, 449, 450, 452, 453, 455, 456, 464, 473, 481, 482, 489, 498, 500, 506, 518, 522, 525, 531, 537, 538, 539, 563, 564, 566, 572, 574, 588, 595, 599, 608, 619, 621, 625, 626, 629, 639, 648, 650, 651, 653, 656, 664, 689, 693, 694, 699, 700, 701, 702, 703, 712, 714, 715, 716, 719, 722, 730, 739, 740, 741, 742, 743, 744, 757, 760, 776, 777, 778, 779, 784, 788, 792, 795, 796, 798, 799, 803, 812, 815, 818, 820, 822, 823, 831, 832, 840, 847, 848, 849, 851, 855, 856, 857, 858, 867, 868, 869, 871, 873, 874, 875, 876, 880, 889, 892], "than": [1, 5, 13, 18, 24, 26, 33, 34, 41, 42, 44, 45, 46, 50, 54, 58, 59, 61, 70, 71, 79, 83, 86, 87, 94, 114, 119, 124, 127, 135, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 156, 158, 161, 166, 167, 168, 169, 170, 171, 172, 176, 180, 181, 183, 184, 185, 188, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 227, 230, 240, 242, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 290, 307, 308, 355, 360, 367, 414, 416, 419, 421, 425, 431, 433, 443, 448, 450, 452, 453, 455, 458, 470, 478, 479, 481, 482, 498, 500, 506, 518, 529, 537, 538, 548, 553, 563, 564, 566, 572, 574, 579, 581, 594, 597, 598, 600, 604, 607, 625, 630, 651, 661, 693, 699, 700, 701, 702, 703, 704, 707, 712, 714, 715, 716, 719, 722, 727, 730, 735, 741, 744, 760, 777, 778, 790, 792, 793, 796, 799, 803, 812, 813, 815, 818, 820, 822, 823, 849, 851, 856, 857, 858, 873, 874, 892], "one": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 32, 33, 34, 40, 41, 42, 43, 45, 46, 48, 49, 50, 58, 59, 66, 69, 71, 74, 75, 77, 82, 83, 84, 86, 87, 88, 90, 94, 96, 97, 99, 103, 109, 111, 113, 114, 115, 117, 121, 127, 131, 133, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 184, 188, 189, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 229, 230, 231, 232, 236, 241, 242, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 290, 298, 299, 313, 314, 316, 320, 321, 323, 355, 357, 358, 360, 362, 363, 367, 383, 392, 395, 397, 406, 407, 413, 414, 420, 421, 424, 427, 429, 433, 436, 437, 438, 445, 446, 448, 449, 455, 464, 471, 472, 473, 479, 480, 481, 482, 485, 489, 498, 500, 515, 516, 518, 520, 525, 540, 541, 547, 548, 550, 553, 564, 565, 566, 567, 581, 585, 586, 589, 592, 593, 594, 596, 607, 610, 619, 621, 629, 630, 636, 648, 650, 656, 661, 664, 678, 683, 693, 694, 699, 700, 701, 702, 703, 705, 708, 712, 713, 714, 715, 716, 718, 721, 728, 738, 739, 740, 742, 743, 745, 748, 749, 750, 760, 773, 776, 778, 779, 784, 791, 792, 794, 795, 796, 797, 799, 800, 801, 803, 805, 818, 819, 821, 822, 823, 824, 838, 840, 847, 849, 850, 851, 854, 855, 859, 867, 868, 869, 871, 873, 874, 877, 892], "make": [1, 4, 9, 10, 13, 18, 19, 21, 27, 28, 31, 32, 34, 38, 42, 45, 48, 50, 54, 55, 59, 62, 68, 71, 76, 86, 90, 93, 94, 103, 109, 111, 112, 113, 114, 122, 124, 130, 133, 135, 136, 140, 141, 142, 143, 144, 150, 151, 156, 158, 160, 161, 162, 166, 167, 169, 170, 171, 172, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 189, 191, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 216, 218, 222, 227, 229, 230, 231, 235, 236, 237, 242, 257, 264, 265, 266, 267, 268, 270, 272, 273, 276, 278, 279, 280, 281, 298, 299, 327, 339, 356, 360, 361, 362, 367, 372, 373, 374, 375, 414, 417, 418, 421, 423, 424, 433, 437, 438, 449, 450, 452, 453, 457, 458, 464, 471, 473, 476, 478, 479, 481, 482, 524, 542, 548, 557, 563, 564, 574, 594, 595, 598, 607, 617, 619, 629, 639, 648, 650, 664, 676, 707, 709, 713, 728, 738, 739, 740, 742, 747, 755, 756, 760, 778, 779, 782, 783, 786, 797, 800, 806, 813, 818, 823, 824, 840, 847, 849, 850, 858, 859, 867, 868, 869, 871, 872, 874, 877, 880, 892], "topographi": [1, 13, 21, 27, 71, 72, 75, 86, 114, 120, 122, 130, 132, 142, 144, 151, 166, 170, 172, 176, 191, 205, 207, 208, 219, 230, 232, 240, 245, 265, 266, 267, 268, 270, 274, 275, 315, 414, 421, 481, 482, 561, 564, 580, 677, 712, 714, 716, 773, 792, 797, 798, 799, 803, 805, 809, 814, 816, 820, 821, 847, 892], "disabl": [1, 86, 114, 142, 149, 150, 151, 172, 199, 200, 203, 219, 230, 257, 262, 265, 266, 267, 268, 274, 275, 310, 367, 414, 420, 421, 426, 481, 482, 563, 564, 588, 599, 654, 658, 659, 712, 714, 716, 755, 760, 777, 792, 794, 798, 799, 803, 812, 813, 815, 820, 822, 826, 849, 892], "interact": [1, 27, 33, 45, 47, 86, 114, 115, 120, 127, 140, 149, 150, 151, 165, 166, 168, 171, 172, 180, 181, 191, 200, 201, 205, 206, 207, 211, 216, 224, 227, 230, 231, 237, 241, 242, 245, 257, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 291, 298, 414, 421, 473, 481, 482, 531, 563, 564, 607, 693, 695, 712, 714, 716, 760, 762, 776, 777, 781, 791, 792, 794, 795, 796, 798, 799, 803, 805, 807, 812, 813, 814, 815, 816, 818, 820, 821, 822, 823, 849, 851, 873, 874, 875, 880, 892], "filter": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 27, 32, 33, 34, 42, 45, 59, 69, 73, 74, 77, 78, 82, 83, 84, 85, 88, 92, 99, 109, 112, 113, 115, 121, 133, 136, 140, 141, 144, 145, 146, 149, 162, 165, 166, 167, 169, 171, 172, 176, 181, 183, 184, 185, 191, 195, 199, 201, 204, 207, 211, 213, 214, 215, 216, 218, 219, 224, 232, 242, 245, 257, 260, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 349, 350, 353, 356, 360, 361, 372, 373, 374, 378, 414, 415, 416, 418, 421, 422, 425, 428, 429, 430, 432, 435, 443, 455, 457, 458, 476, 478, 479, 481, 482, 494, 524, 542, 561, 564, 565, 569, 575, 576, 577, 581, 582, 588, 589, 590, 599, 600, 603, 626, 666, 676, 712, 714, 715, 716, 724, 725, 728, 731, 800, 801, 802, 808, 813, 814, 832, 847, 849, 851, 867, 869, 871, 878, 881, 882, 892], "contigu": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 196, 203, 204, 205, 207, 210, 211, 212, 213, 231, 232, 271], "segment": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 23, 24, 27, 33, 34, 38, 42, 64, 71, 74, 77, 81, 82, 83, 84, 88, 99, 109, 113, 114, 115, 121, 133, 135, 136, 137, 141, 144, 145, 146, 151, 162, 168, 172, 184, 191, 196, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 218, 232, 241, 245, 257, 259, 263, 265, 266, 267, 268, 275, 278, 305, 356, 361, 443, 466, 467, 468, 480, 481, 482, 510, 523, 532, 534, 564, 566, 567, 568, 569, 570, 571, 574, 581, 582, 585, 588, 589, 597, 599, 712, 731, 758, 760, 794, 796, 803, 805, 847, 867, 868, 874, 877, 892], "up": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 26, 27, 28, 33, 34, 42, 44, 45, 50, 70, 73, 74, 77, 80, 82, 83, 84, 88, 90, 93, 94, 95, 99, 103, 104, 109, 111, 112, 113, 114, 115, 117, 121, 123, 132, 133, 136, 140, 141, 144, 145, 146, 150, 151, 155, 156, 158, 159, 160, 162, 165, 166, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 218, 219, 223, 224, 228, 229, 232, 235, 237, 242, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 277, 279, 280, 281, 414, 419, 420, 421, 426, 454, 481, 482, 537, 538, 563, 564, 566, 588, 654, 660, 661, 698, 707, 712, 714, 716, 730, 758, 760, 779, 788, 790, 791, 792, 796, 799, 803, 806, 812, 813, 815, 818, 820, 823, 824, 830, 847, 849, 855, 871, 874, 875, 877, 880, 892], "band": [1, 5, 8, 9, 12, 13, 14, 15, 16, 18, 21, 27, 32, 33, 34, 42, 73, 77, 82, 88, 94, 105, 106, 107, 109, 110, 112, 114, 115, 121, 126, 133, 136, 137, 141, 142, 144, 145, 146, 167, 172, 196, 199, 201, 202, 203, 204, 205, 207, 211, 212, 213, 219, 231, 232, 240, 241, 242, 245, 265, 266, 267, 268, 288, 416, 422, 425, 449, 450, 452, 453, 455, 481, 482, 547, 569, 603, 691, 714, 716, 728, 738, 739, 742, 784, 792, 808, 847, 868, 871, 892], "stop": [1, 5, 29, 69, 82, 93, 96, 127, 136, 167, 172, 201, 202, 203, 210, 212, 216, 217, 218, 257, 258, 265, 266, 267, 268, 285, 286, 297, 359, 416, 425, 449, 450, 452, 453, 480, 481, 482, 500, 524, 534, 537, 564, 588, 597, 613, 804, 807, 851, 873, 892], "fir": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 213, 232, 257, 265, 266, 267, 268, 416, 425, 449, 450, 452, 453, 481, 482, 576, 577, 603, 725, 801, 813, 849, 871, 881, 892], "paramet": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 34, 40, 41, 42, 43, 44, 48, 54, 55, 59, 62, 68, 70, 72, 73, 74, 76, 77, 82, 83, 84, 88, 96, 97, 99, 100, 101, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 123, 128, 132, 133, 136, 137, 140, 141, 142, 144, 145, 146, 149, 150, 151, 156, 158, 159, 161, 162, 166, 168, 169, 170, 171, 172, 175, 178, 180, 188, 191, 192, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 230, 240, 241, 242, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 768, 769, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 851, 867, 869, 871, 874, 878, 892], "design": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 61, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 160, 161, 172, 180, 188, 190, 191, 199, 201, 203, 204, 205, 207, 208, 210, 211, 212, 213, 224, 227, 232, 245, 258, 265, 266, 267, 268, 344, 390, 393, 416, 425, 449, 450, 452, 453, 481, 482, 489, 491, 493, 496, 497, 498, 504, 508, 511, 563, 565, 599, 606, 613, 623, 693, 697, 724, 735, 813, 831, 832, 856, 868, 871, 873, 880, 892], "pass": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 43, 59, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 166, 167, 168, 169, 170, 171, 172, 180, 183, 189, 191, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 229, 231, 232, 235, 236, 237, 240, 241, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 320, 324, 325, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 427, 430, 431, 433, 435, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 464, 465, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 557, 560, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 658, 660, 661, 663, 664, 665, 666, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 688, 692, 699, 700, 701, 702, 703, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 730, 731, 734, 735, 739, 740, 742, 743, 744, 745, 748, 749, 750, 755, 759, 760, 761, 768, 773, 776, 777, 780, 782, 784, 785, 786, 788, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 803, 804, 805, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 855, 856, 867, 869, 871, 874, 892], "zero": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 64, 71, 73, 74, 75, 77, 82, 83, 84, 88, 90, 93, 94, 95, 99, 109, 112, 113, 114, 115, 120, 121, 133, 136, 140, 141, 142, 144, 146, 149, 151, 152, 158, 160, 162, 166, 168, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 222, 223, 224, 227, 231, 232, 242, 258, 259, 260, 263, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 282, 284, 298, 299, 356, 360, 362, 372, 416, 420, 425, 426, 427, 448, 449, 450, 452, 453, 454, 455, 476, 481, 482, 483, 494, 537, 548, 564, 565, 589, 613, 626, 663, 664, 665, 673, 677, 692, 699, 700, 702, 703, 707, 708, 712, 714, 715, 716, 728, 731, 738, 739, 740, 741, 742, 744, 760, 775, 779, 789, 790, 813, 818, 823, 824, 847, 851, 867, 874, 877, 892], "phase": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 105, 106, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 167, 172, 190, 191, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 224, 232, 242, 245, 265, 266, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 291, 343, 374, 416, 425, 427, 448, 449, 450, 452, 453, 455, 481, 482, 530, 535, 545, 548, 561, 564, 633, 739, 740, 750, 801, 847, 858, 868, 892], "non": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 34, 40, 41, 42, 46, 50, 59, 71, 73, 74, 77, 82, 83, 84, 88, 93, 99, 109, 113, 114, 115, 121, 133, 136, 141, 142, 143, 144, 146, 150, 151, 158, 165, 166, 169, 171, 172, 175, 180, 181, 185, 189, 190, 191, 196, 199, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 216, 222, 232, 233, 234, 245, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 287, 298, 299, 320, 355, 356, 360, 362, 414, 420, 421, 422, 426, 443, 449, 450, 452, 453, 455, 479, 481, 482, 497, 537, 544, 550, 561, 563, 564, 565, 578, 579, 599, 600, 617, 623, 626, 646, 673, 691, 692, 699, 700, 702, 703, 707, 708, 712, 714, 715, 716, 742, 750, 760, 777, 788, 791, 792, 799, 803, 812, 815, 819, 820, 822, 847, 849, 851, 860, 867, 871, 873, 874, 889, 892], "causal": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 232, 265, 266, 267, 268, 420, 449, 450, 452, 453, 481, 482], "bandstop": [1, 5, 82, 136, 203, 212, 481, 482, 813], "domain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 46, 73, 74, 77, 82, 83, 84, 88, 99, 103, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 165, 166, 172, 191, 196, 199, 201, 202, 203, 204, 207, 210, 211, 212, 213, 219, 232, 242, 243, 244, 245, 257, 265, 266, 267, 268, 416, 425, 426, 450, 452, 453, 454, 455, 481, 482, 547, 548, 661, 714, 716, 748, 755, 873, 892], "ham": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 191, 196, 202, 203, 204, 205, 207, 210, 211, 212, 213, 232, 265, 266, 267, 268, 416, 425, 450, 452, 453, 481, 482, 731, 814, 892], "0194": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 191, 196, 202, 203, 204, 205, 210, 211, 212, 213, 232], "passband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 213, 232, 867], "rippl": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 191, 196, 203, 204, 205, 210, 211, 212, 213, 232], "db": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 108, 109, 113, 114, 115, 121, 129, 133, 136, 137, 141, 142, 144, 146, 151, 169, 172, 191, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 216, 219, 222, 224, 232, 240, 241, 242, 265, 266, 267, 268, 270, 313, 314, 374, 376, 447, 450, 481, 482, 496, 508, 537, 561, 562, 564, 656, 707, 712, 714, 715, 716, 760, 776, 792, 801, 805, 808, 814, 816, 847, 874, 892], "stopband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 191, 196, 203, 204, 205, 210, 211, 212, 213, 232], "attenu": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 162, 191, 196, 203, 204, 205, 210, 211, 212, 213, 232, 265, 266, 267, 268, 416, 425, 450, 452, 453, 481, 482, 874, 892], "lower": [1, 2, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 34, 37, 40, 42, 49, 54, 55, 62, 71, 73, 74, 77, 82, 83, 88, 99, 107, 112, 113, 114, 115, 120, 121, 127, 133, 136, 141, 142, 144, 146, 151, 156, 160, 172, 180, 181, 184, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 219, 229, 230, 231, 232, 235, 237, 242, 260, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 414, 416, 419, 421, 440, 450, 452, 481, 482, 523, 537, 538, 563, 564, 569, 574, 579, 603, 622, 691, 698, 699, 701, 702, 712, 713, 714, 716, 730, 731, 777, 779, 784, 791, 792, 798, 799, 803, 812, 813, 814, 815, 818, 820, 822, 823, 824, 847, 849, 892], "transit": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 213, 232, 258, 265, 266, 267, 268, 416, 425, 450, 452, 453, 481, 482, 566, 603, 826, 874, 892], "bandwidth": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 104, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 213, 232, 242, 265, 266, 267, 268, 419, 427, 453, 481, 482, 537, 538, 714, 716, 719, 722, 724, 730, 740, 743, 792, 892], "50": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 25, 26, 28, 34, 35, 41, 42, 45, 46, 47, 56, 66, 73, 77, 81, 82, 83, 84, 88, 90, 95, 99, 103, 104, 108, 109, 113, 114, 115, 120, 121, 133, 135, 136, 137, 143, 144, 146, 149, 151, 158, 160, 164, 166, 168, 169, 170, 171, 172, 178, 180, 183, 184, 185, 187, 189, 191, 195, 196, 199, 201, 202, 203, 204, 205, 207, 209, 212, 213, 216, 217, 218, 224, 227, 228, 229, 231, 232, 234, 235, 236, 237, 242, 245, 257, 337, 449, 481, 482, 500, 546, 573, 585, 669, 674, 692, 700, 760, 808, 867, 874, 892], "hz": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 69, 72, 73, 74, 77, 81, 82, 83, 84, 88, 90, 93, 94, 95, 99, 104, 107, 108, 109, 113, 114, 115, 121, 123, 127, 133, 136, 137, 141, 142, 144, 146, 151, 166, 167, 168, 169, 172, 180, 183, 184, 189, 190, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 229, 230, 231, 232, 240, 241, 245, 257, 265, 266, 267, 268, 416, 419, 425, 449, 450, 452, 453, 455, 481, 482, 537, 538, 564, 569, 572, 576, 577, 588, 590, 593, 599, 603, 678, 698, 712, 714, 715, 716, 719, 722, 728, 730, 736, 738, 739, 740, 742, 743, 790, 792, 801, 808, 813, 814, 868, 877, 878], "upper": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 34, 39, 42, 62, 71, 73, 77, 82, 84, 88, 113, 114, 115, 120, 121, 127, 133, 136, 141, 142, 144, 146, 159, 166, 172, 191, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 232, 241, 242, 245, 262, 264, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 283, 414, 416, 419, 421, 440, 450, 452, 458, 481, 482, 537, 538, 563, 564, 569, 603, 691, 698, 699, 700, 701, 702, 703, 712, 713, 714, 715, 716, 728, 730, 731, 738, 777, 779, 784, 792, 798, 799, 803, 812, 814, 815, 818, 820, 822, 823, 824, 892], "7921": 1, "601": [1, 5, 41, 56, 140, 149, 199, 204, 216, 232], "parallel": [1, 2, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 31, 32, 34, 42, 66, 74, 77, 82, 83, 84, 88, 99, 113, 115, 121, 133, 136, 141, 144, 146, 151, 166, 171, 172, 176, 183, 191, 196, 203, 204, 205, 207, 210, 211, 212, 213, 229, 232, 241, 245, 257, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 416, 417, 419, 420, 424, 425, 427, 430, 431, 452, 453, 454, 457, 459, 470, 472, 476, 478, 479, 481, 482, 522, 525, 526, 537, 538, 542, 547, 548, 569, 576, 577, 607, 651, 654, 659, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 744, 792, 795, 814, 859, 871, 874, 880, 892], "n_job": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 41, 42, 74, 77, 82, 83, 84, 88, 96, 99, 100, 103, 107, 110, 113, 115, 121, 133, 136, 141, 144, 146, 151, 158, 159, 166, 172, 176, 183, 191, 196, 203, 204, 205, 207, 210, 211, 212, 213, 222, 227, 229, 231, 232, 235, 236, 237, 241, 257, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 416, 417, 419, 420, 424, 425, 426, 427, 430, 431, 452, 453, 454, 457, 470, 472, 481, 482, 522, 525, 526, 537, 538, 547, 548, 569, 576, 577, 651, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 744, 792, 795, 814, 849, 871, 892], "done": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 71, 74, 77, 80, 82, 83, 84, 88, 90, 92, 93, 94, 95, 99, 101, 103, 104, 107, 108, 109, 110, 113, 115, 121, 124, 131, 133, 134, 135, 136, 140, 141, 143, 144, 146, 150, 151, 155, 156, 158, 159, 160, 161, 162, 166, 167, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 241, 242, 258, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 298, 299, 322, 361, 427, 476, 478, 479, 481, 482, 531, 533, 534, 535, 564, 576, 577, 580, 582, 698, 712, 713, 715, 737, 739, 740, 742, 743, 758, 760, 763, 776, 784, 814, 847, 851, 856, 857, 867, 871, 873, 874, 880, 892], "17": [1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 28, 32, 34, 35, 41, 42, 43, 45, 47, 50, 56, 61, 62, 72, 74, 77, 81, 82, 83, 84, 88, 90, 99, 103, 108, 109, 113, 114, 115, 121, 123, 127, 130, 133, 136, 137, 141, 144, 145, 146, 151, 156, 157, 158, 160, 166, 169, 171, 172, 176, 177, 180, 181, 182, 183, 184, 185, 188, 191, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 222, 227, 228, 229, 231, 232, 234, 235, 236, 237, 239, 241, 245, 265, 266, 267, 268, 272, 275, 276, 277, 278, 280, 281, 289, 298, 356, 358, 361, 362, 374, 414, 421, 423, 480, 481, 482, 531, 537, 538, 599, 665, 677, 700, 712, 728, 738, 739, 742, 777, 818, 824, 868, 874], "task": [1, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 46, 71, 74, 77, 82, 83, 84, 88, 99, 112, 113, 115, 121, 133, 136, 137, 141, 143, 144, 146, 151, 155, 156, 165, 166, 169, 175, 176, 183, 191, 196, 200, 203, 204, 205, 207, 210, 211, 212, 213, 229, 232, 241, 245, 383, 417, 424, 728, 738, 739, 742, 868, 874, 875, 878, 880, 892], "elaps": [1, 2, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 74, 77, 82, 83, 84, 88, 99, 113, 115, 121, 133, 136, 141, 144, 146, 151, 166, 176, 183, 191, 196, 203, 204, 205, 207, 210, 211, 212, 213, 229, 232, 241], "71": [1, 2, 11, 12, 13, 14, 15, 16, 18, 19, 21, 32, 34, 35, 42, 45, 74, 77, 81, 82, 84, 88, 99, 103, 108, 109, 112, 113, 114, 115, 121, 133, 136, 137, 146, 166, 169, 176, 181, 182, 184, 191, 196, 203, 205, 207, 209, 210, 212, 213, 227, 228, 229, 231, 232, 235, 237, 241], "161": [1, 2, 11, 12, 13, 14, 15, 16, 18, 21, 31, 32, 34, 42, 45, 56, 74, 77, 82, 84, 88, 99, 113, 115, 121, 133, 146, 166, 169, 176, 191, 196, 205, 207, 209, 210, 227, 231, 232, 237, 239, 241], "9": [1, 4, 5, 6, 7, 8, 9, 11, 13, 19, 20, 21, 22, 24, 26, 28, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 59, 62, 67, 69, 71, 72, 74, 79, 80, 81, 83, 85, 87, 90, 92, 93, 94, 95, 101, 102, 103, 104, 106, 108, 109, 110, 112, 114, 115, 116, 117, 119, 121, 124, 127, 128, 130, 135, 137, 139, 140, 141, 142, 144, 145, 148, 150, 151, 154, 156, 158, 159, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 231, 232, 234, 235, 237, 240, 244, 245, 263, 265, 266, 267, 268, 270, 272, 277, 278, 280, 281, 298, 299, 301, 314, 323, 337, 355, 356, 362, 363, 383, 407, 457, 467, 481, 482, 502, 519, 527, 539, 547, 563, 564, 572, 597, 614, 625, 653, 656, 694, 712, 714, 715, 716, 724, 734, 743, 744, 745, 760, 761, 763, 777, 787, 788, 793, 812, 817, 849, 850, 856, 857, 867, 868, 871, 874, 877], "287": [1, 2, 11, 13, 14, 15, 16, 18, 21, 32, 34, 42, 74, 77, 82, 84, 88, 121, 133, 146, 166, 169, 176, 191, 207, 209, 210, 232], "66": [1, 12, 13, 16, 19, 21, 35, 40, 41, 45, 81, 103, 108, 114, 144, 146, 158, 169, 176, 181, 184, 191, 195, 196, 205, 209, 227, 228, 231, 232, 245, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 542, 564, 800, 892], "id": [1, 5, 12, 21, 32, 33, 34, 42, 45, 46, 49, 70, 72, 73, 74, 80, 81, 82, 90, 93, 94, 95, 99, 107, 108, 110, 112, 113, 140, 141, 142, 146, 149, 152, 162, 166, 168, 169, 171, 172, 177, 180, 182, 183, 185, 191, 196, 200, 203, 204, 205, 207, 212, 213, 222, 223, 224, 229, 241, 257, 260, 265, 266, 267, 270, 272, 273, 276, 278, 279, 280, 281, 284, 298, 299, 315, 356, 371, 379, 430, 436, 438, 440, 442, 443, 455, 467, 481, 482, 511, 523, 524, 529, 559, 565, 576, 577, 591, 616, 623, 625, 626, 632, 661, 714, 715, 760, 790, 793, 813, 818, 823, 837, 851, 871, 874, 892], "Not": [1, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 62, 70, 72, 73, 74, 75, 77, 80, 81, 82, 83, 88, 90, 93, 94, 95, 96, 97, 100, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 121, 127, 128, 132, 135, 136, 137, 140, 141, 142, 143, 145, 146, 149, 151, 152, 166, 167, 168, 169, 172, 177, 180, 182, 183, 184, 185, 191, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 229, 230, 231, 232, 235, 237, 241, 267, 268, 273, 279, 280, 281, 422, 425, 449, 458, 565, 712, 760, 796, 824, 850, 874, 880], "metadata": [1, 4, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 62, 70, 72, 73, 74, 75, 80, 83, 88, 90, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 121, 128, 132, 135, 136, 137, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 161, 165, 166, 172, 177, 180, 182, 183, 184, 185, 188, 189, 190, 191, 199, 200, 201, 203, 204, 205, 207, 211, 213, 216, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 259, 260, 265, 266, 267, 268, 269, 270, 355, 438, 443, 481, 482, 487, 622, 642, 712, 714, 715, 716, 784, 847, 868, 892], "33": [1, 8, 12, 13, 19, 21, 28, 33, 34, 35, 39, 40, 41, 45, 47, 77, 81, 91, 103, 108, 112, 114, 115, 137, 141, 144, 151, 169, 170, 183, 196, 203, 205, 209, 213, 227, 228, 229, 231, 232, 236, 237, 265, 266, 267, 268, 337, 455, 481, 482, 527, 814, 874, 892], "interv": [1, 10, 11, 28, 32, 33, 34, 38, 45, 46, 49, 62, 70, 71, 72, 73, 80, 83, 90, 93, 94, 95, 96, 97, 100, 103, 104, 107, 110, 112, 113, 117, 127, 128, 132, 140, 142, 144, 145, 149, 150, 151, 152, 166, 172, 176, 177, 178, 180, 182, 183, 184, 185, 191, 200, 201, 203, 204, 207, 210, 211, 213, 223, 224, 229, 230, 231, 235, 237, 241, 257, 259, 260, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 288, 348, 361, 438, 537, 547, 548, 564, 581, 582, 591, 629, 630, 662, 664, 689, 691, 712, 714, 715, 716, 725, 784, 805, 820, 868, 878, 892], "mode": [1, 5, 11, 22, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 62, 70, 72, 73, 74, 79, 80, 86, 87, 93, 94, 95, 96, 97, 100, 103, 104, 107, 110, 112, 113, 114, 117, 119, 120, 127, 128, 131, 132, 136, 140, 141, 142, 144, 145, 149, 151, 152, 158, 161, 166, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 218, 219, 223, 229, 230, 231, 232, 235, 237, 241, 242, 245, 257, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 288, 298, 299, 343, 356, 360, 361, 362, 366, 367, 372, 373, 374, 413, 414, 420, 421, 448, 452, 453, 454, 473, 476, 481, 482, 522, 540, 541, 563, 564, 591, 599, 652, 675, 678, 707, 712, 713, 714, 715, 716, 737, 760, 786, 788, 790, 791, 792, 796, 799, 802, 803, 807, 812, 813, 814, 815, 818, 819, 820, 823, 824, 829, 851, 880, 892], "mean": [1, 4, 8, 9, 10, 11, 14, 16, 19, 21, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 79, 80, 84, 86, 87, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 110, 112, 113, 114, 117, 119, 120, 127, 128, 132, 137, 140, 141, 142, 143, 144, 145, 149, 150, 152, 156, 157, 158, 160, 166, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 216, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 259, 260, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 288, 291, 298, 299, 316, 320, 356, 361, 414, 420, 421, 423, 426, 435, 447, 448, 456, 473, 476, 478, 479, 481, 482, 483, 489, 496, 500, 504, 511, 516, 522, 531, 537, 540, 541, 542, 547, 548, 563, 564, 568, 571, 574, 575, 579, 581, 588, 590, 597, 599, 608, 616, 629, 630, 656, 664, 665, 666, 675, 676, 678, 691, 694, 699, 700, 701, 702, 703, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 728, 731, 738, 739, 740, 742, 743, 760, 784, 786, 790, 791, 792, 794, 799, 803, 812, 813, 814, 815, 818, 820, 822, 851, 856, 871, 873, 874, 877, 892], "activ": [1, 4, 5, 8, 11, 12, 16, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 82, 83, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 130, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 158, 159, 162, 166, 167, 168, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 216, 217, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 245, 258, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 298, 299, 326, 350, 440, 443, 448, 455, 457, 461, 476, 478, 479, 480, 481, 482, 486, 497, 502, 516, 519, 530, 531, 532, 533, 534, 535, 542, 545, 561, 569, 580, 603, 629, 631, 633, 634, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 677, 684, 687, 704, 707, 712, 714, 715, 716, 728, 738, 739, 742, 769, 779, 781, 788, 819, 824, 847, 849, 850, 851, 852, 854, 855, 858, 859, 867, 868, 871, 873, 874, 877, 880, 892], "note": [1, 4, 5, 9, 12, 13, 16, 18, 21, 26, 28, 31, 35, 40, 42, 45, 46, 47, 51, 58, 59, 60, 62, 70, 71, 72, 74, 75, 80, 82, 83, 90, 93, 94, 95, 99, 101, 104, 107, 109, 112, 113, 114, 115, 119, 121, 127, 129, 132, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 158, 160, 162, 166, 167, 168, 169, 170, 171, 172, 176, 177, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 222, 223, 224, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 289, 294, 298, 299, 301, 303, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 319, 320, 321, 322, 323, 324, 330, 331, 332, 334, 336, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 360, 361, 362, 363, 366, 367, 369, 372, 375, 376, 383, 389, 390, 391, 392, 393, 395, 406, 407, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 426, 430, 431, 433, 434, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 464, 465, 467, 470, 471, 472, 473, 474, 475, 480, 481, 482, 483, 489, 493, 494, 496, 497, 498, 500, 502, 504, 505, 506, 508, 510, 511, 512, 516, 518, 519, 520, 521, 523, 525, 526, 527, 529, 531, 532, 533, 534, 535, 537, 538, 539, 542, 544, 546, 547, 548, 550, 551, 563, 564, 565, 566, 567, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 585, 587, 588, 591, 595, 599, 600, 605, 606, 607, 608, 609, 613, 614, 617, 619, 621, 622, 623, 625, 626, 629, 630, 631, 633, 634, 636, 639, 645, 647, 648, 650, 651, 652, 653, 656, 658, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 689, 692, 693, 694, 695, 698, 699, 700, 701, 702, 703, 705, 707, 712, 713, 714, 715, 716, 720, 721, 722, 723, 724, 725, 726, 728, 730, 731, 734, 738, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 754, 755, 758, 760, 761, 763, 775, 776, 777, 778, 779, 781, 783, 784, 785, 787, 788, 790, 791, 792, 793, 794, 796, 797, 799, 800, 801, 803, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 829, 830, 833, 837, 838, 839, 840, 841, 842, 847, 849, 851, 852, 858, 867, 871, 873, 874, 876, 892], "pick_channel": [1, 4, 5, 9, 12, 28, 42, 45, 46, 62, 70, 71, 72, 73, 74, 80, 86, 90, 93, 94, 95, 99, 100, 101, 107, 112, 113, 114, 115, 121, 127, 132, 135, 136, 140, 141, 143, 144, 146, 149, 150, 151, 152, 162, 166, 169, 170, 172, 177, 180, 182, 183, 184, 185, 191, 196, 199, 200, 204, 205, 207, 211, 212, 213, 216, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 262, 265, 266, 267, 268, 269, 481, 482, 558, 712, 713, 714, 715, 716, 882, 892], "legaci": [1, 4, 5, 9, 12, 16, 18, 21, 28, 31, 35, 40, 42, 45, 46, 51, 58, 59, 60, 62, 70, 71, 72, 74, 80, 82, 83, 90, 93, 94, 95, 99, 101, 107, 112, 113, 114, 115, 119, 121, 127, 132, 135, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 162, 166, 168, 172, 176, 177, 180, 181, 182, 183, 184, 185, 191, 192, 196, 199, 200, 203, 204, 205, 206, 207, 211, 212, 213, 216, 219, 223, 224, 228, 229, 230, 231, 232, 235, 237, 241, 265, 266, 267, 268, 481, 482, 712, 714, 715, 716, 792, 814, 892], "new": [1, 4, 5, 8, 9, 12, 14, 16, 18, 19, 21, 27, 28, 31, 35, 40, 42, 45, 46, 51, 58, 59, 60, 62, 70, 71, 72, 74, 80, 81, 82, 83, 90, 93, 94, 95, 99, 101, 107, 112, 113, 114, 115, 119, 121, 127, 132, 135, 136, 137, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 161, 162, 165, 166, 168, 172, 175, 176, 177, 180, 181, 182, 183, 184, 185, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 216, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 240, 241, 245, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 288, 289, 294, 298, 299, 301, 303, 304, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 323, 324, 325, 326, 330, 332, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 372, 373, 374, 375, 383, 390, 392, 393, 406, 407, 413, 414, 416, 418, 420, 421, 425, 426, 433, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 461, 462, 464, 467, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 489, 492, 493, 494, 496, 497, 498, 502, 505, 510, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 527, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 544, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 584, 585, 588, 589, 595, 598, 599, 600, 607, 609, 613, 614, 619, 623, 625, 626, 630, 631, 634, 642, 644, 645, 646, 647, 648, 650, 653, 656, 661, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 689, 693, 695, 705, 706, 707, 711, 712, 713, 714, 715, 716, 724, 726, 729, 730, 731, 734, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 757, 760, 761, 763, 768, 769, 773, 776, 777, 778, 779, 781, 783, 784, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 822, 823, 824, 826, 829, 833, 836, 837, 838, 842, 843, 845, 847, 849, 850, 853, 855, 856, 857, 859, 862, 867, 868, 871, 872, 873, 874, 875, 877, 879, 880], "should": [1, 4, 5, 9, 12, 16, 18, 19, 21, 28, 31, 35, 40, 41, 42, 45, 46, 51, 58, 59, 60, 62, 64, 70, 71, 72, 74, 80, 82, 83, 88, 90, 93, 94, 95, 99, 101, 107, 112, 113, 114, 115, 119, 120, 121, 127, 132, 133, 135, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 156, 157, 158, 160, 161, 165, 166, 167, 168, 172, 176, 177, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 330, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 424, 425, 426, 427, 430, 431, 433, 435, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 464, 465, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 560, 563, 564, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 609, 611, 612, 613, 614, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 688, 689, 694, 699, 700, 701, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 730, 731, 734, 735, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 755, 756, 759, 760, 762, 764, 768, 776, 777, 778, 779, 783, 784, 785, 787, 788, 790, 791, 792, 793, 794, 795, 796, 799, 800, 803, 804, 805, 806, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 830, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 849, 850, 851, 854, 855, 856, 857, 862, 867, 868, 873, 874, 877, 880, 892], "inst": [1, 4, 5, 9, 12, 16, 18, 21, 28, 31, 35, 40, 42, 45, 46, 51, 58, 59, 60, 62, 70, 71, 72, 74, 80, 82, 83, 90, 93, 94, 95, 99, 101, 107, 112, 113, 114, 115, 119, 121, 127, 132, 135, 136, 140, 141, 143, 144, 146, 149, 150, 151, 152, 162, 166, 168, 172, 176, 177, 180, 181, 182, 183, 184, 185, 191, 192, 196, 199, 200, 203, 204, 205, 206, 207, 211, 212, 213, 216, 223, 224, 228, 229, 230, 231, 232, 235, 237, 240, 241, 257, 259, 264, 265, 266, 267, 268, 270, 275, 282, 314, 316, 360, 414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 473, 481, 482, 563, 564, 565, 572, 573, 578, 583, 587, 591, 598, 614, 653, 656, 666, 697, 712, 714, 715, 716, 742, 743, 744, 803, 804, 805, 807, 814, 892], "projector": [1, 2, 4, 5, 8, 9, 16, 18, 21, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 69, 70, 72, 74, 77, 83, 90, 92, 93, 94, 99, 101, 103, 109, 119, 121, 127, 132, 140, 141, 146, 149, 150, 151, 152, 162, 165, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 200, 203, 204, 205, 211, 212, 214, 215, 216, 223, 224, 228, 229, 230, 231, 232, 235, 237, 257, 265, 266, 267, 268, 270, 274, 275, 298, 299, 356, 357, 358, 359, 360, 361, 372, 373, 374, 414, 421, 444, 445, 446, 447, 457, 458, 476, 478, 479, 481, 482, 502, 542, 564, 576, 577, 578, 599, 629, 637, 656, 713, 717, 718, 719, 720, 721, 722, 723, 790, 800, 807, 811, 812, 813, 832, 847, 867, 869, 871, 874, 892], "n_channel": [1, 16, 18, 19, 28, 31, 35, 42, 51, 58, 59, 60, 64, 66, 68, 70, 71, 72, 75, 76, 77, 81, 83, 84, 90, 99, 103, 114, 119, 127, 132, 140, 141, 142, 143, 149, 150, 151, 159, 162, 166, 167, 168, 172, 176, 177, 180, 181, 182, 190, 196, 199, 200, 203, 204, 205, 206, 207, 208, 211, 216, 219, 222, 224, 229, 230, 231, 232, 235, 237, 242, 257, 260, 262, 264, 265, 266, 267, 268, 269, 270, 298, 299, 315, 316, 320, 331, 372, 414, 415, 416, 419, 420, 421, 422, 423, 425, 427, 428, 430, 452, 453, 481, 482, 563, 564, 565, 569, 572, 680, 697, 698, 712, 713, 714, 715, 716, 717, 718, 719, 739, 740, 741, 777, 780, 784, 790, 791, 792, 799, 813, 815, 820, 822, 830, 847, 892], "No": [1, 2, 4, 5, 8, 9, 12, 16, 18, 21, 34, 41, 46, 48, 50, 54, 55, 75, 80, 83, 88, 90, 101, 108, 109, 112, 113, 114, 116, 117, 121, 127, 128, 135, 136, 137, 140, 141, 142, 143, 146, 149, 151, 156, 166, 171, 172, 178, 184, 185, 190, 191, 196, 199, 202, 204, 205, 207, 210, 211, 212, 222, 224, 227, 228, 232, 241, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 390, 415, 430, 476, 478, 479, 481, 482, 531, 533, 534, 535, 676, 814, 850, 851, 868, 873, 877], "gradiomet": [1, 22, 32, 34, 35, 46, 59, 72, 74, 77, 80, 82, 87, 93, 100, 103, 108, 109, 110, 111, 113, 117, 119, 120, 142, 145, 146, 150, 162, 166, 167, 168, 169, 180, 183, 184, 188, 191, 199, 200, 201, 203, 205, 206, 207, 209, 210, 216, 217, 218, 219, 222, 224, 227, 229, 230, 231, 241, 257, 260, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 298, 299, 356, 357, 358, 359, 360, 361, 372, 373, 374, 414, 421, 435, 457, 458, 476, 478, 479, 481, 482, 519, 542, 561, 562, 563, 564, 574, 575, 576, 577, 579, 580, 581, 582, 588, 599, 610, 698, 712, 714, 715, 716, 777, 783, 784, 790, 791, 792, 794, 796, 798, 799, 800, 803, 812, 813, 815, 820, 821, 822, 847, 867, 871, 874, 877, 892], "forc": [1, 4, 146, 161, 166, 171, 178, 191, 201, 257, 265, 266, 267, 268, 310, 321, 366, 378, 380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 481, 482, 506, 531, 625, 712, 714, 715, 716, 760, 849, 851, 868, 892], "n_grad": [1, 191, 207, 257, 357, 358, 359, 576, 577], "n_eeg": [1, 146, 191, 207, 257, 357, 358, 359, 576, 577], "axial": [1, 33, 47, 82, 84, 92, 109, 111, 131, 135, 142, 146, 160, 172, 180, 183, 191, 199, 206, 207, 227, 263, 280, 281, 760, 778, 788, 874], "100": [1, 2, 5, 10, 11, 13, 16, 19, 22, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 75, 76, 79, 81, 83, 86, 87, 90, 92, 95, 96, 101, 103, 104, 108, 109, 111, 112, 114, 115, 116, 119, 120, 123, 125, 127, 135, 136, 137, 140, 141, 143, 144, 145, 146, 149, 151, 156, 158, 169, 170, 172, 176, 177, 178, 179, 180, 181, 183, 184, 190, 191, 195, 196, 200, 201, 202, 203, 205, 207, 209, 212, 215, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 245, 257, 265, 266, 267, 268, 275, 362, 435, 454, 478, 479, 481, 482, 505, 575, 588, 594, 599, 678, 698, 714, 716, 741, 744, 750, 760, 790, 808, 813, 868, 873, 877, 892], "pca": [1, 5, 11, 13, 15, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 75, 77, 79, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 235, 237, 265, 267, 268, 270, 273, 279, 281, 298, 299, 356, 372, 376, 428, 476, 479, 481, 537, 538, 547, 548, 561, 564, 626, 804, 867, 878, 892], "01": [1, 8, 11, 12, 13, 19, 20, 21, 24, 32, 33, 34, 35, 46, 59, 68, 72, 74, 77, 79, 83, 84, 90, 91, 92, 93, 103, 108, 109, 111, 112, 113, 120, 121, 123, 124, 127, 131, 137, 139, 141, 142, 146, 150, 151, 158, 159, 164, 166, 167, 168, 169, 170, 172, 174, 180, 181, 183, 185, 187, 191, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 224, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 239, 241, 242, 244, 245, 256, 257, 259, 265, 266, 343, 345, 349, 383, 406, 407, 422, 481, 482, 492, 579, 588, 591, 597, 604, 608, 707, 868], "02": [1, 2, 5, 11, 13, 19, 33, 34, 35, 56, 64, 67, 68, 82, 84, 85, 92, 103, 106, 108, 109, 111, 114, 120, 123, 126, 130, 131, 136, 139, 142, 146, 148, 150, 154, 157, 160, 164, 170, 172, 174, 183, 195, 196, 202, 206, 207, 208, 209, 211, 213, 218, 227, 228, 229, 231, 232, 234, 237, 242, 245, 256, 257, 265, 266, 323, 476, 479, 481, 482, 492, 728, 738, 739, 741, 742, 744], "creat": [1, 2, 4, 5, 8, 9, 11, 15, 16, 18, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 74, 76, 80, 83, 86, 88, 92, 93, 95, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 123, 125, 127, 128, 132, 134, 135, 136, 141, 142, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 200, 201, 202, 203, 205, 206, 213, 216, 219, 224, 225, 226, 228, 230, 232, 235, 237, 240, 241, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 289, 298, 299, 304, 309, 310, 311, 314, 328, 356, 357, 358, 362, 367, 375, 376, 414, 421, 427, 431, 436, 438, 449, 450, 455, 481, 482, 493, 498, 500, 505, 519, 520, 521, 524, 526, 527, 530, 553, 563, 564, 566, 567, 569, 573, 576, 577, 581, 582, 584, 589, 595, 623, 625, 649, 650, 651, 653, 656, 661, 662, 666, 689, 692, 698, 707, 712, 713, 714, 715, 716, 725, 728, 731, 737, 738, 739, 740, 742, 743, 747, 760, 763, 765, 768, 773, 776, 777, 783, 784, 786, 788, 791, 792, 795, 796, 797, 798, 799, 803, 805, 808, 810, 811, 812, 813, 814, 815, 816, 818, 820, 822, 823, 831, 832, 842, 847, 849, 855, 859, 868, 872, 877, 880, 882, 892], "an": [1, 4, 5, 7, 11, 12, 15, 18, 19, 21, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 64, 68, 69, 70, 72, 74, 75, 79, 82, 83, 84, 88, 90, 92, 93, 94, 95, 101, 104, 107, 108, 109, 110, 111, 112, 114, 115, 119, 120, 121, 122, 127, 128, 129, 130, 132, 135, 136, 137, 140, 141, 144, 146, 149, 150, 151, 152, 153, 155, 156, 158, 160, 162, 163, 164, 165, 166, 167, 170, 171, 175, 176, 177, 178, 179, 181, 183, 186, 187, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 240, 241, 243, 244, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 292, 294, 298, 299, 301, 303, 304, 305, 306, 314, 316, 318, 319, 320, 323, 327, 330, 332, 341, 349, 350, 351, 356, 360, 362, 363, 365, 367, 372, 373, 375, 376, 389, 392, 393, 397, 413, 414, 420, 421, 422, 426, 429, 431, 432, 433, 436, 438, 439, 441, 443, 448, 449, 450, 453, 454, 455, 456, 457, 461, 462, 464, 469, 473, 476, 478, 479, 480, 481, 482, 483, 486, 488, 490, 491, 496, 497, 498, 499, 500, 502, 506, 508, 509, 515, 516, 518, 519, 522, 525, 526, 527, 530, 531, 533, 537, 538, 540, 541, 542, 544, 545, 546, 549, 551, 553, 560, 561, 563, 564, 565, 566, 567, 568, 572, 574, 576, 577, 579, 581, 582, 584, 586, 588, 590, 594, 597, 598, 599, 600, 606, 609, 612, 617, 618, 619, 620, 621, 624, 626, 628, 629, 631, 639, 641, 645, 646, 648, 650, 651, 653, 656, 660, 661, 662, 665, 668, 672, 677, 678, 684, 687, 689, 692, 693, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 720, 725, 728, 731, 732, 738, 742, 743, 746, 747, 750, 752, 758, 760, 761, 769, 773, 775, 776, 777, 781, 782, 784, 786, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 826, 828, 830, 838, 839, 840, 847, 849, 850, 851, 855, 856, 857, 858, 863, 868, 869, 870, 871, 873, 874, 875, 877, 878, 880, 892], "oper": [1, 5, 11, 15, 18, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 70, 72, 74, 84, 88, 90, 92, 93, 95, 104, 107, 108, 109, 110, 121, 124, 132, 140, 141, 142, 145, 146, 149, 151, 152, 155, 156, 162, 163, 164, 165, 166, 167, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 191, 196, 200, 201, 202, 203, 205, 206, 207, 210, 216, 223, 224, 229, 230, 232, 235, 237, 245, 258, 259, 262, 265, 266, 267, 268, 269, 270, 271, 275, 276, 278, 279, 283, 285, 286, 298, 299, 301, 303, 304, 314, 318, 319, 330, 336, 349, 355, 376, 377, 384, 392, 415, 420, 423, 430, 435, 436, 439, 452, 453, 454, 455, 459, 460, 461, 476, 477, 478, 479, 481, 482, 483, 489, 496, 500, 516, 525, 526, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 557, 562, 564, 567, 569, 585, 591, 597, 613, 616, 618, 626, 631, 641, 652, 653, 664, 665, 666, 673, 675, 676, 677, 678, 691, 699, 700, 701, 702, 703, 706, 709, 712, 713, 739, 740, 741, 742, 743, 744, 746, 776, 817, 825, 828, 829, 839, 847, 849, 851, 857, 868, 871, 877, 878, 890, 892], "subspac": [1, 11, 15, 18, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 69, 70, 72, 74, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 132, 140, 141, 142, 145, 146, 149, 151, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 200, 201, 203, 205, 206, 207, 210, 223, 232, 235, 237, 257, 580, 599, 847], "dimens": [1, 11, 15, 18, 19, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 69, 70, 72, 74, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 127, 132, 140, 141, 142, 145, 146, 149, 151, 152, 160, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 195, 196, 200, 201, 203, 205, 206, 207, 209, 223, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 262, 265, 266, 267, 268, 272, 273, 274, 275, 276, 278, 279, 280, 281, 288, 315, 362, 414, 417, 420, 421, 424, 425, 427, 429, 453, 454, 476, 478, 479, 481, 482, 537, 538, 540, 541, 547, 548, 563, 564, 579, 692, 693, 697, 699, 700, 702, 703, 712, 714, 715, 716, 730, 731, 741, 750, 760, 769, 777, 792, 799, 803, 812, 813, 815, 820, 822, 847, 867, 874, 877, 892], "fran\u00e7oi": [1, 72, 79, 109, 183, 184, 191, 200, 245, 564, 573, 874], "tadel": [1, 109, 183, 184, 191, 245], "sylvain": [1, 109, 183, 184, 191, 245], "baillet": [1, 109, 183, 184, 191, 245], "john": [1, 18, 19, 51, 69, 83, 109, 126, 178, 180, 183, 184, 191, 245, 264, 265, 266, 267, 268, 301, 391, 392, 418, 420, 432, 476, 531, 542, 564, 580, 603, 669, 674, 712, 715, 868, 874, 892], "c": [1, 4, 10, 11, 12, 19, 22, 44, 51, 71, 75, 96, 109, 112, 115, 121, 126, 137, 161, 171, 176, 180, 183, 184, 188, 191, 195, 196, 206, 212, 229, 230, 231, 232, 242, 245, 257, 258, 271, 276, 277, 278, 301, 337, 340, 356, 362, 391, 406, 407, 420, 421, 455, 458, 476, 481, 482, 520, 526, 539, 564, 572, 578, 608, 626, 672, 677, 741, 744, 760, 849, 850, 851, 855, 856, 858, 863, 866, 867, 868, 874, 875, 877, 880, 881, 892], "mosher": [1, 51, 109, 180, 183, 184, 191, 245, 301, 874], "dimitrio": [1, 10, 109, 183, 184, 191, 245, 868], "pantazi": [1, 10, 109, 183, 184, 191, 245, 868], "richard": [1, 51, 109, 183, 184, 191, 209, 241, 245, 301, 392, 564, 572, 694, 868, 874, 879, 892], "leahi": [1, 51, 109, 183, 184, 191, 245, 301, 874], "user": [1, 45, 76, 94, 109, 142, 156, 165, 167, 171, 172, 183, 184, 189, 190, 191, 201, 202, 216, 245, 258, 260, 265, 266, 267, 268, 269, 270, 272, 273, 276, 278, 279, 280, 281, 380, 381, 382, 383, 385, 386, 387, 389, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 435, 443, 480, 481, 482, 498, 564, 588, 606, 657, 710, 711, 712, 715, 777, 790, 797, 807, 813, 822, 849, 851, 853, 855, 856, 858, 862, 867, 868, 870, 871, 873, 875, 876, 892], "friendli": [1, 109, 183, 184, 191, 245], "applic": [1, 15, 71, 74, 88, 109, 149, 162, 170, 178, 183, 184, 191, 192, 196, 202, 205, 206, 207, 210, 242, 245, 260, 265, 266, 267, 268, 416, 421, 425, 438, 450, 452, 453, 466, 481, 482, 500, 506, 522, 523, 565, 596, 599, 622, 625, 714, 716, 760, 792, 813, 851, 854, 858, 863, 871, 874, 892], "analysi": [1, 3, 6, 8, 13, 15, 17, 20, 42, 43, 44, 71, 75, 83, 88, 96, 97, 101, 109, 127, 140, 142, 144, 145, 153, 154, 155, 160, 161, 167, 168, 171, 172, 173, 174, 178, 183, 184, 188, 190, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 216, 217, 219, 224, 227, 228, 229, 231, 232, 240, 244, 245, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 279, 280, 281, 298, 299, 314, 316, 330, 355, 356, 362, 365, 376, 405, 407, 414, 422, 428, 438, 443, 455, 471, 476, 481, 482, 491, 502, 524, 530, 531, 545, 555, 561, 564, 565, 572, 579, 595, 597, 626, 661, 665, 672, 693, 694, 697, 699, 712, 714, 715, 716, 724, 726, 728, 730, 738, 739, 740, 741, 742, 743, 744, 760, 784, 793, 822, 832, 847, 850, 852, 854, 858, 863, 866, 867, 868, 873, 874, 875, 880, 882, 889, 890, 892], "intellig": [1, 109, 183, 184, 191, 195, 245, 420, 454], "neurosci": [1, 4, 10, 16, 19, 43, 71, 75, 109, 113, 151, 183, 184, 191, 195, 196, 202, 232, 245, 256, 277, 362, 415, 420, 430, 564, 569, 572, 672, 699, 700, 702, 703, 728, 738, 739, 741, 742, 744, 866, 868, 873, 879], "2011": [1, 15, 21, 32, 34, 59, 88, 109, 151, 169, 183, 184, 189, 191, 202, 224, 227, 245, 298, 422, 479, 531, 565, 705, 706, 874], "13": [1, 9, 10, 11, 12, 13, 16, 19, 21, 26, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 68, 71, 75, 77, 79, 80, 81, 83, 84, 85, 93, 94, 96, 97, 100, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 124, 130, 132, 133, 134, 136, 139, 142, 144, 145, 146, 149, 150, 152, 154, 158, 162, 166, 169, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 191, 195, 196, 201, 202, 204, 205, 207, 209, 210, 211, 215, 216, 222, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 245, 260, 264, 265, 266, 267, 268, 270, 271, 276, 278, 283, 337, 361, 383, 406, 425, 435, 449, 450, 452, 453, 455, 481, 482, 564, 581, 582, 599, 626, 642, 645, 675, 678, 712, 715, 742, 743, 794, 805, 816, 845, 847, 856, 866, 867, 874], "doi": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 60, 66, 71, 72, 75, 76, 79, 83, 84, 88, 94, 101, 109, 112, 113, 117, 119, 121, 126, 129, 137, 141, 144, 151, 155, 157, 162, 176, 178, 180, 183, 184, 191, 195, 196, 200, 202, 204, 205, 206, 207, 208, 210, 212, 224, 227, 228, 232, 240, 245, 265, 266, 267, 268, 271, 276, 277, 291, 298, 299, 301, 303, 356, 362, 383, 391, 392, 396, 397, 406, 407, 414, 415, 418, 420, 421, 422, 430, 432, 438, 476, 478, 479, 481, 482, 531, 532, 542, 546, 563, 564, 565, 569, 572, 573, 575, 578, 579, 580, 599, 603, 606, 607, 614, 656, 665, 669, 672, 674, 677, 696, 698, 699, 700, 701, 702, 703, 705, 706, 714, 716, 724, 726, 728, 730, 731, 738, 739, 741, 742, 744, 777, 866, 867, 868, 871, 874], "10": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 28, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 101, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 126, 127, 128, 129, 130, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 291, 298, 299, 301, 303, 311, 314, 326, 332, 337, 342, 346, 349, 352, 353, 354, 356, 362, 367, 383, 391, 392, 396, 397, 406, 407, 414, 415, 416, 418, 420, 421, 422, 425, 430, 432, 435, 438, 449, 450, 452, 453, 458, 476, 478, 479, 481, 482, 506, 520, 521, 531, 532, 542, 546, 551, 563, 564, 565, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 588, 589, 590, 593, 595, 599, 603, 606, 607, 614, 625, 647, 656, 665, 669, 672, 674, 676, 677, 678, 693, 695, 696, 698, 699, 700, 701, 702, 703, 705, 706, 712, 714, 715, 716, 724, 726, 728, 730, 731, 738, 739, 740, 741, 742, 743, 744, 750, 760, 765, 775, 777, 790, 792, 799, 801, 802, 807, 808, 813, 818, 823, 850, 851, 854, 857, 866, 867, 868, 871, 874, 877, 880], "1155": [1, 109, 183, 184, 191, 196, 245], "879716": [1, 109, 183, 184, 191, 245], "total": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 360, 377, 431, 481, 482, 566, 616, 707, 714, 716, 792, 818, 823, 874, 877, 892], "run": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 257, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 305, 323, 349, 356, 357, 359, 361, 378, 383, 416, 417, 420, 424, 425, 427, 430, 431, 452, 453, 454, 457, 470, 472, 481, 482, 516, 522, 525, 526, 537, 538, 547, 548, 564, 569, 576, 577, 579, 588, 589, 592, 597, 600, 616, 651, 660, 663, 664, 665, 666, 675, 676, 677, 678, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 744, 760, 783, 790, 792, 795, 799, 802, 803, 807, 813, 814, 849, 850, 854, 855, 856, 857, 859, 868, 873, 874, 875, 878, 892], "script": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 275, 481, 482, 813, 851, 852, 854, 856, 857, 858, 868, 871, 872, 874, 877, 882, 892], "minut": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 265, 266, 277, 283, 437, 481, 482, 564, 664, 665, 807, 813, 855], "7": [1, 4, 5, 8, 9, 10, 11, 12, 13, 19, 21, 25, 28, 30, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 49, 55, 56, 59, 61, 62, 65, 67, 69, 71, 72, 74, 75, 77, 80, 81, 82, 83, 85, 93, 94, 97, 103, 104, 107, 108, 109, 112, 113, 114, 115, 120, 127, 128, 130, 131, 136, 137, 140, 142, 143, 144, 145, 146, 149, 151, 156, 158, 159, 160, 164, 166, 169, 170, 171, 172, 176, 179, 180, 181, 182, 183, 184, 185, 190, 191, 194, 195, 196, 199, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 244, 245, 256, 264, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 316, 337, 356, 383, 392, 406, 413, 425, 427, 455, 478, 564, 569, 588, 597, 599, 603, 617, 651, 652, 678, 692, 693, 694, 712, 715, 716, 718, 721, 728, 738, 739, 740, 742, 743, 760, 791, 796, 805, 818, 819, 823, 849, 850, 857, 866, 868, 874, 877], "290": [1, 6, 13, 81, 112, 144, 169, 184, 209, 232, 245, 672], "second": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 285, 286, 288, 297, 298, 299, 324, 325, 343, 345, 361, 414, 420, 421, 426, 438, 440, 443, 448, 449, 451, 455, 456, 479, 480, 481, 482, 500, 502, 505, 518, 523, 524, 534, 537, 563, 564, 566, 567, 568, 569, 572, 574, 576, 577, 581, 584, 585, 588, 589, 590, 591, 592, 599, 607, 613, 617, 626, 629, 662, 678, 698, 699, 700, 702, 703, 704, 706, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 740, 743, 760, 768, 784, 791, 792, 793, 796, 799, 803, 804, 805, 807, 812, 813, 814, 815, 818, 820, 823, 837, 847, 851, 857, 867, 868, 871, 874, 877, 892], "estim": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 246, 257, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 286, 290, 291, 292, 293, 295, 296, 298, 299, 314, 322, 330, 343, 345, 349, 356, 360, 361, 362, 367, 368, 369, 372, 373, 374, 376, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 435, 448, 449, 451, 453, 454, 455, 457, 458, 461, 476, 477, 478, 479, 481, 482, 486, 516, 518, 519, 525, 527, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 551, 564, 565, 569, 573, 574, 581, 585, 589, 592, 597, 599, 611, 613, 614, 629, 631, 634, 639, 640, 641, 651, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 677, 679, 693, 697, 698, 704, 705, 707, 708, 714, 716, 717, 718, 719, 720, 721, 722, 731, 739, 740, 742, 743, 760, 776, 777, 783, 784, 785, 792, 800, 807, 814, 817, 818, 819, 822, 823, 824, 847, 852, 858, 860, 868, 871, 877, 880, 882, 890, 892], "usag": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 257, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 423, 427, 481, 482, 599, 699, 700, 702, 703, 712, 714, 715, 716, 718, 721, 737, 739, 740, 741, 742, 743, 744, 847, 870, 871, 874, 877, 892], "491": [1, 6, 232], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 265, 266, 275, 481, 482, 790, 813, 857], "python": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 162, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 203, 204, 207, 208, 209, 211, 212, 214, 215, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 256, 259, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 298, 299, 316, 319, 325, 330, 331, 334, 355, 367, 376, 379, 380, 381, 382, 385, 386, 387, 389, 390, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 433, 439, 443, 447, 455, 462, 463, 464, 466, 473, 481, 482, 496, 498, 500, 502, 506, 521, 524, 530, 531, 545, 555, 558, 564, 581, 584, 585, 586, 588, 613, 619, 648, 650, 655, 657, 711, 712, 714, 715, 716, 728, 731, 738, 739, 740, 742, 743, 755, 756, 784, 790, 793, 807, 813, 821, 840, 842, 847, 850, 858, 862, 867, 868, 872, 873, 874, 875, 878, 879, 890, 892], "brainstorm_data": [1, 6], "py": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 849, 851, 871, 892], "jupyt": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 825, 871, 873, 875, 892], "notebook": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 825, 831, 855, 871, 875, 880, 892], "ipynb": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242], "galleri": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 851], "gener": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 195, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 256, 257, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 292, 293, 296, 310, 323, 328, 329, 330, 349, 355, 356, 383, 414, 416, 417, 420, 421, 424, 425, 431, 438, 443, 448, 450, 452, 453, 455, 472, 477, 478, 481, 482, 486, 487, 498, 502, 506, 516, 519, 526, 530, 531, 533, 535, 538, 542, 545, 561, 562, 563, 564, 565, 567, 576, 578, 581, 582, 589, 591, 592, 597, 599, 616, 620, 626, 629, 631, 633, 634, 636, 637, 660, 661, 662, 664, 665, 666, 675, 676, 677, 678, 679, 692, 696, 697, 699, 700, 701, 702, 703, 708, 712, 714, 715, 716, 724, 725, 745, 757, 760, 761, 763, 773, 776, 780, 784, 791, 799, 803, 804, 814, 815, 818, 819, 828, 842, 847, 857, 858, 859, 863, 866, 867, 868, 869, 870, 872, 873, 875, 876, 877, 879, 892], "sphinx": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 756, 851, 892], "thi": [2, 4, 5, 7, 9, 10, 13, 14, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55, 57, 58, 59, 61, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 87, 88, 90, 93, 94, 95, 96, 97, 99, 101, 103, 104, 109, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 292, 293, 296, 298, 299, 304, 305, 307, 308, 309, 310, 311, 314, 315, 318, 319, 320, 321, 322, 323, 326, 327, 328, 332, 333, 334, 339, 343, 344, 347, 349, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 372, 373, 374, 375, 378, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 393, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 463, 464, 466, 467, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 492, 496, 497, 498, 500, 501, 504, 505, 508, 510, 513, 514, 516, 518, 523, 524, 526, 530, 531, 532, 533, 534, 535, 537, 538, 540, 541, 542, 548, 550, 551, 555, 559, 561, 563, 564, 565, 566, 567, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 584, 585, 587, 588, 589, 590, 591, 594, 595, 596, 597, 598, 599, 600, 603, 606, 607, 613, 616, 617, 619, 622, 623, 624, 626, 628, 629, 633, 634, 639, 642, 648, 650, 653, 654, 656, 658, 660, 661, 664, 665, 666, 673, 675, 676, 677, 678, 679, 682, 683, 686, 689, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 713, 714, 715, 716, 719, 730, 740, 743, 747, 750, 754, 755, 757, 758, 760, 762, 763, 765, 769, 770, 773, 775, 776, 777, 778, 781, 782, 786, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 825, 826, 829, 830, 840, 842, 847, 849, 850, 851, 854, 855, 856, 857, 858, 859, 867, 868, 869, 871, 873, 874, 875, 877, 878, 880, 882, 892], "look": [2, 4, 7, 8, 19, 21, 27, 32, 33, 42, 55, 58, 61, 68, 69, 71, 72, 83, 84, 93, 108, 111, 112, 113, 120, 121, 122, 127, 133, 135, 141, 144, 145, 150, 151, 156, 158, 160, 161, 162, 166, 168, 172, 175, 177, 178, 179, 180, 182, 183, 188, 189, 191, 192, 199, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 216, 224, 227, 232, 241, 242, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 301, 303, 305, 311, 380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 455, 462, 464, 481, 482, 512, 564, 566, 594, 617, 712, 760, 776, 779, 806, 816, 818, 823, 824, 849, 850, 851, 866, 872, 873, 874, 875, 877, 892], "high": [2, 4, 7, 10, 12, 22, 38, 40, 59, 74, 75, 82, 83, 84, 88, 94, 99, 119, 141, 142, 143, 151, 156, 157, 160, 167, 171, 188, 190, 191, 196, 199, 203, 205, 206, 207, 210, 211, 212, 229, 230, 231, 232, 236, 242, 245, 265, 266, 267, 268, 278, 283, 356, 357, 358, 359, 361, 396, 416, 425, 449, 450, 452, 473, 481, 482, 506, 531, 564, 569, 572, 576, 577, 581, 582, 589, 590, 592, 593, 599, 603, 665, 698, 760, 847, 858, 876, 892], "frequenc": [2, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 36, 42, 56, 69, 72, 73, 74, 77, 81, 82, 83, 84, 88, 90, 93, 94, 99, 103, 104, 106, 107, 108, 109, 110, 112, 115, 121, 123, 126, 127, 133, 137, 140, 141, 142, 143, 144, 146, 149, 151, 156, 167, 168, 169, 172, 180, 183, 191, 195, 196, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 231, 235, 237, 244, 245, 257, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 279, 280, 281, 284, 288, 289, 290, 291, 292, 293, 298, 314, 330, 343, 344, 351, 356, 365, 376, 396, 414, 416, 419, 420, 422, 425, 426, 427, 435, 438, 440, 442, 443, 449, 450, 452, 453, 454, 455, 477, 479, 481, 482, 489, 491, 496, 530, 531, 535, 537, 538, 542, 547, 548, 561, 564, 569, 572, 576, 577, 581, 582, 588, 589, 590, 592, 593, 599, 603, 617, 620, 629, 631, 679, 691, 698, 699, 700, 702, 703, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 755, 760, 764, 783, 786, 787, 788, 792, 793, 801, 805, 808, 814, 819, 820, 822, 847, 871, 877, 878, 882, 892], "respons": [2, 4, 8, 10, 16, 17, 19, 20, 27, 35, 46, 49, 51, 59, 60, 66, 78, 85, 88, 94, 96, 97, 107, 113, 117, 120, 121, 122, 128, 130, 135, 142, 143, 145, 149, 150, 162, 168, 180, 183, 185, 191, 196, 199, 202, 207, 213, 231, 232, 235, 237, 242, 245, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 356, 376, 396, 420, 426, 428, 438, 440, 443, 450, 453, 481, 482, 561, 565, 614, 626, 712, 714, 715, 716, 725, 791, 798, 800, 801, 808, 847, 867, 868, 873, 874, 877, 892], "jussi": [2, 62, 245, 396, 599, 892], "nurminen": [2, 62, 245, 396, 599, 892], "jnu": [2, 62], "iki": [2, 62], "fi": [2, 10, 62, 86, 191, 480], "o": [2, 19, 44, 62, 72, 76, 83, 115, 125, 140, 159, 161, 169, 171, 172, 185, 195, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 245, 257, 262, 265, 266, 267, 268, 270, 356, 375, 392, 414, 421, 462, 481, 482, 563, 564, 573, 578, 655, 712, 714, 716, 777, 792, 799, 815, 820, 822, 851, 855, 863, 868, 871, 882, 892], "hf_sef": [2, 171, 868, 882, 892], "fname_evok": [2, 11, 30, 38, 39, 41, 44, 57, 58, 61, 124, 127, 179, 181, 223], "path": [2, 19, 33, 43, 44, 45, 62, 76, 101, 115, 119, 120, 123, 125, 135, 136, 140, 144, 155, 156, 157, 158, 159, 166, 170, 171, 172, 175, 181, 182, 185, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 228, 257, 259, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 302, 305, 306, 309, 310, 311, 314, 315, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 354, 362, 367, 368, 369, 375, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 433, 435, 448, 457, 462, 463, 464, 466, 467, 470, 472, 473, 474, 475, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 520, 522, 526, 545, 549, 550, 551, 553, 554, 563, 564, 574, 575, 586, 588, 594, 595, 599, 609, 610, 611, 612, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 657, 660, 661, 663, 664, 665, 675, 677, 678, 680, 681, 689, 707, 708, 710, 711, 712, 713, 714, 715, 716, 732, 733, 734, 745, 747, 749, 752, 754, 759, 760, 768, 776, 778, 788, 790, 800, 807, 813, 818, 823, 824, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 854, 856, 857, 862, 892], "join": [2, 10, 19, 44, 62, 76, 135, 140, 159, 170, 171, 184, 185, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 265, 266, 267, 268, 481, 482], "subject_b": 2, "hf_sef_15min": 2, "av": [2, 11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 79, 86, 87, 90, 92, 95, 116, 119, 120, 124, 127, 149, 150, 172, 176, 178, 179, 181, 223, 257, 265, 266, 267, 268, 275, 481, 482, 554, 629, 638, 715, 838, 868], "fif": [2, 5, 7, 10, 11, 13, 14, 15, 16, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 191, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 224, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 252, 259, 262, 263, 264, 265, 266, 267, 268, 270, 275, 278, 306, 314, 336, 367, 368, 369, 435, 444, 445, 446, 447, 464, 481, 482, 502, 506, 522, 526, 545, 549, 564, 574, 588, 595, 599, 611, 617, 619, 620, 621, 622, 626, 629, 631, 637, 641, 644, 648, 651, 677, 680, 707, 747, 749, 760, 776, 833, 835, 836, 837, 838, 839, 840, 843, 844, 846, 851, 858, 863, 867, 868, 874, 877, 880, 892], "interest": [2, 4, 9, 16, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 79, 82, 86, 87, 90, 95, 96, 97, 100, 101, 104, 107, 112, 113, 114, 116, 119, 120, 127, 128, 135, 137, 140, 142, 143, 144, 149, 150, 155, 160, 162, 170, 172, 176, 178, 179, 180, 181, 190, 192, 195, 196, 199, 202, 203, 206, 211, 212, 213, 217, 223, 224, 227, 228, 229, 230, 231, 241, 242, 260, 265, 266, 267, 268, 270, 290, 292, 326, 419, 422, 438, 440, 458, 466, 481, 482, 516, 537, 538, 548, 563, 564, 614, 623, 625, 661, 712, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 742, 743, 760, 814, 820, 847, 851, 867, 871, 874, 892], "t": [2, 4, 5, 9, 15, 19, 21, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 64, 66, 71, 79, 81, 83, 84, 86, 87, 93, 94, 95, 96, 98, 101, 102, 108, 114, 115, 116, 117, 119, 120, 127, 140, 141, 143, 144, 145, 146, 149, 151, 156, 157, 158, 159, 160, 162, 165, 166, 168, 170, 171, 172, 176, 177, 178, 179, 180, 181, 183, 184, 188, 191, 195, 196, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 223, 224, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 245, 257, 260, 261, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 288, 298, 299, 343, 346, 352, 361, 362, 375, 376, 380, 381, 382, 385, 386, 387, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 420, 435, 437, 449, 455, 458, 476, 479, 481, 482, 492, 493, 530, 531, 539, 545, 551, 553, 555, 561, 564, 567, 575, 576, 581, 582, 588, 590, 597, 599, 600, 608, 616, 619, 623, 625, 626, 629, 630, 633, 636, 639, 641, 658, 661, 677, 678, 684, 690, 696, 697, 698, 699, 701, 702, 704, 705, 706, 712, 713, 714, 715, 716, 728, 732, 735, 738, 739, 740, 742, 743, 750, 760, 795, 805, 847, 850, 851, 852, 857, 859, 867, 868, 873, 874, 875, 877, 892], "250": [2, 4, 21, 46, 81, 117, 123, 136, 137, 141, 143, 151, 156, 166, 169, 181, 199, 201, 202, 203, 207, 209, 227, 232, 240, 245, 665, 719, 856, 892], "ctf": [2, 27, 30, 31, 35, 36, 38, 39, 40, 41, 44, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 79, 86, 87, 101, 116, 119, 120, 127, 140, 143, 149, 165, 170, 172, 176, 178, 179, 181, 186, 187, 193, 194, 227, 228, 259, 262, 263, 265, 266, 267, 268, 269, 270, 276, 304, 340, 347, 355, 357, 361, 363, 365, 366, 455, 457, 481, 482, 494, 520, 521, 526, 527, 530, 531, 540, 541, 542, 543, 546, 561, 562, 577, 599, 620, 629, 631, 637, 644, 660, 712, 714, 715, 716, 760, 776, 868, 874, 877, 892], "matric": [2, 10, 30, 31, 34, 35, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 79, 86, 87, 101, 103, 116, 119, 120, 127, 140, 143, 146, 149, 156, 163, 165, 166, 172, 176, 178, 179, 181, 188, 196, 227, 228, 245, 291, 298, 356, 414, 422, 481, 482, 575, 588, 599, 611, 663, 664, 665, 677, 698, 713, 723, 751, 753, 786, 867, 874, 877, 889, 892], "nave": [2, 5, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 69, 79, 86, 87, 90, 92, 94, 104, 107, 108, 109, 110, 114, 116, 119, 120, 127, 149, 166, 172, 176, 177, 178, 179, 181, 182, 191, 196, 222, 223, 224, 235, 237, 258, 264, 267, 268, 270, 355, 471, 532, 533, 534, 535, 537, 538, 544, 547, 548, 676, 712, 877, 892], "2790": 2, "aspect": [2, 16, 22, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 79, 86, 87, 107, 116, 119, 120, 127, 142, 149, 172, 176, 178, 179, 181, 203, 206, 229, 230, 231, 232, 763, 877, 892], "specifi": [2, 4, 5, 9, 19, 31, 38, 41, 43, 47, 64, 88, 94, 95, 101, 103, 109, 114, 120, 127, 128, 135, 140, 141, 142, 149, 150, 151, 155, 158, 166, 167, 168, 169, 170, 171, 172, 178, 184, 185, 188, 192, 196, 199, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 216, 217, 218, 219, 228, 229, 232, 235, 241, 257, 259, 260, 262, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 289, 291, 298, 299, 304, 311, 316, 326, 332, 356, 357, 358, 359, 360, 361, 362, 372, 373, 374, 375, 380, 381, 382, 383, 385, 386, 387, 388, 391, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 421, 425, 426, 430, 431, 435, 438, 440, 449, 450, 452, 453, 455, 457, 458, 466, 470, 473, 476, 478, 479, 480, 481, 482, 483, 491, 496, 497, 506, 510, 522, 525, 530, 532, 540, 541, 542, 553, 563, 564, 567, 569, 574, 575, 577, 578, 579, 583, 584, 588, 599, 614, 617, 621, 623, 625, 630, 633, 639, 648, 651, 653, 656, 661, 662, 677, 689, 692, 698, 699, 700, 702, 703, 710, 712, 714, 715, 716, 728, 738, 742, 747, 760, 763, 775, 776, 777, 779, 784, 791, 792, 794, 798, 799, 800, 803, 805, 806, 807, 809, 812, 815, 818, 819, 820, 822, 823, 824, 825, 829, 842, 847, 851, 869, 871, 874, 877, 892], "pleas": [2, 4, 5, 75, 77, 83, 101, 109, 123, 135, 136, 137, 146, 166, 172, 184, 185, 189, 196, 199, 204, 205, 211, 212, 228, 237, 257, 265, 266, 290, 292, 334, 374, 392, 441, 453, 455, 481, 482, 492, 564, 588, 600, 631, 790, 807, 813, 839, 847, 849, 851, 855, 857, 863, 866, 867, 868, 870, 872, 874, 875, 892], "consid": [2, 4, 5, 82, 93, 101, 104, 108, 109, 112, 137, 141, 144, 152, 156, 159, 161, 162, 166, 184, 185, 192, 196, 199, 200, 201, 202, 204, 205, 210, 211, 212, 227, 228, 229, 232, 235, 237, 242, 260, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 288, 298, 299, 311, 321, 339, 356, 360, 361, 373, 374, 414, 421, 422, 435, 444, 445, 446, 447, 449, 455, 462, 478, 479, 481, 482, 489, 496, 498, 500, 504, 511, 559, 564, 566, 567, 572, 574, 575, 579, 581, 583, 585, 588, 591, 597, 599, 604, 623, 625, 629, 673, 682, 683, 684, 686, 687, 699, 700, 702, 703, 712, 715, 717, 718, 719, 720, 721, 722, 723, 760, 773, 782, 790, 793, 794, 806, 813, 847, 849, 870, 873, 892], "self": [2, 4, 5, 101, 109, 172, 184, 185, 196, 199, 204, 211, 212, 228, 237, 259, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 279, 280, 281, 289, 304, 367, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 480, 481, 482, 500, 530, 563, 564, 565, 584, 585, 712, 714, 715, 716, 747, 761, 851, 869, 871, 892], "highpass": [2, 12, 72, 74, 77, 81, 82, 83, 90, 93, 99, 127, 141, 146, 151, 166, 167, 168, 169, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 242, 257, 265, 266, 267, 268, 270, 449, 481, 482, 714, 716, 813, 814, 877, 892], "version": [2, 19, 34, 71, 84, 114, 145, 146, 150, 155, 161, 166, 171, 188, 189, 190, 195, 196, 201, 202, 219, 257, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 298, 299, 306, 309, 311, 314, 322, 342, 343, 345, 349, 362, 389, 414, 415, 416, 419, 421, 422, 423, 425, 430, 435, 443, 448, 449, 452, 453, 454, 458, 467, 473, 476, 478, 479, 481, 482, 490, 500, 502, 505, 507, 510, 511, 513, 518, 522, 525, 526, 542, 552, 555, 556, 557, 563, 564, 565, 579, 588, 621, 629, 631, 647, 656, 660, 661, 664, 665, 677, 694, 704, 705, 706, 707, 712, 714, 715, 716, 729, 760, 770, 776, 777, 778, 784, 785, 788, 789, 790, 792, 794, 796, 799, 800, 803, 807, 810, 812, 813, 814, 815, 816, 818, 820, 822, 823, 824, 825, 838, 850, 851, 854, 855, 856, 857, 866, 868, 871, 873, 874, 877, 880], "evoked_hp": 2, "l_freq": [2, 21, 83, 114, 144, 146, 151, 191, 202, 203, 205, 207, 242, 257, 265, 266, 267, 268, 416, 425, 450, 452, 481, 482, 564, 572, 576, 577, 581, 582, 589, 590, 592, 593, 603, 878], "300": [2, 4, 5, 21, 30, 34, 46, 51, 56, 60, 75, 81, 82, 92, 116, 135, 140, 149, 151, 169, 183, 203, 205, 209, 212, 227, 232, 240, 712, 877, 892], "h_freq": [2, 21, 83, 114, 144, 146, 151, 191, 202, 203, 205, 207, 210, 242, 257, 265, 266, 267, 268, 416, 425, 450, 452, 481, 482, 564, 572, 576, 577, 581, 582, 588, 589, 590, 592, 593, 603, 878], "3e": [2, 8, 9, 21, 32, 35, 45, 48, 49, 50, 51, 54, 55, 58, 60, 94, 109, 152, 176, 178, 179, 180, 181, 196, 576, 577, 777], "edg": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 59, 71, 73, 74, 77, 82, 83, 84, 88, 99, 110, 113, 114, 115, 120, 121, 133, 136, 141, 142, 144, 146, 151, 161, 172, 191, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 218, 219, 223, 227, 232, 242, 262, 265, 266, 267, 268, 274, 275, 283, 320, 414, 416, 420, 421, 443, 450, 452, 454, 479, 481, 482, 489, 496, 563, 564, 566, 567, 579, 588, 599, 603, 712, 714, 716, 764, 773, 777, 778, 792, 799, 803, 812, 813, 815, 820, 822, 871, 892], "75": [2, 4, 5, 8, 12, 13, 15, 16, 19, 21, 24, 34, 35, 41, 44, 71, 73, 77, 80, 81, 83, 96, 103, 114, 115, 127, 135, 143, 144, 146, 158, 169, 172, 180, 184, 190, 191, 194, 195, 196, 199, 201, 204, 205, 207, 208, 209, 213, 218, 227, 228, 231, 232, 481, 482, 564, 816, 868, 874, 892], "cutoff": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 34, 42, 73, 74, 77, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 136, 141, 144, 146, 151, 172, 191, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 213, 232, 265, 266, 267, 268, 416, 425, 450, 452, 481, 482, 564, 572, 588, 603], "262": [2, 12, 21, 151, 169, 209, 211, 227, 232, 245], "133": [2, 19, 35, 62, 156, 169, 171, 195, 196, 208, 224, 226, 227], "044": [2, 69, 85, 140, 142, 149, 169, 224], "condit": [2, 10, 11, 16, 17, 20, 27, 30, 31, 35, 38, 39, 40, 41, 44, 45, 51, 58, 59, 60, 61, 62, 79, 86, 87, 88, 94, 96, 99, 110, 112, 119, 120, 122, 124, 130, 140, 141, 142, 143, 144, 145, 149, 150, 153, 165, 166, 168, 176, 177, 178, 179, 180, 181, 184, 185, 191, 196, 202, 211, 217, 222, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 245, 258, 265, 266, 267, 268, 270, 355, 356, 417, 424, 430, 436, 481, 529, 554, 561, 565, 575, 588, 599, 614, 626, 628, 629, 630, 693, 698, 699, 700, 702, 712, 714, 715, 716, 734, 742, 784, 798, 847, 851, 867, 868, 874, 878, 892], "kind": [2, 5, 7, 11, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 65, 69, 83, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 127, 131, 135, 136, 142, 149, 151, 156, 160, 166, 169, 170, 172, 175, 177, 178, 179, 180, 181, 184, 190, 191, 196, 203, 206, 223, 224, 235, 236, 237, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 298, 299, 307, 308, 314, 315, 330, 340, 377, 393, 433, 434, 449, 475, 481, 482, 515, 552, 565, 629, 707, 712, 714, 715, 716, 728, 738, 760, 779, 781, 810, 816, 818, 823, 824, 851, 858, 871, 874, 877, 892], "timepoint": [2, 19, 59, 101, 120, 141, 149, 151, 179, 181, 184, 216, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 288, 350, 525, 581, 629, 630], "901": [2, 232], "306": [2, 13, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 62, 69, 83, 84, 90, 92, 93, 94, 95, 109, 131, 146, 158, 169, 172, 177, 178, 179, 180, 183, 196, 209, 210, 223, 224, 227, 232, 564, 868], "number": [2, 4, 5, 9, 10, 11, 31, 34, 35, 39, 40, 42, 44, 46, 49, 52, 59, 73, 75, 77, 82, 83, 88, 90, 92, 93, 100, 103, 107, 109, 113, 114, 121, 127, 135, 140, 142, 143, 144, 145, 146, 149, 150, 151, 160, 161, 162, 165, 166, 168, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 196, 199, 200, 201, 202, 204, 205, 206, 210, 213, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 245, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 298, 299, 300, 301, 303, 326, 329, 337, 344, 350, 356, 357, 358, 359, 360, 361, 362, 364, 367, 372, 373, 374, 383, 413, 414, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 430, 431, 435, 437, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 470, 471, 472, 476, 478, 479, 480, 481, 482, 483, 492, 506, 514, 516, 522, 525, 526, 531, 532, 533, 534, 535, 537, 538, 540, 541, 542, 544, 546, 547, 548, 563, 564, 565, 569, 573, 574, 575, 576, 577, 579, 580, 588, 589, 590, 592, 594, 595, 597, 598, 604, 605, 616, 626, 630, 651, 660, 661, 662, 663, 664, 665, 666, 670, 671, 672, 675, 676, 677, 678, 686, 687, 688, 689, 691, 692, 693, 695, 697, 699, 700, 701, 702, 703, 704, 707, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 726, 728, 730, 731, 738, 739, 740, 741, 742, 743, 744, 750, 758, 759, 760, 768, 777, 783, 784, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 801, 803, 804, 806, 807, 812, 813, 814, 815, 818, 819, 820, 821, 822, 823, 826, 847, 851, 866, 868, 871, 875, 877, 892], "rang": [2, 4, 5, 9, 10, 11, 13, 14, 15, 16, 18, 19, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 127, 129, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 151, 152, 156, 158, 159, 160, 162, 166, 167, 168, 169, 171, 172, 176, 177, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 257, 258, 262, 265, 266, 267, 268, 270, 274, 275, 298, 323, 376, 383, 398, 406, 407, 414, 417, 421, 423, 424, 447, 473, 478, 481, 482, 489, 563, 564, 569, 579, 588, 712, 713, 714, 715, 716, 728, 738, 777, 790, 791, 792, 796, 799, 803, 812, 813, 814, 815, 820, 822, 847, 867, 873, 874, 877, 892], "05": [2, 4, 5, 6, 8, 9, 10, 19, 20, 34, 35, 42, 46, 49, 51, 56, 59, 60, 61, 67, 72, 79, 84, 87, 92, 95, 96, 97, 100, 102, 103, 112, 116, 119, 120, 124, 130, 141, 144, 150, 151, 164, 170, 171, 177, 179, 180, 181, 183, 185, 191, 196, 199, 200, 203, 207, 209, 211, 213, 216, 221, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 245, 298, 299, 323, 326, 332, 453, 457, 481, 482, 500, 546, 573, 585, 672, 690, 695, 696, 699, 700, 702, 703, 704, 712, 726, 728, 738, 742, 764, 819], "25": [2, 4, 5, 11, 13, 16, 18, 19, 25, 26, 28, 32, 34, 35, 41, 42, 43, 45, 47, 49, 50, 52, 53, 56, 65, 69, 71, 73, 81, 82, 83, 103, 104, 106, 108, 109, 112, 113, 114, 116, 118, 123, 124, 130, 135, 136, 137, 143, 145, 146, 151, 159, 164, 169, 171, 172, 175, 178, 180, 181, 183, 191, 195, 196, 198, 199, 201, 202, 204, 205, 206, 207, 209, 210, 211, 215, 218, 224, 227, 228, 229, 231, 232, 235, 237, 240, 241, 245, 259, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 362, 406, 414, 416, 425, 450, 452, 481, 482, 603, 672, 701, 760, 764, 784, 796, 813, 816, 818, 823, 850, 867, 874], "off": [2, 4, 10, 68, 74, 77, 93, 114, 116, 127, 135, 137, 141, 143, 149, 151, 152, 156, 159, 160, 166, 167, 168, 169, 171, 191, 195, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 212, 216, 217, 218, 219, 222, 223, 224, 245, 257, 260, 265, 266, 267, 268, 278, 298, 299, 416, 425, 450, 452, 481, 482, 563, 576, 577, 579, 590, 593, 599, 603, 614, 740, 743, 851, 867, 868, 874, 877, 892], "compar": [2, 4, 10, 19, 21, 22, 26, 27, 28, 36, 38, 39, 56, 74, 78, 83, 85, 89, 91, 103, 113, 114, 122, 130, 141, 143, 144, 145, 146, 158, 160, 162, 166, 167, 172, 176, 180, 183, 184, 191, 196, 202, 204, 206, 207, 208, 229, 230, 231, 235, 236, 242, 260, 262, 265, 266, 267, 268, 269, 270, 271, 276, 278, 360, 361, 366, 390, 455, 481, 482, 486, 516, 519, 523, 530, 531, 542, 543, 546, 562, 564, 599, 620, 622, 626, 629, 631, 634, 662, 666, 667, 668, 669, 670, 671, 672, 674, 677, 683, 760, 768, 790, 798, 807, 813, 851, 859, 871, 880, 892], "unfilt": [2, 166, 172, 202, 205], "singl": [2, 3, 6, 16, 18, 27, 33, 34, 36, 45, 56, 68, 71, 75, 83, 84, 87, 94, 101, 103, 105, 106, 113, 117, 120, 122, 130, 140, 141, 142, 144, 145, 149, 150, 151, 158, 165, 166, 168, 169, 170, 172, 176, 178, 180, 183, 184, 188, 189, 190, 196, 199, 200, 202, 205, 206, 207, 208, 210, 211, 212, 216, 217, 222, 224, 227, 232, 233, 234, 237, 241, 242, 245, 257, 259, 260, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 292, 293, 296, 298, 299, 306, 314, 316, 320, 321, 326, 355, 356, 361, 389, 414, 415, 421, 427, 430, 436, 440, 443, 455, 473, 481, 482, 497, 500, 501, 503, 517, 520, 523, 525, 527, 530, 531, 533, 535, 537, 538, 545, 561, 563, 564, 569, 572, 579, 614, 622, 626, 633, 639, 646, 656, 661, 678, 692, 693, 695, 696, 697, 699, 700, 707, 712, 713, 714, 715, 716, 728, 738, 739, 740, 742, 743, 750, 760, 776, 777, 778, 784, 788, 791, 792, 793, 794, 796, 799, 800, 803, 810, 811, 812, 814, 815, 816, 820, 822, 835, 851, 860, 867, 868, 871, 874, 877, 878, 880, 892], "meg0443": 2, "ch_name": [2, 4, 7, 15, 18, 19, 31, 64, 68, 71, 73, 75, 86, 100, 112, 114, 115, 120, 125, 135, 136, 140, 146, 149, 151, 159, 166, 168, 169, 172, 184, 190, 191, 200, 203, 205, 207, 210, 211, 212, 213, 216, 222, 224, 229, 230, 231, 232, 241, 257, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 298, 299, 314, 316, 320, 323, 326, 331, 339, 372, 373, 376, 480, 481, 482, 555, 556, 557, 558, 564, 576, 577, 581, 582, 588, 589, 590, 610, 631, 653, 666, 712, 713, 714, 715, 716, 717, 718, 719, 729, 781, 790, 791, 813, 877, 892], "index": [2, 4, 19, 21, 31, 47, 62, 71, 73, 76, 90, 133, 136, 143, 149, 150, 151, 160, 166, 169, 170, 172, 175, 180, 183, 184, 188, 191, 195, 199, 201, 204, 205, 206, 207, 209, 210, 211, 213, 217, 218, 223, 228, 229, 240, 241, 245, 258, 259, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 285, 286, 297, 298, 299, 313, 323, 351, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 523, 534, 554, 564, 581, 582, 589, 590, 592, 593, 594, 603, 629, 630, 672, 712, 713, 714, 715, 716, 760, 773, 778, 784, 788, 793, 803, 805, 807, 847, 868, 874, 892], "edi": 2, "regular": [2, 5, 28, 29, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 61, 79, 83, 90, 94, 99, 104, 107, 108, 109, 110, 121, 166, 169, 178, 179, 180, 181, 182, 191, 196, 200, 207, 210, 222, 223, 224, 227, 235, 237, 267, 268, 271, 277, 298, 299, 356, 360, 361, 372, 373, 414, 421, 422, 426, 435, 443, 457, 458, 476, 478, 479, 489, 492, 496, 504, 531, 532, 533, 534, 535, 537, 538, 539, 542, 544, 547, 548, 558, 565, 573, 575, 588, 599, 634, 689, 692, 699, 700, 702, 703, 706, 799, 800, 817, 859, 867, 873, 882, 892], "viz": [2, 4, 5, 7, 12, 19, 24, 27, 31, 35, 38, 39, 40, 41, 42, 46, 47, 51, 52, 57, 59, 60, 71, 80, 81, 86, 88, 92, 93, 101, 109, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 130, 132, 133, 135, 136, 137, 141, 142, 143, 144, 150, 151, 155, 156, 157, 158, 159, 160, 166, 170, 171, 177, 178, 180, 181, 182, 183, 184, 185, 190, 195, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 217, 227, 232, 242, 263, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 311, 320, 331, 481, 482, 564, 621, 629, 639, 644, 712, 849, 851, 867, 869, 871, 874, 878, 882, 891, 892], "plot_compare_evok": [2, 4, 101, 127, 141, 142, 143, 144, 150, 151, 166, 211, 232, 265, 266, 791, 878, 882, 892], "432": [2, 6, 13, 34, 96, 171, 196, 227, 232], "hf_sef_data": [2, 6], "some": [3, 4, 5, 10, 16, 21, 27, 34, 40, 54, 55, 62, 66, 68, 71, 74, 76, 95, 98, 103, 105, 109, 113, 114, 120, 127, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 156, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 183, 184, 189, 190, 191, 192, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 216, 217, 218, 219, 222, 223, 224, 227, 231, 232, 233, 240, 242, 257, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 279, 280, 281, 310, 314, 318, 322, 356, 375, 389, 428, 437, 448, 467, 473, 481, 482, 489, 496, 559, 563, 564, 566, 574, 583, 599, 607, 613, 623, 625, 652, 656, 660, 694, 700, 712, 714, 715, 716, 728, 738, 742, 776, 778, 795, 797, 813, 847, 849, 850, 851, 854, 855, 858, 863, 866, 867, 868, 869, 871, 872, 873, 874, 875, 878, 880, 892], "demo": [3, 27, 847, 892], "common": [3, 17, 20, 27, 32, 33, 34, 43, 44, 68, 76, 115, 135, 149, 151, 155, 158, 160, 162, 165, 172, 189, 192, 202, 204, 205, 206, 207, 210, 211, 216, 217, 224, 236, 242, 245, 265, 266, 267, 268, 270, 278, 314, 319, 330, 356, 365, 376, 414, 439, 443, 464, 470, 481, 482, 496, 500, 561, 564, 580, 642, 646, 656, 712, 845, 847, 851, 868, 871, 874, 875, 878, 880, 892], "public": [3, 27, 112, 116, 120, 122, 130, 144, 202, 260, 267, 270, 276, 453, 480, 481, 629, 639, 760, 779, 851, 867, 873, 880, 892], "brainstorm": [3, 6, 27, 81, 82, 84, 109, 119, 165, 171, 186, 187, 193, 194, 245, 259, 262, 263, 265, 267, 268, 270, 276, 304, 355, 356, 357, 358, 361, 363, 365, 434, 455, 457, 481, 494, 520, 521, 526, 527, 530, 531, 542, 561, 577, 591, 599, 631, 637, 644, 660, 760, 776, 788, 800, 828, 874, 882, 890, 892], "raw": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 27, 28, 32, 33, 34, 36, 41, 42, 45, 46, 49, 56, 62, 64, 66, 68, 69, 70, 72, 73, 74, 75, 77, 79, 80, 82, 83, 84, 88, 89, 91, 92, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 127, 128, 129, 132, 133, 135, 136, 141, 142, 144, 145, 146, 149, 151, 156, 158, 159, 162, 165, 166, 167, 169, 170, 171, 173, 174, 180, 182, 183, 184, 185, 188, 189, 190, 191, 192, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 220, 221, 223, 224, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 275, 276, 278, 282, 284, 285, 286, 297, 298, 299, 314, 316, 319, 343, 345, 347, 348, 349, 350, 355, 356, 358, 359, 360, 361, 364, 365, 374, 384, 396, 419, 422, 439, 443, 447, 449, 452, 455, 456, 473, 480, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 519, 522, 523, 524, 526, 528, 530, 531, 532, 533, 534, 535, 537, 538, 542, 545, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 593, 597, 598, 599, 600, 601, 602, 603, 606, 607, 613, 614, 620, 624, 626, 628, 631, 633, 634, 653, 656, 662, 663, 664, 665, 666, 677, 678, 698, 712, 714, 715, 716, 725, 730, 758, 760, 790, 793, 794, 803, 804, 805, 807, 813, 814, 830, 847, 849, 851, 867, 868, 869, 877, 878, 882, 892], "median": [3, 5, 6, 27, 71, 128, 150, 157, 196, 205, 228, 240, 241, 262, 265, 266, 267, 268, 270, 274, 316, 358, 414, 421, 423, 455, 481, 482, 494, 561, 563, 564, 579, 591, 599, 691, 712, 714, 715, 716, 731, 777, 784, 791, 792, 799, 803, 812, 815, 820, 822, 892], "nerv": [3, 5, 6, 27, 265, 267, 268, 270, 358, 455, 494, 561, 591], "hf": [3, 6, 27, 96, 127, 191, 267, 396, 784], "sef": [3, 6, 27, 127, 267, 396, 784, 867], "trial": [3, 6, 13, 16, 18, 27, 28, 33, 70, 71, 73, 84, 101, 104, 107, 113, 114, 117, 122, 130, 140, 141, 142, 143, 144, 149, 151, 152, 165, 166, 168, 180, 183, 191, 195, 196, 201, 202, 205, 222, 224, 227, 232, 233, 234, 235, 237, 245, 265, 266, 267, 268, 270, 292, 293, 296, 320, 326, 355, 414, 427, 430, 436, 437, 438, 440, 443, 455, 481, 497, 500, 501, 533, 535, 561, 564, 572, 626, 646, 692, 693, 695, 696, 697, 699, 700, 712, 715, 739, 740, 742, 743, 784, 790, 793, 847, 868, 892], "linear": [3, 5, 6, 8, 9, 13, 17, 19, 20, 26, 27, 32, 41, 45, 50, 54, 55, 61, 99, 101, 107, 109, 110, 112, 120, 135, 136, 141, 158, 159, 166, 176, 177, 181, 182, 195, 196, 202, 204, 205, 206, 245, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 278, 279, 280, 281, 343, 355, 414, 418, 420, 421, 426, 429, 432, 449, 450, 452, 453, 481, 482, 521, 534, 536, 543, 546, 563, 564, 579, 591, 597, 626, 635, 663, 664, 665, 677, 697, 698, 707, 712, 714, 716, 748, 750, 760, 777, 779, 784, 792, 793, 799, 801, 803, 808, 812, 814, 815, 818, 820, 822, 823, 824, 847, 858, 860, 867, 868, 871, 892], "regress": [3, 6, 10, 11, 12, 15, 18, 19, 27, 31, 42, 78, 85, 98, 102, 147, 148, 165, 196, 214, 215, 227, 245, 265, 266, 267, 268, 270, 355, 420, 426, 455, 481, 529, 532, 561, 563, 582, 609, 614, 622, 696, 697, 698, 784, 793, 796, 815, 868, 880, 892], "limo": [3, 6, 27, 171, 245, 266, 267, 268, 355, 697, 784, 793, 882, 892], "optic": [3, 6, 27, 76, 165, 188, 190, 214, 215, 245, 263, 265, 267, 268, 270, 276, 304, 356, 366, 374, 443, 455, 457, 490, 503, 530, 531, 542, 558, 561, 563, 578, 601, 602, 606, 618, 631, 716, 754, 760, 776, 828, 847, 868, 892], "pump": [3, 6, 27, 165, 188, 214, 215, 245, 263, 265, 267, 268, 270, 276, 304, 356, 366, 455, 457, 503, 530, 531, 542, 558, 561, 563, 578, 618, 631, 716, 754, 760, 776, 828, 847, 868, 892], "magnetomet": [3, 6, 22, 27, 32, 74, 77, 80, 81, 82, 87, 93, 109, 119, 120, 142, 145, 146, 150, 151, 162, 165, 166, 167, 168, 169, 180, 183, 184, 188, 191, 199, 200, 201, 203, 205, 206, 207, 208, 210, 214, 215, 216, 217, 218, 219, 222, 227, 245, 257, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 298, 299, 304, 322, 356, 357, 358, 359, 360, 361, 366, 372, 373, 374, 414, 421, 435, 455, 457, 458, 476, 478, 479, 481, 482, 503, 519, 530, 531, 542, 558, 561, 562, 563, 564, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 599, 610, 618, 631, 698, 712, 714, 715, 716, 754, 760, 776, 777, 783, 790, 791, 792, 794, 796, 799, 800, 803, 812, 813, 815, 820, 821, 822, 828, 847, 867, 868, 871, 874, 892], "opm": [3, 6, 27, 105, 106, 165, 171, 214, 215, 245, 262, 263, 265, 267, 268, 270, 276, 304, 356, 361, 366, 455, 457, 503, 521, 526, 530, 531, 537, 542, 558, 561, 563, 578, 618, 631, 660, 716, 754, 760, 776, 828, 847, 874, 882, 892], "dspm": [3, 6, 11, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 55, 56, 59, 61, 104, 105, 106, 107, 108, 109, 165, 166, 175, 178, 179, 181, 182, 186, 187, 191, 196, 223, 224, 235, 237, 262, 265, 267, 268, 269, 270, 271, 272, 273, 276, 278, 279, 280, 281, 291, 295, 298, 299, 355, 356, 360, 455, 478, 479, 481, 494, 517, 522, 526, 530, 531, 532, 533, 534, 535, 536, 537, 538, 542, 543, 544, 545, 547, 548, 561, 564, 582, 626, 629, 631, 633, 721, 760, 785, 793, 847, 867, 868, 877, 892], "spm": [3, 6, 27, 123, 196, 355, 356, 409, 455, 494, 522, 526, 531, 542, 561, 564, 582, 793, 880, 890, 892], "face": [3, 4, 6, 10, 27, 70, 123, 140, 142, 144, 149, 151, 161, 166, 172, 175, 196, 199, 245, 265, 266, 308, 355, 356, 455, 494, 522, 526, 531, 542, 561, 564, 582, 642, 645, 712, 773, 793, 821, 840, 845, 877, 880, 892], "explor": [4, 27, 105, 106, 109, 158, 181, 196, 200, 202, 204, 207, 213, 219, 222, 223, 241, 242, 265, 268, 280, 281, 288, 455, 691, 824, 848, 868, 869, 871], "structur": [4, 8, 9, 10, 27, 41, 43, 59, 63, 64, 68, 71, 83, 94, 95, 112, 114, 123, 135, 137, 142, 146, 147, 148, 151, 153, 154, 155, 159, 165, 166, 167, 170, 171, 173, 174, 181, 185, 186, 187, 189, 190, 192, 195, 205, 213, 217, 220, 221, 225, 226, 227, 228, 242, 245, 259, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 278, 279, 280, 281, 312, 313, 314, 322, 355, 375, 376, 392, 396, 455, 479, 481, 482, 486, 501, 524, 544, 555, 558, 560, 561, 575, 584, 595, 599, 622, 624, 628, 629, 639, 672, 682, 683, 684, 685, 686, 687, 688, 692, 712, 714, 715, 716, 731, 750, 760, 816, 847, 851, 852, 855, 858, 863, 865, 867, 868, 869, 880, 892], "contain": [4, 16, 18, 27, 31, 38, 41, 43, 53, 80, 88, 94, 101, 108, 112, 116, 127, 128, 137, 140, 143, 144, 146, 149, 151, 155, 158, 162, 165, 166, 168, 169, 170, 171, 172, 175, 181, 183, 188, 189, 190, 191, 192, 202, 204, 205, 206, 207, 210, 211, 212, 213, 216, 217, 222, 224, 227, 240, 241, 242, 252, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 285, 286, 290, 298, 299, 300, 305, 309, 310, 311, 314, 315, 316, 317, 320, 321, 322, 328, 337, 351, 356, 357, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 373, 374, 389, 393, 395, 396, 397, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 433, 435, 438, 441, 442, 443, 448, 455, 456, 457, 458, 462, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 482, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 512, 513, 516, 517, 520, 522, 524, 525, 542, 550, 553, 554, 559, 563, 564, 565, 567, 569, 579, 580, 584, 588, 594, 595, 596, 598, 599, 603, 605, 611, 612, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 628, 629, 630, 634, 637, 640, 642, 643, 645, 651, 653, 655, 656, 660, 661, 667, 668, 669, 670, 671, 672, 673, 674, 675, 678, 680, 681, 689, 691, 697, 699, 700, 702, 703, 704, 707, 708, 712, 713, 714, 715, 716, 724, 727, 735, 739, 740, 742, 743, 752, 760, 776, 777, 778, 779, 784, 787, 788, 791, 792, 793, 794, 796, 797, 799, 800, 801, 803, 809, 812, 815, 816, 817, 818, 819, 820, 822, 823, 824, 837, 840, 842, 843, 845, 847, 850, 851, 867, 868, 869, 871, 874, 877, 878, 892], "replic": [4, 16, 231, 235, 236, 237, 271, 689, 868, 871, 872, 892], "extend": [4, 77, 141, 144, 151, 166, 180, 200, 205, 207, 210, 212, 232, 245, 259, 262, 263, 265, 266, 267, 268, 274, 280, 356, 414, 421, 481, 482, 516, 524, 563, 564, 567, 575, 579, 588, 597, 599, 679, 712, 714, 716, 728, 738, 742, 750, 777, 788, 792, 799, 803, 812, 815, 820, 822, 858, 867, 880, 892], "main": [4, 49, 94, 101, 143, 156, 168, 171, 208, 212, 218, 231, 237, 265, 266, 328, 396, 473, 494, 693, 695, 790, 849, 851, 859, 868, 874, 875, 892], "tool": [4, 27, 54, 55, 71, 80, 89, 140, 151, 155, 158, 161, 171, 190, 192, 199, 200, 202, 205, 207, 211, 228, 237, 242, 245, 252, 272, 273, 276, 279, 280, 281, 481, 482, 520, 546, 849, 854, 855, 856, 857, 859, 863, 867, 871, 872, 873, 874, 875, 879, 880, 882, 890, 892], "integr": [4, 155, 160, 201, 205, 227, 237, 245, 546, 564, 599, 672, 851, 855, 863, 874, 877, 892], "meeg": [4, 242], "matlab": [4, 19, 195, 245, 305, 420, 501, 608, 624, 628, 857, 858, 868, 875, 876, 880, 890, 892], "toolbox": [4, 19, 71, 151, 155, 195, 245, 305, 420, 453, 572, 858, 868], "origin": [4, 5, 8, 9, 11, 12, 13, 16, 18, 21, 22, 24, 26, 32, 33, 34, 38, 41, 42, 45, 46, 49, 50, 71, 72, 73, 76, 79, 80, 81, 87, 93, 94, 96, 97, 100, 103, 107, 110, 112, 113, 114, 117, 118, 121, 128, 135, 136, 137, 140, 141, 142, 144, 145, 146, 149, 151, 152, 156, 158, 159, 160, 161, 162, 166, 167, 169, 170, 172, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 213, 216, 218, 224, 229, 230, 231, 232, 235, 237, 240, 241, 257, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 278, 279, 280, 281, 283, 285, 286, 298, 299, 314, 362, 372, 414, 421, 428, 429, 430, 435, 438, 448, 475, 480, 481, 482, 489, 492, 496, 501, 516, 522, 532, 563, 564, 565, 574, 575, 579, 588, 599, 606, 614, 624, 628, 631, 636, 649, 651, 653, 661, 663, 664, 665, 672, 677, 697, 704, 712, 714, 715, 716, 756, 760, 776, 777, 784, 790, 792, 794, 796, 799, 800, 803, 810, 812, 813, 814, 815, 816, 819, 820, 822, 839, 847, 851, 859, 867, 868, 874, 877, 892], "interfac": [4, 8, 15, 45, 88, 155, 158, 166, 189, 196, 200, 202, 205, 206, 219, 245, 267, 268, 378, 383, 473, 565, 760, 799, 854, 858, 863, 868, 877, 892], "eeglab": [4, 68, 71, 128, 168, 202, 205, 245, 262, 265, 266, 267, 268, 270, 274, 314, 332, 414, 421, 444, 447, 481, 482, 497, 563, 564, 572, 579, 612, 617, 623, 712, 714, 716, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 874, 892], "In": [4, 5, 10, 15, 16, 19, 21, 32, 40, 42, 43, 44, 45, 46, 59, 71, 75, 79, 82, 83, 87, 88, 90, 94, 101, 103, 112, 114, 115, 116, 118, 126, 127, 132, 135, 137, 140, 142, 144, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 166, 167, 168, 170, 171, 172, 175, 176, 178, 181, 188, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 222, 224, 227, 228, 229, 237, 240, 241, 242, 245, 257, 259, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 289, 298, 299, 301, 304, 305, 310, 312, 322, 329, 331, 343, 356, 360, 361, 372, 373, 374, 375, 414, 416, 420, 421, 430, 431, 435, 438, 447, 449, 457, 458, 476, 478, 479, 481, 482, 489, 496, 530, 531, 532, 533, 534, 535, 539, 542, 559, 563, 564, 565, 566, 579, 580, 581, 582, 584, 591, 595, 597, 605, 607, 614, 616, 639, 656, 677, 680, 698, 707, 712, 714, 715, 716, 720, 721, 722, 723, 725, 728, 738, 739, 740, 741, 742, 743, 744, 747, 757, 760, 773, 784, 790, 791, 792, 793, 794, 796, 797, 799, 800, 803, 804, 811, 812, 813, 814, 815, 818, 820, 821, 824, 847, 849, 851, 852, 856, 857, 859, 862, 867, 868, 871, 873, 874, 877, 878, 892], "summari": [4, 10, 172, 201, 205, 219, 272, 273, 276, 279, 280, 281, 540, 541, 704, 851, 877], "fetch": [4, 137, 250, 383, 388, 389, 390, 391, 392, 393, 398, 406, 407, 851, 868, 892], "subject": [4, 5, 7, 8, 9, 10, 11, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 69, 72, 73, 80, 81, 83, 89, 90, 91, 95, 104, 109, 112, 113, 115, 116, 118, 124, 125, 126, 127, 131, 134, 135, 136, 137, 140, 143, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 196, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 238, 241, 242, 245, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 298, 299, 305, 309, 310, 311, 314, 343, 344, 345, 346, 351, 353, 354, 362, 367, 368, 369, 375, 383, 388, 390, 391, 392, 393, 398, 406, 407, 433, 448, 464, 466, 468, 470, 472, 473, 474, 475, 481, 482, 483, 486, 516, 518, 520, 522, 526, 530, 531, 542, 550, 551, 564, 568, 579, 594, 595, 599, 616, 620, 626, 631, 633, 634, 636, 639, 643, 648, 649, 650, 651, 660, 661, 662, 664, 665, 666, 675, 677, 678, 689, 693, 695, 704, 707, 708, 750, 752, 759, 760, 776, 778, 783, 788, 789, 802, 816, 818, 823, 824, 841, 842, 847, 857, 865, 867, 869, 871, 874, 880, 892], "If": [4, 27, 28, 31, 43, 44, 70, 71, 82, 99, 101, 115, 117, 120, 127, 135, 137, 140, 142, 144, 146, 149, 150, 151, 156, 159, 160, 161, 165, 168, 169, 170, 171, 172, 175, 181, 182, 188, 189, 190, 192, 196, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 216, 217, 218, 219, 222, 227, 228, 229, 235, 240, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 334, 337, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 755, 759, 760, 765, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 854, 855, 856, 857, 858, 859, 862, 867, 868, 871, 872, 873, 874, 875, 877, 878, 892], "disk": [4, 29, 80, 108, 110, 142, 143, 149, 150, 158, 166, 170, 172, 177, 180, 184, 200, 206, 209, 210, 216, 217, 218, 224, 257, 259, 260, 261, 265, 266, 267, 268, 270, 271, 283, 315, 389, 433, 455, 480, 481, 482, 566, 622, 629, 631, 633, 639, 661, 714, 716, 733, 760, 790, 794, 798, 800, 813, 839, 841, 857, 867, 871, 874, 877, 892], "fetcher": [4, 137, 868, 880, 892], "automat": [4, 71, 79, 80, 83, 94, 101, 140, 141, 142, 144, 145, 149, 150, 151, 155, 156, 166, 168, 169, 170, 172, 182, 189, 190, 191, 192, 199, 200, 201, 202, 203, 205, 206, 207, 210, 216, 218, 219, 222, 232, 245, 257, 259, 260, 262, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 283, 314, 320, 342, 362, 380, 381, 382, 383, 385, 386, 387, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 424, 427, 435, 438, 446, 462, 463, 470, 472, 481, 482, 487, 494, 498, 502, 506, 526, 563, 564, 566, 574, 575, 576, 579, 588, 589, 592, 597, 599, 614, 625, 636, 647, 650, 655, 656, 661, 672, 699, 700, 702, 703, 712, 715, 756, 760, 778, 779, 783, 784, 790, 793, 796, 797, 798, 799, 806, 807, 813, 818, 823, 824, 850, 851, 857, 858, 867, 868, 874, 892], "remot": [4, 192, 213, 250, 390, 826, 849, 851, 857, 880], "repositori": [4, 170, 852, 858, 873], "dure": [4, 19, 33, 38, 43, 45, 71, 81, 83, 94, 100, 103, 116, 121, 127, 136, 141, 144, 149, 155, 157, 160, 166, 167, 168, 171, 172, 180, 182, 191, 196, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 213, 216, 217, 218, 219, 242, 245, 257, 263, 265, 266, 267, 268, 269, 270, 272, 275, 276, 278, 280, 281, 282, 298, 299, 306, 343, 345, 349, 356, 360, 361, 363, 368, 372, 373, 374, 414, 420, 421, 431, 437, 438, 449, 457, 458, 476, 478, 479, 481, 482, 483, 494, 500, 510, 522, 526, 542, 550, 564, 584, 585, 586, 588, 595, 599, 614, 653, 656, 662, 677, 680, 686, 687, 688, 707, 712, 714, 715, 716, 718, 721, 741, 744, 748, 749, 758, 760, 776, 779, 790, 797, 800, 804, 807, 813, 818, 824, 847, 850, 856, 859, 867, 868, 869, 873, 874, 877, 892], "inform": [4, 5, 9, 11, 21, 22, 26, 28, 29, 31, 34, 35, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 64, 69, 80, 84, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 124, 131, 134, 135, 140, 141, 142, 143, 144, 146, 149, 150, 151, 156, 158, 159, 160, 162, 165, 166, 168, 170, 172, 175, 177, 179, 180, 181, 182, 188, 189, 190, 191, 192, 195, 196, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 218, 222, 223, 224, 227, 229, 232, 235, 237, 241, 242, 245, 250, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 285, 286, 298, 299, 300, 307, 308, 312, 313, 320, 321, 322, 326, 328, 329, 331, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 360, 362, 372, 373, 374, 376, 414, 416, 421, 422, 423, 433, 434, 438, 444, 445, 446, 447, 449, 450, 452, 453, 455, 458, 465, 466, 472, 476, 479, 480, 481, 482, 483, 486, 492, 501, 514, 519, 522, 525, 526, 527, 532, 542, 560, 561, 563, 564, 574, 575, 578, 584, 587, 588, 595, 597, 599, 604, 605, 610, 612, 615, 624, 626, 627, 628, 646, 647, 653, 658, 660, 676, 677, 680, 699, 703, 709, 711, 712, 713, 714, 715, 716, 728, 739, 740, 741, 742, 743, 744, 749, 750, 755, 756, 760, 773, 776, 780, 784, 785, 786, 788, 791, 795, 801, 802, 808, 812, 816, 822, 838, 847, 849, 850, 851, 854, 855, 858, 863, 868, 869, 872, 873, 875, 892], "e": [4, 7, 8, 12, 28, 41, 42, 44, 46, 47, 54, 70, 71, 72, 80, 84, 101, 112, 114, 120, 137, 140, 141, 143, 144, 146, 150, 151, 153, 155, 157, 160, 161, 162, 165, 166, 168, 169, 170, 171, 178, 180, 185, 188, 189, 190, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 213, 216, 217, 222, 223, 224, 227, 228, 229, 232, 235, 237, 241, 242, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 289, 298, 299, 300, 304, 305, 308, 310, 312, 314, 315, 320, 329, 331, 342, 353, 356, 360, 361, 367, 372, 373, 374, 383, 389, 390, 392, 397, 406, 407, 414, 416, 417, 420, 421, 423, 424, 425, 428, 429, 430, 433, 434, 435, 438, 441, 443, 446, 447, 448, 450, 452, 453, 455, 456, 457, 458, 464, 470, 473, 475, 476, 478, 479, 480, 481, 482, 483, 493, 494, 496, 498, 500, 511, 516, 518, 520, 523, 524, 525, 526, 530, 531, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 550, 563, 564, 566, 567, 572, 573, 574, 575, 578, 579, 580, 581, 582, 584, 587, 588, 590, 591, 594, 595, 599, 605, 606, 607, 614, 619, 626, 629, 630, 633, 634, 639, 646, 647, 648, 649, 650, 651, 657, 659, 661, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 680, 683, 697, 698, 699, 700, 701, 702, 703, 704, 707, 708, 711, 712, 714, 715, 716, 720, 721, 722, 723, 724, 725, 728, 738, 742, 743, 747, 750, 760, 765, 773, 776, 777, 778, 783, 784, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 804, 806, 807, 811, 812, 813, 814, 815, 818, 820, 822, 823, 826, 837, 840, 847, 849, 850, 851, 852, 855, 857, 863, 867, 868, 871, 873, 874, 877, 878, 880, 892], "rate": [4, 70, 97, 101, 103, 180, 189, 190, 195, 202, 203, 205, 231, 241, 245, 260, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 376, 419, 449, 453, 455, 481, 482, 489, 496, 504, 590, 597, 613, 665, 677, 690, 696, 698, 701, 712, 714, 715, 716, 730, 790, 792, 801, 813, 871, 892], "per": [4, 31, 47, 90, 94, 101, 107, 110, 120, 126, 131, 142, 144, 150, 151, 158, 166, 169, 180, 192, 201, 205, 207, 219, 227, 232, 237, 241, 257, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 316, 323, 362, 378, 391, 406, 414, 421, 424, 427, 435, 438, 447, 448, 481, 482, 540, 541, 546, 547, 548, 564, 565, 568, 616, 656, 664, 693, 695, 708, 712, 714, 716, 718, 721, 728, 730, 731, 738, 739, 740, 742, 743, 750, 760, 790, 791, 792, 799, 803, 804, 821, 851, 857, 873, 874, 880, 892], "name": [4, 5, 7, 8, 10, 18, 22, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 58, 59, 60, 69, 71, 83, 90, 92, 93, 94, 95, 100, 101, 103, 109, 112, 126, 131, 132, 135, 137, 141, 142, 143, 144, 145, 149, 150, 159, 160, 161, 166, 168, 169, 170, 171, 172, 177, 178, 179, 180, 190, 191, 196, 200, 201, 202, 205, 206, 208, 210, 211, 212, 219, 222, 223, 224, 227, 228, 240, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 305, 309, 310, 311, 312, 314, 315, 320, 323, 324, 325, 326, 327, 329, 330, 331, 336, 338, 339, 340, 342, 353, 361, 362, 365, 367, 368, 369, 372, 373, 376, 384, 389, 392, 395, 414, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 430, 432, 433, 435, 438, 441, 444, 445, 446, 447, 455, 456, 464, 466, 467, 468, 470, 472, 473, 474, 475, 480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 515, 516, 518, 522, 523, 545, 549, 553, 554, 555, 561, 562, 563, 564, 565, 566, 577, 579, 580, 581, 582, 588, 589, 590, 591, 592, 595, 600, 605, 607, 610, 611, 614, 616, 617, 619, 621, 623, 624, 625, 626, 628, 630, 631, 632, 633, 634, 636, 637, 639, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 653, 656, 660, 661, 666, 680, 689, 693, 697, 698, 704, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 728, 732, 734, 738, 740, 743, 745, 747, 757, 759, 760, 765, 776, 777, 778, 779, 781, 784, 788, 789, 790, 791, 792, 794, 796, 797, 798, 799, 803, 804, 810, 811, 812, 813, 814, 815, 816, 818, 819, 820, 822, 823, 824, 836, 837, 838, 839, 842, 843, 844, 845, 846, 847, 849, 850, 855, 856, 857, 859, 868, 869, 874, 878, 882, 892], "etc": [4, 27, 31, 36, 47, 78, 143, 155, 160, 166, 167, 168, 171, 172, 175, 188, 189, 190, 199, 200, 201, 205, 210, 216, 219, 222, 227, 235, 242, 258, 263, 265, 266, 267, 268, 270, 271, 272, 276, 280, 336, 443, 455, 456, 481, 482, 489, 501, 505, 525, 536, 561, 564, 578, 599, 624, 628, 653, 658, 686, 687, 688, 689, 699, 700, 702, 703, 712, 714, 715, 716, 760, 784, 788, 791, 818, 847, 851, 855, 856, 869, 871, 873, 874, 877, 878, 880, 892], "mat": [4, 19, 195, 245, 270, 501, 624, 628, 874, 892], "store": [4, 16, 29, 30, 71, 90, 93, 94, 95, 104, 109, 115, 116, 135, 140, 141, 142, 143, 144, 149, 150, 151, 155, 156, 158, 160, 162, 168, 169, 170, 172, 175, 182, 189, 190, 191, 192, 200, 201, 206, 207, 210, 211, 213, 216, 218, 219, 223, 224, 242, 257, 258, 259, 263, 265, 266, 267, 268, 270, 275, 276, 277, 279, 283, 326, 347, 365, 383, 389, 396, 397, 406, 407, 416, 418, 429, 438, 443, 447, 452, 473, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 523, 542, 551, 553, 564, 572, 579, 587, 598, 617, 623, 624, 628, 631, 654, 664, 665, 677, 692, 712, 713, 715, 717, 718, 719, 720, 721, 722, 723, 732, 761, 768, 780, 813, 838, 839, 847, 851, 867, 868, 869, 871, 874, 877, 892], "fit": [4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 24, 40, 41, 45, 50, 59, 71, 72, 74, 75, 77, 79, 80, 81, 83, 88, 101, 111, 116, 123, 137, 141, 151, 152, 156, 158, 165, 166, 170, 172, 177, 179, 183, 184, 185, 186, 187, 189, 192, 196, 200, 203, 204, 207, 208, 209, 210, 212, 231, 245, 251, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 275, 280, 301, 303, 307, 308, 314, 343, 344, 345, 346, 349, 353, 354, 355, 367, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 433, 435, 443, 453, 457, 481, 482, 493, 522, 525, 531, 561, 563, 564, 565, 568, 571, 573, 574, 575, 579, 588, 589, 599, 629, 661, 676, 697, 712, 714, 715, 716, 725, 760, 777, 784, 788, 792, 794, 796, 799, 800, 803, 804, 805, 807, 810, 812, 814, 815, 816, 820, 822, 851, 863, 868, 871, 874, 878, 881, 892], "inferenti": [4, 227], "evalu": [4, 31, 44, 54, 55, 162, 188, 196, 210, 212, 227, 245, 277, 362, 431, 440, 478, 479, 514, 546, 573, 588, 672, 868, 871, 873, 874], "signific": [4, 73, 100, 101, 112, 151, 165, 172, 188, 199, 201, 202, 204, 205, 207, 227, 229, 230, 231, 232, 233, 234, 242, 245, 262, 265, 266, 267, 268, 270, 320, 326, 355, 414, 420, 421, 453, 481, 482, 539, 563, 564, 622, 699, 700, 702, 703, 704, 712, 714, 716, 777, 792, 796, 799, 815, 820, 822, 867, 874, 877, 880], "jose": [4, 892], "garcia": 4, "alani": [4, 892], "jcg": 4, "gmail": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 61, 66, 70, 73, 74, 75, 77, 79, 80, 81, 82, 84, 88, 90, 93, 94, 95, 99, 101, 103, 109, 112, 113, 114, 118, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 141, 157, 159, 161, 179, 180, 182, 183, 184, 191, 195, 209, 224, 227, 231, 232, 235, 236, 237, 241, 242], "com": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 61, 66, 70, 73, 74, 75, 77, 79, 80, 81, 82, 84, 88, 90, 93, 94, 95, 101, 103, 109, 112, 113, 114, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 141, 157, 159, 160, 161, 179, 180, 182, 183, 184, 191, 195, 209, 223, 224, 227, 231, 232, 235, 236, 237, 241, 242, 245, 265, 266, 267, 268, 276, 391, 481, 482, 489, 849, 851, 859, 871], "matplotlib": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 69, 70, 71, 72, 73, 74, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 136, 137, 144, 145, 146, 151, 160, 170, 171, 172, 176, 177, 180, 181, 183, 184, 195, 196, 200, 202, 203, 205, 206, 207, 208, 210, 211, 212, 216, 219, 224, 227, 228, 229, 230, 231, 232, 237, 241, 242, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 314, 315, 414, 421, 481, 482, 563, 564, 579, 584, 633, 712, 713, 714, 716, 728, 738, 760, 761, 763, 773, 775, 777, 778, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 805, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 829, 830, 832, 849, 850, 851, 869, 892], "pyplot": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 69, 70, 71, 72, 73, 74, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 136, 137, 144, 145, 146, 151, 160, 170, 172, 176, 177, 180, 181, 183, 184, 195, 196, 202, 203, 206, 207, 210, 211, 212, 216, 224, 227, 228, 229, 230, 231, 232, 237, 241, 242, 264, 265, 266, 267, 268, 712, 728, 738, 763, 784, 794, 796, 821, 892], "plt": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 69, 70, 71, 72, 73, 74, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 136, 137, 144, 145, 146, 151, 160, 170, 172, 176, 177, 180, 181, 183, 184, 195, 196, 202, 203, 206, 207, 210, 211, 212, 216, 224, 227, 228, 229, 230, 231, 232, 237, 241, 242, 267, 268, 323, 728, 738, 798], "stat": [4, 96, 97, 99, 100, 101, 112, 113, 141, 195, 227, 228, 229, 230, 231, 232, 235, 236, 237, 242, 265, 266, 320, 331, 564, 572, 789, 869, 882, 889, 892], "linear_regress": [4, 101, 141, 227, 882, 892], "plot_ev": [4, 7, 137, 166, 211, 217, 265, 266, 790, 882, 892], "combine_evok": [4, 7, 99, 141, 144, 149, 151, 166, 176, 191, 211, 228, 230, 878, 882, 892], "subj": [4, 160, 205], "experi": [4, 19, 45, 66, 71, 128, 151, 165, 166, 168, 169, 180, 191, 200, 201, 207, 210, 211, 212, 213, 216, 217, 245, 270, 500, 847, 851, 868, 870, 874, 892], "particip": [4, 72, 74, 76, 77, 81, 82, 83, 90, 93, 127, 141, 144, 146, 151, 166, 167, 168, 169, 172, 192, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 242, 584, 586, 847, 868, 873, 880], "perform": [4, 8, 10, 13, 19, 31, 45, 54, 76, 82, 84, 100, 101, 103, 112, 119, 137, 140, 143, 144, 146, 149, 151, 155, 156, 157, 166, 167, 168, 169, 178, 188, 189, 192, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 216, 227, 229, 231, 235, 237, 258, 260, 262, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 288, 291, 298, 299, 355, 356, 357, 359, 361, 362, 378, 414, 417, 420, 421, 424, 426, 427, 430, 431, 435, 449, 450, 455, 457, 470, 471, 472, 473, 476, 478, 479, 481, 482, 488, 489, 496, 522, 523, 525, 526, 531, 532, 533, 534, 535, 537, 538, 542, 547, 548, 563, 564, 566, 569, 576, 577, 578, 579, 581, 582, 584, 586, 588, 589, 597, 599, 614, 626, 660, 663, 664, 665, 677, 689, 694, 698, 699, 700, 701, 702, 703, 705, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 750, 776, 777, 784, 790, 791, 792, 795, 799, 803, 805, 807, 812, 813, 814, 815, 820, 822, 826, 847, 849, 857, 858, 867, 868, 874, 877, 892], "two": [4, 5, 12, 16, 19, 22, 32, 37, 42, 45, 47, 54, 55, 66, 68, 70, 71, 73, 75, 76, 81, 84, 88, 90, 112, 115, 117, 132, 133, 135, 137, 141, 142, 144, 146, 150, 151, 155, 156, 158, 160, 166, 168, 169, 170, 171, 172, 175, 178, 180, 190, 191, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 216, 217, 218, 219, 224, 227, 229, 231, 235, 237, 240, 242, 245, 259, 265, 266, 267, 268, 271, 272, 273, 276, 277, 279, 280, 281, 298, 299, 314, 322, 356, 360, 361, 372, 373, 374, 406, 414, 416, 421, 425, 429, 437, 438, 448, 450, 452, 453, 454, 457, 458, 476, 478, 479, 481, 482, 505, 518, 537, 542, 559, 564, 567, 574, 579, 588, 597, 598, 613, 614, 653, 656, 665, 689, 693, 694, 695, 697, 699, 700, 701, 702, 703, 707, 712, 714, 715, 716, 730, 731, 741, 750, 760, 765, 768, 790, 791, 792, 800, 807, 813, 818, 847, 851, 855, 857, 868, 871, 873, 874, 877, 892], "altern": [4, 114, 127, 161, 162, 169, 172, 191, 199, 201, 202, 205, 212, 219, 227, 241, 242, 256, 258, 259, 262, 265, 266, 267, 268, 274, 356, 414, 421, 481, 482, 506, 525, 563, 564, 579, 621, 625, 701, 712, 714, 716, 760, 777, 792, 799, 803, 812, 815, 820, 822, 849, 851, 857, 868, 871, 877, 879, 892], "choic": [4, 114, 155, 160, 170, 171, 184, 202, 207, 217, 229, 278, 454, 464, 542, 705, 849, 855, 868, 874], "discrimin": [4, 9, 18, 83, 196, 242, 245, 414, 418, 421, 564, 868], "between": [4, 8, 10, 16, 19, 22, 26, 27, 36, 38, 40, 45, 47, 59, 61, 70, 82, 83, 88, 96, 99, 100, 103, 108, 113, 114, 127, 128, 133, 134, 136, 137, 140, 141, 144, 146, 149, 150, 151, 156, 157, 158, 160, 161, 162, 165, 166, 169, 170, 171, 172, 176, 178, 188, 189, 190, 191, 192, 195, 196, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 242, 245, 257, 258, 259, 260, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 288, 310, 314, 320, 322, 323, 343, 355, 356, 362, 363, 365, 366, 367, 414, 415, 420, 426, 430, 433, 435, 437, 438, 440, 448, 455, 458, 459, 476, 478, 479, 481, 482, 500, 505, 523, 524, 537, 539, 542, 546, 547, 548, 561, 564, 566, 567, 569, 572, 574, 575, 576, 579, 580, 581, 582, 583, 584, 588, 589, 592, 597, 598, 599, 603, 605, 626, 629, 630, 653, 662, 663, 664, 665, 667, 669, 672, 673, 676, 677, 680, 682, 683, 684, 686, 687, 691, 692, 699, 700, 702, 703, 704, 707, 712, 713, 715, 717, 719, 720, 722, 727, 728, 731, 735, 736, 738, 739, 740, 742, 743, 750, 760, 765, 776, 778, 779, 781, 784, 786, 790, 793, 794, 796, 797, 799, 813, 814, 817, 818, 820, 823, 824, 826, 838, 847, 849, 851, 857, 859, 867, 868, 871, 873, 874, 877, 880, 892], "stimuli": [4, 19, 70, 116, 128, 141, 144, 146, 149, 151, 166, 180, 191, 195, 204, 213, 245, 420, 567, 847, 868], "The": [4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 19, 21, 27, 31, 34, 38, 41, 43, 44, 45, 46, 47, 48, 49, 52, 58, 59, 61, 64, 66, 68, 70, 75, 76, 79, 80, 81, 82, 83, 84, 88, 94, 95, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 120, 126, 127, 128, 134, 135, 136, 137, 138, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 171, 172, 173, 174, 177, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 241, 242, 243, 244, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 383, 384, 388, 389, 390, 391, 392, 393, 395, 398, 406, 407, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 501, 502, 503, 504, 505, 506, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 655, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 842, 843, 844, 846, 847, 849, 851, 854, 855, 857, 863, 869, 870, 871, 872, 875, 876, 878, 880, 892], "same": [4, 18, 19, 28, 44, 45, 54, 55, 58, 71, 75, 76, 83, 90, 99, 103, 109, 113, 114, 127, 135, 140, 141, 142, 144, 149, 150, 151, 156, 160, 161, 162, 168, 169, 170, 171, 175, 176, 178, 183, 188, 190, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 217, 218, 219, 222, 227, 228, 229, 231, 232, 235, 236, 237, 240, 257, 259, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 285, 286, 288, 298, 301, 303, 311, 316, 319, 330, 355, 356, 360, 361, 362, 374, 376, 393, 414, 421, 422, 427, 435, 438, 439, 448, 449, 464, 467, 471, 472, 476, 480, 481, 482, 488, 489, 496, 497, 508, 512, 550, 564, 565, 566, 575, 578, 581, 582, 583, 588, 599, 600, 613, 617, 623, 624, 639, 657, 658, 662, 663, 664, 665, 672, 677, 678, 694, 698, 699, 700, 702, 703, 707, 712, 714, 715, 716, 728, 730, 731, 737, 738, 739, 740, 741, 742, 743, 744, 750, 760, 765, 776, 777, 784, 790, 791, 792, 794, 796, 799, 801, 812, 813, 816, 818, 819, 821, 845, 851, 856, 863, 868, 871, 874, 875, 878, 892], "whole": [4, 28, 54, 55, 71, 162, 200, 227, 245, 272, 273, 276, 279, 280, 281, 448, 518, 599, 616, 661, 678, 713, 760, 786, 820, 851, 859, 868, 892], "vari": [4, 19, 22, 46, 47, 59, 141, 155, 190, 195, 202, 205, 206, 209, 210, 212, 224, 227, 265, 266, 270, 272, 273, 276, 279, 280, 281, 343, 344, 345, 346, 347, 348, 437, 448, 664, 703, 783, 868, 874, 877, 880, 892], "level": [4, 8, 9, 27, 36, 44, 56, 98, 101, 102, 122, 130, 141, 142, 144, 150, 151, 155, 160, 165, 166, 168, 170, 171, 180, 181, 188, 195, 199, 201, 202, 205, 206, 212, 224, 227, 229, 230, 231, 232, 233, 235, 236, 237, 242, 245, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 424, 425, 427, 430, 431, 433, 435, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 464, 465, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 560, 561, 563, 564, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 658, 660, 661, 663, 664, 665, 666, 676, 677, 680, 682, 683, 684, 685, 686, 687, 688, 691, 693, 695, 699, 700, 701, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 730, 731, 734, 735, 739, 740, 742, 743, 744, 745, 748, 749, 750, 755, 758, 759, 760, 768, 776, 777, 785, 788, 792, 793, 794, 795, 796, 799, 800, 803, 804, 805, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 849, 851, 858, 868, 869, 874, 876, 889, 892], "nois": [4, 5, 7, 11, 18, 21, 27, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 67, 71, 75, 82, 84, 88, 90, 93, 94, 95, 104, 107, 108, 109, 110, 114, 120, 122, 124, 130, 144, 146, 149, 151, 152, 162, 166, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 189, 191, 195, 196, 200, 202, 204, 208, 210, 216, 219, 224, 227, 235, 237, 245, 257, 262, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 298, 299, 301, 303, 349, 355, 356, 357, 358, 359, 360, 361, 372, 373, 374, 414, 421, 422, 437, 457, 458, 476, 478, 479, 481, 482, 486, 519, 531, 537, 538, 542, 544, 547, 548, 564, 565, 578, 599, 607, 608, 620, 626, 664, 665, 666, 676, 714, 716, 740, 743, 785, 790, 794, 798, 800, 813, 814, 836, 847, 871, 877, 892], "less": [4, 5, 10, 18, 24, 26, 40, 41, 44, 45, 46, 49, 50, 71, 79, 87, 114, 119, 124, 140, 141, 143, 150, 151, 156, 158, 159, 171, 172, 176, 181, 183, 184, 185, 188, 199, 200, 202, 203, 205, 207, 208, 210, 211, 212, 213, 216, 223, 227, 229, 242, 365, 455, 478, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 523, 531, 564, 572, 595, 597, 604, 699, 700, 701, 702, 703, 707, 760, 851, 858, 868, 871, 873, 874, 892], "discern": [4, 868], "observ": [4, 76, 101, 137, 144, 151, 156, 205, 207, 211, 212, 227, 229, 231, 232, 235, 237, 242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 453, 481, 482, 564, 693, 698, 699, 700, 701, 702, 703, 712, 714, 715, 716, 717, 718, 719, 813, 847, 867, 868], "fig": [4, 5, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 39, 41, 42, 45, 47, 52, 58, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 87, 93, 96, 99, 103, 104, 109, 112, 113, 114, 115, 116, 118, 120, 123, 124, 125, 127, 135, 136, 137, 141, 144, 146, 150, 151, 156, 157, 158, 159, 160, 166, 170, 172, 176, 177, 178, 180, 181, 182, 183, 185, 191, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 224, 227, 228, 230, 231, 232, 241, 242, 262, 263, 264, 265, 266, 267, 268, 270, 274, 275, 278, 280, 281, 314, 315, 414, 421, 481, 482, 563, 564, 584, 712, 713, 714, 716, 763, 773, 776, 777, 778, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820, 821, 824, 830, 892], "similar": [4, 16, 17, 18, 19, 20, 27, 33, 58, 61, 71, 88, 103, 109, 112, 114, 131, 136, 137, 140, 141, 142, 143, 144, 150, 160, 170, 196, 199, 200, 202, 204, 205, 206, 207, 208, 211, 216, 223, 227, 229, 232, 240, 245, 258, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 298, 356, 365, 415, 430, 448, 455, 481, 482, 514, 561, 564, 579, 588, 667, 712, 715, 716, 750, 760, 775, 794, 816, 849, 851, 856, 857, 858, 868, 869, 873, 874, 880, 892], "approach": [4, 10, 19, 21, 44, 45, 46, 59, 74, 76, 103, 127, 141, 143, 144, 149, 150, 151, 156, 160, 163, 164, 165, 166, 167, 172, 180, 195, 196, 199, 200, 202, 203, 204, 205, 208, 210, 212, 224, 227, 228, 231, 233, 242, 245, 270, 367, 392, 486, 521, 564, 581, 597, 606, 650, 776, 828, 847, 859, 867, 868, 869, 873, 874, 892], "across": [4, 16, 17, 18, 19, 20, 26, 27, 28, 32, 33, 47, 54, 55, 58, 61, 80, 83, 84, 103, 109, 113, 114, 135, 137, 140, 141, 142, 143, 145, 149, 150, 153, 155, 162, 165, 166, 168, 172, 180, 196, 199, 200, 202, 204, 205, 206, 207, 208, 210, 212, 219, 222, 223, 227, 235, 236, 237, 241, 245, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 319, 361, 362, 414, 417, 421, 423, 424, 426, 427, 428, 439, 448, 481, 482, 500, 528, 540, 541, 546, 561, 564, 566, 569, 579, 626, 636, 656, 677, 703, 707, 712, 713, 714, 715, 716, 723, 730, 739, 740, 742, 743, 775, 779, 784, 791, 792, 794, 795, 799, 812, 814, 818, 821, 824, 847, 851, 867, 868, 871, 874, 880, 892], "signal": [4, 8, 9, 10, 13, 15, 16, 19, 21, 27, 28, 42, 45, 51, 58, 59, 60, 64, 71, 72, 74, 75, 76, 78, 82, 85, 88, 100, 103, 111, 113, 114, 121, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 162, 165, 166, 172, 175, 178, 180, 184, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 208, 213, 214, 215, 216, 217, 219, 224, 225, 226, 227, 232, 243, 245, 257, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 301, 303, 343, 345, 349, 350, 353, 356, 357, 358, 359, 361, 366, 374, 383, 406, 407, 414, 416, 418, 419, 420, 421, 422, 425, 426, 435, 438, 447, 448, 449, 450, 452, 453, 454, 455, 481, 482, 489, 496, 502, 530, 531, 532, 545, 561, 562, 563, 564, 565, 566, 573, 575, 576, 577, 580, 581, 582, 585, 588, 590, 598, 599, 620, 629, 631, 634, 653, 656, 676, 678, 679, 698, 699, 712, 714, 715, 716, 717, 718, 719, 727, 728, 730, 731, 735, 737, 738, 741, 742, 744, 760, 784, 790, 792, 794, 799, 800, 802, 803, 804, 805, 807, 813, 814, 847, 867, 868, 871, 892], "continuum": [4, 868, 892], "span": [4, 82, 119, 136, 140, 141, 149, 150, 151, 165, 166, 168, 178, 191, 199, 203, 214, 215, 216, 218, 219, 240, 242, 259, 265, 266, 267, 268, 270, 481, 482, 500, 561, 566, 567, 590, 626, 704, 712, 714, 716, 730, 775, 777, 814, 820, 867, 868, 869, 874, 880, 892], "85": [4, 13, 19, 35, 37, 47, 79, 103, 109, 112, 114, 137, 140, 145, 146, 160, 169, 176, 182, 195, 196, 203, 209, 227, 228, 231, 232, 892], "increas": [4, 11, 32, 55, 71, 112, 151, 172, 192, 202, 205, 206, 211, 212, 224, 229, 232, 242, 264, 265, 266, 267, 268, 275, 455, 481, 482, 492, 564, 588, 607, 699, 700, 702, 703, 712, 715, 728, 738, 739, 740, 741, 742, 743, 744, 760, 764, 790, 807, 813, 868, 874, 892], "step": [4, 8, 11, 15, 18, 24, 41, 46, 59, 64, 69, 94, 99, 103, 109, 112, 120, 127, 140, 142, 151, 152, 158, 161, 166, 167, 168, 170, 172, 190, 191, 196, 199, 200, 201, 202, 205, 207, 208, 210, 212, 213, 216, 227, 228, 242, 245, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 290, 292, 343, 344, 345, 349, 414, 420, 429, 432, 455, 456, 472, 473, 479, 481, 482, 498, 559, 564, 574, 579, 588, 597, 662, 679, 699, 700, 702, 703, 704, 727, 735, 750, 760, 776, 784, 813, 824, 851, 852, 857, 865, 867, 868, 873, 874, 878, 880, 892], "other": [4, 43, 62, 71, 83, 84, 112, 127, 141, 143, 145, 150, 151, 155, 156, 160, 166, 168, 169, 170, 172, 175, 177, 180, 181, 188, 189, 191, 192, 196, 199, 200, 203, 204, 205, 206, 207, 208, 209, 212, 216, 218, 219, 223, 224, 227, 231, 240, 242, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 284, 314, 326, 327, 355, 362, 367, 420, 422, 431, 433, 435, 437, 438, 443, 447, 459, 463, 464, 476, 478, 479, 481, 482, 493, 500, 531, 542, 553, 563, 564, 588, 594, 599, 613, 617, 619, 630, 633, 639, 642, 648, 650, 661, 672, 677, 683, 698, 712, 713, 714, 715, 716, 760, 773, 781, 788, 790, 792, 803, 807, 813, 818, 840, 845, 847, 856, 857, 858, 859, 863, 867, 868, 869, 871, 873, 877, 880, 892], "word": [4, 101, 143, 151, 155, 168, 175, 196, 202, 206, 207, 210, 227, 228, 242, 245, 397, 420, 741, 744, 760, 773, 847, 851, 868, 874, 880], "g": [4, 8, 28, 31, 37, 41, 42, 44, 69, 70, 71, 80, 81, 84, 96, 101, 112, 114, 115, 120, 126, 127, 137, 140, 141, 143, 150, 151, 155, 160, 161, 162, 166, 168, 169, 170, 171, 180, 188, 189, 190, 195, 196, 199, 201, 202, 203, 204, 205, 206, 208, 213, 216, 217, 222, 223, 227, 228, 232, 235, 237, 241, 242, 245, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 298, 299, 300, 305, 312, 314, 315, 320, 329, 331, 342, 353, 356, 360, 361, 367, 372, 373, 374, 383, 389, 392, 397, 406, 407, 414, 416, 417, 420, 421, 423, 424, 425, 428, 429, 430, 433, 434, 435, 438, 443, 446, 447, 448, 450, 452, 453, 455, 456, 457, 458, 464, 470, 473, 475, 476, 478, 479, 480, 481, 482, 483, 494, 518, 520, 524, 525, 526, 531, 537, 538, 539, 542, 546, 547, 548, 550, 563, 564, 566, 567, 574, 575, 578, 579, 580, 581, 582, 587, 588, 591, 594, 595, 599, 605, 606, 607, 614, 619, 626, 633, 634, 639, 646, 647, 648, 649, 650, 651, 657, 659, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 680, 683, 697, 698, 699, 700, 701, 702, 703, 707, 708, 712, 714, 715, 716, 720, 721, 722, 723, 725, 728, 738, 741, 742, 743, 744, 760, 765, 773, 776, 777, 778, 783, 784, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 804, 806, 807, 811, 812, 813, 814, 815, 818, 820, 822, 823, 826, 837, 840, 847, 849, 851, 852, 855, 857, 863, 867, 868, 871, 873, 874, 877, 878, 880, 892], "easi": [4, 133, 162, 166, 182, 188, 191, 200, 205, 208, 216, 218, 242, 275, 363, 420, 847, 849, 851, 857, 868, 869, 871, 874, 892], "identifi": [4, 12, 13, 27, 32, 33, 34, 78, 85, 137, 146, 151, 169, 191, 192, 196, 199, 205, 207, 224, 227, 245, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 314, 330, 337, 376, 417, 424, 466, 481, 482, 483, 487, 564, 568, 572, 579, 598, 608, 760, 769, 780, 818, 822, 823, 851, 867, 868, 871, 874, 877, 892], "while": [4, 10, 26, 45, 75, 77, 83, 87, 107, 127, 137, 141, 142, 143, 144, 150, 151, 158, 160, 166, 172, 178, 179, 188, 192, 199, 200, 205, 207, 208, 210, 218, 224, 227, 231, 235, 242, 245, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 298, 299, 356, 360, 361, 372, 373, 374, 414, 420, 421, 422, 431, 448, 457, 458, 476, 478, 479, 481, 482, 510, 534, 542, 564, 565, 576, 577, 581, 582, 589, 712, 715, 739, 740, 742, 743, 784, 790, 794, 798, 800, 807, 813, 816, 826, 847, 849, 851, 854, 868, 873, 874, 880, 892], "low": [4, 5, 11, 19, 45, 47, 59, 71, 75, 81, 82, 83, 84, 94, 110, 114, 141, 143, 151, 166, 167, 180, 183, 188, 191, 196, 200, 203, 205, 210, 211, 212, 227, 229, 231, 236, 245, 257, 260, 264, 265, 266, 267, 268, 270, 307, 356, 361, 416, 422, 425, 427, 449, 450, 452, 481, 482, 489, 492, 506, 531, 564, 569, 572, 576, 577, 581, 582, 588, 589, 590, 592, 593, 603, 665, 669, 674, 705, 706, 712, 715, 740, 743, 760, 790, 813, 847, 867, 868, 871, 873, 874, 892], "hard": [4, 114, 142, 205, 224, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 523, 851, 868, 869, 871, 892], "extens": [4, 12, 43, 44, 136, 140, 151, 158, 160, 170, 189, 190, 192, 196, 217, 218, 257, 265, 266, 267, 268, 298, 299, 332, 333, 339, 421, 444, 445, 447, 481, 482, 488, 495, 498, 508, 599, 617, 626, 630, 713, 732, 760, 837, 854, 855, 867, 868, 874, 880, 892], "veri": [4, 10, 44, 45, 50, 61, 64, 70, 71, 80, 83, 114, 133, 141, 144, 151, 157, 160, 168, 172, 181, 200, 202, 203, 204, 205, 206, 207, 210, 224, 227, 236, 242, 298, 322, 438, 481, 698, 728, 738, 742, 847, 851, 854, 869, 874], "ll": [4, 7, 10, 19, 26, 34, 54, 59, 68, 71, 114, 115, 116, 117, 120, 127, 135, 136, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 158, 160, 162, 166, 167, 168, 170, 171, 172, 179, 180, 181, 190, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 216, 217, 218, 219, 222, 224, 228, 231, 237, 240, 241, 851, 859, 871], "begin": [4, 19, 74, 93, 151, 156, 166, 168, 169, 171, 172, 175, 188, 191, 195, 199, 201, 202, 203, 204, 205, 206, 207, 212, 218, 222, 242, 259, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 284, 288, 361, 443, 456, 481, 482, 508, 523, 537, 547, 548, 564, 567, 581, 582, 588, 589, 592, 599, 629, 630, 679, 712, 715, 716, 725, 793, 804, 805, 807, 814, 820, 845, 851, 856, 874, 877, 892], "littl": [4, 160, 171, 188, 202, 203, 205, 206, 224, 242, 854, 874], "you": [4, 24, 27, 28, 32, 41, 43, 47, 50, 59, 61, 79, 82, 83, 88, 103, 109, 113, 114, 115, 116, 117, 119, 120, 121, 127, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 158, 159, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 180, 181, 182, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 216, 217, 218, 219, 222, 224, 227, 229, 230, 232, 235, 237, 240, 241, 242, 245, 257, 258, 259, 264, 265, 266, 267, 268, 270, 271, 272, 275, 276, 278, 280, 282, 284, 290, 292, 298, 299, 315, 320, 330, 331, 332, 355, 356, 360, 361, 364, 365, 372, 373, 374, 379, 392, 414, 420, 421, 431, 438, 441, 447, 449, 455, 457, 458, 466, 473, 476, 478, 479, 481, 482, 483, 493, 497, 500, 505, 529, 531, 542, 563, 564, 581, 588, 590, 600, 617, 623, 661, 676, 692, 707, 712, 714, 715, 716, 728, 738, 742, 758, 761, 763, 776, 777, 781, 783, 790, 791, 795, 800, 803, 805, 806, 807, 813, 818, 830, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 862, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 892], "first": [4, 5, 7, 10, 11, 16, 19, 21, 28, 29, 32, 38, 39, 41, 42, 43, 44, 45, 47, 64, 71, 72, 80, 83, 84, 87, 88, 90, 94, 95, 103, 104, 108, 109, 112, 113, 114, 115, 120, 127, 131, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 149, 150, 151, 156, 157, 159, 160, 161, 162, 166, 167, 168, 169, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 188, 190, 191, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 240, 241, 242, 245, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 285, 286, 289, 297, 298, 299, 304, 319, 324, 325, 356, 364, 365, 372, 378, 389, 414, 420, 421, 429, 437, 438, 439, 442, 443, 445, 446, 448, 452, 453, 454, 455, 456, 462, 464, 472, 480, 481, 482, 502, 505, 506, 518, 524, 525, 530, 534, 540, 541, 559, 563, 564, 565, 567, 569, 572, 574, 579, 584, 585, 608, 613, 625, 626, 629, 633, 644, 656, 662, 664, 665, 668, 670, 671, 686, 687, 688, 693, 697, 698, 699, 700, 702, 703, 704, 706, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 747, 750, 760, 765, 768, 776, 784, 788, 790, 791, 792, 793, 796, 797, 799, 803, 804, 805, 807, 812, 813, 814, 815, 818, 820, 822, 823, 837, 838, 847, 849, 850, 859, 867, 868, 871, 874, 877, 878, 892], "limo_epoch": 4, "process": [4, 7, 27, 28, 32, 34, 45, 51, 59, 69, 70, 80, 84, 88, 101, 122, 135, 142, 143, 144, 149, 151, 152, 155, 156, 160, 161, 162, 166, 171, 172, 177, 182, 184, 188, 200, 201, 202, 203, 205, 206, 207, 208, 210, 212, 216, 218, 222, 227, 228, 229, 237, 242, 245, 257, 262, 264, 265, 266, 267, 268, 270, 275, 288, 290, 292, 298, 299, 301, 356, 360, 361, 364, 372, 373, 374, 389, 397, 414, 416, 421, 422, 427, 431, 437, 438, 453, 457, 458, 476, 478, 479, 481, 482, 483, 492, 502, 537, 542, 564, 565, 574, 588, 599, 600, 607, 614, 616, 629, 659, 661, 665, 685, 688, 699, 700, 702, 703, 712, 714, 715, 716, 739, 790, 794, 800, 813, 814, 849, 858, 859, 863, 866, 867, 868, 871, 873, 874, 877, 878, 880, 881, 882, 892], "epochsarrai": [4, 188, 222, 260, 265, 268, 363, 482, 624, 882, 892], "readi": [4, 5, 11, 13, 14, 15, 16, 18, 19, 27, 28, 29, 32, 33, 34, 42, 45, 46, 49, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 129, 130, 132, 133, 135, 141, 144, 146, 150, 151, 152, 156, 158, 159, 161, 162, 166, 167, 168, 169, 171, 172, 177, 180, 182, 183, 190, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 216, 219, 222, 223, 224, 229, 230, 231, 232, 235, 237, 241, 267, 270, 276, 481, 600, 629, 639, 760, 779, 851, 868], "1055": 4, "goodb": [4, 8, 10, 12, 22, 28, 37, 38, 44, 97, 110, 111, 127, 128, 137, 202, 205, 206, 211, 217, 219, 224, 227, 228, 231, 235, 236, 237, 242, 245, 257, 260, 265, 266, 267, 268, 272, 273, 275, 276, 277, 279, 280, 281, 288, 356, 362, 383, 406, 407, 435, 449, 451, 481, 482, 547, 548, 581, 582, 629, 630, 665, 693, 695, 698, 706, 712, 715, 725, 739, 740, 742, 743, 760, 784, 790, 813, 820, 851, 868, 871, 874, 892], "531": [4, 196, 232, 584, 586], "visualis": [4, 27, 29, 30, 48, 49, 50, 54, 55, 78, 85, 101, 165, 176, 211, 233, 234, 259, 265, 267, 268, 270, 320, 326, 355, 482, 510, 602, 606, 622, 703], "distribut": [4, 19, 22, 26, 46, 48, 54, 55, 59, 61, 73, 116, 145, 150, 155, 162, 165, 166, 177, 186, 187, 191, 205, 207, 227, 229, 232, 235, 236, 241, 242, 245, 262, 263, 265, 266, 267, 268, 269, 270, 274, 276, 366, 478, 481, 482, 530, 531, 542, 572, 606, 620, 629, 631, 644, 660, 664, 694, 697, 699, 700, 702, 703, 714, 716, 760, 769, 776, 788, 821, 828, 847, 856, 857, 858, 867, 868, 871, 873, 874, 892], "appear": [4, 94, 101, 140, 144, 158, 168, 172, 180, 183, 191, 199, 202, 203, 208, 218, 257, 265, 266, 267, 268, 270, 275, 435, 481, 482, 489, 492, 496, 518, 778, 816, 847, 851, 868, 874, 877, 892], "clearli": [4, 21, 127, 144, 152, 166, 191, 203, 205, 207, 209], "group": [4, 27, 68, 71, 109, 112, 122, 130, 137, 140, 142, 143, 145, 151, 155, 160, 161, 167, 172, 178, 202, 213, 219, 224, 227, 228, 231, 232, 236, 237, 245, 257, 265, 266, 267, 268, 270, 275, 298, 299, 316, 326, 431, 440, 441, 443, 481, 482, 497, 564, 579, 661, 677, 694, 700, 703, 765, 790, 791, 796, 813, 816, 847, 851, 858, 874, 882, 892], "order": [4, 16, 18, 19, 27, 31, 34, 38, 45, 47, 70, 71, 75, 82, 84, 88, 92, 94, 107, 111, 112, 114, 117, 121, 123, 128, 136, 143, 144, 145, 149, 156, 160, 161, 162, 165, 166, 169, 172, 177, 188, 190, 195, 199, 200, 201, 204, 205, 206, 207, 209, 210, 212, 213, 216, 219, 224, 229, 232, 237, 245, 257, 258, 260, 262, 265, 266, 267, 268, 269, 270, 271, 274, 275, 289, 304, 319, 326, 343, 345, 349, 356, 363, 365, 369, 414, 416, 420, 421, 425, 435, 439, 443, 449, 450, 451, 452, 453, 458, 467, 481, 482, 488, 489, 496, 528, 530, 537, 538, 540, 541, 555, 556, 557, 563, 564, 572, 574, 575, 576, 577, 578, 584, 588, 599, 613, 631, 645, 656, 689, 694, 708, 712, 713, 714, 715, 716, 724, 725, 729, 745, 747, 750, 757, 765, 777, 790, 791, 792, 796, 799, 801, 803, 807, 808, 812, 813, 815, 816, 820, 821, 822, 849, 851, 867, 871, 874, 877, 892], "suptitl": [4, 18, 22, 37, 42, 45, 71, 74, 80, 87, 90, 103, 109, 112, 116, 120, 133, 141, 144, 146, 151, 160, 176, 191, 195, 200, 202, 203, 205, 206, 207, 208, 210, 211, 227, 892], "As": [4, 38, 43, 71, 88, 94, 112, 136, 140, 143, 145, 149, 150, 151, 157, 160, 166, 167, 168, 169, 170, 172, 175, 180, 188, 191, 195, 196, 199, 200, 201, 202, 204, 205, 207, 208, 210, 213, 216, 217, 218, 219, 222, 229, 231, 237, 240, 242, 247, 422, 443, 498, 510, 579, 698, 707, 760, 784, 867, 873, 874, 877, 880, 892], "seen": [4, 12, 27, 75, 140, 143, 144, 146, 150, 151, 156, 169, 170, 196, 199, 203, 206, 207, 211, 212, 216, 219, 298, 421, 664, 665, 740, 743, 851, 874, 875, 877], "abov": [4, 21, 42, 43, 45, 49, 61, 71, 75, 76, 82, 88, 114, 116, 140, 142, 144, 150, 151, 156, 160, 161, 166, 167, 168, 170, 171, 172, 175, 188, 190, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 216, 217, 219, 222, 224, 231, 232, 242, 245, 259, 262, 265, 266, 267, 268, 270, 278, 355, 414, 416, 421, 425, 438, 444, 445, 447, 450, 452, 481, 482, 483, 489, 510, 563, 564, 566, 588, 598, 608, 699, 700, 702, 703, 712, 714, 716, 740, 743, 750, 760, 784, 791, 792, 799, 803, 805, 815, 816, 820, 822, 847, 850, 851, 856, 867, 871, 874, 875, 878], "These": [4, 27, 45, 54, 55, 61, 71, 94, 137, 138, 144, 145, 147, 151, 153, 155, 158, 160, 162, 163, 165, 166, 167, 170, 172, 173, 178, 180, 186, 188, 189, 190, 192, 193, 195, 196, 197, 201, 202, 205, 209, 211, 214, 219, 220, 224, 225, 227, 228, 233, 238, 242, 243, 256, 265, 266, 267, 268, 270, 282, 307, 308, 327, 356, 360, 361, 362, 433, 481, 482, 527, 564, 574, 588, 599, 630, 669, 674, 698, 712, 714, 715, 716, 847, 851, 858, 867, 868, 871, 873, 874, 875, 877, 880, 892], "easili": [4, 43, 44, 101, 140, 144, 149, 160, 168, 170, 188, 190, 199, 202, 205, 207, 208, 216, 217, 218, 219, 235, 242, 441, 481, 482, 588, 698, 851, 858, 867, 874, 892], "access": [4, 52, 101, 132, 158, 166, 168, 169, 175, 192, 206, 213, 216, 218, 219, 240, 245, 258, 260, 265, 266, 269, 278, 481, 482, 623, 625, 714, 715, 716, 741, 744, 851, 857, 869, 873, 877, 892], "call": [4, 18, 31, 43, 44, 87, 88, 94, 117, 128, 140, 142, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 161, 166, 168, 170, 171, 172, 175, 178, 182, 190, 196, 199, 200, 202, 203, 205, 206, 210, 212, 216, 217, 218, 219, 227, 229, 231, 232, 237, 241, 242, 257, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 279, 280, 281, 283, 310, 314, 356, 357, 359, 361, 362, 367, 417, 420, 424, 427, 430, 431, 435, 447, 449, 457, 470, 472, 481, 482, 489, 496, 510, 522, 525, 526, 531, 532, 533, 534, 535, 537, 538, 547, 548, 564, 569, 574, 575, 576, 577, 581, 583, 588, 599, 614, 650, 660, 663, 664, 665, 677, 682, 686, 699, 700, 701, 702, 703, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 728, 730, 731, 738, 739, 740, 741, 742, 743, 757, 758, 760, 777, 784, 790, 791, 792, 795, 798, 799, 814, 822, 847, 849, 850, 851, 855, 859, 869, 871, 873, 874, 877, 878, 882, 892], "shown": [4, 32, 52, 71, 80, 83, 94, 101, 118, 120, 127, 136, 142, 149, 150, 151, 156, 158, 162, 166, 172, 180, 182, 202, 206, 211, 213, 216, 217, 219, 232, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 314, 414, 421, 473, 481, 482, 514, 542, 563, 564, 579, 712, 714, 715, 716, 760, 776, 777, 778, 784, 785, 787, 788, 790, 792, 794, 796, 797, 798, 799, 801, 803, 810, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 830, 874, 875, 877, 892], "below": [4, 10, 19, 43, 47, 76, 112, 114, 127, 140, 151, 155, 160, 161, 166, 168, 170, 172, 190, 192, 195, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 218, 227, 232, 235, 237, 240, 242, 245, 260, 262, 263, 264, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 308, 314, 362, 416, 425, 433, 441, 450, 452, 473, 481, 482, 498, 531, 564, 566, 572, 574, 664, 698, 699, 700, 702, 703, 712, 715, 760, 779, 791, 796, 800, 803, 805, 818, 823, 824, 847, 851, 857, 859, 867, 871, 873, 874, 878, 882, 892], "also": [4, 10, 19, 21, 27, 28, 29, 30, 32, 38, 39, 41, 42, 43, 45, 47, 61, 63, 70, 71, 72, 79, 80, 81, 83, 84, 94, 95, 101, 104, 107, 109, 112, 114, 116, 117, 120, 126, 127, 135, 138, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 157, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 182, 183, 184, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 231, 232, 235, 237, 240, 241, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 298, 299, 306, 307, 308, 312, 314, 316, 324, 325, 329, 331, 332, 342, 349, 356, 361, 362, 368, 372, 375, 383, 391, 414, 416, 421, 426, 430, 433, 435, 438, 449, 450, 452, 453, 454, 455, 457, 464, 467, 476, 478, 479, 481, 482, 489, 493, 502, 506, 522, 525, 526, 537, 538, 539, 542, 561, 563, 564, 566, 567, 573, 574, 576, 579, 580, 581, 582, 589, 590, 591, 592, 594, 595, 605, 607, 613, 614, 621, 629, 646, 647, 650, 656, 660, 661, 668, 677, 680, 698, 699, 704, 707, 712, 714, 715, 716, 720, 721, 722, 723, 725, 740, 743, 749, 750, 758, 760, 776, 777, 783, 784, 785, 788, 790, 791, 792, 794, 796, 797, 799, 800, 802, 803, 804, 810, 811, 812, 813, 814, 815, 816, 818, 820, 822, 824, 826, 847, 849, 851, 854, 855, 856, 857, 858, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 876, 877, 880, 882, 892], "conveni": [4, 11, 45, 71, 76, 137, 142, 151, 158, 161, 166, 169, 171, 172, 181, 196, 199, 202, 206, 207, 217, 222, 227, 228, 229, 232, 235, 236, 237, 241, 245, 265, 266, 267, 268, 269, 275, 480, 481, 482, 487, 514, 537, 564, 572, 581, 582, 653, 656, 658, 702, 703, 712, 714, 715, 716, 773, 849, 851, 855, 867, 868, 874, 892], "head": [4, 5, 10, 22, 26, 41, 43, 45, 50, 71, 72, 79, 80, 101, 109, 112, 115, 118, 120, 125, 127, 135, 136, 143, 145, 150, 151, 157, 159, 163, 164, 165, 166, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 183, 184, 185, 188, 190, 191, 199, 200, 205, 207, 208, 210, 212, 213, 214, 215, 216, 228, 242, 245, 262, 263, 265, 266, 267, 268, 269, 270, 274, 275, 278, 304, 306, 307, 308, 310, 314, 317, 318, 327, 330, 332, 337, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 356, 363, 365, 366, 367, 368, 376, 390, 393, 414, 421, 433, 435, 457, 464, 465, 473, 474, 475, 481, 482, 486, 488, 492, 493, 494, 501, 506, 508, 513, 515, 520, 521, 522, 525, 526, 527, 563, 564, 568, 571, 573, 574, 575, 579, 588, 595, 599, 600, 619, 624, 625, 628, 642, 660, 661, 663, 664, 665, 669, 674, 677, 680, 707, 712, 714, 716, 746, 747, 749, 760, 776, 777, 778, 783, 784, 788, 792, 794, 795, 796, 797, 799, 800, 802, 803, 810, 812, 814, 815, 816, 820, 822, 828, 838, 840, 845, 847, 851, 868, 877, 880, 881, 882, 892], "491210": 4, "235572": 4, "043707": 4, "642398": 4, "659978": 4, "now": [4, 19, 24, 26, 32, 41, 45, 50, 71, 73, 75, 84, 87, 88, 109, 111, 112, 113, 120, 127, 134, 135, 136, 137, 140, 141, 144, 145, 146, 151, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 172, 176, 178, 179, 180, 182, 183, 195, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 218, 224, 229, 231, 232, 235, 236, 237, 241, 242, 263, 265, 266, 267, 268, 322, 467, 481, 482, 656, 761, 781, 788, 851, 874, 877, 892], "let": [4, 10, 18, 21, 26, 32, 47, 55, 71, 72, 74, 87, 109, 113, 121, 127, 135, 136, 140, 141, 142, 144, 146, 150, 151, 152, 156, 158, 159, 160, 162, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 196, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 212, 213, 216, 224, 227, 231, 232, 235, 236, 237, 241, 242, 516, 728, 738, 761, 851, 854, 892], "closer": [4, 24, 41, 109, 141, 158, 210, 227, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 661, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822], "want": [4, 41, 50, 83, 94, 112, 115, 120, 127, 135, 136, 140, 141, 142, 143, 144, 145, 149, 150, 151, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 178, 180, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 216, 217, 218, 222, 223, 227, 229, 231, 232, 235, 236, 242, 257, 258, 265, 266, 267, 268, 270, 272, 276, 280, 320, 379, 438, 443, 481, 482, 500, 564, 581, 728, 738, 742, 783, 813, 818, 830, 850, 851, 854, 858, 859, 871, 872, 873, 874, 877, 878], "includ": [4, 7, 28, 37, 41, 70, 71, 82, 86, 96, 97, 99, 103, 104, 107, 110, 113, 114, 123, 132, 135, 137, 140, 142, 143, 144, 146, 149, 151, 152, 155, 159, 160, 162, 166, 167, 168, 169, 170, 171, 172, 176, 180, 182, 185, 188, 189, 190, 192, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 218, 219, 222, 227, 229, 230, 231, 237, 245, 251, 256, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 297, 299, 312, 315, 316, 320, 329, 331, 356, 361, 362, 369, 372, 416, 421, 430, 435, 438, 442, 443, 452, 453, 455, 467, 468, 480, 481, 482, 489, 492, 494, 496, 497, 498, 504, 508, 524, 526, 532, 534, 542, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 571, 572, 574, 575, 578, 580, 581, 582, 585, 587, 588, 591, 595, 598, 599, 605, 607, 610, 614, 623, 625, 626, 629, 630, 631, 680, 697, 698, 707, 711, 712, 714, 715, 716, 720, 721, 722, 723, 725, 729, 741, 743, 744, 750, 756, 760, 784, 790, 791, 792, 793, 794, 796, 797, 804, 805, 809, 813, 814, 820, 837, 847, 849, 851, 853, 854, 855, 856, 857, 858, 859, 863, 867, 868, 869, 870, 871, 873, 874, 875, 876, 877, 878, 880, 892], "column": [4, 10, 31, 94, 95, 101, 112, 140, 141, 143, 145, 151, 166, 172, 175, 188, 191, 196, 207, 210, 211, 216, 227, 228, 259, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 300, 329, 372, 414, 421, 438, 442, 443, 455, 456, 472, 481, 482, 524, 543, 546, 559, 563, 564, 565, 617, 624, 625, 626, 633, 697, 698, 712, 714, 715, 716, 760, 792, 793, 799, 800, 803, 811, 812, 815, 820, 837, 847, 874, 877, 892], "tabl": [4, 41, 123, 143, 144, 171, 172, 185, 189, 202, 216, 217, 240, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 466, 467, 481, 482, 542, 661, 760, 779, 784, 791, 818, 823, 824, 825, 829, 842, 847, 874, 877, 878, 892], "epochs_summari": 4, "describ": [4, 13, 16, 75, 99, 113, 117, 149, 151, 156, 158, 162, 165, 166, 168, 169, 170, 171, 172, 188, 192, 195, 199, 201, 206, 207, 208, 210, 211, 217, 218, 224, 225, 228, 233, 242, 245, 267, 268, 298, 355, 356, 362, 414, 422, 435, 438, 446, 481, 482, 563, 564, 565, 599, 635, 662, 682, 683, 684, 685, 686, 687, 688, 726, 728, 731, 738, 742, 800, 806, 847, 849, 867, 871, 873, 874, 877, 880, 892], "round": [4, 37, 109, 140, 145, 149, 160, 168, 172, 195, 202, 203, 205, 206, 212, 216, 224, 242, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 443, 481, 482, 712, 715, 892], "count": [4, 22, 71, 73, 140, 171, 211, 218, 227, 231, 235, 237, 259, 260, 265, 266, 267, 268, 298, 299, 356, 360, 361, 370, 371, 372, 373, 374, 414, 421, 437, 457, 458, 476, 478, 479, 523, 542, 574, 622, 699, 700, 702, 703, 800, 892], "uniqu": [4, 10, 18, 101, 143, 150, 151, 166, 168, 217, 227, 232, 259, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 323, 370, 443, 472, 481, 482, 525, 564, 623, 685, 688, 712, 714, 715, 716, 740, 743, 784, 794, 874, 877, 892], "nan": [4, 70, 71, 144, 210, 229, 230, 231, 232, 242, 481, 482, 510, 570, 588, 892], "top": [4, 74, 112, 115, 120, 127, 136, 140, 151, 158, 160, 161, 172, 176, 181, 192, 200, 203, 205, 206, 207, 208, 211, 216, 218, 219, 227, 257, 265, 266, 267, 268, 273, 279, 281, 760, 761, 778, 790, 794, 823, 847, 851, 874, 877, 892], "freq": [4, 9, 21, 32, 33, 34, 69, 104, 107, 109, 112, 114, 133, 137, 166, 195, 199, 202, 203, 212, 222, 229, 230, 231, 232, 240, 241, 242, 244, 257, 343, 345, 427, 453, 481, 482, 548, 692, 712, 713, 714, 715, 716, 726, 728, 730, 731, 736, 738, 739, 740, 741, 742, 743, 783, 801, 808, 880, 892], "std": [4, 16, 151, 191, 224, 237, 240, 241, 242, 265, 266, 267, 268, 316, 414, 421, 481, 482, 519, 712, 784, 791, 794, 797, 814], "min": [4, 9, 21, 22, 96, 97, 112, 114, 116, 136, 137, 141, 146, 157, 172, 195, 199, 205, 207, 216, 227, 228, 229, 230, 231, 232, 235, 236, 237, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 323, 414, 416, 421, 425, 447, 450, 452, 481, 482, 563, 564, 576, 589, 590, 592, 594, 603, 607, 608, 712, 714, 716, 777, 791, 792, 799, 803, 812, 813, 814, 815, 818, 820, 821, 822, 823], "619": [4, 232], "852": 4, "084": 4, "875": [4, 143, 182, 196, 209, 232, 874], "max": [4, 5, 8, 9, 19, 21, 22, 31, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 61, 81, 84, 90, 93, 94, 96, 100, 109, 112, 115, 116, 121, 136, 141, 144, 150, 152, 157, 160, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 196, 203, 210, 213, 216, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 256, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 298, 299, 323, 360, 414, 416, 421, 425, 447, 448, 450, 452, 481, 482, 514, 540, 541, 546, 563, 564, 590, 594, 603, 608, 699, 700, 701, 702, 703, 705, 712, 714, 716, 728, 738, 760, 768, 777, 791, 792, 795, 799, 803, 812, 814, 815, 818, 820, 821, 822, 823, 879, 892], "642": [4, 59, 232, 245, 479], "provid": [4, 5, 18, 19, 27, 43, 44, 66, 80, 90, 93, 94, 95, 103, 137, 140, 142, 146, 149, 150, 151, 155, 156, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 175, 184, 185, 188, 189, 190, 192, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 216, 217, 218, 219, 222, 224, 228, 229, 232, 245, 246, 257, 259, 260, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 286, 289, 298, 299, 304, 305, 312, 315, 323, 331, 355, 357, 358, 359, 360, 361, 362, 367, 372, 375, 389, 390, 393, 414, 416, 421, 430, 435, 438, 441, 452, 453, 455, 457, 467, 473, 480, 481, 482, 501, 502, 513, 514, 516, 525, 530, 551, 563, 564, 566, 567, 574, 580, 581, 582, 584, 588, 591, 599, 605, 607, 614, 624, 628, 639, 650, 661, 662, 677, 680, 697, 698, 700, 702, 703, 706, 712, 713, 714, 715, 716, 720, 721, 722, 723, 725, 728, 738, 739, 740, 741, 742, 743, 744, 747, 748, 750, 757, 760, 776, 777, 779, 784, 786, 790, 791, 792, 794, 795, 796, 797, 799, 802, 803, 807, 809, 812, 813, 814, 815, 818, 820, 822, 823, 824, 847, 849, 851, 852, 854, 855, 857, 858, 863, 866, 867, 868, 869, 871, 873, 874, 875, 877, 880, 882, 892], "command": [4, 123, 151, 155, 158, 160, 171, 185, 189, 265, 266, 270, 362, 473, 481, 482, 520, 564, 652, 790, 807, 813, 849, 850, 854, 855, 856, 857, 858, 859, 863, 867, 869, 882, 892], "ran": [4, 232, 270], "befor": [4, 5, 21, 24, 26, 41, 44, 45, 50, 62, 69, 71, 82, 86, 88, 90, 94, 119, 127, 136, 137, 140, 141, 142, 143, 144, 145, 149, 151, 156, 157, 158, 160, 161, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 183, 184, 185, 188, 191, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 224, 240, 242, 257, 258, 260, 262, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 279, 280, 281, 298, 316, 343, 361, 364, 373, 374, 414, 420, 421, 423, 426, 438, 444, 445, 446, 447, 448, 449, 455, 456, 458, 481, 482, 523, 537, 538, 540, 541, 547, 548, 563, 564, 567, 576, 577, 581, 582, 584, 585, 588, 589, 614, 622, 629, 634, 668, 669, 670, 671, 672, 674, 676, 698, 699, 700, 702, 703, 707, 713, 714, 716, 777, 786, 791, 792, 794, 796, 798, 799, 804, 805, 806, 811, 814, 830, 842, 849, 859, 867, 868, 871, 873, 874, 877, 892], "There": [4, 75, 83, 120, 127, 141, 144, 151, 156, 158, 159, 166, 170, 171, 172, 177, 180, 190, 192, 199, 201, 202, 203, 205, 206, 210, 212, 213, 216, 218, 227, 240, 265, 406, 438, 564, 606, 661, 851, 855, 858, 868, 871, 872, 874, 876, 877], "subdivid": [4, 160, 161, 257, 272, 276, 280, 388, 660, 818, 892], "particular": [4, 27, 126, 140, 141, 155, 166, 168, 172, 175, 195, 196, 202, 205, 206, 216, 229, 237, 257, 259, 265, 266, 275, 305, 431, 458, 481, 482, 489, 634, 692, 699, 700, 702, 703, 790, 813, 849, 871, 873, 874, 875, 880], "addit": [4, 34, 42, 45, 61, 62, 71, 76, 82, 112, 114, 135, 140, 142, 145, 150, 152, 156, 160, 161, 162, 166, 170, 188, 189, 190, 191, 195, 196, 201, 202, 205, 206, 207, 208, 210, 212, 213, 216, 218, 219, 222, 232, 242, 257, 262, 265, 266, 267, 268, 272, 273, 276, 277, 278, 279, 280, 281, 337, 355, 356, 361, 389, 414, 415, 416, 419, 421, 422, 425, 435, 438, 445, 447, 452, 481, 482, 487, 531, 532, 533, 534, 535, 537, 538, 544, 547, 548, 561, 562, 563, 564, 565, 576, 577, 600, 629, 655, 666, 698, 699, 700, 702, 703, 711, 712, 714, 715, 716, 731, 739, 740, 742, 743, 760, 773, 777, 790, 792, 794, 799, 805, 811, 813, 815, 818, 820, 822, 823, 851, 854, 855, 857, 858, 867, 868, 870, 871, 874, 877, 878, 880, 892], "valu": [4, 5, 7, 8, 9, 10, 16, 19, 21, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 70, 72, 90, 93, 94, 96, 101, 103, 104, 109, 112, 114, 120, 121, 127, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 156, 160, 162, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 201, 202, 203, 205, 206, 207, 210, 211, 212, 216, 218, 222, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 240, 241, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 288, 289, 298, 299, 301, 303, 304, 308, 311, 312, 316, 323, 327, 329, 331, 332, 350, 351, 356, 357, 359, 360, 361, 362, 367, 370, 371, 372, 373, 374, 378, 389, 406, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 435, 436, 438, 442, 443, 447, 448, 452, 453, 454, 455, 456, 457, 458, 459, 462, 467, 470, 472, 473, 476, 478, 479, 481, 482, 483, 489, 491, 496, 500, 504, 506, 510, 511, 516, 518, 519, 520, 522, 523, 525, 526, 527, 530, 531, 535, 537, 538, 539, 540, 541, 542, 545, 547, 548, 552, 563, 564, 565, 566, 567, 569, 570, 573, 576, 577, 579, 580, 581, 582, 584, 588, 590, 591, 594, 595, 597, 605, 607, 608, 610, 614, 616, 622, 626, 629, 633, 642, 649, 652, 653, 655, 656, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 685, 688, 690, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 710, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 728, 730, 731, 738, 739, 740, 741, 742, 743, 747, 748, 750, 760, 763, 769, 776, 777, 779, 782, 784, 785, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 804, 811, 812, 813, 814, 815, 818, 820, 821, 822, 823, 824, 825, 830, 845, 847, 851, 867, 868, 871, 874, 877, 892], "z": [4, 5, 11, 16, 18, 24, 41, 45, 50, 128, 151, 156, 158, 159, 160, 169, 170, 175, 176, 180, 181, 183, 184, 185, 189, 202, 206, 208, 245, 262, 265, 266, 267, 268, 269, 270, 273, 274, 279, 281, 307, 308, 314, 326, 337, 346, 347, 414, 421, 433, 481, 482, 493, 531, 563, 564, 569, 573, 579, 588, 631, 664, 665, 712, 714, 716, 750, 751, 753, 760, 777, 784, 790, 792, 794, 796, 799, 800, 802, 803, 807, 810, 812, 813, 814, 815, 816, 820, 822, 828, 829, 839, 847, 857, 874, 892], "score": [4, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 75, 83, 137, 172, 195, 196, 205, 210, 275, 414, 417, 420, 421, 424, 431, 564, 569, 579, 588, 668, 699, 700, 702, 703, 806, 829, 868, 871, 892], "thei": [4, 5, 26, 41, 45, 47, 50, 71, 72, 75, 82, 83, 94, 107, 114, 119, 140, 141, 142, 144, 149, 151, 152, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 176, 180, 181, 182, 188, 190, 191, 192, 196, 199, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 213, 216, 217, 218, 219, 232, 235, 245, 258, 260, 265, 266, 267, 268, 270, 275, 298, 309, 311, 327, 336, 356, 363, 365, 435, 437, 443, 447, 449, 456, 481, 482, 489, 496, 502, 504, 506, 511, 523, 540, 541, 553, 564, 575, 583, 588, 599, 614, 622, 623, 625, 656, 715, 755, 760, 777, 793, 794, 797, 842, 847, 849, 851, 854, 858, 867, 869, 873, 874, 892], "have": [4, 10, 19, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 72, 75, 79, 80, 83, 84, 86, 87, 90, 94, 95, 101, 103, 104, 112, 115, 116, 117, 119, 120, 127, 131, 134, 135, 137, 140, 142, 143, 144, 145, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 181, 182, 183, 188, 189, 190, 191, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 231, 232, 235, 237, 240, 242, 256, 257, 258, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 292, 293, 296, 298, 299, 308, 316, 319, 322, 332, 355, 356, 360, 361, 362, 367, 372, 373, 374, 406, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 433, 434, 435, 438, 439, 448, 449, 454, 457, 458, 464, 472, 476, 478, 479, 480, 481, 482, 489, 492, 493, 496, 498, 502, 505, 522, 524, 533, 535, 538, 542, 550, 559, 563, 564, 565, 574, 575, 579, 581, 582, 583, 588, 590, 599, 617, 619, 629, 648, 650, 653, 656, 662, 663, 664, 665, 666, 677, 682, 686, 694, 698, 712, 713, 714, 715, 716, 731, 732, 739, 740, 750, 760, 764, 765, 777, 783, 784, 790, 791, 792, 794, 797, 799, 800, 803, 812, 814, 815, 820, 821, 822, 826, 830, 840, 842, 847, 849, 852, 855, 856, 857, 863, 868, 869, 872, 873, 874, 877, 878, 880, 892], "standard": [4, 8, 28, 34, 41, 44, 46, 71, 75, 83, 94, 109, 121, 135, 141, 149, 150, 151, 155, 159, 160, 169, 170, 171, 182, 191, 195, 196, 200, 202, 205, 208, 216, 222, 228, 237, 241, 245, 257, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 288, 314, 316, 325, 330, 332, 392, 414, 421, 423, 434, 447, 448, 463, 467, 470, 481, 482, 489, 493, 496, 506, 510, 531, 547, 548, 558, 563, 564, 588, 625, 632, 656, 661, 694, 697, 712, 714, 715, 716, 724, 725, 728, 738, 742, 760, 777, 778, 784, 785, 791, 792, 794, 799, 800, 803, 805, 812, 815, 818, 820, 821, 822, 824, 847, 849, 867, 868, 869, 871, 874, 877, 880, 882, 892], "deviat": [4, 54, 55, 90, 97, 100, 121, 150, 151, 178, 196, 205, 209, 227, 229, 241, 262, 265, 266, 267, 268, 288, 316, 414, 546, 547, 548, 564, 588, 674, 694, 712, 714, 715, 716, 728, 738, 742, 784, 785, 791, 794, 800, 803, 805, 820, 821, 847, 874, 892], "how": [4, 5, 9, 10, 13, 18, 19, 22, 26, 27, 31, 33, 43, 44, 45, 47, 58, 63, 65, 67, 68, 69, 70, 71, 72, 76, 79, 90, 94, 95, 98, 99, 105, 113, 116, 117, 120, 122, 124, 125, 127, 129, 130, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 188, 190, 192, 195, 196, 201, 202, 203, 204, 205, 206, 208, 209, 211, 213, 216, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 237, 240, 241, 242, 245, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 278, 279, 280, 281, 298, 299, 310, 314, 315, 340, 344, 350, 367, 368, 369, 376, 414, 420, 421, 426, 441, 456, 458, 472, 473, 476, 478, 479, 481, 482, 486, 494, 502, 503, 506, 514, 531, 540, 541, 542, 563, 564, 567, 575, 588, 599, 600, 641, 642, 643, 644, 652, 656, 699, 700, 702, 703, 710, 712, 713, 714, 715, 716, 731, 760, 761, 768, 776, 777, 781, 784, 786, 790, 791, 792, 795, 799, 803, 804, 805, 806, 812, 813, 815, 818, 819, 820, 822, 823, 828, 830, 847, 849, 851, 852, 859, 867, 868, 873, 874, 875, 877, 878, 880, 892], "onli": [4, 8, 10, 11, 12, 19, 21, 22, 31, 34, 39, 41, 44, 45, 47, 49, 50, 55, 64, 71, 75, 79, 82, 83, 88, 90, 93, 94, 95, 96, 97, 103, 107, 109, 112, 114, 115, 116, 117, 120, 127, 131, 133, 136, 137, 140, 141, 142, 143, 149, 150, 151, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 180, 183, 188, 189, 190, 191, 192, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 229, 230, 231, 232, 235, 236, 237, 241, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 327, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 433, 435, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 462, 464, 465, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 560, 561, 562, 563, 564, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 658, 660, 661, 663, 664, 665, 666, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 688, 689, 698, 699, 700, 701, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 729, 730, 731, 734, 735, 739, 740, 741, 742, 743, 744, 745, 748, 749, 750, 755, 759, 760, 768, 776, 777, 778, 779, 781, 784, 785, 788, 790, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 807, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 855, 858, 867, 868, 871, 872, 873, 874, 875, 877, 892], "500": [4, 10, 11, 22, 71, 80, 81, 86, 88, 116, 135, 141, 143, 145, 181, 184, 190, 192, 195, 196, 202, 205, 209, 211, 212, 213, 224, 227, 232, 564], "ts_arg": [4, 101, 128, 196, 211, 228, 265, 266, 267, 268, 564, 791, 797, 805, 892], "xlim": [4, 19, 37, 39, 97, 127, 160, 181, 195, 202, 203, 211, 212, 224, 227, 237, 242, 267, 268, 794, 796], "plot_joint": [4, 72, 101, 150, 151, 166, 180, 182, 196, 199, 205, 207, 211, 228, 241, 267, 268, 712, 878, 892], "15": [4, 5, 9, 11, 12, 13, 19, 21, 22, 25, 28, 29, 32, 33, 34, 35, 42, 43, 45, 47, 50, 51, 60, 62, 67, 69, 70, 71, 72, 74, 76, 77, 80, 81, 83, 85, 92, 93, 94, 103, 108, 109, 114, 127, 135, 136, 137, 141, 142, 143, 145, 151, 155, 157, 162, 166, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 195, 196, 201, 203, 204, 205, 207, 208, 209, 210, 211, 216, 221, 222, 226, 227, 228, 229, 231, 232, 235, 236, 237, 240, 245, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 278, 279, 280, 281, 285, 320, 372, 416, 425, 450, 452, 453, 454, 478, 481, 482, 510, 564, 567, 576, 577, 644, 676, 696, 701, 714, 716, 731, 741, 742, 744, 764, 775, 776, 790, 798, 818, 823, 847, 854, 867, 868, 874], "titl": [4, 8, 9, 15, 16, 19, 22, 30, 35, 39, 42, 43, 44, 46, 47, 48, 49, 50, 54, 55, 59, 70, 71, 72, 77, 82, 86, 90, 94, 101, 103, 107, 108, 109, 110, 114, 120, 123, 125, 127, 132, 137, 141, 142, 144, 146, 151, 152, 160, 172, 175, 176, 177, 179, 180, 195, 196, 200, 202, 203, 205, 206, 207, 208, 210, 212, 224, 227, 228, 229, 232, 237, 241, 242, 245, 263, 265, 266, 267, 268, 270, 272, 275, 276, 280, 481, 482, 563, 564, 712, 714, 716, 760, 780, 783, 784, 788, 789, 790, 791, 792, 794, 796, 797, 798, 801, 803, 804, 806, 807, 808, 813, 815, 816, 818, 821, 827, 851, 866, 892], "differ": [4, 9, 16, 21, 22, 27, 28, 33, 37, 39, 44, 45, 47, 54, 55, 64, 69, 71, 78, 80, 81, 85, 94, 96, 99, 101, 103, 107, 110, 111, 112, 114, 120, 122, 123, 127, 130, 134, 135, 137, 140, 142, 143, 144, 147, 149, 150, 151, 152, 156, 158, 160, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 180, 181, 183, 184, 185, 188, 189, 190, 191, 196, 199, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 216, 217, 218, 222, 227, 228, 229, 230, 232, 235, 236, 237, 241, 245, 259, 260, 265, 266, 267, 268, 269, 272, 273, 276, 279, 280, 281, 282, 298, 299, 300, 305, 322, 343, 356, 360, 361, 363, 365, 366, 372, 373, 374, 393, 406, 414, 421, 423, 435, 437, 438, 448, 455, 457, 458, 472, 473, 476, 478, 479, 481, 482, 489, 496, 504, 516, 523, 537, 539, 540, 541, 542, 551, 564, 566, 574, 575, 581, 588, 597, 599, 613, 616, 622, 623, 626, 630, 653, 663, 664, 665, 666, 672, 675, 676, 677, 678, 694, 699, 700, 701, 702, 703, 712, 713, 714, 715, 716, 728, 738, 742, 760, 765, 776, 786, 790, 794, 798, 799, 800, 805, 807, 813, 816, 818, 824, 838, 847, 849, 851, 855, 856, 859, 867, 868, 869, 871, 874, 877, 880, 892], "wave": [4, 46, 95, 114, 137, 144, 151, 166, 202, 207, 228, 240, 245, 265, 266, 267, 268, 406, 407, 481, 482, 513, 576, 581, 589, 714, 716, 724, 730, 868], "contrast": [4, 7, 88, 96, 99, 149, 151, 166, 170, 208, 224, 227, 228, 235, 240, 241, 264, 265, 266, 267, 268, 712, 715, 868, 878, 880, 892], "although": [4, 21, 66, 101, 140, 143, 149, 161, 172, 201, 202, 204, 206, 216, 263, 447, 481, 482, 694, 858, 874, 892], "shouldn": [4, 151, 245, 276, 279, 551], "expect": [4, 32, 38, 94, 114, 121, 144, 156, 159, 161, 162, 165, 166, 167, 172, 180, 190, 196, 202, 205, 206, 207, 211, 216, 217, 222, 224, 227, 231, 232, 237, 242, 265, 266, 267, 268, 332, 334, 339, 360, 481, 482, 488, 497, 501, 508, 542, 564, 599, 623, 624, 628, 639, 650, 760, 790, 800, 807, 813, 847, 849, 851, 870, 871, 873, 874, 875, 892], "great": [4, 120, 144, 151, 242, 869, 880], "among": [4, 10, 27, 36, 56, 172, 202, 227, 276, 278, 366, 541, 543, 545, 564, 588, 631, 634, 692, 760, 765, 863, 873, 892], "minu": [4, 141, 144, 229, 242, 564, 653, 697, 874, 877], "difference_wav": 4, "weight": [4, 5, 7, 11, 15, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 58, 59, 61, 74, 75, 90, 94, 99, 104, 107, 108, 109, 110, 123, 137, 141, 144, 149, 151, 157, 166, 168, 176, 177, 178, 179, 180, 181, 182, 185, 188, 191, 195, 196, 200, 202, 203, 204, 206, 207, 208, 211, 223, 224, 227, 228, 230, 235, 236, 237, 245, 257, 270, 271, 276, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 355, 367, 418, 419, 420, 432, 435, 458, 459, 476, 478, 479, 492, 531, 537, 538, 542, 563, 564, 597, 668, 669, 674, 675, 678, 699, 700, 702, 703, 707, 719, 722, 730, 792, 815, 847, 867, 868, 877, 878, 892], "clear": [4, 75, 113, 117, 140, 157, 200, 204, 206, 210, 212, 213, 224, 227, 262, 265, 266, 270, 274, 289, 304, 481, 482, 530, 584, 747, 760, 791, 851, 880, 892], "pattern": [4, 11, 17, 19, 20, 21, 27, 46, 80, 83, 112, 113, 142, 143, 161, 166, 167, 172, 195, 199, 202, 205, 206, 207, 211, 242, 245, 265, 266, 267, 268, 270, 275, 314, 330, 365, 376, 414, 418, 420, 421, 422, 429, 432, 438, 443, 464, 496, 498, 561, 565, 626, 639, 649, 650, 665, 712, 714, 715, 851, 867, 868, 874, 877, 892], "when": [4, 21, 27, 28, 31, 44, 45, 46, 47, 61, 71, 75, 76, 81, 82, 83, 84, 90, 94, 95, 103, 107, 115, 126, 127, 140, 142, 143, 144, 145, 146, 149, 150, 151, 157, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 178, 180, 182, 184, 188, 189, 190, 191, 192, 196, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 227, 229, 232, 240, 241, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 298, 299, 311, 314, 318, 319, 341, 349, 350, 351, 355, 356, 360, 361, 362, 363, 365, 367, 372, 373, 374, 375, 378, 414, 421, 422, 425, 431, 433, 435, 439, 441, 443, 446, 448, 449, 450, 452, 453, 455, 457, 458, 461, 464, 473, 476, 478, 479, 481, 482, 489, 494, 496, 497, 498, 502, 504, 506, 510, 531, 532, 533, 534, 535, 537, 538, 542, 547, 548, 550, 553, 563, 564, 566, 569, 574, 575, 578, 579, 581, 584, 588, 589, 591, 592, 599, 600, 614, 617, 619, 623, 625, 627, 629, 642, 648, 650, 651, 652, 656, 661, 662, 673, 676, 699, 700, 701, 702, 703, 707, 711, 712, 713, 714, 715, 716, 718, 719, 721, 724, 728, 730, 738, 742, 750, 757, 760, 768, 769, 777, 784, 788, 790, 792, 793, 794, 796, 797, 799, 800, 802, 803, 805, 807, 810, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 826, 838, 840, 847, 849, 854, 855, 856, 857, 866, 867, 869, 871, 872, 873, 874, 875, 877, 878, 892], "howev": [4, 16, 21, 45, 71, 75, 76, 140, 142, 146, 149, 162, 167, 169, 170, 171, 172, 189, 190, 191, 192, 195, 196, 200, 202, 204, 205, 206, 207, 208, 212, 213, 216, 217, 227, 229, 231, 232, 235, 237, 242, 265, 266, 270, 298, 314, 356, 406, 435, 496, 498, 513, 531, 701, 851, 871, 873, 874, 877, 880, 892], "could": [4, 28, 29, 30, 38, 39, 41, 43, 70, 84, 104, 140, 144, 151, 160, 161, 166, 169, 171, 172, 175, 179, 180, 181, 191, 199, 201, 205, 206, 207, 208, 210, 216, 217, 218, 222, 227, 228, 235, 237, 242, 265, 266, 267, 268, 270, 271, 276, 298, 383, 406, 407, 413, 435, 437, 441, 457, 481, 482, 483, 489, 564, 567, 582, 589, 590, 613, 763, 768, 833, 851, 871, 873, 880, 892], "narrow": [4, 199, 203, 242, 275, 892], "our": [4, 5, 19, 26, 27, 32, 42, 44, 63, 68, 71, 75, 80, 84, 93, 103, 109, 112, 114, 115, 120, 121, 127, 135, 136, 137, 140, 141, 142, 144, 145, 146, 150, 151, 156, 160, 166, 168, 171, 172, 175, 180, 181, 183, 184, 196, 199, 200, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 222, 224, 227, 229, 231, 232, 235, 236, 237, 240, 241, 242, 278, 454, 455, 539, 728, 738, 742, 756, 850, 851, 853, 854, 855, 856, 859, 867, 870, 871, 873, 874, 875, 879, 880, 892], "search": [4, 151, 156, 196, 245, 275, 278, 298, 417, 424, 441, 462, 567, 572, 579, 728, 738, 739, 742, 776, 851, 856, 857, 871], "bit": [4, 5, 7, 109, 127, 141, 144, 160, 171, 180, 189, 202, 204, 209, 212, 227, 235, 237, 242, 265, 266, 270, 343, 481, 482, 489, 496, 503, 849, 857, 868, 874, 877, 892], "sinc": [4, 19, 32, 43, 44, 71, 94, 115, 119, 135, 140, 141, 142, 144, 151, 160, 166, 167, 169, 171, 172, 175, 178, 188, 189, 191, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 217, 218, 222, 227, 230, 235, 237, 242, 259, 260, 265, 266, 267, 268, 271, 275, 276, 279, 291, 314, 356, 360, 361, 435, 444, 445, 446, 447, 458, 470, 481, 482, 500, 526, 551, 564, 575, 581, 588, 599, 699, 700, 701, 702, 703, 777, 851, 867, 871, 874, 877, 892], "paradigm": [4, 7, 144, 162, 166, 199, 202, 793, 868, 892], "might": [4, 5, 19, 21, 71, 120, 127, 141, 144, 151, 156, 161, 162, 167, 168, 176, 192, 196, 202, 205, 208, 227, 232, 235, 242, 272, 276, 280, 334, 438, 550, 564, 607, 699, 818, 849, 850, 851, 867, 870, 871, 874, 892], "best": [4, 5, 10, 16, 74, 83, 121, 135, 142, 149, 162, 166, 176, 177, 178, 180, 192, 195, 201, 205, 210, 224, 271, 356, 361, 422, 481, 482, 579, 668, 670, 671, 761, 851, 857, 859, 869, 870, 871, 873, 874, 877], "electrod": [4, 27, 68, 78, 79, 85, 118, 120, 122, 130, 135, 138, 141, 143, 150, 159, 161, 165, 166, 170, 186, 187, 191, 195, 199, 202, 204, 208, 210, 216, 227, 245, 262, 265, 266, 267, 268, 269, 270, 274, 276, 282, 314, 315, 318, 328, 330, 332, 333, 334, 335, 336, 337, 340, 356, 368, 376, 414, 421, 455, 466, 473, 481, 482, 487, 489, 491, 496, 502, 504, 511, 526, 530, 531, 542, 563, 564, 572, 579, 594, 596, 598, 627, 656, 712, 714, 715, 716, 752, 760, 761, 776, 777, 780, 782, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 828, 830, 847, 867, 868, 877, 880, 892], "over": [4, 5, 8, 9, 12, 21, 27, 28, 45, 46, 58, 59, 68, 71, 80, 81, 103, 104, 107, 109, 112, 113, 115, 122, 130, 135, 136, 137, 149, 150, 151, 159, 161, 162, 166, 169, 172, 175, 176, 191, 192, 200, 202, 205, 207, 210, 212, 218, 219, 224, 227, 228, 231, 232, 240, 242, 245, 257, 259, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 292, 293, 296, 309, 323, 344, 356, 362, 414, 421, 423, 425, 453, 456, 481, 482, 517, 533, 535, 538, 564, 568, 585, 600, 613, 626, 661, 662, 687, 699, 708, 712, 714, 715, 716, 723, 731, 744, 760, 773, 791, 792, 802, 807, 847, 851, 858, 868, 869, 871, 873, 874, 880, 892], "occipit": [4, 47, 49, 169, 204, 213, 242, 646, 874], "lobe": [4, 47, 135, 136, 180], "ani": [4, 5, 18, 24, 27, 41, 45, 50, 76, 83, 110, 112, 117, 120, 126, 127, 135, 137, 140, 141, 142, 143, 149, 151, 156, 158, 160, 161, 162, 165, 166, 167, 169, 170, 171, 172, 176, 181, 183, 184, 185, 189, 190, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 227, 232, 242, 245, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 278, 279, 280, 281, 288, 290, 292, 307, 308, 314, 321, 326, 328, 363, 367, 390, 420, 433, 436, 437, 438, 441, 448, 466, 471, 481, 482, 497, 553, 555, 556, 557, 561, 562, 564, 565, 566, 567, 581, 585, 588, 589, 594, 599, 606, 617, 623, 631, 639, 649, 652, 653, 656, 662, 673, 677, 698, 707, 712, 713, 714, 715, 716, 729, 760, 761, 763, 785, 790, 791, 793, 802, 805, 813, 814, 824, 830, 839, 842, 847, 849, 851, 854, 868, 869, 871, 873, 874, 880, 892], "easier": [4, 140, 142, 144, 150, 151, 156, 172, 191, 196, 200, 202, 205, 206, 207, 208, 259, 375, 849, 851, 892], "spot": [4, 200, 203, 231, 275, 892], "area": [4, 5, 54, 71, 94, 116, 135, 178, 191, 192, 196, 200, 205, 213, 218, 223, 227, 231, 242, 265, 266, 267, 268, 271, 481, 482, 584, 586, 594, 673, 712, 782, 784, 794, 796, 814, 851, 874, 877, 892], "dictionari": [4, 10, 27, 36, 56, 59, 94, 115, 127, 136, 140, 141, 142, 144, 145, 149, 150, 151, 166, 167, 169, 188, 205, 207, 210, 213, 216, 217, 222, 245, 257, 259, 260, 262, 265, 266, 267, 268, 269, 270, 274, 275, 276, 278, 289, 298, 299, 300, 304, 312, 314, 326, 327, 342, 356, 360, 361, 367, 370, 371, 372, 373, 374, 376, 414, 416, 421, 425, 438, 441, 443, 446, 449, 450, 452, 453, 455, 457, 458, 476, 477, 478, 479, 480, 481, 482, 515, 525, 530, 542, 564, 574, 576, 577, 579, 581, 584, 587, 588, 619, 626, 631, 642, 644, 647, 653, 661, 698, 712, 747, 750, 760, 783, 784, 790, 791, 793, 800, 803, 805, 813, 819, 858, 892], "concentr": [4, 190, 206, 211, 223, 419, 537, 538, 601, 606, 719, 722, 730, 792, 892], "b11": 4, "ylim": [4, 7, 9, 19, 35, 39, 40, 46, 51, 59, 60, 99, 112, 114, 127, 151, 160, 195, 202, 204, 211, 212, 227, 237, 242, 267, 268, 784, 794, 798, 892], "do": [4, 5, 15, 16, 18, 24, 26, 27, 31, 34, 40, 41, 45, 47, 50, 51, 54, 55, 58, 59, 60, 61, 66, 68, 71, 75, 83, 109, 112, 114, 115, 120, 127, 136, 137, 140, 141, 144, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 166, 168, 171, 172, 175, 176, 177, 180, 182, 183, 184, 185, 188, 189, 191, 192, 195, 196, 200, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 216, 218, 222, 223, 224, 227, 232, 235, 236, 237, 241, 242, 245, 257, 258, 259, 260, 262, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 284, 288, 305, 309, 311, 321, 328, 356, 360, 367, 372, 373, 383, 389, 406, 407, 425, 426, 427, 433, 435, 443, 448, 449, 455, 464, 472, 478, 479, 481, 482, 489, 496, 526, 531, 532, 533, 534, 535, 537, 538, 547, 548, 555, 556, 557, 561, 562, 564, 565, 566, 567, 575, 581, 582, 588, 599, 616, 619, 626, 629, 630, 648, 650, 652, 699, 700, 702, 703, 707, 712, 714, 715, 716, 728, 729, 738, 742, 750, 785, 789, 790, 801, 820, 837, 840, 842, 849, 851, 854, 856, 857, 859, 862, 867, 868, 873, 874, 877, 878, 880, 892], "pretti": [4, 141, 144, 202, 205, 207, 871], "small": [4, 5, 11, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 76, 90, 93, 94, 104, 107, 108, 109, 110, 121, 127, 128, 135, 141, 142, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 196, 202, 203, 205, 207, 218, 223, 224, 227, 229, 235, 237, 257, 262, 263, 265, 266, 267, 268, 271, 274, 322, 356, 414, 421, 481, 482, 497, 563, 564, 566, 617, 623, 699, 700, 702, 703, 705, 712, 714, 716, 788, 792, 799, 803, 812, 815, 820, 847, 851, 868, 871, 874, 877, 892], "determin": [4, 22, 82, 128, 141, 145, 151, 161, 166, 169, 171, 178, 190, 202, 204, 210, 216, 217, 218, 227, 230, 232, 259, 262, 263, 265, 266, 267, 268, 270, 273, 274, 279, 281, 284, 298, 299, 307, 314, 316, 343, 350, 356, 360, 361, 372, 373, 374, 389, 414, 420, 421, 422, 431, 453, 457, 458, 476, 478, 479, 481, 482, 493, 518, 522, 542, 564, 594, 597, 599, 604, 605, 627, 646, 704, 728, 738, 740, 742, 743, 760, 788, 790, 791, 796, 798, 799, 800, 801, 810, 817, 823, 833, 871, 874, 877, 892], "whether": [4, 13, 82, 141, 144, 145, 146, 171, 178, 180, 196, 200, 205, 206, 210, 242, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 288, 298, 299, 314, 323, 324, 325, 326, 328, 356, 361, 366, 389, 396, 414, 421, 436, 447, 455, 473, 480, 481, 482, 492, 500, 523, 531, 532, 533, 534, 535, 538, 540, 541, 542, 546, 547, 548, 563, 564, 565, 573, 579, 581, 582, 584, 588, 589, 590, 594, 597, 600, 614, 653, 656, 676, 677, 699, 700, 702, 703, 712, 713, 714, 715, 716, 718, 721, 724, 760, 769, 777, 781, 784, 786, 788, 789, 790, 791, 792, 794, 798, 799, 803, 805, 807, 810, 812, 813, 814, 815, 816, 818, 820, 821, 822, 823, 826, 830, 851, 857, 871, 874, 877, 892], "stronger": [4, 141, 191, 229, 237, 267, 268, 794], "along": [4, 19, 46, 68, 115, 119, 136, 140, 142, 160, 166, 168, 170, 178, 195, 196, 199, 200, 204, 205, 208, 209, 216, 218, 219, 224, 235, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 288, 414, 417, 421, 424, 425, 427, 454, 472, 473, 478, 481, 482, 563, 564, 616, 691, 692, 699, 700, 702, 703, 706, 712, 714, 715, 716, 760, 776, 777, 784, 790, 791, 792, 795, 799, 803, 812, 815, 816, 818, 820, 821, 822, 823, 847, 849, 850, 851, 868, 874, 892], "phase_coh": 4, "get": [4, 5, 7, 15, 18, 19, 21, 22, 26, 27, 28, 34, 38, 39, 41, 47, 48, 50, 52, 61, 63, 64, 66, 67, 70, 71, 73, 80, 81, 83, 84, 94, 95, 96, 97, 103, 109, 113, 114, 116, 120, 123, 124, 127, 135, 136, 140, 141, 142, 143, 144, 146, 149, 150, 151, 155, 156, 157, 158, 160, 162, 165, 166, 167, 169, 170, 173, 174, 175, 180, 181, 183, 184, 185, 192, 199, 200, 201, 202, 203, 205, 207, 213, 216, 218, 219, 227, 229, 231, 232, 237, 240, 241, 245, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 289, 304, 308, 312, 313, 314, 324, 325, 343, 344, 360, 367, 373, 374, 377, 380, 381, 382, 383, 385, 386, 387, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 431, 434, 438, 443, 449, 455, 463, 466, 469, 473, 481, 482, 487, 512, 520, 530, 540, 541, 553, 564, 565, 571, 573, 582, 584, 629, 661, 662, 681, 683, 691, 704, 707, 712, 713, 714, 715, 716, 728, 738, 742, 747, 760, 761, 784, 791, 793, 806, 847, 849, 850, 851, 853, 855, 856, 857, 862, 868, 869, 873, 874, 875, 877, 878, 880, 892], "sort": [4, 7, 15, 21, 27, 47, 94, 121, 122, 130, 137, 143, 160, 170, 227, 265, 266, 267, 268, 270, 275, 326, 356, 361, 422, 440, 443, 467, 497, 564, 634, 713, 715, 791, 794, 796, 842, 859, 892], "label": [4, 8, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 27, 28, 29, 36, 37, 44, 45, 56, 69, 71, 90, 92, 94, 95, 96, 97, 101, 105, 106, 110, 111, 112, 113, 116, 120, 126, 127, 135, 137, 140, 142, 143, 144, 149, 151, 155, 160, 166, 168, 171, 172, 176, 180, 181, 191, 192, 196, 201, 205, 207, 210, 213, 216, 217, 218, 228, 237, 241, 242, 245, 261, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 298, 299, 362, 366, 388, 391, 414, 415, 416, 419, 421, 422, 423, 425, 431, 447, 448, 455, 460, 466, 467, 468, 472, 481, 482, 489, 492, 496, 500, 517, 518, 530, 531, 532, 533, 534, 535, 537, 538, 540, 541, 543, 545, 547, 548, 550, 561, 563, 564, 565, 579, 616, 629, 631, 632, 633, 634, 639, 649, 650, 661, 662, 670, 675, 678, 679, 689, 708, 712, 714, 715, 716, 728, 738, 760, 765, 778, 779, 782, 784, 790, 791, 792, 793, 794, 796, 799, 803, 806, 807, 812, 813, 815, 818, 819, 820, 821, 822, 823, 841, 842, 847, 851, 858, 880, 882, 892], "2f": [4, 59, 157, 272, 273, 276, 279, 280, 281, 564, 760, 803, 818, 823], "format": [4, 27, 34, 43, 44, 63, 67, 71, 114, 127, 135, 137, 140, 143, 149, 150, 151, 160, 165, 166, 168, 170, 171, 172, 176, 182, 188, 191, 192, 203, 205, 206, 207, 208, 211, 213, 216, 217, 218, 220, 227, 228, 229, 232, 257, 259, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 314, 332, 333, 337, 339, 352, 353, 354, 376, 414, 421, 443, 444, 445, 446, 447, 480, 481, 482, 484, 487, 489, 493, 498, 503, 553, 559, 563, 564, 579, 581, 594, 617, 621, 626, 632, 642, 657, 658, 663, 664, 665, 677, 692, 699, 700, 702, 703, 712, 713, 714, 715, 716, 730, 731, 733, 755, 760, 775, 777, 792, 799, 803, 812, 815, 818, 820, 822, 823, 837, 845, 847, 851, 858, 863, 867, 868, 871, 877, 880, 892], "90": [4, 5, 11, 13, 19, 24, 35, 41, 42, 47, 80, 81, 90, 94, 103, 104, 108, 109, 112, 114, 123, 135, 136, 143, 151, 156, 157, 158, 160, 169, 170, 171, 179, 184, 190, 196, 201, 203, 208, 209, 211, 212, 227, 228, 229, 231, 232, 235, 236, 237, 242, 245, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 419, 421, 457, 458, 476, 478, 479, 527, 537, 538, 542, 564, 661, 668, 670, 671, 672, 693, 719, 722, 730, 765, 792, 800, 868, 869, 874], "each": [4, 9, 10, 11, 15, 16, 19, 24, 28, 32, 33, 38, 41, 44, 45, 68, 71, 80, 83, 93, 94, 95, 101, 103, 107, 108, 109, 112, 113, 115, 117, 120, 127, 128, 133, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 160, 161, 162, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 180, 181, 183, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 229, 231, 232, 235, 236, 237, 240, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 290, 291, 298, 299, 305, 312, 316, 319, 323, 344, 346, 347, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 364, 367, 369, 374, 389, 406, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 437, 438, 439, 448, 452, 453, 454, 455, 456, 457, 458, 466, 472, 476, 478, 479, 480, 481, 482, 483, 485, 496, 505, 514, 515, 518, 520, 522, 523, 531, 535, 537, 538, 540, 541, 554, 563, 564, 565, 567, 569, 572, 579, 581, 583, 584, 586, 588, 594, 598, 599, 603, 619, 623, 629, 642, 645, 653, 660, 661, 667, 668, 669, 670, 671, 672, 673, 674, 677, 678, 679, 681, 683, 692, 694, 695, 697, 699, 700, 701, 702, 703, 704, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 719, 728, 731, 738, 742, 743, 750, 760, 761, 764, 768, 776, 777, 778, 780, 781, 782, 784, 785, 786, 787, 788, 791, 792, 794, 796, 797, 798, 799, 800, 803, 811, 812, 813, 814, 815, 819, 820, 821, 822, 825, 829, 830, 838, 840, 845, 847, 849, 850, 851, 857, 867, 868, 869, 871, 874, 877, 892], "zip": [4, 9, 10, 22, 27, 47, 81, 90, 107, 113, 114, 120, 127, 137, 140, 150, 160, 165, 180, 195, 200, 202, 203, 205, 206, 208, 227, 228, 229, 230, 231, 232, 237, 241, 390, 505, 851], "c22": 4, "figur": [4, 5, 8, 16, 19, 22, 27, 28, 37, 38, 45, 49, 54, 55, 92, 103, 109, 111, 115, 116, 118, 122, 123, 125, 130, 135, 136, 141, 142, 145, 150, 156, 158, 160, 166, 170, 176, 178, 179, 180, 183, 184, 191, 195, 196, 202, 204, 205, 207, 210, 211, 219, 224, 227, 229, 232, 237, 241, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 314, 315, 328, 414, 421, 473, 481, 482, 563, 564, 579, 584, 629, 639, 712, 713, 714, 715, 716, 739, 740, 742, 743, 760, 762, 763, 766, 769, 773, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 827, 828, 830, 849, 850, 851, 869, 871, 892], "ax": [4, 10, 11, 12, 13, 15, 19, 21, 22, 37, 39, 41, 45, 47, 58, 68, 69, 70, 71, 72, 73, 74, 81, 82, 86, 90, 93, 96, 99, 104, 112, 113, 114, 115, 116, 120, 127, 133, 135, 136, 137, 144, 145, 146, 150, 151, 156, 160, 161, 170, 172, 176, 177, 180, 181, 183, 195, 196, 199, 202, 203, 206, 207, 210, 211, 212, 219, 224, 227, 228, 229, 230, 231, 232, 240, 241, 242, 262, 263, 265, 266, 267, 268, 270, 274, 314, 315, 323, 328, 414, 421, 473, 481, 482, 563, 564, 584, 712, 714, 716, 728, 738, 761, 763, 773, 776, 777, 779, 782, 783, 784, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 808, 809, 810, 812, 814, 815, 816, 817, 820, 822, 874, 892], "subplot": [4, 10, 11, 12, 13, 15, 19, 21, 22, 39, 41, 45, 47, 58, 69, 70, 71, 72, 73, 74, 82, 86, 90, 93, 96, 99, 104, 107, 112, 113, 114, 115, 116, 120, 127, 136, 137, 142, 144, 146, 151, 160, 170, 172, 176, 177, 180, 181, 183, 195, 196, 202, 207, 210, 211, 212, 219, 224, 227, 228, 229, 230, 231, 232, 241, 242, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 728, 738, 760, 782, 783, 792, 793, 798, 799, 803, 808, 812, 815, 820, 822, 825, 892], "figsiz": [4, 12, 15, 19, 22, 45, 47, 71, 74, 96, 112, 113, 114, 115, 120, 127, 136, 144, 160, 176, 183, 195, 202, 207, 210, 211, 224, 227, 228, 230, 231, 232, 241, 242, 564, 805, 806], "20": [4, 5, 9, 11, 12, 13, 14, 15, 19, 20, 22, 26, 28, 33, 34, 35, 37, 40, 41, 45, 46, 47, 48, 54, 55, 56, 59, 61, 62, 71, 75, 77, 81, 82, 88, 90, 100, 103, 104, 107, 108, 109, 113, 114, 115, 116, 121, 127, 128, 133, 137, 140, 142, 143, 150, 151, 152, 157, 159, 166, 169, 170, 171, 172, 174, 176, 177, 179, 181, 183, 184, 185, 191, 195, 196, 199, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 222, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 242, 244, 245, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 298, 299, 310, 314, 319, 326, 332, 343, 344, 345, 346, 347, 349, 362, 367, 413, 414, 421, 439, 449, 457, 476, 478, 479, 481, 482, 489, 519, 523, 531, 532, 533, 534, 538, 542, 546, 547, 548, 555, 556, 557, 563, 564, 573, 579, 588, 597, 621, 626, 631, 656, 660, 661, 676, 678, 700, 701, 712, 713, 714, 715, 716, 729, 764, 776, 777, 778, 784, 789, 790, 792, 794, 795, 796, 798, 799, 800, 803, 810, 812, 813, 814, 815, 816, 818, 820, 822, 823, 850, 867, 868, 871, 874], "cmap": [4, 9, 10, 13, 15, 16, 19, 22, 41, 71, 100, 101, 107, 109, 112, 114, 115, 116, 120, 136, 143, 160, 182, 195, 196, 210, 227, 229, 230, 231, 232, 241, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 713, 714, 716, 775, 777, 784, 786, 791, 792, 796, 799, 802, 803, 812, 815, 816, 820, 821, 822, 892], "magma": 4, "consider": [4, 81, 99, 151, 201, 202, 205, 212, 223, 232, 245, 275, 698, 858, 874, 880, 892], "chosen": [4, 45, 137, 145, 151, 199, 202, 204, 205, 207, 240, 259, 262, 265, 266, 267, 268, 270, 273, 274, 278, 279, 281, 360, 414, 416, 421, 425, 427, 450, 452, 453, 472, 481, 482, 516, 539, 563, 564, 579, 597, 616, 664, 665, 699, 700, 702, 703, 712, 713, 714, 715, 716, 728, 738, 742, 760, 776, 777, 786, 790, 792, 796, 799, 803, 806, 812, 813, 814, 815, 816, 820, 822, 874], "test": [4, 8, 10, 13, 15, 16, 19, 26, 27, 90, 95, 98, 102, 112, 123, 128, 135, 140, 151, 165, 168, 171, 172, 188, 195, 196, 209, 210, 216, 228, 229, 230, 233, 234, 237, 238, 239, 242, 245, 265, 266, 267, 268, 270, 276, 277, 278, 290, 292, 298, 320, 362, 389, 417, 431, 435, 437, 453, 481, 482, 490, 510, 514, 530, 531, 539, 545, 555, 561, 564, 588, 599, 626, 639, 641, 684, 690, 692, 694, 696, 699, 700, 701, 702, 703, 704, 705, 706, 712, 714, 715, 716, 742, 760, 768, 781, 784, 792, 799, 806, 820, 849, 852, 855, 856, 871, 874, 880, 892], "interpol": [4, 15, 24, 27, 32, 61, 71, 78, 85, 87, 90, 93, 94, 95, 119, 135, 136, 151, 177, 181, 188, 196, 205, 210, 213, 224, 227, 240, 262, 265, 266, 267, 268, 274, 278, 280, 281, 414, 421, 448, 471, 481, 482, 563, 564, 579, 583, 585, 591, 598, 629, 661, 663, 664, 665, 677, 712, 714, 716, 748, 760, 777, 792, 799, 803, 812, 815, 820, 822, 858, 892], "miss": [4, 44, 70, 84, 135, 151, 158, 159, 180, 183, 188, 190, 202, 208, 213, 242, 265, 266, 267, 268, 270, 278, 318, 341, 390, 406, 420, 481, 482, 489, 496, 502, 585, 599, 698, 793, 794, 847, 851, 855, 856, 858, 859, 877, 880, 892], "drop": [4, 8, 9, 11, 12, 16, 18, 21, 32, 33, 34, 42, 46, 49, 72, 73, 96, 97, 100, 103, 107, 110, 112, 113, 114, 117, 121, 128, 135, 136, 137, 141, 142, 144, 145, 146, 151, 152, 162, 166, 167, 172, 177, 180, 182, 183, 185, 191, 199, 200, 201, 204, 205, 207, 208, 211, 212, 213, 218, 223, 224, 229, 230, 231, 232, 235, 237, 241, 259, 260, 262, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 316, 319, 439, 440, 447, 471, 481, 482, 494, 564, 576, 577, 581, 600, 623, 625, 653, 712, 713, 714, 715, 716, 789, 790, 803, 805, 851, 854, 874, 892], "furthermor": [4, 155, 175, 178, 189, 204, 867, 874, 877], "mark": [4, 8, 11, 49, 75, 79, 83, 92, 93, 111, 120, 126, 127, 135, 137, 142, 144, 150, 151, 166, 169, 170, 171, 172, 178, 189, 190, 191, 201, 202, 205, 206, 208, 209, 210, 211, 216, 218, 219, 232, 245, 258, 260, 265, 266, 267, 268, 316, 374, 383, 391, 406, 407, 471, 473, 480, 481, 482, 563, 564, 569, 572, 578, 579, 583, 588, 598, 599, 607, 614, 623, 625, 653, 712, 714, 715, 716, 756, 780, 790, 792, 799, 804, 806, 813, 814, 820, 847, 851, 868, 869, 892], "exg": 4, "prefix": [4, 75, 155, 170, 175, 257, 262, 265, 266, 267, 268, 274, 357, 358, 414, 421, 481, 482, 489, 496, 497, 563, 564, 579, 623, 712, 714, 716, 777, 799, 803, 812, 815, 820, 847], "interpolate_bad": [4, 71, 79, 200, 265, 266, 267, 268, 471, 481, 482, 874, 892], "reset_bad": [4, 79, 200, 265, 266, 267, 268, 481, 482, 874], "drop_channel": [4, 42, 68, 71, 136, 140, 149, 216, 232, 265, 266, 267, 268, 481, 482, 712, 714, 715, 716, 878, 892], "exg1": 4, "exg2": 4, "exg3": 4, "exg4": 4, "radiu": [4, 5, 24, 26, 41, 45, 50, 71, 72, 79, 80, 93, 94, 109, 151, 156, 158, 159, 170, 176, 181, 182, 183, 184, 185, 200, 207, 208, 210, 223, 262, 265, 266, 267, 268, 270, 274, 304, 307, 314, 328, 330, 332, 414, 421, 434, 472, 481, 482, 516, 527, 546, 563, 564, 573, 579, 661, 664, 707, 712, 714, 716, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 874, 892], "95": [4, 5, 7, 13, 19, 34, 47, 50, 71, 76, 80, 81, 90, 109, 112, 113, 114, 121, 136, 142, 143, 145, 146, 151, 156, 158, 160, 169, 179, 184, 195, 196, 201, 209, 210, 211, 227, 228, 231, 232, 245, 265, 266, 267, 268, 564, 579, 672, 691, 712, 784, 800, 805, 821, 874], "113": [4, 35, 112, 117, 130, 169, 209, 216, 221, 227, 232, 245], "524face": 4, "To": [4, 5, 11, 18, 19, 22, 33, 44, 45, 88, 90, 94, 95, 113, 116, 127, 133, 137, 140, 142, 144, 146, 149, 150, 151, 156, 158, 159, 160, 161, 166, 168, 169, 170, 171, 172, 175, 178, 180, 184, 188, 190, 191, 192, 195, 196, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 218, 219, 222, 224, 227, 229, 231, 232, 236, 237, 241, 257, 259, 260, 265, 266, 267, 268, 271, 275, 280, 281, 298, 299, 356, 360, 361, 420, 427, 438, 444, 445, 446, 447, 449, 455, 481, 482, 489, 494, 500, 512, 516, 520, 526, 564, 578, 581, 588, 590, 595, 597, 599, 614, 616, 631, 657, 661, 664, 665, 666, 672, 675, 676, 678, 699, 700, 701, 702, 703, 705, 718, 721, 728, 737, 738, 739, 740, 741, 742, 743, 744, 758, 760, 777, 790, 803, 805, 807, 813, 824, 825, 839, 849, 850, 851, 854, 855, 856, 857, 859, 866, 867, 868, 869, 871, 873, 874, 878, 892], "predict": [4, 10, 12, 13, 15, 16, 17, 20, 27, 42, 101, 137, 141, 176, 195, 196, 245, 270, 298, 314, 330, 376, 417, 420, 424, 426, 431, 454, 482, 532, 539, 822, 868, 892], "brain": [4, 5, 7, 8, 10, 11, 15, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 54, 58, 59, 61, 71, 82, 88, 94, 104, 109, 115, 122, 126, 130, 135, 146, 151, 155, 156, 158, 162, 170, 175, 176, 177, 178, 179, 181, 182, 184, 188, 189, 190, 191, 196, 199, 204, 205, 207, 208, 224, 227, 235, 236, 237, 242, 245, 256, 257, 263, 265, 266, 267, 268, 270, 272, 273, 276, 277, 278, 279, 280, 281, 291, 298, 299, 305, 333, 362, 375, 383, 414, 420, 422, 448, 453, 466, 479, 481, 482, 491, 502, 518, 522, 527, 530, 531, 545, 551, 561, 562, 565, 569, 580, 595, 596, 598, 621, 629, 639, 644, 649, 661, 677, 701, 712, 714, 715, 716, 769, 771, 774, 776, 778, 779, 782, 788, 818, 819, 823, 824, 828, 830, 847, 849, 851, 852, 857, 858, 867, 868, 871, 874, 879, 880, 882, 892], "purpos": [4, 8, 11, 12, 21, 113, 140, 141, 149, 156, 168, 180, 189, 199, 200, 201, 202, 205, 206, 208, 231, 235, 237, 242, 245, 265, 266, 380, 381, 382, 383, 385, 386, 387, 389, 394, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 425, 427, 481, 482, 776, 790, 813, 847, 858, 867, 868, 873, 876, 877, 878], "intercept": [4, 101, 697], "predictor_var": 4, "where": [4, 10, 13, 31, 45, 69, 71, 75, 81, 82, 83, 90, 94, 95, 101, 112, 137, 140, 141, 142, 144, 149, 151, 155, 160, 165, 166, 167, 168, 169, 170, 172, 175, 182, 183, 184, 188, 190, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 216, 218, 222, 223, 224, 227, 229, 231, 232, 235, 236, 237, 242, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 278, 279, 280, 281, 321, 323, 324, 325, 337, 355, 375, 380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 421, 427, 429, 448, 450, 453, 455, 481, 482, 516, 539, 563, 564, 566, 573, 579, 581, 582, 583, 599, 662, 668, 669, 670, 671, 672, 674, 676, 677, 692, 693, 698, 699, 700, 702, 703, 712, 714, 715, 716, 728, 738, 740, 742, 743, 760, 765, 777, 778, 781, 782, 783, 790, 791, 792, 799, 803, 812, 813, 814, 815, 820, 822, 826, 847, 851, 852, 854, 855, 856, 857, 867, 868, 871, 873, 874, 877, 892], "func": [4, 210, 272, 273, 276, 279, 280, 281, 489, 496, 504, 511, 851, 892], "reg": [4, 8, 9, 12, 21, 34, 49, 180, 224, 298, 299, 414, 421, 422, 565, 874, 892], "design_matrix": [4, 141, 697], "25728": 4, "target": [4, 17, 20, 27, 49, 78, 85, 101, 128, 141, 161, 196, 203, 205, 227, 228, 242, 265, 267, 268, 270, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 431, 440, 481, 494, 524, 561, 564, 565, 626, 851, 892], "regressor": [4, 70, 101, 196, 227, 697], "within": [4, 5, 16, 24, 38, 41, 45, 47, 50, 62, 70, 94, 108, 109, 112, 120, 121, 127, 128, 135, 140, 141, 144, 151, 155, 156, 158, 160, 161, 165, 166, 168, 172, 175, 176, 178, 181, 183, 184, 185, 199, 202, 205, 206, 208, 210, 213, 218, 223, 227, 238, 242, 245, 258, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 283, 309, 316, 376, 389, 414, 419, 421, 438, 440, 443, 448, 466, 472, 481, 482, 537, 538, 547, 563, 564, 579, 585, 699, 700, 702, 703, 707, 712, 714, 716, 719, 722, 730, 741, 744, 757, 777, 791, 792, 799, 800, 803, 812, 815, 819, 820, 822, 847, 849, 851, 856, 857, 862, 871, 873, 874, 880, 892], "object": [4, 9, 10, 18, 19, 27, 30, 31, 32, 33, 34, 36, 47, 54, 55, 56, 61, 64, 79, 94, 99, 101, 103, 104, 109, 112, 113, 114, 127, 132, 141, 144, 146, 151, 155, 157, 160, 161, 162, 165, 166, 167, 170, 171, 172, 175, 181, 182, 188, 189, 190, 191, 192, 196, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 213, 217, 220, 221, 224, 228, 235, 241, 242, 245, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 285, 286, 289, 291, 292, 293, 296, 298, 299, 300, 304, 305, 307, 308, 312, 313, 314, 316, 319, 320, 321, 322, 323, 326, 328, 329, 342, 344, 346, 351, 355, 356, 359, 360, 361, 362, 363, 367, 372, 373, 374, 376, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 430, 431, 432, 433, 439, 443, 448, 455, 456, 458, 460, 465, 476, 478, 479, 480, 481, 482, 483, 486, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 516, 519, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 538, 540, 541, 542, 546, 553, 560, 561, 563, 564, 565, 566, 567, 575, 578, 579, 580, 581, 584, 592, 594, 595, 596, 598, 604, 605, 612, 617, 621, 622, 624, 628, 629, 630, 633, 639, 646, 647, 661, 662, 676, 677, 680, 689, 697, 698, 704, 708, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 732, 733, 734, 739, 740, 741, 742, 743, 744, 745, 747, 749, 759, 760, 761, 766, 769, 771, 773, 774, 776, 777, 780, 781, 784, 785, 786, 787, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 814, 815, 816, 817, 820, 822, 827, 828, 838, 841, 847, 851, 867, 869, 874, 876, 878, 882, 890, 892], "multipl": [4, 16, 40, 44, 45, 51, 60, 93, 96, 97, 101, 103, 112, 120, 140, 144, 149, 150, 159, 160, 166, 172, 175, 190, 195, 200, 202, 203, 205, 206, 208, 216, 217, 218, 228, 232, 235, 236, 237, 242, 245, 259, 264, 265, 266, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 301, 303, 319, 356, 362, 389, 416, 425, 427, 437, 439, 441, 450, 451, 452, 455, 458, 464, 478, 479, 481, 482, 494, 505, 525, 540, 541, 546, 551, 564, 582, 590, 599, 603, 621, 629, 653, 656, 661, 690, 696, 700, 701, 712, 713, 715, 724, 727, 734, 735, 740, 743, 760, 774, 784, 791, 794, 797, 800, 803, 805, 807, 813, 818, 819, 821, 823, 847, 851, 868, 874, 880, 882, 889, 892], "list": [4, 9, 10, 11, 16, 28, 41, 43, 47, 68, 70, 84, 94, 103, 104, 111, 112, 113, 115, 116, 117, 127, 132, 137, 140, 144, 145, 149, 150, 151, 161, 166, 168, 169, 170, 171, 172, 175, 177, 183, 185, 188, 191, 200, 201, 202, 205, 206, 207, 210, 211, 213, 216, 218, 219, 222, 223, 224, 227, 228, 231, 232, 236, 237, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 287, 288, 290, 291, 292, 293, 296, 298, 299, 301, 303, 305, 307, 308, 312, 314, 315, 316, 319, 320, 321, 323, 324, 325, 326, 328, 329, 331, 339, 340, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 369, 372, 373, 374, 376, 383, 389, 395, 397, 406, 407, 414, 416, 420, 421, 424, 426, 429, 430, 431, 433, 435, 436, 437, 438, 439, 441, 445, 446, 448, 449, 452, 453, 455, 456, 460, 462, 464, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 485, 489, 491, 493, 496, 497, 498, 500, 504, 505, 506, 508, 511, 514, 518, 520, 521, 522, 525, 528, 529, 533, 535, 538, 540, 541, 550, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 572, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 590, 591, 595, 598, 599, 600, 605, 607, 610, 614, 616, 619, 621, 623, 625, 626, 629, 630, 631, 634, 637, 644, 646, 652, 653, 656, 661, 662, 675, 678, 679, 680, 681, 689, 692, 693, 695, 697, 698, 699, 700, 702, 703, 704, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 728, 729, 734, 737, 738, 743, 745, 746, 757, 759, 760, 761, 764, 765, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 814, 815, 816, 818, 819, 820, 822, 823, 824, 835, 838, 842, 843, 847, 851, 854, 858, 859, 862, 866, 867, 871, 873, 874, 875, 877, 880, 892], "field": [4, 5, 7, 17, 20, 22, 26, 27, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 70, 79, 80, 81, 90, 94, 109, 113, 117, 119, 121, 124, 128, 131, 142, 144, 149, 156, 158, 159, 162, 165, 166, 169, 176, 177, 178, 179, 182, 183, 188, 189, 191, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 216, 218, 219, 222, 224, 232, 245, 251, 258, 262, 265, 266, 267, 268, 270, 298, 299, 314, 321, 330, 376, 420, 426, 446, 454, 457, 481, 482, 483, 493, 501, 522, 531, 532, 578, 579, 599, 607, 624, 628, 631, 656, 698, 741, 744, 760, 777, 784, 791, 794, 795, 797, 799, 800, 802, 821, 822, 830, 847, 852, 867, 868, 871, 880, 892], "getattr": [4, 728, 738], "_field": [4, 141], "beta": [4, 12, 19, 32, 33, 34, 94, 101, 110, 112, 113, 115, 137, 141, 227, 241, 265, 266, 267, 268, 481, 482, 614, 697, 714, 716, 792], "stderr": [4, 141, 697], "t_val": [4, 141, 228, 697], "p_val": [4, 101, 141, 229, 230, 693, 697, 892], "mlog10_p_val": [4, 141, 697, 892], "just": [4, 5, 28, 32, 33, 41, 42, 44, 48, 50, 59, 71, 75, 82, 83, 101, 103, 109, 113, 114, 115, 120, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 151, 156, 158, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 177, 179, 180, 181, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 224, 228, 229, 232, 235, 236, 237, 241, 242, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 278, 279, 280, 281, 314, 414, 421, 448, 449, 481, 482, 497, 539, 563, 564, 574, 579, 598, 623, 712, 714, 716, 756, 777, 784, 790, 792, 794, 796, 799, 800, 803, 807, 810, 812, 813, 814, 815, 816, 820, 822, 830, 849, 851, 859, 869, 874, 877, 892], "would": [4, 5, 19, 43, 44, 71, 140, 143, 144, 150, 151, 155, 156, 160, 161, 172, 175, 181, 190, 191, 196, 199, 201, 202, 203, 204, 205, 206, 207, 210, 222, 227, 228, 229, 232, 235, 237, 242, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 291, 298, 299, 356, 360, 361, 372, 373, 374, 383, 389, 406, 407, 414, 421, 435, 436, 437, 449, 457, 458, 464, 476, 478, 479, 481, 482, 496, 520, 529, 542, 564, 575, 599, 648, 712, 715, 760, 794, 799, 800, 813, 847, 857, 873, 874, 880, 892], "higher": [4, 26, 38, 44, 54, 70, 75, 94, 141, 151, 184, 192, 196, 199, 201, 203, 205, 210, 223, 229, 232, 242, 275, 599, 728, 738, 849, 851, 855, 856, 874, 892], "better": [4, 9, 19, 43, 61, 71, 94, 142, 146, 151, 183, 184, 195, 202, 204, 205, 210, 213, 227, 245, 267, 268, 272, 273, 276, 279, 280, 281, 413, 579, 595, 599, 726, 728, 738, 742, 760, 818, 823, 849, 851, 874, 892], "visibl": [4, 47, 127, 172, 191, 202, 203, 209, 218, 219, 242, 265, 266, 267, 268, 481, 482, 564, 652, 712, 760, 790, 796, 807, 813, 847, 892], "neg": [4, 19, 22, 39, 72, 112, 114, 144, 150, 151, 162, 188, 191, 203, 205, 212, 227, 235, 242, 262, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 287, 308, 414, 420, 421, 426, 433, 442, 456, 481, 482, 506, 563, 564, 584, 590, 597, 670, 671, 696, 712, 714, 715, 716, 779, 784, 790, 792, 799, 803, 812, 813, 815, 818, 820, 824, 868, 871, 874, 877, 892], "around": [4, 49, 71, 76, 83, 94, 112, 141, 142, 144, 146, 151, 165, 166, 171, 172, 180, 183, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 213, 216, 222, 242, 265, 266, 267, 268, 275, 360, 414, 421, 433, 438, 440, 481, 482, 516, 564, 576, 577, 581, 582, 616, 674, 712, 714, 715, 716, 784, 790, 796, 799, 800, 807, 813, 847, 849, 857], "200": [4, 9, 12, 34, 47, 56, 59, 76, 81, 90, 92, 95, 99, 109, 111, 114, 127, 131, 135, 136, 142, 145, 146, 151, 154, 158, 169, 172, 179, 181, 183, 191, 196, 201, 203, 206, 207, 213, 222, 230, 231, 232, 237, 241, 245, 343, 345, 349, 453, 481, 482, 537, 538, 564, 597, 858, 867, 874, 877, 880, 892], "follow": [4, 24, 27, 32, 33, 34, 41, 42, 68, 70, 71, 80, 94, 103, 107, 109, 113, 116, 128, 135, 137, 141, 144, 151, 155, 158, 160, 161, 162, 168, 170, 172, 178, 180, 188, 189, 190, 192, 196, 201, 202, 203, 204, 208, 210, 212, 216, 217, 218, 222, 224, 227, 229, 231, 235, 237, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 288, 289, 298, 299, 304, 305, 356, 367, 373, 389, 406, 414, 438, 440, 441, 452, 453, 454, 458, 480, 481, 482, 483, 487, 489, 496, 526, 530, 547, 548, 564, 581, 584, 588, 599, 600, 629, 639, 657, 693, 695, 697, 712, 714, 715, 716, 728, 738, 739, 742, 743, 747, 750, 756, 760, 773, 784, 792, 797, 820, 847, 849, 850, 853, 855, 856, 857, 859, 867, 868, 870, 871, 874, 877, 878, 892], "onset": [4, 8, 33, 34, 117, 135, 136, 137, 140, 144, 146, 166, 168, 191, 201, 202, 204, 213, 218, 242, 258, 259, 265, 266, 356, 443, 455, 481, 482, 500, 567, 584, 617, 717, 718, 719, 847, 868, 892], "23": [4, 6, 8, 11, 13, 19, 28, 34, 35, 38, 45, 47, 65, 66, 71, 75, 81, 82, 85, 103, 108, 109, 112, 114, 123, 126, 130, 137, 145, 151, 155, 157, 158, 159, 164, 169, 171, 183, 184, 185, 187, 191, 196, 205, 209, 213, 215, 227, 228, 229, 231, 232, 235, 236, 237, 240, 245, 259, 264, 265, 266, 267, 268, 270, 275, 278, 298, 348, 360, 372, 373, 383, 391, 392, 406, 407, 438, 473, 481, 482, 489, 523, 564, 575, 619, 629, 712, 714, 715, 716, 760, 789, 794, 804, 838, 868, 874], "correspond": [4, 16, 31, 48, 50, 62, 73, 77, 88, 92, 94, 103, 112, 120, 137, 143, 144, 151, 155, 156, 158, 160, 168, 170, 172, 175, 180, 181, 182, 188, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 216, 217, 218, 219, 229, 231, 232, 237, 242, 258, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 290, 298, 299, 301, 303, 306, 314, 324, 325, 326, 327, 337, 356, 360, 361, 364, 372, 373, 374, 383, 389, 406, 407, 414, 415, 417, 418, 420, 421, 424, 426, 430, 438, 443, 457, 458, 459, 467, 476, 478, 479, 481, 482, 489, 491, 493, 496, 501, 504, 506, 511, 512, 516, 520, 522, 525, 527, 529, 540, 541, 542, 563, 564, 565, 579, 581, 588, 589, 594, 624, 625, 628, 639, 652, 656, 661, 664, 677, 692, 693, 696, 697, 698, 699, 700, 702, 703, 704, 712, 713, 714, 715, 716, 724, 725, 731, 750, 751, 753, 760, 763, 771, 773, 777, 778, 779, 784, 790, 791, 792, 794, 796, 798, 799, 800, 803, 812, 813, 815, 818, 820, 822, 823, 824, 847, 851, 857, 868, 871, 874, 877, 892], "unit": [4, 8, 14, 19, 21, 32, 83, 100, 103, 127, 135, 136, 141, 156, 160, 168, 169, 180, 189, 190, 192, 200, 205, 207, 210, 216, 224, 229, 230, 232, 240, 241, 245, 260, 262, 263, 264, 265, 266, 267, 268, 270, 274, 276, 298, 299, 307, 315, 332, 337, 339, 341, 361, 367, 376, 414, 416, 421, 423, 425, 435, 450, 452, 453, 458, 480, 481, 482, 489, 491, 496, 497, 506, 564, 575, 581, 587, 588, 599, 623, 662, 704, 712, 714, 716, 751, 753, 760, 784, 791, 792, 794, 796, 799, 800, 812, 814, 820, 821, 828, 847, 851, 877, 892], "scale": [4, 5, 10, 16, 19, 22, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 57, 58, 59, 61, 66, 71, 75, 78, 85, 90, 94, 100, 101, 103, 104, 107, 108, 109, 110, 114, 115, 116, 119, 127, 133, 136, 137, 141, 142, 149, 151, 156, 157, 160, 166, 171, 177, 178, 179, 180, 181, 182, 183, 190, 191, 192, 195, 196, 202, 204, 205, 207, 208, 213, 219, 223, 224, 235, 237, 241, 242, 245, 257, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 298, 299, 330, 340, 355, 356, 360, 361, 367, 372, 373, 374, 414, 421, 423, 435, 437, 448, 457, 458, 473, 475, 476, 478, 479, 481, 482, 491, 537, 538, 542, 544, 547, 548, 555, 563, 564, 574, 575, 588, 599, 629, 648, 649, 650, 651, 664, 665, 676, 679, 712, 714, 715, 716, 724, 750, 760, 773, 775, 777, 784, 788, 790, 791, 792, 794, 796, 798, 799, 800, 801, 803, 808, 812, 813, 814, 815, 819, 820, 821, 823, 847, 865, 892], "keep": [4, 11, 12, 27, 31, 61, 88, 104, 110, 111, 112, 137, 142, 145, 149, 151, 160, 161, 162, 165, 166, 169, 181, 200, 201, 202, 203, 204, 205, 216, 217, 218, 222, 229, 257, 262, 265, 266, 267, 268, 292, 293, 296, 299, 374, 420, 438, 481, 482, 492, 533, 535, 538, 564, 600, 713, 724, 851, 859, 869, 873, 892], "avoid": [4, 8, 9, 28, 40, 59, 71, 88, 114, 137, 140, 151, 161, 166, 167, 169, 172, 183, 189, 191, 199, 202, 203, 207, 216, 218, 227, 240, 245, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 356, 431, 443, 481, 482, 489, 496, 500, 504, 544, 564, 633, 639, 672, 675, 678, 694, 705, 706, 712, 715, 760, 818, 823, 849, 855, 869, 871, 873, 874, 892], "convers": [4, 156, 168, 189, 191, 192, 200, 202, 203, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 481, 482, 506, 608, 699, 700, 702, 703, 712, 715, 874, 877, 892], "micro": [4, 27, 78, 265, 266, 267, 268, 481, 482, 892], "volt": [4, 141, 205, 207, 222, 265, 266, 267, 268, 447, 481, 482, 874, 892], "topomap_arg": [4, 71, 101, 196, 211, 228, 267, 268, 564, 712, 780, 797, 805, 892], "set_ylabel": [4, 12, 13, 21, 22, 45, 71, 96, 104, 112, 113, 115, 133, 144, 172, 183, 196, 202, 206, 230, 231, 232, 242], "systemat": [4, 141, 162, 202, 245, 417, 583, 871, 892], "larg": [4, 10, 28, 71, 76, 80, 83, 84, 114, 120, 136, 142, 150, 151, 167, 171, 172, 178, 196, 199, 200, 202, 203, 204, 206, 207, 208, 211, 212, 219, 227, 232, 235, 242, 245, 265, 266, 271, 298, 356, 360, 361, 365, 423, 453, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 523, 544, 564, 566, 659, 699, 700, 702, 703, 760, 778, 825, 855, 869, 892], "consist": [4, 10, 43, 71, 77, 112, 123, 157, 158, 161, 168, 170, 175, 183, 189, 190, 191, 196, 200, 201, 202, 204, 205, 209, 227, 229, 230, 245, 257, 265, 266, 267, 268, 278, 282, 323, 371, 481, 482, 528, 564, 572, 579, 583, 664, 665, 697, 712, 714, 715, 716, 717, 718, 719, 847, 867, 868, 873, 874, 880, 892], "guillaum": [4, 15, 88, 151, 157, 196, 202, 227, 245, 565, 705, 706, 868, 879, 892], "rousselet": [4, 151, 202, 245, 868], "2016": [4, 19, 46, 83, 113, 126, 195, 202, 245, 391, 392, 420, 478, 479, 564, 868], "7488": [4, 245], "1556": [4, 245], "carl": [4, 126, 245, 391, 868], "gaspar": [4, 245, 868], "cyril": [4, 245, 868], "r": [4, 8, 10, 12, 19, 21, 28, 37, 39, 41, 43, 49, 71, 81, 82, 96, 97, 99, 115, 127, 136, 137, 141, 145, 156, 160, 166, 176, 180, 181, 183, 184, 185, 195, 196, 200, 202, 204, 205, 207, 211, 212, 217, 223, 227, 231, 232, 237, 242, 245, 257, 262, 263, 264, 265, 266, 267, 268, 270, 274, 277, 301, 362, 383, 414, 420, 421, 449, 481, 482, 515, 531, 539, 563, 564, 573, 576, 578, 579, 581, 589, 672, 696, 699, 700, 705, 706, 712, 714, 715, 716, 741, 744, 760, 777, 778, 784, 788, 792, 799, 803, 808, 812, 815, 820, 822, 847, 849, 851, 868, 874, 877, 892], "pernet": [4, 245, 868], "jess": [4, 245, 868], "husk": [4, 245, 868], "patrick": [4, 245, 868, 874], "j": [4, 8, 12, 13, 18, 19, 21, 31, 35, 42, 44, 59, 60, 66, 71, 72, 75, 76, 83, 94, 99, 101, 113, 121, 126, 137, 144, 151, 155, 160, 162, 172, 178, 180, 195, 196, 202, 204, 205, 206, 207, 212, 227, 228, 232, 240, 245, 257, 265, 266, 267, 268, 271, 275, 276, 277, 298, 301, 303, 356, 362, 383, 392, 397, 407, 414, 418, 420, 421, 422, 432, 476, 479, 481, 482, 531, 532, 539, 542, 546, 563, 564, 572, 573, 578, 579, 597, 603, 606, 669, 672, 674, 698, 699, 700, 702, 703, 705, 706, 714, 716, 724, 726, 728, 730, 738, 741, 742, 744, 866, 868, 871, 874, 892], "bennett": [4, 245, 868], "allison": [4, 245, 868], "sekul": [4, 245, 868], "healthi": [4, 245, 406, 407, 868, 880], "ag": [4, 113, 137, 189, 245, 265, 266, 267, 268, 270, 392, 407, 481, 482, 483, 677, 868, 882, 892], "scalp": [4, 19, 27, 71, 72, 76, 79, 122, 130, 142, 144, 149, 151, 155, 156, 158, 166, 170, 171, 183, 184, 185, 190, 199, 200, 205, 207, 208, 210, 211, 212, 219, 222, 240, 245, 257, 265, 266, 267, 268, 270, 310, 433, 473, 481, 482, 527, 564, 573, 603, 644, 656, 714, 716, 760, 776, 792, 814, 828, 847, 852, 855, 858, 867, 868, 871, 874, 877, 892], "sensit": [4, 5, 7, 23, 25, 27, 82, 122, 130, 151, 158, 178, 203, 207, 212, 231, 237, 245, 265, 266, 267, 268, 269, 270, 275, 276, 278, 366, 458, 481, 482, 561, 564, 631, 637, 652, 680, 699, 700, 702, 703, 760, 868, 873, 892], "frontier": [4, 10, 19, 151, 195, 202, 245, 420, 569, 866, 868], "psychologi": [4, 10, 151, 202, 245, 694, 868], "19": [4, 9, 11, 13, 19, 28, 34, 35, 41, 42, 45, 47, 58, 65, 72, 74, 77, 81, 83, 84, 85, 90, 93, 94, 103, 106, 108, 109, 114, 119, 127, 130, 140, 141, 146, 151, 157, 158, 166, 167, 168, 169, 171, 176, 178, 179, 180, 181, 182, 183, 184, 185, 191, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 216, 217, 218, 219, 224, 227, 228, 229, 231, 232, 234, 235, 237, 245, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 276, 278, 279, 280, 281, 306, 308, 311, 330, 433, 476, 481, 482, 522, 526, 557, 563, 564, 656, 707, 712, 715, 731, 776, 779, 784, 785, 788, 790, 807, 813, 824, 833, 849, 850, 868, 874], "14": [4, 5, 8, 9, 11, 16, 19, 20, 21, 22, 28, 32, 33, 34, 35, 43, 45, 46, 47, 48, 49, 54, 55, 58, 66, 80, 81, 83, 93, 94, 103, 107, 108, 109, 112, 114, 120, 121, 123, 141, 145, 148, 149, 150, 152, 154, 157, 158, 162, 168, 169, 171, 172, 175, 177, 178, 179, 180, 183, 185, 187, 191, 195, 196, 202, 207, 209, 210, 222, 224, 227, 228, 229, 231, 232, 235, 236, 237, 242, 245, 246, 256, 263, 265, 266, 267, 268, 270, 278, 308, 361, 383, 415, 416, 420, 425, 430, 449, 450, 452, 481, 482, 498, 510, 564, 581, 582, 603, 712, 730, 731, 739, 740, 760, 788, 790, 801, 808, 816, 868, 874], "2010": [4, 94, 117, 155, 202, 245, 298, 356, 414, 741, 744, 868, 892], "3389": [4, 10, 19, 151, 195, 202, 245, 420, 569, 866, 868], "fpsyg": [4, 151, 202, 245, 868], "00019": [4, 245, 868], "parametr": [4, 70, 94, 113, 165, 166, 232, 233, 234, 245, 265, 267, 268, 270, 320, 355, 455, 481, 531, 561, 564, 626, 646, 691, 692, 699, 700, 702, 703, 705, 706, 715, 742, 784, 805, 847, 889, 892], "studi": [4, 33, 71, 121, 144, 151, 161, 178, 180, 202, 204, 210, 224, 229, 231, 232, 245, 291, 298, 406, 407, 438, 847, 867, 874, 892], "bmc": [4, 16, 196, 245, 415, 430], "98": [4, 13, 15, 19, 33, 35, 42, 44, 47, 81, 112, 114, 117, 123, 137, 159, 169, 177, 180, 191, 196, 209, 224, 227, 228, 229, 231, 232, 237, 245, 291, 298, 344, 346, 599, 699, 700, 702, 703], "2008": [4, 10, 35, 44, 151, 170, 180, 205, 224, 227, 228, 245, 277, 298, 299, 340, 362, 414, 435, 453, 476, 546, 564, 672, 699, 700, 702, 703], "1186": [4, 16, 196, 209, 245, 415, 430], "1471": [4, 16, 196, 245, 415, 430], "2202": [4, 16, 196, 245, 415, 430], "918": [4, 6, 232], "605": [4, 232], "limo_data": [4, 6], "dataset": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 243, 244, 245, 257, 259, 262, 263, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 298, 299, 304, 314, 330, 347, 355, 356, 357, 358, 360, 361, 363, 365, 372, 373, 374, 414, 417, 421, 424, 431, 434, 443, 445, 446, 455, 457, 458, 471, 476, 478, 479, 481, 482, 491, 492, 494, 520, 521, 522, 526, 527, 530, 531, 534, 537, 538, 542, 547, 548, 561, 564, 577, 578, 582, 591, 599, 607, 628, 629, 630, 631, 637, 644, 660, 697, 699, 700, 702, 703, 712, 714, 715, 734, 745, 760, 776, 784, 788, 793, 800, 822, 828, 838, 851, 869, 874, 875, 880, 882, 892], "electr": [5, 166, 180, 199, 207, 208, 245, 298, 299, 564, 572, 780, 847, 852, 867, 877], "stimul": [5, 32, 45, 151, 180, 237, 265, 266, 267, 268, 361, 481, 482, 561, 562, 567, 591, 662, 712, 714, 715, 716, 760, 776, 868, 874, 892], "deliv": 5, "left": [5, 10, 11, 13, 15, 23, 25, 27, 30, 31, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 52, 54, 55, 57, 58, 59, 61, 62, 68, 72, 74, 79, 80, 83, 86, 87, 94, 112, 116, 119, 120, 124, 127, 128, 132, 134, 135, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 155, 156, 158, 160, 166, 168, 172, 175, 178, 180, 181, 182, 191, 192, 195, 196, 204, 205, 206, 207, 208, 210, 217, 218, 219, 223, 224, 228, 231, 235, 236, 237, 240, 258, 259, 261, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 314, 316, 326, 327, 337, 338, 362, 383, 389, 414, 421, 436, 438, 441, 448, 472, 479, 481, 482, 500, 505, 516, 529, 563, 564, 584, 587, 646, 651, 660, 661, 664, 675, 712, 714, 715, 716, 760, 776, 784, 790, 791, 792, 794, 796, 798, 799, 800, 803, 811, 812, 813, 814, 815, 820, 824, 828, 847, 868, 874, 877, 892], "wrist": 5, "somatosensori": [5, 32, 34, 46, 113, 241, 245, 396, 892], "nine": [5, 142], "quspin": 5, "serf": 5, "place": [5, 7, 26, 68, 127, 140, 149, 150, 151, 156, 161, 165, 166, 169, 173, 174, 178, 202, 204, 205, 206, 208, 210, 212, 216, 222, 235, 259, 262, 264, 265, 266, 267, 268, 269, 270, 274, 277, 282, 283, 288, 314, 319, 322, 342, 349, 365, 366, 384, 388, 389, 391, 414, 421, 436, 438, 439, 452, 453, 481, 482, 483, 492, 528, 542, 551, 556, 560, 563, 564, 576, 577, 579, 582, 585, 587, 590, 591, 595, 647, 653, 656, 662, 663, 664, 665, 677, 709, 712, 713, 714, 715, 716, 729, 746, 763, 777, 781, 792, 799, 803, 812, 815, 820, 822, 847, 851, 868, 872, 874, 875, 877, 878, 892], "side": [5, 19, 32, 45, 71, 141, 156, 166, 204, 208, 235, 242, 262, 263, 265, 266, 267, 268, 272, 274, 276, 280, 414, 421, 481, 482, 563, 564, 579, 588, 599, 697, 699, 700, 702, 703, 712, 713, 714, 716, 760, 777, 786, 788, 790, 792, 799, 803, 806, 812, 815, 818, 820, 822, 869, 874, 892], "somatomotor": 5, "custom": [5, 27, 36, 56, 68, 109, 120, 122, 126, 130, 140, 142, 145, 149, 150, 151, 167, 192, 202, 203, 204, 205, 207, 208, 213, 222, 232, 242, 257, 262, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 279, 280, 281, 323, 327, 329, 389, 481, 482, 561, 564, 620, 629, 631, 692, 716, 754, 760, 773, 778, 779, 790, 797, 807, 813, 818, 819, 823, 824, 847, 851, 867, 868, 869, 871, 892], "opm_sampl": [5, 109], "subjects_dir": [5, 7, 11, 22, 24, 26, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 69, 81, 90, 94, 95, 104, 109, 115, 116, 118, 124, 125, 126, 127, 131, 134, 135, 136, 150, 155, 156, 157, 158, 159, 160, 161, 166, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 191, 196, 211, 223, 224, 235, 236, 237, 257, 263, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 305, 309, 310, 311, 314, 362, 367, 368, 369, 375, 388, 390, 391, 392, 393, 433, 464, 466, 468, 470, 472, 473, 474, 475, 516, 520, 522, 550, 551, 595, 616, 634, 636, 643, 648, 649, 650, 651, 660, 661, 675, 678, 689, 707, 708, 752, 759, 760, 776, 778, 788, 818, 823, 824, 842, 857, 867, 874, 892], "raw_fnam": [5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 26, 32, 33, 34, 42, 45, 46, 49, 70, 71, 73, 74, 75, 77, 82, 83, 88, 93, 96, 97, 99, 100, 107, 108, 110, 111, 113, 117, 119, 121, 132, 133, 141, 152, 156, 158, 159, 162, 177, 180, 183, 185, 196, 204, 224, 229, 230, 231, 232, 235, 237, 241, 868, 874], "opm_sef_raw": 5, "bem_fnam": [5, 45, 69, 109], "bem": [5, 7, 23, 26, 27, 40, 41, 43, 44, 45, 50, 69, 109, 125, 135, 136, 150, 155, 156, 159, 160, 163, 164, 165, 171, 176, 180, 181, 182, 183, 184, 185, 190, 191, 208, 235, 236, 237, 255, 263, 275, 278, 367, 390, 413, 433, 457, 464, 520, 521, 522, 525, 526, 595, 618, 619, 642, 648, 650, 651, 661, 677, 776, 778, 834, 835, 840, 845, 847, 857, 868, 877, 882, 892], "5120": [5, 7, 26, 41, 45, 50, 69, 109, 150, 158, 159, 176, 181, 182, 257, 413, 520, 526, 677, 867], "sol": [5, 7, 22, 26, 41, 45, 50, 69, 109, 158, 159, 176, 181, 182, 257, 269, 526, 677, 867, 877], "fwd_fname": [5, 22, 31, 35, 40, 46, 51, 59, 60, 69, 90, 92, 93, 94, 95, 180, 191, 224], "fwd": [5, 11, 22, 26, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 48, 49, 51, 54, 55, 58, 59, 60, 69, 90, 92, 93, 94, 95, 109, 131, 158, 159, 172, 175, 176, 177, 178, 179, 180, 182, 191, 196, 223, 224, 257, 269, 276, 285, 286, 287, 366, 448, 460, 461, 525, 526, 631, 652, 676, 677, 760, 776, 839, 867, 874], "coil_def_fnam": 5, "coil_def": [5, 109, 868, 874, 877], "dat": [5, 109, 210, 334, 495, 512, 575, 588, 599, 610, 615, 868, 874, 892], "read_raw_fif": [5, 10, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 62, 69, 70, 72, 73, 74, 75, 77, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 115, 117, 118, 121, 123, 127, 129, 132, 133, 140, 141, 142, 145, 146, 149, 151, 152, 156, 162, 166, 167, 168, 169, 170, 177, 180, 182, 183, 188, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 229, 230, 231, 232, 235, 237, 240, 241, 259, 487, 874, 878, 882, 892], "h_trans_bandwidth": [5, 21, 113, 114, 191, 202, 211, 265, 266, 267, 268, 416, 425, 450, 452, 481, 482, 603, 892], "notch_width": [5, 212, 453, 481, 482], "threshold": [5, 30, 34, 38, 75, 82, 96, 112, 120, 145, 151, 165, 166, 171, 172, 182, 184, 188, 191, 200, 201, 205, 207, 210, 229, 230, 231, 232, 233, 234, 235, 236, 237, 245, 257, 260, 265, 266, 267, 268, 270, 310, 320, 326, 355, 360, 453, 481, 482, 500, 506, 546, 564, 566, 569, 576, 579, 581, 582, 588, 589, 590, 592, 594, 604, 622, 659, 668, 669, 670, 671, 672, 673, 674, 695, 696, 699, 700, 702, 703, 704, 715, 760, 784, 789, 790, 806, 867, 874, 880, 892], "larger": [5, 49, 59, 71, 150, 179, 196, 199, 202, 204, 210, 219, 229, 242, 265, 266, 275, 280, 281, 458, 481, 482, 500, 566, 590, 608, 707, 740, 741, 743, 744, 790, 813, 821, 824, 873, 874, 892], "squid": [5, 109, 212, 245, 847, 868, 874], "2e": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 71, 75, 90, 93, 94, 109, 119, 121, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 223, 224, 576, 577], "trigger": [5, 10, 93, 103, 109, 144, 166, 168, 171, 177, 182, 185, 188, 189, 190, 191, 201, 206, 211, 213, 227, 257, 258, 356, 361, 455, 456, 481, 482, 489, 496, 498, 504, 506, 511, 582, 590, 626, 659, 677, 847, 851, 867, 874, 877, 892], "257": [5, 115, 169, 170, 209, 232, 868], "sti101": [5, 168, 258, 455, 456], "mask": [5, 28, 31, 82, 96, 100, 101, 112, 120, 142, 185, 202, 206, 223, 227, 228, 229, 230, 231, 232, 258, 262, 265, 266, 267, 268, 274, 414, 420, 421, 455, 481, 482, 489, 563, 564, 579, 626, 699, 700, 702, 703, 712, 714, 716, 777, 792, 796, 799, 803, 812, 815, 820, 822, 871, 892], "mask_typ": [5, 185, 258, 455, 489, 626, 892], "verbos": [5, 10, 11, 13, 14, 15, 34, 38, 40, 41, 42, 44, 49, 51, 58, 60, 71, 76, 79, 80, 84, 88, 93, 94, 99, 104, 108, 109, 121, 123, 124, 126, 134, 135, 136, 140, 142, 145, 146, 149, 150, 152, 157, 158, 159, 162, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 190, 196, 200, 201, 202, 205, 208, 209, 210, 211, 212, 213, 217, 218, 222, 227, 228, 229, 235, 240, 242, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 420, 424, 425, 427, 430, 431, 433, 435, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 464, 465, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 560, 564, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 658, 660, 661, 663, 664, 665, 666, 676, 677, 680, 682, 683, 684, 685, 686, 687, 688, 699, 700, 701, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 730, 731, 734, 735, 739, 740, 742, 743, 744, 745, 748, 749, 750, 755, 756, 759, 760, 768, 776, 785, 788, 792, 793, 794, 795, 800, 803, 804, 805, 810, 811, 813, 814, 816, 817, 818, 819, 823, 824, 825, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 849, 851, 882, 892], "error": [5, 10, 13, 38, 42, 54, 55, 90, 93, 109, 114, 134, 135, 136, 140, 144, 149, 152, 157, 162, 171, 172, 181, 183, 185, 188, 195, 196, 201, 202, 205, 208, 212, 213, 227, 228, 231, 245, 260, 265, 266, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 285, 286, 318, 341, 350, 351, 356, 360, 363, 365, 367, 372, 373, 406, 433, 448, 449, 461, 462, 464, 481, 482, 497, 502, 546, 564, 575, 584, 588, 598, 599, 617, 619, 623, 648, 650, 658, 669, 672, 674, 690, 696, 697, 701, 712, 714, 715, 716, 757, 758, 760, 791, 793, 804, 838, 840, 850, 851, 856, 857, 862, 867, 868, 871, 874, 877, 892], "suppress": [5, 13, 27, 38, 49, 78, 84, 85, 136, 145, 150, 151, 171, 180, 184, 188, 199, 200, 202, 203, 204, 207, 212, 245, 257, 262, 265, 266, 267, 268, 269, 270, 271, 276, 343, 345, 349, 366, 449, 450, 452, 453, 481, 482, 561, 562, 580, 620, 631, 634, 657, 676, 678, 797, 847, 868, 874, 892], "warn": [5, 10, 13, 38, 134, 135, 136, 140, 151, 162, 171, 172, 181, 184, 191, 203, 205, 206, 213, 217, 218, 229, 240, 257, 259, 260, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 285, 286, 318, 341, 344, 350, 351, 356, 360, 362, 363, 365, 367, 372, 373, 406, 433, 441, 448, 461, 464, 481, 482, 502, 564, 575, 588, 599, 600, 619, 629, 648, 650, 653, 657, 658, 712, 714, 715, 716, 756, 758, 760, 793, 804, 838, 840, 857, 859, 882, 892], "about": [5, 13, 19, 27, 34, 43, 44, 71, 75, 94, 101, 114, 140, 141, 143, 144, 146, 149, 151, 155, 160, 162, 166, 168, 169, 172, 175, 178, 184, 188, 189, 190, 191, 192, 195, 196, 200, 202, 203, 205, 206, 210, 211, 216, 217, 218, 223, 224, 227, 229, 257, 258, 260, 262, 264, 265, 266, 267, 268, 270, 274, 275, 276, 278, 283, 285, 286, 298, 299, 300, 307, 308, 312, 313, 320, 321, 322, 326, 328, 329, 342, 344, 346, 351, 360, 369, 372, 373, 374, 376, 414, 416, 421, 422, 423, 433, 438, 455, 458, 465, 480, 481, 482, 483, 486, 514, 519, 526, 527, 532, 542, 560, 561, 564, 575, 578, 595, 604, 605, 626, 646, 647, 676, 677, 680, 698, 712, 713, 714, 715, 716, 739, 740, 742, 743, 749, 760, 773, 776, 780, 785, 786, 795, 802, 812, 816, 847, 851, 855, 867, 868, 870, 871, 873, 875, 877, 880, 892], "decim": [5, 7, 11, 12, 13, 18, 19, 24, 33, 34, 41, 42, 103, 109, 112, 158, 161, 162, 166, 172, 181, 183, 196, 203, 205, 210, 228, 229, 230, 231, 232, 241, 257, 260, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 310, 413, 427, 435, 455, 481, 482, 506, 523, 547, 548, 564, 581, 582, 622, 625, 681, 698, 712, 715, 718, 721, 737, 739, 740, 741, 742, 743, 744, 760, 778, 790, 813, 867, 874, 877, 892], "caus": [5, 13, 44, 71, 142, 151, 161, 199, 200, 201, 202, 203, 206, 210, 212, 213, 218, 262, 265, 266, 267, 268, 275, 473, 481, 482, 510, 564, 757, 794, 799, 852, 867, 892], "alias": [5, 13, 162, 181, 203, 260, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 427, 481, 482, 581, 582, 712, 715, 737, 739, 740, 742, 743, 790, 813, 826, 871, 892], "ideal": [5, 71, 108, 133, 135, 144, 151, 170, 202, 204, 207, 208, 228, 242, 314, 801, 808, 847, 851, 871, 874], "instead": [5, 43, 68, 75, 104, 114, 120, 136, 142, 143, 146, 149, 150, 151, 156, 158, 160, 161, 166, 168, 169, 170, 171, 172, 196, 200, 201, 202, 203, 205, 206, 210, 212, 216, 217, 219, 224, 227, 235, 236, 237, 240, 241, 257, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 290, 291, 292, 293, 296, 298, 309, 311, 314, 326, 355, 356, 361, 443, 444, 445, 446, 447, 448, 455, 462, 465, 470, 480, 481, 482, 533, 535, 538, 564, 565, 566, 606, 645, 656, 661, 676, 712, 715, 728, 738, 739, 740, 741, 742, 743, 744, 760, 762, 784, 790, 794, 800, 807, 813, 822, 830, 849, 850, 851, 855, 856, 859, 867, 868, 869, 874, 892], "proj": [5, 8, 9, 11, 13, 14, 15, 18, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 72, 79, 86, 87, 88, 92, 109, 111, 116, 117, 119, 120, 121, 124, 127, 131, 140, 142, 145, 149, 150, 151, 162, 166, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 191, 196, 199, 203, 206, 207, 208, 211, 212, 216, 219, 222, 257, 260, 262, 265, 266, 267, 268, 270, 274, 275, 298, 299, 343, 344, 356, 357, 358, 359, 360, 374, 480, 481, 482, 523, 563, 564, 576, 577, 578, 581, 614, 622, 629, 637, 652, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 785, 792, 794, 796, 798, 799, 811, 812, 813, 814, 843, 847, 867, 892], "cov": [5, 11, 21, 31, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 65, 69, 84, 90, 92, 93, 94, 95, 121, 152, 172, 176, 178, 179, 181, 182, 183, 184, 185, 191, 195, 196, 223, 224, 257, 262, 275, 276, 356, 361, 457, 519, 532, 554, 564, 620, 638, 666, 676, 758, 785, 836, 851, 867, 868, 871, 882, 892], "compute_covari": [5, 7, 34, 42, 46, 49, 84, 93, 121, 152, 162, 177, 180, 182, 183, 185, 196, 223, 262, 361, 374, 414, 421, 422, 565, 620, 758, 867, 871, 882, 892], "del": [5, 18, 33, 41, 42, 46, 47, 48, 49, 50, 54, 55, 109, 113, 136, 137, 140, 142, 145, 149, 166, 172, 177, 179, 180, 181, 183, 184, 191, 196, 202, 205], "open": [5, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 62, 69, 70, 71, 72, 73, 74, 75, 77, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 115, 117, 118, 121, 123, 127, 129, 132, 133, 135, 141, 142, 144, 146, 150, 151, 152, 155, 156, 161, 162, 165, 166, 167, 168, 169, 172, 177, 180, 182, 183, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 216, 219, 223, 224, 229, 230, 231, 232, 235, 237, 241, 242, 245, 264, 265, 266, 267, 268, 275, 278, 383, 481, 482, 564, 572, 677, 798, 803, 813, 821, 847, 848, 850, 855, 857, 858, 868, 870, 871, 873, 877, 892], "isotrak": [5, 42, 101, 109, 123, 129, 143, 162, 172, 207, 209, 228, 257, 339, 874], "700999": 5, "700": [5, 81, 115, 128, 209, 232, 728, 738, 760], "999": [5, 34, 77, 80, 84, 92, 96, 109, 111, 123, 129, 131, 142, 144, 159, 168, 172, 183, 205, 206, 208, 209, 210, 232, 576, 581, 589, 592], "lowpass": [5, 11, 72, 74, 77, 81, 82, 83, 84, 90, 93, 127, 141, 146, 151, 166, 167, 168, 169, 191, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 257, 264, 265, 266, 267, 268, 270, 449, 481, 482, 712, 714, 715, 716, 790, 813, 814, 877, 892], "331": [5, 34, 84, 112, 114, 169, 202, 209, 210, 232], "48": [5, 11, 12, 13, 19, 21, 28, 35, 45, 46, 47, 81, 94, 103, 108, 109, 112, 114, 137, 145, 151, 157, 164, 168, 169, 171, 195, 196, 209, 218, 227, 228, 229, 231, 232, 235, 237, 245, 892], "6601": [5, 19], "initi": [5, 16, 19, 21, 41, 43, 44, 71, 93, 96, 109, 112, 144, 149, 151, 156, 168, 180, 185, 191, 205, 212, 216, 222, 227, 228, 229, 230, 231, 232, 235, 236, 237, 242, 256, 257, 263, 265, 266, 271, 272, 273, 275, 276, 277, 279, 280, 281, 376, 378, 476, 481, 482, 488, 509, 516, 564, 597, 606, 608, 616, 664, 665, 666, 675, 676, 678, 691, 699, 700, 701, 702, 703, 715, 750, 760, 788, 790, 804, 807, 813, 818, 823, 824, 851, 856, 858, 873, 874, 877, 892], "256": [5, 12, 21, 71, 106, 109, 115, 124, 156, 160, 169, 170, 171, 172, 183, 224, 227, 231, 232, 278, 446, 731, 775, 849, 874], "initial_ev": [5, 90, 93, 109, 185, 224, 455, 892], "detect": [5, 8, 9, 12, 22, 27, 69, 71, 73, 75, 78, 82, 83, 93, 109, 112, 127, 137, 146, 151, 157, 159, 162, 165, 168, 172, 185, 190, 191, 192, 196, 200, 202, 203, 204, 205, 206, 207, 210, 213, 214, 215, 217, 242, 245, 257, 258, 265, 266, 267, 268, 270, 275, 320, 343, 345, 349, 453, 481, 482, 487, 510, 561, 564, 566, 568, 569, 570, 572, 576, 577, 580, 581, 582, 588, 589, 590, 592, 599, 698, 712, 741, 744, 760, 790, 806, 807, 813, 858, 871, 874, 881, 892], "201": [5, 45, 127, 136, 169, 176, 181, 183, 209, 227, 231, 232, 237, 877], "rank": [5, 7, 8, 9, 12, 15, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 84, 88, 90, 93, 94, 104, 107, 108, 109, 110, 113, 121, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 200, 204, 205, 206, 223, 224, 235, 237, 262, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 422, 457, 458, 476, 478, 479, 536, 542, 564, 785, 800, 847, 871, 892], "toler": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 90, 93, 94, 109, 121, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 202, 205, 206, 223, 224, 360, 476, 478, 479, 564, 608, 874, 892], "1e": [5, 8, 9, 32, 33, 34, 40, 45, 46, 49, 59, 66, 71, 72, 75, 82, 93, 94, 114, 120, 121, 137, 158, 162, 179, 180, 183, 185, 196, 201, 202, 223, 224, 227, 265, 266, 275, 476, 481, 482, 531, 563, 573, 597, 678, 705, 712, 790, 813, 815, 820, 847, 892], "16": [5, 8, 9, 11, 12, 13, 19, 21, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 72, 79, 80, 81, 83, 85, 90, 93, 94, 96, 100, 103, 108, 109, 114, 121, 123, 144, 152, 156, 160, 162, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 195, 196, 199, 200, 202, 203, 205, 207, 208, 209, 210, 211, 213, 215, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 242, 245, 258, 260, 264, 265, 266, 267, 268, 275, 278, 356, 414, 421, 455, 473, 481, 482, 489, 531, 533, 534, 537, 538, 544, 547, 564, 572, 581, 607, 692, 712, 714, 715, 716, 776, 790, 794, 796, 798, 799, 800, 802, 813, 874, 877], "ep": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 90, 93, 94, 109, 121, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 223, 224, 531], "dim": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 90, 93, 94, 109, 121, 152, 160, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 222, 223, 224, 240, 262, 537, 538, 547, 548, 565, 715, 877], "singular": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 90, 93, 94, 109, 121, 152, 162, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 206, 223, 224, 262, 272, 273, 276, 279, 280, 281, 360, 448, 539, 785, 874, 877], "reduc": [5, 8, 9, 12, 15, 16, 21, 27, 34, 40, 42, 46, 49, 55, 59, 72, 78, 84, 85, 88, 104, 107, 108, 109, 110, 114, 120, 121, 146, 149, 151, 157, 158, 162, 167, 172, 177, 180, 182, 183, 185, 191, 195, 196, 203, 204, 205, 206, 207, 208, 210, 212, 216, 223, 229, 230, 232, 235, 236, 237, 241, 245, 262, 265, 266, 267, 268, 269, 272, 273, 276, 279, 280, 281, 298, 299, 356, 360, 361, 372, 373, 374, 391, 414, 415, 421, 427, 430, 431, 437, 449, 455, 457, 458, 476, 478, 479, 481, 482, 534, 537, 538, 542, 547, 548, 563, 564, 597, 607, 654, 699, 700, 702, 703, 718, 721, 737, 739, 740, 741, 742, 743, 744, 794, 799, 800, 847, 851, 871, 874, 877, 892], "covari": [5, 8, 9, 11, 12, 15, 19, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 69, 81, 88, 90, 92, 93, 94, 103, 104, 107, 108, 109, 110, 113, 122, 124, 130, 149, 152, 163, 164, 165, 166, 176, 178, 179, 181, 182, 183, 184, 185, 191, 196, 200, 201, 205, 224, 235, 237, 245, 257, 265, 266, 267, 268, 269, 270, 275, 276, 295, 298, 299, 301, 303, 319, 355, 356, 357, 359, 360, 361, 372, 373, 374, 414, 420, 421, 422, 439, 455, 457, 458, 476, 478, 479, 481, 482, 486, 519, 530, 531, 532, 533, 534, 535, 537, 538, 542, 544, 547, 548, 556, 564, 565, 620, 626, 631, 666, 676, 698, 713, 723, 760, 785, 790, 794, 798, 800, 813, 836, 847, 868, 877, 882, 892], "empir": [5, 8, 9, 15, 27, 31, 36, 46, 49, 56, 88, 93, 121, 162, 177, 180, 182, 183, 185, 196, 210, 223, 245, 262, 267, 268, 269, 270, 276, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 422, 457, 458, 476, 477, 478, 479, 542, 565, 620, 629, 631, 787, 788, 800, 819, 892], "10251": 5, "examin": [5, 34, 47, 75, 129, 136, 142, 145, 146, 151, 160, 166, 177, 178, 205, 216, 218, 851, 871], "align": [5, 7, 9, 28, 80, 135, 151, 155, 157, 158, 163, 164, 165, 168, 172, 182, 183, 184, 190, 216, 227, 259, 263, 265, 266, 270, 272, 273, 276, 277, 278, 279, 280, 281, 304, 310, 314, 367, 369, 393, 433, 448, 473, 481, 500, 527, 564, 596, 641, 642, 644, 661, 748, 749, 750, 760, 776, 788, 790, 828, 847, 874, 892], "forward": [5, 7, 12, 22, 26, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 69, 73, 80, 90, 92, 93, 94, 95, 131, 135, 146, 155, 156, 160, 161, 164, 166, 170, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 191, 196, 199, 200, 201, 202, 204, 205, 207, 208, 223, 224, 245, 257, 265, 266, 267, 268, 270, 273, 275, 276, 278, 279, 281, 285, 286, 287, 298, 299, 300, 301, 303, 304, 314, 318, 319, 330, 336, 366, 376, 392, 414, 421, 425, 439, 441, 442, 449, 450, 452, 453, 476, 477, 478, 479, 481, 482, 486, 496, 520, 521, 525, 526, 527, 540, 541, 542, 543, 546, 557, 562, 618, 631, 641, 652, 656, 660, 661, 663, 664, 665, 676, 677, 712, 754, 760, 776, 778, 797, 801, 826, 828, 839, 847, 852, 863, 868, 873, 877, 880, 882, 892], "mri": [5, 24, 26, 30, 35, 40, 41, 43, 44, 45, 50, 59, 93, 94, 109, 115, 124, 125, 135, 136, 150, 157, 158, 161, 163, 164, 165, 166, 170, 171, 176, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 208, 216, 224, 245, 262, 263, 265, 267, 268, 269, 270, 275, 276, 277, 278, 280, 281, 304, 305, 306, 309, 310, 311, 314, 318, 327, 330, 332, 336, 356, 362, 367, 368, 369, 375, 376, 390, 392, 393, 433, 448, 455, 457, 465, 466, 467, 473, 474, 475, 481, 482, 496, 513, 515, 522, 525, 526, 530, 531, 542, 595, 618, 641, 643, 648, 649, 650, 651, 655, 660, 661, 680, 707, 746, 747, 749, 750, 752, 760, 771, 776, 778, 788, 824, 828, 840, 847, 852, 855, 858, 867, 871, 877, 880, 882, 892], "ident": [5, 45, 71, 99, 109, 125, 135, 150, 156, 158, 160, 166, 183, 184, 185, 195, 205, 208, 210, 212, 263, 270, 277, 278, 306, 376, 393, 438, 515, 522, 525, 526, 537, 539, 588, 597, 599, 621, 677, 707, 728, 738, 742, 747, 776, 847, 867, 868, 869, 874, 877, 892], "matrix": [5, 9, 10, 11, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 67, 69, 79, 81, 87, 90, 92, 93, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 119, 121, 124, 131, 134, 137, 141, 150, 151, 152, 156, 157, 158, 159, 160, 163, 164, 165, 166, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 191, 195, 196, 200, 205, 206, 207, 223, 224, 228, 229, 230, 231, 232, 236, 237, 245, 257, 262, 263, 265, 267, 268, 270, 275, 277, 278, 295, 298, 299, 300, 306, 314, 317, 318, 320, 331, 356, 361, 362, 372, 373, 374, 420, 435, 455, 458, 481, 482, 486, 522, 526, 531, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 556, 561, 564, 565, 571, 572, 597, 600, 620, 624, 626, 661, 666, 677, 682, 683, 684, 685, 686, 687, 688, 692, 697, 698, 699, 700, 702, 703, 707, 713, 720, 721, 722, 729, 747, 776, 780, 781, 785, 786, 803, 804, 807, 836, 847, 868, 892], "co": [5, 22, 69, 157, 202, 210, 222, 245, 343, 440, 847, 868, 874], "registr": [5, 43, 44, 134, 157, 180, 245, 277, 362, 596, 748, 749, 750, 857, 868, 874, 892], "equat": [5, 135, 156, 195, 196, 206, 245, 435, 575, 741, 744, 874, 880], "mi": [5, 868], "defin": [5, 8, 9, 10, 12, 18, 19, 21, 27, 31, 33, 43, 44, 61, 62, 77, 78, 85, 94, 95, 104, 107, 111, 114, 120, 128, 136, 140, 141, 142, 144, 151, 155, 158, 160, 162, 163, 165, 167, 168, 170, 172, 175, 178, 180, 182, 190, 191, 195, 196, 202, 206, 211, 213, 224, 230, 231, 232, 235, 237, 241, 242, 245, 257, 258, 262, 264, 265, 266, 267, 268, 270, 271, 273, 274, 276, 277, 278, 279, 280, 281, 285, 286, 291, 298, 299, 314, 319, 322, 336, 337, 356, 362, 366, 389, 395, 414, 420, 421, 439, 440, 443, 449, 469, 472, 481, 482, 487, 493, 515, 516, 517, 525, 531, 532, 533, 534, 535, 538, 542, 547, 548, 550, 561, 563, 564, 565, 567, 568, 578, 579, 587, 597, 616, 621, 626, 661, 664, 665, 666, 669, 672, 674, 675, 676, 677, 678, 685, 688, 699, 700, 701, 702, 703, 707, 708, 712, 713, 714, 715, 716, 718, 720, 721, 722, 723, 726, 728, 738, 739, 740, 742, 743, 760, 765, 777, 781, 784, 791, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 823, 847, 851, 857, 867, 868, 873, 874, 877, 892], "base": [5, 7, 9, 11, 16, 21, 22, 27, 28, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 55, 58, 59, 62, 69, 71, 78, 83, 85, 90, 92, 94, 96, 99, 100, 103, 107, 109, 110, 112, 113, 114, 117, 119, 121, 132, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 160, 161, 162, 165, 166, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 189, 191, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 223, 224, 225, 227, 228, 229, 230, 231, 232, 235, 237, 240, 241, 242, 245, 254, 259, 260, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 314, 316, 320, 321, 326, 331, 334, 343, 344, 345, 346, 349, 355, 356, 357, 358, 361, 362, 366, 378, 407, 414, 416, 417, 420, 421, 422, 424, 425, 427, 428, 431, 435, 437, 440, 443, 445, 447, 449, 450, 452, 453, 455, 458, 465, 471, 473, 480, 481, 482, 487, 498, 516, 522, 523, 526, 529, 532, 546, 561, 563, 564, 566, 567, 571, 572, 573, 574, 575, 578, 579, 581, 582, 588, 589, 599, 612, 613, 614, 626, 631, 633, 650, 660, 664, 665, 672, 685, 688, 697, 698, 699, 700, 701, 702, 703, 707, 708, 712, 714, 715, 716, 718, 721, 724, 731, 739, 740, 742, 743, 745, 756, 760, 769, 771, 777, 779, 784, 789, 790, 792, 798, 799, 800, 801, 803, 805, 806, 807, 812, 813, 815, 817, 818, 820, 822, 823, 824, 839, 847, 849, 850, 851, 852, 854, 855, 860, 863, 867, 868, 871, 877, 880, 883, 887, 892], "lpa": [5, 136, 156, 160, 308, 314, 327, 338, 347, 367, 369, 433, 488, 847, 868, 892], "nasion": [5, 156, 157, 160, 170, 308, 314, 327, 337, 338, 347, 367, 369, 433, 665, 847, 868, 874, 877, 892], "rpa": [5, 136, 156, 160, 308, 314, 327, 338, 347, 367, 369, 433, 488, 847, 868, 892], "fine": [5, 181, 188, 210, 242, 270, 435, 574, 575, 588, 599, 610, 615, 892], "analys": [5, 11, 27, 31, 41, 70, 98, 102, 116, 135, 143, 146, 150, 151, 158, 160, 192, 196, 200, 206, 207, 216, 228, 242, 245, 267, 268, 481, 482, 622, 696, 697, 784, 796, 858, 868, 874, 880, 892], "read_bem_solut": [5, 45, 109, 159, 521, 834, 882], "tran": [5, 7, 26, 41, 50, 51, 52, 60, 69, 81, 109, 115, 116, 118, 124, 125, 135, 136, 150, 157, 158, 159, 160, 172, 176, 178, 181, 182, 183, 190, 191, 208, 211, 257, 263, 275, 278, 306, 314, 367, 368, 390, 393, 433, 435, 457, 465, 473, 522, 525, 526, 571, 595, 599, 644, 677, 680, 707, 746, 747, 749, 760, 776, 788, 846, 847, 867, 868, 874, 892], "solut": [5, 7, 11, 22, 23, 26, 27, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 69, 71, 72, 90, 92, 93, 94, 95, 105, 106, 107, 108, 109, 110, 124, 131, 156, 157, 159, 162, 165, 166, 170, 171, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 191, 196, 200, 207, 223, 224, 235, 237, 245, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 285, 286, 287, 298, 299, 300, 311, 362, 366, 374, 448, 458, 459, 476, 477, 478, 479, 481, 482, 517, 521, 525, 526, 527, 530, 531, 532, 533, 534, 535, 538, 539, 542, 545, 546, 556, 557, 561, 562, 564, 611, 618, 620, 626, 629, 631, 633, 634, 641, 656, 660, 661, 663, 664, 665, 676, 677, 760, 776, 787, 788, 803, 805, 807, 818, 819, 823, 834, 839, 847, 849, 851, 852, 855, 858, 863, 877, 882, 892], "must": [5, 18, 32, 43, 44, 47, 61, 83, 127, 128, 135, 144, 146, 156, 167, 169, 171, 172, 181, 184, 188, 190, 199, 200, 205, 207, 210, 218, 222, 227, 229, 231, 232, 235, 237, 242, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 287, 292, 298, 299, 314, 316, 317, 320, 323, 327, 331, 343, 345, 349, 356, 360, 361, 362, 367, 372, 373, 374, 389, 395, 398, 413, 414, 420, 421, 422, 426, 429, 430, 431, 433, 438, 443, 446, 448, 455, 457, 458, 476, 478, 479, 480, 481, 482, 489, 496, 500, 502, 504, 506, 515, 518, 523, 524, 525, 540, 541, 542, 563, 564, 566, 575, 577, 579, 580, 581, 588, 595, 599, 622, 625, 653, 656, 661, 662, 673, 677, 678, 680, 682, 683, 686, 694, 697, 698, 699, 700, 702, 703, 707, 712, 714, 715, 716, 727, 731, 735, 742, 760, 763, 765, 776, 777, 779, 783, 784, 788, 790, 791, 792, 794, 796, 798, 799, 800, 801, 803, 807, 808, 810, 812, 813, 814, 815, 816, 818, 821, 822, 823, 824, 855, 867, 868, 871, 873, 874, 877], "temporari": [5, 151, 172, 257, 270, 654, 768], "definit": [5, 26, 41, 45, 50, 109, 158, 159, 160, 161, 162, 176, 181, 182, 183, 184, 185, 202, 208, 229, 245, 257, 270, 275, 298, 299, 322, 324, 331, 457, 481, 578, 599, 645, 754, 760, 847, 867, 873, 875, 892], "use_coil_def": [5, 109, 882], "make_forward_solut": [5, 7, 26, 41, 50, 109, 158, 159, 182, 191, 208, 269, 631, 754, 867, 874, 882, 892], "src": [5, 7, 22, 24, 26, 28, 30, 31, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 59, 61, 69, 90, 92, 93, 94, 95, 109, 135, 136, 156, 158, 159, 160, 178, 180, 181, 182, 191, 208, 223, 235, 236, 237, 257, 269, 271, 272, 273, 276, 278, 279, 280, 281, 283, 299, 362, 448, 468, 477, 517, 518, 526, 540, 541, 544, 546, 551, 641, 651, 660, 661, 662, 669, 672, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 707, 708, 760, 776, 778, 818, 819, 823, 824, 844, 867, 877, 892], "mindist": [5, 24, 41, 45, 50, 156, 158, 159, 176, 181, 183, 184, 185, 208, 526, 661, 677], "read_forward_solut": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 60, 69, 90, 92, 93, 94, 95, 131, 158, 177, 178, 179, 180, 191, 196, 223, 224, 269, 839, 882, 892], "orient": [5, 11, 22, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 80, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 116, 124, 131, 156, 158, 159, 160, 165, 166, 171, 172, 175, 176, 177, 180, 181, 182, 183, 186, 187, 188, 191, 196, 208, 210, 223, 224, 227, 235, 237, 245, 262, 263, 264, 267, 269, 270, 272, 273, 276, 279, 280, 281, 285, 286, 298, 299, 300, 366, 434, 448, 457, 458, 459, 473, 476, 478, 479, 501, 525, 526, 530, 531, 532, 533, 534, 535, 537, 538, 540, 541, 542, 543, 546, 547, 548, 610, 620, 621, 624, 628, 629, 631, 644, 660, 664, 676, 677, 760, 769, 776, 778, 779, 788, 828, 839, 867, 876, 877, 880, 892], "later": [5, 11, 19, 32, 38, 43, 47, 70, 101, 109, 127, 136, 140, 141, 142, 144, 149, 151, 162, 172, 175, 177, 180, 181, 189, 191, 199, 200, 201, 202, 205, 206, 207, 208, 212, 213, 216, 217, 218, 219, 222, 235, 236, 242, 245, 260, 265, 266, 267, 268, 273, 275, 277, 279, 282, 362, 456, 481, 482, 564, 623, 625, 712, 714, 715, 716, 760, 823, 851, 855, 856, 857, 868, 869, 874, 877, 892], "convert_forward_solut": [5, 22, 47, 48, 49, 54, 55, 69, 158, 178, 223, 526, 631, 839, 874, 882, 892], "force_fix": [5, 47, 48, 49, 54, 55, 69, 158, 223, 366, 542, 892], "plot_align": [5, 24, 52, 81, 109, 115, 118, 123, 124, 125, 135, 136, 156, 157, 158, 159, 170, 178, 182, 183, 184, 185, 265, 266, 267, 268, 270, 311, 481, 482, 778, 816, 825, 830, 867, 871, 874, 882, 892], "surfac": [5, 11, 22, 24, 26, 27, 31, 34, 35, 36, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 61, 69, 72, 81, 90, 92, 94, 109, 115, 116, 118, 120, 124, 125, 134, 135, 136, 150, 155, 156, 157, 159, 163, 164, 165, 166, 171, 172, 175, 176, 177, 178, 179, 180, 183, 184, 185, 188, 190, 191, 196, 199, 208, 210, 218, 223, 224, 227, 235, 236, 237, 245, 263, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 298, 299, 306, 309, 310, 311, 337, 362, 366, 367, 390, 393, 413, 433, 448, 459, 464, 465, 470, 472, 473, 475, 476, 478, 479, 506, 516, 518, 520, 521, 522, 526, 531, 532, 533, 534, 535, 538, 540, 541, 542, 547, 548, 550, 551, 573, 574, 594, 595, 616, 619, 631, 634, 639, 641, 642, 645, 648, 650, 660, 661, 675, 676, 677, 678, 681, 683, 684, 687, 689, 707, 708, 740, 743, 746, 749, 760, 776, 778, 788, 795, 818, 819, 823, 835, 839, 840, 845, 847, 849, 852, 855, 857, 858, 868, 871, 880, 882, 892], "pial": [5, 115, 124, 135, 136, 155, 160, 181, 263, 278, 550, 634, 707, 760, 776, 788, 892], "set_3d_view": [5, 24, 52, 81, 109, 115, 118, 124, 125, 136, 156, 157, 158, 159, 160, 170, 178, 183, 882, 892], "azimuth": [5, 24, 81, 109, 115, 116, 118, 124, 125, 135, 136, 156, 157, 158, 160, 170, 178, 181, 183, 190, 211, 224, 760, 828, 892], "elev": [5, 24, 81, 109, 115, 116, 118, 124, 125, 135, 136, 156, 157, 158, 160, 170, 181, 183, 190, 199, 206, 211, 224, 760, 828, 892], "distanc": [5, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 80, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 116, 124, 128, 131, 135, 136, 143, 156, 157, 158, 159, 160, 161, 166, 170, 171, 172, 176, 177, 178, 179, 181, 183, 190, 191, 192, 196, 202, 209, 211, 213, 223, 224, 235, 237, 257, 262, 265, 266, 267, 268, 270, 271, 274, 275, 276, 278, 283, 306, 346, 367, 414, 417, 421, 424, 433, 435, 457, 466, 472, 473, 481, 482, 516, 526, 546, 563, 564, 568, 572, 575, 579, 584, 586, 588, 599, 604, 605, 651, 660, 661, 669, 672, 675, 677, 678, 680, 682, 683, 684, 686, 687, 699, 700, 702, 703, 707, 712, 714, 716, 760, 777, 780, 792, 799, 803, 812, 815, 820, 822, 828, 847, 874, 877, 892], "focalpoint": [5, 24, 52, 109, 116, 124, 135, 156, 157, 158, 159, 160, 178, 224, 760, 828, 892], "04": [5, 19, 20, 24, 31, 35, 41, 42, 49, 50, 56, 71, 72, 74, 84, 85, 90, 93, 95, 100, 102, 103, 108, 121, 123, 124, 127, 130, 141, 158, 162, 171, 177, 180, 183, 185, 195, 196, 200, 201, 209, 211, 227, 228, 229, 231, 232, 237, 245, 392, 435, 522, 527, 564, 599, 669, 674, 854, 874], "load": [5, 7, 11, 13, 14, 24, 26, 28, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 69, 72, 76, 80, 81, 82, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 117, 119, 120, 121, 123, 125, 127, 128, 135, 142, 143, 145, 150, 151, 152, 156, 158, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 176, 177, 180, 181, 182, 183, 184, 188, 189, 191, 192, 193, 196, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 217, 218, 219, 220, 227, 228, 229, 230, 231, 235, 236, 237, 240, 242, 257, 260, 261, 265, 266, 267, 268, 275, 315, 320, 324, 331, 361, 363, 378, 464, 465, 481, 482, 488, 489, 496, 501, 502, 509, 522, 525, 526, 542, 553, 564, 566, 576, 612, 622, 624, 628, 629, 631, 633, 639, 640, 642, 677, 710, 733, 734, 776, 790, 794, 798, 800, 807, 813, 839, 847, 868, 869, 877, 892], "three": [5, 31, 45, 94, 103, 109, 120, 142, 145, 151, 156, 158, 159, 161, 168, 178, 182, 188, 189, 192, 199, 200, 205, 206, 207, 216, 218, 219, 222, 227, 240, 242, 257, 259, 262, 263, 265, 266, 267, 268, 273, 274, 279, 281, 298, 299, 309, 310, 311, 326, 414, 421, 472, 476, 481, 482, 520, 540, 541, 563, 564, 574, 579, 610, 642, 645, 661, 664, 693, 695, 712, 714, 716, 750, 760, 777, 788, 790, 792, 799, 801, 803, 811, 812, 813, 815, 820, 822, 840, 845, 851, 868, 871, 874, 877, 892], "layer": [5, 45, 109, 158, 159, 182, 183, 184, 185, 200, 245, 309, 390, 520, 527, 661, 669, 674, 776, 867, 874, 892], "model": [5, 7, 11, 12, 13, 18, 22, 26, 31, 32, 36, 41, 42, 50, 56, 74, 101, 105, 106, 109, 113, 116, 121, 135, 141, 151, 155, 156, 159, 160, 161, 162, 164, 170, 171, 172, 175, 176, 182, 183, 184, 185, 190, 191, 192, 196, 204, 205, 213, 224, 231, 245, 251, 262, 263, 265, 267, 268, 269, 270, 273, 275, 276, 278, 279, 280, 281, 298, 299, 304, 306, 309, 343, 356, 362, 366, 375, 414, 418, 420, 421, 424, 426, 431, 432, 455, 457, 476, 481, 486, 520, 521, 525, 526, 527, 530, 531, 532, 533, 542, 561, 563, 573, 578, 584, 595, 609, 618, 620, 621, 637, 646, 660, 661, 669, 674, 698, 725, 754, 760, 776, 778, 800, 815, 828, 834, 847, 852, 855, 857, 858, 868, 871, 877, 882, 892], "colloc": [5, 26, 41, 45, 50, 109, 158, 159, 176, 182, 521, 892], "patch": [5, 11, 22, 28, 29, 31, 34, 35, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 127, 131, 156, 158, 160, 166, 172, 177, 178, 179, 181, 182, 191, 196, 223, 224, 235, 237, 257, 262, 265, 266, 267, 268, 273, 274, 278, 279, 281, 283, 285, 286, 366, 414, 421, 481, 482, 531, 532, 533, 534, 535, 538, 542, 547, 548, 563, 564, 579, 619, 641, 660, 676, 677, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 877, 892], "statist": [5, 10, 11, 22, 28, 29, 31, 35, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 87, 88, 90, 92, 93, 94, 95, 96, 97, 101, 103, 104, 107, 108, 110, 113, 124, 131, 149, 151, 155, 156, 158, 160, 162, 166, 172, 177, 178, 179, 181, 182, 191, 196, 202, 205, 206, 223, 224, 234, 245, 257, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 285, 286, 298, 299, 320, 324, 326, 355, 356, 362, 366, 455, 481, 482, 531, 532, 533, 534, 535, 538, 542, 547, 548, 561, 564, 619, 622, 626, 641, 646, 672, 676, 677, 690, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 712, 714, 715, 716, 742, 792, 796, 799, 820, 847, 858, 869, 871, 882, 892], "3523": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 60, 69, 90, 92, 93, 94, 95, 131, 172, 177, 178, 179, 180, 191, 196, 223, 224], "8196": [5, 182, 191], "free": [5, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 69, 81, 90, 92, 93, 94, 95, 109, 131, 140, 151, 158, 159, 166, 172, 176, 177, 178, 180, 182, 191, 196, 208, 210, 223, 224, 228, 232, 245, 263, 265, 266, 269, 298, 299, 300, 377, 457, 458, 459, 476, 478, 479, 531, 532, 533, 534, 535, 538, 542, 546, 547, 548, 573, 631, 652, 656, 699, 700, 702, 703, 839, 851, 855, 857, 858, 867, 873, 874, 880, 892], "frame": [5, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 80, 90, 92, 93, 94, 95, 104, 107, 108, 110, 112, 124, 131, 135, 136, 140, 151, 159, 163, 164, 165, 166, 170, 172, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 196, 210, 212, 223, 224, 235, 237, 257, 263, 265, 266, 267, 268, 269, 270, 278, 304, 305, 314, 318, 327, 332, 369, 393, 433, 473, 475, 481, 482, 485, 492, 513, 515, 522, 527, 575, 588, 599, 641, 642, 644, 658, 661, 735, 747, 755, 757, 760, 776, 788, 828, 847, 868, 873, 874, 877, 892], "normal": [5, 11, 15, 16, 18, 22, 24, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 61, 69, 71, 90, 92, 94, 104, 107, 108, 109, 110, 113, 114, 115, 116, 136, 137, 142, 143, 155, 156, 157, 158, 160, 161, 169, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 196, 206, 207, 210, 222, 223, 224, 235, 237, 241, 242, 245, 256, 258, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 278, 279, 280, 281, 285, 286, 298, 299, 315, 323, 360, 366, 414, 416, 419, 421, 448, 457, 476, 478, 479, 481, 482, 501, 531, 532, 533, 534, 535, 537, 538, 540, 541, 542, 547, 548, 563, 564, 574, 578, 595, 624, 628, 652, 661, 665, 676, 677, 694, 712, 714, 716, 724, 728, 730, 738, 761, 777, 792, 799, 803, 811, 812, 815, 820, 822, 847, 851, 857, 873, 877, 892], "emploi": [5, 11, 22, 26, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 69, 90, 92, 94, 109, 158, 159, 176, 177, 178, 179, 182, 188, 189, 191, 196, 224, 242, 563, 693, 867, 868, 873, 874, 877], "rotat": [5, 10, 15, 19, 22, 34, 35, 40, 41, 42, 44, 46, 47, 48, 49, 54, 55, 58, 59, 69, 80, 90, 92, 94, 109, 156, 158, 172, 177, 178, 179, 180, 182, 191, 192, 195, 196, 202, 204, 224, 257, 267, 268, 270, 298, 299, 352, 367, 372, 435, 473, 568, 574, 599, 750, 751, 753, 760, 776, 795, 849, 857, 874, 892], "convert": [5, 22, 27, 34, 35, 40, 41, 42, 46, 47, 48, 49, 54, 55, 58, 59, 69, 76, 90, 92, 94, 109, 112, 122, 130, 136, 137, 140, 141, 142, 143, 144, 149, 150, 151, 156, 158, 160, 161, 169, 171, 177, 178, 179, 182, 188, 189, 190, 191, 192, 196, 201, 202, 206, 213, 216, 218, 223, 224, 228, 232, 235, 236, 237, 241, 259, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 279, 280, 281, 284, 291, 305, 314, 315, 340, 352, 366, 368, 416, 420, 425, 426, 429, 443, 450, 452, 453, 470, 474, 475, 477, 481, 482, 492, 502, 506, 518, 525, 587, 601, 602, 712, 714, 715, 716, 728, 738, 751, 753, 759, 761, 764, 776, 828, 830, 851, 852, 855, 858, 868, 874, 892], "helmet": [5, 7, 27, 45, 80, 81, 109, 116, 122, 123, 130, 137, 150, 156, 158, 170, 172, 183, 184, 185, 188, 212, 267, 268, 270, 465, 522, 530, 545, 629, 760, 769, 776, 795, 828, 874, 892], "unknown": [5, 46, 72, 74, 77, 83, 90, 93, 109, 127, 141, 146, 151, 167, 168, 169, 181, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 270, 327, 332, 476, 481, 482, 489, 496, 513, 515, 747, 813, 833, 842, 874, 877, 892], "deriv": [5, 32, 33, 34, 46, 72, 109, 123, 126, 140, 144, 149, 156, 168, 200, 227, 228, 240, 245, 270, 367, 564, 606, 631, 839, 874, 877, 892], "subset": [5, 45, 112, 140, 142, 144, 146, 151, 158, 160, 172, 175, 207, 208, 212, 218, 227, 240, 260, 265, 266, 267, 268, 271, 275, 285, 286, 298, 299, 356, 360, 361, 372, 373, 374, 406, 414, 417, 421, 424, 438, 452, 457, 458, 471, 476, 478, 479, 481, 482, 542, 564, 685, 688, 712, 713, 714, 715, 716, 760, 790, 800, 813, 873, 874, 880, 892], "dip_opm": 5, "_": [5, 8, 9, 19, 37, 38, 45, 50, 61, 68, 112, 137, 146, 151, 160, 161, 172, 178, 180, 191, 195, 202, 205, 207, 212, 216, 223, 227, 228, 231, 232, 241, 242, 305, 564, 575, 614, 728, 738, 851, 874, 892], "fit_dipol": [5, 45, 84, 176, 181, 183, 184, 185, 263, 264, 301, 303, 621, 874, 882, 892], "040": [5, 56, 60, 81, 113, 121, 140, 149, 162, 169, 209, 224, 245, 267, 268, 356, 871], "080": [5, 38, 81, 185, 209, 228], "idx": [5, 31, 35, 40, 47, 59, 64, 84, 114, 133, 150, 181, 191, 199, 203, 207, 223, 235, 259, 263, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 313, 480, 481, 482, 540, 541, 715, 788, 892], "argmax": [5, 35, 38, 40, 48, 50, 58, 59, 119, 176, 181, 195], "gof": [5, 40, 116, 169, 176, 178, 183, 184, 185, 263, 265, 266, 267, 268, 301, 303, 313, 344, 346, 347, 348, 481, 482, 561, 712, 714, 715, 716, 788, 892], "1f": [5, 30, 40, 47, 77, 100, 109, 114, 156, 176, 183, 184, 191, 196, 202, 223, 227, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 714, 716, 792, 799, 812], "1000": [5, 40, 48, 71, 81, 84, 96, 113, 114, 128, 146, 156, 157, 159, 160, 176, 181, 182, 183, 184, 191, 196, 202, 203, 207, 209, 213, 216, 222, 228, 232, 235, 236, 237, 443, 449, 451, 455, 481, 482, 564, 633, 699, 700, 702, 703, 728, 738, 760, 847, 892], "n20m": 5, "plot_loc": [5, 176, 181, 263, 892], "orthoview": [5, 35, 40, 59, 160, 176, 263, 788, 892], "conductormodel": [5, 45, 109, 158, 183, 184, 185, 262, 265, 266, 267, 268, 270, 274, 306, 314, 414, 421, 457, 481, 482, 520, 521, 527, 563, 564, 579, 618, 661, 712, 714, 716, 776, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 834, 847, 882], "solver": [5, 10, 11, 13, 15, 18, 27, 36, 40, 45, 46, 56, 59, 175, 196, 262, 263, 267, 269, 270, 276, 457, 458, 478, 521, 546, 620, 629, 631, 698, 819, 860, 880, 892], "instanc": [5, 15, 26, 31, 43, 44, 45, 50, 75, 83, 88, 109, 114, 158, 159, 166, 169, 171, 172, 176, 178, 182, 183, 185, 188, 189, 191, 204, 205, 206, 208, 210, 212, 213, 216, 222, 240, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 314, 315, 316, 318, 319, 321, 327, 330, 332, 333, 335, 336, 337, 338, 339, 340, 343, 345, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 372, 373, 374, 376, 380, 381, 382, 384, 385, 386, 387, 389, 394, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 435, 436, 437, 438, 439, 443, 444, 445, 446, 447, 448, 449, 455, 457, 458, 459, 460, 461, 468, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 551, 553, 555, 556, 557, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 611, 612, 613, 614, 616, 617, 618, 621, 622, 623, 624, 625, 628, 631, 633, 640, 643, 652, 653, 656, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 697, 698, 699, 700, 701, 702, 703, 704, 707, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 732, 733, 748, 749, 750, 752, 757, 760, 761, 762, 763, 769, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 830, 834, 838, 842, 844, 851, 869, 892], "36": [5, 19, 28, 34, 35, 41, 45, 47, 81, 83, 103, 108, 109, 112, 114, 144, 151, 154, 169, 171, 181, 195, 196, 209, 227, 228, 229, 231, 232, 236, 237, 242, 245, 265, 266, 267, 268, 406, 481, 482, 608, 892], "rad": [5, 45, 176, 181, 183, 184, 185, 587, 661, 847], "77": [5, 11, 13, 15, 19, 35, 81, 82, 108, 109, 114, 156, 157, 168, 169, 181, 191, 195, 196, 207, 208, 209, 218, 227, 228, 231, 232, 240, 337, 892], "guess": [5, 45, 123, 171, 176, 181, 183, 184, 185, 205, 209, 257, 473, 492, 773, 892], "grid": [5, 24, 40, 41, 45, 50, 113, 115, 123, 127, 135, 155, 156, 158, 176, 178, 180, 181, 183, 184, 185, 195, 196, 208, 209, 212, 227, 229, 257, 275, 277, 278, 329, 478, 564, 595, 661, 713, 786, 803, 806, 867, 868, 874, 892], "n_sampl": [5, 45, 53, 65, 97, 137, 183, 184, 185, 196, 222, 227, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 431, 456, 565, 597, 662, 691, 698, 701, 851], "10250": 5, "65975931e": 5, "41596252e": 5, "50067005e": 5, "18042429e": 5, "93613735e": 5, "88258373e": 5, "73325418e": 5, "23906800e": 5, "47917983e": 5, "14619592e": 5, "36697422e": 5, "53163548e": 5, "08794660e": 5, "00286749e": 5, "18143308e": 5, "22829671e": 5, "93976860e": 5, "28130683e": 5, "86574659e": 5, "28436459e": 5, "91104392e": 5, "54318851e": 5, "60478446e": 5, "18114621e": 5, "42024459e": 5, "20931076e": 5, "52605668e": 5, "29661483e": 5, "53868159e": 5, "40025250e": 5, "28102479e": 5, "49204692e": 5, "41942628e": 5, "29095862e": 5, "00102289e": 5, "19639173e": 5, "09222979e": 5, "25564394e": 5, "49616938e": 5, "35015052e": 5, "94284541e": 5, "29140004e": 5, "85113742e": 5, "46141046e": 5, "97190359e": 5, "ra": [5, 24, 26, 41, 43, 45, 50, 109, 135, 156, 158, 159, 161, 176, 180, 181, 183, 184, 185, 208, 263, 272, 273, 276, 278, 279, 280, 281, 314, 327, 367, 448, 475, 515, 594, 631, 747, 749, 752, 760, 839, 847, 868, 874, 892], "000000": [5, 24, 26, 41, 45, 50, 109, 143, 144, 156, 158, 159, 176, 180, 181, 182, 183, 184, 185, 208, 230, 232, 236, 237, 242], "999800": [5, 109], "015800": [5, 109], "009200": [5, 109], "018100": [5, 109], "930500": [5, 109], "365900": [5, 109], "002800": [5, 109], "366000": [5, 109], "930600": [5, 109], "40": [5, 9, 10, 12, 13, 19, 21, 28, 33, 35, 40, 45, 46, 47, 58, 59, 69, 74, 76, 80, 81, 84, 90, 100, 103, 104, 108, 109, 114, 116, 121, 124, 130, 136, 140, 141, 144, 145, 151, 155, 156, 158, 160, 166, 169, 171, 181, 183, 184, 191, 196, 201, 202, 204, 205, 209, 210, 212, 216, 227, 228, 229, 231, 232, 234, 235, 236, 237, 241, 245, 265, 266, 275, 435, 449, 481, 482, 490, 564, 576, 588, 589, 592, 664, 764, 790, 808, 813, 827, 868, 874, 892], "105": [5, 24, 26, 35, 41, 45, 50, 94, 109, 114, 131, 135, 137, 156, 158, 169, 176, 181, 183, 184, 185, 206, 208, 209, 231, 232, 877], "decompos": [5, 8, 45, 176, 181, 183, 184, 185, 205, 414, 418, 421, 564, 565, 742, 874, 892], "eigenvalu": [5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 90, 93, 94, 104, 107, 108, 109, 110, 121, 152, 162, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 223, 224, 235, 237, 262, 414, 724, 874, 877], "without": [5, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 71, 76, 90, 93, 94, 104, 107, 109, 113, 120, 121, 127, 144, 149, 150, 151, 152, 159, 161, 162, 165, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 200, 201, 202, 204, 205, 206, 207, 208, 210, 218, 223, 224, 227, 242, 257, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 292, 293, 296, 298, 299, 327, 328, 356, 360, 361, 372, 373, 374, 375, 414, 421, 444, 445, 446, 447, 455, 457, 458, 476, 478, 479, 481, 482, 489, 496, 501, 502, 523, 533, 535, 538, 542, 557, 588, 606, 622, 624, 628, 629, 646, 706, 713, 750, 760, 800, 818, 823, 830, 849, 851, 859, 867, 869, 871, 873, 874, 892], "whiten": [5, 7, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 90, 93, 94, 104, 105, 106, 107, 108, 109, 110, 113, 122, 130, 149, 153, 154, 162, 165, 166, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 205, 223, 224, 235, 237, 245, 257, 262, 265, 266, 267, 268, 270, 275, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 455, 457, 458, 476, 478, 479, 481, 482, 539, 542, 561, 564, 565, 597, 626, 637, 725, 790, 794, 798, 800, 813, 817, 847, 871, 892], "omit": [5, 12, 21, 24, 26, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 61, 79, 81, 87, 90, 93, 94, 104, 107, 108, 109, 110, 119, 121, 124, 150, 152, 156, 158, 162, 166, 168, 169, 171, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 191, 196, 200, 208, 210, 223, 224, 235, 237, 259, 265, 266, 267, 268, 275, 420, 481, 482, 518, 564, 589, 590, 600, 617, 629, 669, 674, 716, 750, 776, 778, 794, 799, 805, 814, 851, 877, 892], "inner": [5, 26, 31, 41, 43, 45, 50, 109, 129, 155, 158, 160, 161, 171, 176, 181, 182, 191, 245, 257, 265, 266, 269, 306, 309, 457, 473, 526, 599, 661, 677, 760, 847, 852, 855, 858, 867, 868, 871, 874, 877, 892], "skull": [5, 26, 41, 43, 45, 50, 109, 113, 155, 156, 158, 160, 161, 170, 176, 181, 182, 191, 245, 257, 269, 278, 306, 309, 457, 526, 527, 595, 661, 669, 674, 677, 760, 776, 847, 852, 855, 858, 867, 868, 871, 874, 877, 892], "cm": [5, 9, 15, 24, 41, 45, 50, 90, 116, 123, 142, 145, 156, 158, 166, 170, 176, 181, 183, 184, 185, 189, 201, 207, 208, 209, 210, 211, 229, 241, 257, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 337, 339, 341, 481, 482, 489, 519, 588, 791, 794, 796, 821, 847, 892], "35": [5, 11, 12, 13, 19, 21, 28, 34, 35, 45, 47, 50, 81, 103, 108, 109, 112, 114, 136, 142, 143, 145, 146, 148, 149, 158, 160, 169, 171, 180, 184, 185, 187, 195, 196, 206, 207, 209, 211, 215, 227, 228, 229, 231, 232, 236, 237, 241, 245, 257, 478, 531, 576, 577, 589, 592, 764, 874], "insid": [5, 16, 24, 26, 41, 45, 50, 109, 140, 149, 156, 158, 159, 160, 161, 171, 176, 181, 182, 183, 184, 185, 203, 208, 210, 216, 231, 237, 271, 275, 276, 279, 280, 281, 293, 397, 438, 466, 473, 481, 482, 512, 535, 596, 760, 813, 851, 867, 871, 874, 892], "sphere": [5, 24, 26, 35, 41, 43, 45, 48, 50, 59, 68, 72, 84, 93, 94, 109, 120, 123, 125, 135, 156, 158, 159, 160, 176, 178, 181, 182, 183, 184, 185, 189, 200, 208, 209, 210, 245, 257, 262, 263, 265, 266, 267, 268, 270, 271, 274, 276, 298, 299, 304, 307, 308, 314, 362, 413, 414, 421, 457, 481, 482, 493, 522, 525, 526, 527, 563, 564, 573, 579, 661, 675, 678, 712, 714, 716, 760, 776, 777, 784, 788, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 819, 820, 822, 830, 847, 892], "102": [5, 11, 13, 14, 15, 16, 18, 22, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 65, 69, 70, 72, 73, 74, 77, 79, 80, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 235, 237, 257, 877], "extent": [5, 13, 16, 24, 41, 45, 47, 50, 55, 71, 90, 95, 107, 140, 156, 158, 176, 181, 183, 184, 185, 196, 207, 208, 229, 230, 231, 232, 235, 236, 237, 245, 265, 266, 437, 472, 516, 546, 672, 702, 703, 873, 874, 892], "73": [5, 13, 15, 19, 33, 34, 35, 40, 45, 60, 80, 81, 96, 107, 108, 112, 114, 121, 128, 145, 149, 169, 176, 182, 195, 196, 209, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 245, 265, 266, 267, 268, 303, 481, 482, 714, 716, 731], "y": [5, 9, 10, 11, 12, 13, 16, 18, 19, 24, 41, 45, 47, 50, 68, 71, 72, 80, 82, 90, 112, 114, 115, 120, 136, 145, 151, 156, 158, 160, 161, 170, 172, 175, 176, 180, 181, 183, 184, 185, 192, 195, 196, 199, 202, 203, 206, 208, 213, 216, 217, 218, 219, 227, 237, 242, 259, 262, 263, 265, 266, 267, 268, 270, 273, 274, 279, 281, 289, 304, 307, 308, 314, 315, 337, 346, 347, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 433, 454, 481, 482, 493, 530, 531, 563, 564, 565, 573, 579, 584, 587, 631, 665, 698, 712, 714, 716, 747, 750, 751, 753, 760, 761, 764, 777, 784, 788, 791, 792, 793, 794, 796, 798, 799, 800, 801, 802, 803, 808, 810, 812, 814, 815, 816, 820, 821, 822, 828, 839, 847, 849, 874, 892], "42": [5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 28, 29, 35, 42, 45, 47, 49, 56, 61, 69, 70, 72, 73, 74, 77, 80, 81, 83, 88, 90, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 114, 117, 118, 121, 123, 127, 132, 133, 137, 141, 146, 151, 152, 156, 162, 166, 167, 168, 169, 172, 175, 176, 177, 180, 181, 182, 184, 195, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 213, 216, 219, 221, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 245, 270, 531, 546, 672], "108": [5, 16, 35, 81, 82, 113, 114, 121, 162, 169, 191, 196, 227, 231, 232, 245, 267, 268, 356, 800, 871], "80": [5, 9, 13, 16, 19, 30, 31, 33, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 79, 80, 81, 86, 87, 90, 94, 108, 112, 114, 115, 116, 118, 119, 120, 125, 127, 149, 151, 156, 158, 168, 169, 171, 172, 176, 178, 179, 181, 183, 184, 185, 191, 196, 207, 209, 210, 211, 227, 228, 229, 231, 232, 236, 237, 245, 413, 564, 664, 801, 808, 857, 892], "1080": [5, 10, 195, 245, 420, 584, 586], "543": [5, 40, 213, 232], "after": [5, 8, 11, 16, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 62, 69, 81, 88, 90, 92, 94, 101, 103, 109, 127, 131, 136, 137, 140, 141, 142, 144, 145, 146, 149, 150, 151, 155, 156, 158, 161, 166, 167, 168, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 218, 223, 224, 227, 229, 230, 235, 240, 242, 257, 258, 259, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 288, 298, 299, 343, 356, 360, 361, 363, 365, 372, 373, 374, 389, 414, 416, 420, 421, 425, 427, 428, 432, 438, 455, 456, 457, 458, 476, 478, 479, 481, 482, 542, 563, 564, 567, 575, 576, 577, 581, 582, 585, 588, 589, 590, 592, 597, 600, 629, 631, 653, 673, 712, 737, 739, 740, 742, 743, 748, 760, 776, 784, 790, 794, 796, 798, 799, 800, 803, 804, 807, 811, 813, 824, 839, 847, 851, 859, 867, 868, 871, 873, 874, 877, 880, 892], "infeas": [5, 24, 41, 45, 50, 156, 158, 176, 181, 183, 184, 185, 208], "least": [5, 41, 45, 71, 84, 114, 141, 158, 159, 176, 181, 201, 202, 203, 205, 206, 210, 227, 232, 245, 265, 266, 267, 268, 275, 416, 425, 429, 431, 450, 452, 453, 471, 481, 482, 564, 566, 567, 583, 585, 588, 599, 697, 760, 790, 813, 857, 867, 871, 873, 874, 892], "awai": [5, 41, 45, 141, 144, 158, 159, 176, 181, 183, 188, 201, 206, 208, 212, 367, 493, 564, 594, 595, 665, 707, 740, 743, 760, 854, 874, 877, 892], "few": [5, 21, 26, 41, 44, 45, 50, 71, 94, 101, 109, 135, 144, 145, 149, 155, 156, 157, 158, 159, 161, 162, 167, 171, 172, 176, 181, 182, 199, 200, 201, 202, 204, 205, 207, 208, 209, 213, 216, 219, 228, 232, 237, 240, 242, 270, 435, 574, 575, 588, 599, 847, 851, 855, 859, 869, 871, 874, 876, 892], "interior": [5, 26, 41, 45, 50, 109, 158, 159, 176, 181, 182, 210], "statu": [5, 26, 41, 45, 50, 109, 158, 159, 176, 181, 182, 188, 265, 266, 267, 268, 270, 343, 365, 367, 481, 482, 489, 496, 504, 511, 561, 712, 714, 715, 716, 760, 847, 851, 874, 877, 892], "70": [5, 9, 12, 13, 15, 19, 21, 34, 41, 45, 46, 47, 58, 59, 81, 88, 90, 103, 104, 108, 109, 112, 114, 116, 136, 140, 143, 144, 156, 158, 159, 166, 169, 170, 183, 184, 196, 202, 205, 209, 211, 227, 228, 231, 232, 235, 240, 242, 245, 265, 266, 267, 268, 337, 479, 481, 482, 564, 714, 716, 728, 731, 738, 739, 742, 892], "outsid": [5, 16, 24, 26, 41, 45, 50, 109, 135, 140, 144, 156, 158, 159, 161, 176, 181, 182, 183, 184, 185, 200, 202, 207, 208, 210, 216, 218, 259, 262, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 279, 280, 281, 293, 393, 414, 421, 456, 481, 482, 516, 535, 563, 564, 579, 581, 712, 714, 716, 748, 757, 760, 777, 778, 792, 799, 803, 812, 815, 818, 820, 822, 823, 873, 874, 875, 877, 892], "exterior": [5, 26, 41, 45, 50, 109, 158, 159, 176, 181, 182, 210], "284": [5, 59, 169, 209, 227, 232, 245, 414, 892], "473": [5, 114, 135, 139, 196, 209, 227, 232, 278], "qhull": [5, 26, 41, 45, 50, 109, 158, 159, 176, 181, 182, 892], "189": [5, 32, 33, 34, 46, 99, 113, 169, 176, 187, 195, 209, 231, 232, 241, 245, 874], "solid": [5, 26, 41, 45, 50, 109, 150, 158, 159, 161, 176, 181, 182, 207, 784, 811, 874], "angl": [5, 26, 41, 45, 50, 109, 118, 131, 158, 159, 161, 169, 170, 172, 176, 181, 182, 183, 213, 257, 270, 305, 309, 587, 597, 652, 760, 765, 828, 874, 892], "244": [5, 13, 106, 169, 227, 232], "complet": [5, 7, 9, 26, 32, 33, 34, 41, 45, 50, 109, 144, 150, 155, 158, 159, 161, 169, 176, 180, 181, 182, 200, 202, 205, 208, 224, 227, 245, 257, 265, 266, 278, 305, 514, 564, 598, 612, 709, 756, 760, 768, 775, 851, 858, 867, 868, 869, 871, 874, 876, 877, 892], "125": [5, 19, 22, 24, 25, 35, 127, 137, 143, 156, 158, 160, 169, 170, 171, 202, 227, 231, 232, 340], "299": [5, 34, 140, 169, 184, 209, 227, 240], "limit": [5, 31, 34, 40, 41, 42, 45, 50, 58, 59, 90, 94, 109, 113, 114, 127, 135, 137, 141, 142, 158, 165, 166, 168, 176, 177, 179, 181, 182, 189, 191, 196, 200, 202, 205, 210, 216, 224, 232, 242, 245, 259, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 279, 280, 281, 283, 414, 421, 440, 447, 458, 478, 481, 482, 501, 563, 564, 568, 588, 599, 624, 628, 633, 639, 690, 696, 698, 712, 714, 715, 716, 775, 777, 779, 784, 791, 792, 794, 796, 798, 799, 801, 803, 808, 812, 815, 818, 820, 822, 823, 824, 841, 849, 851, 873, 874, 875, 877, 880, 892], "214": [5, 82, 85, 169, 195, 231, 232], "remain": [5, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 69, 76, 90, 92, 94, 109, 131, 137, 144, 156, 158, 166, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 196, 199, 204, 205, 206, 208, 224, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 437, 457, 458, 476, 478, 479, 481, 482, 483, 542, 564, 652, 700, 712, 714, 715, 739, 740, 742, 743, 800, 859, 867, 877, 880, 892], "through": [5, 9, 19, 27, 37, 45, 78, 85, 113, 140, 141, 142, 144, 145, 149, 155, 156, 160, 165, 166, 168, 172, 176, 180, 181, 183, 184, 185, 195, 200, 202, 205, 206, 207, 210, 212, 216, 218, 219, 224, 235, 242, 245, 258, 263, 265, 266, 267, 268, 298, 376, 455, 464, 473, 481, 515, 563, 564, 662, 724, 760, 782, 784, 788, 791, 793, 797, 805, 847, 849, 851, 858, 869, 873, 874, 880, 892], "0642": [5, 169], "3529": 5, "18": [5, 6, 9, 11, 13, 19, 28, 31, 34, 35, 40, 45, 47, 50, 56, 59, 65, 72, 81, 82, 83, 90, 93, 95, 103, 106, 108, 109, 110, 114, 127, 130, 134, 140, 145, 160, 167, 168, 169, 171, 176, 177, 179, 180, 181, 183, 184, 191, 195, 196, 199, 200, 203, 206, 207, 208, 209, 210, 216, 217, 218, 219, 224, 227, 228, 229, 231, 232, 235, 236, 237, 239, 245, 265, 266, 267, 268, 278, 280, 281, 285, 286, 294, 299, 309, 311, 356, 357, 358, 359, 360, 361, 372, 373, 374, 390, 398, 406, 420, 426, 443, 458, 461, 462, 473, 476, 478, 479, 481, 482, 502, 516, 518, 524, 550, 564, 576, 577, 589, 660, 663, 664, 666, 677, 679, 712, 715, 777, 790, 799, 801, 813, 819, 822, 824, 849, 854, 874], "7471": 5, "7238": 5, "0647": 5, "99": [5, 13, 15, 19, 26, 35, 47, 49, 70, 71, 81, 82, 90, 93, 103, 104, 108, 109, 112, 114, 120, 121, 137, 151, 152, 157, 160, 162, 169, 172, 177, 179, 180, 181, 184, 191, 196, 207, 209, 213, 218, 223, 224, 227, 228, 230, 231, 232, 245, 265, 266, 275, 481, 482, 790, 813, 874, 892], "leakag": [5, 27, 36, 45, 56, 276, 278, 366, 541, 543, 545, 631, 634, 740, 743, 760, 765], "constrain": [5, 109, 144, 166, 175, 178, 179, 180, 206, 245, 260, 265, 266, 294, 295, 296, 297, 298, 299, 362, 581, 847, 852, 858, 871, 874, 877, 892], "idea": [5, 7, 21, 27, 113, 155, 171, 175, 177, 202, 204, 205, 206, 207, 235, 237, 242, 245, 265, 266, 310, 437, 870, 871, 874, 875, 880], "inverse_oper": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 47, 48, 54, 59, 90, 104, 107, 108, 109, 110, 172, 177, 235, 237, 275, 531, 532, 533, 534, 535, 537, 538, 543, 547, 548], "minimum_norm": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 61, 90, 94, 104, 107, 108, 109, 110, 124, 166, 177, 178, 179, 181, 182, 191, 196, 206, 223, 224, 235, 237, 847, 860, 867, 874, 882, 892], "make_inverse_oper": [5, 7, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 177, 178, 179, 182, 191, 196, 224, 545, 867, 874, 882, 892], "loos": [5, 7, 31, 34, 35, 40, 41, 42, 46, 48, 54, 55, 59, 61, 90, 94, 109, 144, 177, 179, 182, 191, 196, 224, 458, 459, 476, 478, 479, 531, 532, 533, 534, 535, 537, 538, 542, 546, 547, 548, 867, 874, 877, 892], "depth": [5, 7, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 57, 58, 59, 61, 90, 94, 104, 107, 108, 109, 110, 124, 166, 171, 172, 177, 178, 179, 181, 182, 191, 196, 219, 223, 224, 235, 237, 245, 263, 298, 299, 458, 476, 478, 479, 542, 669, 674, 680, 877, 880, 892], "snr": [5, 7, 10, 11, 19, 21, 27, 28, 29, 30, 36, 38, 39, 41, 48, 54, 55, 56, 61, 88, 90, 104, 109, 166, 177, 179, 181, 184, 191, 202, 223, 224, 235, 237, 262, 267, 269, 270, 276, 345, 458, 530, 531, 539, 542, 544, 545, 620, 629, 631, 676, 760, 783, 817, 867, 874, 880, 892], "lambda2": [5, 7, 11, 28, 29, 30, 38, 39, 40, 41, 45, 47, 48, 50, 54, 55, 58, 59, 61, 72, 90, 94, 104, 108, 109, 156, 166, 177, 179, 181, 183, 184, 185, 191, 208, 223, 235, 237, 531, 532, 533, 534, 535, 537, 538, 543, 544, 547, 548, 573, 867], "stc": [5, 7, 11, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 56, 58, 59, 61, 69, 92, 93, 94, 95, 104, 108, 109, 110, 116, 127, 134, 135, 136, 158, 165, 166, 172, 176, 177, 178, 179, 180, 182, 186, 187, 196, 224, 236, 263, 267, 272, 273, 275, 276, 277, 278, 279, 280, 281, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 362, 448, 457, 461, 467, 476, 477, 478, 479, 518, 525, 530, 531, 532, 533, 534, 535, 538, 540, 541, 545, 547, 629, 639, 652, 662, 676, 677, 678, 679, 704, 707, 708, 760, 818, 819, 823, 824, 847, 867, 887, 892], "apply_invers": [5, 7, 28, 30, 38, 39, 40, 41, 44, 45, 58, 59, 61, 90, 94, 166, 177, 178, 179, 181, 182, 191, 196, 206, 223, 224, 235, 237, 532, 533, 534, 535, 537, 538, 544, 547, 548, 847, 867, 874, 882, 892], "pick_ori": [5, 7, 11, 28, 29, 32, 33, 34, 38, 39, 41, 49, 61, 90, 108, 177, 178, 180, 181, 224, 298, 299, 476, 478, 479, 531, 532, 533, 534, 535, 537, 538, 547, 548, 892], "hemi": [5, 7, 11, 26, 32, 33, 34, 38, 41, 43, 47, 48, 49, 50, 58, 61, 68, 94, 104, 109, 116, 127, 131, 134, 136, 155, 160, 166, 175, 177, 178, 179, 180, 181, 191, 196, 223, 224, 235, 236, 237, 271, 272, 273, 276, 279, 280, 281, 283, 472, 616, 634, 759, 760, 818, 823, 842, 892], "rh": [5, 24, 26, 34, 37, 38, 41, 43, 47, 59, 69, 90, 92, 94, 95, 107, 109, 116, 131, 136, 155, 158, 159, 160, 175, 177, 223, 224, 261, 271, 272, 273, 276, 279, 280, 281, 470, 516, 616, 634, 639, 760, 818, 823, 842, 874], "view": [5, 7, 11, 26, 28, 29, 31, 32, 33, 35, 40, 43, 47, 50, 53, 58, 59, 70, 94, 95, 100, 104, 107, 108, 109, 113, 115, 118, 127, 135, 136, 140, 142, 150, 151, 152, 158, 159, 160, 166, 169, 170, 172, 175, 177, 180, 181, 189, 190, 191, 196, 205, 207, 218, 219, 223, 224, 232, 235, 236, 237, 245, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 289, 304, 311, 481, 482, 530, 584, 646, 747, 760, 788, 790, 813, 818, 821, 823, 828, 830, 847, 867, 871, 873, 874, 880, 892], "lat": [5, 11, 26, 58, 94, 104, 127, 136, 151, 160, 166, 196, 223, 237, 760], "initial_tim": [5, 7, 11, 32, 41, 43, 58, 59, 61, 94, 104, 127, 134, 166, 175, 177, 178, 179, 180, 181, 182, 191, 196, 223, 272, 273, 276, 279, 280, 281, 760, 818, 823, 824], "clim": [5, 7, 10, 22, 26, 42, 43, 47, 49, 54, 55, 58, 59, 104, 109, 127, 131, 135, 136, 146, 175, 177, 179, 180, 181, 211, 223, 235, 236, 237, 267, 268, 272, 273, 276, 279, 280, 281, 760, 779, 796, 818, 823, 824, 892], "percent": [5, 26, 42, 107, 109, 112, 179, 229, 232, 272, 273, 276, 279, 280, 281, 288, 547, 548, 564, 668, 669, 670, 671, 672, 674, 712, 715, 779, 805, 818, 820, 823, 824, 892], "lim": [5, 7, 22, 26, 42, 43, 49, 54, 55, 58, 59, 104, 109, 127, 131, 135, 136, 175, 177, 179, 180, 181, 236, 237, 272, 273, 276, 279, 280, 281, 779, 818, 823, 824], "400": [5, 7, 13, 40, 44, 46, 76, 81, 92, 111, 127, 131, 135, 141, 142, 144, 146, 151, 156, 160, 171, 172, 176, 178, 181, 196, 206, 207, 209, 211, 229, 232, 473], "background": [5, 21, 43, 116, 126, 127, 135, 142, 151, 160, 165, 166, 172, 205, 207, 211, 214, 215, 216, 218, 219, 245, 263, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 414, 449, 450, 452, 481, 482, 502, 569, 594, 637, 712, 714, 716, 728, 760, 763, 769, 776, 788, 794, 798, 801, 808, 813, 818, 819, 821, 823, 824, 832, 867, 873, 892], "w": [5, 21, 32, 33, 39, 45, 61, 62, 74, 83, 103, 127, 132, 137, 142, 152, 156, 160, 161, 178, 182, 195, 196, 202, 211, 224, 227, 240, 245, 262, 264, 265, 266, 267, 268, 276, 280, 298, 299, 311, 323, 372, 414, 421, 481, 482, 531, 539, 542, 563, 564, 597, 639, 669, 674, 694, 712, 714, 715, 716, 728, 737, 738, 741, 744, 777, 792, 798, 799, 813, 815, 820, 821, 822, 874, 892], "invers": [5, 7, 11, 19, 21, 32, 33, 34, 38, 43, 44, 45, 46, 48, 50, 51, 54, 55, 56, 58, 59, 60, 61, 88, 90, 105, 106, 107, 108, 109, 110, 124, 149, 155, 156, 159, 160, 162, 170, 172, 175, 176, 178, 179, 180, 181, 182, 188, 191, 196, 200, 206, 208, 223, 224, 235, 237, 245, 257, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 298, 299, 355, 362, 368, 369, 374, 420, 428, 432, 448, 476, 477, 478, 481, 482, 517, 526, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 561, 564, 565, 620, 626, 629, 631, 633, 634, 641, 660, 661, 727, 760, 776, 787, 788, 817, 819, 828, 847, 852, 858, 877, 880, 882, 892], "out": [5, 16, 19, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 69, 71, 75, 80, 83, 88, 90, 92, 94, 109, 115, 120, 123, 127, 131, 137, 140, 141, 143, 151, 156, 158, 160, 166, 167, 170, 172, 177, 178, 179, 180, 182, 184, 185, 189, 191, 195, 196, 200, 202, 204, 205, 206, 207, 208, 210, 219, 224, 227, 241, 242, 257, 262, 265, 266, 267, 268, 270, 274, 289, 304, 340, 357, 358, 359, 414, 416, 421, 425, 450, 452, 481, 482, 489, 505, 530, 538, 563, 564, 565, 579, 584, 607, 613, 615, 704, 712, 714, 716, 739, 740, 747, 777, 784, 792, 796, 799, 803, 812, 815, 820, 822, 849, 850, 851, 857, 868, 869, 871, 874, 877, 878, 892], "adjust": [5, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 60, 90, 94, 109, 116, 120, 127, 149, 156, 158, 161, 170, 172, 177, 178, 179, 180, 182, 188, 191, 196, 208, 210, 218, 219, 224, 229, 257, 262, 265, 266, 267, 268, 270, 274, 287, 344, 346, 414, 421, 481, 482, 483, 492, 500, 563, 564, 574, 590, 600, 690, 696, 701, 705, 706, 712, 714, 716, 731, 773, 783, 790, 791, 792, 796, 798, 799, 803, 812, 813, 815, 820, 821, 849, 855, 867, 871, 874, 880, 892], "svd": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 177, 178, 179, 182, 191, 196, 206, 224, 262, 273, 279, 281, 343, 539, 540, 541, 785, 867, 874, 892], "lead": [5, 22, 26, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 70, 71, 88, 90, 94, 109, 144, 151, 162, 167, 177, 178, 179, 182, 191, 195, 196, 200, 202, 210, 212, 224, 259, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 356, 448, 476, 478, 479, 481, 482, 531, 532, 533, 534, 535, 600, 631, 656, 699, 700, 702, 703, 712, 847, 849, 869, 874, 892], "largest": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 135, 151, 177, 178, 179, 182, 188, 191, 196, 224, 227, 414, 458, 506, 540, 541, 564], "38802": 5, "factor": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 58, 59, 61, 90, 94, 104, 107, 108, 109, 110, 135, 157, 171, 177, 178, 179, 181, 182, 191, 196, 202, 203, 210, 212, 223, 224, 229, 230, 231, 235, 237, 241, 257, 260, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 300, 356, 360, 367, 374, 422, 423, 426, 427, 435, 454, 481, 482, 491, 534, 544, 547, 548, 574, 575, 581, 582, 588, 597, 599, 601, 648, 650, 651, 664, 665, 693, 695, 712, 715, 718, 721, 724, 737, 739, 740, 741, 742, 743, 744, 750, 760, 773, 790, 798, 811, 813, 819, 821, 823, 847, 874, 877, 892], "trace": [5, 31, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 75, 80, 90, 93, 94, 109, 144, 149, 151, 166, 172, 177, 178, 179, 182, 191, 192, 196, 200, 207, 209, 210, 213, 216, 219, 224, 257, 263, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 414, 481, 482, 564, 757, 760, 787, 790, 794, 802, 804, 811, 813, 818, 823, 874, 892], "35945e": 5, "nchan": [5, 34, 40, 41, 42, 45, 48, 50, 52, 54, 55, 57, 58, 59, 90, 94, 109, 166, 167, 169, 177, 178, 179, 182, 191, 196, 216, 222, 224, 269, 270, 877, 892], "nzero": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 177, 178, 179, 182, 191, 196, 224], "invert": [5, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 61, 90, 94, 104, 107, 108, 109, 110, 135, 156, 158, 161, 166, 177, 178, 179, 180, 181, 182, 191, 196, 202, 223, 224, 235, 237, 242, 284, 294, 297, 420, 423, 428, 476, 478, 479, 698, 735, 868, 877], "vector": [5, 15, 18, 19, 27, 34, 36, 41, 56, 109, 111, 131, 162, 175, 177, 178, 188, 195, 204, 205, 206, 207, 209, 210, 224, 245, 257, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 291, 298, 299, 343, 345, 349, 357, 358, 359, 362, 415, 418, 420, 425, 430, 432, 448, 452, 453, 454, 476, 478, 479, 481, 482, 517, 523, 530, 531, 533, 534, 535, 540, 541, 545, 563, 564, 575, 576, 577, 578, 580, 588, 595, 599, 608, 614, 622, 629, 637, 639, 646, 652, 712, 713, 714, 715, 716, 760, 792, 794, 796, 798, 799, 802, 811, 814, 818, 821, 823, 824, 843, 847, 871, 874, 877, 882, 892], "eigenlead": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 58, 59, 61, 90, 94, 104, 107, 108, 109, 110, 166, 177, 178, 179, 181, 182, 191, 196, 223, 224, 235, 237, 874], "residu": [5, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 58, 59, 60, 61, 71, 76, 90, 94, 166, 177, 178, 179, 181, 182, 183, 184, 191, 196, 205, 209, 223, 224, 235, 237, 301, 303, 457, 476, 478, 479, 531, 783, 892], "explain": [5, 18, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 61, 90, 94, 137, 159, 160, 166, 177, 178, 179, 181, 182, 183, 191, 192, 196, 205, 223, 224, 235, 237, 274, 301, 303, 414, 421, 476, 478, 479, 540, 541, 564, 578, 804, 851, 855, 874, 892], "97": [5, 11, 15, 19, 34, 41, 44, 47, 72, 81, 83, 103, 108, 109, 112, 114, 117, 156, 160, 166, 169, 191, 196, 205, 208, 209, 210, 227, 228, 231, 232, 235, 245, 435, 527, 573, 575, 599, 693, 867, 874, 892], "varianc": [5, 8, 14, 16, 28, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 61, 71, 90, 94, 114, 166, 177, 178, 179, 180, 181, 182, 183, 191, 196, 200, 205, 212, 223, 224, 235, 237, 245, 274, 276, 294, 295, 296, 297, 298, 299, 423, 459, 476, 478, 479, 540, 541, 542, 564, 572, 694, 705, 706, 740, 743, 783, 804, 805, 847, 874, 892], "control": [5, 11, 19, 22, 26, 32, 33, 34, 38, 41, 42, 47, 48, 50, 61, 94, 109, 114, 120, 127, 134, 140, 149, 150, 156, 166, 168, 171, 172, 178, 179, 181, 182, 188, 191, 196, 201, 202, 203, 205, 206, 207, 210, 211, 218, 223, 224, 227, 235, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 424, 425, 427, 430, 431, 433, 435, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 464, 465, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 560, 564, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 660, 661, 663, 664, 665, 666, 676, 677, 680, 682, 683, 684, 685, 686, 687, 688, 699, 700, 701, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 728, 729, 730, 731, 734, 735, 738, 739, 740, 742, 743, 744, 745, 748, 749, 750, 755, 759, 760, 768, 774, 776, 779, 785, 786, 788, 791, 792, 793, 794, 795, 800, 803, 804, 805, 806, 810, 811, 813, 814, 816, 817, 818, 819, 823, 824, 825, 826, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 857, 868, 871, 873, 874, 892], "24807258e": 5, "11": [5, 9, 10, 11, 13, 16, 19, 28, 33, 34, 35, 45, 47, 48, 49, 56, 60, 65, 71, 74, 75, 80, 81, 83, 85, 87, 91, 93, 95, 96, 100, 101, 103, 106, 107, 108, 109, 110, 112, 114, 120, 121, 123, 127, 137, 139, 145, 157, 162, 166, 168, 169, 170, 171, 174, 176, 179, 180, 181, 182, 183, 191, 195, 196, 199, 201, 202, 204, 209, 210, 211, 213, 215, 216, 222, 223, 227, 228, 229, 231, 232, 234, 236, 237, 242, 245, 256, 265, 266, 275, 278, 303, 337, 371, 383, 435, 471, 481, 482, 492, 494, 497, 498, 522, 542, 564, 597, 599, 603, 623, 669, 672, 674, 698, 712, 790, 813, 850, 857, 867, 874], "55793898e": 5, "13115753e": 5, "233": [5, 6, 169, 196, 209, 227, 231, 232], "881": [5, 6, 12, 21, 146, 232, 278], "opm_data": [5, 6], "54": [6, 19, 28, 34, 35, 45, 47, 81, 103, 108, 114, 144, 151, 158, 169, 195, 196, 209, 210, 227, 228, 231, 232, 245, 278, 892], "873": [6, 35, 195, 196, 232], "execut": [6, 20, 25, 32, 56, 67, 85, 91, 102, 106, 130, 133, 136, 139, 148, 154, 155, 164, 171, 172, 174, 187, 194, 198, 199, 215, 221, 226, 234, 239, 244, 263, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 378, 383, 417, 424, 427, 430, 431, 457, 470, 472, 473, 481, 482, 522, 525, 526, 537, 538, 547, 548, 564, 569, 576, 577, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 788, 790, 792, 795, 807, 813, 814, 816, 849, 850, 851, 854, 855, 874, 892], "auto_examples_dataset": 6, "604": 6, "07": [6, 12, 20, 35, 46, 56, 59, 81, 84, 85, 103, 106, 130, 134, 160, 170, 176, 179, 183, 184, 185, 187, 191, 194, 195, 196, 209, 213, 227, 229, 231, 232, 237, 244, 245, 323, 421, 672, 874], "spm_faces_dataset_sgskip": [6, 7], "pipelin": [7, 8, 9, 10, 11, 12, 13, 15, 18, 109, 137, 161, 165, 166, 171, 172, 173, 195, 196, 200, 201, 205, 414, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 467, 565, 750, 858, 868, 869, 871, 892], "reconstruct": [7, 16, 53, 158, 159, 162, 163, 164, 165, 182, 186, 187, 191, 195, 199, 200, 205, 210, 237, 245, 262, 263, 265, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 294, 299, 305, 309, 310, 311, 314, 356, 362, 367, 368, 369, 393, 396, 422, 455, 466, 470, 472, 473, 474, 475, 478, 516, 520, 522, 550, 564, 565, 574, 575, 588, 595, 599, 607, 616, 631, 634, 641, 643, 655, 660, 661, 675, 678, 689, 707, 708, 752, 760, 771, 776, 778, 788, 794, 799, 818, 823, 824, 842, 868, 871, 874, 880, 892], "scrambl": [7, 196, 868], "doe": [7, 28, 31, 55, 58, 59, 71, 72, 76, 80, 84, 112, 117, 127, 140, 141, 149, 151, 158, 160, 161, 162, 168, 178, 181, 182, 188, 189, 190, 192, 200, 202, 203, 204, 205, 206, 208, 210, 211, 212, 222, 224, 229, 231, 232, 235, 242, 245, 257, 258, 260, 262, 264, 265, 266, 267, 268, 272, 273, 274, 276, 277, 279, 280, 281, 289, 298, 299, 304, 321, 334, 360, 363, 372, 373, 383, 390, 444, 445, 446, 447, 448, 472, 481, 482, 501, 505, 530, 550, 553, 566, 579, 581, 584, 591, 624, 628, 653, 658, 662, 712, 714, 715, 716, 747, 750, 755, 763, 798, 821, 851, 855, 856, 867, 871, 873, 874, 877, 892], "quit": [7, 21, 127, 144, 150, 151, 162, 202, 203, 205, 210, 211, 216, 227, 228, 236, 564, 851, 869, 871], "so": [7, 10, 28, 31, 32, 38, 40, 44, 47, 64, 68, 71, 72, 76, 83, 93, 94, 95, 103, 104, 109, 114, 115, 127, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 180, 181, 182, 183, 184, 190, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 231, 232, 235, 236, 237, 241, 242, 257, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 290, 291, 292, 299, 314, 336, 362, 369, 389, 393, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 445, 446, 448, 449, 453, 481, 482, 500, 505, 531, 537, 550, 564, 565, 566, 574, 575, 589, 599, 600, 617, 629, 651, 658, 660, 699, 700, 702, 703, 714, 716, 750, 755, 760, 761, 769, 770, 794, 803, 805, 807, 813, 838, 847, 849, 851, 854, 856, 857, 858, 859, 867, 869, 871, 873, 874, 877, 892], "even": [7, 71, 75, 112, 128, 142, 155, 160, 166, 167, 168, 171, 172, 183, 190, 191, 199, 200, 202, 204, 205, 206, 207, 208, 212, 216, 218, 227, 242, 257, 265, 266, 267, 268, 310, 326, 380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 481, 482, 510, 564, 724, 821, 851, 859, 868, 874, 892], "fast": [7, 21, 44, 128, 151, 155, 191, 240, 242, 245, 265, 266, 267, 268, 365, 422, 431, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 522, 523, 564, 608, 714, 716, 731, 849, 871, 874, 892], "machin": [7, 18, 94, 95, 181, 196, 200, 201, 245, 251, 270, 283, 356, 575, 588, 599, 869, 892], "sever": [7, 71, 76, 81, 82, 114, 127, 145, 150, 151, 153, 155, 158, 159, 165, 166, 168, 169, 171, 172, 180, 181, 188, 189, 190, 191, 199, 201, 206, 207, 212, 216, 218, 219, 227, 235, 237, 260, 265, 266, 406, 449, 481, 482, 607, 715, 740, 743, 851, 854, 855, 856, 858, 863, 867, 868, 871, 872, 874, 877, 892], "alexandr": [7, 9, 10, 11, 12, 13, 15, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 65, 88, 92, 96, 97, 100, 107, 108, 110, 111, 113, 117, 121, 125, 131, 132, 137, 159, 162, 180, 185, 196, 205, 229, 230, 231, 235, 236, 237, 241, 245, 267, 268, 356, 414, 478, 479, 532, 564, 866, 871, 873, 879, 892], "gramfort": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 65, 92, 96, 97, 100, 107, 108, 110, 111, 113, 117, 121, 125, 131, 132, 137, 159, 162, 180, 185, 196, 205, 229, 230, 231, 235, 236, 237, 241, 245, 267, 268, 356, 478, 479, 532, 564, 800, 866, 871, 873, 879, 892], "inria": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 60, 65, 92, 96, 97, 100, 107, 108, 110, 111, 117, 121, 125, 131, 132, 137, 159, 185, 229, 230, 231, 235, 236, 237, 241], "deni": [7, 11, 13, 16, 21, 26, 33, 42, 70, 79, 101, 109, 113, 114, 120, 121, 126, 132, 133, 151, 162, 196, 231, 232, 237, 245, 267, 268, 356, 532, 866, 871, 879, 892], "engemann": [7, 11, 13, 16, 21, 26, 33, 42, 70, 79, 101, 109, 113, 114, 120, 121, 126, 132, 133, 162, 196, 231, 232, 237, 245, 267, 268, 356, 532, 800, 866, 871, 879, 892], "spm_face": [7, 123, 171, 216, 868, 882], "ica": [7, 17, 20, 27, 75, 78, 84, 85, 88, 162, 165, 166, 199, 200, 201, 204, 207, 214, 215, 218, 245, 262, 265, 266, 267, 268, 270, 275, 314, 329, 330, 376, 418, 428, 455, 481, 482, 496, 558, 561, 579, 581, 582, 592, 593, 597, 611, 612, 626, 790, 803, 804, 805, 806, 807, 813, 832, 858, 871, 878, 881, 882, 892], "create_eog_epoch": [7, 172, 199, 201, 204, 205, 207, 577, 590, 869, 882, 892], "spm_path": 7, "spm_ctf_meg_example_fac": 7, "d_3d": 7, "downsampl": [7, 19, 109, 136, 145, 166, 195, 201, 203, 230, 257, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 413, 454, 455, 481, 482, 520, 588, 698, 712, 715, 819, 871, 892], "heavili": [7, 109, 157, 196, 290, 292, 750, 877], "advis": [7, 71, 189, 202, 257, 867, 874, 892], "real": [7, 32, 50, 92, 93, 151, 155, 156, 158, 160, 161, 202, 205, 206, 207, 208, 218, 222, 224, 229, 245, 298, 457, 481, 482, 525, 608, 715, 728, 738, 739, 740, 760, 858, 863, 880, 892], "jitter": [7, 168, 203, 481, 482, 871], "resampl": [7, 19, 21, 44, 76, 81, 82, 109, 136, 140, 146, 149, 151, 165, 171, 191, 195, 199, 202, 205, 207, 214, 215, 224, 235, 236, 237, 241, 264, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 435, 449, 450, 452, 453, 455, 481, 482, 489, 496, 504, 561, 613, 712, 715, 716, 760, 790, 801, 818, 823, 832, 849, 869, 874, 881, 882, 889, 892], "npad": [7, 19, 76, 81, 82, 191, 195, 235, 236, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 454, 481, 482, 871], "auto": [7, 10, 15, 16, 19, 22, 31, 71, 75, 76, 77, 81, 82, 83, 90, 107, 113, 120, 121, 125, 147, 148, 156, 162, 165, 171, 191, 195, 202, 205, 208, 210, 229, 230, 231, 232, 235, 236, 257, 259, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 307, 308, 314, 330, 343, 345, 349, 355, 356, 360, 361, 362, 367, 414, 416, 420, 421, 425, 426, 433, 435, 438, 443, 444, 445, 447, 448, 450, 452, 453, 454, 459, 476, 478, 479, 481, 482, 487, 489, 491, 493, 496, 497, 504, 508, 511, 522, 527, 542, 561, 563, 564, 565, 573, 574, 575, 576, 579, 588, 589, 592, 599, 603, 617, 623, 642, 656, 712, 714, 715, 716, 760, 776, 777, 779, 784, 790, 792, 794, 796, 797, 799, 800, 803, 805, 807, 810, 812, 813, 814, 815, 816, 818, 820, 822, 823, 824, 845, 867, 868, 871, 892], "sfreq": [7, 8, 9, 14, 19, 21, 31, 64, 66, 69, 70, 71, 90, 92, 93, 94, 95, 109, 111, 114, 125, 127, 128, 136, 137, 144, 166, 168, 169, 172, 190, 191, 195, 201, 202, 203, 211, 212, 213, 216, 217, 218, 222, 224, 242, 259, 260, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 284, 376, 416, 419, 420, 425, 426, 427, 438, 440, 442, 449, 450, 452, 481, 482, 603, 617, 704, 717, 718, 719, 728, 730, 731, 736, 738, 739, 740, 741, 793, 801, 877, 892], "5e": [7, 8, 9, 13, 31, 32, 34, 35, 40, 41, 45, 49, 59, 77, 93, 109, 124, 141, 172, 183, 185, 196, 208, 216, 224, 265, 266, 275, 457, 481, 482, 790, 813], "major": [7, 322, 481, 851, 871, 873, 877, 880, 892], "n_compon": [7, 8, 9, 12, 15, 75, 77, 83, 88, 117, 166, 172, 196, 205, 414, 421, 422, 428, 564, 565, 579, 892], "max_it": [7, 75, 77, 83, 166, 205, 531, 564, 597, 677, 719, 730, 892], "random_st": [7, 8, 9, 10, 15, 40, 77, 83, 90, 92, 93, 94, 113, 117, 137, 166, 205, 223, 224, 478, 516, 564, 597, 616, 664, 665, 666, 675, 676, 678, 691, 892], "correl": [7, 12, 18, 22, 26, 44, 75, 103, 146, 162, 196, 204, 205, 210, 227, 228, 231, 245, 257, 270, 277, 344, 356, 362, 420, 421, 426, 564, 579, 599, 696, 701, 868, 871, 874, 892], "indic": [7, 13, 16, 22, 31, 47, 48, 70, 71, 81, 100, 140, 141, 142, 144, 145, 146, 149, 151, 155, 156, 160, 168, 169, 170, 175, 178, 188, 191, 195, 199, 200, 201, 203, 205, 206, 209, 210, 212, 216, 218, 219, 222, 224, 229, 232, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 312, 314, 315, 316, 326, 329, 331, 337, 356, 361, 372, 406, 414, 416, 420, 421, 422, 430, 435, 438, 443, 452, 453, 456, 481, 482, 489, 491, 493, 496, 497, 498, 504, 508, 511, 540, 541, 555, 558, 560, 561, 563, 564, 565, 566, 567, 572, 574, 579, 580, 581, 582, 591, 595, 597, 598, 604, 605, 607, 608, 614, 623, 629, 630, 633, 642, 645, 651, 656, 680, 681, 685, 688, 692, 698, 699, 700, 702, 703, 704, 707, 712, 713, 714, 715, 716, 720, 721, 722, 723, 725, 742, 743, 760, 773, 776, 777, 778, 780, 784, 790, 791, 792, 794, 796, 797, 799, 803, 804, 805, 807, 809, 811, 812, 814, 815, 820, 822, 840, 845, 847, 856, 873, 874, 877, 892], "eog_epoch": [7, 172, 199, 204, 582], "mrt31": 7, "2908": 7, "eog_ind": [7, 205, 564], "eog_scor": [7, 172, 205, 275], "find_bads_eog": [7, 172, 205, 275, 564, 892], "plot_scor": [7, 75, 83, 205, 564, 892], "plot_compon": [7, 77, 205, 564, 878, 892], "topograph": [7, 8, 16, 18, 19, 27, 122, 130, 133, 151, 196, 245, 267, 268, 270, 274, 275, 414, 421, 494, 560, 561, 564, 629, 712, 777, 784, 794, 799, 805, 812, 820, 822, 892], "compon": [7, 8, 12, 14, 15, 21, 27, 29, 30, 31, 34, 41, 42, 44, 45, 47, 59, 71, 75, 77, 78, 79, 80, 85, 87, 88, 94, 119, 124, 137, 150, 151, 162, 166, 172, 177, 178, 179, 181, 182, 184, 191, 196, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 218, 224, 235, 237, 245, 267, 268, 269, 271, 275, 298, 299, 314, 330, 356, 360, 361, 372, 373, 374, 383, 406, 407, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 435, 453, 454, 457, 458, 459, 476, 478, 479, 481, 482, 496, 534, 537, 538, 540, 541, 542, 543, 548, 564, 565, 572, 574, 575, 578, 579, 587, 588, 597, 599, 715, 800, 803, 804, 805, 806, 807, 813, 858, 867, 868, 871, 874, 877, 878, 892], "saw": [7, 140, 142, 167, 168, 171, 199, 200, 201, 207, 216, 231], "2nd": [7, 151, 195, 199, 229, 232, 242, 245, 579, 653, 892], "ecg": [7, 72, 74, 77, 81, 82, 83, 90, 92, 93, 94, 109, 111, 127, 131, 140, 141, 142, 146, 149, 151, 167, 168, 169, 172, 189, 191, 200, 201, 203, 204, 206, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 265, 266, 267, 268, 270, 275, 313, 361, 376, 447, 481, 482, 492, 493, 496, 508, 561, 564, 576, 581, 582, 589, 592, 664, 665, 698, 712, 714, 715, 716, 790, 806, 811, 813, 847, 874, 877, 892], "too": [7, 27, 70, 78, 85, 127, 140, 142, 144, 150, 151, 157, 158, 161, 165, 172, 178, 181, 199, 200, 201, 202, 203, 204, 207, 209, 211, 218, 227, 229, 231, 242, 265, 266, 267, 268, 270, 314, 330, 344, 376, 435, 481, 482, 487, 497, 567, 572, 574, 575, 588, 598, 599, 617, 623, 760, 780, 822, 851, 871, 892], "dipolar": [7, 457], "plot_overlai": [7, 83, 205, 564, 892], "inspect": [7, 21, 28, 71, 83, 127, 141, 151, 156, 162, 191, 199, 210, 211, 257, 265, 266, 267, 268, 309, 311, 320, 334, 481, 482, 599, 607, 664, 665, 790, 794, 813, 863, 871], "clean": [7, 74, 75, 76, 84, 141, 144, 159, 166, 167, 172, 189, 200, 202, 204, 205, 206, 207, 211, 232, 242, 260, 265, 275, 481, 482, 494, 523, 564, 607, 622, 698, 804, 851, 871, 892], "default": [7, 21, 31, 43, 44, 75, 88, 103, 112, 114, 120, 127, 135, 137, 140, 142, 145, 146, 149, 150, 151, 156, 158, 162, 166, 167, 168, 169, 170, 171, 172, 178, 179, 188, 189, 191, 192, 200, 201, 203, 205, 206, 207, 208, 210, 213, 216, 217, 218, 219, 222, 227, 231, 232, 237, 240, 241, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 464, 465, 466, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 604, 605, 606, 607, 608, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 693, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 734, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 755, 757, 759, 760, 763, 768, 769, 773, 774, 776, 777, 778, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 855, 856, 867, 868, 871, 877, 892], "k": [7, 8, 9, 10, 11, 13, 14, 18, 19, 22, 28, 31, 38, 39, 41, 59, 66, 70, 71, 83, 97, 100, 104, 142, 143, 158, 160, 176, 181, 188, 195, 196, 202, 206, 217, 219, 231, 232, 240, 241, 242, 245, 262, 263, 265, 266, 267, 268, 271, 274, 276, 284, 289, 298, 301, 303, 304, 414, 421, 476, 478, 479, 481, 482, 530, 531, 563, 564, 584, 588, 631, 672, 693, 699, 700, 701, 703, 712, 714, 716, 728, 738, 747, 773, 777, 792, 798, 799, 802, 813, 815, 820, 821, 822, 847, 849, 851, 874, 877, 892], "append": [7, 8, 10, 16, 43, 44, 45, 47, 62, 69, 76, 80, 113, 137, 150, 172, 183, 195, 200, 205, 207, 211, 216, 227, 231, 232, 237, 259, 265, 266, 267, 268, 271, 481, 482, 564, 579, 588, 599, 657, 689, 712, 713, 714, 715, 716, 732, 851, 892], "covarari": 7, "noise_cov": [7, 11, 31, 34, 40, 41, 42, 45, 48, 49, 50, 51, 54, 55, 58, 59, 60, 94, 109, 121, 152, 162, 172, 177, 178, 180, 182, 191, 205, 262, 265, 266, 267, 268, 275, 299, 301, 303, 372, 373, 458, 476, 478, 479, 481, 482, 542, 564, 790, 794, 798, 800, 813, 877, 892], "shrunk": [7, 31, 34, 40, 41, 42, 45, 59, 121, 152, 162, 177, 183, 356], "visual": [7, 8, 13, 14, 15, 16, 32, 33, 35, 36, 41, 42, 45, 56, 57, 59, 61, 62, 70, 72, 74, 80, 87, 94, 101, 104, 105, 106, 113, 115, 116, 119, 120, 128, 130, 132, 134, 135, 137, 141, 143, 145, 147, 148, 151, 152, 153, 154, 155, 160, 162, 165, 166, 168, 171, 172, 175, 178, 179, 183, 186, 187, 191, 192, 196, 199, 201, 202, 203, 208, 210, 213, 214, 215, 216, 217, 218, 219, 228, 229, 231, 241, 242, 245, 257, 260, 263, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 309, 310, 311, 315, 343, 344, 345, 346, 351, 353, 354, 362, 365, 366, 420, 441, 443, 455, 457, 467, 481, 482, 496, 518, 522, 530, 531, 541, 543, 545, 559, 561, 564, 568, 584, 587, 599, 607, 623, 625, 626, 629, 631, 634, 637, 639, 652, 661, 664, 665, 699, 704, 712, 714, 715, 728, 738, 739, 741, 742, 743, 744, 760, 765, 777, 783, 784, 790, 791, 793, 794, 795, 798, 801, 802, 803, 804, 805, 806, 807, 810, 811, 813, 827, 831, 832, 847, 848, 849, 852, 854, 855, 858, 863, 869, 871, 874, 875, 877, 882, 892], "dig": [7, 109, 118, 125, 136, 156, 157, 158, 159, 160, 166, 169, 170, 183, 184, 216, 222, 270, 308, 314, 344, 433, 488, 527, 776, 892], "montag": [7, 8, 19, 71, 83, 115, 125, 135, 136, 151, 159, 189, 190, 205, 222, 242, 265, 266, 267, 268, 270, 314, 317, 318, 320, 325, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 367, 447, 466, 481, 482, 493, 594, 596, 600, 810, 822, 830, 847, 868, 874, 892], "It": [7, 10, 13, 31, 39, 47, 55, 61, 71, 72, 75, 90, 94, 95, 103, 114, 116, 117, 121, 140, 142, 144, 145, 149, 150, 151, 156, 157, 158, 159, 160, 166, 169, 170, 171, 172, 175, 177, 180, 188, 189, 190, 192, 196, 200, 201, 203, 204, 205, 206, 208, 209, 210, 216, 217, 219, 222, 227, 229, 230, 232, 235, 237, 241, 242, 257, 258, 261, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 280, 281, 283, 288, 298, 299, 305, 314, 332, 343, 356, 361, 367, 414, 422, 423, 449, 457, 476, 478, 479, 481, 482, 489, 496, 500, 501, 512, 522, 525, 531, 537, 538, 542, 547, 548, 564, 568, 574, 584, 588, 599, 600, 607, 613, 620, 624, 628, 633, 637, 639, 678, 684, 687, 701, 706, 712, 715, 728, 735, 738, 750, 760, 798, 803, 823, 836, 839, 843, 847, 849, 851, 854, 855, 856, 858, 863, 867, 868, 871, 873, 874, 877, 880, 892], "spm_dig_montag": 7, "trans_fnam": [7, 69, 81, 156, 178, 191], "spm_ctf_meg_example_faces1_3d_raw": 7, "map": [7, 8, 10, 16, 19, 23, 24, 25, 26, 27, 36, 40, 41, 43, 56, 58, 72, 77, 79, 87, 94, 105, 106, 107, 109, 115, 119, 122, 124, 128, 130, 134, 135, 136, 143, 144, 145, 146, 151, 156, 158, 160, 165, 166, 168, 171, 175, 178, 181, 182, 195, 196, 199, 200, 201, 202, 205, 206, 207, 211, 216, 222, 223, 225, 226, 227, 232, 235, 236, 237, 245, 259, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 289, 291, 298, 312, 314, 326, 342, 362, 365, 366, 374, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 435, 438, 441, 443, 455, 459, 467, 476, 477, 478, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 519, 522, 523, 530, 531, 542, 555, 560, 561, 564, 565, 573, 579, 587, 620, 626, 629, 631, 632, 636, 637, 646, 647, 652, 659, 661, 666, 672, 677, 680, 693, 695, 696, 699, 701, 705, 706, 712, 713, 714, 715, 716, 721, 743, 760, 777, 779, 784, 787, 788, 790, 794, 795, 799, 805, 812, 813, 818, 819, 820, 821, 822, 823, 824, 830, 847, 849, 851, 867, 877, 880, 892], "make_field_map": [7, 124, 150, 267, 268, 795, 882, 892], "plot_field": [7, 124, 150, 267, 268, 892], "170": [7, 75, 81, 84, 123, 137, 169, 183, 184, 185, 191, 195, 196, 202, 205, 227, 231, 232, 245], "daat": 7, "plot_whit": [7, 93, 121, 152, 162, 177, 265, 266, 267, 268, 481, 482, 790, 794, 813, 871, 892], "oct": [7, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 131, 156, 158, 159, 160, 166, 172, 177, 178, 179, 181, 182, 191, 196, 223, 224, 235, 237, 257, 272, 276, 278, 280, 413, 660, 818, 892], "spm_": 7, "s_dspm_invers": 7, "comment": [7, 46, 62, 115, 127, 149, 150, 152, 171, 172, 189, 208, 222, 241, 258, 264, 265, 266, 267, 268, 271, 275, 337, 472, 628, 633, 712, 715, 745, 784, 798, 845, 847, 849, 851, 874, 892], "3d": [7, 27, 31, 35, 38, 40, 52, 59, 61, 96, 97, 122, 127, 130, 135, 136, 142, 151, 156, 158, 160, 161, 171, 175, 176, 185, 190, 196, 206, 210, 227, 230, 232, 257, 263, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 291, 314, 315, 327, 340, 368, 422, 452, 453, 481, 482, 502, 513, 522, 575, 588, 599, 693, 699, 700, 760, 761, 762, 767, 769, 770, 771, 776, 781, 788, 795, 810, 816, 818, 819, 823, 825, 826, 828, 830, 831, 847, 850, 851, 855, 863, 868, 869, 872, 892], "both": [7, 19, 31, 32, 33, 38, 40, 41, 45, 47, 51, 58, 59, 60, 70, 71, 72, 75, 87, 90, 94, 99, 109, 114, 132, 140, 141, 149, 150, 151, 162, 166, 168, 169, 170, 171, 172, 175, 177, 178, 180, 181, 182, 183, 189, 190, 191, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 210, 211, 213, 216, 224, 229, 231, 235, 236, 237, 240, 241, 242, 245, 260, 261, 264, 265, 266, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 288, 298, 299, 308, 317, 356, 360, 361, 362, 372, 373, 374, 414, 421, 433, 438, 455, 457, 458, 476, 478, 479, 481, 482, 500, 522, 542, 564, 567, 574, 579, 581, 613, 616, 629, 630, 634, 639, 661, 662, 666, 675, 693, 695, 699, 700, 702, 703, 712, 714, 715, 757, 760, 773, 783, 784, 791, 796, 797, 800, 803, 818, 823, 842, 847, 851, 857, 868, 871, 872, 873, 874, 877, 892], "ven": [7, 50], "save_imag": [7, 235, 237, 760], "dspm_map": 7, "png": [7, 47, 115, 172, 235, 237, 257, 275, 892], "classifi": [8, 9, 10, 11, 13, 17, 20, 27, 196, 210, 265, 267, 268, 270, 418, 429, 431, 432, 564, 588, 626, 670, 671, 892], "featur": [8, 11, 15, 18, 19, 27, 98, 102, 142, 150, 171, 172, 195, 196, 207, 210, 219, 222, 227, 232, 242, 245, 267, 268, 272, 273, 275, 276, 279, 280, 281, 414, 417, 420, 421, 423, 424, 426, 429, 447, 481, 482, 564, 588, 599, 622, 696, 697, 784, 794, 796, 818, 823, 825, 829, 851, 858, 859, 868, 870, 871, 872, 873, 874, 892], "extract": [8, 9, 18, 21, 24, 27, 36, 38, 41, 56, 62, 68, 74, 75, 80, 83, 100, 112, 113, 123, 127, 128, 135, 136, 141, 142, 144, 149, 151, 158, 159, 165, 166, 169, 171, 181, 188, 190, 191, 196, 199, 203, 205, 206, 207, 214, 215, 217, 222, 228, 229, 230, 237, 245, 257, 258, 265, 267, 270, 271, 272, 273, 276, 278, 279, 280, 281, 309, 343, 344, 345, 346, 347, 348, 351, 353, 354, 364, 374, 389, 414, 418, 421, 422, 438, 448, 455, 481, 484, 489, 496, 501, 518, 530, 531, 545, 564, 568, 599, 624, 628, 629, 633, 639, 684, 687, 759, 783, 802, 847, 851, 867, 868, 874, 877, 892], "en": [8, 19, 196, 245, 256, 879, 892], "wikipedia": [8, 196, 227, 245], "org": [8, 15, 32, 33, 71, 72, 83, 88, 113, 114, 115, 116, 120, 127, 135, 136, 196, 229, 231, 232, 235, 241, 245, 272, 276, 280, 383, 406, 407, 422, 453, 565, 657, 696, 741, 744, 756, 818, 851, 866, 871, 892], "wiki": [8, 155, 196, 272, 276, 280, 564, 756, 818, 847, 867], "common_spatial_pattern": [8, 196], "eegbci": [8, 9, 112, 159, 171, 205, 882, 892], "document": [8, 15, 32, 64, 88, 127, 135, 136, 143, 149, 151, 160, 166, 168, 169, 170, 172, 177, 181, 189, 202, 203, 205, 207, 210, 216, 218, 219, 222, 241, 245, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 420, 424, 425, 427, 430, 431, 433, 435, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 464, 465, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 560, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 660, 661, 663, 664, 665, 666, 669, 674, 676, 677, 680, 682, 683, 684, 685, 686, 687, 688, 699, 700, 701, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 730, 731, 734, 735, 739, 740, 741, 742, 743, 744, 745, 748, 749, 750, 755, 759, 760, 768, 769, 776, 785, 788, 792, 793, 794, 795, 798, 800, 803, 804, 805, 810, 811, 813, 814, 816, 817, 818, 819, 823, 824, 825, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 855, 856, 858, 866, 867, 868, 870, 871, 874, 892], "physionet": [8, 137, 205, 245, 383, 406, 407, 868, 880, 892], "martin": [8, 10, 35, 47, 104, 245, 414, 866, 868, 874, 892], "billing": [8, 892], "tugraz": 8, "sklearn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 117, 137, 171, 195, 196, 205, 227, 356, 361, 415, 417, 420, 423, 424, 428, 431, 756, 850, 851, 892], "discriminant_analysi": [8, 9], "lineardiscriminantanalysi": [8, 9], "model_select": [8, 9, 10, 12, 15, 16, 19, 356, 361, 431, 892], "shufflesplit": 8, "cross_val_scor": [8, 9], "events_from_annot": [8, 9, 112, 128, 135, 136, 137, 144, 168, 211, 242, 259, 284, 489, 496, 882, 892], "make_standard_montag": [8, 19, 71, 83, 125, 159, 170, 190, 242, 265, 266, 267, 268, 270, 325, 332, 481, 482, 493, 505, 882, 892], "concatenate_raw": [8, 9, 10, 81, 112, 191, 265, 266, 267, 268, 363, 364, 481, 482, 588, 599, 868, 882, 892], "read_raw_edf": [8, 9, 83, 112, 137, 159, 189, 205, 487, 489, 504, 868, 874, 878, 882, 892], "classif": [8, 9, 10, 11, 12, 15, 51, 60, 138, 139, 146, 162, 165, 196, 245, 259, 265, 301, 303, 406, 415, 443, 496, 617, 714, 793, 868, 892], "start": [8, 22, 29, 33, 34, 40, 62, 66, 71, 82, 93, 96, 127, 136, 137, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 160, 161, 165, 166, 167, 168, 170, 173, 174, 177, 178, 188, 196, 200, 201, 203, 204, 205, 206, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 228, 229, 240, 241, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 284, 285, 286, 297, 337, 343, 344, 345, 346, 356, 359, 361, 414, 420, 421, 426, 438, 454, 455, 456, 472, 473, 480, 481, 482, 487, 489, 496, 500, 507, 510, 524, 530, 534, 553, 564, 567, 571, 576, 577, 581, 582, 584, 588, 589, 590, 591, 592, 594, 613, 629, 677, 689, 699, 700, 702, 703, 712, 713, 715, 717, 718, 719, 720, 721, 722, 723, 747, 760, 765, 784, 786, 793, 799, 804, 806, 807, 813, 847, 849, 851, 853, 854, 855, 856, 859, 862, 867, 870, 871, 874, 875, 877, 878, 892], "cue": [8, 135], "feet": [8, 9, 112, 383], "standard_1005": [8, 71, 83, 159, 170, 205], "set_montag": [8, 15, 19, 68, 71, 83, 125, 128, 135, 136, 151, 159, 170, 182, 189, 190, 205, 222, 242, 265, 266, 267, 268, 270, 447, 481, 482, 493, 505, 874, 892], "skip_by_annot": [8, 9, 265, 266, 267, 268, 481, 482, 588, 599, 892], "t1": [8, 9, 30, 44, 50, 112, 156, 157, 158, 159, 160, 161, 176, 257, 278, 280, 281, 305, 309, 310, 311, 322, 370, 393, 481, 595, 661, 778, 824, 847, 868, 874, 892], "t2": [8, 9, 112, 322, 481, 892], "train": [8, 10, 11, 13, 15, 16, 19, 88, 137, 195, 196, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 431, 564, 565, 803, 851, 867, 868, 892], "epochs_train": [8, 137], "edf": [8, 9, 83, 112, 137, 159, 192, 205, 447, 481, 482, 489, 496, 504, 617, 868, 874, 878, 892], "eegmmidb": [8, 9, 83, 112, 159, 205, 383, 892], "s001": [8, 9, 83, 112, 159, 205], "s001r06": [8, 9, 112, 159], "19999": [8, 112, 159, 205], "124": [8, 35, 112, 159, 169, 177, 205, 232, 245, 392], "994": [8, 9, 71, 83, 112, 159, 205, 232], "s001r10": [8, 9, 112], "s001r14": [8, 9, 112], "bandpass": [8, 9, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 77, 82, 88, 113, 115, 121, 133, 136, 141, 144, 146, 172, 196, 199, 201, 204, 205, 207, 211, 212, 213, 232, 242, 265, 266, 267, 268, 416, 422, 425, 449, 450, 452, 481, 482, 603, 714, 716, 813, 814, 892], "265": [8, 9, 81, 82, 169, 191, 209, 210, 215, 227, 232, 234, 245, 669, 674], "656": [8, 9, 195, 232], "annot": [8, 9, 27, 38, 41, 44, 47, 69, 76, 78, 83, 85, 90, 94, 95, 112, 113, 126, 127, 128, 135, 136, 144, 146, 151, 160, 165, 166, 171, 173, 175, 181, 189, 190, 191, 192, 195, 199, 205, 208, 219, 220, 221, 223, 260, 265, 266, 267, 268, 270, 284, 346, 347, 361, 365, 370, 391, 443, 480, 481, 482, 483, 489, 494, 496, 500, 502, 510, 523, 564, 566, 567, 568, 569, 570, 571, 581, 582, 585, 588, 589, 590, 599, 600, 617, 626, 634, 650, 653, 716, 760, 776, 802, 805, 813, 814, 828, 829, 842, 847, 868, 869, 874, 882, 892], "descript": [8, 9, 112, 128, 135, 136, 137, 140, 142, 144, 151, 168, 169, 170, 188, 190, 191, 192, 201, 211, 216, 217, 218, 222, 227, 259, 265, 266, 267, 268, 270, 274, 284, 324, 325, 357, 358, 361, 370, 443, 481, 482, 483, 523, 564, 567, 581, 582, 585, 589, 623, 712, 715, 716, 805, 814, 847, 851, 868, 877, 892], "801": [8, 19, 144, 232, 241], "discrim": 8, "mont": [8, 245], "carlo": [8, 245, 892], "cross": [8, 9, 10, 11, 12, 15, 16, 19, 27, 32, 33, 34, 36, 44, 56, 79, 87, 105, 106, 119, 121, 122, 130, 137, 162, 166, 177, 195, 196, 200, 205, 207, 210, 223, 224, 231, 245, 262, 265, 267, 269, 270, 276, 277, 289, 291, 298, 299, 300, 356, 361, 362, 366, 374, 414, 417, 420, 426, 430, 431, 435, 455, 481, 530, 540, 541, 542, 543, 546, 561, 564, 574, 581, 588, 589, 599, 620, 626, 629, 631, 639, 713, 717, 718, 719, 720, 721, 722, 723, 729, 760, 786, 847, 863, 868, 871, 880, 892], "epochs_data": [8, 416, 419, 423, 892], "get_data": [8, 9, 10, 12, 13, 14, 16, 18, 21, 71, 73, 76, 84, 96, 97, 100, 114, 115, 127, 133, 137, 140, 141, 146, 149, 166, 167, 196, 203, 206, 228, 232, 240, 241, 242, 265, 266, 267, 268, 481, 482, 713, 714, 716, 874, 892], "epochs_data_train": 8, "cv": [8, 9, 10, 11, 12, 15, 16, 19, 196, 356, 361, 430, 431, 892], "test_siz": 8, "cv_split": 8, "split": [8, 10, 11, 15, 16, 19, 58, 68, 88, 94, 127, 145, 159, 166, 195, 196, 207, 223, 228, 237, 245, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 356, 361, 431, 473, 480, 481, 482, 502, 505, 537, 538, 599, 689, 698, 713, 741, 744, 760, 786, 818, 823, 877, 892], "assembl": [8, 9, 231, 542, 704, 869, 892], "lda": [8, 9], "log": [8, 9, 12, 21, 33, 83, 121, 129, 142, 162, 177, 200, 202, 205, 207, 211, 219, 229, 241, 242, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 424, 425, 427, 430, 431, 433, 435, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 464, 465, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 560, 564, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 657, 658, 660, 661, 663, 664, 665, 666, 676, 677, 680, 682, 683, 684, 685, 686, 687, 688, 699, 700, 701, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 728, 729, 730, 731, 734, 735, 738, 739, 740, 742, 743, 744, 745, 748, 749, 750, 755, 758, 759, 760, 768, 776, 785, 788, 789, 792, 793, 794, 795, 800, 801, 803, 804, 805, 808, 810, 811, 813, 814, 816, 817, 818, 819, 820, 823, 824, 825, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 871, 882, 892], "norm_trac": [8, 9, 196, 414, 892], "scikit": [8, 9, 16, 18, 19, 117, 196, 205, 418, 420, 422, 423, 424, 425, 427, 428, 429, 432, 564, 869, 892], "learn": [8, 9, 16, 18, 19, 21, 71, 117, 143, 161, 162, 166, 196, 198, 200, 201, 205, 245, 251, 356, 418, 420, 422, 423, 424, 425, 427, 428, 429, 431, 432, 564, 597, 851, 858, 868, 869, 871, 892], "clf": [8, 9, 10, 11, 12, 13, 15, 18, 196, 429, 892], "class_bal": 8, "accuraci": [8, 10, 15, 33, 81, 137, 245, 262, 265, 266, 267, 268, 274, 373, 374, 414, 420, 421, 426, 435, 457, 481, 482, 542, 563, 564, 578, 579, 594, 669, 674, 712, 714, 716, 740, 743, 750, 777, 792, 799, 803, 812, 815, 820, 822, 877, 892], "chanc": [8, 9, 10, 11, 196, 873, 892], "fit_transform": [8, 9, 10, 14, 18, 196, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 427, 428, 429, 565], "plot_pattern": [8, 12, 196, 414, 421, 892], "ch_type": [8, 14, 22, 26, 42, 64, 80, 82, 87, 100, 112, 114, 120, 124, 125, 131, 141, 142, 145, 149, 150, 151, 166, 170, 176, 177, 190, 205, 210, 211, 219, 222, 232, 240, 241, 262, 265, 266, 267, 268, 270, 320, 321, 376, 414, 421, 481, 482, 508, 522, 563, 564, 569, 579, 588, 652, 656, 712, 714, 715, 716, 791, 792, 799, 803, 815, 816, 820, 822, 892], "au": [8, 262, 265, 266, 267, 268, 274, 376, 414, 421, 481, 482, 587, 712, 714, 716, 792, 799, 812, 820], "7e": [8, 9, 32, 35, 48, 49, 54, 55, 58, 71, 94, 121, 150, 152, 162, 172, 178, 179, 182, 183, 185, 191, 196, 200, 223], "64": [8, 9, 12, 13, 19, 21, 26, 32, 33, 34, 35, 41, 45, 46, 47, 50, 58, 59, 81, 82, 83, 101, 103, 108, 114, 137, 143, 158, 159, 169, 170, 171, 172, 176, 178, 181, 184, 185, 191, 195, 196, 209, 224, 227, 228, 230, 231, 232, 245, 262, 265, 266, 267, 268, 271, 274, 276, 414, 421, 479, 481, 482, 503, 537, 538, 547, 548, 563, 564, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 857, 868, 874, 878], "8e": [8, 9, 32, 35, 49, 75, 109, 121, 162, 172, 177, 180, 183, 185, 191, 196], "09": [8, 9, 21, 42, 43, 44, 45, 49, 74, 76, 81, 82, 85, 103, 116, 120, 121, 123, 130, 158, 159, 160, 162, 175, 177, 180, 185, 195, 209, 221, 227, 228, 229, 231, 232, 237, 245, 271, 276, 527, 606, 693, 741, 744], "0001": [8, 9, 32, 79, 87, 119, 124, 150, 179, 200, 478, 479], "00012": [8, 9], "6e": [8, 9, 34, 42, 46, 119, 121, 152, 172, 177, 183, 185, 196], "00011": [8, 9], "933333": 8, "533333": 8, "00025": 8, "00026": 8, "9e": [8, 9, 21, 42, 49, 87, 124, 150, 152, 162, 177, 180, 182, 183, 184, 185, 196, 223], "w_length": 8, "int": [8, 11, 19, 31, 69, 73, 90, 93, 95, 109, 114, 127, 143, 149, 160, 169, 171, 191, 195, 202, 203, 212, 216, 222, 224, 237, 242, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 313, 314, 316, 318, 319, 329, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 426, 427, 430, 431, 433, 435, 436, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 464, 465, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 658, 660, 661, 662, 663, 664, 665, 666, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 695, 698, 699, 700, 701, 702, 703, 704, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 729, 730, 731, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 755, 759, 760, 768, 769, 773, 776, 777, 778, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 798, 799, 800, 803, 804, 805, 806, 807, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 892], "w_step": 8, "w_start": 8, "shape": [8, 16, 19, 22, 31, 41, 47, 50, 53, 64, 66, 71, 97, 114, 115, 120, 136, 137, 140, 146, 149, 157, 158, 160, 170, 175, 181, 188, 195, 196, 202, 216, 222, 227, 228, 229, 231, 232, 235, 236, 237, 240, 241, 242, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 288, 298, 299, 300, 306, 307, 308, 314, 315, 316, 320, 323, 327, 331, 341, 346, 350, 351, 352, 353, 354, 365, 367, 371, 372, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 438, 442, 443, 448, 450, 452, 455, 456, 457, 458, 459, 472, 473, 474, 475, 476, 478, 481, 482, 484, 492, 506, 518, 520, 522, 524, 529, 539, 540, 541, 543, 546, 547, 559, 563, 564, 565, 567, 568, 569, 571, 572, 573, 574, 575, 579, 584, 585, 586, 588, 591, 596, 597, 599, 604, 605, 613, 614, 623, 625, 626, 642, 645, 648, 649, 650, 651, 661, 662, 667, 668, 669, 670, 671, 672, 673, 674, 679, 680, 689, 691, 692, 693, 697, 698, 699, 700, 701, 702, 703, 710, 712, 713, 714, 715, 716, 717, 718, 719, 724, 727, 728, 730, 731, 735, 737, 738, 739, 740, 741, 742, 743, 747, 748, 749, 750, 751, 753, 759, 760, 763, 764, 765, 775, 776, 777, 779, 780, 781, 784, 790, 791, 792, 793, 794, 796, 799, 800, 802, 803, 805, 806, 810, 812, 814, 815, 816, 818, 820, 821, 822, 823, 824, 828, 830, 837, 840, 845, 847, 858, 867, 874, 892], "scores_window": 8, "train_idx": 8, "test_idx": 8, "y_train": [8, 137, 195], "y_test": [8, 137, 195], "x_train": [8, 195], "x_test": [8, 195], "slide": [8, 12, 21, 156, 242, 275, 739, 740, 742, 743], "score_this_window": 8, "n": [8, 10, 43, 45, 71, 83, 93, 99, 109, 114, 137, 141, 144, 149, 151, 157, 160, 170, 172, 175, 188, 202, 205, 206, 207, 208, 216, 222, 224, 227, 229, 231, 232, 242, 245, 257, 259, 260, 264, 265, 266, 267, 268, 270, 271, 272, 273, 276, 277, 279, 280, 281, 283, 314, 323, 342, 352, 353, 354, 357, 358, 359, 362, 371, 383, 406, 407, 429, 435, 438, 449, 451, 472, 481, 482, 502, 546, 563, 564, 568, 571, 581, 582, 588, 599, 647, 672, 685, 686, 687, 688, 692, 697, 712, 715, 724, 725, 728, 738, 739, 740, 742, 743, 760, 763, 764, 779, 794, 801, 818, 823, 824, 830, 847, 859, 868, 871, 874, 878, 892], "w_time": [8, 9], "axvlin": [8, 10, 11, 13, 19, 45, 112, 127, 144, 160, 196, 210], "linestyl": [8, 9, 11, 21, 97, 111, 112, 113, 127, 150, 196, 202, 206, 211, 232, 728, 738, 784, 808, 892], "color": [8, 9, 10, 11, 12, 13, 19, 21, 22, 38, 39, 45, 47, 48, 49, 50, 54, 55, 59, 71, 81, 82, 96, 97, 101, 104, 112, 113, 114, 115, 116, 120, 127, 132, 133, 135, 136, 137, 141, 142, 144, 149, 150, 151, 156, 160, 166, 168, 170, 171, 172, 175, 176, 177, 178, 181, 183, 185, 195, 196, 199, 200, 202, 203, 206, 210, 211, 217, 218, 219, 224, 232, 237, 240, 241, 242, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 372, 414, 421, 466, 467, 472, 473, 481, 482, 563, 564, 632, 633, 712, 714, 716, 728, 738, 760, 769, 773, 775, 776, 777, 779, 782, 784, 787, 788, 789, 790, 791, 792, 793, 794, 796, 798, 799, 801, 802, 803, 808, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 826, 841, 842, 847, 892], "axhlin": [8, 9, 10, 11, 13, 19, 21, 81, 82, 112, 113, 144, 160, 196, 242, 564, 806], "xlabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 69, 73, 82, 90, 93, 97, 107, 108, 110, 114, 127, 137, 151, 160, 177, 180, 181, 195, 202, 211, 212, 224, 227, 229, 237, 241, 242, 728, 738, 892], "ylabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 69, 70, 73, 82, 90, 93, 97, 107, 108, 110, 127, 137, 151, 160, 177, 180, 181, 195, 202, 207, 211, 212, 224, 227, 229, 237, 241, 242, 728, 738], "legend": [8, 9, 10, 11, 12, 16, 19, 21, 22, 28, 37, 38, 39, 41, 45, 69, 71, 96, 97, 110, 111, 127, 137, 144, 145, 150, 162, 166, 172, 180, 195, 196, 211, 216, 217, 237, 241, 242, 265, 266, 267, 268, 728, 738, 760, 773, 783, 784, 790, 793, 798, 892], "loc": [8, 10, 16, 37, 39, 71, 112, 123, 127, 136, 140, 143, 144, 145, 169, 176, 180, 183, 211, 241, 270, 332, 610, 728, 738, 783, 830, 874, 877], "zoltan": [8, 196, 245, 414], "kole": [8, 196, 245, 414], "quantit": [8, 162, 196, 245, 564, 871, 873], "abnorm": [8, 196, 245], "clinic": [8, 71, 72, 79, 112, 151, 196, 200, 204, 205, 245, 531, 563, 564, 572, 573, 579, 599, 614, 741, 744, 868, 874], "electroencephalographi": [8, 58, 72, 79, 112, 151, 196, 200, 204, 245, 276, 563, 573, 614, 874], "neurophysiologi": [8, 71, 72, 79, 112, 151, 196, 200, 204, 205, 245, 563, 564, 572, 573, 579, 614, 741, 744, 874], "79": [8, 13, 16, 19, 35, 41, 45, 47, 81, 103, 108, 112, 114, 119, 157, 158, 169, 176, 181, 184, 192, 194, 196, 209, 227, 228, 231, 232, 245, 406, 434], "440": [8, 13, 81, 196, 213, 215, 227, 245], "447": [8, 196, 227, 232, 245], "1991": [8, 195, 196, 245, 414], "1016": [8, 12, 13, 18, 19, 21, 35, 42, 44, 59, 60, 71, 72, 75, 76, 79, 94, 101, 112, 113, 119, 121, 126, 144, 151, 155, 162, 180, 196, 200, 202, 204, 205, 209, 212, 227, 228, 232, 245, 267, 268, 271, 276, 277, 298, 303, 356, 362, 392, 418, 420, 421, 422, 432, 476, 479, 531, 532, 542, 546, 563, 564, 572, 573, 578, 579, 603, 606, 614, 669, 672, 674, 699, 700, 702, 703, 705, 706, 726, 728, 738, 741, 742, 744, 777, 866, 868, 871, 874], "0013": [8, 72, 79, 112, 151, 196, 200, 204, 245, 563, 573, 614, 874], "4694": [8, 19, 72, 79, 112, 151, 196, 200, 204, 245, 563, 573, 614, 874], "91": [8, 13, 19, 26, 35, 41, 45, 47, 50, 72, 79, 80, 96, 108, 109, 112, 114, 117, 151, 156, 158, 162, 169, 176, 181, 182, 196, 200, 207, 208, 209, 210, 211, 227, 228, 231, 232, 245, 337], "90163": [8, 196, 245], "gerwin": [8, 205, 245, 383, 868], "schalk": [8, 205, 245, 383, 868], "denni": [8, 205, 245, 383, 868], "mcfarland": [8, 205, 245, 383, 868], "thilo": [8, 205, 245, 383, 868], "hinterberg": [8, 205, 245, 383, 868], "niel": [8, 205, 245, 383, 868, 892], "birbaum": [8, 205, 245, 383, 868], "jonathan": [8, 101, 205, 228, 245, 383, 397, 868, 892], "wolpaw": [8, 205, 245, 383, 868], "bci2000": [8, 205, 245, 383, 868], "bci": [8, 15, 88, 112, 159, 196, 205, 245, 383, 565, 868, 880, 892], "ieee": [8, 15, 40, 46, 51, 72, 83, 84, 88, 117, 137, 144, 162, 180, 196, 205, 240, 245, 265, 266, 267, 268, 298, 299, 301, 356, 383, 407, 414, 438, 478, 479, 481, 482, 564, 565, 573, 607, 714, 716, 731, 741, 744, 867, 868, 871, 874], "transact": [8, 15, 51, 72, 84, 88, 117, 137, 162, 180, 196, 205, 240, 245, 265, 266, 267, 268, 298, 299, 301, 356, 383, 407, 414, 478, 481, 482, 531, 564, 565, 573, 607, 714, 716, 731, 867, 868, 871, 874], "biomed": [8, 15, 72, 84, 88, 117, 137, 180, 189, 196, 205, 224, 245, 256, 298, 299, 383, 407, 414, 564, 565, 573, 607, 867, 868, 874, 879], "engin": [8, 15, 72, 83, 84, 88, 117, 180, 196, 205, 206, 207, 224, 245, 298, 299, 383, 407, 414, 531, 564, 565, 573, 607, 851, 857, 867, 868, 874], "1034": [8, 20, 205, 245, 383, 665, 868], "1043": [8, 169, 205, 245, 383, 868], "2004": [8, 71, 205, 245, 356, 383, 572, 672, 868, 874], "1109": [8, 15, 40, 46, 51, 72, 83, 84, 88, 117, 137, 144, 162, 180, 196, 205, 240, 245, 265, 266, 267, 268, 298, 299, 301, 356, 383, 407, 414, 438, 478, 479, 481, 482, 564, 565, 573, 607, 714, 716, 731, 867, 868, 871, 874], "tbme": [8, 15, 72, 84, 88, 117, 196, 205, 245, 383, 414, 564, 565, 573, 607, 867, 868], "827072": [8, 205, 245, 383, 868], "ari": [8, 137, 205, 245, 383, 406, 407, 858, 868, 892], "l": [8, 19, 44, 49, 99, 126, 127, 137, 144, 160, 172, 188, 195, 205, 208, 210, 212, 232, 235, 241, 242, 245, 256, 257, 277, 362, 383, 406, 407, 420, 531, 564, 572, 672, 741, 744, 778, 784, 805, 857, 866, 868, 874, 879, 892], "goldberg": [8, 137, 205, 245, 383, 406, 407, 868], "lui": [8, 137, 205, 245, 383, 406, 407, 868], "amar": [8, 137, 205, 245, 383, 406, 407, 868], "leon": [8, 137, 205, 245, 383, 406, 407, 868], "glass": [8, 31, 35, 40, 44, 59, 61, 137, 181, 205, 245, 273, 279, 280, 281, 383, 406, 407, 819, 823, 824, 868], "jeffrei": [8, 137, 205, 245, 383, 406, 407, 531, 868], "hausdorff": [8, 137, 205, 245, 383, 406, 407, 868], "plamen": [8, 137, 205, 245, 383, 406, 407, 868], "ivanov": [8, 137, 205, 245, 383, 406, 407, 868], "roger": [8, 10, 137, 205, 245, 383, 406, 407, 868], "joseph": [8, 137, 205, 245, 383, 406, 407, 868], "mietu": [8, 137, 205, 245, 383, 406, 407, 868], "georg": [8, 137, 205, 212, 245, 383, 406, 407, 578, 868, 892], "moodi": [8, 137, 205, 245, 383, 406, 407, 868], "chung": [8, 137, 205, 245, 383, 406, 407, 868], "kang": [8, 137, 205, 245, 383, 406, 407, 868], "peng": [8, 137, 205, 245, 383, 406, 407, 868], "h": [8, 96, 101, 112, 127, 137, 202, 204, 205, 218, 245, 257, 259, 265, 266, 323, 383, 406, 407, 450, 453, 563, 614, 672, 694, 710, 725, 790, 801, 866, 867, 868, 874, 892], "eugen": [8, 137, 205, 245, 383, 406, 407, 868], "stanlei": [8, 137, 205, 245, 383, 406, 407, 868], "physiobank": [8, 137, 205, 245, 383, 406, 407, 868], "physiotoolkit": [8, 137, 205, 245, 383, 406, 407, 868], "research": [8, 68, 71, 137, 141, 144, 151, 155, 168, 199, 205, 213, 224, 242, 245, 256, 383, 406, 407, 500, 532, 603, 694, 859, 866, 868, 870, 879], "resourc": [8, 123, 137, 144, 203, 205, 245, 383, 406, 407, 850, 868, 875, 880], "complex": [8, 32, 37, 114, 135, 137, 192, 205, 227, 245, 265, 266, 267, 268, 291, 383, 406, 407, 427, 481, 482, 535, 664, 715, 730, 731, 739, 740, 742, 847, 851, 868, 877, 892], "circul": [8, 137, 205, 245, 383, 406, 407, 868], "2000": [8, 10, 137, 192, 201, 202, 204, 205, 207, 216, 245, 265, 266, 267, 268, 270, 383, 406, 407, 414, 443, 481, 482, 483, 531, 563, 691, 867, 868, 874], "1161": [8, 137, 205, 245, 383, 406, 407, 868], "cir": [8, 137, 205, 245, 383, 406, 407, 868], "101": [8, 71, 114, 137, 158, 169, 190, 195, 205, 207, 209, 232, 245, 383, 406, 407, 422, 868, 877], "e215": [8, 137, 205, 245, 383, 406, 407, 868], "534": [8, 20, 196, 209, 232], "decoding_csp_eeg": [8, 20], "decomposit": [9, 11, 14, 17, 20, 27, 28, 29, 30, 32, 38, 39, 44, 47, 52, 57, 61, 75, 77, 103, 104, 107, 108, 110, 112, 113, 124, 166, 172, 181, 196, 199, 205, 206, 222, 223, 227, 229, 230, 232, 235, 237, 241, 242, 245, 265, 267, 268, 270, 272, 273, 276, 279, 280, 281, 414, 421, 422, 427, 428, 448, 494, 524, 545, 564, 579, 597, 718, 721, 731, 737, 739, 740, 742, 743, 867, 874, 877, 892], "iter": [9, 19, 27, 35, 36, 43, 44, 56, 59, 83, 90, 93, 94, 95, 104, 112, 134, 137, 157, 169, 172, 179, 180, 195, 205, 218, 224, 231, 235, 236, 237, 245, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 289, 292, 293, 296, 304, 349, 356, 362, 367, 417, 424, 431, 455, 476, 477, 478, 479, 480, 481, 482, 515, 530, 531, 533, 535, 538, 564, 567, 574, 579, 584, 597, 631, 662, 677, 697, 698, 699, 700, 702, 703, 712, 714, 715, 716, 719, 730, 747, 750, 760, 773, 803, 819, 874, 892], "roll": [9, 109, 124, 760, 828], "laura": [9, 196, 245, 892], "gwilliam": [9, 196, 245, 892], "nyu": [9, 37, 101, 120, 134, 171, 227, 892], "jean": [9, 10, 11, 12, 13, 14, 16, 18, 72, 79, 185, 196, 200, 205, 245, 564, 573, 672, 867, 874, 892], "remi": [9, 10, 11, 12, 13, 14, 16, 18, 892], "king": [9, 10, 11, 12, 13, 14, 16, 18, 196, 245, 892], "jeanremi": [9, 10, 11, 12, 13, 14, 16, 18], "alex": [9, 32, 38, 71, 72, 83, 114, 115, 116, 120, 135, 136, 185, 231, 232, 879, 892], "barach": [9, 12, 15, 88, 196, 245, 414, 892], "create_info": [9, 14, 15, 19, 64, 66, 71, 114, 125, 159, 188, 190, 222, 266, 268, 270, 414, 421, 482, 630, 882, 892], "time_frequ": [9, 21, 32, 33, 34, 92, 103, 111, 112, 114, 166, 202, 222, 224, 229, 230, 231, 232, 240, 241, 275, 419, 422, 427, 471, 882, 890, 892], "averagetfr": [9, 112, 114, 264, 267, 268, 319, 439, 471, 715, 734, 742, 743, 744, 745, 820, 882, 892], "stratifiedkfold": [9, 10, 15, 16, 431, 892], "make_pipelin": [9, 10, 11, 12, 13, 15, 18, 137, 196, 429], "labelencod": 9, "motor": [9, 17, 20, 27, 32, 76, 83, 109, 112, 144, 181, 196, 211, 265, 270, 314, 330, 365, 383, 414, 421, 443, 496, 561, 892], "imageri": [9, 17, 20, 27, 112, 196, 265, 270, 314, 330, 365, 383, 414, 443, 496, 561, 892], "n_split": [9, 10, 12, 15, 16, 19, 431], "speed": [9, 10, 11, 19, 32, 33, 41, 42, 44, 50, 75, 82, 83, 84, 94, 103, 109, 113, 135, 141, 145, 151, 158, 161, 162, 165, 172, 179, 180, 183, 195, 196, 199, 205, 207, 209, 212, 228, 229, 235, 237, 265, 266, 272, 273, 276, 277, 279, 280, 281, 419, 420, 426, 470, 481, 482, 537, 538, 564, 654, 730, 760, 790, 792, 813, 818, 823, 849, 851, 871, 875, 880, 892], "shuffl": [9, 10, 12, 15, 232, 892], "n_cycl": [9, 32, 107, 110, 112, 114, 166, 202, 229, 230, 231, 232, 241, 427, 547, 548, 718, 721, 726, 728, 738, 739, 740, 742, 743], "mani": [9, 44, 71, 75, 112, 120, 121, 127, 140, 142, 146, 149, 150, 151, 152, 155, 158, 160, 161, 162, 166, 167, 171, 172, 177, 190, 195, 199, 200, 201, 202, 203, 205, 206, 207, 222, 224, 227, 240, 242, 256, 257, 258, 265, 266, 270, 275, 277, 298, 350, 356, 438, 443, 456, 473, 564, 661, 697, 707, 712, 713, 760, 776, 786, 803, 805, 806, 847, 849, 851, 854, 855, 867, 869, 871, 874, 876, 878, 880, 892], "cycl": [9, 107, 114, 184, 202, 241, 242, 265, 266, 343, 427, 481, 482, 547, 548, 564, 718, 721, 726, 728, 738, 739, 740, 742, 743, 784, 790, 793, 805, 813, 851, 892], "min_freq": 9, "max_freq": 9, "n_freq": [9, 114, 195, 231, 241, 419, 427, 692, 702, 703, 712, 713, 714, 715, 728, 730, 731, 737, 738, 739, 740, 742, 743], "bin": [9, 22, 27, 71, 98, 102, 120, 123, 142, 144, 171, 202, 210, 212, 213, 229, 235, 240, 242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 291, 298, 422, 481, 482, 488, 503, 588, 622, 692, 696, 697, 699, 700, 702, 703, 713, 714, 716, 784, 792, 796, 850, 851, 854, 855, 856, 857, 862, 874, 892], "tupl": [9, 115, 150, 170, 171, 172, 195, 205, 216, 218, 231, 232, 259, 260, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 288, 289, 304, 315, 324, 325, 362, 389, 414, 421, 429, 447, 448, 451, 454, 480, 481, 482, 489, 491, 492, 493, 496, 497, 498, 504, 508, 511, 518, 520, 530, 547, 548, 563, 564, 567, 572, 579, 581, 582, 584, 587, 598, 623, 629, 630, 663, 664, 665, 677, 689, 697, 699, 700, 702, 703, 704, 712, 714, 715, 716, 724, 731, 747, 750, 760, 761, 769, 774, 777, 779, 780, 782, 784, 788, 789, 791, 792, 794, 796, 798, 799, 801, 803, 806, 808, 812, 814, 815, 818, 819, 820, 822, 823, 824, 828, 892], "linspac": [9, 19, 32, 40, 42, 69, 71, 113, 117, 136, 141, 150, 172, 177, 195, 199, 206, 207, 222, 223, 242], "freq_rang": [9, 242], "infer": [9, 10, 43, 44, 113, 156, 165, 170, 202, 217, 218, 228, 232, 233, 234, 245, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 298, 299, 320, 324, 356, 360, 361, 365, 372, 373, 374, 414, 421, 444, 445, 447, 457, 458, 476, 478, 479, 481, 482, 489, 491, 496, 542, 564, 642, 690, 696, 699, 700, 701, 702, 703, 705, 712, 714, 716, 773, 798, 799, 800, 807, 813, 822, 845, 847, 858, 874, 892], "gap": [9, 127, 245, 478, 479, 481, 482, 500, 813, 874, 892], "window_spac": 9, "centered_w_tim": 9, "n_window": [9, 588], "len": [9, 10, 15, 16, 18, 19, 28, 32, 39, 41, 42, 43, 45, 47, 52, 64, 68, 69, 71, 73, 75, 90, 93, 100, 114, 117, 137, 140, 143, 144, 156, 159, 168, 176, 178, 183, 185, 191, 195, 199, 200, 201, 202, 203, 205, 207, 208, 210, 211, 212, 213, 217, 223, 224, 227, 228, 229, 231, 232, 242, 259, 260, 262, 263, 265, 266, 267, 268, 270, 274, 276, 277, 278, 289, 304, 355, 362, 416, 424, 449, 452, 481, 482, 530, 584, 661, 692, 714, 715, 728, 738, 747, 760, 765, 791, 813, 821, 822, 892], "instanti": [9, 144, 172, 196, 205, 222, 260, 262, 263, 264, 265, 266, 270, 274, 275, 277, 314, 482, 714, 716, 762, 773, 892], "encod": [9, 19, 127, 143, 144, 150, 166, 168, 172, 188, 195, 196, 209, 210, 211, 245, 251, 270, 348, 420, 489, 496, 504, 505, 506, 511, 623, 845, 847, 874, 880, 892], "le": 9, "59999": [9, 184], "374": [9, 81, 169, 209, 216, 227], "loop": [9, 32, 42, 61, 109, 120, 135, 137, 149, 177, 181, 200, 232, 237, 242, 245, 407, 435, 575, 588, 599, 760, 868, 874, 892], "init": [9, 378, 851, 856], "freq_scor": 9, "fmin": [9, 32, 103, 104, 108, 113, 114, 116, 133, 137, 222, 240, 241, 242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 419, 481, 482, 537, 538, 712, 713, 714, 715, 716, 717, 719, 720, 722, 730, 731, 741, 744, 760, 779, 814, 818, 820, 823, 824, 892], "fmax": [9, 32, 75, 103, 104, 108, 113, 114, 116, 133, 137, 166, 199, 203, 212, 222, 240, 241, 242, 265, 266, 267, 268, 419, 481, 482, 537, 538, 712, 713, 714, 715, 716, 717, 719, 720, 722, 730, 731, 741, 744, 760, 775, 814, 820, 892], "enumer": [9, 10, 15, 19, 28, 39, 40, 47, 72, 94, 96, 104, 107, 112, 114, 135, 136, 146, 149, 150, 151, 159, 195, 202, 205, 207, 211, 223, 232, 237, 242], "being": [9, 45, 114, 116, 127, 136, 160, 166, 171, 172, 200, 202, 207, 208, 210, 216, 224, 227, 229, 232, 262, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 364, 367, 448, 458, 472, 481, 482, 518, 564, 588, 590, 634, 712, 714, 716, 760, 778, 790, 791, 794, 796, 797, 814, 819, 824, 851, 873, 874, 892], "w_size": 9, "isol": [9, 45, 114, 201, 205, 207, 892], "raw_filt": [9, 114, 141, 203, 205], "pad": [9, 15, 114, 127, 227, 232, 242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 323, 449, 452, 453, 454, 481, 482, 731, 892], "drop_bad": [9, 16, 142, 151, 191, 201, 265, 266, 316, 471, 564, 714, 715, 874, 892], "fold": [9, 10, 12, 15, 16, 26, 137, 271, 276, 431, 675, 678], "roc_auc": [9, 11, 13, 196, 417, 424], "axi": [9, 10, 12, 14, 15, 16, 19, 21, 22, 28, 31, 35, 45, 58, 61, 69, 71, 73, 84, 90, 96, 100, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 127, 133, 137, 140, 141, 142, 144, 150, 151, 156, 160, 166, 172, 181, 183, 185, 191, 195, 196, 200, 202, 212, 216, 219, 222, 227, 230, 232, 235, 237, 241, 242, 245, 257, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 276, 279, 280, 281, 288, 316, 323, 367, 414, 421, 427, 434, 454, 473, 481, 482, 492, 563, 564, 578, 579, 665, 689, 691, 699, 700, 702, 703, 706, 712, 714, 716, 741, 744, 760, 773, 776, 777, 784, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 805, 807, 808, 812, 813, 814, 815, 820, 821, 822, 857, 874, 892], "701": [9, 13, 135, 232], "205": [9, 169, 184, 196, 227], "281": [9, 64, 67, 169, 232], "629": [9, 232], "165": [9, 13, 146, 169, 196, 202, 205, 209, 211, 227, 231, 232, 245], "031": [9, 128, 140, 149, 169, 184, 224], "581": [9, 209, 230, 232], "139": [9, 158, 169, 224, 227, 231, 232, 278, 892], "869": [9, 196, 209, 232], "549": [9, 191, 194, 208, 232, 245], "22": [9, 11, 13, 14, 15, 16, 19, 21, 28, 32, 34, 35, 39, 40, 44, 45, 47, 56, 81, 88, 90, 103, 104, 106, 108, 109, 110, 112, 113, 114, 127, 130, 133, 137, 150, 162, 164, 169, 171, 176, 180, 183, 188, 191, 195, 196, 205, 208, 209, 212, 215, 224, 227, 228, 229, 231, 232, 235, 236, 237, 240, 245, 265, 266, 267, 268, 270, 277, 278, 314, 337, 341, 342, 362, 407, 453, 481, 482, 502, 518, 523, 564, 567, 613, 630, 647, 656, 707, 731, 776, 804, 814, 850, 874], "121": [9, 140, 145, 166, 169, 170, 209, 227, 231, 232, 235, 239, 265, 266, 437], "756": [9, 195, 232], "523": [9, 196, 232], "bar": [9, 143, 150, 171, 183, 218, 219, 242, 262, 265, 266, 267, 268, 274, 275, 414, 417, 421, 424, 481, 482, 563, 564, 712, 714, 716, 760, 784, 789, 790, 791, 792, 796, 799, 803, 807, 812, 813, 815, 820, 829, 874, 892], "width": [9, 114, 127, 160, 171, 172, 199, 202, 203, 219, 227, 242, 263, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 315, 323, 328, 416, 425, 450, 452, 453, 473, 481, 482, 584, 586, 603, 712, 726, 728, 738, 741, 742, 744, 760, 769, 788, 789, 816, 818, 819, 823, 847, 871, 874, 892], "edgecolor": [9, 10, 241], "black": [9, 21, 45, 47, 48, 50, 112, 135, 142, 151, 160, 190, 207, 211, 262, 263, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 760, 773, 776, 777, 788, 792, 794, 798, 799, 803, 811, 812, 814, 815, 818, 820, 821, 822, 823, 892], "xtick": [9, 15, 19, 90, 127, 195, 202, 212, 227], "tf_score": 9, "center": [9, 37, 45, 69, 71, 80, 90, 95, 112, 120, 121, 151, 156, 158, 160, 170, 185, 199, 201, 202, 203, 207, 227, 242, 256, 257, 267, 268, 271, 276, 307, 423, 492, 516, 527, 564, 573, 661, 664, 669, 675, 678, 712, 750, 760, 764, 800, 811, 819, 868, 874, 879, 892], "w_tmin": 9, "w_tmax": 9, "av_tfr": 9, "newaxi": [9, 15, 28, 100, 117, 232, 235, 236, 237, 760], "white": [9, 24, 26, 41, 52, 109, 112, 116, 121, 126, 127, 133, 135, 142, 156, 158, 159, 160, 176, 178, 190, 210, 223, 227, 232, 257, 263, 265, 266, 267, 268, 271, 272, 273, 276, 278, 279, 280, 281, 372, 472, 481, 482, 516, 550, 551, 616, 634, 660, 712, 714, 716, 760, 776, 778, 788, 798, 800, 818, 821, 823, 847, 867, 892], "vmin": [9, 13, 19, 88, 107, 112, 114, 116, 117, 136, 141, 160, 176, 195, 196, 210, 211, 227, 229, 230, 241, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 760, 777, 791, 792, 799, 803, 812, 815, 820, 821, 822, 892], "red": [9, 54, 59, 71, 80, 81, 83, 100, 112, 132, 133, 142, 144, 150, 156, 160, 170, 178, 181, 190, 195, 199, 200, 203, 207, 210, 211, 213, 219, 232, 235, 241, 242, 261, 262, 263, 265, 266, 267, 268, 271, 274, 414, 421, 481, 482, 563, 564, 579, 633, 712, 714, 716, 760, 775, 777, 784, 785, 788, 791, 792, 794, 799, 803, 812, 815, 820, 822, 847, 851, 892], "722": [9, 20, 103, 232, 245, 728, 738, 739, 742], "decoding_csp_timefreq": [9, 20], "supervis": [10, 18, 88, 137, 414, 431], "class": [10, 16, 19, 61, 70, 88, 94, 95, 114, 115, 137, 140, 142, 149, 151, 157, 165, 166, 168, 171, 172, 175, 195, 201, 202, 205, 216, 219, 222, 232, 243, 244, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 289, 304, 314, 315, 367, 398, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 455, 480, 481, 482, 514, 530, 563, 564, 565, 584, 596, 662, 692, 712, 713, 714, 715, 716, 747, 748, 749, 750, 755, 756, 757, 760, 761, 762, 771, 847, 851, 859, 860, 867, 869, 874, 875, 877, 882, 883, 892], "rel": [10, 24, 32, 33, 34, 42, 62, 76, 86, 109, 112, 113, 127, 137, 140, 142, 144, 156, 166, 168, 170, 189, 192, 199, 202, 203, 207, 210, 211, 212, 218, 241, 242, 257, 258, 260, 264, 265, 266, 267, 268, 311, 360, 367, 420, 435, 438, 450, 481, 482, 527, 564, 594, 597, 613, 649, 651, 668, 705, 712, 715, 717, 718, 719, 731, 760, 773, 778, 793, 798, 807, 811, 813, 821, 847, 851, 867, 874, 877, 892], "character": [10, 13, 196, 245, 564, 674, 806, 874], "confus": [10, 15, 137, 144, 192, 672, 851], "serv": [10, 168, 217, 232, 262, 265, 266, 267, 268, 274, 282, 414, 421, 481, 482, 563, 564, 579, 712, 714, 715, 716, 758, 776, 777, 792, 799, 803, 812, 815, 820, 822, 851, 873, 874], "proxi": [10, 205, 209], "mental": [10, 13, 196, 245], "rsa": [10, 858, 868, 892], "24": [10, 11, 13, 19, 21, 26, 28, 34, 35, 45, 46, 47, 56, 65, 75, 81, 85, 93, 102, 103, 108, 109, 112, 114, 115, 123, 126, 130, 144, 148, 169, 171, 181, 183, 189, 191, 196, 209, 210, 224, 227, 228, 229, 231, 232, 236, 237, 239, 242, 245, 247, 259, 263, 265, 266, 267, 268, 270, 271, 275, 278, 298, 345, 351, 363, 365, 393, 422, 444, 445, 446, 447, 457, 478, 481, 482, 489, 496, 505, 510, 523, 531, 564, 567, 707, 711, 712, 714, 715, 716, 748, 750, 757, 760, 770, 778, 783, 790, 807, 813, 814, 822, 825, 829, 838, 867, 874], "imag": [10, 16, 27, 30, 32, 33, 35, 40, 44, 46, 55, 59, 71, 88, 112, 120, 122, 124, 127, 128, 130, 136, 143, 146, 149, 155, 156, 159, 160, 166, 170, 176, 180, 182, 190, 191, 199, 202, 205, 206, 207, 208, 224, 227, 228, 230, 231, 232, 241, 242, 245, 256, 262, 265, 266, 267, 268, 270, 274, 275, 277, 278, 280, 281, 290, 291, 292, 293, 298, 299, 305, 309, 314, 315, 323, 340, 355, 362, 368, 392, 414, 421, 476, 478, 479, 481, 482, 490, 502, 531, 563, 564, 579, 594, 596, 626, 661, 667, 668, 669, 670, 671, 672, 673, 674, 712, 714, 716, 728, 738, 748, 749, 750, 760, 761, 763, 776, 777, 778, 791, 792, 796, 798, 799, 803, 805, 812, 815, 816, 820, 821, 822, 824, 828, 830, 847, 852, 857, 858, 868, 877, 879, 892], "92": [10, 19, 34, 35, 44, 81, 103, 112, 114, 143, 169, 180, 195, 196, 201, 209, 227, 228, 229, 231, 232, 237, 527, 874], "human": [10, 19, 33, 58, 94, 113, 126, 144, 151, 155, 178, 180, 195, 224, 245, 256, 265, 266, 267, 268, 276, 291, 298, 377, 391, 416, 420, 425, 450, 452, 453, 481, 482, 569, 701, 728, 738, 739, 742, 847, 848, 858, 867, 868, 879, 880], "anim": [10, 136, 267, 268, 868, 892], "inanim": [10, 868], "bodi": [10, 207, 208, 750, 868], "part": [10, 119, 127, 140, 142, 144, 151, 155, 158, 160, 161, 162, 171, 182, 199, 202, 203, 207, 212, 216, 224, 245, 256, 265, 267, 268, 270, 271, 280, 281, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 443, 457, 458, 476, 478, 479, 481, 483, 502, 537, 538, 542, 639, 689, 699, 700, 702, 703, 712, 715, 760, 777, 796, 800, 847, 851, 852, 873, 874, 875, 877, 880, 892], "6gb": 10, "build": [10, 12, 21, 32, 45, 155, 172, 175, 191, 199, 200, 202, 227, 235, 236, 237, 849, 855, 857, 873, 880, 892], "jaakko": [10, 191, 892], "leppakanga": [10, 191, 892], "jaeilepp": [10, 191], "student": [10, 191, 851, 880], "jyu": [10, 191], "panda": [10, 14, 101, 112, 140, 143, 147, 148, 149, 151, 165, 171, 190, 191, 210, 216, 228, 240, 259, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 438, 481, 482, 626, 698, 712, 714, 715, 716, 850, 851, 874, 892], "read_csv": [10, 190, 191], "standardscal": [10, 11, 13, 18, 196, 423], "linear_model": [10, 11, 12, 13, 15, 18, 196, 880], "logisticregress": [10, 11, 13, 15, 196, 418, 429], "metric": [10, 15, 27, 36, 56, 90, 117, 137, 196, 212, 262, 267, 269, 270, 276, 366, 417, 420, 424, 530, 542, 543, 546, 562, 564, 620, 629, 631, 760, 806, 873, 882, 887, 892], "roc_auc_scor": [10, 417, 424, 882], "manifold": [10, 117, 119, 777], "md": [10, 245, 665], "visual_92_categori": [10, 171, 868, 882, 892], "stimulu": [10, 13, 33, 34, 49, 70, 72, 74, 81, 82, 90, 93, 107, 120, 140, 142, 143, 144, 146, 149, 162, 166, 167, 168, 169, 180, 183, 188, 191, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 216, 217, 218, 219, 224, 231, 237, 242, 257, 259, 265, 266, 267, 268, 270, 316, 348, 356, 420, 438, 443, 481, 482, 561, 567, 677, 712, 714, 715, 716, 847, 868, 874, 892], "fname": [10, 12, 21, 53, 66, 79, 86, 87, 112, 119, 120, 128, 131, 160, 170, 205, 257, 259, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 302, 314, 315, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 354, 444, 445, 446, 447, 481, 482, 484, 485, 486, 487, 490, 495, 499, 500, 501, 502, 505, 509, 510, 512, 513, 514, 515, 545, 549, 553, 554, 563, 564, 586, 609, 610, 611, 612, 615, 617, 618, 619, 620, 621, 622, 624, 627, 628, 629, 630, 631, 632, 635, 637, 638, 639, 640, 641, 642, 644, 646, 657, 712, 713, 714, 715, 716, 732, 733, 734, 745, 747, 754, 833, 834, 835, 836, 838, 839, 840, 843, 844, 845, 846, 878, 892], "visual_stimuli": 10, "csv": [10, 123, 191, 218, 259, 332, 338, 505, 617, 892], "cond": [10, 40, 46, 59, 62, 99, 101, 150, 232, 237, 258], "restrict": [10, 28, 29, 104, 126, 142, 151, 158, 161, 166, 178, 203, 204, 207, 208, 216, 223, 227, 230, 231, 242, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 285, 286, 298, 299, 460, 461, 481, 482, 531, 532, 533, 534, 535, 537, 538, 547, 548, 556, 557, 560, 561, 562, 675, 712, 714, 715, 716, 723, 729, 878, 892], "max_trigg": 10, "row": [10, 74, 101, 112, 127, 141, 142, 143, 144, 145, 150, 166, 169, 172, 175, 191, 196, 211, 216, 227, 228, 260, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 300, 360, 372, 414, 420, 421, 438, 481, 482, 505, 543, 546, 564, 565, 588, 697, 698, 712, 713, 714, 715, 716, 760, 786, 791, 799, 803, 806, 874, 877, 892], "cond_tag": 10, "els": [10, 15, 28, 31, 40, 47, 94, 96, 114, 151, 160, 175, 191, 202, 207, 216, 227, 242, 262, 263, 265, 266, 267, 268, 270, 274, 289, 304, 414, 421, 481, 482, 522, 530, 564, 565, 584, 661, 667, 668, 669, 670, 671, 672, 673, 674, 695, 714, 716, 739, 740, 747, 788, 792, 813, 850, 851, 875, 892], "str": [10, 30, 39, 41, 101, 128, 143, 145, 150, 171, 183, 195, 228, 242, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 605, 606, 607, 608, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 634, 635, 636, 637, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 688, 689, 691, 693, 695, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 730, 731, 734, 735, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 752, 755, 756, 757, 759, 760, 763, 765, 768, 770, 772, 775, 776, 777, 778, 779, 780, 781, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 829, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 851, 892], "bodypart": 10, "natur": [10, 19, 126, 172, 195, 213, 231, 245, 391, 420, 454, 603, 868, 874, 877, 892], "n_run": 10, "sample_subject_": 10, "_tsss_mc": 10, "on_split_miss": [10, 481, 502, 892], "ignor": [10, 41, 47, 70, 81, 109, 135, 140, 146, 151, 162, 166, 172, 181, 184, 191, 199, 200, 201, 207, 227, 257, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 283, 284, 285, 286, 298, 299, 318, 326, 341, 350, 351, 356, 360, 362, 363, 365, 367, 372, 373, 378, 380, 381, 382, 385, 386, 387, 389, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 421, 423, 433, 441, 443, 448, 450, 455, 461, 464, 471, 476, 478, 479, 481, 482, 483, 492, 494, 498, 502, 510, 542, 559, 563, 564, 567, 575, 588, 599, 619, 623, 625, 626, 634, 648, 650, 653, 660, 661, 677, 699, 701, 712, 714, 715, 716, 757, 777, 788, 789, 790, 792, 793, 796, 799, 803, 804, 812, 813, 814, 815, 820, 822, 838, 840, 842, 847, 851, 892], "filenam": [10, 43, 44, 72, 74, 77, 81, 82, 83, 93, 127, 135, 140, 141, 146, 151, 156, 157, 167, 168, 172, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 224, 257, 259, 260, 262, 265, 266, 267, 268, 271, 275, 278, 289, 302, 311, 314, 353, 354, 444, 445, 447, 457, 467, 473, 480, 481, 482, 485, 501, 502, 507, 512, 514, 525, 526, 610, 615, 617, 622, 624, 626, 628, 629, 632, 633, 634, 635, 638, 642, 646, 650, 657, 661, 677, 713, 732, 754, 760, 768, 813, 833, 834, 835, 837, 840, 841, 842, 845, 857, 892], "min_dur": [10, 212, 213, 455, 566], "002": [10, 13, 32, 33, 56, 57, 121, 128, 140, 141, 142, 145, 149, 166, 169, 188, 195, 196, 201, 202, 204, 207, 212, 216, 219, 224, 245, 455], "specif": [10, 19, 27, 43, 44, 45, 71, 105, 106, 112, 120, 127, 135, 137, 141, 143, 144, 150, 151, 155, 160, 161, 170, 171, 172, 175, 189, 190, 191, 192, 199, 200, 202, 203, 205, 207, 208, 210, 212, 213, 216, 219, 224, 227, 228, 229, 232, 240, 241, 242, 245, 259, 261, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 279, 280, 281, 288, 298, 314, 414, 421, 438, 443, 445, 449, 455, 481, 482, 483, 496, 516, 540, 541, 561, 562, 563, 564, 570, 575, 579, 587, 588, 599, 633, 639, 661, 691, 698, 712, 713, 714, 715, 716, 760, 779, 784, 791, 792, 799, 803, 812, 813, 815, 818, 820, 821, 823, 824, 841, 847, 851, 855, 858, 866, 868, 873, 874, 875, 877, 880, 881, 892], "appel": 10, "dissimilar": 10, "rdm": 10, "cichi": [10, 245, 868], "et": [10, 16, 19, 21, 195, 202, 204, 242, 256, 265, 266, 572, 874, 879, 892], "al": [10, 16, 19, 21, 195, 202, 204, 242, 265, 266, 572, 874, 892], "multiclass": [10, 245, 414, 431, 892], "multinomi": 10, "logist": [10, 11, 15, 18, 196], "paper": [10, 16, 202, 206, 245, 298, 476, 531, 564, 672, 866, 874], "pairwis": [10, 47, 71, 117, 245, 572], "binari": [10, 99, 160, 192, 196, 217, 263, 415, 431, 455, 497, 498, 503, 506, 621, 692, 698, 710, 837, 849, 856, 857, 874, 877, 892], "roc": [10, 13, 673], "auc": [10, 13, 196, 673], "final": [10, 16, 19, 42, 68, 70, 71, 83, 84, 112, 113, 114, 127, 137, 140, 141, 144, 146, 150, 151, 156, 160, 162, 166, 171, 179, 181, 182, 190, 195, 200, 201, 205, 206, 207, 210, 211, 213, 227, 229, 231, 232, 235, 237, 242, 265, 266, 267, 268, 320, 331, 420, 457, 481, 482, 662, 830, 851, 867, 871, 873, 892], "sake": [10, 127, 201, 231, 878], "did": [10, 11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 61, 83, 104, 107, 108, 110, 124, 160, 161, 162, 166, 170, 172, 175, 176, 181, 202, 205, 207, 208, 222, 223, 235, 237, 270, 278, 869, 877, 892], "instant": [10, 13, 42, 120, 177, 183, 196, 263, 267, 268, 288, 355, 457, 686, 687, 688, 712, 717, 718, 719, 720, 721, 722, 723, 795, 797, 799], "50m": 10, "300m": 10, "focu": [10, 12, 83, 127, 144, 201, 202, 857, 892], "liblinear": [10, 11, 13, 15, 18, 196], "multi_class": [10, 15], "y_pred": [10, 12, 19, 137, 417, 420, 424, 892], "probabilist": [10, 245, 356, 417, 424, 874, 880], "necessari": [10, 21, 31, 74, 94, 127, 135, 146, 151, 155, 156, 158, 160, 161, 166, 169, 171, 180, 199, 201, 202, 203, 204, 205, 206, 207, 213, 216, 217, 222, 227, 258, 265, 266, 267, 268, 269, 272, 273, 276, 277, 279, 280, 281, 298, 299, 318, 320, 327, 360, 378, 414, 421, 423, 438, 449, 457, 480, 481, 482, 489, 496, 501, 531, 599, 607, 617, 624, 628, 656, 676, 712, 714, 715, 716, 760, 799, 818, 823, 847, 851, 867, 868, 872, 873, 874, 877, 892], "predict_proba": [10, 417, 424], "ii": [10, 15, 19, 39, 93, 99, 107, 119, 135, 159, 183, 185, 190, 195, 212, 227, 237, 245, 272, 273, 276, 279, 280, 281, 322, 417, 424, 490, 564, 661, 698, 777, 892], "train_class": 10, "jj": 10, "im": [10, 13, 15, 22, 71, 115, 136, 196, 763, 822, 830, 892], "matshow": [10, 13], "rdbu_r": [10, 13, 16, 19, 22, 107, 114, 195, 196, 229, 230, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 791, 792, 796, 799, 803, 812, 815, 820, 821, 822, 851], "set_ytick": 10, "set_yticklabel": [10, 112], "set_xtick": [10, 242], "set_xticklabel": [10, 242], "colorbar": [10, 13, 15, 22, 71, 72, 107, 112, 114, 115, 116, 120, 127, 136, 142, 146, 150, 176, 182, 196, 207, 211, 219, 227, 228, 229, 231, 232, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 414, 421, 481, 482, 563, 564, 579, 712, 713, 714, 716, 760, 774, 777, 779, 784, 785, 786, 791, 792, 796, 797, 799, 803, 812, 815, 818, 820, 821, 822, 823, 824, 892], "tight_layout": [10, 12, 15, 19, 39, 41, 58, 71, 73, 86, 114, 115, 120, 176, 181, 195, 202, 207, 210, 211, 224, 227, 231, 232, 892], "relat": [10, 12, 19, 27, 32, 33, 34, 71, 78, 101, 105, 106, 112, 117, 128, 132, 136, 144, 146, 153, 154, 155, 158, 160, 162, 165, 166, 172, 173, 178, 188, 189, 192, 195, 196, 199, 201, 202, 204, 205, 206, 209, 210, 211, 218, 228, 235, 241, 242, 245, 265, 266, 267, 268, 270, 275, 288, 316, 331, 355, 397, 420, 421, 438, 450, 455, 471, 481, 482, 555, 564, 572, 626, 661, 691, 712, 728, 738, 742, 760, 773, 781, 784, 791, 806, 807, 813, 821, 832, 847, 849, 851, 854, 866, 868, 869, 871, 872, 873, 874, 875, 880, 892], "histor": [10, 150, 264, 265, 266, 267, 268, 337, 712, 715, 874, 880, 892], "summar": [10, 45, 113, 151, 203, 205, 216, 265, 266, 272, 273, 276, 279, 280, 281, 784, 791, 867, 873, 878, 892], "dimension": [10, 150, 175, 196, 200, 206, 207, 216, 232, 235, 236, 237, 245, 267, 268, 272, 273, 276, 279, 280, 281, 356, 422, 427, 429, 564, 692, 712, 760, 794, 847, 874, 892], "reduct": [10, 17, 20, 27, 114, 191, 203, 211, 212, 245, 265, 266, 267, 268, 270, 372, 376, 413, 422, 428, 481, 561, 564, 565, 599, 607, 626, 740, 743, 892], "multi": [10, 16, 27, 36, 46, 56, 83, 104, 126, 170, 189, 196, 202, 235, 236, 237, 245, 262, 263, 265, 266, 267, 268, 269, 270, 274, 280, 304, 391, 414, 415, 419, 421, 430, 453, 455, 457, 479, 481, 482, 525, 530, 531, 533, 537, 538, 542, 563, 564, 578, 579, 618, 620, 621, 646, 712, 714, 716, 730, 735, 777, 792, 799, 803, 812, 815, 820, 822, 826, 858, 874, 877, 892], "cluster": [10, 27, 98, 102, 112, 165, 228, 233, 234, 238, 239, 242, 245, 265, 267, 268, 270, 276, 277, 278, 320, 355, 362, 437, 455, 481, 530, 531, 545, 561, 626, 639, 641, 646, 684, 692, 693, 695, 699, 700, 702, 703, 704, 715, 742, 760, 819, 889, 892], "togeth": [10, 43, 71, 75, 141, 149, 151, 166, 172, 175, 188, 199, 205, 207, 210, 211, 213, 216, 222, 232, 265, 266, 267, 268, 275, 284, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 436, 457, 458, 476, 478, 479, 481, 482, 506, 542, 564, 598, 625, 642, 645, 699, 700, 702, 703, 730, 800, 840, 845, 847, 851, 892], "precomput": [10, 156, 171, 181, 191, 265, 266, 362, 481, 482, 564, 660, 790, 807, 813, 892], "colormap": [10, 24, 58, 109, 112, 113, 116, 127, 136, 142, 160, 207, 242, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 414, 421, 481, 482, 563, 564, 579, 704, 712, 713, 714, 716, 760, 775, 777, 779, 784, 786, 791, 792, 796, 799, 802, 803, 812, 815, 816, 818, 820, 821, 822, 823, 824, 842, 851, 892], "rainbow": 10, "sel": [10, 31, 228, 555, 558, 560, 561, 646, 713], "this_nam": 10, "scatter": [10, 45, 115, 227, 778, 892], "facecolor": [10, 47, 151, 227], "scatterpoint": 10, "ncol": [10, 15, 74, 112, 120, 127, 137, 146, 151, 176, 183, 211, 267, 268, 414, 421, 564, 799, 803, 877, 892], "shepard": [10, 245], "multidimension": [10, 227, 245, 417, 424, 431], "tree": [10, 245, 877], "scienc": [10, 13, 33, 40, 101, 113, 180, 196, 224, 228, 242, 245, 256, 291, 298, 397, 478, 531, 564, 868, 874, 879], "210": [10, 13, 35, 81, 87, 124, 150, 169, 196, 212, 227, 231, 232, 245], "4468": [10, 19, 245], "390": [10, 12, 21, 81, 196, 209, 232, 245], "398": [10, 81, 196, 227, 232, 245], "1980": [10, 151, 245], "1126": [10, 245], "aarr": [10, 245], "laakso": [10, 245], "garrison": [10, 245], "cottrel": [10, 245], "content": [10, 27, 105, 158, 166, 169, 172, 202, 203, 206, 211, 219, 241, 245, 265, 266, 269, 275, 390, 391, 446, 514, 768, 784, 791, 847, 851, 856, 892], "assess": [10, 13, 137, 156, 162, 170, 199, 213, 245, 531, 542, 564, 669, 674, 871, 874], "neural": [10, 18, 19, 22, 27, 33, 63, 67, 71, 72, 83, 117, 137, 151, 178, 180, 196, 199, 202, 205, 208, 212, 224, 242, 243, 245, 270, 291, 298, 299, 376, 414, 418, 420, 421, 476, 481, 482, 564, 573, 597, 847, 852, 868, 892], "philosoph": [10, 245, 531, 874], "76": [10, 13, 16, 18, 19, 34, 35, 46, 47, 80, 81, 103, 108, 109, 114, 119, 159, 169, 176, 191, 195, 196, 209, 227, 228, 229, 231, 232, 235, 236, 237, 245, 693, 777], "09515080050002726": [10, 245], "nikolau": [10, 245], "kriegeskort": [10, 245], "mariek": [10, 245], "mur": [10, 245], "peter": [10, 180, 240, 245, 265, 266, 267, 268, 481, 482, 531, 564, 714, 716, 731, 741, 744, 874, 892], "bandettini": [10, 245], "connect": [10, 38, 47, 71, 160, 166, 171, 213, 224, 227, 245, 271, 290, 292, 298, 299, 378, 603, 692, 699, 700, 702, 703, 708, 780, 857, 858, 863, 882, 892], "branch": [10, 245, 851], "neuro": [10, 86, 245, 892], "06": [10, 19, 20, 26, 35, 41, 44, 45, 46, 50, 52, 56, 59, 72, 76, 84, 85, 94, 100, 102, 103, 106, 108, 155, 158, 174, 176, 179, 181, 183, 187, 195, 202, 207, 209, 215, 227, 228, 229, 231, 232, 234, 237, 245, 277, 362, 422, 476, 573, 847, 850], "radoslaw": [10, 245, 868], "aud": [10, 28, 29, 37, 39, 49, 92, 99, 104, 107, 108, 150, 232, 245, 265, 784, 868], "oliva": [10, 245, 868], "resolv": [10, 180, 205, 210, 245, 723, 855, 868, 892], "recognit": [10, 46, 101, 151, 202, 245, 741, 744, 868], "455": [10, 13, 196, 227, 232, 245, 278, 868], "462": [10, 13, 181, 187, 196, 232, 245, 278, 868], "2014": [10, 12, 13, 18, 19, 40, 72, 113, 121, 151, 162, 196, 202, 245, 267, 268, 356, 418, 420, 421, 422, 432, 478, 573, 603, 694, 741, 744, 866, 868, 871], "1038": [10, 13, 126, 195, 245, 391, 420, 868], "nn": [10, 178, 245, 278, 661, 868, 877, 892], "3635": [10, 245, 868], "decoding_rsa_sgskip": [10, 20], "cortic": [11, 24, 26, 27, 31, 32, 41, 43, 58, 78, 80, 85, 90, 94, 109, 113, 122, 130, 155, 158, 163, 165, 166, 172, 175, 178, 180, 186, 191, 200, 224, 227, 236, 245, 257, 262, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 285, 286, 298, 299, 362, 366, 392, 448, 459, 476, 478, 479, 481, 516, 531, 532, 533, 534, 535, 538, 542, 547, 548, 561, 562, 580, 616, 619, 620, 631, 634, 641, 669, 672, 674, 675, 676, 677, 678, 708, 760, 771, 819, 847, 849, 852, 855, 858, 868, 877, 880, 892], "univari": [11, 165, 196, 227, 228, 233, 234, 245, 265, 270, 481, 561, 626, 693, 695, 696, 700, 715, 742, 889, 892], "confin": [11, 47, 158, 231, 291, 874], "potenti": [11, 15, 47, 71, 72, 74, 79, 88, 101, 117, 127, 128, 141, 144, 153, 154, 165, 168, 172, 196, 200, 202, 204, 208, 227, 228, 231, 242, 245, 265, 266, 267, 268, 270, 271, 276, 311, 316, 355, 362, 372, 397, 453, 470, 471, 481, 482, 483, 555, 565, 572, 573, 626, 675, 678, 698, 705, 775, 784, 791, 821, 832, 867, 868, 871, 873, 874, 892], "relev": [11, 12, 26, 101, 112, 126, 151, 169, 180, 196, 202, 203, 204, 211, 245, 278, 375, 421, 564, 581, 711, 803, 805, 851, 866, 867, 871, 874, 877], "eric": [11, 19, 22, 26, 34, 39, 50, 57, 66, 73, 80, 84, 93, 94, 109, 118, 120, 123, 126, 127, 129, 135, 136, 155, 157, 159, 179, 180, 182, 183, 184, 191, 195, 196, 209, 227, 231, 232, 235, 236, 237, 245, 271, 276, 392, 531, 607, 677, 699, 700, 702, 703, 866, 868, 879, 892], "larson": [11, 19, 22, 26, 34, 39, 50, 57, 66, 73, 80, 84, 93, 94, 109, 118, 120, 123, 126, 127, 129, 135, 136, 159, 179, 180, 182, 183, 184, 191, 195, 196, 209, 227, 231, 235, 236, 237, 245, 265, 266, 267, 268, 271, 276, 392, 481, 482, 607, 677, 866, 868, 879, 892], "feature_select": 11, "selectkbest": 11, "f_classif": 11, "apply_inverse_epoch": [11, 28, 45, 272, 273, 276, 279, 280, 281, 531, 532, 534, 535, 882, 892], "read_inverse_oper": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 61, 104, 107, 108, 110, 124, 166, 181, 223, 235, 237, 549, 882], "cross_val_multiscor": [11, 196, 882, 892], "linearmodel": [11, 18, 196, 882, 892], "slidingestim": [11, 196, 431, 882, 892], "get_coef": [11, 18, 196, 882, 892], "meg_path": [11, 13, 14, 15, 16, 22, 28, 30, 31, 35, 37, 39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 69, 70, 72, 73, 77, 79, 86, 87, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 117, 118, 121, 131, 132, 133, 178, 179, 180, 181, 196, 224, 229, 230, 231, 232, 235, 236, 237], "fname_fwd": [11, 32, 33, 34, 41, 42, 43, 47, 48, 49, 54, 58, 177, 179, 223], "sample_audvi": [11, 22, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 65, 69, 79, 86, 87, 90, 92, 93, 94, 95, 104, 107, 108, 110, 116, 119, 120, 124, 127, 131, 134, 149, 150, 166, 172, 175, 176, 177, 178, 179, 180, 181, 196, 223, 224, 235, 236, 237, 257, 265, 266, 267, 268, 481, 482], "sample_audvis_filt": [11, 13, 14, 15, 16, 18, 28, 42, 49, 70, 73, 74, 77, 88, 96, 97, 99, 100, 117, 121, 132, 133, 141, 145, 151, 152, 166, 169, 172, 177, 180, 196, 201, 205, 232, 235, 237, 874], "40_raw": [11, 13, 14, 15, 16, 18, 28, 42, 49, 70, 73, 74, 77, 88, 96, 97, 99, 100, 117, 121, 132, 133, 141, 145, 151, 152, 166, 169, 172, 177, 180, 196, 201, 205, 232, 235, 237, 874], "event_fnam": [11, 14, 15, 16, 18, 70, 88, 96, 97, 100, 117, 121, 132, 230, 231, 232, 235, 237], "ev": [11, 13, 14, 15, 16, 18, 28, 70, 88, 94, 96, 97, 100, 103, 104, 117, 121, 132, 140, 145, 151, 172, 201, 217, 230, 231, 232, 235, 237, 257, 626, 627, 837, 871, 892], "fname_cov": [11, 41, 48, 49, 50, 54, 55, 58, 65, 94, 176, 179, 181], "fname_inv": [11, 28, 29, 30, 38, 39, 44, 47, 57, 61, 104, 107, 108, 110, 124, 181, 223, 235, 237], "inv": [11, 28, 29, 30, 38, 39, 44, 45, 47, 52, 57, 61, 94, 104, 107, 108, 110, 124, 156, 158, 160, 166, 172, 177, 178, 179, 181, 182, 191, 196, 223, 224, 235, 237, 257, 448, 536, 539, 542, 544, 545, 549, 817, 851, 867, 874, 892], "aud_r": [11, 14, 15, 42, 231], "vis_r": [11, 14, 15, 42, 88, 231], "contra": 11, "setup": [11, 15, 16, 18, 24, 43, 44, 45, 70, 71, 73, 88, 96, 97, 100, 107, 108, 110, 117, 132, 155, 229, 230, 235, 237, 241, 258, 278, 378, 455, 850, 851, 852, 853, 855, 857, 868, 872, 877, 892], "read_ev": [11, 13, 14, 15, 16, 18, 28, 70, 88, 94, 96, 97, 100, 103, 104, 117, 121, 132, 140, 145, 151, 201, 217, 230, 231, 232, 235, 237, 266, 455, 623, 837, 847, 882, 892], "modifi": [11, 62, 70, 117, 140, 149, 150, 151, 161, 165, 168, 169, 172, 173, 174, 182, 196, 200, 206, 208, 211, 218, 222, 227, 231, 240, 245, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 279, 280, 281, 282, 288, 314, 320, 342, 363, 365, 366, 367, 388, 414, 416, 418, 419, 421, 422, 423, 425, 426, 428, 429, 436, 473, 476, 481, 482, 489, 496, 513, 528, 531, 544, 555, 556, 557, 560, 563, 564, 585, 587, 591, 595, 596, 598, 599, 600, 601, 602, 614, 631, 647, 653, 656, 663, 664, 665, 666, 694, 705, 706, 712, 713, 714, 715, 716, 729, 731, 756, 760, 763, 776, 781, 795, 797, 813, 827, 828, 867, 868, 874, 877, 892], "your": [11, 31, 47, 70, 71, 94, 95, 117, 121, 127, 135, 140, 141, 142, 149, 151, 155, 157, 158, 159, 161, 162, 166, 167, 168, 172, 177, 181, 182, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 216, 217, 218, 227, 240, 241, 242, 257, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 282, 298, 299, 311, 320, 331, 334, 337, 356, 360, 361, 372, 373, 374, 392, 414, 421, 438, 455, 457, 458, 476, 478, 479, 481, 482, 492, 497, 542, 550, 563, 564, 567, 574, 581, 587, 599, 617, 623, 698, 712, 714, 715, 716, 760, 790, 797, 800, 806, 807, 813, 818, 830, 849, 854, 855, 856, 857, 858, 859, 866, 867, 868, 869, 870, 871, 872, 874, 877, 892], "2443": [11, 42, 74, 77, 88, 92, 93, 107, 108, 110, 111, 117, 121, 146, 166, 167, 168, 169, 177, 180, 196, 199, 200, 201, 206, 207, 210, 216, 217, 218, 219, 224, 229, 230, 231, 235, 237], "grad": [11, 16, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 60, 62, 77, 79, 86, 87, 93, 94, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 123, 124, 127, 131, 132, 140, 142, 145, 150, 152, 156, 157, 158, 162, 166, 169, 170, 172, 176, 177, 178, 179, 180, 181, 183, 196, 200, 201, 207, 209, 210, 216, 222, 223, 224, 229, 230, 231, 235, 237, 240, 241, 257, 260, 262, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 298, 299, 313, 320, 321, 340, 356, 360, 361, 372, 373, 374, 376, 414, 421, 423, 457, 458, 476, 478, 479, 481, 482, 519, 526, 542, 561, 562, 563, 564, 569, 574, 576, 577, 579, 581, 582, 588, 652, 698, 712, 714, 715, 716, 783, 784, 790, 791, 792, 794, 796, 798, 799, 800, 803, 813, 815, 816, 820, 821, 822, 847, 867, 874, 877, 892], "4000e": [11, 16, 28, 42, 45, 46, 77, 96, 97, 100, 103, 104, 107, 110, 113, 117, 121, 132, 152, 166, 177, 180, 196, 207, 229, 230, 231, 235, 237, 241, 260, 265, 266, 361, 564, 581, 582, 698, 867], "150e": [11, 16, 28, 42, 45, 96, 97, 100, 104, 107, 110, 117, 141, 142, 152, 166, 177, 180, 196, 207, 229, 230, 231, 232, 235, 237, 265, 266, 275, 481, 482, 790, 813, 867, 874], "v1": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 77, 79, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 189, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 235, 237, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 303, 306, 309, 310, 314, 318, 324, 325, 326, 350, 367, 414, 421, 433, 441, 464, 473, 475, 481, 482, 489, 496, 497, 515, 521, 522, 540, 541, 549, 563, 564, 566, 572, 578, 579, 585, 598, 600, 609, 614, 623, 648, 650, 656, 667, 668, 669, 670, 671, 672, 673, 674, 681, 712, 713, 714, 715, 716, 724, 726, 731, 749, 750, 760, 769, 777, 781, 784, 788, 790, 792, 794, 795, 799, 801, 803, 804, 805, 807, 810, 811, 812, 813, 815, 820, 822, 826, 836, 838, 843], "idl": [11, 13, 14, 15, 16, 18, 26, 28, 29, 42, 45, 49, 62, 69, 70, 72, 73, 74, 77, 83, 84, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 110, 111, 117, 118, 121, 123, 127, 129, 131, 132, 133, 141, 142, 146, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 177, 180, 182, 183, 191, 196, 199, 203, 204, 205, 206, 207, 209, 210, 216, 219, 223, 224, 229, 230, 231, 232, 235, 237], "v2": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 77, 79, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 189, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 235, 237, 245, 391, 599, 892], "v3": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 74, 77, 79, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 140, 141, 142, 146, 149, 150, 151, 152, 156, 157, 158, 160, 162, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 181, 182, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 235, 237], "refer": [11, 14, 22, 27, 28, 29, 30, 31, 38, 39, 41, 45, 47, 48, 49, 50, 52, 57, 61, 62, 65, 68, 69, 70, 73, 74, 77, 78, 81, 82, 85, 86, 87, 90, 92, 93, 95, 96, 97, 99, 100, 104, 107, 108, 110, 116, 120, 124, 127, 132, 133, 145, 149, 150, 152, 156, 158, 159, 165, 166, 167, 169, 170, 172, 175, 177, 179, 181, 182, 188, 192, 201, 209, 214, 215, 216, 223, 235, 237, 241, 242, 245, 257, 258, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 277, 278, 282, 291, 298, 299, 301, 303, 304, 337, 356, 361, 362, 372, 383, 388, 391, 392, 395, 396, 397, 406, 407, 414, 415, 418, 420, 421, 422, 424, 430, 432, 435, 438, 440, 453, 476, 478, 479, 481, 482, 492, 506, 526, 527, 531, 532, 542, 546, 561, 562, 563, 564, 565, 569, 572, 573, 575, 576, 577, 578, 579, 580, 588, 597, 599, 600, 603, 606, 607, 614, 651, 653, 656, 661, 665, 669, 672, 674, 677, 694, 696, 698, 699, 700, 701, 702, 703, 705, 706, 712, 714, 715, 716, 720, 721, 722, 723, 724, 726, 728, 730, 731, 738, 739, 741, 742, 744, 760, 762, 776, 777, 792, 799, 800, 803, 804, 807, 812, 814, 815, 820, 822, 832, 847, 855, 866, 873, 875, 877, 892], "6450": [11, 13, 14, 15, 16, 18, 28, 42, 49, 70, 73, 74, 77, 88, 96, 97, 99, 100, 117, 121, 132, 133, 141, 151, 152, 166, 169, 172, 177, 180, 196, 205, 232, 235, 237], "48149": [11, 13, 14, 15, 16, 18, 28, 42, 49, 70, 73, 74, 77, 88, 96, 97, 99, 100, 117, 121, 132, 133, 141, 151, 152, 166, 169, 172, 177, 180, 196, 205, 232, 235, 237], "956": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 69, 70, 72, 73, 74, 77, 80, 83, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 110, 111, 117, 118, 121, 123, 127, 132, 133, 141, 143, 146, 151, 152, 156, 161, 162, 164, 166, 167, 168, 169, 172, 177, 180, 182, 196, 199, 203, 204, 205, 206, 207, 208, 216, 219, 223, 224, 229, 230, 231, 232, 235, 237], "320": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 69, 70, 72, 73, 74, 77, 81, 83, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 117, 118, 121, 123, 127, 132, 133, 140, 141, 146, 149, 151, 152, 156, 162, 166, 167, 168, 169, 171, 172, 177, 180, 182, 196, 199, 200, 203, 204, 205, 206, 207, 209, 216, 219, 221, 223, 224, 229, 230, 231, 232, 235, 237, 413], "665": [11, 13, 14, 15, 16, 18, 28, 42, 49, 70, 73, 74, 77, 88, 90, 94, 95, 96, 97, 99, 100, 117, 121, 132, 133, 141, 151, 152, 166, 169, 172, 177, 180, 195, 196, 205, 232, 235, 237], "41699": [11, 13, 14, 15, 16, 18, 42, 73, 74, 88, 99, 121, 133, 141, 152, 166, 196, 232], "277": [11, 13, 14, 15, 16, 18, 42, 72, 73, 74, 88, 99, 121, 133, 141, 152, 166, 167, 169, 182, 196, 201, 204, 209, 216, 227, 232], "709": [11, 13, 14, 15, 16, 18, 42, 73, 74, 88, 99, 121, 133, 141, 152, 166, 196, 232], "199": [11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 79, 86, 87, 116, 119, 120, 127, 149, 169, 172, 176, 178, 179, 181, 183, 191, 209, 210, 222, 227, 231, 232, 237, 245, 726, 728, 738, 742], "325": [11, 74, 112, 169], "143": [11, 49, 74, 169, 196, 201, 209, 210, 227, 231, 232, 245, 278], "19979521315838786": [11, 28, 62, 70, 72, 73, 80, 93, 94, 96, 97, 100, 103, 104, 107, 110, 117, 132, 142, 145, 149, 150, 152, 166, 172, 177, 180, 182, 200, 201, 204, 223, 230, 231, 235, 237], "151": [11, 21, 120, 151, 169, 172, 196, 205, 209, 227, 231, 232, 237, 278], "prior": [11, 12, 18, 27, 28, 29, 30, 34, 36, 38, 39, 40, 44, 47, 52, 56, 57, 58, 61, 90, 104, 107, 108, 110, 113, 124, 142, 149, 151, 162, 166, 172, 178, 179, 180, 181, 192, 196, 205, 208, 210, 212, 219, 223, 232, 235, 237, 262, 263, 267, 269, 270, 276, 298, 299, 458, 459, 476, 477, 478, 479, 481, 482, 498, 530, 531, 542, 564, 574, 588, 599, 620, 629, 631, 760, 787, 788, 813, 819, 874, 877, 880, 892], "061": [11, 16, 28, 32, 33, 45, 46, 62, 72, 73, 74, 93, 94, 96, 100, 107, 113, 117, 140, 145, 151, 152, 166, 167, 168, 169, 172, 177, 180, 199, 200, 201, 204, 205, 206, 207, 210, 216, 217, 218, 219, 227, 228, 229, 230, 231, 232, 235, 237, 241, 245, 699, 700, 702, 703], "read_cov": [11, 31, 35, 40, 41, 45, 48, 49, 50, 51, 54, 55, 58, 59, 60, 65, 69, 92, 94, 162, 178, 179, 262, 836, 871, 882], "366": [11, 22, 31, 35, 40, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 65, 69, 81, 90, 92, 93, 94, 95, 112, 131, 144, 149, 169, 172, 178, 179, 196, 223, 224, 232], "305": [11, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 77, 79, 87, 88, 94, 104, 107, 108, 109, 110, 121, 124, 140, 150, 152, 162, 166, 169, 172, 176, 177, 178, 179, 180, 181, 208, 209, 223, 227, 234, 235, 237, 245, 265, 266, 267, 268, 481, 482, 656], "22494": [11, 22, 28, 29, 35, 38, 39, 52, 57, 61, 104, 107, 108, 110, 124, 166, 172, 181, 235, 237], "diagon": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 61, 71, 104, 107, 108, 110, 124, 166, 172, 180, 181, 196, 223, 224, 235, 237, 245, 262, 298, 299, 356, 374, 519, 531, 539, 874, 877, 892], "retriev": [11, 196, 205, 209, 241, 330, 331, 351, 432, 489, 496, 629, 892], "lh_data": [11, 116, 175, 237, 276, 279], "hemispher": [11, 24, 27, 40, 43, 47, 52, 68, 122, 126, 127, 130, 141, 151, 155, 158, 175, 178, 183, 235, 236, 237, 261, 271, 272, 273, 276, 277, 278, 279, 280, 281, 326, 362, 391, 472, 516, 616, 634, 636, 639, 660, 675, 683, 708, 759, 760, 818, 823, 842, 877, 892], "prepar": [11, 12, 19, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 61, 79, 87, 90, 94, 104, 107, 108, 109, 110, 119, 124, 150, 166, 171, 177, 178, 179, 181, 182, 191, 196, 200, 207, 223, 224, 229, 235, 309, 320, 331, 372, 373, 531, 532, 533, 534, 535, 537, 538, 544, 547, 548, 600, 851, 877, 892], "seri": [11, 16, 27, 28, 29, 31, 36, 41, 56, 72, 81, 90, 93, 94, 95, 111, 137, 161, 168, 175, 180, 181, 188, 205, 206, 219, 224, 237, 242, 245, 264, 265, 266, 267, 268, 271, 272, 273, 276, 278, 279, 280, 281, 298, 299, 356, 417, 424, 427, 448, 482, 530, 531, 534, 545, 564, 569, 573, 629, 633, 698, 699, 700, 712, 713, 715, 717, 718, 719, 728, 737, 738, 773, 784, 824, 847, 849, 851, 874, 892], "time_decod": [11, 196], "31": [11, 13, 19, 28, 32, 34, 35, 43, 45, 47, 76, 81, 82, 83, 103, 106, 108, 109, 112, 114, 151, 159, 160, 164, 169, 180, 183, 185, 191, 195, 196, 198, 205, 209, 211, 224, 226, 227, 228, 229, 231, 232, 235, 236, 237, 240, 245, 265, 266, 278, 337, 542, 669, 674, 874, 892], "77it": [11, 13, 19, 34, 108, 112, 123, 195, 196, 209, 227, 231, 232, 237], "87it": [11, 19, 34, 109, 195, 196, 209, 227, 228, 230, 231, 232, 236], "92it": [11, 13, 19, 34, 112, 195, 196, 209, 227, 228, 229, 231, 232], "21": [11, 13, 19, 28, 34, 35, 41, 44, 45, 46, 47, 56, 65, 71, 81, 103, 108, 109, 112, 114, 140, 145, 148, 150, 160, 168, 169, 171, 172, 183, 188, 191, 195, 196, 199, 209, 213, 215, 216, 227, 228, 229, 231, 232, 236, 237, 242, 245, 262, 263, 265, 266, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 286, 298, 299, 360, 362, 407, 414, 448, 453, 467, 481, 482, 518, 523, 544, 563, 564, 572, 574, 575, 581, 582, 588, 599, 634, 642, 656, 661, 704, 777, 778, 788, 792, 793, 794, 795, 799, 800, 801, 805, 812, 813, 815, 817, 818, 820, 822, 826, 842, 845, 849, 850, 868, 874], "47it": [11, 13, 19, 103, 195, 209, 224, 227, 228, 229, 231, 232, 236, 237], "64it": [11, 13, 19, 33, 34, 103, 108, 109, 112, 195, 196, 209, 227, 228, 231, 232, 237], "84it": [11, 13, 19, 34, 103, 109, 195, 196, 209, 227, 228, 231, 232], "80it": [11, 13, 19, 34, 103, 108, 109, 112, 195, 196, 209, 227, 228, 229, 231, 232, 237], "29": [11, 13, 19, 21, 24, 28, 34, 35, 41, 45, 47, 50, 81, 103, 108, 109, 113, 114, 123, 137, 143, 154, 156, 157, 158, 169, 171, 174, 176, 183, 184, 185, 187, 195, 196, 203, 207, 209, 210, 211, 213, 215, 223, 226, 227, 228, 229, 231, 232, 235, 236, 237, 241, 245, 278, 892], "61it": [11, 13, 19, 44, 103, 108, 112, 196, 209, 227, 231, 232, 237], "32": [11, 12, 19, 21, 28, 34, 35, 41, 42, 45, 47, 49, 54, 56, 70, 72, 73, 74, 75, 81, 82, 94, 99, 103, 107, 108, 109, 110, 112, 114, 120, 129, 135, 140, 141, 142, 146, 149, 151, 152, 158, 162, 166, 168, 169, 170, 171, 172, 176, 177, 180, 182, 183, 184, 185, 196, 200, 201, 203, 204, 205, 207, 208, 209, 212, 217, 222, 223, 224, 227, 228, 229, 231, 232, 235, 237, 242, 245, 258, 265, 266, 393, 413, 455, 481, 482, 503, 531, 580, 857, 868, 874, 877, 878, 892], "29it": [11, 19, 33, 103, 109, 112, 195, 196, 209, 227, 228, 229, 232, 236], "88it": [11, 19, 34, 103, 108, 109, 195, 196, 209, 227, 231, 232], "39": [11, 12, 13, 19, 21, 28, 35, 45, 47, 81, 103, 108, 109, 114, 137, 140, 157, 158, 159, 169, 177, 180, 184, 185, 187, 191, 195, 196, 201, 209, 210, 227, 228, 229, 231, 232, 235, 236, 237, 245, 278, 406, 867], "39it": [11, 13, 19, 108, 109, 112, 195, 196, 209, 227, 228, 231, 232, 237], "82it": [11, 19, 34, 96, 103, 108, 195, 196, 227, 229, 232, 237], "20it": [11, 13, 19, 33, 34, 103, 112, 195, 196, 209, 227, 228, 229, 231, 232], "65it": [11, 13, 19, 34, 103, 112, 195, 196, 209, 227, 228, 229, 231, 232, 235, 237], "52": [11, 13, 19, 28, 35, 45, 47, 81, 82, 99, 103, 108, 109, 114, 145, 151, 168, 169, 191, 196, 202, 209, 227, 228, 231, 232, 234, 237, 245, 406, 698, 741, 744, 892], "08it": [11, 13, 19, 103, 109, 112, 196, 209, 227, 228, 229, 231, 232, 235], "81it": [11, 13, 19, 34, 103, 108, 109, 195, 196, 209, 227, 228, 231, 232], "61": [11, 13, 19, 30, 35, 45, 47, 51, 57, 60, 72, 81, 83, 90, 93, 103, 108, 109, 112, 114, 116, 123, 127, 136, 146, 149, 166, 167, 168, 169, 170, 172, 176, 178, 179, 184, 185, 196, 199, 200, 203, 206, 207, 208, 209, 210, 216, 217, 218, 219, 227, 228, 229, 231, 232, 236, 237, 245, 356], "13it": [11, 13, 19, 103, 108, 109, 112, 195, 196, 209, 227, 229, 231, 232, 236], "65": [11, 12, 13, 19, 21, 34, 35, 45, 47, 81, 84, 103, 108, 109, 114, 136, 143, 145, 156, 169, 170, 177, 178, 184, 195, 196, 201, 208, 209, 227, 228, 229, 230, 231, 232, 235, 237, 245, 607, 892], "85it": [11, 13, 19, 34, 103, 108, 112, 196, 209, 227, 228, 231, 232, 236], "68": [11, 13, 19, 34, 35, 41, 45, 47, 81, 82, 90, 101, 103, 108, 109, 112, 114, 126, 137, 140, 143, 145, 158, 169, 171, 172, 176, 181, 184, 191, 196, 209, 227, 228, 231, 232, 245, 267, 268, 298, 299, 337, 356, 360, 361, 372, 373, 374, 406, 414, 421, 457, 458, 476, 478, 479, 542, 800], "21it": [11, 19, 33, 103, 109, 112, 195, 196, 209, 227, 228, 231, 232, 236, 237], "53it": [11, 13, 19, 33, 34, 103, 112, 195, 196, 209, 227, 231, 232, 236], "74": [11, 13, 19, 26, 35, 41, 45, 50, 80, 81, 82, 103, 108, 109, 112, 114, 137, 158, 168, 169, 170, 171, 176, 181, 184, 191, 195, 196, 202, 207, 209, 224, 227, 228, 231, 232, 235, 237, 693], "83it": [11, 19, 104, 109, 112, 195, 196, 209, 227, 228, 229, 231, 232], "71it": [11, 19, 34, 108, 112, 195, 196, 209, 227, 228, 231, 232, 237], "81": [11, 13, 15, 16, 19, 34, 35, 81, 103, 107, 108, 109, 112, 114, 142, 156, 169, 180, 184, 196, 208, 209, 211, 227, 228, 231, 232, 235, 240, 245, 669, 674, 726, 728, 738, 742, 892], "04it": [11, 13, 19, 44, 103, 108, 112, 195, 196, 209, 227, 229, 231, 232, 235], "34it": [11, 13, 19, 33, 103, 108, 109, 112, 180, 195, 196, 209, 227, 228, 231, 232], "87": [11, 13, 15, 18, 19, 33, 35, 47, 80, 94, 108, 109, 112, 114, 123, 124, 169, 195, 196, 207, 209, 210, 227, 228, 230, 231, 232, 245, 418, 420, 432, 874], "27": [11, 12, 19, 21, 24, 28, 33, 34, 35, 39, 41, 43, 45, 47, 50, 56, 81, 82, 103, 108, 109, 114, 120, 130, 145, 150, 158, 160, 169, 171, 175, 178, 180, 183, 185, 187, 191, 195, 196, 209, 213, 227, 228, 229, 231, 232, 236, 237, 245, 575, 849], "62it": [11, 13, 19, 33, 109, 112, 195, 196, 209, 227, 228, 229, 232, 236, 237], "59it": [11, 13, 19, 44, 103, 112, 195, 196, 227, 228, 231, 232], "94": [11, 13, 19, 35, 47, 81, 103, 107, 108, 109, 112, 114, 137, 169, 170, 180, 183, 191, 195, 196, 207, 209, 227, 228, 229, 230, 231, 232, 236, 237, 245, 874], "90it": [11, 13, 19, 33, 34, 103, 109, 112, 180, 196, 209, 227, 228, 229, 231, 232], "19it": [11, 13, 19, 103, 108, 112, 196, 209, 227, 229, 231, 232], "11it": [11, 13, 19, 34, 96, 103, 108, 109, 112, 195, 196, 209, 227, 231, 232, 237], "95it": [11, 19, 34, 108, 109, 112, 195, 196, 209, 227, 228, 231, 232, 237], "50it": [11, 19, 33, 103, 112, 195, 196, 209, 227, 229, 231, 232], "96it": [11, 13, 19, 34, 103, 108, 112, 196, 227, 228, 229, 231, 232, 237], "91it": [11, 19, 34, 196, 209, 227, 228, 231, 232, 236, 237], "70it": [11, 13, 19, 96, 103, 104, 109, 112, 195, 196, 209, 227, 228, 232], "30it": [11, 13, 19, 33, 103, 112, 195, 196, 209, 227, 231, 232, 236, 237], "02it": [11, 19, 33, 34, 103, 108, 109, 112, 196, 209, 227, 229, 231, 232, 237], "15it": [11, 13, 19, 33, 34, 96, 103, 109, 112, 195, 196, 209, 227, 228, 231, 232], "56it": [11, 13, 19, 103, 108, 112, 195, 196, 209, 227, 228, 231, 232], "98it": [11, 13, 19, 34, 103, 112, 195, 196, 227, 231, 232, 236], "67it": [11, 13, 19, 34, 108, 112, 195, 196, 209, 227, 229, 231, 232, 237], "46it": [11, 19, 34, 103, 108, 180, 195, 196, 209, 227, 228, 231, 232, 237], "75it": [11, 13, 19, 103, 112, 195, 196, 209, 227, 231, 232, 236], "69it": [11, 19, 34, 108, 112, 195, 196, 209, 227, 229, 232], "01it": [11, 19, 34, 103, 104, 112, 180, 195, 196, 209, 227, 230, 231, 232, 237], "58it": [11, 13, 19, 33, 34, 103, 108, 109, 112, 180, 195, 196, 209, 228, 229, 231, 232], "22it": [11, 13, 19, 33, 103, 112, 195, 196, 209, 227, 228, 229, 232, 237], "05it": [11, 19, 44, 103, 108, 112, 195, 196, 209, 227, 228, 231, 232], "16it": [11, 13, 19, 103, 112, 195, 196, 209, 227, 231, 232, 235], "36it": [11, 19, 33, 103, 108, 112, 123, 195, 196, 227, 228, 231, 232], "31it": [11, 13, 19, 33, 109, 112, 195, 196, 209, 227, 228, 229, 231, 232, 237], "07it": [11, 19, 112, 196, 232], "66it": [11, 13, 33, 112, 195, 196, 209, 227, 228, 231, 232], "03it": [11, 112, 196, 209, 227, 228, 231, 232], "99it": [11, 13, 19, 103, 108, 112, 195, 196, 209, 227, 229, 231, 232], "89it": [11, 19, 34, 103, 104, 108, 109, 195, 196, 209, 227, 229, 231, 232, 236], "28it": [11, 13, 19, 33, 108, 109, 112, 180, 195, 196, 209, 227, 231, 232], "63it": [11, 13, 19, 33, 112, 195, 196, 227, 229, 232, 236], "26it": [11, 13, 19, 33, 180, 196, 209, 227, 228, 229, 232, 235], "78it": [11, 13, 19, 34, 109, 112, 195, 196, 209, 227, 228, 231, 232], "38it": [11, 13, 19, 33, 34, 109, 112, 195, 196, 209, 227, 231, 232, 235], "42it": [11, 13, 19, 103, 109, 112, 195, 196, 209, 227, 228, 229, 232], "23it": [11, 19, 33, 34, 103, 109, 180, 195, 196, 209, 227, 228, 229, 231, 232, 235], "41it": [11, 19, 103, 108, 109, 112, 195, 196, 209, 227, 228, 231, 232, 235, 236, 237], "86it": [11, 13, 19, 34, 103, 108, 195, 196, 209, 227, 231, 232, 237], "18it": [11, 19, 33, 103, 108, 112, 195, 209, 227, 228, 229, 231, 232, 236, 237], "52it": [11, 13, 19, 96, 103, 108, 112, 195, 196, 209, 227, 228, 229, 231, 232, 236], "06it": [11, 13, 19, 103, 108, 109, 112, 195, 196, 209, 227, 231, 232, 237], "25it": [11, 19, 33, 103, 108, 109, 112, 195, 196, 209, 227, 228, 229, 231, 232, 236, 237], "54it": [11, 13, 19, 34, 103, 108, 109, 112, 180, 195, 196, 209, 224, 227, 228, 229, 232, 235, 237], "73it": [11, 19, 34, 103, 108, 109, 196, 209, 227, 229, 231, 232, 236, 237], "10it": [11, 13, 19, 33, 34, 103, 108, 112, 180, 195, 196, 209, 227, 232, 237], "44it": [11, 13, 19, 103, 112, 195, 196, 209, 227, 228, 229, 230, 232, 237], "74it": [11, 13, 19, 34, 96, 103, 112, 195, 196, 209, 231, 232, 236, 237], "00it": [11, 13, 19, 96, 103, 104, 108, 109, 180, 195, 196, 209, 227, 228, 231, 232], "48it": [11, 13, 19, 103, 108, 109, 112, 195, 196, 209, 227, 229, 231, 232, 235], "24it": [11, 13, 19, 34, 103, 108, 112, 180, 195, 196, 209, 227, 228, 229, 231, 232, 236], "97it": [11, 13, 19, 34, 108, 195, 196, 209, 227, 231, 232], "93it": [11, 13, 19, 34, 103, 108, 112, 195, 196, 209, 227, 228, 231, 232], "14it": [11, 13, 19, 33, 103, 108, 109, 195, 196, 209, 227, 232, 235, 236, 237], "32it": [11, 13, 19, 33, 103, 195, 196, 209, 227, 231, 232], "35it": [11, 19, 33, 103, 108, 109, 112, 195, 196, 209, 227, 231, 232], "94it": [11, 19, 34, 103, 112, 195, 196, 209, 227, 228, 231, 232], "37it": [11, 13, 19, 103, 112, 180, 195, 196, 209, 227, 228, 231, 232, 235], "45it": [11, 19, 33, 103, 108, 109, 112, 123, 195, 196, 209, 227, 228, 231, 232, 236], "investig": [11, 21, 144, 151, 191, 202, 237, 267, 268, 564, 800, 868], "patterns_": [11, 15, 18, 19, 21, 196, 414, 418, 420, 421, 422, 432, 565, 892], "inverse_transform": [11, 18, 196, 422, 423, 428, 429, 432, 565], "lookup": [11, 41, 258, 265, 266, 267, 268, 270, 278, 466, 467, 481, 482, 661, 760, 847, 892], "vertic": [11, 22, 24, 28, 38, 39, 41, 43, 48, 52, 53, 69, 116, 127, 134, 136, 140, 142, 155, 158, 159, 160, 161, 175, 178, 181, 191, 200, 203, 208, 209, 216, 219, 224, 227, 228, 235, 236, 237, 261, 265, 266, 267, 268, 271, 272, 273, 276, 277, 278, 279, 280, 281, 285, 286, 298, 299, 360, 362, 448, 461, 470, 472, 473, 481, 482, 516, 518, 540, 541, 584, 633, 662, 675, 677, 678, 680, 681, 682, 683, 684, 686, 687, 688, 699, 700, 702, 703, 704, 707, 708, 759, 760, 774, 779, 784, 790, 798, 813, 818, 823, 842, 847, 874, 877, 892], "lh_vertno": [11, 116, 175, 276, 279, 675], "empti": [11, 15, 27, 122, 130, 140, 142, 150, 161, 162, 166, 169, 171, 172, 184, 185, 191, 201, 205, 206, 208, 210, 216, 222, 237, 259, 262, 265, 266, 267, 268, 270, 274, 276, 289, 304, 312, 321, 328, 350, 351, 356, 361, 380, 381, 382, 385, 386, 387, 389, 394, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 441, 462, 481, 482, 489, 493, 496, 497, 504, 508, 530, 555, 556, 557, 561, 562, 564, 565, 567, 574, 575, 584, 588, 599, 600, 623, 631, 642, 652, 656, 693, 699, 708, 712, 714, 715, 716, 729, 747, 760, 769, 776, 784, 785, 790, 791, 797, 799, 807, 813, 814, 847, 851, 867, 874, 877, 892], "stc_feat": 11, "sourceestim": [11, 22, 26, 31, 35, 37, 40, 46, 59, 61, 94, 155, 158, 165, 166, 181, 186, 187, 223, 224, 235, 236, 237, 264, 267, 268, 271, 272, 273, 275, 277, 278, 279, 280, 281, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 362, 448, 461, 476, 477, 478, 479, 518, 531, 532, 533, 534, 535, 537, 540, 541, 546, 547, 633, 639, 652, 662, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 697, 704, 707, 708, 760, 774, 818, 819, 847, 869, 871, 882, 892], "ab": [11, 19, 35, 38, 40, 47, 59, 61, 69, 97, 119, 120, 127, 135, 151, 179, 183, 191, 195, 202, 227, 229, 230, 235, 236, 237, 242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 566, 728, 738, 795, 874, 892], "tstep": [11, 22, 31, 46, 59, 90, 94, 95, 181, 224, 235, 236, 237, 272, 273, 276, 279, 280, 281, 361, 479, 518, 564, 662, 679, 698, 704, 727, 735, 892], "transpar": [11, 58, 101, 172, 181, 200, 242, 257, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 712, 760, 779, 796, 813, 818, 823, 824, 825, 826, 873, 892], "03": [11, 13, 19, 24, 33, 34, 35, 49, 56, 59, 67, 72, 74, 76, 77, 83, 84, 85, 90, 93, 94, 102, 103, 106, 108, 109, 120, 121, 127, 130, 141, 146, 150, 151, 154, 158, 162, 164, 166, 167, 168, 169, 170, 174, 182, 183, 184, 194, 195, 196, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 213, 216, 217, 218, 219, 222, 223, 224, 227, 228, 229, 231, 232, 236, 237, 245, 259, 263, 356, 564, 699, 700, 702, 703, 788], "51it": [11, 19, 103, 109, 112, 195, 196, 209, 227, 228, 229, 231, 232, 237], "72it": [11, 13, 19, 103, 112, 195, 196, 209, 227, 228, 232, 235], "09it": [11, 13, 19, 103, 109, 112, 195, 196, 209, 227, 228, 229, 231, 232, 235, 236, 237], "27it": [11, 13, 19, 108, 112, 195, 196, 209, 227, 228, 231, 232, 235, 237], "5072551": 11, "37721471": 11, "59502306": 11, "703": [11, 20, 181, 209, 215, 232], "411": [11, 20, 135, 196, 227, 232, 245, 356], "decoding_spatio_temporal_sourc": [11, 20], "comodul": [12, 421], "allow": [12, 19, 40, 43, 44, 46, 61, 94, 104, 112, 115, 116, 120, 137, 140, 141, 142, 143, 144, 146, 150, 151, 157, 158, 160, 166, 169, 170, 172, 178, 189, 192, 196, 202, 207, 216, 217, 219, 227, 228, 229, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 270, 272, 273, 276, 278, 279, 280, 281, 292, 293, 296, 310, 314, 337, 342, 349, 356, 375, 414, 417, 420, 421, 422, 424, 447, 455, 472, 480, 481, 482, 484, 496, 497, 500, 502, 533, 535, 538, 540, 541, 542, 546, 564, 565, 569, 588, 597, 617, 623, 629, 647, 661, 677, 679, 698, 712, 714, 715, 716, 739, 740, 742, 743, 754, 758, 781, 790, 792, 803, 805, 813, 816, 847, 849, 851, 869, 873, 874, 877, 880, 892], "composit": [12, 188, 196, 272, 273, 276, 279, 280, 281, 760, 818, 823, 874], "orthogon": [12, 114, 156, 160, 178, 196, 206, 207, 210, 298, 299, 564, 740, 743, 874, 877, 880, 892], "spatial": [12, 14, 15, 17, 18, 20, 27, 31, 32, 33, 34, 36, 47, 56, 71, 72, 80, 83, 84, 90, 113, 119, 121, 151, 152, 155, 156, 162, 175, 199, 200, 202, 206, 207, 212, 219, 222, 224, 227, 229, 232, 235, 236, 237, 241, 242, 245, 262, 265, 266, 267, 268, 269, 270, 271, 274, 276, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 314, 330, 356, 362, 365, 366, 376, 414, 415, 421, 422, 428, 430, 432, 443, 481, 482, 493, 494, 496, 524, 530, 542, 543, 546, 561, 562, 563, 564, 565, 578, 579, 598, 599, 620, 626, 629, 631, 666, 669, 674, 682, 683, 684, 685, 689, 699, 700, 702, 703, 712, 714, 716, 731, 750, 760, 777, 792, 794, 799, 800, 803, 812, 815, 820, 822, 847, 867, 868, 871, 874, 892], "maxim": [12, 61, 88, 142, 160, 176, 177, 180, 183, 196, 202, 204, 245, 273, 279, 280, 281, 298, 299, 422, 564, 597, 682, 683, 684, 686, 687, 698, 824, 874, 892], "csp": [12, 17, 20, 27, 196, 265, 270, 314, 330, 365, 376, 418, 421, 443, 496, 561, 565, 712, 868, 882, 892], "variabl": [12, 16, 31, 43, 101, 103, 112, 117, 141, 143, 150, 155, 168, 170, 196, 199, 202, 204, 206, 216, 218, 231, 232, 237, 245, 258, 263, 265, 266, 271, 272, 273, 275, 276, 279, 280, 281, 305, 309, 310, 311, 314, 362, 367, 368, 369, 375, 378, 380, 381, 382, 383, 385, 386, 387, 390, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 421, 431, 433, 443, 455, 456, 462, 464, 466, 470, 472, 473, 474, 475, 481, 482, 501, 516, 520, 522, 550, 563, 564, 588, 595, 614, 616, 624, 628, 634, 643, 648, 649, 650, 651, 658, 660, 661, 675, 678, 689, 699, 700, 701, 702, 703, 707, 708, 752, 760, 776, 778, 788, 790, 807, 813, 818, 823, 824, 826, 842, 847, 849, 856, 857, 867, 871, 874, 878, 892], "fluctuat": [12, 141, 142, 151, 199, 201, 207, 208, 212, 224, 267, 268, 800, 847], "electromyogram": [12, 892], "cortico": 12, "muscular": [12, 199, 205], "coher": [12, 32, 33, 103, 107, 180, 224, 245, 290, 291, 292, 293, 298, 712, 713, 739, 740, 741, 742, 743, 744, 786, 847, 858, 868], "fieldtrip": [12, 156, 191, 202, 208, 227, 229, 235, 324, 331, 501, 624, 628, 739, 740, 742, 743, 874, 880, 892], "fieldtrip_cmc": [12, 21, 171], "ridg": [12, 19, 195, 420, 426], "kfold": [12, 16, 19, 356, 361, 431, 892], "cross_val_predict": [12, 892], "subjectcmc": [12, 21], "emg": [12, 83, 137, 169, 189, 196, 216, 222, 245, 265, 266, 267, 268, 270, 275, 313, 376, 421, 447, 481, 482, 493, 496, 508, 561, 564, 712, 714, 715, 716, 790, 813, 868, 874, 877, 892], "emglft": 12, "ref_meg": [12, 21, 75, 119, 123, 169, 212, 265, 266, 267, 268, 275, 313, 376, 481, 482, 561, 562, 578, 712, 714, 715, 716, 790, 813, 892], "make_fixed_length_ev": [12, 21, 166, 168, 217, 222, 361, 537, 847, 882, 892], "durat": [12, 21, 49, 66, 71, 72, 74, 75, 76, 77, 81, 82, 83, 90, 93, 94, 123, 127, 137, 140, 141, 144, 146, 149, 150, 151, 166, 167, 168, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 224, 235, 236, 237, 257, 259, 265, 266, 267, 268, 275, 276, 284, 343, 345, 359, 361, 414, 416, 420, 421, 425, 426, 443, 450, 452, 453, 455, 481, 482, 498, 523, 524, 564, 566, 567, 569, 588, 599, 607, 662, 664, 704, 726, 728, 738, 742, 790, 799, 807, 813, 847, 851, 892], "meg_epoch": [12, 18], "detrend": [12, 110, 135, 211, 260, 265, 267, 268, 523, 622, 892], "emg_epoch": 12, "var": [12, 47, 71, 171, 207, 378, 462, 705], "oa": [12, 21, 84, 183, 356], "validaton": 12, "first_samp": [12, 71, 76, 137, 166, 168, 184, 216, 217, 218, 259, 260, 265, 266, 270, 275, 284, 364, 442, 443, 455, 480, 481, 482, 502, 524, 559, 564, 600, 625, 626, 662, 677, 793, 807, 813, 837, 847, 877, 892], "set_xlabel": [12, 13, 19, 21, 22, 45, 71, 96, 104, 113, 133, 144, 146, 172, 183, 196, 206, 230, 231, 232], "set_titl": [12, 13, 22, 45, 71, 72, 96, 99, 112, 114, 120, 127, 136, 144, 195, 196, 210, 211, 230, 231, 232, 241, 242], "78": [12, 13, 19, 21, 34, 35, 47, 51, 80, 81, 101, 102, 103, 112, 114, 123, 137, 157, 158, 166, 169, 176, 179, 185, 195, 196, 209, 216, 227, 228, 229, 231, 232, 237, 245, 301, 406, 874], "62": [12, 13, 16, 19, 21, 34, 35, 38, 45, 47, 51, 56, 71, 81, 103, 108, 112, 114, 136, 137, 169, 180, 196, 200, 209, 215, 227, 228, 231, 232, 235, 245], "258": [12, 21, 25, 26, 37, 56, 123, 158, 166, 169, 209, 227, 232], "114": [12, 20, 21, 35, 45, 81, 151, 168, 169, 174, 178, 181, 187, 196, 217, 227, 231, 892], "12000": [12, 21], "911610": [12, 21], "191": [12, 21, 169, 209, 227, 231, 232], "180000": 12, "150": [12, 35, 42, 45, 59, 74, 75, 77, 81, 82, 94, 106, 108, 120, 123, 141, 142, 146, 151, 158, 160, 166, 169, 180, 191, 201, 205, 207, 227, 232, 257, 278, 730, 892], "793": [12, 144, 166, 174, 196, 232], "661": [12, 202, 215, 228, 232], "1057": [12, 196], "1801": [12, 19], "183": [12, 106, 107, 169, 209, 227, 231], "contribut": [12, 19, 45, 69, 149, 151, 180, 229, 232, 256, 265, 266, 443, 580, 668, 849, 855, 868, 870, 873, 892], "sven": [12, 18, 19, 196, 245, 418, 420, 421, 422, 432], "d\u00e4hne": [12, 18, 19, 196, 245, 418, 420, 421, 432], "frank": [12, 18, 19, 76, 196, 205, 245, 418, 420, 421, 432, 564, 606], "meineck": [12, 18, 19, 196, 245, 418, 420, 421, 432], "stefan": [12, 18, 19, 33, 113, 127, 196, 205, 229, 232, 235, 241, 245, 418, 420, 421, 422, 432, 579, 879, 892], "hauf": [12, 18, 19, 196, 245, 418, 420, 421, 422, 432], "johann": [12, 196, 245, 421, 892], "h\u00f6hne": [12, 196, 245, 421], "michael": [12, 19, 101, 195, 196, 204, 205, 245, 356, 414, 420, 421, 563, 564, 603, 614, 726, 728, 738, 742, 868, 874, 892], "tangermann": [12, 196, 205, 245, 421], "klau": [12, 196, 205, 245, 414, 421, 564], "robert": [12, 76, 180, 195, 196, 205, 212, 232, 245, 414, 420, 421, 578, 699, 700, 702, 703, 868, 879, 892], "m\u00fcller": [12, 75, 196, 205, 245, 414, 421, 564], "vadim": [12, 21, 196, 245, 421, 422], "nikulin": [12, 21, 196, 245, 421, 422], "novel": [12, 21, 196, 245, 334, 421, 422, 880], "framework": [12, 35, 196, 245, 421, 476, 863, 874], "amplitud": [12, 19, 35, 37, 39, 40, 45, 47, 53, 59, 81, 82, 93, 94, 95, 116, 123, 127, 132, 135, 140, 141, 144, 145, 162, 166, 172, 175, 180, 183, 184, 190, 192, 195, 196, 199, 200, 202, 205, 206, 207, 209, 211, 212, 224, 245, 257, 260, 263, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 291, 299, 343, 344, 345, 349, 361, 421, 457, 478, 479, 481, 482, 525, 535, 546, 564, 566, 581, 582, 621, 664, 665, 669, 673, 674, 698, 699, 714, 715, 716, 728, 738, 760, 787, 788, 801, 814, 847, 858, 871, 874, 877, 892], "neuron": [12, 21, 137, 144, 195, 196, 199, 245, 298, 407, 420, 421, 422, 531, 578, 847, 868, 874], "oscil": [12, 21, 69, 94, 113, 114, 196, 199, 203, 224, 245, 421, 422, 665, 726, 728, 738, 742], "behavior": [12, 144, 169, 188, 196, 199, 201, 202, 207, 245, 258, 265, 266, 275, 421, 455, 524, 529, 531, 599, 626, 661, 714, 716, 830, 851, 870, 871, 873, 880], "111": [12, 32, 35, 46, 113, 127, 145, 169, 196, 209, 227, 231, 245, 421], "122": [12, 16, 160, 169, 170, 176, 196, 205, 209, 227, 245, 337, 415, 421, 430, 874, 892], "2013": [12, 16, 18, 19, 43, 59, 81, 82, 129, 144, 169, 196, 245, 271, 276, 277, 283, 362, 415, 418, 420, 421, 430, 432, 438, 479, 569, 603, 669, 674, 866], "079": [12, 136, 196, 245, 421], "055": [12, 20, 140, 142, 149, 169, 208, 224, 245, 392], "337": [12, 20, 112, 169, 232], "decoding_spoc_cmc": [12, 20], "illustr": [13, 27, 28, 69, 70, 90, 94, 95, 125, 134, 138, 142, 146, 150, 151, 165, 166, 171, 188, 199, 200, 201, 203, 205, 207, 211, 216, 227, 231, 237, 241, 481, 482, 847, 867, 874], "discriminatori": 13, "given": [13, 16, 19, 26, 31, 71, 80, 94, 95, 112, 120, 121, 137, 143, 144, 149, 150, 151, 158, 160, 162, 165, 166, 169, 170, 171, 175, 178, 180, 186, 187, 188, 195, 196, 201, 202, 205, 206, 207, 210, 212, 216, 217, 219, 227, 229, 231, 232, 240, 242, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 281, 289, 298, 299, 304, 312, 314, 318, 319, 320, 329, 331, 332, 356, 361, 367, 368, 369, 371, 372, 380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 421, 422, 424, 429, 430, 434, 435, 439, 449, 450, 453, 455, 457, 459, 470, 476, 478, 479, 480, 481, 482, 523, 526, 527, 530, 531, 532, 533, 534, 535, 537, 538, 539, 542, 547, 548, 563, 564, 565, 566, 567, 569, 575, 579, 580, 581, 582, 584, 588, 591, 595, 599, 605, 607, 613, 614, 619, 622, 656, 661, 666, 676, 679, 680, 692, 694, 698, 699, 700, 702, 703, 705, 707, 710, 712, 713, 714, 715, 716, 720, 721, 722, 723, 724, 725, 728, 730, 732, 736, 738, 742, 743, 747, 748, 752, 760, 764, 766, 776, 777, 778, 784, 788, 790, 791, 792, 794, 795, 796, 797, 799, 804, 807, 811, 813, 814, 815, 816, 818, 820, 822, 823, 827, 828, 847, 849, 851, 868, 871, 873, 874, 877, 892], "subsequ": [13, 70, 84, 112, 113, 140, 142, 145, 157, 161, 166, 196, 200, 203, 205, 216, 235, 245, 265, 266, 481, 482, 564, 567, 574, 588, 704, 847, 854, 867, 871, 874, 892], "accur": [13, 26, 41, 44, 45, 50, 109, 135, 158, 159, 176, 182, 188, 196, 204, 205, 207, 210, 212, 258, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 457, 481, 482, 522, 564, 578, 594, 750, 799, 826, 867, 892], "generalizingestim": [13, 196, 431, 882, 892], "events_fnam": 13, "auditori": [13, 15, 30, 31, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 60, 61, 62, 66, 72, 79, 80, 86, 87, 94, 112, 116, 119, 120, 124, 127, 132, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 165, 166, 168, 172, 175, 176, 178, 179, 180, 181, 182, 193, 194, 195, 196, 202, 207, 212, 217, 223, 231, 235, 237, 240, 242, 245, 258, 259, 260, 262, 265, 266, 267, 268, 270, 271, 276, 355, 357, 361, 363, 365, 420, 441, 455, 481, 494, 520, 521, 526, 529, 530, 531, 542, 577, 603, 623, 625, 631, 637, 644, 660, 715, 760, 892], "050": [13, 28, 56, 81, 140, 142, 149, 169, 180, 200, 208, 209, 224, 245], "faster": [13, 18, 44, 120, 140, 183, 196, 205, 242, 245, 257, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 362, 365, 454, 470, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 523, 564, 566, 699, 700, 702, 703, 849, 854, 855, 857, 880, 892], "constructor": [13, 88, 140, 142, 151, 165, 166, 172, 201, 203, 206, 218, 222, 225, 260, 272, 273, 276, 279, 280, 281, 480, 565, 581, 818, 823, 851, 871, 892], "497": [13, 14, 15, 77, 88, 99, 121, 133, 178, 196, 205, 209, 232, 245, 278], "310": [13, 14, 15, 35, 77, 81, 88, 99, 109, 121, 133, 169, 205, 227, 232], "lbfg": [13, 18, 196], "time_gen": [13, 196], "experiment": [13, 16, 45, 71, 72, 74, 77, 81, 82, 83, 90, 93, 127, 140, 141, 146, 149, 150, 151, 153, 165, 167, 168, 169, 180, 196, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 227, 245, 265, 266, 267, 268, 270, 415, 430, 481, 482, 483, 531, 588, 599, 600, 664, 665, 672, 712, 715, 847, 867, 874, 878, 892], "79it": [13, 19, 34, 103, 112, 195, 196, 209, 227, 229, 232, 236], "34": [13, 19, 28, 34, 35, 41, 45, 47, 55, 56, 69, 72, 81, 103, 108, 109, 112, 114, 116, 145, 169, 171, 181, 185, 196, 202, 209, 210, 215, 223, 227, 228, 229, 231, 232, 236, 237, 245, 573, 693], "72": [13, 15, 19, 28, 35, 45, 47, 72, 79, 80, 81, 84, 85, 96, 100, 103, 104, 112, 114, 117, 123, 124, 130, 140, 149, 156, 162, 169, 177, 180, 182, 183, 184, 185, 195, 196, 200, 209, 210, 213, 227, 228, 229, 230, 231, 232, 235, 245, 564, 573, 874, 892], "57": [13, 19, 34, 35, 40, 45, 81, 103, 108, 112, 114, 117, 126, 136, 150, 151, 157, 169, 171, 180, 183, 184, 191, 195, 196, 198, 207, 209, 218, 227, 228, 229, 231, 232, 236, 237, 240, 245, 265, 266, 267, 268, 337, 478, 481, 482, 714, 716, 724, 730, 892], "40it": [13, 19, 103, 108, 180, 195, 196, 209, 227, 231, 232, 235], "1225": [13, 209], "348": [13, 35, 53, 56, 112, 169, 196, 202, 223, 226, 227, 892], "410": [13, 59, 72, 81, 83, 129, 196, 199, 203, 207, 219, 227, 240, 245, 479], "427": [13, 196, 227, 232], "431": [13, 56, 196, 209, 227, 232], "88": [13, 19, 26, 35, 41, 45, 47, 50, 80, 81, 82, 103, 109, 112, 114, 120, 158, 169, 176, 180, 181, 182, 191, 195, 196, 209, 211, 227, 228, 229, 231, 232, 236, 237, 245, 356], "433": [13, 16, 20, 196, 232], "103": [13, 16, 35, 46, 50, 56, 112, 114, 121, 169, 196, 227, 231, 877], "435": [13, 196, 232], "118": [13, 62, 96, 99, 102, 169, 196, 227, 231, 232, 245, 564, 892], "134": [13, 39, 56, 71, 169, 227, 231, 232, 245, 278, 529, 572], "149": [13, 45, 169, 181, 227, 231, 232, 278], "444": [13, 19, 85, 87, 196, 209, 227, 232, 237], "180": [13, 19, 24, 35, 81, 92, 111, 156, 169, 178, 191, 196, 199, 201, 203, 205, 209, 212, 227, 231, 272, 273, 276, 279, 280, 281, 448, 765, 892], "443": [13, 143, 196, 227, 232, 245], "196": [13, 19, 82, 85, 169, 209, 227, 231, 232], "446": [13, 70, 232, 245, 866], "212": [13, 169, 202, 209, 227, 231, 232, 245], "448": [13, 126, 171, 232, 278, 892], "228": [13, 45, 56, 169, 231, 232, 245, 580], "450": [13, 76, 81, 141, 160, 232, 278, 892], "452": [13, 196, 232, 278], "259": [13, 169, 209, 232, 245, 874], "451": [13, 196, 227, 278], "275": [13, 37, 46, 56, 61, 123, 166, 169, 170, 191, 227, 232, 245, 340, 414, 868, 874], "453": [13, 196, 209, 227, 232, 278], "454": [13, 144, 209, 227, 232, 278], "322": [13, 112, 169, 196, 232], "338": [13, 112, 169, 232], "456": [13, 40, 56, 144, 182, 187, 209, 232, 278], "354": [13, 45, 81, 112, 135, 139, 169, 176, 181, 209, 227, 232], "457": [13, 196, 227], "49it": [13, 19, 112, 195, 196, 209, 228, 231, 232], "370": [13, 51, 56, 81, 112, 169, 232, 245, 271, 276], "458": [13, 184, 209, 232], "385": [13, 81, 196, 227, 232], "401": [13, 24, 81, 195, 196, 209, 212, 215, 232], "417": [13, 35, 119, 162, 196, 227, 232, 245, 564, 597, 777], "459": [13, 209, 227], "37": [13, 19, 21, 28, 34, 35, 42, 45, 47, 81, 103, 108, 109, 112, 114, 145, 157, 169, 179, 187, 195, 196, 207, 209, 215, 227, 228, 229, 231, 232, 236, 237, 240, 337, 406, 455, 575, 892], "38": [13, 19, 21, 28, 34, 35, 45, 47, 72, 74, 81, 82, 93, 96, 103, 108, 109, 114, 127, 140, 141, 142, 144, 158, 166, 169, 174, 180, 184, 191, 195, 196, 201, 207, 209, 215, 227, 228, 229, 231, 232, 236, 237, 575], "463": [13, 196, 227, 232, 278], "477": [13, 196, 227, 232], "493": [13, 130, 196, 209], "509": [13, 196, 228, 232], "525": [13, 184, 187, 196, 232], "542": [13, 196, 232], "460": [13, 81, 184, 196, 245, 866], "558": [13, 47, 56, 232], "574": [13, 196, 209], "461": [13, 20, 196, 227, 232], "590": [13, 70, 81, 232], "606": [13, 144, 232], "623": [13, 232], "464": [13, 76, 144, 171, 209, 211, 227, 278], "639": [13, 133, 166, 172, 196, 230, 232], "465": [13, 35, 203, 227, 232], "655": [13, 208, 232], "671": [13, 209, 232], "56": [13, 15, 19, 32, 35, 45, 47, 76, 80, 81, 82, 88, 103, 104, 108, 112, 114, 151, 160, 169, 172, 176, 180, 191, 195, 196, 209, 211, 227, 228, 231, 232, 245, 259, 414, 565, 699, 700, 702, 703], "687": [13, 19, 35, 62, 195, 232], "466": [13, 196, 209], "59": [13, 15, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 54, 55, 58, 59, 61, 70, 72, 77, 79, 81, 83, 90, 92, 93, 94, 96, 103, 104, 108, 111, 112, 114, 116, 118, 121, 127, 131, 141, 142, 145, 150, 151, 152, 156, 158, 162, 169, 171, 172, 176, 178, 182, 184, 196, 199, 200, 205, 206, 207, 209, 213, 223, 227, 228, 229, 231, 232, 237, 240, 245, 278, 435, 575, 588, 599, 705, 706], "717": [13, 203, 215, 232], "68it": [13, 19, 33, 103, 108, 109, 112, 196, 209, 227, 230, 231, 232, 236, 237], "732": [13, 180, 187, 209, 232], "748": [13, 232], "17it": [13, 19, 103, 109, 112, 180, 195, 196, 209, 227, 228, 229, 231, 232], "764": [13, 196], "780": [13, 81, 196], "796": [13, 144, 232], "812": [13, 232], "828": [13, 83, 232, 245, 564], "844": 13, "860": [13, 50, 81, 209, 232], "76it": [13, 19, 34, 104, 108, 109, 180, 196, 209, 227, 229, 231, 232, 235], "876": [13, 172, 212, 215, 232, 278], "893": [13, 25, 196], "467": [13, 68, 209, 227, 232], "909": [13, 232], "468": [13, 106, 110, 196, 204, 227, 232, 245, 563, 614], "925": [13, 195, 232], "941": [13, 209, 232], "957": [13, 143, 196, 232], "973": 13, "469": [13, 195, 209, 227, 232], "989": [13, 195, 232], "1006": [13, 209, 245, 696, 874], "471": [13, 41, 83, 85, 130, 131, 196, 202, 227, 232, 245], "83": [13, 19, 35, 40, 47, 60, 81, 103, 108, 112, 114, 169, 195, 196, 201, 204, 209, 210, 227, 228, 231, 232, 245, 303, 337, 563, 614, 699, 700, 702, 703], "1022": [13, 169], "1054": 13, "470": [13, 81, 196, 209], "1070": [13, 19, 196], "12it": [13, 19, 33, 103, 108, 109, 112, 195, 196, 227, 228, 232, 235, 237], "89": [13, 19, 34, 35, 47, 72, 79, 80, 81, 82, 103, 108, 112, 114, 136, 169, 184, 191, 196, 200, 209, 227, 228, 231, 232, 245, 573, 874], "1087": 13, "472": [13, 196, 227, 232, 245, 414], "1102": 13, "1119": 13, "93": [13, 19, 33, 35, 40, 47, 80, 103, 108, 112, 114, 169, 195, 196, 209, 227, 228, 231, 232, 245, 603], "1135": [13, 196], "1151": [13, 21, 146], "1166": 13, "96": [13, 15, 18, 19, 44, 47, 82, 103, 107, 108, 112, 113, 114, 137, 162, 169, 171, 180, 184, 195, 196, 198, 206, 207, 209, 227, 228, 229, 230, 231, 232, 236, 237, 245, 267, 268, 418, 420, 432, 800, 871], "1182": [13, 196], "1198": 13, "1214": [13, 196], "constrained_layout": [13, 90, 183, 212, 241, 728, 738], "vmax": [13, 19, 71, 88, 107, 112, 114, 116, 117, 124, 136, 141, 160, 176, 195, 196, 210, 211, 227, 229, 230, 241, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 760, 777, 791, 792, 795, 799, 803, 812, 815, 820, 821, 822, 892], "xaxi": [13, 127], "set_ticks_posit": 13, "bottom": [13, 71, 74, 75, 112, 120, 127, 140, 146, 161, 191, 218, 219, 227, 232, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 773, 790, 800, 818, 823, 847, 892], "ntest": 13, "ntrain": 13, "fontweight": [13, 127, 144, 210], "bold": [13, 127, 144, 151, 200, 203, 206, 207, 208, 210, 211, 227], "r\u00e9mi": [13, 196, 245], "stanisla": [13, 16, 137, 196, 245, 415, 430, 892], "dehaen": [13, 16, 196, 245, 415, 430], "dynam": [13, 21, 27, 32, 33, 71, 94, 105, 106, 112, 166, 180, 196, 202, 204, 205, 212, 224, 245, 265, 268, 271, 276, 288, 290, 291, 292, 293, 298, 422, 453, 455, 481, 482, 531, 564, 565, 572, 691, 813, 847, 858, 868, 874, 877, 892], "represent": [13, 17, 20, 27, 43, 44, 94, 103, 112, 115, 140, 149, 160, 166, 168, 169, 170, 172, 175, 190, 196, 205, 216, 217, 235, 236, 237, 240, 241, 245, 265, 266, 267, 268, 275, 277, 362, 365, 449, 455, 481, 482, 514, 561, 712, 714, 716, 739, 740, 742, 743, 744, 768, 847, 858, 868, 877, 892], "tempor": [13, 16, 19, 27, 46, 59, 78, 85, 105, 106, 113, 114, 135, 136, 137, 140, 142, 146, 151, 165, 180, 184, 197, 198, 201, 202, 203, 204, 207, 210, 218, 227, 229, 230, 231, 232, 238, 239, 245, 260, 265, 267, 268, 270, 276, 277, 278, 356, 362, 420, 426, 434, 437, 440, 454, 455, 457, 477, 478, 479, 481, 482, 523, 527, 530, 531, 545, 547, 548, 561, 564, 566, 580, 599, 606, 607, 622, 626, 637, 639, 641, 646, 667, 668, 669, 670, 671, 672, 673, 674, 684, 686, 687, 688, 693, 695, 702, 703, 704, 725, 728, 738, 739, 740, 741, 742, 743, 744, 760, 868, 869, 874, 892], "trend": [13, 66, 113, 141, 196, 245], "cognit": [13, 42, 43, 196, 202, 245, 256, 277, 362, 532, 879], "203": [13, 35, 40, 42, 49, 50, 58, 59, 80, 87, 92, 93, 94, 111, 116, 119, 121, 123, 124, 131, 142, 150, 152, 156, 157, 158, 162, 169, 170, 172, 177, 178, 179, 180, 196, 200, 206, 207, 209, 210, 224, 227, 231, 245], "tic": [13, 196, 245], "129": [13, 14, 15, 20, 35, 62, 73, 85, 88, 121, 128, 130, 158, 169, 170, 209, 213, 227, 231, 232, 234, 245], "decoding_time_generalization_condit": [13, 20], "Then": [14, 19, 45, 68, 82, 109, 113, 115, 135, 136, 140, 156, 161, 181, 190, 191, 192, 207, 232, 242, 267, 268, 319, 439, 579, 707, 796, 851, 855, 859, 862, 871, 874], "virtual": [14, 71, 99, 151, 205, 208, 265, 266, 267, 268, 316, 435, 481, 482, 598, 653, 656, 847, 849, 859, 892], "output": [14, 19, 32, 35, 40, 44, 46, 47, 59, 113, 114, 122, 127, 135, 140, 143, 149, 151, 155, 161, 163, 164, 165, 168, 171, 172, 188, 192, 195, 196, 202, 203, 205, 206, 207, 213, 216, 217, 219, 222, 227, 229, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 420, 424, 425, 426, 427, 430, 431, 433, 435, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 464, 465, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 559, 560, 564, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 657, 660, 661, 663, 664, 665, 666, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 688, 699, 700, 701, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 730, 731, 734, 735, 739, 740, 742, 743, 744, 745, 748, 749, 750, 755, 759, 760, 764, 768, 776, 785, 788, 792, 793, 794, 795, 800, 801, 803, 804, 805, 810, 811, 813, 814, 816, 817, 818, 819, 823, 824, 825, 828, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 855, 856, 859, 871, 874, 875, 877, 892], "asish": [14, 892], "asishrocks95": 14, "decod": [14, 16, 19, 20, 21, 152, 165, 166, 168, 195, 197, 198, 245, 262, 265, 267, 268, 270, 276, 314, 330, 356, 365, 376, 443, 455, 481, 489, 494, 496, 506, 524, 530, 531, 533, 542, 545, 561, 565, 620, 626, 631, 712, 760, 868, 882, 892], "unsupervisedspatialfilt": [14, 882, 892], "fastica": [14, 77, 205, 564], "aud_l": [14, 15, 18, 42, 177, 231, 793], "vis_l": [14, 15, 18, 42, 231], "ie": [14, 53, 110, 262, 272, 276, 280, 616, 728, 738, 760, 785, 818, 819], "pca_data": 14, "evokedarrai": [14, 15, 16, 18, 21, 84, 100, 109, 183, 188, 196, 222, 232, 266, 267, 482, 537, 538, 628, 630, 847, 882, 892], "window_titl": [14, 191, 267, 268, 794], "ica_data": 14, "ev1": [14, 892], "544": [14, 20, 209, 232], "decoding_unsupervised_spatial_filt": [14, 20], "erp": [15, 99, 101, 117, 128, 153, 154, 165, 172, 196, 199, 200, 202, 205, 207, 208, 213, 245, 265, 267, 268, 270, 316, 355, 471, 481, 555, 564, 565, 626, 698, 784, 803, 805, 832, 858, 878, 880, 892], "concaten": [15, 71, 75, 81, 112, 137, 151, 168, 188, 191, 204, 206, 216, 242, 265, 266, 267, 268, 363, 364, 365, 414, 423, 478, 481, 482, 567, 583, 588, 599, 677, 802, 892], "rescal": [15, 64, 113, 114, 372, 373, 374, 582, 712, 715, 820, 882, 892], "fed": 15, "classification_report": [15, 137], "confusion_matrix": [15, 137], "minmaxscal": 15, "n_filter": 15, "penalti": [15, 40, 46, 245, 478, 479, 880], "l1": [15, 40, 478, 479], "pred": 15, "report": [15, 137, 165, 173, 174, 192, 210, 212, 213, 228, 242, 245, 262, 265, 266, 267, 269, 270, 274, 276, 290, 292, 438, 455, 481, 482, 487, 530, 553, 564, 582, 588, 604, 629, 728, 738, 742, 790, 807, 813, 849, 851, 867, 870, 871, 872, 874, 880, 882, 892], "target_nam": [15, 137], "cm_normal": 15, "astyp": [15, 73, 145, 160, 191, 195, 203, 216], "float": [15, 19, 31, 40, 66, 93, 115, 143, 144, 145, 149, 160, 169, 171, 188, 192, 195, 205, 216, 218, 227, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 291, 298, 299, 306, 307, 314, 323, 328, 330, 332, 343, 344, 345, 346, 349, 355, 356, 359, 360, 361, 362, 367, 374, 376, 414, 416, 419, 420, 421, 422, 425, 426, 427, 431, 435, 438, 440, 442, 443, 449, 450, 452, 453, 454, 455, 457, 458, 459, 466, 472, 473, 476, 478, 479, 480, 481, 482, 491, 492, 500, 506, 516, 518, 519, 523, 524, 526, 527, 531, 532, 533, 534, 535, 537, 538, 542, 543, 544, 546, 547, 548, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 601, 603, 604, 605, 607, 608, 617, 642, 648, 649, 650, 651, 661, 662, 667, 668, 669, 670, 671, 672, 673, 674, 677, 679, 682, 683, 684, 686, 687, 690, 691, 694, 695, 696, 698, 699, 700, 702, 703, 704, 705, 706, 707, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 730, 731, 736, 738, 739, 740, 741, 742, 743, 744, 748, 749, 750, 760, 764, 765, 773, 777, 779, 780, 784, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 810, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 823, 824, 828, 845, 877, 892], "sum": [15, 28, 31, 41, 47, 61, 73, 82, 109, 113, 114, 117, 137, 144, 149, 161, 162, 168, 175, 183, 184, 202, 227, 228, 232, 242, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 287, 355, 360, 481, 482, 546, 564, 569, 664, 699, 700, 702, 703, 707, 713, 714, 716, 792, 871, 874, 877, 892], "imshow": [15, 16, 22, 71, 107, 115, 116, 127, 136, 146, 160, 172, 196, 227, 229, 230, 231, 232, 265, 266, 267, 268, 323, 712, 761, 763, 798, 821, 830], "nearest": [15, 26, 80, 116, 120, 136, 140, 145, 160, 168, 182, 216, 227, 262, 265, 266, 267, 268, 271, 272, 273, 274, 276, 278, 279, 280, 281, 283, 362, 367, 414, 421, 481, 482, 563, 564, 579, 707, 712, 713, 714, 715, 716, 748, 760, 777, 778, 784, 792, 799, 803, 812, 815, 820, 822, 874, 877, 892], "blue": [15, 54, 55, 80, 83, 112, 132, 135, 142, 151, 156, 172, 175, 177, 178, 181, 190, 207, 235, 236, 242, 263, 760, 775, 776, 784, 788, 847], "tick_mark": 15, "ytick": [15, 127, 195, 202, 227], "precis": [15, 47, 71, 90, 137, 157, 184, 192, 202, 203, 210, 216, 224, 259, 265, 266, 271, 298, 299, 455, 481, 482, 503, 599, 668, 670, 689, 739, 740, 742, 743, 867, 871, 877, 892], "recal": [15, 90, 137, 149, 150, 156, 217, 668, 669, 671, 674], "f1": [15, 71, 90, 137, 668], "support": [15, 34, 62, 123, 135, 136, 137, 138, 140, 142, 149, 150, 151, 165, 166, 170, 172, 181, 182, 185, 189, 190, 192, 219, 240, 241, 242, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 270, 272, 273, 275, 276, 278, 279, 280, 281, 298, 299, 306, 314, 320, 322, 342, 356, 361, 362, 372, 373, 374, 376, 395, 414, 421, 422, 430, 435, 444, 445, 447, 448, 452, 453, 454, 480, 481, 482, 487, 492, 502, 505, 506, 507, 508, 511, 513, 518, 522, 525, 526, 564, 575, 587, 588, 599, 621, 624, 625, 639, 646, 647, 656, 660, 661, 677, 693, 695, 704, 707, 712, 714, 715, 716, 760, 776, 778, 781, 784, 788, 789, 790, 794, 799, 807, 813, 814, 818, 823, 824, 825, 826, 829, 847, 849, 851, 854, 856, 857, 858, 863, 869, 871, 878, 892], "288": [15, 35, 72, 73, 132, 141, 145, 160, 169, 171, 196, 213, 227, 232, 237, 245, 573], "macro": [15, 137], "avg": [15, 137, 144, 227, 257, 739, 740], "attribut": [15, 30, 31, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 72, 79, 83, 86, 87, 116, 119, 120, 127, 140, 141, 143, 149, 150, 151, 166, 168, 169, 170, 172, 175, 176, 178, 179, 181, 182, 183, 201, 205, 206, 210, 211, 213, 219, 222, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 304, 355, 367, 414, 415, 417, 418, 420, 421, 422, 424, 429, 432, 471, 472, 480, 481, 482, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 522, 563, 564, 565, 623, 629, 633, 639, 662, 697, 712, 713, 714, 715, 716, 747, 760, 762, 784, 793, 806, 841, 847, 851, 869, 892], "last": [15, 71, 82, 104, 127, 137, 140, 144, 146, 151, 160, 166, 183, 188, 196, 200, 201, 202, 203, 205, 206, 216, 219, 227, 228, 235, 242, 260, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 280, 281, 288, 289, 304, 322, 344, 356, 364, 417, 424, 425, 427, 438, 452, 453, 454, 455, 480, 481, 482, 506, 524, 530, 559, 564, 567, 584, 693, 698, 699, 700, 702, 703, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 730, 741, 747, 760, 792, 797, 799, 804, 807, 814, 820, 847, 850, 868, 873, 874, 892], "nrow": [15, 45, 74, 120, 127, 146, 151, 176, 183, 211, 228, 267, 268, 414, 421, 564, 799, 803, 877, 892], "fitted_xdawn": 15, "get_channel_typ": [15, 140, 169, 265, 266, 267, 268, 270, 481, 482, 564, 712, 714, 715, 716, 892], "get_montag": [15, 115, 135, 136, 265, 266, 267, 268, 270, 481, 482, 892], "cur_class": 15, "cur_pattern": 15, "pattern_evok": 15, "time_format": [15, 21, 100, 109, 112, 145, 176, 218, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 564, 712, 715, 799, 807, 813, 892], "show_nam": [15, 68, 100, 120, 151, 170, 182, 228, 262, 265, 266, 267, 268, 270, 274, 314, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 796, 799, 803, 810, 812, 815, 816, 820, 892], "h_pad": [15, 227], "w_pad": [15, 227], "bertrand": [15, 72, 79, 88, 196, 200, 245, 565, 573, 728, 738, 739, 742, 874, 892], "rivet": [15, 88, 196, 245, 565], "antoin": [15, 88, 196, 245, 565, 892], "souloumiac": [15, 88, 196, 245, 565], "virgini": [15, 88, 196, 245, 565], "attina": [15, 88, 196, 245, 565], "gibert": [15, 88, 196, 245, 565], "algorithm": [15, 27, 31, 71, 75, 78, 83, 84, 85, 88, 113, 126, 152, 156, 157, 162, 166, 196, 200, 202, 205, 210, 227, 232, 235, 236, 237, 245, 270, 271, 275, 311, 356, 413, 414, 428, 435, 478, 481, 531, 550, 564, 565, 567, 572, 574, 575, 581, 588, 590, 597, 599, 606, 607, 608, 672, 689, 694, 750, 858, 863, 867, 868, 869, 880, 892], "enhanc": [15, 88, 195, 196, 228, 232, 245, 420, 564, 565, 588, 699, 700, 702, 703, 851, 870, 877, 880], "2035": [15, 88, 180, 196, 245, 565], "2043": [15, 88, 169, 196, 245, 565], "2009": [15, 35, 58, 88, 117, 171, 196, 205, 227, 228, 245, 276, 476, 565, 579, 699, 700, 702, 703, 867, 877, 892], "2012869": [15, 88, 196, 245, 565], "hubert": [15, 88, 245, 565, 892], "cecotti": [15, 88, 245, 565], "emmanuel": [15, 88, 202, 245, 565], "mabi": [15, 88, 245, 565], "j\u00e9r\u00e9mie": [15, 88, 245, 565], "mattout": [15, 88, 245, 565], "theoret": [15, 88, 195, 196, 202, 222, 245, 414, 565, 847], "effici": [15, 42, 44, 88, 191, 202, 227, 245, 260, 265, 266, 267, 268, 426, 481, 482, 564, 565, 566, 672, 714, 716, 742, 743, 869, 892], "p300": [15, 88, 191, 196, 202, 245, 565, 741, 744], "proceed": [15, 33, 40, 46, 88, 166, 180, 204, 205, 224, 245, 291, 298, 479, 565, 741, 744, 867, 874], "eusipco": [15, 88, 245, 565, 741, 744], "1382": [15, 88, 245, 565], "1386": [15, 88, 245, 565], "barcelona": [15, 88, 245, 565], "url": [15, 88, 113, 151, 196, 245, 356, 383, 389, 391, 395, 406, 407, 476, 531, 565, 694, 741, 744, 851, 874, 892], "ieeexplor": [15, 88, 245, 565, 741, 744], "7073970": [15, 88, 245, 565], "624": [15, 20, 232], "decoding_xdawn_eeg": [15, 20], "cours": [16, 27, 32, 36, 38, 39, 41, 50, 56, 71, 75, 83, 90, 92, 95, 101, 113, 116, 135, 136, 142, 143, 151, 165, 166, 172, 175, 176, 177, 180, 186, 187, 196, 199, 202, 206, 207, 224, 232, 237, 245, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 278, 279, 280, 281, 290, 292, 294, 297, 362, 415, 430, 448, 457, 467, 476, 478, 479, 481, 482, 518, 525, 530, 531, 545, 561, 629, 633, 639, 662, 676, 678, 679, 698, 712, 714, 715, 716, 759, 760, 784, 811, 818, 823, 847, 874, 877, 892], "techniqu": [16, 17, 20, 27, 59, 71, 74, 75, 76, 149, 151, 165, 166, 196, 199, 202, 204, 205, 207, 208, 210, 211, 212, 214, 224, 227, 245, 265, 266, 267, 268, 270, 376, 416, 425, 428, 450, 452, 453, 473, 481, 482, 561, 564, 626, 656, 847, 868, 874, 875, 880], "By": [16, 45, 71, 80, 83, 103, 104, 112, 135, 142, 145, 149, 150, 151, 158, 166, 168, 169, 170, 171, 172, 178, 188, 189, 200, 202, 205, 206, 207, 208, 210, 213, 216, 217, 219, 240, 257, 265, 266, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 311, 328, 438, 455, 481, 482, 564, 567, 653, 677, 689, 705, 712, 713, 714, 715, 716, 786, 790, 798, 806, 813, 823, 874, 880, 892], "onto": [16, 18, 40, 74, 135, 136, 142, 155, 166, 170, 175, 180, 195, 200, 206, 207, 210, 223, 271, 273, 279, 281, 422, 595, 661, 689, 760, 776, 811, 830, 868, 874, 892], "surrog": [16, 157, 183, 207, 367, 430, 475, 892], "expos": [16, 133, 195, 231, 856, 892], "exhibit": [16, 242, 267, 268, 272, 273, 276, 279, 280, 281, 874], "evolut": [16, 113, 564, 807], "compute_em": [16, 882, 892], "audl": [16, 73], "visl": [16, 73], "wai": [16, 21, 27, 34, 43, 44, 75, 114, 115, 127, 140, 141, 142, 144, 149, 150, 151, 156, 160, 161, 166, 168, 169, 170, 171, 172, 177, 180, 190, 195, 200, 201, 202, 203, 205, 206, 207, 210, 212, 217, 218, 219, 222, 224, 227, 229, 230, 235, 237, 242, 245, 259, 260, 264, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 356, 438, 448, 496, 523, 564, 566, 581, 585, 591, 600, 622, 629, 661, 693, 694, 695, 701, 707, 712, 715, 726, 728, 738, 742, 760, 847, 849, 851, 854, 857, 866, 867, 868, 869, 870, 873, 875, 892], "n_epoch": [16, 114, 140, 146, 149, 166, 195, 196, 222, 232, 241, 260, 265, 266, 316, 414, 415, 416, 419, 420, 421, 422, 423, 425, 426, 428, 429, 452, 453, 565, 572, 714, 715, 717, 718, 719, 739, 740, 741, 784, 790, 791, 892], "n_time": [16, 19, 31, 64, 66, 68, 71, 76, 83, 114, 140, 146, 149, 159, 166, 190, 191, 195, 196, 205, 208, 216, 222, 224, 227, 231, 232, 235, 236, 237, 260, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 316, 350, 414, 415, 416, 419, 420, 421, 422, 423, 425, 427, 428, 430, 448, 450, 452, 453, 480, 481, 482, 502, 539, 565, 597, 662, 667, 668, 669, 670, 671, 672, 673, 674, 679, 686, 687, 688, 692, 698, 702, 703, 712, 714, 715, 716, 717, 718, 719, 730, 731, 735, 737, 739, 740, 741, 760, 784, 791, 792, 799, 820, 892], "993": [16, 18, 113, 232], "613": [16, 18, 232], "145": [16, 18, 45, 74, 76, 82, 149, 169, 196, 223, 231, 232], "106": [16, 35, 73, 96, 97, 100, 121, 141, 145, 152, 166, 169, 172, 177, 180, 196, 201, 205, 209, 227, 231, 232, 877], "x_transform": 16, "leav": [16, 137, 144, 172, 191, 199, 204, 216, 607, 849, 857, 859, 892], "recommend": [16, 41, 43, 44, 45, 71, 114, 155, 158, 161, 172, 188, 190, 192, 202, 203, 205, 206, 208, 210, 245, 260, 265, 266, 267, 268, 272, 276, 280, 283, 309, 311, 320, 332, 349, 356, 361, 362, 376, 413, 416, 422, 458, 476, 481, 482, 489, 496, 501, 513, 523, 531, 537, 544, 564, 569, 581, 599, 606, 622, 624, 628, 653, 660, 661, 698, 702, 703, 728, 738, 742, 769, 776, 818, 849, 851, 855, 856, 857, 870, 871, 874, 892], "stratifi": [16, 431], "tend": [16, 162, 178, 202, 204, 205, 227, 574, 871, 874], "overfit": [16, 88, 195], "cannot": [16, 59, 161, 169, 172, 188, 190, 192, 202, 203, 206, 208, 218, 237, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 291, 343, 345, 436, 481, 482, 531, 564, 587, 588, 631, 661, 712, 760, 796, 818, 823, 839, 849, 851, 873, 892], "x_scale": 16, "futur": [16, 71, 171, 205, 219, 283, 420, 426, 454, 588, 851, 855, 869, 871, 873, 892], "filters_": [16, 18, 414, 415, 418, 421, 422, 432, 565, 892], "individu": [16, 26, 32, 37, 42, 43, 44, 101, 140, 142, 144, 155, 159, 166, 170, 172, 175, 200, 206, 207, 211, 218, 219, 227, 241, 242, 245, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 298, 299, 330, 351, 414, 455, 481, 482, 532, 540, 541, 581, 607, 629, 690, 696, 704, 741, 744, 778, 790, 794, 798, 811, 813, 838, 851, 855, 867, 868, 873, 874, 892], "argsort": [16, 31, 117, 128, 143, 181], "reorder": [16, 47, 117, 265, 266, 267, 268, 481, 482, 492, 712, 714, 715, 716, 791, 821, 892], "kei": [16, 94, 95, 127, 137, 140, 141, 142, 149, 150, 152, 166, 169, 170, 171, 181, 189, 206, 207, 213, 216, 217, 219, 222, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 289, 298, 299, 304, 326, 327, 356, 360, 361, 367, 370, 371, 372, 373, 374, 389, 395, 406, 414, 421, 423, 430, 438, 441, 443, 457, 458, 459, 462, 476, 478, 479, 481, 482, 515, 519, 530, 531, 542, 554, 563, 564, 566, 579, 581, 582, 584, 588, 610, 623, 625, 642, 655, 663, 664, 665, 677, 681, 697, 698, 699, 700, 702, 703, 712, 714, 715, 716, 747, 750, 760, 777, 782, 783, 784, 788, 790, 791, 792, 793, 794, 796, 798, 799, 800, 803, 812, 813, 815, 816, 818, 820, 822, 823, 824, 845, 851, 857, 868, 880, 892], "ems_av": 16, "u": [16, 19, 21, 47, 71, 104, 112, 115, 116, 137, 141, 144, 146, 149, 151, 160, 166, 171, 172, 180, 181, 188, 189, 195, 201, 202, 205, 206, 207, 213, 216, 217, 222, 245, 256, 257, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 448, 481, 482, 539, 851, 854, 859, 870, 873, 874, 877, 892], "schurger": [16, 196, 245, 415, 430], "thu": [16, 18, 43, 47, 55, 71, 103, 114, 140, 141, 149, 152, 170, 171, 175, 180, 182, 188, 192, 196, 202, 205, 207, 208, 210, 227, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 349, 416, 425, 437, 448, 450, 452, 481, 482, 531, 539, 542, 566, 728, 738, 740, 742, 743, 847, 851, 867, 868, 871, 874, 892], "equalize_event_count": [16, 149, 151, 166, 231, 232, 237, 265, 266, 715, 892], "aaron": [16, 196, 245, 415, 430, 892], "sebastien": [16, 196, 245, 415, 430, 892], "marti": [16, 196, 245, 415, 430, 892], "reveal": [16, 101, 113, 144, 170, 191, 196, 202, 242, 245, 415, 430, 741, 744], "140": [16, 19, 20, 34, 81, 82, 112, 123, 156, 169, 196, 206, 207, 209, 227, 232, 245, 569, 874], "ems_filt": [16, 20], "continu": [17, 19, 20, 21, 27, 98, 102, 140, 142, 145, 148, 151, 161, 168, 188, 196, 197, 198, 199, 201, 202, 205, 206, 210, 214, 217, 221, 222, 227, 240, 245, 257, 259, 265, 266, 267, 268, 270, 347, 355, 359, 361, 365, 414, 420, 421, 422, 426, 454, 455, 481, 482, 494, 500, 501, 513, 523, 524, 561, 563, 564, 567, 576, 617, 622, 696, 697, 698, 712, 714, 715, 716, 737, 784, 796, 803, 805, 847, 851, 867, 868, 873, 877, 880, 892], "spoc": [17, 20, 27, 245, 265, 270, 414, 422, 494, 524, 565, 882, 892], "xdawn": [17, 20, 27, 78, 85, 245, 262, 265, 267, 268, 270, 361, 376, 414, 418, 421, 429, 481, 561, 626, 791, 882, 892], "em": [17, 20, 27, 196, 265, 267, 268, 270, 430, 481, 561, 626, 882, 892], "recept": [17, 20, 27, 165, 197, 198, 245, 251, 270, 314, 330, 376, 420, 426, 454, 482, 822, 868], "spectro": [17, 20, 27, 114, 165, 197, 198, 265, 267, 268, 270, 420, 422, 426, 454, 494, 524, 731], "ssd": [17, 20, 27, 265, 267, 268, 270, 494, 524, 731, 882, 892], "mvpa": [18, 165, 197, 198, 262, 265, 267, 268, 270, 276, 356, 414, 415, 417, 418, 421, 423, 424, 429, 431, 432, 455, 531, 542, 565, 631, 760, 892], "neurophysiolog": [18, 19, 848], "interpret": [18, 19, 103, 142, 151, 159, 160, 188, 196, 202, 203, 218, 229, 231, 232, 237, 245, 260, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 283, 305, 312, 315, 329, 331, 356, 357, 359, 361, 372, 416, 417, 418, 420, 424, 427, 430, 431, 432, 435, 452, 453, 457, 470, 472, 473, 481, 482, 489, 496, 504, 506, 522, 525, 526, 531, 537, 538, 547, 548, 563, 564, 566, 569, 576, 577, 580, 581, 582, 588, 591, 595, 605, 607, 614, 660, 663, 664, 665, 668, 677, 680, 698, 699, 700, 701, 702, 703, 707, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 730, 731, 739, 740, 741, 742, 743, 760, 784, 790, 791, 792, 794, 795, 796, 797, 804, 809, 811, 814, 851, 854, 855, 862, 874, 892], "romain": [18, 892], "trachel": [18, 892], "trachelr": 18, "sample_path": [18, 124, 135, 136], "meg_data": [18, 140], "reshap": [18, 137, 195, 227, 228, 231, 235, 237, 420, 429], "scaler": [18, 882, 892], "coef": [18, 19, 195, 196, 432], "revers": [18, 19, 73, 143, 146, 172, 188, 199, 201, 202, 204, 205, 207, 216, 262, 267, 268, 272, 273, 276, 278, 279, 280, 281, 794, 796, 798, 799, 818, 823, 892], "sequenti": [18, 140, 150, 222, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 337, 356, 357, 359, 361, 417, 424, 427, 430, 431, 457, 470, 472, 481, 482, 522, 525, 526, 537, 538, 547, 548, 569, 576, 577, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 750, 760, 779, 784, 792, 795, 814, 818, 823, 824, 847], "kai": [18, 19, 144, 245, 418, 420, 432, 438], "g\u00f6rgen": [18, 19, 245, 418, 420, 432], "dylan": [18, 19, 83, 245, 418, 420, 432, 564], "hayn": [18, 19, 245, 418, 420, 432], "benjamin": [18, 19, 245, 414, 418, 420, 432], "blankertz": [18, 19, 245, 414, 418, 420, 432], "felix": [18, 19, 112, 245, 418, 420, 432, 892], "bie\u00dfmann": [18, 19, 245, 418, 420, 432], "On": [18, 19, 71, 72, 166, 168, 200, 202, 205, 206, 242, 245, 257, 283, 418, 420, 432, 443, 463, 564, 573, 849, 851, 856, 857, 859, 869, 874, 892], "multivari": [18, 19, 90, 94, 137, 162, 195, 196, 245, 356, 418, 420, 432, 666, 868, 871, 892], "110": [18, 19, 21, 35, 41, 81, 82, 112, 158, 169, 209, 227, 232, 245, 418, 420, 432, 569], "067": [18, 19, 245, 418, 420, 432], "968": [18, 20, 232], "1035": 18, "linear_model_pattern": [18, 20], "reproduc": [19, 45, 71, 93, 151, 195, 217, 298, 516, 564, 597, 616, 664, 665, 666, 675, 676, 678, 699, 700, 701, 702, 703, 851, 892], "lalor": [19, 195, 245, 420, 868], "mtrf": [19, 171, 195, 245, 420, 882, 892], "receptivefield": [19, 195, 426, 882, 892], "speech": [19, 195, 245, 420, 603, 741, 744, 868], "envelop": [19, 82, 113, 114, 115, 136, 146, 196, 265, 266, 267, 268, 421, 481, 482, 569, 728, 738, 742, 868, 892], "128": [19, 24, 41, 50, 120, 158, 160, 168, 169, 170, 171, 205, 222, 224, 227, 231, 265, 266, 413, 778, 868, 892], "try": [19, 31, 71, 75, 83, 140, 141, 143, 151, 156, 158, 161, 162, 167, 171, 176, 180, 192, 202, 203, 204, 205, 206, 207, 216, 223, 224, 242, 275, 283, 431, 451, 464, 489, 496, 564, 579, 776, 833, 849, 850, 851, 856, 869, 871, 872, 892], "known": [19, 44, 88, 112, 114, 144, 151, 156, 160, 165, 180, 225, 226, 227, 262, 265, 266, 267, 268, 269, 270, 271, 276, 356, 366, 449, 455, 481, 482, 489, 496, 513, 530, 531, 545, 607, 631, 634, 668, 676, 679, 694, 760, 847, 863, 868, 874, 892], "literatur": [19, 144, 242, 264, 265, 266, 267, 268, 712, 715, 847], "simpli": [19, 43, 135, 143, 144, 146, 149, 170, 171, 188, 200, 201, 205, 207, 210, 217, 218, 227, 241, 242, 260, 264, 265, 266, 267, 268, 298, 299, 481, 482, 581, 582, 712, 715, 849, 851, 854, 859, 868, 874, 892], "chri": [19, 114, 136, 195, 196, 245, 892], "holdgraf": [19, 114, 115, 136, 195, 196, 245, 420, 892], "choldgraf": [19, 114, 115, 136, 195], "nicola": [19, 47, 245, 672, 892], "barascud": [19, 892], "sphinx_gallery_thumbnail_numb": [19, 120, 196], "scipi": [19, 31, 97, 111, 156, 171, 172, 195, 202, 206, 224, 227, 228, 229, 232, 235, 236, 242, 257, 262, 265, 266, 267, 268, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 320, 331, 360, 362, 414, 416, 421, 425, 449, 450, 452, 453, 454, 457, 481, 482, 563, 564, 572, 579, 660, 692, 694, 699, 700, 702, 703, 705, 706, 712, 714, 715, 716, 728, 731, 738, 760, 777, 792, 799, 803, 812, 814, 815, 820, 822, 850, 851, 871, 873, 876, 889, 892], "loadmat": [19, 195], "collect": [19, 71, 127, 151, 157, 168, 172, 183, 184, 190, 191, 192, 200, 210, 213, 242, 245, 258, 262, 265, 266, 267, 268, 323, 414, 421, 441, 481, 482, 563, 564, 584, 586, 697, 712, 714, 716, 774, 784, 792, 799, 803, 815, 820, 822, 847, 851, 866, 867, 874, 877, 892], "listen": [19, 868, 873, 880], "know": [19, 40, 127, 142, 156, 160, 169, 172, 189, 192, 200, 202, 205, 206, 207, 218, 231, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 539, 542, 652, 800, 851, 854, 857, 858, 869, 871, 874, 892], "primarili": [19, 71, 170, 199, 202, 416, 481, 482, 613, 782, 847, 858], "speech_data": [19, 195], "down": [19, 21, 71, 112, 151, 161, 192, 195, 196, 202, 206, 218, 219, 229, 231, 262, 263, 265, 266, 267, 268, 274, 275, 414, 421, 454, 481, 482, 563, 564, 597, 699, 700, 702, 703, 712, 714, 716, 760, 788, 790, 791, 792, 796, 799, 803, 812, 813, 815, 820, 849, 851, 873, 892], "biosemi128": [19, 170], "rawarrai": [19, 64, 66, 68, 71, 76, 83, 114, 159, 188, 190, 205, 208, 222, 266, 268, 501, 847, 882, 892], "ln": [19, 92, 728, 738, 742, 857, 874], "800": [19, 33, 43, 51, 60, 81, 83, 126, 127, 134, 135, 144, 155, 156, 160, 166, 175, 177, 192, 202, 209, 235, 272, 273, 276, 279, 280, 281, 473, 760, 818, 823], "alpha": [19, 21, 28, 35, 39, 40, 44, 46, 49, 50, 59, 71, 96, 97, 110, 112, 113, 116, 135, 137, 146, 151, 172, 177, 181, 190, 195, 206, 212, 227, 229, 232, 237, 241, 242, 261, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 356, 420, 426, 472, 476, 478, 479, 481, 482, 547, 633, 690, 696, 699, 700, 702, 703, 712, 714, 716, 760, 776, 779, 792, 796, 808, 814, 818, 823, 892], "ln1": 19, "lw": [19, 39, 144, 172, 181, 195, 210, 212, 224, 728, 738, 892], "frameon": [19, 127], "float64": [19, 64, 66, 68, 71, 76, 83, 92, 94, 114, 159, 167, 190, 205, 208, 222, 480, 692, 874, 892], "7677": 19, "7676": 19, "119": [19, 44, 56, 123, 135, 160, 169, 196, 227, 892], "938": [19, 166, 174, 232], "construct": [19, 42, 70, 103, 140, 144, 162, 168, 178, 180, 183, 184, 188, 191, 196, 202, 205, 206, 207, 210, 224, 227, 241, 242, 265, 266, 267, 268, 272, 276, 278, 280, 281, 285, 286, 298, 315, 362, 438, 449, 450, 452, 453, 481, 482, 498, 579, 623, 656, 661, 662, 698, 707, 718, 721, 773, 779, 813, 818, 824, 847, 867, 874, 892], "relationship": [19, 22, 143, 160, 192, 204, 227, 420, 426, 458, 728, 738, 739, 740, 742, 743, 847, 868, 873, 874], "rf": [19, 195, 420, 892], "feature_nam": [19, 195, 420, 892], "corrcoef": [19, 22, 47, 420], "extra": [19, 81, 82, 145, 160, 166, 169, 170, 191, 207, 216, 223, 262, 265, 266, 267, 268, 270, 274, 307, 308, 314, 337, 339, 414, 415, 421, 433, 481, 482, 563, 564, 579, 712, 714, 716, 756, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 847, 855, 859, 892], "inclus": [19, 123, 140, 143, 185, 257, 265, 266, 275, 278, 383, 406, 407, 459, 476, 478, 479, 492, 542, 559, 564, 588, 704, 713, 715, 892], "n_delai": [19, 420], "held": [19, 80, 171, 195, 873], "coef_": [19, 195, 418, 420, 563], "n_output": [19, 420, 426], "n_featur": [19, 195, 196, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 429, 565, 597, 692], "delays_": [19, 195, 420], "mean_coef": 19, "mean_scor": 19, "ix_ch": 19, "08": [19, 20, 34, 40, 42, 45, 50, 58, 59, 74, 84, 91, 94, 103, 107, 109, 112, 130, 139, 151, 160, 166, 174, 176, 177, 178, 179, 180, 183, 184, 196, 202, 207, 209, 216, 223, 224, 227, 229, 230, 231, 232, 237, 245], "sometim": [19, 27, 61, 83, 112, 115, 117, 127, 128, 140, 144, 156, 161, 168, 169, 189, 190, 200, 202, 203, 205, 207, 208, 227, 262, 265, 266, 267, 268, 270, 274, 414, 421, 481, 482, 497, 563, 564, 579, 617, 623, 712, 714, 716, 777, 784, 792, 799, 803, 812, 815, 820, 822, 847, 851, 859, 867, 871, 874, 892], "well": [19, 22, 32, 37, 47, 71, 79, 116, 120, 136, 137, 140, 143, 144, 150, 152, 160, 162, 165, 166, 169, 172, 175, 182, 184, 188, 189, 191, 195, 199, 200, 202, 204, 205, 206, 207, 208, 210, 212, 214, 216, 222, 224, 232, 240, 242, 245, 265, 266, 267, 268, 275, 276, 322, 344, 356, 372, 414, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 430, 438, 453, 454, 481, 482, 564, 565, 578, 585, 587, 599, 606, 712, 728, 730, 738, 741, 742, 743, 744, 790, 792, 806, 847, 849, 851, 855, 857, 863, 868, 869, 871, 873, 874, 876, 880, 892], "recreat": [19, 127, 140, 202, 783], "time_plot": 19, "highlight": [19, 21, 90, 95, 114, 120, 150, 151, 172, 175, 176, 203, 205, 210, 218, 262, 263, 265, 266, 267, 268, 275, 414, 421, 481, 482, 563, 712, 714, 716, 777, 788, 792, 794, 799, 815, 820, 822, 851, 892], "max_coef": 19, "pcolormesh": [19, 114, 195, 892], "shade": [19, 171, 195, 206, 769, 784, 825, 826, 892], "gouraud": [19, 195], "ncoeffici": 19, "setp": [19, 195, 203], "get_xticklabel": [19, 195], "2c": [19, 874], "ix_plot": 19, "argmin": [19, 120, 144, 242], "vlim": [19, 71, 80, 100, 109, 141, 142, 204, 207, 211, 232, 242, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 892], "nfor": 19, "anoth": [19, 31, 45, 71, 87, 95, 126, 141, 143, 144, 145, 149, 151, 155, 156, 161, 167, 171, 180, 188, 201, 202, 205, 206, 210, 212, 217, 218, 219, 227, 232, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 279, 280, 281, 283, 316, 356, 357, 359, 361, 362, 417, 424, 427, 430, 431, 440, 457, 470, 472, 481, 482, 510, 522, 525, 526, 537, 538, 547, 548, 550, 569, 576, 577, 596, 660, 663, 664, 665, 677, 683, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 748, 749, 750, 781, 792, 795, 813, 814, 847, 849, 851, 859, 868, 873, 874, 877, 892], "case": [19, 44, 58, 71, 74, 90, 94, 95, 103, 114, 120, 123, 127, 138, 140, 143, 144, 149, 155, 161, 162, 165, 168, 169, 171, 172, 180, 181, 185, 188, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 216, 217, 218, 227, 228, 229, 235, 237, 240, 242, 245, 259, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 289, 298, 299, 304, 310, 320, 331, 355, 356, 360, 361, 372, 373, 374, 375, 414, 421, 431, 438, 443, 454, 457, 458, 465, 472, 476, 478, 479, 481, 482, 489, 496, 504, 511, 513, 518, 523, 530, 531, 532, 533, 534, 535, 542, 553, 559, 567, 579, 584, 597, 616, 622, 639, 653, 656, 672, 677, 698, 699, 712, 714, 715, 716, 724, 730, 740, 743, 747, 760, 778, 784, 791, 793, 796, 797, 800, 818, 847, 851, 859, 871, 873, 874, 892], "aim": [19, 137, 158, 177, 223, 224, 305, 357, 358, 359], "exploit": [19, 88, 892], "context": [19, 42, 116, 171, 172, 175, 196, 202, 227, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 414, 417, 424, 427, 430, 431, 457, 470, 472, 481, 482, 522, 525, 526, 532, 537, 538, 547, 548, 553, 564, 569, 576, 577, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 754, 755, 790, 792, 795, 807, 813, 814, 831, 832, 857, 873, 892], "treat": [19, 21, 151, 172, 196, 207, 208, 227, 231, 265, 266, 269, 275, 492, 494, 555, 699, 700, 702, 703, 715, 784, 802, 892], "independ": [19, 71, 75, 83, 109, 112, 151, 158, 162, 166, 179, 180, 181, 196, 199, 201, 202, 204, 205, 206, 210, 218, 227, 245, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 360, 417, 424, 429, 481, 482, 564, 565, 572, 579, 588, 597, 599, 694, 696, 699, 700, 702, 703, 706, 739, 740, 742, 743, 803, 805, 807, 858, 867, 868, 871, 874, 892], "therefor": [19, 71, 94, 136, 142, 146, 151, 158, 162, 169, 170, 189, 196, 200, 201, 202, 204, 205, 208, 210, 227, 242, 265, 266, 275, 320, 322, 438, 481, 489, 496, 497, 501, 564, 617, 623, 624, 628, 851, 855, 867, 873, 874], "qualiti": [19, 121, 157, 166, 172, 201, 202, 205, 207, 213, 219, 242, 245, 260, 265, 266, 267, 268, 481, 482, 522, 564, 581, 603, 804, 851, 867, 873, 874, 880, 892], "expens": [19, 165, 166, 172, 607, 875, 880, 892], "especi": [19, 55, 71, 112, 120, 127, 143, 149, 162, 166, 169, 199, 200, 202, 204, 205, 209, 216, 242, 267, 268, 276, 481, 482, 564, 589, 607, 699, 700, 702, 703, 800, 847, 851, 854, 867, 871, 874, 892], "lag": [19, 27, 78, 85, 195, 224, 245, 265, 267, 268, 270, 420, 426, 440, 481, 561, 626, 892], "footcit": [19, 388, 851], "crosseetal2016": 19, "earlier": [19, 145, 167, 171, 191, 199, 202, 216, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 456, 457, 458, 476, 478, 479, 542, 800, 892], "wherea": [19, 81, 136, 143, 156, 158, 168, 175, 196, 202, 203, 204, 210, 227, 259, 265, 266, 284, 298, 299, 481, 482, 489, 790, 813, 819, 847, 874, 878, 892], "chang": [19, 31, 44, 45, 114, 127, 136, 142, 145, 149, 151, 156, 158, 161, 167, 170, 171, 172, 175, 176, 178, 184, 188, 189, 191, 192, 195, 200, 205, 206, 207, 211, 212, 217, 218, 219, 223, 227, 230, 235, 237, 242, 245, 257, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 298, 299, 306, 309, 311, 314, 322, 337, 342, 343, 345, 349, 362, 364, 390, 414, 421, 435, 443, 448, 449, 451, 453, 455, 457, 458, 467, 473, 476, 478, 479, 481, 482, 502, 505, 506, 518, 522, 525, 526, 542, 552, 553, 555, 556, 557, 563, 564, 566, 579, 585, 588, 595, 597, 599, 621, 629, 631, 647, 656, 658, 660, 661, 677, 704, 707, 712, 714, 715, 716, 729, 755, 760, 770, 776, 777, 778, 784, 785, 788, 789, 790, 791, 792, 794, 796, 799, 800, 801, 803, 805, 807, 810, 812, 813, 814, 815, 816, 818, 820, 822, 823, 824, 825, 830, 838, 852, 857, 859, 867, 870, 871, 874, 877, 878], "affect": [19, 49, 72, 81, 141, 142, 149, 151, 167, 190, 199, 200, 202, 203, 205, 206, 208, 210, 242, 245, 258, 260, 265, 266, 267, 268, 272, 275, 276, 280, 367, 406, 455, 456, 481, 482, 502, 581, 629, 664, 665, 740, 743, 813, 818, 851, 867, 874, 892], "obvious": [19, 158, 210, 242], "cf": [19, 145, 155, 728, 738, 742], "next": [19, 54, 55, 58, 114, 116, 121, 135, 136, 141, 145, 150, 151, 156, 157, 161, 166, 171, 175, 177, 179, 188, 190, 199, 201, 205, 207, 211, 216, 217, 218, 227, 241, 242, 262, 265, 266, 267, 268, 274, 356, 413, 414, 421, 481, 482, 563, 564, 579, 712, 714, 715, 716, 741, 744, 777, 778, 799, 803, 812, 815, 820, 849, 851, 859, 874, 877, 892], "section": [19, 75, 116, 136, 137, 140, 142, 144, 149, 150, 151, 156, 165, 166, 167, 171, 172, 175, 188, 189, 190, 192, 199, 201, 202, 203, 205, 208, 210, 216, 217, 242, 260, 262, 263, 264, 265, 266, 267, 268, 274, 275, 277, 298, 299, 314, 395, 414, 421, 435, 441, 449, 451, 481, 482, 498, 510, 563, 564, 579, 588, 600, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 851, 855, 867, 873, 874, 875, 877, 892], "haufeetal2014": 19, "sr": [19, 213, 500, 868, 874], "1e4": 19, "mean_pattern": 19, "max_pattern": 19, "8384": [19, 892], "1204": 19, "1902": 19, "2301": 19, "253": [19, 46, 169, 209, 232, 245], "2512": [19, 169], "297": [19, 35, 169, 209, 227, 232], "2548": 19, "367": [19, 81, 169, 200, 209, 227], "2801": 19, "3054": 19, "522": [19, 196, 209, 232], "3268": 19, "602": [19, 85, 88, 168, 203, 232, 877], "3456": 19, "680": [19, 81, 106, 113], "3603": 19, "757": [19, 232], "3722": 19, "832": [19, 232], "3811": 19, "910": [19, 81, 232, 234], "3906": 19, "987": [19, 195, 232], "3984": 19, "1065": 19, "4056": 19, "1145": [19, 196], "4129": 19, "1224": [19, 209], "4192": 19, "1294": [19, 195], "4204": 19, "1371": [19, 135, 157, 196, 240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 724, 730], "4249": 19, "1436": 19, "4232": 19, "1503": [19, 216], "4224": 19, "1562": 19, "4186": 19, "1625": [19, 195], "4168": 19, "1693": 19, "4172": 19, "1750": 19, "1806": 19, "4087": 19, "1866": 19, "4065": 19, "1926": 19, "4043": 19, "1985": 19, "4018": 19, "2049": 19, "4014": 19, "2110": 19, "4000": [19, 114, 166, 207, 257, 505], "2178": 19, "4015": 19, "2254": 19, "4057": 19, "2327": 19, "4083": 19, "2405": 19, "4126": 19, "43it": [19, 34, 103, 108, 112, 195, 196, 209, 227, 228, 231, 232], "2473": 19, "4132": 19, "2547": [19, 195], "4157": 19, "2627": 19, "4202": 19, "2706": 19, "4241": 19, "2783": 19, "4270": 19, "2859": [19, 195], "4295": 19, "2935": 19, "4319": 19, "3013": [19, 874], "4348": 19, "3068": 19, "4298": 19, "3141": 19, "4309": 19, "3219": 19, "4337": 19, "3276": 19, "4293": 19, "3332": 19, "4247": 19, "3393": 19, "4221": 19, "3464": 19, "4230": 19, "3530": 19, "4222": 19, "3602": 19, "4234": 19, "3669": 19, "4229": 19, "3740": 19, "4239": 19, "3817": 19, "4268": 19, "3895": 19, "3968": 19, "4311": 19, "4046": 19, "4338": 19, "33it": [19, 33, 34, 103, 108, 109, 180, 195, 196, 209, 227, 229, 230, 232], "4121": [19, 96], "4355": 19, "4199": 19, "4381": 19, "4275": 19, "4399": 19, "4351": 19, "4415": 19, "4429": 19, "4437": 19, "4504": 19, "4448": [19, 245, 741, 744], "4580": 19, "4462": 19, "4659": 19, "4484": 19, "4736": 19, "4498": 19, "4812": 19, "4508": 19, "4891": 19, "4529": 19, "4969": 19, "4545": 19, "60it": [19, 33, 34, 103, 108, 109, 112, 195, 196, 209, 227, 229, 232, 237], "5047": 19, "4560": 19, "5122": 19, "4567": 19, "5201": 19, "4583": 19, "5280": 19, "4598": 19, "5359": 19, "4613": 19, "5439": 19, "4630": 19, "5520": 19, "4649": 19, "67": [19, 33, 35, 47, 57, 81, 82, 103, 108, 112, 114, 116, 149, 158, 169, 172, 176, 178, 181, 191, 195, 196, 209, 227, 228, 229, 231, 232, 236, 237, 245, 531, 892], "5599": 19, "4662": 19, "5677": 19, "4673": 19, "5755": 19, "4683": 19, "5834": 19, "4695": 19, "5911": 19, "4700": 19, "5989": 19, "4706": 19, "6070": 19, "4722": 19, "6149": [19, 205], "4732": 19, "6227": 19, "4739": 19, "6306": 19, "4748": 19, "6386": 19, "4759": 19, "6464": 19, "4763": 19, "6544": 19, "4773": 19, "6623": 19, "4779": 19, "6694": 19, "4761": 19, "6762": 19, "4731": 19, "6828": [19, 337], "4698": 19, "6899": 19, "4682": 19, "6969": 19, "4667": 19, "7039": 19, "7112": 19, "4644": 19, "7184": 19, "4635": 19, "7253": 19, "4619": 19, "7323": 19, "4606": 19, "7399": 19, "4612": 19, "7481": 19, "4636": 19, "7560": 19, "4650": 19, "7640": 19, "7725": 19, "7808": 19, "4721": 19, "7889": 19, "7974": 19, "4762": 19, "8059": 19, "4788": 19, "8137": 19, "4791": 19, "8223": 19, "4818": 19, "8308": 19, "4842": 19, "4469": 19, "2161": 19, "157": [19, 24, 91, 93, 123, 137, 151, 169, 170, 188, 211, 227, 231, 232, 245, 340, 672, 892], "2988": 19, "237": [19, 42, 56, 79, 85, 169, 227, 231], "3477": 19, "315": [19, 112, 169, 209, 892], "3760": 19, "395": [19, 81, 196, 227], "3976": [19, 337], "476": [19, 196, 227, 245, 414], "4146": 19, "556": [19, 56, 59, 232], "4262": 19, "636": [19, 176, 187, 232], "4358": 19, "719": [19, 232], "4450": 19, "4524": 19, "883": [19, 232], "4587": 19, "966": [19, 35, 42, 129, 162, 172, 207, 232, 245, 476], "4643": 19, "1048": 19, "4688": 19, "1127": [19, 196], "4710": 19, "1207": [19, 245, 301], "1286": [19, 209], "1365": 19, "1444": 19, "4774": 19, "1527": 19, "4805": 19, "1606": 19, "4813": 19, "1687": 19, "4828": 19, "1767": 19, "4839": 19, "1844": 19, "4836": 19, "1924": 19, "4844": 19, "2003": [19, 71, 195, 242, 245, 420, 572, 867], "4847": 19, "2083": 19, "4857": 19, "2163": 19, "4866": 19, "2242": [19, 169, 216], "4871": 19, "2320": 19, "4870": 19, "2396": 19, "4859": [19, 880], "4854": 19, "2537": 19, "4798": 19, "2596": 19, "4730": 19, "2668": 19, "4715": 19, "2741": 19, "4704": 19, "2800": 19, "4640": 19, "2851": 19, "4555": 19, "2903": 19, "4475": 19, "2973": 19, "4467": [19, 96], "3053": 19, "4496": 19, "3125": 19, "4495": 19, "3199": 19, "4501": 19, "3280": 19, "4530": 19, "3352": 19, "4525": 19, "3415": 19, "4490": 19, "4453": 19, "3548": 19, "4451": 19, "55it": [19, 33, 103, 108, 112, 195, 196, 209, 227, 228, 231, 232, 236, 237], "3615": 19, "4436": 19, "3683": 19, "4425": 19, "3743": 19, "4387": 19, "3806": 19, "4362": 19, "3869": 19, "4339": 19, "3947": 19, "4367": 19, "4019": 19, "4372": 19, "4096": [19, 21, 182, 269], "4392": 19, "4175": 19, "4421": 19, "4254": 19, "4445": 19, "4333": 19, "4470": 19, "4413": 19, "4497": 19, "4492": 19, "4518": 19, "4571": 19, "4539": 19, "4648": 19, "4551": 19, "4728": 19, "4574": 19, "4808": 19, "4593": 19, "4621": 19, "4974": 19, "4647": 19, "5056": 19, "4669": 19, "5137": 19, "4687": 19, "5220": 19, "4712": 19, "5304": [19, 51, 60], "4738": 19, "5386": 19, "4756": 19, "5469": 19, "4777": 19, "5554": 19, "4803": 19, "5639": 19, "5723": 19, "4848": 19, "5803": 19, "4855": 19, "5890": 19, "4882": 19, "5975": 19, "4902": 19, "6059": 19, "4917": 19, "6145": 19, "4938": 19, "6229": 19, "4953": 19, "6315": 19, "4971": 19, "6401": 19, "4990": 19, "6489": 19, "5014": 19, "6575": [19, 185], "5028": 19, "6662": 19, "5046": 19, "6748": 19, "5062": 19, "6835": 19, "5079": 19, "6918": 19, "5084": 19, "7007": 19, "5106": 19, "7095": 19, "5124": 19, "7179": 19, "5129": 19, "7262": [19, 40, 58, 59, 94, 178, 196, 224], "5132": 19, "7346": 19, "5136": 19, "7430": 19, "5140": 19, "7515": 19, "5148": 19, "7604": 19, "5167": 19, "7691": 19, "5180": 19, "57it": [19, 34, 103, 109, 112, 209, 227, 228, 231, 232, 235], "7778": 19, "5190": 19, "7868": 19, "5211": 19, "7958": 19, "5229": [19, 245, 741, 744], "8048": 19, "5247": 19, "8136": 19, "5256": 19, "8226": 19, "5272": 19, "8315": 19, "5284": 19, "1554": 19, "117": [19, 35, 62, 145, 169, 196, 209, 227, 231, 232, 245, 741, 744, 892], "2182": 19, "190": [19, 46, 50, 59, 76, 81, 116, 169, 184, 227, 232, 245, 699, 700, 702, 703], "2761": 19, "269": [19, 130, 132, 136, 169, 209, 227], "3201": 19, "350": [19, 81, 116, 117, 141, 160, 169, 209], "3525": 19, "416": [19, 144, 171, 196, 199, 227, 232], "3609": 19, "479": [19, 104, 106, 209, 227, 232], "3650": 19, "535": [19, 196, 232], "3626": 19, "608": [19, 177, 209, 232], "3736": 19, "3868": 19, "768": [19, 172, 183, 232], "3990": 19, "848": [19, 201, 209, 215, 232], "4089": 19, "928": [19, 232], "4176": 19, "997": [19, 123, 202, 209, 210, 232, 245], "4215": 19, "4250": [19, 96], "1217": [19, 196], "4267": 19, "1291": [19, 211], "4292": 19, "1359": 19, "4289": 19, "1428": 19, "4290": 19, "1499": 19, "4299": 19, "1566": 19, "4288": 19, "1639": [19, 245, 265, 266, 267, 268, 481, 482], "4305": 19, "1720": 19, "4356": 19, "4403": 19, "1883": 19, "4449": 19, "1962": 19, "4480": 19, "2042": [19, 169], "4513": 19, "2122": [19, 169], "4543": 19, "2203": 19, "4573": 19, "2283": 19, "4597": 19, "2364": 19, "4622": 19, "2440": 19, "4629": 19, "2522": [19, 100, 169], "4656": 19, "2604": 19, "4681": 19, "2685": 19, "4702": 19, "2764": 19, "2842": 19, "4719": 19, "2924": [19, 195], "3000": [19, 40, 49, 113, 137, 142, 145, 146, 192, 201, 207, 212, 257, 478, 479], "3066": 19, "3129": 19, "4660": 19, "3188": 19, "4604": 19, "3267": 19, "4620": 19, "3345": 19, "4634": 19, "3422": 19, "3499": 19, "3576": 19, "4655": 19, "3642": 19, "4625": 19, "3721": 19, "4639": 19, "3801": 19, "4657": 19, "3883": [19, 159], "4679": 19, "3961": 19, "4040": [19, 205, 245, 564], "4699": 19, "4116": 19, "4190": 19, "4264": [19, 337], "4689": 19, "4414": 19, "4489": 19, "4685": 19, "4563": 19, "4642": 19, "4716": 19, "4676": 19, "4661": 19, "4929": 19, "4645": 19, "5004": [19, 874], "4646": 19, "5082": 19, "5158": 19, "5231": 19, "5295": 19, "4615": 19, "5352": 19, "5410": 19, "4511": 19, "5545": 19, "4482": 19, "5625": 19, "4506": [19, 96], "5705": 19, "5786": 19, "5862": 19, "4565": 19, "5941": 19, "6025": 19, "4616": 19, "6103": 19, "4627": 19, "6179": [19, 176], "6258": 19, "6342": [19, 35], "4674": 19, "6428": 19, "4707": 19, "6514": 19, "4771": 19, "6692": 19, "4815": 19, "6779": 19, "4846": 19, "6861": 19, "4856": 19, "6937": 19, "4849": 19, "7011": 19, "4835": 19, "7087": 19, "4830": 19, "7166": 19, "4834": 19, "7249": 19, "4850": 19, "7332": 19, "7419": 19, "4893": 19, "7507": 19, "4921": 19, "7596": 19, "4951": 19, "7686": 19, "4984": 19, "7775": 19, "5012": 19, "7864": 19, "5039": 19, "7951": 19, "5058": 19, "8038": 19, "5077": 19, "8126": 19, "5097": 19, "8216": 19, "5123": 19, "8306": [19, 892], "5146": 19, "4717": 19, "sens": [19, 61, 71, 142, 160, 202, 207, 212, 213, 242, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 542, 782, 800, 847, 851, 873, 874], "actual": [19, 23, 27, 41, 43, 61, 64, 81, 115, 128, 144, 151, 158, 160, 162, 168, 170, 172, 175, 182, 183, 184, 185, 189, 190, 195, 200, 201, 202, 203, 213, 218, 227, 229, 232, 235, 236, 237, 242, 258, 275, 448, 544, 564, 584, 847, 851, 868, 874, 892], "valid_samples_": [19, 420], "grei": [19, 113, 142, 242, 267, 268, 712, 796, 892], "attempt": [19, 76, 195, 199, 229, 265, 266, 267, 268, 273, 279, 281, 378, 481, 482, 488, 498, 564, 642, 656, 823, 845, 847, 873, 892], "reflect": [19, 32, 61, 71, 120, 135, 141, 149, 151, 160, 161, 177, 181, 199, 204, 205, 207, 216, 265, 266, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 452, 453, 454, 457, 458, 476, 478, 479, 481, 482, 542, 629, 692, 799, 800, 813, 847, 851, 867, 874, 892], "most": [19, 28, 45, 47, 71, 74, 82, 83, 104, 108, 109, 114, 120, 127, 135, 140, 144, 149, 150, 151, 152, 155, 156, 165, 167, 169, 171, 172, 181, 188, 192, 199, 202, 204, 206, 207, 209, 210, 211, 212, 216, 227, 231, 240, 257, 265, 266, 267, 268, 270, 271, 276, 279, 314, 332, 357, 358, 359, 380, 381, 382, 385, 386, 387, 389, 393, 394, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 443, 449, 454, 457, 476, 516, 522, 551, 564, 574, 597, 599, 616, 664, 665, 666, 675, 676, 677, 678, 699, 700, 701, 702, 703, 750, 755, 760, 778, 799, 847, 850, 851, 855, 856, 857, 869, 871, 873, 874, 875, 878, 882, 892], "toward": [19, 43, 46, 54, 55, 71, 103, 160, 180, 192, 201, 231, 242, 245, 456, 458, 546, 567, 874, 892], "directli": [19, 34, 43, 94, 95, 138, 143, 144, 149, 165, 170, 171, 172, 188, 190, 196, 200, 203, 204, 205, 206, 207, 218, 235, 241, 242, 257, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 276, 277, 280, 281, 314, 315, 320, 324, 361, 374, 414, 421, 450, 478, 481, 482, 483, 484, 489, 502, 563, 564, 579, 581, 629, 656, 712, 714, 716, 762, 777, 779, 790, 792, 799, 803, 812, 815, 818, 820, 822, 824, 869, 874, 882, 892], "obtain": [19, 38, 42, 43, 61, 90, 94, 95, 137, 146, 151, 155, 157, 158, 170, 172, 175, 177, 178, 184, 185, 202, 204, 210, 216, 217, 224, 227, 229, 232, 241, 263, 265, 266, 267, 268, 269, 272, 276, 280, 281, 299, 311, 344, 346, 356, 358, 362, 376, 420, 422, 464, 465, 475, 478, 479, 481, 482, 489, 496, 501, 516, 531, 539, 550, 564, 568, 575, 597, 616, 624, 628, 634, 661, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 682, 686, 699, 700, 701, 702, 703, 713, 740, 743, 760, 779, 795, 818, 819, 824, 847, 867, 868, 872, 873, 874, 892], "via": [19, 135, 136, 140, 142, 144, 145, 149, 150, 157, 168, 169, 170, 171, 172, 175, 180, 192, 199, 200, 201, 205, 206, 216, 219, 227, 228, 231, 235, 237, 240, 241, 245, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 277, 278, 280, 281, 284, 298, 299, 311, 320, 324, 330, 331, 378, 425, 448, 450, 452, 453, 466, 473, 481, 482, 494, 564, 693, 699, 700, 702, 703, 714, 715, 716, 762, 776, 780, 781, 790, 794, 795, 799, 807, 813, 838, 847, 849, 851, 853, 854, 859, 871, 892], "procedur": [19, 113, 144, 161, 162, 188, 204, 205, 210, 227, 229, 230, 231, 237, 242, 245, 258, 260, 265, 266, 267, 268, 349, 356, 361, 422, 481, 482, 564, 565, 579, 581, 597, 607, 629, 699, 847, 868, 871, 874, 877, 892], "straightforward": [19, 103, 189, 202, 224, 874, 892], "sign": [19, 28, 38, 39, 47, 151, 205, 227, 230, 235, 267, 268, 272, 273, 276, 279, 280, 281, 337, 448, 456, 476, 478, 479, 517, 531, 532, 533, 534, 535, 597, 699, 700, 702, 703, 851, 874, 892], "strength": [19, 22, 35, 94, 151, 175, 205, 273, 279, 281, 579, 874], "direct": [19, 61, 80, 123, 150, 156, 160, 161, 168, 178, 180, 185, 200, 206, 207, 209, 242, 245, 257, 263, 265, 266, 272, 273, 275, 276, 279, 280, 281, 291, 298, 299, 436, 448, 456, 481, 482, 492, 531, 574, 594, 664, 714, 716, 760, 790, 802, 813, 823, 847, 851, 857, 871, 873, 874, 892], "nbetween": 19, "giovanni": [19, 195, 245, 420, 868], "di": [19, 40, 143, 195, 245, 420, 868], "liberto": [19, 195, 245, 420, 868], "adam": [19, 135, 136, 195, 245, 420, 868, 879, 892], "bednar": [19, 195, 245, 420, 868], "edmund": [19, 195, 245, 420, 868], "fnhum": [19, 151, 195, 245, 420, 569, 868], "00604": [19, 195, 245, 420, 868], "182": [19, 20, 81, 169, 191, 201, 215, 231, 232], "receptive_field_mtrf": [19, 20], "900": [20, 45, 81, 176, 181, 232], "auto_examples_decod": 20, "ssd_spatial_filt": [20, 21], "674": [20, 21, 209], "retain": [21, 112, 149, 178, 200, 201, 216, 227, 260, 265, 266, 275, 278, 438, 564, 699, 700, 702, 703, 803, 849, 880, 892], "oscillatori": [21, 113, 224, 241, 245, 298, 299, 728, 738, 739, 742], "propos": [21, 242, 579, 588, 851, 880], "surround": [21, 82, 101, 213, 242, 422, 569, 594, 608, 707, 851], "victoria": [21, 892], "peterson": [21, 892], "victoriapeterson09": 21, "freqs_sig": 21, "freqs_nois": 21, "sort_by_spectral_ratio": [21, 422], "filt_params_sign": [21, 422], "l_trans_bandwidth": [21, 113, 114, 202, 211, 265, 266, 267, 268, 416, 425, 450, 452, 481, 482, 603, 892], "filt_params_nois": [21, 422], "72000": [21, 82, 191], "196608": 21, "262144": 21, "327680": 21, "393216": 21, "458752": 21, "67108864": 21, "67174400": 21, "134742016": 21, "136314880": 21, "268435456": 21, "825": [21, 83, 114, 232, 245, 564], "086": [21, 245, 669, 674], "preserv": [21, 34, 155, 156, 160, 166, 167, 195, 200, 205, 216, 227, 231, 260, 265, 266, 267, 268, 413, 444, 445, 446, 447, 481, 482, 500, 581, 595, 712, 714, 715, 716, 874, 892], "ratio": [21, 58, 88, 127, 144, 166, 196, 202, 205, 207, 224, 229, 230, 231, 232, 245, 272, 273, 276, 279, 280, 281, 288, 422, 546, 547, 548, 564, 565, 652, 670, 671, 712, 715, 763, 820, 867, 874, 892], "accord": [21, 156, 169, 170, 192, 195, 216, 258, 265, 266, 267, 268, 420, 422, 443, 481, 482, 489, 492, 496, 498, 559, 600, 617, 656, 662, 868, 874, 877, 892], "either": [21, 32, 43, 142, 149, 150, 151, 166, 167, 168, 170, 171, 172, 190, 199, 203, 208, 210, 217, 218, 223, 227, 242, 257, 260, 262, 265, 266, 267, 268, 269, 272, 273, 274, 276, 278, 279, 280, 281, 289, 304, 323, 340, 356, 414, 421, 422, 431, 441, 449, 472, 474, 481, 482, 513, 514, 516, 522, 526, 529, 530, 563, 564, 566, 575, 579, 584, 588, 599, 629, 639, 656, 658, 663, 664, 665, 677, 697, 698, 712, 713, 714, 716, 724, 734, 739, 740, 742, 743, 747, 760, 776, 777, 781, 784, 791, 792, 799, 803, 804, 812, 813, 814, 815, 818, 820, 822, 823, 824, 828, 851, 857, 867, 868, 871, 877, 892], "multipli": [21, 188, 202, 227, 270, 272, 273, 276, 279, 280, 281, 300, 422, 448, 531, 537, 712, 874, 877], "eq": [21, 422, 728, 738, 742, 874], "c_n": [21, 874], "reli": [21, 169, 201, 242, 314, 851, 867, 871, 874, 877, 880, 892], "suggest": [21, 26, 141, 144, 162, 201, 202, 203, 204, 205, 207, 265, 266, 290, 292, 760, 850, 855, 856, 871, 873, 892], "pariet": [21, 49, 646, 760], "ssd_sourc": [21, 422], "psd": [21, 27, 69, 75, 92, 105, 106, 111, 133, 137, 140, 166, 172, 196, 199, 203, 212, 219, 222, 240, 241, 262, 265, 266, 267, 268, 270, 271, 275, 276, 361, 419, 455, 481, 482, 521, 526, 530, 537, 538, 542, 545, 561, 618, 633, 660, 714, 716, 719, 722, 730, 731, 754, 760, 776, 792, 814, 828, 868, 892], "psd_array_welch": [21, 222, 240, 265, 266, 267, 268, 422, 481, 482, 714, 716, 882, 892], "n_fft": [21, 108, 109, 114, 133, 212, 222, 240, 242, 265, 266, 267, 268, 422, 481, 482, 537, 713, 714, 716, 717, 719, 720, 722, 731, 741, 744, 814, 892], "spec_ratio": [21, 422], "alreadi": [21, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 71, 72, 75, 79, 86, 87, 94, 95, 115, 116, 119, 120, 127, 135, 142, 144, 145, 149, 150, 151, 158, 159, 160, 162, 166, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 199, 201, 202, 205, 206, 207, 210, 216, 222, 242, 257, 265, 266, 267, 268, 272, 273, 275, 276, 277, 279, 280, 281, 298, 299, 309, 311, 330, 356, 360, 361, 369, 372, 373, 374, 375, 383, 406, 407, 414, 421, 448, 449, 457, 458, 476, 478, 479, 481, 482, 524, 542, 575, 576, 581, 629, 649, 650, 713, 732, 781, 784, 800, 842, 851, 852, 853, 855, 868, 871, 874, 875, 880, 892], "sorter": 21, "get_spectral_ratio": [21, 422], "spectral": [21, 27, 32, 33, 34, 69, 72, 105, 106, 112, 113, 114, 117, 133, 137, 142, 166, 172, 196, 201, 209, 222, 224, 241, 245, 262, 265, 266, 267, 268, 270, 271, 276, 290, 291, 292, 298, 361, 419, 422, 455, 458, 481, 482, 521, 526, 530, 537, 538, 542, 545, 561, 564, 618, 626, 633, 660, 700, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 729, 730, 731, 739, 740, 742, 743, 754, 760, 776, 786, 792, 814, 828, 868, 880, 892], "orang": [21, 151, 156, 190, 211, 232, 237, 817], "frac": [21, 149, 202, 203, 210, 227, 276, 539, 672, 725, 728, 738, 739, 740, 742, 743, 874], "p_f": 21, "p_": [21, 874], "sf": [21, 227], "384": [21, 35, 81, 144, 171, 196, 209, 227, 232], "spectrum": [21, 75, 83, 103, 104, 108, 112, 133, 137, 140, 143, 165, 166, 172, 199, 203, 205, 207, 212, 219, 222, 224, 241, 242, 243, 244, 245, 265, 266, 267, 268, 275, 455, 481, 482, 564, 714, 733, 755, 803, 805, 814, 847, 877, 880, 882, 892], "lowest": [21, 242, 260, 265, 266, 267, 268, 271, 343, 581, 689, 712, 713, 715, 784, 794], "below50": 21, "bandfilt": 21, "loglog": 21, "fill_between": [21, 113, 151, 237, 241, 242], "10000": [21, 84, 111, 443, 476, 597, 677, 701], "green": [21, 48, 49, 50, 81, 116, 151, 156, 181, 190, 207, 242, 267, 268, 760, 781, 794, 811, 817, 892], "enjoi": [21, 242], "situat": [21, 204, 208, 222, 224, 275, 321, 441, 564, 851, 855, 873, 892], "chunk": [21, 80, 84, 137, 140, 146, 184, 210, 359, 361, 443, 481, 482, 564, 588, 662, 867, 892], "overlap": [21, 71, 84, 99, 109, 140, 143, 146, 151, 152, 166, 168, 191, 201, 210, 217, 218, 222, 240, 245, 259, 265, 266, 267, 268, 328, 361, 416, 425, 438, 450, 452, 453, 472, 481, 482, 523, 524, 537, 550, 565, 581, 582, 599, 679, 698, 731, 760, 814, 847, 892], "ssd_epoch": 21, "pattern_epoch": 21, "1251": 21, "449": [21, 146, 196, 209, 227, 278], "647": [21, 146], "1457": [21, 146], "guido": [21, 245, 422], "nolt": [21, 245, 422], "gabriel": [21, 40, 204, 245, 422, 478, 563, 614], "curio": [21, 245, 422], "reliabl": [21, 103, 169, 203, 245, 422, 564], "basi": [21, 146, 162, 196, 245, 422, 435, 575, 578, 588, 599, 871, 874, 892], "spatio": [21, 46, 59, 165, 184, 195, 196, 227, 228, 238, 239, 245, 265, 267, 268, 270, 276, 277, 278, 362, 420, 422, 437, 477, 478, 481, 530, 531, 545, 561, 599, 626, 639, 641, 667, 668, 669, 670, 671, 672, 673, 674, 684, 686, 687, 688, 693, 695, 702, 703, 704, 760, 874, 892], "1528": [21, 245, 422], "1535": [21, 195, 245, 422], "057": [21, 62, 67, 140, 142, 149, 169, 171, 174, 224, 245, 422], "115": [21, 28, 35, 56, 62, 84, 94, 169, 183, 227, 231, 232, 245, 572], "produc": [22, 38, 82, 83, 117, 119, 128, 144, 161, 172, 179, 183, 190, 192, 202, 204, 210, 227, 242, 245, 257, 260, 263, 265, 271, 275, 278, 305, 306, 329, 332, 353, 357, 358, 359, 361, 368, 391, 472, 481, 482, 516, 522, 523, 526, 537, 550, 564, 567, 573, 576, 577, 588, 595, 597, 616, 622, 626, 646, 661, 663, 664, 665, 666, 675, 676, 677, 678, 680, 699, 700, 701, 702, 703, 707, 749, 760, 776, 777, 813, 841, 867, 873, 874, 877, 892], "abl": [22, 90, 135, 137, 144, 159, 161, 165, 172, 204, 205, 210, 224, 235, 275, 453, 481, 482, 564, 803, 849, 851, 868, 871, 874, 880, 892], "region": [22, 38, 41, 47, 49, 94, 95, 128, 135, 137, 150, 155, 181, 190, 202, 203, 227, 228, 241, 242, 263, 265, 266, 267, 268, 270, 278, 326, 416, 425, 450, 452, 453, 466, 467, 468, 472, 481, 482, 516, 616, 661, 672, 760, 790, 813, 816, 847, 867, 880, 892], "source_spac": [22, 278, 882, 892], "compute_distance_to_sensor": [22, 882, 892], "source_estim": [22, 27, 36, 56, 271, 276, 633, 639, 759], "surf_ori": [22, 47, 48, 49, 54, 55, 69, 158, 178, 223, 269, 366, 542, 892], "leadfield": [22, 41, 158, 163, 165, 172, 298, 299, 300, 892], "7498": [22, 31, 35, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 69, 90, 92, 93, 94, 95, 131, 172, 175, 177, 178, 179, 181, 196, 223, 224], "combin": [22, 24, 29, 30, 31, 34, 35, 37, 40, 41, 42, 44, 47, 48, 49, 51, 54, 55, 58, 59, 60, 69, 87, 90, 92, 93, 94, 95, 101, 112, 126, 128, 131, 132, 137, 140, 141, 142, 145, 150, 151, 155, 166, 168, 170, 175, 177, 178, 179, 180, 181, 182, 188, 190, 191, 195, 196, 199, 207, 208, 210, 211, 213, 216, 218, 224, 227, 229, 232, 235, 237, 245, 257, 260, 265, 266, 267, 268, 271, 272, 273, 276, 278, 279, 280, 281, 291, 298, 299, 307, 308, 316, 356, 357, 358, 359, 364, 374, 391, 414, 419, 421, 433, 436, 473, 481, 482, 497, 500, 524, 525, 531, 534, 537, 538, 540, 541, 564, 576, 577, 623, 633, 639, 646, 683, 712, 714, 715, 716, 719, 722, 730, 760, 776, 784, 791, 792, 799, 802, 820, 851, 874, 877, 880, 892], "local": [22, 26, 27, 33, 34, 35, 36, 40, 41, 42, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 60, 69, 71, 84, 90, 92, 94, 109, 113, 116, 120, 150, 151, 152, 155, 158, 166, 171, 175, 179, 180, 184, 187, 191, 196, 207, 211, 224, 245, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 276, 280, 298, 299, 301, 303, 314, 318, 332, 344, 346, 355, 356, 360, 361, 366, 372, 373, 374, 376, 380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 421, 435, 455, 457, 458, 471, 476, 478, 479, 481, 482, 488, 525, 526, 530, 531, 532, 542, 546, 563, 564, 572, 579, 589, 594, 620, 629, 631, 644, 653, 656, 660, 669, 672, 674, 676, 712, 714, 716, 752, 760, 769, 776, 777, 785, 788, 792, 797, 799, 800, 803, 812, 815, 819, 820, 822, 828, 847, 849, 852, 857, 858, 860, 871, 874, 880, 892], "grad_map": 22, "sensitivity_map": [22, 26, 131, 158, 882], "mag_map": [22, 26], "eeg_map": 22, "204": [22, 34, 74, 77, 93, 131, 146, 158, 166, 167, 168, 169, 172, 183, 184, 199, 200, 201, 206, 207, 210, 216, 217, 218, 219, 224, 231, 232, 241, 892], "gain": [22, 24, 31, 41, 66, 90, 93, 94, 95, 109, 158, 180, 202, 224, 298, 299, 449, 458, 801, 808, 874, 892], "picks_meg": 22, "picks_eeg": 22, "sharex": [22, 45, 74, 90, 113, 195, 207, 242], "dipol": [22, 26, 27, 28, 31, 34, 35, 36, 39, 40, 41, 42, 46, 51, 56, 59, 60, 61, 69, 83, 84, 92, 93, 94, 109, 119, 152, 155, 158, 165, 166, 169, 177, 179, 180, 182, 183, 184, 185, 186, 187, 191, 204, 222, 224, 245, 262, 264, 265, 266, 267, 268, 269, 270, 273, 276, 279, 280, 281, 298, 299, 300, 301, 303, 304, 313, 344, 355, 366, 376, 393, 435, 455, 457, 459, 476, 477, 478, 479, 481, 482, 525, 530, 531, 533, 542, 551, 561, 618, 620, 621, 629, 631, 644, 646, 660, 664, 665, 669, 672, 674, 676, 678, 712, 714, 715, 716, 760, 769, 776, 777, 787, 788, 819, 823, 828, 847, 858, 860, 863, 867, 874, 877, 882, 892], "fontsiz": [22, 37, 112, 120, 127, 144, 176, 210, 819], "fig_2": [22, 172], "hist": [22, 71, 131, 144, 211], "ravel": [22, 111, 113, 117, 131, 195, 202, 228], "brain_sen": 22, "add_text": [22, 43, 47, 48, 49, 50, 54, 55, 175, 177, 179, 760], "font_siz": [22, 43, 47, 48, 49, 50, 54, 55, 175, 177, 179, 760], "02108201": 22, "32186553": 22, "minimum": [22, 31, 57, 71, 79, 83, 136, 140, 149, 151, 162, 166, 168, 171, 177, 179, 180, 201, 202, 207, 223, 235, 245, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 294, 295, 296, 297, 298, 299, 343, 345, 346, 361, 447, 449, 450, 452, 453, 455, 457, 458, 481, 482, 526, 531, 532, 533, 534, 535, 537, 538, 542, 544, 546, 547, 548, 566, 567, 572, 581, 582, 588, 659, 669, 672, 674, 677, 705, 712, 717, 718, 719, 720, 721, 722, 723, 741, 744, 760, 784, 798, 814, 817, 847, 858, 860, 867, 877, 892], "euclidean": [22, 271, 276, 278, 546, 672, 675, 678, 680, 683], "maxdep": 22, "vertno": [22, 43, 48, 49, 50, 158, 175, 178, 223, 235, 236, 237, 276, 278, 279, 877], "depths_map": 22, "brain_dep": 22, "like": [22, 26, 27, 31, 32, 34, 35, 36, 40, 41, 42, 47, 56, 59, 61, 71, 82, 83, 101, 109, 112, 127, 135, 136, 140, 141, 142, 143, 144, 149, 150, 151, 155, 156, 160, 161, 162, 166, 167, 168, 169, 171, 172, 175, 177, 181, 182, 188, 189, 190, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 216, 217, 218, 219, 222, 227, 231, 242, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 289, 302, 304, 305, 306, 309, 310, 311, 314, 315, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 349, 353, 354, 355, 356, 362, 367, 368, 369, 371, 375, 383, 388, 389, 391, 393, 414, 421, 435, 437, 438, 443, 449, 455, 457, 464, 466, 467, 470, 472, 473, 474, 475, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 518, 520, 522, 525, 526, 530, 531, 533, 542, 545, 549, 550, 551, 553, 554, 563, 564, 569, 579, 582, 584, 585, 586, 590, 594, 595, 596, 597, 599, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 657, 660, 661, 663, 664, 665, 666, 675, 676, 677, 678, 681, 689, 693, 695, 698, 699, 700, 701, 702, 703, 707, 708, 710, 711, 712, 713, 714, 715, 716, 728, 732, 733, 734, 738, 745, 747, 748, 752, 754, 757, 760, 768, 776, 777, 778, 784, 788, 790, 792, 794, 796, 798, 799, 800, 803, 807, 810, 812, 813, 814, 815, 816, 818, 820, 822, 823, 824, 833, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 867, 869, 871, 873, 874, 877, 892], "corr": [22, 257], "gradiomt": 22, "815476": 22, "sensitivii": 22, "highest": [22, 176, 205, 260, 263, 265, 266, 267, 268, 271, 458, 481, 482, 489, 496, 581, 689, 712, 713, 715, 788, 800, 874], "close": [22, 61, 71, 97, 107, 111, 117, 120, 127, 140, 142, 144, 149, 151, 158, 160, 172, 191, 200, 201, 204, 205, 207, 208, 211, 219, 224, 227, 232, 263, 265, 266, 267, 268, 270, 271, 344, 360, 383, 437, 457, 473, 481, 482, 564, 582, 590, 683, 707, 714, 716, 728, 738, 742, 760, 766, 767, 788, 790, 807, 813, 816, 851, 863, 871, 874, 877, 892], "decreas": [22, 55, 112, 202, 224, 264, 265, 266, 267, 268, 414, 435, 564, 708, 712, 715, 739, 740, 742, 743, 760, 874, 892], "rapidli": [22, 212], "inreas": 22, "confirm": [22, 47, 71, 171, 190, 201, 205, 851, 874], "219": [22, 25, 35, 41, 169, 209, 231, 892], "forward_sensitivity_map": [22, 25], "coregistr": [23, 27, 81, 156, 160, 161, 163, 164, 165, 181, 263, 270, 275, 278, 306, 310, 368, 375, 392, 433, 486, 522, 526, 595, 650, 680, 707, 749, 760, 776, 828, 865, 867, 880, 882, 892], "displai": [23, 24, 25, 27, 44, 47, 77, 112, 116, 125, 140, 143, 151, 156, 158, 160, 162, 166, 192, 205, 208, 213, 216, 219, 228, 232, 257, 258, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 279, 280, 281, 314, 366, 481, 482, 522, 561, 563, 564, 584, 586, 631, 652, 680, 712, 714, 716, 760, 761, 775, 776, 784, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 804, 805, 810, 813, 814, 815, 816, 818, 819, 821, 823, 824, 847, 849, 850, 854, 857, 863, 871, 874, 877, 880, 892], "cerebellum": [23, 25, 27, 41, 278, 660, 661, 776, 828], "volum": [23, 25, 27, 31, 36, 44, 56, 59, 72, 135, 136, 155, 156, 158, 160, 166, 172, 176, 180, 210, 245, 257, 262, 263, 267, 269, 270, 272, 273, 276, 277, 278, 279, 280, 281, 305, 311, 314, 362, 448, 459, 467, 468, 476, 478, 479, 518, 526, 530, 531, 541, 542, 543, 545, 594, 596, 620, 629, 639, 642, 651, 660, 661, 684, 687, 704, 707, 748, 749, 750, 760, 776, 818, 823, 824, 828, 845, 847, 866, 867, 874, 880, 892], "morph": [23, 25, 27, 36, 40, 56, 134, 136, 155, 160, 177, 181, 235, 236, 237, 257, 267, 269, 270, 271, 272, 276, 277, 278, 279, 280, 281, 362, 470, 486, 526, 530, 531, 545, 550, 551, 560, 561, 596, 629, 631, 636, 639, 640, 641, 652, 661, 748, 749, 750, 760, 818, 824, 847, 867, 868, 877, 892], "its": [24, 71, 76, 94, 126, 135, 137, 140, 141, 143, 145, 150, 156, 158, 160, 166, 168, 169, 170, 171, 172, 175, 180, 183, 189, 190, 196, 199, 200, 202, 203, 205, 206, 207, 208, 210, 216, 217, 219, 227, 232, 240, 242, 245, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 314, 414, 417, 421, 428, 429, 448, 455, 478, 479, 480, 481, 482, 489, 496, 563, 564, 579, 652, 668, 678, 698, 699, 700, 702, 703, 712, 714, 715, 716, 728, 731, 738, 750, 777, 784, 788, 790, 791, 792, 799, 803, 811, 812, 813, 815, 818, 820, 822, 823, 847, 849, 850, 851, 855, 857, 867, 869, 871, 873, 874, 892], "freesurf": [24, 32, 33, 34, 38, 41, 43, 44, 47, 116, 135, 136, 156, 158, 161, 163, 164, 165, 171, 172, 175, 182, 191, 245, 261, 263, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 305, 309, 310, 311, 314, 362, 367, 368, 369, 375, 388, 390, 391, 393, 396, 413, 433, 448, 466, 467, 468, 470, 472, 473, 474, 475, 486, 516, 518, 520, 522, 550, 594, 595, 616, 632, 633, 634, 635, 641, 642, 643, 644, 655, 660, 661, 675, 678, 689, 707, 708, 710, 752, 759, 760, 771, 776, 778, 788, 818, 823, 824, 828, 841, 842, 845, 847, 855, 857, 858, 863, 868, 871, 892], "alan": [24, 245, 264, 265, 266, 267, 268, 712, 715, 892], "leggitt": [24, 892], "ucsf": 24, "setup_source_spac": [24, 41, 109, 155, 158, 160, 178, 191, 278, 641, 661, 682, 686, 867, 874, 882, 892], "setup_volume_source_spac": [24, 41, 50, 156, 158, 160, 208, 272, 273, 276, 278, 279, 280, 281, 448, 518, 641, 660, 874, 882, 892], "aseg_fnam": 24, "aseg": [24, 41, 135, 176, 181, 263, 272, 273, 276, 279, 280, 281, 448, 466, 467, 518, 661, 760, 847, 892], "mgz": [24, 30, 41, 44, 50, 156, 158, 160, 161, 176, 180, 181, 182, 257, 272, 273, 276, 278, 279, 280, 281, 305, 309, 310, 311, 393, 448, 467, 518, 661, 778, 824, 847, 871, 874, 892], "surf": [24, 26, 41, 81, 109, 118, 135, 155, 156, 157, 158, 159, 160, 161, 172, 176, 181, 223, 227, 257, 263, 271, 276, 278, 280, 281, 309, 464, 465, 516, 521, 551, 619, 642, 675, 678, 709, 746, 760, 778, 788, 835, 867, 868, 874], "add_dist": [24, 41, 109, 158, 257, 660, 682, 686, 874, 892], "lh_surf": 24, "cortex": [24, 26, 31, 37, 41, 43, 52, 53, 54, 55, 58, 61, 94, 109, 116, 126, 135, 145, 151, 158, 166, 178, 181, 190, 195, 205, 211, 224, 245, 272, 273, 276, 278, 279, 280, 281, 391, 420, 603, 616, 678, 760, 818, 823, 847, 867, 868, 874, 877, 892], "volume_label": [24, 41, 272, 273, 276, 278, 279, 280, 281, 448, 518, 661, 892], "lh_cereb": 24, "sphere_unit": [24, 158, 661, 892], "octahedron": [24, 41, 109, 156, 158, 160, 257, 272, 276, 280, 660, 818], "subdivis": [24, 41, 109, 158], "octahedr": [24, 41, 109, 158, 413], "vertex": [24, 26, 41, 48, 49, 50, 83, 90, 109, 156, 157, 158, 160, 161, 175, 177, 180, 181, 223, 224, 227, 237, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 298, 299, 448, 470, 472, 516, 540, 541, 550, 564, 633, 634, 645, 646, 651, 678, 679, 680, 685, 688, 689, 704, 707, 708, 709, 759, 760, 874, 877, 892], "lh": [24, 26, 28, 29, 37, 38, 39, 41, 43, 47, 48, 49, 54, 55, 61, 69, 90, 92, 94, 95, 104, 108, 109, 116, 126, 127, 134, 135, 155, 156, 157, 158, 159, 160, 161, 172, 175, 176, 178, 179, 182, 183, 191, 223, 224, 236, 237, 257, 261, 271, 272, 273, 276, 279, 280, 281, 470, 516, 616, 634, 639, 649, 760, 818, 823, 842, 874], "triangl": [24, 26, 41, 52, 109, 156, 157, 158, 160, 161, 175, 178, 223, 271, 278, 413, 645, 681, 685, 688, 709, 874, 877], "neighbor": [24, 26, 41, 109, 142, 156, 157, 158, 161, 200, 223, 227, 229, 242, 324, 331, 343, 456, 505, 595, 682, 683, 684, 686, 687, 692, 699, 700, 702, 703, 709, 873, 874, 892], "geometri": [24, 41, 61, 71, 109, 158, 161, 183, 184, 210, 245, 257, 393, 414, 458, 642, 760, 847, 867, 892], "triangul": [24, 41, 52, 109, 158, 175, 228, 229, 257, 278, 320, 642, 645, 840, 845, 874, 877, 892], "4098": [24, 43, 159, 160, 182, 867], "155407": [24, 26, 41, 43, 52, 158, 160], "156866": [24, 26, 41, 43, 52, 158, 160], "132651": 24, "57769": 24, "50733": 24, "voxel": [24, 41, 44, 50, 156, 158, 160, 208, 227, 245, 275, 278, 280, 281, 362, 594, 705, 706, 750, 760, 778, 824, 874, 892], "neighborhood": [24, 41, 50, 156, 158, 208, 278], "005000": [24, 158], "001000": [24, 41, 50, 158], "556177": 24, "16777216": 24, "nonzero": [24, 211, 874], "coord_fram": [24, 109, 118, 123, 124, 125, 135, 136, 156, 157, 158, 159, 169, 170, 178, 182, 183, 184, 190, 210, 263, 269, 270, 278, 314, 327, 332, 435, 485, 515, 574, 575, 588, 599, 760, 776, 788, 877], "export": [24, 30, 41, 112, 115, 140, 147, 148, 149, 155, 165, 168, 172, 189, 190, 220, 259, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 339, 341, 481, 482, 496, 506, 626, 712, 714, 715, 716, 849, 857, 862, 878, 882, 892], "nifti": [24, 30, 41, 155, 278, 280, 281, 892], "nii_fnam": [24, 41], "mne_sample_lh": 24, "nii": [24, 30, 41, 155, 257], "export_volum": [24, 41, 278, 892], "mri_resolut": [24, 30, 41, 44, 277, 278, 280, 281, 448, 892], "And": [24, 42, 54, 71, 109, 160, 179, 181, 190, 196, 202, 207, 211, 278, 529, 539, 702, 703, 851, 867, 874], "freeview": [24, 182, 871, 874, 892], "util": [24, 93, 146, 180, 189, 227, 265, 266, 444, 447, 481, 482, 755, 849, 851, 857, 861, 874, 882, 886, 892], "run_subprocess": 24, "mri_fnam": 24, "lut": [24, 467, 632, 760, 847], "opac": [24, 31, 35, 40, 46, 59, 92, 156, 171, 257, 275, 473, 714, 716, 760, 819, 825, 892], "jet": 24, "colorscal": 24, "slice": [24, 35, 40, 59, 140, 143, 156, 158, 160, 172, 181, 195, 218, 231, 257, 259, 260, 263, 264, 265, 266, 267, 268, 270, 275, 280, 281, 312, 315, 329, 331, 361, 372, 416, 417, 420, 424, 427, 430, 435, 452, 453, 481, 482, 489, 496, 563, 564, 566, 578, 580, 581, 582, 588, 591, 595, 605, 607, 614, 680, 698, 699, 700, 702, 703, 707, 712, 714, 715, 716, 718, 720, 721, 722, 723, 725, 737, 739, 740, 742, 743, 778, 784, 788, 790, 791, 794, 796, 797, 803, 804, 805, 807, 809, 811, 814, 824, 874, 877, 880, 892], "510": [24, 25, 81, 144, 196, 209, 227, 242], "left_cerebellum_volume_sourc": [24, 25], "auto_examples_forward": 25, "source_space_morph": [25, 26], "583": [25, 26, 232, 245, 422], "239": [25, 46, 69, 81, 82, 158, 169, 191, 203, 209, 231, 232], "oppos": [26, 61, 213, 224, 349, 423, 847, 851, 877, 892], "evenli": [26, 208, 210, 267, 268, 361, 599, 797, 874], "caution": [26, 27, 142, 157, 169, 192, 265, 266, 267, 268, 270, 416, 481, 482, 483, 715, 769], "fname_tran": [26, 41, 50, 52, 124, 176, 181, 867], "sample_audvis_raw": [26, 29, 41, 45, 50, 52, 69, 72, 83, 92, 93, 94, 103, 104, 107, 108, 110, 111, 116, 118, 123, 124, 127, 140, 142, 146, 149, 150, 156, 158, 160, 162, 166, 167, 168, 170, 172, 176, 178, 181, 182, 199, 200, 203, 204, 206, 207, 208, 210, 216, 217, 218, 219, 223, 224, 229, 230, 231, 240, 257, 851], "fname_bem": [26, 41, 50, 159, 176, 181, 182], "fname_src_f": 26, "fsaverag": [26, 40, 43, 44, 125, 126, 135, 136, 156, 157, 160, 171, 181, 190, 211, 235, 236, 237, 245, 263, 271, 272, 276, 277, 280, 281, 306, 314, 330, 362, 367, 368, 369, 375, 388, 390, 391, 470, 522, 526, 550, 595, 648, 649, 680, 704, 707, 708, 749, 760, 776, 818, 824, 867, 892], "ico": [26, 40, 43, 136, 158, 159, 161, 191, 235, 236, 237, 257, 272, 276, 280, 283, 413, 520, 660, 684, 687, 818, 867, 877, 892], "read_info": [26, 65, 90, 92, 94, 95, 157, 158, 160, 169, 882], "pick_info": [26, 119, 135, 167, 169, 224, 882, 892], "src_f": [26, 44, 180], "read_source_spac": [26, 40, 43, 44, 135, 136, 156, 159, 160, 180, 235, 236, 237, 278, 844, 882], "src_morph": 26, "morph_source_spac": [26, 276, 279, 882, 892], "subject_to": [26, 40, 43, 44, 235, 237, 257, 271, 277, 280, 281, 362, 550, 551, 636, 648, 649, 650, 651, 824, 867], "return": [26, 31, 34, 69, 70, 76, 84, 92, 93, 94, 99, 103, 108, 109, 110, 113, 114, 115, 117, 121, 137, 140, 141, 144, 146, 149, 150, 151, 160, 161, 166, 167, 168, 169, 171, 178, 188, 205, 206, 207, 208, 210, 213, 216, 218, 222, 224, 227, 228, 231, 237, 240, 241, 242, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 380, 381, 382, 383, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 652, 653, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 829, 830, 833, 844, 845, 846, 869, 873, 874, 877, 892], "mag_map_f": 26, "to_original_src": [26, 276, 279, 892], "track": [26, 113, 142, 149, 166, 169, 191, 192, 200, 203, 217, 218, 222, 564, 584, 587, 868, 869, 881, 892], "sulcal": [26, 160, 760], "gyral": [26, 160, 760], "outlier": [26, 71, 157, 433, 564, 806], "mai": [26, 71, 75, 77, 83, 103, 135, 140, 141, 143, 144, 146, 149, 150, 151, 152, 156, 158, 161, 166, 168, 170, 172, 188, 189, 190, 192, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 216, 217, 218, 219, 222, 224, 229, 232, 235, 245, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 280, 281, 300, 320, 331, 332, 337, 355, 367, 413, 414, 416, 421, 423, 427, 433, 438, 444, 445, 446, 447, 448, 453, 464, 466, 473, 481, 482, 489, 496, 497, 502, 525, 528, 531, 551, 563, 564, 566, 579, 581, 582, 588, 590, 599, 600, 617, 619, 621, 623, 629, 648, 650, 694, 698, 699, 700, 702, 703, 705, 707, 712, 714, 715, 716, 737, 739, 740, 741, 742, 743, 744, 760, 776, 777, 783, 790, 792, 794, 795, 797, 799, 803, 807, 812, 813, 815, 820, 822, 840, 849, 851, 852, 854, 855, 857, 858, 859, 866, 867, 869, 871, 873, 874, 877, 880, 892], "occur": [26, 44, 47, 71, 76, 90, 94, 95, 140, 143, 144, 151, 161, 168, 201, 202, 207, 213, 216, 229, 230, 258, 260, 264, 265, 266, 267, 268, 276, 283, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 437, 438, 440, 456, 457, 458, 476, 478, 479, 481, 482, 510, 542, 581, 582, 584, 662, 712, 715, 790, 800, 813, 851, 852, 857, 867, 873, 874, 892], "kwarg": [26, 58, 109, 112, 116, 123, 141, 179, 180, 195, 202, 223, 241, 265, 266, 267, 268, 270, 275, 278, 417, 424, 481, 482, 487, 553, 712, 760, 761, 782, 797, 816, 819, 851], "smooth": [26, 38, 43, 59, 72, 83, 114, 134, 135, 142, 151, 156, 166, 171, 181, 195, 207, 227, 228, 235, 236, 237, 245, 265, 266, 267, 268, 271, 272, 273, 276, 277, 279, 280, 281, 362, 481, 482, 564, 573, 699, 700, 702, 703, 708, 728, 730, 738, 739, 740, 742, 743, 760, 769, 791, 818, 821, 823, 825, 826, 829, 870, 892], "smoothing_step": [26, 41, 42, 43, 55, 59, 61, 104, 109, 116, 131, 136, 175, 177, 179, 181, 223, 235, 272, 273, 276, 279, 280, 281, 760, 818, 823], "almost": [26, 114, 140, 168, 851, 874], "equidist": [26, 275], "unevenli": [26, 525], "achiev": [26, 43, 44, 112, 127, 142, 144, 146, 160, 161, 180, 202, 211, 218, 224, 267, 268, 356, 365, 516, 539, 564, 597, 616, 664, 665, 666, 675, 676, 678, 699, 700, 701, 702, 703, 800, 871, 874, 878, 880, 892], "closest": [26, 144, 157, 158, 216, 242, 260, 265, 266, 267, 268, 271, 278, 481, 482, 708, 714, 716, 760, 778, 792, 874, 892], "approxim": [26, 68, 170, 205, 216, 227, 245, 257, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 314, 414, 421, 435, 450, 451, 453, 465, 481, 482, 563, 564, 575, 579, 588, 599, 660, 712, 714, 716, 724, 777, 784, 785, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 847, 874, 892], "brain_subject": 26, "time_label": [26, 33, 34, 59, 61, 109, 124, 131, 224, 235, 236, 237, 267, 268, 272, 273, 276, 279, 280, 281, 760, 795, 818, 823], "brain_f": 26, "remap": [26, 27, 78, 85, 267, 268, 629, 892], "destin": [26, 43, 44, 80, 155, 160, 259, 262, 263, 265, 266, 267, 268, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 310, 311, 314, 315, 362, 375, 413, 435, 444, 445, 446, 447, 481, 482, 515, 549, 551, 563, 564, 588, 599, 648, 649, 651, 712, 713, 714, 715, 716, 745, 746, 802, 834, 835, 836, 837, 838, 839, 840, 843, 844, 845, 846, 877, 892], "sourcespac": [26, 41, 43, 45, 50, 109, 158, 159, 160, 176, 208, 269, 271, 272, 273, 276, 279, 280, 281, 283, 362, 448, 468, 477, 517, 518, 526, 540, 541, 546, 551, 641, 660, 661, 662, 669, 672, 674, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 704, 707, 708, 760, 776, 778, 818, 823, 824, 844, 847, 874, 882, 892], "n_vertic": [26, 41, 43, 53, 109, 158, 159, 160, 261, 271, 272, 273, 276, 279, 280, 281, 458, 546, 642, 645, 680, 699, 700, 702, 703, 710, 759, 760, 840, 845], "n_use": [26, 41, 43, 45, 50, 109, 158, 159, 160, 176, 208], "10242": [26, 43, 159, 235, 236, 237, 271, 283, 470, 704, 867], "coord": [26, 41, 43, 45, 50, 109, 125, 158, 159, 160, 161, 176, 208, 344, 457, 760, 761, 830, 845], "conductor": [26, 41, 45, 50, 109, 156, 158, 159, 176, 182, 306, 457, 527, 661, 776, 847, 874, 892], "20484": [26, 136, 159, 161, 235, 236, 257, 520], "999310": [26, 41, 50, 158, 176, 181, 182], "009985": [26, 41, 50, 158, 176, 181, 182], "035787": [26, 41, 50, 158, 176, 181, 182], "012759": [26, 41, 50, 158, 176, 181, 182], "812405": [26, 41, 50, 158, 176, 181], "582954": [26, 41, 50, 158, 176, 181], "034894": [26, 41, 50, 158, 176, 181, 182], "583008": [26, 41, 50, 158, 176, 181], "811716": [26, 41, 50, 158, 176, 181, 182], "991420": [26, 41, 45, 50, 158, 176, 181], "039936": [26, 41, 45, 50, 158, 176, 181], "124467": [26, 41, 45, 50, 158, 176, 181], "060661": [26, 41, 45, 50, 158, 176, 181], "984012": [26, 41, 45, 50, 158, 176, 181], "167456": [26, 41, 45, 50, 158, 176, 181], "115790": [26, 41, 45, 50, 158, 176, 181], "173570": [26, 41, 45, 50, 158, 176, 181], "977991": [26, 41, 45, 50, 158, 176, 181], "homogen": [26, 41, 50, 109, 158, 176, 208, 245, 578, 874, 877, 892], "2154": 26, "8088": 26, "8079": 26, "10233": [26, 892], "4213": 26, "2113": [26, 169], "8129": 26, "8125": 26, "10237": 26, "4287": [26, 35], "20470": 26, "finish": [26, 41, 45, 50, 109, 158, 159, 176, 182, 208, 218, 869, 892], "00205101": 26, "08784125": 26, "17433707": 26, "work": [27, 31, 69, 71, 76, 79, 83, 87, 133, 137, 138, 139, 140, 144, 147, 148, 149, 150, 151, 155, 156, 160, 161, 166, 167, 168, 169, 173, 174, 175, 177, 178, 181, 184, 188, 190, 193, 194, 196, 199, 201, 203, 204, 205, 206, 207, 210, 211, 214, 215, 216, 218, 219, 221, 222, 224, 229, 232, 235, 237, 240, 241, 242, 245, 252, 256, 259, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 314, 315, 318, 320, 325, 328, 330, 334, 340, 349, 355, 357, 361, 362, 363, 365, 368, 374, 385, 389, 392, 414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 437, 441, 443, 448, 449, 454, 455, 466, 476, 478, 479, 481, 482, 487, 491, 494, 498, 500, 518, 520, 521, 524, 526, 529, 530, 531, 532, 533, 534, 535, 537, 538, 542, 548, 555, 559, 560, 563, 564, 565, 577, 584, 585, 586, 587, 594, 599, 613, 622, 626, 631, 637, 641, 642, 643, 644, 660, 661, 689, 707, 712, 714, 715, 716, 760, 761, 763, 776, 782, 784, 790, 792, 793, 798, 799, 803, 807, 812, 813, 815, 820, 822, 826, 828, 830, 847, 850, 851, 852, 856, 857, 858, 866, 868, 869, 873, 874, 875, 877, 880, 892], "variou": [27, 63, 101, 120, 121, 135, 141, 150, 155, 165, 169, 170, 177, 178, 186, 187, 188, 189, 192, 193, 199, 202, 203, 205, 207, 214, 216, 218, 224, 227, 228, 262, 267, 270, 276, 332, 530, 531, 542, 564, 599, 620, 629, 631, 760, 782, 867, 871, 873, 874, 875, 877, 881, 892], "often": [27, 68, 71, 75, 76, 83, 140, 142, 150, 166, 168, 169, 175, 178, 180, 188, 190, 192, 196, 200, 202, 203, 206, 208, 210, 217, 218, 229, 242, 267, 268, 272, 273, 276, 279, 280, 281, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 542, 600, 760, 800, 818, 823, 847, 851, 855, 856, 867, 871, 873, 874, 875, 892], "lack": [27, 71, 190, 262, 274, 289, 304, 530, 584, 600, 747, 875, 892], "narr": [27, 165, 847, 875], "explan": [27, 74, 142, 155, 165, 231, 714, 875, 879, 892], "discov": [27, 869, 875, 892], "ve": [27, 115, 140, 149, 151, 156, 160, 171, 199, 201, 205, 207, 216, 217, 219, 242, 830, 851, 869, 871, 875], "flag": [27, 165, 167, 257, 265, 266, 270, 272, 273, 276, 279, 280, 281, 311, 481, 482, 520, 779, 813, 818, 823, 824, 851, 867, 871, 892], "tutorial_script": [27, 165], "them": [27, 47, 50, 68, 71, 75, 115, 127, 134, 135, 137, 140, 141, 142, 144, 145, 149, 150, 151, 156, 160, 161, 165, 166, 168, 170, 171, 172, 191, 192, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 213, 216, 217, 218, 224, 227, 228, 235, 237, 242, 257, 259, 265, 266, 267, 268, 271, 292, 293, 296, 361, 364, 369, 417, 418, 432, 492, 493, 500, 524, 525, 533, 535, 538, 559, 563, 564, 583, 600, 607, 621, 626, 666, 676, 689, 716, 755, 806, 847, 849, 851, 859, 867, 868, 869, 873, 874, 877, 880, 892], "shortcut": [27, 219, 750, 760, 892], "intention": [27, 209], "record": [27, 63, 66, 71, 75, 83, 84, 109, 137, 140, 144, 146, 151, 156, 162, 166, 168, 169, 170, 172, 175, 184, 186, 188, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 216, 217, 218, 222, 224, 227, 242, 245, 259, 260, 265, 266, 267, 268, 270, 275, 282, 301, 322, 349, 356, 361, 365, 406, 437, 446, 481, 482, 490, 494, 500, 502, 505, 510, 512, 524, 564, 566, 567, 568, 572, 574, 575, 584, 586, 588, 599, 600, 607, 613, 629, 656, 698, 712, 714, 715, 716, 793, 807, 813, 847, 858, 863, 867, 868, 869, 871, 874, 877, 880, 892], "past": [27, 151, 202, 426, 662, 855, 871, 873, 877], "recip": [27, 63, 851], "write": [27, 29, 41, 63, 67, 108, 110, 140, 160, 161, 170, 171, 172, 177, 189, 203, 216, 237, 240, 257, 259, 262, 263, 267, 268, 270, 271, 272, 273, 275, 278, 279, 281, 289, 309, 354, 455, 486, 515, 549, 563, 615, 620, 711, 745, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 851, 854, 855, 867, 869, 871, 874, 892], "manipul": [27, 63, 140, 149, 165, 220, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 523, 868, 874, 881, 892], "ensembl": [27, 63, 67, 137, 270, 376, 481, 482], "neo": [27, 63, 67, 188, 270, 376, 481, 482, 892], "xdf": [27, 63, 67, 270, 376, 482], "anatomi": [27, 89, 91, 156, 175, 262, 265, 267, 268, 269, 270, 271, 276, 278, 310, 482, 486, 530, 531, 542, 620, 626, 631, 634, 662, 664, 665, 666, 677, 760, 847, 868, 892], "intracrani": [27, 78, 135, 138, 165, 245, 314, 466, 481, 482, 594, 596, 867, 868, 880, 881, 892], "contact": [27, 78, 135, 138, 165, 199, 334, 594, 851, 868, 892], "contralater": [27, 78, 85, 94, 151, 208, 270, 326, 487, 653], "css": [27, 78, 85, 172, 245, 262, 268, 269, 270, 271, 275, 276, 366, 481, 561, 562, 580, 620, 631, 634, 676, 678, 892], "bridg": [27, 78, 85, 245, 270, 314, 330, 376, 482, 487, 572, 598, 780, 822, 892], "much": [27, 44, 55, 75, 78, 83, 85, 137, 140, 141, 142, 144, 149, 161, 165, 166, 170, 183, 191, 196, 202, 204, 205, 206, 207, 208, 209, 212, 216, 224, 242, 245, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 314, 330, 376, 438, 449, 453, 454, 481, 482, 487, 572, 598, 652, 780, 822, 851, 854, 855, 874, 880, 892], "gel": [27, 78, 85, 270, 314, 330, 376, 482, 487, 572, 598, 780, 822, 892], "densiti": [27, 32, 33, 34, 69, 76, 78, 79, 85, 105, 106, 119, 133, 137, 142, 160, 161, 166, 172, 190, 196, 200, 201, 209, 224, 241, 245, 262, 265, 266, 267, 268, 270, 271, 276, 291, 298, 328, 361, 374, 419, 455, 481, 482, 521, 526, 530, 537, 538, 542, 545, 561, 564, 572, 573, 601, 602, 606, 618, 626, 633, 660, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 729, 730, 731, 754, 760, 776, 786, 792, 814, 828, 847, 868, 874, 877, 892], "csd": [27, 32, 33, 34, 78, 85, 105, 106, 169, 224, 265, 266, 267, 268, 270, 291, 298, 313, 328, 332, 374, 455, 481, 482, 561, 573, 626, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 729, 732, 786, 847, 892], "nir": [27, 78, 85, 171, 211, 259, 270, 482, 510, 848, 858, 874, 881, 882, 892], "maxwel": [27, 78, 84, 85, 165, 166, 184, 199, 214, 215, 265, 267, 268, 270, 298, 299, 349, 350, 353, 356, 360, 361, 372, 373, 374, 414, 421, 435, 455, 457, 458, 476, 478, 479, 481, 482, 542, 575, 588, 599, 600, 800, 802, 892], "movement": [27, 75, 76, 78, 83, 85, 112, 137, 165, 192, 199, 205, 206, 207, 213, 214, 215, 218, 219, 245, 257, 259, 265, 267, 268, 270, 343, 344, 345, 346, 347, 349, 351, 353, 354, 365, 435, 455, 473, 481, 494, 568, 571, 588, 599, 665, 677, 776, 783, 795, 802, 828, 847, 868, 892], "reestim": [27, 78, 85, 259, 270, 346, 347, 365, 494, 568, 571, 574, 776, 802, 828, 892], "dev_head_t": [27, 78, 80, 85, 156, 166, 169, 216, 259, 270, 317, 346, 347, 365, 376, 494, 568, 571, 575, 588, 599, 663, 664, 665, 677, 776, 802, 828, 877, 892], "muscl": [27, 78, 85, 144, 205, 245, 259, 314, 330, 494, 496, 564, 569, 892], "denois": [27, 78, 85, 196, 262, 265, 267, 268, 270, 356, 361, 422, 434, 455, 457, 481, 527, 561, 565, 575, 607, 626, 791, 892], "oversampl": [27, 78, 85, 245, 265, 267, 268, 356, 434, 455, 457, 481, 527, 607], "shift": [27, 76, 78, 85, 140, 166, 195, 199, 202, 203, 208, 219, 245, 260, 264, 265, 266, 267, 268, 270, 280, 281, 420, 442, 481, 482, 489, 496, 555, 564, 566, 595, 606, 629, 712, 715, 724, 760, 801, 813, 824, 892], "2d": [27, 31, 35, 40, 59, 96, 97, 119, 122, 130, 151, 166, 172, 190, 196, 200, 203, 205, 206, 207, 208, 227, 232, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 314, 315, 320, 323, 331, 340, 368, 417, 422, 424, 425, 429, 431, 452, 453, 481, 482, 493, 502, 513, 518, 564, 697, 699, 700, 760, 761, 772, 776, 777, 781, 798, 819, 821, 822, 828, 829, 830, 832, 847, 855, 868, 892], "arrowmap": [27, 122, 130, 267, 270, 494, 560, 561, 629, 777, 892], "layout": [27, 47, 100, 115, 122, 130, 132, 133, 142, 144, 150, 151, 159, 189, 212, 229, 265, 266, 267, 268, 270, 274, 321, 323, 325, 328, 329, 330, 340, 376, 481, 482, 488, 492, 494, 505, 506, 527, 712, 714, 716, 761, 765, 773, 776, 784, 798, 809, 812, 821, 827, 828, 847, 874, 882, 892], "parcel": [27, 38, 41, 69, 90, 94, 95, 122, 130, 135, 155, 176, 181, 223, 245, 271, 388, 390, 391, 466, 616, 634, 760, 771, 842, 847, 892], "roi": [27, 38, 122, 130, 151, 155, 200, 228, 245, 263, 265, 267, 268, 270, 326, 440, 443, 497, 531, 760, 796, 847, 874, 877, 892], "rt": [27, 122, 130, 168, 265, 270, 326, 440, 443, 497], "room": [27, 122, 127, 130, 142, 151, 162, 172, 184, 191, 203, 205, 206, 208, 210, 211, 212, 217, 245, 276, 356, 361, 481, 574, 575, 588, 599, 600, 783, 847, 867, 874, 892], "lock": [27, 105, 106, 140, 156, 162, 168, 204, 207, 231, 242, 245, 260, 265, 270, 271, 438, 455, 481, 530, 545, 548, 561, 564, 633, 807, 871], "vectorview": [27, 62, 105, 106, 119, 170, 183, 258, 262, 267, 268, 270, 276, 315, 321, 322, 336, 340, 361, 393, 434, 435, 481, 521, 526, 537, 542, 575, 588, 599, 618, 660, 754, 760, 776, 828, 847, 863, 868, 874], "induc": [27, 105, 106, 107, 162, 166, 229, 230, 231, 242, 245, 265, 266, 270, 276, 455, 481, 530, 545, 547, 548, 561, 712, 715, 728, 738, 739, 742, 871, 892], "erd": [27, 105, 106, 241, 245, 262, 265, 266, 267, 268, 274, 365, 414, 421, 443, 481, 482, 496, 563, 564, 699, 712, 714, 715, 716, 743, 777, 792, 799, 803, 812, 815, 820, 822, 868, 892], "multitap": [27, 75, 83, 103, 105, 106, 109, 137, 142, 143, 166, 172, 196, 205, 232, 240, 241, 245, 265, 266, 267, 268, 270, 288, 376, 427, 453, 481, 482, 537, 712, 714, 716, 719, 722, 739, 740, 741, 742, 743, 744, 764, 880, 892], "morlet": [27, 32, 103, 105, 106, 113, 166, 202, 231, 232, 245, 265, 270, 288, 376, 427, 482, 712, 715, 718, 721, 726, 737, 739, 742, 743, 744, 764, 882, 890, 892], "stockwel": [27, 105, 106, 232, 245, 265, 270, 288, 376, 482, 712, 739, 741, 742, 743, 744, 764, 892], "hilbert": [27, 82, 105, 106, 113, 167, 232, 265, 266, 267, 268, 270, 288, 376, 481, 482, 712, 739, 742, 743, 744, 764, 892], "permut": [27, 98, 102, 112, 165, 227, 228, 229, 230, 233, 234, 237, 238, 239, 245, 265, 267, 268, 270, 276, 277, 278, 320, 362, 437, 481, 530, 531, 545, 555, 561, 626, 639, 641, 684, 692, 699, 700, 701, 702, 703, 704, 715, 742, 760, 781, 784, 880, 892], "1d": [27, 98, 102, 117, 210, 265, 270, 284, 288, 478, 479, 481, 518, 561, 575, 588, 599, 608, 626, 699, 700, 702, 703, 764, 801], "fdr": [27, 98, 101, 102, 265, 270, 481, 561, 626, 690, 696, 892], "rer": [27, 98, 102, 265, 267, 268, 270, 355, 455, 481, 561, 698], "p": [27, 47, 51, 58, 60, 96, 97, 98, 100, 101, 102, 112, 156, 160, 172, 188, 202, 224, 227, 228, 229, 231, 232, 235, 236, 237, 242, 245, 257, 264, 265, 266, 267, 268, 270, 276, 355, 453, 455, 476, 481, 482, 542, 561, 564, 575, 669, 672, 674, 690, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 712, 715, 778, 791, 851, 867, 871, 874, 892], "sloreta": [27, 28, 30, 31, 36, 38, 39, 41, 48, 50, 56, 59, 90, 104, 165, 166, 175, 178, 179, 181, 186, 187, 223, 235, 237, 245, 262, 265, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 356, 455, 481, 530, 531, 532, 533, 534, 535, 537, 538, 542, 543, 544, 545, 547, 548, 631, 633, 760, 785, 847, 892], "timecours": [27, 33, 36, 42, 56, 262, 263, 265, 267, 268, 269, 270, 276, 280, 289, 293, 298, 304, 455, 457, 481, 525, 530, 531, 533, 542, 618, 620, 621, 631, 646, 713, 715, 723, 742, 760], "dic": [27, 31, 36, 56, 103, 165, 180, 225, 226, 245, 262, 265, 269, 270, 276, 289, 290, 291, 292, 293, 295, 298, 299, 356, 360, 455, 481, 482, 487, 519, 530, 531, 532, 542, 555, 560, 561, 631, 646, 666, 677, 713, 715, 721, 723, 742, 760, 847, 858, 868, 892], "beamform": [27, 36, 51, 56, 60, 103, 165, 166, 186, 187, 224, 245, 262, 265, 267, 268, 269, 270, 276, 277, 278, 280, 356, 360, 362, 366, 374, 455, 457, 481, 532, 540, 542, 561, 620, 631, 641, 713, 715, 721, 723, 742, 760, 847, 860, 868, 882, 892], "er": [27, 32, 33, 36, 56, 112, 241, 245, 262, 265, 266, 269, 270, 276, 291, 295, 298, 299, 356, 360, 455, 481, 532, 542, 561, 631, 698, 721, 760, 791, 868, 892], "lcmv": [27, 31, 36, 56, 165, 175, 186, 187, 262, 265, 267, 268, 269, 270, 276, 277, 278, 280, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 356, 360, 362, 366, 374, 455, 458, 481, 532, 540, 542, 561, 620, 631, 641, 721, 760, 847, 892], "spars": [27, 36, 44, 46, 56, 119, 175, 227, 232, 235, 237, 245, 257, 262, 263, 267, 269, 270, 276, 277, 278, 310, 320, 331, 362, 374, 376, 458, 476, 477, 478, 479, 530, 531, 542, 620, 629, 631, 641, 678, 692, 698, 699, 700, 702, 703, 760, 787, 788, 819, 851, 858, 860, 874, 877, 892], "gamma": [27, 36, 56, 112, 113, 117, 245, 262, 265, 266, 267, 268, 269, 270, 276, 374, 476, 477, 481, 482, 539, 620, 629, 631, 714, 716, 728, 738, 739, 742, 787, 788, 792, 819, 874, 877, 892], "bayesian": [27, 36, 56, 245, 262, 267, 269, 270, 276, 356, 374, 476, 477, 620, 629, 631, 787, 788, 819, 858, 874], "mix": [27, 36, 56, 59, 103, 196, 205, 242, 245, 262, 263, 267, 269, 270, 272, 273, 276, 277, 278, 279, 280, 281, 298, 299, 362, 448, 459, 476, 477, 478, 479, 489, 496, 518, 526, 530, 531, 542, 564, 597, 620, 629, 631, 634, 639, 641, 660, 661, 667, 668, 669, 670, 671, 672, 673, 674, 704, 707, 760, 787, 788, 803, 818, 819, 823, 880, 892], "norm": [27, 31, 36, 47, 48, 49, 50, 56, 57, 59, 79, 84, 116, 149, 156, 162, 166, 177, 179, 185, 207, 223, 224, 245, 262, 263, 265, 266, 267, 268, 269, 270, 276, 277, 278, 362, 458, 476, 477, 478, 479, 481, 482, 530, 531, 532, 533, 534, 535, 537, 538, 540, 541, 542, 544, 546, 547, 548, 620, 629, 631, 641, 669, 672, 674, 724, 787, 788, 817, 819, 847, 858, 860, 867, 877, 892], "mxne": [27, 31, 36, 56, 175, 262, 263, 265, 267, 268, 269, 270, 276, 277, 278, 356, 362, 455, 477, 478, 479, 530, 531, 542, 620, 629, 631, 641, 760, 787, 788, 819, 847, 892], "irmxn": [27, 36, 56, 262, 263, 267, 269, 270, 276, 277, 278, 362, 477, 478, 530, 531, 542, 620, 629, 631, 641, 787, 788, 819], "volumetr": [27, 36, 50, 56, 135, 158, 160, 175, 177, 181, 267, 272, 273, 276, 277, 278, 279, 280, 281, 362, 518, 530, 531, 545, 594, 629, 641, 760, 818, 823, 824, 826, 847, 880, 892], "xfit": [27, 36, 56, 262, 263, 265, 267, 268, 269, 270, 280, 304, 455, 457, 481, 525, 530, 531, 533, 542, 618, 620, 621, 646, 892], "reweight": [27, 36, 40, 56, 245, 262, 265, 267, 268, 269, 276, 356, 455, 477, 478, 479, 631, 819], "tf": [27, 31, 36, 56, 59, 202, 262, 265, 267, 268, 269, 276, 356, 455, 477, 479, 631, 819, 892], "multiscal": [27, 36, 56, 262, 265, 267, 268, 269, 276, 356, 455, 477, 479, 631, 819], "circular": [27, 36, 56, 151, 223, 276, 278, 366, 472, 541, 543, 545, 631, 634, 760, 765, 858, 874, 892], "graph": [27, 36, 56, 117, 245, 276, 278, 366, 541, 543, 545, 631, 634, 682, 683, 684, 685, 686, 687, 688, 760, 765, 892], "spread": [27, 36, 42, 54, 55, 56, 72, 81, 83, 84, 113, 165, 168, 202, 207, 208, 210, 225, 226, 245, 262, 265, 267, 268, 269, 270, 271, 276, 278, 280, 356, 366, 455, 481, 526, 530, 531, 532, 540, 541, 542, 543, 545, 546, 572, 599, 620, 629, 631, 634, 661, 674, 676, 679, 760, 851, 874, 892], "psf": [27, 36, 54, 55, 56, 262, 267, 269, 270, 276, 278, 280, 366, 526, 530, 540, 541, 542, 543, 546, 620, 629, 631, 661, 760, 892], "talk": [27, 36, 56, 160, 202, 210, 229, 262, 265, 267, 269, 270, 276, 289, 299, 300, 356, 366, 374, 435, 455, 530, 540, 541, 542, 543, 546, 561, 574, 588, 599, 620, 629, 631, 760, 847, 873, 892], "rap": [27, 36, 56, 60, 245, 262, 267, 269, 301, 303, 620, 629, 631, 787, 788, 892], "music": [27, 36, 56, 205, 245, 262, 267, 269, 301, 303, 620, 629, 631, 787, 788, 892], "resolut": [27, 30, 36, 44, 47, 48, 50, 56, 114, 120, 146, 156, 157, 158, 176, 212, 213, 229, 230, 245, 258, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 300, 362, 366, 414, 421, 448, 470, 473, 481, 482, 530, 531, 540, 541, 542, 543, 546, 562, 563, 564, 584, 586, 620, 629, 631, 712, 714, 716, 728, 738, 739, 740, 741, 742, 743, 744, 760, 777, 792, 799, 803, 812, 815, 818, 820, 822, 823, 847, 858, 867, 873, 874, 892], "trap": [27, 36, 56, 59, 245, 262, 267, 269, 303, 620, 629, 631, 787, 788, 892], "auto_examples_python": 27, "auto_examples_jupyt": 27, "fname_raw": [28, 29, 62, 103, 104, 127, 157, 182, 209], "fname_ev": [28, 94, 103, 104], "label_nam": [28, 29, 47, 92, 94, 104, 107, 181, 223, 467], "fname_label": [28, 29, 104, 107, 108], "assumpt": [28, 109, 121, 140, 141, 144, 152, 162, 202, 206, 210, 227, 267, 268, 607, 694, 800, 871, 874, 892], "read_label": [28, 29, 37, 39, 92, 104, 107, 108, 276, 279, 662, 882], "add": [28, 37, 43, 44, 71, 75, 90, 94, 95, 101, 114, 120, 126, 127, 136, 140, 141, 143, 144, 151, 161, 168, 171, 172, 175, 176, 181, 189, 191, 195, 199, 200, 201, 203, 205, 206, 208, 213, 216, 218, 223, 224, 227, 232, 242, 257, 259, 261, 262, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 314, 375, 414, 416, 421, 425, 438, 450, 452, 453, 473, 481, 482, 563, 564, 574, 576, 577, 578, 579, 619, 641, 650, 653, 658, 660, 662, 663, 664, 665, 666, 676, 709, 712, 714, 715, 716, 755, 760, 763, 777, 780, 781, 790, 792, 797, 799, 803, 812, 815, 820, 822, 829, 847, 849, 851, 854, 857, 858, 877, 892], "053": [28, 49, 70, 74, 92, 93, 104, 107, 108, 110, 111, 117, 151, 162, 166, 167, 168, 169, 177, 199, 200, 201, 206, 207, 208, 210, 216, 217, 218, 219, 224, 229, 230], "sqrt": [28, 117, 183, 184, 223, 224, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 569, 597, 728, 738, 742, 814, 874], "mean_stc": 28, "flip": [28, 38, 39, 115, 161, 205, 227, 257, 272, 273, 276, 279, 280, 281, 305, 448, 517, 699, 830, 874, 892], "cancel": [28, 81, 180, 202, 210, 272, 273, 276, 279, 280, 281, 435, 448, 599, 867, 874, 877], "label_sign_flip": [28, 882, 892], "label_mean": 28, "label_mean_flip": 28, "stc_evok": 28, "sub": [28, 32, 33, 34, 41, 46, 66, 68, 71, 83, 113, 146, 155, 170, 212, 213, 241, 242, 265, 266, 267, 268, 270, 441, 481, 482, 597, 661, 713, 760, 786, 863, 871, 874, 892], "stc_evoked_label": 28, "in_label": [28, 37, 38, 39, 276, 279, 280, 281, 892], "care": [28, 34, 141, 150, 151, 160, 202, 205, 206, 216, 218, 374, 479, 698, 874, 892], "polar": [28, 47, 142, 207, 782], "label_mean_evok": 28, "1711": [28, 34, 45, 107, 121, 132, 142, 145, 146, 152, 166, 169, 177, 180, 201, 224, 232, 235, 237], "benefit": [28, 45, 46, 55, 59, 72, 126, 172, 190, 245, 546, 573, 672, 867, 873], "1e3": [28, 29, 38, 39, 41, 70, 73, 97, 113, 137, 149, 151, 156, 157, 177, 185, 192, 213, 223, 229, 230, 231, 237], "h0": [28, 96, 100, 227, 228, 229, 230, 231, 235, 236, 237, 699, 700, 701, 702, 703], "h1": [28, 96, 112, 227, 228, 229, 230, 231, 232, 235, 236, 237], "linewidth": [28, 39, 97, 112, 113, 136, 150, 160, 206, 227, 262, 265, 266, 267, 268, 414, 421, 481, 482, 563, 712, 714, 716, 760, 777, 784, 792, 799, 815, 816, 819, 820, 822], "h2": 28, "unflip": 28, "pool": [28, 140, 149, 151, 166, 217, 298, 299, 476, 478, 479, 531, 532, 533, 534, 535, 537, 538, 548, 880], "stc_trial": 28, "_nolegend_": 28, "compute_mne_inverse_epochs_in_label": [28, 56], "apply_inverse_raw": [29, 531, 532, 533, 535, 882, 892], "smaller": [29, 41, 76, 104, 127, 142, 149, 158, 202, 207, 210, 227, 228, 242, 260, 265, 266, 272, 273, 276, 279, 280, 281, 479, 500, 566, 581, 588, 597, 699, 700, 702, 703, 727, 735, 760, 818, 823, 867, 874, 892], "time_as_index": [29, 40, 84, 140, 149, 175, 216, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 712, 715, 892], "mne_": [29, 30, 877], "s_raw_inverse_": 29, "overwrit": [29, 41, 104, 108, 110, 140, 161, 172, 191, 218, 257, 259, 262, 263, 265, 266, 267, 268, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 309, 310, 311, 314, 315, 444, 445, 446, 447, 481, 482, 515, 549, 563, 564, 573, 649, 650, 653, 657, 712, 713, 714, 715, 716, 745, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 892], "25800": [29, 45, 69, 72, 80, 83, 92, 93, 103, 104, 107, 110, 111, 118, 123, 127, 146, 156, 162, 167, 168, 172, 182, 199, 203, 204, 206, 207, 208, 216, 219, 223, 224, 229, 230, 231], "192599": [29, 45, 69, 72, 83, 92, 93, 103, 104, 107, 110, 111, 118, 123, 127, 146, 156, 162, 167, 168, 172, 182, 199, 203, 204, 206, 207, 216, 219, 223, 224, 229, 230, 231], "670": [29, 45, 69, 72, 81, 83, 92, 93, 103, 104, 107, 110, 111, 118, 123, 127, 146, 156, 162, 167, 168, 172, 182, 199, 203, 204, 206, 207, 209, 216, 219, 223, 224, 229, 230, 231, 232], "127": [29, 33, 35, 56, 156, 164, 169, 196, 209, 227, 231, 232], "compute_mne_inverse_raw_in_label": [29, 56], "nilearn": [30, 41, 44, 171, 176, 181, 182, 280, 281, 824], "plot_stat_map": 30, "index_img": 30, "read_evok": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 79, 86, 87, 116, 119, 120, 124, 127, 149, 150, 172, 176, 178, 179, 181, 265, 266, 267, 268, 275, 481, 482, 838, 871, 882, 892], "vol": [30, 44, 50, 135, 160, 176, 180, 181, 245, 263, 265, 266, 267, 268, 278, 301, 435, 639, 667, 668, 669, 670, 671, 672, 673, 674, 800], "4d": [30, 123, 165, 186, 187, 188, 262, 263, 265, 266, 267, 268, 270, 304, 356, 455, 457, 481, 482, 492, 527, 561, 562, 699, 700, 712, 714, 715, 716, 776, 788, 874, 877, 892], "img": [30, 116, 160, 182, 227, 280, 281], "as_volum": [30, 280, 281, 892], "nib": [30, 44, 156], "s_invers": 30, "gz": [30, 140, 155, 172, 206, 257, 264, 265, 266, 267, 268, 278, 314, 389, 481, 482, 502, 545, 549, 564, 611, 617, 620, 622, 629, 631, 637, 641, 677, 833, 836, 838, 839, 843, 844, 857, 892], "t1_fname": [30, 160, 176], "499": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 61, 79, 86, 87, 116, 119, 120, 127, 142, 143, 149, 168, 172, 176, 178, 179, 181, 196, 230, 231, 232], "11271": [30, 44, 181, 892], "422": [30, 59, 146, 148, 196, 209, 245, 479], "compute_mne_inverse_volum": [30, 56], "plug": [31, 851, 874], "facil": [31, 258], "implement": [31, 71, 166, 169, 179, 196, 203, 205, 210, 224, 242, 258, 262, 270, 274, 289, 290, 292, 304, 334, 356, 362, 414, 421, 422, 427, 431, 454, 476, 478, 479, 481, 482, 526, 530, 531, 532, 533, 534, 535, 537, 538, 548, 564, 565, 572, 579, 584, 588, 614, 636, 696, 737, 739, 747, 813, 851, 858, 866, 875, 880, 890, 892], "wmne": [31, 478, 479], "eloreta": [31, 165, 166, 175, 178, 179, 186, 187, 235, 237, 262, 265, 267, 268, 270, 276, 298, 299, 356, 455, 476, 478, 479, 530, 531, 532, 533, 534, 535, 537, 538, 542, 544, 547, 548, 631, 760, 785, 847, 892], "educ": [31, 873], "shall": [31, 144, 201, 267, 268, 438, 564, 680, 795, 851, 873], "develop": [31, 71, 171, 205, 210, 256, 257, 334, 588, 711, 769, 854, 855, 857, 858, 868, 871, 873, 877, 892], "meant": [31, 90, 95, 109, 171, 227, 274, 290, 292, 343, 416, 426, 518, 658, 754, 755, 763, 892], "practic": [31, 72, 99, 114, 151, 160, 168, 201, 202, 208, 210, 242, 245, 271, 298, 564, 573, 633, 639, 698, 847, 851, 873, 874], "apply_solv": 31, "linalg": [31, 84, 156, 160, 185, 206, 360, 698, 871, 892], "plot_sparse_source_estim": [31, 35, 40, 46, 59, 92, 825, 882, 892], "ave_fnam": [31, 40, 59, 69, 92], "cov_fnam": [31, 35, 40, 45, 51, 59, 60, 69, 92, 172, 224, 275], "handl": [31, 40, 46, 59, 127, 133, 140, 144, 146, 151, 155, 160, 165, 166, 168, 170, 172, 173, 207, 210, 214, 215, 260, 265, 266, 267, 268, 270, 344, 441, 455, 481, 482, 558, 561, 564, 599, 656, 761, 769, 777, 780, 782, 793, 804, 808, 832, 851, 877, 892], "365": [31, 40, 41, 45, 56, 59, 81, 112, 169, 209, 227, 245, 271, 276, 356], "auxiliari": [31, 142, 375], "def": [31, 34, 69, 77, 84, 92, 93, 94, 109, 113, 117, 133, 137, 150, 151, 156, 160, 202, 203, 206, 222, 224, 227, 231, 237, 242, 851], "ones": [31, 83, 88, 111, 141, 170, 178, 183, 185, 188, 206, 207, 227, 242, 258, 271, 390, 449, 474, 475, 481, 482, 522, 566, 588, 633, 639, 646, 697, 851, 871, 874, 877, 892], "account": [31, 80, 109, 123, 141, 142, 156, 158, 162, 180, 185, 192, 200, 201, 207, 208, 210, 216, 217, 227, 232, 242, 259, 262, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 542, 564, 567, 597, 800, 851, 871, 874, 877, 892], "constraint": [31, 61, 158, 166, 178, 195, 208, 245, 265, 266, 288, 300, 457, 542, 791, 877, 892], "weigth": 31, "formul": [31, 728, 738, 739, 742, 874], "problem": [31, 40, 59, 71, 88, 96, 97, 114, 137, 144, 161, 166, 175, 176, 188, 189, 196, 200, 204, 205, 207, 208, 216, 227, 228, 232, 235, 236, 237, 242, 245, 478, 497, 564, 588, 617, 623, 699, 700, 702, 703, 705, 706, 826, 850, 851, 856, 871, 872, 874, 880, 892], "bia": [31, 40, 71, 84, 141, 151, 184, 202, 235, 237, 241, 245, 262, 267, 268, 298, 299, 362, 427, 476, 478, 479, 542, 597, 731, 794, 799, 874, 892], "callabl": [31, 150, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 284, 314, 316, 342, 367, 414, 417, 421, 424, 431, 443, 481, 482, 534, 563, 564, 579, 647, 678, 679, 691, 698, 699, 700, 702, 703, 712, 714, 715, 716, 758, 760, 773, 777, 784, 791, 792, 794, 799, 803, 812, 815, 818, 820, 821, 822, 823, 892], "boolean": [31, 101, 141, 143, 169, 171, 206, 207, 216, 218, 262, 265, 266, 267, 268, 274, 276, 414, 421, 481, 482, 563, 564, 699, 700, 702, 703, 712, 714, 716, 791, 792, 796, 799, 803, 812, 815, 820, 851, 878, 892], "what": [31, 59, 72, 83, 90, 94, 95, 117, 127, 128, 136, 140, 141, 142, 143, 144, 156, 160, 169, 171, 175, 180, 181, 182, 190, 200, 202, 211, 216, 217, 218, 224, 227, 229, 232, 240, 242, 260, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 356, 360, 367, 372, 373, 389, 406, 433, 438, 443, 447, 464, 480, 481, 482, 497, 550, 604, 617, 619, 623, 648, 650, 662, 712, 715, 740, 743, 783, 818, 823, 840, 847, 851, 854, 856, 857, 859, 877, 880, 882], "tangenti": [31, 298, 299, 459, 476, 478, 479, 542, 874, 877], "discret": [31, 45, 104, 158, 176, 196, 208, 240, 245, 264, 265, 266, 267, 268, 278, 421, 459, 476, 478, 479, 481, 482, 525, 542, 661, 712, 714, 715, 716, 724, 730, 873, 892], "coeffici": [31, 101, 109, 141, 146, 158, 195, 202, 204, 418, 420, 426, 432, 449, 450, 451, 478, 479, 563, 574, 575, 588, 599, 610, 614, 666, 675, 676, 697, 698, 714, 716, 725, 727, 730, 731, 735, 801, 892], "privat": [31, 851, 892], "inverse_spars": [31, 35, 40, 46, 59, 175, 860, 882, 892], "mxne_invers": 31, "_prepare_gain": 31, "is_fixed_ori": [31, 892], "_reapply_source_weight": 31, "_make_sparse_stc": 31, "all_ch_nam": 31, "gain_info": 31, "source_weight": 31, "weights_min": [31, 40, 59, 478, 479, 892], "dot": [31, 79, 87, 112, 119, 124, 127, 144, 150, 160, 175, 178, 182, 185, 190, 195, 200, 207, 211, 213, 235, 237, 263, 267, 268, 272, 276, 280, 698, 788, 794, 851, 874, 892], "n_orient": [31, 272, 273, 276, 279, 280, 281, 448, 546], "active_set": 31, "l2": [31, 40, 54, 55, 245, 478, 479, 546, 672, 724, 860, 877], "penal": 31, "strongest": [31, 35, 40, 47, 59, 151], "n_dipol": [31, 51, 60, 69, 92, 93, 158, 263, 272, 273, 276, 279, 280, 281, 301, 303, 434, 540, 541, 543, 678], "depend": [31, 71, 82, 101, 126, 135, 136, 137, 141, 149, 151, 155, 157, 158, 162, 170, 171, 172, 190, 195, 201, 202, 204, 206, 207, 210, 218, 224, 227, 228, 229, 237, 242, 245, 259, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 300, 320, 331, 344, 345, 407, 420, 426, 440, 448, 458, 481, 482, 489, 496, 498, 564, 574, 588, 594, 607, 613, 693, 699, 700, 702, 703, 705, 707, 708, 711, 712, 714, 715, 716, 734, 760, 769, 781, 783, 784, 790, 791, 794, 807, 813, 849, 850, 851, 854, 857, 858, 859, 866, 867, 868, 871, 874], "n_active_dipol": 31, "bool": [31, 120, 171, 232, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 322, 323, 324, 325, 326, 328, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 462, 464, 465, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 604, 606, 607, 608, 611, 612, 613, 614, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 679, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 693, 696, 699, 700, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 730, 731, 734, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 755, 759, 760, 765, 768, 769, 773, 774, 776, 777, 778, 779, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 871], "entri": [31, 109, 140, 142, 144, 150, 151, 166, 170, 171, 196, 200, 216, 259, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 287, 316, 343, 344, 345, 346, 347, 348, 414, 421, 424, 436, 446, 449, 479, 480, 481, 482, 531, 539, 563, 564, 579, 657, 661, 663, 664, 665, 677, 692, 712, 714, 715, 716, 760, 777, 778, 790, 791, 792, 796, 799, 803, 812, 813, 815, 818, 819, 820, 822, 823, 851, 854, 874, 877, 892], "x_full": 31, "solv": [31, 59, 161, 175, 414, 497, 564, 617, 623, 698, 874, 880], "ey": [31, 75, 125, 135, 137, 158, 165, 172, 183, 199, 201, 204, 206, 207, 214, 215, 259, 265, 266, 267, 268, 270, 383, 455, 481, 482, 497, 498, 500, 555, 561, 582, 584, 585, 586, 587, 590, 613, 623, 712, 714, 715, 716, 868, 881, 892], "dtype": [31, 92, 94, 114, 120, 144, 156, 167, 222, 224, 232, 265, 266, 267, 268, 420, 480, 481, 482, 874, 892], "bgcolor": [31, 35, 40, 46, 59, 92, 156, 160, 178, 481, 482, 769, 779, 813, 819], "097": [31, 56], "custom_inverse_solv": [31, 56], "synchron": [32, 33, 34, 112, 146, 211, 241, 245, 258, 298, 483, 489, 496, 851, 868, 892], "marijn": [32, 33, 45, 61, 74, 103, 161, 224, 245, 298, 299, 879, 892], "van": [32, 33, 43, 45, 61, 74, 103, 126, 161, 180, 202, 224, 245, 277, 298, 299, 362, 391, 572, 874, 879, 892], "vliet": [32, 33, 45, 61, 74, 103, 161, 224, 245, 298, 299, 879, 892], "vanvliet": [32, 33, 45, 61, 74, 103, 161, 224], "rockhil": [32, 71, 72, 83, 114, 115, 116, 120, 135, 136, 231, 232, 245, 879, 892], "aprockhil": [32, 71, 72, 83, 114, 115, 116, 120, 135, 136, 231, 232], "mailbox": [32, 33, 71, 72, 83, 113, 114, 115, 116, 120, 127, 135, 136, 229, 231, 232, 235, 241], "tfr_morlet": [32, 114, 166, 229, 230, 231, 232, 241, 427, 737, 739, 740, 741, 743, 744, 882, 892], "csd_tfr": [32, 882, 892], "make_d": [32, 33, 34, 224, 290, 291, 292, 293, 847, 882, 892], "apply_dics_tfr_epoch": [32, 290, 291, 292, 882, 892], "organ": [32, 72, 231, 232, 245, 573, 702, 703, 868, 873, 877], "_task": [32, 33, 34, 46, 113, 241], "_meg": [32, 33, 34, 46, 113, 172, 241, 257, 481, 482, 502, 503, 892], "5000e": 32, "mostli": [32, 109, 141, 175, 178, 188, 201, 204, 380, 381, 382, 385, 386, 387, 389, 394, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 459, 476, 478, 479, 481, 482, 542, 760, 847], "wavelet": [32, 103, 113, 166, 202, 231, 245, 427, 548, 712, 715, 718, 721, 726, 728, 737, 738, 739, 740, 742, 743, 847, 892], "tfr": [32, 112, 202, 229, 230, 241, 427, 531, 532, 533, 534, 712, 715, 718, 721, 723, 734, 739, 740, 742, 743, 744, 745, 820, 847, 880, 882, 890, 892], "wish": [32, 144, 171, 190, 208, 222, 228, 229, 235, 365, 481, 482, 588, 761, 763, 851, 859, 873], "epochs_tfr": [32, 293, 535, 723], "return_itc": [32, 112, 114, 166, 229, 230, 231, 232, 241, 741, 742, 743, 744], "buffer": [32, 114, 189, 213, 257, 270, 480, 481, 482, 497, 585, 588, 599, 617, 623, 877, 892], "01_task": [32, 33, 34, 46, 68, 113, 170, 213, 241, 242], "somato_meg": [32, 33, 34, 46, 113, 241], "237600": [32, 33, 34, 46, 113, 241], "506999": [32, 33, 34, 46, 113, 241], "791": [32, 33, 34, 46, 113, 181, 209, 232, 241], "1688": [32, 33, 34, 46, 113, 209, 241], "266": [32, 33, 34, 46, 113, 169, 196, 202, 209, 232, 241, 245], "9989760657919393": 32, "1052": [32, 33, 34, 196], "0121": [32, 34, 145, 166, 169, 216, 224], "0211": [32, 34, 166, 169, 224], "1331": [32, 34, 145, 169, 201, 209, 224], "2211": [32, 34, 169, 224], "2241": [32, 34, 159, 169, 224], "2521": [32, 34, 140, 149, 169, 224], "1641": [32, 34, 169, 224], "1831": [32, 34, 169, 224], "1921": [32, 34, 169, 224], "1941": [32, 34, 35, 169, 224], "1611": [32, 34, 120, 169, 224], "0441": [32, 34, 169, 224], "1631": [32, 34, 120, 169, 182, 213, 224], "0231": [32, 34, 120, 166, 169, 224], "1411": [32, 34, 145, 146, 169, 201, 207, 224], "0341": [32, 34, 169, 224], "1621": [32, 34, 120, 169, 224], "1811": [32, 34, 120, 150, 169, 216, 224], "1521": [32, 34, 166, 169, 224], "1721": [32, 34, 169, 224], "1911": [32, 34, 169, 224], "1931": [32, 34, 169, 224], "2111": [32, 34, 169, 224], "2121": [32, 34, 169, 224], "2021": [32, 34, 144, 169, 180, 190, 212, 224, 245, 392, 510, 578, 868, 873], "1341": [32, 34, 169, 209, 224], "0221": [32, 34, 166, 169, 224], "0241": [32, 34, 169, 224], "1731": [32, 34, 35, 169, 224], "2041": [32, 34, 169, 224], "0731": [32, 34, 169, 224], "1141": [32, 34, 169, 224], "1131": [32, 34, 169, 224], "0131": [32, 34, 145, 166, 169, 224], "period": [32, 81, 121, 140, 141, 144, 145, 149, 150, 172, 180, 199, 201, 202, 203, 205, 212, 213, 242, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 356, 500, 564, 567, 568, 569, 581, 629, 630, 724, 756, 794, 847, 851, 873, 892], "baseline_csd": 32, "scalar": [32, 141, 160, 180, 224, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 291, 298, 299, 300, 414, 421, 481, 482, 564, 698, 714, 716, 760, 792, 799, 803, 812, 818, 823, 892], "beamfom": 32, "noise_csd": [32, 33, 298], "reduce_rank": [32, 33, 34, 49, 298, 299, 892], "real_filt": [32, 33, 34, 224, 298, 892], "epochs_stc": 32, "return_gener": [32, 104, 292, 293, 296, 448, 533, 535, 538], "nsourc": [32, 52, 269, 877], "epoch_stc": 32, "conj": [32, 114, 298, 299], "apply_baselin": [32, 112, 127, 141, 149, 172, 178, 199, 204, 205, 207, 229, 230, 231, 232, 241, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 712, 715, 892], "8155": [32, 33, 34, 46], "sti": [32, 33, 42, 46, 70, 73, 74, 80, 90, 93, 94, 95, 107, 108, 110, 113, 140, 142, 149, 152, 166, 168, 169, 177, 188, 196, 200, 204, 205, 207, 217, 224, 229, 240, 241, 258, 455, 456, 481, 482, 498, 847, 892], "006": [32, 33, 121, 128, 140, 142, 145, 149, 158, 166, 169, 204, 207, 224, 245, 257, 271, 276, 520, 867], "005": [32, 33, 121, 128, 140, 142, 149, 157, 159, 162, 166, 169, 204, 224, 237, 241, 263, 346, 566, 788], "001": [32, 33, 72, 80, 83, 84, 121, 128, 140, 141, 142, 144, 145, 149, 150, 151, 160, 166, 168, 169, 172, 188, 195, 199, 201, 202, 203, 204, 207, 212, 216, 224, 227, 228, 229, 231, 232, 235, 236, 241, 245, 539, 573, 662, 699, 700, 702, 703, 868, 874], "015": [32, 33, 128, 140, 142, 149, 169, 187, 204, 205, 224, 235, 245, 263, 579, 672, 788], "014": [32, 33, 42, 46, 62, 70, 73, 74, 80, 90, 93, 94, 95, 107, 108, 110, 113, 128, 140, 142, 149, 152, 166, 168, 169, 177, 188, 196, 200, 204, 205, 207, 217, 224, 229, 240, 241, 258, 455, 456, 481, 482, 498, 892], "003": [32, 33, 73, 121, 128, 140, 141, 142, 145, 149, 166, 167, 169, 172, 201, 202, 204, 205, 207, 216, 224, 245], "074": 32, "gyri": [32, 94, 155, 158, 223, 245], "border": [32, 38, 59, 104, 116, 126, 155, 181, 262, 265, 266, 267, 268, 274, 414, 421, 440, 481, 482, 563, 564, 579, 712, 714, 716, 760, 792, 798, 799, 803, 812, 815, 820, 821, 822, 892], "central": [32, 128, 141], "sulcu": 32, "primari": [32, 94, 149, 873, 874], "s1": [32, 505], "m1": [32, 68, 170, 208, 227, 242, 265, 266, 267, 268, 481, 482, 656, 892], "4500": 32, "dorsal": [32, 760], "brain_kwarg": [32, 41, 116, 180, 181, 272, 273, 276, 279, 280, 281, 818, 823], "add_data_kwarg": [32, 135, 181, 272, 273, 276, 279, 280, 281, 818, 823], "fmid": [32, 272, 273, 276, 279, 280, 281, 760, 779, 818, 823, 824, 892], "scale_factor": [32, 35, 48, 49, 50, 59, 177, 273, 279, 281, 314, 760, 810, 819, 823], "colorbar_kwarg": [32, 135, 181, 760], "label_font_s": [32, 135, 181], "movi": [32, 61, 135, 136, 177, 181, 760, 892], "websit": [32, 135, 136, 151, 177, 181, 189, 207, 406, 407, 579, 851, 854, 873], "save_movi": [32, 61, 135, 136, 177, 181, 760, 892], "time_view": [32, 61, 109, 127, 135, 136, 177, 181, 191, 272, 273, 276, 279, 280, 281, 760, 818, 823, 892], "onc": [32, 34, 43, 44, 61, 71, 94, 120, 127, 133, 135, 142, 143, 144, 145, 150, 151, 166, 168, 169, 170, 172, 177, 181, 199, 200, 202, 204, 205, 206, 207, 213, 216, 218, 258, 259, 265, 266, 267, 268, 277, 283, 378, 449, 450, 452, 453, 481, 482, 583, 597, 740, 743, 781, 813, 851, 867, 873, 874, 892], "688": [32, 195, 232], "33913449": 32, "817": [32, 232], "80202112": 32, "3163": 32, "68479992": 32, "930": [32, 56, 81, 196, 209, 232], "1505": [32, 56, 245, 476], "dics_epoch": [32, 56, 892], "roman": [33, 245, 866, 892], "goj": [33, 245, 866, 892], "appelhoff": [33, 113, 127, 229, 232, 235, 241, 879, 892], "csd_morlet": [33, 34, 103, 224, 713, 717, 718, 719, 720, 722, 882, 892], "apply_dics_csd": [33, 34, 224, 290, 292, 293, 298, 882, 892], "shorter": [33, 114, 202, 210, 242, 272, 273, 276, 279, 280, 281, 438, 443, 481, 482, 569, 600, 606, 728, 738, 739, 740, 742, 743, 813, 892], "498464098687909": [33, 34], "logspac": [33, 34, 195, 241, 356], "log10": [33, 34, 100, 133, 202, 212, 224, 227, 241, 242, 712], "loss": [33, 71, 201, 206, 265, 266, 267, 268, 417, 424, 444, 445, 446, 447, 481, 482, 694, 874], "csd_baselin": [33, 34], "csd_er": [33, 34], "block": [33, 34, 59, 64, 103, 133, 142, 143, 172, 191, 192, 201, 213, 224, 263, 265, 266, 267, 268, 270, 275, 455, 473, 478, 481, 482, 500, 553, 564, 597, 630, 699, 700, 702, 703, 714, 716, 760, 788, 790, 807, 813, 814, 816, 849, 856, 874, 877, 892], "rather": [33, 34, 61, 140, 141, 146, 149, 156, 166, 167, 168, 170, 171, 178, 188, 196, 201, 207, 208, 212, 216, 227, 231, 235, 240, 265, 266, 269, 272, 273, 276, 279, 280, 281, 421, 481, 482, 529, 537, 538, 548, 598, 704, 707, 760, 778, 813, 847, 849, 851, 867, 868, 873, 874, 892], "entir": [33, 75, 104, 144, 151, 176, 184, 201, 202, 204, 210, 212, 217, 227, 242, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 288, 415, 430, 531, 532, 533, 534, 535, 564, 581, 629, 662, 712, 851, 892], "baseline_source_pow": 33, "beta_source_pow": 33, "messag": [33, 171, 213, 240, 257, 272, 273, 276, 279, 280, 281, 367, 448, 497, 500, 617, 623, 657, 658, 755, 756, 757, 760, 849, 851, 857, 862, 871, 877, 892], "40188307": 33, "5102619": 33, "34636424": 33, "joachim": [33, 180, 224, 245, 291, 298], "gro\u00df": [33, 180, 224, 245, 291, 298], "jan": [33, 180, 224, 245, 291, 298, 299, 867, 892], "kujala": [33, 180, 224, 245, 291, 298, 299], "matti": [33, 40, 54, 55, 58, 59, 60, 126, 162, 178, 180, 210, 224, 245, 276, 291, 298, 303, 478, 479, 531, 542, 546, 575, 580, 599, 669, 674, 858, 866, 871, 874, 892], "h\u00e4m\u00e4l\u00e4inen": [33, 40, 58, 59, 126, 178, 180, 224, 245, 276, 291, 298, 435, 478, 479, 531, 542, 546, 580, 669, 672, 674, 858, 892], "lar": [33, 180, 224, 245, 291, 298], "timmermann": [33, 180, 224, 245, 291, 298], "alfon": [33, 180, 224, 245, 291, 298], "schnitzler": [33, 180, 224, 245, 291, 298], "riitta": [33, 113, 178, 180, 224, 245, 291, 298, 299], "salmelin": [33, 113, 180, 224, 245, 291, 298, 299], "nation": [33, 180, 224, 245, 256, 291, 298, 879], "academi": [33, 180, 224, 245, 291, 298], "694": [33, 180, 196, 224, 232, 245, 291, 298], "699": [33, 140, 151, 180, 224, 232, 245, 291, 298], "2001": [33, 41, 71, 180, 195, 208, 224, 245, 265, 266, 267, 268, 291, 298, 420, 481, 482, 572, 656, 696], "1073": [33, 180, 209, 224, 245, 291, 298], "pna": [33, 180, 224, 245, 291, 298], "194": [33, 56, 169, 227, 232, 245, 874, 892], "dics_source_pow": [33, 56, 892], "luke": [34, 38, 42, 76, 81, 82, 109, 879, 892], "bloi": [34, 38, 42, 81, 82, 109, 879, 892], "make_lcmv": [34, 49, 180, 290, 292, 294, 295, 296, 297, 298, 300, 847, 882, 892], "apply_lcmv_cov": [34, 180, 294, 296, 297, 882, 892], "apply_inverse_cov": [34, 42, 531, 533, 534, 535, 882, 892], "90092": 34, "maxfilt": [34, 188, 210, 270, 352, 353, 354, 435, 481, 482, 537, 538, 547, 548, 574, 575, 588, 599, 663, 664, 665, 677, 877, 892], "conserv": [34, 71, 146, 227, 572, 661, 760, 892], "advanc": [34, 74, 127, 161, 162, 171, 204, 218, 245, 262, 265, 266, 267, 268, 274, 356, 376, 414, 421, 473, 476, 481, 482, 563, 564, 579, 677, 712, 714, 716, 769, 777, 792, 799, 803, 812, 815, 820, 822, 850, 853, 855, 871, 872, 874, 876, 880, 892], "correctli": [34, 43, 44, 150, 190, 204, 237, 265, 266, 267, 268, 334, 447, 481, 482, 587, 775, 794, 849, 850, 857, 867, 868, 874, 877, 892], "compute_rank": [34, 262, 422, 785, 882, 892], "tol": [34, 40, 46, 59, 75, 172, 360, 457, 476, 478, 479, 892], "tol_kind": [34, 360, 892], "active_win": 34, "baseline_win": 34, "baseline_cov": 34, "active_cov": 34, "common_cov": 34, "3737": 34, "ref": [34, 62, 68, 123, 151, 257, 760, 776, 851, 892], "ex": [34, 210, 851, 855, 856], "_gen_dic": 34, "stc_base": [34, 42], "stc_act": 34, "_gen_lcmv": 34, "_gen_mn": 34, "stc_dic": 34, "stc_lcmv": 34, "stc_dspm": [34, 40, 59], "1241": [34, 169, 224], "2611": [34, 169, 195, 201, 224], "0641": [34, 169, 224], "2531": [34, 169, 195, 201, 224], "0531": [34, 169, 224], "2621": [34, 169, 201, 224], "2631": [34, 169, 201, 224], "0911": [34, 169, 201, 224], "0821": [34, 169, 224], "1841": [34, 169, 224], "0521": [34, 169, 201, 224], "1431": [34, 169, 201, 224], "0941": [34, 169, 224], "2031": [34, 169, 224], "1321": [34, 169, 201, 224], "1031": [34, 169, 224, 850], "2221": [34, 169, 224], "2431": [34, 169, 224], "0511": [34, 146, 169, 224], "2421": [34, 120, 169, 201, 224], "2511": [34, 169, 224], "0411": [34, 169, 224], "1231": [34, 169, 196, 224], "1221": [34, 169, 201, 224], "1541": [34, 169, 201, 209, 224], "1021": [34, 169, 209, 224, 245, 265, 266, 267, 268, 481, 482], "2141": [34, 169, 201, 224, 227, 245, 705, 706], "0431": [34, 169, 224], "1821": [34, 169, 224], "0111": [34, 145, 166, 169, 201, 207, 216, 224, 646], "1531": [34, 166, 169, 224, 257], "2231": [34, 169, 224], "2641": [34, 169, 224], "2321": [34, 169, 224], "2331": [34, 169, 224, 558], "0331": [34, 166, 169, 224], "2411": [34, 120, 169, 224], "0311": [34, 166, 169, 224], "1421": [34, 145, 146, 169, 201, 207, 224], "0631": [34, 169, 224], "1441": [34, 145, 169, 191, 201, 209, 224], "0741": [34, 169, 224], "2341": [34, 169, 224], "0321": [34, 166, 169, 224], "1511": [34, 166, 169, 224], "1111": [34, 141, 151, 169, 202, 224, 232, 245, 356, 698, 699, 700, 702, 703, 851], "0421": [34, 169, 224], "0711": [34, 169, 224], "0811": [34, 169, 201, 224], "0541": [34, 169, 224], "2131": [34, 169, 201, 224, 227, 245, 705, 706], "1041": [34, 169, 224], "1211": [34, 169, 224], "1121": [34, 169, 224], "0721": [34, 169, 224], "0611": [34, 169, 224], "2311": [34, 169, 195, 224], "0141": [34, 169, 201, 224], "0921": [34, 169, 224], "1741": [34, 169, 201, 224, 245], "0621": [34, 169, 224], "1311": [34, 135, 169, 209, 224], "2441": [34, 169, 224], "2541": [34, 169, 201, 224], "0931": [34, 169, 224], "1011": [34, 169, 209, 224], "planar": [34, 40, 42, 50, 58, 59, 72, 84, 92, 94, 109, 111, 119, 131, 142, 146, 172, 177, 178, 179, 183, 188, 196, 199, 206, 207, 210, 224, 227, 777, 874, 877, 892], "7615": [34, 126, 245, 391], "004172": 34, "17919e": 34, "exp": [34, 40, 42, 50, 58, 59, 90, 92, 94, 109, 177, 178, 179, 182, 191, 196, 207, 224, 227, 298, 299, 458, 476, 478, 479, 542], "37511": 34, "81775e": 34, "brain_dic": 34, "5205929": 34, "6585548": 34, "71744034": 34, "brain_lcmv": 34, "47949264": 34, "58585385": 34, "05032456": 34, "brain_dspm": 34, "71118668": 34, "88724176": 34, "99076424": 34, "evoked_ers_source_pow": [34, 56], "detail": [35, 44, 45, 80, 119, 140, 142, 149, 150, 151, 155, 156, 158, 166, 167, 168, 169, 170, 171, 172, 175, 177, 180, 188, 189, 190, 195, 196, 200, 201, 203, 205, 206, 207, 210, 216, 217, 218, 219, 237, 240, 245, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 424, 425, 427, 430, 431, 433, 435, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 464, 465, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 560, 563, 564, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 616, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 660, 661, 663, 664, 665, 666, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 688, 699, 700, 701, 702, 703, 705, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 730, 731, 734, 735, 739, 740, 742, 743, 744, 745, 748, 749, 750, 755, 759, 760, 768, 775, 776, 777, 784, 785, 788, 791, 792, 793, 794, 795, 798, 799, 800, 802, 803, 804, 805, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 829, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 851, 867, 868, 870, 871, 875, 880, 892], "luessi": [35, 47, 104, 245, 866, 892], "mluessi": [35, 47, 104], "nmr": [35, 43, 47, 104, 114, 155, 216, 272, 276, 280, 369, 818, 874], "mgh": [35, 43, 47, 58, 104, 114, 155, 170, 216, 272, 276, 280, 330, 369, 661, 818, 862, 868, 874, 880, 892], "harvard": [35, 43, 47, 58, 104, 114, 155, 256, 272, 276, 280, 369, 818, 874, 879], "daniel": [35, 40, 46, 58, 59, 92, 127, 209, 245, 276, 478, 479, 866, 879, 892], "strohmeier": [35, 40, 46, 59, 92, 245, 478, 479, 866, 892], "tu": [35, 40, 46, 59, 92], "ilmenau": [35, 40, 46, 59, 92, 256, 879], "de": [35, 40, 46, 59, 92, 99, 112, 195, 196, 213, 242, 245, 256, 420, 564, 579, 867, 879, 892], "gamma_map": [35, 882, 892], "make_stc_from_dipol": [35, 40, 46, 59, 882, 892], "plot_dipole_loc": [35, 40, 51, 59, 60, 178, 183, 185, 882, 892], "plot_dipole_amplitud": [35, 40, 51, 59, 60, 882], "evoked_fnam": [35, 51, 60, 90, 95, 265, 266, 267, 268, 481, 482], "50e": [35, 92, 151, 204], "300e": 35, "xyz_same_gamma": [35, 476, 892], "return_residu": [35, 40, 46, 51, 59, 60, 177, 301, 303, 476, 478, 479, 531, 892], "return_as_dipol": [35, 40, 46, 59, 476, 478, 479, 892], "303": [35, 52, 56, 88, 167, 169, 174, 196, 223, 227, 232, 236, 241, 244], "364": [35, 40, 48, 49, 54, 55, 58, 59, 69, 81, 92, 94, 112, 121, 162, 166, 169, 178, 209, 232, 240], "converg": [35, 40, 46, 59, 172, 179, 205, 476, 531, 564, 719, 730, 874, 892], "055e": 35, "22233": 35, "856e": 35, "20712": 35, "375e": 35, "17166": 35, "061e": 35, "12996": 35, "273e": 35, "10107": 35, "574e": 35, "8307": 35, "319e": 35, "7209": 35, "369e": 35, "631e": 35, "5694": 35, "047e": 35, "5142": 35, "579e": 35, "4692": 35, "199e": 35, "889e": 35, "4002": [35, 874], "634e": 35, "3696": 35, "422e": 35, "3429": 35, "246e": 35, "3153": 35, "099e": 35, "2952": [35, 162], "747e": 35, "2745": 35, "702e": 35, "2559": 35, "817e": 35, "2394": 35, "062e": 35, "2229": 35, "417e": 35, "2067": 35, "883e": 35, "711e": 35, "1836": 35, "552e": 35, "400e": 35, "1617": 35, "266e": 35, "1509": 35, "166e": 35, "1440": 35, "066e": 35, "1350": 35, "965e": 35, "1245": 35, "861e": 35, "1200": [35, 195, 223], "754e": 35, "1128": 35, "643e": 35, "1077": [35, 58, 245, 276, 546, 672], "529e": 35, "1017": [35, 245], "410e": 35, "975": [35, 74, 232, 236, 239], "288e": 35, "924": 35, "163e": 35, "036e": 35, "837": [35, 232], "906e": 35, "798": [35, 144, 232], "776e": 35, "744": [35, 148, 232], "644e": 35, "705": [35, 196, 232], "513e": 35, "382e": 35, "660": [35, 81, 139, 232], "253e": 35, "627": [35, 55, 56, 232], "125e": 35, "600": [35, 40, 58, 59, 72, 75, 81, 83, 90, 93, 126, 127, 134, 155, 156, 160, 167, 168, 178, 179, 180, 184, 191, 199, 200, 203, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 224, 232, 245, 479, 760, 892], "000e": 35, "588": [35, 232], "877e": 35, "570": [35, 81, 91, 232], "758e": 35, "552": [35, 232], "642e": 35, "528": [35, 143, 232], "495": [35, 82, 222, 232], "421e": 35, "486": [35, 143, 195, 227, 232], "316e": 35, "215e": 35, "441": [35, 196, 227, 232, 245, 564, 597], "118e": 35, "026e": 35, "408": [35, 81, 185, 196, 227, 232], "937e": 35, "402": [35, 81, 144, 209, 227, 232, 877], "853e": 35, "387": [35, 75, 81, 85, 196, 209, 232, 245, 298], "772e": 35, "378": [35, 81, 192, 194, 196, 227, 232], "695e": 35, "622e": 35, "339": [35, 169, 209, 227, 232], "333": [35, 76, 112, 169, 195], "486e": 35, "330": [35, 42, 50, 56, 65, 67, 81, 82, 112, 169, 183, 209, 227, 232, 892], "423e": 35, "312": [35, 150, 154, 169, 227], "306e": 35, "252e": 35, "201e": 35, "152e": 35, "273": [35, 46, 142, 148, 166, 169, 184, 195, 209, 227, 232, 892], "106e": 35, "261": [35, 169, 232], "020e": 35, "807e": 35, "234": [35, 169, 209, 231, 244], "432e": 35, "222": [35, 46, 103, 106, 169, 191, 231, 237], "074e": 35, "735e": 35, "413e": 35, "207": [35, 114, 158, 169, 213, 215, 231, 232, 245], "814e": 35, "198": [35, 60, 169, 184, 196, 209, 227, 231, 237], "536e": 35, "192": [35, 169, 171, 196, 209, 227, 232], "271e": 35, "186": [35, 45, 144, 169, 176, 181, 196, 209, 227, 231], "019e": 35, "778e": 35, "174": [35, 126, 169, 209, 227, 231, 232, 245, 278], "549e": 35, "168": [35, 45, 129, 130, 169, 176, 181, 196, 209, 227, 231, 232, 237], "122e": 35, "159": [35, 114, 149, 169, 183, 187, 227, 231, 232], "922e": 35, "156": [35, 45, 140, 169, 176, 181, 195, 209, 227, 232, 278], "732e": 35, "550e": 35, "138": [35, 164, 166, 169, 196, 209, 227, 231, 245, 278, 569, 892], "896e": 35, "132": [35, 46, 49, 56, 151, 169, 209, 213, 227, 231, 232], "749e": 35, "609e": 35, "126": [35, 169, 196, 209, 232], "344e": 35, "123": [35, 123, 169, 187, 205, 207, 227, 231, 232, 347], "220e": 35, "104": [35, 62, 130, 169, 232, 245, 672, 877, 892], "101e": 35, "986e": 35, "875e": 35, "107": [35, 62, 113, 115, 140, 169, 227, 232, 245, 877, 892], "769e": 35, "667e": 35, "473e": 35, "209e": 35, "126e": 35, "689e": 35, "500e": 35, "441e": 35, "384e": 35, "329e": 35, "275e": 35, "985e": 35, "137": [35, 169, 171, 232, 278], "154": [35, 137, 161, 168, 169, 209, 227, 231, 232], "155": [35, 148, 169, 209, 227, 231, 242, 892], "247e": 35, "650e": 35, "177": [35, 145, 169, 196, 227, 231, 232, 245, 699, 700, 702, 703], "117e": 35, "179": [35, 76, 169, 209, 227, 231, 232, 245, 606, 874], "815e": 35, "524e": 35, "211": [35, 41, 59, 145, 169, 209, 231, 232], "307e": 35, "226": [35, 144, 169, 184, 209, 227, 232, 892], "274e": 35, "042e": 35, "293": [35, 101, 102, 112, 169, 183, 227, 232, 235, 239, 245], "161e": 35, "313": [35, 169, 209, 227, 232, 892], "784e": 35, "340": [35, 51, 81, 82, 112, 123, 169, 191, 195, 227, 232, 245, 301, 892], "169e": 35, "343": [35, 112, 143, 169, 170, 195, 209, 227, 232, 892], "949e": 35, "886e": 35, "420": [35, 81, 196, 232], "reach": [35, 40, 46, 59, 172, 242, 258, 265, 266, 267, 268, 481, 482, 668, 712, 714, 716, 719, 730, 740, 743, 757, 792, 799, 820, 892], "dip": [35, 40, 59, 84, 116, 176, 181, 183, 184, 185, 211, 242, 263, 457, 621, 892], "mri_head_t": [35, 40, 51, 59, 60, 181, 269, 270, 474, 475, 877], "fig_nam": [35, 40, 46, 59, 819], "david": [35, 42, 119, 126, 129, 195, 202, 240, 245, 265, 266, 267, 268, 356, 391, 420, 476, 481, 482, 532, 714, 716, 724, 730, 741, 744, 777, 874, 892], "wipf": [35, 245, 476], "srikantan": [35, 224, 245, 298, 299, 476], "nagarajan": [35, 224, 245, 298, 299, 476], "unifi": [35, 137, 180, 202, 245, 476, 672, 892], "947": [35, 196, 209, 245, 476], "059": [35, 140, 142, 149, 169, 200, 216, 224, 245, 476], "681": [35, 56, 232], "381": [35, 56, 81, 85, 196, 232], "gamma_map_invers": [35, 56], "form": [37, 141, 143, 160, 168, 175, 178, 199, 202, 204, 205, 206, 210, 227, 229, 232, 235, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 279, 280, 281, 337, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 449, 476, 478, 479, 481, 482, 516, 525, 531, 533, 534, 535, 563, 564, 565, 573, 579, 599, 642, 645, 661, 662, 663, 664, 665, 677, 699, 700, 702, 703, 712, 714, 715, 716, 724, 777, 792, 794, 799, 803, 812, 815, 820, 822, 840, 845, 851, 870, 871, 873, 874, 877, 892], "merg": [37, 141, 217, 218, 260, 265, 267, 268, 355, 456, 500, 529, 653, 661, 851, 873, 892], "christian": [37, 120, 126, 134, 144, 245, 391, 392, 414, 438, 672, 866, 868, 892], "brodbeck": [37, 120, 134, 245, 866, 892], "christianbrodbeck": [37, 120, 134], "read_source_estim": [37, 43, 53, 116, 127, 134, 175, 181, 236, 882, 892], "aud_lh": 37, "aud_rh": 37, "stc_lh": [37, 47], "stc_rh": [37, 47], "stc_bh": 37, "calcul": [37, 38, 58, 81, 101, 112, 128, 144, 150, 151, 158, 162, 166, 170, 176, 180, 188, 195, 201, 202, 205, 207, 212, 216, 227, 228, 232, 241, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 298, 299, 306, 320, 356, 360, 361, 372, 373, 374, 414, 421, 422, 449, 457, 458, 471, 476, 478, 479, 481, 482, 520, 525, 526, 527, 542, 564, 571, 576, 577, 581, 588, 599, 603, 619, 629, 641, 677, 691, 699, 700, 702, 703, 705, 706, 713, 724, 731, 800, 805, 814, 847, 871, 877, 892], "mass": [37, 165, 227, 228, 233, 234, 265, 270, 271, 276, 481, 561, 626, 661, 669, 675, 678, 693, 695, 696, 700, 715, 742, 750, 889, 892], "mni": [37, 135, 136, 159, 176, 181, 182, 190, 263, 280, 281, 314, 330, 369, 474, 643, 752, 759, 760, 824, 874, 892], "vtx": 37, "t_lh": 37, "center_of_mass": [37, 223, 271, 276, 675, 678, 892], "mni_lh": 37, "vertex_to_mni": [37, 271, 276, 882], "t_rh": 37, "mni_rh": 37, "625": [37, 143, 179, 187, 232], "hl": 37, "hr": 37, "hb": 37, "figlegend": 37, "label_activation_from_stc": [37, 56], "typic": [38, 44, 61, 71, 83, 143, 145, 149, 151, 156, 160, 167, 168, 170, 188, 191, 192, 196, 199, 200, 202, 204, 205, 206, 207, 208, 210, 212, 218, 227, 242, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 279, 280, 281, 298, 299, 314, 315, 333, 344, 346, 356, 360, 361, 362, 364, 421, 432, 457, 467, 470, 481, 482, 544, 563, 564, 566, 574, 579, 600, 610, 613, 623, 661, 683, 697, 698, 699, 700, 702, 703, 712, 715, 760, 798, 807, 811, 813, 847, 850, 851, 857, 868, 869, 871, 873, 874, 892], "anatom": [38, 44, 71, 94, 135, 156, 160, 176, 181, 245, 263, 280, 281, 367, 466, 760, 778, 782, 824, 847, 874, 892], "yield": [38, 140, 142, 145, 149, 151, 155, 161, 171, 180, 192, 203, 205, 216, 217, 242, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 320, 431, 435, 564, 567, 574, 575, 588, 599, 625, 664, 665, 704, 728, 738, 739, 740, 742, 743, 760, 847, 869, 871, 874, 892], "peak": [38, 54, 55, 61, 71, 73, 75, 82, 90, 94, 95, 127, 132, 145, 149, 150, 166, 172, 175, 177, 178, 180, 183, 184, 185, 191, 199, 201, 204, 205, 207, 209, 211, 227, 242, 257, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 361, 546, 564, 566, 569, 576, 577, 581, 582, 588, 589, 590, 592, 593, 594, 608, 669, 698, 712, 790, 795, 797, 798, 799, 867, 874, 892], "banksst": [38, 41, 47], "aparc_label_nam": 38, "stc_mean": 38, "grow": [38, 90, 95, 242, 472, 516, 616, 858, 873], "halt": [38, 142, 263, 265, 266, 267, 268, 270, 473, 481, 482, 564, 714, 716, 788, 790, 807, 813, 816, 857, 892], "read_labels_from_annot": [38, 41, 47, 69, 90, 94, 95, 126, 223, 550, 633, 842, 882, 892], "parc": [38, 41, 47, 634, 842], "aparc": [38, 41, 47, 69, 90, 94, 95, 126, 135, 155, 176, 181, 223, 263, 272, 273, 276, 279, 280, 281, 388, 448, 466, 518, 634, 649, 760, 847, 892], "regexp": [38, 90, 94, 95, 200, 205, 207, 212, 443, 558, 634, 892], "stc_mean_label": 38, "func_label": 38, "stc_to_label": [38, 882, 892], "maximum": [38, 47, 48, 50, 58, 83, 115, 119, 151, 176, 177, 181, 182, 201, 202, 205, 216, 245, 260, 265, 266, 267, 268, 272, 273, 276, 278, 279, 280, 281, 298, 299, 328, 344, 367, 422, 447, 448, 451, 472, 476, 478, 479, 481, 482, 516, 524, 531, 540, 541, 546, 564, 566, 581, 584, 594, 597, 598, 652, 677, 699, 700, 702, 703, 708, 712, 717, 718, 719, 720, 721, 722, 723, 724, 726, 728, 730, 738, 741, 742, 744, 760, 784, 789, 795, 798, 818, 823, 824, 847, 874, 892], "anat_label": 38, "stc_anat_label": 38, "pca_anat": 38, "extract_label_time_cours": [38, 39, 41, 181, 272, 273, 276, 279, 280, 281, 518, 882, 892], "pca_flip": [38, 39, 272, 273, 276, 279, 280, 281, 448], "stc_func_label": 38, "pca_func": 38, "show_view": [38, 48, 109, 116, 135, 160, 181, 190, 211, 224, 237, 272, 273, 276, 279, 280, 281, 760, 818, 823, 892], "add_label": [38, 59, 104, 116, 126, 760], "73227205": 38, "80078852": 38, "62750681": 38, "351": [38, 56, 81, 112, 169, 209, 227], "label_from_stc": [38, 56], "strategi": [39, 196, 199, 205, 207, 208, 245, 355, 367, 419, 431, 478, 672, 730, 792, 871], "simpl": [39, 46, 128, 144, 145, 151, 160, 161, 166, 181, 195, 196, 202, 206, 224, 227, 242, 245, 257, 326, 355, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 498, 565, 728, 738, 808, 851, 868, 874, 892], "patheffect": [39, 160], "path_effect": [39, 160], "label_fnam": 39, "stc_label": 39, "mean_flip": [39, 272, 273, 276, 279, 280, 281, 448, 892], "tc": 39, "pe": 39, "stroke": [39, 160], "foreground": [39, 142, 160, 272, 273, 276, 279, 280, 281, 760, 818, 823, 892], "possibl": [39, 43, 45, 114, 137, 140, 142, 143, 145, 149, 150, 151, 156, 160, 161, 168, 169, 170, 171, 172, 178, 180, 188, 190, 192, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 212, 216, 217, 218, 219, 222, 224, 227, 231, 232, 240, 242, 259, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 328, 356, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 431, 437, 455, 465, 473, 481, 482, 489, 506, 564, 565, 584, 606, 607, 625, 626, 656, 694, 699, 701, 712, 713, 716, 746, 776, 786, 794, 795, 798, 803, 806, 807, 814, 849, 856, 868, 869, 871, 873, 874, 877, 878, 892], "vectorsourceestim": [39, 61, 175, 272, 273, 276, 277, 280, 281, 293, 294, 476, 478, 479, 531, 532, 533, 534, 535, 540, 541, 639, 823, 824, 847, 882, 892], "stc_vec": [39, 41, 180], "stc_vec_label": 39, "ee6677": [39, 160, 728, 738], "228833": 39, "4477aa": [39, 728, 738], "xyz": [39, 156, 160, 178, 272, 273, 276, 279, 280, 281, 314, 332, 448, 476, 506, 830, 892], "zorder": [39, 160, 267, 268, 728, 738, 794, 797, 892], "052": [39, 56, 140, 142, 149, 162, 169, 185, 200, 224, 245, 741, 744], "label_source_activ": [39, 56], "ir": 40, "l0": [40, 478], "sparser": [40, 272, 276, 280, 818], "convex": [40, 46, 59, 245, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 892], "mixed_norm": [40, 175, 479, 882, 892], "sure": [40, 43, 45, 68, 71, 109, 113, 135, 140, 141, 144, 151, 156, 161, 162, 166, 170, 171, 172, 176, 189, 200, 203, 204, 205, 207, 210, 216, 231, 235, 236, 237, 257, 267, 268, 445, 446, 478, 493, 548, 563, 574, 707, 728, 738, 739, 740, 742, 797, 838, 849, 850, 851, 859, 892], "criterion": [40, 531, 892], "n_mxne_it": [40, 478], "use_cp": [40, 92, 158, 223, 273, 279, 281, 285, 286, 366, 531, 532, 533, 534, 535, 538, 542, 547, 548, 676, 677, 874, 892], "maxit": [40, 59, 476, 478, 479], "active_set_s": [40, 478], "debia": [40, 59, 478, 479], "slower": [40, 44, 46, 202, 260, 265, 365, 413, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 523, 534, 607, 851, 880], "sure_alpha_grid": [40, 478], "083": [40, 124], "tidx": [40, 181], "020866": [40, 58, 196], "58122e": [40, 58, 59, 94, 178, 196, 224], "element": [40, 58, 90, 168, 172, 178, 179, 182, 191, 196, 202, 206, 207, 216, 218, 227, 229, 245, 259, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 324, 325, 414, 421, 426, 435, 436, 448, 449, 469, 481, 482, 518, 519, 520, 563, 579, 585, 599, 661, 692, 700, 712, 714, 716, 765, 777, 779, 784, 792, 799, 812, 815, 818, 820, 822, 823, 824, 847, 851, 857, 872, 873, 877, 892], "21995": 40, "82623e": 40, "360": [40, 48, 49, 54, 55, 58, 59, 81, 82, 93, 94, 112, 121, 152, 162, 169, 172, 178, 191, 196, 209, 227, 232, 241], "warm": 40, "33333333333333": 40, "66666666666667": 40, "66666666666666": 40, "666666666666664": 40, "60279": 40, "6036917851": 40, "59855": 40, "33381591424": 40, "60434": 40, "8708663271": 40, "60386": 40, "806545232204": 40, "60336": 40, "58240550615": 40, "60303": 40, "83155507343": 40, "60157": 40, "01344242948": 40, "59974": 40, "67525570807": 40, "59597": 40, "86913656531": 40, "59084": 40, "52688073421": 40, "compute_source_morph": [40, 43, 44, 134, 158, 160, 180, 181, 235, 236, 237, 272, 276, 277, 280, 281, 636, 818, 824, 867, 882, 892], "subject_from": [40, 43, 44, 180, 271, 277, 362, 550, 551, 636, 648, 649, 650, 651, 867], "stc_fsaverag": [40, 43, 44, 867], "src_fsaverage_fnam": 40, "src_fsaverag": 40, "matthieu": [40, 59, 245, 478, 479], "kowalski": [40, 59, 245, 478, 479], "acceler": [40, 245, 478, 857, 871, 874, 892], "gradient": [40, 119, 212, 245, 260, 265, 266, 267, 268, 270, 478, 480, 481, 482, 526, 564, 578, 712, 714, 715, 716, 777, 892], "physic": [40, 156, 160, 170, 176, 178, 189, 210, 245, 267, 268, 270, 435, 447, 478, 481, 482, 531, 575, 588, 599, 794, 847, 874, 877, 892], "medicin": [40, 83, 176, 210, 245, 478, 564, 599, 874], "biologi": [40, 83, 176, 210, 245, 478, 564, 599, 874], "1937": [40, 245, 478], "1961": [40, 245, 478], "2012": [40, 59, 151, 169, 202, 227, 245, 271, 276, 283, 356, 478, 479, 705, 706, 880], "1088": [40, 176, 195, 196, 208, 210, 245, 265, 266, 267, 268, 420, 478, 481, 482, 599, 656, 874], "0031": [40, 176, 210, 245, 478, 599, 874], "9155": [40, 176, 210, 245, 478, 599, 874], "jen": [40, 46, 59, 245, 478, 479, 892], "haueisen": [40, 46, 59, 245, 478, 479], "improv": [40, 71, 144, 195, 196, 204, 207, 212, 245, 265, 266, 267, 268, 307, 343, 345, 349, 373, 374, 416, 425, 450, 452, 453, 454, 481, 482, 542, 565, 607, 610, 669, 674, 740, 743, 851, 867, 869, 870, 871, 892], "prni": [40, 46, 245, 479], "t\u00fcbingen": [40, 245], "6858545": [40, 245], "charl": [40, 44, 245, 277, 362, 478], "alban": [40, 245, 478], "deledal": [40, 245, 478], "samuel": [40, 94, 95, 245, 478, 892], "vaiter": [40, 245, 478], "jalal": [40, 245, 478], "fadili": [40, 245, 478], "peyr\u00e9": [40, 245, 478], "stein": [40, 245, 478], "unbias": [40, 245, 478], "risk": [40, 181, 202, 205, 231, 245, 265, 266, 267, 268, 478, 481, 482, 588, 760], "sugar": [40, 245, 478], "siam": [40, 245, 478], "journal": [40, 43, 71, 72, 75, 119, 157, 196, 202, 210, 232, 240, 245, 265, 266, 267, 268, 277, 356, 362, 435, 478, 481, 482, 564, 572, 573, 575, 599, 672, 699, 700, 702, 703, 714, 716, 724, 728, 730, 738, 739, 741, 742, 744, 777, 866], "2448": [40, 245, 478], "2487": [40, 245, 478], "1137": [40, 245, 478], "140968045": [40, 245, 478], "494": [40, 56, 227, 232], "mixed_norm_invers": [40, 56], "annalisa": [41, 892], "pascarella": [41, 892], "iac": 41, "cnr": 41, "dir": [41, 171, 257, 760, 874, 877], "data_dir": [41, 57, 134, 144], "bem_dir": [41, 45, 109, 159, 161, 182], "fname_mixed_src": 41, "fname_aseg": [41, 181], "fname_model": 41, "_audvi": 41, "_audvis_raw": [41, 157], "substructur": 41, "labels_vol": 41, "amygdala": 41, "thalamu": 41, "proper": [41, 71, 227, 242, 266, 267, 268, 271, 298, 299, 356, 360, 361, 367, 372, 373, 374, 376, 414, 421, 457, 458, 476, 478, 479, 482, 542, 771, 800, 851, 868, 880, 892], "stem": [41, 73, 276, 280, 488, 508], "oct6": [41, 109, 158, 257, 272, 276, 280, 651, 660, 818, 867], "oct5": [41, 109, 867], "1026": [41, 109, 196, 867], "bound": [41, 158, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 414, 421, 458, 481, 482, 563, 564, 661, 712, 713, 714, 716, 730, 748, 775, 777, 779, 784, 792, 799, 803, 812, 813, 814, 815, 818, 820, 822, 823, 824, 874, 877, 892], "10mm": 41, "someth": [41, 127, 149, 161, 171, 172, 191, 202, 207, 208, 216, 272, 273, 276, 279, 280, 281, 500, 760, 761, 818, 823, 847, 850, 851, 854, 855, 856, 858, 892], "vol_src": [41, 135, 158], "add_interpol": [41, 50, 158, 661], "usual": [41, 50, 71, 83, 112, 114, 140, 143, 145, 149, 150, 151, 155, 156, 160, 161, 166, 167, 168, 170, 172, 180, 183, 188, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 216, 217, 218, 219, 235, 237, 240, 241, 257, 263, 264, 265, 266, 267, 268, 269, 270, 278, 305, 327, 332, 337, 339, 341, 465, 481, 482, 506, 677, 699, 700, 702, 703, 847, 851, 852, 854, 857, 859, 871, 874, 877, 892], "nuse": [41, 270, 278, 877], "2562": [41, 109, 150, 158, 867], "node": [41, 47, 158, 686, 687, 688, 765, 877, 892], "4590": 41, "2961": [41, 195], "346": [41, 112, 144, 169, 195, 227, 232], "1275": 41, "2615": 41, "1340": 41, "1589": 41, "809": [41, 232], "1372": 41, "283": [41, 56, 72, 112, 169, 196, 229, 234, 245, 573], "1306": [41, 209], "010000": [41, 156], "2169": 41, "write_source_spac": [41, 641, 867, 882, 892], "again": [41, 141, 142, 144, 150, 151, 155, 156, 161, 172, 196, 199, 200, 202, 204, 205, 206, 207, 216, 227, 232, 242, 265, 266, 267, 268, 275, 481, 482, 564, 607, 811, 838, 850, 873, 874, 892], "plot_img": 41, "nipy_spectr": 41, "exist": [41, 44, 99, 101, 127, 140, 143, 149, 150, 156, 161, 170, 171, 172, 176, 180, 201, 202, 203, 206, 207, 208, 218, 222, 227, 229, 257, 259, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 289, 309, 310, 311, 314, 315, 375, 380, 381, 382, 383, 385, 386, 387, 389, 390, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 436, 440, 444, 445, 446, 447, 449, 466, 481, 482, 483, 496, 500, 515, 549, 551, 553, 563, 564, 567, 574, 600, 619, 629, 649, 650, 653, 656, 657, 658, 662, 664, 665, 682, 683, 686, 712, 713, 714, 715, 716, 745, 748, 760, 783, 799, 814, 834, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 851, 859, 867, 868, 871, 873, 878, 880, 892], "5mm": [41, 84, 135, 434, 760], "innerskul": 41, "815": [41, 209, 232], "807": [41, 99, 102, 196], "507": [41, 154, 162, 196, 232], "6003": 41, "inv_method": [41, 90], "a2009": [41, 94, 135, 155, 176, 272, 273, 276, 279, 280, 281, 448, 518, 634], "39266": 41, "01344e": 41, "coron": [41, 135, 158, 160, 180, 263, 760, 778, 788], "silhouett": [41, 180, 181, 272, 273, 276, 279, 280, 281, 760, 818, 823, 892], "43101017": 41, "98225664": 41, "7504814": 41, "45409596": 41, "02821047": 41, "97219252": 41, "vox": [41, 160, 180, 181, 182], "2045": 41, "21567156": 41, "47889133": 41, "39837939": 41, "labels_parc": 41, "label_t": 41, "allow_empti": [41, 272, 273, 276, 279, 280, 281, 448], "nam": [41, 93, 94, 95, 183, 184, 224, 678, 892], "mixed_source_space_invers": [41, 56], "computation": [42, 172, 202, 205, 206, 607, 874, 880], "sabbagh": [42, 245, 532, 892], "pierr": [42, 77, 205, 245, 532, 564, 892], "ablin": [42, 77, 205, 245, 532, 564, 892], "ga\u00ebl": [42, 245, 532], "varoquaux": [42, 245, 532], "state": [42, 90, 93, 109, 126, 140, 162, 166, 168, 175, 199, 200, 207, 208, 217, 222, 227, 242, 245, 258, 260, 265, 266, 351, 438, 478, 497, 516, 523, 532, 564, 597, 616, 617, 622, 623, 664, 665, 666, 675, 676, 678, 699, 700, 701, 702, 703, 712, 714, 715, 760, 803, 847, 849, 851, 859, 873, 874, 877, 880, 892], "2020": [42, 75, 144, 157, 245, 392, 532, 564, 868], "116893": [42, 245, 532], "alexand": [42, 212, 245, 578, 868, 892], "captur": [42, 46, 137, 144, 166, 172, 183, 184, 196, 204, 205, 206, 207, 208, 270, 275, 458, 563, 576, 577, 581, 613, 614, 847, 892], "environ": [42, 43, 44, 155, 172, 175, 263, 271, 272, 273, 275, 276, 278, 279, 280, 281, 305, 309, 310, 311, 314, 362, 367, 368, 369, 375, 380, 381, 382, 383, 385, 386, 387, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 433, 462, 464, 466, 470, 472, 473, 474, 475, 516, 520, 522, 550, 551, 595, 616, 634, 636, 643, 648, 649, 650, 651, 655, 658, 660, 661, 675, 678, 689, 707, 708, 752, 759, 760, 776, 778, 788, 818, 823, 824, 826, 842, 849, 850, 854, 855, 856, 857, 859, 867, 871, 874, 892], "raw_empty_room_fnam": [42, 162], "ernoise_raw": [42, 129, 162, 172, 207], "raw_empty_room": [42, 162], "compute_raw_covari": [42, 88, 109, 162, 184, 191, 201, 262, 356, 620, 758, 867, 882, 892], "19800": [42, 129, 162, 172, 207], "85867": [42, 129, 162, 172, 207], "142": [42, 83, 129, 162, 169, 172, 196, 207, 209, 227, 278, 892], "965": [42, 129, 162, 172, 196, 207, 232], "18000": 42, "249": [42, 46, 74, 151, 169, 196, 231, 232, 245], "658": [42, 196, 232], "319": [42, 49, 73, 74, 99, 141, 152, 166, 169, 177, 180, 196, 201, 209, 227, 232, 245, 564], "environment": [42, 166, 199, 203, 206, 208, 210, 216, 218, 219, 867], "rest": [42, 71, 74, 109, 126, 137, 140, 162, 166, 168, 169, 217, 245, 265, 266, 267, 268, 276, 376, 396, 481, 482, 656, 665, 847, 851, 873, 875, 880, 892], "base_cov": 42, "data_cov": [42, 180, 295, 299], "fig_noise_cov": 42, "plot_cov": [42, 177, 882, 892], "show_svd": [42, 65, 262, 785], "fig_base_cov": 42, "fig_data_cov": 42, "1680": 42, "_cov": 42, "_kw": 42, "7265": [42, 177, 179], "037795": [42, 177], "52065e": [42, 177, 179], "40105": 42, "62956e": 42, "stc_data": [42, 94, 679], "11859103": 42, "45698488": 42, "03713927": 42, "mne_cov_pow": [42, 56], "pre": [43, 49, 140, 141, 162, 166, 180, 201, 202, 205, 216, 222, 265, 266, 267, 268, 356, 481, 482, 564, 653, 656, 851, 852, 856, 863, 892], "spheric": [43, 72, 79, 151, 156, 170, 183, 184, 185, 200, 207, 210, 245, 262, 265, 266, 267, 268, 270, 271, 274, 276, 277, 314, 330, 332, 362, 414, 421, 435, 481, 482, 527, 563, 564, 573, 574, 575, 578, 579, 588, 599, 661, 675, 678, 689, 693, 712, 714, 716, 760, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 874, 892], "surfer": [43, 155, 272, 276, 280, 369, 760, 818, 874], "fswiki": [43, 155, 272, 276, 280, 369, 818, 874], "surfaceregandtempl": 43, "depict": [43, 267, 268, 273, 279, 281, 800, 823, 874], "success": [43, 144, 257, 265, 266, 272, 273, 276, 277, 279, 280, 281, 362, 479, 540, 541, 597, 662, 699, 700, 702, 703, 714, 715, 727, 735, 750, 781, 851], "inflat": [43, 48, 49, 54, 55, 59, 61, 126, 135, 151, 175, 191, 245, 272, 276, 280, 413, 760, 776, 818, 857, 874, 892], "overlaid": [43, 44, 136, 172, 257, 661, 874, 892], "tommi": [43, 44, 892], "clausner": [43, 44, 892], "sample_dir": [43, 44, 116, 158, 172, 175], "fname_src": [43, 135, 159, 182], "fname_fsaverage_src": 43, "fname_stc": [43, 127, 175, 181], "repres": [43, 71, 75, 81, 115, 119, 140, 141, 142, 143, 144, 149, 151, 156, 158, 161, 162, 166, 168, 169, 170, 171, 175, 189, 195, 202, 205, 219, 245, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 278, 279, 280, 281, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 448, 457, 458, 476, 478, 479, 481, 482, 497, 503, 506, 516, 530, 542, 564, 579, 623, 625, 700, 712, 715, 760, 777, 800, 803, 805, 807, 818, 819, 823, 847, 851, 867, 871, 874, 877, 892], "itself": [43, 71, 143, 151, 160, 172, 188, 202, 205, 206, 207, 218, 227, 259, 265, 266, 271, 276, 279, 309, 447, 481, 482, 551, 760, 849, 851, 871, 874, 877, 892], "proxim": [43, 135, 269, 707, 892], "src_orig": [43, 276, 279], "3732": [43, 175], "3766": 43, "src_to": [43, 44, 180, 362, 892], "argument": [43, 44, 120, 151, 155, 161, 162, 169, 170, 172, 180, 188, 189, 190, 191, 192, 201, 202, 203, 206, 210, 213, 216, 227, 231, 237, 241, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 321, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 420, 424, 425, 427, 430, 431, 433, 435, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 464, 465, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 559, 560, 564, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 660, 661, 663, 664, 665, 666, 676, 677, 680, 682, 683, 684, 685, 686, 687, 688, 694, 699, 700, 701, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 730, 731, 734, 735, 739, 740, 742, 743, 744, 745, 748, 749, 750, 755, 756, 757, 758, 759, 760, 761, 768, 775, 776, 780, 782, 785, 788, 791, 792, 793, 794, 795, 797, 800, 803, 804, 805, 810, 811, 812, 813, 814, 816, 817, 818, 819, 821, 823, 824, 825, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 867, 877, 880, 892], "special": [43, 160, 169, 206, 216, 242, 374, 489, 496, 855, 873, 874, 880, 892], "alwai": [43, 74, 143, 144, 149, 151, 160, 167, 168, 169, 175, 190, 199, 201, 202, 203, 204, 205, 206, 207, 208, 216, 222, 227, 242, 263, 265, 266, 270, 272, 273, 275, 276, 278, 279, 280, 281, 320, 438, 448, 514, 564, 588, 629, 631, 699, 713, 768, 778, 788, 789, 819, 821, 830, 839, 847, 851, 874, 877, 878, 892], "10239": 43, "10240": 43, "10241": 43, "give": [43, 44, 59, 71, 75, 95, 142, 152, 161, 168, 171, 180, 182, 196, 200, 202, 203, 206, 227, 257, 262, 265, 266, 267, 268, 270, 274, 278, 314, 414, 415, 416, 421, 425, 430, 431, 435, 450, 452, 453, 457, 478, 479, 481, 482, 497, 563, 564, 579, 588, 599, 617, 623, 698, 699, 700, 702, 703, 712, 714, 716, 724, 728, 738, 742, 760, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 847, 849, 851, 857, 867, 871, 873, 874, 877, 892], "surfer_kwarg": [43, 175, 177], "brain_inf": 43, "under": [43, 44, 61, 127, 143, 144, 162, 189, 196, 199, 202, 206, 223, 227, 229, 235, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 314, 326, 356, 357, 359, 361, 380, 381, 382, 383, 385, 386, 387, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 424, 427, 430, 431, 457, 470, 472, 481, 482, 493, 501, 522, 525, 526, 537, 538, 547, 548, 569, 576, 577, 579, 607, 624, 628, 660, 663, 664, 665, 673, 677, 697, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 792, 795, 814, 851, 867, 873, 874, 880, 892], "h5": [43, 44, 172, 180, 224, 272, 273, 275, 276, 277, 279, 280, 281, 289, 563, 609, 712, 713, 715, 732, 734, 745, 834, 835, 892], "respect": [43, 44, 47, 55, 69, 72, 90, 132, 140, 144, 151, 156, 159, 168, 169, 172, 175, 188, 196, 200, 202, 205, 206, 208, 209, 216, 217, 232, 260, 262, 265, 266, 267, 268, 270, 274, 275, 276, 280, 281, 298, 299, 300, 337, 356, 360, 361, 367, 372, 373, 374, 414, 416, 421, 425, 438, 450, 452, 457, 458, 476, 478, 479, 481, 482, 487, 506, 516, 519, 527, 542, 563, 564, 565, 566, 568, 579, 581, 617, 625, 661, 669, 672, 674, 680, 700, 712, 714, 716, 731, 739, 740, 742, 743, 760, 776, 777, 781, 784, 790, 792, 794, 799, 800, 803, 804, 807, 812, 813, 815, 820, 822, 824, 851, 854, 857, 867, 871, 874, 877, 892], "my": [43, 44, 172, 182, 222], "read_source_morph": [43, 44, 277, 882], "further": [43, 141, 151, 157, 166, 168, 178, 188, 196, 201, 205, 207, 210, 216, 227, 232, 237, 242, 265, 266, 290, 292, 322, 367, 564, 568, 699, 700, 702, 703, 715, 775, 791, 863, 869, 873, 874, 892], "assign": [43, 45, 101, 103, 120, 136, 140, 143, 144, 151, 161, 168, 170, 175, 178, 188, 189, 192, 207, 210, 217, 222, 259, 265, 270, 275, 278, 472, 489, 493, 496, 498, 504, 506, 516, 525, 564, 581, 582, 589, 590, 592, 593, 621, 655, 760, 782, 842, 867, 874, 877, 892], "chain": [43, 167, 196, 200, 216, 420, 869, 874], "handi": [43, 190, 205], "liner": 43, "shortest": [43, 156, 202, 265, 266, 267, 268, 416, 425, 450, 452, 453, 481, 482, 569], "dougla": [43, 245, 277, 362], "greve": [43, 245, 277, 362], "lise": [43, 245, 277, 362], "der": [43, 245, 277, 362, 874, 892], "haegen": [43, 245, 277, 362], "qing": [43, 245, 277, 362], "cai": [43, 245, 277, 362], "steven": [43, 58, 126, 144, 151, 202, 245, 276, 277, 362, 414, 542, 669, 674, 868, 892], "stufflebeam": [43, 58, 126, 245, 276, 277, 362, 542, 546, 669, 672, 674], "mert": [43, 245, 277, 362], "sabuncu": [43, 245, 277, 362], "bruce": [43, 94, 155, 245, 277, 362, 531, 874], "fischl": [43, 94, 155, 245, 277, 362, 531, 874], "marc": [43, 245, 277, 362], "brysbaert": [43, 245, 277, 362], "languag": [43, 151, 172, 202, 231, 237, 245, 262, 265, 266, 267, 268, 274, 275, 277, 362, 414, 421, 481, 482, 563, 564, 712, 714, 716, 792, 799, 803, 812, 815, 820, 855, 876, 892], "asymmetri": [43, 245, 277, 362], "1477": [43, 209, 245, 277, 362], "1492": [43, 245, 277, 362, 867], "1162": [43, 209, 245, 277, 362, 564], "jocn_a_00405": [43, 245, 277, 362], "413": [43, 56, 114, 178, 196, 232, 245], "morph_surface_stc": [43, 56], "affin": [44, 156, 180, 182, 277, 362, 369, 596, 635, 643, 748, 749, 750, 847, 874, 892], "nonlinear": [44, 245, 698], "symmetr": [44, 202, 245, 265, 266, 267, 268, 272, 273, 276, 277, 279, 280, 281, 362, 449, 450, 452, 453, 481, 482, 596, 699, 700, 702, 703, 713, 724, 748, 749, 750, 760, 779, 818, 823, 824, 892], "diffeomorph": [44, 245, 277, 362, 596, 748, 749, 750, 892], "sdr": [44, 180, 277, 362, 596, 748, 749, 750, 892], "afterward": [44, 149, 265, 266, 267, 268, 481, 482, 656, 676, 892], "nibabel": [44, 156, 160, 171, 182, 278, 474, 475, 594, 760, 850, 874, 892], "fetch_fsaverag": [44, 125, 135, 159, 180, 190, 868, 882, 892], "plot_glass_brain": [44, 182], "sample_dir_raw": [44, 175], "fname_t1_fsaverag": 44, "ensur": [44, 45, 83, 112, 144, 149, 159, 161, 162, 180, 202, 203, 206, 208, 210, 211, 224, 262, 265, 266, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 322, 343, 356, 448, 449, 481, 482, 483, 500, 528, 555, 556, 557, 567, 599, 600, 631, 712, 713, 714, 715, 716, 728, 729, 738, 742, 755, 849, 851, 859, 873, 874, 892], "fname_src_fsaverag": 44, "root": [44, 82, 135, 136, 149, 150, 151, 159, 172, 180, 190, 224, 262, 267, 268, 272, 273, 276, 279, 280, 281, 298, 299, 383, 389, 406, 785, 794, 851, 874, 892], "txt": [44, 135, 159, 180, 183, 217, 218, 259, 332, 341, 389, 484, 488, 506, 617, 625, 626, 837, 849, 851, 871, 892], "zoom": [44, 71, 151, 160, 180, 205, 207, 277, 362, 750, 892], "reslic": [44, 180, 362, 750], "isotrop": [44, 874], "niter_affin": [44, 180, 277, 362, 892], "niter_sdr": [44, 180, 277, 362, 892], "999999888241291": 44, "translat": [44, 135, 156, 160, 180, 189, 210, 235, 257, 265, 266, 267, 268, 352, 367, 414, 421, 435, 492, 564, 568, 599, 712, 750, 760, 776, 791, 796, 799, 804, 807, 877, 892], "optim": [44, 59, 82, 142, 157, 160, 162, 179, 180, 201, 202, 205, 210, 227, 235, 236, 237, 245, 267, 268, 271, 356, 414, 457, 478, 481, 482, 564, 574, 599, 689, 741, 744, 750, 847, 871, 892], "r\u00b2": [44, 180], "rigid": [44, 180, 212, 750], "compute_vol_morph_mat": [44, 277, 362, 892], "equival": [44, 135, 141, 150, 156, 158, 160, 162, 165, 171, 186, 187, 189, 202, 205, 208, 223, 227, 240, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 279, 280, 281, 298, 299, 314, 355, 414, 420, 421, 454, 457, 458, 476, 478, 479, 481, 482, 525, 531, 542, 563, 564, 567, 569, 579, 588, 629, 658, 676, 699, 712, 714, 716, 728, 738, 742, 743, 750, 760, 776, 777, 784, 790, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 818, 820, 822, 823, 847, 851, 867, 871, 874, 877, 878, 892], "reus": [44, 75, 137, 267, 268, 712, 796, 874], "exce": [44, 227, 260, 265, 266, 267, 268, 343, 345, 414, 421, 481, 482, 566, 569, 581, 699, 799, 813, 892], "thousand": [44, 101, 206, 228, 245, 362, 397, 868, 892], "nifti1": [44, 277, 280, 281], "img_fsaverag": 44, "t1_fsaverag": 44, "plot_anat": [44, 176], "draw_cross": 44, "overlai": [44, 155, 160, 172, 180, 205, 272, 273, 276, 279, 280, 281, 564, 760, 804, 818, 823, 892], "add_overlai": [44, 760], "brian": [44, 195, 245, 277, 362, 420, 874], "avant": [44, 245, 277, 362], "epstein": [44, 245, 277, 362], "murrai": [44, 151, 245, 277, 362], "grossman": [44, 245, 277, 362], "jame": [44, 202, 245, 277, 362], "gee": [44, 245, 277, 362], "autom": [44, 83, 113, 121, 144, 156, 162, 163, 164, 165, 166, 171, 199, 200, 201, 204, 205, 210, 245, 257, 267, 268, 270, 277, 356, 362, 367, 392, 486, 650, 659, 776, 800, 828, 859, 871, 874, 880, 892], "elderli": [44, 245, 277, 362], "neurodegen": [44, 245, 277, 362], "medic": [44, 59, 206, 207, 245, 256, 277, 362, 478, 479, 531, 874, 879], "media": [44, 245, 277, 362], "2007": [44, 180, 232, 245, 277, 362, 476, 564, 699, 700, 702, 703, 741, 744], "835": [44, 56, 103, 106, 232], "morph_volume_stc": [44, 56], "megin": [45, 156, 599, 892], "program": [45, 151, 161, 172, 257, 263, 265, 266, 267, 268, 270, 275, 309, 473, 481, 482, 564, 714, 716, 788, 790, 807, 813, 816, 851, 855, 856, 857, 858, 874, 876, 877], "offer": [45, 181, 196, 202, 208, 224, 227, 228, 258, 259, 760, 849, 851, 878, 880, 892], "guid": [45, 155, 270, 849, 855, 870, 873, 875, 892], "ecd": [45, 165, 186, 187, 263, 264, 267, 268, 269, 270, 280, 355, 457, 525, 629, 676, 847, 892], "manual": [45, 83, 120, 127, 137, 142, 149, 151, 156, 157, 160, 161, 162, 172, 182, 188, 190, 192, 199, 200, 201, 203, 206, 210, 245, 258, 261, 270, 271, 320, 330, 356, 378, 435, 449, 564, 574, 575, 588, 599, 600, 652, 783, 857, 868, 871, 874, 877, 892], "advantag": [45, 113, 137, 150, 151, 167, 168, 202, 204, 205, 208, 212, 227, 242, 849, 859], "graphic": [45, 155, 189, 265, 266, 275, 481, 482, 564, 790, 807, 813, 851, 855, 857, 858, 868, 892], "read_dipol": [45, 116, 263, 264, 457, 882, 892], "everyth": [45, 104, 112, 127, 135, 159, 160, 169, 178, 182, 191, 202, 216, 267, 268, 798, 849, 851, 853, 868, 869, 871], "read_vectorview_select": [45, 224, 229, 882, 892], "audvi": [45, 868], "evoked_left": [45, 211], "evoked_right": [45, 211], "09989760657919393": [45, 62], "80m": 45, "picks_left": 45, "evoked_fit_left": 45, "cov_fit_left": 45, "picks_right": 45, "evoked_fit_right": 45, "cov_fit_right": 45, "sss": [45, 162, 165, 199, 209, 214, 215, 265, 266, 267, 268, 270, 343, 345, 349, 350, 353, 374, 435, 481, 482, 502, 564, 575, 588, 599, 629, 790, 794, 802, 813, 871, 874, 892], "normalize_proj": [45, 270, 892], "dip_left": 45, "dip_right": 45, "153": [45, 73, 85, 130, 133, 164, 169, 227, 231, 232, 406], "38720": [45, 182], "58607874e": 45, "29495097e": 45, "04486582e": 45, "78988420e": 45, "81501987e": 45, "79536167e": 45, "22800262e": 45, "50545865e": 45, "24472969e": 45, "41763741e": 45, "51116585e": 45, "49899073e": 45, "11191910e": 45, "30776654e": 45, "58725785e": 45, "82015291e": 45, "83338121e": 45, "85132759e": 45, "76790821e": 45, "26581206e": 45, "61643686e": 45, "396": [45, 81, 176, 177, 181, 187, 196, 232, 245, 298], "195": [45, 166, 169, 176, 181, 231, 232, 245], "9828": [45, 892], "152": [45, 169, 190, 209, 227, 231, 232, 241, 278], "69262885e": 45, "19272571e": 45, "91546253e": 45, "01298483e": 45, "64516797e": 45, "19806525e": 45, "33734643e": 45, "87121666e": 45, "27849772e": 45, "17670368e": 45, "61094719e": 45, "47048282e": 45, "57358697e": 45, "03235995e": 45, "14274862e": 45, "19294391e": 45, "09342253e": 45, "00283865e": 45, "12915739e": 45, "54166863e": 45, "75855684e": 45, "109": [45, 129, 137, 169, 196, 205, 209, 227, 231, 232, 383, 868], "9340": [45, 892], "prevent": [45, 71, 120, 200, 210, 257, 516, 569, 594, 599, 677, 892], "lambda": [45, 68, 100, 112, 145, 196, 211, 223, 242, 262, 265, 266, 267, 268, 274, 316, 414, 421, 481, 482, 539, 563, 564, 579, 678, 712, 714, 716, 777, 784, 791, 799, 803, 812, 815, 820, 874, 877], "fulli": [45, 75, 172, 201, 203, 227, 231, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 322, 481, 482, 483, 693, 760, 779, 818, 823, 824, 849, 892], "make_forward_dipol": [45, 176, 882, 892], "stc_left": 45, "stc_right": 45, "sharei": [45, 74, 113, 114, 195, 207, 242], "supylabel": 45, "meter": [45, 81, 93, 94, 151, 156, 157, 160, 170, 176, 182, 192, 207, 213, 222, 257, 262, 263, 265, 266, 267, 268, 270, 271, 274, 283, 314, 330, 339, 367, 414, 421, 435, 481, 482, 497, 506, 522, 563, 564, 568, 573, 574, 575, 579, 584, 586, 588, 599, 604, 605, 623, 633, 661, 707, 712, 714, 716, 760, 777, 784, 788, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 874, 892], "kb": [45, 50, 137, 143, 176, 181, 208, 222], "7006": 45, "97034e": 45, "stcs_left": 45, "stcs_right": 45, "90m": 45, "amplitudes_left": 45, "amplitudes_right": 45, "vstack": [45, 115, 136, 141, 184, 224], "ampltud": 45, "n_left": 45, "mean_left": 45, "mean_right": 45, "transition_point": 45, "c0": [45, 151, 206], "c1": [45, 71, 112, 151, 206], "text": [45, 69, 127, 135, 142, 151, 160, 177, 183, 188, 189, 191, 192, 202, 203, 206, 207, 217, 218, 227, 242, 257, 265, 266, 278, 334, 481, 482, 506, 626, 677, 760, 837, 851, 855, 867, 874, 892], "610": [45, 56, 81, 137, 139, 196, 209], "multi_dipole_model": [45, 56], "promot": [46, 59], "focal": [46, 59, 83, 180, 564, 760, 828, 892], "assum": [46, 59, 64, 93, 94, 115, 123, 135, 141, 144, 151, 158, 160, 165, 172, 182, 188, 189, 192, 201, 202, 205, 212, 218, 227, 229, 231, 242, 257, 259, 262, 263, 265, 266, 267, 268, 270, 271, 274, 278, 298, 299, 305, 306, 309, 314, 327, 339, 356, 360, 361, 367, 372, 373, 374, 376, 414, 421, 433, 441, 449, 455, 456, 457, 458, 464, 476, 478, 479, 481, 482, 488, 489, 496, 512, 522, 526, 534, 542, 563, 564, 578, 579, 619, 626, 645, 648, 650, 661, 677, 699, 700, 702, 703, 706, 707, 712, 714, 715, 716, 748, 760, 776, 777, 784, 792, 794, 796, 799, 800, 801, 802, 803, 810, 812, 814, 815, 816, 820, 822, 840, 847, 851, 856, 859, 874, 877, 878, 892], "stationar": [46, 59, 453, 481, 482], "properti": [46, 59, 75, 101, 114, 127, 143, 161, 172, 189, 195, 200, 205, 206, 216, 219, 258, 259, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 304, 367, 413, 481, 482, 550, 564, 581, 582, 600, 662, 677, 694, 712, 713, 714, 715, 716, 747, 760, 762, 779, 788, 790, 794, 800, 801, 803, 805, 813, 818, 823, 824, 828, 878, 892], "bias": [46, 71, 151, 166, 180, 200, 202, 207, 213, 231, 245, 458, 892], "short": [46, 59, 66, 82, 103, 112, 114, 127, 136, 137, 140, 160, 168, 172, 199, 202, 206, 207, 209, 211, 218, 228, 240, 242, 245, 265, 266, 267, 268, 481, 482, 498, 604, 607, 714, 716, 717, 720, 727, 728, 731, 735, 738, 847, 851, 868, 874, 875, 892], "transient": [46, 82, 199, 210, 242, 569], "mathurin": [46, 245, 892], "massia": [46, 245, 892], "yousra": [46, 51, 93, 126, 245, 478, 479, 892], "bekhti": [46, 51, 93, 126, 245, 478, 479, 892], "tf_mixed_norm": [46, 59, 478, 882, 892], "350e": [46, 113, 241], "49948803289596966": 46, "301": [46, 114, 169, 191, 209, 213, 227, 232, 240, 877], "16610": 46, "multidict": 46, "l1_ratio": [46, 59, 479, 892], "wsize": [46, 59, 479, 727, 735, 736], "n_tfmxne_it": [46, 479], "dgap": [46, 59], "89e": 46, "p_obj": [46, 59], "289": [46, 149, 169, 195, 209, 231, 232, 245, 420, 564], "000835": 46, "d_obj": [46, 59], "083203": 46, "n_activ": [46, 59, 210, 350], "247": [46, 169, 209, 212, 232, 245, 868], "27e": 46, "327890": 46, "582652": 46, "53e": 46, "707285": 46, "246": [46, 169, 180, 227, 231, 245], "182101": 46, "18e": 46, "589468": 46, "408712": 46, "82e": 46, "243688": 46, "248": [46, 85, 123, 169, 209, 211, 227, 231], "420556": 46, "67e": [46, 59], "094971": 46, "57e": 46, "991067": 46, "49e": [46, 59], "936498": 46, "442467": 46, "08e": 46, "906871": 46, "829870": 46, "70e": 46, "887205": 46, "017223": 46, "24e": 46, "872107": 46, "148583": 46, "11e": 46, "762424": 46, "94e": 46, "854012": 46, "259629": 46, "659": [46, 168, 195, 232], "867870": 46, "46e": 46, "043596": 46, "270": [46, 81, 169, 191, 196, 232, 892], "587841": 46, "87e": 46, "274": [46, 72, 81, 82, 85, 123, 166, 169, 191, 206, 209, 215, 227, 232], "722230": 46, "272": [46, 119, 169, 171, 245, 669, 674], "856399": 46, "29e": 46, "678013": 46, "849283": 46, "335": [46, 109, 112, 169, 196, 209, 232, 245, 874], "966495": 46, "73e": 46, "215341": 46, "236": [46, 169, 196, 209, 227, 231, 232], "481796": 46, "17e": 46, "095509": 46, "238": [46, 169, 209, 227, 228, 232], "178504": 46, "77e": 46, "068507": 46, "591286": 46, "298": [46, 76, 169, 232, 584, 586], "546285": 46, "06e": 46, "223": [46, 169, 209, 232], "133013": 46, "826666": 46, "295": [46, 112, 169, 196, 227, 232], "194637": 46, "debias": [46, 59], "551": [46, 114, 232], "d0": [46, 59], "235927e": 46, "000000e": [46, 59], "irtf": 46, "2015": [46, 72, 99, 101, 113, 121, 162, 202, 205, 228, 242, 245, 267, 268, 356, 392, 397, 573, 698, 741, 744, 800, 868, 871, 880], "intern": [46, 71, 72, 83, 127, 133, 136, 160, 168, 170, 183, 190, 192, 200, 207, 210, 229, 245, 265, 266, 267, 268, 314, 356, 361, 367, 393, 414, 435, 481, 482, 496, 502, 561, 564, 572, 573, 574, 575, 588, 599, 629, 698, 699, 712, 713, 714, 715, 716, 760, 806, 851, 892], "workshop": [46, 245, 414], "roland": [46, 245, 479], "badeau": [46, 245, 479], "trento": [46, 245, 479], "7552337": [46, 245, 479], "multidict_reweighted_tfmxn": [46, 56], "plane": [47, 156, 170, 206, 229, 232, 241, 434, 665, 740, 743, 778, 847, 874], "olaf": [47, 48, 49, 50, 54, 55, 101, 245, 546, 669, 674, 892], "hauk": [47, 48, 49, 50, 54, 55, 101, 245, 546, 669, 674, 892], "mrc": [47, 48, 49, 50, 54, 55, 874], "cbu": [47, 48, 49, 50, 54, 55, 874], "cam": [47, 48, 49, 50, 54, 55, 874], "ac": [47, 48, 49, 50, 54, 55, 190, 199, 203, 245, 356, 374, 847, 874], "uk": [47, 48, 49, 50, 54, 55, 245, 356, 874], "rougier": 47, "borrow": [47, 231, 237], "hi": [47, 257], "make_inverse_resolution_matrix": [47, 48, 50, 54, 55, 882, 892], "get_point_spread": [47, 48, 50, 882, 892], "circular_layout": [47, 882], "plot_connectivity_circl": [47, 782], "rm_mne": [47, 54], "n_label": [47, 223, 272, 273, 276, 279, 280, 281, 448, 518, 679], "label_color": [47, 467], "lh_label": [47, 760], "endswith": [47, 170], "label_ypo": 47, "ypo": 47, "yp": 47, "rh_label": [47, 760], "summaris": [47, 212], "five": [47, 142, 150, 171, 183, 209, 219, 245, 343, 481, 482, 564, 760, 805, 874], "princip": [47, 205, 206, 245, 271, 356, 564, 689, 874, 892], "probabl": [47, 71, 165, 188, 199, 200, 201, 202, 205, 206, 227, 229, 232, 242, 424, 443, 481, 482, 493, 760, 817, 849, 851, 856, 857, 858, 874], "n_comp": [47, 540, 541], "stcs_psf_mne": 47, "pca_vars_mn": 47, "return_pca_var": [47, 540, 541], "n_vert": 47, "printopt": 47, "caudalanteriorcingul": 47, "caudalmiddlefront": [47, 90, 95, 135], "cuneu": [47, 760], "entorhin": 47, "frontalpol": 47, "fusiform": 47, "inferiorpariet": [47, 223], "inferiortempor": 47, "insula": 47, "isthmuscingul": 47, "lateraloccipit": 47, "lateralorbitofront": 47, "lingual": 47, "medialorbitofront": 47, "middletempor": 47, "paracentr": 47, "parahippocamp": [47, 69], "parsoperculari": 47, "parsorbitali": 47, "parstriangulari": 47, "pericalcarin": 47, "postcentr": [47, 69], "posteriorcingul": 47, "precentr": [47, 135], "precuneu": 47, "rostralanteriorcingul": 47, "rostralmiddlefront": [47, 223], "superiorfront": [47, 135], "superiorpariet": 47, "superiortempor": 47, "supramargin": 47, "temporalpol": 47, "transversetempor": [47, 223], "overal": [47, 127, 207, 229, 235, 236, 479, 873, 892], "bigger": [47, 81, 127, 236, 481, 482], "leaker": 47, "psfs_mat": 47, "pearson": [47, 202, 205, 245, 264, 265, 266, 267, 268, 564, 712, 715], "arbitrari": [47, 115, 160, 165, 166, 167, 171, 192, 202, 222, 225, 229, 232, 262, 264, 265, 266, 267, 268, 274, 414, 421, 481, 482, 498, 564, 582, 590, 699, 700, 702, 703, 712, 714, 715, 716, 792, 799, 806, 812, 820, 873, 874, 892], "absolut": [47, 61, 82, 86, 123, 129, 135, 151, 179, 189, 227, 260, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 360, 414, 481, 482, 484, 540, 541, 546, 564, 581, 611, 661, 673, 705, 712, 715, 778, 784, 804, 824, 847, 851, 857, 892], "leakage_mn": 47, "node_ord": [47, 765], "mirror": [47, 68, 71, 170, 265, 266, 267, 268, 272, 276, 280, 281, 452, 453, 454, 481, 482, 775, 779, 818, 824, 880, 892], "node_angl": [47, 765], "start_po": [47, 765], "group_boundari": [47, 765], "subplot_kw": 47, "n_line": 47, "node_color": 47, "neighbour": [47, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 792, 799, 803, 812, 815, 820, 822, 892], "deeper": [47, 54, 55, 180, 874], "versu": [47, 141, 151, 166, 217, 224, 300, 859], "fname_fig": 47, "plot_label_leakag": 47, "savefig": [47, 115], "inde": [47, 71, 141, 168, 175, 206, 207, 242, 849], "max_val": 47, "brain_lh": 47, "caudal": [47, 90, 95, 760], "pos_lim": [47, 54, 55, 180, 223, 235, 272, 273, 276, 279, 280, 281, 779, 818, 823, 824], "brain_rh": 47, "575": [47, 50, 56, 232], "psf_ctf_label_leakag": [47, 56], "get_cross_talk": [48, 49, 882, 892], "fname_evo": [48, 49, 50, 54, 55, 65], "regularis": [48, 54, 55, 543], "rm_lor": 48, "stc_psf": 48, "stc_ctf": 48, "31738": [48, 54, 55], "68644e": [48, 54, 55], "vertno_lh": 48, "verttru": [48, 49], "maxima": [48, 145, 267, 268, 608, 797, 799, 892], "vert_max_psf": 48, "vert_max_ctf": 48, "brain_psf": 48, "ventral": [48, 760], "add_foci": [48, 49, 50, 160, 175, 177, 224, 760, 892], "coords_as_vert": [48, 49, 50, 175, 177, 224, 760], "22842778": 48, "2956258": 48, "85246681": 48, "brain_ctf": 48, "10932369": 48, "16149934": 48, "93351158": 48, "091": [48, 56], "438": [48, 56, 196, 227, 232], "psf_ctf_vertic": [48, 56], "make_lcmv_resolution_matrix": [49, 882, 892], "vi": [49, 150, 232, 265, 784], "cov_pr": 49, "post": [49, 120, 180, 202, 207, 210, 847, 851, 857, 858, 870, 871, 873], "cov_post": 49, "4433": 49, "filters_pr": 49, "weight_norm": [49, 180, 224, 298, 299, 892], "filters_post": 49, "rm_pre": 49, "stc_pre": 49, "rm_post": 49, "stc_post": 49, "brain_pr": 49, "ndata": 49, "brain_post": 49, "439": [49, 54, 209, 232, 449], "psf_ctf_vertices_lcmv": [49, 56], "coars": 50, "don": [50, 95, 115, 117, 120, 141, 144, 145, 146, 157, 158, 159, 162, 168, 171, 200, 203, 205, 206, 207, 213, 216, 229, 230, 231, 232, 237, 242, 257, 260, 265, 266, 375, 492, 493, 553, 600, 616, 623, 625, 661, 699, 702, 851, 852, 857, 859, 871, 873, 875, 892], "src_vol": 50, "forward_vol": 50, "3375": 50, "1045": 50, "895": [50, 196, 232], "015000": [50, 208], "304": [50, 109, 124, 150, 169, 171, 184, 209, 228, 892], "158": [50, 169, 227], "488": [50, 167, 174, 196, 227, 232], "403": [50, 81, 178, 187, 196, 232], "492": [50, 130, 134, 196, 227, 232], "inverse_operator_vol": 50, "rm_lor_vol": 50, "sources_vol": 50, "stc_psf_vol": 50, "383": [50, 81, 92, 232], "140193": 50, "7904e": 50, "66519": 50, "31885e": 50, "1209": 50, "verttrue_vol": 50, "max_vert_idx": 50, "unravel_index": [50, 181, 229], "vert_max_ctf_vol": 50, "brain_psf_vol": 50, "plot_3d": [50, 135, 180, 280, 281, 892], "volume_opt": [50, 272, 273, 276, 279, 280, 281, 760, 818, 823], "32501697": 50, "38884743": 50, "87974682": 50, "psf_volum": [50, 56], "recurs": [51, 60, 160, 202, 245, 257, 272, 276, 280, 301, 303, 660, 818], "rap_mus": [51, 56, 303, 457, 882, 892], "n100": [51, 60, 166, 191, 202, 207], "1834": [51, 60], "ori": [51, 60, 176, 180, 183, 185, 224, 263, 298, 299, 434, 457], "24703241413887647": [51, 60], "776432601481173": [51, 60], "5797649538579378": [51, 60], "5154591819142723": [51, 60], "5345116894131523": [51, 60], "6697753994145853": [51, 60], "332": [51, 112, 169, 191, 209, 227, 245, 301], "1999": [51, 112, 242, 245, 264, 265, 266, 267, 268, 301, 356, 564, 597, 712, 715, 874], "740118": [51, 245, 301], "inv_fnam": 52, "fmri": [52, 196, 245, 478, 479, 531, 847, 868, 874, 877], "fmri_prior": 52, "rr": [52, 160, 161, 175, 178, 278, 344, 346, 347, 348, 642, 645, 661, 681, 840, 877], "use_tri": [52, 160, 278, 877], "8192": [52, 182, 185, 413], "read_invers": [52, 56], "nb": [53, 481, 482], "read_stc": [53, 56], "localis": [54, 55, 185, 227, 228, 245, 546, 699, 700, 702, 703, 892], "mimic": [54, 55, 415, 438, 531], "resolution_metr": [54, 55, 56, 882, 892], "ple": [54, 55, 546], "sd": [54, 55, 242, 674, 714, 716], "ple_mne_psf": 54, "peak_err": [54, 55, 546], "sd_mne_psf": 54, "sd_ext": [54, 55, 546], "rm_dspm": 54, "ple_dspm_psf": 54, "sd_dspm_psf": 54, "brain_ple_mn": 54, "brain_ple_dspm": 54, "subtract": [54, 55, 66, 71, 74, 107, 113, 120, 134, 141, 151, 176, 202, 208, 210, 227, 229, 257, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 279, 280, 281, 288, 298, 299, 355, 356, 360, 361, 372, 373, 374, 414, 421, 422, 457, 458, 476, 478, 479, 481, 482, 483, 542, 547, 548, 564, 565, 581, 599, 629, 630, 653, 656, 699, 702, 712, 715, 800, 820, 847, 874, 877, 892], "diff_pl": [54, 55], "brain_ple_diff": [54, 55], "superfici": [54, 180, 874], "brain_sd_mn": 54, "brain_sd_dspm": 54, "diff_sd": [54, 55], "brain_sd_diff": [54, 55], "wors": [54, 171, 599, 867], "distinguish": [54, 73, 151, 172, 196, 199, 200, 201, 204, 205, 207, 216, 363, 847, 892], "stenroo": [54, 55, 60, 245, 303, 546, 669, 674], "matthia": [54, 55, 245, 546, 892], "treder": [54, 55, 245, 546], "kit": [54, 55, 170, 171, 184, 227, 245, 270, 340, 348, 435, 506, 526, 546, 575, 588, 599, 625, 874, 882, 883, 892], "biorxiv": [54, 55, 224, 245, 298, 299, 546], "2019": [54, 55, 66, 76, 141, 208, 211, 227, 232, 245, 546, 580, 606, 699, 700, 702, 703, 726, 728, 738, 741, 742, 744, 850, 857], "1101": [54, 55, 114, 224, 245, 298, 299, 546], "672956": [54, 55, 245, 546], "706": [54, 56, 144, 232], "resolution_matrix": 55, "spatial_resolut": 55, "fname_fwd_emeg": 55, "forward_emeg": 55, "forward_meg": 55, "pick_types_forward": [55, 69, 92, 285, 286, 882], "inv_emeg": 55, "inv_meg": 55, "63485": 55, "05542e": 55, "rm_emeg": 55, "ple_psf_emeg": 55, "sd_psf_emeg": 55, "rm_meg": 55, "ple_psf_meg": 55, "sd_psf_meg": 55, "brain_ple_emeg": 55, "emeg": [55, 880], "brain_ple_meg": 55, "bring": [55, 71, 156, 181, 205, 218, 270, 280, 281, 435, 575, 588, 599, 824, 874, 877], "brain_sd_emeg": 55, "brain_sd_meg": 55, "553": [55, 56, 195, 232, 245, 420], "resolution_metrics_eegmeg": [55, 56], "822": [56, 196, 209, 232], "auto_examples_invers": 56, "vector_mne_solut": [56, 61], "939": [56, 61, 232], "399": [56, 81, 209, 227, 232], "time_frequency_mixed_norm_invers": [56, 59], "source_space_snr": [56, 58], "206": [56, 58, 169, 196, 209, 227, 231, 232], "trap_mus": [56, 60, 301, 882, 892], "197": [56, 145, 148, 169, 231, 232, 868], "421": [56, 72, 107, 110, 142, 162, 176, 182, 196, 204, 223, 227, 230, 231, 232], "snr_estim": [56, 57], "plot_snr_estim": [57, 882, 892], "padma": [58, 245, 580, 892], "sundaram": [58, 245, 580, 892], "tottochan": 58, "kaisu": [58, 892], "lankinen": [58, 892], "klankinen": 58, "inv_op": [58, 223], "snr_stc": [58, 276], "estimate_snr": [58, 276, 882, 892], "maxidx": 58, "med": [58, 94, 136, 166, 196, 223], "viridi": [58, 101, 127, 136, 143, 227, 713, 802], "70263": [58, 178], "18949e": [58, 178], "evoked_eeg": [58, 149, 207], "inv_op_eeg": 58, "stc_eeg": 58, "snr_stc_eeg": 58, "7499": [58, 90], "118742": [58, 90], "155292": [58, 90], "81981": 58, "0644e": 58, "goldenholz": [58, 245, 276], "seppo": [58, 245, 276, 542, 669, 674], "ahlfor": [58, 245, 276, 435, 542, 669, 674], "dahlia": [58, 245, 276], "sharon": [58, 245, 276], "mamiko": [58, 245, 276], "ishitobi": [58, 245, 276], "lucia": [58, 126, 245, 276], "vaina": [58, 126, 245, 276], "magnetoencephalographi": [58, 157, 178, 245, 276, 672, 741, 744, 874], "1086": [58, 209, 245, 276], "1002": [58, 84, 178, 209, 240, 245, 265, 266, 267, 268, 276, 481, 482, 607, 665, 701, 714, 716, 724, 730, 867], "hbm": [58, 178, 245, 276, 701, 867], "20571": [58, 245, 276], "built": [59, 140, 150, 151, 157, 159, 165, 166, 167, 175, 181, 203, 205, 211, 216, 220, 221, 227, 263, 265, 266, 267, 268, 270, 306, 330, 331, 340, 368, 443, 465, 466, 481, 482, 502, 522, 526, 595, 646, 680, 707, 716, 749, 760, 776, 851, 857, 863, 871, 872, 892], "fourier": [59, 103, 202, 240, 242, 245, 265, 266, 267, 268, 481, 482, 714, 716, 717, 720, 724, 727, 728, 730, 731, 735, 738, 739, 740, 742, 743], "stft": [59, 479, 727, 736, 847, 882, 892], "henc": [59, 114, 142, 150, 156, 162, 175, 190, 204, 207, 216, 227, 240, 242, 264, 265, 266, 267, 268, 275, 712, 715, 773, 847, 858, 871], "minima": [59, 608], "slightli": [59, 71, 127, 160, 180, 184, 202, 207, 210, 211, 222, 231, 265, 266, 267, 268, 271, 361, 481, 482, 534, 542, 689, 760, 797, 867, 868, 874, 892], "eventu": [59, 136, 320, 331, 583, 851, 867], "020865": [59, 94, 178, 224], "96729": 59, "38524e": 59, "985": [59, 209], "descent": [59, 245, 478, 892], "4411": 59, "845726": 59, "4408": [59, 184, 191], "353441": 59, "4410": 59, "859492": 59, "292946": 59, "51e": 59, "670058": 59, "519426": 59, "61e": 59, "669663": 59, "668049": 59, "546628e": 59, "049948803289596964": [59, 95, 179, 181], "2996928197375818": [59, 140, 149, 151, 229], "10e": [59, 69, 90, 95], "15e": 59, "20e": [59, 265, 266, 275, 481, 482, 790, 813], "medial": [59, 237, 699, 700, 760], "yellow": [59, 207, 267, 268, 775, 794, 811], "scalar_thresh": [59, 760], "stationari": [59, 80, 205, 207, 212, 245, 349, 479, 867], "051": [59, 140, 142, 149, 169, 200, 224, 245, 479], "sparsiti": [59, 245, 479, 672], "g\u00e1bor": [59, 245, 479], "sz\u00e9keli": [59, 245, 479], "horst": [59, 245, 479], "hahn": [59, 245, 479], "editor": [59, 191, 245, 334, 476, 479, 564, 741, 744, 851, 855, 869], "6801": [59, 245, 479], "page": [59, 172, 202, 219, 245, 265, 266, 331, 391, 479, 481, 482, 564, 728, 738, 739, 741, 742, 744, 760, 790, 813, 849, 851, 852, 855, 857, 858, 863, 866, 867, 870, 871, 872, 873, 874, 875, 892], "611": [59, 232, 245, 356, 479], "springer": [59, 224, 245, 298, 299, 391, 479, 564], "berlin": [59, 224, 245, 298, 299, 479], "heidelberg": [59, 224, 245, 298, 299, 479], "1007": [59, 151, 206, 207, 208, 209, 224, 245, 298, 299, 414, 479, 531, 564, 580, 677, 874], "978": [59, 113, 151, 202, 205, 224, 245, 264, 265, 266, 267, 268, 298, 299, 356, 479, 564, 694, 712, 715], "22092": [59, 245, 479], "0_49": [59, 245, 479], "truncat": [60, 79, 87, 119, 124, 150, 200, 207, 217, 245, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 303, 437, 443, 481, 482, 494, 712, 715, 784, 892], "th\u00e9odor": [60, 892], "papadopoulo": [60, 892], "theodor": [60, 892], "niko": [60, 245, 303, 874], "m\u00e4kel\u00e4": [60, 245, 303, 396], "jukka": [60, 176, 178, 245, 303, 892], "sarva": [60, 176, 245, 303], "risto": [60, 178, 206, 207, 245, 303, 531, 874], "ilmoniemi": [60, 178, 206, 207, 245, 303, 531, 874], "167": [60, 169, 196, 227, 231, 232, 245, 303], "2018": [60, 76, 84, 126, 137, 196, 205, 224, 245, 298, 299, 303, 564, 606, 607], "2017": [60, 84, 151, 205, 245, 303, 396, 564, 607, 672, 677], "013": [60, 66, 128, 140, 141, 149, 151, 169, 224, 245, 303], "magnitud": [61, 64, 71, 112, 113, 135, 142, 145, 149, 150, 166, 168, 178, 180, 199, 200, 202, 217, 224, 235, 236, 273, 279, 281, 356, 414, 435, 458, 539, 569, 575, 588, 599, 608, 704, 801, 823, 849, 871, 892], "accomplish": [61, 135, 149, 161, 171, 849, 857, 867, 868, 874], "plot_vector_source_estim": [61, 825, 882, 892], "hood": [61, 127, 143, 189, 199, 202, 206, 892], "plot_source_estim": [61, 760, 825, 882, 892], "instruct": [61, 116, 161, 189, 211, 473, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 862, 865, 871, 877, 892], "impos": [61, 195, 201, 728, 738, 742, 892], "underli": [61, 160, 166, 202, 206, 227, 228, 240, 245, 259, 264, 265, 266, 267, 268, 271, 276, 414, 487, 590, 712, 715, 750, 892], "getter": [61, 177, 892], "peak_tim": [61, 175], "get_peak": [61, 127, 149, 151, 175, 177, 178, 180, 267, 268, 272, 273, 276, 279, 280, 281, 892], "time_dil": [61, 135, 136, 177, 181, 760], "framer": [61, 135, 136, 177, 181, 760], "95048065": 61, "56941314": 61, "72451438": 61, "stc_max": 61, "cosin": [61, 90, 202, 222, 667, 874], "source_nn": [61, 269, 298, 299, 877], "brain_max": 61, "975978731472672": 61, "90575168": 61, "52414196": 61, "71336747": 61, "brain_norm": 61, "83607509": 61, "44726242": 61, "57923594": 61, "lot": [61, 71, 127, 152, 158, 160, 166, 169, 200, 202, 204, 205, 206, 211, 216, 218, 361, 367, 433, 464, 619, 648, 650, 840, 851], "fname_inv_fix": 61, "inv_fix": 61, "stc_fix": 61, "brain_fix": [61, 178], "00351751": 61, "62842071": 61, "43519503": 61, "pars": [62, 140, 151, 165, 171, 173, 174, 190, 201, 217, 258, 259, 265, 270, 284, 443, 455, 462, 481, 489, 496, 497, 504, 511, 524, 554, 626, 847, 892], "elekta": [62, 84, 156, 165, 186, 187, 210, 258, 262, 263, 265, 266, 267, 268, 270, 275, 304, 356, 434, 455, 457, 481, 482, 527, 776, 788, 790, 800, 813, 828, 863, 868, 874, 877, 892], "triux": [62, 183, 258, 265, 266, 267, 268, 393, 481, 482, 561, 712, 714, 715, 716, 868, 874], "dacq": [62, 258, 868], "acquisit": [62, 156, 160, 168, 188, 189, 190, 191, 207, 216, 245, 258, 259, 265, 266, 267, 268, 270, 284, 455, 481, 482, 483, 588, 599, 613, 677, 847, 863, 867, 874, 877, 892], "accordingli": [62, 150, 158, 178, 189, 216, 260, 265, 266, 267, 268, 473, 481, 482, 489, 496, 502, 600, 874, 892], "multimod": [62, 137, 171, 245, 878, 882, 892], "multimodal_raw": 62, "grad_ssp_upright": 62, "mag_ssp_upright": 62, "v4": [62, 209, 210], "v5": [62, 209, 210], "183600": 62, "576599": 62, "960": [62, 81, 101, 143, 209, 213, 228, 232, 868], "categori": [62, 112, 145, 258, 337, 630, 757, 874, 875, 892], "acqpars": [62, 258, 481, 892], "acqparserfif": [62, 270, 481, 882, 892], "get_condit": [62, 258], "plot_topo": [62, 150, 152, 166, 219, 240, 241, 265, 266, 267, 268, 323, 481, 482, 712, 714, 716, 892], "background_color": [62, 132, 267, 268, 798, 892], "cat": [62, 112], "flat": [62, 83, 111, 135, 140, 141, 150, 181, 200, 201, 202, 206, 207, 208, 210, 258, 260, 265, 266, 272, 276, 280, 359, 361, 564, 566, 576, 577, 581, 582, 588, 698, 760, 818, 847, 867, 892], "fiff": [62, 115, 156, 160, 265, 266, 269, 275, 278, 481, 482, 485, 498, 514, 515, 564, 576, 577, 746, 768, 868, 892], "fname_out": [62, 768], "write_evok": [62, 149, 267, 268, 445, 629, 871, 882, 892], "0812": [62, 169], "0123": [62, 145, 166, 169, 216], "0942": [62, 169], "2232": [62, 169, 337], "newcat": 62, "longer": [62, 114, 145, 162, 167, 168, 172, 191, 200, 201, 202, 203, 205, 227, 242, 265, 266, 267, 268, 270, 343, 438, 449, 453, 455, 481, 482, 566, 599, 715, 739, 740, 742, 743, 760, 770, 790, 793, 851, 857, 871, 874, 892], "reqev": [62, 258], "requir": [62, 109, 135, 136, 140, 142, 144, 150, 156, 158, 161, 162, 166, 168, 170, 171, 172, 182, 189, 190, 191, 192, 196, 199, 202, 203, 205, 208, 210, 212, 216, 222, 224, 227, 228, 231, 235, 257, 258, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 298, 299, 305, 310, 314, 356, 357, 358, 359, 361, 362, 365, 389, 413, 414, 416, 417, 421, 423, 424, 427, 430, 431, 452, 453, 455, 457, 470, 472, 474, 475, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 518, 522, 523, 525, 526, 534, 537, 538, 547, 548, 563, 564, 566, 569, 576, 577, 579, 591, 600, 608, 617, 654, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 708, 712, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 754, 760, 777, 783, 790, 792, 795, 799, 803, 807, 812, 813, 814, 815, 818, 820, 822, 823, 829, 847, 849, 852, 855, 856, 867, 868, 873, 874, 880, 892], "reqwithin": [62, 258], "reqwhen": [62, 258], "freeli": 62, "elekta_epoch": [62, 67], "scratch": [64, 140, 149, 165, 188, 190, 191, 216, 225, 226, 242, 265, 266, 267, 268, 270, 376, 481, 482, 524, 716, 731], "exampleio": 64, "fake": [64, 71, 159, 182], "won": [64, 151, 206, 207, 218, 231, 245, 265, 266, 267, 268, 362, 481, 482, 564, 629, 712, 714, 715, 716, 750], "consult": [64, 202, 206, 599, 851, 856, 857, 867, 871, 873, 874], "reader": [64, 166, 175, 188, 206, 216, 332, 480, 487, 489, 490, 491, 493, 496, 499, 500, 502, 504, 505, 506, 508, 509, 510, 511, 512, 513, 623, 625, 627, 874, 878, 892], "fakedata": 64, "nof": 64, "lazi": 64, "analogsign": 64, "multichannel": [64, 71, 112, 151, 196, 210, 245, 435, 572, 575, 599], "sampling_r": 64, "misc": [64, 66, 80, 81, 82, 115, 135, 137, 149, 169, 171, 178, 182, 183, 185, 188, 189, 191, 192, 213, 216, 222, 265, 266, 267, 268, 270, 275, 313, 329, 348, 376, 447, 481, 482, 489, 491, 493, 496, 498, 504, 508, 511, 561, 712, 714, 715, 716, 784, 790, 794, 796, 798, 813, 868, 882, 892], "show_scrollbar": [64, 76, 151, 205, 211, 222, 265, 266, 481, 482, 564, 790, 807, 813, 892], "100000": [64, 451], "99999": [64, 443], "read_neo_format": [64, 67], "ev_info": 65, "15972": 65, "27235589e": 65, "79818505e": 65, "12852747e": 65, "85348042e": 65, "02846360e": 65, "26727393e": 65, "33468523e": 65, "80261790e": 65, "33583009e": 65, "93161055e": 65, "35199238e": 65, "79073915e": 65, "09498615e": 65, "16924072e": 65, "93873875e": 65, "40677185e": 65, "27444183e": 65, "08634620e": 65, "59818134e": 65, "51070563e": 65, "53708918e": 65, "read_noise_covariance_matrix": [65, 67], "analyz": [66, 72, 140, 165, 168, 180, 192, 196, 199, 200, 202, 203, 210, 213, 217, 218, 227, 245, 265, 266, 440, 567, 573, 695, 848, 851, 867, 874, 892], "pabr": 66, "maddox": [66, 245, 892], "lab": [66, 69, 870, 880], "clemen": [66, 112, 879, 892], "brunner": [66, 112, 879, 892], "pyxdf": [66, 189], "p001_se": 66, "s004_task": 66, "default_run": 66, "001_eeg_a2": 66, "stream": [66, 189, 200, 203, 892], "header": [66, 113, 123, 156, 160, 182, 189, 191, 267, 268, 298, 299, 341, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 480, 488, 491, 493, 508, 510, 512, 542, 800, 892], "load_xdf": 66, "time_seri": 66, "assert": [66, 109, 140, 144, 149, 156, 171, 191, 217, 224, 227, 229, 873, 892], "four": [66, 71, 141, 144, 151, 166, 185, 202, 227, 237, 245, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 760, 777, 792, 799, 803, 812, 815, 820, 822, 867, 874, 875], "plu": [66, 166, 168, 172, 177, 182, 202, 205, 207, 209, 231, 270, 731, 858, 869, 874, 877, 892], "rerefer": 66, "bipolar": [66, 68, 191, 204, 205, 227, 265, 266, 267, 268, 481, 482, 653, 656, 892], "subselect": [66, 116, 143, 149, 150, 151, 166, 216, 229, 232, 240, 242, 264, 265, 266, 267, 268, 270, 373, 712, 713, 714, 715, 871, 892], "uv": [66, 265, 266, 267, 268, 481, 482, 892], "preamp": 66, "nominal_sr": 66, "100e": [66, 145, 151, 201, 224], "2320128": 66, "2320127": 66, "232": [66, 144, 169, 209, 227, 232], "melissa": [66, 245], "polonenko": [66, 245], "ross": [66, 245, 892], "brainstem": [66, 245], "hear": [66, 245, 603], "2331216519871395": [66, 245], "1177": [66, 101, 227, 228, 245, 397, 868], "736": [66, 67, 232], "read_xdf": [66, 67], "404": [67, 81, 196, 209, 227, 232], "auto_examples_io": 67, "mastoid": [68, 189, 208, 265, 266, 267, 268, 481, 482, 656], "bone": [68, 272, 273, 276, 279, 280, 281, 760, 818, 823], "sleep": [68, 138, 139, 165, 168, 245, 259, 265, 406, 407, 443, 496, 617, 714, 793, 847, 871, 892], "ssvep_fold": [68, 170], "ssvep": [68, 165, 170, 171, 243, 244, 265, 270, 314, 330, 443, 491, 561, 714, 822, 882, 892], "ssvep_data_raw_path": [68, 170], "se": [68, 170, 201, 212, 242, 874], "02_se": [68, 170, 242], "ssvep_eeg": [68, 170, 242], "vhdr": [68, 136, 170, 242, 447, 481, 482, 617, 868, 874, 892], "read_raw": [68, 71, 135, 144, 172, 224, 257, 882, 892], "easycap": [68, 170, 227, 242, 892], "467579": 68, "579": [68, 70, 232], "tp9": 68, "tp10": 68, "rename_channel": [68, 75, 112, 128, 140, 149, 151, 159, 185, 211, 216, 265, 266, 267, 268, 270, 314, 481, 482, 492, 505, 882, 892], "m2": [68, 208, 265, 266, 267, 268, 481, 482, 656, 877], "midlin": [68, 128, 169, 170, 219, 228, 326, 892], "make_1020_channel_select": [68, 128, 228, 882, 892], "return_ch_nam": [68, 326, 892], "rereferenc": [68, 167, 242], "rereferenced_midline_ch": 68, "alter": [68, 208, 210, 216, 259, 600, 892], "set_bipolar_refer": [68, 208, 265, 266, 267, 268, 481, 482, 656, 882, 892], "anod": [68, 208, 653, 892], "cathod": [68, 208, 653, 892], "strip": [68, 112, 245], "suffix": [68, 257, 275, 481, 482, 494, 892], "replac": [68, 79, 88, 101, 141, 143, 151, 159, 172, 188, 190, 201, 206, 207, 210, 216, 218, 245, 262, 265, 266, 267, 268, 274, 275, 414, 421, 436, 449, 481, 482, 493, 510, 529, 563, 564, 579, 712, 714, 716, 777, 799, 803, 812, 815, 820, 851, 855, 857, 862, 874, 892], "unreferenc": [68, 653], "add_channel": [68, 71, 75, 213, 265, 266, 267, 268, 481, 482, 564, 712, 714, 715, 716, 892], "467580": 68, "o1": [68, 71, 128, 159, 222, 242], "po9": [68, 242], "p7": [68, 71, 128, 159, 505], "p3": [68, 71, 128, 144, 159, 505], "cp5": [68, 128, 505], "cp1": [68, 71, 128], "t7": [68, 128, 159, 170, 262, 265, 266, 267, 268, 270, 274, 314, 414, 421, 481, 482, 505, 563, 564, 579, 712, 714, 716, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 892], "c3": [68, 112, 128, 144, 159, 505], "fc1": [68, 71, 128, 480], "fc5": [68, 128, 505], "f3": [68, 71, 128, 144, 159, 208, 505], "f7": [68, 144, 159, 337, 505], "fp1": [68, 144, 159, 208, 222, 337, 450, 453, 489, 496, 582, 590], "o2": [68, 128, 159, 222, 242], "po10": [68, 242], "p8": [68, 71, 128, 159], "p4": [68, 71, 128, 144, 159], "cp6": [68, 128], "cp2": [68, 71, 128], "c4": [68, 71, 112, 128, 144, 159], "t8": [68, 71, 128, 159, 170, 262, 265, 266, 267, 268, 270, 274, 314, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 892], "fc2": [68, 71, 128], "fc6": [68, 71, 128], "f4": [68, 71, 128, 144, 159, 170, 208], "f8": [68, 144, 159], "fp2": [68, 144, 159, 222, 337, 450, 453, 582, 590], "still": [68, 71, 75, 79, 115, 120, 142, 143, 144, 160, 171, 188, 189, 199, 200, 202, 203, 204, 206, 208, 210, 212, 216, 219, 227, 235, 265, 270, 278, 322, 367, 433, 464, 481, 564, 599, 619, 648, 650, 694, 715, 769, 783, 784, 825, 840, 849, 851, 857, 869, 880, 892], "plot_sensor": [68, 127, 142, 151, 170, 182, 190, 219, 265, 266, 267, 268, 270, 481, 482, 882, 892], "fpz": [68, 128, 137, 170, 205, 262, 265, 266, 267, 268, 270, 274, 314, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 892], "oz": [68, 71, 128, 137, 159, 170, 242, 262, 265, 266, 267, 268, 270, 274, 314, 414, 421, 481, 482, 563, 564, 579, 661, 712, 714, 716, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 892], "324": [68, 85, 112, 169, 195, 196, 209, 227], "241": [68, 123, 149, 154, 169, 203, 232, 453, 481, 482], "contralateral_referenc": [68, 85], "facilit": [69, 112, 135, 136, 167, 190, 196, 228, 265, 266, 267, 268, 481, 482, 712, 714, 715, 716, 867, 874, 877, 892], "subcort": [69, 245, 580, 892], "simul": [69, 71, 80, 91, 105, 106, 140, 149, 161, 176, 188, 190, 201, 202, 216, 222, 232, 235, 236, 237, 242, 245, 262, 265, 266, 267, 268, 269, 270, 271, 276, 278, 288, 356, 376, 455, 481, 482, 486, 516, 519, 525, 530, 531, 542, 561, 562, 603, 620, 626, 631, 633, 634, 637, 712, 714, 716, 725, 739, 742, 743, 744, 760, 764, 819, 868, 882, 892], "samuelsson": [69, 245, 580, 892], "johnsam": 69, "mit": [69, 72, 151, 245, 476, 573, 862, 868, 874], "simulate_sparse_stc": [69, 92, 93, 676, 677, 679, 882, 892], "simulate_evok": [69, 92, 176, 223, 525, 677, 678, 679, 882, 892], "all_label": 69, "select_label": 69, "hiplab": 69, "postcenlab": 69, "cortical_waveform": 69, "waveform": [69, 99, 202, 204, 207, 211, 245, 273, 279, 281, 662, 664, 678, 679, 698, 819, 858], "pi": [69, 90, 93, 94, 95, 114, 202, 207, 222, 223, 224, 539, 608, 678, 728, 736, 738, 742, 874], "subcortical_waveform": 69, "data_fun": [69, 92, 93, 94, 678], "isin": [69, 112, 144], "evoked_subcort": [69, 580], "cortical_signal_suppress": [69, 882, 892], "n_proj": [69, 580], "fft": [69, 108, 133, 202, 240, 242, 265, 266, 267, 268, 422, 426, 427, 481, 482, 537, 547, 548, 713, 717, 718, 719, 720, 721, 722, 724, 731, 737, 739, 740, 741, 742, 743, 744, 814, 892], "rfft": 69, "psd_proc": 69, "transax": 69, "footbibliographi": [69, 851], "136": [69, 166, 169, 209, 227, 231, 232, 278], "put": [70, 116, 123, 127, 141, 144, 155, 156, 161, 170, 172, 182, 183, 185, 195, 202, 205, 216, 222, 223, 224, 227, 267, 268, 271, 389, 760, 794, 851, 856, 892], "earli": [70, 71, 141, 172, 200, 202, 242, 245, 260, 265, 266, 267, 268, 481, 482, 523, 622], "button": [70, 72, 94, 121, 128, 140, 142, 144, 152, 156, 161, 166, 168, 191, 199, 201, 206, 217, 218, 219, 262, 265, 266, 267, 268, 274, 275, 414, 421, 440, 481, 482, 563, 564, 712, 714, 716, 790, 791, 792, 794, 796, 799, 803, 812, 813, 814, 815, 820, 851, 868, 892], "press": [70, 72, 113, 121, 128, 140, 142, 144, 151, 152, 156, 161, 166, 168, 172, 191, 199, 201, 217, 218, 219, 245, 265, 266, 356, 440, 453, 476, 481, 482, 564, 573, 790, 805, 807, 813, 868, 892], "millisecond": [70, 82, 112, 140, 145, 149, 168, 216, 235, 236, 237, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 440, 481, 482, 712, 715, 760, 818, 823, 892], "late": [70, 162, 871], "quickli": [70, 165, 166, 195, 205, 206, 218, 875, 892], "slowli": 70, "define_target_ev": [70, 85, 128, 882], "quick": [70, 74, 93, 183, 199, 241, 529, 851], "reference_id": [70, 128, 440], "smilei": [70, 72, 94, 152, 166, 168, 217, 868], "target_id": [70, 128, 440], "new_id": [70, 128, 440, 529], "hit": [70, 242, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 791, 792, 796, 799, 803, 812, 815, 820, 892], "fill_na": [70, 440], "fill": [70, 223, 271, 276, 278, 279, 362, 440, 470, 481, 482, 591, 679, 708, 760, 892], "events_": 70, "besid": [70, 201, 206], "tmin_": 70, "tmax_": 70, "8522": [70, 892], "10649": [70, 195], "12859": 70, "14830": 70, "16850": [70, 195], "18826": 70, "21224": 70, "23200": 70, "25272": 70, "27243": 70, "29525": 70, "31530": 70, "33481": 70, "35611": 70, "38007": 70, "566": [70, 129, 130, 209, 218, 221], "08643728": 70, "532": [70, 196, 208], "78723509": 70, "352": [70, 81, 169, 171, 196, 209, 227, 232, 242, 244], "97154325": 70, "359": [70, 81, 112, 169, 209, 232], "63138369": 70, "20930939": 70, "40611816": 70, "512": [70, 73, 195, 196, 275, 278, 413], "80771377": 70, "ft": [70, 142, 145, 166, 201, 207, 241, 257, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 414, 421, 481, 482, 519, 563, 564, 579, 588, 712, 714, 716, 777, 791, 792, 794, 796, 799, 803, 812, 815, 820, 821, 822, 847, 874], "586": [70, 85, 232], "conduct": [71, 72, 101, 151, 158, 191, 227, 228, 229, 231, 245, 257, 520, 527, 584, 669, 674, 847, 851, 867, 870, 874, 877, 892], "undesir": [71, 204, 564, 892], "otherwis": [71, 83, 120, 144, 151, 162, 172, 188, 201, 202, 232, 235, 237, 259, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 289, 298, 299, 304, 314, 326, 339, 356, 360, 361, 362, 372, 373, 374, 389, 407, 414, 421, 449, 452, 453, 457, 458, 472, 476, 478, 479, 481, 482, 489, 491, 496, 528, 529, 530, 531, 537, 542, 563, 564, 579, 584, 617, 626, 648, 649, 651, 657, 661, 678, 697, 698, 712, 714, 715, 716, 724, 736, 747, 750, 760, 776, 777, 784, 788, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 803, 810, 812, 813, 814, 815, 816, 818, 819, 820, 822, 823, 837, 849, 851, 874, 892], "introduct": [71, 90, 95, 151, 232, 240, 242, 245, 275, 876], "smear": [71, 80, 81, 142, 202, 242, 598, 739, 740, 742, 743, 892], "unfortun": [71, 162, 871], "brigd": 71, "far": [71, 83, 127, 140, 141, 144, 157, 171, 178, 201, 202, 203, 206, 208, 216, 217, 227, 367, 493, 567, 699, 700, 702, 703, 740, 743, 784, 874, 877], "address": [71, 96, 97, 166, 202, 227, 228, 235, 236, 237, 245, 270, 699, 700, 702, 703, 851, 857], "Or": [71, 120, 171, 199, 209, 222, 579, 851], "quantifi": [71, 211, 242, 276], "introduc": [71, 76, 140, 141, 149, 151, 165, 166, 173, 175, 199, 201, 202, 203, 205, 206, 207, 212, 216, 235, 237, 260, 265, 266, 267, 268, 322, 481, 482, 564, 790, 794, 813, 871, 874, 880, 892], "outcom": 71, "awar": [71, 103, 140, 144, 167, 168, 213, 218, 229, 235, 265, 266, 267, 268, 270, 481, 482, 797, 892], "mitig": [71, 180, 202, 203, 210, 874], "confound": [71, 151, 564], "psychophysiologi": [71, 72, 99, 141, 151, 202, 232, 245, 573, 698, 699, 700, 702, 703], "cpmc": 71, "columbia": 71, "softwar": [71, 158, 165, 184, 189, 190, 208, 245, 258, 270, 322, 447, 473, 481, 482, 490, 510, 599, 642, 826, 845, 847, 849, 851, 852, 857, 859, 867, 868, 871, 872, 873, 876, 882, 892], "ebridg": 71, "html": [71, 143, 169, 171, 245, 257, 275, 579, 657, 851, 875, 892], "linearsegmentedcolormap": [71, 775], "nearli": [71, 851], "exactli": [71, 127, 140, 144, 175, 184, 196, 216, 242, 566, 698, 778, 822, 892], "suffici": [71, 200, 202, 210, 229, 265, 266, 267, 268, 270, 283, 356, 481, 482, 522, 790, 813, 849, 851, 857, 867, 871, 874, 892], "portion": [71, 178, 199, 201, 216, 241, 265, 266, 323, 481, 482, 564, 790, 807, 813, 851, 871, 873, 892], "plenti": 71, "settl": [71, 298], "ed_data": 71, "raw_data": 71, "compute_bridged_electrod": [71, 598, 780, 882, 892], "1959919512423807e": 71, "665886892350542": 71, "iz": 71, "4367320903573773": 71, "fcz": [71, 144, 242], "fc4": [71, 144], "f2": 71, "4835197413857302e": 71, "587817798758312": 71, "fc3": [71, 144, 505], "cp3": [71, 505], "af7": 71, "af3": 71, "af4": 71, "af8": 71, "f5": [71, 505], "fz": [71, 128, 144, 159, 222, 228, 447, 481, 482, 496], "ft8": 71, "tp8": 71, "p5": [71, 505], "p1": [71, 112, 211], "p6": 71, "po3": [71, 128, 242], "po4": [71, 128, 242], "po8": [71, 128, 242, 892], "746002687400983": 71, "cz": [71, 112, 128, 137, 144, 159, 170, 189, 191, 206, 208, 222, 228, 265, 266, 267, 268, 481, 482, 656, 892], "c2": [71, 112, 206], "cp4": 71, "pz": [71, 128, 137, 143, 159, 191, 222, 228], "p2": [71, 112], "590631749463316": 71, "f6": 71, "understand": [71, 135, 144, 190, 202, 242, 851, 874, 875, 880, 892], "physiologi": 71, "clip": [71, 172, 219, 257, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 813, 815, 820, 822, 892], "bridged_idx": [71, 572, 598, 780], "ed_matrix": [71, 572, 780], "ax1": [71, 86, 90, 99, 137, 183, 195], "ax2": [71, 86, 90, 96, 99, 137, 183, 195, 229, 230], "triangular": [71, 160, 161, 271, 642, 699, 700, 702, 703, 819, 845, 867, 874, 877], "ed_plot": 71, "triu_idx": 71, "triu_indic": 71, "idx0": 71, "idx1": 71, "nanmedian": 71, "im1": 71, "cax1": 71, "set_label": [71, 146, 196, 227], "mu": [71, 202, 227, 572, 892], "im2": 71, "cax2": 71, "histogram": [71, 158, 265, 266, 790], "previou": [71, 140, 144, 151, 161, 170, 171, 172, 181, 201, 202, 206, 208, 219, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 420, 421, 457, 458, 476, 478, 479, 542, 574, 588, 599, 760, 778, 800, 855, 862, 877, 892], "pair": [71, 103, 120, 137, 144, 168, 188, 189, 190, 192, 196, 210, 211, 227, 235, 242, 257, 262, 265, 266, 267, 268, 270, 272, 273, 274, 276, 278, 279, 280, 281, 284, 289, 304, 414, 421, 481, 482, 505, 530, 563, 564, 572, 584, 598, 610, 642, 699, 701, 702, 712, 713, 714, 716, 747, 760, 776, 780, 781, 784, 792, 798, 799, 803, 815, 818, 820, 822, 823, 845, 851, 892], "isnan": 71, "arrang": [71, 127, 151, 165, 170, 219, 245, 326, 765], "light": [71, 137, 142, 171, 190, 200, 265, 266, 267, 268, 417, 424, 481, 482, 564, 760, 790, 794, 807, 813, 847, 868, 892], "horizont": [71, 81, 135, 137, 140, 141, 142, 180, 191, 199, 210, 227, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 564, 584, 760, 779, 794, 806, 807, 813, 818, 823, 892], "stand": [71, 155, 169, 175, 673, 851, 863], "insert": [71, 151, 169, 216, 262, 270, 274, 289, 304, 440, 456, 530, 584, 747, 765], "syring": 71, "tip": [71, 205, 245, 356, 855, 856, 872, 878], "plot_bridged_electrod": [71, 882, 892], "saniti": [71, 120, 144, 182, 202, 450, 677, 880, 892], "implausibli": [71, 202, 227, 705], "interestingli": [71, 874], "though": [71, 75, 112, 151, 156, 160, 168, 172, 179, 183, 190, 199, 202, 203, 205, 206, 207, 212, 227, 270, 763, 783, 847, 868, 874, 892], "adjac": [71, 142, 146, 200, 228, 236, 237, 320, 331, 426, 455, 566, 569, 682, 683, 684, 685, 686, 687, 688, 692, 699, 700, 702, 703, 781, 880, 889, 892], "distinct": [71, 72, 196, 245, 262, 265, 266, 267, 268, 414, 421, 481, 482, 563, 712, 714, 716, 777, 792, 799, 815, 820, 822], "unlik": [71, 140, 141, 149, 150, 156, 160, 170, 181, 199, 202, 204, 216, 264, 265, 266, 267, 268, 273, 279, 281, 363, 393, 422, 600, 716, 823, 849, 867, 874, 892], "ch1": 71, "ch2": 71, "9760": [71, 83], "9759": [71, 83], "lesser": [71, 481, 482, 813, 892], "trough": [71, 144], "monoton": [71, 101, 492, 594, 764], "discrep": [71, 874], "driven": [71, 196, 227, 374, 421, 476], "blink": [71, 73, 83, 93, 94, 144, 172, 192, 199, 201, 204, 205, 207, 208, 216, 218, 242, 245, 259, 265, 266, 500, 563, 579, 585, 664, 665, 892], "flatten": [71, 119, 206, 227, 231, 237, 245, 777, 892], "axvspan": [71, 96, 151], "subplots_adjust": [71, 72, 74, 107, 109, 112, 120, 127, 146, 151, 160, 200, 203, 205, 206, 207, 208, 211, 217, 227, 229, 230, 232, 783], "725": [71, 196], "wspace": [71, 74, 127, 227], "compel": 71, "evid": [71, 113, 202, 203, 245, 564, 741, 744], "judici": [71, 851], "electrolyt": [71, 245, 572], "tri": [71, 160, 161, 168, 175, 178, 265, 266, 271, 272, 276, 278, 280, 320, 367, 437, 469, 642, 645, 661, 681, 685, 688, 818, 840, 869, 874, 877, 892], "those": [71, 75, 79, 99, 127, 142, 144, 151, 157, 161, 165, 166, 168, 169, 170, 171, 172, 175, 180, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 216, 217, 218, 222, 223, 227, 257, 260, 265, 266, 267, 268, 270, 278, 298, 312, 314, 326, 329, 331, 357, 358, 359, 361, 371, 372, 416, 420, 430, 435, 437, 438, 443, 447, 466, 481, 482, 492, 510, 542, 550, 563, 564, 566, 567, 580, 581, 582, 591, 595, 605, 607, 614, 661, 664, 665, 680, 698, 707, 712, 714, 715, 716, 720, 721, 722, 723, 725, 739, 740, 742, 743, 784, 790, 791, 794, 796, 797, 804, 811, 814, 851, 867, 873, 874, 876, 892], "biolog": [71, 199, 206, 207, 245, 531, 867, 874], "interpolate_bridged_electrod": [71, 882, 892], "midwai": [71, 598], "aid": [71, 245, 598, 892], "recov": [71, 166, 367, 892], "impli": [71, 162, 223, 242, 270, 332, 366, 496, 871], "unbridg": 71, "ch0": 71, "bridged_idx_simul": 71, "data_orig": 71, "rng": [71, 92, 93, 94, 114, 195, 202, 227, 516, 564, 597, 616, 664, 665, 666, 675, 676, 678, 699, 700, 701, 702, 703], "random": [71, 84, 90, 92, 93, 94, 114, 159, 190, 191, 195, 199, 202, 205, 224, 227, 228, 235, 236, 237, 478, 516, 564, 597, 616, 664, 665, 666, 675, 676, 678, 699, 700, 701, 702, 703, 892], "default_rng": 71, "seed": [71, 90, 95, 112, 114, 205, 223, 224, 228, 235, 236, 237, 472, 516, 564, 597, 616, 664, 665, 666, 675, 676, 678, 691, 699, 700, 701, 702, 703, 892], "raw_sim": [71, 93, 94], "bridged_data": 71, "tile": [71, 114], "back": [71, 75, 83, 88, 116, 140, 143, 158, 161, 162, 166, 171, 172, 180, 181, 200, 202, 205, 206, 207, 208, 240, 258, 265, 266, 267, 268, 275, 367, 372, 429, 455, 481, 482, 564, 794, 851, 871, 892], "raw_virtu": 71, "data_virtu": 71, "raw_comp": 71, "data_comp": 71, "With": [71, 114, 121, 162, 171, 172, 188, 191, 206, 207, 212, 218, 224, 265, 266, 267, 268, 283, 456, 481, 482, 506, 564, 649, 760, 808, 847, 851, 854, 859, 863, 871, 873, 874], "comp": [71, 169, 270, 892], "1086289630948187e": 71, "1398345563221063e": 71, "brought": [71, 156], "impend": 71, "help": [71, 73, 120, 135, 140, 144, 145, 146, 151, 159, 160, 161, 162, 166, 169, 171, 172, 181, 188, 190, 196, 199, 200, 201, 203, 204, 205, 207, 219, 231, 257, 263, 264, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 441, 443, 449, 473, 481, 482, 489, 496, 497, 504, 514, 564, 617, 623, 656, 661, 675, 678, 704, 712, 715, 757, 760, 768, 790, 804, 818, 851, 855, 856, 857, 867, 869, 873, 874, 875, 877, 892], "quest": 71, "technician": [71, 867, 868], "noisi": [71, 92, 142, 150, 200, 202, 207, 210, 213, 227, 235, 237, 242, 270, 588, 589, 592, 664, 665, 676, 867, 892], "bid": [71, 136, 171, 245, 265, 266, 314, 481, 482, 858, 868, 880, 892], "tsv": [71, 332, 892], "kohm": 71, "passiv": [71, 199], "accept": [71, 94, 140, 169, 171, 172, 188, 200, 201, 202, 205, 206, 207, 216, 260, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 316, 346, 361, 380, 381, 382, 389, 391, 481, 482, 506, 566, 581, 582, 697, 699, 700, 702, 703, 714, 716, 760, 784, 791, 792, 798, 816, 845, 851, 870, 892], "from_list": 71, "impedance_cmap": 71, "cn": [71, 822], "cax": [71, 112, 116, 127, 146, 232], "omega": [71, 109], "hopefulli": [71, 199, 242, 454], "convinc": [71, 151], "tenk": [71, 72, 245, 572, 573], "kayser": [71, 72, 245, 572, 573], "electroencephalogram": [71, 245, 572], "offici": [71, 72, 190, 245, 506, 564, 572, 573, 625, 851, 859, 873, 876, 892], "feder": [71, 245, 564, 572], "112": [71, 115, 169, 171, 176, 227, 230, 231, 232, 234, 245, 572, 877], "545": [71, 196, 232, 245, 572], "550": [71, 81, 162, 224, 245, 435, 572], "march": [71, 245, 572, 877, 892], "s1388": [71, 112, 245, 572], "2457": [71, 112, 245, 572], "00553": [71, 245, 572], "arnaud": [71, 245, 564, 572], "delorm": [71, 245, 564, 572], "scott": [71, 112, 144, 213, 245, 438, 476, 564, 572, 867, 892], "makeig": [71, 112, 144, 245, 438, 476, 564, 572, 867], "jneumeth": [71, 75, 202, 232, 245, 564, 572, 672, 699, 700, 702, 703], "009": [71, 74, 121, 128, 140, 149, 169, 224, 245, 572], "851": [71, 85, 232], "eeg_bridg": [71, 85], "laplacian": [72, 195, 245, 426, 573, 656, 892], "sharper": [72, 202], "impact": [72, 137, 178, 200, 242, 414, 892], "166799": [72, 167, 182, 204], "714": [72, 167, 182, 204, 209, 232], "date": [72, 74, 77, 81, 82, 83, 90, 93, 127, 141, 146, 151, 167, 168, 169, 189, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 257, 259, 265, 266, 267, 268, 270, 481, 482, 483, 493, 496, 600, 849, 851, 892], "decemb": [72, 74, 77, 81, 82, 83, 90, 93, 127, 141, 146, 151, 167, 168, 169, 199, 200, 201, 203, 205, 206, 207, 208, 210, 216, 217, 218, 219, 224], "2002": [72, 74, 77, 83, 90, 93, 112, 127, 141, 146, 151, 166, 167, 168, 169, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 216, 217, 218, 219, 224, 245, 259, 531, 694, 696, 701, 874], "gmt": [72, 74, 77, 81, 82, 83, 90, 93, 127, 141, 146, 151, 167, 168, 169, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 213, 216, 217, 218, 219, 224], "146": [72, 74, 77, 83, 90, 93, 127, 141, 146, 151, 166, 167, 168, 169, 196, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 224, 227, 232, 245], "172": [72, 83, 93, 127, 167, 168, 169, 199, 200, 202, 203, 206, 207, 208, 209, 210, 216, 217, 218, 219, 227, 245, 264, 265, 266, 267, 268, 672, 677, 712, 715], "hh": [72, 74, 77, 81, 82, 83, 90, 93, 127, 141, 146, 151, 167, 168, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 224], "ss": [72, 74, 77, 81, 82, 83, 90, 93, 127, 141, 146, 151, 167, 168, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 217, 218, 219, 224, 874], "raw_csd": 72, "compute_current_source_dens": [72, 656, 882, 892], "evoked_csd": 72, "stiff": [72, 573], "spline": [72, 79, 200, 245, 265, 266, 267, 268, 481, 482, 573, 874, 892], "flexibl": [72, 143, 172, 189, 212, 760, 892], "hspace": [72, 74, 127, 227], "set_size_inch": [72, 204], "this_evoked_csd": 72, "contour": [72, 101, 120, 158, 172, 241, 257, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 595, 712, 714, 716, 777, 778, 792, 795, 796, 799, 803, 812, 815, 820, 822, 892], "n\u03bb\u00b2": 72, "perrin": [72, 79, 200, 245, 573, 874], "pernier": [72, 79, 200, 245, 573, 728, 738, 739, 742, 874], "bme": [72, 245, 573], "1987": [72, 176, 202, 245, 573], "326089": [72, 245, 573], "jacqu": [72, 79, 200, 245, 573, 728, 738, 739, 742, 874], "olivi": [72, 79, 200, 245, 356, 564, 573, 728, 738, 739, 742, 874], "fran\u0107oi": [72, 79, 200, 245, 573, 874], "echalli": [72, 79, 200, 245, 573, 874], "184": [72, 76, 79, 169, 200, 232, 245, 573, 606, 874], "187": [72, 76, 79, 169, 174, 195, 200, 227, 232, 245, 564, 573, 874], "1989": [72, 79, 200, 245, 573, 874], "90180": [72, 79, 200, 245, 573, 874], "mike": [72, 245, 573], "cohen": [72, 119, 129, 245, 573, 726, 728, 738, 742, 777, 892], "theori": [72, 165, 178, 210, 245, 573, 599], "j\u00fcrgen": [72, 205, 245, 564, 573], "craig": [72, 245, 573], "methodologi": [72, 101, 245, 356, 573], "electrophysiologi": [72, 245, 573], "171": [72, 76, 91, 94, 126, 130, 133, 169, 195, 196, 202, 209, 227, 231, 232, 245, 391, 542, 573, 606, 669, 674, 892], "173": [72, 145, 158, 169, 195, 227, 231, 245, 278, 573], "ijpsycho": [72, 245, 573], "921": [72, 85, 232], "eeg_csd": [72, 85], "eog_event_id": 73, "eog_ev": [73, 201, 259, 577, 590, 593], "find_eog_ev": [73, 199, 201, 218, 259, 577, 582, 869, 882, 892], "add_ev": [73, 172, 275, 481, 482, 892], "audr": 73, "visr": 73, "pick_ch": 73, "375": [73, 81, 94, 169, 196, 199, 201, 207, 215, 227, 232], "dc": [73, 166, 168, 172, 190, 199, 201, 202, 203, 204, 205, 207, 212, 217, 260, 265, 267, 268, 270, 343, 481, 482, 564, 566, 599, 813, 847, 877, 892], "offset": [73, 93, 136, 161, 168, 172, 191, 199, 201, 202, 204, 205, 206, 207, 213, 216, 217, 218, 257, 259, 260, 264, 265, 266, 267, 268, 270, 363, 443, 455, 481, 482, 500, 514, 567, 584, 613, 626, 692, 712, 715, 760, 847, 877, 892], "saccad": [73, 172, 191, 192, 199, 201, 204, 205, 207, 213, 500, 563], "firwin2": [73, 146, 172, 191, 199, 201, 202, 204, 205, 207, 265, 266, 267, 268, 416, 425, 450, 452, 453, 481, 482, 892], "hann": [73, 84, 108, 109, 146, 172, 199, 201, 202, 204, 205, 207, 265, 266, 267, 268, 425, 450, 452, 453, 481, 482, 537, 538, 663, 664, 665, 677, 892], "1502": [73, 172, 201, 205], "eog_artifact_histogram": [73, 85], "basic": [74, 83, 112, 150, 151, 158, 161, 162, 165, 166, 171, 172, 173, 176, 193, 199, 204, 205, 206, 207, 210, 216, 219, 220, 224, 243, 244, 245, 257, 265, 270, 274, 314, 330, 376, 393, 443, 449, 491, 561, 714, 822, 868, 874, 892], "thorough": [74, 165, 200, 875], "modul": [74, 140, 142, 143, 145, 146, 149, 150, 151, 161, 166, 167, 168, 169, 170, 171, 172, 189, 190, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 213, 216, 217, 218, 219, 222, 240, 242, 257, 349, 492, 558, 711, 757, 760, 850, 851, 858, 863, 871, 874, 880, 881, 882, 883, 884, 887, 890, 892], "eogregress": [74, 204, 212, 609, 815, 882, 892], "elimin": [74, 169, 204, 206, 210, 227, 235, 237, 357, 358, 359, 414, 591, 871, 874, 892], "slow": [74, 128, 137, 141, 144, 150, 202, 204, 211, 245, 265, 266, 406, 407, 419, 537, 538, 597, 730, 750, 792, 851, 868], "drift": [74, 141, 202, 204, 211, 212, 564, 613, 892], "1653": [74, 75, 209], "offpca": [74, 77, 93, 167, 168, 169, 199, 200, 201, 203, 205, 206, 207, 210, 216, 217, 218, 219, 224], "offaverag": [74, 93, 169, 201, 205], "raw_clean": [74, 84, 204, 607], "evoked_befor": 74, "evoked_aft": 74, "epochs_aft": 74, "spatial_color": [74, 94, 99, 129, 137, 144, 150, 151, 207, 219, 222, 265, 266, 267, 268, 481, 482, 714, 716, 794, 797, 814, 892], "905": [74, 156, 164, 232], "480": [74, 75, 81, 85, 171, 191, 196, 227, 232], "eog_regress": [74, 85], "intermitt": 75, "extern": [75, 151, 180, 188, 210, 245, 265, 266, 267, 268, 343, 345, 349, 435, 444, 445, 446, 447, 481, 482, 564, 574, 575, 588, 599, 867, 868, 874, 892], "magnet": [75, 81, 119, 129, 150, 156, 176, 188, 203, 204, 212, 232, 245, 344, 531, 564, 578, 777, 847, 852, 867, 868], "fail": [75, 207, 360, 367, 433, 435, 464, 497, 498, 574, 575, 588, 599, 617, 619, 623, 648, 650, 840, 851, 873, 892], "succe": [75, 161, 171, 857], "choos": [75, 82, 114, 115, 135, 141, 146, 151, 160, 162, 180, 181, 189, 195, 199, 202, 204, 205, 210, 229, 242, 258, 265, 266, 272, 273, 276, 278, 279, 280, 281, 321, 455, 531, 539, 563, 569, 576, 589, 592, 599, 626, 675, 678, 698, 760, 776, 779, 818, 823, 824, 849, 851, 871, 873, 892], "made": [75, 116, 155, 172, 199, 202, 227, 265, 266, 271, 273, 278, 279, 281, 316, 330, 489, 613, 677, 791, 793, 823, 849, 851, 868, 873, 892], "whose": [75, 95, 144, 168, 170, 188, 196, 224, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 443, 448, 457, 458, 476, 478, 479, 481, 482, 523, 542, 564, 569, 579, 581, 582, 589, 665, 715, 716, 784, 787, 790, 800, 805, 814, 815, 873, 874, 877, 892], "particularli": [75, 161, 190, 204, 227, 265, 266, 267, 268, 441, 481, 482, 564, 588, 854, 874], "heavi": [75, 235, 237, 871, 892], "jeff": [75, 245, 564, 892], "hanna": [75, 245, 564, 892], "refmeg_nois": [75, 171, 868, 882, 892], "sample_reference_meg_nois": 75, "refmeg": 75, "165353": 75, "530": [75, 81, 196, 208, 232, 245], "30000": [75, 413], "select_pick": 75, "plot_kwarg": [75, 157, 204, 212], "raw_tog": 75, "ica_kwarg": 75, "picard": [75, 77, 83, 205, 564, 858, 892], "fit_param": [75, 77, 172, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 431, 564, 565, 892], "all_pick": 75, "ica_tog": 75, "allow_ref_meg": [75, 564], "bad_comp": 75, "find_bads_ref": [75, 564, 892], "plot_properti": [75, 83, 166, 205, 564, 878, 892], "147": [75, 169, 196, 227, 231, 232, 244], "patient": [75, 77, 83, 136, 166, 172, 205, 892], "took": [75, 77, 83, 166, 172, 205, 564], "dpss": [75, 83, 103, 104, 137, 142, 143, 166, 172, 205, 240, 241, 265, 266, 267, 268, 427, 481, 482, 714, 716, 724, 730, 740, 743, 892], "raw_sep": 75, "ref_pick": 75, "ica_ref": 75, "ica_sep": 75, "think": [75, 144, 172, 196, 202, 227, 847, 870], "ekg": [75, 136], "cardiac": [75, 211], "ref_comp": 75, "get_sourc": [75, 564, 892], "ref_": 75, "recognis": 75, "cora": [75, 245, 564, 892], "kim": [75, 245, 564, 892], "nadia": [75, 245, 564], "voggel": [75, 245, 564], "magnetoencephalograph": [75, 245, 564], "108592": [75, 245, 564], "find_ref_artifact": [75, 85], "fnir": [76, 165, 169, 170, 193, 194, 214, 215, 245, 265, 266, 267, 268, 270, 314, 330, 355, 374, 376, 443, 481, 482, 505, 510, 513, 561, 601, 602, 603, 605, 606, 712, 714, 715, 716, 760, 776, 784, 793, 798, 847, 858, 874, 892], "mail": [76, 227, 862], "robertluk": 76, "net": [76, 170, 195, 245, 420, 694, 874, 892], "optical_dens": [76, 211, 882, 892], "temporal_derivative_distribution_repair": [76, 882, 892], "exact": [76, 103, 203, 227, 235, 242, 245, 265, 266, 267, 268, 291, 431, 481, 482, 531, 699, 701, 702, 713, 717, 719, 720, 722, 847, 855, 874, 892], "fnirs_data_fold": [76, 211], "fnirs_motor": [76, 171, 211, 868, 882, 892], "fnirs_cw_amplitude_dir": [76, 211], "raw_intens": [76, 211], "read_raw_nirx": [76, 190, 211, 487, 874, 882, 892], "raw_od": [76, 211], "new_annot": [76, 218], "317": [76, 169, 227, 232], "set_annot": [76, 81, 82, 137, 168, 191, 201, 218, 259, 265, 266, 481, 482, 566, 600, 892], "23238": [76, 211], "2974": [76, 211], "spike": [76, 83, 258, 606, 867], "person": [76, 151, 192, 211, 270, 851, 867, 873], "optod": [76, 190, 211, 513, 603, 760, 776, 868, 892], "corrupted_data": 76, "750": [76, 81, 143, 232, 868], "corrupted_od": 76, "245": [76, 169, 185, 201, 209, 231, 232, 245, 874], "8924": 76, "8923": 76, "suppli": [76, 101, 152, 172, 180, 207, 222, 227, 263, 264, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 362, 389, 438, 448, 449, 481, 482, 564, 579, 605, 606, 653, 712, 715, 783, 784, 803, 892], "corrected_tddr": 76, "said": [76, 175], "fishburn": [76, 245, 606], "ruth": [76, 245, 606], "ludlum": [76, 245, 606], "chandan": [76, 245, 606], "vaidya": [76, 245, 606], "andrei": [76, 245, 606], "medvedev": [76, 245, 606], "tddr": [76, 245, 606, 892], "motion": [76, 245, 568, 606, 892], "025": [76, 128, 136, 140, 146, 149, 169, 191, 199, 202, 224, 227, 245, 585, 606], "620": [76, 81, 85, 232], "fnirs_artifact_remov": [76, 85], "pierreablin": 77, "9009": [77, 172, 205], "run_ica": [77, 892], "t0": [77, 100, 185, 242, 258, 370, 717, 718, 719], "fit_tim": 77, "infomax": [77, 205, 245, 564, 878, 882, 892], "056": [77, 85, 140, 142, 149, 169, 224], "ica_comparison": [77, 85], "evoked_interp": 79, "product": [79, 87, 119, 124, 150, 170, 188, 189, 195, 200, 207, 245, 270, 333, 427, 692, 740, 741, 743, 744, 769, 873, 874, 892], "evoked_interp_mn": 79, "\u03b1": [79, 142, 207, 219], "0e": [79, 195, 207], "interpolate_bad_channel": [79, 85], "bilater": [80, 207, 660, 892], "repeat": [80, 93, 101, 113, 140, 161, 165, 167, 206, 207, 216, 217, 227, 233, 234, 238, 239, 259, 265, 266, 267, 268, 270, 276, 278, 362, 438, 481, 530, 531, 545, 561, 564, 579, 608, 626, 641, 684, 693, 695, 696, 700, 703, 704, 715, 742, 760, 798, 851, 859, 871, 892], "maxwell_filt": [80, 184, 209, 210, 435, 574, 588, 600, 802, 871, 882, 892], "head_po": [80, 81, 209, 210, 435, 588, 599, 663, 664, 665, 677, 892], "chpi": [80, 81, 123, 169, 183, 209, 210, 257, 265, 266, 267, 268, 270, 275, 313, 435, 481, 482, 561, 568, 571, 599, 663, 664, 665, 677, 712, 714, 715, 716, 783, 790, 813, 847, 874, 880, 881, 882, 892], "read_head_po": [80, 209, 210, 344, 346, 352, 354, 435, 588, 599, 663, 664, 665, 677, 882], "simulated_quat": 80, "simulated_movement_raw": 80, "raw_stat": 80, "simulated_stationary_raw": 80, "34208": 80, "955": [80, 83, 143, 232], "backward": [80, 202, 257, 265, 266, 267, 268, 374, 414, 420, 421, 425, 442, 449, 450, 452, 453, 481, 482, 537, 714, 716, 760, 792, 801, 825, 874, 892], "plot_head_posit": [80, 81, 209, 210, 882, 892], "quiver": [80, 263, 760, 788, 802], "306m": [80, 109, 116, 123, 124, 150, 156, 158, 170, 172, 183], "topo_kwarg": [80, 141], "evoked_stat": 80, "naiv": [80, 231], "therebi": [80, 175, 204, 206, 740, 743, 874], "third": [80, 94, 95, 151, 169, 172, 188, 207, 211, 218, 259, 260, 265, 442, 443, 455, 456, 481, 482, 524, 559, 564, 625, 626, 702, 703, 716, 793, 837, 851, 874], "restor": [80, 201, 208, 267, 268, 414, 418, 564, 565, 611, 760, 838, 892], "raw_sss": [80, 172, 210, 257, 481, 482, 502, 599], "evoked_raw_mc": 80, "harmon": [80, 93, 183, 184, 191, 199, 203, 209, 210, 242, 245, 578, 874, 892], "fourth": [80, 202, 218, 472, 874], "cleanli": [80, 169], "evoked_evo_mc": 80, "average_mov": [80, 210, 599, 882, 892], "movement_compens": [80, 85], "contamin": [81, 202, 205, 245, 564], "similarli": [81, 99, 112, 143, 149, 171, 196, 202, 208, 211, 259, 564, 784, 869, 874], "suffer": [81, 867], "adonai": [81, 82, 892], "nune": [81, 82, 245, 672, 892], "bst_auditori": [81, 82, 191, 882], "annotate_mov": [81, 209, 882, 892], "compute_average_dev_head_t": [81, 568, 882, 892], "data_path_meg": 81, "raw_fname1": [81, 191], "s01_aef_20131218_01": [81, 82, 191], "raw_fname2": [81, 191], "s01_aef_20131218_02": [81, 191], "mismatch": [81, 160, 161, 191, 356, 448, 539, 817, 892], "on_mismatch": [81, 191, 356, 363, 365, 838, 892], "264": [81, 82, 151, 169, 191, 209, 245], "s01_20131218_01": [81, 82, 191], "2400": [81, 82, 184, 191], "864000": [81, 82, 191], "263": [81, 82, 169, 191, 196, 209, 210], "eab": [81, 82], "s01": [81, 82], "lt": [81, 115], "br": 81, "gt": 81, "chpi_loc": [81, 209, 344, 346, 347, 348], "extract_chpi_locs_ctf": [81, 344, 346, 882, 892], "compute_head_po": [81, 209, 210, 344, 347, 599, 882, 892], "original_head_dev_t": 81, "invert_transform": [81, 135], "average_head_dev_t": 81, "val": [81, 101], "val_ori": 81, "010": [81, 94, 127, 128, 130, 140, 149, 155, 169, 224, 245], "020": [81, 128, 140, 149, 169, 224], "090": [81, 209], "130": [81, 82, 83, 158, 169, 170, 196, 227, 232, 245, 340, 892], "160": [81, 82, 84, 123, 169, 170, 171, 188, 209, 227, 232, 245, 340, 542, 576, 589, 592, 669, 674], "220": [81, 137, 169, 196, 209, 232], "260": [81, 169, 182, 187, 192, 209, 227, 232, 608, 868], "280": [81, 96, 169, 170, 196, 209, 227, 232, 340, 892], "380": [81, 109, 227, 232], "430": [81, 196], "490": [81, 196, 227, 232], "520": [81, 196, 232], "540": [81, 196, 224, 232, 245, 298, 299], "560": [81, 208, 232], "580": [81, 209, 232], "630": [81, 106, 110, 196, 209, 232], "640": [81, 183, 209, 222, 232], "650": [81, 82, 136, 146, 212, 232], "690": 81, "710": [81, 196, 209, 232, 245, 572], "720": [81, 209, 232, 245, 572], "730": [81, 232], "740": 81, "760": [81, 196, 209, 232], "770": [81, 209, 232], "790": [81, 209], "810": [81, 209], "820": [81, 232], "830": [81, 232], "840": [81, 196, 232], "850": [81, 209, 892], "870": [81, 195, 232, 245, 696], "880": [81, 180, 209, 232, 245, 298, 299], "890": [81, 209, 232, 245, 278], "920": [81, 101, 143, 228, 232], "940": [81, 232], "950": [81, 209, 242], "970": [81, 209, 232], "980": [81, 196, 205, 209, 232], "990": [81, 137, 209, 232], "353": [81, 112, 169, 196], "355": [81, 109, 112, 152, 154, 169, 232], "356": [81, 109, 112, 169, 227, 232], "357": [81, 109, 169, 202, 232], "358": [81, 112, 169, 227, 232], "369": [81, 112, 169, 209, 227, 232, 245, 531, 672, 874], "361": [81, 112, 169, 196, 232, 236], "362": [81, 112, 169, 223, 228], "363": [81, 169, 227, 232], "368": [81, 112, 169, 171, 196, 232, 235], "371": [81, 169, 195, 227, 232], "372": [81, 169, 196, 209, 232], "373": [81, 169, 209, 232], "376": [81, 93, 94, 95, 149, 166, 167, 169, 179, 195, 216, 232], "377": [81, 232], "379": [81, 195, 196, 209, 224, 226], "382": [81, 91, 227, 245, 672], "386": [81, 196, 209, 227, 232], "388": [81, 196, 227, 232, 245], "389": [81, 118, 130, 209, 232], "391": [81, 196, 209, 227, 232], "392": [81, 232], "393": [81, 227], "394": [81, 145, 148, 196, 209, 232, 694], "397": [81, 196, 209, 227, 232], "405": [81, 196, 232], "406": [81, 227, 232], "407": [81, 196, 232], "409": [81, 119, 196, 209, 232, 245, 777], "mean_distance_limit": [81, 568], "0015": 81, "annotation_mov": 81, "hpi_disp": [81, 568], "disp": 81, "0015m": 81, "0038m": 81, "new_dev_head_t": 81, "show_ax": [81, 123, 125, 156, 157, 159, 182, 183, 315, 776, 809, 892], "outer_skin": [81, 109, 118, 156, 158, 159, 161, 172, 776, 867, 868, 874], "ctf_275": [81, 123, 184], "898": [81, 85, 151, 164, 232], "movement_detect": [81, 85], "contract": [82, 873], "clench": [82, 205], "jaw": [82, 205], "swallow": [82, 199, 205], "twitch": 82, "cranial": 82, "notic": [82, 84, 140, 141, 143, 145, 149, 150, 151, 156, 160, 162, 166, 167, 170, 175, 191, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 216, 218, 219, 222, 223, 588, 851], "annotate_muscle_zscor": [82, 882, 892], "taken": [82, 94, 137, 142, 192, 200, 204, 206, 207, 232, 235, 242, 258, 259, 267, 268, 270, 271, 275, 276, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 480, 481, 482, 542, 597, 617, 713, 724, 800, 813, 868, 873, 892], "analyt": [82, 113, 245, 265, 266, 267, 268, 481, 482, 892], "divid": [82, 101, 127, 142, 143, 144, 147, 148, 162, 165, 210, 227, 229, 232, 265, 266, 267, 268, 270, 271, 272, 273, 276, 279, 280, 281, 288, 479, 481, 482, 523, 547, 548, 569, 572, 576, 599, 633, 689, 699, 702, 712, 714, 715, 716, 727, 735, 792, 816, 820, 847, 871, 875, 892], "squar": [82, 113, 128, 140, 149, 150, 151, 162, 168, 169, 178, 189, 202, 216, 222, 224, 227, 229, 240, 245, 262, 265, 266, 267, 268, 272, 273, 274, 276, 279, 280, 281, 298, 299, 329, 414, 421, 458, 481, 482, 539, 546, 563, 564, 579, 692, 697, 699, 700, 702, 703, 712, 713, 714, 716, 760, 777, 785, 786, 792, 794, 799, 801, 803, 806, 812, 815, 818, 820, 822, 823, 847, 871, 874, 877, 892], "hundr": [82, 205, 206, 472, 849], "bad_muscl": [82, 569], "min_length_good": [82, 569], "fraction": [82, 113, 144, 175, 199, 205, 227, 328, 537, 546, 564, 583, 707, 804, 873, 892], "notch": [82, 191, 203, 212, 349, 453, 481, 482], "1981": 82, "603": [82, 232], "scores_muscl": [82, 569], "threshold_muscl": 82, "annot_muscl": 82, "filter_freq": [82, 569], "zscore": [82, 288, 547, 548, 564, 712, 715, 820], "144": [82, 169, 171, 196, 204, 209, 211, 227, 232, 278, 892], "164": [82, 169, 202, 227, 231, 232, 234, 245, 699, 700, 702, 703], "muscle_detect": [82, 85], "gross": [83, 245, 414], "widespread": [83, 205], "recover": 83, "ubiquit": 83, "postur": [83, 205], "mainten": [83, 207, 851, 892], "appropri": [83, 146, 149, 162, 166, 182, 183, 190, 201, 205, 207, 210, 222, 227, 229, 231, 242, 245, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 320, 326, 362, 392, 393, 481, 482, 527, 542, 698, 760, 784, 813, 818, 823, 849, 851, 866, 871, 874, 877, 892], "wouldn": [83, 892], "pronounc": [83, 202, 871], "simultan": [83, 137, 142, 192, 196, 203, 205, 213, 219, 422, 472, 505, 525, 613, 621, 701, 868, 874, 880, 892], "18019": 83, "1983": [83, 204, 245, 264, 265, 266, 267, 268, 563, 614, 712, 715], "18020": 83, "exclus": [83, 170, 200, 205, 498, 559, 564, 804, 806, 807, 892], "mdash": [83, 205], "plot_sourc": [83, 205, 265, 266, 481, 482, 564, 790, 807, 813, 892], "85861": 83, "103880": 83, "criteria": [83, 140, 166, 201, 206, 207, 211, 258, 265, 266, 275, 559, 564, 892], "slope": [83, 188, 202, 257, 258, 270, 343, 344, 506, 564, 892], "peripher": [83, 564], "pole": [83, 160], "foci": [83, 760, 892], "blob": [83, 235, 236], "worth": [83, 101, 149, 228, 245, 397, 489, 496, 851, 868, 869, 871], "fire": 83, "fuzzi": 83, "textbook": [83, 206, 245, 694], "temporali": 83, "ear": [83, 166, 170, 180, 868], "muscle_idx": [83, 564], "log_scal": [83, 564, 805], "blink_idx": 83, "heartbeat_idx": 83, "muscle_idx_auto": 83, "find_bads_muscl": [83, 564, 892], "s001r01": 83, "529": [83, 196, 232], "s002": [83, 205], "s002r01": 83, "dhani": [83, 245, 564], "dharmaprani": [83, 245, 564], "hoang": [83, 245, 564], "nguyen": [83, 245, 564], "trent": [83, 245, 564], "lewi": [83, 245, 564, 874], "delosangel": [83, 245, 564], "willoughbi": [83, 245, 564], "kenneth": [83, 144, 245, 438, 564], "pope": [83, 245, 564], "38th": [83, 245, 564], "annual": [83, 207, 245, 564, 876], "confer": [83, 144, 245, 301, 438, 564, 876], "societi": [83, 190, 245, 356, 531, 564, 741, 744, 874], "embc": [83, 205, 245, 564], "orlando": [83, 245, 564], "fl": [83, 245, 564], "usa": [83, 199, 245, 564], "7590828": [83, 245, 564], "muscle_ica": [83, 85], "otp": [84, 85, 607], "flux": [84, 210, 212, 265, 266, 267, 268, 481, 482, 561, 712, 714, 715, 716, 874], "jump": [84, 112, 144, 199, 210, 699, 700, 702, 703, 892], "bst_phantom_elekta": [84, 183], "phantom": [84, 165, 186, 187, 245, 262, 263, 265, 267, 268, 270, 304, 356, 361, 393, 434, 455, 457, 481, 492, 494, 527, 599, 776, 788, 800, 828, 868, 874, 892], "rid": [84, 231], "1522": [84, 169], "dipole_numb": 84, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [84, 183], "47000": [84, 183], "437999": [84, 183], "437": [84, 137, 183, 196, 209, 232], "alongsid": [84, 145, 149, 155, 200, 205, 206, 208, 217, 811, 847, 858], "oversampled_temporal_project": [84, 882, 892], "lump": [84, 599], "compute_bia": 84, "sti201": [84, 183, 270], "make_sphere_model": [84, 125, 156, 183, 184, 185, 208, 520, 874, 882, 892], "r0": [84, 125, 156, 183, 184, 185, 527], "head_radiu": [84, 125, 156, 183, 184, 185, 527, 892], "036": [84, 140, 149, 169, 183, 224, 245, 672], "actual_po": [84, 183, 185], "get_phantom_dipol": [84, 183, 393, 882, 892], "1fmm": 84, "worst": [84, 121, 356, 361, 668, 670, 671, 892], "bias_clean": 84, "2mm": [84, 874], "4mm": 84, "samu": [84, 162, 210, 245, 575, 599, 607, 677, 871, 892], "taulu": [84, 162, 210, 245, 435, 575, 599, 607, 677, 871, 892], "1013": [84, 169, 245, 607], "2734641": [84, 245, 607], "962": 85, "auto_examples_preprocess": 85, "169": [85, 99, 123, 169, 196, 227, 245, 698], "virtual_evok": [85, 87], "xdawn_denois": [85, 88], "135": [85, 118, 125, 151, 158, 169, 171, 196, 206, 207, 208, 227, 232, 245, 278, 874], "shift_evok": [85, 86], "hut": 86, "2332": [86, 169, 558], "ax3": [86, 90, 99, 183, 195], "magnomet": 87, "virt_evok": 87, "as_typ": [87, 265, 266, 267, 268, 892], "plot_epochs_imag": [88, 117, 564, 803, 805, 882, 892], "signal_cov": [88, 565], "xd": 88, "1388": 88, "41640": 88, "epochs_denois": 88, "brief": [90, 95, 166, 199, 219, 227, 851], "simplest": [90, 95, 168, 196, 212, 227, 874], "kostiantyn": [90, 94, 95, 245, 672, 892], "maksymenko": [90, 94, 95, 245, 672, 892], "functool": [90, 227, 272, 273, 276, 279, 280, 281, 851], "partial": [90, 149, 151, 166, 201, 216, 217, 227, 245, 265, 266, 272, 273, 276, 279, 280, 281, 320, 601, 741, 744, 760, 784, 825, 829, 868, 880, 892], "region_localization_error": [90, 882], "f1_score": [90, 882], "precision_scor": [90, 882], "recall_scor": [90, 882], "cosine_scor": [90, 882], "peak_position_error": [90, 882], "spatial_deviation_error": [90, 882], "determinist": [90, 205, 892], "middl": [90, 95, 112, 160, 166, 202, 206, 222, 263, 270, 272, 273, 276, 279, 280, 281, 450, 779, 788, 818, 823, 824, 851, 874, 892], "frontal": [90, 95, 166, 199, 205, 207, 213, 216, 224, 307, 646, 760], "selected_label": [90, 95], "term": [90, 103, 126, 166, 168, 195, 202, 206, 227, 231, 237, 242, 264, 265, 266, 267, 268, 332, 343, 380, 381, 382, 391, 539, 551, 573, 578, 672, 712, 715, 727, 728, 735, 738, 742, 847, 851, 868, 873, 874, 875, 880, 892], "label_region": 90, "select_sourc": [90, 95, 882, 892], "1915": 90, "One": [90, 96, 97, 100, 141, 143, 149, 150, 151, 155, 157, 166, 171, 178, 191, 202, 204, 205, 212, 216, 227, 245, 265, 266, 267, 268, 275, 314, 316, 441, 447, 481, 482, 564, 694, 701, 778, 790, 791, 807, 813, 851, 867, 874, 876, 877, 892], "label_dipol": 90, "source_time_seri": [90, 94, 95], "sin": [90, 92, 93, 94, 95, 114, 202, 222, 223, 224, 343, 608, 678], "n_event": [90, 95, 260, 265, 266, 270, 275, 284, 365, 442, 443, 455, 481, 482, 498, 524, 559, 567, 591, 613, 623, 625, 626, 662, 698, 715, 790, 793, 837, 847], "sourcesimul": [90, 94, 95, 677, 882, 892], "source_simulator_region": 90, "add_data": [90, 94, 95, 116, 272, 273, 276, 279, 280, 281, 662, 760, 818, 823], "source_simulator_dipol": 90, "gaussian": [90, 94, 114, 121, 152, 161, 162, 202, 205, 223, 227, 265, 266, 267, 268, 476, 597, 666, 728, 738, 741, 742, 744, 791, 800, 821, 867, 871, 874], "raw_region": 90, "simulate_raw": [90, 93, 94, 95, 224, 664, 665, 676, 678, 679, 882, 892], "make_ad_hoc_cov": [90, 93, 95, 224, 262, 299, 882, 892], "add_nois": [90, 93, 94, 95, 224, 664, 665, 677, 882, 892], "iir_filt": [90, 92, 93, 95, 224, 666, 676], "raw_dipol": 90, "cos2": [90, 93, 94, 95, 224, 663, 664, 665, 677], "498": [90, 196, 227, 232], "evoked_region": 90, "evoked_dipol": 90, "stc_true_region": 90, "get_stc": [90, 94, 662], "start_sampl": [90, 216, 662], "stop_sampl": [90, 216, 662], "stc_true_dipol": 90, "stc_est_region": 90, "stc_est_dipol": 90, "0004": 90, "2931": 90, "34986e": 90, "scorer": [90, 420, 431, 892], "rle": [90, 672], "region_result": 90, "thx": 90, "per_sampl": [90, 667, 668, 669, 670, 671, 672, 673, 674], "ax4": 90, "col": [90, 112, 760, 892], "super": [90, 242], "ticklabel_format": 90, "style": [90, 127, 150, 151, 171, 188, 211, 257, 260, 262, 265, 266, 267, 268, 275, 280, 281, 298, 414, 420, 421, 473, 481, 482, 506, 563, 564, 712, 714, 715, 716, 760, 776, 777, 784, 791, 792, 795, 797, 798, 799, 807, 808, 813, 815, 820, 821, 822, 824, 892], "sci": [90, 211, 603], "scilimit": 90, "tweak": [90, 114, 127, 242, 849, 869, 871], "dipole_result": 90, "063": [90, 91], "215": [90, 91, 169, 196, 209, 227, 232, 245, 580], "plot_stc_metr": [90, 91], "auto_examples_simul": 91, "simulated_raw_data_using_subject_anatomi": [91, 94], "795": [91, 94, 144, 232], "simulate_raw_data": [91, 93], "209": [91, 93, 169, 184, 202, 209, 227, 231, 232, 237, 239, 245], "source_simul": [91, 94, 95], "032": [91, 95, 140, 149, 169, 224, 228, 245], "162": [91, 95, 169, 196, 227, 231, 232, 245, 278], "simulate_evoked_data": [91, 92], "094": [91, 92, 116, 130, 216, 221], "fit_iir_model_raw": [92, 111, 882, 892], "templat": [92, 93, 125, 135, 155, 157, 163, 164, 165, 170, 176, 232, 245, 269, 270, 278, 285, 304, 314, 318, 319, 320, 330, 331, 332, 336, 367, 376, 392, 439, 482, 496, 526, 579, 596, 618, 641, 661, 776, 828, 847, 865, 892], "read_proj": [92, 111, 131, 142, 191, 206, 265, 266, 267, 268, 275, 481, 482, 843, 882], "sample_audvis_ecg": [92, 111, 131, 142, 172, 206, 257], "randomst": [92, 93, 94, 114, 159, 195, 202, 224, 227, 516, 564, 597, 616, 664, 665, 666, 675, 676, 678, 699, 700, 701, 702, 703, 892], "randn": [92, 114, 159, 195, 202, 224, 227, 235, 236, 237], "high_resolut": [92, 819], "wronkiewicz": [93, 892], "wronk": 93, "add_ecg": [93, 94, 665, 677, 882, 892], "add_eog": [93, 94, 664, 677, 882, 892], "epoch_dur": [93, 572], "stagger": 93, "sinusoid": [93, 94, 114, 183, 184, 202, 209, 222, 224, 343, 453, 481, 482, 678, 847], "10hz": 93, "global": [93, 113, 121, 128, 142, 144, 149, 150, 155, 162, 166, 183, 207, 245, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 438, 758, 784, 791, 794, 797, 799, 800, 818, 823, 847, 851, 871, 892], "n_samp": [93, 216, 224, 892], "25e": 93, "1e9": [93, 184, 224], "plt_show": [93, 180, 227], "input": [93, 94, 114, 155, 172, 188, 195, 196, 202, 207, 210, 213, 216, 227, 231, 232, 237, 257, 265, 266, 267, 268, 271, 272, 273, 276, 279, 280, 281, 284, 316, 332, 357, 358, 359, 363, 371, 414, 415, 417, 418, 420, 421, 422, 424, 426, 431, 438, 443, 449, 471, 473, 478, 481, 482, 506, 508, 564, 565, 573, 574, 576, 577, 581, 582, 588, 589, 594, 612, 626, 678, 689, 691, 698, 699, 700, 702, 703, 710, 712, 730, 731, 760, 761, 763, 764, 776, 784, 791, 795, 799, 807, 818, 821, 823, 867, 873, 874, 877, 892], "millimet": [93, 94, 156, 160, 182, 337, 341, 457, 472, 497, 516, 623, 874, 892], "calc": 93, "orphan": 93, "ivana": [94, 892], "kojcic": [94, 892], "deslauri": [94, 95, 892], "gauthier": [94, 95, 892], "sam": [94, 95, 892], "doesn": [94, 140, 156, 170, 171, 205, 207, 208, 210, 216, 229, 232, 242, 380, 381, 382, 385, 386, 387, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 553, 564, 567, 582, 590, 599, 619, 658, 713, 715, 732, 805, 851, 867, 871, 892], "fname_info": 94, "g_temp_sup": 94, "g_t_transv": 94, "s_calcarin": 94, "vice": [94, 134, 160, 202, 276, 874], "versa": [94, 134, 160, 202, 276, 874], "moreov": [94, 137, 206, 207, 227], "ipsilater": [94, 151, 176], "activation_list": 94, "region_nam": 94, "latenc": [94, 143, 144, 145, 149, 232, 245, 267, 268, 272, 273, 276, 279, 280, 281, 438, 699, 700, 702, 703, 795, 892], "sigma": [94, 117, 128, 137, 142, 196, 227, 265, 266, 527, 705, 706, 728, 738, 742, 750, 791, 821, 874, 877], "gf": 94, "rand": [94, 224], "100m": 94, "30m": 94, "15m": 94, "region_id": 94, "events_tmp": 94, "label_tmp": 94, "amplitude_tmp": 94, "latency_tmp": 94, "wf_tmp": 94, "evoked_aud_left": 94, "evoked_vis_right": 94, "mere": [94, 172, 205, 629, 873], "stc_aud": 94, "stc_vi": 94, "stc_diff": 94, "49264": [94, 178], "64e": [94, 178], "32542029": 94, "92022543": 94, "5110744": 94, "christoph": [94, 115, 151, 155, 195, 245, 356, 420, 696, 892], "destrieux": [94, 155, 245], "ander": [94, 155, 178, 245, 531, 874], "dale": [94, 155, 178, 245, 531, 874], "halgren": [94, 155, 245, 531], "sulci": [94, 155, 160, 223, 245], "nomenclatur": [94, 155, 216, 245], "sine": [95, 222, 257, 727, 735], "everi": [95, 103, 113, 127, 141, 144, 151, 168, 172, 175, 196, 203, 204, 205, 219, 242, 260, 264, 265, 266, 267, 268, 350, 463, 471, 478, 479, 516, 564, 566, 581, 582, 586, 597, 616, 664, 665, 666, 675, 676, 678, 699, 700, 701, 702, 703, 712, 715, 851, 871, 872], "significantli": [96, 97, 100, 227, 230, 235, 236, 242, 272, 273, 276, 279, 280, 281, 699, 700, 702, 703, 873, 892], "permutation_cluster_test": [96, 227, 230, 231, 703, 882, 892], "1332": [96, 97, 145, 166, 169, 229, 230, 231], "epochs1": [96, 235, 437], "condition1": [96, 235], "epochs2": [96, 235, 437], "condition2": [96, 235], "t_ob": [96, 228, 229, 235, 699, 701, 702, 892], "cluster_p_valu": [96, 229, 230, 231, 235, 236, 237], "n_permut": [96, 100, 112, 227, 228, 229, 230, 231, 232, 236, 237, 699, 700, 701, 702, 703], "tail": [96, 112, 151, 227, 229, 230, 231, 232, 235, 242, 263, 699, 700, 701, 702, 703, 788, 819, 892], "out_typ": [96, 112, 227, 229, 230, 231, 699, 700, 702, 703, 892], "stat_fun": [96, 112, 113, 227, 228, 229, 230, 231, 232, 235, 236, 237, 691, 699, 700, 702, 703], "000227": 96, "167093": 96, "3432": 96, "593": [96, 232], "4378": 96, "752": [96, 160, 164, 195, 232], "4447": 96, "913": [96, 144, 232], "4499": 96, "erf": [96, 117, 128, 191, 199, 202, 232, 245, 564, 803, 805, 858, 892], "i_c": 96, "713": [96, 102, 151, 209, 232], "cluster_stats_evok": [96, 102], "discoveri": [97, 231, 245, 696, 892], "bonferroni_correct": [97, 227, 882, 892], "fdr_correct": [97, 101, 227, 231, 882], "pval": [97, 231, 690, 696, 699, 700, 702, 703], "ttest_1samp": [97, 227, 705], "n_test": [97, 701], "threshold_uncorrect": 97, "ppf": [97, 211, 227, 229, 232, 235, 236, 601, 699, 700, 702, 703], "reject_bonferroni": 97, "pval_bonferroni": 97, "threshold_bonferroni": 97, "reject_fdr": 97, "pval_fdr": 97, "indep": [97, 696], "threshold_fdr": 97, "xmin": 97, "xmax": 97, "hline": [97, 141, 267, 268, 794], "uncorrect": [97, 227], "bonferroni": [97, 453, 481, 482, 690, 701, 892], "673": [97, 102, 196, 209, 232], "fdr_stats_evok": [97, 102], "generalis": 99, "tradit": [99, 143, 208, 212, 739, 740, 742, 743, 784], "predictor": [99, 141, 227, 563, 614, 698], "inapplic": 99, "rerp": [99, 245, 698], "smith": [99, 126, 227, 228, 245, 391, 698, 699, 700, 702, 703], "kuta": [99, 245, 698], "jona": [99, 101, 128, 196, 232, 245, 699, 700, 702, 703, 892], "sassenhagen": [99, 101, 128, 196, 232, 245, 699, 700, 702, 703, 892], "linear_regression_raw": [99, 102, 882, 892], "rerf": 99, "param": [99, 113, 414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 553, 565, 638, 892], "permutation_t_test": [100, 227, 882, 892], "temporal_mask": 100, "logical_and": [100, 114], "50000": 100, "p_valu": [100, 227, 232, 453, 481, 482, 701], "significant_sensor": 100, "significant_sensors_nam": 100, "49999": 100, "0243": [100, 142, 169], "1323": [100, 169], "1333": [100, 169, 209, 235, 237], "1613": [100, 169], "1643": [100, 169, 195], "2423": [100, 169], "2622": [100, 169], "2632": [100, 169], "2642": [100, 169], "2643": [100, 169], "stats_pick": 100, "cbar_fmt": [100, 109, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 792, 799, 803, 812, 815, 820, 892], "342": [100, 102, 112, 113, 121, 162, 169, 196, 232, 245, 267, 268, 356, 800, 871], "sensor_permutation_test": [100, 102], "psycholinguist": [101, 227], "st\u00e9phane": [101, 228, 245, 397, 868], "dufau": [101, 228, 245, 397, 868], "grainger": [101, 228, 245, 397, 868], "katherin": [101, 228, 245, 397, 741, 744, 868], "midglei": [101, 228, 245, 397, 868], "phillip": [101, 141, 228, 245, 392, 397, 868, 892], "holcomb": [101, 228, 245, 397, 868], "pictur": [101, 228, 245, 275, 397, 868], "snapshot": [101, 172, 228, 245, 397, 830, 851, 868, 892], "megastudi": [101, 228, 245, 397, 868], "psycholog": [101, 228, 245, 397, 868], "1887": [101, 228, 245, 397, 868], "1897": [101, 228, 245, 397, 868], "0956797615603934": [101, 228, 245, 397, 868], "matt": [101, 245, 892], "davi": [101, 245], "ford": [101, 245], "friedmann": [101, 245], "pulverm\u00fcl": [101, 245], "william": [101, 195, 245, 420], "marslen": [101, 245], "wilson": [101, 245], "1383": [101, 245], "1400": [101, 245], "2006": [101, 178, 195, 210, 245, 265, 266, 542, 599, 669, 674, 741, 744], "2005": [101, 162, 210, 245, 435, 542, 575, 599, 669, 672, 674, 871], "048": [101, 140, 142, 149, 169, 183, 219, 224, 228, 245, 726, 728, 738, 742], "tal": [101, 120, 126, 245, 489, 496, 892], "linzen": [101, 120, 892], "pd": [101, 112, 136, 143, 151, 190, 191, 210], "kiloword": [101, 143, 171, 216, 228, 882], "kword_metadata": [101, 143, 228], "epo": [101, 140, 143, 172, 228, 257, 265, 266, 622, 892], "read_epoch": [101, 140, 143, 228, 871, 874, 882, 892], "visualcomplex": [101, 143], "film": [101, 143, 228, 880], "783710": [101, 143], "cent": [101, 143], "141553": [101, 143], "shot": [101, 143], "600033": [101, 143], "cold": [101, 143], "657457": [101, 143], "945661": [101, 143], "characterist": [101, 151, 202, 203, 245, 265, 266, 406, 437, 449, 588, 847], "concret": [101, 143, 144], "imagin": [101, 112, 206], "df": [101, 112, 140, 145, 191, 216, 227, 228, 229, 235, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 547, 699, 702, 712, 714, 715, 716], "cut": [101, 112, 113, 180, 206, 242, 257, 265, 266, 267, 268, 416, 425, 450, 452, 481, 482, 576, 577, 590, 593, 599, 603, 859, 877, 892], "split_legend": [101, 232, 784], "percentil": [101, 135, 136, 146, 265, 266, 272, 273, 275, 276, 279, 280, 281, 481, 482, 748, 779, 784, 790, 813, 818, 823, 824, 892], "gfp": [101, 113, 128, 142, 144, 150, 162, 166, 191, 232, 265, 266, 267, 268, 539, 564, 784, 791, 794, 800, 804, 817, 847, 871, 892], "7424": 101, "plot_evoked_imag": [101, 882, 892], "null": [101, 284, 440, 694, 892], "hypothesi": [101, 172, 228, 690, 694, 696, 701, 880], "colour": [101, 176, 892], "palett": [101, 112, 145], "dark": [101, 171, 172, 265, 266, 481, 482, 564, 760, 790, 807, 813, 892], "reject_h0": 101, "fdr_pval": 101, "plot_imag": [101, 128, 142, 143, 146, 150, 166, 199, 201, 211, 228, 265, 266, 267, 268, 892], "sensor_regress": [101, 102], "729": [102, 183, 184, 185, 232], "auto_examples_stat": 102, "csd_fourier": [103, 713, 717, 718, 719, 721, 722, 882, 892], "csd_multitap": [103, 713, 717, 718, 719, 720, 721, 730, 882, 892], "core": [103, 144, 166, 168, 171, 189, 222, 245, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 417, 424, 427, 430, 431, 457, 470, 472, 481, 482, 522, 525, 526, 537, 538, 547, 548, 569, 576, 577, 599, 651, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 792, 795, 814, 849, 850, 851, 858, 873, 892], "clariti": [103, 878], "adapt": [103, 113, 166, 190, 208, 224, 227, 245, 265, 266, 267, 268, 298, 299, 419, 453, 454, 481, 482, 537, 538, 564, 599, 714, 716, 719, 722, 728, 730, 738, 756, 792, 851, 857, 868, 873, 892], "csd_fft": 103, "csd_mt": 103, "convolv": [103, 111, 202, 227, 242, 420, 427], "600hz": 103, "enough": [103, 158, 180, 203, 204, 205, 207, 210, 216, 227, 242, 262, 265, 266, 267, 268, 270, 274, 307, 308, 314, 414, 421, 433, 481, 482, 563, 564, 579, 707, 712, 714, 715, 716, 769, 777, 784, 790, 792, 794, 796, 799, 800, 803, 807, 810, 812, 813, 814, 815, 816, 820, 822, 855, 873, 874, 892], "10th": 103, "greatli": 103, "minim": [103, 141, 169, 202, 222, 242, 265, 266, 362, 422, 437, 574, 698, 740, 743, 760, 849, 855, 871, 874], "csd_wav": 103, "crossspectraldens": [103, 291, 298, 319, 439, 717, 718, 719, 720, 721, 722, 723, 729, 732, 786, 882, 892], "trick": [103, 200, 242, 245, 701, 855, 892], "comma": [103, 257, 851, 892], "plot_dict": [103, 241], "compute_csd": [103, 106], "taper": [104, 114, 265, 266, 267, 268, 419, 427, 453, 481, 482, 537, 538, 714, 716, 719, 722, 724, 730, 740, 743, 792, 892], "prolat": [104, 240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 724, 730], "spheroid": [104, 240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 724, 730], "sequenc": [104, 137, 245, 257, 265, 266, 267, 268, 481, 482, 689, 714, 716, 724, 760, 792, 868, 874], "compute_source_psd_epoch": [104, 106, 537, 882, 892], "n_epochs_us": 104, "psd_avg": 104, "set_xlim": [104, 113, 151, 206], "auto_examples_time_frequ": 106, "source_power_spectrum_opm": [106, 109], "336": [106, 109, 112, 169, 171, 196, 209, 227, 232, 892], "time_frequency_erd": [106, 112, 892], "585": [106, 112, 196, 232, 245], "224": [106, 169, 171, 188, 196, 227, 231], "time_frequency_global_field_pow": [106, 113], "856": [106, 196, 211, 215, 232], "time_frequency_simul": [106, 114], "995": [106, 114, 195, 222, 232], "source_label_time_frequ": [106, 107], "582": [106, 107, 232, 245], "source_space_time_frequ": [106, 110], "source_power_spectrum": [106, 108], "temporal_whiten": [106, 111], "former": [107, 142, 231, 356, 564, 873, 892], "latter": [107, 142, 151, 168, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 565, 874], "source_induced_pow": [107, 882, 892], "epochs_induc": 107, "subtract_evok": [107, 113, 204, 265, 266, 614, 892], "this_epoch": 107, "inter": [107, 245, 262, 265, 266, 267, 268, 274, 283, 414, 421, 438, 481, 482, 563, 564, 579, 664, 712, 714, 716, 739, 740, 742, 743, 777, 792, 799, 803, 812, 815, 820, 822], "itc": [107, 739, 740, 741, 742, 743, 744], "baseline_mod": [107, 547, 548], "compute_source_psd": [108, 109, 538, 882, 892], "100hz": 108, "2048": [108, 111, 114, 133, 265, 266, 267, 268, 413, 481, 482, 537, 814], "psd_dspm": 108, "neuromag": [109, 156, 158, 160, 166, 168, 183, 185, 200, 207, 210, 216, 217, 218, 257, 258, 263, 265, 266, 267, 268, 270, 275, 322, 434, 455, 481, 482, 492, 498, 506, 513, 599, 621, 646, 714, 716, 790, 793, 798, 813, 847, 863, 868, 874, 877, 892], "welch": [109, 224, 240, 241, 242, 245, 265, 266, 267, 268, 481, 482, 714, 716, 731, 814, 892], "next_fast_len": 109, "src_fname": [109, 235, 236, 237], "vv_fname": 109, "squid_resting_st": 109, "vv_erm_fnam": 109, "squid_empty_room": 109, "vv_trans_fnam": 109, "opm_fnam": 109, "opm_resting_state_raw": 109, "opm_erm_fnam": 109, "opm_empty_room_raw": 109, "opm_tran": 109, "opm_coil_def_fnam": 109, "vv": 109, "simplifi": [109, 179, 202, 245, 257, 265, 266, 267, 268, 481, 482, 871, 872, 892], "housekeep": [109, 212], "raw_erm": [109, 129, 184, 191, 867], "new_sfreq": 109, "nyquist": [109, 202, 203, 892], "meg2233": 109, "meg1842": 109, "hold": [109, 191, 224, 227, 265, 266, 267, 268, 270, 435, 481, 482, 588, 599, 710, 794, 814, 816, 847, 874, 880], "61999": 109, "60999": 109, "dist": [109, 156, 157, 211, 223, 257, 271, 278, 283, 367, 433, 466, 605, 682, 683, 684, 686, 687, 877], "make_bem_solut": [109, 158, 191, 367, 433, 464, 520, 526, 527, 618, 619, 648, 650, 840, 867, 874, 882, 892], "169022": 109, "169992": 109, "202": [109, 169, 209, 228, 232, 877, 892], "2052": 109, "995623": 109, "029776": 109, "088592": 109, "062622": 109, "916188": 109, "395825": 109, "069381": 109, "399641": 109, "914042": 109, "993107": 109, "074371": 109, "090590": 109, "079171": 109, "995577": 109, "050589": 109, "086427": 109, "057412": 109, "994603": 109, "691": [109, 195, 196, 232], "334": [109, 112, 169, 195, 209, 227, 232], "692": [109, 144, 242], "percentag": [109, 205, 265, 266, 566, 668, 669, 670, 671, 672, 674, 748, 789, 892], "freq_band": [109, 137], "topo": [109, 115, 142, 150, 211, 241, 265, 266, 763, 773, 784, 821, 880, 892], "stc_psd": [109, 537], "sensor_psd": [109, 537], "return_sensor": [109, 537, 538], "topo_norm": 109, "keepdim": [109, 137], "stc_norm": 109, "3660": 109, "1969": 109, "014611": 109, "18765e": 109, "291": [109, 169, 227, 232], "34378": 109, "07671e": 109, "3720": 109, "1698": 109, "007069": 109, "0841e": 109, "46031": 109, "26253e": 109, "coverag": 109, "worthwhil": [109, 151, 205], "plot_band": 109, "inferno": [109, 136, 227], "cau": 109, "show_trac": [109, 127, 135, 272, 273, 276, 279, 280, 281, 760, 818, 823, 892], "fig_alpha": 109, "brain_alpha": [109, 273, 279, 281, 823], "7033039": 109, "9654317": 109, "07428314": 109, "profil": [109, 171, 212, 849, 851], "beneath": 109, "fig_beta": 109, "brain_beta": 109, "18694376": 109, "33488803": 109, "88328024": 109, "fig_beta_opm": 109, "brain_beta_opm": 109, "28867831": 109, "68102302": 109, "8757832": 109, "source_band_induced_pow": [110, 882, 892], "use_fft": [110, 112, 241, 427, 547, 548, 718, 721, 737, 739, 740, 742, 743], "induced_power_": 110, "proj_fnam": [111, 191], "20000": 111, "innov": 111, "d_": 111, "lfilter": [111, 265, 266, 267, 268, 449, 450, 452, 453, 481, 482], "regener": [111, 265, 266, 892], "r_": [111, 669, 674, 874], "dummi": [111, 125, 222, 237], "nfft": [111, 224], "written": [112, 171, 172, 175, 192, 209, 218, 261, 305, 309, 446, 447, 480, 481, 482, 633, 639, 837, 842, 845, 858, 867, 880, 892], "desynchron": [112, 241, 245, 868], "conceptu": [112, 151, 202, 205, 245], "ersp": [112, 892], "perturb": 112, "goal": [112, 137, 851, 869, 873, 880], "35hz": 112, "customari": [112, 874], "klotzsch": [112, 892], "cb": 112, "mpg": 112, "twoslopenorm": 112, "seaborn": [112, 145, 210], "sn": [112, 145, 210], "tfr_multitap": [112, 114, 241, 427, 739, 740, 741, 742, 744, 882, 892], "permutation_cluster_1samp_test": [112, 227, 229, 702, 882, 892], "pcluster_test": 112, "961": [112, 159, 160, 164, 195, 232], "suitabl": [112, 146, 159, 161, 213, 229, 231, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 308, 355, 376, 413, 438, 469, 481, 482, 505, 520, 699, 712, 714, 715, 716, 847, 867, 868, 874, 880], "cnorm": [112, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 892], "asymmetr": [112, 775], "thing": [112, 141, 145, 151, 160, 171, 172, 181, 188, 200, 202, 216, 224, 232, 235, 237, 314, 481, 482, 851, 871, 892], "rdbu": 112, "equal": [112, 140, 147, 148, 149, 151, 165, 168, 172, 175, 176, 180, 199, 202, 218, 219, 235, 237, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 275, 287, 298, 299, 319, 355, 356, 360, 361, 372, 373, 374, 414, 421, 422, 427, 437, 439, 457, 458, 471, 476, 478, 479, 481, 482, 498, 523, 531, 542, 547, 548, 563, 564, 576, 582, 597, 604, 605, 630, 668, 693, 694, 699, 700, 702, 703, 704, 706, 707, 712, 714, 715, 716, 731, 777, 778, 784, 788, 791, 792, 793, 794, 796, 799, 800, 815, 816, 820, 822, 847, 873, 874, 878, 892], "promin": [112, 143, 199, 211, 242, 357, 358, 359], "extrem": [112, 142, 242, 267, 268, 298, 299, 323, 356, 360, 361, 372, 373, 374, 414, 421, 422, 457, 458, 476, 478, 479, 542, 699, 700, 702, 703, 800], "vcenter": 112, "step_down_p": [112, 699, 700, 702, 703], "buffer_s": [112, 227, 231, 232, 235, 236, 237, 534, 699, 700, 702, 703], "tfr_ev": 112, "gridspec_kw": [112, 127, 176, 211], "width_ratio": [112, 176, 211], "stack": [112, 141, 224, 235, 658, 755, 757, 855, 856, 859], "mask_styl": [112, 267, 268, 712, 796], "set_yscal": 112, "724718": 112, "552076": 112, "183231": 112, "308": [112, 168, 169, 174, 209, 232], "314": [112, 169, 209, 227, 232], "341": [112, 169, 195, 209, 232, 529], "345": [112, 169, 209, 227, 232], "347": [112, 169, 232, 892], "528367": 112, "706422": 112, "294": [112, 169, 209], "581589": 112, "346448": 112, "344": [112, 144, 169, 195, 209, 232], "713872": 112, "754759": 112, "360704": 112, "326": [112, 169, 227, 232], "329": [112, 169, 195, 209, 232], "992503": 112, "416450": 112, "311": [112, 169, 232], "044340": 112, "070444": 112, "323": [112, 169, 196, 209, 210, 232], "epochstfr": [112, 114, 293, 535, 712, 723, 734, 742, 743, 745, 882, 892], "datafram": [112, 140, 147, 148, 149, 151, 165, 190, 191, 210, 216, 228, 240, 259, 260, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 438, 481, 482, 500, 626, 698, 712, 714, 715, 716, 874, 892], "to_data_fram": [112, 136, 140, 145, 149, 216, 228, 259, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 712, 714, 715, 716, 874, 892], "0000": [112, 851], "473093": 112, "474571": 112, "764021": 112, "9875": 112, "491659": 112, "480088": 112, "762445": 112, "9750": [112, 892], "500872": 112, "469376": 112, "749421": 112, "9625": 112, "500605": 112, "449373": 112, "728686": 112, "9500": 112, "515911": 112, "443439": 112, "719536": 112, "lineplot": [112, 145], "confid": [112, 113, 142, 145, 151, 166, 176, 207, 263, 270, 564, 691, 714, 716, 784, 805, 872, 892], "long_format": [112, 145, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 712, 714, 715, 716, 892], "freq_bound": 112, "delta": [112, 137, 202, 265, 266, 267, 268, 478, 481, 482, 547, 714, 716, 792], "theta": [112, 113, 137, 265, 266, 267, 268, 481, 482, 714, 716, 792], "freq_bands_of_interest": 112, "remove_unused_categori": 112, "reorder_categori": 112, "facetgrid": 112, "margin_titl": 112, "n_boot": 112, "axline_kw": 112, "dash": [112, 140, 150, 172, 203, 206, 210, 211, 219, 262, 265, 266, 267, 268, 481, 482, 714, 716, 784, 785, 811, 814, 892], "set_axis_label": 112, "col_templ": 112, "col_nam": [112, 270, 877], "row_templ": 112, "row_nam": [112, 269, 877], "add_legend": [112, 760], "df_mean": 112, "queri": [112, 140, 145, 149, 165, 220, 228, 240, 260, 265, 266, 441, 715], "groupbi": [112, 145, 151, 228], "reset_index": [112, 145], "col_ord": 112, "violinplot": [112, 145], "deep": [112, 137, 145, 158, 181, 202, 245, 265, 266, 267, 268, 289, 414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 481, 482, 561, 562, 565, 712, 714, 715, 716, 757, 760, 776, 874, 892], "hue_ord": 112, "gert": [112, 245], "pfurtschel": [112, 245], "fernando": [112, 245, 867], "lope": [112, 245, 867], "da": [112, 245, 867, 892], "silva": [112, 245, 867], "principl": [112, 203, 227, 232, 245, 869, 874], "1842": [112, 169, 245], "1857": [112, 245], "00141": [112, 245], "bernhard": [112, 245, 476], "graimann": [112, 245], "jane": [112, 245], "huggin": [112, 245], "simon": [112, 245, 892], "levin": [112, 245], "ecog": [112, 115, 135, 138, 139, 165, 169, 216, 222, 227, 245, 265, 266, 267, 268, 270, 276, 278, 313, 314, 323, 374, 376, 385, 443, 447, 481, 482, 496, 561, 562, 595, 641, 656, 707, 712, 714, 715, 716, 760, 776, 816, 828, 830, 847, 848, 858, 874, 892], "00697": [112, 245], "exposur": [112, 205, 245, 851], "tone": [112, 166, 245, 868], "1993": [112, 178, 245], "90110": [112, 245], "225": [112, 127, 144, 162, 164, 169, 231, 232, 245, 868], "rectifi": 113, "uncertainti": [113, 240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 724, 730, 858], "importantli": [113, 114, 201, 867], "hari": [113, 114, 126, 178, 245, 892], "neuromagnet": [113, 205, 245, 564], "1997": [113, 180, 206, 207, 245, 298, 299, 665, 728, 738, 739, 742, 874], "s0166": [113, 245], "2236": [113, 245], "10065": [113, 245], "328": [113, 121, 162, 169, 227, 232, 245, 267, 268, 356, 800, 871], "bradlei": [113, 245], "efron": [113, 245], "trevor": [113, 245], "hasti": [113, 245], "institut": [113, 245, 741, 744], "mathemat": [113, 151, 176, 200, 202, 210, 227, 245, 510, 531, 699, 741, 744, 851, 867, 874, 892], "monograph": [113, 245], "cambridg": [113, 151, 245, 356], "univers": [113, 245, 256, 356, 453, 868, 873, 879, 892], "york": [113, 202, 245, 256, 453, 879, 892], "isbn": [113, 151, 202, 224, 245, 264, 265, 266, 267, 268, 298, 299, 356, 694, 712, 715], "14989": [113, 245], "web": [113, 146, 205, 213, 242, 245, 275, 552, 768, 892], "stanford": [113, 245], "casi": [113, 245], "bootstrap_confidence_interv": [113, 882], "iter_freq": 113, "frequency_map": 113, "job": [113, 203, 205, 212, 257, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 416, 417, 419, 420, 424, 425, 426, 427, 430, 431, 452, 453, 454, 457, 470, 472, 481, 482, 522, 525, 526, 537, 538, 547, 548, 569, 576, 577, 651, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 744, 792, 795, 814, 892], "skip": [113, 144, 149, 165, 166, 170, 171, 172, 190, 202, 242, 257, 344, 502, 537, 581, 649, 851, 867, 877, 892], "option": [113, 125, 135, 140, 142, 150, 151, 156, 161, 162, 165, 166, 167, 168, 171, 172, 173, 178, 188, 196, 199, 202, 205, 210, 211, 213, 216, 218, 219, 222, 227, 228, 231, 237, 240, 242, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 285, 286, 305, 311, 314, 356, 366, 372, 375, 389, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 435, 445, 446, 447, 452, 453, 454, 456, 458, 476, 478, 479, 481, 482, 494, 496, 503, 522, 526, 531, 532, 533, 534, 535, 537, 538, 542, 544, 546, 547, 548, 556, 561, 563, 564, 565, 574, 575, 576, 577, 579, 588, 599, 619, 629, 631, 641, 677, 682, 686, 697, 699, 700, 702, 703, 706, 707, 712, 714, 715, 716, 750, 760, 776, 777, 778, 784, 788, 790, 792, 794, 796, 799, 800, 803, 807, 810, 812, 813, 814, 815, 816, 818, 820, 822, 823, 824, 826, 857, 859, 873, 874, 877, 889, 892], "apply_hilbert": [113, 114, 115, 136, 167, 265, 266, 267, 268, 481, 482, 892], "269399": 113, "897": [113, 209, 232], "077": [113, 128, 130], "307": [113, 169, 209, 227], "1202": 113, "emerg": 113, "bootstrap": [113, 142, 172, 691, 714, 716, 784, 892], "domin": [113, 204, 210, 242, 272, 273, 276, 279, 280, 281, 448, 564], "helper": [113, 227, 314, 332, 584, 881], "winter_r": 113, "freq_nam": 113, "ci_low": 113, "ci_up": 113, "dhz": 113, "xy": [113, 115, 136, 181, 323, 434, 761, 830, 874], "horizontalalign": [113, 202, 206], "xycoord": 113, "857": [113, 232], "trade": [114, 202, 740, 743], "bharadwaj": [114, 126, 245, 892], "berkelei": [114, 115, 256, 879], "tfr_stockwel": [114, 241, 739, 740, 741, 742, 743, 882, 892], "tfr_array_morlet": [114, 740, 741, 742, 743, 744, 882, 892], "centers_to_edg": [114, 882, 892], "sim0001": 114, "sim0002": 114, "1024": [114, 699, 700, 702, 703], "burst": [114, 183, 199, 868], "ramp": [114, 202], "logical_or": 114, "on_tim": 114, "han": [114, 591, 664, 665, 739, 740, 742, 743, 892], "sin50hz": 114, "41160": 114, "41159": 114, "time_bandwidth": [114, 427, 740, 743], "sim": [114, 539, 874], "nmore": 114, "1025": [114, 144, 209, 240], "balanc": [114, 201, 202, 227, 231, 668, 693, 892], "strictli": [114, 151, 161, 168, 169, 178, 202, 204, 291, 760, 892], "regard": [114, 208, 224, 232, 241, 584, 874, 892], "recoverd": 114, "lossless": 114, "disregard": 114, "numer": [114, 156, 162, 171, 202, 205, 216, 227, 232, 271, 278, 355, 379, 449, 481, 482, 564, 689, 699, 700, 702, 703, 725, 871, 873, 874, 880, 892], "all_n_cycl": 114, "isinst": [114, 140, 260, 480], "exagger": 114, "wise": [114, 162, 199, 203, 267, 268, 423, 701, 847, 892], "epochs_hilb": 114, "tfr_data": 114, "3301": [114, 195, 213], "255": [114, 127, 160, 169, 209, 231, 232, 242, 272, 273, 276, 279, 280, 281, 760, 779, 818, 823, 824], "avgpow": 114, "avg_pow": [114, 739, 740], "mesh": [114, 156, 160, 161, 175, 271, 273, 279, 281, 310, 311, 362, 413, 469, 470, 642, 760, 819, 823, 845, 857, 892], "electrocorticographi": [115, 136, 245, 265, 266, 267, 268, 481, 482, 561, 562, 712, 714, 715, 716, 868, 874, 892], "scatterplot": 115, "pyvista": [115, 171, 181, 263, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 481, 482, 760, 762, 770, 774, 776, 788, 816, 818, 819, 823, 825, 830, 849, 850, 869, 880, 892], "clickableimag": [115, 882], "own": [115, 127, 151, 177, 183, 207, 219, 229, 232, 265, 266, 267, 268, 272, 275, 276, 280, 323, 479, 481, 482, 599, 760, 791, 818, 851, 854, 855, 871, 873, 877], "dirnam": [115, 125, 159, 171], "pathlib": [115, 123, 144, 157, 170, 172, 275, 380, 381, 382, 385, 386, 387, 389, 394, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 526, 847, 892], "noqa": [115, 117, 170, 206, 227], "f401": [115, 227], "snapshot_brain_montag": [115, 136, 825, 882, 892], "misc_path": [115, 135, 182], "ecog_data_fnam": 115, "sample_ecog_ieeg": 115, "click": [115, 133, 142, 150, 151, 156, 161, 181, 191, 200, 205, 218, 219, 241, 262, 265, 266, 267, 268, 270, 274, 280, 281, 414, 421, 481, 482, 563, 564, 712, 714, 716, 761, 773, 781, 790, 791, 792, 794, 796, 798, 799, 803, 807, 812, 813, 814, 815, 816, 820, 821, 822, 824, 849, 851, 857, 869, 880, 892], "layout_path": 115, "__file__": [115, 123, 170, 171, 172], "layout_nam": 115, "custom_layout": 115, "lout": [115, 170, 315, 328, 329, 340, 892], "coreg": [115, 135, 157, 158, 159, 160, 171, 314, 473, 475, 776, 867, 874, 882, 892], "estimate_head_mri_t": [115, 135, 882, 892], "sample_ecog": 115, "apply_tran": [115, 135, 156, 160, 182, 314, 892], "conjunct": [115, 227, 260, 265, 416, 880], "xy_pt": [115, 136], "beta_pow": 115, "fig2": [115, 151, 170], "coolwarm": 115, "cbar": [115, 127, 146, 196, 227, 779], "set_axis_off": [115, 136, 172], "bbox_inch": [115, 892], "tight": [115, 151, 161, 195, 267, 268, 735, 794, 796, 892], "669": [115, 232], "mous": [115, 191, 218, 262, 263, 265, 266, 267, 268, 274, 414, 421, 473, 481, 482, 563, 564, 712, 714, 716, 761, 774, 776, 788, 790, 791, 792, 794, 795, 796, 799, 803, 812, 814, 815, 820, 869, 892], "imread": [115, 172], "plot_click": [115, 761], "to_layout": [115, 761], "got": [115, 144, 171, 200, 205, 224, 854, 892], "read_layout": [115, 170, 315, 882, 892], "747": [115, 130, 232], "3d_to_2d": [115, 130], "scalarmapp": 116, "low_contrast": [116, 126, 135, 181, 190, 272, 273, 276, 279, 280, 281, 760, 818, 823], "rh_data": [116, 175, 276, 279], "rh_vertno": [116, 175, 276, 279, 675], "recon": [116, 135, 155, 160, 311, 368, 550, 892], "brodmann": 116, "ba44": 116, "add_head": [116, 135, 156, 190, 760, 892], "seghead": [116, 156, 157, 158, 161, 172, 176, 182, 183, 257, 263, 760, 776, 788], "read_tran": [116, 118, 156, 160, 178, 191, 278, 465, 677, 846, 882, 892], "add_sensor": [116, 135, 136, 190, 211, 760, 892], "role": [116, 165, 170, 177, 186, 187, 262, 263, 267, 269, 270, 276, 366, 530, 531, 542, 620, 629, 631, 644, 660, 760, 769, 776, 788, 828, 851, 873], "sample_audvis_set1": 116, "ylorrd": 116, "add_dipol": [116, 760, 892], "1e8": 116, "static": [116, 180, 210, 216, 245, 257, 264, 391, 596, 748, 749, 750, 849, 877, 892], "add_ax": [116, 127, 146], "embed": [117, 156, 172, 201, 202, 275, 851, 858, 892], "simplic": [117, 177, 196, 202, 227, 231, 871, 892], "instal": [117, 135, 136, 146, 155, 161, 171, 181, 257, 265, 266, 267, 268, 283, 305, 309, 388, 391, 413, 416, 420, 425, 452, 453, 454, 481, 482, 715, 851, 859, 871, 872, 875, 892], "order_func": 117, "spectral_embed": 117, "rbf_kernel": 117, "this_data": 117, "good_pick": 117, "bad_pick": [117, 212], "plt_time": 117, "overlay_tim": [117, 128, 265, 266, 791, 892], "renaud": [117, 245], "keriven": [117, 245], "maureen": [117, 245], "clerc": [117, 245], "1051": [117, 209, 245], "1061": [117, 245], "2037139": [117, 245], "channel_epochs_imag": [117, 130], "eeg_on_scalp": [118, 130], "upon": [119, 144, 157, 170, 172, 265, 266, 275, 420, 481, 482, 761, 777, 830, 851, 857, 873, 892], "hosaka": [119, 245, 777, 892], "flow": [119, 178, 245, 777, 892], "underneath": [119, 777, 892], "poor": [119, 199, 202, 211, 777, 892], "man": [119, 151, 172, 245, 777], "hidehiro": [119, 245, 777], "electrocardiologi": [119, 245, 777], "1976": [119, 245, 777], "s0022": [119, 245, 777], "0736": [119, 245, 777], "80041": [119, 245, 777], "sheraz": [119, 126, 129, 245, 580, 890, 892], "khan": [119, 126, 129, 245, 580, 890, 892], "khansheraz": 119, "plot_arrowmap": [119, 150, 882, 892], "evoked_mag": 119, "evoked_grad": 119, "topoplot": [119, 144, 170, 205, 242, 777, 780, 892], "max_time_idx": 119, "latitud": [119, 777], "longitud": [119, 160, 777], "radial": [119, 158, 537, 538, 548, 652, 777], "cartesian": [119, 175, 178, 777, 874, 877], "info_from": [119, 777, 892], "info_to": [119, 777], "raw_ctf": 119, "raw_ctf_info": 119, "929": [119, 130, 232], "evoked_arrowmap": [119, 130], "engeman": 120, "miko\u0142aj": [120, 879, 892], "magnuski": [120, 879, 892], "mmagnuski": [120, 892], "swp": [120, 256, 879], "pl": 120, "20m": 120, "regularli": [120, 166, 168], "multilin": [120, 892], "all_tim": 120, "rm": [120, 150, 151, 188, 224, 262, 265, 266, 267, 268, 276, 414, 421, 481, 482, 539, 563, 564, 712, 794, 798, 799, 803, 804, 815, 822, 874, 892], "drawn": [120, 150, 219, 227, 262, 265, 266, 267, 268, 273, 274, 279, 281, 414, 421, 481, 482, 563, 564, 579, 664, 665, 712, 714, 716, 777, 778, 783, 784, 790, 792, 793, 796, 798, 799, 803, 812, 814, 815, 816, 820, 822, 823, 892], "spectral_r": 120, "circl": [120, 161, 170, 192, 223, 262, 265, 266, 267, 268, 270, 274, 314, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 765, 777, 782, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 847, 851, 892], "extrapol": [120, 150, 211, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 892], "box": [120, 161, 189, 262, 265, 266, 267, 268, 274, 315, 323, 340, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 756, 777, 792, 794, 796, 798, 799, 803, 812, 815, 820, 822, 857, 892], "stretch": [120, 201, 760], "beyond": [120, 144, 166, 190, 237, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 516, 563, 564, 579, 707, 712, 714, 716, 756, 777, 792, 799, 803, 812, 813, 815, 820, 822], "axes_row": 120, "extr": 120, "margin": [120, 127, 715, 783, 784], "exceed": [120, 184, 207, 210, 229, 265, 564, 597, 715], "mask_param": [120, 232, 262, 265, 266, 267, 268, 414, 421, 481, 482, 563, 712, 714, 716, 777, 792, 799, 815, 820, 822], "markers": [120, 232, 262, 265, 266, 267, 268, 414, 421, 481, 482, 563, 712, 714, 716, 777, 792, 799, 815, 820, 822], "markerfacecolor": [120, 262, 265, 266, 267, 268, 414, 421, 481, 482, 563, 712, 714, 716, 777, 792, 799, 815, 820, 822], "_time": 120, "significant_channel": 120, "_channel": 120, "in1d": 120, "_ch": 120, "perhap": [120, 202, 207, 216, 227], "imped": [120, 202, 245, 892], "image_interp": [120, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 892], "cubic": [120, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 760, 777, 792, 799, 803, 812, 815, 820, 822, 892], "smoothest": 120, "voronoi": [120, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 892], "debug": [120, 162, 171, 257, 380, 381, 382, 385, 386, 387, 394, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 658, 755, 758, 851, 871], "unalt": [120, 363], "properli": [120, 136, 155, 156, 161, 168, 183, 189, 200, 206, 207, 216, 217, 235, 237, 245, 257, 260, 264, 265, 266, 267, 268, 270, 276, 305, 309, 349, 362, 416, 420, 425, 452, 453, 454, 481, 482, 581, 582, 656, 677, 712, 715, 756, 800, 826, 849, 851, 854, 856, 867, 892], "animate_topomap": [120, 267, 268, 892], "frame_r": [120, 267, 268], "blit": [120, 267, 268], "evoked_topomap": [120, 130], "excel": [121, 150, 160, 202, 224], "diagnost": [121, 165, 172, 205, 210, 214], "rare": [121, 275, 873, 892], "80e": [121, 211, 874], "uncom": 121, "fewer": [121, 144, 151, 161, 170, 172, 199, 202, 217, 227, 237, 265, 266, 267, 268, 275, 416, 420, 425, 426, 450, 452, 453, 481, 482, 590, 595, 740, 743, 760, 796, 892], "007": [121, 128, 140, 141, 142, 145, 149, 166, 169, 201, 207, 224, 228, 245, 283, 603], "008": [121, 128, 140, 145, 149, 151, 166, 169, 210, 224, 245, 599], "method_param": [121, 179, 356, 361, 531, 532, 533, 534, 535, 537, 538, 544, 547, 548], "diagonal_fix": [121, 162, 356, 892], "return_estim": [121, 162, 356, 361, 871], "likelihood": [121, 151, 162, 177, 245, 262, 267, 268, 356, 361, 564, 800, 871, 874], "loglik": [121, 262], "1891": 121, "unseen": [121, 162, 177, 356, 871], "descend": [121, 162, 177, 892], "1628": 121, "679": [121, 232], "1659": 121, "783": [121, 232], "1802": [121, 180, 200, 245], "678903414706": 121, "7831816731043": 121, "1031535820766": 121, "996": [121, 130, 196, 209], "evoked_whiten": [121, 130], "read_raw_artemis123": [123, 188, 487, 874, 882, 892], "read_raw_bti": [123, 185, 188, 874, 882, 892], "read_raw_kit": [123, 171, 188, 487, 874, 882, 892], "set_3d_titl": [123, 125, 150, 882, 892], "root_path": 123, "parent": [123, 150, 161, 170, 171, 172, 892], "spm_ctf_meg_example_faces1_3d": 123, "324474": 123, "bti_path": 123, "test_pdf_linux": 123, "test_config_linux": 123, "test_hs_linux": 123, "magn": [123, 188, 874], "3600wh": 123, "pdf": [123, 185, 195, 245, 257, 391, 476, 492, 875], "critic": [123, 151, 160, 171, 178, 185, 202, 210, 227, 229, 232, 599, 658, 758, 868, 878], "mne_create_comp_data": [123, 185, 257, 492], "print_tabl": [123, 185], "routin": [123, 185, 203, 457, 564, 599, 880, 891, 892], "magnes_3600wh": [123, 185], "kit_path": 123, "sqd": [123, 171, 257, 484, 506, 625, 874], "artemis_data_2017": 123, "10h": 123, "38m": 123, "59s_phantom_1k_hpi_1": 123, "artemis123_mneloc": 123, "1863": 123, "hpifit": [123, 209, 257], "ok": [123, 188, 209, 261, 271], "cardin": [123, 166, 169, 216, 222, 307, 308, 337, 433, 847, 877, 892], "596": [123, 130, 196, 232], "meg_sensor": [123, 130, 892], "create_3d_figur": [124, 156, 160, 178, 762, 882], "934": [124, 130, 196], "mne_helmet": [124, 130], "ship": [125, 170, 227, 265, 266, 267, 268, 270, 324, 325, 330, 331, 466, 481, 482, 863, 874, 892], "joan": [125, 137, 159, 892], "massich": [125, 137, 159, 892], "mailsik": [125, 137, 159], "op": [125, 159, 184, 185, 209, 265, 266, 267, 268, 481, 482], "get_builtin_montag": [125, 170, 265, 266, 267, 268, 270, 330, 466, 481, 482, 882, 892], "against": [125, 140, 141, 149, 205, 216, 245, 669, 674, 851, 892], "current_montag": 125, "fiduci": [125, 136, 156, 159, 160, 170, 188, 189, 314, 317, 318, 327, 337, 338, 367, 368, 369, 390, 485, 488, 506, 515, 625, 650, 776, 847, 867, 874, 877, 892], "mri_fiduci": [125, 156, 159, 183, 776, 892], "montage_sgskip": [125, 130], "hcp": [126, 245, 391, 858, 880, 892], "mmp1": [126, 245, 391, 892], "mmp": [126, 391], "Of": [126, 142, 199, 206, 207, 224, 604, 605], "acknowledg": [126, 202], "wu": 126, "minn": 126, "publicli": [126, 166, 406, 407, 868, 873], "get_brain_class": [126, 155, 882], "fetch_hcp_mmp_parcel": [126, 181, 882, 892], "fetch_aparc_sub_parcel": [126, 882], "hcpmmp1": 126, "add_annot": [126, 135, 155, 181, 760], "aud_label": 126, "l_a1_roi": 126, "hcpmmp1_combin": [126, 181, 391], "aparc_sub": 126, "matthew": [126, 180, 245, 391], "glasser": [126, 245, 391], "timothi": [126, 245, 391, 892], "coalson": [126, 245, 391], "emma": [126, 245, 391, 564], "robinson": [126, 180, 245, 391], "hacker": [126, 245, 391], "harwel": [126, 245, 391], "essa": [126, 245, 391], "yacoub": [126, 245, 391], "kamil": [126, 245, 391], "ugurbil": [126, 245, 391], "jesper": [126, 245, 391, 892], "andersson": [126, 245, 391], "beckmann": [126, 245, 391], "jenkinson": [126, 245, 391], "stephen": [126, 180, 195, 227, 228, 245, 391, 420, 564, 699, 700, 702, 703, 741, 744, 892], "essen": [126, 245, 391], "modal": [126, 189, 231, 237, 245, 391], "cerebr": [126, 245, 391], "536": [126, 196, 245, 391], "178": [126, 169, 183, 184, 185, 196, 201, 227, 232, 245, 391], "nature18933": [126, 245, 391], "javeria": [126, 245], "hashmi": [126, 245], "fahimeh": [126, 245, 892], "mamashli": [126, 245, 892], "konstantino": [126, 245], "michmizo": [126, 245], "manfr": [126, 245, 892], "kitzbichl": [126, 245, 892], "santosh": [126, 245], "ganesan": [126, 245], "keri": [126, 245], "lee": [126, 245, 271, 276, 564, 597, 892], "garel": [126, 245], "susan": [126, 245, 665], "whitfield": [126, 245], "gabri": [126, 245], "randi": [126, 245, 531], "gollub": [126, 245], "jian": [126, 245], "kong": [126, 245], "kunjan": [126, 245], "rana": [126, 245], "kenet": [126, 245], "matur": [126, 245], "trajectori": [126, 245], "network": [126, 195, 245, 298, 420, 564, 862], "mediat": [126, 245, 741, 744], "018": [126, 128, 140, 149, 169, 224, 245, 580], "657": [126, 130, 158, 164, 196], "mccloi": [127, 209, 879, 892], "dan": [127, 209, 892], "mpl_toolkit": [127, 170, 206, 227, 232, 784], "axes_grid1": [127, 232, 784], "make_axes_locat": [127, 232], "imagegrid": 127, "inset_loc": [127, 784], "suppos": [127, 168, 206, 773, 874], "max_t": 127, "17909658": 127, "18448887": 127, "83197989": 127, "screenshot": [127, 172, 760, 830, 892], "pixel": [127, 142, 172, 192, 213, 227, 262, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 414, 421, 473, 481, 482, 563, 564, 584, 586, 712, 714, 716, 760, 776, 777, 788, 792, 799, 803, 812, 815, 818, 820, 822, 823, 847, 892], "integ": [127, 140, 142, 143, 145, 149, 150, 151, 160, 166, 168, 169, 171, 175, 189, 192, 203, 205, 216, 217, 222, 232, 257, 260, 262, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 298, 299, 312, 315, 316, 323, 329, 331, 356, 360, 361, 372, 373, 374, 414, 416, 421, 430, 431, 435, 436, 443, 452, 453, 456, 457, 458, 472, 476, 478, 479, 481, 482, 515, 540, 541, 542, 563, 564, 566, 579, 580, 581, 582, 591, 595, 605, 607, 614, 623, 625, 629, 660, 662, 680, 698, 707, 712, 714, 715, 716, 720, 721, 722, 723, 725, 743, 746, 777, 784, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 803, 804, 805, 807, 809, 811, 812, 813, 814, 815, 820, 822, 847, 874, 877, 892], "nonwhite_pix": 127, "nonwhite_row": 127, "nonwhite_col": 127, "cropped_screenshot": 127, "nrows_ncol": 127, "axes_pad": 127, "updat": [127, 146, 170, 172, 179, 189, 200, 202, 207, 210, 212, 216, 219, 242, 257, 262, 265, 266, 267, 268, 270, 274, 289, 304, 367, 373, 375, 380, 381, 382, 383, 385, 386, 387, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 449, 466, 476, 481, 482, 502, 530, 565, 584, 651, 655, 747, 760, 849, 851, 868, 873, 877, 892], "rcparam": [127, 137, 202, 816, 892], "labels": 127, "titles": 127, "medium": [127, 156, 183, 257, 310, 880, 892], "height": [127, 171, 257, 270, 272, 273, 276, 279, 280, 281, 311, 315, 323, 328, 473, 584, 586, 760, 769, 818, 823, 847, 892], "gridspec": [127, 267, 268, 799], "keyword": [127, 149, 155, 169, 172, 191, 202, 210, 241, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 416, 417, 419, 420, 424, 425, 427, 430, 431, 433, 435, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 464, 465, 469, 470, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 527, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 560, 564, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 588, 589, 590, 592, 593, 594, 595, 596, 597, 599, 600, 602, 603, 606, 607, 608, 611, 612, 613, 614, 618, 619, 620, 621, 622, 623, 625, 626, 627, 629, 630, 631, 633, 634, 635, 636, 637, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 656, 660, 661, 663, 664, 665, 666, 676, 677, 680, 682, 683, 684, 685, 686, 687, 688, 698, 699, 700, 701, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 729, 730, 731, 734, 735, 739, 740, 742, 743, 744, 745, 748, 749, 750, 755, 758, 759, 760, 761, 768, 776, 777, 782, 785, 788, 792, 793, 794, 795, 800, 803, 804, 805, 810, 811, 813, 814, 816, 817, 818, 819, 823, 824, 825, 829, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 851, 867, 892], "subplot2grid": [127, 195], "inch": [127, 171, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 792, 799, 803, 812, 815, 820, 822], "height_ratio": 127, "rowspan": 127, "775": [127, 232], "bot": 127, "evoked_idx": 127, "brain_idx": 127, "peak_lin": 127, "66ccee": [127, 160, 728, 738], "columnspac": 127, "labelspac": 127, "fancybox": 127, "handlelength": 127, "n_ave": 127, "spine": [127, 181, 773, 784], "set_axisbelow": 127, "tick": [127, 242, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 784, 792, 796, 799, 803, 812, 815, 820, 821, 822, 892], "append_ax": [127, 232], "plot_brain_colorbar": [127, 882, 892], "get_posit": [127, 136, 314, 892], "ymax": [127, 203, 232, 237], "transfigur": 127, "va": [127, 160], "panel": [127, 151, 156, 162, 170, 180, 242, 257, 267, 268, 473, 564, 760, 800, 804, 871, 892], "outlin": [127, 160, 172, 176, 202, 242, 262, 263, 265, 266, 267, 268, 270, 274, 314, 414, 421, 481, 482, 563, 564, 579, 614, 712, 714, 716, 777, 784, 788, 792, 794, 796, 797, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 892], "familiar": [127, 144, 199, 853, 868], "to_plot": 127, "return_tim": [127, 216, 481, 482], "\u00b5v": [127, 142, 144, 145, 149, 151, 166, 201, 207, 228, 257, 262, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 414, 421, 481, 482, 519, 563, 564, 579, 712, 714, 716, 777, 790, 791, 792, 794, 796, 799, 803, 812, 813, 815, 820, 821, 822, 847, 874, 892], "1e6": [127, 141, 149, 151, 262, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 356, 360, 361, 414, 421, 423, 481, 482, 791, 794, 796, 798, 799, 821], "inset_ax": [127, 784], "server": [127, 146, 166, 172, 203, 205, 216, 826, 855], "axin": 127, "edit": [127, 151, 169, 171, 200, 202, 205, 218, 245, 264, 265, 266, 267, 268, 694, 712, 715, 781, 829, 851, 855, 871, 892], "stai": [127, 144, 202, 203, 222, 224, 265, 266, 267, 268, 481, 482, 483, 661, 847, 851], "intact": [127, 199, 216], "That": [127, 142, 144, 161, 162, 202, 232, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 542, 800, 874], "nice": [127, 144, 150, 169, 171, 216, 227, 242, 851, 874, 892], "But": [127, 143, 144, 172, 184, 202, 210, 212, 222, 227, 235, 242, 564, 869], "big": [127, 188, 205, 423, 701, 869, 892], "tast": 127, "luckili": 127, "facet": [127, 160], "set_": 127, "get_children": 127, "line2d": 127, "0x7f72706f7d30": 127, "0x7f7321cb6c50": 127, "0x7f727667a260": 127, "0x7f727667a410": 127, "pathcollect": 127, "0x7f7274e55ae0": 127, "0x7f72720bd420": 127, "0x7f72720bc8b0": 127, "0x7f72720be6b0": 127, "0x7f72720bca00": 127, "0x7f72720bc790": 127, "yaxi": [127, 207], "0x7f7274e567d0": 127, "rectangl": [127, 218, 712, 777], "0x7f7274e54130": 127, "certainli": 127, "artistlist": 127, "sensor_dot": 127, "shrink": [127, 200, 227, 228, 595, 871], "set_siz": 127, "publication_figur": [127, 130], "notat": [128, 206, 231, 237, 874], "odd": [128, 202, 326, 413, 874], "test_raw": [128, 168, 257], "read_raw_eeglab": [128, 168, 189, 487, 855, 874, 878, 882, 892], "eog1": 128, "eog2": 128, "011": [128, 140, 149, 169, 202, 224, 245], "012": [128, 140, 149, 169, 219, 224], "017": [128, 140, 149, 169, 216, 224], "019": [128, 140, 149, 169, 208, 224, 245], "021": [128, 140, 141, 149, 166, 169, 224], "022": [128, 140, 149, 169, 184, 224], "023": [128, 140, 142, 149, 169, 224, 245], "024": [128, 140, 149, 169, 224, 232, 245, 699, 700, 702, 703], "po7": [128, 242], "026": [128, 140, 149, 169, 224, 245], "poz": [128, 242], "027": [128, 140, 149, 169, 224, 227, 245, 298, 564, 705, 706, 866], "028": [128, 140, 149, 169, 224, 245, 572, 741, 744], "029": [128, 140, 149, 169, 224, 245], "standard_1020": [128, 151, 159, 170, 222, 505], "fdt": [128, 168, 497, 623], "msec": [128, 151, 712], "new_ev": [128, 217, 440, 442, 529], "203125": 128, "12z": [128, 228], "group_bi": [128, 142, 228, 257, 265, 266, 267, 268, 481, 482, 790, 791, 796, 813, 892], "vline": [128, 267, 268, 784, 798, 892], "roi_erpimage_by_rt": [128, 130], "66067": 129, "xscale": [129, 207, 265, 266, 267, 268, 481, 482, 714, 716, 814, 892], "wall": [129, 202, 203, 245, 699, 700], "shield": [129, 203, 212, 245, 265, 266, 267, 268, 270, 481, 482, 561, 599, 712, 714, 715, 716, 874], "review": [129, 151, 178, 204, 205, 245, 563, 569, 851, 873], "scientif": [129, 245, 855, 856, 876], "instrument": [129, 178, 199, 205, 245], "056101": [129, 245], "1063": [129, 210, 245, 575, 599], "4802845": [129, 245], "sensor_noise_level": [129, 130], "auto_examples_visu": 130, "topo_custom": [130, 133], "ssp_projs_sensitivity_map": [130, 131], "xhemi": [130, 134, 277, 362, 636], "topo_compare_condit": [130, 132], "ecg_fnam": 131, "ssp_ecg_map": 131, "arg": [131, 231, 237, 257, 270, 278, 694, 851], "plot_evoked_topo": [132, 150, 211, 882, 892], "audio": [132, 175, 191, 196, 240, 245, 265, 266, 267, 268, 421, 481, 482, 714, 715, 716, 731], "nleft": 132, "iter_topographi": [133, 882, 892], "20hz": 133, "return_freq": [133, 137, 240, 241, 242, 714, 716, 892], "my_callback": 133, "ch_idx": [133, 209, 229, 241], "callback": [133, 367, 760, 773, 892], "fig_facecolor": [133, 142, 240, 265, 266, 267, 268, 481, 482, 712, 714, 716, 773, 821], "axis_facecolor": [133, 240, 265, 266, 267, 268, 481, 482, 714, 716, 773], "axis_spinecolor": [133, 773], "on_pick": [133, 773], "gcf": 133, "stc_path": [134, 172], "fsaverage_sym": [134, 362], "left_right": [134, 362], "stc_xhemi": 134, "70314401": 134, "48867635": 134, "29876034": 134, "stereoelectroencephalographi": [135, 868], "talairach": [135, 160, 180, 181, 280, 281, 368, 369, 643, 824, 871, 874, 892], "xfm": [135, 280, 281, 369, 643, 824, 874, 892], "involv": [135, 136, 156, 158, 160, 199, 202, 203, 206, 218, 369, 566, 873, 874], "pip": [135, 136, 146, 161, 849, 851, 853, 856, 859], "conda": [135, 136, 161, 849, 850, 851, 853, 856, 859, 892], "li": [135, 136, 160, 172, 208, 245, 874, 879, 892], "adam2392": [135, 136], "sample_seeg_ieeg": 135, "1310640": 135, "1370605": 135, "fixat": [135, 192, 213, 500, 868], "isi": [135, 191], "mni_tal": [135, 136, 314, 327], "this_subject_dir": 135, "head_mri_t": 135, "sample_seeg": 135, "mri_mni_t": [135, 643], "read_talxfm": [135, 160, 882], "taliarach": 135, "fro": [135, 458, 747], "rostral": [135, 760], "warp": [135, 156, 159, 171, 245, 596, 868, 892], "compute_native_head_t": [135, 159, 182, 314, 882, 892], "combine_transform": 135, "view_kwarg": [135, 157, 160], "tan": [135, 212, 892], "dens": [135, 156, 157, 158, 160, 182, 183, 190, 245, 257, 278, 310, 572, 760, 776, 892], "video": [135, 156, 160, 161, 876, 892], "nearbi": [135, 136, 195, 199, 207, 210, 223, 245, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 594, 599, 707, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822], "atla": [135, 181, 245, 257, 263, 272, 273, 276, 278, 279, 280, 281, 311, 448, 518, 661, 847, 868, 871, 874, 880, 892], "get_montage_volume_label": [135, 760, 882, 892], "lami": 135, "lttr": 135, "isdigit": 135, "lpm": 135, "lsma": 135, "elec": [135, 228], "plot_channel_labels_circl": [135, 882, 892], "rahp": 135, "lpcn": 135, "lpit": 135, "ltpo": 135, "lofc": 135, "lstg": 135, "lacn": 135, "lbri": 135, "rphp": 135, "lpli": 135, "lent": 135, "lphg": 135, "ctx": 135, "putamen": 135, "add_volume_label": [135, 181, 760, 892], "heatmap": [135, 210], "lfp": 135, "stc_near_sensor": [135, 136, 882, 892], "Its": [135, 209, 874], "view_layout": [135, 180, 272, 273, 276, 279, 280, 281, 760, 818, 823], "sagitt": [135, 160, 180, 263, 760, 778, 788], "m4": 135, "sai": [135, 136, 202, 203, 206, 208, 216, 222, 229, 232, 756, 851, 857, 867, 877], "20_seeg": [135, 139], "epilepsi": [136, 892], "seizur": [136, 892], "complementari": [136, 201, 880], "seeg": [136, 138, 139, 165, 169, 216, 222, 265, 266, 267, 268, 270, 278, 280, 313, 314, 318, 368, 374, 376, 443, 447, 466, 481, 482, 487, 496, 560, 561, 562, 564, 641, 643, 656, 707, 712, 714, 715, 716, 760, 776, 782, 816, 847, 848, 858, 874, 892], "liberti": [136, 245, 892], "hamilton": [136, 245, 892], "libertyhamilton": 136, "mne_bid": 136, "bidspath": 136, "read_raw_bid": 136, "bids_root": 136, "epilepsy_ecog": [136, 171, 882, 892], "bids_path": 136, "pt1": 136, "session": [136, 140, 142, 149, 150, 166, 171, 172, 200, 210, 212, 218, 265, 266, 378, 379, 481, 482, 564, 586, 790, 807, 813, 821, 849, 867, 871, 875, 892], "presurgeri": 136, "ictal": 136, "datatyp": [136, 192, 892], "ieeg": [136, 880, 881, 882, 892], "trans_bandwidth": [136, 202, 450, 453, 481, 482], "add_mni_fiduci": [136, 314, 892], "posterior": [136, 156, 160, 271, 314, 326, 476, 689, 847, 892], "commissur": [136, 314], "epoch_length": 136, "269079": 136, "2201": [136, 195], "ad1": 136, "att1": 136, "ast1": 136, "g16": 136, "slt1": 136, "sensor_color": [136, 776], "gamma_power_t": 136, "gamma_info": 136, "445": [136, 196, 227], "gamma_power_at_15": 136, "rgba": [136, 271, 272, 273, 276, 279, 280, 281, 760, 775, 779, 818, 823, 824, 892], "get_cmap": 136, "tolist": 136, "funcanim": [136, 267, 268], "gamma_pow": 136, "x_line": 136, "epileptiform": 136, "progress": [136, 151, 165, 171, 201, 245, 417, 424, 851, 892], "posteriorli": 136, "becom": [136, 141, 182, 201, 202, 204, 205, 210, 212, 235, 236, 237, 265, 266, 267, 268, 613, 781, 796, 851, 859, 873, 874, 892], "xyz_pt": 136, "vmid": 136, "intra": [136, 683], "4932": 136, "695": [136, 139, 209, 232], "30_ecog": [136, 139], "cite": [137, 264, 265, 266, 267, 268, 392, 453, 712, 715, 851, 868], "toi": [137, 227, 880], "answer": [137, 207, 232, 242, 851, 871], "question": [137, 141, 210, 242, 851, 854, 870, 872], "alic": 137, "tackl": 137, "chambon": [137, 245, 892], "stan": 137, "sleep_physionet": [137, 868, 882, 892], "fetch_data": [137, 868, 882, 892], "randomforestclassifi": 137, "accuracy_scor": 137, "functiontransform": 137, "associ": [137, 144, 168, 172, 191, 199, 206, 207, 209, 213, 227, 229, 245, 259, 260, 264, 265, 266, 267, 268, 422, 465, 481, 482, 525, 623, 625, 662, 694, 699, 704, 712, 715, 782, 791, 793, 794, 796, 811, 812, 849, 851, 874, 877, 892], "ground": [137, 166, 207, 564, 811, 880], "truth": [137, 207, 564, 811], "expert": [137, 162, 851, 871, 873], "alice_fil": 137, "bob_fil": 137, "raw_train": 137, "marker": [137, 151, 168, 171, 177, 188, 189, 195, 201, 206, 257, 262, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 414, 417, 421, 424, 427, 430, 431, 457, 470, 472, 481, 482, 484, 506, 522, 525, 526, 537, 538, 547, 548, 563, 564, 569, 576, 577, 579, 625, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 712, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 777, 790, 792, 795, 799, 803, 812, 813, 814, 815, 819, 820, 822, 868, 892], "infer_typ": [137, 489, 496, 892], "annot_train": 137, "read_annot": [137, 218, 760, 882, 892], "emit_warn": [137, 259, 481, 482, 600], "resp": [137, 169, 216, 265, 266, 267, 268, 270, 275, 313, 481, 482, 496, 561, 712, 714, 715, 716, 790, 813, 874, 892], "physionet_sleep": 137, "sc4001e0": 137, "recogn": [137, 171, 207, 496, 873, 892], "renam": [137, 151, 189, 211, 216, 259, 265, 266, 267, 268, 270, 314, 342, 481, 482, 489, 496, 500, 647, 760, 770, 825, 851, 859, 892], "oro": 137, "nasal": 137, "subment": 137, "temp": [137, 270], "rectal": 137, "7949999": 137, "79499": 137, "wake": 137, "rem": [137, 168], "abbrevi": [137, 175, 206, 760, 874, 892], "rapid": [137, 144, 195, 202, 245, 420], "long": [137, 140, 141, 146, 199, 202, 203, 205, 209, 217, 218, 222, 228, 235, 236, 263, 265, 266, 267, 268, 272, 273, 276, 277, 279, 280, 281, 356, 362, 481, 482, 534, 567, 572, 599, 712, 714, 715, 716, 760, 851, 854, 855, 867, 873, 880, 892], "awak": 137, "night": [137, 406, 868], "imbal": [137, 231, 574, 575, 588, 599, 610], "trim": [137, 265, 266], "occurr": [137, 144, 199, 438, 440], "annotation_desc_2_event_id": 137, "redefin": 137, "events_train": 137, "chunk_dur": [137, 168, 443, 892], "stage_color": 137, "prop_cycl": 137, "by_kei": 137, "841": [137, 232], "188": [137, 169, 172, 184, 195, 231, 232], "raw_test": 137, "annot_test": 137, "events_test": 137, "epochs_test": 137, "sc4011e0": 137, "8405999": 137, "84059": 137, "1103": [137, 178, 245], "562": [137, 195, 232], "signatur": [137, 200, 231, 417, 424, 431, 851, 869, 892], "ci": [137, 146, 202, 211, 227, 240, 564, 691, 714, 716, 784, 805, 851, 880, 892], "\u00b5v\u00b2": 137, "eeg_power_band": 137, "compat": [137, 144, 171, 176, 258, 265, 266, 267, 268, 322, 364, 374, 389, 397, 420, 422, 425, 427, 428, 429, 454, 473, 481, 482, 537, 564, 714, 716, 790, 792, 813, 814, 825, 849, 857, 859, 871, 874, 877, 892], "psds_band": 137, "boilerpl": 137, "sckit": 137, "manner": [137, 151, 178, 227, 228, 260, 265, 892], "thank": [137, 140, 851, 880], "pipe": [137, 851, 868], "n_estim": [137, 417, 424], "acc": 137, "6854034451495921": 137, "ye": [137, 209, 210, 227, 267, 481, 502, 629, 871, 892], "databas": [137, 245, 392, 406, 407], "mathieu": [137, 245, 879, 892], "galtier": [137, 245], "pierrick": [137, 245], "arnal": [137, 245], "gill": [137, 245], "wainrib": [137, 245], "architectur": [137, 245, 892], "rehabilit": [137, 245], "758": [137, 155, 164, 232, 245], "769": [137, 245], "tnsre": [137, 245], "2813138": [137, 245], "kemp": [137, 245, 406, 407, 868], "zwinderman": [137, 245, 406, 407, 868], "tuk": [137, 245, 407, 868], "kamphuisen": [137, 245, 406, 407, 868], "obery\u00e9": [137, 245, 407, 868], "feedback": [137, 245, 407, 868, 892], "microcontinu": [137, 245, 407, 868], "1185": [137, 245, 407, 868], "1194": [137, 195, 245, 407, 868], "867928": [137, 245, 407, 868], "1458": [137, 139], "60_sleep": [137, 139], "mne_gui_addon": [138, 165, 865, 880, 892], "stage": [138, 139, 144, 155, 156, 165, 172, 191, 200, 202, 205, 206, 211, 218, 245, 259, 260, 265, 266, 267, 268, 277, 362, 406, 443, 481, 482, 496, 523, 579, 617, 622, 714, 750, 793, 847, 851, 858, 867, 868, 882, 892], "polysomnographi": [138, 139, 165, 259, 265, 406, 407, 443, 496, 617, 714, 793, 868, 892], "psg": [138, 139, 165, 259, 265, 406, 443, 496, 617, 714, 793, 868, 892], "auto_tutorials_clin": 139, "649": 139, "cover": [140, 147, 149, 151, 153, 155, 162, 163, 165, 166, 168, 171, 172, 173, 186, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 214, 216, 219, 220, 227, 238, 242, 243, 271, 275, 599, 607, 616, 696, 842, 851, 874, 875, 892], "possibli": [140, 149, 166, 172, 202, 229, 230, 267, 268, 277, 298, 299, 312, 356, 360, 361, 372, 373, 374, 389, 414, 421, 457, 458, 476, 478, 479, 542, 564, 583, 588, 694, 760, 800, 867, 892], "del_proj": [140, 149, 199, 206, 207, 208, 265, 266, 267, 268, 481, 482, 892], "plot_projs_topomap": [140, 142, 149, 207, 219, 265, 266, 267, 268, 481, 482, 811, 882, 892], "plot_psd": [140, 142, 219, 240, 241, 265, 266, 267, 268, 275, 481, 482, 851, 874, 892], "plot_psd_topomap": [140, 142, 240, 265, 266, 267, 268, 481, 482, 892], "sample_data_fold": [140, 142, 145, 146, 155, 166, 167, 168, 169, 170, 199, 200, 201, 203, 205, 206, 207, 208, 210, 216, 217, 218, 219, 240], "sample_data_raw_fil": [140, 142, 145, 146, 166, 167, 168, 169, 199, 200, 201, 203, 205, 206, 207, 208, 210, 216, 217, 218, 219, 240], "sample_data_events_fil": [140, 145, 217], "events_from_fil": [140, 217], "bare": [140, 166], "299693": [140, 151], "699283": 140, "quot": [140, 195, 264, 265, 266, 267, 268, 712, 715, 851, 874], "didn": [140, 144, 265, 449, 715, 892], "string": [140, 143, 144, 145, 149, 150, 168, 169, 171, 172, 201, 216, 217, 218, 240, 258, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 312, 314, 323, 329, 331, 342, 355, 356, 360, 361, 365, 372, 377, 380, 381, 382, 385, 386, 387, 389, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 414, 416, 417, 421, 424, 430, 431, 435, 438, 443, 448, 449, 462, 464, 466, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 518, 523, 531, 537, 538, 561, 562, 563, 564, 566, 567, 579, 580, 581, 582, 584, 585, 588, 590, 591, 595, 599, 605, 607, 614, 623, 625, 629, 647, 668, 669, 670, 671, 672, 674, 677, 680, 689, 693, 695, 698, 707, 708, 712, 713, 714, 715, 716, 720, 721, 722, 723, 725, 743, 747, 748, 750, 760, 768, 776, 777, 784, 790, 791, 792, 794, 796, 797, 798, 799, 800, 803, 804, 811, 812, 813, 814, 815, 818, 820, 822, 823, 824, 849, 850, 851, 866, 871, 877, 892], "event_dict": [140, 142, 145, 149, 151, 166, 168, 211, 213, 217, 222, 240], "buttonpress": [140, 149, 151, 166, 168, 172, 217], "mention": [140, 144, 151, 166, 168, 169, 170, 175, 202, 206, 207, 208, 216, 232, 355, 851], "haven": [140, 218, 851, 875, 892], "turn": [140, 149, 150, 152, 175, 191, 200, 205, 206, 207, 208, 242, 258, 260, 265, 455, 520, 661, 761, 781, 868, 873, 874, 892], "accommod": [140, 892], "request": [140, 161, 166, 171, 172, 205, 207, 210, 216, 217, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 413, 481, 482, 489, 496, 564, 576, 577, 619, 656, 693, 695, 713, 714, 716, 769, 792, 801, 803, 818, 823, 847, 857, 858, 871, 872, 873, 877, 892], "drop_log": [140, 142, 201, 260, 265, 266, 275, 576, 577, 715, 789, 892], "too_short": [140, 151, 265, 715], "forget": [140, 157, 158, 168, 851], "brows": [140, 171, 172, 181, 200, 218, 263, 265, 266, 481, 482, 564, 788, 790, 807, 813, 863, 869, 892], "seem": [140, 141, 143, 144, 151, 152, 162, 191, 202, 205, 207, 222, 242, 564, 851], "duplic": [140, 143, 151, 152, 161, 222, 260, 265, 266, 267, 268, 270, 271, 275, 314, 342, 481, 482, 647, 892], "scrollbar": [140, 265, 266, 481, 482, 564, 790, 807, 813, 892], "focus": [140, 141, 181, 218, 265, 266, 481, 482, 564, 669, 674, 790, 807, 813, 851, 855, 858, 876], "screen": [140, 171, 192, 213, 245, 257, 265, 266, 481, 482, 584, 586, 790, 813, 826, 868, 892], "bracket": [140, 149, 151, 169, 189, 216, 222, 240, 892], "catch": [140, 142, 166, 181, 231, 237, 851], "charact": [140, 166, 169, 200, 216, 217, 326, 497, 514, 617, 623, 668, 669, 670, 671, 672, 674, 768, 851, 892], "tag": [140, 144, 151, 165, 243, 244, 245, 257, 265, 266, 270, 275, 314, 330, 438, 443, 491, 514, 561, 714, 715, 768, 822, 847, 851, 868, 880, 892], "complain": 140, "ask": [140, 144, 160, 851, 866, 868, 872, 873], "except": [140, 143, 171, 175, 176, 192, 210, 216, 265, 266, 267, 268, 270, 285, 286, 330, 350, 351, 356, 406, 455, 481, 482, 483, 553, 565, 588, 639, 703, 707, 750, 851, 874, 877, 892], "keyerror": [140, 262, 265, 266, 270, 274, 289, 304, 530, 584, 715, 747], "rais": [140, 144, 208, 260, 262, 265, 266, 267, 268, 270, 271, 274, 275, 276, 279, 285, 286, 289, 304, 318, 341, 344, 350, 351, 356, 360, 363, 365, 367, 372, 373, 406, 433, 441, 455, 461, 462, 464, 481, 482, 502, 530, 553, 564, 584, 598, 619, 630, 648, 650, 653, 657, 662, 699, 700, 702, 703, 712, 714, 715, 716, 747, 793, 804, 838, 840, 851, 873, 892], "reorder_channel": [140, 149, 216, 265, 266, 267, 268, 481, 482, 712, 714, 715, 716, 892], "exploratori": [140, 149, 167, 206, 216, 228, 869], "epochs_eeg": 140, "new_ord": [140, 149], "epochs_subset": 140, "033": [140, 149, 169, 224], "034": [140, 149, 169, 224], "035": [140, 149, 169, 224], "037": [140, 149, 169, 216, 224], "038": [140, 149, 169, 224], "039": [140, 142, 149, 169, 224], "041": [140, 142, 149, 169, 224], "042": [140, 149, 169, 224, 874], "043": [140, 149, 169, 224], "045": [140, 142, 149, 169, 224], "046": [140, 142, 149, 169, 224, 245, 672, 874], "047": [140, 142, 149, 169, 224], "049": [140, 142, 149, 169, 224], "054": [140, 142, 149, 169, 208, 224, 245, 542, 669, 674], "058": [140, 142, 149, 169, 219, 224], "unchang": [140, 149, 206, 265, 266, 267, 268, 481, 482, 600, 651], "blinkchannel": 140, "20auditori": 140, "20buttonpress": 140, "4face": [140, 151], "4visual": 140, "19visual": 140, "shorter_epoch": 140, "include_tmax": [140, 263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 712, 715, 892], "obj": [140, 161, 642, 845, 892], "0998976": 140, "expand": [140, 144, 160, 201, 206, 213, 265, 266, 267, 268, 271, 276, 279, 356, 444, 447, 472, 481, 482, 714, 716, 792, 871, 892], "later_epoch": 140, "tshift": [140, 264, 265, 266, 267, 268, 442, 712, 715], "amount": [140, 141, 162, 167, 178, 200, 207, 208, 223, 242, 262, 264, 265, 266, 267, 268, 272, 273, 274, 275, 276, 279, 280, 281, 365, 377, 414, 421, 454, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 523, 539, 563, 564, 608, 624, 712, 714, 715, 716, 790, 792, 799, 803, 812, 813, 815, 818, 820, 823, 871, 874, 892], "00166496": 140, "00332992": 140, "99833504": 140, "99667008": 140, "enforc": [140, 594, 892], "eog_data": 140, "channel_4_6_8": 140, "arr": [140, 216, 242, 691], "repeatedli": [140, 205, 207, 481, 482, 857, 892], "hierarch": [140, 143, 144, 240, 245, 438, 476, 529, 847, 892], "multiindex": [140, 265, 266, 712, 714, 715, 716], "aggreg": [140, 143, 145, 241, 265, 266, 267, 268, 316, 438, 481, 482, 712, 714, 716, 791, 792, 892], "endpoint": [140, 143, 168, 222, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 280, 281, 288, 581, 629, 630, 728, 738, 742], "sort_index": 140, "inplac": [140, 145, 259, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 319, 439, 449, 481, 482, 560, 613, 666, 851], "read_epochs_eeglab": [140, 189, 874, 878, 882, 892], "read_epochs_kit": [140, 188, 874, 882, 892], "audiovisu": [140, 166, 216], "epochs_from_fil": 140, "convent": [140, 160, 170, 172, 188, 190, 206, 207, 217, 245, 257, 270, 305, 326, 336, 498, 607, 630, 646, 728, 737, 738, 760, 874, 877, 892], "basenam": [140, 217], "_epo": 140, "issu": [140, 141, 144, 151, 161, 195, 202, 203, 206, 217, 218, 265, 266, 271, 276, 290, 292, 425, 481, 482, 564, 606, 675, 678, 790, 807, 813, 847, 849, 851, 870, 872, 873, 880, 892], "adher": [140, 143, 360, 446], "epochsfif": [140, 143], "anyth": [140, 188, 205, 390, 760, 851], "baseepoch": [140, 564, 851, 882, 892], "ndarrai": [140, 216, 222, 224, 242, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 298, 299, 307, 323, 346, 352, 365, 367, 371, 372, 413, 414, 415, 418, 421, 426, 430, 434, 440, 442, 450, 451, 452, 454, 457, 458, 459, 480, 481, 482, 484, 518, 539, 563, 564, 565, 572, 575, 576, 577, 579, 588, 592, 593, 596, 597, 614, 635, 661, 662, 677, 691, 692, 693, 697, 698, 699, 700, 702, 703, 712, 713, 714, 715, 716, 725, 728, 730, 731, 738, 741, 748, 749, 750, 760, 761, 764, 774, 777, 779, 792, 796, 798, 799, 801, 802, 815, 818, 819, 820, 822, 823, 824, 840, 890, 892], "321": [140, 148, 169, 202, 209, 227, 232], "10_epochs_overview": [140, 148], "aldai": [141, 245, 892], "reason": [141, 149, 150, 162, 166, 171, 172, 184, 200, 201, 202, 203, 204, 206, 207, 208, 216, 218, 227, 236, 237, 245, 264, 265, 266, 267, 268, 275, 299, 356, 374, 426, 481, 482, 564, 576, 589, 592, 599, 699, 700, 702, 703, 705, 712, 715, 789, 826, 851, 867, 871, 873, 874, 892], "safer": [141, 272, 273, 276, 279, 280, 281, 493], "distort": [141, 189, 202, 219, 242, 493, 750], "spuriou": [141, 146, 162, 455, 871], "carina": [141, 892], "forster": [141, 892], "email": [141, 851, 857], "carinaforster0611": 141, "merge_ev": [141, 217, 356, 882, 892], "baseline_tmin": 141, "baseline_tmax": 141, "4957": [141, 151, 337], "trad_aud": 141, "trad_vi": 141, "heterogen": [141, 201, 892], "aud_predictor": 141, "vis_predictor": 141, "trickier": 141, "seaprat": 141, "baseline_predictor": 141, "squeez": [141, 231, 232, 237], "singleton": [141, 760, 892], "\u03bcv": 141, "microvolt": [141, 188, 491, 874], "unstabl": [141, 162, 204, 356, 871, 892], "transpos": [141, 216, 227, 228, 232, 235, 236, 237, 877, 892], "reg_model": 141, "6254": 141, "lm": [141, 572], "namedtupl": [141, 697], "dict_kei": [141, 169, 206], "1998": [141, 149, 245, 874], "49949": [141, 149], "tell": [141, 150, 155, 162, 166, 171, 201, 205, 207, 213, 216, 229, 231, 237, 278, 851, 854, 855, 870, 874], "strongli": [141, 172, 199, 200, 208, 481, 482, 513, 849, 851, 867, 871, 874], "\u03b2": [141, 142, 219], "constant": [141, 156, 160, 170, 196, 199, 202, 212, 242, 260, 265, 266, 267, 268, 270, 374, 481, 482, 485, 515, 748, 847, 868, 874, 892], "effect_of_baselin": 141, "unsurprisingli": 141, "farther": [141, 871], "weaker": [141, 265, 266, 267, 268, 449, 450, 452, 453, 481, 482, 874], "pure": [141, 276, 851], "influenc": [141, 202, 204, 205, 245, 873], "reg_aud": 141, "reg_vi": 141, "show_sensor": [141, 144, 166, 784, 892], "truncate_yaxi": [141, 232, 784, 892], "subtl": 141, "apart": [141, 150, 168, 222], "diff_tradit": 141, "diff_regress": 141, "themselv": [141, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 542, 800, 873], "ought": 141, "persist": [141, 142, 199, 203, 871, 892], "interaction_effect": 141, "randomli": [141, 166, 227, 516, 597, 616, 678], "glm": [141, 245, 858], "lift": [141, 178, 196, 235, 237, 245], "psyp": [141, 151, 202, 232, 245, 698, 699, 700, 702, 703], "13451": [141, 245], "958": [141, 143, 148, 205, 228, 232], "15_baseline_regress": [141, 148], "imagemap": 142, "discontinu": [142, 146, 147, 148, 151, 165, 168, 202, 205, 216, 217, 222, 240, 265, 455, 500, 622, 714, 716, 847], "176": [142, 169, 171, 196, 209, 227, 231, 232, 245, 564], "until": [142, 200, 201, 208, 211, 260, 263, 265, 266, 267, 268, 270, 272, 273, 276, 279, 280, 281, 473, 480, 481, 482, 564, 567, 714, 716, 757, 760, 788, 790, 807, 813, 816, 851, 874], "scroll": [142, 166, 218, 219, 263, 265, 266, 481, 482, 564, 788, 790, 807, 813, 829, 892], "enabl": [142, 172, 219, 242, 257, 258, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 376, 473, 481, 482, 579, 606, 658, 699, 700, 702, 703, 714, 715, 755, 760, 769, 773, 776, 795, 813, 818, 823, 826, 849, 857, 867, 873, 874, 892], "unappli": [142, 150, 206, 208, 265, 266, 267, 268, 444, 445, 446, 447, 481, 482, 892], "purg": 142, "catch_trials_and_buttonpress": 142, "pick_ev": [142, 217, 882], "event_color": [142, 213, 217, 265, 266, 481, 482, 790, 813, 892], "butterfli": [142, 149, 151, 152, 172, 200, 206, 210, 219, 265, 266, 267, 268, 275, 481, 482, 564, 790, 794, 797, 804, 813, 829, 878, 892], "ecg_proj_fil": [142, 206], "ecg_proj": [142, 146, 206, 207], "175": [142, 150, 169, 227, 232, 245, 564], "41auditori": 142, "40button": 142, "8face": 142, "8visual": 142, "40visual": 142, "inherit": [142, 240, 356, 892], "joint": [142, 182, 207, 245, 265, 266, 267, 268, 274, 414, 421, 481, 482, 656, 714, 716, 792, 799, 812, 880, 892], "epochsspectrum": [142, 165, 243, 244, 265, 266, 267, 268, 455, 481, 716, 755, 882, 892], "\u03b4": [142, 219], "\u03b8": [142, 219], "\u03b3": [142, 219], "api": [142, 169, 192, 196, 219, 222, 227, 240, 415, 552, 760, 769, 773, 859, 863, 875], "jointli": [142, 162, 205, 207, 265, 266, 267, 268, 274, 298, 299, 357, 358, 359, 414, 421, 481, 482, 564, 576, 577, 714, 716, 792, 799, 811, 812, 871, 892], "prefer": [142, 151, 170, 171, 189, 190, 192, 202, 205, 206, 260, 265, 266, 267, 268, 362, 421, 443, 462, 481, 482, 564, 655, 714, 716, 814, 849, 851, 855, 857, 858, 870, 873, 874, 877], "untransform": 142, "docstr": [142, 151, 180, 202, 203, 210, 216, 219, 240, 266, 284, 298, 299, 476, 478, 479, 542, 714, 756, 758, 775, 892], "plot_topo_imag": [142, 265, 266, 892], "accompani": [142, 677, 873], "scalebar": [142, 892], "highli": [142, 188, 207, 223, 231, 501, 624, 628, 698, 855], "customiz": [142, 267, 268, 712, 797], "respond": [142, 144, 195, 873], "opposit": [142, 168, 518, 874], "0242": [142, 169], "pop": [142, 150, 200, 262, 265, 266, 270, 274, 289, 304, 530, 584, 747, 821, 849, 892], "had": [142, 151, 167, 168, 175, 181, 201, 202, 203, 206, 207, 219, 240, 242, 265, 266, 407, 437, 588, 629, 715, 874, 880, 892], "At": [142, 191, 204, 205, 211, 322, 481, 851, 857, 867, 892], "fullscreen": [142, 473, 892], "unusu": [142, 184, 200, 204], "reject_criteria": [142, 145, 151, 166, 201, 211], "3000e": [142, 145, 201], "find_layout": [142, 170, 882, 892], "font_color": [142, 265, 266, 712, 821], "reinforc": 142, "disguis": 142, "mayb": [142, 264, 265, 266, 267, 268, 481, 482, 561, 712, 714, 715, 716], "064": [142, 148, 228, 245, 348, 546, 672], "20_visualize_epoch": [142, 148], "who": [143, 257, 270, 564, 851, 855, 868, 873, 892], "lexic": [143, 868], "decis": [143, 191, 202, 242, 260, 265, 523, 622, 868], "kiloword_data_fold": 143, "kiloword_data_fil": 143, "capabl": [143, 155, 166, 168, 379, 760, 825, 829, 831, 832, 849, 851, 858, 868, 892], "surviv": [143, 270], "reload": 143, "attach": [143, 169, 200, 213, 216, 228, 240, 438, 847, 868], "numberoflett": [143, 228], "english": [143, 868], "lexicon": 143, "wordfrequ": 143, "render": [143, 156, 160, 171, 172, 257, 265, 266, 272, 273, 275, 276, 279, 280, 281, 473, 481, 482, 564, 712, 760, 769, 790, 807, 813, 818, 819, 823, 826, 828, 851, 857, 874, 875, 892], "orthographicdist": 143, "bigramfrequ": 143, "consonantvowelproport": 143, "450000": 143, "189490": 143, "900000": 143, "700704": 143, "546": [143, 196, 232], "600000": 143, "858537": 143, "484": [143, 196, 204, 209, 227, 232, 245, 563, 614], "700000": 143, "454540": 143, "1095": [143, 209], "539076": 143, "686": [143, 196], "drudgeri": 143, "473684": 143, "556303": 143, "732357": 143, "991226": 143, "859": [143, 232], "545879": 143, "billiard": 143, "500000": [143, 144, 195], "672098": 143, "838597": 143, "698970": 143, "615": [143, 196], "088112": 143, "959": [143, 232], "solenoid": 143, "111111": 143, "301030": 143, "544507": 143, "iloc": [143, 145], "iat": 143, "nindex": 143, "arbitrarili": [143, 158, 232, 874], "highcomplex": 143, "startswith": [143, 892], "district": 143, "disarrai": 143, "disast": 143, "diseas": 143, "discord": 143, "dispos": 143, "267": [143, 168, 169, 227, 232, 245, 866], "lasso": [143, 245, 265, 266, 267, 268, 270, 481, 482, 790, 813, 816, 892], "tentacl": 143, "banjo": 143, "corsag": 143, "fall": [143, 151, 168, 171, 210, 218, 258, 275, 367, 407, 438, 455, 566, 847, 874, 892], "rich": [143, 171, 849, 855], "typhoon": 143, "bungalow": 143, "colossu": 143, "linguist": 143, "dozen": [143, 200, 205, 207, 869], "share": [143, 190, 202, 213, 218, 259, 298, 613, 699, 700, 702, 703, 851, 869, 874, 877, 880, 892], "letter": [143, 170, 188, 228, 245, 760, 892], "n_letter": 143, "intens": [143, 160, 171, 181, 182, 190, 205, 267, 268, 272, 273, 276, 279, 280, 281, 283, 540, 541, 594, 760, 795, 818, 823, 847, 892], "sort_ord": 143, "obviou": [143, 171, 200, 205, 219, 235], "reaction": [143, 227, 265, 266, 791, 892], "new_metadata": 143, "foo": [143, 150, 171, 265, 266, 389, 715, 851], "564": [143, 148, 232, 245, 406], "30_epochs_metadata": [143, 148], "eriksen": 144, "flanker": [144, 868], "introductori": [144, 150, 162, 168, 169, 199, 216, 217, 227, 871], "straight": [144, 265, 266, 267, 268, 270, 481, 482, 816], "creation": [144, 149, 155, 168, 201, 218, 257, 259, 262, 265, 266, 275, 278, 310, 413, 576, 577, 874, 892], "ourselv": [144, 175, 204, 205, 207], "incorrect": [144, 176, 192, 201, 202, 212, 245, 849, 874, 892], "sophist": [144, 189, 456], "erp_cor": [144, 171, 868, 882], "infil": 144, "core_subject": 144, "001_task": [144, 212], "flankers_eeg": 144, "all_ev": 144, "all_event_id": 144, "935935": 144, "33793": 144, "target_left": 144, "target_right": 144, "incompat": [144, 633, 639, 849, 892], "decid": [144, 211, 242, 260, 265, 266, 454, 523, 622, 789, 873], "1500": 144, "invalid": [144, 229, 585, 892], "metadata_tmin": 144, "metadata_tmax": 144, "why": [144, 151, 158, 160, 192, 201, 202, 206, 216, 224, 227, 231, 245, 741, 744, 873], "event_nam": [144, 232, 438, 441], "551758": 144, "997070": 144, "434570": 144, "797": 144, "343750": 144, "917969": 144, "425781": 144, "416016": 144, "799": 144, "392578": 144, "990234": 144, "402344": 144, "802": [144, 232], "eleg": 144, "row_ev": [144, 438], "pertain": 144, "sync": [144, 259, 270, 443, 498, 613], "508789": 144, "00000": 144, "503906": 144, "449219": 144, "542969": 144, "792": [144, 232], "496094": 144, "794": [144, 209, 232], "437500": 144, "465820": 144, "547852": 144, "46582": 144, "descriptor": [144, 166, 240, 245, 438, 481, 482, 847], "hed": [144, 151, 240, 245, 438, 847], "inspir": [144, 438, 453, 750, 851, 890], "keep_first": [144, 438], "regardless": [144, 151, 171, 190, 204, 207, 455, 811, 847], "first_respons": [144, 438], "notna": 144, "411133": 144, "454102": 144, "443359": 144, "466797": 144, "400391": 144, "499023": 144, "584961": 144, "421875": 144, "450195": 144, "399414": 144, "316406": 144, "316": [144, 169, 195, 209, 232, 245, 420], "416992": 144, "386719": 144, "410156": 144, "467773": 144, "377930": 144, "483398": 144, "457031": 144, "566406": 144, "395508": 144, "354492": 144, "516": [144, 158, 196, 232], "326172": 144, "432617": 144, "538": [144, 175, 187, 196, 209, 232], "322266": 144, "482422": 144, "484375": 144, "652": [144, 209, 232], "371094": 144, "342773": 144, "704": [144, 232], "307617": 144, "442383": 144, "728": [144, 196], "376953": 144, "first_stimulu": 144, "perfect": [144, 158, 202, 210], "stimulus_sid": 144, "response_correct": 144, "correct_response_count": 144, "rememb": [144, 150, 161, 171, 176, 200, 205, 206, 216, 232, 874], "epochs_tmin": 144, "epochs_tmax": 144, "strong": [144, 183, 200, 205, 231, 564, 669, 674, 867], "099609375": 144, "513": [144, 195, 196, 232], "lastli": [144, 172, 209, 211, 241, 242, 851], "greater": [144, 166, 200, 205, 227, 230, 265, 266, 277, 360, 455, 564, 594, 595, 701, 715, 741, 744, 760, 892], "vis_erp": 144, "vis_erp_slow": 144, "asid": [144, 172, 199, 237], "fact": [144, 149, 151, 181, 182, 199, 205, 206, 210, 217, 420, 426, 564, 629, 847, 867, 874], "noisier": [144, 191], "deal": [144, 162, 171, 180, 202, 205, 206, 208, 217, 227, 231, 235, 237, 267, 268, 272, 273, 276, 279, 280, 281, 298, 299, 458, 564, 575, 588, 599, 613, 880, 892], "keep_last": [144, 438], "previous": [144, 149, 170, 204, 205, 257, 291, 298, 299, 649, 760, 892], "last_": [144, 438], "last_stimulu": 144, "last_respons": 144, "431641": 144, "576172": 144, "puls": [144, 146, 166, 168, 199, 205, 207, 217, 589, 592, 874], "c5": [144, 505], "cpz": 144, "isna": 144, "bummer": 144, "impress": 144, "resp_erp_correct": 144, "resp_erp_incorrect": 144, "deflect": [144, 199, 206, 207, 892], "immedi": [144, 156, 168, 200, 205, 208, 242, 258, 431, 481, 482, 567, 622, 684, 687, 769, 813, 847, 851, 873, 874, 892], "doubt": [144, 859], "resp_erp_diff": 144, "bolder": 144, "set_linewidth": 144, "grai": [144, 156, 160, 172, 200, 210, 213, 217, 229, 230, 231, 232, 237, 271, 472, 564, 616, 760, 775, 776, 784, 803], "trough_time_idx": 144, "trough_tim": 144, "emili": [144, 202, 245, 868, 892], "kappenman": [144, 202, 245, 868], "jaclyn": [144, 245, 868], "farren": [144, 245, 868], "wendi": [144, 195, 245, 420, 868], "zhang": [144, 245, 868, 874, 892], "andrew": [144, 180, 245, 564, 701, 868, 892], "stewart": [144, 245, 868], "luck": [144, 151, 202, 245, 868], "117465": [144, 245, 868], "nima": [144, 245, 438], "bigd": [144, 245, 438], "shamlo": [144, 245, 438], "kreutz": [144, 245, 438], "delgado": [144, 245, 438], "robbin": [144, 245, 438], "makoto": [144, 245, 438], "miyakoshi": [144, 245, 438], "marissa": [144, 245, 438], "westerfield": [144, 245, 438], "tarik": [144, 245, 438], "bel": [144, 245, 438], "bahar": [144, 245, 438], "koth": [144, 245, 438], "jessica": [144, 245, 438], "hsi": [144, 245, 438], "globalsip": [144, 245, 438], "6736796": [144, 245, 438], "217": [144, 148, 168, 169, 218, 221, 232], "40_autogenerate_metadata": [144, 148], "workflow": [145, 155, 201, 868, 870, 892], "200e": [145, 151, 201], "0113": [145, 166, 169, 176, 216], "0112": [145, 166, 169, 216], "0122": [145, 166, 169, 216, 241], "0132": [145, 169], "199795": 145, "320252": 145, "567619": 145, "248584": 145, "609895": 145, "700540": 145, "352746": 145, "908667": 145, "193135": 145, "049675": 145, "702938": 145, "168267": 145, "480975": 145, "182237": 145, "225684": 145, "072452": 145, "186476": 145, "283711": 145, "006895": 145, "912317": 145, "130290": 145, "157198": 145, "842466": 145, "986073": 145, "179816": 145, "040471": 145, "643716": 145, "835772": 145, "517952": 145, "214631": 145, "043144": 145, "672744": 145, "173156": 145, "688943": 145, "974112": 145, "561683": 145, "450115": 145, "778315": 145, "795987": 145, "277138": 145, "timedelta": [145, 218, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 712, 715], "132025e": 145, "156762e": 145, "324858e": 145, "060990e": 145, "870054e": 145, "835275e": 145, "790867e": 145, "049675e": 145, "702938e": 145, "416827e": 145, "748098e": 145, "018224e": 145, "212257e": 145, "072452e": 145, "283711e": 145, "300690e": 145, "691232e": 145, "213029e": 145, "515720e": 145, "178425e": 145, "986073e": 145, "304047e": 145, "643716e": 145, "783577e": 145, "851795e": 145, "521463e": 145, "204314e": 145, "672744e": 145, "568894e": 145, "974112e": 145, "556168e": 145, "450115e": 145, "377831e": 145, "117960e": 145, "727714e": 145, "0133": [145, 169], "dai": [145, 207, 257, 265, 266, 267, 268, 270, 481, 482, 483], "800204787": 145, "379736": 145, "123525": 145, "806864627": 145, "734826": 145, "339465": 145, "813524468": 145, "996158": 145, "627037": 145, "820184308": 145, "748030": 145, "024973": 145, "826844149": 145, "123811": 145, "917677": 145, "pivot": [145, 263, 788, 819], "long_df": [145, 228], "coupl": [145, 211, 216, 237, 417, 603, 858, 876, 892], "1342": [145, 169, 235, 237], "categorydtyp": 145, "nicer": [145, 206, 892], "hue": 145, "peak_lat": 145, "regex": [145, 892], "2123": [145, 169], "idxmax": 145, "melt": 145, "id_var": 145, "var_nam": 145, "value_nam": 145, "satur": [145, 510], "50_epochs_to_data_fram": [145, 148], "equidistantli": 146, "consecut": [146, 168, 235, 272, 273, 276, 279, 280, 281, 455, 523, 566, 567, 892], "briefli": [146, 151, 202, 219, 227], "hous": 146, "compute_proj_ecg": [146, 206, 207, 581, 589, 867, 882, 892], "envelope_correl": [146, 892], "manag": [146, 166, 171, 172, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 417, 424, 427, 430, 431, 457, 470, 472, 481, 482, 522, 525, 526, 537, 538, 547, 548, 553, 564, 569, 576, 577, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 754, 755, 790, 792, 795, 807, 813, 814, 849, 851, 856, 858, 873, 880, 892], "chan": [146, 256, 692], "221": [146, 169, 196, 209, 227, 231, 232], "heart": [146, 199, 204, 245, 741, 744, 892], "beat": [146, 211, 576, 589, 592, 664], "onpca": 146, "onecg": 146, "make_fixed_length_epoch": [146, 260, 882, 892], "unsuit": [146, 892], "misalign": [146, 178, 492, 892], "event_related_plot": 146, "1142": [146, 169], "n_sensor": [146, 241, 272, 276, 280, 776], "alpha_data": 146, "epochconnect": 146, "corr_matrix": 146, "first_30": 146, "last_30": 146, "corr_matric": 146, "color_lim": 146, "mpbl": 146, "60_make_fixed_length_epoch": [146, 148], "auto_tutorials_epoch": 148, "raw_fil": [149, 151], "happen": [149, 151, 156, 160, 161, 167, 168, 171, 196, 201, 203, 205, 227, 258, 265, 266, 319, 437, 439, 847, 851, 868, 871, 873, 877, 892], "discuss": [149, 151, 156, 165, 166, 168, 173, 180, 191, 196, 199, 202, 203, 216, 219, 227, 232, 242, 245, 715, 850, 851, 868, 870, 871, 873, 874, 892], "transfer": [149, 196, 200, 202, 600, 847, 867], "maintain": [149, 200, 227, 265, 266, 267, 268, 270, 481, 482, 483, 555, 851, 870, 873, 874, 892], "proven": [149, 892], "never": [149, 265, 266, 320, 583, 778, 851, 874, 892], "72160572e": 149, "57859354e": 149, "98040833e": 149, "75128428e": 149, "15309907e": 149, "83186429e": 149, "bewar": [149, 160, 874], "evoked_subset": 149, "repair": [149, 165, 166, 199, 200, 201, 206, 210, 214, 215, 219, 245, 262, 265, 267, 268, 270, 357, 359, 455, 481, 496, 558, 561, 563, 564, 576, 577, 579, 581, 582, 589, 606, 607, 611, 716, 811, 812, 832, 867, 892], "evk_fil": 149, "evokeds_list": [149, 150], "right_vi": 149, "remedi": 149, "left_right_aud": 149, "6992832460543575": [149, 151], "fairli": [149, 166, 199, 201, 202, 203, 205, 207, 208], "left_aud": 149, "right_aud": 149, "proport": [149, 227, 272, 273, 274, 276, 279, 280, 281, 355, 367, 479, 564, 572, 818, 823, 874, 892], "grand_averag": [149, 151, 882, 892], "intend": [149, 171, 210, 217, 258, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 438, 481, 482, 564, 600, 606, 858], "standard_error": [149, 265, 266, 267, 268, 629, 892], "iter_evok": [149, 151, 265, 266, 892], "ix": [149, 151], "return_amplitud": [149, 151, 267, 268], "569": [149, 172, 174, 232], "648": [149, 159, 164, 196, 232], "508": [149, 151, 196, 227, 228, 232], "10_evoked_overview": [149, 154], "evoked_fil": 150, "life": [150, 873], "evk": [150, 151], "superimpos": [150, 172, 199, 219, 564, 761, 804], "timeseri": [150, 224, 265, 266, 267, 268, 481, 482, 679, 713], "resembl": [150, 162, 175, 531, 592, 593], "wing": 150, "behav": [150, 202, 216, 269, 270, 443, 584, 892], "time_ranges_of_interest": 150, "drag": [150, 151, 161, 218, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 791, 792, 796, 799, 803, 812, 814, 815, 820, 822, 849, 869, 892], "averaging_dur": 150, "augment": [150, 877], "custom_func": 150, "0x7f72755db640": 150, "substr": [150, 634, 646, 892], "action": [150, 171, 851, 877, 880], "ambigu": [150, 273, 279, 281, 892], "temp_list": 150, "_comment": 150, "_evk": 150, "overhead": [150, 658, 755, 892], "trans_fil": 150, "00097": 150, "meg_surf": [150, 522], "_map": 150, "166": [150, 169, 202, 209, 227, 232, 237, 245], "20_visualize_evok": [150, 154], "materi": [151, 162, 847, 851, 871], "link": [151, 189, 245, 272, 276, 280, 449, 774, 818, 851, 857, 871, 874, 880, 892], "events_fil": [151, 201], "discard": [151, 200, 205, 206, 207, 210, 237, 598, 599, 626, 892], "last_samp": [151, 270, 364, 480, 481, 482, 847, 892], "13514": 151, "mislabel": 151, "lowercas": 151, "channel_renaming_dict": [151, 216], "schemat": 151, "diagram": [151, 205, 847], "addition": [151, 171, 190, 199, 206, 218, 240, 256, 273, 279, 281, 320, 331, 657, 740, 743, 823, 851, 866, 876], "realist": [151, 245, 867, 874], "dedic": [151, 199, 205, 207, 216, 481, 482, 813, 851, 855, 873, 881, 892], "use_browser_backend": [151, 200, 203, 205, 206, 207, 208, 265, 266, 481, 482, 564, 790, 807, 813, 882, 892], "xx": [151, 200, 203, 206, 207, 208, 259, 851], "backend": [151, 156, 160, 166, 171, 172, 181, 200, 203, 205, 206, 207, 208, 265, 266, 272, 273, 276, 279, 280, 281, 473, 481, 482, 564, 760, 767, 769, 770, 771, 772, 790, 807, 813, 818, 823, 825, 829, 830, 831, 832, 849, 850, 855, 871, 880, 892], "qt": [151, 166, 171, 172, 200, 203, 205, 206, 207, 208, 265, 266, 481, 482, 564, 760, 790, 807, 813, 829, 832, 849, 871, 892], "scheme": [151, 188, 222, 231, 262, 265, 266, 267, 268, 270, 274, 414, 421, 430, 481, 482, 563, 564, 579, 653, 656, 693, 712, 714, 716, 777, 790, 792, 799, 803, 812, 815, 816, 820, 822, 851, 874, 892], "eeg53": 151, "eog61": 151, "chose": 151, "proce": [151, 260, 265, 406, 564, 567, 574, 769, 871], "consol": [151, 855, 892], "eeg03": 151, "eeg01": 151, "eeg02": 151, "eeg04": 151, "eeg06": 151, "eeg07": 151, "eeg25": 151, "25auditori": 151, "27buttonpress": 151, "5visual": 151, "28visual": 151, "barplot": [151, 205], "lose": [151, 189, 218, 871], "plot_drop_log": [151, 201, 211, 265, 266, 882, 892], "break": [151, 165, 214, 215, 218, 259, 265, 267, 270, 481, 561, 567, 590, 626, 845, 851, 867, 892], "l_aud": [151, 237], "l_vi": [151, 237], "fig1": [151, 170], "speak": [151, 167, 168, 204, 859], "agreement": [151, 873], "warrant": 151, "popul": [151, 155, 165, 222, 225, 230, 245, 266, 268, 376, 414, 446, 482, 600, 694, 756, 847, 892], "leverag": [151, 873], "verifi": [151, 182, 242, 856, 857, 874], "plain": [151, 192, 204, 242, 334, 837], "ddof": [151, 162, 871], "lime": 151, "revisit": [151, 245, 414], "eeg17": 151, "eeg18": 151, "eeg26": 151, "eeg23": 151, "eeg24": 151, "eeg34": 151, "eeg35": 151, "left_ix": 151, "right_ix": 151, "roi_dict": 151, "left_roi": [151, 265, 266, 267, 268, 791, 796], "right_roi": [151, 265, 266, 267, 268, 791, 796], "roi_evok": 151, "combine_channel": [151, 882, 892], "aud_minus_vi": 151, "29969": 151, "69928": 151, "weak": [151, 205], "chapter": 151, "erplab": [151, 245], "consequ": [151, 162, 169, 210, 357, 358, 359, 443, 454, 498, 551, 871, 874, 892], "voltag": [151, 166, 168, 188, 189, 208, 217, 506, 847, 892], "p100": 151, "submit": [151, 228, 851, 873], "amp": [151, 178, 183, 185, 257, 892], "throughout": [151, 171, 211, 564, 868, 892], "remaind": 151, "print_peak_measur": 151, "3f": [151, 210, 228, 232, 242, 265, 266, 267, 268, 481, 482, 714, 716, 792, 799], "good_tmin": 151, "good_tmax": 151, "eeg55": 151, "578": [151, 196, 232, 240, 244], "pull": [151, 206, 830, 847, 858, 873], "priori": [151, 242, 874], "believ": [151, 242, 851, 874], "eeg59": 151, "fist": 151, "l_vis_roi": 151, "ch_roi": 151, "lat_roi": 151, "amp_roi": 151, "FOR": 151, "ONE": [151, 157, 196, 245], "suscept": [151, 203, 588], "challeng": [151, 212, 245, 868, 871, 880], "meth": [151, 172, 851, 892], "guarante": [151, 188, 200, 205, 208, 210, 227, 265, 266, 267, 268, 444, 445, 446, 447, 481, 482, 513, 892], "rise": [151, 497, 617, 623, 847], "crucial": [151, 156, 199, 235], "095": [151, 170, 262, 265, 266, 267, 268, 270, 274, 314, 332, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 784, 792, 794, 796, 799, 800, 803, 810, 812, 814, 815, 816, 820, 822, 892], "bad_tmin": 151, "bad_tmax": 151, "bad_lat_roi": 151, "bad_amp_roi": 151, "487": [151, 196], "unclear": [151, 851], "truli": [151, 202, 699], "pink": [151, 156, 776, 847], "star": 151, "yourself": [151, 156, 169, 199, 203, 216, 257, 267, 268, 492, 799, 851], "c6": 151, "act": [151, 169, 203, 204, 206, 210, 265, 266, 267, 268, 278, 298, 299, 349, 476, 478, 479, 481, 482, 542, 599, 656, 715, 847, 869, 871, 873, 892], "eeg54": 151, "eeg57": 151, "l_vis_mean_roi": 151, "mean_amp_roi": 151, "mean_amp_roi_df": 151, "mean_amp": 151, "numeric_onli": 151, "279764": 151, "685840": 151, "reiter": 151, "hypothes": [151, 227, 228, 880], "l_vis_crop": 151, "mean_amp_al": 151, "mean_amp_all_df": 151, "option_context": 151, "max_column": 151, "689513": 151, "078492": 151, "381191": 151, "609264": 151, "eeg05": 151, "113717": 151, "eeg56": 151, "064174": 151, "259681": 151, "eeg58": 151, "156472": 151, "802306": 151, "eeg60": 151, "878811": 151, "dietrich": [151, 245, 531, 874], "lehmann": [151, 245, 531, 874], "wolfgang": [151, 245, 741, 744], "skrandi": [151, 245], "identif": [151, 205, 245, 579], "checkerboard": [151, 166, 242, 245, 868], "609": [151, 232, 245], "621": [151, 232, 245], "90419": [151, 245], "neurobiologi": [151, 245], "227": [151, 169, 227, 231, 232, 245, 392, 868], "1984": [151, 245], "0301": [151, 245], "0082": [151, 245], "90003": [151, 245], "micah": [151, 245], "brunet": [151, 245], "michel": [151, 185, 245, 392, 564, 672], "s10548": [151, 208, 245, 580, 677], "0054": [151, 245], "ma": [151, 245, 892], "52585": [151, 245], "mitpress": [151, 245], "book": [151, 245, 453, 851], "javier": [151, 245], "lopez": [151, 245], "calderon": [151, 245], "00213": [151, 245], "preclud": [151, 202, 210, 245, 599], "00131": [151, 202, 245], "rufin": [151, 202, 245], "vanrullen": [151, 202, 245], "fallaci": [151, 202, 245], "00365": [151, 202, 245], "nichola": [151, 212, 245, 578, 868], "gaspelin": [151, 245], "12639": [151, 195, 245], "292": [151, 154, 169, 209, 232], "30_eeg_erp": [151, 154], "perspect": [152, 206, 760], "satisfi": [152, 161, 227, 298, 299, 694, 714, 716, 874], "40_whiten": [152, 154], "repetit": [153, 165, 677], "auto_tutorials_evok": 154, "outer": [155, 158, 160, 161, 183, 257, 309, 564, 599, 760, 806, 847, 852, 855, 858, 867, 868, 871, 874, 877], "tissu": [155, 158, 847], "boundari": [155, 158, 172, 182, 191, 219, 262, 265, 266, 267, 268, 271, 274, 275, 365, 414, 421, 472, 481, 482, 563, 564, 588, 616, 677, 691, 712, 714, 716, 760, 765, 777, 778, 792, 799, 803, 812, 814, 815, 820, 822, 847, 857, 877, 892], "analog": [155, 188, 190, 196, 206, 210, 265, 266, 267, 268, 449, 481, 482, 489, 496, 504, 511, 561, 712, 714, 715, 716, 847, 877, 892], "freesurfer_hom": [155, 375, 857], "setupfreesurf": 155, "sh": [155, 854, 857], "folder": [155, 156, 158, 161, 170, 188, 216, 275, 278, 305, 309, 380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 462, 463, 468, 497, 510, 623, 655, 776, 778, 851, 854, 857, 892], "my_subject": 155, "my_nifti": 155, "subfold": [155, 389], "hour": [155, 481, 482, 564, 807, 813], "beforehand": [155, 265, 266, 790, 828], "set_config": [155, 171, 265, 266, 378, 389, 462, 481, 482, 564, 758, 790, 807, 813, 849, 851, 867, 882, 892], "scan": [155, 166, 176, 180, 183, 210, 270, 393, 594, 595, 852, 855, 858, 863, 877, 880], "overview": [155, 156, 165, 170, 171, 173, 174, 180, 201, 205, 207, 214, 215, 227, 241, 250, 265, 266, 267, 268, 270, 276, 355, 405, 455, 481, 482, 502, 524, 530, 531, 545, 561, 564, 581, 582, 589, 712, 742, 784, 790, 793, 807, 813, 829, 847, 871], "buckner40not": 155, "standalon": [155, 853, 884, 892], "10_background_freesurf": [155, 164], "landmark": [156, 222, 337, 367, 847, 867, 874, 877, 892], "t1w": [156, 314], "nifti1imag": [156, 182, 277, 280, 281, 309], "dataobj": [156, 160, 182], "xyzt_unit": 156, "uint8": 156, "t1_mgh": 156, "mghimag": [156, 874], "draw": [156, 170, 176, 177, 202, 229, 262, 265, 266, 267, 268, 270, 274, 314, 414, 421, 481, 482, 563, 564, 579, 584, 592, 712, 714, 716, 777, 783, 784, 791, 792, 794, 799, 803, 806, 810, 812, 815, 816, 820, 822, 874, 877, 892], "arrow": [156, 160, 161, 178, 183, 199, 203, 206, 219, 262, 263, 265, 266, 267, 268, 273, 274, 279, 280, 281, 414, 421, 481, 482, 563, 564, 712, 714, 716, 760, 777, 788, 790, 791, 792, 796, 799, 802, 803, 812, 813, 815, 820, 823, 824, 874, 892], "ight": 156, "nterior": 156, "longest": 156, "uperior": 156, "camera": [156, 160, 192, 267, 268, 473, 760, 774, 776, 795, 828, 892], "dig_mri_dist": [156, 367, 882, 892], "na": [156, 242, 488, 847], "preauricular": [156, 314, 338, 847, 874], "manufactur": [156, 170, 188, 189, 190, 192, 847, 874, 880, 892], "faq": [156, 189, 202, 208, 311, 374, 489, 599, 872], "intersect": [156, 160, 161, 184, 599, 616, 867, 892], "purpl": [156, 158, 237], "perpendicular": [156, 178, 874], "goe": [156, 160, 202, 218, 874], "upward": [156, 160, 205, 209, 760, 784], "compani": [156, 245, 694, 873], "acquir": [156, 200, 285, 286, 309, 505, 863, 868, 873, 874, 877, 892], "emit": [156, 209, 259, 265, 266, 267, 268, 270, 272, 273, 275, 276, 279, 280, 281, 285, 286, 318, 341, 350, 351, 356, 360, 363, 365, 367, 372, 373, 433, 448, 461, 464, 481, 482, 502, 564, 600, 619, 648, 650, 712, 714, 715, 716, 757, 793, 804, 838, 840, 847, 892], "coregist": [156, 309, 473], "front": [156, 267, 268, 308, 433, 760, 794, 847, 874], "magenta": 156, "1mm": 156, "anisotrop": [156, 245, 874], "incorrectli": [156, 871, 892], "identity_tran": 156, "mri_voxel": [156, 327, 515, 747], "corner": [156, 191, 202, 203, 206, 219, 257, 265, 266, 267, 268, 270, 481, 482, 773, 784, 790, 798, 813, 877, 892], "inferior": [156, 160, 847], "seghead_rr": 156, "seghead_tri": 156, "read_surfac": [156, 160, 161, 271, 645, 661, 845, 867, 882, 892], "mri_to_head": 156, "scalp_pts_in_head_coord": 156, "head_to_meg": 156, "scalp_pts_in_meg_coord": 156, "vox_to_mri": 156, "get_vox2ras_tkr": [156, 160, 182], "mri_to_vox": 156, "scalp_points_in_vox": 156, "scene": [156, 160, 171, 195, 245, 257, 267, 268, 272, 273, 276, 279, 280, 281, 420, 473, 760, 766, 767, 769, 776, 795, 818, 823, 827, 828, 830, 849, 869, 892], "nose": [156, 208, 308], "behind": [156, 171, 195, 200, 205, 473, 779, 869], "roughli": [156, 356, 588, 849, 892], "world": [156, 160, 172, 182, 202, 218, 229, 277, 457], "anonym": [156, 265, 266, 267, 268, 270, 481, 482, 483, 871, 892], "blur": [156, 874], "fiffv_point_cardin": [156, 160, 270, 877], "fiffv_point_nas": [156, 160, 270, 877], "fiffv_coord_head": [156, 269, 270, 877], "nasion_mri": [156, 160], "nasion_vox": [156, 160], "toggl": [156, 166, 172, 191, 200, 205, 219, 265, 266, 481, 482, 564, 760, 790, 805, 807, 813, 829, 892], "radio": [156, 880], "icon": [156, 172], "fid": [156, 711], "icp": [156, 892], "finetun": 156, "inner_skul": [156, 158, 159, 161, 172, 183, 278, 648, 776, 867, 868], "outer_skul": [156, 158, 159, 161, 170, 172, 278, 776, 867, 868], "equiv": [156, 183, 184, 185, 208], "rv": [156, 183, 184, 185, 208, 868], "00348961": [156, 208], "mu1": [156, 183, 184, 185, 208], "944714": [156, 208], "lambda1": [156, 183, 184, 185, 208], "137173": [156, 208], "mu2": [156, 183, 184, 185, 208], "667447": [156, 208], "683794": [156, 208], "mu3": [156, 183, 184, 185, 208], "26595": [156, 208], "lambda3": [156, 183, 184, 185, 208], "0105972": [156, 208], "6156": 156, "2300": 156, "1904": 156, "20_source_align": [156, 164], "hsp": [157, 188, 257, 314, 327, 339, 367, 506, 625, 874, 892], "preprat": 157, "jon": [157, 245, 892], "houck": [157, 245, 892], "faveli": [157, 879, 892], "skin": [157, 158, 161, 257, 265, 266, 267, 268, 309, 367, 481, 482, 561, 712, 714, 715, 716, 847, 868, 871, 874, 892], "fit_fiduci": [157, 367], "gui": [157, 158, 160, 265, 266, 272, 273, 276, 279, 280, 281, 310, 481, 482, 564, 776, 790, 807, 813, 818, 823, 849, 851, 855, 857, 858, 865, 867, 869, 871, 882, 892], "fit_icp": [157, 367], "n_iter": [157, 367, 597], "nasion_weight": [157, 367], "omit_head_shape_point": [157, 367], "compute_dig_mri_dist": [157, 367], "write_tran": [157, 644, 882], "abil": [157, 178, 180, 196, 670, 671, 740, 743, 869, 873, 880, 892], "set_scale_mod": [157, 367], "fetch_infant_templ": [157, 159, 868, 882, 892], "scale_mri": [157, 367, 651, 882, 892], "clau": [157, 245], "plo": [157, 196, 245], "e0232100": [157, 245], "pone": [157, 196, 245], "0232100": [157, 245], "683": [157, 164], "25_automated_coreg": [157, 164], "concept": [158, 176, 227, 245, 847, 875, 878], "watershed_bem": [158, 595, 858, 871, 874, 892], "flash_bem": [158, 595, 858, 874, 892], "make_watershed_bem": [158, 191, 847, 871, 882, 892], "make_flash_bem": [158, 305, 847, 882, 892], "plot_bem": [158, 160, 311, 776, 871, 874, 882, 892], "plot_bem_kwarg": 158, "brain_surfac": [158, 778], "mrilab": [158, 877], "isn": [158, 166, 224, 242, 261, 265, 406, 407, 633, 636, 639, 715, 851, 871], "candid": [158, 200, 847, 873], "oct4": 158, "90mm": 158, "57798": 158, "24365": 158, "20377": 158, "32480": 158, "22941": 158, "2787": 158, "9357": 158, "20154": 158, "846": [158, 182, 232], "10797": 158, "12738": 158, "13679": 158, "10203": 158, "2362": [158, 205, 245, 564], "10376": 158, "midpoint": [158, 190, 267, 268, 778, 874, 892], "make_bem_model": [158, 161, 191, 278, 367, 433, 464, 521, 527, 619, 648, 650, 840, 867, 882, 892], "4th": [158, 199, 265, 266, 267, 268, 416, 425, 449, 450, 452, 453, 481, 482, 576, 577], "icosahedron": [158, 160, 161, 257, 272, 276, 280, 660, 818], "n_tri": [158, 160, 271, 840], "topologi": [158, 202, 551, 892], "commonli": [158, 168, 170, 175, 202, 242, 270, 472, 564, 847, 892], "474": [158, 209, 232, 278], "gone": 158, "adequ": [158, 207, 270], "235": [158, 169, 181, 209, 232], "1422": [158, 169], "fwd_fix": 158, "explicitli": [158, 172, 188, 196, 201, 203, 204, 205, 235, 260, 265, 266, 267, 268, 270, 275, 298, 299, 305, 312, 315, 331, 356, 360, 361, 372, 373, 374, 414, 416, 421, 430, 435, 452, 453, 457, 458, 476, 478, 479, 481, 482, 516, 542, 563, 564, 566, 580, 581, 582, 591, 597, 605, 607, 614, 616, 656, 664, 665, 666, 675, 676, 678, 680, 698, 699, 700, 701, 702, 703, 712, 714, 715, 716, 720, 721, 722, 723, 725, 743, 784, 790, 791, 794, 796, 797, 800, 809, 814, 849, 851, 867, 873, 880, 892], "src_hemi": 158, "apply_forward": [158, 286, 882, 892], "write_forward_solut": [158, 631, 882, 892], "justifi": [158, 453, 481, 482, 892], "claim": 158, "30_forward": [158, 164], "centimet": 159, "fs_dir": [159, 390], "live": [159, 202, 851, 892], "1005": 159, "new_nam": 159, "rstrip": 159, "fp": [159, 450, 670], "999994": 159, "003552": 159, "000202": 159, "003558": 159, "998389": 159, "056626": 159, "000001": [159, 228, 231], "998395": 159, "2433": [159, 169], "7809": 159, "8001": 159, "4052": 159, "6mo": [159, 392], "ants6": 159, "0months3t": 159, "come": [159, 175, 181, 188, 189, 202, 203, 205, 207, 218, 228, 242, 271, 276, 375, 505, 524, 587, 626, 847, 849, 851, 855, 856, 868, 874, 892], "fname_1020": 159, "mon": [159, 505], "read_dig_fif": [159, 314, 327, 330, 333, 334, 335, 337, 338, 339, 874, 882, 892], "03d": [159, 498], "99975431": 159, "01839625": 159, "01236795": 159, "00087239": 159, "0143472": 159, "96230429": 159, "27159646": 159, "01252444": 159, "01689809": 159, "27135229": 159, "96233177": 159, "03137219": 159, "48640": 159, "48214": 159, "35_eeg_no_mri": [159, 164], "readabl": [160, 265, 266, 267, 268, 377, 416, 425, 450, 452, 453, 481, 482, 594, 851], "anterior": [160, 271, 326, 689, 847, 874, 892], "superior": [160, 273, 279, 281, 634, 760, 847, 874], "wide": [160, 166, 216, 851, 873], "unfamiliar": [160, 855], "asarrai": [160, 231], "unsign": [160, 272, 273, 276, 279, 280, 281, 892], "triplet": [160, 270, 458, 531, 662], "geograph": 160, "earth": 160, "north": 160, "prime": [160, 170], "meridian": 160, "degre": [160, 162, 192, 206, 213, 227, 229, 232, 235, 257, 262, 267, 268, 270, 305, 309, 492, 568, 584, 597, 665, 699, 700, 702, 703, 712, 760, 765, 796, 828, 847, 857, 871, 874, 892], "nonetheless": [160, 202], "scanner": [160, 278, 475, 868, 874], "nativ": [160, 182, 188, 189, 265, 266, 267, 268, 318, 327, 332, 444, 445, 446, 447, 481, 482, 498, 506, 625, 760, 762, 868, 871, 880, 892], "mind": [160, 162, 175, 202, 256, 851], "si": [160, 190, 192, 227, 241, 265, 266, 267, 268, 299, 458, 481, 482, 587, 794, 796], "xyz_ra": 160, "00000000e": 160, "15484021e": 160, "91852465e": 160, "22726395e": 160, "56816911e": 160, "57160827e": 160, "18960930e": 160, "49011647e": 160, "40284092e": 160, "00712036e": 160, "726": [160, 232], "ras_coords_mm": 160, "inv_affin": 160, "i_": [160, 188], "j_": 160, "k_": 160, "imshow_mri": 160, "aff2axcod": 160, "ori_slic": 160, "ori_nam": 160, "set_path_effect": 160, "reorient": 160, "rightward": 160, "x_order": 160, "lip": 160, "y_order": 160, "torig": 160, "vox2ras_tkr": [160, 182], "conform": [160, 190, 259, 874, 892], "matter": [160, 170, 265, 266, 267, 268, 271, 472, 481, 482, 516, 564, 616, 712, 714, 715, 716, 794, 867, 873, 892], "freeurfer": 160, "whenev": [160, 202, 851, 869], "everywher": 160, "xyz_mri": 160, "get_mni_fiduci": [160, 314, 368, 776, 882, 892], "digpoint": [160, 367, 892], "nasion_head": 160, "nasion_dig_mri": 160, "nasion_dig_vox": 160, "convention": 160, "rr_mm": 160, "313728": 160, "80481719970703": 160, "rr_vox": 160, "tricontour": 160, "renderer_kwarg": 160, "curv": [160, 196, 265, 266, 267, 268, 270, 481, 482, 673, 710, 714, 716, 874, 877, 892], "read_curvatur": [160, 882], "y_shift": 160, "z_shift": 160, "this_rr": 160, "this_tri": 160, "copper_r": 160, "quiver3d": [160, 206, 892], "1050": 160, "wirefram": 160, "cyan": [160, 481, 482, 813], "line_width": 160, "cull": 160, "render_lines_as_tub": 160, "uniformli": [160, 191, 207, 478], "deform": [160, 170, 245], "uniform": [160, 367, 435, 531, 664, 679, 702, 703, 847, 892], "subsampl": [160, 260, 264, 265, 266, 267, 268, 278, 481, 482, 520, 581, 582, 660, 698, 712, 715, 724, 760, 867, 892], "rr_sph": 160, "mri_mni_tran": 160, "xyz_mni": 160, "02248488": 160, "00844919": 160, "03621711": 160, "00111715": 160, "07107091": 160, "91486582": 160, "40609791": 160, "02300193": 160, "00875602": 160, "43369992": 160, "02811882": 160, "03356932": 160, "land": [160, 222], "difficult": [160, 189, 201, 232, 564, 874], "gist": [160, 176, 189, 265, 266, 267, 268, 481, 482, 871], "github": [160, 265, 266, 267, 268, 481, 482, 849, 859, 863, 870, 871, 872, 873], "alexrockhil": 160, "b5a1ce6c6ba363cf3f277cd321a763bf": 160, "50_background_freesurfer_mn": [160, 164], "aris": [161, 199, 588], "ezemikulan": 161, "blender_freesurf": 161, "ezequiel": [161, 892], "mikulan": [161, 892], "manorama": [161, 892], "kadwani": [161, 892], "shutil": 161, "flash": [161, 213, 278, 305, 309, 595, 776, 868, 892], "surf_dir": 161, "problemat": [161, 189, 202, 205, 206, 210, 227, 265, 266, 275, 310, 332], "skill": [161, 851], "conv": 161, "conv_dir": 161, "makedir": 161, "exist_ok": 161, "read_metadata": [161, 642], "write_surfac": [161, 642, 645, 882, 892], "wavefront": [161, 642, 845, 892], "navig": [161, 216, 265, 266, 275, 280, 281, 481, 482, 790, 813, 824, 849, 855, 875], "vert": [161, 178, 224, 242, 278], "preset": [161, 272, 273, 276, 279, 280, 281, 760, 818, 823], "beginn": [161, 853, 876], "teach": [161, 177, 245, 892], "_fix": 161, "inner_skull_fix": 161, "Be": [161, 213, 216, 218, 267, 268, 797], "backup": 161, "mistak": [161, 851, 871], "inner_skull_orig": 161, "volume_info": [161, 642, 845], "vol_info": 161, "faulti": 161, "write_head_bem": [161, 882, 892], "head_dir": 161, "read_bem_surfac": [161, 520, 521, 618, 882, 892], "make_scalp_surfac": [161, 858, 882, 892], "shrinkwrap": 161, "\u2460": 161, "\u2461": 161, "\u2462": 161, "\u2464": 161, "tab": [161, 192, 257, 473, 552, 768, 851, 869], "\u2465": 161, "\u2467": 161, "snap": [161, 892], "noth": [161, 184, 185, 201, 262, 265, 266, 267, 268, 274, 277, 356, 367, 414, 421, 425, 427, 481, 482, 563, 564, 579, 653, 712, 714, 716, 763, 773, 777, 792, 799, 803, 812, 815, 820, 822, 868, 877, 892], "toolbar": [161, 825], "\u2468": 161, "extrus": 161, "extrud": 161, "rough": [161, 871], "ahead": [161, 851], "kernel": [161, 190, 195, 227, 242, 245, 272, 273, 276, 279, 280, 281, 420, 665, 849, 855, 857, 871, 892], "mri_convert": [161, 874], "fwhm": [161, 728, 738, 742, 882, 892], "t1_smoothed_3": 161, "delet": [161, 171, 200, 201, 211, 259, 262, 265, 266, 267, 268, 274, 365, 414, 421, 481, 482, 563, 564, 579, 655, 712, 714, 716, 777, 799, 803, 812, 815, 820, 851, 859, 874, 892], "cleaner": [161, 202], "encount": [161, 165, 189, 202, 448, 849, 857, 871], "runtimeerror": 161, "20516": 161, "isomorph": 161, "defect": [161, 257, 310, 367, 433, 464, 619, 648, 650, 840, 871, 892], "733": [161, 209, 232], "1014": 161, "2068": 161, "7732": 161, "8435": [161, 892], "8489": 161, "10181": 161, "11120": [161, 892], "11121": 161, "11122": [161, 892], "11304": 161, "11788": 161, "disrupt": 161, "999668": 161, "wrong": [161, 850, 892], "easiest": [161, 199, 201, 203, 222, 851, 854], "unedit": 161, "gpl": 161, "water": 161, "clean_from_arrai": 161, "80_fix_bem_in_blend": [161, 164], "bb": [162, 443], "pp": [162, 265, 266, 435, 694], "desc": [162, 206, 274], "66000": 162, "write_cov": [162, 620, 882, 892], "inaccur": [162, 216, 262, 265, 266, 267, 268, 274, 356, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 867, 874], "noise_cov_baselin": 162, "noise_cov_reg": 162, "1768": [162, 210, 245, 599], "1785": 162, "1797": 162, "freedom": [162, 206, 227, 229, 232, 235, 262, 267, 268, 473, 699, 700, 702, 703, 776, 795, 871, 892], "violat": [162, 851, 871], "hack": [162, 242], "evoked_meg": 162, "empty_room": 162, "improp": [162, 892], "overestim": [162, 204], "juha": [162, 210, 245, 599, 871], "simola": [162, 210, 245, 599, 871], "kajola": [162, 210, 245, 435, 575, 599, 871, 874], "3359": [162, 245, 871], "3372": [162, 245, 871], "tsp": [162, 205, 245, 356, 564, 871], "853302": [162, 245, 871], "90_compute_covari": [162, 164], "aka": [163, 165, 190], "auto_tutorials_forward": 164, "emphasi": [165, 267, 268, 794, 875], "topic": [165, 166, 189, 199, 202, 204, 245, 298, 866, 875, 876], "knowledg": [165, 242, 867, 873], "unexplain": 165, "experienc": [165, 566, 873], "troubl": [165, 892], "configur": [165, 168, 173, 174, 190, 207, 216, 232, 265, 266, 359, 383, 389, 462, 463, 473, 481, 482, 506, 542, 552, 564, 576, 577, 655, 711, 755, 760, 790, 807, 813, 826, 827, 828, 849, 856, 868, 870, 871, 874, 877, 880, 882, 892], "eyetrack": [165, 193, 194, 213, 259, 265, 266, 267, 268, 313, 376, 481, 482, 500, 561, 712, 714, 715, 716, 874, 881, 882, 892], "infrar": [165, 190, 214, 215, 245, 265, 266, 267, 268, 270, 355, 443, 481, 482, 510, 561, 601, 602, 603, 605, 712, 714, 715, 716, 760, 784, 793, 798, 858, 868, 874, 892], "spectroscopi": [165, 190, 214, 215, 245, 265, 266, 267, 268, 270, 355, 443, 481, 482, 510, 561, 601, 602, 603, 605, 712, 714, 715, 716, 760, 784, 793, 798, 858, 868, 874, 892], "tracker": [165, 191, 214, 215, 259, 265, 270, 455, 498, 500, 555, 584, 585, 586, 613, 851, 868, 871, 892], "vssr": [165, 243, 244, 265, 270, 314, 330, 443, 491, 561, 714, 822, 868], "bti": [165, 186, 187, 227, 262, 263, 265, 267, 268, 270, 304, 356, 455, 457, 492, 527, 776, 788, 874, 892], "twowai": [165, 233, 234, 265, 270, 481, 561, 626, 693, 695, 696, 700, 715, 742, 892], "anova": [165, 196, 227, 230, 233, 234, 238, 239, 265, 267, 268, 270, 276, 278, 362, 481, 530, 531, 545, 561, 626, 641, 684, 693, 694, 695, 696, 700, 703, 704, 715, 742, 760, 892], "spatiotempor": [165, 229, 233, 234, 245, 265, 267, 268, 270, 320, 481, 561, 599, 626, 692, 699, 703, 704, 715, 742, 781, 784, 892], "strf": [165, 197, 198, 420, 426, 454], "submodul": [165, 166, 199, 205, 207, 216, 222, 225, 851, 892], "corrupt": [165, 199, 200, 225, 226, 262, 265, 268, 269, 270, 271, 276, 356, 366, 455, 481, 530, 531, 545, 631, 634, 676, 679, 760, 871, 892], "auto_tutorials_python": 165, "auto_tutorials_jupyt": 165, "varieti": [166, 188, 190, 199, 216, 874], "smoothli": [166, 201, 216, 262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 792, 799, 803, 812, 815, 820], "substitut": [166, 375, 849, 873, 874], "glimps": [166, 216], "41700": 166, "custom_ref_appli": [166, 169, 216, 222, 270, 892], "file_id": [166, 169, 216, 265, 266, 267, 268, 270, 481, 482, 483, 877, 892], "hpi_mea": [166, 169, 216, 270, 892], "hpi_result": [166, 169, 216, 270, 892], "meas_dat": [166, 168, 169, 201, 216, 218, 222, 259, 265, 266, 267, 268, 270, 480, 481, 482, 483, 564, 600, 807, 813, 892], "utc": [166, 169, 216, 218, 265, 266, 267, 268, 270, 481, 482, 892], "meas_id": [166, 169, 216, 265, 266, 267, 268, 270, 481, 482, 483, 877, 892], "breviti": 166, "walk": [166, 205, 207], "orig_raw": 166, "chan_idx": 166, "sent": [166, 168, 190, 191, 205, 213, 217, 275, 868], "deliveri": 166, "squarewav": 166, "unambigu": [166, 168], "older": [166, 168, 170, 322, 434, 481, 877, 892], "summat": [166, 168, 202, 704], "6994": 166, "7086": 166, "7192": 166, "7304": 166, "7413": 166, "ordinari": [166, 168, 200, 206, 227, 582, 590, 697, 873], "autoreject": [166, 200, 201, 858], "aren": [166, 208, 458], "fewest": 166, "conds_we_care_about": 166, "aud_epoch": 166, "vis_epoch": 166, "271": [166, 169, 227, 232], "richer": 166, "aud_evok": 166, "vis_evok": 166, "classic": [166, 242, 272, 273, 276, 279, 280, 281, 741, 744, 760, 818, 823], "p200": [166, 191], "dorso": 166, "evoked_diff": [166, 211], "underdetermin": 166, "akin": 166, "inverse_operator_fil": 166, "inv_oper": 166, "\u03bb\u00b2": 166, "61922423e": 166, "06837855e": 166, "49139511e": 166, "10_overview": [166, 174], "obligatorili": 167, "unexpect": [167, 196, 245, 265, 266, 267, 268, 320, 356, 510, 871], "apply_funct": [167, 265, 266, 267, 268, 481, 482, 892], "unprocess": [167, 877], "original_raw": 167, "complex128": [167, 265, 266, 267, 268, 481, 482], "certain": [167, 168, 191, 199, 203, 205, 210, 222, 241, 263, 267, 268, 389, 440, 469, 481, 482, 542, 564, 583, 600, 699, 700, 794, 826, 849, 851, 873, 874, 892], "unaffect": [167, 203, 420], "rereferenced_raw": 167, "ref_data": [167, 656], "fig_orig": 167, "fig_reref": 167, "unless": [167, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 414, 417, 421, 424, 427, 430, 431, 433, 438, 457, 459, 470, 472, 476, 478, 479, 481, 482, 491, 522, 525, 526, 537, 538, 542, 547, 548, 563, 564, 569, 576, 577, 599, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 750, 784, 790, 791, 792, 795, 799, 807, 813, 814, 815, 851, 873, 874, 892], "15_inplac": [167, 174], "broadli": 168, "ram": [168, 199, 201, 216, 217, 218, 219, 265, 266, 481, 482, 564, 790, 807, 813, 892], "36037": [168, 199, 203, 206, 207, 208, 210, 217, 218, 219], "necessarili": [168, 170, 189, 199, 201, 204, 258, 265, 266, 298, 769, 874], "instantan": [168, 224], "receiv": [168, 190, 435, 498, 673, 849, 874, 892], "rectangular": [168, 202, 227, 272, 273, 276, 279, 280, 281, 818, 823], "ttl": [168, 613], "upcom": 168, "newer": [168, 170, 205, 849, 854, 857, 859, 892], "27977": 168, "28345": 168, "28771": 168, "29219": 168, "29652": 168, "preced": [168, 362, 760, 847, 851, 892], "config": [168, 171, 188, 257, 258, 265, 266, 378, 380, 381, 382, 383, 385, 386, 387, 389, 390, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 455, 456, 462, 463, 473, 481, 482, 492, 554, 564, 638, 648, 651, 655, 760, 769, 790, 807, 813, 851, 892], "mne_stim_channel": [168, 171, 258, 455, 456, 481, 482], "mne_stim_channel_1": [168, 258, 455, 456], "saver": [168, 201, 203, 869, 871], "testing_data_fold": 168, "eeglab_raw_fil": 168, "eeglab_raw": 168, "began": 168, "000068": 168, "unmodifi": [168, 208, 510, 892], "custom_map": 168, "annotations_from_ev": [168, 259, 443, 882, 892], "orig_tim": [168, 201, 218, 259, 284, 892], "annot_from_ev": 168, "event_desc": [168, 284], "rem_annot": 168, "rem_ev": 168, "rem_event_dict": 168, "modulo": 168, "501": [168, 196, 203, 209], "onlin": [168, 200, 205, 219, 258, 863, 876, 892], "20_events_from_raw": [168, 174], "alon": [169, 863], "gantri": [169, 270, 892], "blank": [169, 216, 712, 857, 892], "subject_info": [169, 265, 266, 267, 268, 270, 481, 482, 483, 892], "device_info": [169, 265, 266, 267, 268, 270, 446, 481, 482, 483, 892], "helium_info": [169, 265, 266, 267, 268, 270, 481, 482, 483, 892], "hpi_subsystem": [169, 270], "proc_histori": [169, 265, 266, 267, 268, 270, 481, 482, 483], "proj_id": [169, 216, 265, 266, 267, 268, 270, 481, 482, 483], "proj_nam": [169, 216, 265, 266, 267, 268, 270, 481, 482, 483], "utc_offset": [169, 265, 266, 267, 268, 270, 481, 482, 483, 892], "line_freq": [169, 242, 270], "gantry_angl": [169, 270], "ctf_head_t": [169, 270, 877], "dev_ctf_t": [169, 270, 877], "acq_par": [169, 216, 258, 270], "acq_stim": [169, 270], "xplotter_layout": [169, 270], "kit_system_id": [169, 270], "0143": 169, "0142": 169, "0213": 169, "0212": [169, 337], "0222": 169, "0223": 169, "0232": 169, "0233": 169, "0313": 169, "0312": 169, "0322": 169, "0323": 169, "0333": 169, "0332": 169, "0343": 169, "0342": 169, "0413": 169, "0412": 169, "0422": 169, "0423": 169, "0432": 169, "0433": 169, "0443": 169, "0442": 169, "0513": 169, "0512": 169, "0523": [169, 245, 677], "0522": 169, "0532": 169, "0533": 169, "0542": 169, "0543": 169, "0613": 169, "0612": 169, "0622": 169, "0623": 169, "0633": 169, "0632": 169, "0643": 169, "0713": 169, "0712": 169, "0723": 169, "0722": 169, "0733": 169, "0732": 169, "0743": 169, "0742": 169, "0813": 169, "0822": 169, "0823": 169, "0913": 169, "0912": 169, "0923": 169, "0922": 169, "0932": 169, "0933": 169, "0943": 169, "1012": [169, 209], "1023": 169, "1032": 169, "1033": 169, "1042": [169, 337], "1112": 169, "1113": 169, "1123": 169, "1122": [169, 203], "1133": 169, "1132": 169, "1143": 169, "1213": [169, 227], "1212": 169, "1223": 169, "1222": [169, 227], "1232": 169, "1233": 169, "1243": 169, "1242": 169, "1312": 169, "1313": 169, "1322": 169, "1343": 169, "1412": 169, "1413": 169, "1423": 169, "1433": 169, "1432": 169, "1442": 169, "1443": 169, "1512": [169, 245, 476], "1513": 169, "1523": [169, 209, 245, 728, 738, 739, 741, 742, 744], "1533": 169, "1532": 169, "1543": 169, "1542": 169, "1612": 169, "1622": 169, "1623": 169, "1632": 169, "1633": 169, "1642": 169, "1713": 169, "1712": 169, "1722": 169, "1723": 169, "1732": 169, "1733": 169, "1743": 169, "1742": 169, "1813": 169, "1812": 169, "1822": 169, "1823": 169, "1832": 169, "1833": 169, "1843": 169, "1912": 169, "1913": 169, "1923": 169, "1922": [169, 195], "1932": 169, "1933": 169, "1943": 169, "1942": 169, "2023": [169, 171, 213, 246], "2022": [169, 180, 212, 245, 578, 868], "2032": 169, "2033": 169, "2112": 169, "2133": 169, "2132": 169, "2143": [169, 245, 741, 744], "2142": 169, "2212": 169, "2213": 169, "2223": 169, "2222": 169, "2233": 169, "2243": 169, "2312": [169, 195], "2313": [169, 210], "2323": 169, "2322": [169, 195], "2333": [169, 558], "2343": 169, "2342": 169, "2412": 169, "2413": 169, "2422": 169, "2432": 169, "2442": 169, "2513": 169, "2523": 169, "2533": 169, "2532": 169, "2543": 169, "2542": 169, "2612": 169, "2613": 169, "2623": [169, 195], "2633": 169, "bear": [169, 851, 871, 892], "scanno": [169, 270, 877], "logno": [169, 270, 877], "cal": [169, 213, 270, 322, 480, 584, 877], "coil_typ": [169, 270, 868], "unit_mul": [169, 270, 877], "116": [169, 209, 227], "131": [169, 196, 209, 227, 231, 232, 337], "141": [169, 209, 227, 231, 232, 278], "148": [169, 196, 209, 227, 232, 240], "163": [169, 227, 232, 278], "185": [169, 201, 227, 231, 232, 278], "193": [169, 179, 187, 209, 231, 232, 892], "208": [169, 171, 188, 227, 245], "216": [169, 195, 209, 227, 231, 232], "218": [169, 202, 209, 227, 231, 232, 245], "229": [169, 209, 232], "231": [169, 205, 209, 215, 231], "242": [169, 183, 187, 209, 227, 231, 892], "251": [169, 196, 212, 231, 236, 239, 481, 482], "254": [169, 209, 227, 231], "268": [169, 185, 191, 209, 227, 232], "276": [169, 232], "278": [169, 232], "279": [169, 203, 209, 232, 245, 564, 741, 744], "282": [169, 209, 227, 232], "285": [169, 196], "286": [169, 209, 227, 232], "296": [169, 232], "309": [169, 196, 209, 232, 245, 603, 741, 744], "318": [169, 209, 232], "327": [169, 232], "349": [169, 209, 232, 245, 874], "oxyhemoglobin": [169, 265, 266, 267, 268, 481, 482, 561, 712, 714, 715, 716, 847, 874], "deoxyhemoglobin": [169, 190, 265, 266, 267, 268, 481, 482, 561, 712, 714, 715, 716, 847, 874], "hbo": [169, 190, 211, 216, 222, 265, 266, 267, 268, 270, 313, 374, 376, 481, 482, 561, 712, 714, 715, 716, 847, 874], "hbr": [169, 190, 211, 216, 222, 265, 266, 267, 268, 270, 313, 374, 376, 481, 482, 561, 712, 714, 715, 716, 847, 874], "express": [169, 200, 431, 443, 489, 496, 504, 539, 558, 588, 617, 634, 726, 873, 874, 877, 892], "pick_channels_regexp": [169, 200, 205, 207, 212, 555, 882], "unawar": 169, "accident": [169, 218, 677, 892], "channel_typ": [169, 205, 265, 266, 267, 268, 270, 481, 482, 564, 712, 714, 715, 716, 882], "emb": 169, "comprehens": [169, 196, 216, 227, 229, 414, 851, 873], "channel_indices_by_typ": [169, 882], "ch_idx_by_typ": 169, "exci": [169, 216, 265, 266, 267, 268, 270, 313, 481, 482, 561, 712, 714, 715, 716, 874], "ia": [169, 216, 265, 266, 267, 268, 270, 313, 481, 482, 561, 712, 714, 715, 716, 874, 892], "syst": [169, 216, 265, 266, 267, 268, 270, 313, 481, 482, 561, 712, 714, 715, 716, 874], "bio": [169, 222, 265, 266, 267, 268, 313, 376, 447, 481, 482, 496, 561, 712, 714, 715, 716, 874], "temperatur": [169, 265, 266, 267, 268, 270, 313, 481, 482, 561, 712, 714, 715, 716, 847, 868, 874, 892], "gsr": [169, 265, 266, 267, 268, 270, 313, 481, 482, 561, 712, 714, 715, 716, 874, 892], "fnirs_cw_amplitud": [169, 190, 211, 265, 266, 267, 268, 270, 374, 481, 482, 847], "fnirs_fd_ac_amplitud": [169, 190, 265, 266, 267, 268, 270, 374, 481, 482, 847], "fnirs_fd_phas": [169, 190, 265, 266, 267, 268, 270, 374, 481, 482, 847], "fnirs_od": [169, 265, 266, 267, 268, 270, 374, 481, 482, 847], "eyegaz": [169, 192, 213, 265, 266, 267, 268, 481, 482, 561, 585, 587, 712, 714, 715, 716], "pupil": [169, 213, 265, 266, 267, 268, 481, 482, 561, 585, 587, 712, 714, 715, 716], "eeg_indic": 169, "ipython": [169, 265, 266, 481, 482, 564, 790, 807, 813, 849, 862, 871, 873, 875], "099": [169, 174], "30_info": [169, 174], "mplot3d": [170, 206, 227], "axes3d": [170, 206, 227, 263, 265, 266, 267, 268, 270, 314, 481, 482, 788, 810, 816, 892], "plai": [170, 205, 224, 242, 740, 743, 873, 874], "eeg_posit": 170, "builtin_montag": 170, "montage_nam": 170, "montage_descript": 170, "standard_alphabet": 170, "a1": [170, 208], "b2": 170, "standard_postfix": 170, "postfix": 170, "intermedi": [170, 200, 271, 290, 292, 698, 760, 874, 892], "standard_prefix": 170, "standard_prim": 170, "biosemi16": [170, 227], "biosemi": [170, 227, 340, 489, 874], "cap": [170, 196, 227, 847, 868, 892], "biosemi32": [170, 227], "biosemi64": [170, 227], "biosemi160": 170, "biosemi256": 170, "m10": [170, 892], "m43": [170, 892], "egi_256": 170, "geodes": [170, 472, 516, 682, 683, 684, 686, 687, 892], "gsn": [170, 446], "hydrocel": [170, 446], "64_1": 170, "65_1": 170, "mgh60": [170, 892], "mgh70": [170, 892], "brainvis": [170, 332, 333, 443, 447, 481, 482, 491, 617, 868, 874, 892], "artini": [170, 190, 330, 892], "octamon": [170, 190, 892], "detector": [170, 190, 211, 216, 505, 604, 605, 760, 776, 874, 892], "brite23": [170, 892], "brainproduct": 170, "rnp": 170, "ba": [170, 449, 874, 892], "easycap_montag": 170, "digmontag": [170, 182, 265, 266, 267, 268, 270, 317, 318, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 367, 466, 481, 482, 493, 594, 596, 810, 830, 847, 882, 892], "headshap": [170, 257, 307, 314, 327, 339, 506, 892], "gca": 170, "view_init": [170, 206, 227], "azim": [170, 206], "ssvep_raw": 170, "read_raw_brainvis": [170, 189, 242, 487, 874, 882, 892], "circumfer": 170, "t4": 170, "t3": [170, 322, 481, 892], "075": 170, "sample_data_raw_path": 170, "sample_raw": 170, "ax2d": 170, "add_subplot": [170, 227], "ax3d": 170, "irregular": [170, 871, 892], "fastrak": 170, "predefin": [170, 847], "layout_dir": 170, "iterdir": 170, "IN": 170, "ctf151": [170, 227, 340], "lai": [170, 340, 512, 874, 892], "ctf275": [170, 227, 340], "eeg1005": [170, 340], "egi256": [170, 340], "geodesicheadweb": [170, 340], "AS": [170, 340], "umd": [170, 227, 340], "neuromag_122": [170, 340], "grad_norm": [170, 340], "magneswh3600": [170, 340, 492], "biosemi_layout": 170, "make_eeg_layout": [170, 323, 329, 882], "layout_from_raw": 170, "make_meg_layout": 170, "snugli": 170, "587": [170, 174, 209], "40_sensor_loc": [170, 174], "suit": [171, 863], "get_config": [171, 389, 655, 882, 892], "unnam": 171, "mne_use_cuda": [171, 378, 849], "json": [171, 463], "unset": [171, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 417, 424, 427, 430, 431, 457, 470, 472, 481, 482, 522, 525, 526, 537, 538, 547, 548, 569, 576, 577, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 792, 795, 814, 849, 892], "typeerror": [171, 176, 784, 892], "err": [171, 204, 346], "nonetyp": 171, "unsur": [171, 203, 851], "fallback": [171, 265, 266, 481, 482, 790, 813, 873, 892], "missing_config_kei": 171, "mne_browse_raw_s": 171, "mne_datasets_brainstorm_path": 171, "mne_datasets_eegbci_path": [171, 383, 389], "mne_datasets_epilepsy_ecog_path": [171, 385], "mne_datasets_erp_core_path": [171, 386], "mne_datasets_eyelink_path": [171, 387], "mne_datasets_fieldtrip_cmc_path": 171, "mne_datasets_fnirs_motor_path": [171, 394], "mne_datasets_hf_sef_path": [171, 396], "mne_datasets_kiloword_path": [171, 397], "mne_datasets_limo_path": [171, 398], "mne_datasets_misc_path": [171, 399], "mne_datasets_mtrf_path": [171, 400], "mne_datasets_multimodal_path": [171, 401], "mne_datasets_opm_path": 171, "mne_datasets_phantom_4dbti_path": [171, 403], "mne_datasets_refmeg_noise_path": [171, 404], "mne_datasets_sample_path": [171, 389, 405], "mne_datasets_somato_path": [171, 408], "mne_datasets_spm_face_path": 171, "mne_datasets_ssvep_path": [171, 410], "mne_datasets_testing_path": 171, "mne_datasets_ucl_opm_auditory_path": [171, 411], "mne_logging_level": [171, 658], "mne_browser_precomput": [171, 265, 266, 481, 482, 564, 790, 807, 813], "mne_browser_overview_mod": [171, 265, 266, 481, 482, 564, 790, 807, 813], "hidden": [171, 172, 265, 266, 481, 482, 564, 760, 790, 807, 813, 892], "mne_3d_option_multi_sampl": [171, 849, 892], "mne_browser_them": [171, 265, 266, 481, 482, 564, 790, 807, 813, 892], "mne_browser_backend": [171, 265, 266, 481, 482, 564, 790, 807, 813, 892], "mne_3d_option_them": [171, 760, 892], "mne_3d_option_antialia": [171, 826, 849, 892], "antialias": [171, 849, 892], "mne_3d_option_depth_peel": [171, 826], "peel": 171, "mne_3d_option_smooth_shad": [171, 769, 826], "theme": [171, 265, 266, 481, 482, 564, 760, 790, 807, 813, 892], "browser": [171, 172, 191, 216, 257, 265, 266, 275, 481, 482, 552, 564, 768, 772, 790, 807, 813, 829, 832, 851, 892], "plot_raw": [171, 265, 266, 267, 268, 270, 481, 482, 816, 829, 882, 892], "mne_browser_use_opengl": [171, 265, 266, 481, 482, 564, 790, 807, 813, 892], "opengl": [171, 257, 265, 266, 473, 481, 482, 564, 790, 807, 813, 849, 857, 863], "mne_cache_dir": 171, "cach": [171, 849], "mne_coreg_advanced_rend": 171, "mne_coreg_copy_annot": 171, "mne_coreg_fullscreen": [171, 473], "mne_coreg_guess_mri_subject": 171, "mne_coreg_head_high_r": [171, 473], "mne_coreg_head_opac": [171, 473], "mne_coreg_head_insid": 171, "opaqu": [171, 172, 275, 473, 892], "occlud": [171, 473], "mne_coreg_interact": 171, "trackbal": [171, 257, 267, 268, 473, 760, 776, 795], "terrain": [171, 257, 267, 268, 473, 760, 776, 795, 892], "mne_coreg_mark_insid": 171, "mne_coreg_prepare_bem": 171, "mne_coreg_orient_to_surfac": 171, "mne_coreg_scale_label": 171, "mne_coreg_scale_by_dist": 171, "mne_coreg_scene_scal": 171, "mne_coreg_window_height": 171, "mne_coreg_window_width": [171, 473], "mne_coreg_subjects_dir": 171, "mne_cuda_devic": [171, 892], "cuda": [171, 265, 266, 267, 268, 416, 420, 425, 426, 452, 453, 454, 481, 482, 855, 861, 871, 882, 892], "gpu": [171, 871, 892], "mne_datasets_megsim_path": 171, "megsim": [171, 892], "mne_datasets_spm_face_datasets_test": 171, "mne_datasets_visual_92_categories_path": [171, 412], "phantom_4dbti": [171, 185, 868, 882, 892], "mne_force_seri": 171, "serial": [171, 270], "decor": [171, 756, 758], "stabl": [171, 180, 202, 204, 245, 260, 298, 299, 343, 453, 480, 481, 482, 552, 564, 574, 769, 851, 857, 871], "auto_tutori": 171, "intro": [171, 172, 242], "50_configure_mn": [171, 174], "mne_memmap_min_s": 171, "worker": [171, 880], "1m": [171, 659], "5g": 171, "mne_repr_html": [171, 892], "mne_skip_network_test": 171, "requires_good_network": 171, "mne_skip_testing_dataset_test": 171, "requires_spm_data": 171, "requires_bstraw_data": 171, "mne_tqdm": [171, 892], "tqdm": [171, 892], "presenc": [171, 200, 211, 224, 242, 245, 270, 395, 438, 851, 867, 892], "absenc": [171, 438], "mne_use_numba": 171, "numba": [171, 850, 892], "compil": [171, 600], "misspel": 171, "mnee_use_cuudaa": 171, "runtimewarn": [171, 757], "unrecogn": [171, 265, 266, 267, 268, 270, 481, 482, 892], "concern": [171, 204, 227, 501, 588, 624, 628], "userprofil": [171, 463], "linux": [171, 850, 851, 852, 854, 856, 857, 859, 892], "maco": [171, 851, 852, 854, 855, 856, 892], "get_config_path": [171, 882, 892], "home_dir": [171, 462, 463, 655], "use_env": [171, 462], "set_env": [171, 655, 892], "python_env": [171, 205], "minimal_cmd": 171, "usr": [171, 857, 862], "sbin": 171, "statement": [171, 172, 227, 657, 857], "fresh": 171, "me": [171, 707], "worrisom": 171, "set_log_level": [171, 657, 758, 882], "temporarili": [171, 206, 207, 265, 266, 267, 268, 379, 416, 452, 481, 482, 564, 790, 807, 813], "kit_data_path": 171, "abspath": 171, "use_log_level": [171, 240, 882], "496": [171, 196, 209, 227, 232, 278], "meg160": 171, "v2r004": 171, "160ch": 171, "jan24": 171, "eq1160c": 171, "dewar": 171, "fll": 171, "board": 171, "adc": [171, 189], "alloc": [171, 699, 700, 702, 703], "shorthand": 171, "whatev": [171, 208, 481, 482, 715, 851], "recent": [171, 202, 414, 850, 851, 867, 892], "hasn": [171, 576, 892], "sys_info": [171, 275, 849, 850, 871, 882, 892], "stdout": [171, 657, 711, 892], "platform": [171, 256, 265, 266, 267, 268, 481, 482, 714, 716, 813, 850, 854, 859, 863, 879, 880], "1039": [171, 209], "aw": [171, 256], "x86_64": [171, 850, 857], "glibc2": [171, 850], "jun": [171, 245, 672], "gcc": [171, 850], "cpu": [171, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 417, 424, 426, 427, 430, 431, 457, 470, 472, 481, 482, 522, 525, 526, 537, 538, 547, 548, 564, 569, 576, 577, 599, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 790, 792, 795, 807, 813, 814, 849, 850], "gb": [171, 849, 850, 857], "openbla": [171, 850, 871], "thread": [171, 237, 265, 266, 481, 482, 564, 790, 807, 813, 874], "agg": 171, "pooch": [171, 389, 892], "jinja2": [171, 892], "dipi": [171, 277, 596, 748, 749, 750, 850, 892], "openmeeg": [171, 521, 526, 892], "unavail": [171, 892], "cupi": [171, 265, 266, 267, 268, 416, 420, 425, 452, 453, 454, 481, 482, 849, 850, 892], "mesa": [171, 473, 826, 892], "0ubuntu1": 171, "llvmpipe": [171, 849], "llvm": [171, 849], "pyvistaqt": [171, 272, 276, 280, 770, 818, 825, 831, 849, 850, 892], "ipyvtklink": [171, 880], "vtk": [171, 413, 760, 775, 849, 850, 892], "qtpy": [171, 850], "pyqt6": 171, "ipympl": 171, "pyqtgraph": [171, 265, 266, 481, 482, 564, 790, 807, 813, 892], "dev8": 171, "gbdae583": 171, "ecosystem": [171, 852, 855, 858], "dev0": [171, 850], "0dev0": 171, "icalabel": [171, 858, 892], "shell": [172, 183, 210, 245, 257, 520, 527, 850, 851, 856, 857, 858, 871, 874], "deploi": [172, 871], "tempfil": 172, "ndimag": 172, "raw_tsss": [172, 257, 481, 482, 502], "_eeg": [172, 257, 481, 482, 892], "_ieeg": [172, 257, 481, 482, 892], "underscor": [172, 201, 205, 216, 564], "parse_fold": [172, 275, 892], "add_raw": [172, 275, 892], "slider": [172, 267, 268, 275, 799, 849, 892], "scrub": 172, "report_raw": 172, "jqueri": 172, "bundl": [172, 854, 856, 892], "tableexport": 172, "highlightj": 172, "atom": 172, "meaning": [172, 217, 274, 653, 851], "events_path": 172, "report_ev": 172, "add_epoch": [172, 275, 892], "fly": [172, 229, 265, 266, 481, 482, 745, 758, 790, 813, 892], "make_metadata": [172, 882, 892], "report_epoch": 172, "add_evok": [172, 275], "n_time_point": [172, 275], "evoked_path": 172, "cov_path": 172, "evokeds_subset": 172, "report_evok": 172, "add_covari": [172, 275], "report_cov": 172, "ecg_proj_path": 172, "eog_proj_path": 172, "sample_audvis_eog": [172, 871], "report_proj": 172, "998": [172, 184, 191, 196, 198, 210, 232, 577, 582, 590, 593], "add_ica": [172, 275, 892], "ecg_evok": [172, 205, 207, 275], "eog_evok": [172, 204, 205, 207, 275], "artifactu": [172, 199, 202, 205, 245, 564], "find_bads_ecg": [172, 205, 275, 564, 892], "ecg_scor": [172, 205, 275], "liber": 172, "eog_compon": 172, "report_ica": 172, "add_bem": [172, 275, 892], "th": [172, 265, 564, 669, 672, 674, 715, 871, 874], "report_mri_and_bem": 172, "add_tran": [172, 275, 892], "trans_path": 172, "report_coregistr": 172, "add_forward": [172, 275, 760, 892], "fwd_path": 172, "report_forward_sol": 172, "add_inverse_oper": [172, 275], "inverse_op_path": 172, "report_inverse_op": 172, "add_stc": [172, 275, 892], "report_inverse_sol": 172, "01632618": 172, "06303297": 172, "63565434": 172, "add_cod": [172, 275], "syntax": [172, 275, 851, 874], "snippet": [172, 235, 275, 871], "liter": [172, 275, 874], "mne_init_py_path": 172, "__init__": [172, 553], "mne_init_py_cont": 172, "read_text": 172, "utf": [172, 497, 617, 623, 892], "report_cod": 172, "add_figur": [172, 275, 892], "caption": [172, 275, 892], "num": [172, 241], "sky": 172, "image_format": [172, 257, 275, 892], "report_custom_figur": 172, "fig_1": 172, "ax_1": 172, "ax_2": 172, "report_custom_figure_sect": 172, "intuit": [172, 196, 242, 415, 430, 670, 671], "logo": [172, 892], "mne_logo_path": 172, "mne_icon": 172, "fig_arrai": 172, "rotation_angl": 172, "fig_array_rot": 172, "mneqtbrows": [172, 265, 266, 481, 482, 564, 790, 807, 813], "fun": [172, 265, 266, 267, 268, 481, 482], "9185947692016784": 172, "photo": 172, "sketch": 172, "add_imag": [172, 275, 892], "jpeg": [172, 275], "gif": [172, 275, 760, 892], "svg": [172, 257, 275, 892], "report_custom_imag": 172, "add_": 172, "dropdown": [172, 892], "menu": [172, 218, 854, 857, 875], "hide": [172, 218, 240, 892], "checkbox": [172, 892], "report_tag": 172, "hdf5": [172, 272, 273, 275, 279, 281, 289, 302, 553, 563, 609, 639, 712, 713, 714, 715, 716, 732, 733, 734, 745, 834, 835, 871, 892], "report_parti": 172, "amend": [172, 334], "report_from_disk": 172, "open_report": [172, 275, 882, 892], "report_fin": 172, "invok": [172, 257, 773, 857, 892], "barebon": [172, 257], "render_bem": [172, 275, 892], "raw_butterfli": [172, 275], "report_parse_folder_bas": 172, "raw_psd": [172, 275, 892], "refin": [172, 277, 322, 362], "report_parse_folder_raw_psd_proj": 172, "mri_decim": [172, 257, 275], "report_parse_folder_mri_bem": 172, "temporarydirectori": 172, "n_time_points_evok": [172, 275], "report_parse_folder_evok": 172, "tmp": 172, "tmpr9wpo8j0": 172, "info_fnam": [172, 275], "report_parse_folder_cov": 172, "add_html": [172, 275, 892], "remind": [172, 564, 851], "my_html": 172, "ol": [172, 697, 880, 892], "manifest": [172, 203, 204, 205, 207, 847], "n1": 172, "report_add_html": 172, "70_report": [172, 174], "861": [174, 232], "auto_tutorials_intro": 174, "volsourceestim": [175, 180, 181, 272, 273, 276, 277, 279, 281, 290, 292, 293, 294, 295, 296, 297, 518, 525, 531, 532, 533, 534, 535, 537, 547, 639, 652, 847, 882, 892], "mixedsourceestim": [175, 273, 276, 279, 280, 281, 639, 847, 882, 892], "realli": 175, "carri": [175, 199, 205, 242, 489, 693], "belong": [175, 270, 271, 275, 633, 689, 759, 760, 877], "shape_lh": 175, "is_equ": 175, "suspect": 175, "nth": [175, 205, 260, 264, 265, 266, 267, 268, 581, 582, 712, 715], "peak_vertex": 175, "vert_as_index": [175, 180, 272, 273, 276, 279, 280, 281], "peak_vertex_surf": 175, "peak_valu": 175, "logic": [175, 222, 229, 232, 265, 266, 267, 268, 270, 473, 481, 482, 483, 564, 588, 877, 892], "lh_coordin": 175, "rh_coordin": 175, "10_stc_class": [175, 187], "load_mni152_templ": 176, "fname_av": 176, "fname_surf_lh": 176, "n100m": 176, "evoked_ful": 176, "posixpath": [176, 181], "6941": 176, "5491": 176, "2193": 176, "0405": 176, "7598": 176, "4769": 176, "mni_po": 176, "to_mni": [176, 263, 892], "mri_po": 176, "to_mri": [176, 263, 892], "best_dip_idx": 176, "to_volume_label": [176, 263, 892], "fig_t1": 176, "cut_coord": 176, "fig_templ": 176, "pred_evok": 176, "inf": [176, 191, 199, 223, 265, 266, 267, 268, 283, 419, 478, 479, 481, 482, 514, 577, 712, 714, 716, 717, 719, 720, 722, 730, 731, 768, 814, 820, 892], "best_idx": 176, "best_tim": 176, "conf": [176, 263, 851], "plot_param": 176, "0f": [176, 267, 268, 795], "20_dipole_fit": [176, 187], "userwarn": 176, "dip_fix": 176, "7506": 176, "6606": 176, "electromagnet": [176, 178, 199, 207, 210, 224, 245, 298, 299, 435, 531, 575, 599, 847, 874], "biomagnet": [176, 245], "200m": 177, "500m": 177, "fig_cov": [177, 262, 785], "fig_spectra": 177, "1705": [177, 180], "1468": 177, "506": [177, 196, 226, 227], "1574": 177, "write_inverse_oper": [177, 545, 882, 892], "67933": 177, "16538e": 177, "set_color": [177, 183], "98df81": [177, 183], "vertno_max": 177, "time_max": [177, 178], "30_mne_dspm_loreta": [177, 187], "left_auditori": 178, "dip_po": 178, "dip_ori": 178, "dip_len": 178, "dip_tim": 178, "rgb": [178, 272, 273, 276, 279, 280, 281, 467, 472, 760, 776, 779, 818, 823, 824], "actual_amp": [178, 183, 185], "actual_gof": [178, 183, 185], "outward": [178, 263, 273, 279, 281, 367, 788, 871], "moment": [178, 180, 222, 270, 273, 279, 281, 320, 344, 346, 347, 348, 435, 574, 575, 588, 599, 823], "06165525": 178, "70033915": 178, "34794621": 178, "inward": [178, 871], "curvatur": [178, 272, 273, 276, 279, 280, 281, 710, 760, 818, 823, 877, 892], "collaps": [178, 275, 436], "brain_mag": 178, "overlay_alpha": [178, 273, 279, 281, 823], "2188": 178, "44205e": 178, "79973942": 178, "38378769": 178, "8347911": 178, "somewhat": [178, 199], "strai": 178, "unrestrict": 178, "brain_loos": 178, "03844879": 178, "68532258": 178, "12541436": 178, "knuutila": [178, 245], "olli": [178, 245], "lounasmaa": [178, 245], "noninvas": [178, 245], "modern": [178, 188, 245, 390, 849, 874, 876, 880, 892], "revmodphi": [178, 245], "fa": [178, 245, 542, 669, 674], "hsuan": [178, 245, 542, 669, 674], "lin": [178, 195, 245, 420, 542, 669, 674], "belliveau": [178, 245, 531, 542, 669, 674], "20155": [178, 245], "35_dipole_orient": [178, 187], "variant": [179, 189, 467, 575, 849, 892], "1498464098687909": [179, 181], "037797": 179, "65922": 179, "72259e": 179, "28047949e": 179, "72734062e": 179, "97200565e": 179, "56295849": 179, "27742998": 179, "00597185": 179, "65359441": 179, "22223216": 179, "63030546": 179, "eigen": [179, 271, 689], "34003429e": 179, "79067976e": 179, "93243713e": 179, "61893": 179, "8713e": 179, "81398590e": 179, "00293217e": 179, "59049573e": 179, "79225614": 179, "45181115": 179, "88420759": 179, "65906465": 179, "11446799": 179, "4224023": 179, "41240750e": 179, "15338772e": 179, "80101709e": 179, "40_mne_fixed_fre": [179, 187], "britta": [180, 245, 879, 892], "westner": [180, 245, 879, 892], "wstnr": 180, "apply_lcmv": [180, 290, 292, 295, 296, 297, 882, 892], "linearli": [180, 206, 210, 245, 294, 295, 296, 297, 298, 299, 847, 871], "ingredi": 180, "valuabl": [180, 874], "gaug": 180, "incorpor": [180, 227, 232, 322, 438, 447, 481, 482, 569, 851, 874, 880, 892], "rule": [180, 199, 203, 245, 564, 874], "thumb": [180, 199, 203, 564, 868], "advic": [180, 851], "defici": [180, 372, 564, 874, 892], "misrepres": 180, "3757": [180, 181], "inher": [180, 189, 232, 431], "somehow": [180, 182, 205], "nai": [180, 298, 299, 892], "switch": [180, 183, 184, 202, 209, 224, 245, 257, 271, 276, 351, 481, 482, 849, 851, 857, 877, 892], "invari": [180, 298, 299], "filters_vec": 180, "apply_lcmv_raw": [180, 294, 295, 296, 882, 892], "apply_lcmv_epoch": [180, 272, 273, 276, 279, 280, 281, 294, 295, 297, 882, 892], "087": 180, "stat_map": [180, 280, 281, 824], "5184": 180, "glass_brain": [180, 181, 280, 281, 824, 892], "022485": [180, 181], "008449": [180, 181], "036217": [180, 181], "071071": [180, 181], "914866": [180, 181], "406098": [180, 181], "008756": [180, 181], "433700": [180, 181], "028119": [180, 181], "plotter": [180, 265, 266, 564, 760, 762, 790, 807, 869, 892], "peak_vox": 180, "ori_label": 180, "sourcemorph": [180, 280, 281, 362, 640, 824, 855, 882, 892], "fname_fs_src": 180, "stc_f": [180, 181], "085": 180, "17352": 180, "barri": [180, 202, 204, 205, 245, 298, 299, 563, 579], "veen": [180, 245, 298, 299], "wim": [180, 245, 298, 299], "drongelen": [180, 245, 298, 299], "mosh": [180, 245, 298, 299], "yuchtman": [180, 245, 298, 299], "akifumi": [180, 245, 298, 299], "suzuki": [180, 245, 298, 299], "867": [180, 195, 232, 245, 298, 299], "623056": [180, 245, 298, 299], "brook": [180, 245, 866, 892], "jiri": [180, 245], "vrba": [180, 245], "clair": [180, 245, 892], "stevenson": [180, 245], "gareth": [180, 212, 245, 578, 868], "barn": [180, 212, 245, 578, 868], "arjan": [180, 245], "hillebrand": [180, 245], "morri": [180, 245], "optimis": [180, 245], "1788": [180, 245], "sarang": [180, 245, 880], "dalal": [180, 245, 880], "vladimir": [180, 227, 245, 705, 706], "litvak": [180, 227, 245, 705, 706], "oostenveld": [180, 232, 245, 699, 700, 702, 703, 892], "mathij": [180, 245], "schoffelen": [180, 245], "118789": [180, 245], "664": [180, 187], "50_beamformer_lcmv": [180, 187], "flatmap": [181, 272, 276, 280, 760, 818, 892], "mpl_fig": 181, "94880328959697": 181, "84640986879091": 181, "649601096532322": 181, "5653": 181, "67635542": 181, "11717401": 181, "19136023": 181, "atlas": [181, 661, 892], "get_volume_labels_from_aseg": [181, 882, 892], "label_tc": [181, 272, 273, 276, 279, 280, 281, 448], "lidx": 181, "xytext": 181, "arrowprop": [181, 195], "arrowstyl": [181, 195], "set_vis": 181, "grain": [181, 892], "loci": 181, "stc_back": 181, "labels_to_stc": [181, 882, 892], "6210": 181, "69834054": 181, "98871778": 181, "62206532": 181, "70708526": 181, "36619556": 181, "64056812": 181, "6864": 181, "60_visualize_stc": [181, 187], "read_custom_montag": [182, 190, 265, 266, 267, 268, 270, 330, 481, 482, 882, 892], "reconstrct": 182, "elc": [182, 332, 892], "synthes": [182, 188, 305, 309, 506, 589, 892], "fname_t1_electrod": 182, "sample_eeg_mri": 182, "t1_electrod": 182, "fname_mon": 182, "sample_mri_montag": 182, "ras_mni_t": [182, 752], "read_ras_mni_t": [182, 882], "mni_affin": 182, "img_mni": 182, "hot_black_bon": 182, "black_bg": 182, "resampling_interpol": 182, "pos_vox": 182, "fname_t1": 182, "vox2mri_t": 182, "pos_mri": [182, 263], "tkmedit": [182, 857, 874], "dig_montag": 182, "head_siz": [182, 330, 332], "99930957": 182, "00998471": 182, "03578661": 182, "00316747": 182, "01275917": 182, "81240435": 182, "58295487": 182, "00685511": 182, "03489383": 182, "58300899": 182, "81171605": 182, "02888406": 182, "812404": 182, "582955": 182, "583009": 182, "3252": 182, "3250": 182, "1636": 182, "3223": 182, "4097": [182, 202], "8193": 182, "040598": 182, "157084": 182, "86184": 182, "24877e": 182, "17591891": 182, "939572": 182, "86348066": 182, "70_eeg_mri_coord": [182, 187], "fetch_phantom": [183, 434, 882, 892], "planor": 183, "meg1933": 183, "meg2421": 183, "645": [183, 232], "1792": 183, "3840": 183, "7936": 183, "bmax": [183, 257], "ring": [183, 202, 449, 451, 892], "otaniemi": [183, 393, 434, 868, 892], "phantom_otaniemi": 183, "00364477": [183, 184, 185], "944121": [183, 184, 185], "138646": [183, 184, 185], "665982": [183, 184, 185], "684475": [183, 184, 185], "140083": [183, 184, 185], "0127517": [183, 184, 185], "plot_evoked_whit": [183, 267, 268, 794, 882, 892], "t_peak": 183, "32640": 183, "32639": 183, "55367811e": 183, "90213143e": 183, "55347147e": 183, "28605719e": 183, "96728167e": 183, "86739464e": 183, "38610872e": 183, "82304534e": 183, "48308374e": 183, "31818228e": 183, "16854987e": 183, "00130181e": 183, "01608756e": 183, "05724640e": 183, "66791928e": 183, "36603176e": 183, "50599819e": 183, "82644670e": 183, "99846050e": 183, "93593540e": 183, "60183041e": 183, "976295": 183, "211976": 183, "043756": 183, "206488": 183, "972764": 183, "105326": 183, "064891": 183, "093794": 183, "993475": 183, "actual_ori": 183, "rad2deg": 183, "arcco": 183, "dip_tru": [183, 185], "80_brainstorm_phantom_elekta": [183, 187], "phantomctf": 184, "bst_phantom_ctf": 184, "phantom_200ua_20150709_01": 184, "dip_freq": 184, "phantom_20ua_20150603_03": 184, "erm_path": 184, "emptyroom_20150709_01": 184, "24000": 184, "23999": 184, "hdac006": 184, "zeros_lik": [184, 195], "ones_lik": [184, 229, 230], "tsss": [184, 267, 270, 481, 502, 599, 607, 629, 892], "apply_gradient_compens": [184, 188, 481, 482, 874, 892], "un": [184, 203, 206, 210, 219, 481, 482, 540, 541, 813, 874], "mf_kwarg": 184, "st_durat": [184, 210, 588, 599], "021666666666666667": 184, "catch_warn": 184, "simplefilt": 184, "60000": 184, "99596855e": 184, "57828787e": 184, "09548814e": 184, "44821628e": 184, "22550465e": 184, "07831245e": 184, "16519699e": 184, "85599860e": 184, "24819011e": 184, "19149506e": 184, "49201625e": 184, "90435099e": 184, "37114004e": 184, "52368814e": 184, "95491435e": 184, "09260032e": 184, "84849095e": 184, "02461913e": 184, "40860739e": 184, "15627312e": 184, "58591259e": 184, "999939": 184, "002039": 184, "010868": 184, "001115": 184, "959234": 184, "282612": 184, "011001": 184, "282607": 184, "959173": 184, "expected_po": 184, "array_str": 184, "559": [184, 187, 196, 209, 232], "85_brainstorm_phantom_ctf": [184, 187], "4dbti": 185, "badier": [185, 245, 672], "marseil": [185, 868], "franc": 185, "rfhp1": 185, "0hz": 185, "a173": 185, "a213": 185, "a232": 185, "4350": 185, "not_and": [185, 258, 455, 626, 892], "hs_file": [185, 188, 492], "13599": 185, "20053968578577042": 185, "6576": 185, "50691838e": 185, "61763336e": 185, "91409625e": 185, "91576159e": 185, "16898444e": 185, "75585208e": 185, "47442194e": 185, "45272203e": 185, "55529894e": 185, "46448717e": 185, "88484744e": 185, "05130802e": 185, "14443569e": 185, "70955369e": 185, "39503671e": 185, "16681391e": 185, "65491197e": 185, "24338008e": 185, "53281664e": 185, "47448228e": 185, "78257781e": 185, "975564": 185, "033891": 185, "217085": 185, "044586": 185, "998011": 185, "044560": 185, "215143": 185, "053150": 185, "975135": 185, "43530566e": 185, "00499851e": 185, "47056513e": 185, "49717001e": 185, "01651220e": 185, "39837298e": 185, "09320996e": 185, "53068976e": 185, "44272962e": 185, "07218608e": 185, "57916869e": 185, "24522939e": 185, "45459681e": 185, "19250060e": 185, "30544307e": 185, "26518629e": 185, "97497347e": 185, "82472005e": 185, "37787240e": 185, "96791371e": 185, "70423989e": 185, "975554": 185, "034041": 185, "217109": 185, "044503": 185, "998063": 185, "043482": 185, "215208": 185, "052081": 185, "975178": 185, "58999814e": 185, "84421337e": 185, "28166457e": 185, "67818745e": 185, "17428979e": 185, "76211498e": 185, "09542089e": 185, "22401648e": 185, "04141267e": 185, "15865669e": 185, "76599754e": 185, "17446488e": 185, "49708010e": 185, "60822410e": 185, "73060305e": 185, "05814038e": 185, "01071067e": 185, "20173942e": 185, "25861185e": 185, "85502070e": 185, "47521229e": 185, "975577": 185, "033678": 185, "217061": 185, "044611": 185, "997960": 185, "045666": 185, "215080": 185, "054233": 185, "975089": 185, "40101009e": 185, "10513936e": 185, "52303974e": 185, "27457778e": 185, "38233857e": 185, "06793751e": 185, "00477278e": 185, "15792686e": 185, "30206685e": 185, "40306943e": 185, "32057779e": 185, "22353020e": 185, "11884928e": 185, "17314181e": 185, "64256593e": 185, "23243102e": 185, "97110034e": 185, "94566869e": 185, "63267153e": 185, "08360546e": 185, "98210291e": 185, "975557": 185, "033946": 185, "217110": 185, "044391": 185, "998071": 185, "043409": 185, "215218": 185, "051986": 185, "975181": 185, "37436305": 185, "3777228": 185, "21169488": 185, "17616473": 185, "637": [185, 187, 232], "90_phantom_4dbti": [185, 187], "auto_tutorials_invers": 187, "702": 187, "maxshield": [188, 257, 267, 270, 481, 502, 599, 629, 877, 892], "allow_maxshield": [188, 209, 210, 267, 481, 502, 629], "ucl": [188, 212, 245, 356, 892], "read_raw_fil": [188, 212, 487, 874, 882, 892], "mandatori": [188, 298, 299, 322, 481, 564, 874], "rfdc": [188, 257], "realiz": [188, 202], "carefulli": [188, 200, 202, 868], "read_dig_polhemus_isotrak": [188, 314, 327, 330, 333, 334, 335, 336, 337, 338, 341, 874, 882, 892], "technic": [188, 240, 245, 265, 266, 267, 268, 481, 482, 531, 714, 716, 724, 730, 867, 873, 874], "disturb": [188, 867, 874], "mainli": [188, 242, 851, 874], "nicknam": 188, "n_1": 188, "n_2": 188, "n_3": 188, "x_1": [188, 874], "x_2": [188, 874], "x_3": 188, "denot": [188, 196, 218, 273, 279, 281, 597, 669, 672, 674, 693, 695, 713, 847, 874], "x_": [188, 196, 874], "m_": 188, "bmatrix": [188, 874], "c_": [188, 227, 874], "standardize_nam": [188, 506, 625, 892], "nx3": [188, 469], "mrk": [188, 257, 484, 506, 625, 892], "elp": [188, 257, 332, 339, 506, 625, 627, 874, 892], "onward": [188, 662], "miscellan": [188, 216, 265, 266, 267, 268, 481, 482, 561, 712, 714, 715, 716, 874, 877], "eight": [188, 874, 892], "endian": [188, 892], "stimthresh": [188, 257, 506], "sum_": [188, 202, 672, 874], "t_p": 188, "d_p": 188, "bigg": 188, "leq": [188, 227], "read_raw_fieldtrip": [188, 487, 874, 882, 892], "read_epochs_fieldtrip": [188, 874, 882, 892], "read_evoked_fieldtrip": [188, 874, 882, 892], "intent": [188, 869], "original_data": 188, "read_raw_fiff": 188, "original_info": 188, "data_from_ft": 188, "evoked_data": [188, 229], "untest": 188, "cnt": [188, 443, 493, 617, 874, 892], "egi": [188, 213, 332, 335, 498, 868, 874, 892], "calibr": [188, 192, 210, 270, 435, 574, 575, 586, 588, 599, 610, 615, 877, 882, 892], "eximia": [188, 499, 874, 892], "3rd": [188, 199, 272, 273, 276, 279, 280, 281, 698], "parti": 188, "librari": [188, 762, 849, 851, 857, 858, 863, 869, 871, 892], "abund": 188, "electrophysiolog": [188, 202, 245, 847], "10_reading_meg_data": [188, 194], "meta": [189, 222, 265, 266, 267, 268, 270, 481, 482, 483, 880], "ini": 189, "host": [189, 873, 892], "pybv": [189, 447, 481, 482], "mnelab": [189, 858], "pyedflib": 189, "read_raw_bdf": [189, 487, 496, 504, 874, 882, 892], "amplifi": [189, 204, 208, 510, 863, 892], "byte": [189, 257, 265, 266, 481, 482, 514, 768, 877, 892], "read_raw_gdf": [189, 487, 489, 496, 874, 882, 892], "overcom": 189, "releas": [189, 851, 859, 871, 873, 892], "gender": [189, 245, 406], "read_raw_cnt": [189, 487, 874, 882, 892], "danger": [189, 270], "x_coord": 189, "y_coord": 189, "electloc": 189, "encourag": [189, 224, 862, 873, 892], "read_raw_egi": [189, 213, 487, 874, 882, 892], "netstat": [189, 498, 892], "read_raw_nicolet": [189, 487, 874, 882, 892], "nexstim": 189, "read_raw_eximia": [189, 487, 874, 882], "read_raw_persyst": [189, 874, 882, 892], "nk": 189, "read_raw_nihon": [189, 882, 892], "11d": 189, "cmt": 189, "cn2": 189, "histori": [189, 270, 446, 847, 877, 892], "successfulli": [189, 217, 851, 877], "neither": [189, 383, 471, 481, 482, 859], "nor": [189, 208, 471, 481, 482, 859, 873], "20_reading_eeg_data": [189, 194], "emitt": 190, "transmitt": 190, "oxyhaemoglobin": [190, 211], "modif": [190, 192, 237, 332, 376, 858, 892], "Near": 190, "commun": [190, 195, 196, 224, 245, 264, 265, 266, 267, 268, 420, 712, 715, 741, 744, 851, 855, 870, 880], "effort": [190, 489, 851, 872, 880], "sfnir": 190, "gowerlab": [190, 892], "cortivis": 190, "read_raw_snirf": [190, 882, 892], "provis": 190, "haemoglobin": [190, 601, 892], "optode_fram": [190, 513], "vendor": [190, 874], "icbm": 190, "2009b": 190, "nirstar": [190, 510], "aurora": [190, 510, 892], "nirscout": [190, 510], "nirsport": [190, 510, 892], "read_raw_hitachi": [190, 882, 892], "read_raw_boxi": [190, 487, 874, 882, 892], "iss": [190, 490, 892], "paren": 190, "unmodul": 190, "unpars": 190, "organis": 190, "digaux": 190, "port": [190, 857, 863], "discourag": [190, 265, 266, 267, 268, 481, 482, 714, 716, 792, 871, 892], "standardis": [190, 892], "to_csv": [190, 216], "_d": 190, "wavelength": [190, 199], "s1_d1": [190, 211], "s2_d1": 190, "s3_d1": 190, "s4_d1": 190, "s5_d2": 190, "s6_d2": 190, "s7_d2": 190, "s8_d2": 190, "assist": [190, 251, 849, 857, 874], "ficidu": 190, "836": [190, 194, 196, 232], "30_reading_fnirs_data": [190, 194], "site": [191, 204, 205, 210, 245, 270, 322, 481, 575, 588, 599, 851], "beep": 191, "deviant": [191, 202], "finger": [191, 868], "bug": [191, 258, 455, 473, 711, 760, 851, 870, 872, 873], "consumpt": [191, 267, 268, 431, 794, 892], "use_precomput": 191, "erm_fnam": 191, "s01_noise_20131218_01": 191, "demand": [191, 216, 431, 435, 480, 622, 874, 892], "n_times_run1": 191, "4800": 191, "unus": [191, 270, 278, 588, 892], "heog": [191, 493], "veog": [191, 493, 892], "favorit": [191, 851], "annotations_df": 191, "csv_fname": 191, "events_bad_0": 191, "concat": [191, 414], "saccades_ev": 191, "7625": 191, "142459": 191, "216954": 191, "345135": 191, "357687": 191, "409101": 191, "461110": 191, "479866": 191, "764914": 191, "798174": 191, "846880": 191, "858863": 191, "9256": 191, "14287": 191, "116432": 191, "134489": 191, "464527": 191, "494136": 191, "749288": 191, "788623": 191, "21179": 191, "72993": 191, "134527": 191, "196555": 191, "249894": 191, "343357": 191, "400771": 191, "450256": 191, "593101": 191, "733942": 191, "765939": 191, "789476": 191, "792852": 191, "833208": 191, "859869": 191, "862888": 191, "saccade_epoch": 191, "reject_by_annot": [191, 211, 218, 222, 265, 361, 481, 482, 523, 564, 581, 582, 589, 590, 716, 805, 814, 892], "projs_saccad": 191, "compute_proj_epoch": [191, 206, 207, 358, 359, 882, 892], "n_mag": [191, 207, 257, 357, 358, 359, 576, 577], "desc_prefix": [191, 357, 358], "projs_eog": 191, "compute_proj_eog": [191, 206, 207, 582, 590, 867, 882, 892], "1201": [191, 196, 245, 301], "spectra": [191, 222, 240, 245, 262, 265, 266, 267, 268, 419, 481, 482, 537, 538, 699, 714, 716, 719, 722, 730, 731, 785, 792, 814, 847], "doubl": [191, 202, 205, 242, 265, 266, 267, 268, 416, 425, 447, 449, 450, 452, 453, 480, 481, 482, 503, 599, 851, 857, 874, 877, 892], "filter_length": [191, 202, 203, 207, 257, 265, 266, 267, 268, 416, 425, 450, 452, 453, 481, 482, 576, 577, 589, 590, 892], "sound": [191, 195, 196, 205, 245, 421, 741, 744], "uadc001": 191, "sound_data": 191, "min_diff": 191, "\u03bc": [191, 210, 423], "\u03c3": [191, 210, 423, 527], "mlo52": 191, "mrt51": 191, "mlo42": 191, "mlo43": 191, "epochs_standard": 191, "concatenate_epoch": [191, 882, 892], "epochs_devi": 191, "mlp52": 191, "evoked_std": 191, "evoked_dev": 191, "p50": 191, "paint": [191, 265, 266, 267, 268, 481, 482, 794, 814], "mmn": [191, 880], "emphasis": 191, "evoked_differ": 191, "ico4": [191, 651, 867], "8033": 191, "015871": 191, "10585e": 191, "09843": 191, "11765e": 191, "stc_standard": 191, "80289065": 191, "69025561": 191, "89954825": 191, "stc_deviant": 191, "12814543": 191, "29154718": 191, "6203076": 191, "stc_differ": 191, "96162575": 191, "78319301": 191, "94351171": 191, "735": [191, 232], "60_ctf_bst_auditori": [191, 194], "radian": [192, 213, 367], "set_channel_types_eyetrack": [192, 882], "glossari": [192, 851, 875], "ascii": [192, 257, 497, 617, 623, 645, 868, 874, 892], "edf2asc": 192, "read_raw_eyelink": [192, 213, 874, 882, 892], "european": [192, 256, 874], "ocular": [192, 204, 205, 207, 245, 563, 614, 892], "bad_blink": [192, 201, 213, 585, 892], "binocular": [192, 213], "ypos_right": [192, 213], "fpath": 192, "px_textpage_w": 192, "create_annot": [192, 213, 500], "custom_sc": 192, "legibl": [192, 213], "bad_acq_skip": [192, 213, 259, 265, 266, 267, 268, 481, 482, 500, 502, 588, 599, 892], "trackabl": 192, "href_textpage_w": 192, "diamet": [192, 874], "ellips": 192, "delimint": 192, "2000hz": 192, "timestamp": [192, 218, 259, 272, 273, 276, 279, 280, 281, 481, 482, 498, 617, 892], "70_reading_eyetracking_data": [192, 194], "763": [194, 232], "auto_tutorials_io": 194, "734": [194, 232, 245, 728, 738, 739, 742], "timedelayingridg": [195, 420, 882, 892], "multivariate_norm": 195, "1337": 195, "path_audio": 195, "spectrogram": [195, 232, 242, 847, 880, 892], "n_decim": 195, "explicit": [195, 264, 360, 372, 373, 851, 877, 892], "delays_samp": 195, "delays_sec": 195, "5000": [195, 229], "meshgrid": [195, 206, 232], "swap": [195, 231, 237, 645, 874, 892], "swapax": [195, 231, 237], "gabor": 195, "means_high": 195, "means_low": 195, "2500": [195, 892], "gauss_high": 195, "gauss_low": 195, "autoscal": 195, "artifici": [195, 245, 498, 564, 868], "convolut": [195, 202, 242, 427, 547, 548, 718, 721, 728, 737, 738, 739, 740, 742, 743, 858, 892], "n_second": 195, "x_del": 195, "ix_delai": 195, "ndim": [195, 242], "elif": 195, "rollaxi": 195, "weights_sim": 195, "iep": 195, "noise_amp": 195, "x_plt": 195, "hstack": [195, 206], "y_plt": 195, "autocorrel": [195, 420, 426], "ix_best_alpha": 195, "best_mod": 195, "best_pr": 195, "iax": 195, "time_pr": 195, "3450": 195, "986": [195, 232], "1316": 195, "1964": [195, 245, 265, 266, 267, 268, 481, 482], "2297": 195, "2954": 195, "541": [195, 229, 232, 245, 435], "3285": 195, "616": [195, 232], "10611": [195, 892], "10668": [195, 892], "10711": 195, "11621": 195, "1255": 195, "13316": 195, "1591": [195, 265, 266], "14586": 195, "15485": 195, "2257": 195, "16219": 195, "2589": 195, "16780": 195, "17256": 195, "3257": 195, "17641": 195, "17095": 195, "10618": [195, 892], "10606": [195, 892], "10636": 195, "10729": 195, "874": 195, "10921": 195, "1205": [195, 196], "12758": 195, "1536": 195, "14068": 195, "1868": 195, "15058": 195, "15829": 195, "2534": 195, "16449": 195, "2861": 195, "16906": 195, "3191": 195, "17307": 195, "16840": 195, "10805": 195, "10695": 195, "10638": [195, 892], "685": [195, 232], "10681": [195, 892], "868": [195, 205, 245, 579], "10844": 195, "1524": 195, "13956": 195, "1854": 195, "14945": 195, "2185": 195, "15718": 195, "2515": 195, "16324": 195, "2843": 195, "16802": 195, "3171": 195, "17201": 195, "16761": 195, "10683": 195, "10698": 195, "515": [195, 196, 232, 892], "10705": [195, 892], "10733": 195, "10915": 195, "1203": [195, 209], "12739": 195, "14060": 195, "1864": 195, "15022": 195, "2194": 195, "15775": 195, "2529": 195, "16415": 195, "16898": 195, "3193": 195, "17328": 195, "10766": 195, "10676": 195, "10734": [195, 892], "871": [195, 232], "10843": 195, "12703": 195, "14036": 195, "1867": 195, "15020": 195, "2197": [195, 208], "15773": 195, "16402": 195, "2865": 195, "16919": 195, "3203": 195, "17372": 195, "16866": 195, "10793": 195, "10772": 195, "519": [195, 196, 232, 242], "10769": 195, "693": [195, 208, 209, 232, 245, 265, 266, 267, 268, 481, 482, 656], "10782": 195, "10800": [195, 209, 210, 892], "12680": 195, "1534": 195, "14030": 195, "15031": 195, "2200": 195, "15810": 195, "2535": 195, "16443": 195, "2866": 195, "16934": 195, "17380": 195, "16880": 195, "i_alpha": 195, "ddot": 195, "tikhonov": 195, "trf": [195, 231], "insensit": [195, 265, 266, 443, 489, 496, 504, 511, 567, 715, 892], "whilst": [195, 212], "mse": 195, "scores_lap": 195, "models_lap": 195, "reg_typ": [195, 426], "ix_best_alpha_lap": 195, "8284": 195, "9011": 195, "11818": 195, "896": [195, 232], "14244": 195, "1228": 195, "15675": 195, "1559": 195, "16612": 195, "1888": [195, 245, 564], "17265": 195, "2218": [195, 245, 478], "17762": 195, "18140": 195, "2827": 195, "18053": 195, "3037": 195, "17475": 195, "3239": 195, "16944": 195, "3443": 195, "16513": 195, "16464": 195, "11673": 195, "11564": 195, "557": [195, 232, 245, 406], "11567": [195, 892], "741": [195, 196, 232], "11536": [195, 892], "12403": 195, "1318": 195, "13932": 195, "1648": 195, "15033": 195, "1979": 195, "15867": 195, "16531": 195, "2644": 195, "17053": 195, "2982": 195, "17521": 195, "3311": 195, "17848": 195, "17308": 195, "11792": 195, "11823": [195, 892], "567": [195, 232, 245], "11791": 195, "11787": 195, "12011": 195, "13665": 195, "14823": 195, "1955": 195, "15681": 195, "2296": 195, "16436": 195, "2626": 195, "16957": 195, "17417": 195, "3295": 195, "17787": 195, "17247": 195, "11670": 195, "11684": 195, "11659": 195, "11707": 195, "964": [195, 232], "12043": 195, "1295": [195, 196], "13664": 195, "14808": 195, "1954": 195, "15661": 195, "2286": 195, "16347": 195, "16837": 195, "2941": 195, "17275": 195, "3272": 195, "17640": 195, "16888": 195, "13484": 195, "434": [195, 196, 209, 227], "13550": 195, "634": [195, 209, 232, 245, 564], "13182": 195, "13596": 195, "13483": 195, "1273": 195, "13204": 195, "1455": 195, "12899": 195, "1649": 195, "12780": 195, "1851": 195, "12755": 195, "2071": 195, "12865": 195, "2281": 195, "12893": 195, "2484": 195, "12864": 195, "2689": 195, "12856": 195, "2953": 195, "13211": 195, "3282": 195, "13894": 195, "13873": 195, "20767": 195, "20746": 195, "20686": 195, "1330": 195, "20739": 195, "1663": 195, "20753": 195, "20697": 195, "20694": 195, "2652": 195, "20680": 195, "2989": 195, "20730": 195, "3313": 195, "20665": 195, "20661": 195, "20520": 195, "20547": 195, "20525": 195, "1319": [195, 209], "20582": 195, "20570": 195, "1982": 195, "20623": 195, "20610": 195, "2637": 195, "20567": 195, "2972": 195, "20611": 195, "20603": 195, "20587": 195, "rf_lap": 195, "fr\u00e9d\u00e9ric": [195, 245, 420], "theunissen": [195, 245, 420], "nandini": [195, 245, 420], "singh": [195, 245, 420, 892], "ann": [195, 218, 245, 420, 892], "hsu": [195, 245, 420], "vinj": [195, 245, 420], "jack": [195, 245, 420, 892], "gallant": [195, 245, 420], "ben": [195, 245, 420, 892], "willmor": [195, 245, 420], "darragh": [195, 245, 420], "smyth": [195, 245, 420], "cell": [195, 199, 245, 420, 877, 892], "577": [195, 209, 232, 245, 420], "0954": [195, 245, 420], "898x_14_3_309": [195, 245, 420], "heer": [195, 245, 420], "paslei": [195, 245, 420], "jochem": [195, 245, 420], "rieger": [195, 245, 420], "nathan": [195, 245, 420], "crone": [195, 245, 420], "knight": [195, 245, 420], "tune": [195, 207, 245, 420], "ncomms13654": [195, 245, 420], "761": [195, 198, 232], "30_strf": [195, 198], "visit": [196, 245, 863], "insight": [196, 874], "eas": 196, "camel": 196, "n_meg_channel": 196, "standand": 196, "interquartil": 196, "robustscal": [196, 423], "n_frequenc": [196, 298, 713], "popular": [196, 847, 855], "win": [196, 242], "grasp": 196, "competit": 196, "kaggl": 196, "week": [196, 873], "clf_csp": 196, "ssnr": [196, 565], "rewrit": [196, 892], "plot_filt": [196, 202, 203, 414, 421, 808, 882, 892], "boil": [196, 849], "evoked_time_gen": 196, "joint_kwarg": 196, "diag": [196, 692, 877], "1296": [196, 209, 245], "478": [196, 209], "482": [196, 232], "502": [196, 227, 529, 877], "504": [196, 227, 232], "505": [196, 232], "412": [196, 209, 227, 232], "503": [196, 227, 232], "554": [196, 209, 232], "518": 196, "592": 196, "667": 196, "526": [196, 232], "527": [196, 232], "745": 196, "784": [196, 232], "537": [196, 232], "804": [196, 209, 232], "821": [196, 232], "914": [196, 232], "539": 196, "931": [196, 232], "963": [196, 209, 221, 232], "979": [196, 232], "1036": 196, "1056": 196, "1076": 196, "1096": 196, "1116": [196, 209], "1136": [196, 245], "1175": 196, "1195": 196, "1230": 196, "1246": 196, "1262": [196, 209], "1278": 196, "514": 196, "415": [196, 215], "521": [196, 245, 356], "635": 196, "654": [196, 209, 232], "533": [196, 232], "746": [196, 232], "776": [196, 232], "808": 196, "824": [196, 232], "912": 196, "511": [196, 232], "1019": 196, "517": [196, 209, 232], "1037": [196, 245, 696], "1147": 196, "1158": 196, "1170": 196, "1193": [196, 245], "1244": 196, "1258": 196, "1271": 196, "1284": 196, "414": [196, 208, 209, 215, 227, 232], "565": [196, 232], "428": 196, "599": [196, 232], "436": [196, 209, 227, 232, 245], "612": 196, "626": [196, 230, 232, 245, 564], "676": 196, "712": [196, 232], "727": [196, 232], "754": [196, 232, 245, 867], "767": [196, 232, 245, 867], "838": [196, 209, 232], "853": [196, 209, 232], "887": [196, 232], "904": [196, 232, 278], "923": [196, 232], "946": [196, 232], "969": [196, 232], "981": 196, "423": [196, 227, 232], "992": [196, 211, 232], "418": [196, 227, 232, 892], "1004": [196, 209, 877], "1015": [196, 209], "1107": 196, "1163": 196, "1181": [196, 209], "1220": 196, "1239": 196, "1259": [196, 227, 245, 392], "1293": 196, "lanczo": 196, "1353": 196, "91709": 196, "26373e": 196, "98776221": 196, "41838256": 196, "06628583": 196, "methodolog": [196, 245], "uncov": [196, 245], "hal": [196, 245], "01848442": [196, 245], "archiv": [196, 245, 389, 851, 857, 871, 880], "ouvert": [196, 245], "lionel": [196, 245], "naccach": [196, 245], "subtend": [196, 245, 874], "e85791": [196, 245], "0085791": [196, 245], "50_decod": [196, 198], "759": [198, 232], "auto_tutorials_machin": 198, "vibrat": 199, "door": [199, 201], "slam": [199, 201], "phone": 199, "geomagnet": 199, "unshield": 199, "headphon": 199, "malfunct": [199, 200, 867], "qr": [199, 257, 576, 589, 592, 892], "sensori": 199, "plan": [199, 200, 203, 208, 438, 849, 855, 873], "genesi": 199, "ssp_projector": 199, "readili": [199, 203, 880], "mag_channel": 199, "remove_dc": [199, 203, 481, 482, 813, 892], "get_xdata": [199, 203], "get_ydata": [199, 203], "searchsort": [199, 203], "dx": [199, 203], "dy": [199, 203], "head_width": [199, 203], "length_includes_head": [199, 203], "find_ecg_ev": [199, 201, 207, 218, 576, 581, 882, 892], "create_ecg_epoch": [199, 201, 205, 207, 576, 589, 882, 892], "ecg_epoch": [199, 205, 581], "6007": [199, 204], "streak": 199, "avg_ecg_epoch": 199, "blocki": 199, "efficaci": 199, "pro": [199, 202, 851], "con": [199, 202], "751": [199, 209, 215], "10_preprocessing_overview": [199, 215], "deepcopi": 200, "usabl": [200, 429, 574, 607, 892], "wildcard": 200, "original_bad": 200, "bad_chan": 200, "paus": [200, 267, 268, 760, 892], "codebas": [200, 851, 866, 875, 880], "good_eeg": 200, "all_eeg": 200, "setdiff1d": 200, "excess": [200, 202, 481, 482, 813, 892], "protocol": [200, 867], "sheet": [200, 867], "offlin": 200, "raw2": [200, 218], "invest": [200, 873], "unrealist": [200, 867], "dramat": 200, "robust": [200, 204, 205, 241, 245, 265, 266, 414, 564, 669, 674, 892], "uninform": 200, "deweight": 200, "fair": [200, 208], "eeg_data": [200, 216], "eeg_data_interp": 200, "interp": [200, 663, 664, 665, 677, 892], "00000022": 200, "bad_color": [200, 481, 482, 813], "grad_data": 200, "grad_data_interp": 200, "00000009": 200, "propag": [200, 203, 259, 852], "15_handling_bad_channel": [200, 215], "fake_keypress": [201, 218], "keyboard": [201, 219, 760, 868, 892], "push": [201, 202, 851, 892], "enter": [201, 207, 218, 219, 850, 851, 854], "bad_cough": 201, "wrapper": [201, 269, 445, 449, 487, 702, 703, 892], "blink_annot": 201, "eeg_pick": 201, "albeit": 201, "annotate_break": [201, 882, 892], "first_tim": [201, 480, 481, 482, 502, 600, 892], "block_1": 201, "block_2": 201, "block_annot": 201, "break_annot": [201, 567], "min_break_dur": [201, 567], "t_start_after_previ": [201, 567], "t_stop_before_next": [201, 567], "bad_break": [201, 567], "events_subset": 201, "flat_criteria": 201, "stringent": 201, "reject_tmin": [201, 260, 265, 266, 581, 892], "reject_tmax": [201, 260, 265, 266, 581, 892], "disappear": [201, 242, 892], "subsum": 201, "stronger_reject_criteria": 201, "2000e": 201, "20_rejecting_bad_data": [201, 215], "park": [202, 245], "burru": [202, 245], "ifeachor": [202, 245], "jervi": [202, 245], "widmann": [202, 245], "somedai": 202, "conclud": [202, 231], "lightli": [202, 851], "cautious": 202, "hope": [202, 203, 205, 242], "math": [202, 871], "b_0": 202, "b_1": [202, 874], "b_2": 202, "ldot": 202, "b_m": [202, 874], "a_1": 202, "a_2": 202, "a_n": 202, "mb_kz": 202, "na_kz": 202, "b_k": [202, 276, 874], "denomin": [202, 232, 298, 299, 666, 676, 700, 703, 725, 892], "a_k": 202, "autoregress": 202, "broken": [202, 270, 454, 851, 892], "finit": [202, 223, 232, 245, 458, 867, 874, 892], "impuls": [202, 871], "infinit": [202, 874, 892], "qquad": 202, "foral": [202, 874], "steeper": [202, 203], "accumul": [202, 265, 266], "despit": [202, 231], "throughput": 202, "sharp": [202, 227, 892], "steep": 202, "broader": [202, 264, 265, 266, 267, 268, 712, 715], "fundament": 202, "fftfreq": 202, "plot_ideal_filt": [202, 801, 882, 892], "f_p": [202, 874], "flim": [202, 203, 801, 808], "dlim": [202, 801], "f_": 202, "nyq": [202, 450, 453], "third_height": 202, "hypothet": [202, 564], "na\u00efv": 202, "brick": [202, 203], "correspondingli": [202, 265, 266, 874], "tighter": [202, 892], "fortun": [202, 206, 874], "remez": 202, "firl": 202, "ifft": 202, "relax": [202, 237, 892], "shallow": [202, 274], "gradual": 202, "shorten": [202, 219, 242, 784, 855, 874, 892], "benefici": [202, 277], "wherebi": 202, "came": [202, 857], "minimum_phas": 202, "falloff": 202, "h_min": 202, "uncompens": 202, "imaginari": [202, 245, 739, 740, 892], "dur": 202, "morlet_freq": 202, "tlim": 202, "ttick": 202, "blip": 202, "n_onset": 202, "x_orig": 202, "transition_band": 202, "create_filt": [202, 203, 265, 266, 267, 268, 452, 453, 481, 482, 801, 882, 892], "x_v16": 202, "twice": [202, 265, 266, 267, 268, 449, 450, 452, 453, 481, 482, 813], "filter_dur": 202, "x_v14": 202, "x_v13": 202, "h_eff": 202, "10001": [202, 892], "design_mne_c_filt": 202, "x_mne_c": 202, "hpw": 202, "lpw": 202, "x_min": [202, 315], "cost": [202, 272, 273, 276, 279, 280, 281, 420, 426, 564, 699, 700, 702, 703, 760, 818, 823, 874], "plot_sign": 202, "yscale": [202, 712, 892], "yticklabel": 202, "get_yticklabel": 202, "iirfilt": [202, 449], "iirdesign": [202, 449], "butterworth": [202, 265, 266, 267, 268, 416, 425, 449, 450, 452, 453, 481, 482, 576, 577, 892], "worsen": 202, "filtfilt": [202, 265, 266, 267, 268, 425, 449, 450, 452, 453, 481, 482, 813], "btype": [202, 449], "ftype": [202, 272, 273, 276, 279, 280, 281, 449], "butter": [202, 449], "x_shallow": 202, "sosfiltfilt": 202, "sosfilt": 202, "zpk2so": 202, "polynomi": [202, 265, 266, 267, 268, 481, 482, 522, 874, 892], "iir_param": [202, 207, 265, 266, 267, 268, 416, 425, 449, 450, 452, 453, 481, 482, 576, 577, 892], "filt": [202, 450], "x_steep": 202, "chebychev": [202, 449], "cheby1": [202, 449], "rp": [202, 449], "chebyshev": [202, 449, 892], "substanti": [202, 210, 265, 266, 271, 376, 470, 873, 874, 880], "adjust_ax": 202, "errant": 202, "misappl": 202, "deleteri": 202, "schr\u00f6ger": [202, 245], "uncontrol": 202, "acunzo": [202, 245], "misinterpret": 202, "tanner": [202, 245], "semant": 202, "syntact": 202, "n400": 202, "p600": 202, "5\u00b5v": 202, "sic": 202, "poststimulu": 202, "octav": 202, "energi": [202, 256, 871, 892], "understood": [202, 760], "cos_t": 202, "sig": [202, 231, 236, 237], "iir_lp_30": 202, "iir_hp_p1": 202, "iir_lp_2": 202, "iir_hp_2": 202, "x_lp_30": 202, "padlen": [202, 449], "x_hp_p1": 202, "x_lp_2": 202, "x_hp_2": 202, "x_f": 202, "lp": 202, "_2": [202, 874], "hp": [202, 210, 257], "evolv": 202, "maess": [202, 245, 892], "rebut": 202, "old": [202, 216, 218, 240, 245, 259, 262, 265, 266, 267, 268, 270, 276, 279, 314, 322, 342, 406, 481, 482, 506, 529, 603, 625, 646, 647, 658, 760, 825, 829, 851, 859, 892], "baseline_plot": 202, "all_ax": 202, "ri": [202, 227, 245, 741, 744], "iir_hp": 202, "x_hp": 202, "leak": [202, 223, 873, 874], "n_pre": 202, "sig_pr": 202, "filter_data": [202, 265, 266, 267, 268, 425, 449, 450, 453, 481, 482, 882, 892], "adopt": [202, 849, 851], "reciproc": [202, 265, 266, 267, 268, 343, 416, 425, 435, 450, 452, 453, 481, 482, 575, 588, 599], "decent": 202, "blackman": [202, 265, 266, 267, 268, 425, 450, 452, 453, 481, 482], "fir_window": [202, 265, 266, 267, 268, 416, 425, 450, 452, 453, 481, 482], "fir_desgin": 202, "meet": [202, 873], "8197": 202, "outdat": 202, "construct_iir_filt": [202, 265, 266, 267, 268, 416, 425, 450, 452, 453, 481, 482, 576, 577, 882, 892], "transition_bandwidth": 202, "fir_coef": 202, "0545": 202, "0017": 202, "wider": [202, 203], "thoma": [202, 227, 228, 245, 542, 669, 674, 696, 699, 700, 701, 702, 703, 892], "sidnei": [202, 245], "wilei": [202, 245], "82896": [202, 245], "andrea": [202, 245, 298, 892], "erich": [202, 245], "burkhard": [202, 245, 892], "00233": [202, 245], "graham": [202, 245], "mackenzi": [202, 245], "rossum": [202, 245], "darren": [202, 245], "kara": [202, 245], "morgan": [202, 245], "inappropri": [202, 245, 272, 273, 276, 279, 280, 281], "conclus": [202, 229, 245], "1009": [202, 245], "12437": [202, 245], "1469": [202, 245], "8986": [202, 245], "01009": [202, 245], "commentari": [202, 245], "artefact": [202, 212, 245], "norton": [202, 245], "ermf": [202, 245], "983": [202, 215, 217, 221, 232], "25_background_filt": [202, 215], "mathrm": [203, 210, 227, 728, 738, 740, 742, 743], "raw_highpass": 203, "19821": 203, "9911": [203, 892], "filter_param": 203, "add_arrow": 203, "meg_pick": 203, "raw_notch": 203, "3965": 203, "raw_notch_fit": 203, "spectrum_fit": [203, 453, 481, 482, 892], "notabl": [203, 241, 892], "consum": [203, 275, 574, 705, 892], "raw_downsampl": 203, "pitfal": 203, "safe": [203, 216, 245, 265, 266, 322, 380, 381, 382, 385, 386, 387, 389, 394, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 481, 857, 859], "614990234375": [203, 216], "current_sfreq": 203, "desired_sfreq": 203, "obtained_sfreq": 203, "lowpass_freq": 203, "19813025304873463": 203, "80214146205357": 203, "synch": 203, "771": [203, 209, 215], "30_filtering_resampl": [203, 215], "gratton": [204, 245, 563, 614], "croft": [204, 245, 563], "articl": [204, 866], "6607": 204, "bleed": [204, 283, 594], "250m": 204, "model_plain": 204, "picks_artifact": [204, 212, 563, 614], "epochs_clean_plain": 204, "redo": 204, "partli": 204, "variat": [204, 224, 414, 867, 892], "prone": 204, "allevi": [204, 874], "epochs_sub": 204, "model_sub": 204, "epochs_clean_sub": 204, "piec": [204, 218, 265, 266, 481, 482, 874], "ongo": [204, 567, 867, 880], "alik": 204, "model_evok": 204, "epochs_clean_evok": 204, "eog_evoked_clean": 204, "raw_kwarg": 204, "cole": [204, 245, 563, 614], "emanuel": [204, 245, 563, 614, 665, 892], "donchin": [204, 245, 563, 614], "90135": [204, 245, 563, 614], "s0987": [204, 245, 563], "7053": [204, 245, 563], "00055": [204, 245, 563], "829": [204, 215, 232], "35_artifact_correction_regress": [204, 215], "corrmap": [205, 882, 892], "guidanc": [205, 207, 873], "blind": [205, 245, 564, 597], "microphon": 205, "unmix": [205, 564, 565, 597, 804, 807, 892], "analogi": 205, "unwant": [205, 207, 211, 320, 892], "ic": [205, 275, 564, 579, 803, 805, 807, 892], "n_pca_compon": [205, 564, 804, 892], "pc": 205, "smallest": [205, 232, 343, 414, 564, 871, 874], "runica": [205, 564], "mixing_matrix_": [205, 564], "unmixing_matrix_": [205, 564], "tesla": [205, 207, 222, 874], "artifact_pick": [205, 207], "harder": [205, 851], "filt_raw": 205, "huge": [205, 698], "9010": 205, "get_explained_variance_ratio": [205, 564, 892], "explained_var_ratio": 205, "9358001342790973": 205, "7717091491114122": 205, "ratio_perc": 205, "trackpad": [205, 267, 268, 473, 776, 795], "15459": 205, "954": [205, 232], "ica000": [205, 892], "ica001": [205, 275, 564, 803, 805, 807], "anywai": [205, 217, 851, 857, 892], "read_ica": [205, 564, 882], "reconst_raw": 205, "tediou": 205, "reset": [205, 262, 265, 266, 267, 268, 274, 367, 414, 421, 481, 482, 563, 564, 712, 714, 715, 716, 760, 791, 792, 796, 799, 803, 812, 815, 820, 828, 877, 892], "eog_indic": 205, "prefront": 205, "ctp": [205, 564, 892], "ecg_indic": 205, "caught": 205, "ica014": 205, "refit": [205, 892], "new_ica": 205, "neck": [205, 310], "trail": [205, 564, 599, 756, 892], "s001r03": 205, "s002r03": 205, "19679": 205, "s003": 205, "s003r03": 205, "lib": [205, 849, 857], "python3": [205, 850, 892], "_fastica": 205, "convergencewarn": 205, "s004": 205, "s004r03": 205, "6250": 205, "6249": 205, "6150": 205, "ica002": 205, "labels_": [205, 564, 579, 806], "get_compon": [205, 564, 892], "subject_index": 205, "component_index": 205, "template_eog_compon": 205, "33638605": 205, "32708878": 205, "32846765": 205, "32807248": 205, "35916344": 205, "37615216": 205, "42464993": 205, "21789139": 205, "22387812": 205, "22237922": 205, "21342143": 205, "2425263": 205, "26757238": 205, "27806995": 205, "15470616": 205, "1693302": 205, "17711037": 205, "17373137": 205, "19651749": 205, "21091786": 205, "22459439": 205, "68783519": 205, "46717407": 205, "64182737": 205, "34165002": 205, "28991817": 205, "76938995": 205, "0057612": 205, "54311043": 205, "54567127": 205, "63806031": 205, "57058636": 205, "52637437": 205, "51788659": 205, "55774431": 205, "56188149": 205, "69340923": 205, "73333856": 205, "2829121": 205, "39253171": 205, "16120286": 205, "25431324": 205, "06352167": 205, "1647002": 205, "11930156": 205, "1811579": 205, "10112171": 205, "12638332": 205, "13623739": 205, "1301851": 205, "14380943": 205, "15329772": 205, "1715539": 205, "16560352": 205, "13293812": 205, "08175318": 205, "10173655": 205, "10764581": 205, "12707317": 205, "09785876": 205, "07433338": 205, "08470678": 205, "07373196": 205, "03379354": 205, "recomput": [205, 208, 232, 455, 564, 597, 651, 892], "ecg_ind": 205, "francoi": [205, 245, 564], "cardoso": [205, 245, 564], "precondit": [205, 210, 245, 564, 600, 892], "hessian": [205, 245, 564], "4049": [205, 245, 564], "2844203": [205, 245, 564], "iren": [205, 245], "winkler": [205, 245], "deben": [205, 245, 579], "4101": [205, 245], "4105": [205, 245], "milan": [205, 245, 892], "7319296": [205, 245], "dammer": [205, 245, 564, 892], "schiek": [205, 245, 564], "boer": [205, 245, 564], "carmen": [205, 245, 392, 564], "silex": [205, 245, 564], "mikhail": [205, 245, 564], "zvyagintsev": [205, 245, 564], "uw": [205, 213, 245, 564], "pietrzyk": [205, 245, 564], "mathiak": [205, 245, 564], "2353": [205, 245, 564], "926677": [205, 245, 564], "filipa": [205, 245, 579], "campo": [205, 245, 579], "viola": [205, 245, 579, 892], "jeremi": [205, 245, 579], "thorn": [205, 245, 579], "edmond": [205, 245, 579], "till": [205, 245, 579], "schneider": [205, 245, 579], "tom": [205, 245, 579, 892], "eichel": [205, 245, 579], "semi": [205, 245, 579, 892], "877": [205, 232, 245, 579], "clinph": [205, 245, 564, 572, 579, 741, 744], "40_artifact_correction_ica": [205, 215], "setup_3d_ax": 206, "set_zlabel": 206, "set_ylim": [206, 242], "set_zlim": 206, "geometr": [206, 272, 273, 276, 279, 280, 281, 448, 825, 867, 874], "shadow": [206, 652], "cast": [206, 258, 455, 764, 892], "sun": 206, "xy_projection_matrix": 206, "projected_point": 206, "projected_vector": 206, "arrow_coord": 206, "arrow_length_ratio": 206, "symbol": [206, 257, 711, 872, 874, 892], "expans": [206, 210, 265, 266, 267, 268, 435, 481, 482, 522, 574, 575, 588, 599, 874], "unpack": [206, 232, 773, 857], "lucki": 206, "bother": [206, 216], "trigger_effect": 206, "internet": [206, 873], "algebra": [206, 871, 892], "full_matric": 206, "trigger_projection_matrix": 206, "plot_trisurf": 206, "interchang": [206, 298, 847], "ten": [206, 242, 472, 855, 868], "hyperplan": [206, 417, 424], "synonym": [206, 877], "incident": [206, 267, 268, 473, 776, 795], "phrase": 206, "publish": [206, 245, 564, 869], "first_projector": 206, "explained_var": [206, 274, 892], "inact": [206, 210, 265, 266, 267, 268, 481, 482, 873], "compute_proj_raw": [206, 207, 357, 358, 874, 882, 892], "ortho": [206, 564], "write_proj": [206, 637, 882, 892], "forgo": 206, "offecg": 206, "remove_exist": [206, 207, 265, 266, 267, 268, 481, 482, 760], "perman": [206, 849, 867, 892], "mags_ecg": 206, "_projector": 206, "cheaper": 206, "consequenti": 206, "mikko": [206, 207, 245, 874], "uusitalo": [206, 207, 245, 874], "bf02534144": [206, 207, 245, 874], "45_projectors_background": [206, 215], "equip": [207, 874], "system_proj": 207, "empty_room_fil": 207, "empty_room_raw": 207, "empty_room_proj": 207, "distant": [207, 871], "_proj": [207, 892], "no_proj": [207, 576, 577], "picks_trac": [207, 811], "plot_projs_joint": [207, 882, 892], "ecg_l_freq": [207, 257, 576], "ecg_h_freq": [207, 257, 576], "filter_method": [207, 576, 577], "presum": 207, "clutter": 207, "eog_proj": 207, "okai": 207, "eog_projs_bad": 207, "perfectli": [207, 242, 735, 874], "get_titl": [207, 211], "get_ylabel": 207, "set_tick_param": 207, "labelbottom": 207, "50_artifact_correction_ssp": [207, 215], "earlob": 208, "collarbon": 208, "disadvantag": [208, 227], "add_reference_channel": [208, 265, 266, 267, 268, 481, 482, 712, 714, 715, 716, 882, 892], "ref_channel": [208, 265, 266, 267, 268, 282, 481, 482, 656, 712, 714, 715, 716], "raw_new_ref": 208, "raw_avg_ref": 208, "wasn": [208, 892], "infin": [208, 245, 265, 266, 267, 268, 481, 482, 656, 892], "raw_rest": 208, "_raw": [208, 211], "00413199": 208, "0159844": 208, "05174612": 208, "eeg_bipolar": [208, 653], "transvers": [208, 263], "raw_bip_ref": 208, "36038": [208, 216], "61837": 208, "valueerror": [208, 276, 279, 448, 630, 653, 662, 784], "yao": [208, 245, 265, 266, 267, 268, 481, 482, 656, 672], "711": [208, 232, 245, 265, 266, 267, 268, 481, 482, 656], "0967": [208, 245, 265, 266, 267, 268, 481, 482, 656], "3334": [208, 245, 265, 266, 267, 268, 481, 482, 656], "dezhong": [208, 245], "yun": [208, 245], "qin": [208, 245], "shiang": [208, 245], "hu": [208, 245], "dong": [208, 245, 892], "maria": [208, 245], "bringa": [208, 245], "vega": [208, 245], "pedro": [208, 245], "vald": [208, 245], "\u00e9": [208, 245], "sosa": [208, 245], "00707": [208, 245], "55_setting_eeg_refer": [208, 215], "h\u00f6chenberg": [209, 241, 879, 892], "hoechenberg": [209, 241], "test_move_anon_raw": [209, 210], "v6": [209, 210], "v7": [209, 210, 892], "31199": [209, 210], "20399": 209, "get_chpi_info": [209, 882, 892], "chpi_freq": 209, "chpi_cod": 209, "chpi_amplitud": [209, 343, 344], "compute_chpi_amplitud": [209, 344, 345, 882, 892], "1696": 209, "483": 209, "811": [209, 232], "831": [209, 232], "594": [209, 232], "919": [209, 232], "614": [209, 230, 232], "1029": 209, "786": [209, 232], "1138": 209, "1160": 209, "855": [209, 232], "872": [209, 232], "1247": 209, "888": [209, 232], "1268": 209, "902": [209, 232], "1289": 209, "916": [209, 232, 242], "932": 209, "1354": 209, "1374": 209, "1396": 209, "984": [209, 232], "1417": 209, "1439": 209, "1461": 209, "1478": 209, "1493": 209, "1020": 209, "1508": 209, "1538": [209, 240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 724, 730], "1008": 209, "1553": 209, "1568": 209, "1583": 209, "1602": 209, "1620": 209, "1637": 209, "1675": 209, "1695": 209, "1030": 209, "compute_chpi_loc": [209, 210, 343, 345, 346, 882, 892], "4385": 209, "426": [209, 232], "568": 209, "573": [209, 232], "633": 209, "737": [209, 232], "773": [209, 232], "429": [209, 227, 232, 239], "789": [209, 232], "805": 209, "819": [209, 232], "823": [209, 232], "827": 209, "833": 209, "889": [209, 232, 278], "948": [209, 232], "1040": 209, "1062": 209, "1072": 209, "1124": 209, "1301": 209, "1315": 209, "1325": 209, "1378": 209, "1415": 209, "1504": 209, "1529": 209, "1565": [209, 245], "1573": 209, "1580": [209, 265, 266], "1586": 209, "1590": 209, "1594": 209, "1599": 209, "1609": 209, "1644": 209, "1652": 209, "write_head_po": [209, 344, 346, 352, 353, 882], "compute_chpi_snr": [209, 343, 783, 882, 892], "plot_chpi_snr": [209, 882, 892], "snr_dict": [209, 783], "419": 209, "424": [209, 227, 232], "489": [209, 242], "59_head_posit": [209, 215], "find_bad_channels_maxwel": [210, 599, 882, 892], "obliqu": 210, "filter_chpi": [210, 599, 882, 892], "crosstalk": 210, "fine_cal_fil": 210, "sss_cal_mgh": 210, "crosstalk_fil": 210, "ct_sparse_mgh": 210, "raw_check": 210, "auto_noisy_ch": 210, "auto_flat_ch": 210, "auto_scor": 210, "cross_talk": [210, 574, 588, 599], "return_scor": [210, 588], "ei": 210, "ch_subset": 210, "scores_noisi": [210, 588], "limits_noisi": [210, 588], "bin_label": 210, "data_to_plot": 210, "cbar_kw": 210, "nanmin": 210, "rect": 210, "nanmax": [210, 230], "appar": [210, 867], "fashion": [210, 374, 892], "min_count": [210, 588], "qualifi": 210, "int_ord": [210, 435, 575, 588, 599, 892], "ext_ord": [210, 343, 345, 349, 435, 574, 575, 588, 599], "thick": [210, 874], "mathtt": [210, 728, 738, 739, 740, 742, 743], "st": [210, 257], "_durat": 210, "penultim": 210, "st_correl": [210, 588, 599, 607], "st_onli": [210, 588, 599, 892], "doublecheck": 210, "get_active_chpi": [210, 882, 892], "chpi_fif_fil": 210, "head_pos_fil": 210, "headpo": [210, 257, 353], "patent": [210, 599, 607], "legal": [210, 784, 873], "commerci": [210, 599], "124905": [210, 245, 435, 575, 599], "1935742": [210, 245, 575, 599], "1759": [210, 245, 599], "60_maxwell_filtering_sss": [210, 215], "deoxyhaemoglobin": [211, 892], "itertool": 211, "compress": [211, 260, 264, 265, 266, 267, 268, 389, 481, 482, 581, 582, 712, 715, 857, 892], "novemb": [211, 245, 301, 669, 674], "cw": [211, 374, 847], "set_dur": [211, 259, 892], "mid": [211, 227], "source_detector_dist": [211, 882, 892], "photodetect": 211, "scalp_coupling_index": [211, 882, 892], "beer": 211, "lambert": 211, "law": [211, 873, 892], "raw_haemo": 211, "beer_lambert_law": [211, 882, 892], "haemodynam": 211, "predominantli": 211, "raw_haemo_unfilt": 211, "s4_d4": 211, "s8_d8": 211, "s3_d3": 211, "s7_d6": 211, "s7_d7": 211, "s6_d8": 211, "oxi": [211, 892], "morphologi": 211, "evoked_dict": 211, "color_dict": 211, "aa3377": [211, 728, 738], "styles_dict": 211, "chroma": 211, "drive": [211, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 523], "tidi": 211, "leg_lin": 211, "get_c": 211, "70_fnirs_process": [211, 215], "technologi": [212, 245, 256, 879], "placement": [212, 267, 268, 797, 847, 892], "opm_data_fold": 212, "ucl_opm_auditori": [212, 868, 882], "opm_fil": 212, "002_se": 212, "aef_run": 212, "001_meg": 212, "540000": 212, "6000": [212, 597], "pt": [212, 485, 515], "amp_scal": 212, "1e12": [212, 373], "data_d": 212, "time_d": 212, "set_kwarg": 212, "ambient": 212, "knowldg": 212, "evironment": [212, 578], "g2": 212, "psd_kwarg": 212, "psd_pre": 212, "psd_post_reg": 212, "9901": [212, 892], "relatiship": 212, "hfc": [212, 578, 892], "homgen": 212, "compute_proj_hfc": [212, 882, 892], "psd_post_hfc": 212, "broadband": 212, "remnant": 212, "motiv": [212, 242], "minimis": 212, "interfec": 212, "39601": 212, "seymour": [212, 245, 578, 868, 892], "stephani": [212, 245, 578, 868], "mellor": [212, 245, 578, 868], "neill": [212, 245, 578, 868, 892], "tim": [212, 245, 578, 868], "tiernei": [212, 245, 578, 868], "eleanor": [212, 245, 578, 868], "maguir": [212, 245, 578, 868], "opportun": [212, 245, 868], "118834": [212, 245, 868], "februari": [212, 245, 868], "80_opm_process": [212, 215], "huberti": [213, 892], "seh33": 213, "dominik": [213, 242, 892], "welk": [213, 242, 892], "asc": [213, 500, 586, 874], "mff": [213, 267, 268, 335, 445, 446, 498, 630, 874, 892], "eyelink": [213, 500, 586, 874, 882, 892], "read_eyelink_calibr": [213, 584, 882, 892], "et_fpath": 213, "plr_eyetrack": 213, "eeg_fpath": 213, "plr_eeg": 213, "raw_et": 213, "raw_eeg": 213, "june": 213, "signal1": [213, 224], "monocular": 213, "gaze": [213, 584, 587], "xpos_right": 213, "pupil_right": 213, "first_cal": 213, "hv5": 213, "interpolate_blink": [213, 882, 892], "bad_": [213, 218, 892], "interpolate_gaz": [213, 585], "photodiod": [213, 868], "signifi": [213, 337, 564], "et_ev": 213, "shortest_ev": [213, 455], "uint_cast": [213, 258, 455], "eeg_ev": 213, "din3": 213, "realign_raw": [213, 882, 892], "et_flash_tim": 213, "eeg_flash_tim": 213, "force_update_info": [213, 265, 266, 267, 268, 481, 482, 712, 714, 715, 716], "e19": 213, "e11": 213, "e4": 213, "e12": 213, "e5": 213, "e61": 213, "e62": 213, "e78": 213, "e67": 213, "e72": 213, "e77": 213, "picks_idx": 213, "constrict": 213, "90_eyetracking_data": [213, 215], "auto_tutorials_preprocess": 215, "166800": 216, "read_raw_": [216, 480, 874, 892], "famili": [216, 701], "seriou": [216, 873], "parenthes": [216, 874], "estimate_rank": [216, 892], "n_time_samp": 216, "time_sec": 216, "n_chan": [216, 692, 739, 740, 822], "000167471573526": 216, "megacq": 216, "acqch001": 216, "110113": 216, "acqch002": 216, "110112": 216, "acqch003": 216, "110111": 216, "acqch004": 216, "110122": 216, "frequent": [216, 500, 849, 851, 869, 872, 892], "12012": 216, "18018": 216, "24024": 216, "underlyingli": [216, 869], "n_timepoint": [216, 697], "pose": [216, 851], "undo": [216, 629, 892], "eeg_and_eog": 216, "raw_temp": 216, "channel_nam": [216, 498, 630, 892], "eog_and_frontal_eeg": 216, "frivol": 216, "eeg_059": 216, "eeg_060": 216, "blink_detector": 216, "makeshift": 216, "eeg_001": 216, "raw_select": 216, "unspecifi": [216, 222, 784], "500770084699155": 216, "5001290587975622": 216, "raw_selection1": 216, "raw_selection2": 216, "raw_selection3": 216, "5041000049184614": 216, "sampling_freq": [216, 222], "start_stop_second": 216, "channel_index": [216, 773], "85742192e": 216, "64355481e": 216, "89306644e": 216, "99872648": 216, "00039144": 216, "0020564": 216, "9933487": 216, "99501366": 216, "99667862": 216, "data_arrai": 216, "times_arrai": 216, "meg_0712": 216, "meg_1022": 216, "two_meg_chan": 216, "y_offset": 216, "safest": [216, 867], "eeg_channel_indic": 216, "planar1": [216, 262, 265, 266, 267, 268, 414, 421, 481, 482, 561, 562, 563, 564, 579, 712, 714, 715, 716, 792, 799, 803, 815, 820, 822], "planar2": [216, 262, 265, 266, 267, 268, 414, 421, 481, 482, 561, 562, 563, 564, 579, 712, 714, 715, 716, 792, 799, 803, 815, 820, 822], "first_channel_data": [216, 874], "eeg_and_eog_data": 216, "two_meg_chans_data": 216, "my_data": 216, "npy": [216, 217], "afford": 216, "scaling_tim": 216, "start_end_sec": 216, "to_hdf": 216, "999750": 216, "952283e": 216, "001415": 216, "069226e": 216, "003080": 216, "080921e": 216, "004745": 216, "010755e": 216, "006410": 216, "10_raw_overview": [216, 221], "write_ev": [217, 455, 626, 882, 892], "lst": [217, 626, 837], "array_equ": 217, "_eve": 217, "my_experi": 217, "told": 217, "events_no_button": 217, "merged_ev": 217, "ultim": [217, 851], "send": [217, 757], "cumbersom": 217, "20_event_arrai": [217, 221], "datetim": [218, 259, 265, 266, 267, 268, 270, 284, 481, 482, 892], "compris": [218, 222, 265, 266, 700, 714, 715, 716, 874, 880], "posix": [218, 259], "my_annot": 218, "aaa": 218, "bbb": 218, "ccc": 218, "microsecond": [218, 259, 265, 266, 267, 268, 270, 481, 482, 877], "time_of_first_sampl": 218, "95597083": 218, "iso": 218, "8601": 218, "new_orig_tim": 218, "strftime": 218, "later_annot": 218, "ddd": 218, "eee": 218, "fff": 218, "720100": 218, "darker": 218, "spinbox": 218, "safeguard": [218, 270, 892], "interactive_annot": 218, "ordereddict": 218, "95597082905339": [218, 259], "tzinfo": 218, "timezon": [218, 265, 266, 267, 268, 270, 481, 482], "descr": 218, "70597082905339": 218, "45597082905339": 218, "20597082905339": 218, "WILL": 218, "NOT": 218, "annot_from_fil": 218, "30_annotate_raw": [218, 221], "versatil": 219, "lengthen": 219, "unmark": 219, "newli": [219, 781], "hover": 219, "thumbnail": 219, "plot_psd_topo": [219, 240, 265, 266, 267, 268, 481, 482], "40_visualize_raw": [219, 221], "auto_tutorials_raw": 221, "synthet": [222, 498, 581, 589, 874, 892], "hertz": [222, 224, 270, 713, 717, 718, 719, 720, 721, 722], "eog001": 222, "meg001": 222, "meg002": 222, "meg003": 222, "meg004": 222, "meg005": 222, "meg006": 222, "meg007": 222, "meg008": 222, "seven": [222, 874, 892], "molar": [222, 874], "amper": [222, 874], "simulated_raw": 222, "show_scalebar": [222, 265, 266, 481, 482, 790, 813, 892], "simulated_epoch": 222, "column_stack": 222, "condition_a": 222, "condition_b": 222, "evoked_arrai": 222, "n_per_seg": [222, 242, 265, 266, 267, 268, 481, 482, 714, 716, 731, 892], "psd_ave": 222, "spectrum_from_arrai": 222, "inst_info": 222, "my_welch": 222, "inst_type_str": 222, "data_typ": 222, "779": [222, 226, 232], "10_array_obj": [222, 226], "simulate_stc": [223, 676, 677, 678, 882, 892], "dt": [223, 435, 724], "17545": 223, "hemi_to_ind": 223, "elig": [223, 873], "surf_vertic": 223, "restrict_vert": 223, "intersect1d": 223, "restrict_vertic": [223, 271, 276], "cent_idx": 223, "elsewher": 223, "distances_to_outsid": [223, 271, 892], "compute_area": [223, 271, 892], "stc_gen": 223, "value_fun": [223, 679], "brain_gen": 223, "evoked_gen": 223, "stc_inv": 223, "brain_inv": 223, "45968308": 223, "57021267": 223, "69354621": 223, "evoked_snr": 223, "668": [223, 226, 232], "70_point_spread": [223, 226], "unit_impuls": 224, "coh_signal_gen": 224, "t_rand": 224, "dev": [224, 552, 657], "base_freq": 224, "cumsum": 224, "signal2": 224, "am": [224, 263, 266, 268, 376, 482, 877, 892], "nperseg": 224, "coh": [224, 713, 786], "noverlap": 224, "146374": 224, "33830": 224, "stc_signal": 224, "stc_nois": 224, "pretend": [224, 227], "s_rm": 224, "59828": 224, "89697e": 224, "40489756": 224, "65479053": 224, "61269642": 224, "dampen": [224, 652], "consensu": [224, 873], "csd_signal": 224, "filters_approach1": 224, "filters_approach2": 224, "filters_1": 224, "power_approach1": 224, "power_approach2": 224, "plot_approach": 224, "brain1": 224, "42918831e": 224, "04345299e": 224, "40589757e": 224, "brain2": 224, "mia": [224, 245, 298, 299], "liljestr\u00f6m": [224, 245, 298, 299], "susanna": [224, 245, 298, 299, 892], "aro": [224, 245, 298, 299, 892], "245530": [224, 245, 298, 299], "kensuk": [224, 245, 298, 299], "sekihara": [224, 245, 298, 299], "79369": [224, 245, 298, 299], "79370": [224, 245, 298, 299], "80_dic": [224, 226], "auto_tutorials_simul": 226, "ttest_1samp_no_p": [227, 699, 702, 706, 882, 892], "phenomena": 227, "n_subject": [227, 235, 237, 695], "signal_mean": 227, "signal_sd": 227, "noise_sd": 227, "gaussian_sd": 227, "n_src": [227, 273, 278], "h_0": 227, "colon": [227, 257, 389, 877], "h_1": 227, "neq": [227, 874], "geq": 227, "cdot": [227, 672, 874], "1600": 227, "mcc": 227, "plot_t_p": 227, "p_lim": 227, "t_lim": 227, "mgrid": 227, "plot_surfac": [227, 892], "rstride": 227, "cstride": 227, "ztick": 227, "mappabl": 227, "set_tick": 227, "set_ticklabel": 227, "get_xaxi": 227, "set_label_coord": 227, "set_weight": 227, "use_p": 227, "log_": 227, "t_": [227, 874], "exchang": [227, 892], "verid": 227, "n_": [227, 874], "samp": 227, "gymnast": 227, "declar": [227, 873], "p_type_i": 227, "combat": 227, "familywis": 227, "fwer": 227, "benjamini": [227, 696], "hochberg": [227, 696], "strict": [227, 457, 855], "indistinguish": 227, "mathbf": [227, 575], "perm_": 227, "aforement": 227, "rethink": 227, "thought": [227, 693, 847], "refram": 227, "drawback": 227, "touch": [227, 323], "feature_extract": 227, "grid_to_graph": 227, "e402": 227, "mini_adjac": 227, "toarrai": 227, "find_ch_adjac": [227, 228, 229, 232, 331, 692, 699, 700, 702, 703, 781, 882, 892], "combine_adjac": [227, 229, 232, 235, 320, 331, 699, 700, 702, 703, 882, 892], "get_builtin_ch_adjac": [227, 320, 331, 781, 882], "builtin_ch_adj": 227, "adj_nam": 227, "adj_descript": 227, "bti148": 227, "bti248": 227, "bti248grad": 227, "ctf64": 227, "easycap128ch": 227, "easycap32ch": 227, "easycap64ch": 227, "easycapm1": [227, 892], "easycapm11": 227, "m11": 227, "easycapm14": 227, "m14": 227, "easycapm15": 227, "m15": 227, "ecog256": 227, "256channel": 227, "ecog256bipolar": 227, "eeg1010_neighb": 227, "elec1005": 227, "elec1010": 227, "elec1020": 227, "itab153": 227, "itab": 227, "itab28": 227, "language29ch": 227, "mpi": 227, "mpi_59_channel": 227, "neuromag122cmb": 227, "neuromag122": [227, 892], "neuromag306cmb": 227, "neuromag306": 227, "neuromag306mag": [227, 232], "neuromag306planar": [227, 229], "yokogawa160": 227, "yokogawa440": 227, "read_ch_adjac": [227, 320, 324, 692, 781, 882, 892], "n_space": 227, "t_thresh": [227, 229], "t_clust": 227, "viewabl": 227, "p_clust": 227, "cl": 227, "195527": 227, "120434": 227, "1180": 227, "1248": 227, "1199": 227, "1188": 227, "1240": 227, "1254": [227, 245, 392], "1264": 227, "1253": 227, "stat_fun_hat": 227, "t_hat": 227, "p_hat": 227, "043603": 227, "127369": 227, "2817": 227, "3014": 227, "3597": 227, "3850": 227, "3795": 227, "riemann": 227, "threshold_tfc": 227, "t_tfce": 227, "p_tfce": 227, "h_power": [227, 228], "e_pow": [227, 228], "425": [227, 232], "475": [227, 232, 278], "481": [227, 232], "t_tfce_hat": 227, "p_tfce_hat": 227, "485": [227, 232, 278], "jag": 227, "peaki": 227, "broad": [227, 242], "tighten": 227, "broaden": 227, "exhaust": [227, 298], "unbalanc": 227, "statsmodel": [227, 880, 889], "anova_lm": 227, "wrap": [227, 269, 537, 892], "q": [227, 257, 672, 699, 700, 702, 703, 874], "f_onewai": [227, 693, 695, 700, 703, 882], "f_mway_rm": [227, 231, 237, 695, 882, 892], "f_threshold_mway_rm": [227, 231, 237, 693, 882], "unpair": 227, "spatio_temporal_cluster_test": [227, 228, 232, 236, 237, 882, 892], "spatio_temporal_cluster_1samp_test": [227, 235, 699, 882, 892], "gerard": [227, 245, 705, 706], "ridgwai": [227, 245, 705, 706], "flandin": [227, 245, 705, 706], "karl": [227, 245, 256, 705, 706, 879], "friston": [227, 245, 705, 706], "Will": [227, 245, 257, 269, 313, 450, 480, 564, 705, 706, 711, 724, 731, 756, 833, 856], "penni": [227, 245, 705, 706], "haircut": [227, 245, 705, 706], "nichol": [227, 228, 245, 696, 699, 700, 701, 702, 703], "10_background_stat": [227, 234], "confirmatori": 228, "tfce": [228, 699, 700, 702, 703, 880, 892], "ttest_ind": [228, 706], "unsaf": [228, 715], "median_valu": 228, "long_word": 228, "short_word": 228, "time_window": [228, 712], "ntarget": 228, "short_df": 228, "format_dict": 228, "096": 228, "453939": 228, "222424": 228, "518939": 228, "371515": 228, "811667": 228, "250152": 228, "039697": 228, "318030": 228, "163030": 228, "425152": 228, "682": [228, 232], "684": [228, 231, 232, 234], "absent": [228, 367, 877, 892], "amongst": [228, 242], "temor": 228, "cluster_pv": [228, 699, 700, 702, 703], "significant_point": 228, "delaunai": [228, 229, 320, 892], "917298": 228, "1856": 228, "971": [228, 232, 234], "20_erp_stat": [228, 234], "whom": [229, 232, 851], "downstream": [229, 230], "nonparametr": [229, 230, 232, 245, 699, 700, 701, 702, 703], "spectrotempor": [229, 230, 739, 740, 742, 743], "tfr_epoch": 229, "logratio": [229, 241, 288, 547, 548, 712, 715, 820], "epochs_pow": [229, 231, 232], "lattic": [229, 232, 692, 699, 700, 702, 703], "sensor_adjac": 229, "use_idx": 229, "n_ch": 229, "unrol": 229, "degrees_of_freedom": 229, "455144": 229, "265125": 229, "caveat": [229, 232, 245, 564, 874], "anywher": [229, 892], "t_obs_plot": 229, "f_idx": 229, "t_idx": [229, 481, 482], "nanargmax": 229, "40_cluster_1samp_time_freq": [229, 234], "epochs_condition_1": 230, "epochs_condition_2": 230, "comptuat": 230, "tfr_epochs_1": 230, "tfr_epochs_2": 230, "epochs_power_1": 230, "epochs_power_2": 230, "f_ob": [230, 231, 232, 236, 237, 700, 703], "566824": 230, "631": [230, 232], "644": 230, "evoked_power_1": 230, "evoked_power_2": 230, "evoked_power_contrast": 230, "f_obs_plot": [230, 231, 232], "max_f": 230, "evoked_condition_1": 230, "evoked_condition_2": 230, "evoked_contrast": 230, "50_cluster_between_time_freq": [230, 234], "interplai": 231, "perceptu": 231, "56aud_r": 231, "60vis_l": 231, "64vis_r": 231, "forgiv": 231, "zero_mean": [231, 548, 728, 738, 739, 740, 742], "this_tfr": [231, 232], "this_pow": 231, "n_condit": [231, 232, 237, 700, 703], "n_replic": 231, "factor_level": [231, 237, 693, 695], "formula": [231, 237, 298, 299, 356, 668, 672, 725, 726, 874, 892], "a1b1": [231, 693], "a1b2": [231, 693], "a2b1": [231, 693], "b2b2": 231, "fval": 231, "effect_label": 231, "autumn": [231, 232], "overrid": [231, 275, 373, 375, 481, 482, 498, 648, 649, 650, 651, 758, 784, 855, 857, 873], "necessit": [231, 237, 892], "return_pv": [231, 237, 693], "pthresh": [231, 237], "f_thresh": [231, 232, 237], "419588": 231, "good_clust": [231, 235], "f_imag": [231, 232], "f_obs_plot2": 231, "70_cluster_rmanova_time_freq": [231, 234], "differenti": [232, 245, 265, 266, 267, 268, 438, 481, 482, 741, 744, 880], "plot_ch_adjac": [232, 320, 331, 882, 892], "_csr": 232, "csr_matrix": [232, 277, 278, 320, 331, 636], "bind": [232, 237], "stackexchang": 232, "73993": 232, "alpha_cluster_form": 232, "n_observ": [232, 697, 699, 700, 702, 703, 784], "dfn": [232, 700, 703], "dfd": [232, 700, 703], "cluster_stat": 232, "004107": 232, "094418": 232, "547": 232, "555": 232, "571": 232, "584": 232, "589": 232, "591": 232, "598": 232, "607": 232, "618": [232, 245, 694], "622": [232, 245, 356], "632": 232, "641": 232, "643": 232, "663": 232, "666": 232, "672": 232, "675": 232, "677": 232, "689": 232, "696": 232, "698": 232, "708": 232, "724": 232, "739": 232, "743": 232, "753": 232, "755": 232, "762": 232, "765": 232, "778": 232, "781": 232, "788": 232, "803": 232, "806": 232, "814": 232, "834": 232, "839": [232, 874], "842": 232, "845": 232, "864": [232, 278], "882": 232, "885": 232, "892": 232, "908": 232, "911": 232, "926": 232, "933": 232, "936": 232, "943": 232, "951": 232, "953": 232, "972": 232, "977": 232, "982": 232, "p_accept": 232, "good_cluster_ind": [232, 236, 237], "crimson": [232, 760], "steelblu": [232, 481, 482, 813], "i_clu": 232, "clu_idx": 232, "time_ind": 232, "space_ind": 232, "ch_ind": 232, "f_map": 232, "sig_tim": 232, "ax_topo": 232, "f_evok": 232, "ax_colorbar": 232, "ax_sign": 232, "ymin": [232, 237], "get_ylim": 232, "fill_betweenx": [232, 237], "tfr_adjac": 232, "tfr_threshold": 232, "333033": 232, "442": 232, "548": 232, "561": 232, "563": 232, "572": 232, "576": 232, "595": [232, 245], "617": 232, "628": 232, "651": 232, "653": 232, "662": 232, "678": 232, "697": 232, "715": 232, "716": 232, "721": 232, "731": 232, "742": 232, "749": 232, "777": 232, "782": 232, "785": 232, "813": 232, "816": 232, "818": 232, "826": 232, "843": 232, "854": 232, "858": 232, "862": 232, "863": 232, "865": 232, "866": 232, "878": [232, 245, 696], "879": 232, "884": [232, 245], "886": 232, "903": 232, "907": 232, "915": 232, "917": 232, "935": 232, "937": 232, "942": 232, "944": 232, "945": [232, 267, 268, 712, 798], "949": 232, "974": 232, "difficulti": [232, 407, 849, 871], "freq_ind": 232, "ax_spec": 232, "f_obs_plot_sig": 232, "ax_colorbar2": 232, "mari": [232, 245, 699, 700, 702, 703, 892], "dejan": [232, 245, 699, 700, 702, 703], "draschkow": [232, 245, 699, 700, 702, 703], "e13335": [232, 245, 699, 700, 702, 703], "13335": [232, 245, 699, 700, 702, 703], "75_cluster_ftest_spatiotempor": [232, 234], "auto_tutorials_stat": [234, 239], "equalize_epoch_count": [235, 882], "summarize_clusters_stc": [235, 236, 237, 882, 892], "1000e": [235, 237], "sample_vertic": [235, 237], "evoked1": [235, 878], "evoked2": [235, 878], "n_vertices_sampl": [235, 237], "morph_data": [235, 892], "fsave_vertic": [235, 236, 237], "morph_mat": [235, 237, 277], "n_vertices_fsav": [235, 236, 237], "govern": 235, "member": [235, 697, 873, 877, 880], "max_step": [235, 699, 700, 702, 703], "spatial_src_adjac": [235, 236, 237, 882, 892], "p_threshold": [235, 236], "t_threshold": 235, "clu": [235, 236, 237, 704], "563537": 235, "791547": 235, "permutationt": 235, "good_clusters_idx": 235, "stc_all_cluster_vi": [235, 236, 237], "20_cluster_1samp_spatiotempor": [235, 239], "stc_fname": 236, "n_subjects1": 236, "n_subjects2": 236, "x1": [236, 697, 700], "x2": [236, 697, 700], "subjects_k": 236, "f_threshold": [236, 695], "632172": 236, "30_cluster_ftest_spatiotempor": [236, 239], "engemannn": 237, "r_aud": 237, "r_vi": 237, "tini": [237, 299], "1782": 237, "851281": 237, "brighter": 237, "inds_t": 237, "inds_v": 237, "cluster_ind": 237, "eve_id": 237, "mean_tc": 237, "std_tc": 237, "60_cluster_rmanova_spatiotempor": [237, 239], "v\u00b2": 240, "\u00b2": [240, 241], "t\u00b2": [240, 242], "overridden": [240, 479, 892], "esp": 240, "method_kw": [240, 265, 266, 267, 268, 481, 482, 714, 716], "psd_array_multitap": [240, 265, 266, 267, 268, 419, 481, 482, 714, 716, 740, 743, 882, 892], "irrelev": [240, 257, 851, 874], "epo_spectrum": 240, "npsd": 240, "__getitem__": [240, 258, 259, 260, 262, 263, 265, 266, 270, 274, 278, 289, 304, 481, 482, 530, 584, 713, 714, 715, 716, 747, 892], "evk_spectrum": 240, "61863537e": 240, "13487136e": 240, "88010499e": 240, "89065956e": 240, "24056397e": 240, "91160668e": 240, "56762015e": 240, "65842303e": 240, "39426775e": 240, "38758770e": 240, "03771739e": 240, "98519756e": 240, "agg_fun": [240, 265, 266, 267, 268, 481, 482, 714, 716, 792], "psd_welch": [240, 892], "psd_multitap": [240, 892], "area_mod": [240, 265, 266, 267, 268, 481, 482, 814], "kept": [240, 260, 265, 271, 326, 374, 438, 476, 478, 479, 500, 523, 531, 532, 533, 534, 535, 537, 538, 548, 564, 565, 575, 622, 804, 851, 892], "periodogram": [240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 731], "electroacoust": [240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 731], "1967": [240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 731], "tau": [240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 731], "1161901": [240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 731], "slepian": [240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 724, 730], "bell": [240, 245, 265, 266, 267, 268, 481, 482, 564, 597, 714, 716, 724, 730], "1430": [240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 724, 730], "1978": [240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 724, 730], "7305": [240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 724, 730], "tb02104": [240, 245, 265, 266, 267, 268, 481, 482, 714, 716, 724, 730], "10_spectrum_class": [240, 244], "72074": 241, "mean_spectrum": 241, "psds_mean": [241, 242], "psds_std": [241, 242], "arithmet": [241, 564, 731, 892], "psds_welch_mean": 241, "freqs_mean": 241, "psds_welch_median": 241, "freqs_median": 241, "epo_idx": 241, "unaggreg": [241, 731, 892], "n_segment": [241, 731], "welch_unagg": 241, "topomap_kw": 241, "fmin_fmax": 241, "timefreq": [241, 712], "20_sensors_time_frequ": [241, 244], "fpv": 242, "steadi": 242, "assr": 242, "norcia": 242, "picton": 242, "wet": [242, 868], "evgenii": [242, 892], "kalenkovich": [242, 892], "ttest_rel": 242, "bids_fnam": 242, "12hz": 242, "15hz": 242, "decai": 242, "stabil": [242, 449, 564, 575, 892], "bach": 242, "meigen": 242, "boxcar": [242, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 454, 481, 482, 871, 892], "n_overlap": [242, 265, 266, 267, 268, 481, 482, 714, 716, 731, 814], "snr_spectrum": 242, "noise_n_neighbor_freq": 242, "noise_skip_neighbor_freq": 242, "n_trial": [242, 430], "n_frequency_bin": 242, "increment": [242, 478, 564], "ON": 242, "averaging_kernel": 242, "mean_nois": 242, "apply_along_axi": 242, "psd_": 242, "edge_width": 242, "pad_width": 242, "constant_valu": 242, "drastic": [242, 277, 892], "reappear": 242, "grand": [242, 471, 874, 892], "floor": [242, 427, 597, 740, 743], "ceil": [242, 735], "psds_plot": 242, "snr_mean": 242, "snr_std": 242, "stim_freq": 242, "i_bin_12hz": 242, "1st": [242, 653], "i_bin_24hz": 242, "i_bin_36hz": 242, "i_bin_15hz": 242, "i_bin_30hz": 242, "i_bin_45hz": 242, "i_trial_12hz": 242, "i_trial_15hz": 242, "roi_vi": 242, "o9": 242, "o10": 242, "picks_roi_vi": 242, "hotel": 242, "snrs_target": 242, "69365541718619": 242, "wait": [242, 260, 265, 851, 859, 892], "snrs_12hz": 242, "snrs_12hz_chaverag": 242, "tstat_roi_vs_scalp": 242, "985902": 242, "693655": 242, "000067": 242, "Such": [242, 264, 265, 266, 267, 268, 298, 299, 652, 712, 715, 847, 873, 874], "somewher": [242, 481, 482, 813, 856, 875], "unintend": 242, "preregist": 242, "peopl": [242, 851, 862, 873, 892], "detour": 242, "snrs_roi": 242, "freq_plot": 242, "color_plot": 242, "darkblu": [242, 481, 482, 813], "darkgreen": 242, "mediumblu": 242, "seagreen": 242, "xpos_plot": 242, "stim_12hz_tmp": 242, "stim_15hz_tmp": 242, "snr_tmp": 242, "yerr": 242, "stim_12hz_snrs_": 242, "ihz": 242, "stim_15hz_snrs_": 242, "strike": 242, "tstat_12hz_trial_stim": 242, "stim_12hz_snrs_12hz": 242, "stim_12hz_snrs_15hz": 242, "tstat_12hz_trial_1st_harmon": 242, "stim_12hz_snrs_24hz": 242, "stim_12hz_snrs_30hz": 242, "tstat_12hz_trial_2nd_harmon": 242, "stim_12hz_snrs_36hz": 242, "stim_12hz_snrs_45hz": 242, "tstat_15hz_trial_stim": 242, "stim_15hz_snrs_12hz": 242, "stim_15hz_snrs_15hz": 242, "tstat_15hz_trial_1st_harmon": 242, "stim_15hz_snrs_24hz": 242, "stim_15hz_snrs_30hz": 242, "tstat_15hz_trial_2nd_harmon": 242, "stim_15hz_snrs_36hz": 242, "stim_15hz_snrs_45hz": 242, "000037": 242, "000014": 242, "899": 242, "000297": 242, "000024": 242, "006525": 242, "tour": [242, 892], "overli": 242, "stim_bandwidth": 242, "window_length": 242, "window_snr": 242, "i_win": 242, "this_spectrum": 242, "windowed_psd": 242, "windowed_freq": 242, "stimfreq": 242, "bin_width": 242, "skip_neighbor_freq": 242, "n_neighbor_freq": 242, "windowed_snr": 242, "boxplot": 242, "stochast": [242, 245, 564], "window_start": 242, "greyscal": 242, "optimist": 242, "serious": [242, 874], "50_ssvep": [242, 244], "auto_tutorials_tim": 244, "alphabet": [245, 851, 892], "fiorenzo": [245, 564], "artoni": [245, 564], "magazin": [245, 414], "962275": 245, "stephan": [245, 414], "bonnet": [245, 414], "marco": [245, 414], "congedo": [245, 414], "jutten": [245, 414], "riemannian": [245, 414], "multimedia": [245, 414], "mmsp": [245, 414], "5662067": [245, 414], "barber": [245, 356], "51814": [245, 356], "www": [245, 356, 453, 489, 579, 851, 871], "staff": [245, 356, 857], "brml": [245, 356], "becker": [245, 672], "albera": [245, 672], "comon": [245, 672], "gribonv": [245, 672], "fleureau": [245, 672], "guillotel": [245, 672], "merlet": [245, 672], "sissi": [245, 672], "august": [245, 246, 672], "anthoni": [245, 564], "terrenc": [245, 564], "sejnowski": [245, 564, 597], "deconvolut": [245, 564, 597], "1129": [245, 564, 597], "1159": [245, 564, 597], "1995": [245, 406, 564, 597, 874], "neco": [245, 564], "anna": [245, 665, 892], "rita": [245, 665], "bentivoglio": [245, 665], "bressman": [245, 665], "cassetta": [245, 665], "donatella": [245, 665], "carretta": [245, 665], "pietro": [245, 665], "tonali": [245, 665], "alberto": [245, 665], "albanes": [245, 665], "disord": [245, 665], "1028": [245, 665], "870120629": [245, 665], "berg": [245, 874], "scherg": [245, 874], "1994": [245, 531, 874], "90113": [245, 874], "quentin": [245, 892], "anderson": [245, 892], "arindam": 245, "banerje": 245, "kenji": 245, "fukumizu": 245, "24th": 245, "1288": 245, "pmlr": 245, "apr": 245, "mlr": 245, "v130": 245, "bertrand21a": 245, "ryota": [245, 414], "tomioka": [245, 414], "lemm": [245, 414], "motoaki": [245, 414], "kawanab": [245, 414], "msp": [245, 414], "4408441": [245, 414], "fred": 245, "bookstein": 245, "thin": 245, "plate": 245, "24792": 245, "oleg": 245, "burdakov": 245, "bori": 245, "merkulov": 245, "lith": 245, "\u00f6": 245, "ping": 245, "yilun": [245, 356], "chen": [245, 356], "ami": [245, 356], "wiesel": [245, 356], "yonina": [245, 356], "eldar": [245, 356], "alfr": [245, 356, 867], "hero": [245, 356], "shrinkag": [245, 356, 414, 421, 422, 565, 892], "mmse": [245, 356], "5016": [245, 356], "5029": [245, 356], "2053029": [245, 356], "contributor": [245, 855, 858, 870, 871, 873, 880, 892], "readthedoc": 245, "octob": [245, 672], "ronald": [245, 264, 265, 266, 267, 268, 712, 715], "crochier": [245, 264, 265, 266, 267, 268, 712, 715], "lawrenc": [245, 264, 265, 266, 267, 268, 572, 712, 715], "rabin": [245, 264, 265, 266, 267, 268, 712, 715], "multir": [245, 264, 265, 266, 267, 268, 712, 715], "englewood": [245, 264, 265, 266, 267, 268, 712, 715], "cliff": [245, 264, 265, 266, 267, 268, 712, 715], "nj": [245, 264, 265, 266, 267, 268, 712, 715], "605162": [245, 264, 265, 266, 267, 268, 712, 715], "adrian": [245, 271, 276], "guggisberg": 245, "erik": [245, 892], "edward": 245, "findlai": 245, "ryan": [245, 578, 892], "canolti": 245, "mitchel": 245, "berger": 245, "barbaro": 245, "heidi": 245, "kirsch": 245, "1686": 245, "1700": 245, "sereno": [245, 874], "nimg": [245, 696, 874], "0395": [245, 874], "arthur": [245, 531, 741, 744], "liu": [245, 531], "buckner": [245, 531], "lewin": [245, 531], "s0896": [245, 531], "6273": [245, 531], "81138": [245, 531], "jocn": 245, "darva": 245, "ermer": 245, "20171": 245, "salat": [245, 874], "andr\u00e9": [245, 874], "kouw": [245, 874], "makri": [245, 874], "florent": [245, 874], "s\u00e9gonn": [245, 874], "quinn": [245, 874, 892], "reson": [245, 874], "s69": [245, 874], "s84": [245, 874], "0396": 245, "tootel": 245, "intersubject": 245, "sici": 245, "1097": 245, "0193": 245, "hbm10": 245, "genoves": [245, 696], "nicol": [245, 696, 892], "lazar": [245, 414, 696], "supplementari": [245, 391], "neuroanatom": [245, 391], "esm": [245, 391], "art": [245, 391, 880], "3a10": [245, 391], "2fnature18933": [245, 391], "mediaobject": [245, 391], "41586_2016_bfnature18933_moesm330_esm": [245, 391], "s\u00f3nia": [245, 867], "gon\u00e7alv": [245, 867], "casper": [245, 867], "munck": [245, 867], "jeroen": [245, 867, 892], "verbunt": [245, 867], "fetsj": [245, 867], "bijma": [245, 867], "rob": [245, 867, 892], "heethaar": [245, 867], "vivo": [245, 867], "resist": [245, 867], "eit": [245, 867], "812164": [245, 867], "teon": [245, 866, 892], "lauri": [245, 866], "parkkonen": [245, 866], "\u00e4": [245, 422, 866], "inen": [245, 866], "fnin": [245, 866], "00267": [245, 866], "greischar": [245, 572], "cori": [245, 572], "burghi": [245, 572], "carien": [245, 572], "reekum": [245, 572], "daren": [245, 572], "jackson": [245, 572], "diego": [245, 572], "pizzag": [245, 572], "corrina": [245, 572], "mueller": [245, 572], "davidson": [245, 572], "electroencephalograph": [245, 572], "neuroinformat": 245, "fninf": 245, "00062": 245, "hne": [245, 422], "597": [245, 422], "073": [245, 422], "gari": [245, 694], "heiman": [245, 694], "houghton": [245, 694], "mifflin": [245, 694], "boston": [245, 256, 694, 879], "17028": [245, 694], "joerg": [245, 298], "hipp": [245, 298], "hawellek": 245, "maurizio": 245, "corbetta": 245, "marku": [245, 298], "siegel": [245, 298], "engel": [245, 298], "spontan": [245, 867], "3101": 245, "percept": [245, 298, 847, 868, 892], "aapo": [245, 564], "hyv\u00e4rinen": [245, 564], "761722": [245, 564], "toga": 245, "mazziotta": 245, "academ": 245, "san": 245, "b978": 245, "012693019": 245, "50012": 245, "bf02512476": [245, 531], "tkk": 245, "a559": 245, "helsinki": 245, "16463": 245, "kevin": [245, 741, 744], "jone": [245, 741, 744], "bernic": [245, 741, 744], "porjesz": [245, 741, 744], "chorlian": [245, 741, 744], "madhavi": [245, 741, 744], "rangaswami": [245, 741, 744], "chella": [245, 741, 744], "kamarajan": [245, 741, 744], "ajayan": [245, 741, 744], "padmanabhapillai": [245, 741, 744], "stimu": [245, 741, 744], "henri": [245, 741, 744], "begleit": [245, 741, 744], "deficit": [245, 741, 744], "diagnos": [245, 741, 744, 892], "alcohol": [245, 741, 744], "2128": [245, 741, 744], "jorg": 245, "jovicich": 245, "silvest": 245, "czanner": 245, "elizabeth": 245, "halei": 245, "andr": [245, 892], "kennedi": 245, "franz": 245, "schmitt": 245, "gregori": 245, "brown": [245, 546, 672], "macfal": 245, "antti": [245, 892], "ahonen": 245, "lain": 245, "claudia": [245, 874], "tesch": [245, 874], "3315": 245, "3320": 245, "281163": 245, "zhou": [245, 414], "1990": [245, 414], "bf01129656": [245, 414], "philipp": 245, "lachaux": 245, "eugenio": 245, "rodriguez": [245, 892], "martineri": 245, "francisco": 245, "varela": 245, "synchroni": 245, "hbm4": 245, "attent": [245, 271, 276, 877], "ledoit": [245, 356], "wolf": [245, 356], "s0047": [245, 356], "259x": [245, 356], "00096": [245, 356], "te": [245, 564, 892], "girolami": [245, 564, 597], "subgaussian": [245, 564, 597, 892], "supergaussian": [245, 564, 597], "089976699300016719": [245, 564], "seok": [245, 867], "lew": [245, 867], "carsten": [245, 867], "wolter": [245, 867], "anwand": [245, 867], "macleod": [245, 867], "compart": [245, 257, 527, 847, 867, 877], "2862": [245, 867], "2878": [245, 867], "20714": [245, 867], "witzel": [245, 542, 669, 674], "8945": 245, "8950": 245, "10024": [245, 892], "lowri": [245, 694], "vassarstat": [245, 694], "bernard": [245, 672], "giusiano": [245, 672], "roehri": [245, 672], "b\u00e9nar": [245, 672], "kathryn": [245, 391], "mill": [245, 391], "6084": [245, 391], "m9": [245, 391], "figshar": [245, 391], "3498446": [245, 391], "molin": [245, 546, 672], "quantif": [245, 435, 546, 672, 858], "1069": [245, 546, 672], "thirtieth": [245, 301], "asilomar": [245, 301], "1996": [245, 301], "issn": [245, 301], "1058": [245, 301, 701], "6393": [245, 301], "acssc": [245, 301], "599135": [245, 301], "paul": [245, 874, 892], "748978": [245, 874], "ali": [245, 741, 744], "moukadem": [245, 741, 744], "zi": [245, 741, 744], "bouguila": [245, 741, 744], "djaffar": [245, 741, 744], "ould": [245, 741, 744], "abdeslam": [245, 741, 744], "alain": [245, 741, 744], "dieterlen": [245, 741, 744], "lisbon": [245, 741, 744], "6952743": [245, 741, 744], "mourtazaev": [245, 406], "1093": [245, 406], "suresh": [245, 569], "muthukumaraswami": [245, 569], "00138": [245, 569], "ndiay": 245, "fercoq": 245, "salmon": 245, "sugiyama": 245, "luxburg": 245, "guyon": 245, "garnett": 245, "curran": 245, "inc": [245, 851, 856], "nip": [245, 476], "cc": [245, 476, 873], "6405": 245, "holm": [245, 578, 701], "primer": [245, 701], "ou": 245, "bai": 245, "wheaton": 245, "sherri": 245, "vorbach": 245, "hallett": 245, "2292": 245, "2307": 245, "zieh": 245, "aloi": 245, "schl\u00f6gl": 245, "kr\u00e4mer": 245, "brismar": 245, "robustli": 245, "physrevlett": 245, "234101": 245, "hilla": [245, 396], "paananen": [245, 396], "jyrki": [245, 396], "5281": [245, 396, 866], "zenodo": [245, 396, 866], "889234": [245, 396], "reilli": [245, 392, 868, 892], "mayada": [245, 392, 868], "elsabbagh": [245, 392, 868], "infant": [245, 392, 892], "117682": [245, 392, 868], "thom": [245, 867], "oostendorp": [245, 867], "delbek": [245, 867], "dick": [245, 867], "stegeman": [245, 867], "vitro": [245, 867], "1487": [245, 867], "880100": [245, 867], "oppenheim": [245, 264, 265, 266, 267, 268, 712, 715], "schafer": [245, 264, 265, 266, 267, 268, 712, 715], "buck": [245, 264, 265, 266, 267, 268, 712, 715], "prentic": [245, 264, 265, 266, 267, 268, 712, 715], "hall": [245, 264, 265, 266, 267, 268, 712, 715], "saddl": [245, 264, 265, 266, 267, 268, 712, 715], "river": [245, 264, 265, 266, 267, 268, 712, 715], "754920": [245, 264, 265, 266, 267, 268, 712, 715], "roberto": [245, 531, 874], "pascual": [245, 531, 874], "marqui": [245, 531, 874], "martha": [245, 531, 874], "koukkou": [245, 531, 874], "kieko": [245, 531, 874], "kochi": [245, 531, 874], "bernd": [245, 531, 874], "saletu": [245, 531, 874], "hideaki": [245, 531, 874], "tanaka": [245, 531, 874], "koichi": [245, 531, 874], "hirata": [245, 531, 874], "lesli": [245, 531, 874], "prichep": [245, 531, 874], "rolando": [245, 531, 874], "biscai": [245, 531, 874], "lirio": [245, 531, 874], "toshihiko": [245, 531, 874], "kinoshita": [245, 531, 874], "tomographi": [245, 531, 847, 874, 892], "royal": [245, 356, 531, 874], "1952": [245, 531, 874], "3768": [245, 531, 874], "3784": [245, 531, 874], "1098": [245, 531, 874], "rsta": [245, 531, 874], "0081": [245, 531, 874], "donald": 245, "perciv": 245, "walden": 245, "35532": 245, "cbo9780511622762": 245, "dinh": [245, 892], "tuan": 245, "pham": 245, "hermitian": 245, "1152": 245, "s089547980035689x": 245, "luca": [245, 603], "pollonini": [245, 603], "cristen": [245, 603], "homer": [245, 603], "abaya": [245, 603], "heather": [245, 603], "bortfeld": [245, 603], "beauchamp": [245, 272, 276, 280, 603, 818], "oghalai": [245, 603], "cochlear": [245, 603], "implant": [245, 603], "ernesto": 245, "pereda": 245, "ricardo": 245, "bru": 245, "\u00f1": 245, "maest": 245, "\u00fa": 245, "dog": 245, "056011": 245, "2552": 245, "aacfe4": 245, "sanchez": [245, 392], "meek": [245, 392], "wanz": [245, 392], "xie": [245, 392], "hat": [245, 539, 575, 672, 705, 706, 874, 892], "brittani": 245, "stedelin": 245, "alessandra": 245, "mantovani": 245, "ahm": 245, "raslan": 245, "swann": 245, "3897": 245, "21105": 245, "joss": 245, "03897": 245, "noam": [245, 580], "pele": [245, 580], "00694": [245, 580], "abraham": [245, 265, 266, 267, 268, 481, 482], "savitzki": [245, 265, 266, 267, 268, 481, 482], "marcel": [245, 265, 266, 267, 268, 481, 482], "golai": [245, 265, 266, 267, 268, 481, 482, 892], "chemistri": [245, 265, 266, 267, 268, 481, 482], "1627": [245, 265, 266, 267, 268, 481, 482], "ac60214a047": [245, 265, 266, 267, 268, 481, 482], "nathaniel": [245, 698], "marta": [245, 698], "12320": [245, 698], "corn": 245, "stam": 245, "daffertshof": 245, "diminish": 245, "1178": 245, "20346": 245, "luigi": [245, 741, 744], "rodino": [245, 741, 744], "bert": [245, 741, 744], "schulz": [245, 741, 744, 892], "wong": [245, 741, 744, 892], "pseudo": [245, 298, 299, 316, 741, 744], "american": [245, 741, 744], "1090": [245, 741, 744], "fic": [245, 741, 744], "2228": [245, 478], "tmi": [245, 478], "2553445": [245, 478], "evelina": 245, "busa": 245, "glessner": 245, "hybrid": 245, "1060": 245, "1075": 245, "catherin": [245, 728, 738, 739, 742], "tallon": [245, 728, 738, 739, 742], "baudri": [245, 728, 738, 739, 742], "claud": [245, 728, 738, 739, 742], "delpuech": [245, 728, 738, 739, 742], "jneurosci": [245, 728, 738, 739, 741, 742, 744], "00722": [245, 728, 738, 739, 742], "minna": [245, 874], "huotilainen": [245, 874], "oili": [245, 874], "salonen": [245, 874], "00064": [245, 874], "niall": [245, 578], "118484": [245, 578], "nd": [245, 578], "timm": [245, 578], "119338": [245, 578], "bishop": [245, 356], "1467": [245, 356], "9868": [245, 356], "00196": [245, 356], "vinck": 245, "wingerden": 245, "franscesco": 245, "battaglia": 245, "cyriel": 245, "pennartz": 245, "1548": 245, "womelsdorf": 245, "pascal": 245, "fri": 245, "rhythmic": 245, "wehner": [245, 435], "modi": [245, 435], "children": [245, 256, 435, 877, 879], "wheat": [245, 741, 744], "pier": [245, 741, 744], "cornelissen": [245, 741, 744], "frost": [245, 741, 744], "hansen": [245, 741, 744], "phonologi": [245, 741, 744], "5233": [245, 741, 744], "whitham": [245, 564], "sean": [245, 564], "fitzgibbon": [245, 564], "clark": [245, 564, 892], "loveless": [245, 564], "marita": [245, 564], "broberg": [245, 564], "angu": [245, 564], "wallac": [245, 564], "lilli": [245, 564], "hardi": [245, 564], "rik": [245, 564], "fronsko": [245, 564], "alyson": [245, 564], "pulbrook": [245, 564], "paralysi": [245, 564], "1877": [245, 564], "rei": [245, 476], "ram\u00edrez": [245, 476], "jason": [245, 476], "palmer": [245, 476], "bhaskar": [245, 476], "rao": [245, 476], "neuroelectromagnet": [245, 476], "sch\u00f6lkopf": [245, 476], "platt": [245, 476], "hoffman": [245, 476], "3089": [245, 476], "juliu": [245, 672, 892], "dewald": [245, 672], "april": [245, 672], "zhi": [245, 874, 892], "multilay": [245, 874], "moritz": [245, 414, 892], "wentrup": [245, 414], "buss": [245, 414], "921154": [245, 414], "jair": [245, 564, 892], "montoya": [245, 564, 892], "mart\u00ednez": [245, 564], "petr": [245, 564], "tichavsk\u00fd": [245, 564], "massoud": [245, 564], "babai": [245, 564], "zadeh": [245, 564], "nad\u00e8g": [245, 564], "thirion": [245, 564], "moreau": [245, 564, 892], "latent": [245, 564, 807], "10169": [245, 564], "lectur": [245, 564, 876], "cham": [245, 564], "53547": [245, 564], "0_27": [245, 564], "pharmacologi": [245, 531, 874], "pubm": [245, 531, 874], "ncbi": [245, 531, 874], "nlm": [245, 531, 874], "nih": [245, 531, 874], "gov": [245, 531, 874], "12575463": [245, 531, 874], "encyclopedia": 245, "php": 245, "international_system_of_unit": 245, "oldid": 245, "982683558": 245, "googl": [246, 256, 825, 880, 892], "scholar": 246, "1540": 246, "2040": 246, "health": 256, "r01": 256, "eb009048": 256, "eb006385": 256, "hd040712": 256, "ns044319": 256, "ns037462": 256, "ns104585": 256, "p41": 256, "eb015896": 256, "rr014075": 256, "foundat": [256, 873], "0958669": 256, "1042134": 256, "council": 256, "ystg": 256, "263584": 256, "676943": 256, "depart": 256, "fg02": 256, "99er62764": 256, "agenc": 256, "national": 256, "la": [256, 868, 879, 892], "recherch": [256, 879], "neuc": 256, "0002": 256, "idex": 256, "pari": [256, 892], "saclai": 256, "0003": 256, "summer": [256, 880, 892], "year": [256, 270, 406, 866, 873, 880], "amazon": 256, "grant": [256, 267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 542, 800, 851, 873, 892], "zuckerberg": 256, "eoss2": [256, 880], "eoss4": 256, "employe": [256, 873], "duti": [256, 873], "aalto": [256, 868, 879], "yliopiston": [256, 879], "perustieteiden": [256, 879], "korkeakoulu": [256, 879], "ae": [256, 879], "studio": [256, 854, 855, 879], "athinoula": [256, 868, 879], "martino": [256, 868, 879], "hospit": [256, 868, 879], "philadelphia": [256, 879], "donder": [256, 879], "behaviour": [256, 259, 510, 513, 879], "radboud": [256, 879], "school": [256, 879], "fondat": [256, 879], "campu": [256, 879], "biotech": [256, 879], "geneva": [256, 879], "informatiqu": [256, 879], "automatiqu": [256, 879], "franzen": [256, 879], "universit\u00e4t": [256, 879], "graz": [256, 879], "massachusett": [256, 879], "planck": [256, 879], "f\u00fcr": [256, 879], "bildungsforschung": [256, 879], "uniwersytet": [256, 879], "humanistycznospo\u0142eczni": [256, 879], "washington": [256, 879], "aarhu": [256, 879], "universitet": [256, 879], "commissariat": [256, 879], "\u00e0": [256, 879], "\u00e9nergi": [256, 879], "atomiqu": [256, 879], "aux": [256, 879], "forschungszentrum": [256, 879], "j\u00fclich": [256, 879], "du": [256, 879], "cerveau": [256, 879], "moell": [256, 879], "\u00e9pini\u00e8r": [256, 879], "sant\u00e9": [256, 879], "m\u00e9dical": [256, 879], "macquari": [256, 868, 879], "technisch": [256, 879], "t\u00e9l\u00e9com": [256, 879], "exit": [257, 271, 473, 553, 851], "outfil": 257, "anon": 257, "keep_hi": [257, 265, 266, 267, 268, 270, 481, 482, 483, 892], "n_dai": 257, "daysback": [257, 265, 266, 267, 268, 270, 481, 482, 483], "anonymize_info": [257, 265, 266, 267, 268, 270, 481, 482, 882, 892], "resav": 257, "projoff": [257, 892], "navigaton": 257, "show_opt": [257, 481, 482, 813], "dialog": [257, 265, 266, 267, 268, 270, 481, 482, 813, 816, 857, 892], "allowmaxshield": 257, "filtord": [257, 481, 482, 813, 892], "iir": [257, 265, 266, 267, 268, 416, 425, 449, 450, 452, 453, 481, 482, 576, 577, 603, 666, 676, 725, 801, 813, 881, 892], "clamp": [257, 481, 482, 760, 813], "filterchpi": [257, 892], "head_shap": 257, "out_fnam": 257, "rotation_x": [257, 492], "compensatori": 257, "deg": [257, 587], "ecg_ch": [257, 492], "eog_ch": [257, 492, 892], "e31": [257, 492], "e63": [257, 492], "my_raw": 257, "quiet": [257, 265, 266, 715], "mne_process_raw": [257, 877], "in_raw": 257, "clean_raw": 257, "file_a": 257, "file_b": 257, "test_raw_sss": 257, "filters": 257, "tap": [257, 576, 577, 589, 590, 868], "rej": 257, "rej_grad": 257, "rej_mag": 257, "rej_eeg": 257, "rej_eog": 257, "bad_fnam": 257, "raw_event_fnam": 257, "tstart": [257, 272, 273, 276, 279, 280, 281, 576, 577, 589, 590, 592, 892], "qrsthr": 257, "qrs_threshold": [257, 576, 589, 592], "eog_l_freq": [257, 577], "eog_h_freq": [257, 577], "head_opac": [257, 473], "flash30": [257, 305, 874, 892], "noflash30": [257, 874], "flash5": [257, 305, 309, 874, 892], "multiecho": [257, 305, 309], "echo": [257, 305, 850, 856, 857, 874], "regist": [257, 309, 596, 748, 749, 750, 847, 873, 874], "noconvert": 257, "deprec": [257, 265, 266, 500, 790, 812, 882, 892], "unwarp": [257, 305, 874], "grad_unwarp": [257, 305, 874], "symlink": [257, 309, 311, 892], "flash_path": 257, "parameter_map": [257, 309, 874], "mef05": 257, "mef30": 257, "mef05_": [257, 305, 892], "mef30_": [257, 305, 892], "spin": [257, 309], "termin": [257, 849, 850, 851, 854, 855, 857, 862, 871, 882, 892], "kt2fiff": 257, "mkheadsurf": [257, 310], "topolog": [257, 310, 367, 413, 433, 464, 619, 648, 650, 840, 867, 892], "_sss": 257, "origin_out": 257, "autobad": 257, "maxst": 257, "buflen": 257, "st_buflen": 257, "st_corr": 257, "mv_tran": 257, "in_fnam": 257, "movecomp": 257, "mv_hp": 257, "hpistep": 257, "mv_hpistep": 257, "hpisubt": 257, "mv_hpisubt": 257, "nohpicon": 257, "linefreq": 257, "nooverwrit": 257, "mx_arg": 257, "sof": 257, "bmin": 257, "bash": [257, 850, 851, 856, 857, 862], "TO": 257, "1280": [257, 413, 520], "brainc": 257, "skullc": 257, "scalpc": 257, "homog": [257, 520, 867], "7mm": 257, "joblib": [257, 265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 417, 424, 427, 430, 431, 457, 470, 472, 481, 482, 522, 525, 526, 537, 538, 547, 548, 569, 576, 577, 654, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 792, 795, 814, 880, 892], "cp": [257, 857, 874, 892], "unicod": [257, 711, 892], "mri_watersh": [257, 311, 871, 874], "gcaatla": [257, 311, 871], "brain_atla": [257, 311], "preflood": [257, 311, 871], "brainmask": [257, 311, 871, 892], "fname2": 257, "parser": [258, 443, 892], "reaverag": 258, "category_nam": 258, "acq_dict": 258, "subav": 258, "subaverag": [258, 877], "__len__": [258, 259, 261, 262, 263, 265, 266, 270, 271, 274, 275, 289, 304, 481, 482, 530, 584, 713, 714, 715, 747], "n_cat": 258, "delayed_lookup": 258, "acqp": 258, "mne_stim_channel_2": [258, 455, 456], "uint16": [258, 455], "sti014": [258, 455, 892], "sti016": [258, 455], "32768": [258, 413, 455], "mne_fix_stim14": [258, 455], "slight": [258, 892], "asynchroni": 258, "conds_data": 258, "n_epochs_out": 258, "n_annot": 259, "iso8601": 259, "delimit": 259, "bad_flux": 259, "bad_nois": 259, "meg0111": [259, 260, 265, 266, 267, 268, 270, 312, 329, 331, 361, 372, 416, 430, 435, 481, 482, 563, 564, 566, 580, 581, 582, 591, 595, 605, 607, 614, 646, 680, 698, 707, 712, 714, 715, 716, 720, 721, 722, 723, 725, 743, 784, 790, 791, 794, 796, 797, 804, 811, 814], "meg2563": 259, "meg1443": 259, "v0": [259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 285, 286, 289, 294, 298, 299, 301, 307, 308, 309, 311, 314, 315, 319, 320, 323, 330, 332, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 372, 373, 374, 390, 392, 393, 413, 414, 416, 418, 420, 421, 425, 426, 433, 435, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 461, 462, 467, 471, 473, 476, 478, 479, 480, 481, 482, 489, 492, 493, 494, 496, 497, 498, 502, 505, 510, 516, 518, 519, 520, 521, 522, 523, 524, 525, 527, 531, 532, 533, 534, 537, 538, 539, 544, 546, 547, 548, 550, 551, 555, 556, 557, 563, 564, 565, 567, 573, 574, 575, 576, 577, 579, 581, 582, 588, 589, 599, 607, 613, 619, 623, 625, 626, 630, 631, 634, 642, 644, 645, 647, 653, 656, 661, 663, 664, 666, 675, 676, 677, 678, 679, 693, 695, 707, 711, 712, 713, 714, 715, 716, 729, 730, 731, 734, 739, 740, 742, 743, 744, 745, 748, 750, 757, 760, 761, 763, 776, 777, 778, 779, 783, 784, 787, 788, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 820, 822, 823, 824, 826, 829, 833, 838, 842, 845, 892], "n_blink": 259, "yy": [259, 493], "______________": 259, "_________": 259, "anot": 259, "___________________": 259, "o_________": 259, "________________________": 259, "o______________": 259, "crash": [259, 892], "o________________________": 259, "__add__": [259, 261, 262, 271, 272, 273, 276, 278, 279, 280, 281, 314, 712], "concatenc": 259, "with_ch_nam": 259, "__iter__": [259, 262, 265, 266, 270, 274, 289, 304, 530, 584, 662, 714, 715, 747], "array_lik": [259, 260, 262, 263, 265, 266, 267, 268, 270, 274, 275, 284, 312, 314, 329, 331, 361, 371, 372, 414, 416, 421, 424, 427, 429, 430, 431, 435, 441, 479, 481, 482, 492, 506, 522, 527, 563, 564, 565, 566, 569, 573, 574, 575, 578, 579, 580, 581, 582, 584, 585, 586, 588, 591, 595, 599, 605, 607, 613, 614, 649, 650, 666, 680, 690, 691, 694, 696, 697, 698, 706, 707, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 728, 738, 742, 743, 760, 765, 776, 777, 784, 790, 791, 792, 794, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 810, 811, 812, 814, 815, 816, 820, 822], "use_orig_tim": [259, 892], "676071": 259, "shortstimulu": 259, "longstimulu": 259, "tabular": [259, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 712, 714, 715, 716], "on_miss": [260, 265, 266, 267, 268, 270, 285, 286, 318, 350, 351, 406, 441, 461, 481, 482, 712, 714, 715, 716, 793, 892], "preload_at_end": 260, "event_rep": [260, 265, 892], "raw_sfreq": [260, 266], "abstract": [260, 880], "meg2623": [260, 265, 266, 267, 268, 270, 312, 329, 331, 361, 372, 416, 430, 435, 481, 482, 563, 564, 566, 580, 581, 582, 591, 595, 605, 607, 614, 680, 698, 707, 712, 714, 715, 716, 720, 721, 722, 723, 725, 743, 784, 790, 791, 794, 796, 797, 804, 811, 814], "ptp": [260, 265, 266, 564, 566, 581], "40e": [260, 265, 266, 361, 564, 581, 582, 698], "zeroth": [260, 265, 892], "unproject": [260, 265, 523, 622], "postpon": [260, 265, 523, 622], "silent": [260, 265, 406, 600, 869, 892], "irrespect": [260, 265, 367, 433, 464, 619, 648, 650, 840, 874], "coincid": [260, 265], "my_epoch": 260, "compensation_grad": [260, 265, 266, 267, 268, 270, 480, 481, 482, 564, 712, 714, 715, 716], "__sub__": [261, 271, 272, 273, 276, 279, 280, 281, 712], "nfree": [262, 263, 877, 892], "eig": [262, 877], "eigvec": [262, 877], "eigenvector": [262, 874, 877], "__contains__": [262, 265, 266, 267, 268, 270, 274, 289, 304, 481, 482, 530, 564, 584, 712, 714, 715, 716, 747], "as_diag": 262, "diagnois": 262, "fromkei": [262, 270, 274, 289, 304, 530, 584, 747], "fig_svd": [262, 785], "1e13": [262, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 356, 360, 361, 414, 421, 423, 481, 482, 791, 794, 796, 798, 799, 821], "1e15": [262, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 356, 360, 361, 414, 421, 423, 481, 482, 791, 794, 796, 798, 799, 821], "pluss": [262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822], "markeredgecolor": [262, 265, 266, 267, 268, 414, 421, 481, 482, 563, 712, 714, 716, 777, 792, 799, 815, 820, 822], "mask_po": [262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822], "cloughtocher2dinterpol": [262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822], "linearndinterpol": [262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822], "encompass": [262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822], "polygon": [262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 826, 892], "hull": [262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 579, 712, 714, 716, 777, 792, 799, 803, 812, 815, 820, 822, 892], "doc": [262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 657, 712, 714, 716, 728, 738, 777, 792, 799, 803, 812, 815, 820, 822, 851, 871, 880, 892], "rightmost": [262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 792, 799, 803, 812, 815, 820], "mini": [262, 265, 266, 267, 268, 274, 414, 421, 481, 482, 563, 564, 712, 714, 716, 792, 799, 803, 812, 815, 820], "unrepresent": [262, 270, 274, 289, 304, 530, 584, 747], "popitem": [262, 270, 274, 289, 304, 530, 584, 747], "lifo": [262, 270, 274, 289, 304, 530, 584, 747], "setdefault": [262, 270, 274, 289, 304, 530, 584, 747], "khi2": 263, "mne_dipole_fit": [263, 892], "longitudin": 263, "qlong": 263, "qtran": 263, "\u03c7": 263, "dipolefix": [263, 457, 621, 882], "plot_amplitud": 263, "show_al": [263, 788], "highlight_color": [263, 788], "head_sourc": [263, 522, 788, 892], "glyph": [263, 273, 279, 281, 760, 776, 788, 819, 823, 825, 892], "cube": [263, 788, 892], "mri_rot": [263, 788], "figure3d": [263, 267, 268, 272, 273, 275, 276, 278, 279, 280, 281, 769, 776, 788, 795, 818, 819, 823, 830, 851, 869, 882], "600x600": [263, 776, 788], "get_head_surf": [263, 522, 788, 882, 892], "bdip": [263, 621, 892], "use_round": [263, 264, 265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 443, 481, 482, 712, 715], "pos_mni": 263, "n_po": [263, 344, 346, 474, 475, 802], "subdirectori": [263, 466, 760], "aspect_kind": 264, "combine_event_id": [265, 882], "id_numb": 265, "event_id_1": 265, "event_id_2": 265, "new_id_numb": 265, "programmat": 265, "lost": [265, 266, 267, 268, 444, 445, 446, 447, 481, 482, 849], "no_data": [265, 715], "equalized_count": [265, 715], "membership": [265, 266, 267, 268, 481, 482, 564, 712, 714, 715, 716, 892], "audio_left": [265, 266, 715], "name_1": [265, 266, 715], "name_2": [265, 266, 715], "likewis": [265, 266, 715, 873, 874], "eval": [265, 266, 715], "col_a": [265, 266, 715], "col_b": [265, 266, 715], "add_annotations_to_metadata": [265, 266], "annot_onset": [265, 266], "annot_dur": [265, 266], "annot_descript": [265, 266], "add_list": [265, 266, 267, 268, 481, 482, 712, 714, 715, 716], "overwritten": [265, 266, 267, 268, 270, 390, 481, 482, 483, 579, 600, 712, 714, 715, 716, 892], "memmap": [265, 266, 267, 268, 481, 482, 654, 659, 712, 714, 715, 716, 892], "resiz": [265, 266, 267, 268, 481, 482, 712, 714, 715, 716, 799, 892], "januari": [265, 266, 267, 268, 270, 481, 482, 483, 877], "1\u02e2\u1d57": [265, 266, 267, 268, 270, 481, 482, 483], "his_id": [265, 266, 267, 268, 270, 481, 482, 483], "birthdai": [265, 266, 267, 268, 270, 481, 482, 483, 892], "revert": [265, 266, 631, 839, 892], "channel_wis": [265, 266, 267, 268, 481, 482, 892], "parallel_config": [265, 266, 267, 268, 271, 272, 273, 275, 276, 279, 280, 281, 283, 356, 357, 359, 361, 417, 424, 427, 430, 431, 457, 470, 472, 481, 482, 522, 525, 526, 537, 538, 547, 548, 569, 576, 577, 660, 663, 664, 665, 677, 699, 700, 701, 702, 703, 714, 716, 717, 718, 719, 720, 721, 722, 730, 731, 739, 740, 741, 742, 743, 792, 795, 814], "workload": [265, 266, 267, 268, 481, 482], "x_a": [265, 266, 267, 268, 481, 482], "2u": [265, 266, 267, 268, 481, 482], "enevlop": [265, 266, 267, 268, 481, 482], "hint": [265, 266, 267, 268, 481, 482, 791], "projs_a": [265, 266, 267, 268, 481, 482], "proj_a": [265, 266, 267, 268, 481, 482], "projs_b": [265, 266, 267, 268, 481, 482], "proj_b": [265, 266, 267, 268, 481, 482], "_v": [265, 266, 267, 268, 892], "emphas": [265, 266, 267, 268], "legendr": [265, 266, 267, 268, 481, 482, 522, 573, 874], "by_event_typ": [265, 266, 892], "trim_mean": [265, 266], "low_bia": [265, 266, 267, 268, 419, 481, 482, 537, 538, 714, 716, 719, 722, 724, 730, 792], "undrop": [265, 266], "timeout": [265, 266], "forev": [265, 266, 892], "lenient": [265, 266], "drop_log_stat": [265, 266], "perc": [265, 266], "mintim": [265, 266, 437], "seek": [265, 266, 422, 437], "nonspati": [265, 266], "fmt": [265, 266, 267, 268, 444, 445, 447, 481, 482, 874, 892], "eeglabio": [265, 266, 444, 447, 481, 482, 892], "cart_to_eeglab": [265, 266, 444, 447, 481, 482], "5500m": [265, 266, 267, 268, 416, 425, 450, 452, 453, 481, 482], "reflect_limit": [265, 266, 267, 268, 452, 453, 454, 481, 482], "savgol_filt": [265, 266, 267, 268, 481, 482], "get_annotations_per_epoch": [265, 266], "epoch_annot": [265, 266], "only_data_ch": [265, 266, 267, 268, 270, 481, 482, 564, 712, 714, 715, 716], "alia": [265, 266, 267, 268, 270, 278, 481, 482, 606, 758, 776, 813, 851, 892], "unitless": [265, 266, 267, 268, 481, 482, 874], "return_event_id": [265, 266, 626, 714, 715, 892], "respiratori": [265, 266, 267, 268, 481, 482, 561, 712, 714, 715, 716, 892], "excit": [265, 266, 267, 268, 270, 481, 482, 561, 712, 714, 715, 716, 874], "stereotact": [265, 266, 267, 268, 481, 482, 561, 562, 712, 714, 715, 716, 874, 892], "galvan": [265, 266, 267, 268, 481, 482, 561, 712, 714, 715, 716, 874, 892], "epoch_color": [265, 266, 790], "use_opengl": [265, 266, 481, 482, 564, 790, 807, 813, 892], "overview_mod": [265, 266, 481, 482, 564, 790, 807, 813, 892], "5th": [265, 266, 267, 268, 275, 481, 482, 790, 813], "1e2": [265, 266, 275, 481, 482, 790, 813], "20\u00b5v": [265, 266, 275, 481, 482, 790, 813], "ital": [265, 266, 267, 268, 481, 482, 790, 794, 798, 813, 877], "zen": [265, 266, 481, 482, 564, 790, 807, 813, 892], "selector": [265, 266, 267, 268, 270, 481, 482, 790, 813, 816, 877, 892], "processor": [265, 266, 389, 481, 482, 564, 790, 807, 813], "pyopengl": [265, 266, 481, 482, 564, 790, 807, 813], "stylesheet": [265, 266, 481, 482, 564, 760, 790, 807, 813], "qdarkstyl": [265, 266, 481, 482, 564, 760, 790, 807, 813], "darkdetect": [265, 266, 481, 482, 564, 760, 790, 807, 813], "mne_qt_brows": [265, 266, 481, 482, 564, 790, 807, 813, 892], "mpl": [265, 266, 272, 273, 276, 279, 280, 281, 481, 482, 760, 790, 813, 818, 823], "tkagg": [265, 266, 481, 482, 790, 813], "f11": [265, 266, 481, 482, 790, 813], "set_browser_backend": [265, 266, 481, 482, 564, 790, 807, 813, 832, 882, 892], "magic": [265, 266, 481, 482, 564, 790, 807, 813, 849, 871], "qt5": [265, 266, 481, 482, 564, 790, 807, 813, 855], "n_max_plot": [265, 266, 789], "good_epoch": [265, 266, 791], "area_alpha": [265, 266, 267, 268, 481, 482, 814], "line_alpha": [265, 266, 267, 268, 481, 482, 814], "asd": [265, 266, 267, 268, 481, 482, 814], "idiom": [265, 266, 267, 268, 481, 482, 814, 851], "decibel": [265, 266, 267, 268, 276, 481, 482, 537, 714, 716, 792], "log\u2081\u2080": [265, 266, 267, 268, 481, 482, 697, 714, 716, 792], "ch_group": [265, 266, 267, 268, 270, 481, 482, 816, 892], "to_spher": [265, 266, 267, 268, 270, 481, 482, 816, 892], "n_ch_group": [265, 266, 267, 268, 270, 481, 482], "n_pick": [265, 266, 267, 268, 270, 481, 482, 614], "downward": [265, 266, 267, 268, 270, 481, 482, 816], "plot_layout": [265, 266, 267, 268, 270, 481, 482, 816, 882, 892], "layout_scal": [265, 266, 267, 268, 712, 773, 798, 821], "fig_background": [265, 266, 267, 268, 712, 798, 821], "canva": [265, 266, 267, 268, 712, 773, 798, 821, 874], "allow_dupl": [265, 266, 267, 268, 270, 314, 342, 481, 482, 647, 892], "eeg061": [265, 266, 267, 268, 270, 314, 342, 481, 482, 647], "eeg161": [265, 266, 267, 268, 270, 314, 342, 481, 482, 647], "anti": [265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 826, 892], "reset_drop_log_select": [265, 266, 892], "meaningless": [265, 266], "split_siz": [265, 266, 481, 482], "2gb": [265, 266, 481, 482, 892], "split_nam": [265, 266, 481, 482, 892], "100mb": [265, 266, 481, 482], "partit": [265, 266, 361, 481, 482, 700, 874, 892], "schema": [265, 266, 481, 482], "fname_split": [265, 266, 481, 482], "bbac101d50176611136b": [265, 266, 267, 268, 481, 482], "setter": [265, 266, 481, 482], "on_unit_chang": [265, 266, 267, 268, 270, 481, 482, 892], "eyetrack_po": [265, 266, 267, 268, 270, 481, 482], "eyetrack_pupil": [265, 266, 267, 268, 270, 481, 482], "set_meas_d": [265, 266, 267, 268, 270, 481, 482, 892], "match_cas": [265, 266, 267, 268, 270, 481, 482, 892], "match_alia": [265, 266, 267, 268, 270, 481, 482, 892], "channel_loc_alias": [265, 266, 267, 268, 270, 481, 482], "make_dig_montag": [265, 266, 267, 268, 270, 314, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 481, 482, 505, 874, 882, 892], "std_err": [265, 266], "mechan": [265, 266, 873], "juli": [265, 266], "rangeindex": [265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 712, 714, 715, 716], "timedeltaindex": [265, 266, 267, 268, 272, 273, 276, 279, 280, 281, 481, 482, 712, 715], "elicit": [267, 481, 502, 629, 868], "__neg__": [267, 268, 272, 273, 276, 279, 280, 281], "negat": [267, 268, 272, 273, 276, 279, 280, 281], "evoked_neg": [267, 268], "prepend": [267, 268], "resum": [267, 268, 873], "export_evokeds_mff": [267, 268, 445, 882, 892], "merge_grad": [267, 268, 798, 892], "unsort": [267, 268, 794], "weakest": [267, 268, 794, 892], "obscur": [267, 268, 794], "multiax": [267, 268, 794], "t_start": [267, 268, 794], "t_end": [267, 268, 794], "surf_map": [267, 268, 522, 795], "n_contour": [267, 268, 795], "turntabl": [267, 268, 473, 760, 776, 795], "unintent": [267, 268, 473, 776, 795], "mask_cmap": [267, 268, 712, 796], "mask_alpha": [267, 268, 712, 796], "do_mask": [267, 268, 796], "illeg": [267, 268, 797], "01d": [267, 268, 414, 421, 799], "set_posit": [267, 268, 799], "amplif": [267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 542, 800], "improperli": [267, 268, 298, 299, 356, 360, 361, 372, 373, 374, 414, 421, 457, 458, 476, 478, 479, 542, 800, 892], "logger": [267, 268, 755, 757, 800], "_ave": [267, 268], "source_ori": [269, 877], "fiffv_mne_fixed_ori": [269, 877], "fiffv_mne_free_ori": [269, 877], "n_ori": 269, "source_rr": [269, 877], "n_sourc": [269, 298, 299, 414, 421, 459, 476, 478, 479], "nest": [270, 414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 565, 757, 851], "fiffv_coil_meg": 270, "fiffv_eeg_ch": 270, "3x3": [270, 505, 531], "fiff_unit_t_m": 270, "fiff_unitm_non": 270, "ctfkind": [270, 877], "colcal": 270, "rowcal": 270, "save_calibr": [270, 877], "fiffv_point_eeg": [270, 877], "fiffc_vers": 270, "machid": [270, 877], "mac": 270, "usec": [270, 877], "he_level_raw": 270, "helium": 270, "helium_level": 270, "orig_file_guid": 270, "mea": 270, "creator": 270, "ncoil": 270, "hpi_coil": 270, "corr_coeff": 270, "coil_freq": 270, "dig_point": 270, "good_limit": 270, "dist_limit": [270, 278, 283, 346, 877, 892], "coord_tran": 270, "event_channel": 270, "mri_id": 270, "block_id": 270, "max_info": 270, "sss_info": 270, "max_st": 270, "sss_ctc": 270, "sss_cal": 270, "smartshield": [270, 892], "last_nam": 270, "first_nam": 270, "middle_nam": 270, "month": 270, "sex": [270, 892], "male": [270, 406], "femal": [270, 406], "handed": 270, "ambidextr": 270, "kilogram": 270, "command_lin": [270, 278], "tilt": [270, 492, 760, 874, 892], "subsystem": [270, 851], "meas_fil": 270, "mri_fil": 270, "roundtrip": [270, 892], "shh": 270, "working_dir": [270, 278], "xplotter": 270, "__setitem__": 270, "conflict": [271, 849, 851, 855, 892], "accuru": [271, 276], "m\u00b2": [271, 847], "versionad": [271, 776], "outside_vertic": 271, "lie": [271, 874], "get_tri": 271, "label_tri": 271, "get_vertices_us": 271, "label_vert": 271, "n_label_vertic": 271, "icosahedr": [271, 362, 413, 469, 470], "morph_label": [271, 634, 882, 892], "div1": [271, 689], "div2": [271, 689], "split_label": [271, 882, 892], "mris_divide_parcel": [271, 689], "n_part": [271, 689], "fring": 271, "sens_data": [272, 273, 276, 279, 280, 281], "volvectorsourceestim": [272, 273, 276, 277, 280, 882, 892], "__div__": [272, 273, 276, 279, 280, 281], "__mul__": [272, 273, 276, 279, 280, 281, 712], "tstop": [272, 273, 276, 279, 280, 281], "bihemilabel": [272, 273, 276, 279, 280, 281, 448, 517, 518, 882], "pane": [272, 276, 280, 760, 818, 857], "n_color": [272, 273, 276, 279, 280, 281, 779, 818, 823, 824], "hot": [272, 273, 276, 279, 280, 281, 818, 823], "diverg": [272, 273, 276, 279, 280, 281, 760, 779, 818, 823, 824, 851], "viewer": [272, 273, 276, 279, 280, 281, 760, 818, 823, 847, 880, 892], "binar": [272, 273, 276, 279, 280, 281, 668, 670, 671, 760, 818, 823], "colorschem": [272, 273, 276, 279, 280, 281, 818, 823], "high_contrast": [272, 273, 276, 279, 280, 281, 760, 818, 823], "resort": [272, 276, 280, 818, 871], "devot": [272, 273, 276, 279, 280, 281, 818, 823], "occupi": [272, 273, 276, 279, 280, 281, 472, 661, 818, 823], "blend": [272, 273, 276, 279, 280, 281, 760, 779, 818, 823], "mip": [272, 273, 276, 279, 280, 281, 760, 818, 823], "surface_alpha": [272, 273, 276, 279, 280, 281, 760, 818, 823], "enclos": [272, 273, 276, 279, 280, 281, 760, 818, 823, 874, 892], "silhouette_alpha": [272, 273, 276, 279, 280, 281, 760, 818, 823], "silhouette_linewidth": [272, 273, 276, 279, 280, 281, 760, 818, 823], "time_label_s": [272, 273, 276, 279, 280, 281, 760, 818, 823], "freesurferoccipitalflattenedpatch": [272, 276, 280, 818], "openwetwar": [272, 276, 280, 818], "transform_data": [272, 273, 276, 279, 280, 281], "tmin_idx": [272, 273, 276, 279, 280, 281], "tmax_idx": [272, 273, 276, 279, 280, 281], "indicic": [272, 273, 276, 279, 280, 281], "data_t": [272, 273, 276, 279, 280, 281], "direction": [273, 279, 281], "vector_alpha": [273, 279, 281, 760, 823], "sane": [273, 279, 281, 823], "fiffv_proj_item_field": [274, 877], "compute_proj_": 274, "webp": [275, 892], "fidel": 275, "lang": [275, 892], "n_file": 275, "clearer": [275, 892], "add_custom_css": [275, 892], "add_custom_j": [275, 892], "javascript": [275, 892], "topomap_kwarg": [275, 811], "drop_log_ignor": [275, 892], "declutt": 275, "inverseoper": [275, 531, 532, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 817, 882, 892], "inverse_op": 275, "altogeth": 275, "stc_plot_kwarg": 275, "add_sys_info": 275, "sysinfo": 275, "sort_cont": [275, 892], "on_error": 275, "n_time_points_stc": 275, "remove_al": 275, "removed_index": 275, "open_brows": 275, "nanoamper": 276, "log_10": 276, "sum_k": [276, 874], "s_k": [276, 874], "subject_orig": [276, 279], "vertices_to": [277, 362], "pre_affin": 277, "sdr_morph": [277, 596, 748, 749, 750], "src_data": 277, "vol_morph_mat": 277, "affinemap": 277, "diffeomorphicmap": [277, 596, 748, 749, 750, 892], "stc_from": 277, "mri_spac": [277, 892], "nifti2": [277, 280, 281], "stc_to": 277, "nifti2imag": 277, "src_from": [277, 551], "monolith": 278, "fiffv_mne_surf_left_hemi": [278, 877], "fiffv_mne_surf_right_hemi": [278, 877], "fiffv_mne_surf_unknown": 278, "fiffv_coord_mri": [278, 877], "inus": [278, 877], "subject_his_id": [278, 362], "ntri": [278, 877], "nuse_tri": [278, 877], "pinfo": 278, "155295": 278, "155323": 278, "155330": 278, "patch_ind": 278, "n_src_remain": 278, "essenti": [278, 390, 867, 874, 877], "115407": 278, "nearest_dist": [278, 877], "mri_width": 278, "mri_height": 278, "mri_depth": 278, "neighbor_vert": 278, "mri_ras_t": 278, "fiffv_mne_coord_ra": 278, "src_mri_t": [278, 892], "vox_mri_t": 278, "fiffv_mne_coord_mri_voxel": 278, "mri_volume_nam": 278, "seg_nam": 278, "include_surfac": 278, "include_discret": 278, "dest": [278, 280, 281, 746], "use_lut": [278, 892], "mne_analyz": [278, 677, 775, 857, 868, 880, 892], "4x4": [278, 505, 663, 664, 665, 677], "subvolum": [280, 281, 892], "upsampl": [280, 281, 448, 454, 489, 496, 892], "trilinear": [280, 281, 448], "ensnur": [280, 281, 448], "bg_img": [280, 281, 824, 892], "initial_po": [280, 281, 824], "nutmeg": [280, 281, 824], "spatialimag": [280, 281, 305, 594, 596, 748, 749, 750, 824], "src_sampl": [280, 281, 824], "stc_vol_sampl": [280, 281, 824], "vl": [280, 639], "save_as_volum": [280, 281, 892], "pick_channels_forward": [285, 286, 882], "evoked_templ": 285, "apply_forward_raw": [285, 882, 892], "zlogratio": [288, 547, 548, 712, 715, 820], "data_sc": 288, "apply_dics_epoch": [290, 291, 293, 882, 892], "meaningfulli": 291, "quadrant": 291, "apply_d": [291, 292, 293, 882, 892], "borgiotti": [298, 299], "kaplan": [298, 299], "\u03b8i": [298, 299], "arguabl": [298, 299], "max_pow": [298, 299], "expon": [298, 299, 458, 476, 478, 479, 542], "compute_depth_prior": [298, 299, 459, 476, 478, 479, 542, 882, 892], "n_weight": 298, "src_type": [298, 299], "is_free_ori": [298, 299], "supplement": 298, "is_ssp": 299, "vec_stc": 299, "rework": [299, 892], "resmat": [300, 540, 541, 543, 546], "n_dipoles_lcmv": 300, "n_dipoles_fwd": 300, "mef": [305, 874], "mef05_001": 305, "mef30_001": 305, "flash5_img": [305, 309], "dig_kind": [307, 308, 433, 892], "origin_head": 307, "origin_devic": 307, "exclude_front": [308, 433], "n_pt": 308, "convert_flash_mri": [309, 874, 882, 892], "no_decim": 310, "watersh": [311, 868, 892], "autorecon1": [311, 871, 892], "idx_by_typ": 312, "read_dig_captrak": [314, 327, 330, 334, 335, 336, 337, 338, 339, 874, 882, 892], "read_dig_dat": [314, 330, 333, 335, 336, 337, 338, 339, 493, 874, 882, 892], "read_dig_egi": [314, 327, 330, 333, 334, 336, 337, 338, 339, 874, 882, 892], "read_dig_hpt": [314, 330, 333, 334, 335, 336, 338, 874, 882, 892], "read_dig_localit": [314, 327, 333, 334, 335, 336, 337, 339, 882, 892], "add_estimated_fiduci": [314, 892], "acpc": 314, "ch_po": [314, 327], "remove_fiduci": [314, 892], "circumst": [314, 443, 892], "x_max": 315, "y_min": 315, "y_max": 315, "my_layout": 315, "keep_stim": 316, "combined_inst": 316, "native_head_t": 318, "equalized_inst": [319, 439], "ch_adjac": [320, 331], "use_c": 322, "3022": [322, 481, 874], "sq20483n": [322, 481], "3023": [322, 481, 874], "sq20483": [322, 481], "3024": [322, 481, 874], "sq20950n": [322, 481], "upgrad": [322, 481, 892], "ch_indic": 323, "bg_imag": 323, "reserv": [323, 851, 873, 892], "make_grid_layout": [323, 328, 882], "neighbor_nam": 324, "builtin": [324, 325, 760, 851, 892], "heurist": 326, "capit": [326, 892], "periauricular": [327, 874], "n_point": [327, 341, 367, 433, 484, 506, 625], "n_hpi": 327, "compute_dev_head_t": [327, 882, 892], "fs_tal": [327, 515, 747], "ctf_head": [327, 515, 747], "ctf_meg": [327, 515, 747], "viewport": [328, 481, 482, 813], "generate_2d_layout": [328, 329, 761, 882], "n_col": [329, 564, 713, 715, 786, 806, 892], "95mm": 330, "eloc": 332, "sfp": [332, 892], "besa": [332, 627, 892], "bvef": [332, 892], "095m": 332, "weakli": 332, "eg": [332, 892], "captrak": [333, 892], "xml": [333, 335, 446, 630, 874, 892], "bvct": [333, 874, 892], "compumed": [334, 493, 874], "eeg001": 336, "eeg002": 336, "hpt": [337, 874], "filepath": [337, 339, 710, 760], "digitz": 337, "pound": [337, 874], "auricular": [337, 874, 877], "6729": 337, "3873": 337, "3671": 337, "6782": 337, "5228": 337, "3127": 337, "2363": 337, "4493": 337, "8450": 337, "3601": 337, "5353": 337, "8518": 337, "0697": 337, "0829": 337, "3744": 337, "6297": 337, "1376": 337, "7352": 337, "7756": 337, "8676": 337, "0439": 337, "9297": 337, "6852": 337, "4881": 337, "2969": 337, "4939": 337, "localit": [338, 892], "read_polhemus_fastscan": [339, 882, 892], "on_header_miss": [341, 892], "fastscan": [341, 506, 874], "t_step_min": [343, 344, 345], "t_window": [343, 345, 349, 574], "interf": [343, 345, 349], "_setup_hpi_amplitude_fit": 343, "disambigu": 343, "t_step_max": 344, "too_clos": 344, "adjust_dig": [344, 346], "\u03b4t": 344, "veloc": [344, 568], "chpi_snr": 345, "snr_mag": 345, "power_mag": 345, "resid_mag": 345, "snr_grad": 345, "power_grad": 345, "resid_grad": 345, "gof_limit": 346, "quat": [346, 352, 751, 753], "q1": [346, 481, 482, 751, 753], "q2": [346, 751, 753], "q3": [346, 481, 482, 751, 753], "monitor": [347, 584, 586, 874, 877], "hlc001": 347, "hlc002": 347, "hlc003": 347, "rawkit": [348, 506], "include_lin": 349, "t_step": 349, "allow_line_onli": [349, 892], "hpi_freq": 351, "n_coil": 351, "hpi_pick": 351, "hpi_on": 351, "head_pos_to_trans_rot_t": [353, 354, 663, 664, 665, 677, 882], "all_evok": 355, "keep_sample_mean": 356, "ledoit_wolf": [356, 892], "factor_analysi": 356, "store_precis": 356, "assume_cent": 356, "shrikag": 356, "iter_n_compon": 356, "emprici": 356, "redund": [356, 874, 892], "on_rank_mismatch": [360, 372, 373], "orth": [360, 892], "implicitli": [360, 426, 599, 867, 874], "resultingmorph": 362, "vertices_from": 362, "vert_rh": 362, "vert_lh": 362, "mris_left_right_regist": 362, "epochs_list": [363, 437], "add_offset": 363, "events_list": [365, 892], "event_list": [365, 892], "on_defect": [367, 433, 464, 619, 648, 650, 840, 892], "read_fiduci": [367, 882, 892], "canon": [367, 488, 760, 776, 866, 892], "quantiti": [367, 597, 873, 874], "lpa_weight": 367, "rpa_weight": 367, "hsp_weight": 367, "eeg_weight": 367, "hpi_weight": 367, "set_fid_match": 367, "set_grow_hair": 367, "hair": 367, "set_rot": 367, "rot": [367, 751, 753], "set_scal": 367, "sca": 367, "scale_mod": 367, "set_transl": 367, "tra": 367, "fids_mri": 369, "coordinatesystem": [369, 874], "return_rank": 372, "return_color": [372, 467], "prepare_noise_cov": [372, 882, 892], "n_nonzero": 372, "1e11": 373, "1e5": 373, "fd": [374, 847], "reg_cov": 374, "fs_home": 375, "create_raw": 376, "ignore_config": 378, "env": [378, 462, 849, 851, 855, 859], "device_id": 379, "force_upd": [380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "update_path": [380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412], "mne_datasets_brainstorm_data_path": [380, 381, 382], "prompt": [380, 381, 382, 383, 385, 386, 387, 389, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 850, 854, 856, 862, 871], "base_url": [383, 406, 407], "foot": 383, "khanetal2018": 388, "dataset_param": 389, "check_vers": 389, "return_vers": 389, "auth": 389, "token": 389, "archive_nam": [389, 395], "folder_nam": [389, 395], "hash": [389, 395, 892], "config_kei": 389, "unzip": [389, 851], "untar": [389, 849], "decompress": 389, "authent": [389, 851], "usernam": [389, 851], "password": [389, 851], "httpdownload": 389, "012345": 389, "has_dataset": [389, 882, 892], "uncompress": 389, "cryptograph": 389, "sha256": 389, "19uheid": 389, "md5": 389, "upodh2io": 389, "dataset_nam": [389, 395, 892], "tar": [389, 849, 857], "12b75d1cb7df9dfb4ad73ed82f61094f": 389, "osf": 389, "86qa2": 389, "webpag": 391, "2wk": 392, "1mo": 392, "2mo": 392, "3mo": 392, "5mo": 392, "9mo": 392, "12mo": 392, "15mo": 392, "18mo": 392, "2yr": 392, "ants4": 392, "5month3t": 392, "subject_dir": 393, "fetch_dataset": [395, 882, 892], "\u00ecnt": 398, "mne_datasets_opml_path": 402, "edfx": [406, 407], "cassett": 406, "physionet_sleep_path": [406, 407], "temazepam": [406, 868, 882, 892], "telemetri": 407, "mild": 407, "asleep": 407, "mne_datasets_spm_data_path": 409, "n_triangl": 413, "quadric": 413, "30001": 413, "20480": 413, "cov_est": 414, "transform_into": [414, 421, 892], "average_pow": [414, 421], "cov_method_param": [414, 421, 422], "component_ord": [414, 892], "mutual_info": [414, 892], "csp_space": [414, 421], "mutual": [414, 498, 750], "simplif": 414, "mean_": [414, 421], "std_": [414, 421], "x_new": [414, 415, 416, 419, 421, 422, 425, 565], "n_features_new": [414, 415, 416, 419, 421, 422, 425, 565], "get_param": [414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 565], "subobject": [414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 565], "name_format": [414, 421], "n_pattern": [414, 421], "set_param": [414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 565], "__": [414, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 565], "classes_": [415, 417], "n_class": [415, 417, 424, 430], "rtepoch": [416, 892], "temporalfilt": [416, 882, 892], "mne_realtim": [416, 884, 892], "base_estim": [417, 424, 892], "allow_2d": [417, 424], "score_func": [417, 424, 564], "decision_funct": [417, 424], "nd_featur": [417, 424], "n_slice": 417, "n_features_1": [417, 424], "n_features_2": [417, 424], "n_task": [417, 424], "clone": [417, 424, 849, 851, 892], "n_target": [417, 418, 424, 431], "xt": [417, 424, 427], "283185307179586": 419, "nitim": [419, 724, 730, 792, 892], "n_signal": [419, 735, 737], "fit_intercept": [420, 426, 892], "r2": 420, "edge_correct": [420, 426], "baseestim": [420, 428, 431], "return_filt": 422, "flank": 422, "spectal": 422, "sprectal": 422, "sorter_spec": 422, "x_ssd": 422, "with_mean": 423, "with_std": 423, "quantil": 423, "estimators_": 424, "filterestim": [425, 882, 892], "unsupervis": 428, "spatialfilt": 429, "_xdawntransform": 429, "features_shape_": 429, "objective_funct": 430, "leaveoneout": 430, "surrogate_tri": 430, "mean_spatial_filt": 430, "pre_dispatch": 431, "n_dimensional_featur": 431, "dispatch": 431, "explos": 431, "spawn": [431, 892], "lightweight": [431, 849], "n_score": 431, "attr": [432, 851], "get_fitting_dig": [433, 882], "extrema": [434, 594, 608], "orig_sfreq": 435, "weight_al": 435, "ignore_ref": [435, 526, 575, 588, 599], "return_map": 435, "mag_scal": [435, 575, 588, 599], "multipolar": [435, 574, 575, 588, 599], "fit_sphere_to_headshap": [435, 574, 575, 588, 599, 882, 892], "magenetomet": [435, 575, 588, 599], "pickup": [435, 575, 588, 599, 874], "0168": [435, 575, 588, 599], "sp": 435, "old_event_id": 436, "new_event_id": 436, "safeti": [436, 859], "collat": 438, "ancillari": 438, "union": [438, 455, 564, 600], "myevent": 438, "last_myev": 438, "first_": 438, "event_typ": 438, "respet": 438, "slash": [441, 847, 892], "n_new_ev": 442, "aa": 443, "dd": [443, 493, 892], "ee": 443, "gg": 443, "syncstatu": 443, "99998": 443, "neuroscan": [443, 874, 892], "mffpy": [446, 892], "xml_file": 446, "physical_rang": [447, 481, 482], "add_ch_typ": [447, 481, 482], "vmrk": [447, 481, 482, 617, 868, 892], "edflib": [447, 481, 482, 892], "f_pass": 449, "f_stop": 449, "return_copi": 449, "ellipt": 449, "gpass": 449, "gstop": 449, "weren": 449, "triag": [449, 711], "fs1": 450, "fs2": [450, 453], "fstop": 450, "max_tri": 451, "mt_bandwidth": [453, 481, 482], "centr": [453, 481, 482, 546], "xf": 453, "chronux": 453, "partha": 453, "mitra": 453, "hemant": 453, "bokil": 453, "oxford": [453, 851], "upfirdn": 454, "find_stim_step": [455, 882, 892], "00000101": 455, "0000111": 455, "0100101": 455, "0000101": 455, "0000010": 455, "pad_start": 456, "pad_stop": 456, "whichev": [456, 458, 778], "v_from": 456, "v_to": 456, "min_dist": 457, "rhoend": 457, "fmin_cobyla": 457, "limit_depth_ch": [458, 892], "combine_xyz": 458, "gk": 458, "frobeniu": 458, "depth_prior": 458, "compute_orient_prior": [458, 882], "orient_prior": 459, "fwd_out": [460, 461], "restrict_forward_to_stc": [460, 882, 892], "restrict_forward_to_label": [461, 882, 892], "raise_error": 462, "config_path": 463, "mnemn": 463, "mgz_fname": 467, "atlas_id": [467, 632], "read_freesurfer_lut": [467, 882, 892], "labels_aseg": 468, "spatio_temporal_tris_adjac": [469, 882, 892], "all_inst": 471, "grown": 472, "territori": 472, "invad": 472, "broadcast": 472, "guess_mri_subject": 473, "head_high_r": 473, "scrollabl": 473, "orient_to_surfac": 473, "scale_by_dist": 473, "mark_insid": 473, "advanced_rend": 473, "head_insid": 473, "launch": [473, 552, 849, 851, 855, 857, 892], "movabl": 473, "splitter": 473, "qt4": 473, "unnecessari": [473, 489, 496, 504, 867, 869, 892], "wx": 473, "coregistrationui": 473, "unscal": [475, 892], "update_mod": 476, "bay": 476, "mackai": 476, "time_pca": 478, "dgap_freq": [478, 479, 892], "cd": [478, 851, 857, 871, 874, 892], "bcd": [478, 892], "dualiti": [478, 479, 892], "alpha_max": [478, 479], "epsilon": [478, 531], "alpha_spac": [479, 892], "alpha_tim": [479, 892], "raw_extra": 480, "orig_format": [480, 481, 482, 892], "buffer_size_sec": [480, 481, 482, 892], "orig_unit": 480, "unsplit": 480, "orig_nchan": 480, "nv": 480, "my_raw_object": 480, "subclass": 480, "_read_segment_fil": 480, "mult": 480, "time_slic": [481, 482], "rawfif": [481, 482], "crop_by_annot": [481, 482, 892], "data_fram": [481, 482], "quartil": [481, 482], "fix_mag_coil_typ": [481, 882, 892], "mne_fix_mag_coil_typ": 481, "load_bad_channel": [481, 482, 892], "bad_fil": [481, 482], "mne_mark_bad_channel": [481, 482], "europ": [481, 482], "lightgrai": [481, 482, 789, 813], "show_first_samp": [481, 482, 564, 807, 813], "eventloop": [481, 482, 813], "prj": [481, 482, 813], "secondari": [481, 482, 813], "stim_pick": [481, 482, 892], "supersampl": [481, 482], "optimum": [481, 482], "drop_small_buff": [481, 482], "gzip": [481, 482, 892], "projecton": [481, 482], "datetimeindex": [481, 482], "pickl": 484, "mrk_point": 484, "fiffv_coord_": [485, 515], "read_raw_curri": [487, 882, 892], "read_raw_nedf": [487, 882, 892], "input_fnam": [488, 489, 493, 496, 497, 498, 504, 506, 508, 511, 623, 625], "pos_fnam": 488, "add_head_tran": 488, "artemis123": [488, 874, 892], "utf8": [489, 496, 892], "bdf": [489, 496, 504, 874, 892], "rawedf": [489, 496, 511, 892], "gdf": [489, 496, 504, 874, 892], "batteri": 489, "trigger_sign": 489, "htm": 489, "cms_bit": 489, "cms_high": 489, "boxi": [490, 874, 892], "rawboxi": 490, "vhdr_fname": 491, "heogl": 491, "heogr": 491, "veogb": 491, "vision": [491, 873, 892], "rawbrainvis": [491, 892], "pdf_fname": 492, "config_fnam": 492, "head_shape_fnam": 492, "sort_by_ch_nam": 492, "e64": 492, "rawbti": 492, "data_format": 493, "date_format": 493, "int16": 493, "int32": [493, 877], "numsampl": 493, "rawcnt": 493, "system_clock": 494, "clean_nam": [494, 892], "rawctf": 494, "curri": [495, 617, 892], "dap": [495, 617], "rs3": 495, "cdt": [495, 617, 892], "dpa": [495, 617], "cef": [495, 617], "rawcurri": 495, "export_raw": [496, 882, 892], "storag": [496, 654], "sao2": 496, "subsecond": 496, "uint16_codec": [497, 617, 623, 892], "montage_unit": [497, 623, 892], "codec": [497, 617, 623, 760, 892], "latin1": [497, 617, 623], "raweeglab": [497, 892], "trev": 498, "e1": [498, 630], "e2": [498, 630], "e3": [498, 630], "rawegi": 498, "nxe": [499, 874], "raweximia": 499, "apply_offset": 500, "find_overlap": 500, "overlap_threshold": 500, "gap_descript": [500, 892], "occular": 500, "blink_l": 500, "blink_r": 500, "blink_both": 500, "raweyelink": 500, "data_nam": [501, 624, 628], "ft_datatype_raw": 501, "binfil": 503, "fil": [503, 868, 874, 892], "opmeg": 503, "rawfil": 503, "rawgdf": 504, "hitachi": [505, 892], "probe": [505, 892], "rawhitachi": 505, "3x5": 505, "etg": 505, "7000": 505, "d1": 505, "s2": 505, "d2": 505, "s3": 505, "d3": 505, "s4": 505, "d4": 505, "s5": 505, "d5": 505, "s6": 505, "d6": 505, "s7": 505, "d7": 505, "s8": 505, "ft7": 505, "tp7": 505, "laid": 505, "d8": 505, "s9": 505, "d9": 505, "s10": 505, "3x11": 505, "d10": 505, "s11": 505, "d11": 505, "s12": 505, "d12": 505, "s13": 505, "d13": 505, "s14": 505, "d14": 505, "s16": 505, "d16": 505, "s17": 505, "d17": 505, "s18": 505, "stim_cod": 506, "allow_unknown_format": [506, 625], "ricoh": [506, 625, 892], "laboratori": [506, 625], "neuroelectr": 507, "nedf": [507, 892], "rawnedf": 507, "nicolet": [508, 874, 892], "nihon": 509, "kohden": 509, "rawnihon": 509, "nirx": [510, 874, 892], "nosatflag": 510, "rawnirx": 510, "wlx": 510, "nosatflags_wlx": 510, "nsx": [511, 892], "blackrock": [511, 892], "microsystem": [511, 892], "neuralsg": 511, "persyst": [512, 874, 892], "rawpersyst": 512, "snirf": [513, 892], "jnir": 513, "rawsnirf": 513, "indent": [514, 768], "read_limit": [514, 768], "max_str": [514, 768], "show_byt": [514, 892], "mne_show_fiff": 514, "mri_tal": [515, 747], "grow_outsid": 516, "hoc": [519, 858, 892], "standard_devi": 519, "write_bem_surfac": [520, 521, 618, 619, 867, 882, 892], "write_bem_solut": [521, 618, 619, 867, 882, 892], "relative_radii": 527, "radii": [527, 664], "csf": [527, 874], "replace_ev": [529, 892], "n_events_in": 529, "n_events_out": 529, "1111111111111111": [531, 532, 537, 538, 543, 547, 548], "prepare_inverse_oper": [531, 532, 533, 534, 535, 537, 538, 547, 548, 882, 892], "apply_inverse_tfr_epoch": [531, 532, 533, 534, 882, 892], "force_equ": [531, 892], "time_func": 534, "approx": [534, 874], "inv_split": [537, 538], "snr_est": 539, "unregular": 539, "tild": [539, 874, 892], "lambda_k": [539, 874], "gamma_k": [539, 874], "biggest": 539, "chi": 539, "normalis": [540, 541], "willb": [540, 541], "n_orient_inv": [540, 541, 543], "n_orient_fwd": [540, 541, 543], "pca_var": [540, 541], "mantl": [542, 874], "cog_err": 546, "graviti": 546, "cog": 546, "maxrad_ext": 546, "peak_amp": 546, "sum_amp": 546, "surf_nam": [550, 634], "mne_docs_kind": 552, "mne_docs_vers": 552, "grad_reject": 554, "mag_reject": 554, "eeg_reject": 554, "eog_reject": 554, "explanatori": [563, 614], "info_": 563, "intercept_": 563, "cumul": 564, "999999": [564, 892], "n_components_": [564, 892], "n_iter_": [564, 892], "pseudoinvers": [564, 575, 874, 892], "instabl": 564, "migrat": [564, 892], "debat": 564, "zca": 564, "tol_fastica": 564, "tol_picard": 564, "current_fit": 564, "unfit": 564, "pre_whitener_": 564, "pca_components_": 564, "pca_mean_": 564, "pca_explained_variance_": 564, "scrap": 564, "n_samples_": 564, "on_baselin": [564, 804, 892], "ummix": [564, 565], "reappli": [564, 804, 839, 892], "anymor": [564, 859, 892], "supra": [564, 566], "ecg_idx": 564, "kuiper": 564, "eog_idx": 564, "paralyz": 564, "threefold": 564, "farthest": 564, "msucl": 564, "ref_ica": 564, "ref_idx": 564, "baseraw": [564, 572, 882, 892], "unclean": 564, "pvaf": 564, "usecas": [564, 807], "plot_std": [564, 803, 805], "image_arg": [564, 712, 803, 805], "psd_arg": [564, 803, 805], "plot_ica_compon": [564, 882, 892], "topomap_axi": [564, 805], "image_axi": [564, 805], "erp_axi": [564, 805], "spectrum_axi": [564, 805], "variance_axi": [564, 805], "logarithm": [564, 805], "ass": [564, 806], "n_ica_compon": [564, 806], "sublabel": [564, 806], "score_sourc": [564, 892], "pearsonr": 564, "skew": 564, "correct_overlap": 565, "overlapp_correct": 565, "evokeds_": 565, "event_id_": 565, "correct_overlap_": 565, "n_event_typ": 565, "bad_perc": 566, "bad_peak": 566, "bad_flat": 566, "uncommon": 566, "sole": [567, 868, 873], "rotation_velocity_limit": 568, "translation_velocity_limit": 568, "use_dev_head_tran": [568, 892], "lm_cutoff": 572, "epoch_threshold": 572, "bw_method": 572, "intrins": 572, "hjorth": 572, "gaussian_kd": 572, "n_legendre_term": 573, "lap": [573, 656], "inst_csd": 573, "n_imbal": 574, "multipol": [574, 599], "bad_condit": [575, 588, 599], "extended_proj": [575, 588, 599], "ill": [575, 588, 599], "esss": [575, 588, 599, 880, 892], "n_meg": [575, 588], "n_moment": 575, "n_good_meg": 575, "reg_moment": 575, "n_use_in": 575, "dagger": 575, "phi": 575, "phi_in": 575, "data_meg_good": 575, "raw_ev": [576, 577], "avg_ref": [576, 577], "return_drop_log": [576, 577, 892], "ecg_ev": [576, 589, 592], "0005": [577, 871], "e0g": 577, "magentomet": 578, "quadratur": 578, "feed": [579, 874], "corrmapplugin1": 579, "categoris": 579, "preexist": 579, "dry": 579, "template_fig": 579, "labelled_": 579, "mag_pick": 580, "grad_pick": 580, "keep_ecg": [581, 892], "r_peak_events_arrai": 581, "doctest": 581, "thresh": [582, 590, 594, 608, 699, 700, 702, 703, 760], "interp_thresh": 583, "insts_bad": 583, "formerli": [583, 892], "avg_error": 584, "max_error": 584, "screen_siz": [584, 586], "screen_dist": [584, 586], "screen_resolut": [584, 586], "h3": 584, "hv3": 584, "n_calibration_point": 584, "1920": [584, 586], "1920x1080": [584, 586], "show_offset": 584, "unpredict": 585, "px": 587, "l_x": 587, "r_pupil": 587, "noisy_ch": 588, "flat_ch": 588, "Their": [588, 851], "scores_flat": 588, "limits_flat": 588, "annotate_amplitud": [588, 599, 882, 892], "st_fix": [588, 599], "d_k": 588, "mu_d": 588, "sigma_d": [588, 874], "textrm": 588, "return_ecg": 589, "ch_ecg": [589, 592], "average_puls": [589, 592], "ecg_sourc": 592, "eog_sourc": 593, "base_imag": [594, 892], "max_peak_dist": 594, "voxels_max": 594, "use_min": 594, "ct": [594, 750, 892], "hypointens": 594, "hyperintens": 594, "elec_imag": 594, "n_neighbor": 595, "pressur": 595, "craniotomi": 595, "reg_affin": [596, 748, 749, 750], "montage_warp": 596, "l_rate": 597, "w_chang": 597, "anneal_deg": 597, "anneal_step": 597, "n_subgauss": 597, "kurt_siz": 597, "ext_block": 597, "blowup": [597, 677], "blowup_fac": 597, "n_small_angl": 597, "use_bia": 597, "return_n_it": [597, 892], "kurtosi": 597, "unmixing_matrix": 597, "return_max_it": 597, "bad_limit": 598, "forth": 599, "relicens": 599, "permiss": 599, "certifi": 599, "seamless": 599, "vet": [599, 880], "abramowitz": 599, "stegun": 599, "us2006031038": 599, "us6876196": 599, "wo2005067789": 599, "wo2005078467": 599, "wo2006114473": 599, "lawyer": 599, "raw_er": 600, "from_raw": 600, "inject": 600, "raw_er_prepar": 600, "pathlength": [601, 892], "hemoglobin": [606, 892], "wherev": 606, "realtim": [607, 858, 882, 892], "provision": 607, "x0": [608, 697], "peak_loc": 608, "peak_mag": 608, "nathanael": 608, "yoder": 608, "ncyoder": 608, "purdu": 608, "36900026": 608, "76007351": 608, "imb_cal": 610, "t_raw": 613, "t_other": 613, "realign": [613, 847, 892], "first_ev": 613, "n_picks_ref": 614, "epochs_no_av": 614, "epochs_clean": 614, "n_parcel": 616, "amrk": 617, "ahdr": [617, 892], "patch_stat": [619, 641], "s_id": 619, "eventtyp": 623, "trialinfo_column": 624, "trialinfo": [624, 892], "mne_browse_raw": [626, 877], "avr": [627, 892], "mul": [627, 892], "sidecar": 627, "timelock": 628, "write_labels_to_annot": [633, 634, 841, 882, 892], "annot_fnam": [634, 842], "ascend": [634, 801, 808, 871, 892], "lta": [635, 892], "mne_make_morph_map": [636, 877], "morph_map": 636, "left_map": 636, "right_map": 636, "asterisk": 639, "source_morph": 640, "return_dict": 642, "file_format": [642, 845], "voxels": [642, 845], "xra": [642, 845], "yra": [642, 845], "zra": [642, 845], "cra": [642, 845], "n_face": [642, 645, 845], "read_tri": [642, 845, 882], "return_al": 644, "fname_in": 645, "clockwis": [645, 765], "counterclockwis": [645, 877], "spcecifi": 646, "bem_nam": 648, "subjects_from": [648, 651], "ba3a": 649, "cfg": 649, "skip_fiduci": 650, "oserror": 650, "scale_bem": [650, 882, 892], "scale_label": [650, 882], "scale_source_spac": [650, 882], "src_name": 651, "my_source_spac": 651, "mne_sensitivity_map": 652, "ch_info": [653, 892], "drop_ref": [653, 892], "on_bad": 653, "cache_dir": 654, "output_format": 657, "howto": 657, "asctim": 657, "levelnam": 657, "notifi": [657, 851], "return_old_level": 658, "add_fram": [658, 755], "old_level": 658, "memmap_min_s": 659, "megabyt": 659, "single_volum": [661, 892], "ox": 661, "oi": 661, "iii": 661, "get_stim_channel": 662, "stim_data": 662, "add_chpi": [664, 665, 677, 882, 892], "inhomogen": 665, "poisson": 665, "stc_true": [667, 668, 669, 670, 671, 672, 673, 674], "stc_est": [667, 668, 669, 670, 671, 672, 673, 674], "ppe": 669, "dfrac": [669, 674], "sum_i": [669, 674], "s_i": [669, 674], "r_i": [669, 674, 874], "tp": [670, 671], "fn": 671, "2q": 672, "min_": [672, 874], "r_k": 672, "r_l": 672, "mathbb": 672, "dle": 672, "ed": [672, 892], "terminologi": 672, "actual_snr": 676, "sti001": 677, "allow_overlap": 679, "coo_matrix": [682, 683, 684, 685, 686, 687, 688, 692], "additit": 683, "remap_vertic": [685, 688], "reassign": [685, 688], "2n": [686, 687, 688, 874], "pval_correct": [690, 696], "n_bootstrap": 691, "spmatrix": [692, 699, 700, 702, 703], "n_ob": 692, "chan_adj": 692, "5600x5600": 692, "27076": 692, "compliant": [693, 880], "slowest": 693, "a2b2": 693, "greenhous": 693, "geisser": 693, "f_val": 693, "homoscedast": 694, "kruskal": 694, "walli": 694, "pvalu": 695, "yekuti": 696, "negcorr": 696, "n_regressor": 697, "choleski": [698, 874, 892], "n_cond": 698, "bx": 698, "enorm": 698, "overload": 698, "subepoch": 698, "n_predictor": 698, "time_window_length": 698, "t_power": [699, 700, 702, 703], "check_disjoint": [699, 700, 702, 703], "subarrai": 699, "kth": 699, "unconnect": [699, 700, 702, 703], "disjoint": [699, 700, 702, 703], "set_cache_dir": [699, 700, 702, 703, 882], "rv_continu": [699, 700, 702, 703], "untract": 701, "spatial_exclud": [702, 703], "p_thresh": 704, "equal_var": 706, "ball": 707, "volu": 707, "do_neighbor_vert": 709, "do_neighbor_tri": 709, "show_path": 711, "sy": [711, 855, 892], "power_baselin": 712, "frequency_window": 712, "read_tfr": [712, 715, 745, 882, 892], "write_tfr": [712, 715, 734, 882], "csd_array_fouri": [713, 718, 719, 720, 721, 722, 882, 892], "csd_array_multitap": [713, 717, 718, 720, 721, 722, 882, 892], "csd_array_morlet": [713, 717, 719, 720, 721, 722, 882, 892], "as_cov": 713, "pack": 713, "pick_frequ": 713, "read_csd": [713, 882, 892], "getitem_epochspectrum_return": 714, "ci_alpha": [714, 716], "read_spectrum": [714, 716, 882], "latex": [714, 716], "pertin": 715, "12676": 715, "getitem_spectrum_return": 716, "sixth": 716, "subscript": 716, "freq_indic": 716, "half_nbw": 724, "kmax": 724, "sym": [724, 892], "nw": 724, "half_bw": 724, "bw": 724, "f0": 724, "tridiagon": 724, "jw": 725, "jnw": 725, "tx": 727, "n_step": [727, 735, 760], "_cycl": [728, 738, 739, 740, 742, 743], "desired_fwhm": [728, 738, 742], "morlet2": [728, 738], "sp_morlet": [728, 738], "this_fwhm": [728, 738], "wavelet_sp": [728, 738], "half_max": [728, 738], "n_taper": [730, 740], "get_window": [731, 814], "istft": [735, 736, 882, 892], "stftfreq": [735, 882], "epoch_data": [739, 740], "avg_power_itc": [739, 740], "power_": [739, 740], "tfr_array_multitap": [739, 741, 742, 743, 744, 882, 892], "tfr_array_stockwel": [739, 740, 742, 743, 744, 882, 892], "interrel": [739, 740, 742, 743, 858], "strive": [740, 743, 873], "finer": [740, 743, 892], "undermin": [740, 743], "intertri": [741, 744], "st_power": 741, "from_str": 747, "to_str": 747, "cval": [748, 892], "compute_volume_registr": [748, 749, 882, 892], "reg_img": 748, "trans2": 749, "niter": [750, 892], "starting_affin": [750, 892], "shear": 750, "mr": [750, 874, 880, 892], "affine_registr": 750, "rot_to_quat": [751, 882], "quat_to_rot": [753, 882], "contextlib": 754, "contextmanag": 754, "my_fnam": 754, "moin": 756, "pythondecoratorlibrari": 756, "sentenc": 756, "futurewarn": [756, 851, 892], "ignore_namespac": 757, "namespac": [757, 851, 882, 892], "travers": 757, "_funct": 758, "dec": [758, 850], "filler": 758, "5880": 758, "offscreen": 760, "subject_id": [760, 892], "buggi": 760, "soon": [760, 868, 873, 874], "add_skul": 760, "remove_data": 760, "remove_dipol": [760, 892], "remove_forward": [760, 892], "remove_head": 760, "remove_label": 760, "remove_annot": 760, "remove_sensor": 760, "remove_skul": 760, "remove_text": 760, "remove_volume_label": 760, "timeview": 760, "get_picked_point": 760, "geo": 760, "ctab": 760, "lh_ctab": 760, "rh_ctab": 760, "rbga": 760, "icefir": 760, "rocket": 760, "nvtx": 760, "thrown": [760, 892], "font": [760, 819], "add_scalar_bar": 760, "title_font_s": 760, "hex": [760, 784], "map_surfac": [760, 892], "n_coord": 760, "stereotax": 760, "coord_as_vert": 760, "1cm": 760, "subdir": 760, "reset_camera": [760, 828], "max_dist": 760, "justif": 760, "update_text": 760, "fill_hole_s": [760, 892], "hole": [760, 892], "dilat": 760, "apply_auto_sc": 760, "clear_glyph": 760, "cleanup": [760, 880], "widget": [760, 762, 892], "get_view": [760, 892], "zenith": [760, 828], "plot_time_cours": 760, "vertex_id": 760, "plot_time_lin": 760, "reset_view": 760, "restore_user_sc": 760, "bitrat": 760, "imageio": 760, "mov": 760, "interp1d": 760, "slinear": 760, "quadrat": 760, "n_frame": 760, "separate_canva": 760, "set_data_smooth": 760, "set_playback_spe": 760, "playback": 760, "set_tim": [760, 892], "set_time_interpol": 760, "set_time_point": 760, "time_idx": 760, "setup_time_view": 760, "rear": [760, 847], "time_interpol": 760, "toggle_interfac": 760, "toggle_playback": 760, "update_lut": 760, "imdata": 761, "cursor": [761, 892], "onclick": 761, "backend_bas": 761, "bg": [761, 763], "set_ratio": 763, "ax_im": 763, "node_nam": 765, "start_between": 765, "group_sep": 765, "n_node_nam": 765, "fname_1": 768, "fname_2": 768, "show_fiff": [768, 882, 892], "smooth_shad": [769, 826], "_render": 769, "undocu": 769, "backend_us": [770, 772], "gen": 773, "ch_dx": 773, "teal": 775, "onselect": [777, 822], "rectangleselector": [777, 822], "show_indic": 778, "show_orient": [778, 892], "halfwai": 778, "colorbarbas": 779, "polarax": 782, "type_snr": 783, "type_pow": 783, "type_resid": 783, "truncate_xaxi": [784, 892], "invert_i": 784, "unweight": 784, "inset": [784, 892], "n_evok": 784, "hexadecim": 784, "equal_spac": 793, "1f77b4": 801, "fscale": [801, 808], "alim": [801, 808], "pointsiz": 816, "bet": 816, "bluish": 817, "brain_color": [819, 892], "fig_numb": 819, "cone": 819, "axesimag": 822, "contourset": 822, "fieldlin": 822, "mixedvectorsourceestim": [823, 882, 892], "backend_nam": [825, 829, 831, 832], "old_backend_nam": [825, 829], "plot_evoked_field": [825, 882, 892], "link_brain": [825, 882, 892], "inlin": [825, 849, 855], "jupyterlab": 825, "colab": 825, "antialia": [826, 849], "depth_peel": 826, "multi_sampl": 826, "plot_epoch": [829, 851, 882, 892], "plot_ica_sourc": [829, 882, 892], "hide_sensor": 830, "dn": 830, "set_3d_backend": [831, 849, 882, 892], "hsv": 842, "table_nam": 842, "colort": 842, "create_stamp": 845, "vocabulari": [847, 875], "textual": [847, 892], "spindl": 847, "acronym": [847, 875], "definion": 847, "mv": [847, 892], "\u00b5m": 847, "od": 847, "dealt": 847, "synapt": 847, "intracellular": 847, "pyramid": [847, 874], "perpendicularli": 847, "erron": [847, 892], "peculiar": 847, "encapsul": [847, 874], "hcpmmp": [847, 892], "gave": [847, 892], "cartoon": 847, "pependicular": 847, "laser": 847, "ga": 847, "rubidium": 847, "superconduct": 847, "quantum": 847, "scaleogram": 847, "uncorrel": 847, "nb_conda_kernel": 849, "anaconda": [849, 851, 855, 856, 862, 892], "forum": [849, 850, 851, 854, 857, 858, 868, 870, 871, 872], "osmesa": 849, "xvfb": 849, "forg": [849, 851, 855], "mesalib": 849, "latest": [849, 851, 859, 871, 892], "git": [849, 858, 859], "miniconda": [849, 851], "miniforg": 849, "pythonpath": 849, "pythonhom": 849, "curl": [849, 851], "githubusercont": [849, 851], "unabl": [849, 873, 892], "nvidia": [849, 871], "proprietari": [849, 873], "driver": 849, "init_cuda": [849, 882], "pytest": [849, 851], "test_filt": 849, "multithread": [849, 871], "swr": 849, "cento": 849, "spyder": [849, 851, 854, 855, 871, 892], "mesa_gl_version_overrid": 849, "rend": 849, "msaa": 849, "set_3d_opt": [849, 882, 892], "incomplet": [849, 880, 892], "prebuilt": 849, "xzvf": 849, "mesa_18": 849, "6_centos_lib": 849, "tgz": 849, "libgl_drivers_path": 849, "pwd": 849, "ld_library_path": 849, "went": [849, 850], "glxinfo": 849, "grep": [849, 851, 859], "uninstal": [849, 859], "gcp": 850, "travi": [850, 892], "virtualenv": 850, "8dfaa4a": 850, "bla": 850, "lapack": 850, "f614064": 850, "qtagg": 850, "post1": 850, "pyside6": [850, 892], "traceback": 850, "modulenotfounderror": 850, "bashrc": [850, 856, 857], "zprofil": [850, 856], "zsh": [850, 856, 857], "troubleshoot": [850, 870, 872], "sustain": [851, 873], "volunt": 851, "welcom": 851, "anyon": [851, 873], "abid": 851, "fastest": [851, 857], "feel": [851, 858, 873, 892], "upstream": 851, "desktop": 851, "appreci": 851, "sudo": [851, 852, 857], "apt": [851, 852], "dmg": [851, 857], "atlassian": 851, "macport": [851, 857], "homebrew": [851, 857], "yourdomain": 851, "sooner": 851, "commit": [851, 873, 880, 892], "emac": 851, "vim": 851, "nano": 851, "subl": 851, "makefil": 851, "newest": 851, "guil": 851, "w32": 851, "ezwinport": 851, "path_to_git": 851, "mingw64": 851, "mnedev": 851, "path_to_anaconda": 851, "team": [851, 873], "yml": 851, "github_usernam": 851, "insert_your_actual_github_username_her": 851, "install_loc": 851, "opt": [851, 855, 856, 857], "blame": 851, "ignorerevsfil": 851, "rev": 851, "site_packag": 851, "requirements_test": 851, "requirements_doc": 851, "graphviz": 851, "graphviz_dot": 851, "conda_prefix": 851, "optipng": 851, "linter": 851, "restructuredtext": 851, "autobuild": 851, "doc8": 851, "url_of_remote_repo": 851, "nickname_of_remot": 851, "repo": [851, 873], "undoubtedli": 851, "checkout": 851, "colleagu": 851, "unstag": 851, "some_fil": 851, "some_new_fil": 851, "entireti": 851, "some_other_fil": 851, "bypass": [851, 892], "enh": 851, "some_testing_fil": 851, "new_tutorial_fil": 851, "stuck": 851, "secur": [851, 857], "secret": 851, "client": [851, 892], "test_evok": 851, "python_refer": 851, "rst": 851, "my_funct": 851, "my_new_funct": 851, "old_param": 851, "new_param": 851, "my_other_funct": 851, "depr_messag": 851, "changeset": 851, "minor": [851, 877, 880, 892], "typo": [851, 870, 892], "subsect": 851, "bugfix": [851, 859], "happi": 851, "credit": 851, "gh": [851, 892], "newcontrib": 851, "firstnam": 851, "lastnam": 851, "_your": 851, "test_topo": 851, "pep": 851, "ruff": 851, "hook": 851, "ins": 851, "camelcas": [851, 882], "snake_cas": 851, "nsampl": 851, "complic": [851, 892], "sphinxcontrib": 851, "bibtex": [851, 866], "citat": [851, 892], "bibliograph": 851, "bib": 851, "singleauthor2019": 851, "authoroneauthortwo2020": 851, "firstauthoretal2021a": 851, "firstauthoretal2021b": 851, "param_nam": 851, "test_docstring_paramet": 851, "mod": 851, "intersphinx": 851, "inventori": 851, "sphobjinv": 851, "dump": 851, "ext": 851, "backtick": [851, 871], "pdb": 851, "debugg": [851, 892], "failur": [851, 892], "test_io_evok": 851, "imit": 851, "noplot": 851, "regex_to_select_my_tutori": 851, "unrel": 851, "browse_raw": [851, 892], "mortem": 851, "pm": 851, "everyon": 851, "scientist": [851, 855, 870], "spare": 851, "streamlin": 851, "collabor": [851, 858, 873], "fruit": 851, "road": 851, "someon": 851, "occasion": [851, 868], "cosmet": 851, "backport": [851, 892], "whats_new": 851, "draft": 851, "wip": 851, "mrg": 851, "sty": 851, "azp": 851, "azur": 851, "exemplifi": 851, "tcsh": [852, 856, 857], "ubuntu": [852, 854, 857], "bionic": 854, "beaver": 854, "0_0": 854, "intel": [854, 871], "catalina": [854, 856, 892], "appl": 854, "silicon": 854, "python_1": 854, "mamba": 855, "prioriti": 855, "h5io": [855, 871], "h5py": [855, 871], "pymatread": [855, 892], "unlock": 855, "vscode": 855, "microsoft": 855, "anaconda3": [855, 856], "pyqt5": 855, "pyqt": [855, 892], "pycharm": [855, 871], "paid": 855, "profession": 855, "cmd": 856, "bash_profil": 856, "__conda_setup": 856, "overflow": [856, 892], "leopard": 857, "powerpc": 857, "runtim": 857, "mne_convert_mne_data": 857, "mne_epochs2mat": [857, 877], "mne_raw2mat": 857, "mne_simu": 857, "xcode": 857, "xquartz": 857, "x11": 857, "libxt": 857, "dylib": 857, "bak": 857, "flat_namespac": 857, "netpbm": 857, "brew": 857, "app": 857, "nightli": [857, 892], "path_to_desired_install_loc": 857, "zxvf": 857, "path_to_archive_fil": 857, "pkg": 857, "untrust": 857, "privaci": [857, 873], "mne_root": [857, 874, 877, 892], "matlab_root": 857, "r2018b": 857, "undefin": 857, "mne_setup_sh": 857, "csh": 857, "mne_setup": [857, 877], "path_to_mn": 857, "path_to_matlab": 857, "emul": 857, "zshrc": 857, "cshrc": 857, "tcshrc": 857, "setenv": [857, 862], "mne_opengl_test": 857, "redraw": 857, "spent": 857, "revolut": 857, "interrupt": 857, "glx": 857, "nondirect": 857, "IT": 857, "vnc": 857, "card": [857, 892], "libxp": 857, "libxp6": 857, "debian": [857, 892], "dpkg": 857, "libxp6_1": 857, "1ubuntu1_amd64": 857, "deb": 857, "libgfortran": 857, "libfortran": 857, "gnu": 857, "maxdepth": 857, "interoper": 858, "reimplement": 858, "cpp": [858, 892], "connectom": [858, 880], "compli": [858, 892], "alphacsc": 858, "pactool": 858, "microst": 858, "conpi": 858, "eelbrain": 858, "posthoc": 858, "prep": 858, "pyprep": 858, "sesam": 858, "sesameeg": 858, "invertmeeg": 858, "unix": [858, 892], "name_of_environ": 859, "fool": 859, "proof": 859, "old_mn": 859, "dep": 859, "hm": [862, 868], "pubsw": 862, "subscrib": 862, "modular": 863, "qt3d": 863, "babymeg": 863, "tmsi": 863, "refa": 863, "brainamp": 863, "ant": 863, "eegosport": 863, "gusbamp": 863, "locate_ieeg": [865, 892], "sidebar": 866, "592483": 866, "gramfortetal2013a": 866, "gramfortetal2014": 866, "bibliographi": 866, "meg2443": 867, "vanish": 867, "advers": 867, "preliminari": 867, "stamp": 867, "mm2": 867, "ico5": 867, "tessel": [867, 877], "prerequisit": 867, "bulletproof": 867, "feasibl": 867, "sep": 867, "bem_sol": 867, "reestablish": 867, "corregistr": 867, "charg": 867, "photograph": 867, "uninterest": 867, "epilept": 867, "infrequ": 867, "hesit": [868, 871], "siemen": [868, 874], "sonata": 868, "mprage": [868, 871, 874], "interspers": 868, "lv": 868, "audvis_raw": 868, "auvi": 868, "agre": 868, "bst_rest": [868, 882], "khz": 868, "dicom": [868, 877, 892], "richli": 868, "timon": [868, 892], "9999": 868, "msr": 868, "retrospect": 868, "satisfactori": 868, "chin": 868, "respir": [868, 874, 877], "hypnogram": 868, "rechtschaffen": 868, "kale": 868, "erlangen": 868, "germani": 868, "shaft": [868, 880], "pend": 868, "craft": 868, "lrp": 868, "ern": 868, "pupillari": 868, "reflex": 868, "neuroscientist": 869, "keystrok": 869, "peak_find": [869, 882, 892], "appnop": 871, "nope": 871, "nsappsleepdis": 871, "tempt": 871, "benfrederickson": 871, "dont": 871, "stackoverflow": 871, "21752259": 871, "write_": 871, "resid": 871, "plot_find_ecg_artifact": 871, "ordinarili": 871, "mkl": 871, "openmp": 871, "omp_num_thread": 871, "openblas_num_thread": 871, "num_cpu": 871, "implic": 871, "simplist": 871, "epochs_path": 871, "protrud": 871, "shrunken": 871, "dura": 871, "mri_norm": 871, "xopt": 871, "gentl": 871, "listserv": 871, "recon_al": 871, "autorecon2": 871, "autorecon3": 871, "formal": 873, "extraordinari": 873, "clarifi": [873, 892], "profit": 873, "entiti": [873, 877], "openli": 873, "affili": 873, "discours": 873, "behalf": 873, "barrier": 873, "leadership": 873, "neutral": 873, "tradition": [873, 874], "reward": 873, "benevol": 873, "dictat": 873, "defer": 873, "vote": 873, "deadlock": 873, "fork": 873, "disagre": 873, "deleg": 873, "appoint": 873, "successor": 873, "faith": 873, "director": 873, "ceo": [873, 892], "everydai": 873, "peer": 873, "privileg": 873, "servic": [873, 892], "scope": 873, "strateg": 873, "polici": [873, 892], "nomin": 873, "willing": 873, "capac": 873, "infrastructur": [873, 892], "outreach": 873, "deliber": 873, "divers": 873, "viewpoint": 873, "talent": 873, "grace": 873, "retir": 873, "eject": 873, "deem": 873, "harm": 873, "financi": 873, "employ": 873, "disclos": 873, "recus": 873, "themself": 873, "sparingli": 873, "apach": 873, "veto": 873, "rational": 873, "opinion": 873, "anticip": [873, 892], "suffic": 873, "usurp": 873, "countri": 873, "gift": 873, "partnership": 873, "approv": 873, "commenc": 873, "laps": 873, "pursu": 873, "monei": 873, "donor": 873, "umbrella": 873, "trademark": 873, "invit": 873, "waiv": 873, "copyright": 873, "mole": 874, "sensibl": 874, "femtotesla": 874, "typecast": 874, "unread": [874, 892], "electrocardiographi": 874, "electromyographi": 874, "celsiu": 874, "channels_3_and_4": 874, "boldsymbol": 874, "c_0": 874, "g_": 874, "infti": 874, "r_j": 874, "t_d": 874, "underbrac": 874, "b_": 874, "b_n": 874, "dotso": 874, "uc_n": 874, "constitut": 874, "orthonorm": 874, "c_e": 874, "complement": 874, "perp": 874, "uu": 874, "segonn": 874, "_brain_surfac": 874, "_inner_skull_surfac": 874, "_outer_skull_surfac": 874, "_outer_skin_surfac": 874, "availablili": 874, "fov": 874, "dcm2niix": 874, "mne_organize_dicom": 874, "flash05": 874, "fat32": 874, "mri_ms_fitparm": 874, "mri_synthes": 874, "fsl_rigid_regist": 874, "flash5_reg": [874, 892], "cor": 874, "mri_make_bem_surfac": 874, "tringul": 874, "t_x": 874, "ti": 874, "mm3": 874, "hardli": 874, "mnitalairach": 874, "mni305": 874, "y_2": 874, "z_2": 874, "y_1": 874, "z_1": 874, "x_0": 874, "y_0": 874, "z_0": 874, "x_k": 874, "y_k": 874, "z_k": 874, "jk": 874, "9688": [874, 892], "0485": 874, "9189": 874, "t_1": 874, "s_1": 874, "s_n": 874, "t_2": 874, "filessepar": 874, "t_3": 874, "mghformat": 874, "t_4": 874, "hardcod": 874, "idiosyncrasi": 874, "conceiv": 874, "s_p": 874, "50mm": 874, "r_0": 874, "e_x": 874, "e_i": 874, "e_z": 874, "r_c": 874, "r_d": 874, "0d": 874, "n_k": 874, "w_": 874, "kp": 874, "sixteen": 874, "tm": [874, 877, 892], "centerpoint": 874, "mne_list_coil_def": 874, "3012": 874, "8mm": 874, "4001": 874, "wh": 874, "3600": 874, "4003": 874, "4004": 874, "4005": 874, "5001": 874, "5002": 874, "5003": 874, "6001": 874, "nx": 874, "ny": 874, "nz": [874, 892], "r_1": 874, "dotsc": 874, "r_m": 874, "mu_1": 874, "mu_m": 874, "int_": 874, "v_": 874, "ly": 874, "average_forward_solut": [874, 882], "ensu": 874, "posteriori": 874, "viabl": 874, "3p": 874, "unconstrain": 874, "mx": 874, "smoother": [874, 892], "arriv": 874, "bigl": 874, "bigr": 874, "u_c": 874, "lambda_c": 874, "grg": 874, "possess": 874, "varepsilon_k": 874, "sigma_k": 874, "rout": 874, "superscript": 874, "v_k": 874, "w_k": 874, "propto": 874, "dimensionless": 874, "tendenc": 874, "divis": [874, 892], "2_k": 874, "g_i": 874, "u_": 874, "lambda_": 874, "_i": 874, "noiseless": 874, "misfit": 874, "pi_k": 874, "recolor": 874, "eigenfield": 874, "n_d": 874, "a_d": 874, "postsynapt": 874, "microscop": 874, "rigidli": 874, "floc": 874, "thereaft": 874, "vloc": 874, "favor": [874, 892], "1p": 874, "2p": 874, "l_": 874, "eff": 874, "w_i": 874, "x_i": 874, "c_y": 874, "l_i": 874, "w_1": 874, "w_2": 874, "l_1": 874, "l_2": 874, "supposedli": 874, "x_j": 874, "t_j": 874, "biject": 874, "smudg": 874, "n_j": 874, "prod_": 874, "kindli": 875, "function_nam": 875, "w3school": 876, "carpentri": 876, "lesson": 876, "fiff_": 877, "startup": 877, "mne_ex": 877, "fiff_setup_read_raw": 877, "fiff_read_raw_seg": 877, "fiff_find_evok": 877, "fiff_read_bad_channel": 877, "fiff_read_ctf_comp": 877, "fiff_read_evok": 877, "fiff_read_evoked_al": 877, "fiff_read_meas_info": 877, "fiff_read_mri": 877, "fiff_read_proj": 877, "fiff_read_raw_segment_tim": 877, "fiff_pick_channel": 877, "fiff_pick_channels_evok": 877, "fiff_pick_info": 877, "fiff_pick_typ": 877, "fiff_pick_types_evok": 877, "fiff_invert_transform": 877, "fiff_reset_ch_po": 877, "fiff_transform_eeg_ch": 877, "fiff_transform_meg_ch": 877, "fiff_define_const": 877, "fiff_dir_tree_find": 877, "fiff_list_dir_tre": 877, "fiff_make_dir_tre": 877, "fiff_open": 877, "fiff_read_named_matrix": 877, "fiff_read_tag": 877, "fiff_read_tag_info": 877, "fiff_split_name_list": 877, "fiff_end_block": 877, "fiff_end_fil": 877, "fiff_start_block": 877, "fiff_start_fil": 877, "fiff_write_ch_info": 877, "fiff_write_coord_tran": 877, "fiff_write_ctf_comp": 877, "fiff_write_dig_point": 877, "fiff_write_complex": 877, "fiff_write_complex_matrix": 877, "fiff_write_doubl": 877, "fiff_write_double_complex": 877, "fiff_write_double_complex_matrix": 877, "fiff_write_double_matrix": 877, "fiff_write_evok": 877, "repons": 877, "fiff_write_float": 877, "fiff_write_float_matrix": 877, "fiff_write_id": 877, "fiff_write_int": 877, "fiff_write_int_matrix": 877, "fiff_write_name_list": 877, "fiff_write_named_matrix": 877, "fiff_write_proj": 877, "fiff_write_short": 877, "fiff_write_str": 877, "fiff_finish_writing_raw": 877, "fiff_start_writing_raw": 877, "fiff_write_dig_fil": 877, "fiff_write_raw_buff": 877, "mne_add_coil_def": 877, "mne_load_coil_def": 877, "mne_compensate_to": 877, "mne_get_current_comp": 877, "mne_make_compens": 877, "mne_make_projector_info": 877, "mne_make_projector": 877, "mne_set_current_comp": 877, "mne_pick_channels_cov": 877, "mne_pick_channels_forward": 877, "mne_read_bem_surfac": 877, "mne_read_cov": 877, "mne_read_epoch": 877, "mne_read_ev": 877, "mne_read_forward_solut": 877, "mne_read_inverse_oper": 877, "mne_read_morph_map": 877, "mne_read_noise_cov": 877, "mne_read_source_spac": 877, "mne_write_cov": 877, "mne_write_cov_fil": 877, "mne_write_ev": 877, "mne_write_inverse_sol_stc": 877, "mne_write_inverse_sol_w": 877, "mne_read_stc_fil": 877, "mne_read_stc_file1": 877, "mne_read_w_fil": 877, "mne_read_w_file1": 877, "mne_write_stc_fil": 877, "mne_write_stc_file1": 877, "mne_write_w_fil": 877, "mne_write_w_file1": 877, "mne_read_label_fil": 877, "mne_write_label_fil": 877, "mne_label_time_cours": 877, "mne_read_curvatur": 877, "mne_read_surfac": 877, "mne_reduce_surfac": 877, "reducepatch": 877, "mne_write_surfac": 877, "mne_block_diag": 877, "mne_combine_xyz": 877, "mne_file_nam": 877, "mne_find_channel": 877, "mne_find_source_space_hemi": 877, "mne_fread3": 877, "mne_fwrite3": 877, "mne_make_combined_event_fil": 877, "mne_omit_first_lin": 877, "mne_setup_toolbox": 877, "mne_transform_coordin": 877, "mne_collect_transform": 877, "mne_transpose_named_matrix": 877, "mne_transform_source_space_to": 877, "mne_ex_average_epoch": 877, "mne_ex_cancel_nois": 877, "mne_ex_compute_invers": 877, "mne_ex_data_set": 877, "mne_ex_evoked_grad_amp": 877, "mne_ex_read_epoch": 877, "mne_ex_read_evok": 877, "mne_ex_read_raw": 877, "mne_ex_read_write_raw": 877, "mne_copy_processing_histori": 877, "revis": 877, "coil_geometry_inform": 877, "fiffb_meas_info": 877, "mne_compute_raw_invers": 877, "fiffv_meg_ch": 877, "fiffv_ref_meg_ch": 877, "fiffv_eef_ch": 877, "fiffv_mcg_ch": 877, "mcg": 877, "fiffv_stim_ch": 877, "fiffv_eog_ch": 877, "fiffv_emg_ch": 877, "fiffv_ecg_ch": 877, "fiffv_misc_ch": 877, "fiffv_resp_ch": 877, "fiffv_coord_unknown": 877, "fiffv_coord_devic": 877, "fiffv_coord_isotrak": 877, "fiffv_coord_hpi": 877, "fiffv_coord_mri_slic": 877, "fiffv_coord_mri_displai": 877, "fiffv_coord_dicom_devic": 877, "fiffv_coord_imaging_devic": 877, "fiffv_mne_coord_tufts_eeg": 877, "tuft": 877, "fiffv_mne_coord_ctf_devic": 877, "1001": 877, "fiffv_mne_coord_ctf_head": 877, "fiffv_aspect_averag": 877, "fiffv_aspect_std_err": 877, "fiffv_aspect_singl": 877, "fiffv_aspect_subaverag": 877, "fiffv_aspect_altaverag": 877, "fiffv_aspect_sampl": 877, "fiffv_aspect_power_dens": 877, "fiffv_aspect_dipole_wav": 877, "fiffv_bem_surf_id_unknown": 877, "fiffv_bem_surf_id_brain": 877, "fiffv_bem_surf_id_skul": 877, "fiffv_bem_surf_id_head": 877, "fiffv_point_hpi": 877, "fiffv_point_ecg": 877, "fiffv_point_extra": 877, "fiffv_point_lpa": 877, "fiffv_point_rpa": 877, "fiffv_mne_meg": 877, "fiffv_mne_eeg": 877, "fiffv_mne_meg_eeg": 877, "fiffv_mne_unknown_cov": 877, "fiffv_mne_noise_cov": 877, "fiffv_mne_sensor_cov": 877, "fiffv_mne_source_cov": 877, "fiffv_mne_fmri_prior_cov": 877, "fiffv_mne_signal_cov": 877, "fiffv_mne_depth_prior_cov": 877, "fiffv_mne_orient_prior_cov": 877, "fiffv_proj_item_non": 877, "fiffv_proj_item_dip_fix": 877, "fiffv_proj_item_dip_rot": 877, "fiffv_proj_item_homog_grad": 877, "fiffv_proj_item_homog_field": 877, "fiffv_proj_item_eeg_avref": 877, "uint32": 877, "parent_id": 877, "nent": 877, "nchild": 877, "1970": [877, 892], "fiffv_coord": 877, "fiffv_mne_coord": 877, "fiff_point": 877, "num_point": 877, "char": [877, 892], "fv": 877, "struct": 877, "fiff_eeg_ch": 877, "coil_tran": 877, "eeg_loc": 877, "six": 877, "10unit_mul": 877, "fiffv_proj_item": 877, "fiffv_mne_proj_item": 877, "decalibr": 877, "row_cal": 877, "col_cal": 877, "tri_area": 877, "tri_cent": 877, "centroid": 877, "tri_nn": 877, "mne_add_patch_info": 877, "sol_grad": 877, "sing": 877, "eigen_lead": 877, "eigen_field": 877, "source_cov": 877, "cond1": 878, "cond2": 878, "addpath": 878, "pop_fileio": 878, "pop_eegfiltnew": 878, "pop_averef": 878, "pop_select": 878, "pop_runica": 878, "pop_binica": 878, "pop_compprop": 878, "comp_num": 878, "winhandl": 878, "comphead": 878, "pop_selectcomp": 878, "list_of_components_to_exclud": 878, "pop_epoch": 878, "eeg_epoch": 878, "pop_timtopo": 878, "pop_compareerp": 878, "eeg_epochs1": 878, "eeg_epochs2": 878, "pop_saveset": 878, "lfreq": 878, "hfreq": 878, "filtered_raw": 878, "bdfl": 879, "scheltienn": [879, 892], "cluster_based_statist": 880, "patsi": 880, "dmatric": 880, "2852": 880, "3585": 880, "openneuro": 880, "6687": 880, "adult": 880, "dcm": 880, "kymata": 880, "watch": 880, "bnci": 880, "horizon": 880, "gsoc": [880, 892], "fund": 880, "recruit": 880, "8221": 880, "rudimentari": 880, "crossspectrum": 880, "multitaperspectrum": 880, "6290": 880, "7671": 880, "8026": 880, "8724": 880, "9045": 880, "pr": 880, "6609": 880, "6629": 880, "6672": 880, "6673": 880, "8397": 880, "8892": 880, "mnefun": 880, "ptfce": 880, "mayavi": [880, 892], "7162": 880, "pde": 880, "swig": 880, "ambit": 880, "useless": 880, "cibuildwheel": 880, "nutmegtrip": 880, "youtub": [880, 892], "view_vol_stc": 880, "cloud": 880, "dask": 880, "czi": 880, "7751": 880, "docker": 880, "underscore_cas": 882, "themat": 882, "read_raw_nsx": 882, "read_mrk": 882, "get_meg_helmet_surf": 882, "get_volume_labels_from_src": [882, 892], "parse_config": 882, "read_evoked_besa": [882, 892], "read_evokeds_mff": [882, 892], "read_morph_map": [882, 892], "read_reject_paramet": 882, "write_label": 882, "export_epoch": [882, 892], "export_evok": [882, 892], "add_background_imag": 882, "compare_fiff": 882, "mne_analyze_colormap": 882, "plot_csd": 882, "plot_epochs_psd_topomap": [882, 892], "plot_evok": [882, 892], "plot_evoked_topomap": [882, 892], "plot_evoked_joint": [882, 892], "plot_ica_properti": [882, 892], "plot_ica_scor": [882, 892], "plot_ica_overlai": [882, 892], "plot_montag": [882, 892], "plot_raw_psd": [882, 892], "plot_regression_weight": [882, 892], "plot_volume_source_estim": [882, 892], "plot_tfr_topomap": [882, 892], "plot_topo_image_epoch": [882, 892], "get_3d_backend": [882, 892], "use_3d_backend": [882, 892], "close_3d_figur": 882, "close_all_3d_figur": 882, "get_browser_backend": [882, 892], "equalize_channel": [882, 892], "annotate_nan": [882, 892], "compute_fine_calibr": [882, 892], "compute_maxwell_basi": [882, 892], "ica_find_ecg_ev": 882, "ica_find_eog_ev": 882, "equalize_bad": [882, 892], "maxwell_filter_prepare_emptyroom": [882, 892], "read_eog_regress": 882, "regress_artifact": [882, 892], "read_ica_eeglab": [882, 892], "read_fine_calibr": 882, "write_fine_calibr": 882, "short_channel": [882, 892], "project_sensors_onto_brain": [882, 892], "make_montage_volum": [882, 892], "warp_montag": [882, 892], "estimate_ringing_sampl": 882, "extract_chpi_locs_kit": [882, 892], "concatenate_ev": 882, "count_ev": [882, 892], "count_annot": [882, 892], "match_event_nam": [882, 892], "shift_time_ev": [882, 892], "match_channel_ord": 882, "pick_channels_cov": 882, "compute_whiten": [882, 892], "write_fiduci": 882, "create_default_subject": [882, 892], "head_to_mni": 882, "head_to_mri": [882, 892], "read_lta": [882, 892], "apply_volume_registr": [882, 892], "apply_volume_registration_point": [882, 892], "add_source_space_dist": [882, 892], "decimate_surfac": [882, 892], "complete_surface_info": 882, "distance_to_bem": [882, 892], "compute_rank_invers": 882, "read_beamform": [882, 892], "grade_to_tri": 882, "grade_to_vertic": 882, "grow_label": [882, 892], "random_parcel": 882, "transform_surface_to": [882, 892], "get_decimated_surfac": [882, 892], "pick_channels_csd": 882, "dpss_window": [882, 892], "cwt": 882, "ttest_ind_no_p": [882, 892], "spatial_dist_adjac": [882, 892], "spatial_tris_adjac": [882, 892], "spatial_inter_hemi_adjac": [882, 892], "spatio_temporal_src_adjac": [882, 892], "spatio_temporal_dist_adjac": [882, 892], "select_source_in_label": 882, "psdestim": 882, "timefrequ": [882, 892], "open_doc": [882, 892], "set_log_fil": 882, "set_memmap_min_s": 882, "get_cuda_memori": 882, "set_cuda_devic": [882, 892], "11432": 892, "proloi": 892, "11720": 892, "gennadii": 892, "belonosov": 892, "11736": 892, "quotat": 892, "11718": 892, "11744": 892, "diptyajit": 892, "11719": 892, "11746": 892, "11740": 892, "11770": 892, "11800": 892, "11796": 892, "11830": 892, "11839": 892, "11841": 892, "11842": 892, "hamza": 892, "abdelhedi": 892, "11786": 892, "louviot": 892, "11773": 892, "yipe": 892, "zuo": 892, "11704": 892, "earl": 892, "richardson": 892, "11575": 892, "joshua": 892, "calder": 892, "indexerror": 892, "11808": 892, "11804": 892, "tse": 892, "11549": 892, "kern": 892, "11828": 892, "jacob": 892, "woessner": 892, "11730": 892, "11694": 892, "11721": 892, "errantli": 892, "11853": 892, "hang": 892, "_mpl_figur": 892, "11696": 892, "11698": 892, "11857": 892, "11733": 892, "led": 892, "11754": 892, "11755": 892, "11748": 892, "11846": 892, "fit_intercept_": 892, "sl": 892, "11852": 892, "11822": 892, "11778": 892, "11766": 892, "11862": 892, "11713": 892, "11445": 892, "11631": 892, "11469": 892, "sawradip": 892, "saha": 892, "11458": 892, "binn": 892, "11465": 892, "hyonyoung": 892, "shin": 892, "11366": 892, "11470": 892, "ebert": 892, "11078": 892, "barth\u00e9lemi": 892, "11397": 892, "11401": 892, "11407": 892, "11166": 892, "11388": 892, "11556": 892, "11419": 892, "11430": 892, "11440": 892, "11436": 892, "microelectrod": 892, "imwarp": 892, "transform_point": 892, "11572": 892, "11614": 892, "10554": 892, "11152": 892, "11632": 892, "11668": 892, "11679": 892, "qt6": 892, "aa_usehighdpipixmap": 892, "11662": 892, "florin": 892, "11479": 892, "stone": 892, "setuptool": 892, "11454": 892, "arn": 892, "pelzer": 892, "11666": 892, "timur": 892, "sokhin": 892, "11457": 892, "zvi": 892, "baratz": 892, "11505": 892, "fock": 892, "sanit": 892, "11399": 892, "splash": 892, "11398": 892, "11402": 892, "11421": 892, "11427": 892, "11441": 892, "11450": 892, "11489": 892, "inconsist": 892, "11473": 892, "11499": 892, "11409": 892, "11537": 892, "11562": 892, "11563": 892, "11521": 892, "11569": 892, "11502": 892, "gerster": 892, "11607": 892, "11612": 892, "11664": 892, "11623": 892, "11654": 892, "11683": 892, "11616": 892, "11500": 892, "aligned_ct": 892, "unalign": 892, "warp_montage_volum": 892, "pick_channels_evok": 892, "11665": 892, "torr": 892, "hasegan": 892, "dimitri": 892, "orfano": 892, "dinara": 892, "issagaliyeva": 892, "enzo": 892, "altamiranda": 892, "brayet": 892, "erkka": 892, "heinila": 892, "giulio": 892, "hakimeh": 892, "aslsardroud": 892, "jennif": 892, "behnk": 892, "jevri": 892, "luka": 892, "hecker": 892, "hennei": 892, "mauricio": 892, "cesped": 892, "michiru": 892, "kaneda": 892, "omer": 892, "shubi": 892, "pavel": 892, "navratil": 892, "santeri": 892, "ruuskanen": 892, "merk": 892, "tooma": 892, "anij\u00e4rv": 892, "11333": 892, "11237": 892, "11236": 892, "11241": 892, "repr": 892, "11357": 892, "11359": 892, "11096": 892, "11353": 892, "11283": 892, "11329": 892, "11375": 892, "11310": 892, "11289": 892, "tenorio": 892, "11235": 892, "11245": 892, "ear_left": 892, "ear_right": 892, "11255": 892, "11263": 892, "ortiz": 892, "11351": 892, "reject_": 892, "11244": 892, "11303": 892, "11290": 892, "wrongli": 892, "11248": 892, "11258": 892, "outli": 892, "11298": 892, "11345": 892, "11311": 892, "11300": 892, "11340": 892, "11318": 892, "11346": 892, "11344": 892, "11347": 892, "11293": 892, "11322": 892, "11369": 892, "11361": 892, "nowadai": 892, "interp_from": 892, "interp_kind": 892, "11371": 892, "11073": 892, "10656": 892, "10784": 892, "11011": 892, "11006": 892, "6233": 892, "10986": 892, "11048": 892, "8639": 892, "11083": 892, "11051": 892, "11020": 892, "11075": 892, "valerii": 892, "chirkov": 892, "electroderm": 892, "11090": 892, "11108": 892, "19080": 892, "11099": 892, "11077": 892, "11094": 892, "11095": 892, "11186": 892, "eduard": 892, "ort": 892, "11116": 892, "11147": 892, "11150": 892, "11185": 892, "11154": 892, "11141": 892, "11232": 892, "11159": 892, "11196": 892, "gemein": 892, "unlabel": 892, "11074": 892, "sebastiaan": 892, "mathot": 892, "11072": 892, "chetan": 892, "gohil": 892, "11004": 892, "carlstr\u00f6m": 892, "schad": 892, "11190": 892, "wetzel": 892, "11019": 892, "sena": 892, "11049": 892, "11084": 892, "11145": 892, "11182": 892, "11040": 892, "marian": 892, "dovgialo": 892, "11171": 892, "11181": 892, "11193": 892, "11102": 892, "11081": 892, "11191": 892, "6870": 892, "simeon": 892, "11197": 892, "11212": 892, "11203": 892, "11201": 892, "h\u00fcseyin": 892, "orkun": 892, "elma": 892, "deprecationwarn": 892, "11123": 892, "11050": 892, "show_toolbar": 892, "10184": 892, "skirt": 892, "add_channels_epoch": 892, "11180": 892, "11046": 892, "welzel": 892, "luzpaz": 892, "10974": 892, "ilia": 892, "machaira": 892, "10942": 892, "tziona": 892, "nessaiv": 892, "10922": 892, "mingjian": 892, "he": 892, "10736": 892, "jordan": 892, "drew": 892, "10632": 892, "courtemanch": 892, "10515": 892, "alessandro": 892, "tonin": 892, "10555": 892, "powel": 892, "10627": 892, "evan": 892, "hathawai": 892, "10615": 892, "10501": 892, "10460": 892, "10544": 892, "10720": 892, "10464": 892, "10699": 892, "10534": 892, "10568": 892, "parallel_backend": 892, "10567": 892, "10533": 892, "10557": 892, "10591": 892, "10571": 892, "10587": 892, "10125": 892, "benerradi": 892, "10610": 892, "10614": 892, "10633": 892, "10661": 892, "timeformat": 892, "yyyi": 892, "_convert_tim": 892, "10674": 892, "10694": 892, "10572": 892, "10373": 892, "10284": 892, "10749": 892, "10788": 892, "10892": 892, "10940": 892, "vref": 892, "10823": 892, "10979": 892, "_project_onto_surfac": 892, "return_nn": 892, "10930": 892, "10927": 892, "reza": 892, "nasri": 892, "hypnodyn": 892, "zmax": 892, "10754": 892, "frederik": 892, "weber": 892, "10718": 892, "t1t2": 892, "10639": 892, "toivonen": 892, "10217": 892, "wang": 892, "10517": 892, "10470": 892, "dold": 892, "10485": 892, "10487": 892, "10500": 892, "10491": 892, "10662": 892, "10866": 892, "10957": 892, "10513": 892, "10493": 892, "10504": 892, "10521": 892, "10547": 892, "10543": 892, "10912": 892, "10560": 892, "10619": 892, "shoorangiz": 892, "10664": 892, "honor": 892, "10686": 892, "10685": 892, "10688": 892, "8754": 892, "10703": 892, "10730": 892, "10753": 892, "10765": 892, "po6": 892, "blender": 892, "10778": 892, "10802": 892, "10471": 892, "10851": 892, "10898": 892, "10990": 892, "10968": 892, "10936": 892, "10963": 892, "10978": 892, "10531": 892, "bilinear": 892, "set_interpol": 892, "10617": 892, "10715": 892, "10950": 892, "10925": 892, "10945": 892, "adelin": 892, "fecker": 892, "ciok": 892, "archit": 892, "singhal": 892, "ashlei": 892, "beaslei": 892, "dominiqu": 892, "makowski": 892, "hamid": 892, "maymandi": 892, "naveen": 892, "srinivasan": 892, "sondr": 892, "foslien": 892, "10396": 892, "10089": 892, "senwen": 892, "deng": 892, "10076": 892, "zerfowski": 892, "10054": 892, "etienn": 892, "montalivet": 892, "10174": 892, "veillett": 892, "10307": 892, "10281": 892, "9952": 892, "10379": 892, "9922": 892, "9978": 892, "9994": 892, "9929": 892, "concis": 892, "__repr__": 892, "10042": 892, "sosulski": 892, "10056": 892, "10077": 892, "10102": 892, "10058": 892, "10109": 892, "10115": 892, "10119": 892, "10114": 892, "10116": 892, "dpi": 892, "10126": 892, "10129": 892, "10135": 892, "10142": 892, "10166": 892, "10175": 892, "10182": 892, "10186": 892, "10185": 892, "9969": 892, "10019": 892, "10200": 892, "10255": 892, "10202": 892, "9972": 892, "10206": 892, "10220": 892, "10230": 892, "10249": 892, "10243": 892, "10212": 892, "ui": 892, "10222": 892, "10183": 892, "10247": 892, "10297": 892, "10299": 892, "10330": 892, "10384": 892, "10417": 892, "10418": 892, "10408": 892, "subsurfac": 892, "10421": 892, "teve": 892, "latin": 892, "10429": 892, "eberlein": 892, "10431": 892, "rawmff": 892, "10304": 892, "10361": 892, "shift_jist": 892, "10356": 892, "10093": 892, "adina": 892, "wagner": 892, "loadtxt": 892, "10189": 892, "federico": 892, "zamberlan": 892, "nikolai": 892, "chapochnikov": 892, "9957": 892, "9966": 892, "9998": 892, "9968": 892, "alphanumer": 892, "10002": 892, "9975": 892, "9980": 892, "9990": 892, "suboptim": 892, "9991": 892, "10004": 892, "9970": 892, "10021": 892, "10040": 892, "10358": 892, "10047": 892, "10399": 892, "10073": 892, "10087": 892, "annotate_": 892, "meas_tim": 892, "10067": 892, "10118": 892, "10074": 892, "10082": 892, "10112": 892, "trip": 892, "10177": 892, "10127": 892, "10132": 892, "10095": 892, "10176": 892, "stout": 892, "10210": 892, "10235": 892, "10267": 892, "german": 892, "de_d": 892, "french": 892, "fr_fr": 892, "italian": 892, "it_it": 892, "10277": 892, "10292": 892, "10309": 892, "10265": 892, "10415": 892, "initial_valu": 892, "10289": 892, "10324": 892, "10342": 892, "10347": 892, "10313": 892, "10400": 892, "10335": 892, "mislead": 892, "10393": 892, "10392": 892, "10401": 892, "9960": 892, "10039": 892, "10348": 892, "annotate_flat": 892, "10143": 892, "max_ori_out": 892, "10366": 892, "10323": 892, "tempita": 892, "10211": 892, "julia": 892, "guiomar": 892, "niso": 892, "gal\u00e1n": 892, "steve": 892, "matindi": 892, "hartmann": 892, "julien": 892, "derollepot": 892, "xiaokai": 892, "xia": 892, "bannier": 892, "darin": 892, "erat": 892, "sleiter": 892, "gate": 892, "evgeni": 892, "goldstein": 892, "riessariu": 892, "stargardski": 892, "9801": 892, "9575": 892, "nirsport2": 892, "9348": 892, "9401": 892, "9376": 892, "9430": 892, "9481": 892, "9637": 892, "9872": 892, "9782": 892, "9858": 892, "9640": 892, "6888": 892, "9892": 892, "9725": 892, "ckdtree": 892, "9568": 892, "9643": 892, "9369": 892, "9427": 892, "9391": 892, "9396": 892, "9424": 892, "9403": 892, "9463": 892, "9431": 892, "9443": 892, "9406": 892, "9438": 892, "datablock": 892, "acquist": 892, "9437": 892, "raimondo": 892, "9445": 892, "9419": 892, "9458": 892, "9444": 892, "9503": 892, "9484": 892, "9697": 892, "9468": 892, "9514": 892, "erica": 892, "9541": 892, "9519": 892, "9525": 892, "9529": 892, "9558": 892, "9555": 892, "9553": 892, "insens": 892, "9544": 892, "9556": 892, "9578": 892, "9570": 892, "9545": 892, "9540": 892, "9601": 892, "9605": 892, "abort": 892, "9614": 892, "9516": 892, "9618": 892, "9658": 892, "9585": 892, "9682": 892, "9684": 892, "9789": 892, "9694": 892, "9586": 892, "9742": 892, "9796": 892, "9763": 892, "9784": 892, "9810": 892, "revamp": 892, "9754": 892, "9847": 892, "9860": 892, "9861": 892, "9862": 892, "9863": 892, "9871": 892, "9881": 892, "9891": 892, "9795": 892, "9800": 892, "9613": 892, "9845": 892, "9851": 892, "9869": 892, "9859": 892, "9687": 892, "9708": 892, "9706": 892, "9378": 892, "9381": 892, "9712": 892, "9719": 892, "chronolog": 892, "9765": 892, "9849": 892, "9897": 892, "9920": 892, "9384": 892, "9404": 892, "9435": 892, "9531": 892, "9447": 892, "assertionerror": 892, "9612": 892, "9831": 892, "protect": 892, "9522": 892, "9485": 892, "9513": 892, "9489": 892, "9524": 892, "9603": 892, "9528": 892, "imposs": 892, "9893": 892, "9535": 892, "9564": 892, "9565": 892, "9629": 892, "9771": 892, "9607": 892, "9663": 892, "9630": 892, "9580": 892, "9758": 892, "dollar": 892, "9695": 892, "9746": 892, "9799": 892, "9804": 892, "9777": 892, "9780": 892, "9933": 892, "9864": 892, "9873": 892, "9940": 892, "9867": 892, "9904": 892, "pysurf": 892, "kit2fiff": 892, "mne_kit_gui": 892, "9505": 892, "9596": 892, "prox": 892, "outperform": 892, "9608": 892, "9493": 892, "9685": 892, "has_": 892, "_data": 892, "9781": 892, "add_figs_to_sect": 892, "add_slider_to_sect": 892, "add_images_to_sect": 892, "add_bem_to_sect": 892, "add_htmls_to_sect": 892, "sort_sect": 892, "9815": 892, "center_cmap": 892, "9843": 892, "detect_artifact": 892, "9909": 892, "fede": 892, "gansheng": 892, "banvil": 892, "josh": 892, "koen": 892, "sumalyo": 892, "datta": 892, "pade": 892, "koehler": 892, "rotem": 892, "falach": 892, "sanderson": 892, "enrico": 892, "varano": 892, "judi": 892, "zhu": 892, "matteo": 892, "anelli": 892, "apoorva": 892, "karek": 892, "silvia": 892, "cotroneo": 892, "maggi": 892, "9192": 892, "9285": 892, "9278": 892, "9124": 892, "9203": 892, "9174": 892, "refactor": 892, "9088": 892, "9156": 892, "9043": 892, "9096": 892, "8867": 892, "8739": 892, "9169": 892, "yokogawa": 892, "8813": 892, "8799": 892, "ipyvtk_simpl": 892, "8503": 892, "8346": 892, "8896": 892, "8723": 892, "8738": 892, "8789": 892, "9268": 892, "8790": 892, "8697": 892, "8801": 892, "8829": 892, "8744": 892, "8762": 892, "9037": 892, "8793": 892, "9262": 892, "keypress": 892, "8806": 892, "starstim": 892, "enobio": 892, "8734": 892, "tristan": 892, "stenner": 892, "8760": 892, "8783": 892, "8822": 892, "8771": 892, "8805": 892, "8794": 892, "auto_clos": 892, "8730": 892, "8841": 892, "yu": 892, "luo": 892, "8858": 892, "checker": 892, "pylanc": 892, "8862": 892, "8874": 892, "interobail": 892, "8868": 892, "qt_mac_wants_lay": 892, "8959": 892, "8879": 892, "8834": 892, "9023": 892, "9015": 892, "9087": 892, "9113": 892, "9118": 892, "9103": 892, "9175": 892, "9149": 892, "9166": 892, "bierer": 892, "9210": 892, "9136": 892, "9241": 892, "9261": 892, "9269": 892, "9270": 892, "9141": 892, "9347": 892, "misbehav": 892, "8013": 892, "9207": 892, "9187": 892, "9151": 892, "9162": 892, "9152": 892, "x_label": 892, "9115": 892, "9062": 892, "8989": 892, "spectral_connect": 892, "8839": 892, "8844": 892, "8311": 892, "macosx": 892, "8688": 892, "8983": 892, "superset": 892, "8675": 892, "8713": 892, "8689": 892, "8954": 892, "8884": 892, "num_sampl": 892, "duration_in_sec": 892, "8712": 892, "8780": 892, "8804": 892, "8842": 892, "8857": 892, "9315": 892, "8956": 892, "9284": 892, "9317": 892, "8845": 892, "8811": 892, "bailei": 892, "8736": 892, "8831": 892, "8728": 892, "8731": 892, "8996": 892, "8752": 892, "8759": 892, "8775": 892, "8800": 892, "8817": 892, "8821": 892, "8856": 892, "8965": 892, "8985": 892, "8891": 892, "8963": 892, "9109": 892, "9178": 892, "9252": 892, "9027": 892, "9236": 892, "9246": 892, "9305": 892, "9277": 892, "9099": 892, "plot_sensors_connect": 892, "cbar_label": 892, "9248": 892, "read_select": 892, "8870": 892, "tf_dic": 892, "9122": 892, "9033": 892, "ana": 892, "radanov": 892, "magalvan": 892, "mista": 892, "christina": 892, "zhao": 892, "giorgio": 892, "marinato": 892, "jori": 892, "den": 892, "bossch": 892, "gensollen": 892, "treguer": 892, "austin": 892, "hurst": 892, "aniket": 892, "pradhan": 892, "hongjiang": 892, "kuziek": 892, "qianliang": 892, "tod": 892, "flak": 892, "8354": 892, "7070": 892, "imgag": 892, "7717": 892, "kyle": 892, "mathewson": 892, "8275": 892, "8445": 892, "keith": 892, "doell": 892, "8553": 892, "8351": 892, "8190": 892, "8539": 892, "8379": 892, "8366": 892, "8642": 892, "8447": 892, "8323": 892, "8449": 892, "8402": 892, "8460": 892, "8532": 892, "8482": 892, "8608": 892, "8502": 892, "8515": 892, "8622": 892, "8381": 892, "8584": 892, "8442": 892, "8534": 892, "8624": 892, "8519": 892, "8452": 892, "8415": 892, "8395": 892, "8658": 892, "cascad": 892, "8633": 892, "8580": 892, "8400": 892, "test_egi": 892, "mandatorili": 892, "8474": 892, "8339": 892, "8558": 892, "s390x": 892, "8618": 892, "8594": 892, "8610": 892, "8377": 892, "8285": 892, "8344": 892, "8318": 892, "8637": 892, "8448": 892, "8283": 892, "name_split": 892, "01_meg": 892, "name_meg": 892, "8464": 892, "8326": 892, "8343": 892, "8425": 892, "8317": 892, "8663": 892, "8320": 892, "8303": 892, "8484": 892, "8349": 892, "max_pca_compon": 892, "max_pca_components_": 892, "8321": 892, "8341": 892, "everyhwer": 892, "8368": 892, "8393": 892, "8416": 892, "8434": 892, "8486": 892, "8491": 892, "8492": 892, "8545": 892, "8590": 892, "tukei": 892, "8542": 892, "8520": 892, "8589": 892, "8564": 892, "8605": 892, "8374": 892, "8357": 892, "8356": 892, "8389": 892, "justu": 892, "schwabed": 892, "mad": 892, "jensen": 892, "mikolaj": 892, "rahul": 892, "nadkarni": 892, "lau": 892, "m\u00f8ller": 892, "andersen": 892, "sedivi": 892, "donckt": 892, "svea": 892, "meyer": 892, "lx37": 892, "rai": 892, "n_iter_sdr": 892, "immut": 892, "fxaa": 892, "_split": 892, "_part": 892, "read_raw_xxx": 892, "simpler": 892, "permit": 892, "outermost": 892, "setup_forward_model": 892, "conjug": 892, "throw": 892, "spatio_temporal_src_connect": 892, "find_ch_connect": 892, "read_ch_connect": 892, "spatial_dist_connect": 892, "spatial_inter_hemi_connect": 892, "spatial_src_connect": 892, "spatial_tris_connect": 892, "spatio_temporal_dist_connect": 892, "spatio_temporal_tris_connect": 892, "normalize_fwd": 892, "stc_mix": 892, "read_dig_captrack": 892, "spell": 892, "captrack": 892, "mark_flat": 892, "alejandro": 892, "weinstein": 892, "anton": 892, "nikola": 892, "waniek": 892, "harmelen": 892, "sara": 892, "sommariva": 892, "chapochn": 892, "mshader": 892, "sophi": 892, "herbst": 892, "victor": 892, "ferat": 892, "mohammad": 892, "daneshzand": 892, "reppling": 892, "plv": 892, "dmitrii": 892, "altukhov": 892, "epochs_color": 892, "prepare_bem_model": 892, "compromis": 892, "roc_auc_ovo": 892, "roc_auc_ovo_weight": 892, "sebastian": 892, "old_tim": 892, "subprocess": 892, "htp": 892, "insuffici": 892, "demetr": 892, "kosta": 892, "gridsearchcv": 892, "chun": 892, "hui": 892, "henrich": 892, "kolkhorst": 892, "fu": 892, "geoff": 892, "brookshir": 892, "eegmi_url": 892, "ramiro": 892, "gatti": 892, "get_channel_type_const": 892, "bump": 892, "tandem": 892, "point_spread_funct": 892, "cross_talk_funct": 892, "ariel": 892, "rokem": 892, "jos\u00e9": 892, "garc\u00eda": 892, "moham": 892, "sherif": 892, "nataliia": 892, "kozhemiako": 892, "legrand": 892, "f\u00e9rat": 892, "markerfil": 892, "dirk": 892, "g\u00fctlin": 892, "10x": 892, "jit": 892, "ryb\u00e1\u0159": 892, "abram": 892, "hindl": 892, "eberhard": 892, "eich": 892, "radman": 892, "hidpi": 892, "pycord": 892, "read_montag": 892, "read_dig_montag": 892, "set_dig": 892, "update_ch_nam": 892, "raise_if_subset": 892, "_smsh_": 892, "_smartshield": 892, "max_tick": 892, "show_legend": 892, "biosig": 892, "nathali": 892, "gayraud": 892, "crist\u00f3bal": 892, "mo\u00ebnn": 892, "loccoz": 892, "mixin": 892, "lslclient": 892, "lsl": 892, "chala": 892, "mocklslstream": 892, "roujanski": 892, "fault": 892, "kovrig": 892, "n_pad": 892, "bruno": 892, "nicenboim": 892, "32bit": 892, "edge_": 892, "retina": 892, "larri": 892, "eisenman": 892, "mishandl": 892, "haslach": 892, "clean_eog_ecg": 892, "jeythekei": 892, "_criterion": 892, "katarina": 892, "slama": 892, "synthesi": 892, "find_edf_ev": 892, "patch_info": 892, "castano": 892, "finder": 892, "rasmu": 892, "zetter": 892, "molfes": 892, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 892, "gutstein": 892, "trig_shift_by_typ": 892, "read_annotations_brainvis": 892, "get_blas_func": 892, "_compute_covariance_auto": 892, "onewai": 892, "marcin": 892, "koculak": 892, "buildup": 892, "incom": 892, "bethard": 892, "dateutil": 892, "jasper": 892, "bosch": 892, "_current": 892, "unit_noise_gain": 892, "buildqa": 892, "read_annotations_eeglab": 892, "annotmap": 892, "runtimeexcept": 892, "morph_precomput": 892, "compute_morph_matrix": 892, "morph_data_precomput": 892, "pycuda": 892, "warn_explicit": 892, "save_stc_as_volum": 892, "stop_receive_thread": 892, "johan": 892, "meer": 892, "kambiz": 892, "tavabi": 892, "lorenz": 892, "esch": 892, "manu": 892, "sutela": 892, "perri": 892, "sergei": 892, "antopolskii": 892, "teekuninga": 892, "jochmann": 892, "dupr\u00e9": 892, "workaround": 892, "trainsform": 892, "dubarri": 892, "tf_mxne_optim": 892, "mxne_optim": 892, "multidictionari": 892, "image_mask": 892, "csd_epoch": 892, "csd_arrai": 892, "oleh": 892, "kozynet": 892, "lcmv_epoch": 892, "lcmv_raw": 892, "braboszcz": 892, "desislava": 892, "petkova": 892, "krzemi\u0144ski": 892, "hornberg": 892, "juergen": 892, "katrin": 892, "leinweb": 892, "yaroslav": 892, "halchenko": 892, "baptist": 892, "schiratti": 892, "utilis": 892, "dgap_l21l1": 892, "ramonapariciog": 892, "get_pos2d": 892, "\u03c7\u00b2": 892, "writabl": 892, "plot_roi_erpimage_by_rt": 892, "ansi": 892, "codepag": 892, "okba": 892, "bekhelifi": 892, "boggess": 892, "duemos": 892, "nielsen": 892, "luk\u00e1\u0161": 892, "hejtm\u00e1nek": 892, "_virtual": 892, "treatment": 892, "mrn": 892, "reformat": 892, "timedecod": 892, "generalizationacrosstim": 892, "plot_gat_tim": 892, "plot_gat_matrix": 892, "read_events_eeglab": 892, "plot_tran": 892, "tf_lcmv": 892, "scale_tim": 892, "scalings_tim": 892, "akshay0724": 892, "rudiuk": 892, "dykstra": 892, "laetitia": 892, "grabot": 892, "proulx": 892, "apariciogarcia": 892, "robin": 892, "tibor": 892, "schirrmeist": 892, "rodrigo": 892, "h\u00fcbner": 892, "toddler": 892, "fasttrack": 892, "brovelli": 892, "_plot_topo_onpick": 892, "nikla": 892, "wilm": 892, "rantala": 892, "_bad_drop": 892, "_filenam": 892, "pasler": 892, "predict_mod": 892, "chanloc": 892, "dgap_l21": 892, "band_pass_filt": 892, "band_stop_filt": 892, "low_pass_filt": 892, "high_pass_filt": 892, "eeg_sensor": 892, "typecheck": 892, "leonardo": 892, "barbosa": 892, "superflu": 892, "hermann": 892, "sonntag": 892, "jakub": 892, "kaczmarzyk": 892, "lorenzo": 892, "alfin": 892, "visconti": 892, "nick": 892, "foti": 892, "pop_prop": 892, "maryland": 892, "preview": 892, "raimundo": 892, "hid": 892, "martinez": 892, "pablo": 892, "aria": 892, "duma": 892, "fieldtripcli": 892, "get_data_as_epoch": 892, "unitsposit": 892, "mullin": 892, "bva": 892, "strictest": 892, "hojlund": 892, "niediek": 892, "add_eeg_ref": 892, "csd_compute_epoch": 892, "ev2": 892, "\u00b5": 892, "aru": 892, "unsupport": 892, "config_opt": 892, "epochsvector": 892, "favour": 892, "cwt_morlet": 892, "single_trial_pow": 892, "committ": 892, "camilo": 892, "lamu": 892, "f\u00e9lix": 892, "kraus": 892, "shlomo": 892, "poil": 892, "show_info": 892, "compute_raw_psd": 892, "compute_epochs_psd": 892, "614990234": 892, "00064103": 892, "99897607": 892, "train_tim": 892, "ecg_criterion": 892, "eog_criterion": 892, "natali": 892, "klein": 892, "coordinan": 892, "ware": 892, "score_mod": 892, "stimserv": 892, "ip": 892, "mesh_color": 892, "multitaper_psd": 892, "vertor": 892, "renorm": 892, "drop_bad_epoch": 892, "drop_epoch": 892, "do_forward_solut": 892, "kaichogami": 892, "cl\u00e9ment": 892, "moutard": 892, "martinbab": 892, "sagun": 892, "pai": 892, "sourav": 892, "kambyses": 892, "pbnsilva": 892, "sviter": 892, "zuxfoucault": 892, "nenonen": 892, "add_eeg_average_proj": 892, "n_samp_tot": 892, "emilyps14": 892, "lennyvarghes": 892, "freeview_bem_surfac": 892, "desanti": 892, "_setup_vmin_vmax": 892, "concatenatechannel": 892, "redesign": 892, "rewrot": 892, "plot_image_epoch": 892, "preload_data": 892, "santi": 892, "roan": 892, "laplant": 892, "wakeman": 892, "add_sect": 892, "marmaduk": 892, "woodman": 892, "whiten_evok": 892, "oddbal": 892, "label_1": 892, "label_2": 892, "savitski": 892, "_baseraw": 892, "prof": 892, "decoupl": 892, "read_hsp": 892, "read_elp": 892, "write_hsp": 892, "write_mrk": 892, "label_time_cours": 892, "as_data_fram": 892, "pick_types_evok": 892, "textbox": 892, "iir_filter_raw": 892, "ingoo": 892, "kj": 892, "basil": 892, "pinsard": 892, "hafeza": 892, "anevar": 892, "manoj": 892, "kumar": 892, "tucker": 892, "ward": 892, "radic": 892, "tack": 892, "equalize_channnel": 892, "s\u00e9bastien": 892, "connector": 892, "cathi": 892, "nangini": 892, "succinctli": 892, "breuer": 892, "aesthet": 892, "qunxi": 892, "drop_pick": 892, "labels_from_parc": 892, "parc_from_label": 892, "setno": 892, "plot_": 892, "praveen": 892, "sripad": 892, "tanai": 892, "saket": 892, "choudhari": 892, "brad": 892, "buran": 892, "stimclient": 892, "rtclient": 892, "mockrtclient": 892, "trelli": 892, "ki2fiff": 892, "pick_norm": 892, "write_stc": 892, "olivetti": 892, "kornblith": 892, "smarter": 892, "sources_as_epoch": 892, "psi": 892, "mne_compute_proj_eog": 892, "applicationon": 892, "proj_act": 892, "keep_comp": 892, "dest_comp": 892, "speedup": 892, "clike": 892, "l21": 892, "bessel": 892, "time_to_index": 892, "mne_compute_proj_ecg": 892, "mne_maxfilt": 892, "loui": 892, "thibault": 892, "ellen": 892, "ruzich": 892}, "objects": {"": [[882, 0, 0, "-", "mne"]], "mne": [[258, 1, 1, "", "AcqParserFIF"], [259, 1, 1, "", "Annotations"], [260, 1, 1, "", "BaseEpochs"], [261, 1, 1, "", "BiHemiLabel"], [262, 1, 1, "", "Covariance"], [263, 1, 1, "", "Dipole"], [264, 1, 1, "", "DipoleFixed"], [265, 1, 1, "", "Epochs"], [266, 1, 1, "", "EpochsArray"], [267, 1, 1, "", "Evoked"], [268, 1, 1, "", "EvokedArray"], [269, 1, 1, "", "Forward"], [270, 1, 1, "", "Info"], [271, 1, 1, "", "Label"], [272, 1, 1, "", "MixedSourceEstimate"], [273, 1, 1, "", "MixedVectorSourceEstimate"], [274, 1, 1, "", "Projection"], [275, 1, 1, "", "Report"], [276, 1, 1, "", "SourceEstimate"], [277, 1, 1, "", "SourceMorph"], [278, 1, 1, "", "SourceSpaces"], [279, 1, 1, "", "VectorSourceEstimate"], [280, 1, 1, "", "VolSourceEstimate"], [281, 1, 1, "", "VolVectorSourceEstimate"], [282, 4, 1, "", "add_reference_channels"], [283, 4, 1, "", "add_source_space_distances"], [284, 4, 1, "", "annotations_from_events"], [285, 4, 1, "", "apply_forward"], [286, 4, 1, "", "apply_forward_raw"], [287, 4, 1, "", "average_forward_solutions"], [886, 0, 0, "-", "baseline"], [860, 0, 0, "-", "beamformer"], [255, 0, 0, "-", "bem"], [312, 4, 1, "", "channel_indices_by_type"], [313, 4, 1, "", "channel_type"], [881, 0, 0, "-", "channels"], [881, 0, 0, "-", "chpi"], [355, 4, 1, "", "combine_evoked"], [356, 4, 1, "", "compute_covariance"], [357, 4, 1, "", "compute_proj_epochs"], [358, 4, 1, "", "compute_proj_evoked"], [359, 4, 1, "", "compute_proj_raw"], [360, 4, 1, "", "compute_rank"], [361, 4, 1, "", "compute_raw_covariance"], [362, 4, 1, "", "compute_source_morph"], [363, 4, 1, "", "concatenate_epochs"], [364, 4, 1, "", "concatenate_events"], [365, 4, 1, "", "concatenate_raws"], [366, 4, 1, "", "convert_forward_solution"], [370, 4, 1, "", "count_annotations"], [371, 4, 1, "", "count_events"], [375, 4, 1, "", "create_default_subject"], [376, 4, 1, "", "create_info"], [861, 0, 0, "-", "cuda"], [250, 0, 0, "-", "datasets"], [413, 4, 1, "", "decimate_surface"], [251, 0, 0, "-", "decoding"], [433, 4, 1, "", "dig_mri_distances"], [860, 0, 0, "-", "dipole"], [252, 0, 0, "-", "epochs"], [439, 4, 1, "", "equalize_channels"], [252, 0, 0, "-", "event"], [443, 4, 1, "", "events_from_annotations"], [253, 0, 0, "-", "export"], [448, 4, 1, "", "extract_label_time_course"], [881, 0, 0, "-", "filter"], [455, 4, 1, "", "find_events"], [456, 4, 1, "", "find_stim_steps"], [457, 4, 1, "", "fit_dipole"], [462, 4, 1, "", "get_config"], [463, 4, 1, "", "get_config_path"], [464, 4, 1, "", "get_head_surf"], [465, 4, 1, "", "get_meg_helmet_surf"], [466, 4, 1, "", "get_montage_volume_labels"], [467, 4, 1, "", "get_volume_labels_from_aseg"], [468, 4, 1, "", "get_volume_labels_from_src"], [469, 4, 1, "", "grade_to_tris"], [470, 4, 1, "", "grade_to_vertices"], [471, 4, 1, "", "grand_average"], [472, 4, 1, "", "grow_labels"], [474, 4, 1, "", "head_to_mni"], [475, 4, 1, "", "head_to_mri"], [860, 0, 0, "-", "inverse_sparse"], [883, 0, 0, "-", "io"], [517, 4, 1, "", "label_sign_flip"], [518, 4, 1, "", "labels_to_stc"], [519, 4, 1, "", "make_ad_hoc_cov"], [520, 4, 1, "", "make_bem_model"], [521, 4, 1, "", "make_bem_solution"], [522, 4, 1, "", "make_field_map"], [523, 4, 1, "", "make_fixed_length_epochs"], [524, 4, 1, "", "make_fixed_length_events"], [525, 4, 1, "", "make_forward_dipole"], [526, 4, 1, "", "make_forward_solution"], [527, 4, 1, "", "make_sphere_model"], [528, 4, 1, "", "match_channel_orders"], [529, 4, 1, "", "merge_events"], [860, 0, 0, "-", "minimum_norm"], [550, 4, 1, "", "morph_labels"], [551, 4, 1, "", "morph_source_spaces"], [552, 4, 1, "", "open_docs"], [553, 4, 1, "", "open_report"], [554, 4, 1, "", "parse_config"], [555, 4, 1, "", "pick_channels"], [556, 4, 1, "", "pick_channels_cov"], [557, 4, 1, "", "pick_channels_forward"], [558, 4, 1, "", "pick_channels_regexp"], [559, 4, 1, "", "pick_events"], [560, 4, 1, "", "pick_info"], [561, 4, 1, "", "pick_types"], [562, 4, 1, "", "pick_types_forward"], [881, 0, 0, "-", "preprocessing"], [616, 4, 1, "", "random_parcellation"], [617, 4, 1, "", "read_annotations"], [618, 4, 1, "", "read_bem_solution"], [619, 4, 1, "", "read_bem_surfaces"], [620, 4, 1, "", "read_cov"], [621, 4, 1, "", "read_dipole"], [622, 4, 1, "", "read_epochs"], [623, 4, 1, "", "read_epochs_eeglab"], [624, 4, 1, "", "read_epochs_fieldtrip"], [625, 4, 1, "", "read_epochs_kit"], [626, 4, 1, "", "read_events"], [627, 4, 1, "", "read_evoked_besa"], [628, 4, 1, "", "read_evoked_fieldtrip"], [629, 4, 1, "", "read_evokeds"], [630, 4, 1, "", "read_evokeds_mff"], [631, 4, 1, "", "read_forward_solution"], [632, 4, 1, "", "read_freesurfer_lut"], [633, 4, 1, "", "read_label"], [634, 4, 1, "", "read_labels_from_annot"], [635, 4, 1, "", "read_lta"], [636, 4, 1, "", "read_morph_map"], [637, 4, 1, "", "read_proj"], [638, 4, 1, "", "read_reject_parameters"], [639, 4, 1, "", "read_source_estimate"], [640, 4, 1, "", "read_source_morph"], [641, 4, 1, "", "read_source_spaces"], [642, 4, 1, "", "read_surface"], [643, 4, 1, "", "read_talxfm"], [644, 4, 1, "", "read_trans"], [645, 4, 1, "", "read_tri"], [646, 4, 1, "", "read_vectorview_selection"], [647, 4, 1, "", "rename_channels"], [648, 4, 1, "", "scale_bem"], [649, 4, 1, "", "scale_labels"], [650, 4, 1, "", "scale_mri"], [651, 4, 1, "", "scale_source_space"], [652, 4, 1, "", "sensitivity_map"], [653, 4, 1, "", "set_bipolar_reference"], [654, 4, 1, "", "set_cache_dir"], [655, 4, 1, "", "set_config"], [656, 4, 1, "", "set_eeg_reference"], [657, 4, 1, "", "set_log_file"], [658, 4, 1, "", "set_log_level"], [659, 4, 1, "", "set_memmap_min_size"], [660, 4, 1, "", "setup_source_space"], [661, 4, 1, "", "setup_volume_source_space"], [887, 0, 0, "-", "simulation"], [682, 4, 1, "", "spatial_dist_adjacency"], [683, 4, 1, "", "spatial_inter_hemi_adjacency"], [684, 4, 1, "", "spatial_src_adjacency"], [685, 4, 1, "", "spatial_tris_adjacency"], [686, 4, 1, "", "spatio_temporal_dist_adjacency"], [687, 4, 1, "", "spatio_temporal_src_adjacency"], [688, 4, 1, "", "spatio_temporal_tris_adjacency"], [689, 4, 1, "", "split_label"], [889, 0, 0, "-", "stats"], [707, 4, 1, "", "stc_near_sensors"], [708, 4, 1, "", "stc_to_label"], [711, 4, 1, "", "sys_info"], [890, 0, 0, "-", "time_frequency"], [746, 4, 1, "", "transform_surface_to"], [881, 0, 0, "-", "transforms"], [754, 4, 1, "", "use_coil_def"], [755, 1, 1, "", "use_log_level"], [861, 0, 0, "-", "utils"], [758, 4, 1, "", "verbose"], [759, 4, 1, "", "vertex_to_mni"], [891, 0, 0, "-", "viz"], [833, 4, 1, "", "what"], [834, 4, 1, "", "write_bem_solution"], [835, 4, 1, "", "write_bem_surfaces"], [836, 4, 1, "", "write_cov"], [837, 4, 1, "", "write_events"], [838, 4, 1, "", "write_evokeds"], [839, 4, 1, "", "write_forward_solution"], [840, 4, 1, "", "write_head_bem"], [841, 4, 1, "", "write_label"], [842, 4, 1, "", "write_labels_to_annot"], [843, 4, 1, "", "write_proj"], [844, 4, 1, "", "write_source_spaces"], [845, 4, 1, "", "write_surface"], [846, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[258, 2, 1, "", "__getitem__"], [258, 2, 1, "", "__len__"], [258, 3, 1, "", "categories"], [258, 3, 1, "", "events"], [258, 2, 1, "", "get_condition"]], "mne.Annotations": [[259, 2, 1, "", "__add__"], [259, 2, 1, "", "__getitem__"], [259, 2, 1, "", "__iter__"], [259, 2, 1, "", "__len__"], [259, 2, 1, "", "append"], [259, 2, 1, "", "copy"], [259, 2, 1, "", "count"], [259, 2, 1, "", "crop"], [259, 2, 1, "", "delete"], [259, 3, 1, "", "orig_time"], [259, 2, 1, "", "rename"], [259, 2, 1, "", "save"], [259, 2, 1, "", "set_durations"], [259, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[261, 2, 1, "", "__add__"], [261, 2, 1, "", "__len__"], [261, 2, 1, "", "__sub__"]], "mne.Covariance": [[262, 2, 1, "", "__add__"], [262, 2, 1, "", "__contains__"], [262, 2, 1, "", "__getitem__"], [262, 2, 1, "", "__iter__"], [262, 2, 1, "", "__len__"], [262, 2, 1, "", "as_diag"], [262, 3, 1, "", "ch_names"], [262, 2, 1, "", "clear"], [262, 2, 1, "", "copy"], [262, 3, 1, "", "data"], [262, 2, 1, "", "fromkeys"], [262, 2, 1, "", "get"], [262, 2, 1, "", "items"], [262, 2, 1, "", "keys"], [262, 3, 1, "", "nfree"], [262, 2, 1, "", "pick_channels"], [262, 2, 1, "", "plot"], [262, 2, 1, "", "plot_topomap"], [262, 2, 1, "", "pop"], [262, 2, 1, "", "popitem"], [262, 2, 1, "", "save"], [262, 2, 1, "", "setdefault"], [262, 2, 1, "", "update"], [262, 2, 1, "", "values"]], "mne.Dipole": [[263, 2, 1, "", "__getitem__"], [263, 2, 1, "", "__len__"], [263, 2, 1, "", "copy"], [263, 2, 1, "", "crop"], [263, 2, 1, "", "plot_amplitudes"], [263, 2, 1, "", "plot_locations"], [263, 2, 1, "", "save"], [263, 2, 1, "", "time_as_index"], [263, 3, 1, "", "times"], [263, 2, 1, "", "to_mni"], [263, 2, 1, "", "to_mri"], [263, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[264, 3, 1, "", "ch_names"], [264, 2, 1, "", "copy"], [264, 2, 1, "", "crop"], [264, 2, 1, "", "decimate"], [264, 2, 1, "", "plot"], [264, 2, 1, "", "save"], [264, 2, 1, "", "shift_time"], [264, 2, 1, "", "time_as_index"], [264, 3, 1, "", "times"], [264, 3, 1, "", "tmax"], [264, 3, 1, "", "tmin"]], "mne.Epochs": [[265, 2, 1, "", "__contains__"], [265, 2, 1, "", "__getitem__"], [265, 2, 1, "", "__iter__"], [265, 2, 1, "", "__len__"], [265, 2, 1, "", "add_annotations_to_metadata"], [265, 2, 1, "", "add_channels"], [265, 2, 1, "", "add_proj"], [265, 2, 1, "", "add_reference_channels"], [265, 2, 1, "", "anonymize"], [265, 2, 1, "", "apply_baseline"], [265, 2, 1, "", "apply_function"], [265, 2, 1, "", "apply_hilbert"], [265, 2, 1, "", "apply_proj"], [265, 2, 1, "", "as_type"], [265, 2, 1, "", "average"], [265, 3, 1, "", "ch_names"], [265, 3, 1, "", "compensation_grade"], [265, 2, 1, "", "compute_psd"], [265, 2, 1, "", "copy"], [265, 2, 1, "", "crop"], [265, 2, 1, "", "decimate"], [265, 2, 1, "", "del_proj"], [265, 2, 1, "", "drop"], [265, 2, 1, "", "drop_bad"], [265, 2, 1, "", "drop_channels"], [265, 2, 1, "", "drop_log_stats"], [265, 2, 1, "", "equalize_event_counts"], [265, 2, 1, "", "export"], [265, 3, 1, "", "filename"], [265, 2, 1, "", "filter"], [265, 2, 1, "", "get_annotations_per_epoch"], [265, 2, 1, "", "get_channel_types"], [265, 2, 1, "", "get_data"], [265, 2, 1, "", "get_montage"], [265, 2, 1, "", "interpolate_bads"], [265, 2, 1, "", "iter_evoked"], [265, 2, 1, "", "load_data"], [265, 3, 1, "", "metadata"], [265, 2, 1, "", "next"], [265, 2, 1, "", "pick"], [265, 2, 1, "", "pick_channels"], [265, 2, 1, "", "pick_types"], [265, 2, 1, "", "plot"], [265, 2, 1, "", "plot_drop_log"], [265, 2, 1, "", "plot_image"], [265, 2, 1, "", "plot_projs_topomap"], [265, 2, 1, "", "plot_psd"], [265, 2, 1, "", "plot_psd_topo"], [265, 2, 1, "", "plot_psd_topomap"], [265, 2, 1, "", "plot_sensors"], [265, 2, 1, "", "plot_topo_image"], [265, 3, 1, "", "proj"], [265, 2, 1, "", "rename_channels"], [265, 2, 1, "", "reorder_channels"], [265, 2, 1, "", "resample"], [265, 2, 1, "", "reset_drop_log_selection"], [265, 2, 1, "", "save"], [265, 2, 1, "", "savgol_filter"], [265, 2, 1, "", "set_annotations"], [265, 2, 1, "", "set_channel_types"], [265, 2, 1, "", "set_eeg_reference"], [265, 2, 1, "", "set_meas_date"], [265, 2, 1, "", "set_montage"], [265, 2, 1, "", "shift_time"], [265, 2, 1, "", "standard_error"], [265, 2, 1, "", "subtract_evoked"], [265, 2, 1, "", "time_as_index"], [265, 3, 1, "", "times"], [265, 3, 1, "", "tmax"], [265, 3, 1, "", "tmin"], [265, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[266, 2, 1, "", "__contains__"], [266, 2, 1, "", "__getitem__"], [266, 2, 1, "", "__iter__"], [266, 2, 1, "", "__len__"], [266, 2, 1, "", "add_annotations_to_metadata"], [266, 2, 1, "", "add_channels"], [266, 2, 1, "", "add_proj"], [266, 2, 1, "", "add_reference_channels"], [266, 2, 1, "", "anonymize"], [266, 2, 1, "", "apply_baseline"], [266, 2, 1, "", "apply_function"], [266, 2, 1, "", "apply_hilbert"], [266, 2, 1, "", "apply_proj"], [266, 2, 1, "", "as_type"], [266, 2, 1, "", "average"], [266, 3, 1, "", "ch_names"], [266, 3, 1, "", "compensation_grade"], [266, 2, 1, "", "compute_psd"], [266, 2, 1, "", "copy"], [266, 2, 1, "", "crop"], [266, 2, 1, "", "decimate"], [266, 2, 1, "", "del_proj"], [266, 2, 1, "", "drop"], [266, 2, 1, "", "drop_bad"], [266, 2, 1, "", "drop_channels"], [266, 2, 1, "", "drop_log_stats"], [266, 2, 1, "", "equalize_event_counts"], [266, 2, 1, "", "export"], [266, 3, 1, "", "filename"], [266, 2, 1, "", "filter"], [266, 2, 1, "", "get_annotations_per_epoch"], [266, 2, 1, "", "get_channel_types"], [266, 2, 1, "", "get_data"], [266, 2, 1, "", "get_montage"], [266, 2, 1, "", "interpolate_bads"], [266, 2, 1, "", "iter_evoked"], [266, 2, 1, "", "load_data"], [266, 3, 1, "", "metadata"], [266, 2, 1, "", "next"], [266, 2, 1, "", "pick"], [266, 2, 1, "", "pick_channels"], [266, 2, 1, "", "pick_types"], [266, 2, 1, "", "plot"], [266, 2, 1, "", "plot_drop_log"], [266, 2, 1, "", "plot_image"], [266, 2, 1, "", "plot_projs_topomap"], [266, 2, 1, "", "plot_psd"], [266, 2, 1, "", "plot_psd_topo"], [266, 2, 1, "", "plot_psd_topomap"], [266, 2, 1, "", "plot_sensors"], [266, 2, 1, "", "plot_topo_image"], [266, 3, 1, "", "proj"], [266, 2, 1, "", "rename_channels"], [266, 2, 1, "", "reorder_channels"], [266, 2, 1, "", "resample"], [266, 2, 1, "", "reset_drop_log_selection"], [266, 2, 1, "", "save"], [266, 2, 1, "", "savgol_filter"], [266, 2, 1, "", "set_annotations"], [266, 2, 1, "", "set_channel_types"], [266, 2, 1, "", "set_eeg_reference"], [266, 2, 1, "", "set_meas_date"], [266, 2, 1, "", "set_montage"], [266, 2, 1, "", "shift_time"], [266, 2, 1, "", "standard_error"], [266, 2, 1, "", "subtract_evoked"], [266, 2, 1, "", "time_as_index"], [266, 3, 1, "", "times"], [266, 3, 1, "", "tmax"], [266, 3, 1, "", "tmin"], [266, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[267, 2, 1, "", "__contains__"], [267, 2, 1, "", "__neg__"], [267, 2, 1, "", "add_channels"], [267, 2, 1, "", "add_proj"], [267, 2, 1, "", "add_reference_channels"], [267, 2, 1, "", "animate_topomap"], [267, 2, 1, "", "anonymize"], [267, 2, 1, "", "apply_baseline"], [267, 2, 1, "", "apply_function"], [267, 2, 1, "", "apply_hilbert"], [267, 2, 1, "", "apply_proj"], [267, 2, 1, "", "as_type"], [267, 3, 1, "", "ch_names"], [267, 3, 1, "", "compensation_grade"], [267, 2, 1, "", "compute_psd"], [267, 2, 1, "", "copy"], [267, 2, 1, "", "crop"], [267, 3, 1, "", "data"], [267, 2, 1, "", "decimate"], [267, 2, 1, "", "del_proj"], [267, 2, 1, "", "detrend"], [267, 2, 1, "", "drop_channels"], [267, 2, 1, "", "export"], [267, 2, 1, "", "filter"], [267, 2, 1, "", "get_channel_types"], [267, 2, 1, "", "get_data"], [267, 2, 1, "", "get_montage"], [267, 2, 1, "", "get_peak"], [267, 2, 1, "", "interpolate_bads"], [267, 3, 1, "", "kind"], [267, 2, 1, "", "pick"], [267, 2, 1, "", "pick_channels"], [267, 2, 1, "", "pick_types"], [267, 2, 1, "", "plot"], [267, 2, 1, "", "plot_field"], [267, 2, 1, "", "plot_image"], [267, 2, 1, "", "plot_joint"], [267, 2, 1, "", "plot_projs_topomap"], [267, 2, 1, "", "plot_psd"], [267, 2, 1, "", "plot_psd_topo"], [267, 2, 1, "", "plot_psd_topomap"], [267, 2, 1, "", "plot_sensors"], [267, 2, 1, "", "plot_topo"], [267, 2, 1, "", "plot_topomap"], [267, 2, 1, "", "plot_white"], [267, 3, 1, "", "proj"], [267, 2, 1, "", "rename_channels"], [267, 2, 1, "", "reorder_channels"], [267, 2, 1, "", "resample"], [267, 2, 1, "", "save"], [267, 2, 1, "", "savgol_filter"], [267, 2, 1, "", "set_channel_types"], [267, 2, 1, "", "set_eeg_reference"], [267, 2, 1, "", "set_meas_date"], [267, 2, 1, "", "set_montage"], [267, 2, 1, "", "shift_time"], [267, 2, 1, "", "time_as_index"], [267, 3, 1, "", "times"], [267, 3, 1, "", "tmax"], [267, 3, 1, "", "tmin"], [267, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[268, 2, 1, "", "__contains__"], [268, 2, 1, "", "__neg__"], [268, 2, 1, "", "add_channels"], [268, 2, 1, "", "add_proj"], [268, 2, 1, "", "add_reference_channels"], [268, 2, 1, "", "animate_topomap"], [268, 2, 1, "", "anonymize"], [268, 2, 1, "", "apply_baseline"], [268, 2, 1, "", "apply_function"], [268, 2, 1, "", "apply_hilbert"], [268, 2, 1, "", "apply_proj"], [268, 2, 1, "", "as_type"], [268, 3, 1, "", "ch_names"], [268, 3, 1, "", "compensation_grade"], [268, 2, 1, "", "compute_psd"], [268, 2, 1, "", "copy"], [268, 2, 1, "", "crop"], [268, 3, 1, "", "data"], [268, 2, 1, "", "decimate"], [268, 2, 1, "", "del_proj"], [268, 2, 1, "", "detrend"], [268, 2, 1, "", "drop_channels"], [268, 2, 1, "", "export"], [268, 2, 1, "", "filter"], [268, 2, 1, "", "get_channel_types"], [268, 2, 1, "", "get_data"], [268, 2, 1, "", "get_montage"], [268, 2, 1, "", "get_peak"], [268, 2, 1, "", "interpolate_bads"], [268, 3, 1, "", "kind"], [268, 2, 1, "", "pick"], [268, 2, 1, "", "pick_channels"], [268, 2, 1, "", "pick_types"], [268, 2, 1, "", "plot"], [268, 2, 1, "", "plot_field"], [268, 2, 1, "", "plot_image"], [268, 2, 1, "", "plot_joint"], [268, 2, 1, "", "plot_projs_topomap"], [268, 2, 1, "", "plot_psd"], [268, 2, 1, "", "plot_psd_topo"], [268, 2, 1, "", "plot_psd_topomap"], [268, 2, 1, "", "plot_sensors"], [268, 2, 1, "", "plot_topo"], [268, 2, 1, "", "plot_topomap"], [268, 2, 1, "", "plot_white"], [268, 3, 1, "", "proj"], [268, 2, 1, "", "rename_channels"], [268, 2, 1, "", "reorder_channels"], [268, 2, 1, "", "resample"], [268, 2, 1, "", "save"], [268, 2, 1, "", "savgol_filter"], [268, 2, 1, "", "set_channel_types"], [268, 2, 1, "", "set_eeg_reference"], [268, 2, 1, "", "set_meas_date"], [268, 2, 1, "", "set_montage"], [268, 2, 1, "", "shift_time"], [268, 2, 1, "", "time_as_index"], [268, 3, 1, "", "times"], [268, 3, 1, "", "tmax"], [268, 3, 1, "", "tmin"], [268, 2, 1, "", "to_data_frame"]], "mne.Forward": [[269, 2, 1, "", "copy"], [269, 2, 1, "", "pick_channels"]], "mne.Info": [[270, 2, 1, "", "__contains__"], [270, 2, 1, "", "__getitem__"], [270, 2, 1, "", "__iter__"], [270, 2, 1, "", "__len__"], [270, 2, 1, "", "anonymize"], [270, 2, 1, "", "clear"], [270, 3, 1, "", "compensation_grade"], [270, 2, 1, "", "copy"], [270, 2, 1, "", "fromkeys"], [270, 2, 1, "", "get"], [270, 2, 1, "", "get_channel_types"], [270, 2, 1, "", "get_montage"], [270, 2, 1, "", "items"], [270, 2, 1, "", "keys"], [270, 2, 1, "", "normalize_proj"], [270, 2, 1, "", "plot_sensors"], [270, 2, 1, "", "pop"], [270, 2, 1, "", "popitem"], [270, 2, 1, "", "rename_channels"], [270, 2, 1, "", "save"], [270, 2, 1, "", "set_channel_types"], [270, 2, 1, "", "set_meas_date"], [270, 2, 1, "", "set_montage"], [270, 2, 1, "", "setdefault"], [270, 2, 1, "", "update"], [270, 2, 1, "", "values"]], "mne.Label": [[271, 2, 1, "", "__add__"], [271, 2, 1, "", "__len__"], [271, 2, 1, "", "__sub__"], [271, 2, 1, "", "center_of_mass"], [271, 2, 1, "", "compute_area"], [271, 2, 1, "", "copy"], [271, 2, 1, "", "distances_to_outside"], [271, 2, 1, "", "fill"], [271, 2, 1, "", "get_tris"], [271, 2, 1, "", "get_vertices_used"], [271, 2, 1, "", "morph"], [271, 2, 1, "", "restrict"], [271, 2, 1, "", "save"], [271, 2, 1, "", "smooth"], [271, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[272, 2, 1, "", "__add__"], [272, 2, 1, "", "__div__"], [272, 2, 1, "", "__mul__"], [272, 2, 1, "", "__neg__"], [272, 2, 1, "", "__sub__"], [272, 2, 1, "", "apply_baseline"], [272, 2, 1, "", "bin"], [272, 2, 1, "", "copy"], [272, 2, 1, "", "crop"], [272, 3, 1, "", "data"], [272, 2, 1, "", "extract_label_time_course"], [272, 2, 1, "", "get_peak"], [272, 2, 1, "", "mean"], [272, 2, 1, "", "plot"], [272, 2, 1, "", "resample"], [272, 2, 1, "", "save"], [272, 3, 1, "", "sfreq"], [272, 3, 1, "", "shape"], [272, 2, 1, "", "sqrt"], [272, 2, 1, "", "sum"], [272, 2, 1, "", "surface"], [272, 2, 1, "", "time_as_index"], [272, 3, 1, "", "times"], [272, 3, 1, "", "tmin"], [272, 2, 1, "", "to_data_frame"], [272, 2, 1, "", "transform"], [272, 2, 1, "", "transform_data"], [272, 3, 1, "", "tstep"], [272, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[273, 2, 1, "", "__add__"], [273, 2, 1, "", "__div__"], [273, 2, 1, "", "__mul__"], [273, 2, 1, "", "__neg__"], [273, 2, 1, "", "__sub__"], [273, 2, 1, "", "apply_baseline"], [273, 2, 1, "", "bin"], [273, 2, 1, "", "copy"], [273, 2, 1, "", "crop"], [273, 3, 1, "", "data"], [273, 2, 1, "", "extract_label_time_course"], [273, 2, 1, "", "get_peak"], [273, 2, 1, "", "magnitude"], [273, 2, 1, "", "mean"], [273, 2, 1, "", "plot"], [273, 2, 1, "", "project"], [273, 2, 1, "", "resample"], [273, 2, 1, "", "save"], [273, 3, 1, "", "sfreq"], [273, 3, 1, "", "shape"], [273, 2, 1, "", "sqrt"], [273, 2, 1, "", "sum"], [273, 2, 1, "", "surface"], [273, 2, 1, "", "time_as_index"], [273, 3, 1, "", "times"], [273, 3, 1, "", "tmin"], [273, 2, 1, "", "to_data_frame"], [273, 2, 1, "", "transform"], [273, 2, 1, "", "transform_data"], [273, 3, 1, "", "tstep"], [273, 2, 1, "", "volume"]], "mne.Projection": [[274, 2, 1, "", "__contains__"], [274, 2, 1, "", "__getitem__"], [274, 2, 1, "", "__iter__"], [274, 2, 1, "", "__len__"], [274, 2, 1, "", "clear"], [274, 2, 1, "", "copy"], [274, 2, 1, "", "fromkeys"], [274, 2, 1, "", "get"], [274, 2, 1, "", "items"], [274, 2, 1, "", "keys"], [274, 2, 1, "", "plot_topomap"], [274, 2, 1, "", "pop"], [274, 2, 1, "", "popitem"], [274, 2, 1, "", "setdefault"], [274, 2, 1, "", "update"], [274, 2, 1, "", "values"]], "mne.Report": [[275, 2, 1, "", "__len__"], [275, 2, 1, "", "add_bem"], [275, 2, 1, "", "add_code"], [275, 2, 1, "", "add_covariance"], [275, 2, 1, "", "add_custom_css"], [275, 2, 1, "", "add_custom_js"], [275, 2, 1, "", "add_epochs"], [275, 2, 1, "", "add_events"], [275, 2, 1, "", "add_evokeds"], [275, 2, 1, "", "add_figure"], [275, 2, 1, "", "add_forward"], [275, 2, 1, "", "add_html"], [275, 2, 1, "", "add_ica"], [275, 2, 1, "", "add_image"], [275, 2, 1, "", "add_inverse_operator"], [275, 2, 1, "", "add_projs"], [275, 2, 1, "", "add_raw"], [275, 2, 1, "", "add_stc"], [275, 2, 1, "", "add_sys_info"], [275, 2, 1, "", "add_trans"], [275, 3, 1, "", "html"], [275, 2, 1, "", "parse_folder"], [275, 2, 1, "", "remove"], [275, 2, 1, "", "save"], [275, 3, 1, "", "tags"]], "mne.SourceEstimate": [[276, 2, 1, "", "__add__"], [276, 2, 1, "", "__div__"], [276, 2, 1, "", "__mul__"], [276, 2, 1, "", "__neg__"], [276, 2, 1, "", "__sub__"], [276, 2, 1, "", "apply_baseline"], [276, 2, 1, "", "bin"], [276, 2, 1, "", "center_of_mass"], [276, 2, 1, "", "copy"], [276, 2, 1, "", "crop"], [276, 3, 1, "", "data"], [276, 2, 1, "", "estimate_snr"], [276, 2, 1, "", "expand"], [276, 2, 1, "", "extract_label_time_course"], [276, 2, 1, "", "get_peak"], [276, 2, 1, "", "in_label"], [276, 3, 1, "", "lh_data"], [276, 3, 1, "", "lh_vertno"], [276, 2, 1, "", "mean"], [276, 2, 1, "", "plot"], [276, 2, 1, "", "resample"], [276, 3, 1, "", "rh_data"], [276, 3, 1, "", "rh_vertno"], [276, 2, 1, "", "save"], [276, 3, 1, "", "sfreq"], [276, 3, 1, "", "shape"], [276, 2, 1, "", "sqrt"], [276, 2, 1, "", "sum"], [276, 2, 1, "", "time_as_index"], [276, 3, 1, "", "times"], [276, 3, 1, "", "tmin"], [276, 2, 1, "", "to_data_frame"], [276, 2, 1, "", "to_original_src"], [276, 2, 1, "", "transform"], [276, 2, 1, "", "transform_data"], [276, 3, 1, "", "tstep"]], "mne.SourceMorph": [[277, 2, 1, "", "apply"], [277, 2, 1, "", "compute_vol_morph_mat"], [277, 2, 1, "", "save"]], "mne.SourceSpaces": [[278, 2, 1, "", "__add__"], [278, 2, 1, "", "__getitem__"], [278, 2, 1, "", "copy"], [278, 2, 1, "", "export_volume"], [278, 2, 1, "", "plot"], [278, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[279, 2, 1, "", "__add__"], [279, 2, 1, "", "__div__"], [279, 2, 1, "", "__mul__"], [279, 2, 1, "", "__neg__"], [279, 2, 1, "", "__sub__"], [279, 2, 1, "", "apply_baseline"], [279, 2, 1, "", "bin"], [279, 2, 1, "", "copy"], [279, 2, 1, "", "crop"], [279, 3, 1, "", "data"], [279, 2, 1, "", "expand"], [279, 2, 1, "", "extract_label_time_course"], [279, 2, 1, "", "get_peak"], [279, 2, 1, "", "in_label"], [279, 3, 1, "", "lh_data"], [279, 3, 1, "", "lh_vertno"], [279, 2, 1, "", "magnitude"], [279, 2, 1, "", "mean"], [279, 2, 1, "", "plot"], [279, 2, 1, "", "project"], [279, 2, 1, "", "resample"], [279, 3, 1, "", "rh_data"], [279, 3, 1, "", "rh_vertno"], [279, 2, 1, "", "save"], [279, 3, 1, "", "sfreq"], [279, 3, 1, "", "shape"], [279, 2, 1, "", "sqrt"], [279, 2, 1, "", "sum"], [279, 2, 1, "", "time_as_index"], [279, 3, 1, "", "times"], [279, 3, 1, "", "tmin"], [279, 2, 1, "", "to_data_frame"], [279, 2, 1, "", "to_original_src"], [279, 2, 1, "", "transform"], [279, 2, 1, "", "transform_data"], [279, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[280, 2, 1, "", "__add__"], [280, 2, 1, "", "__div__"], [280, 2, 1, "", "__mul__"], [280, 2, 1, "", "__neg__"], [280, 2, 1, "", "__sub__"], [280, 2, 1, "", "apply_baseline"], [280, 2, 1, "", "as_volume"], [280, 2, 1, "", "bin"], [280, 2, 1, "", "copy"], [280, 2, 1, "", "crop"], [280, 3, 1, "", "data"], [280, 2, 1, "", "extract_label_time_course"], [280, 2, 1, "", "get_peak"], [280, 2, 1, "", "in_label"], [280, 2, 1, "", "mean"], [280, 2, 1, "", "plot"], [280, 2, 1, "", "plot_3d"], [280, 2, 1, "", "resample"], [280, 2, 1, "", "save"], [280, 2, 1, "", "save_as_volume"], [280, 3, 1, "", "sfreq"], [280, 3, 1, "", "shape"], [280, 2, 1, "", "sqrt"], [280, 2, 1, "", "sum"], [280, 2, 1, "", "time_as_index"], [280, 3, 1, "", "times"], [280, 3, 1, "", "tmin"], [280, 2, 1, "", "to_data_frame"], [280, 2, 1, "", "transform"], [280, 2, 1, "", "transform_data"], [280, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[281, 2, 1, "", "__add__"], [281, 2, 1, "", "__div__"], [281, 2, 1, "", "__mul__"], [281, 2, 1, "", "__neg__"], [281, 2, 1, "", "__sub__"], [281, 2, 1, "", "apply_baseline"], [281, 2, 1, "", "as_volume"], [281, 2, 1, "", "bin"], [281, 2, 1, "", "copy"], [281, 2, 1, "", "crop"], [281, 3, 1, "", "data"], [281, 2, 1, "", "extract_label_time_course"], [281, 2, 1, "", "get_peak"], [281, 2, 1, "", "in_label"], [281, 2, 1, "", "magnitude"], [281, 2, 1, "", "mean"], [281, 2, 1, "", "plot"], [281, 2, 1, "", "plot_3d"], [281, 2, 1, "", "project"], [281, 2, 1, "", "resample"], [281, 2, 1, "", "save"], [281, 2, 1, "", "save_as_volume"], [281, 3, 1, "", "sfreq"], [281, 3, 1, "", "shape"], [281, 2, 1, "", "sqrt"], [281, 2, 1, "", "sum"], [281, 2, 1, "", "time_as_index"], [281, 3, 1, "", "times"], [281, 3, 1, "", "tmin"], [281, 2, 1, "", "to_data_frame"], [281, 2, 1, "", "transform"], [281, 2, 1, "", "transform_data"], [281, 3, 1, "", "tstep"]], "mne.baseline": [[288, 4, 1, "", "rescale"]], "mne.beamformer": [[289, 1, 1, "", "Beamformer"], [290, 4, 1, "", "apply_dics"], [291, 4, 1, "", "apply_dics_csd"], [292, 4, 1, "", "apply_dics_epochs"], [293, 4, 1, "", "apply_dics_tfr_epochs"], [294, 4, 1, "", "apply_lcmv"], [295, 4, 1, "", "apply_lcmv_cov"], [296, 4, 1, "", "apply_lcmv_epochs"], [297, 4, 1, "", "apply_lcmv_raw"], [298, 4, 1, "", "make_dics"], [299, 4, 1, "", "make_lcmv"], [300, 4, 1, "", "make_lcmv_resolution_matrix"], [301, 4, 1, "", "rap_music"], [302, 4, 1, "", "read_beamformer"], [303, 4, 1, "", "trap_music"]], "mne.beamformer.Beamformer": [[289, 2, 1, "", "__contains__"], [289, 2, 1, "", "__getitem__"], [289, 2, 1, "", "__iter__"], [289, 2, 1, "", "__len__"], [289, 2, 1, "", "clear"], [289, 2, 1, "", "copy"], [289, 2, 1, "", "fromkeys"], [289, 2, 1, "", "get"], [289, 2, 1, "", "items"], [289, 2, 1, "", "keys"], [289, 2, 1, "", "pop"], [289, 2, 1, "", "popitem"], [289, 2, 1, "", "save"], [289, 2, 1, "", "setdefault"], [289, 2, 1, "", "update"], [289, 2, 1, "", "values"]], "mne.bem": [[304, 1, 1, "", "ConductorModel"], [305, 4, 1, "", "convert_flash_mris"], [306, 4, 1, "", "distance_to_bem"], [307, 4, 1, "", "fit_sphere_to_headshape"], [308, 4, 1, "", "get_fitting_dig"], [309, 4, 1, "", "make_flash_bem"], [310, 4, 1, "", "make_scalp_surfaces"], [311, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[304, 2, 1, "", "__contains__"], [304, 2, 1, "", "__getitem__"], [304, 2, 1, "", "__iter__"], [304, 2, 1, "", "__len__"], [304, 2, 1, "", "clear"], [304, 2, 1, "", "copy"], [304, 2, 1, "", "fromkeys"], [304, 2, 1, "", "get"], [304, 2, 1, "", "items"], [304, 2, 1, "", "keys"], [304, 2, 1, "", "pop"], [304, 2, 1, "", "popitem"], [304, 3, 1, "", "radius"], [304, 2, 1, "", "setdefault"], [304, 2, 1, "", "update"], [304, 2, 1, "", "values"]], "mne.channels": [[314, 1, 1, "", "DigMontage"], [315, 1, 1, "", "Layout"], [316, 4, 1, "", "combine_channels"], [317, 4, 1, "", "compute_dev_head_t"], [318, 4, 1, "", "compute_native_head_t"], [319, 4, 1, "", "equalize_channels"], [320, 4, 1, "", "find_ch_adjacency"], [321, 4, 1, "", "find_layout"], [322, 4, 1, "", "fix_mag_coil_types"], [323, 4, 1, "", "generate_2d_layout"], [324, 4, 1, "", "get_builtin_ch_adjacencies"], [325, 4, 1, "", "get_builtin_montages"], [326, 4, 1, "", "make_1020_channel_selections"], [327, 4, 1, "", "make_dig_montage"], [328, 4, 1, "", "make_eeg_layout"], [329, 4, 1, "", "make_grid_layout"], [330, 4, 1, "", "make_standard_montage"], [331, 4, 1, "", "read_ch_adjacency"], [332, 4, 1, "", "read_custom_montage"], [333, 4, 1, "", "read_dig_captrak"], [334, 4, 1, "", "read_dig_dat"], [335, 4, 1, "", "read_dig_egi"], [336, 4, 1, "", "read_dig_fif"], [337, 4, 1, "", "read_dig_hpts"], [338, 4, 1, "", "read_dig_localite"], [339, 4, 1, "", "read_dig_polhemus_isotrak"], [340, 4, 1, "", "read_layout"], [341, 4, 1, "", "read_polhemus_fastscan"], [342, 4, 1, "", "rename_channels"]], "mne.channels.DigMontage": [[314, 2, 1, "", "__add__"], [314, 2, 1, "", "add_estimated_fiducials"], [314, 2, 1, "", "add_mni_fiducials"], [314, 2, 1, "", "apply_trans"], [314, 2, 1, "", "copy"], [314, 2, 1, "", "get_positions"], [314, 2, 1, "", "plot"], [314, 2, 1, "", "remove_fiducials"], [314, 2, 1, "", "rename_channels"], [314, 2, 1, "", "save"]], "mne.channels.Layout": [[315, 2, 1, "", "plot"], [315, 2, 1, "", "save"]], "mne.chpi": [[343, 4, 1, "", "compute_chpi_amplitudes"], [344, 4, 1, "", "compute_chpi_locs"], [345, 4, 1, "", "compute_chpi_snr"], [346, 4, 1, "", "compute_head_pos"], [347, 4, 1, "", "extract_chpi_locs_ctf"], [348, 4, 1, "", "extract_chpi_locs_kit"], [349, 4, 1, "", "filter_chpi"], [350, 4, 1, "", "get_active_chpi"], [351, 4, 1, "", "get_chpi_info"], [352, 4, 1, "", "head_pos_to_trans_rot_t"], [353, 4, 1, "", "read_head_pos"], [354, 4, 1, "", "write_head_pos"]], "mne.coreg": [[367, 1, 1, "", "Coregistration"], [368, 4, 1, "", "estimate_head_mri_t"], [369, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[367, 2, 1, "", "compute_dig_mri_distances"], [367, 2, 1, "", "fit_fiducials"], [367, 2, 1, "", "fit_icp"], [367, 2, 1, "", "omit_head_shape_points"], [367, 2, 1, "", "reset"], [367, 3, 1, "", "scale"], [367, 2, 1, "", "set_fid_match"], [367, 2, 1, "", "set_grow_hair"], [367, 2, 1, "", "set_rotation"], [367, 2, 1, "", "set_scale"], [367, 2, 1, "", "set_scale_mode"], [367, 2, 1, "", "set_translation"], [367, 3, 1, "", "trans"]], "mne.cov": [[372, 4, 1, "", "compute_whitener"], [373, 4, 1, "", "prepare_noise_cov"], [374, 4, 1, "", "regularize"]], "mne.cuda": [[377, 4, 1, "", "get_cuda_memory"], [378, 4, 1, "", "init_cuda"], [379, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[380, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[381, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[382, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[383, 4, 1, "", "load_data"], [384, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[385, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[386, 4, 1, "", "data_path"]], "mne.datasets.eyelink": [[387, 4, 1, "", "data_path"]], "mne.datasets": [[388, 4, 1, "", "fetch_aparc_sub_parcellation"], [389, 4, 1, "", "fetch_dataset"], [390, 4, 1, "", "fetch_fsaverage"], [391, 4, 1, "", "fetch_hcp_mmp_parcellation"], [392, 4, 1, "", "fetch_infant_template"], [393, 4, 1, "", "fetch_phantom"], [395, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[394, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[396, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[397, 4, 1, "", "data_path"]], "mne.datasets.limo": [[398, 4, 1, "", "load_data"]], "mne.datasets.misc": [[399, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[400, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[401, 4, 1, "", "data_path"]], "mne.datasets.opm": [[402, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[403, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[404, 4, 1, "", "data_path"]], "mne.datasets.sample": [[405, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[406, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[407, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[408, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[409, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[410, 4, 1, "", "data_path"]], "mne.datasets.ucl_opm_auditory": [[411, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[412, 4, 1, "", "data_path"]], "mne.decoding": [[414, 1, 1, "", "CSP"], [415, 1, 1, "", "EMS"], [416, 1, 1, "", "FilterEstimator"], [417, 1, 1, "", "GeneralizingEstimator"], [418, 1, 1, "", "LinearModel"], [419, 1, 1, "", "PSDEstimator"], [420, 1, 1, "", "ReceptiveField"], [421, 1, 1, "", "SPoC"], [422, 1, 1, "", "SSD"], [423, 1, 1, "", "Scaler"], [424, 1, 1, "", "SlidingEstimator"], [425, 1, 1, "", "TemporalFilter"], [426, 1, 1, "", "TimeDelayingRidge"], [427, 1, 1, "", "TimeFrequency"], [428, 1, 1, "", "UnsupervisedSpatialFilter"], [429, 1, 1, "", "Vectorizer"], [430, 4, 1, "", "compute_ems"], [431, 4, 1, "", "cross_val_multiscore"], [432, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[414, 2, 1, "", "fit"], [414, 2, 1, "", "fit_transform"], [414, 2, 1, "", "get_params"], [414, 2, 1, "", "plot_filters"], [414, 2, 1, "", "plot_patterns"], [414, 2, 1, "", "set_params"], [414, 2, 1, "", "transform"]], "mne.decoding.EMS": [[415, 2, 1, "", "fit"], [415, 2, 1, "", "fit_transform"], [415, 2, 1, "", "get_params"], [415, 2, 1, "", "set_params"], [415, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[416, 2, 1, "", "fit"], [416, 2, 1, "", "fit_transform"], [416, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[417, 2, 1, "", "decision_function"], [417, 2, 1, "", "fit"], [417, 2, 1, "", "fit_transform"], [417, 2, 1, "", "get_params"], [417, 2, 1, "", "predict"], [417, 2, 1, "", "predict_proba"], [417, 2, 1, "", "score"], [417, 2, 1, "", "set_params"], [417, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[418, 2, 1, "", "fit"], [418, 2, 1, "", "get_params"], [418, 2, 1, "", "set_params"]], "mne.decoding.PSDEstimator": [[419, 2, 1, "", "fit"], [419, 2, 1, "", "fit_transform"], [419, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[420, 2, 1, "", "fit"], [420, 2, 1, "", "get_params"], [420, 2, 1, "", "predict"], [420, 2, 1, "", "score"], [420, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[421, 2, 1, "", "fit"], [421, 2, 1, "", "fit_transform"], [421, 2, 1, "", "get_params"], [421, 2, 1, "", "plot_filters"], [421, 2, 1, "", "plot_patterns"], [421, 2, 1, "", "set_params"], [421, 2, 1, "", "transform"]], "mne.decoding.SSD": [[422, 2, 1, "", "apply"], [422, 2, 1, "", "fit"], [422, 2, 1, "", "fit_transform"], [422, 2, 1, "", "get_params"], [422, 2, 1, "", "get_spectral_ratio"], [422, 2, 1, "", "inverse_transform"], [422, 2, 1, "", "set_params"], [422, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[423, 2, 1, "", "fit"], [423, 2, 1, "", "fit_transform"], [423, 2, 1, "", "get_params"], [423, 2, 1, "", "inverse_transform"], [423, 2, 1, "", "set_params"], [423, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[424, 2, 1, "", "decision_function"], [424, 2, 1, "", "fit"], [424, 2, 1, "", "fit_transform"], [424, 2, 1, "", "get_params"], [424, 2, 1, "", "predict"], [424, 2, 1, "", "predict_proba"], [424, 2, 1, "", "score"], [424, 2, 1, "", "set_params"], [424, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[425, 2, 1, "", "fit"], [425, 2, 1, "", "fit_transform"], [425, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[426, 2, 1, "", "fit"], [426, 2, 1, "", "get_params"], [426, 2, 1, "", "predict"], [426, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[427, 2, 1, "", "fit"], [427, 2, 1, "", "fit_transform"], [427, 2, 1, "", "get_params"], [427, 2, 1, "", "set_params"], [427, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[428, 2, 1, "", "fit"], [428, 2, 1, "", "fit_transform"], [428, 2, 1, "", "get_params"], [428, 2, 1, "", "inverse_transform"], [428, 2, 1, "", "set_params"], [428, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[429, 2, 1, "", "fit"], [429, 2, 1, "", "fit_transform"], [429, 2, 1, "", "inverse_transform"], [429, 2, 1, "", "transform"]], "mne.dipole": [[434, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[435, 4, 1, "", "average_movements"], [436, 4, 1, "", "combine_event_ids"], [437, 4, 1, "", "equalize_epoch_counts"], [438, 4, 1, "", "make_metadata"]], "mne.event": [[440, 4, 1, "", "define_target_events"], [441, 4, 1, "", "match_event_names"], [442, 4, 1, "", "shift_time_events"]], "mne.export": [[444, 4, 1, "", "export_epochs"], [445, 4, 1, "", "export_evokeds"], [446, 4, 1, "", "export_evokeds_mff"], [447, 4, 1, "", "export_raw"]], "mne.filter": [[449, 4, 1, "", "construct_iir_filter"], [450, 4, 1, "", "create_filter"], [451, 4, 1, "", "estimate_ringing_samples"], [452, 4, 1, "", "filter_data"], [453, 4, 1, "", "notch_filter"], [454, 4, 1, "", "resample"]], "mne.forward": [[458, 4, 1, "", "compute_depth_prior"], [459, 4, 1, "", "compute_orient_prior"], [460, 4, 1, "", "restrict_forward_to_label"], [461, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[473, 4, 1, "", "coregistration"]], "mne.inverse_sparse": [[476, 4, 1, "", "gamma_map"], [477, 4, 1, "", "make_stc_from_dipoles"], [478, 4, 1, "", "mixed_norm"], [479, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[480, 1, 1, "", "BaseRaw"], [481, 1, 1, "", "Raw"], [482, 1, 1, "", "RawArray"], [483, 4, 1, "", "anonymize_info"], [883, 0, 0, "-", "kit"], [485, 4, 1, "", "read_fiducials"], [486, 4, 1, "", "read_info"], [487, 4, 1, "", "read_raw"], [488, 4, 1, "", "read_raw_artemis123"], [489, 4, 1, "", "read_raw_bdf"], [490, 4, 1, "", "read_raw_boxy"], [491, 4, 1, "", "read_raw_brainvision"], [492, 4, 1, "", "read_raw_bti"], [493, 4, 1, "", "read_raw_cnt"], [494, 4, 1, "", "read_raw_ctf"], [495, 4, 1, "", "read_raw_curry"], [496, 4, 1, "", "read_raw_edf"], [497, 4, 1, "", "read_raw_eeglab"], [498, 4, 1, "", "read_raw_egi"], [499, 4, 1, "", "read_raw_eximia"], [500, 4, 1, "", "read_raw_eyelink"], [501, 4, 1, "", "read_raw_fieldtrip"], [502, 4, 1, "", "read_raw_fif"], [503, 4, 1, "", "read_raw_fil"], [504, 4, 1, "", "read_raw_gdf"], [505, 4, 1, "", "read_raw_hitachi"], [506, 4, 1, "", "read_raw_kit"], [507, 4, 1, "", "read_raw_nedf"], [508, 4, 1, "", "read_raw_nicolet"], [509, 4, 1, "", "read_raw_nihon"], [510, 4, 1, "", "read_raw_nirx"], [511, 4, 1, "", "read_raw_nsx"], [512, 4, 1, "", "read_raw_persyst"], [513, 4, 1, "", "read_raw_snirf"], [514, 4, 1, "", "show_fiff"], [515, 4, 1, "", "write_fiducials"]], "mne.io.Raw": [[481, 2, 1, "", "__contains__"], [481, 2, 1, "", "__getitem__"], [481, 2, 1, "", "__len__"], [481, 3, 1, "", "acqparser"], [481, 2, 1, "", "add_channels"], [481, 2, 1, "", "add_events"], [481, 2, 1, "", "add_proj"], [481, 2, 1, "", "add_reference_channels"], [481, 3, 1, "", "annotations"], [481, 2, 1, "", "anonymize"], [481, 2, 1, "", "append"], [481, 2, 1, "", "apply_function"], [481, 2, 1, "", "apply_gradient_compensation"], [481, 2, 1, "", "apply_hilbert"], [481, 2, 1, "", "apply_proj"], [481, 3, 1, "", "ch_names"], [481, 2, 1, "", "close"], [481, 3, 1, "", "compensation_grade"], [481, 2, 1, "", "compute_psd"], [481, 2, 1, "", "copy"], [481, 2, 1, "", "crop"], [481, 2, 1, "", "crop_by_annotations"], [481, 2, 1, "", "del_proj"], [481, 2, 1, "", "describe"], [481, 2, 1, "", "drop_channels"], [481, 2, 1, "", "export"], [481, 3, 1, "", "filenames"], [481, 2, 1, "", "filter"], [481, 3, 1, "", "first_samp"], [481, 3, 1, "", "first_time"], [481, 2, 1, "", "fix_mag_coil_types"], [481, 2, 1, "", "get_channel_types"], [481, 2, 1, "", "get_data"], [481, 2, 1, "", "get_montage"], [481, 2, 1, "", "interpolate_bads"], [481, 3, 1, "", "last_samp"], [481, 2, 1, "", "load_bad_channels"], [481, 2, 1, "", "load_data"], [481, 3, 1, "", "n_times"], [481, 2, 1, "", "notch_filter"], [481, 2, 1, "", "pick"], [481, 2, 1, "", "pick_channels"], [481, 2, 1, "", "pick_types"], [481, 2, 1, "", "plot"], [481, 2, 1, "", "plot_projs_topomap"], [481, 2, 1, "", "plot_psd"], [481, 2, 1, "", "plot_psd_topo"], [481, 2, 1, "", "plot_psd_topomap"], [481, 2, 1, "", "plot_sensors"], [481, 3, 1, "", "proj"], [481, 2, 1, "", "rename_channels"], [481, 2, 1, "", "reorder_channels"], [481, 2, 1, "", "resample"], [481, 2, 1, "", "save"], [481, 2, 1, "", "savgol_filter"], [481, 2, 1, "", "set_annotations"], [481, 2, 1, "", "set_channel_types"], [481, 2, 1, "", "set_eeg_reference"], [481, 2, 1, "", "set_meas_date"], [481, 2, 1, "", "set_montage"], [481, 2, 1, "", "time_as_index"], [481, 3, 1, "", "times"], [481, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[482, 2, 1, "", "__contains__"], [482, 2, 1, "", "__getitem__"], [482, 2, 1, "", "__len__"], [482, 2, 1, "", "add_channels"], [482, 2, 1, "", "add_events"], [482, 2, 1, "", "add_proj"], [482, 2, 1, "", "add_reference_channels"], [482, 3, 1, "", "annotations"], [482, 2, 1, "", "anonymize"], [482, 2, 1, "", "append"], [482, 2, 1, "", "apply_function"], [482, 2, 1, "", "apply_gradient_compensation"], [482, 2, 1, "", "apply_hilbert"], [482, 2, 1, "", "apply_proj"], [482, 3, 1, "", "ch_names"], [482, 2, 1, "", "close"], [482, 3, 1, "", "compensation_grade"], [482, 2, 1, "", "compute_psd"], [482, 2, 1, "", "copy"], [482, 2, 1, "", "crop"], [482, 2, 1, "", "crop_by_annotations"], [482, 2, 1, "", "del_proj"], [482, 2, 1, "", "describe"], [482, 2, 1, "", "drop_channels"], [482, 2, 1, "", "export"], [482, 3, 1, "", "filenames"], [482, 2, 1, "", "filter"], [482, 3, 1, "", "first_samp"], [482, 3, 1, "", "first_time"], [482, 2, 1, "", "get_channel_types"], [482, 2, 1, "", "get_data"], [482, 2, 1, "", "get_montage"], [482, 2, 1, "", "interpolate_bads"], [482, 3, 1, "", "last_samp"], [482, 2, 1, "", "load_bad_channels"], [482, 2, 1, "", "load_data"], [482, 3, 1, "", "n_times"], [482, 2, 1, "", "notch_filter"], [482, 2, 1, "", "pick"], [482, 2, 1, "", "pick_channels"], [482, 2, 1, "", "pick_types"], [482, 2, 1, "", "plot"], [482, 2, 1, "", "plot_projs_topomap"], [482, 2, 1, "", "plot_psd"], [482, 2, 1, "", "plot_psd_topo"], [482, 2, 1, "", "plot_psd_topomap"], [482, 2, 1, "", "plot_sensors"], [482, 3, 1, "", "proj"], [482, 2, 1, "", "rename_channels"], [482, 2, 1, "", "reorder_channels"], [482, 2, 1, "", "resample"], [482, 2, 1, "", "save"], [482, 2, 1, "", "savgol_filter"], [482, 2, 1, "", "set_annotations"], [482, 2, 1, "", "set_channel_types"], [482, 2, 1, "", "set_eeg_reference"], [482, 2, 1, "", "set_meas_date"], [482, 2, 1, "", "set_montage"], [482, 2, 1, "", "time_as_index"], [482, 3, 1, "", "times"], [482, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[484, 4, 1, "", "read_mrk"]], "mne.label": [[516, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[530, 1, 1, "", "InverseOperator"], [531, 4, 1, "", "apply_inverse"], [532, 4, 1, "", "apply_inverse_cov"], [533, 4, 1, "", "apply_inverse_epochs"], [534, 4, 1, "", "apply_inverse_raw"], [535, 4, 1, "", "apply_inverse_tfr_epochs"], [536, 4, 1, "", "compute_rank_inverse"], [537, 4, 1, "", "compute_source_psd"], [538, 4, 1, "", "compute_source_psd_epochs"], [539, 4, 1, "", "estimate_snr"], [540, 4, 1, "", "get_cross_talk"], [541, 4, 1, "", "get_point_spread"], [542, 4, 1, "", "make_inverse_operator"], [543, 4, 1, "", "make_inverse_resolution_matrix"], [544, 4, 1, "", "prepare_inverse_operator"], [545, 4, 1, "", "read_inverse_operator"], [546, 4, 1, "", "resolution_metrics"], [547, 4, 1, "", "source_band_induced_power"], [548, 4, 1, "", "source_induced_power"], [549, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[530, 2, 1, "", "__contains__"], [530, 2, 1, "", "__getitem__"], [530, 2, 1, "", "__iter__"], [530, 2, 1, "", "__len__"], [530, 2, 1, "", "clear"], [530, 2, 1, "", "copy"], [530, 2, 1, "", "fromkeys"], [530, 2, 1, "", "get"], [530, 2, 1, "", "items"], [530, 2, 1, "", "keys"], [530, 2, 1, "", "pop"], [530, 2, 1, "", "popitem"], [530, 2, 1, "", "setdefault"], [530, 2, 1, "", "update"], [530, 2, 1, "", "values"]], "mne.preprocessing": [[563, 1, 1, "", "EOGRegression"], [564, 1, 1, "", "ICA"], [565, 1, 1, "", "Xdawn"], [566, 4, 1, "", "annotate_amplitude"], [567, 4, 1, "", "annotate_break"], [568, 4, 1, "", "annotate_movement"], [569, 4, 1, "", "annotate_muscle_zscore"], [570, 4, 1, "", "annotate_nan"], [571, 4, 1, "", "compute_average_dev_head_t"], [572, 4, 1, "", "compute_bridged_electrodes"], [573, 4, 1, "", "compute_current_source_density"], [574, 4, 1, "", "compute_fine_calibration"], [575, 4, 1, "", "compute_maxwell_basis"], [576, 4, 1, "", "compute_proj_ecg"], [577, 4, 1, "", "compute_proj_eog"], [578, 4, 1, "", "compute_proj_hfc"], [579, 4, 1, "", "corrmap"], [580, 4, 1, "", "cortical_signal_suppression"], [581, 4, 1, "", "create_ecg_epochs"], [582, 4, 1, "", "create_eog_epochs"], [583, 4, 1, "", "equalize_bads"], [881, 0, 0, "-", "eyetracking"], [588, 4, 1, "", "find_bad_channels_maxwell"], [589, 4, 1, "", "find_ecg_events"], [590, 4, 1, "", "find_eog_events"], [591, 4, 1, "", "fix_stim_artifact"], [592, 4, 1, "", "ica_find_ecg_events"], [593, 4, 1, "", "ica_find_eog_events"], [881, 0, 0, "-", "ieeg"], [597, 4, 1, "", "infomax"], [598, 4, 1, "", "interpolate_bridged_electrodes"], [599, 4, 1, "", "maxwell_filter"], [600, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [881, 0, 0, "-", "nirs"], [607, 4, 1, "", "oversampled_temporal_projection"], [608, 4, 1, "", "peak_finder"], [609, 4, 1, "", "read_eog_regression"], [610, 4, 1, "", "read_fine_calibration"], [611, 4, 1, "", "read_ica"], [612, 4, 1, "", "read_ica_eeglab"], [613, 4, 1, "", "realign_raw"], [614, 4, 1, "", "regress_artifact"], [615, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[563, 2, 1, "", "apply"], [563, 2, 1, "", "fit"], [563, 2, 1, "", "plot"], [563, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[564, 2, 1, "", "__contains__"], [564, 2, 1, "", "apply"], [564, 3, 1, "", "compensation_grade"], [564, 2, 1, "", "copy"], [564, 2, 1, "", "find_bads_ecg"], [564, 2, 1, "", "find_bads_eog"], [564, 2, 1, "", "find_bads_muscle"], [564, 2, 1, "", "find_bads_ref"], [564, 2, 1, "", "fit"], [564, 2, 1, "", "get_channel_types"], [564, 2, 1, "", "get_components"], [564, 2, 1, "", "get_explained_variance_ratio"], [564, 2, 1, "", "get_sources"], [564, 2, 1, "", "plot_components"], [564, 2, 1, "", "plot_overlay"], [564, 2, 1, "", "plot_properties"], [564, 2, 1, "", "plot_scores"], [564, 2, 1, "", "plot_sources"], [564, 2, 1, "", "save"], [564, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[565, 2, 1, "", "apply"], [565, 2, 1, "", "fit"], [565, 2, 1, "", "fit_transform"], [565, 2, 1, "", "get_params"], [565, 2, 1, "", "inverse_transform"], [565, 2, 1, "", "set_params"], [565, 2, 1, "", "transform"]], "mne.preprocessing.eyetracking": [[584, 1, 1, "", "Calibration"], [585, 4, 1, "", "interpolate_blinks"], [586, 4, 1, "", "read_eyelink_calibration"], [587, 4, 1, "", "set_channel_types_eyetrack"]], "mne.preprocessing.eyetracking.Calibration": [[584, 2, 1, "", "__contains__"], [584, 2, 1, "", "__getitem__"], [584, 2, 1, "", "__iter__"], [584, 2, 1, "", "__len__"], [584, 2, 1, "", "clear"], [584, 2, 1, "", "copy"], [584, 2, 1, "", "fromkeys"], [584, 2, 1, "", "get"], [584, 2, 1, "", "items"], [584, 2, 1, "", "keys"], [584, 2, 1, "", "plot"], [584, 2, 1, "", "pop"], [584, 2, 1, "", "popitem"], [584, 2, 1, "", "setdefault"], [584, 2, 1, "", "update"], [584, 2, 1, "", "values"]], "mne.preprocessing.ieeg": [[594, 4, 1, "", "make_montage_volume"], [595, 4, 1, "", "project_sensors_onto_brain"], [596, 4, 1, "", "warp_montage"]], "mne.preprocessing.nirs": [[601, 4, 1, "", "beer_lambert_law"], [602, 4, 1, "", "optical_density"], [603, 4, 1, "", "scalp_coupling_index"], [604, 4, 1, "", "short_channels"], [605, 4, 1, "", "source_detector_distances"], [606, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[662, 1, 1, "", "SourceSimulator"], [663, 4, 1, "", "add_chpi"], [664, 4, 1, "", "add_ecg"], [665, 4, 1, "", "add_eog"], [666, 4, 1, "", "add_noise"], [887, 0, 0, "-", "metrics"], [675, 4, 1, "", "select_source_in_label"], [676, 4, 1, "", "simulate_evoked"], [677, 4, 1, "", "simulate_raw"], [678, 4, 1, "", "simulate_sparse_stc"], [679, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[662, 2, 1, "", "__iter__"], [662, 2, 1, "", "add_data"], [662, 3, 1, "", "duration"], [662, 2, 1, "", "get_stc"], [662, 2, 1, "", "get_stim_channel"], [662, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[667, 4, 1, "", "cosine_score"], [668, 4, 1, "", "f1_score"], [669, 4, 1, "", "peak_position_error"], [670, 4, 1, "", "precision_score"], [671, 4, 1, "", "recall_score"], [672, 4, 1, "", "region_localization_error"], [673, 4, 1, "", "roc_auc_score"], [674, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[680, 4, 1, "", "compute_distance_to_sensors"], [681, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[690, 4, 1, "", "bonferroni_correction"], [691, 4, 1, "", "bootstrap_confidence_interval"], [692, 4, 1, "", "combine_adjacency"], [693, 4, 1, "", "f_mway_rm"], [694, 4, 1, "", "f_oneway"], [695, 4, 1, "", "f_threshold_mway_rm"], [696, 4, 1, "", "fdr_correction"], [697, 4, 1, "", "linear_regression"], [698, 4, 1, "", "linear_regression_raw"], [699, 4, 1, "", "permutation_cluster_1samp_test"], [700, 4, 1, "", "permutation_cluster_test"], [701, 4, 1, "", "permutation_t_test"], [702, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [703, 4, 1, "", "spatio_temporal_cluster_test"], [704, 4, 1, "", "summarize_clusters_stc"], [705, 4, 1, "", "ttest_1samp_no_p"], [706, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[709, 4, 1, "", "complete_surface_info"], [710, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[712, 1, 1, "", "AverageTFR"], [713, 1, 1, "", "CrossSpectralDensity"], [714, 1, 1, "", "EpochsSpectrum"], [715, 1, 1, "", "EpochsTFR"], [716, 1, 1, "", "Spectrum"], [717, 4, 1, "", "csd_array_fourier"], [718, 4, 1, "", "csd_array_morlet"], [719, 4, 1, "", "csd_array_multitaper"], [720, 4, 1, "", "csd_fourier"], [721, 4, 1, "", "csd_morlet"], [722, 4, 1, "", "csd_multitaper"], [723, 4, 1, "", "csd_tfr"], [724, 4, 1, "", "dpss_windows"], [725, 4, 1, "", "fit_iir_model_raw"], [726, 4, 1, "", "fwhm"], [727, 4, 1, "", "istft"], [728, 4, 1, "", "morlet"], [729, 4, 1, "", "pick_channels_csd"], [730, 4, 1, "", "psd_array_multitaper"], [731, 4, 1, "", "psd_array_welch"], [732, 4, 1, "", "read_csd"], [733, 4, 1, "", "read_spectrum"], [734, 4, 1, "", "read_tfrs"], [735, 4, 1, "", "stft"], [736, 4, 1, "", "stftfreq"], [890, 0, 0, "-", "tfr"], [739, 4, 1, "", "tfr_array_morlet"], [740, 4, 1, "", "tfr_array_multitaper"], [741, 4, 1, "", "tfr_array_stockwell"], [742, 4, 1, "", "tfr_morlet"], [743, 4, 1, "", "tfr_multitaper"], [744, 4, 1, "", "tfr_stockwell"], [745, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[712, 2, 1, "", "__add__"], [712, 2, 1, "", "__contains__"], [712, 2, 1, "", "__mul__"], [712, 2, 1, "", "__sub__"], [712, 2, 1, "", "add_channels"], [712, 2, 1, "", "add_reference_channels"], [712, 2, 1, "", "apply_baseline"], [712, 3, 1, "", "ch_names"], [712, 3, 1, "", "compensation_grade"], [712, 2, 1, "", "copy"], [712, 2, 1, "", "crop"], [712, 2, 1, "", "decimate"], [712, 2, 1, "", "drop_channels"], [712, 2, 1, "", "get_channel_types"], [712, 2, 1, "", "pick"], [712, 2, 1, "", "pick_channels"], [712, 2, 1, "", "pick_types"], [712, 2, 1, "", "plot"], [712, 2, 1, "", "plot_joint"], [712, 2, 1, "", "plot_topo"], [712, 2, 1, "", "plot_topomap"], [712, 2, 1, "", "reorder_channels"], [712, 2, 1, "", "save"], [712, 2, 1, "", "shift_time"], [712, 2, 1, "", "time_as_index"], [712, 3, 1, "", "times"], [712, 3, 1, "", "tmax"], [712, 3, 1, "", "tmin"], [712, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[713, 2, 1, "", "__getitem__"], [713, 2, 1, "", "__len__"], [713, 2, 1, "", "copy"], [713, 2, 1, "", "get_data"], [713, 2, 1, "", "mean"], [713, 3, 1, "", "n_channels"], [713, 2, 1, "", "pick_channels"], [713, 2, 1, "", "pick_frequency"], [713, 2, 1, "", "plot"], [713, 2, 1, "", "save"], [713, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[714, 2, 1, "", "__contains__"], [714, 2, 1, "", "__getitem__"], [714, 2, 1, "", "__iter__"], [714, 2, 1, "", "__len__"], [714, 2, 1, "", "add_channels"], [714, 2, 1, "", "add_reference_channels"], [714, 2, 1, "", "average"], [714, 3, 1, "", "compensation_grade"], [714, 2, 1, "", "copy"], [714, 2, 1, "", "drop_channels"], [714, 2, 1, "", "get_channel_types"], [714, 2, 1, "", "get_data"], [714, 3, 1, "", "metadata"], [714, 2, 1, "", "next"], [714, 2, 1, "", "pick"], [714, 2, 1, "", "pick_channels"], [714, 2, 1, "", "pick_types"], [714, 2, 1, "", "plot"], [714, 2, 1, "", "plot_topo"], [714, 2, 1, "", "plot_topomap"], [714, 2, 1, "", "reorder_channels"], [714, 2, 1, "", "save"], [714, 2, 1, "", "to_data_frame"], [714, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[715, 2, 1, "", "__contains__"], [715, 2, 1, "", "__getitem__"], [715, 2, 1, "", "__iter__"], [715, 2, 1, "", "__len__"], [715, 2, 1, "", "add_channels"], [715, 2, 1, "", "add_reference_channels"], [715, 2, 1, "", "apply_baseline"], [715, 2, 1, "", "average"], [715, 3, 1, "", "ch_names"], [715, 3, 1, "", "compensation_grade"], [715, 2, 1, "", "copy"], [715, 2, 1, "", "crop"], [715, 2, 1, "", "decimate"], [715, 2, 1, "", "drop_channels"], [715, 2, 1, "", "get_channel_types"], [715, 3, 1, "", "metadata"], [715, 2, 1, "", "next"], [715, 2, 1, "", "pick"], [715, 2, 1, "", "pick_channels"], [715, 2, 1, "", "pick_types"], [715, 2, 1, "", "reorder_channels"], [715, 2, 1, "", "save"], [715, 2, 1, "", "shift_time"], [715, 2, 1, "", "time_as_index"], [715, 3, 1, "", "times"], [715, 3, 1, "", "tmax"], [715, 3, 1, "", "tmin"], [715, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[716, 2, 1, "", "__contains__"], [716, 2, 1, "", "__getitem__"], [716, 2, 1, "", "add_channels"], [716, 2, 1, "", "add_reference_channels"], [716, 3, 1, "", "compensation_grade"], [716, 2, 1, "", "copy"], [716, 2, 1, "", "drop_channels"], [716, 2, 1, "", "get_channel_types"], [716, 2, 1, "", "get_data"], [716, 2, 1, "", "pick"], [716, 2, 1, "", "pick_channels"], [716, 2, 1, "", "pick_types"], [716, 2, 1, "", "plot"], [716, 2, 1, "", "plot_topo"], [716, 2, 1, "", "plot_topomap"], [716, 2, 1, "", "reorder_channels"], [716, 2, 1, "", "save"], [716, 2, 1, "", "to_data_frame"], [716, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[737, 4, 1, "", "cwt"], [738, 4, 1, "", "morlet"]], "mne.transforms": [[747, 1, 1, "", "Transform"], [748, 4, 1, "", "apply_volume_registration"], [749, 4, 1, "", "apply_volume_registration_points"], [750, 4, 1, "", "compute_volume_registration"], [751, 4, 1, "", "quat_to_rot"], [752, 4, 1, "", "read_ras_mni_t"], [753, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[747, 2, 1, "", "__contains__"], [747, 2, 1, "", "__getitem__"], [747, 2, 1, "", "__iter__"], [747, 2, 1, "", "__len__"], [747, 2, 1, "", "clear"], [747, 2, 1, "", "copy"], [747, 3, 1, "", "from_str"], [747, 2, 1, "", "fromkeys"], [747, 2, 1, "", "get"], [747, 2, 1, "", "items"], [747, 2, 1, "", "keys"], [747, 2, 1, "", "pop"], [747, 2, 1, "", "popitem"], [747, 2, 1, "", "save"], [747, 2, 1, "", "setdefault"], [747, 3, 1, "", "to_str"], [747, 2, 1, "", "update"], [747, 2, 1, "", "values"]], "mne.utils": [[756, 1, 1, "", "deprecated"], [757, 4, 1, "", "warn"]], "mne.viz": [[760, 1, 1, "", "Brain"], [761, 1, 1, "", "ClickableImage"], [762, 1, 1, "", "Figure3D"], [763, 4, 1, "", "add_background_image"], [764, 4, 1, "", "centers_to_edges"], [765, 4, 1, "", "circular_layout"], [766, 4, 1, "", "close_3d_figure"], [767, 4, 1, "", "close_all_3d_figures"], [768, 4, 1, "", "compare_fiff"], [769, 4, 1, "", "create_3d_figure"], [770, 4, 1, "", "get_3d_backend"], [771, 4, 1, "", "get_brain_class"], [772, 4, 1, "", "get_browser_backend"], [773, 4, 1, "", "iter_topography"], [774, 4, 1, "", "link_brains"], [775, 4, 1, "", "mne_analyze_colormap"], [776, 4, 1, "", "plot_alignment"], [777, 4, 1, "", "plot_arrowmap"], [778, 4, 1, "", "plot_bem"], [779, 4, 1, "", "plot_brain_colorbar"], [780, 4, 1, "", "plot_bridged_electrodes"], [781, 4, 1, "", "plot_ch_adjacency"], [782, 4, 1, "", "plot_channel_labels_circle"], [783, 4, 1, "", "plot_chpi_snr"], [784, 4, 1, "", "plot_compare_evokeds"], [785, 4, 1, "", "plot_cov"], [786, 4, 1, "", "plot_csd"], [787, 4, 1, "", "plot_dipole_amplitudes"], [788, 4, 1, "", "plot_dipole_locations"], [789, 4, 1, "", "plot_drop_log"], [790, 4, 1, "", "plot_epochs"], [791, 4, 1, "", "plot_epochs_image"], [792, 4, 1, "", "plot_epochs_psd_topomap"], [793, 4, 1, "", "plot_events"], [794, 4, 1, "", "plot_evoked"], [795, 4, 1, "", "plot_evoked_field"], [796, 4, 1, "", "plot_evoked_image"], [797, 4, 1, "", "plot_evoked_joint"], [798, 4, 1, "", "plot_evoked_topo"], [799, 4, 1, "", "plot_evoked_topomap"], [800, 4, 1, "", "plot_evoked_white"], [801, 4, 1, "", "plot_filter"], [802, 4, 1, "", "plot_head_positions"], [803, 4, 1, "", "plot_ica_components"], [804, 4, 1, "", "plot_ica_overlay"], [805, 4, 1, "", "plot_ica_properties"], [806, 4, 1, "", "plot_ica_scores"], [807, 4, 1, "", "plot_ica_sources"], [808, 4, 1, "", "plot_ideal_filter"], [809, 4, 1, "", "plot_layout"], [810, 4, 1, "", "plot_montage"], [811, 4, 1, "", "plot_projs_joint"], [812, 4, 1, "", "plot_projs_topomap"], [813, 4, 1, "", "plot_raw"], [814, 4, 1, "", "plot_raw_psd"], [815, 4, 1, "", "plot_regression_weights"], [816, 4, 1, "", "plot_sensors"], [817, 4, 1, "", "plot_snr_estimate"], [818, 4, 1, "", "plot_source_estimates"], [819, 4, 1, "", "plot_sparse_source_estimates"], [820, 4, 1, "", "plot_tfr_topomap"], [821, 4, 1, "", "plot_topo_image_epochs"], [822, 4, 1, "", "plot_topomap"], [823, 4, 1, "", "plot_vector_source_estimates"], [824, 4, 1, "", "plot_volume_source_estimates"], [825, 4, 1, "", "set_3d_backend"], [826, 4, 1, "", "set_3d_options"], [827, 4, 1, "", "set_3d_title"], [828, 4, 1, "", "set_3d_view"], [829, 4, 1, "", "set_browser_backend"], [830, 4, 1, "", "snapshot_brain_montage"], [831, 4, 1, "", "use_3d_backend"], [832, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[760, 2, 1, "", "add_annotation"], [760, 2, 1, "", "add_data"], [760, 2, 1, "", "add_dipole"], [760, 2, 1, "", "add_foci"], [760, 2, 1, "", "add_forward"], [760, 2, 1, "", "add_head"], [760, 2, 1, "", "add_label"], [760, 2, 1, "", "add_sensors"], [760, 2, 1, "", "add_skull"], [760, 2, 1, "", "add_text"], [760, 2, 1, "", "add_volume_labels"], [760, 2, 1, "", "apply_auto_scaling"], [760, 2, 1, "", "clear_glyphs"], [760, 2, 1, "", "close"], [760, 3, 1, "", "data"], [760, 2, 1, "", "get_picked_points"], [760, 2, 1, "", "get_view"], [760, 2, 1, "", "help"], [760, 3, 1, "", "interaction"], [760, 2, 1, "", "plot_time_course"], [760, 2, 1, "", "plot_time_line"], [760, 2, 1, "", "remove_annotations"], [760, 2, 1, "", "remove_data"], [760, 2, 1, "", "remove_dipole"], [760, 2, 1, "", "remove_forward"], [760, 2, 1, "", "remove_head"], [760, 2, 1, "", "remove_labels"], [760, 2, 1, "", "remove_sensors"], [760, 2, 1, "", "remove_skull"], [760, 2, 1, "", "remove_text"], [760, 2, 1, "", "remove_volume_labels"], [760, 2, 1, "", "reset"], [760, 2, 1, "", "reset_view"], [760, 2, 1, "", "restore_user_scaling"], [760, 2, 1, "", "save_image"], [760, 2, 1, "", "save_movie"], [760, 2, 1, "", "screenshot"], [760, 2, 1, "", "set_data_smoothing"], [760, 2, 1, "", "set_playback_speed"], [760, 2, 1, "", "set_time"], [760, 2, 1, "", "set_time_interpolation"], [760, 2, 1, "", "set_time_point"], [760, 2, 1, "", "setup_time_viewer"], [760, 2, 1, "", "show"], [760, 2, 1, "", "show_view"], [760, 3, 1, "", "time_interpolation"], [760, 2, 1, "", "toggle_interface"], [760, 2, 1, "", "toggle_playback"], [760, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[761, 2, 1, "", "onclick"], [761, 2, 1, "", "plot_clicks"], [761, 2, 1, "", "to_layout"]], "mne.viz.Figure3D": [[762, 3, 1, "", "plotter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 27, 146, 247, 851], "analysi": [0, 4, 10, 14, 27, 36, 137, 146, 151, 165, 166, 218, 233, 238, 241, 242, 243, 869, 871, 878], "exampl": [0, 3, 27, 98, 105, 138, 146, 156, 165, 175, 196, 205, 206, 207, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 288, 289, 291, 293, 294, 295, 298, 299, 300, 301, 303, 304, 312, 313, 314, 315, 316, 318, 320, 324, 325, 326, 328, 330, 332, 336, 340, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 374, 376, 385, 392, 405, 406, 414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 443, 448, 449, 450, 454, 455, 457, 462, 463, 466, 467, 471, 473, 476, 477, 478, 479, 481, 482, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 500, 502, 503, 504, 506, 508, 509, 510, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 551, 553, 555, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 571, 572, 573, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 598, 599, 601, 602, 603, 605, 606, 607, 611, 613, 617, 618, 619, 620, 621, 622, 623, 626, 629, 631, 633, 634, 637, 639, 641, 642, 643, 644, 646, 650, 652, 653, 655, 656, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 684, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 710, 711, 712, 713, 714, 715, 716, 720, 721, 722, 723, 725, 728, 731, 739, 742, 743, 744, 752, 754, 755, 759, 760, 761, 764, 765, 769, 771, 773, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 791, 793, 796, 798, 800, 801, 802, 808, 811, 812, 817, 818, 819, 822, 823, 827, 828, 830, 832, 840, 845, 868, 877, 880], "brainstorm": [1, 183, 184, 191, 380, 381, 382, 868], "raw": [1, 7, 29, 71, 81, 90, 93, 94, 137, 140, 152, 168, 172, 177, 204, 211, 212, 213, 216, 217, 218, 219, 222, 257, 481, 871, 874, 883], "median": [1, 868], "nerv": [1, 868], "dataset": [1, 2, 3, 4, 7, 27, 71, 83, 183, 184, 185, 191, 216, 242, 250, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 868, 871], "refer": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 60, 66, 71, 72, 75, 76, 79, 83, 84, 88, 94, 101, 109, 112, 113, 117, 119, 121, 126, 129, 137, 141, 144, 151, 155, 157, 162, 176, 178, 180, 183, 184, 189, 191, 195, 196, 200, 202, 204, 205, 206, 207, 208, 210, 212, 224, 227, 228, 232, 240, 851, 867, 868, 871, 874, 882], "hf": 2, "sef": [2, 868], "open": [3, 27, 257, 851, 880], "singl": [4, 28, 104, 128, 229, 230, 231], "trial": [4, 128, 211, 217, 229, 230, 231, 241, 242], "linear": [4, 18, 257, 874], "regress": [4, 74, 99, 101, 141, 204, 212], "limo": [4, 398, 868], "about": [4, 170, 171, 199, 874], "data": [4, 5, 7, 8, 11, 13, 15, 18, 19, 21, 27, 29, 30, 41, 42, 49, 51, 57, 60, 64, 66, 72, 74, 76, 80, 81, 86, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 109, 114, 115, 116, 119, 120, 121, 129, 135, 136, 137, 140, 141, 142, 146, 147, 149, 150, 152, 159, 165, 166, 167, 168, 169, 172, 175, 177, 178, 180, 188, 189, 190, 191, 192, 193, 195, 201, 203, 204, 211, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 228, 231, 232, 233, 235, 236, 237, 240, 242, 249, 257, 677, 867, 868, 871, 874, 877, 883, 886, 888], "load": [4, 19, 47, 74, 115, 116, 136, 137, 140, 141, 149, 159, 166, 175, 178, 190, 195, 206, 213, 216, 223, 874], "visual": [4, 19, 27, 47, 48, 49, 50, 54, 55, 112, 117, 122, 136, 140, 142, 144, 149, 150, 156, 158, 170, 177, 180, 181, 182, 195, 204, 205, 206, 207, 209, 227, 232, 235, 236, 237, 240, 851, 868, 880, 891], "event": [4, 70, 113, 137, 144, 151, 166, 168, 172, 213, 217, 252, 440, 441, 442], "condit": [4, 13, 132, 151, 230, 231], "erp": [4, 141, 144, 151, 868], "effect": [4, 16, 195, 196, 204, 206, 227, 242, 874], "stimulu": [4, 19, 213], "phase": [4, 107], "coher": [4, 241], "prepar": [4, 5, 144, 204, 237], "defin": [4, 70, 90, 156, 227, 229], "predictor": 4, "variabl": [4, 171, 851], "design": [4, 137, 196, 202, 869], "matrix": [4, 41, 65, 71, 103, 162, 227, 235, 867, 871, 874, 877], "extract": [4, 37, 39, 94, 137, 140, 209, 211, 213, 216, 242], "coeffici": [4, 19], "plot": [4, 18, 34, 41, 42, 43, 44, 47, 48, 50, 61, 70, 71, 81, 82, 84, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 133, 136, 141, 142, 150, 152, 162, 170, 211, 213, 217, 219, 223, 229, 230, 241, 242, 849, 871], "model": [4, 19, 23, 27, 45, 111, 157, 158, 163, 165, 166, 177, 180, 195, 197, 208, 255, 257, 867, 873, 874, 880], "result": [4, 43, 44, 54, 242], "optic": [5, 211, 212], "pump": [5, 212], "magnetomet": [5, 212], "opm": [5, 109, 188, 212, 402, 868, 880], "local": [5, 31, 165, 176, 177, 178, 182, 186, 851, 867], "perform": [5, 74, 90, 136, 195], "dipol": [5, 45, 90, 116, 176, 178, 181, 263, 434], "fit": [5, 19, 157, 176, 181, 195, 205], "minimum": [5, 874], "norm": [5, 40, 874], "comput": [6, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 45, 46, 47, 49, 51, 54, 55, 56, 58, 59, 60, 67, 71, 85, 90, 91, 94, 102, 103, 104, 106, 107, 108, 109, 110, 112, 130, 136, 139, 148, 154, 158, 159, 162, 164, 170, 174, 177, 179, 180, 187, 194, 198, 202, 204, 205, 206, 209, 215, 221, 226, 229, 230, 232, 234, 235, 236, 237, 239, 244, 248, 257, 867, 874, 880], "time": [6, 9, 13, 20, 25, 27, 32, 37, 39, 46, 56, 59, 67, 70, 71, 73, 85, 86, 91, 94, 102, 105, 106, 114, 130, 136, 139, 140, 142, 144, 145, 148, 154, 164, 165, 166, 174, 181, 187, 194, 196, 198, 205, 215, 216, 221, 226, 229, 230, 232, 234, 239, 241, 242, 243, 244, 851, 880, 890], "from": [7, 8, 15, 19, 37, 38, 43, 44, 62, 90, 104, 129, 137, 140, 142, 144, 149, 168, 169, 188, 189, 190, 192, 204, 207, 211, 213, 216, 217, 218, 219, 222, 223, 249, 257, 878], "dspm": [7, 28, 30, 34, 54, 94, 110, 177, 874], "spm": [7, 868], "face": [7, 868], "motor": [8, 868], "imageri": [8, 868], "decod": [8, 9, 11, 12, 13, 15, 17, 18, 27, 196, 251, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432], "eeg": [8, 15, 22, 55, 58, 66, 68, 71, 72, 79, 118, 125, 151, 159, 166, 182, 188, 189, 208, 213, 228, 242, 867, 874, 880], "us": [8, 9, 14, 18, 26, 32, 33, 34, 35, 39, 47, 57, 64, 68, 72, 84, 94, 137, 143, 146, 149, 155, 156, 157, 160, 161, 171, 180, 195, 205, 208, 210, 231, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 288, 289, 291, 293, 294, 295, 298, 299, 300, 301, 303, 304, 312, 313, 314, 315, 316, 318, 320, 324, 325, 326, 328, 330, 332, 336, 340, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 374, 376, 385, 392, 405, 406, 414, 415, 417, 418, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 443, 448, 449, 450, 454, 455, 457, 462, 463, 466, 467, 471, 473, 476, 477, 478, 479, 481, 482, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 500, 502, 503, 504, 506, 508, 509, 510, 512, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 551, 553, 555, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 571, 572, 573, 576, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 598, 599, 601, 602, 603, 605, 606, 607, 611, 613, 617, 618, 619, 620, 621, 622, 623, 626, 629, 631, 633, 634, 637, 639, 641, 642, 643, 644, 646, 650, 652, 653, 655, 656, 660, 661, 662, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 684, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 710, 711, 712, 713, 714, 715, 716, 720, 721, 722, 723, 725, 728, 731, 739, 742, 743, 744, 752, 754, 755, 759, 760, 761, 764, 765, 769, 771, 773, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 791, 793, 796, 798, 800, 801, 802, 808, 811, 812, 817, 818, 819, 822, 823, 827, 828, 830, 832, 840, 845, 849, 851, 864, 867, 871, 874, 877], "common": [8, 9, 196, 213, 235, 237, 240], "spatial": [8, 9, 16, 21, 54, 55, 180, 196, 223], "pattern": [8, 9, 18, 196], "csp": [8, 9, 414], "frequenc": [9, 27, 32, 46, 59, 105, 113, 114, 136, 165, 166, 190, 199, 202, 209, 229, 230, 232, 240, 241, 242, 243, 868, 880, 890], "space": [9, 11, 13, 18, 24, 26, 30, 41, 54, 58, 101, 104, 107, 110, 146, 158, 159, 163, 165, 178, 196, 206, 207, 210, 217, 223, 235, 237, 257, 867, 874, 877, 886, 888], "represent": [10, 114, 211, 231, 874], "similar": [10, 149], "sourc": [11, 24, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 58, 72, 90, 94, 95, 104, 107, 108, 109, 110, 116, 156, 158, 159, 163, 165, 172, 176, 177, 178, 180, 181, 182, 186, 196, 208, 223, 235, 236, 237, 238, 257, 867, 874, 880, 888], "continu": [12, 81, 99, 101, 146, 147, 165, 166, 190, 195, 209, 216, 218, 219, 220, 874], "target": [12, 70], "spoc": [12, 196, 421], "sensor": [13, 18, 22, 84, 96, 97, 100, 101, 116, 118, 123, 125, 133, 136, 142, 165, 170, 190, 196, 207, 211, 212, 219, 223, 232, 233, 241, 874, 886], "gener": [13, 24, 38, 92, 93, 95, 144, 189, 196, 201, 212, 223, 245, 851, 871, 874], "across": [13, 71, 82, 151, 211], "evok": [14, 30, 34, 41, 51, 60, 70, 86, 90, 92, 94, 119, 120, 121, 127, 132, 149, 150, 151, 152, 153, 165, 166, 172, 177, 204, 212, 222, 267, 867], "respons": [14, 70, 132, 144, 151, 153, 165, 166, 177, 195, 204, 211, 212, 879], "ica": [14, 77, 83, 172, 205, 564, 867], "pca": [14, 47, 257], "reduct": [14, 205, 206, 207], "techniqu": 14, "xdawn": [15, 88, 196, 565], "match": [16, 196, 205], "filter": [16, 18, 21, 49, 80, 114, 151, 180, 196, 202, 203, 205, 210, 212, 449, 450, 451, 452, 453, 454, 874], "em": [16, 415], "machin": [17, 27, 165, 197], "learn": [17, 27, 137, 165, 197], "encod": [17, 27, 677], "mvpa": [17, 27, 196], "classifi": 18, "logisticregress": 18, "recept": [19, 195], "field": [19, 150, 151, 195, 212, 874, 877], "estim": [19, 34, 38, 41, 42, 43, 44, 57, 90, 153, 165, 166, 181, 182, 195, 209, 223, 238, 247, 867, 874], "predict": [19, 874], "public": [19, 127], "creat": [19, 90, 94, 115, 116, 137, 140, 144, 149, 188, 195, 204, 207, 208, 218, 222, 223, 231, 249, 257, 851, 867, 874], "investig": 19, "reconstruct": [19, 90, 94, 155, 160, 180, 207, 867], "spectro": [21, 195], "decomposit": 21, "ssd": [21, 422], "epoch": [21, 28, 42, 94, 104, 114, 117, 137, 140, 142, 143, 144, 145, 146, 147, 149, 151, 152, 165, 166, 172, 201, 204, 205, 211, 222, 232, 235, 237, 265, 435, 436, 437, 438, 867, 874], "displai": 22, "sensit": [22, 131], "map": [22, 35, 112, 120, 131, 142, 149, 150, 217, 224, 874], "meg": [22, 55, 75, 79, 87, 123, 133, 166, 188, 212, 223, 868, 874, 880], "forward": [23, 27, 47, 109, 158, 159, 163, 165, 172, 180, 255, 269, 458, 459, 460, 461, 867, 871, 874], "left": [24, 211], "cerebellum": 24, "volum": [24, 30, 41, 50, 181], "morph": [26, 43, 44, 180, 874], "galleri": 27, "input": [27, 63], "output": [27, 63, 160, 180], "simul": [27, 89, 90, 92, 93, 94, 95, 114, 165, 195, 205, 223, 224, 225, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 887], "preprocess": [27, 78, 109, 136, 141, 165, 166, 211, 212, 214, 218, 242, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 867, 881], "statist": [27, 98, 165, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 242, 874, 880, 889], "invers": [27, 28, 29, 30, 31, 35, 36, 39, 40, 41, 42, 47, 52, 57, 94, 104, 165, 166, 177, 186, 860, 866, 867, 871, 874], "problem": [27, 36, 202], "mne": [28, 30, 41, 42, 54, 61, 77, 116, 124, 138, 155, 160, 161, 165, 166, 171, 172, 177, 179, 188, 200, 202, 205, 206, 210, 213, 216, 222, 227, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 848, 851, 853, 854, 855, 857, 858, 859, 863, 866, 870, 871, 874, 877, 885], "solut": [28, 29, 30, 35, 39, 40, 41, 47, 61, 104, 158, 172, 177, 179, 202, 205, 257, 860, 867, 871, 874], "sloreta": [29, 177, 874], "custom": [31, 127, 133, 172, 190], "solver": 31, "level": [32, 96, 129, 877], "timecours": [32, 45, 127], "dic": [32, 33, 34, 224], "beamform": [32, 33, 34, 49, 180, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "power": [33, 34, 42, 104, 107, 108, 109, 110, 136, 142, 151, 196, 199, 203, 224, 229, 230, 231, 241, 242], "er": 34, "lcmv": [34, 49, 180], "covari": [34, 42, 49, 65, 121, 162, 172, 177, 180, 223, 248, 262, 867, 871, 874], "spars": [35, 40, 59], "gamma": [35, 136], "empir": 35, "bayesian": 35, "method": [35, 76, 212, 216, 219, 227], "cours": [37, 94, 181], "source_estim": 37, "object": [37, 44, 137, 140, 142, 143, 145, 149, 150, 168, 169, 216, 218, 219, 222, 240, 249, 868, 871], "function": [38, 47, 48, 49, 50, 137, 211, 227, 237, 851, 871, 877], "label": [38, 39, 41, 47, 104, 107, 108, 223, 271, 516, 877], "seri": [39, 71, 142], "activ": [39, 90, 94, 127, 128, 165, 180, 197, 211], "view": [39, 41, 82, 116, 143, 211, 229, 230, 257], "vector": [39, 43, 61, 172, 180, 181, 196, 429], "mix": [40, 41], "mxne": [40, 46, 59], "irmxn": 40, "set": [41, 43, 145, 151, 157, 171, 189, 208, 229, 231, 232, 235, 236, 237, 257, 851, 867, 868], "up": [41, 43, 157, 161, 257, 851, 867], "our": [41, 182], "fwd": [41, 877], "surfac": [41, 43, 158, 160, 161, 170, 181, 182, 211, 257, 709, 710, 867, 874, 877], "process": [41, 167, 180, 851, 865], "project": [42, 84, 115, 131, 170, 172, 196, 206, 257, 274, 873, 874, 877], "empti": [42, 129, 207], "room": [42, 129, 207], "appli": [42, 43, 44, 76, 137, 144, 180, 188, 190, 202, 204, 206, 242, 257], "oper": [42, 47, 52, 94, 114, 158, 159, 161, 218, 867, 869, 874], "sourcemorph": [43, 44, 277], "sourceestim": [43, 172, 175, 276], "read": [43, 44, 47, 52, 53, 65, 66, 137, 165, 168, 170, 189, 193, 217, 218, 232, 235, 237, 871, 877, 883], "write": [43, 44, 65, 217, 218, 877], "disk": [43, 44, 140], "volumetr": [44, 180, 874], "get": [44, 62, 159, 161, 171, 172, 182, 242, 858, 871, 872, 876], "volsourceestim": [44, 280], "convert": [44, 115, 145, 168, 211, 257], "nifti": 44, "an": [45, 52, 53, 57, 71, 117, 142, 143, 145, 157, 159, 161, 168, 169, 172, 180, 182, 205, 208, 212, 242, 867], "xfit": 45, "like": [45, 170], "multi": 45, "iter": [46, 140], "reweight": 46, "tf": 46, "multiscal": 46, "dictionari": 46, "leakag": 47, "among": [47, 149], "circular": 47, "graph": 47, "organis": 47, "cortic": [47, 69, 126, 136, 160, 235, 237, 867, 874], "parcel": [47, 126], "point": [47, 48, 50, 157, 223, 874], "spread": [47, 48, 50, 223], "summari": [47, 71, 167, 175, 199, 200, 202, 216, 892], "all": [47, 180, 200, 231, 235, 237, 851, 855, 859, 871], "evalu": [47, 211], "base": [47, 70, 137, 141, 201, 257, 869, 874], "psf": [47, 48, 50], "correl": 47, "save": [47, 140, 149, 172, 206, 216], "figur": [47, 127, 172], "option": [47, 120, 257, 851, 871], "individu": [47, 877], "cross": [48, 49, 103, 134, 851], "talk": [48, 49], "ctf": [48, 123, 184, 188, 191], "differ": [49, 77, 90, 132, 141, 165, 193, 195, 242], "matric": [49, 162, 180], "resolut": [49, 54, 55, 161, 192, 257], "two": [49, 223], "rap": 51, "music": [51, 60], "stc": [53, 90, 175, 181, 877], "file": [53, 62, 170, 172, 189, 217, 218, 254, 257, 867, 871, 874, 877], "metric": [54, 55, 71, 667, 668, 669, 670, 671, 672, 673, 674], "compar": [55, 71, 77, 90, 132, 150, 151, 195, 211, 212, 227, 257], "eegmeg": 55, "snr": [57, 58, 209, 242], "prior": 59, "trap": 60, "full": [61, 232], "valu": [61, 145, 242], "averag": [62, 114, 149, 151, 208, 874], "info": [62, 169, 216, 222, 257, 270, 877], "fif": [62, 188, 257, 871], "how": [64, 115, 160, 162, 200, 207, 218, 866, 871], "neural": [64, 165, 195, 197, 211], "ensembl": 64, "neo": 64, "format": [64, 145, 189, 190, 874], "nois": [65, 121, 129, 177, 199, 203, 206, 207, 223, 242, 867, 868, 874], "xdf": [66, 189], "contralater": 68, "referenc": [68, 192], "signal": [69, 150, 167, 168, 206, 207, 209, 210, 211, 212, 223, 242, 874, 877], "suppress": [69, 867], "css": 69, "remov": [69, 74, 83, 205, 206, 211, 235, 237], "lag": 70, "identifi": 71, "electrod": [71, 115, 136, 182, 189, 874], "bridg": 71, "too": 71, "much": 71, "gel": 71, "electr": 71, "distanc": 71, "examin": [71, 141, 212], "distribut": [71, 76, 178, 849, 880], "topomap": [71, 120], "voltag": 71, "subject": [71, 94, 209, 257, 868], "eegbci": [71, 83, 383, 384, 868], "The": [71, 140, 144, 149, 167, 168, 169, 170, 175, 178, 180, 201, 216, 240, 867, 868, 873, 874, 877], "relationship": [71, 175], "between": [71, 168, 230], "imped": 71, "transform": [72, 114, 137, 156, 160, 196, 235, 237, 747, 748, 749, 750, 751, 752, 753, 874, 877], "current": [72, 116, 176, 256, 874, 879], "densiti": [72, 103, 104, 108, 109, 211, 219, 242], "csd": [72, 103], "show": [73, 129, 213, 257], "eog": [73, 74, 199, 204, 205, 207, 257], "artifact": [73, 74, 75, 76, 81, 82, 199, 203, 204, 205, 207, 213, 257, 867], "reduc": 74, "through": 74, "import": [74, 76, 127, 188, 189, 190, 192, 257, 851], "packag": [74, 859, 874], "befor": [74, 204, 851], "after": [74, 849], "comparison": [74, 134, 227, 231], "find": [75, 223, 232, 235], "channel": [75, 79, 87, 117, 140, 145, 149, 151, 167, 168, 169, 170, 188, 200, 201, 205, 208, 211, 216, 232, 235, 237, 242, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 677, 867, 868, 874, 877], "visualis": [76, 228], "nir": [76, 601, 602, 603, 604, 605, 606], "correct": [76, 97, 141, 144, 212, 227], "add": [76, 116], "artifici": 76, "tempor": [76, 84, 111, 195, 196, 235, 236, 237], "deriv": 76, "repair": [76, 203, 204, 205, 207, 874], "algorithm": [77, 257, 866, 874], "interpol": [79, 120, 200, 874], "bad": [79, 156, 157, 161, 200, 201, 235, 237, 867, 874], "maxwel": [80, 210, 874], "movement": [80, 81, 209, 210], "compens": [80, 188, 210, 874, 877], "annot": [81, 82, 137, 168, 201, 211, 213, 218, 259, 867], "reestim": 81, "dev_head_t": 81, "head": [81, 116, 156, 158, 160, 161, 182, 189, 192, 209, 257, 867, 874], "posit": [81, 115, 116, 192, 209], "respect": 81, "mean": [81, 151], "record": [81, 82, 165, 189, 193, 207], "muscl": [82, 83], "z": 82, "score": [82, 90], "compon": [83, 144, 180, 205], "let": 83, "": [83, 114, 160, 892], "now": 83, "replic": 83, "thi": [83, 195], "denois": [84, 88, 212], "oversampl": 84, "shift": 86, "scale": [86, 145, 152, 874], "remap": 87, "type": [87, 140, 151, 169, 195, 202, 216, 242, 257, 851, 874], "main": 90, "paramet": [90, 167, 201, 229, 231, 232, 235, 236, 237], "true": 90, "correspond": [90, 867], "amplitud": [90, 151, 201], "threshold": [90, 227, 228], "For": [90, 877], "region": [90, 116, 151], "anatomi": 94, "responss": 94, "permut": [96, 100, 231, 232, 235, 236], "f": [96, 99, 232], "test": [96, 97, 100, 137, 227, 231, 232, 235, 236, 850, 851, 857], "1d": 96, "cluster": [96, 227, 229, 230, 231, 232, 235, 236, 237, 880], "fdr": [97, 227, 231], "t": [97, 100, 235, 871], "rer": 99, "p": 99, "analys": [101, 867], "featur": [101, 136, 137], "bin": [101, 188, 871], "spectral": [103, 104, 108, 109, 219, 240, 242], "psd": [104, 108, 109, 242], "lock": [107, 144], "vectorview": [109, 188, 216], "align": [109, 156, 160, 213, 257, 677, 867], "alpha": 109, "beta": 109, "induc": 110, "whiten": [111, 121, 152, 874, 877], "ar": [111, 149, 171, 199, 206, 871, 877], "erd": 112, "explor": [113, 136], "relat": [113, 151, 858, 877], "dynam": 113, "specif": 113, "band": 113, "multitap": 114, "v": [114, 196, 216, 854], "morlet": [114, 728, 738], "stockwel": 114, "hilbert": 114, "calcul": [114, 242, 867, 874], "tfr": [114, 231, 737, 738], "wavelet": 114, "narrow": 114, "bandpass": 114, "without": [114, 156], "over": [114, 117, 140, 196, 211], "arrai": [114, 168, 217, 249, 874], "3d": [115, 150, 170, 180, 849, 871, 874, 880], "2d": [115, 170, 180, 880], "imag": [115, 116, 117, 142, 150, 172, 211, 257, 866, 874, 880], "snapshot": 115, "manual": [115, 170, 205], "viz": [116, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832], "brain": [116, 124, 127, 136, 160, 180, 211, 760], "inform": [116, 169, 171, 178, 202, 211, 257, 867, 874, 877], "modifi": [116, 143, 167, 216, 851], "highlight": 116, "includ": [116, 217, 257], "screenshot": 116, "export": [116, 145, 161, 216, 253, 444, 445, 446, 447], "scalp": [118, 141, 150], "topograph": [119, 120, 150, 152, 211], "arrowmap": 119, "basic": [120, 136, 140, 144, 149, 202, 242, 851, 877], "plot_topomap": [120, 822], "addit": 120, "more": [120, 127, 211, 877], "advanc": [120, 849], "usag": 120, "anim": 120, "layout": [123, 125, 170, 231, 315], "system": [123, 125, 165, 171, 188, 190, 193, 257, 857, 874], "neuromag": [123, 188], "bti": [123, 185, 188, 257, 868], "kit": [123, 188, 257, 484], "artemis123": [123, 188], "helmet": 124, "make": [127, 168, 217, 851, 873], "readi": 127, "montag": [127, 170], "inset": 127, "group": [128, 144, 867], "roi": [128, 242], "sort": 128, "rt": 128, "ssp": [131, 206, 207, 257, 867, 874], "topographi": [133, 141, 150, 242], "hemispher": [134, 257, 867], "work": [135, 136, 143, 165, 170, 172, 191, 200, 213, 217, 220, 849, 871], "seeg": [135, 868, 880], "ecog": [136, 868, 880], "templat": [136, 159, 205, 868], "evolut": 136, "sleep": [137, 868], "stage": 137, "classif": 137, "polysomnographi": 137, "psg": 137, "hypnogram": 137, "30": 137, "found": [137, 871], "same": 137, "step": [137, 155, 854, 871], "bob": 137, "engin": 137, "scikit": 137, "python": [137, 138, 155, 160, 161, 165, 166, 171, 172, 200, 202, 205, 206, 210, 213, 216, 222, 246, 257, 848, 849, 851, 853, 854, 855, 856, 859, 866, 869, 870, 871, 876, 880, 882], "multiclass": 137, "workflow": [137, 851, 867], "further": 137, "exercis": [137, 158, 196, 223, 232, 241, 242], "clinic": [138, 165, 880], "applic": [138, 165], "gui": [138, 156, 165, 257, 473], "addon": [138, 165], "structur": [140, 149, 168, 169, 175, 188, 216, 222, 874, 877], "discontinu": 140, "subselect": [140, 217], "select": [140, 143, 149, 205, 211, 216, 235, 877], "index": [140, 145, 216, 242], "drop": [140, 149, 169, 216], "reorder": [140, 149, 216], "chang": [140, 208, 216, 851, 892], "name": [140, 151, 188, 216, 851, 877], "domain": [140, 190, 205, 216, 240], "other": [140, 149, 202, 256, 849, 851, 855, 866, 874, 878], "form": [140, 242], "baselin": [141, 202, 223, 288], "tradit": 141, "regressor": 141, "wave": [141, 190], "interact": [141, 142, 218, 219, 869], "term": 141, "pipelin": [142, 880], "script": [142, 172, 869], "projector": [142, 206, 207, 208, 219], "locat": [142, 151, 170, 182, 189, 190, 211, 219, 874], "spectrum": [142, 240, 716], "metadata": [143, 144], "restrict": 143, "datafram": [143, 145], "queri": [143, 169, 216], "ad": [143, 144, 172, 206], "auto": 144, "make_metadata": [144, 438], "specifi": [144, 190], "keep": 144, "onli": [144, 859], "first": [144, 155, 851, 854, 880], "new": [144, 851, 892], "column": [144, 168], "describ": [144, 851], "stimul": [144, 242], "side": 144, "knowledg": 144, "ern": 144, "panda": 145, "wide": 145, "versu": [145, 231, 869], "long": [145, 216], "divid": 146, "equal": [146, 217], "characterist": 146, "fix": [146, 161, 178, 179], "length": [146, 202], "case": 146, "segment": [147, 165], "subset": [149, 169, 242], "memori": [149, 188, 874], "core": [149, 855, 868, 871], "combin": [149, 217], "trace": 150, "butterfli": 150, "arrow": 150, "joint": [150, 241], "subplot": 150, "potenti": [151, 878], "global": 151, "gfp": 151, "interest": [151, 232, 873], "grand": 151, "latenc": 151, "measur": [151, 231, 237, 257], "peak": 151, "freesurf": [155, 160, 257, 852, 867, 874, 877], "mri": [155, 156, 159, 160, 172, 180, 182, 257, 865, 868, 874], "anatom": [155, 867], "fsaverag": [155, 159, 180, 868], "coordin": [156, 160, 190, 257, 867, 874, 877], "frame": [156, 160, 867], "understand": [156, 160], "definit": [156, 232, 874, 877], "A": [156, 871], "good": 156, "defac": 156, "tran": [156, 877], "autom": 157, "approach": [157, 257], "coregistr": [157, 158, 172, 257, 367, 473], "initi": 157, "fiduci": 157, "refin": 157, "icp": 157, "omit": 157, "final": 157, "bem": [158, 161, 172, 257, 304, 305, 306, 307, 308, 309, 310, 311, 867, 871, 874], "adult": 159, "setup": [159, 224, 231, 232, 849, 854, 862], "infant": [159, 868], "surrog": 159, "under": [160, 871], "hood": 160, "ra": [160, 182], "spheric": 160, "decim": [160, 871], "mni": [160, 180], "affin": 160, "inflat": 160, "blender": 161, "edit": [161, 172], "low": [161, 199, 202], "high": [161, 202, 257, 868, 877], "tip": 161, "what": [161, 168, 199, 205, 206, 207, 257, 833, 858, 871, 892], "you": 161, "still": [161, 871], "error": 161, "clean": [161, 257], "dens": 161, "smooth": [161, 874], "topolog": 161, "deal": 161, "topologi": [161, 874], "pymeshfix": 161, "should": [162, 858, 871], "i": [162, 168, 170, 205, 206, 207, 254, 849, 857, 858, 871, 874], "regular": [162, 177, 195, 374, 871, 874], "tutori": [165, 173, 183, 184, 185, 880], "introductori": [165, 173], "overview": [166, 199, 851, 858, 867, 868, 875, 877], "detect": [166, 199, 201, 211], "experiment": 166, "place": [167, 170, 869], "pick": 167, "copi": 167, "pars": 168, "stim": [168, 677], "middl": 168, "embed": 168, "multipl": [168, 227, 231, 871], "per": [168, 867], "obtain": 169, "built": [170, 219], "eeglab": [170, 189, 878], "sphere": [170, 874], "keyword": 170, "avail": 170, "mani": 170, "control": 170, "digit": [170, 874], "render": [170, 180, 849], "configur": [171, 851, 857, 861], "where": 171, "store": 171, "environ": [171, 851], "log": [171, 189, 861], "your": [171, 850, 851], "start": [172, 876], "report": [172, 202, 257, 275, 885], "inverseoper": [172, 530], "code": [172, 240, 851, 854, 868], "e": 172, "g": 172, "tag": [172, 242, 877], "entir": 172, "folder": [172, 257], "html": 172, "descript": [172, 874], "text": 172, "inspect": [175, 241, 874], "sourcespac": [175, 278], "src": 175, "equival": 176, "ecd": 176, "eloreta": [177, 874], "role": 178, "orient": [178, 179, 874], "loos": 178, "limit": 178, "them": 178, "discard": 178, "variou": 179, "free": [179, 227], "introduct": 180, "handl": [180, 200, 213], "depth": [180, 874], "bia": [180, 207], "On": [180, 877], "slice": 180, "orthoview": 180, "glass": 180, "maximum": [180, 227], "voxel": [180, 182], "three": 180, "given": 182, "prerequisit": 182, "coord": 182, "elekta": [183, 188], "phantom": [183, 184, 185], "4d": [185, 257, 868], "neuroimag": [185, 188, 868], "devic": [188, 189, 190, 192, 874], "megin": 188, "triux": 188, "fil": 188, "4": [188, 892], "d": 188, "dir": 188, "polhemu": 188, "softwar": [188, 202, 858, 866, 874, 877, 878], "gradient": [188, 874, 877], "ricoh": 188, "con": 188, "sqd": 188, "fieldtrip": [188, 232], "mat": 188, "arbitrari": [188, 237], "brainvis": 189, "vhdr": 189, "vmrk": 189, "european": 189, "edf": 189, "biosemi": 189, "bdf": 189, "gdf": 189, "neuroscan": 189, "cnt": 189, "egi": 189, "simpl": [189, 871], "binari": 189, "mff": 189, "fdt": 189, "nicolet": 189, "eximia": 189, "nxe": 189, "persyst": 189, "lai": 189, "dat": 189, "nihon": 189, "kohden": 189, "21e": 189, "pnt": 189, "xdfz": 189, "shape": 189, "fnir": [190, 211, 868], "standard": [190, 211, 227, 384, 851], "snirf": 190, "nirx": 190, "directori": [190, 868, 874, 877], "hdr": 190, "hitachi": 190, "csv": 190, "boxi": 190, "txt": 190, "legaci": [190, 240], "tsv": 190, "auditori": [191, 868], "eyetrack": [192, 584, 585, 586, 587], "sr": 192, "research": 192, "eyelink": [192, 387, 868], "asc": 192, "ey": [192, 213, 880], "gaze": 192, "angl": 192, "href": 192, "pupil": 192, "size": [192, 227], "veloc": 192, "strf": 195, "audio": 195, "recov": 195, "philosophi": [196, 869], "class": [196, 240, 849, 857, 864, 880], "scaler": [196, 423], "psdestim": [196, 419], "filterestim": [196, 416], "comodul": 196, "do": [199, 871], "drift": [199, 203, 205], "line": [199, 203, 257, 851, 877], "heartbeat": 199, "ecg": [199, 205, 207, 257], "ocular": [199, 213], "mark": [200, 867], "block": 200, "execut": 200, "when": [200, 206, 851], "look": [200, 205, 871], "why": [200, 871, 874], "reject": [201, 867], "span": 201, "break": 201, "reject_by_annot": 201, "programmat": [201, 218], "background": [202, 203, 206, 208, 210, 223], "statement": 202, "fir": 202, "iir": 202, "some": [202, 877], "pitfal": [202, 878], "pass": 202, "default": [202, 874], "c": [202, 857], "cutoff": 202, "order": 202, "transit": 202, "bandwidth": 202, "roll": 202, "off": [202, 849], "passband": 202, "rippl": 202, "stopband": 202, "attenu": 202, "delai": 202, "direct": 202, "resampl": [203, 227, 454, 871], "slow": [203, 205, 871], "best": [203, 206], "practic": [203, 206], "origin": [204, 223], "subtract": 204, "dimension": 205, "ignor": 205, "terminologi": 206, "environment": 207, "affect": [207, 218], "choos": 207, "number": [207, 216, 874], "via": [207, 212, 855, 874, 880], "infinit": 208, "rest": [208, 868], "bipolar": 208, "hpi": 209, "separ": [210, 242], "sss": 210, "spatiotempor": [210, 232], "tsss": 210, "caveat": 210, "infrar": 211, "spectroscopi": 211, "provid": [211, 227], "meaning": 211, "appropri": 211, "intens": 211, "qualiti": 211, "haemoglobin": 211, "heart": 211, "rate": [211, 227], "consist": [211, 222, 851], "tap": 211, "right": 211, "hand": 211, "homogen": 212, "nuisanc": 212, "tracker": 213, "check": [213, 242, 257, 874], "calibr": [213, 584], "track": [213, 880], "blink": 213, "pupillari": 213, "light": 213, "reflex": 213, "attribut": 216, "sampl": [216, 229, 231, 236, 405, 868], "len": 216, "get_data": 216, "wai": 216, "exclud": 217, "id": [217, 855, 877], "descriptor": 217, "togeth": 217, "brows": [219, 257], "scratch": 222, "unit": [222, 874], "corrupt": 223, "known": 223, "period": 223, "sinusoid": 223, "distant": 223, "center": [223, 862], "vertic": 223, "each": 223, "infer": 227, "hypothesi": 227, "null": 227, "parametr": [227, 229, 230], "hat": 227, "varianc": 227, "adjust": 227, "non": [227, 229, 230], "bonferroni": 227, "fals": 227, "discoveri": 227, "adjac": [227, 229, 232, 235], "enhanc": [227, 892], "tfce": 227, "signific": [228, 235], "1": [229, 892], "mass": 231, "univari": 231, "twowai": 231, "repeat": [231, 237], "anova": [231, 237], "account": 231, "neighbor": 232, "spatio": [235, 236, 237], "one": [235, 237], "2": [236, 892], "contrast": 237, "epochsspectrum": [240, 714], "migrat": [240, 878], "quick": 240, "action": 240, "inter": 241, "itc": 241, "ssvep": [242, 410, 868], "vssr": 242, "ratio": 242, "spectra": 242, "12": [242, 892], "hz": 242, "indic": 242, "15": [242, 892], "debrief": 242, "bonu": 242, "durat": 242, "resolv": 242, "bibliographi": 245, "paper": 246, "cite": [246, 866, 871], "o": [254, 874], "fund": [256, 873], "support": [256, 855, 874, 880], "institut": [256, 873, 879], "partner": [256, 873, 879], "former": [256, 879], "command": [257, 851, 871], "tool": [257, 851, 858], "anonym": 257, "browse_raw": 257, "bti2fiff": 257, "magneswh3600": 257, "note": [257, 877], "clean_eog_ecg": 257, "ie": 257, "compare_fiff": [257, 768], "fiff": [257, 877], "compute_proj_ecg": [257, 576], "compute_proj_eog": [257, 577], "coreg": [257, 367, 368, 369], "flash_bem": 257, "3": [257, 892], "layer": 257, "flash": [257, 874], "freeview_bem_surfac": 257, "freeview": 257, "kit2fiff": 257, "nyu": 257, "make_scalp_surfac": [257, 310], "maxfilt": 257, "prepare_bem_model": 257, "colloc": 257, "setup_forward_model": 257, "setup_source_spac": [257, 660], "bilater": 257, "subsampl": 257, "show_fiff": [257, 514], "content": [257, 868, 880], "show_info": 257, "surf2bem": 257, "sys_info": [257, 711], "watershed_bem": 257, "watersh": [257, 871, 874], "acqparserfif": 258, "baseepoch": 260, "bihemilabel": 261, "dipolefix": 264, "epochsarrai": 266, "evokedarrai": 268, "mixedsourceestim": 272, "mixedvectorsourceestim": 273, "vectorsourceestim": 279, "volvectorsourceestim": 281, "add_reference_channel": 282, "add_source_space_dist": 283, "annotations_from_ev": 284, "apply_forward": 285, "apply_forward_raw": 286, "average_forward_solut": 287, "rescal": 288, "apply_d": 290, "apply_dics_csd": 291, "apply_dics_epoch": 292, "apply_dics_tfr_epoch": 293, "apply_lcmv": 294, "apply_lcmv_cov": 295, "apply_lcmv_epoch": 296, "apply_lcmv_raw": 297, "make_d": 298, "make_lcmv": 299, "make_lcmv_resolution_matrix": 300, "rap_mus": 301, "read_beamform": 302, "trap_mus": 303, "conductormodel": 304, "convert_flash_mri": 305, "distance_to_bem": 306, "fit_sphere_to_headshap": 307, "get_fitting_dig": 308, "make_flash_bem": 309, "make_watershed_bem": 311, "channel_indices_by_typ": 312, "channel_typ": 313, "digmontag": 314, "combine_channel": 316, "compute_dev_head_t": 317, "compute_native_head_t": 318, "equalize_channel": [319, 439], "find_ch_adjac": 320, "find_layout": 321, "fix_mag_coil_typ": 322, "generate_2d_layout": 323, "get_builtin_ch_adjac": 324, "get_builtin_montag": 325, "make_1020_channel_select": 326, "make_dig_montag": 327, "make_eeg_layout": 328, "make_grid_layout": 329, "make_standard_montag": 330, "read_ch_adjac": 331, "read_custom_montag": 332, "read_dig_captrak": 333, "read_dig_dat": 334, "read_dig_egi": 335, "read_dig_fif": 336, "read_dig_hpt": 337, "read_dig_localit": 338, "read_dig_polhemus_isotrak": 339, "read_layout": 340, "read_polhemus_fastscan": 341, "rename_channel": [342, 647], "chpi": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "compute_chpi_amplitud": 343, "compute_chpi_loc": 344, "compute_chpi_snr": 345, "compute_head_po": 346, "extract_chpi_locs_ctf": 347, "extract_chpi_locs_kit": 348, "filter_chpi": 349, "get_active_chpi": 350, "get_chpi_info": 351, "head_pos_to_trans_rot_t": 352, "read_head_po": 353, "write_head_po": 354, "combine_evok": 355, "compute_covari": 356, "compute_proj_epoch": 357, "compute_proj_evok": 358, "compute_proj_raw": 359, "compute_rank": 360, "compute_raw_covari": 361, "compute_source_morph": 362, "concatenate_epoch": 363, "concatenate_ev": 364, "concatenate_raw": 365, "convert_forward_solut": 366, "estimate_head_mri_t": 368, "get_mni_fiduci": 369, "count_annot": 370, "count_ev": 371, "cov": [372, 373, 374, 877], "compute_whiten": 372, "prepare_noise_cov": 373, "create_default_subject": 375, "create_info": 376, "cuda": [377, 378, 379, 849], "get_cuda_memori": 377, "init_cuda": 378, "set_cuda_devic": 379, "bst_auditori": 380, "data_path": [380, 381, 382, 385, 386, 387, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412], "bst_raw": 381, "bst_rest": 382, "load_data": [383, 398], "epilepsy_ecog": 385, "erp_cor": 386, "fetch_aparc_sub_parcel": 388, "fetch_dataset": 389, "fetch_fsaverag": 390, "fetch_hcp_mmp_parcel": 391, "fetch_infant_templ": 392, "fetch_phantom": 393, "fnirs_motor": 394, "has_dataset": 395, "hf_sef": 396, "kiloword": [397, 868], "misc": 399, "mtrf": [400, 868], "multimod": [401, 868], "phantom_4dbti": 403, "refmeg_nois": 404, "sleep_physionet": [406, 407], "ag": 406, "fetch_data": [406, 407], "temazepam": 407, "somato": 408, "spm_face": 409, "ucl_opm_auditori": 411, "visual_92_categori": 412, "decimate_surfac": 413, "generalizingestim": 417, "linearmodel": 418, "receptivefield": 420, "slidingestim": 424, "temporalfilt": 425, "timedelayingridg": 426, "timefrequ": 427, "unsupervisedspatialfilt": 428, "compute_em": 430, "cross_val_multiscor": 431, "get_coef": 432, "dig_mri_dist": 433, "get_phantom_dipol": 434, "average_mov": 435, "combine_event_id": 436, "equalize_epoch_count": 437, "define_target_ev": 440, "match_event_nam": 441, "shift_time_ev": 442, "events_from_annot": 443, "export_epoch": 444, "export_evok": 445, "export_evokeds_mff": 446, "export_raw": 447, "extract_label_time_cours": 448, "construct_iir_filt": 449, "create_filt": 450, "estimate_ringing_sampl": 451, "filter_data": 452, "notch_filt": 453, "find_ev": 455, "find_stim_step": 456, "fit_dipol": 457, "compute_depth_prior": 458, "compute_orient_prior": 459, "restrict_forward_to_label": 460, "restrict_forward_to_stc": 461, "get_config": 462, "get_config_path": 463, "get_head_surf": 464, "get_meg_helmet_surf": 465, "get_montage_volume_label": 466, "get_volume_labels_from_aseg": 467, "get_volume_labels_from_src": 468, "grade_to_tri": 469, "grade_to_vertic": 470, "grand_averag": 471, "grow_label": 472, "head_to_mni": 474, "head_to_mri": 475, "inverse_spars": [476, 477, 478, 479], "gamma_map": 476, "make_stc_from_dipol": 477, "mixed_norm": 478, "tf_mixed_norm": 479, "io": [480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515], "baseraw": 480, "rawarrai": 482, "anonymize_info": 483, "read_mrk": 484, "read_fiduci": 485, "read_info": 486, "read_raw": 487, "read_raw_artemis123": 488, "read_raw_bdf": 489, "read_raw_boxi": 490, "read_raw_brainvis": 491, "read_raw_bti": 492, "read_raw_cnt": 493, "read_raw_ctf": 494, "read_raw_curri": 495, "read_raw_edf": 496, "read_raw_eeglab": 497, "read_raw_egi": 498, "read_raw_eximia": 499, "read_raw_eyelink": 500, "read_raw_fieldtrip": 501, "read_raw_fif": 502, "read_raw_fil": 503, "read_raw_gdf": 504, "read_raw_hitachi": 505, "read_raw_kit": 506, "read_raw_nedf": 507, "read_raw_nicolet": 508, "read_raw_nihon": 509, "read_raw_nirx": 510, "read_raw_nsx": 511, "read_raw_persyst": 512, "read_raw_snirf": 513, "write_fiduci": 515, "select_sourc": 516, "label_sign_flip": 517, "labels_to_stc": 518, "make_ad_hoc_cov": 519, "make_bem_model": 520, "make_bem_solut": 521, "make_field_map": 522, "make_fixed_length_epoch": 523, "make_fixed_length_ev": 524, "make_forward_dipol": 525, "make_forward_solut": 526, "make_sphere_model": 527, "match_channel_ord": 528, "merge_ev": 529, "minimum_norm": [530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549], "apply_invers": 531, "apply_inverse_cov": 532, "apply_inverse_epoch": 533, "apply_inverse_raw": 534, "apply_inverse_tfr_epoch": 535, "compute_rank_invers": 536, "compute_source_psd": 537, "compute_source_psd_epoch": 538, "estimate_snr": 539, "get_cross_talk": 540, "get_point_spread": 541, "make_inverse_oper": 542, "make_inverse_resolution_matrix": 543, "prepare_inverse_oper": 544, "read_inverse_oper": 545, "resolution_metr": 546, "source_band_induced_pow": 547, "source_induced_pow": 548, "write_inverse_oper": 549, "morph_label": 550, "morph_source_spac": 551, "open_doc": 552, "open_report": 553, "parse_config": 554, "pick_channel": 555, "pick_channels_cov": 556, "pick_channels_forward": 557, "pick_channels_regexp": 558, "pick_ev": 559, "pick_info": 560, "pick_typ": 561, "pick_types_forward": 562, "eogregress": 563, "annotate_amplitud": 566, "annotate_break": 567, "annotate_mov": 568, "annotate_muscle_zscor": 569, "annotate_nan": 570, "compute_average_dev_head_t": 571, "compute_bridged_electrod": 572, "compute_current_source_dens": 573, "compute_fine_calibr": 574, "compute_maxwell_basi": 575, "compute_proj_hfc": 578, "corrmap": 579, "cortical_signal_suppress": 580, "create_ecg_epoch": 581, "create_eog_epoch": 582, "equalize_bad": 583, "interpolate_blink": 585, "read_eyelink_calibr": 586, "set_channel_types_eyetrack": 587, "find_bad_channels_maxwel": 588, "find_ecg_ev": 589, "find_eog_ev": 590, "fix_stim_artifact": 591, "ica_find_ecg_ev": 592, "ica_find_eog_ev": 593, "ieeg": [594, 595, 596], "make_montage_volum": 594, "project_sensors_onto_brain": 595, "warp_montag": 596, "infomax": 597, "interpolate_bridged_electrod": 598, "maxwell_filt": 599, "maxwell_filter_prepare_emptyroom": 600, "beer_lambert_law": 601, "optical_dens": 602, "scalp_coupling_index": 603, "short_channel": 604, "source_detector_dist": 605, "temporal_derivative_distribution_repair": 606, "oversampled_temporal_project": 607, "peak_find": 608, "read_eog_regress": 609, "read_fine_calibr": 610, "read_ica": 611, "read_ica_eeglab": 612, "realign_raw": 613, "regress_artifact": 614, "write_fine_calibr": 615, "random_parcel": 616, "read_annot": 617, "read_bem_solut": 618, "read_bem_surfac": 619, "read_cov": 620, "read_dipol": 621, "read_epoch": 622, "read_epochs_eeglab": 623, "read_epochs_fieldtrip": 624, "read_epochs_kit": 625, "read_ev": 626, "read_evoked_besa": 627, "read_evoked_fieldtrip": 628, "read_evok": 629, "read_evokeds_mff": 630, "read_forward_solut": 631, "read_freesurfer_lut": 632, "read_label": 633, "read_labels_from_annot": 634, "read_lta": 635, "read_morph_map": 636, "read_proj": 637, "read_reject_paramet": 638, "read_source_estim": 639, "read_source_morph": 640, "read_source_spac": 641, "read_surfac": 642, "read_talxfm": 643, "read_tran": 644, "read_tri": 645, "read_vectorview_select": 646, "scale_bem": 648, "scale_label": 649, "scale_mri": 650, "scale_source_spac": 651, "sensitivity_map": 652, "set_bipolar_refer": 653, "set_cache_dir": 654, "set_config": 655, "set_eeg_refer": 656, "set_log_fil": 657, "set_log_level": 658, "set_memmap_min_s": 659, "setup_volume_source_spac": 661, "sourcesimul": 662, "add_chpi": 663, "add_ecg": 664, "add_eog": 665, "add_nois": 666, "cosine_scor": 667, "f1_score": 668, "peak_position_error": 669, "precision_scor": 670, "recall_scor": 671, "region_localization_error": 672, "roc_auc_scor": 673, "spatial_deviation_error": 674, "select_source_in_label": 675, "simulate_evok": 676, "simulate_raw": 677, "simulate_sparse_stc": 678, "simulate_stc": 679, "source_spac": [680, 681], "compute_distance_to_sensor": 680, "get_decimated_surfac": 681, "spatial_dist_adjac": 682, "spatial_inter_hemi_adjac": 683, "spatial_src_adjac": 684, "spatial_tris_adjac": 685, "spatio_temporal_dist_adjac": 686, "spatio_temporal_src_adjac": 687, "spatio_temporal_tris_adjac": 688, "split_label": 689, "stat": [690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706], "bonferroni_correct": 690, "bootstrap_confidence_interv": 691, "combine_adjac": 692, "f_mway_rm": 693, "f_onewai": 694, "f_threshold_mway_rm": 695, "fdr_correct": 696, "linear_regress": 697, "linear_regression_raw": 698, "permutation_cluster_1samp_test": 699, "permutation_cluster_test": 700, "permutation_t_test": 701, "spatio_temporal_cluster_1samp_test": 702, "spatio_temporal_cluster_test": 703, "summarize_clusters_stc": 704, "ttest_1samp_no_p": 705, "ttest_ind_no_p": 706, "stc_near_sensor": 707, "stc_to_label": 708, "complete_surface_info": 709, "read_curvatur": 710, "time_frequ": [712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745], "averagetfr": 712, "crossspectraldens": 713, "epochstfr": 715, "csd_array_fouri": 717, "csd_array_morlet": 718, "csd_array_multitap": 719, "csd_fourier": 720, "csd_morlet": 721, "csd_multitap": 722, "csd_tfr": 723, "dpss_window": 724, "fit_iir_model_raw": 725, "fwhm": 726, "istft": 727, "pick_channels_csd": 729, "psd_array_multitap": 730, "psd_array_welch": 731, "read_csd": 732, "read_spectrum": 733, "read_tfr": 734, "stft": 735, "stftfreq": 736, "cwt": 737, "tfr_array_morlet": 739, "tfr_array_multitap": 740, "tfr_array_stockwel": 741, "tfr_morlet": 742, "tfr_multitap": 743, "tfr_stockwel": 744, "write_tfr": 745, "transform_surface_to": 746, "apply_volume_registr": 748, "apply_volume_registration_point": 749, "compute_volume_registr": 750, "quat_to_rot": 751, "read_ras_mni_t": 752, "rot_to_quat": 753, "use_coil_def": 754, "use_log_level": 755, "util": [756, 757, 877], "deprec": [756, 851], "warn": [757, 851], "verbos": 758, "vertex_to_mni": 759, "clickableimag": 761, "figure3d": 762, "add_background_imag": 763, "centers_to_edg": 764, "circular_layout": 765, "close_3d_figur": 766, "close_all_3d_figur": 767, "create_3d_figur": 769, "get_3d_backend": 770, "get_brain_class": 771, "get_browser_backend": 772, "iter_topographi": 773, "link_brain": 774, "mne_analyze_colormap": 775, "plot_align": 776, "plot_arrowmap": 777, "plot_bem": 778, "plot_brain_colorbar": 779, "plot_bridged_electrod": 780, "plot_ch_adjac": 781, "plot_channel_labels_circl": 782, "plot_chpi_snr": 783, "plot_compare_evok": 784, "plot_cov": 785, "plot_csd": 786, "plot_dipole_amplitud": 787, "plot_dipole_loc": 788, "plot_drop_log": 789, "plot_epoch": 790, "plot_epochs_imag": 791, "plot_epochs_psd_topomap": 792, "plot_ev": 793, "plot_evok": 794, "plot_evoked_field": 795, "plot_evoked_imag": 796, "plot_evoked_joint": 797, "plot_evoked_topo": 798, "plot_evoked_topomap": 799, "plot_evoked_whit": 800, "plot_filt": 801, "plot_head_posit": 802, "plot_ica_compon": 803, "plot_ica_overlai": 804, "plot_ica_properti": 805, "plot_ica_scor": 806, "plot_ica_sourc": 807, "plot_ideal_filt": 808, "plot_layout": 809, "plot_montag": 810, "plot_projs_joint": 811, "plot_projs_topomap": 812, "plot_raw": 813, "plot_raw_psd": 814, "plot_regression_weight": 815, "plot_sensor": 816, "plot_snr_estim": 817, "plot_source_estim": 818, "plot_sparse_source_estim": 819, "plot_tfr_topomap": 820, "plot_topo_image_epoch": 821, "plot_vector_source_estim": 823, "plot_volume_source_estim": 824, "set_3d_backend": 825, "set_3d_opt": 826, "set_3d_titl": 827, "set_3d_view": 828, "set_browser_backend": 829, "snapshot_brain_montag": 830, "use_3d_backend": 831, "use_browser_backend": 832, "write_bem_solut": 834, "write_bem_surfac": 835, "write_cov": 836, "write_ev": 837, "write_evok": 838, "write_forward_solut": 839, "write_head_bem": 840, "write_label": 841, "write_labels_to_annot": 842, "write_proj": 843, "write_source_spac": 844, "write_surfac": 845, "write_tran": 846, "glossari": 847, "homepag": 848, "jupyt": 849, "notebook": 849, "jupyterlab": 849, "fa": [849, 857], "brand": [849, 857], "window": [849, 871], "instal": [849, 850, 852, 853, 854, 855, 856, 857, 858], "headless": 849, "linux": 849, "server": 849, "develop": [849, 851, 859, 870], "version": [849, 859, 892], "gpu": 849, "acceler": 849, "screen": 849, "mesa": 849, "troubleshoot": [849, 857], "troubl": 849, "upgrad": [849, 859], "maco": [849, 857, 871], "contribut": 851, "guid": 851, "git": 851, "gnu": 851, "fork": 851, "repositori": 851, "virtual": 851, "github": 851, "ssh": 851, "convent": 851, "requir": [851, 857], "must": 851, "have": [851, 867, 871], "coverag": 851, "document": [851, 873, 875, 877, 879, 880], "avoid": 851, "api": [851, 869, 880, 882, 892], "possibl": 851, "decor": 851, "changelog": [851, 892], "contributor": 851, "recur": 851, "pull": 851, "request": 851, "pr": 851, "fast": 851, "thorough": 851, "style": 851, "adher": 851, "guidelin": [851, 879], "we": 851, "mostli": [851, 869], "follow": 851, "numpi": [851, 874], "docstr": 851, "everywher": 851, "guidanc": 851, "organ": [851, 869, 874], "return": 851, "run": [851, 871], "suit": [851, 858], "build": 851, "pip": 855, "conda": 855, "depend": [855, 892], "hdf5": 855, "scenario": 855, "appl": 857, "download": [857, 871], "help": [858, 871, 872], "updat": [859, 880], "martino": 862, "cpp": 863, "most": 864, "typic": 867, "m": [867, 871], "recommend": 867, "subdivis": 867, "icosahedron": 867, "octahedron": 867, "creation": 867, "approxim": 867, "area": 867, "been": 867, "assum": 867, "1000": 867, "cm2": 867, "mesh": [867, 871, 874], "triangul": 867, "boundari": [867, 874], "element": [867, 874], "trigger": 868, "ucl": 868, "state": 868, "somatosensori": 868, "92": 868, "categori": 868, "polysomnograph": 868, "databas": [868, 880], "miscellan": 868, "integr": [869, 880], "scientif": 869, "stack": 869, "submodul": 869, "unifi": 869, "In": [869, 880], "frequent": 871, "ask": 871, "question": 871, "faq": 871, "issu": 871, "can": 871, "pyvista": 871, "extrem": 871, "even": 871, "sure": 871, "x": 871, "my": 871, "y": 871, "think": 871, "bug": [871, 892], "danger": 871, "pickl": 871, "later": 871, "onc": 871, "again": 871, "cpu": 871, "though": 871, "didn": 871, "tell": 871, "mysteri": 871, "take": 871, "forev": 871, "incorrect": 871, "govern": 873, "bdfl": 873, "steer": [873, 879], "council": [873, 879], "membership": 873, "conflict": 873, "privat": 873, "commun": [873, 879], "decis": 873, "histori": [873, 879], "acknowledg": 873, "licens": 873, "implement": 874, "detail": [874, 877], "intern": 874, "float": 874, "precis": 874, "effici": [874, 880], "preload": 874, "explicitli": 874, "access": [874, 880], "concept": 874, "subspac": 874, "tessel": 874, "discret": 874, "geometri": [874, 877], "coil": [874, 877], "magnet": 874, "normal": 874, "accur": 874, "accuraci": 874, "purpos": 874, "patch": 874, "constraint": 874, "weight": 874, "matlab": 877, "routin": 877, "w": 877, "demonstr": 877, "toolbox": 877, "constant": 877, "taginfo": 877, "dig": 877, "coildef": 877, "see": 877, "ch": 877, "proj": 877, "comp": 877, "mea": 877, "surf": 877, "inv": 877, "reginv": 877, "noisenorm": 877, "fill": 877, "mne_prepare_inverse_oper": 877, "benevol": 879, "dictat": 879, "life": 879, "particip": 879, "lead": 879, "roadmap": 880, "page": 880, "progress": 880, "divers": 880, "equiti": 880, "inclus": 880, "dei": 880, "deep": 880, "better": 880, "db": 880, "pediatr": 880, "complet": 880, "openmeeg": 880, "improv": 880, "bind": 880, "overhaul": 880, "realtim": 884, "5": 892, "0": 892, "2023": 892, "08": 892, "14": 892, "author": 892, "05": 892, "10": 892, "02": 892, "23": 892, "2022": 892, "21": 892, "11": 892, "03": 892, "behavior": 892, "24": 892, "2021": 892, "04": 892, "27": 892, "22": 892, "2020": 892, "17": 892, "09": 892, "20": 892, "19": 892, "2019": 892, "18": 892, "2018": 892, "16": 892, "01": 892, "2017": 892, "13": 892, "2016": 892, "2015": 892, "26": 892, "9": 892, "8": 892, "2014": 892, "06": 892, "25": 892, "7": 892, "2013": 892, "6": 892, "2012": 892, "2011": 892}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Connectivity Analysis Examples": [[0, "connectivity-analysis-examples"], [27, "connectivity-analysis-examples"]], "Brainstorm raw (median nerve) dataset": [[1, "brainstorm-raw-median-nerve-dataset"]], "References": [[1, "references"], [4, "references"], [8, "references"], [10, "references"], [12, "references"], [13, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [21, "references"], [33, "references"], [35, "references"], [40, "references"], [42, "references"], [43, "references"], [44, "references"], [46, "references"], [51, "references"], [54, "references"], [55, "references"], [58, "references"], [59, "references"], [60, "references"], [66, "references"], [71, "references"], [72, "references"], [75, "references"], [76, "references"], [79, "references"], [83, "references"], [84, "references"], [88, "references"], [94, "references"], [101, "references"], [109, "references"], [112, "references"], [113, "references"], [117, "references"], [119, "references"], [121, "references"], [126, "references"], [129, "references"], [137, "references"], [141, "references"], [144, "references"], [151, "references"], [155, "references"], [157, "references"], [162, "references"], [176, "references"], [178, "references"], [180, "references"], [183, "references"], [184, "references"], [191, "references"], [195, "references"], [196, "references"], [200, "references"], [202, "references"], [204, "references"], [205, "references"], [206, "references"], [207, "references"], [208, "references"], [210, "references"], [212, "references"], [224, "references"], [227, "references"], [228, "references"], [232, "references"], [240, "references"], [867, "references"], [868, "references"], [871, "references"], [874, "references"]], "HF-SEF dataset": [[2, "hf-sef-dataset"]], "Examples on open datasets": [[3, "examples-on-open-datasets"], [27, "examples-on-open-datasets"]], "Single trial linear regression analysis with the LIMO dataset": [[4, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[4, "about-the-data"]], "Load the data": [[4, "load-the-data"], [137, "load-the-data"], [141, "load-the-data"], [159, "load-the-data"]], "Visualize events": [[4, "visualize-events"]], "Visualize condition ERPs": [[4, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[4, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[4, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[4, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[4, "extract-regression-coefficients"]], "Plot model results": [[4, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[5, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[5, "prepare-data-for-localization"]], "Perform dipole fitting": [[5, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[5, "perform-minimum-norm-localization"]], "Computation times": [[6, "computation-times"], [20, "computation-times"], [25, "computation-times"], [56, "computation-times"], [67, "computation-times"], [85, "computation-times"], [91, "computation-times"], [102, "computation-times"], [106, "computation-times"], [130, "computation-times"], [139, "computation-times"], [148, "computation-times"], [154, "computation-times"], [164, "computation-times"], [174, "computation-times"], [187, "computation-times"], [194, "computation-times"], [198, "computation-times"], [215, "computation-times"], [221, "computation-times"], [226, "computation-times"], [234, "computation-times"], [239, "computation-times"], [244, "computation-times"]], "From raw data to dSPM on SPM Faces dataset": [[7, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[8, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[9, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[10, "representational-similarity-analysis"]], "Decoding source space data": [[11, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[12, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[13, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[14, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[15, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[16, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[17, "machine-learning-decoding-encoding-and-mvpa"], [27, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[18, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[18, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[19, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[19, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[19, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[19, "investigate-model-coefficients"], [19, "id5"]], "Create and fit a stimulus reconstruction model": [[19, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[19, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[21, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[21, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[22, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[23, "forward-modeling"], [27, "forward-modeling"]], "Generate a left cerebellum volume source space": [[24, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[26, "use-source-space-morphing"]], "Examples Gallery": [[27, "examples-gallery"]], "Input/Output": [[27, "input-output"], [63, "input-output"]], "Data Simulation": [[27, "data-simulation"], [89, "data-simulation"]], "Preprocessing": [[27, "preprocessing"], [78, "preprocessing"], [109, "preprocessing"], [141, "preprocessing"], [165, "preprocessing"], [166, "preprocessing"], [214, "preprocessing"], [867, "preprocessing"], [881, "preprocessing"]], "Visualization": [[27, "visualization"], [55, "visualization"], [122, "visualization"], [177, "visualization"], [851, "visualization"], [891, "visualization"]], "Time-Frequency Examples": [[27, "time-frequency-examples"], [105, "time-frequency-examples"]], "Statistics Examples": [[27, "statistics-examples"], [98, "statistics-examples"]], "Inverse problem and source analysis": [[27, "inverse-problem-and-source-analysis"], [36, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[28, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[29, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[30, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[31, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[32, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[33, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[34, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[34, "compute-covariances"]], "Plot source estimates": [[34, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[35, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[37, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[38, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[39, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[39, "compute-inverse-solution"], [41, "compute-inverse-solution"], [177, "compute-inverse-solution"]], "View source activations": [[39, "view-source-activations"]], "Using vector solutions": [[39, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[40, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[41, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[41, "set-up-our-source-space"]], "View the source space": [[41, "view-the-source-space"]], "Compute the fwd matrix": [[41, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[41, "plot-the-mixed-source-estimate"]], "Plot the surface": [[41, "plot-the-surface"]], "Plot the volume": [[41, "plot-the-volume"]], "Process labels": [[41, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[42, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[42, "compute-empty-room-covariance"]], "Epoch the data": [[42, "epoch-the-data"]], "Compute and plot covariances": [[42, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[42, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[43, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[43, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[43, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[43, "plot-results"], [44, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[43, "reading-and-writing-sourcemorph-from-and-to-disk"], [44, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[44, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[44, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[44, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[44, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[45, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[46, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[47, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[47, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[47, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[47, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[47, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[47, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[47, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[48, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[48, "visualize"], [49, "visualize"], [50, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[49, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[49, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[49, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[50, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[51, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[52, "reading-an-inverse-operator"]], "Reading an STC file": [[53, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[54, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[54, "mne"]], "dSPM": [[54, "dspm"], [874, "dspm"]], "Visualize results": [[54, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[55, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[55, "eegmeg"]], "MEG": [[55, "meg"]], "Estimate data SNR using an inverse": [[57, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[58, "computing-source-space-snr"]], "EEG": [[58, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[59, "compute-mxne-with-time-frequency-sparse-prior"]], "Compute Trap-Music on evoked data": [[60, "compute-trap-music-on-evoked-data"]], "Plotting the full vector-valued MNE solution": [[61, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[62, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[64, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[65, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[66, "reading-xdf-eeg-data"]], "Using contralateral referencing for EEG": [[68, "using-contralateral-referencing-for-eeg"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[69, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[70, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[71, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[71, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[71, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[71, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[71, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[71, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[71, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[71, "the-relationship-between-bridging-and-impedances"]], "Summary": [[71, "summary"], [167, "summary"], [175, "summary"], [199, "summary"], [200, "summary"], [202, "summary"]], "Transform EEG data using current source density (CSD)": [[72, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[73, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[74, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[74, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[74, "perform-regression-and-remove-eog"]], "Before/after comparison": [[74, "before-after-comparison"]], "Find MEG reference channel artifacts": [[75, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[76, "visualise-nirs-artifact-correction-methods"]], "Import data": [[76, "import-data"]], "Add artificial artifacts to data": [[76, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[76, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[77, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[79, "interpolate-bad-channels-for-meg-eeg-channels"]], "Maxwell filter data with movement compensation": [[80, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[81, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[81, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[81, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[82, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[82, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[82, "view-the-annotations"]], "Removing muscle ICA components": [[83, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[83, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[84, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[86, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[87, "remap-meg-channel-types"]], "XDAWN Denoising": [[88, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[90, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[90, "define-main-parameters-of-sources"]], "Create simulated source activity": [[90, "create-simulated-source-activity"], [94, "create-simulated-source-activity"]], "Simulate raw data": [[90, "simulate-raw-data"], [94, "simulate-raw-data"]], "Compute evoked from raw data": [[90, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[90, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[90, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[90, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[90, "for-region"]], "For Dipoles": [[90, "for-dipoles"]], "Generate simulated evoked data": [[92, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[93, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[94, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[94, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[94, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[95, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[96, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[97, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[99, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[100, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[101, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[103, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[104, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[104, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[107, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[108, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[109, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[109, "alignment-and-forward"]], "Alpha": [[109, "alpha"]], "Beta": [[109, "beta"]], "Compute induced power in the source space with dSPM": [[110, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[111, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[112, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[113, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[114, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[114, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[114, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[114, "multitaper-transform"]], "Stockwell (S) transform": [[114, "stockwell-s-transform"]], "Morlet Wavelets": [[114, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[114, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[114, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[114, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[115, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[115, "load-data"], [116, "load-data"], [178, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[115, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[115, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[116, "plotting-with-mne-viz-brain"]], "Add source information": [[116, "add-source-information"]], "Modify the view of the brain": [[116, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[116, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[116, "include-the-head-in-the-image"]], "Add sensors positions": [[116, "add-sensors-positions"]], "Add current dipoles": [[116, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[116, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[117, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[118, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[119, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[120, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[120, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[120, "additional-plot-topomap-options"]], "More advanced usage": [[120, "more-advanced-usage"]], "Interpolating topomaps": [[120, "interpolating-topomaps"]], "Animating the topomap": [[120, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[121, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting sensor layouts of MEG systems": [[123, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[123, "neuromag"]], "CTF": [[123, "ctf"]], "BTi": [[123, "bti"]], "KIT": [[123, "kit"]], "Artemis123": [[123, "artemis123"]], "Plot the MNE brain and helmet": [[124, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[125, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[126, "plot-a-cortical-parcellation"]], "Make figures more publication ready": [[127, "make-figures-more-publication-ready"]], "Imports": [[127, "imports"]], "Evoked plot with brain activation": [[127, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[127, "custom-timecourse-with-montage-inset"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[128, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Show noise levels from empty room data": [[129, "show-noise-levels-from-empty-room-data"]], "Sensitivity map of SSP projections": [[131, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[132, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[133, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[134, "cross-hemisphere-comparison"]], "Working with sEEG data": [[135, "working-with-seeg-data"]], "Working with ECoG data": [[136, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[136, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[136, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[136, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[136, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[136, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[137, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[137, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[137, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[137, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[137, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[137, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[137, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[137, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[137, "further-analysis-of-the-data"]], "Exercise": [[137, "exercise"], [158, "exercise"], [196, "exercise"], [241, "exercise"]], "Clinical applications": [[138, "clinical-applications"], [165, "clinical-applications"]], "MNE-GUI-addons examples": [[138, "mne-gui-addons-examples"], [165, "mne-gui-addons-examples"]], "MNE-Python examples": [[138, "mne-python-examples"], [165, "mne-python-examples"]], "The Epochs data structure: discontinuous data": [[140, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[140, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[140, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[140, "subselecting-epochs"]], "Selecting epochs by index": [[140, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[140, "selecting-dropping-and-reordering-channels"], [149, "selecting-dropping-and-reordering-channels"], [216, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[140, "changing-channel-name-and-type"], [216, "changing-channel-name-and-type"]], "Selection in the time domain": [[140, "selection-in-the-time-domain"], [216, "selection-in-the-time-domain"]], "Extracting data in other forms": [[140, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[140, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[140, "iterating-over-epochs"]], "Regression-based baseline correction": [[141, "regression-based-baseline-correction"]], "Traditional baselining": [[141, "traditional-baselining"]], "Regression-based baselining": [[141, "regression-based-baselining"]], "Plot the baseline regressor": [[141, "plot-the-baseline-regressor"]], "Plot the ERPs": [[141, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[141, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[141, "examine-the-interaction-term"]], "Visualizing epoched data": [[142, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[142, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[142, null]], "Plotting projectors from an Epochs object": [[142, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[142, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[142, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[142, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[143, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[143, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[143, null]], "Modifying the metadata": [[143, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[143, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[143, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[144, "auto-generating-epochs-metadata"]], "Preparation": [[144, "preparation"]], "Creating metadata from events": [[144, "creating-metadata-from-events"]], "The basics of make_metadata": [[144, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[144, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[144, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[144, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[144, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[144, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[145, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[145, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[145, "scaling-time-and-channel-values"]], "Setting the index": [[145, "setting-the-index"]], "Wide- versus long-format DataFrames": [[145, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[146, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[146, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[146, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[147, "segmenting-continuous-data-into-epochs"], [165, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[149, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[149, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[149, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[149, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[149, null]], "Similarities among the core data structures": [[149, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[149, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[149, "combining-evoked-objects"]], "Other uses of Evoked objects": [[149, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[150, "visualizing-evoked-data"]], "Plotting signal traces": [[150, "plotting-signal-traces"]], "Butterfly plots": [[150, null]], "Plotting scalp topographies": [[150, "plotting-scalp-topographies"]], "Arrow maps": [[150, "arrow-maps"]], "Joint plots": [[150, "joint-plots"]], "Comparing Evoked objects": [[150, "comparing-evoked-objects"]], "Image plots": [[150, "image-plots"]], "Topographical subplots": [[150, "topographical-subplots"]], "3D Field Maps": [[150, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[151, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[151, "channel-names-and-types"]], "Channel locations": [[151, "channel-locations"]], "Setting the EEG reference": [[151, "setting-the-eeg-reference"], [208, "setting-the-eeg-reference"]], "Filtering": [[151, "filtering"]], "Evoked responses: epoching and averaging": [[151, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[151, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[151, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[151, "comparing-conditions"]], "Grand averages": [[151, "grand-averages"]], "Amplitude and latency measures": [[151, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[151, "peak-latency-and-amplitude"]], "Mean Amplitude": [[151, "mean-amplitude"]], "Plotting whitened data": [[152, "plotting-whitened-data"]], "Raw data with whitening": [[152, "raw-data-with-whitening"]], "Epochs with whitening": [[152, "epochs-with-whitening"]], "Evoked data with whitening": [[152, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[152, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[152, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[153, "estimating-evoked-responses"], [165, "estimating-evoked-responses"], [166, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[155, "freesurfer-mri-reconstruction"]], "First steps": [[155, "first-steps"], [854, "first-steps"]], "Anatomical reconstruction": [[155, "anatomical-reconstruction"]], "Use with MNE-Python": [[155, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[155, "fsaverage"]], "Source alignment and coordinate frames": [[156, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[156, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[156, "coordinate-frame-definitions"]], "A bad example": [[156, "a-bad-example"]], "A good example": [[156, "a-good-example"]], "Visualizing the transformations": [[156, "visualizing-the-transformations"]], "Example: MRI defacing": [[156, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[156, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[156, "alignment-without-mri"]], "Using an automated approach to coregistration": [[157, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[157, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[157, "initial-fit-with-fiducials"]], "Refining with ICP": [[157, "refining-with-icp"]], "Omitting bad points": [[157, "omitting-bad-points"]], "Final coregistration fit": [[157, "final-coregistration-fit"]], "Head model and forward computation": [[158, "head-model-and-forward-computation"]], "Computing the forward operator": [[158, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[158, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[158, "visualizing-the-coregistration"]], "Compute Source Space": [[158, "compute-source-space"]], "Compute forward solution": [[158, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[159, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[159, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[159, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[159, "infant-mri-surrogates"]], "Get an infant MRI template": [[159, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[160, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[160, "mri-coordinate-frames"]], "Under the hood": [[160, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[160, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[160, null]], "Using FreeSurfer\u2019s surface reconstructions": [[160, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[160, "cortical-alignment-spherical"]], "Surface decimation": [[160, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[160, "freesurfer-s-mni-affine-transformation"]], "Understanding the inflated brain": [[160, "understanding-the-inflated-brain"]], "Fixing BEM and head surfaces": [[161, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[161, "exporting-surfaces-to-blender"]], "Editing in Blender": [[161, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[161, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[161, "editing-the-head-surfaces"]], "Low-resolution head": [[161, "low-resolution-head"]], "High-resolution head": [[161, "high-resolution-head"]], "Blender editing tips": [[161, "blender-editing-tips"]], "What if you still get an error?": [[161, "what-if-you-still-get-an-error"]], "Blender operations": [[161, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[161, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[161, "topological-errors"]], "Dealing with topology in blender": [[161, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[161, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[162, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[162, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[162, "how-should-i-regularize-the-covariance-matrix"], [871, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[163, "forward-models-and-source-spaces"], [165, "forward-models-and-source-spaces"]], "Tutorials": [[165, "tutorials"]], "Introductory tutorials": [[165, "introductory-tutorials"], [173, "introductory-tutorials"]], "Reading data for different recording systems": [[165, "reading-data-for-different-recording-systems"], [193, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[165, "working-with-continuous-data"], [220, "working-with-continuous-data"]], "Time-frequency analysis": [[165, "time-frequency-analysis"], [166, "time-frequency-analysis"], [243, "time-frequency-analysis"]], "Source localization and inverses": [[165, "source-localization-and-inverses"], [186, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[165, "statistical-analysis-of-sensor-data"], [233, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[165, "statistical-analysis-of-source-estimates"], [238, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[165, "machine-learning-models-of-neural-activity"], [197, "machine-learning-models-of-neural-activity"]], "Simulation": [[165, "simulation"], [225, "simulation"], [887, "simulation"]], "Overview of MEG/EEG analysis with MNE-Python": [[166, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[166, "loading-data"]], "Detecting experimental events": [[166, "detecting-experimental-events"]], "Epoching continuous data": [[166, "epoching-continuous-data"]], "Inverse modeling": [[166, "inverse-modeling"]], "Modifying data in-place": [[167, "modifying-data-in-place"]], "Signal processing": [[167, "signal-processing"]], "Channel picking": [[167, "channel-picking"]], "The copy parameter": [[167, "the-copy-parameter"]], "Parsing events from raw data": [[168, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[168, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[168, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[168, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[168, null]], "Reading embedded events as Annotations": [[168, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[168, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[168, "making-multiple-events-per-annotation"]], "The Info data structure": [[169, "the-info-data-structure"]], "Querying the Info object": [[169, "querying-the-info-object"]], "Obtaining subsets of channels": [[169, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[169, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[169, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[170, "working-with-sensor-locations"]], "About montages and layouts": [[170, "about-montages-and-layouts"]], "Working with built-in montages": [[170, "working-with-built-in-montages"]], "Computing sensor locations": [[170, null]], "Plotting 2D sensor locations like EEGLAB": [[170, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[170, null]], "Manually controlling 2D channel projection": [[170, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[170, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[170, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[170, "working-with-layout-files"]], "Configuring MNE-Python": [[171, "configuring-mne-python"]], "Getting and setting configuration variables": [[171, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[171, "where-configurations-are-stored"]], "Using environment variables": [[171, "using-environment-variables"]], "Logging": [[171, "logging"]], "Getting information about your system": [[171, "getting-information-about-your-system"]], "Getting started with mne.Report": [[172, "getting-started-with-mne-report"]], "Adding Raw data": [[172, "adding-raw-data"]], "Adding events": [[172, "adding-events"]], "Adding Epochs": [[172, "adding-epochs"]], "Adding Evoked": [[172, "adding-evoked"]], "Adding Covariance": [[172, "adding-covariance"]], "Adding Projection vectors": [[172, "adding-projection-vectors"]], "Adding ICA": [[172, "adding-ica"]], "Adding MRI with BEM": [[172, "adding-mri-with-bem"]], "Adding coregistration": [[172, "adding-coregistration"]], "Adding a Forward solution": [[172, "adding-a-forward-solution"]], "Adding an InverseOperator": [[172, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[172, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[172, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[172, "adding-custom-figures"]], "Adding image files": [[172, "adding-image-files"]], "Working with tags": [[172, "working-with-tags"]], "Editing a saved report": [[172, "editing-a-saved-report"]], "Adding an entire folder of files": [[172, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[172, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[175, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[175, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[175, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[175, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[176, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[177, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[177, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[177, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[177, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[178, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[178, "the-source-space"]], "Fixed dipole orientations": [[178, "fixed-dipole-orientations"]], "Loose dipole orientations": [[178, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[178, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[178, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[179, "computing-various-mne-solutions"]], "Fixed orientation": [[179, "fixed-orientation"]], "Free orientation": [[179, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[180, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[180, "introduction-to-beamformers"]], "Data processing": [[180, "data-processing"]], "Computing the covariance matrices": [[180, "computing-the-covariance-matrices"]], "The forward model": [[180, "the-forward-model"]], "Handling depth bias": [[180, "handling-depth-bias"]], "Compute the spatial filter": [[180, "compute-the-spatial-filter"]], "Apply the spatial filter": [[180, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[180, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[180, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[180, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[180, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[180, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[180, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[181, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[181, "surface-source-estimates"]], "Volume Source Estimates": [[181, "volume-source-estimates"]], "Vector Source Estimates": [[181, "vector-source-estimates"]], "Dipole fits": [[181, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[182, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[182, "prerequisites"]], "Visualizing the MRI": [[182, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[182, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[182, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[183, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[184, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[185, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[188, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[188, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "FIL OPM (.bin)": [[188, "fil-opm-bin"]], "Artemis123 (.bin)": [[188, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[188, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[188, "ctf-data-dir"]], "CTF Polhemus data": [[188, "ctf-polhemus-data"]], "Applying software gradient compensation": [[188, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[188, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[188, null]], "FieldTrip MEG/EEG data (.mat)": [[188, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[188, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[189, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[189, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[189, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[189, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[189, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[189, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[189, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[189, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[189, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[189, "nicolet-data"]], "eXimia EEG data (.nxe)": [[189, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[189, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[189, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[189, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[189, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[189, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[190, "importing-data-from-fnirs-devices"]], "Standardized data": [[190, "standardized-data"]], "SNIRF (.snirf)": [[190, "snirf-snirf"]], "Specifying the coordinate system": [[190, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[190, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[190, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[190, "hitachi-csv"]], "Frequency Domain Devices": [[190, "frequency-domain-devices"]], "BOXY (.txt)": [[190, "boxy-txt"]], "Custom Data Import": [[190, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[190, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[190, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[191, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Importing Data from Eyetracking devices": [[192, "importing-data-from-eyetracking-devices"]], "SR Research (Eyelink) (.asc)": [[192, "sr-research-eyelink-asc"]], "Eye Position Data": [[192, "eye-position-data"]], "Gaze": [[192, "gaze"]], "Head-Referenced Eye Angle (HREF)": [[192, "head-referenced-eye-angle-href"]], "Pupil Position": [[192, "pupil-position"]], "Pupil Size Data": [[192, "pupil-size-data"]], "Velocity, resolution, and head position data": [[192, "velocity-resolution-and-head-position-data"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[195, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[195, "load-audio-data"]], "Create a receptive field": [[195, "create-a-receptive-field"]], "Simulate a neural response": [[195, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[195, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[195, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[195, "using-different-regularization-types"]], "Compare model performance": [[195, "compare-model-performance"]], "Decoding (MVPA)": [[196, "decoding-mvpa"]], "Design philosophy": [[196, "design-philosophy"], [869, "design-philosophy"]], "Transformation classes": [[196, "transformation-classes"]], "Scaler": [[196, "scaler"]], "Vectorizer": [[196, "vectorizer"]], "PSDEstimator": [[196, "psdestimator"]], "FilterEstimator": [[196, "filterestimator"]], "Spatial filters": [[196, "spatial-filters"]], "Common spatial pattern": [[196, "common-spatial-pattern"]], "Examples": [[196, null], [196, null], [196, null], [196, null], [196, null], [257, "examples"], [257, "id4"], [257, "id7"], [257, "id10"], [257, "id13"], [257, "id16"], [257, "id19"], [257, "id22"], [257, "id25"], [257, "id29"], [257, "id32"], [257, "id35"], [257, "id38"], [257, "id41"], [257, "id44"], [257, "id47"], [257, "id50"], [257, "id53"], [257, "id56"], [257, "id59"], [257, "id62"], [257, "id65"], [257, "id68"], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null], [868, null]], "Source power comodulation (SPoC)": [[196, "source-power-comodulation-spoc"]], "xDAWN": [[196, "xdawn"]], "Effect-matched spatial filtering": [[196, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[196, "patterns-vs-filters"]], "Decoding over time": [[196, "decoding-over-time"]], "Temporal decoding": [[196, "temporal-decoding"]], "Temporal generalization": [[196, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[196, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[196, "source-space-decoding"]], "Overview of artifact detection": [[199, "overview-of-artifact-detection"]], "What are artifacts?": [[199, "what-are-artifacts"]], "What to do about artifacts": [[199, "what-to-do-about-artifacts"]], "Artifact detection": [[199, "artifact-detection"]], "Low-frequency drifts": [[199, "low-frequency-drifts"]], "Power line noise": [[199, "power-line-noise"], [203, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[199, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[199, "ocular-artifacts-eog"]], "Handling bad channels": [[200, "handling-bad-channels"]], "Marking bad channels": [[200, "marking-bad-channels"], [867, "marking-bad-channels"]], "Blocking execution": [[200, null]], "When to look for bad channels": [[200, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[200, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[200, "interpolating-bad-channels"]], "How interpolation works": [[200, "how-interpolation-works"]], "Interpolation in MNE-Python": [[200, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[201, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[201, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[201, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[201, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[201, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[201, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[202, "background-information-on-filtering"]], "Problem statement": [[202, "problem-statement"]], "Filtering basics": [[202, "filtering-basics"]], "FIR Filters": [[202, "fir-filters"]], "Designing FIR filters": [[202, "designing-fir-filters"]], "Applying FIR filters": [[202, "applying-fir-filters"]], "IIR filters": [[202, "iir-filters"]], "Designing IIR filters": [[202, "designing-iir-filters"]], "Applying IIR filters": [[202, "applying-iir-filters"]], "Some pitfalls of filtering": [[202, "some-pitfalls-of-filtering"]], "Low-pass problems": [[202, "low-pass-problems"]], "High-pass problems": [[202, "high-pass-problems"]], "Baseline problems (or solutions?)": [[202, "baseline-problems-or-solutions"]], "Filtering defaults": [[202, "filtering-defaults"]], "Defaults in MNE-Python": [[202, "defaults-in-mne-python"]], "Defaults in MNE-C": [[202, "defaults-in-mne-c"]], "Defaults in other software": [[202, "defaults-in-other-software"]], "Reporting Filters": [[202, "reporting-filters"]], "Filter type": [[202, "filter-type"]], "Cutoff frequency": [[202, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[202, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[202, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[202, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[203, "filtering-and-resampling-data"]], "Background on filtering": [[203, "background-on-filtering"]], "Repairing artifacts by filtering": [[203, "repairing-artifacts-by-filtering"]], "Slow drifts": [[203, "slow-drifts"]], "Resampling": [[203, "resampling"]], "Best practices": [[203, "best-practices"], [206, "best-practices"]], "Repairing artifacts with regression": [[204, "repairing-artifacts-with-regression"]], "Prepare the data": [[204, "prepare-the-data"]], "Visualize the original data": [[204, "visualize-the-original-data"]], "Compute and apply EOG regression": [[204, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[204, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[204, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[204, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[205, "repairing-artifacts-with-ica"]], "What is ICA?": [[205, "what-is-ica"]], "ICA in MNE-Python": [[205, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[205, null]], "Example: EOG and ECG artifact repair": [[205, "example-eog-and-ecg-artifact-repair"], [207, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[205, "visualizing-the-artifacts"], [207, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[205, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[205, "fitting-ica"]], "Ignoring the time domain": [[205, null]], "Looking at the ICA solution": [[205, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[205, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[205, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[205, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[205, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[205, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[206, "background-on-projectors-and-projections"]], "What is a projection?": [[206, "what-is-a-projection"]], "Example: projection as noise reduction": [[206, "example-projection-as-noise-reduction"]], "Terminology": [[206, null]], "Signal-space projection (SSP)": [[206, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[206, "projectors-in-mne-python"]], "Computing projectors": [[206, "computing-projectors"]], "Visualizing the effect of projectors": [[206, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[206, "loading-and-saving-projectors"]], "Adding and removing projectors": [[206, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[206, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[207, "repairing-artifacts-with-ssp"]], "What is SSP?": [[207, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[207, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[207, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[207, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[207, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[207, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[207, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[207, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[207, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[207, null]], "Background": [[208, "background"]], "Setting or changing the reference channel": [[208, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[208, "setting-average-reference"]], "Creating the average reference as a projector": [[208, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[208, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[208, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[208, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[209, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[209, "hpi-frequencies"]], "Estimating continuous head position": [[209, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[209, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[209, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[210, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[210, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[210, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[210, "spatiotemporal-sss-tsss"]], "Movement compensation": [[210, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[210, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[211, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[211, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[211, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[211, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[211, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[211, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[211, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[211, "removing-heart-rate-from-signal"]], "Extract epochs": [[211, "extract-epochs"]], "View consistency of responses across trials": [[211, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[211, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[211, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[211, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[211, "compare-tapping-of-left-and-right-hands"]], "Preprocessing optically pumped magnetometer (OPM) MEG data": [[212, "preprocessing-optically-pumped-magnetometer-opm-meg-data"]], "Examining raw data": [[212, "examining-raw-data"]], "Denoising: Regressing via reference sensors": [[212, "denoising-regressing-via-reference-sensors"]], "Denoising: Regressing via homogeneous field correction": [[212, "denoising-regressing-via-homogeneous-field-correction"]], "Comparing denoising methods": [[212, "comparing-denoising-methods"]], "Filtering nuisance signals": [[212, "filtering-nuisance-signals"]], "Generating an evoked response": [[212, "generating-an-evoked-response"]], "Working with eye tracker data in MNE-Python": [[213, "working-with-eye-tracker-data-in-mne-python"]], "Data loading": [[213, "data-loading"]], "Ocular annotations": [[213, "ocular-annotations"]], "Checking the calibration": [[213, "checking-the-calibration"]], "Plot the raw eye-tracking data": [[213, "plot-the-raw-eye-tracking-data"]], "Handling blink artifacts": [[213, "handling-blink-artifacts"]], "Extract common stimulus events from the data": [[213, "extract-common-stimulus-events-from-the-data"]], "Align the eye-tracking data with EEG the data": [[213, "align-the-eye-tracking-data-with-eeg-the-data"]], "Showing the pupillary light reflex": [[213, "showing-the-pupillary-light-reflex"]], "The Raw data structure: continuous data": [[216, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[216, "loading-continuous-data"]], "Datasets in MNE-Python": [[216, null]], "Querying the Raw object": [[216, "querying-the-raw-object"]], "Attributes vs. Methods": [[216, null]], "The Raw.info attribute": [[216, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[216, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[216, null]], "Modifying Raw objects": [[216, "modifying-raw-objects"]], "len(raw)": [[216, null]], "Long channel names": [[216, null]], "Extracting data from Raw objects": [[216, "extracting-data-from-raw-objects"]], "Extracting data by index": [[216, "extracting-data-by-index"]], "Extracting channels by name": [[216, "extracting-channels-by-name"]], "Extracting channels by type": [[216, "extracting-channels-by-type"]], "The Raw.get_data() method": [[216, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[216, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[216, "exporting-and-saving-raw-objects"]], "Working with events": [[217, "working-with-events"]], "Reading and writing events from/to a file": [[217, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[217, "subselecting-and-combining-events"]], "Including/excluding events": [[217, null]], "Mapping Event IDs to trial descriptors": [[217, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[217, "plotting-events"]], "Plotting events and raw data together": [[217, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[217, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[218, "annotating-continuous-data"]], "Creating annotations programmatically": [[218, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[218, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[218, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[218, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[218, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[219, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[219, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[219, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[219, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[219, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[222, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[222, "creating-info-objects"]], "Info objects": [[222, null]], "Info consistency": [[222, null]], "Creating Raw objects": [[222, "creating-raw-objects"]], "Units": [[222, null]], "Creating Epochs objects": [[222, "creating-epochs-objects"]], "Creating Evoked Objects": [[222, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[223, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[223, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[223, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[223, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[223, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[223, "create-source-space-data-with-known-signals"]], "Plot original signals": [[223, "plot-original-signals"]], "Simulate sensor-space signals": [[223, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[223, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[223, "exercises"], [232, "exercises"]], "DICS for power mapping": [[224, "dics-for-power-mapping"]], "Setup": [[224, "setup"]], "Data simulation": [[224, "data-simulation"]], "Power mapping": [[224, "power-mapping"]], "Statistical inference": [[227, "statistical-inference"]], "Hypothesis testing": [[227, "hypothesis-testing"]], "Null hypothesis": [[227, "null-hypothesis"]], "Parametric tests": [[227, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[227, "hat-variance-adjustment"], [227, "id3"]], "Non-parametric tests": [[227, "non-parametric-tests"]], "Multiple comparisons": [[227, "multiple-comparisons"]], "Bonferroni correction": [[227, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[227, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[227, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[227, "clustering"]], "Effect size": [[227, null]], "Defining the adjacency matrix": [[227, "defining-the-adjacency-matrix"]], "Standard clustering": [[227, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[227, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[227, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[227, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[227, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[227, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[228, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[229, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[229, "set-parameters"], [231, "set-parameters"], [232, "set-parameters"], [235, "set-parameters"], [236, "set-parameters"], [237, "set-parameters"]], "Define adjacency for statistics": [[229, "define-adjacency-for-statistics"]], "Compute statistic": [[229, "compute-statistic"], [230, "compute-statistic"], [235, "compute-statistic"], [236, "compute-statistic"]], "View time-frequency plots": [[229, "view-time-frequency-plots"], [230, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[230, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[231, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[231, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[231, "setup-repeated-measures-anova"]], "Sample data layout": [[231, "id1"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[231, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[232, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[232, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[232, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[232, "compute-permutation-statistic"]], "Visualize clusters": [[232, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[232, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[235, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[235, "read-epochs-for-all-channels-removing-a-bad-one"], [237, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[235, "transform-to-source-space"], [237, "transform-to-source-space"]], "Transform to common cortical space": [[235, "transform-to-common-cortical-space"], [237, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[235, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[235, "selecting-significant-clusters"]], "Visualize the clusters": [[235, "visualize-the-clusters"], [236, "visualize-the-clusters"], [237, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[236, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[237, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[237, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[237, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[240, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[240, "visualizing-spectrum-objects"]], "Migrating legacy code": [[240, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[240, "id4"]], "Frequency and time-frequency sensor analysis": [[241, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[241, "frequency-analysis"], [242, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[241, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[241, "inspect-power"]], "Joint Plot": [[241, "joint-plot"]], "Inspect ITC": [[241, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[242, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[242, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[242, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[242, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[242, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[242, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[242, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[242, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[242, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[242, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[242, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[242, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[242, "debriefing"]], "Bonus exercises": [[242, "bonus-exercises"]], "Effect of trial duration on SNR": [[242, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[242, "time-resolved-snr"]], "General bibliography": [[245, "general-bibliography"]], "Papers citing MNE-Python": [[246, "papers-citing-mne-python"]], "Connectivity Estimation": [[247, "connectivity-estimation"]], "Covariance computation": [[248, "covariance-computation"]], "Creating data objects from arrays": [[249, "creating-data-objects-from-arrays"]], "Datasets": [[250, "datasets"]], "Decoding": [[251, "decoding"]], "Events": [[252, "events"]], "Exporting": [[253, "exporting"]], "File I/O": [[254, "file-i-o"]], "Forward Modeling": [[255, "forward-modeling"]], "Funding and other support": [[256, "funding-and-other-support"]], "Institutional partners": [[256, "institutional-partners"]], "Current partners": [[256, "current-partners"], [879, "current-partners"]], "Former partners": [[256, "former-partners"], [879, "former-partners"]], "Command line tools using Python": [[257, "command-line-tools-using-python"]], "mne anonymize": [[257, "mne-anonymize"]], "Anonymize raw fif file.": [[257, "anonymize-raw-fif-file"]], "Options": [[257, "options"], [257, "id3"], [257, "id6"], [257, "id9"], [257, "id12"], [257, "id15"], [257, "id18"], [257, "id21"], [257, "id24"], [257, "id28"], [257, "id31"], [257, "id34"], [257, "id37"], [257, "id40"], [257, "id43"], [257, "id46"], [257, "id49"], [257, "id52"], [257, "id55"], [257, "id58"], [257, "id61"], [257, "id64"], [257, "id67"]], "mne browse_raw": [[257, "mne-browse-raw"]], "Browse raw data.": [[257, "browse-raw-data"]], "mne bti2fiff": [[257, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[257, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[257, "notes"], [257, "id26"]], "mne clean_eog_ecg": [[257, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[257, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[257, "mne-compare-fiff"]], "Compare FIFF files.": [[257, "compare-fiff-files"]], "mne compute_proj_ecg": [[257, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[257, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[257, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[257, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[257, "mne-coreg"]], "Open the coregistration GUI.": [[257, "open-the-coregistration-gui"]], "mne flash_bem": [[257, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[257, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[257, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[257, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[257, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[257, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[257, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[257, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[257, "mne-maxfilter"]], "Apply MaxFilter.": [[257, "apply-maxfilter"]], "mne prepare_bem_model": [[257, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[257, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[257, "mne-report"]], "Create mne report for a folder.": [[257, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[257, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[257, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[257, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[257, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[257, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[257, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[257, "mne-show-info"]], "Show measurement info from .fif file.": [[257, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[257, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[257, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[257, "mne-sys-info"]], "Show system information.": [[257, "show-system-information"]], "mne watershed_bem": [[257, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[257, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[257, "mne-what"]], "Check type of FIF file.": [[257, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[258, "mne-acqparserfif"]], "mne.Annotations": [[259, "mne-annotations"]], "Examples using mne.Annotations": [[259, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[260, "mne-baseepochs"]], "mne.BiHemiLabel": [[261, "mne-bihemilabel"]], "mne.Covariance": [[262, "mne-covariance"]], "Examples using mne.Covariance": [[262, "examples-using-mne-covariance"]], "mne.Dipole": [[263, "mne-dipole"]], "Examples using mne.Dipole": [[263, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[264, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[264, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[265, "mne-epochs"]], "Examples using mne.Epochs": [[265, "examples-using-mne-epochs"]], "mne.EpochsArray": [[266, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[266, "examples-using-mne-epochsarray"]], "mne.Evoked": [[267, "mne-evoked"]], "Examples using mne.Evoked": [[267, "examples-using-mne-evoked"]], "mne.EvokedArray": [[268, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[268, "examples-using-mne-evokedarray"]], "mne.Forward": [[269, "mne-forward"]], "Examples using mne.Forward": [[269, "examples-using-mne-forward"]], "mne.Info": [[270, "mne-info"]], "Examples using mne.Info": [[270, "examples-using-mne-info"]], "mne.Label": [[271, "mne-label"]], "Examples using mne.Label": [[271, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[272, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[272, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[273, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[273, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[274, "mne-projection"]], "Examples using mne.Projection": [[274, "examples-using-mne-projection"]], "mne.Report": [[275, "mne-report"]], "Examples using mne.Report": [[275, "examples-using-mne-report"]], "mne.SourceEstimate": [[276, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[276, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[277, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[277, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[278, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[278, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[279, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[279, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[280, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[280, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[281, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[282, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[282, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[283, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[284, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[284, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[285, "mne-apply-forward"]], "mne.apply_forward_raw": [[286, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[287, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[288, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[288, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[289, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[289, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[290, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[291, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[291, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[292, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[293, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[293, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[294, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[294, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[295, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[295, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[296, "mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[297, "mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[298, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[298, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[299, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[299, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[300, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[300, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[301, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[301, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[302, "mne-beamformer-read-beamformer"]], "mne.beamformer.trap_music": [[303, "mne-beamformer-trap-music"]], "Examples using mne.beamformer.trap_music": [[303, "examples-using-mne-beamformer-trap-music"]], "mne.bem.ConductorModel": [[304, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[304, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[305, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[306, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[307, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[308, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[309, "mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[310, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[311, "mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[312, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[312, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[313, "mne-channel-type"]], "Examples using mne.channel_type": [[313, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[314, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[314, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[315, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[315, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[316, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[316, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[317, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[318, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[318, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[319, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[320, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[320, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[321, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[322, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[323, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[324, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[324, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[325, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[325, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[326, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[326, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[327, "mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[328, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[328, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[329, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[330, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[330, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[331, "mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[332, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[332, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[333, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[334, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[335, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[336, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[336, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[337, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[338, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[339, "mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[340, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[340, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[341, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[342, "mne-channels-rename-channels"]], "mne.chpi.compute_chpi_amplitudes": [[343, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[343, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[344, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[344, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[345, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[345, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[346, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[346, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[347, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[347, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[348, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[349, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[349, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[350, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[350, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[351, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[351, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[352, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[353, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[353, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[354, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[354, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[355, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[355, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[356, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[356, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[357, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[357, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[358, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[358, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[359, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[359, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[360, "mne-compute-rank"]], "Examples using mne.compute_rank": [[360, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[361, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[361, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[362, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[362, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[363, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[363, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[364, "mne-concatenate-events"]], "mne.concatenate_raws": [[365, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[365, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[366, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[366, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[367, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[367, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[368, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[368, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[369, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[369, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.count_annotations": [[370, "mne-count-annotations"]], "mne.count_events": [[371, "mne-count-events"]], "mne.cov.compute_whitener": [[372, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[373, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[374, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[374, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[375, "mne-create-default-subject"]], "mne.create_info": [[376, "mne-create-info"]], "Examples using mne.create_info": [[376, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[377, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[378, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[379, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[380, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[381, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[382, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[383, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[384, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[385, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[385, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[386, "mne-datasets-erp-core-data-path"]], "mne.datasets.eyelink.data_path": [[387, "mne-datasets-eyelink-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[388, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[389, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[390, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[391, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[392, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[392, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[393, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[394, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[395, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[396, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[397, "mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[398, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[399, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[400, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[401, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[402, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[403, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.refmeg_noise.data_path": [[404, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[405, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[405, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[406, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[406, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[407, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[408, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[409, "mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[410, "mne-datasets-ssvep-data-path"]], "mne.datasets.ucl_opm_auditory.data_path": [[411, "mne-datasets-ucl-opm-auditory-data-path"]], "mne.datasets.visual_92_categories.data_path": [[412, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[413, "mne-decimate-surface"]], "mne.decoding.CSP": [[414, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[414, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[415, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[415, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[416, "mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[417, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[417, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[418, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[418, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[419, "mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[420, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[420, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[421, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[421, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[422, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[422, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[423, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[423, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[424, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[424, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[425, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[426, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[426, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[427, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[428, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[428, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[429, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[429, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[430, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[430, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[431, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[431, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[432, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[432, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[433, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[433, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[434, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[434, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[435, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[435, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[436, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[437, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[437, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[438, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[438, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[439, "mne-equalize-channels"]], "mne.event.define_target_events": [[440, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[440, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[441, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[442, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[443, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[443, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[444, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[445, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[446, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[447, "mne-export-export-raw"]], "mne.extract_label_time_course": [[448, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[448, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[449, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[449, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[450, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[450, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[451, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[452, "mne-filter-filter-data"]], "mne.filter.notch_filter": [[453, "mne-filter-notch-filter"]], "mne.filter.resample": [[454, "mne-filter-resample"]], "Examples using mne.filter.resample": [[454, "examples-using-mne-filter-resample"]], "mne.find_events": [[455, "mne-find-events"]], "Examples using mne.find_events": [[455, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[456, "mne-find-stim-steps"]], "mne.fit_dipole": [[457, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[457, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[458, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[459, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[460, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[461, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[462, "mne-get-config"]], "Examples using mne.get_config": [[462, "examples-using-mne-get-config"]], "mne.get_config_path": [[463, "mne-get-config-path"]], "Examples using mne.get_config_path": [[463, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[464, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[465, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[466, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[466, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[467, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[467, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[468, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[469, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[470, "mne-grade-to-vertices"]], "mne.grand_average": [[471, "mne-grand-average"]], "Examples using mne.grand_average": [[471, "examples-using-mne-grand-average"]], "mne.grow_labels": [[472, "mne-grow-labels"]], "mne.gui.coregistration": [[473, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[473, "examples-using-mne-gui-coregistration"]], "mne.head_to_mni": [[474, "mne-head-to-mni"]], "mne.head_to_mri": [[475, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[476, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[476, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[477, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[477, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[478, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[478, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[479, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[479, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[480, "mne-io-baseraw"]], "mne.io.Raw": [[481, "mne-io-raw"]], "Examples using mne.io.Raw": [[481, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[482, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[482, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[483, "mne-io-anonymize-info"]], "mne.io.kit.read_mrk": [[484, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[485, "mne-io-read-fiducials"]], "mne.io.read_info": [[486, "mne-io-read-info"]], "Examples using mne.io.read_info": [[486, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[487, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[487, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[488, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[488, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[489, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[489, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[490, "mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[491, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[491, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[492, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[492, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[493, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[493, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[494, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[494, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[495, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[496, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[496, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[497, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[497, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[498, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[498, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[499, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[499, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_eyelink": [[500, "mne-io-read-raw-eyelink"]], "Examples using mne.io.read_raw_eyelink": [[500, "examples-using-mne-io-read-raw-eyelink"]], "mne.io.read_raw_fieldtrip": [[501, "mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[502, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[502, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_fil": [[503, "mne-io-read-raw-fil"]], "Examples using mne.io.read_raw_fil": [[503, "examples-using-mne-io-read-raw-fil"]], "mne.io.read_raw_gdf": [[504, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[504, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[505, "mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[506, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[506, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[507, "mne-io-read-raw-nedf"]], "mne.io.read_raw_nicolet": [[508, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[508, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[509, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[509, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[510, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[510, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_nsx": [[511, "mne-io-read-raw-nsx"]], "mne.io.read_raw_persyst": [[512, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[512, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[513, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[513, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[514, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[515, "mne-io-write-fiducials"]], "mne.label.select_sources": [[516, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[516, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[517, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[517, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[518, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[518, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[519, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[519, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[520, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[520, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[521, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[521, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[522, "mne-make-field-map"]], "Examples using mne.make_field_map": [[522, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[523, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[523, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[524, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[524, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[525, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[525, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[526, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[526, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[527, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[527, "examples-using-mne-make-sphere-model"]], "mne.match_channel_orders": [[528, "mne-match-channel-orders"]], "mne.merge_events": [[529, "mne-merge-events"]], "Examples using mne.merge_events": [[529, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[530, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[530, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[531, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[531, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[532, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[532, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[533, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[533, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[534, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[534, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[535, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[536, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[537, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[537, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[538, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[538, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[539, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[540, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[540, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[541, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[541, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[542, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[542, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[543, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[543, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[544, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[545, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[545, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[546, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[546, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[547, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[547, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[548, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[548, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[549, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[550, "mne-morph-labels"]], "mne.morph_source_spaces": [[551, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[551, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[552, "mne-open-docs"]], "mne.open_report": [[553, "mne-open-report"]], "Examples using mne.open_report": [[553, "examples-using-mne-open-report"]], "mne.parse_config": [[554, "mne-parse-config"]], "mne.pick_channels": [[555, "mne-pick-channels"]], "Examples using mne.pick_channels": [[555, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[556, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[557, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[558, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[558, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[559, "mne-pick-events"]], "Examples using mne.pick_events": [[559, "examples-using-mne-pick-events"]], "mne.pick_info": [[560, "mne-pick-info"]], "Examples using mne.pick_info": [[560, "examples-using-mne-pick-info"]], "mne.pick_types": [[561, "mne-pick-types"]], "Examples using mne.pick_types": [[561, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[562, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[562, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[563, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[563, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[564, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[564, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[565, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[565, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[566, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[567, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[567, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[568, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[568, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[569, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[569, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[570, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[571, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[571, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[572, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[572, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[573, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[573, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[574, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[575, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[576, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[576, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[577, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[577, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.compute_proj_hfc": [[578, "mne-preprocessing-compute-proj-hfc"]], "Examples using mne.preprocessing.compute_proj_hfc": [[578, "examples-using-mne-preprocessing-compute-proj-hfc"]], "mne.preprocessing.corrmap": [[579, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[579, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[580, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[580, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[581, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[581, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[582, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[582, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[583, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.eyetracking.Calibration": [[584, "mne-preprocessing-eyetracking-calibration"]], "Examples using mne.preprocessing.eyetracking.Calibration": [[584, "examples-using-mne-preprocessing-eyetracking-calibration"]], "mne.preprocessing.eyetracking.interpolate_blinks": [[585, "mne-preprocessing-eyetracking-interpolate-blinks"]], "Examples using mne.preprocessing.eyetracking.interpolate_blinks": [[585, "examples-using-mne-preprocessing-eyetracking-interpolate-blinks"]], "mne.preprocessing.eyetracking.read_eyelink_calibration": [[586, "mne-preprocessing-eyetracking-read-eyelink-calibration"]], "Examples using mne.preprocessing.eyetracking.read_eyelink_calibration": [[586, "examples-using-mne-preprocessing-eyetracking-read-eyelink-calibration"]], "mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[587, "mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "Examples using mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[587, "examples-using-mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "mne.preprocessing.find_bad_channels_maxwell": [[588, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[588, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[589, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[589, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[590, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[590, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[591, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[591, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[592, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[593, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.make_montage_volume": [[594, "mne-preprocessing-ieeg-make-montage-volume"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[595, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.ieeg.warp_montage": [[596, "mne-preprocessing-ieeg-warp-montage"]], "mne.preprocessing.infomax": [[597, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[598, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[598, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[599, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[599, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[600, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[601, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[601, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[602, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[602, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[603, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[603, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[604, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[605, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[605, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[606, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[606, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[607, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[607, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[608, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[609, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[610, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[611, "mne-preprocessing-read-ica"]], "Examples using mne.preprocessing.read_ica": [[611, "examples-using-mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[612, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[613, "mne-preprocessing-realign-raw"]], "Examples using mne.preprocessing.realign_raw": [[613, "examples-using-mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[614, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[615, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[616, "mne-random-parcellation"]], "mne.read_annotations": [[617, "mne-read-annotations"]], "Examples using mne.read_annotations": [[617, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[618, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[618, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[619, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[619, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[620, "mne-read-cov"]], "Examples using mne.read_cov": [[620, "examples-using-mne-read-cov"]], "mne.read_dipole": [[621, "mne-read-dipole"]], "Examples using mne.read_dipole": [[621, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[622, "mne-read-epochs"]], "Examples using mne.read_epochs": [[622, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[623, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[623, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[624, "mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[625, "mne-read-epochs-kit"]], "mne.read_events": [[626, "mne-read-events"]], "Examples using mne.read_events": [[626, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[627, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[628, "mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[629, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[629, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[630, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[631, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[631, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[632, "mne-read-freesurfer-lut"]], "mne.read_label": [[633, "mne-read-label"]], "Examples using mne.read_label": [[633, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[634, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[634, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[635, "mne-read-lta"]], "mne.read_morph_map": [[636, "mne-read-morph-map"]], "mne.read_proj": [[637, "mne-read-proj"]], "Examples using mne.read_proj": [[637, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[638, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[639, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[639, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[640, "mne-read-source-morph"]], "mne.read_source_spaces": [[641, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[641, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[642, "mne-read-surface"]], "Examples using mne.read_surface": [[642, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[643, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[643, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[644, "mne-read-trans"]], "Examples using mne.read_trans": [[644, "examples-using-mne-read-trans"]], "mne.read_tri": [[645, "mne-read-tri"]], "mne.read_vectorview_selection": [[646, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[646, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[647, "mne-rename-channels"]], "mne.scale_bem": [[648, "mne-scale-bem"]], "mne.scale_labels": [[649, "mne-scale-labels"]], "mne.scale_mri": [[650, "mne-scale-mri"]], "Examples using mne.scale_mri": [[650, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[651, "mne-scale-source-space"]], "mne.sensitivity_map": [[652, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[652, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[653, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[653, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[654, "mne-set-cache-dir"]], "mne.set_config": [[655, "mne-set-config"]], "Examples using mne.set_config": [[655, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[656, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[656, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[657, "mne-set-log-file"]], "mne.set_log_level": [[658, "mne-set-log-level"]], "mne.set_memmap_min_size": [[659, "mne-set-memmap-min-size"]], "mne.setup_source_space": [[660, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[660, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[661, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[661, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[662, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[662, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[663, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[664, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[664, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[665, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[665, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[666, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[666, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[667, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[667, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[668, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[668, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[669, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[669, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[670, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[670, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[671, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[671, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[672, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[672, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[673, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[674, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[674, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[675, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[676, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[676, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[677, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[677, "id3"]], "Examples using mne.simulation.simulate_raw": [[677, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[678, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[678, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[679, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[679, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[680, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[680, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[681, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[682, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[683, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[684, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[684, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[685, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[686, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[687, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[688, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[689, "mne-split-label"]], "mne.stats.bonferroni_correction": [[690, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[690, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[691, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[691, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[692, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[692, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[693, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[693, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[694, "mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[695, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[695, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[696, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[696, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[697, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[697, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[698, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[698, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[699, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[699, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[700, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[700, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[701, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[701, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[702, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[702, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[703, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[703, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[704, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[704, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[705, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[705, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[706, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[707, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[707, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[708, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[708, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[709, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[710, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[710, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[711, "mne-sys-info"]], "Examples using mne.sys_info": [[711, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[712, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[712, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[713, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[713, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[714, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[714, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsTFR": [[715, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[715, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[716, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[716, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.csd_array_fourier": [[717, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[718, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[719, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[720, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[720, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[721, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[721, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[722, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[722, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[723, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[723, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[724, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[725, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[725, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[726, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[727, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[728, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[728, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[729, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[730, "mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[731, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[731, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[732, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[733, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[734, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[735, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[736, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[737, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[738, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[739, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[739, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[740, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[741, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[742, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[742, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[743, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[743, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[744, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[744, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[745, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[746, "mne-transform-surface-to"]], "mne.transforms.Transform": [[747, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[748, "mne-transforms-apply-volume-registration"]], "mne.transforms.apply_volume_registration_points": [[749, "mne-transforms-apply-volume-registration-points"]], "mne.transforms.compute_volume_registration": [[750, "mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[751, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[752, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[752, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[753, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[754, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[754, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[755, "mne-use-log-level"]], "Examples using mne.use_log_level": [[755, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[756, "mne-utils-deprecated"]], "mne.utils.warn": [[757, "mne-utils-warn"]], "mne.verbose": [[758, "mne-verbose"]], "mne.vertex_to_mni": [[759, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[759, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[760, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[760, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[761, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[761, "examples-using-mne-viz-clickableimage"]], "mne.viz.Figure3D": [[762, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[763, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[764, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[764, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[765, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[765, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[766, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[767, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[768, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[769, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[769, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.get_3d_backend": [[770, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[771, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[771, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[772, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[773, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[773, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[774, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[775, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[776, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[776, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[777, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[777, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[778, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[778, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[779, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[779, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[780, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[780, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[781, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[781, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[782, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[782, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[783, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[783, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[784, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[784, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[785, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[785, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[786, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[787, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[787, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[788, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[788, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[789, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[790, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[791, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[791, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[792, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[793, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[793, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[794, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[795, "mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[796, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[796, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[797, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[798, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[798, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[799, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[800, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[800, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[801, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[801, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[802, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[802, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[803, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[804, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[805, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[806, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[807, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[808, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[808, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[809, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[810, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[811, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[811, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[812, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[812, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[813, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[814, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[815, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[816, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[817, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[817, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[818, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[818, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[819, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[819, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[820, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[821, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[822, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[822, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[823, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[823, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[824, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[825, "mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[826, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[827, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[827, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[828, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[828, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[829, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[830, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[830, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.use_3d_backend": [[831, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[832, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[832, "examples-using-mne-viz-use-browser-backend"]], "mne.what": [[833, "mne-what"]], "mne.write_bem_solution": [[834, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[835, "mne-write-bem-surfaces"]], "mne.write_cov": [[836, "mne-write-cov"]], "mne.write_events": [[837, "mne-write-events"]], "mne.write_evokeds": [[838, "mne-write-evokeds"]], "mne.write_forward_solution": [[839, "mne-write-forward-solution"]], "mne.write_head_bem": [[840, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[840, "examples-using-mne-write-head-bem"]], "mne.write_label": [[841, "mne-write-label"]], "mne.write_labels_to_annot": [[842, "mne-write-labels-to-annot"]], "mne.write_proj": [[843, "mne-write-proj"]], "mne.write_source_spaces": [[844, "mne-write-source-spaces"]], "mne.write_surface": [[845, "mne-write-surface"]], "Examples using mne.write_surface": [[845, "examples-using-mne-write-surface"]], "mne.write_trans": [[846, "mne-write-trans"]], "Glossary": [[847, "glossary"]], "MNE-Python Homepage": [[848, "mne-python-homepage"]], "Advanced setup": [[849, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[849, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[849, null]], "Installing to a headless Linux server": [[849, "installing-to-a-headless-linux-server"]], "Using the development version": [[849, "using-the-development-version"]], "Other Python distributions": [[849, "other-python-distributions"]], "GPU acceleration with CUDA": [[849, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[849, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[849, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[849, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[850, "testing-your-installation"]], "Contributing guide": [[851, "contributing-guide"]], "Overview of contribution process": [[851, "overview-of-contribution-process"]], "Setting up your local development environment": [[851, "setting-up-your-local-development-environment"]], "Configuring git": [[851, "configuring-git"]], "GNU Make": [[851, "gnu-make"]], "Forking the MNE-Python repository": [[851, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[851, "creating-the-virtual-environment"]], "Basic git commands": [[851, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[851, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[851, "mne-python-coding-conventions"]], "General requirements": [[851, "general-requirements"]], "All new functionality must have test coverage": [[851, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[851, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[851, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[851, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[851, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[851, "first-time-contributors"]], "Recurring contributors": [[851, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[851, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[851, "make-tests-fast-and-thorough"]], "Code style": [[851, "code-style"]], "Adhere to standard Python style guidelines": [[851, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[851, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[851, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[851, "cross-reference-everywhere"]], "Other style guidance": [[851, "other-style-guidance"]], "Code organization": [[851, "code-organization"]], "Importing": [[851, "importing"]], "Return types": [[851, "return-types"]], "Running the test suite": [[851, "running-the-test-suite"]], "Building the documentation": [[851, "building-the-documentation"]], "Modifying command-line tools": [[851, "modifying-command-line-tools"]], "GitHub workflow": [[851, "github-workflow"]], "Installing FreeSurfer": [[852, "installing-freesurfer"]], "Installing MNE-Python": [[853, "installing-mne-python"]], "MNE-Python installers": [[854, "mne-python-installers"]], "VS Code Setup": [[854, "vs-code-setup"]], "Install via pip or conda": [[855, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[855, "installing-mne-python-with-all-dependencies"]], "Installing MNE-Python with core dependencies": [[855, "installing-mne-python-with-core-dependencies"]], "Installing MNE-Python with HDF5 support": [[855, "installing-mne-python-with-hdf5-support"]], "Installing MNE-Python for other scenarios": [[855, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[855, "python-ides"]], "Installing Python": [[856, "installing-python"]], "Installing MNE-C": [[857, "installing-mne-c"]], "System requirements": [[857, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[857, null]], "Downloading and Installing MNE-C": [[857, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[857, "configuring-mne-c"]], "Testing MNE-C installation": [[857, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[857, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[858, "overview-of-the-mne-tools-suite"]], "Related software": [[858, "related-software"]], "What should I install?": [[858, "what-should-i-install"]], "Getting help": [[858, "getting-help"], [872, "getting-help"]], "Updating MNE-Python": [[859, "updating-mne-python"]], "Upgrading MNE-Python only": [[859, "upgrading-mne-python-only"]], "Upgrading all packages": [[859, "upgrading-all-packages"]], "Upgrading to the development version": [[859, "upgrading-to-the-development-version"]], "Inverse Solutions": [[860, "inverse-solutions"]], "Logging and Configuration": [[861, "logging-and-configuration"]], "Martinos Center setup": [[862, "martinos-center-setup"]], "MNE with CPP": [[863, "mne-with-cpp"]], "Most-used classes": [[864, "most-used-classes"]], "MRI Processing": [[865, "mri-processing"]], "How to cite MNE-Python": [[866, "how-to-cite-mne-python"]], "Citing the software": [[866, "citing-the-software"]], "Citing the inverse imaging algorithms": [[866, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[866, "citing-other-algorithms"]], "The typical M/EEG workflow": [[867, "the-typical-m-eeg-workflow"]], "Overview": [[867, "overview"], [877, "overview"]], "Artifact suppression": [[867, "artifact-suppression"]], "SSP": [[867, "ssp"]], "ICA": [[867, "ica"]], "Epoching and evoked data": [[867, "epoching-and-evoked-data"]], "Rejection using annotations": [[867, "rejection-using-annotations"]], "Source localization": [[867, "source-localization"]], "Anatomical information": [[867, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[867, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[867, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[867, "id9"]], "Creating the BEM model meshes": [[867, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[867, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[867, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[867, "aligning-coordinate-frames"]], "Computing the forward solution": [[867, "computing-the-forward-solution"], [874, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[867, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[867, "calculating-the-inverse-operator"]], "Creating source estimates": [[867, "creating-source-estimates"]], "Group analyses": [[867, "group-analyses"]], "Datasets Overview": [[868, "datasets-overview"]], "Sample": [[868, "sample"]], "Trigger codes for the sample data set.": [[868, "id20"]], "Contents of the data set": [[868, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[868, "id21"]], "Overview of the contents of the subjects/sample directory.": [[868, "id22"]], "UCL OPM Auditory": [[868, "ucl-opm-auditory"]], "Brainstorm": [[868, "brainstorm"]], "Auditory": [[868, "auditory"]], "Resting state": [[868, "resting-state"]], "Median nerve": [[868, "median-nerve"]], "SPM faces": [[868, "spm-faces"]], "EEGBCI motor imagery": [[868, "eegbci-motor-imagery"]], "Somatosensory": [[868, "somatosensory"]], "Multimodal": [[868, "multimodal"]], "fNIRS motor": [[868, "fnirs-motor"]], "High frequency SEF": [[868, "high-frequency-sef"]], "Visual 92 object categories": [[868, "visual-92-object-categories"]], "mTRF Dataset": [[868, "mtrf-dataset"]], "Kiloword dataset": [[868, "kiloword-dataset"]], "4D Neuroimaging / BTi dataset": [[868, "d-neuroimaging-bti-dataset"]], "OPM": [[868, "opm"]], "The Sleep PolySomnoGraphic Database": [[868, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[868, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[868, "miscellaneous-datasets"]], "fsaverage": [[868, "fsaverage"]], "Infant template MRIs": [[868, "infant-template-mris"]], "ECoG Dataset": [[868, "ecog-dataset"]], "sEEG Dataset": [[868, "seeg-dataset"]], "LIMO Dataset": [[868, "limo-dataset"]], "ERP CORE Dataset": [[868, "erp-core-dataset"]], "SSVEP": [[868, "ssvep"]], "EYELINK": [[868, "eyelink"]], "Interactive versus scripted analysis": [[869, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[869, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[869, "submodule-based-organization"]], "(Mostly) unified API": [[869, "mostly-unified-api"]], "In-place operation": [[869, "in-place-operation"]], "MNE-Python Development": [[870, "mne-python-development"]], "Frequently Asked Questions (FAQ)": [[871, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[871, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[871, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[871, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[871, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[871, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[871, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[871, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[871, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[871, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[871, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[871, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[871, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[871, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[871, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[871, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[871, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[871, "my-watershed-bem-meshes-look-incorrect"]], "Project Governance": [[873, "project-governance"]], "The Project": [[873, "the-project"]], "Governance model": [[873, "governance-model"]], "BDFL": [[873, "bdfl"]], "Steering Council": [[873, "steering-council"], [879, "steering-council"]], "Council membership": [[873, "council-membership"]], "Conflict of interest": [[873, "conflict-of-interest"]], "Private communications of the Council": [[873, "private-communications-of-the-council"]], "Council decision making": [[873, "council-decision-making"]], "Institutional Partners and funding": [[873, "institutional-partners-and-funding"]], "Document history": [[873, "document-history"], [879, "document-history"]], "Acknowledgements": [[873, "acknowledgements"]], "License": [[873, "license"]], "Algorithms and other implementation details": [[874, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[874, "internal-representation-units"]], "Floating-point precision": [[874, "floating-point-precision"]], "Supported channel types": [[874, "supported-channel-types"]], "Supported data formats": [[874, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[874, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[874, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[874, "preloading-continuous-raw-data"]], "Preloading epoched data": [[874, "preloading-epoched-data"]], "Loading data explicitly": [[874, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[874, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[874, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[874, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[874, "signal-space-projection-ssp"]], "General concepts": [[874, "general-concepts"]], "Estimation of the noise subspace": [[874, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[874, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[874, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[874, "using-the-watershed-algorithm"]], "Using FLASH images": [[874, "using-flash-images"]], "Organizing MRI data into directories": [[874, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[874, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[874, "inspecting-the-meshes"]], "The forward solution": [[874, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[874, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[874, "id18"]], "The head and device coordinate systems": [[874, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[874, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[874, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[874, "creating-the-bem-meshes"]], "Topology checks": [[874, "topology-checks"]], "Computing the BEM geometry data": [[874, "computing-the-bem-geometry-data"]], "Coil geometry information": [[874, "coil-geometry-information"]], "The sensor coordinate system": [[874, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[874, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[874, "implemented-coil-geometries"]], "Normal coil descriptions.": [[874, "id20"]], "Accurate coil descriptions": [[874, "id21"]], "The coil definition file": [[874, "the-coil-definition-file"]], "Coil representation accuracies.": [[874, "id22"]], "Purpose": [[874, "purpose"]], "Implementation of software gradient compensation": [[874, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[874, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[874, "id23"]], "EEG forward solution in the sphere model": [[874, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[874, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[874, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[874, "the-linear-inverse-operator"]], "Regularization": [[874, "regularization"]], "Whitening and scaling": [[874, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[874, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[874, "computation-of-the-solution"]], "Noise normalization": [[874, "noise-normalization"]], "sLORETA": [[874, "sloreta"]], "eLORETA": [[874, "eloreta"]], "Predicted data": [[874, "predicted-data"]], "Cortical patch statistics": [[874, "cortical-patch-statistics"]], "Orientation constraints": [[874, "orientation-constraints"]], "Depth weighting": [[874, "depth-weighting"]], "Effective number of averages": [[874, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[874, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[874, "why-morphing"]], "The morphing maps": [[874, "the-morphing-maps"]], "About smoothing": [[874, "about-smoothing"]], "Documentation overview": [[875, "documentation-overview"]], "Getting started with Python": [[876, "getting-started-with-python"]], "MNE-MATLAB documentation": [[877, "mne-matlab-documentation"]], "High-level reading routines.": [[877, "id2"]], "Channel selection utilities.": [[877, "id3"]], "Coordinate transformation utilities.": [[877, "id4"]], "Basic reading routines.": [[877, "id5"]], "Writing routines.": [[877, "id6"]], "High-level data writing routines.": [[877, "id7"]], "Coil definition utilities.": [[877, "id8"]], "Routines for software gradient compensation and signal-space projection.": [[877, "id9"]], "High-level routines for reading MNE data files.": [[877, "id10"]], "High-level routines for writing MNE data files.": [[877, "id11"]], "Routines related to stc, w, and label files.": [[877, "id12"]], "Routines for reading FreeSurfer surfaces.": [[877, "id13"]], "Utility functions.": [[877, "id14"]], "Examples demonstrating the use of the toolbox.": [[877, "id15"]], "Some data structures": [[877, "some-data-structures"]], "FIFF constants.": [[877, "id16"]], "The tag structure.": [[877, "id17"]], "The taginfo structure.": [[877, "id18"]], "The directory structure.": [[877, "id19"]], "The id structure.": [[877, "id20"]], "The named matrix structure.": [[877, "id21"]], "The trans structure.": [[877, "id22"]], "The dig structure.": [[877, "id23"]], "The coildef structure. For more detailed information, see Coil geometry information.": [[877, "id24"]], "The ch structure.": [[877, "id25"]], "The proj structure.": [[877, "id26"]], "The comp structure.": [[877, "id27"]], "The meas info structure.": [[877, "id28"]], "The surf structure.": [[877, "id29"]], "The cov structure.": [[877, "id30"]], "The fwd structure.": [[877, "id31"]], "The inv structure. Note: The fields proj, whitener, reginv, and noisenorm are filled in by the routine mne_prepare_inverse_operator.": [[877, "id32"]], "On-line documentation for individual routines": [[877, "on-line-documentation-for-individual-routines"]], "Migrating from other analysis software": [[878, "migrating-from-other-analysis-software"]], "EEGLAB": [[878, "eeglab"]], "Potential pitfalls": [[878, "potential-pitfalls"]], "Current steering council and institutional partners": [[879, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[879, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[879, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[879, "institutional-partners"]], "Roadmap": [[880, "roadmap"]], "Page contents": [[880, "page-contents"]], "Open": [[880, "open"]], "Clustering statistics API": [[880, "clustering-statistics-api"]], "Access to open EEG/MEG databases": [[880, "access-to-open-eeg-meg-databases"]], "In progress": [[880, "in-progress"]], "Eye-tracking support": [[880, "eye-tracking-support"]], "Diversity, Equity, and Inclusion (DEI)": [[880, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[880, "first-class-opm-support"]], "Deep source modeling": [[880, "deep-source-modeling"]], "Better sEEG/ECoG/DBS support": [[880, "better-seeg-ecog-dbs-support"]], "Time-frequency classes": [[880, "time-frequency-classes"]], "Pediatric and clinical MEG pipelines": [[880, "pediatric-and-clinical-meg-pipelines"]], "Statistics efficiency": [[880, "statistics-efficiency"]], "3D visualization": [[880, "d-visualization"]], "Documentation updates": [[880, "documentation-updates"]], "Completed": [[880, "completed"]], "Integrate OpenMEEG via improved Python bindings": [[880, "integrate-openmeeg-via-improved-python-bindings"]], "Time-frequency visualization": [[880, "time-frequency-visualization"]], "Distributed computing support": [[880, "distributed-computing-support"]], "2D visualization": [[880, "id3"]], "Tutorial / example overhaul": [[880, "tutorial-example-overhaul"]], "Cluster computing images": [[880, "cluster-computing-images"]], "Python API Reference": [[882, "python-api-reference"]], "Reading raw data": [[883, "reading-raw-data"]], "Realtime": [[884, "realtime"]], "MNE-Report": [[885, "mne-report"]], "Sensor Space Data": [[886, "sensor-space-data"]], "Source Space Data": [[888, "source-space-data"]], "Statistics": [[889, "statistics"]], "Time-Frequency": [[890, "time-frequency"]], "What\u2019s new": [[892, "what-s-new"]], "Version 1.5.0 (2023-08-14)": [[892, "version-1-5-0-2023-08-14"]], "Enhancements": [[892, "enhancements"], [892, "id2"], [892, "id7"], [892, "id11"], [892, "id15"], [892, "id18"], [892, "id22"], [892, "id26"], [892, "id30"], [892, "id34"]], "Bugs": [[892, "bugs"], [892, "id3"], [892, "id6"], [892, "id8"], [892, "id12"], [892, "id16"], [892, "id19"], [892, "id23"], [892, "id27"], [892, "id31"], [892, "id35"]], "API changes": [[892, "api-changes"], [892, "id4"], [892, "id9"], [892, "id13"], [892, "id20"], [892, "id24"], [892, "id28"], [892, "id32"], [892, "id36"]], "Authors": [[892, "authors"], [892, "id5"], [892, "id10"], [892, "id14"], [892, "id17"], [892, "id21"], [892, "id25"], [892, "id29"], [892, "id33"], [892, "id37"], [892, "id38"], [892, "id48"], [892, "id52"], [892, "id56"], [892, "id60"], [892, "id64"], [892, "id68"], [892, "id72"], [892, "id76"], [892, "id80"], [892, "id84"], [892, "id87"], [892, "id90"], [892, "id93"], [892, "id95"], [892, "id97"], [892, "id99"], [892, "id100"]], "Version 1.4.0 (2023-05-10)": [[892, "version-1-4-0-2023-05-10"]], "Version 1.3.1 (2023-02-23)": [[892, "version-1-3-1-2023-02-23"]], "Version 1.3.0 (2022-12-21)": [[892, "version-1-3-0-2022-12-21"]], "Version 1.2.0 (2022-10-11)": [[892, "version-1-2-0-2022-10-11"]], "Version 1.1.0 (2022-08-03)": [[892, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[892, "api-and-behavior-changes"]], "Version 1.0.0 (2022-03-21)": [[892, "version-1-0-0-2022-03-21"]], "Dependencies": [[892, "dependencies"]], "Version 0.24.0 (2021-11-03)": [[892, "version-0-24-0-2021-11-03"]], "Version 0.23.0 (2021-04-27)": [[892, "version-0-23-0-2021-04-27"]], "Version 0.22.0 (2020-12-17)": [[892, "version-0-22-0-2020-12-17"]], "Version 0.21 (2020-09-21)": [[892, "version-0-21-2020-09-21"]], "Version 0.20 (2020-03-27)": [[892, "version-0-20-2020-03-27"]], "Changelog": [[892, "changelog"], [892, "id39"], [892, "id42"], [892, "id45"], [892, "id49"], [892, "id53"], [892, "id57"], [892, "id61"], [892, "id65"], [892, "id69"], [892, "id73"], [892, "id77"], [892, "id81"], [892, "id85"], [892, "id88"], [892, "id91"], [892, "id94"], [892, "id96"], [892, "id98"]], "Bug": [[892, "bug"], [892, "id40"], [892, "id43"], [892, "id46"], [892, "id50"]], "API": [[892, "api"], [892, "id41"], [892, "id44"], [892, "id47"], [892, "id51"], [892, "id55"], [892, "id59"], [892, "id63"], [892, "id67"], [892, "id71"], [892, "id75"], [892, "id79"], [892, "id83"], [892, "id86"], [892, "id89"], [892, "id92"]], "Version 0.19 (2019-09-24)": [[892, "version-0-19-2019-09-24"]], "Version 0.18 (2019-05-19)": [[892, "version-0-18-2019-05-19"]], "Version 0.17 (2018-11-19)": [[892, "version-0-17-2018-11-19"]], "Version 0.16 (2018-05-01)": [[892, "version-0-16-2018-05-01"]], "Version 0.15 (2017-10-20)": [[892, "version-0-15-2017-10-20"]], "BUG": [[892, "id54"], [892, "id58"], [892, "id62"], [892, "id66"], [892, "id70"], [892, "id74"], [892, "id78"], [892, "id82"]], "Version 0.14 (2017-03-24)": [[892, "version-0-14-2017-03-24"]], "Version 0.13 (2016-09-27)": [[892, "version-0-13-2016-09-27"]], "Version 0.12 (2016-05-10)": [[892, "version-0-12-2016-05-10"]], "Version 0.11 (2015-12-24)": [[892, "version-0-11-2015-12-24"]], "Version 0.10 (2015-10-26)": [[892, "version-0-10-2015-10-26"]], "Version 0.9 (2015-05-22)": [[892, "version-0-9-2015-05-22"]], "Version 0.8 (2014-06-25)": [[892, "version-0-8-2014-06-25"]], "Version 0.7 (2013-11-26)": [[892, "version-0-7-2013-11-26"]], "Version 0.6 (2013-06-15)": [[892, "version-0-6-2013-06-15"]], "Version 0.5 (2012-12-27)": [[892, "version-0-5-2012-12-27"]], "Version 0.4 (2012-08-24)": [[892, "version-0-4-2012-08-24"]], "Version 0.3 (2012-03-23)": [[892, "version-0-3-2012-03-23"]], "Version 0.2 (2011-11-08)": [[892, "version-0-2-2011-11-08"]], "API changes summary": [[892, "api-changes-summary"]], "Version 0.1 (2011-09-23)": [[892, "version-0-1-2011-09-23"]]}, "indexentries": {"mne.datasets": [[250, "module-mne.datasets"]], "module": [[250, "module-mne.datasets"], [251, "module-mne.decoding"], [252, "module-mne.epochs"], [252, "module-mne.event"], [253, "module-mne.export"], [255, "module-mne.bem"], [860, "module-mne.beamformer"], [860, "module-mne.dipole"], [860, "module-mne.inverse_sparse"], [860, "module-mne.minimum_norm"], [861, "module-mne.cuda"], [861, "module-mne.utils"], [881, "module-mne.channels"], [881, "module-mne.chpi"], [881, "module-mne.filter"], [881, "module-mne.preprocessing"], [881, "module-mne.preprocessing.eyetracking"], [881, "module-mne.preprocessing.ieeg"], [881, "module-mne.preprocessing.nirs"], [881, "module-mne.transforms"], [882, "module-mne"], [883, "module-mne.io"], [883, "module-mne.io.kit"], [886, "module-mne.baseline"], [887, "module-mne.simulation"], [887, "module-mne.simulation.metrics"], [889, "module-mne.stats"], [890, "module-mne.time_frequency"], [890, "module-mne.time_frequency.tfr"], [891, "module-mne.viz"]], "mne.decoding": [[251, "module-mne.decoding"]], "mne.epochs": [[252, "module-mne.epochs"]], "mne.event": [[252, "module-mne.event"]], "mne.export": [[253, "module-mne.export"]], "mne.bem": [[255, "module-mne.bem"]], "acqparserfif (class in mne)": [[258, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[258, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[258, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[258, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[258, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[258, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[259, "mne.Annotations"]], "__add__() (mne.annotations method)": [[259, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[259, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[259, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[259, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[259, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[259, "mne.Annotations.copy"]], "count() (mne.annotations method)": [[259, "mne.Annotations.count"]], "crop() (mne.annotations method)": [[259, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[259, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[259, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[259, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[259, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[259, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[259, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[260, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[261, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[261, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[261, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[261, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[262, "mne.Covariance"]], "__add__() (mne.covariance method)": [[262, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[262, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[262, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[262, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[262, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[262, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[262, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[262, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[262, "mne.Covariance.copy"]], "data (mne.covariance property)": [[262, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[262, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[262, "mne.Covariance.get"]], "items() (mne.covariance method)": [[262, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[262, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[262, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[262, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[262, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[262, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[262, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[262, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[262, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[262, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[262, "mne.Covariance.update"]], "values() (mne.covariance method)": [[262, "mne.Covariance.values"]], "dipole (class in mne)": [[263, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[263, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[263, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[263, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[263, "mne.Dipole.crop"]], "plot_amplitudes() (mne.dipole method)": [[263, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[263, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[263, "mne.Dipole.save"]], "time_as_index() (mne.dipole method)": [[263, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[263, "mne.Dipole.times"]], "to_mni() (mne.dipole method)": [[263, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[263, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[263, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[264, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[264, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[264, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[264, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[264, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[264, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[265, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[265, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[265, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[265, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[265, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[265, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[265, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[265, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[265, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[265, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[265, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[265, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[265, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[265, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[265, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[265, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[265, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[265, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[265, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[265, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[265, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[265, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[265, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[265, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[265, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[265, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[265, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[265, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[265, "mne.Epochs.export"]], "filename (mne.epochs property)": [[265, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[265, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[265, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[265, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[265, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[265, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[265, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[265, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[265, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[265, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[265, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[265, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[265, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[265, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[265, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[265, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[265, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[265, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[265, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[265, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[265, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[265, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[265, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[265, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[265, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[265, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[265, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[265, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[265, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[265, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[265, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[265, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[265, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[265, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[265, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[265, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[265, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[265, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[265, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[265, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[265, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[265, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[265, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[266, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[266, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[266, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[266, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[266, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[266, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[266, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[266, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[266, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[266, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[266, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[266, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[266, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[266, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[266, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[266, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[266, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[266, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[266, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[266, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[266, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[266, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[266, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[266, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[266, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[266, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[266, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[266, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[266, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[266, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[266, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[266, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[266, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[266, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[266, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[266, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[266, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[266, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[266, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[266, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[266, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[266, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[266, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[266, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[266, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[266, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[266, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[266, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[266, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[266, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[266, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[266, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[266, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[266, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[266, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[266, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[266, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[266, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[266, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[267, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[267, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[267, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[267, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[267, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[267, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[267, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[267, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[267, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[267, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[267, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[267, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[267, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[267, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[267, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[267, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[267, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[267, "mne.Evoked.crop"]], "data (mne.evoked property)": [[267, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[267, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[267, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[267, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[267, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[267, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[267, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[267, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[267, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[267, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[267, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[267, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[267, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[267, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[267, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[267, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[267, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[267, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[267, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[267, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[267, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[267, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[267, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[267, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[267, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[267, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[267, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[267, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[267, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[267, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[267, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[267, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[267, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[267, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[267, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[267, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[267, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[267, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[267, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[267, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[267, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[267, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[267, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[267, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[268, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[268, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[268, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[268, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[268, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[268, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[268, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[268, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[268, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[268, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[268, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[268, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[268, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[268, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[268, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[268, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[268, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[268, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[268, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[268, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[268, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[268, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[268, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[268, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[268, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[268, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[268, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[268, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[268, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[268, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[268, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[268, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[268, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[268, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[268, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[268, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[268, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[268, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[268, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[268, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[268, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[268, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[268, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[268, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[268, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[268, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[269, "mne.Forward"]], "copy() (mne.forward method)": [[269, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[269, "mne.Forward.pick_channels"]], "info (class in mne)": [[270, "mne.Info"]], "__contains__() (mne.info method)": [[270, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[270, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[270, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[270, "mne.Info.__len__"]], "anonymize() (mne.info method)": [[270, "mne.Info.anonymize"]], "clear() (mne.info method)": [[270, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[270, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[270, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[270, "mne.Info.fromkeys"]], "get() (mne.info method)": [[270, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[270, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[270, "mne.Info.get_montage"]], "items() (mne.info method)": [[270, "mne.Info.items"]], "keys() (mne.info method)": [[270, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[270, "mne.Info.normalize_proj"]], "plot_sensors() (mne.info method)": [[270, "mne.Info.plot_sensors"]], "pop() (mne.info method)": [[270, "mne.Info.pop"]], "popitem() (mne.info method)": [[270, "mne.Info.popitem"]], "rename_channels() (mne.info method)": [[270, "mne.Info.rename_channels"]], "save() (mne.info method)": [[270, "mne.Info.save"]], "set_channel_types() (mne.info method)": [[270, "mne.Info.set_channel_types"]], "set_meas_date() (mne.info method)": [[270, "mne.Info.set_meas_date"]], "set_montage() (mne.info method)": [[270, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[270, "mne.Info.setdefault"]], "update() (mne.info method)": [[270, "mne.Info.update"]], "values() (mne.info method)": [[270, "mne.Info.values"]], "label (class in mne)": [[271, "mne.Label"]], "__add__() (mne.label method)": [[271, "mne.Label.__add__"]], "__len__() (mne.label method)": [[271, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[271, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[271, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[271, "mne.Label.compute_area"]], "copy() (mne.label method)": [[271, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[271, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[271, "mne.Label.fill"]], "get_tris() (mne.label method)": [[271, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[271, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[271, "mne.Label.morph"]], "restrict() (mne.label method)": [[271, "mne.Label.restrict"]], "save() (mne.label method)": [[271, "mne.Label.save"]], "smooth() (mne.label method)": [[271, "mne.Label.smooth"]], "split() (mne.label method)": [[271, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[272, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.data"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.shape"]], "sqrt() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.times"]], "tmin (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[272, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[272, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[273, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.data"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.shape"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.times"]], "tmin (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[273, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[273, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[274, "mne.Projection"]], "__contains__() (mne.projection method)": [[274, "mne.Projection.__contains__"]], "__getitem__() (mne.projection method)": [[274, "mne.Projection.__getitem__"]], "__iter__() (mne.projection method)": [[274, "mne.Projection.__iter__"]], "__len__() (mne.projection method)": [[274, "mne.Projection.__len__"]], "clear() (mne.projection method)": [[274, "mne.Projection.clear"]], "copy() (mne.projection method)": [[274, "mne.Projection.copy"]], "fromkeys() (mne.projection method)": [[274, "mne.Projection.fromkeys"]], "get() (mne.projection method)": [[274, "mne.Projection.get"]], "items() (mne.projection method)": [[274, "mne.Projection.items"]], "keys() (mne.projection method)": [[274, "mne.Projection.keys"]], "plot_topomap() (mne.projection method)": [[274, "mne.Projection.plot_topomap"]], "pop() (mne.projection method)": [[274, "mne.Projection.pop"]], "popitem() (mne.projection method)": [[274, "mne.Projection.popitem"]], "setdefault() (mne.projection method)": [[274, "mne.Projection.setdefault"]], "update() (mne.projection method)": [[274, "mne.Projection.update"]], "values() (mne.projection method)": [[274, "mne.Projection.values"]], "report (class in mne)": [[275, "mne.Report"]], "__len__() (mne.report method)": [[275, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[275, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[275, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[275, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[275, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[275, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[275, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[275, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[275, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[275, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[275, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[275, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[275, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[275, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[275, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[275, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[275, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[275, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[275, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[275, "mne.Report.add_trans"]], "html (mne.report property)": [[275, "mne.Report.html"]], "parse_folder() (mne.report method)": [[275, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[275, "mne.Report.remove"]], "save() (mne.report method)": [[275, "mne.Report.save"]], "tags (mne.report property)": [[275, "mne.Report.tags"]], "sourceestimate (class in mne)": [[276, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[276, "mne.SourceEstimate.data"]], "estimate_snr() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[276, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[276, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[276, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[276, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[276, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[276, "mne.SourceEstimate.shape"]], "sqrt() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[276, "mne.SourceEstimate.times"]], "tmin (mne.sourceestimate property)": [[276, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[276, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[276, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[277, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[277, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[277, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[277, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[278, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[278, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[279, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.data"]], "expand() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.shape"]], "sqrt() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.times"]], "tmin (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[279, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[279, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[280, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.data"]], "extract_label_time_course() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.shape"]], "sqrt() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.times"]], "tmin (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[280, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[280, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[281, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.data"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.shape"]], "sqrt() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.times"]], "tmin (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[281, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[281, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[282, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[283, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[284, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[285, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[286, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[287, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[288, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[289, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[289, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[290, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[291, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[292, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[293, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[294, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[295, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[296, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[297, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[298, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[299, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[300, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[301, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[302, "mne.beamformer.read_beamformer"]], "trap_music() (in module mne.beamformer)": [[303, "mne.beamformer.trap_music"]], "conductormodel (class in mne.bem)": [[304, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[304, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[305, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[306, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[307, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[308, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[309, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[310, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[311, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[312, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[313, "mne.channel_type"]], "digmontage (class in mne.channels)": [[314, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[315, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[315, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[315, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[316, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[317, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[318, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[319, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[320, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[321, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[322, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[323, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[324, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[325, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[326, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[327, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[328, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[329, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[330, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[331, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[332, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[333, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[334, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[335, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[336, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[337, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[338, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[339, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[340, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[341, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[342, "mne.channels.rename_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[343, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[344, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[345, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[346, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[347, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[348, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[349, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[350, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[351, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[352, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[353, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[354, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[355, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[356, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[357, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[358, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[359, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[360, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[361, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[362, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[363, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[364, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[365, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[366, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[367, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[367, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[367, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[368, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[369, "mne.coreg.get_mni_fiducials"]], "count_annotations() (in module mne)": [[370, "mne.count_annotations"]], "count_events() (in module mne)": [[371, "mne.count_events"]], "compute_whitener() (in module mne.cov)": [[372, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[373, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[374, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[375, "mne.create_default_subject"]], "create_info() (in module mne)": [[376, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[377, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[378, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[379, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[380, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[381, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[382, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[383, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[384, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[385, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[386, "mne.datasets.erp_core.data_path"]], "data_path() (in module mne.datasets.eyelink)": [[387, "mne.datasets.eyelink.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[388, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[389, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[390, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[391, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[392, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[393, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[394, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[395, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[396, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[397, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[398, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[399, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[400, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[401, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[402, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[403, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[404, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[405, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[406, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[407, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[408, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[409, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[410, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.ucl_opm_auditory)": [[411, "mne.datasets.ucl_opm_auditory.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[412, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[413, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[414, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[414, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[414, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[414, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[414, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[414, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[414, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[414, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[415, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[415, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[415, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[415, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[415, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[415, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[416, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[416, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[416, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[416, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[417, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[417, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[417, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[417, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[417, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[417, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[417, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[417, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[417, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[417, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[418, "mne.decoding.LinearModel"]], "fit() (mne.decoding.linearmodel method)": [[418, "mne.decoding.LinearModel.fit"]], "get_params() (mne.decoding.linearmodel method)": [[418, "mne.decoding.LinearModel.get_params"]], "set_params() (mne.decoding.linearmodel method)": [[418, "mne.decoding.LinearModel.set_params"]], "psdestimator (class in mne.decoding)": [[419, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[419, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[419, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[419, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[420, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[420, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[420, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[420, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[420, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[420, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[421, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[421, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[421, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[421, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[421, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[421, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[421, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[421, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[422, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[422, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[422, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[422, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[422, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[422, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[422, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[422, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[422, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[423, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[423, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[423, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[423, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[423, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[423, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[423, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[424, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[424, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[424, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[424, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[424, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[424, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[424, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[424, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[424, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[424, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[425, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[425, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[425, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[425, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[426, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[426, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[426, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[426, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[426, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[427, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[427, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[427, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[427, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[427, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[427, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[428, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[428, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[428, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[428, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[428, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[428, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[428, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[429, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[429, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[429, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[429, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[429, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[430, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[431, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[432, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[433, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[434, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[435, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[436, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[437, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[438, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[439, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[440, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[441, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[442, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[443, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[444, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[445, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[446, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[447, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[448, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[449, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[450, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[451, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[452, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[453, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[454, "mne.filter.resample"]], "find_events() (in module mne)": [[455, "mne.find_events"]], "find_stim_steps() (in module mne)": [[456, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[457, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[458, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[459, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[460, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[461, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[462, "mne.get_config"]], "get_config_path() (in module mne)": [[463, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[464, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[465, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[466, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[467, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[468, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[469, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[470, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[471, "mne.grand_average"]], "grow_labels() (in module mne)": [[472, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[473, "mne.gui.coregistration"]], "head_to_mni() (in module mne)": [[474, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[475, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[476, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[477, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[478, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[479, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[480, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[481, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[481, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[481, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[481, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[481, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[481, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[481, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[481, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[481, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[481, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[481, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[481, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[481, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[481, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[481, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[481, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[481, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[481, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[481, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[481, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[481, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[481, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[481, "mne.io.Raw.crop_by_annotations"]], "del_proj() (mne.io.raw method)": [[481, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[481, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[481, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[481, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[481, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[481, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[481, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[481, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[481, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[481, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[481, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[481, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[481, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[481, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[481, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[481, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[481, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[481, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[481, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[481, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[481, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[481, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[481, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[481, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[481, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[481, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[481, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[481, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[481, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[481, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[481, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[481, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[481, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[481, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[481, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[481, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[481, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[481, "mne.io.Raw.set_montage"]], "time_as_index() (mne.io.raw method)": [[481, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[481, "mne.io.Raw.times"]], "to_data_frame() (mne.io.raw method)": [[481, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[482, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[482, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[482, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[482, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[482, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[482, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[482, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[482, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[482, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[482, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[482, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[482, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[482, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[482, "mne.io.RawArray.crop_by_annotations"]], "del_proj() (mne.io.rawarray method)": [[482, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[482, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[482, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[482, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[482, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[482, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[482, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[482, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[482, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[482, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[482, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[482, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[482, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[482, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[482, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[482, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[482, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[482, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[482, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[482, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[482, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_montage"]], "time_as_index() (mne.io.rawarray method)": [[482, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[482, "mne.io.RawArray.times"]], "to_data_frame() (mne.io.rawarray method)": [[482, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[483, "mne.io.anonymize_info"]], "read_mrk() (in module mne.io.kit)": [[484, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[485, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[486, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[487, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[488, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[489, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[490, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[491, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[492, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[493, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[494, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[495, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[496, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[497, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[498, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[499, "mne.io.read_raw_eximia"]], "read_raw_eyelink() (in module mne.io)": [[500, "mne.io.read_raw_eyelink"]], "read_raw_fieldtrip() (in module mne.io)": [[501, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[502, "mne.io.read_raw_fif"]], "read_raw_fil() (in module mne.io)": [[503, "mne.io.read_raw_fil"]], "read_raw_gdf() (in module mne.io)": [[504, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[505, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[506, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[507, "mne.io.read_raw_nedf"]], "read_raw_nicolet() (in module mne.io)": [[508, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[509, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[510, "mne.io.read_raw_nirx"]], "read_raw_nsx() (in module mne.io)": [[511, "mne.io.read_raw_nsx"]], "read_raw_persyst() (in module mne.io)": [[512, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[513, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[514, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[515, "mne.io.write_fiducials"]], "select_sources() (in module mne.label)": [[516, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[517, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[518, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[519, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[520, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[521, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[522, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[523, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[524, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[525, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[526, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[527, "mne.make_sphere_model"]], "match_channel_orders() (in module mne)": [[528, "mne.match_channel_orders"]], "merge_events() (in module mne)": [[529, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[530, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.__len__"]], "clear() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.get"]], "items() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[530, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[531, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[532, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[533, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[534, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[535, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[536, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[537, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[538, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[539, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[540, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[541, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[542, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[543, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[544, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[545, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[546, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[547, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[548, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[549, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[550, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[551, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[552, "mne.open_docs"]], "open_report() (in module mne)": [[553, "mne.open_report"]], "parse_config() (in module mne)": [[554, "mne.parse_config"]], "pick_channels() (in module mne)": [[555, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[556, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[557, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[558, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[559, "mne.pick_events"]], "pick_info() (in module mne)": [[560, "mne.pick_info"]], "pick_types() (in module mne)": [[561, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[562, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[563, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[563, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[563, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[563, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[563, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[564, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[564, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[564, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[565, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[565, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[565, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[565, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[565, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[565, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[565, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[565, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[566, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[567, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[568, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[569, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[570, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[571, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[572, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[573, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[574, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[575, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[576, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[577, "mne.preprocessing.compute_proj_eog"]], "compute_proj_hfc() (in module mne.preprocessing)": [[578, "mne.preprocessing.compute_proj_hfc"]], "corrmap() (in module mne.preprocessing)": [[579, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[580, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[581, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[582, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[583, "mne.preprocessing.equalize_bads"]], "calibration (class in mne.preprocessing.eyetracking)": [[584, "mne.preprocessing.eyetracking.Calibration"]], "__contains__() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.__contains__"]], "__getitem__() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.__getitem__"]], "__iter__() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.__iter__"]], "__len__() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.__len__"]], "clear() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.clear"]], "copy() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.copy"]], "fromkeys() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.fromkeys"]], "get() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.get"]], "items() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.items"]], "keys() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.keys"]], "plot() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.plot"]], "pop() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.pop"]], "popitem() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.popitem"]], "setdefault() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.setdefault"]], "update() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.update"]], "values() (mne.preprocessing.eyetracking.calibration method)": [[584, "mne.preprocessing.eyetracking.Calibration.values"]], "interpolate_blinks() (in module mne.preprocessing.eyetracking)": [[585, "mne.preprocessing.eyetracking.interpolate_blinks"]], "read_eyelink_calibration() (in module mne.preprocessing.eyetracking)": [[586, "mne.preprocessing.eyetracking.read_eyelink_calibration"]], "set_channel_types_eyetrack() (in module mne.preprocessing.eyetracking)": [[587, "mne.preprocessing.eyetracking.set_channel_types_eyetrack"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[588, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[589, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[590, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[591, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[592, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[593, "mne.preprocessing.ica_find_eog_events"]], "make_montage_volume() (in module mne.preprocessing.ieeg)": [[594, "mne.preprocessing.ieeg.make_montage_volume"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[595, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "warp_montage() (in module mne.preprocessing.ieeg)": [[596, "mne.preprocessing.ieeg.warp_montage"]], "infomax() (in module mne.preprocessing)": [[597, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[598, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[599, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[600, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[601, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[602, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[603, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[604, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[605, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[606, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[607, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[608, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[609, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[610, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[611, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[612, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[613, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[614, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[615, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[616, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[617, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[618, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[619, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[620, "mne.read_cov"]], "read_dipole() (in module mne)": [[621, "mne.read_dipole"]], "read_epochs() (in module mne)": [[622, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[623, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[624, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[625, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[626, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[627, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[628, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[629, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[630, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[631, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[632, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[633, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[634, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[635, "mne.read_lta"]], "read_morph_map() (in module mne)": [[636, "mne.read_morph_map"]], "read_proj() (in module mne)": [[637, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[638, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[639, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[640, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[641, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[642, "mne.read_surface"]], "read_talxfm() (in module mne)": [[643, "mne.read_talxfm"]], "read_trans() (in module mne)": [[644, "mne.read_trans"]], "read_tri() (in module mne)": [[645, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[646, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[647, "mne.rename_channels"]], "scale_bem() (in module mne)": [[648, "mne.scale_bem"]], "scale_labels() (in module mne)": [[649, "mne.scale_labels"]], "scale_mri() (in module mne)": [[650, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[651, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[652, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[653, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[654, "mne.set_cache_dir"]], "set_config() (in module mne)": [[655, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[656, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[657, "mne.set_log_file"]], "set_log_level() (in module mne)": [[658, "mne.set_log_level"]], "set_memmap_min_size() (in module mne)": [[659, "mne.set_memmap_min_size"]], "setup_source_space() (in module mne)": [[660, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[661, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[662, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[662, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[662, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[662, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[662, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[662, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[662, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[663, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[664, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[665, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[666, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[667, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[668, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[669, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[670, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[671, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[672, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[673, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[674, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[675, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[676, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[677, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[678, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[679, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[680, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[681, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[682, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[683, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[684, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[685, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[686, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[687, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[688, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[689, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[690, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[691, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[692, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[693, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[694, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[695, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[696, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[697, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[698, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[699, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[700, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[701, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[702, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[703, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[704, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[705, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[706, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[707, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[708, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[709, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[710, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[711, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[712, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[712, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[712, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[712, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[712, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[712, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[712, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[713, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[713, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[713, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[713, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[713, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[713, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[713, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[713, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[713, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[713, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[713, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[713, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[714, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[714, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[714, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[714, "mne.time_frequency.EpochsSpectrum.units"]], "epochstfr (class in mne.time_frequency)": [[715, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[715, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[715, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[715, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[715, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[715, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[715, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[715, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[716, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[716, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[716, "mne.time_frequency.Spectrum.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[717, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[718, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[719, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[720, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[721, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[722, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[723, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[724, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[725, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[726, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[727, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[728, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[729, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[730, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[731, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[732, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[733, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[734, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[735, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[736, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[737, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[738, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[739, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[740, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[741, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[742, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[743, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[744, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[745, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[746, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[747, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[747, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[747, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[747, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[748, "mne.transforms.apply_volume_registration"]], "apply_volume_registration_points() (in module mne.transforms)": [[749, "mne.transforms.apply_volume_registration_points"]], "compute_volume_registration() (in module mne.transforms)": [[750, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[751, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[752, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[753, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[754, "mne.use_coil_def"]], "use_log_level (class in mne)": [[755, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[756, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[757, "mne.utils.warn"]], "verbose() (in module mne)": [[758, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[759, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[760, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[760, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[760, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[760, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[760, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[760, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[760, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[760, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[760, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[760, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[760, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[760, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[760, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[760, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[760, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[760, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[760, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[760, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[760, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[760, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[760, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[760, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[760, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[760, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[760, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[760, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[760, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[760, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[760, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[760, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[760, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[760, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[760, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[760, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[760, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[760, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[760, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[760, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[760, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[760, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[760, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[760, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[760, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[760, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[760, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[760, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[760, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[760, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[760, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[760, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[761, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[761, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[761, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[761, "mne.viz.ClickableImage.to_layout"]], "figure3d (class in mne.viz)": [[762, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[762, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[763, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[764, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[765, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[766, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[767, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[768, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[769, "mne.viz.create_3d_figure"]], "get_3d_backend() (in module mne.viz)": [[770, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[771, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[772, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[773, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[774, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[775, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[776, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[777, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[778, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[779, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[780, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[781, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[782, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[783, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[784, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[785, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[786, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[787, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[788, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[789, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[790, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[791, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[792, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[793, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[794, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[795, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[796, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[797, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[798, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[799, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[800, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[801, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[802, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[803, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[804, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[805, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[806, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[807, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[808, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[809, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[810, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[811, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[812, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[813, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[814, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[815, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[816, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[817, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[818, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[819, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[820, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[821, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[822, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[823, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[824, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[825, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[826, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[827, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[828, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[829, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[830, "mne.viz.snapshot_brain_montage"]], "use_3d_backend() (in module mne.viz)": [[831, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[832, "mne.viz.use_browser_backend"]], "what() (in module mne)": [[833, "mne.what"]], "write_bem_solution() (in module mne)": [[834, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[835, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[836, "mne.write_cov"]], "write_events() (in module mne)": [[837, "mne.write_events"]], "write_evokeds() (in module mne)": [[838, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[839, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[840, "mne.write_head_bem"]], "write_label() (in module mne)": [[841, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[842, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[843, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[844, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[845, "mne.write_surface"]], "write_trans() (in module mne)": [[846, "mne.write_trans"]], "bem": [[847, "term-BEM"]], "dc": [[847, "term-DC"]], "dics": [[847, "term-DICS"]], "ecd": [[847, "term-ECD"]], "freesurfer lut": [[847, "term-FreeSurfer-LUT"]], "gfp": [[847, "term-GFP"]], "hed": [[847, "term-HED"]], "hpi": [[847, "term-HPI"]], "lcmv": [[847, "term-LCMV"]], "lcmv beamformer": [[847, "term-LCMV-beamformer"]], "lut": [[847, "term-LUT"]], "mne": [[847, "term-MNE"], [882, "module-mne"]], "opm": [[847, "term-OPM"]], "ras": [[847, "term-RAS"]], "roi": [[847, "term-ROI"]], "squid": [[847, "term-SQUID"]], "ssp": [[847, "term-SSP"]], "stc": [[847, "term-STC"]], "anatomical landmark": [[847, "term-anatomical-landmark"]], "annotations": [[847, "term-annotations"]], "beamformer": [[847, "term-beamformer"]], "boundary element method": [[847, "term-boundary-element-method"]], "boundary element model": [[847, "term-boundary-element-model"]], "chpi": [[847, "term-cHPI"]], "channels": [[847, "term-channels"]], "dspm": [[847, "term-dSPM"]], "data channels": [[847, "term-data-channels"]], "digitization": [[847, "term-digitization"]], "dipole": [[847, "term-dipole"]], "direct current": [[847, "term-direct-current"]], "dynamic imaging of coherent sources": [[847, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[847, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[847, "term-eLORETA"]], "epochs": [[847, "term-epochs"]], "equivalent current dipole": [[847, "term-equivalent-current-dipole"]], "events": [[847, "term-events"]], "evoked": [[847, "term-evoked"]], "fiducial": [[847, "term-fiducial"]], "fiducial point": [[847, "term-fiducial-point"]], "first_samp": [[847, "term-first_samp"]], "forward": [[847, "term-forward"]], "forward solution": [[847, "term-forward-solution"]], "global field power": [[847, "term-global-field-power"]], "head position indicator": [[847, "term-head-position-indicator"]], "hierarchical event descriptors": [[847, "term-hierarchical-event-descriptors"]], "info": [[847, "term-info"]], "inverse": [[847, "term-inverse"]], "inverse operator": [[847, "term-inverse-operator"]], "label": [[847, "term-label"]], "last_samp": [[847, "term-last_samp"]], "layout": [[847, "term-layout"]], "maximum intensity projection": [[847, "term-maximum-intensity-projection"]], "measurement info": [[847, "term-measurement-info"]], "minimum-norm estimate": [[847, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[847, "term-minimum-norm-estimation"]], "montage": [[847, "term-montage"]], "morphing": [[847, "term-morphing"]], "noise covariance": [[847, "term-noise-covariance"]], "optically pumped magnetometer": [[847, "term-optically-pumped-magnetometer"]], "path-like": [[847, "term-path-like"]], "pick": [[847, "term-pick"]], "projector": [[847, "term-projector"]], "raw": [[847, "term-raw"]], "region of interest": [[847, "term-region-of-interest"]], "sloreta": [[847, "term-sLORETA"]], "selection": [[847, "term-selection"]], "source estimate": [[847, "term-source-estimate"]], "source space": [[847, "term-source-space"]], "source time course": [[847, "term-source-time-course"]], "stim channel": [[847, "term-stim-channel"]], "superconducting quantum interference device": [[847, "term-superconducting-quantum-interference-device"]], "template montage": [[847, "term-template-montage"]], "tfr": [[847, "term-tfr"]], "trans": [[847, "term-trans"]], "trigger channel": [[847, "term-trigger-channel"]], "whitening": [[847, "term-whitening"]], "mne.beamformer": [[860, "module-mne.beamformer"]], "mne.dipole": [[860, "module-mne.dipole"]], "mne.inverse_sparse": [[860, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[860, "module-mne.minimum_norm"]], "mne.cuda": [[861, "module-mne.cuda"]], "mne.utils": [[861, "module-mne.utils"]], "mne.channels": [[881, "module-mne.channels"]], "mne.chpi": [[881, "module-mne.chpi"]], "mne.filter": [[881, "module-mne.filter"]], "mne.preprocessing": [[881, "module-mne.preprocessing"]], "mne.preprocessing.eyetracking": [[881, "module-mne.preprocessing.eyetracking"]], "mne.preprocessing.ieeg": [[881, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[881, "module-mne.preprocessing.nirs"]], "mne.transforms": [[881, "module-mne.transforms"]], "mne.io": [[883, "module-mne.io"]], "mne.io.kit": [[883, "module-mne.io.kit"]], "mne.baseline": [[886, "module-mne.baseline"]], "mne.simulation": [[887, "module-mne.simulation"]], "mne.simulation.metrics": [[887, "module-mne.simulation.metrics"]], "mne.stats": [[889, "module-mne.stats"]], "mne.time_frequency": [[890, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[890, "module-mne.time_frequency.tfr"]], "mne.viz": [[891, "module-mne.viz"]]}})