Search.setIndex({"docnames": ["api/connectivity", "api/covariance", "api/creating_from_arrays", "api/datasets", "api/decoding", "api/events", "api/export", "api/file_io", "api/forward", "api/inverse", "api/logging", "api/most_used_classes", "api/mri", "api/preprocessing", "api/python_reference", "api/reading_raw_data", "api/realtime", "api/report", "api/sensor_space", "api/simulation", "api/source_space", "api/statistics", "api/time_frequency", "api/visualization", "auto_examples/connectivity/index", "auto_examples/connectivity/sg_execution_times", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/kernel_phantom", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/trap_music", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/contralateral_referencing", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/sg_execution_times", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/eyetracking_plot_heatmap", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/95_phantom_KIT", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/70_reading_eyetracking_data", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/80_opm_processing", "auto_tutorials/preprocessing/90_eyetracking_data", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "auto_tutorials/visualization/10_publication_figure", "auto_tutorials/visualization/20_ui_events", "auto_tutorials/visualization/index", "auto_tutorials/visualization/sg_execution_times", "bibliography", "changes/v0.1", "changes/v0.10", "changes/v0.11", "changes/v0.12", "changes/v0.13", "changes/v0.14", "changes/v0.15", "changes/v0.16", "changes/v0.17", "changes/v0.18", "changes/v0.19", "changes/v0.2", "changes/v0.20", "changes/v0.21", "changes/v0.22", "changes/v0.23", "changes/v0.24", "changes/v0.3", "changes/v0.4", "changes/v0.5", "changes/v0.6", "changes/v0.7", "changes/v0.8", "changes/v0.9", "changes/v1.0", "changes/v1.1", "changes/v1.2", "changes/v1.3", "changes/v1.4", "changes/v1.5", "changes/v1.6", "development/contributing", "development/governance", "development/index", "development/roadmap", "development/whats_new", "documentation/cite", "documentation/cited", "documentation/cookbook", "documentation/datasets", "documentation/design_philosophy", "documentation/glossary", "documentation/implementation", "documentation/index", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.beamformer.trap_music", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.channels.unify_bad_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.count_annotations", "generated/mne.count_events", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.eyelink.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.phantom_kernel.data_path", "generated/mne.datasets.phantom_kit.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.ucl_opm_auditory.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.get_channel_type_constants", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_eyelink", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_fil", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_neuralynx", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_nsx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.io.write_info", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.match_channel_orders", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.compute_proj_hfc", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.eyetracking.Calibration", "generated/mne.preprocessing.eyetracking.interpolate_blinks", "generated/mne.preprocessing.eyetracking.read_eyelink_calibration", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.make_montage_volume", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.ieeg.warp_montage", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.set_memmap_min_size", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsSpectrumArray", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.SpectrumArray", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.apply_volume_registration_points", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.EvokedField", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.eyetracking.plot_gaze", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.ui_events.ColormapRange", "generated/mne.viz.ui_events.Contours", "generated/mne.viz.ui_events.FigureClosing", "generated/mne.viz.ui_events.PlaybackSpeed", "generated/mne.viz.ui_events.TimeChange", "generated/mne.viz.ui_events.UIEvent", "generated/mne.viz.ui_events.VertexSelect", "generated/mne.viz.ui_events.disable_ui_events", "generated/mne.viz.ui_events.link", "generated/mne.viz.ui_events.publish", "generated/mne.viz.ui_events.subscribe", "generated/mne.viz.ui_events.unlink", "generated/mne.viz.ui_events.unsubscribe", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "help/faq", "help/index", "help/learn_python", "help/migrating", "index", "install/advanced", "install/check_installation", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "martinos", "mne_cpp", "old_versions/index", "overview/people", "sg_api_usage", "sg_execution_times"], "filenames": ["api/connectivity.rst", "api/covariance.rst", "api/creating_from_arrays.rst", "api/datasets.rst", "api/decoding.rst", "api/events.rst", "api/export.rst", "api/file_io.rst", "api/forward.rst", "api/inverse.rst", "api/logging.rst", "api/most_used_classes.rst", "api/mri.rst", "api/preprocessing.rst", "api/python_reference.rst", "api/reading_raw_data.rst", "api/realtime.rst", "api/report.rst", "api/sensor_space.rst", "api/simulation.rst", "api/source_space.rst", "api/statistics.rst", "api/time_frequency.rst", "api/visualization.rst", "auto_examples/connectivity/index.rst", "auto_examples/connectivity/sg_execution_times.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/kernel_phantom.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/trap_music.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/contralateral_referencing.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/sg_execution_times.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/eyetracking_plot_heatmap.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/95_phantom_KIT.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/70_reading_eyetracking_data.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/80_opm_processing.rst", "auto_tutorials/preprocessing/90_eyetracking_data.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "auto_tutorials/visualization/10_publication_figure.rst", "auto_tutorials/visualization/20_ui_events.rst", "auto_tutorials/visualization/index.rst", "auto_tutorials/visualization/sg_execution_times.rst", "bibliography.rst", "changes/v0.1.rst", "changes/v0.10.rst", "changes/v0.11.rst", "changes/v0.12.rst", "changes/v0.13.rst", "changes/v0.14.rst", "changes/v0.15.rst", "changes/v0.16.rst", "changes/v0.17.rst", "changes/v0.18.rst", "changes/v0.19.rst", "changes/v0.2.rst", "changes/v0.20.rst", "changes/v0.21.rst", "changes/v0.22.rst", "changes/v0.23.rst", "changes/v0.24.rst", "changes/v0.3.rst", "changes/v0.4.rst", "changes/v0.5.rst", "changes/v0.6.rst", "changes/v0.7.rst", "changes/v0.8.rst", "changes/v0.9.rst", "changes/v1.0.rst", "changes/v1.1.rst", "changes/v1.2.rst", "changes/v1.3.rst", "changes/v1.4.rst", "changes/v1.5.rst", "changes/v1.6.rst", "development/contributing.rst", "development/governance.rst", "development/index.rst", "development/roadmap.rst", "development/whats_new.rst", "documentation/cite.rst", "documentation/cited.rst", "documentation/cookbook.rst", "documentation/datasets.rst", "documentation/design_philosophy.rst", "documentation/glossary.rst", "documentation/implementation.rst", "documentation/index.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.beamformer.trap_music.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.channels.unify_bad_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.count_annotations.rst", "generated/mne.count_events.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.eyelink.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.phantom_kernel.data_path.rst", "generated/mne.datasets.phantom_kit.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.ucl_opm_auditory.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.get_channel_type_constants.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_eyelink.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_fil.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_neuralynx.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_nsx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.io.write_info.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.match_channel_orders.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.compute_proj_hfc.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.eyetracking.Calibration.rst", "generated/mne.preprocessing.eyetracking.interpolate_blinks.rst", "generated/mne.preprocessing.eyetracking.read_eyelink_calibration.rst", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.make_montage_volume.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.ieeg.warp_montage.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.set_memmap_min_size.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsSpectrumArray.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.SpectrumArray.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.apply_volume_registration_points.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.EvokedField.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.eyetracking.plot_gaze.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.ui_events.ColormapRange.rst", "generated/mne.viz.ui_events.Contours.rst", "generated/mne.viz.ui_events.FigureClosing.rst", "generated/mne.viz.ui_events.PlaybackSpeed.rst", "generated/mne.viz.ui_events.TimeChange.rst", "generated/mne.viz.ui_events.UIEvent.rst", "generated/mne.viz.ui_events.VertexSelect.rst", "generated/mne.viz.ui_events.disable_ui_events.rst", "generated/mne.viz.ui_events.link.rst", "generated/mne.viz.ui_events.publish.rst", "generated/mne.viz.ui_events.subscribe.rst", "generated/mne.viz.ui_events.unlink.rst", "generated/mne.viz.ui_events.unsubscribe.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "help/faq.rst", "help/index.rst", "help/learn_python.rst", "help/migrating.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "martinos.rst", "mne_cpp.rst", "old_versions/index.rst", "overview/people.rst", "sg_api_usage.rst", "sg_execution_times.rst"], "titles": ["Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Inverse Solutions", "Logging and Configuration", "Most-used classes", "MRI Processing", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "Connectivity Analysis Examples", "Computation times", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Kernel OPM phantom data", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Compute Trap-Music on evoked data", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Using contralateral referencing for EEG", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Computation times", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Plotting eye-tracking heatmaps in MNE-Python", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Plot single trial activity, grouped by ROI and sorted by RT", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "KIT phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Importing Data from Eyetracking devices", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing optically pumped magnetometer (OPM) MEG data", "Working with eye tracker data in MNE-Python", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "Make figures more publication ready", "Using the event system to link figures", "Visualization tutorials", "Computation times", "General bibliography", "Version 0.1 (2011-09-23)", "Version 0.10 (2015-10-26)", "Version 0.11 (2015-12-24)", "Version 0.12 (2016-05-10)", "Version 0.13 (2016-09-27)", "Version 0.14 (2017-03-24)", "Version 0.15 (2017-10-20)", "Version 0.16 (2018-05-01)", "Version 0.17 (2018-11-19)", "Version 0.18 (2019-05-19)", "Version 0.19 (2019-09-24)", "Version 0.2 (2011-11-08)", "Version 0.20 (2020-03-27)", "Version 0.21 (2020-09-21)", "Version 0.22.0 (2020-12-17)", "Version 0.23.0 (2021-04-27)", "Version 0.24.0 (2021-11-03)", "Version 0.3 (2012-03-23)", "Version 0.4 (2012-08-24)", "Version 0.5 (2012-12-27)", "Version 0.6 (2013-06-15)", "Version 0.7 (2013-11-26)", "Version 0.8 (2014-06-25)", "Version 0.9 (2015-05-22)", "Version 1.0.0 (2022-03-21)", "Version 1.1.0 (2022-08-03)", "Version 1.2.0 (2022-10-11)", "Version 1.3.0 (2022-12-21)", "Version 1.4.0 (2023-05-10)", "Version 1.5.0 (2023-08-14)", "Version 1.6.1 (2024-01-16)", "Contributing guide", "Project Governance", "MNE-Python Development", "Roadmap", "What\u2019s new", "How to cite MNE-Python", "Papers citing MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "Glossary", "Algorithms and other implementation details", "Documentation overview", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.beamformer.trap_music", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.channels.unify_bad_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.count_annotations", "mne.count_events", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.eyelink.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.phantom_kernel.data_path", "mne.datasets.phantom_kit.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.ucl_opm_auditory.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.get_channel_type_constants", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_eyelink", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_fil", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_neuralynx", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_nsx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.io.write_info", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.match_channel_orders", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.compute_proj_hfc", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.eyetracking.Calibration", "mne.preprocessing.eyetracking.interpolate_blinks", "mne.preprocessing.eyetracking.read_eyelink_calibration", "mne.preprocessing.eyetracking.set_channel_types_eyetrack", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.make_montage_volume", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.ieeg.warp_montage", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.set_memmap_min_size", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsSpectrumArray", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.SpectrumArray", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.apply_volume_registration_points", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.EvokedField", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.eyetracking.plot_gaze", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.ui_events.ColormapRange", "mne.viz.ui_events.Contours", "mne.viz.ui_events.FigureClosing", "mne.viz.ui_events.PlaybackSpeed", "mne.viz.ui_events.TimeChange", "mne.viz.ui_events.UIEvent", "mne.viz.ui_events.VertexSelect", "mne.viz.ui_events.disable_ui_events", "mne.viz.ui_events.link", "mne.viz.ui_events.publish", "mne.viz.ui_events.subscribe", "mne.viz.ui_events.unlink", "mne.viz.ui_events.unsubscribe", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Frequently Asked Questions (FAQ)", "Getting help", "Getting started with Python", "Migrating from other analysis software", "MNE", "Advanced setup", "Testing your installation", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Martinos Center setup", "MNE with CPP", "Archived documentation for old versions", "Current steering council and institutional partners", "Unused API Entries", "Computation times"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956], "8": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956], "As": [0, 30, 64, 69, 97, 114, 121, 139, 149, 162, 166, 169, 171, 175, 176, 177, 183, 186, 192, 193, 194, 195, 196, 198, 201, 206, 215, 218, 222, 223, 226, 227, 228, 229, 231, 232, 234, 235, 237, 240, 243, 244, 245, 246, 250, 257, 259, 265, 268, 270, 300, 301, 310, 312, 316, 320, 491, 512, 568, 581, 651, 770, 779, 834, 860], "0": [0, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 277, 309, 310, 312, 313, 316, 317, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 364, 365, 367, 372, 373, 374, 375, 380, 381, 382, 385, 389, 392, 394, 396, 398, 403, 408, 410, 411, 412, 413, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 437, 438, 441, 450, 458, 475, 476, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 507, 508, 510, 512, 515, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 533, 536, 539, 540, 541, 542, 545, 547, 548, 549, 550, 551, 559, 560, 561, 562, 566, 567, 568, 570, 572, 586, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 609, 610, 611, 614, 615, 618, 619, 620, 621, 623, 627, 628, 629, 630, 635, 636, 637, 638, 639, 641, 644, 646, 647, 648, 649, 651, 653, 654, 655, 657, 660, 661, 662, 663, 664, 666, 669, 671, 673, 675, 676, 679, 680, 685, 693, 695, 696, 697, 701, 703, 705, 706, 714, 717, 719, 720, 722, 725, 728, 730, 732, 733, 734, 737, 738, 740, 742, 743, 748, 749, 750, 753, 762, 763, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 798, 799, 802, 803, 804, 805, 808, 810, 812, 813, 814, 815, 816, 817, 818, 819, 822, 823, 824, 829, 834, 835, 836, 838, 839, 840, 844, 845, 846, 852, 853, 854, 855, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 907, 925, 927, 931, 932, 934, 936, 941, 942, 956], "24": [0, 29, 36, 37, 39, 45, 47, 52, 54, 60, 61, 68, 71, 72, 73, 82, 98, 107, 111, 120, 130, 133, 135, 136, 141, 142, 151, 156, 170, 195, 197, 200, 207, 209, 212, 216, 218, 223, 236, 237, 238, 242, 252, 255, 256, 257, 259, 260, 264, 265, 270, 277, 293, 301, 313, 316, 320, 325, 329, 331, 332, 333, 334, 336, 337, 341, 344, 364, 412, 418, 430, 432, 460, 491, 503, 513, 514, 515, 516, 526, 547, 550, 551, 559, 566, 575, 581, 595, 603, 636, 639, 779, 783, 784, 786, 787, 788, 789, 790, 822, 824, 831, 834, 846, 854, 859, 866, 883, 889, 890, 898, 901, 905, 927, 956], "function": [0, 3, 4, 6, 9, 13, 14, 16, 18, 21, 22, 24, 30, 34, 42, 45, 47, 53, 57, 62, 70, 71, 80, 81, 82, 83, 85, 103, 120, 121, 122, 128, 130, 139, 140, 141, 142, 143, 148, 149, 159, 161, 162, 166, 167, 170, 172, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 206, 208, 209, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 250, 251, 252, 257, 259, 260, 268, 269, 270, 274, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 314, 316, 317, 318, 319, 320, 321, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 358, 364, 365, 366, 371, 373, 375, 380, 385, 386, 388, 389, 392, 397, 398, 400, 408, 409, 410, 411, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 441, 443, 445, 457, 460, 483, 486, 488, 489, 490, 492, 493, 500, 502, 504, 507, 508, 509, 510, 512, 514, 515, 516, 517, 518, 522, 523, 524, 526, 540, 541, 543, 544, 548, 549, 550, 551, 557, 559, 560, 562, 563, 566, 568, 571, 572, 574, 576, 581, 582, 584, 585, 588, 590, 598, 602, 603, 606, 609, 610, 611, 612, 613, 614, 615, 617, 618, 625, 631, 633, 635, 636, 638, 639, 640, 645, 646, 647, 648, 649, 651, 653, 654, 656, 657, 659, 660, 663, 669, 671, 672, 673, 674, 675, 677, 678, 685, 688, 689, 692, 695, 696, 697, 698, 699, 700, 701, 703, 706, 711, 719, 722, 725, 728, 733, 734, 736, 737, 738, 747, 748, 750, 751, 768, 770, 771, 772, 773, 774, 775, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 793, 796, 798, 804, 805, 814, 816, 817, 824, 828, 829, 830, 831, 832, 834, 846, 849, 851, 852, 853, 860, 862, 866, 868, 869, 874, 875, 876, 879, 882, 887, 888, 890, 891, 892, 894, 896, 898, 899, 900, 901, 905, 916, 917, 919, 939, 941, 946, 949, 950, 956], "ha": [0, 16, 24, 26, 29, 31, 35, 36, 53, 58, 68, 71, 75, 80, 97, 98, 101, 105, 109, 110, 120, 121, 130, 136, 141, 154, 162, 166, 168, 170, 171, 172, 175, 176, 177, 181, 182, 183, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 211, 215, 216, 217, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 250, 252, 255, 256, 260, 268, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 322, 323, 324, 325, 328, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 355, 356, 357, 358, 364, 365, 370, 371, 376, 423, 427, 428, 429, 439, 440, 441, 447, 448, 449, 452, 453, 454, 456, 460, 461, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 489, 490, 504, 518, 519, 521, 522, 524, 526, 527, 530, 545, 547, 548, 550, 551, 552, 559, 560, 572, 581, 599, 602, 603, 604, 606, 614, 619, 620, 635, 636, 637, 639, 651, 656, 667, 671, 678, 701, 702, 720, 723, 765, 766, 771, 772, 774, 775, 784, 785, 786, 787, 788, 789, 790, 793, 802, 804, 812, 813, 814, 816, 817, 821, 846, 860, 868, 870, 872, 873, 874, 875, 876, 879, 881, 883, 888, 889, 890, 891, 892, 894, 896, 898, 907, 908, 909, 910, 911, 913, 936, 937, 941, 946, 948, 949, 953], "been": [0, 26, 29, 35, 36, 56, 57, 58, 60, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 98, 101, 105, 106, 110, 112, 113, 121, 143, 146, 147, 166, 168, 171, 175, 176, 177, 185, 186, 188, 192, 193, 195, 197, 198, 201, 202, 204, 205, 207, 208, 209, 215, 218, 219, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 268, 273, 274, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 312, 317, 320, 322, 323, 326, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 356, 357, 358, 364, 365, 371, 423, 427, 428, 439, 440, 441, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 490, 504, 526, 527, 545, 547, 548, 550, 551, 552, 559, 560, 572, 581, 604, 614, 635, 636, 637, 648, 671, 678, 701, 784, 785, 786, 787, 788, 789, 790, 814, 817, 846, 860, 866, 870, 872, 874, 876, 890, 936, 952], "move": [0, 16, 23, 24, 53, 87, 102, 106, 107, 143, 166, 171, 182, 187, 203, 219, 229, 232, 233, 236, 239, 263, 270, 274, 282, 294, 298, 310, 320, 323, 328, 331, 332, 333, 334, 340, 346, 347, 434, 483, 490, 518, 550, 551, 635, 636, 640, 668, 784, 786, 787, 789, 790, 822, 823, 824, 867, 868, 872, 875, 879, 888, 891, 896, 898, 900, 936], "separ": [0, 26, 36, 38, 42, 47, 58, 59, 71, 73, 97, 101, 107, 108, 109, 121, 134, 146, 151, 161, 166, 167, 168, 171, 172, 175, 176, 177, 181, 182, 186, 187, 188, 191, 194, 201, 210, 216, 218, 219, 223, 226, 229, 231, 232, 233, 234, 236, 241, 242, 243, 244, 245, 263, 265, 268, 277, 284, 285, 286, 287, 293, 294, 309, 312, 316, 317, 318, 319, 320, 323, 325, 326, 331, 332, 333, 334, 336, 340, 341, 364, 365, 392, 414, 416, 417, 420, 424, 425, 426, 431, 441, 456, 463, 483, 490, 504, 516, 545, 550, 551, 567, 570, 575, 578, 594, 596, 636, 646, 647, 648, 649, 653, 660, 669, 671, 685, 695, 702, 733, 739, 740, 741, 742, 743, 744, 745, 746, 771, 772, 774, 775, 786, 787, 788, 789, 790, 791, 792, 793, 816, 817, 824, 834, 836, 840, 859, 860, 866, 867, 868, 871, 875, 876, 878, 883, 888, 889, 890, 936, 941, 946, 956], "packag": [0, 24, 53, 164, 172, 186, 191, 192, 216, 223, 227, 228, 229, 232, 252, 255, 286, 287, 294, 302, 306, 309, 317, 318, 319, 323, 325, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 442, 443, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 593, 594, 597, 598, 609, 610, 619, 620, 641, 648, 649, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 836, 868, 871, 890, 940, 941, 942, 943, 945, 946, 947, 948, 949, 951], "mne_connect": [0, 24, 53, 73, 172, 858], "mne": [3, 4, 5, 6, 8, 9, 10, 13, 14, 15, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 188, 189, 190, 193, 194, 195, 196, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 228, 230, 231, 234, 235, 236, 238, 239, 241, 242, 244, 245, 246, 247, 251, 252, 253, 254, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 316, 317, 318, 319, 321, 322, 937, 939, 941, 942, 943, 947, 951, 954, 955, 956], "fetch": [3, 30, 163, 294, 302, 309, 317, 450, 455, 456, 457, 458, 459, 460, 465, 475, 476], "remot": [3, 30, 219, 240, 309, 312, 323, 457, 902, 941, 948], "see": [3, 12, 14, 21, 26, 30, 33, 34, 36, 45, 47, 48, 52, 53, 58, 60, 61, 65, 69, 70, 89, 90, 97, 98, 100, 102, 106, 108, 109, 110, 128, 140, 142, 146, 147, 148, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 257, 258, 260, 263, 268, 270, 273, 279, 282, 284, 290, 294, 297, 304, 307, 308, 309, 310, 312, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 493, 494, 496, 499, 500, 502, 504, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 630, 632, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 688, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 729, 732, 733, 735, 736, 737, 738, 747, 748, 749, 750, 752, 754, 755, 756, 757, 758, 759, 760, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 804, 805, 808, 809, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 829, 833, 834, 836, 840, 843, 851, 852, 853, 860, 861, 864, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 878, 879, 880, 881, 883, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 905, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 941, 942, 948, 949, 954], "overview": [3, 181, 182, 191, 196, 197, 199, 200, 206, 228, 232, 234, 241, 242, 255, 269, 319, 331, 332, 333, 334, 336, 342, 422, 474, 524, 550, 551, 572, 596, 602, 603, 617, 633, 636, 653, 654, 661, 784, 816, 860, 866, 869, 883, 889, 905, 936, 956], "more": [3, 21, 26, 30, 44, 45, 54, 60, 68, 69, 70, 75, 80, 84, 97, 98, 100, 102, 107, 108, 109, 110, 112, 121, 131, 134, 137, 140, 141, 148, 149, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 204, 206, 207, 210, 211, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 252, 255, 256, 257, 258, 260, 263, 265, 269, 270, 275, 276, 281, 282, 284, 285, 286, 287, 290, 291, 292, 293, 294, 296, 301, 302, 303, 304, 305, 306, 309, 310, 312, 316, 317, 318, 319, 320, 321, 325, 326, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 356, 364, 365, 373, 374, 397, 423, 427, 429, 434, 436, 441, 475, 476, 482, 483, 485, 487, 488, 490, 491, 495, 500, 502, 513, 514, 516, 517, 518, 519, 521, 522, 524, 525, 533, 542, 550, 551, 559, 568, 570, 576, 590, 594, 597, 603, 609, 610, 611, 619, 620, 635, 636, 638, 644, 646, 660, 667, 671, 680, 691, 693, 697, 698, 701, 711, 720, 722, 723, 725, 728, 736, 761, 765, 766, 771, 772, 773, 774, 775, 784, 786, 787, 788, 789, 790, 793, 796, 804, 813, 814, 815, 816, 817, 818, 831, 834, 836, 852, 853, 854, 855, 860, 864, 868, 871, 872, 874, 875, 879, 888, 891, 894, 896, 898, 899, 920, 921, 929, 936, 938, 940, 946, 948, 949, 956], "inform": [3, 30, 31, 35, 37, 47, 48, 52, 54, 55, 57, 60, 61, 64, 65, 66, 68, 69, 70, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 90, 95, 106, 110, 117, 119, 120, 121, 122, 128, 131, 134, 135, 137, 152, 157, 160, 161, 166, 167, 168, 169, 170, 172, 175, 176, 177, 182, 184, 185, 186, 188, 191, 192, 194, 196, 198, 201, 203, 205, 206, 207, 208, 215, 216, 217, 218, 219, 222, 223, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 245, 250, 251, 252, 255, 257, 260, 263, 265, 269, 270, 277, 281, 282, 283, 284, 288, 290, 291, 292, 293, 294, 298, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 351, 352, 364, 365, 366, 373, 374, 375, 377, 378, 379, 386, 387, 388, 392, 394, 395, 397, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 427, 429, 439, 440, 441, 443, 483, 485, 490, 491, 492, 502, 503, 507, 513, 514, 515, 516, 518, 519, 521, 522, 524, 527, 534, 535, 541, 545, 548, 549, 550, 551, 552, 556, 562, 571, 585, 587, 591, 594, 597, 598, 599, 604, 614, 632, 633, 635, 636, 646, 647, 650, 656, 659, 660, 667, 669, 671, 676, 677, 682, 684, 687, 696, 698, 699, 700, 718, 719, 725, 730, 732, 748, 749, 752, 771, 775, 781, 783, 784, 785, 786, 787, 788, 789, 790, 802, 813, 814, 815, 816, 817, 818, 823, 824, 829, 830, 834, 836, 849, 852, 856, 860, 861, 862, 864, 867, 871, 877, 878, 884, 888, 892, 898, 927, 937, 942, 945, 946, 949, 952, 956], "encod": [4, 35, 45, 169, 170, 176, 192, 194, 198, 215, 222, 223, 236, 237, 238, 273, 277, 282, 291, 304, 308, 312, 319, 320, 336, 415, 489, 559, 566, 574, 575, 576, 582, 689, 695, 934], "includ": [4, 30, 33, 54, 63, 67, 96, 97, 108, 123, 124, 126, 130, 131, 134, 137, 140, 141, 151, 158, 161, 163, 166, 168, 169, 170, 172, 175, 177, 178, 181, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 206, 208, 211, 215, 216, 217, 219, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 245, 246, 250, 255, 257, 258, 259, 265, 277, 280, 282, 283, 284, 290, 291, 292, 294, 298, 300, 301, 302, 303, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 324, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 363, 365, 378, 381, 382, 386, 395, 397, 423, 428, 429, 436, 439, 485, 490, 499, 504, 507, 511, 512, 521, 522, 524, 536, 537, 549, 550, 551, 553, 559, 562, 564, 566, 567, 568, 574, 579, 596, 598, 604, 606, 614, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 643, 644, 646, 647, 650, 652, 653, 654, 657, 659, 660, 663, 667, 670, 671, 677, 679, 682, 684, 686, 695, 697, 698, 701, 702, 703, 752, 769, 770, 779, 783, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 803, 815, 817, 818, 824, 830, 834, 860, 866, 867, 868, 869, 870, 872, 873, 880, 881, 885, 889, 890, 896, 926, 936, 938, 939, 941, 944, 945, 946, 948, 949, 950, 952], "machin": [4, 33, 44, 121, 122, 207, 223, 225, 227, 228, 277, 282, 285, 318, 336, 349, 423, 647, 660, 671, 956], "learn": [4, 34, 35, 42, 44, 45, 47, 97, 144, 169, 187, 188, 192, 223, 225, 227, 228, 232, 277, 281, 282, 284, 288, 290, 292, 297, 309, 317, 318, 423, 487, 489, 491, 492, 493, 494, 496, 497, 498, 500, 501, 636, 669, 936, 949, 956], "recept": [4, 43, 46, 53, 191, 224, 225, 277, 317, 336, 380, 396, 443, 489, 495, 523, 551, 898, 956], "field": [4, 29, 30, 31, 33, 43, 46, 48, 52, 53, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 96, 105, 106, 107, 117, 121, 136, 140, 144, 146, 148, 152, 155, 157, 168, 170, 175, 182, 184, 185, 188, 191, 192, 195, 202, 203, 204, 205, 208, 209, 215, 216, 218, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 243, 245, 246, 250, 252, 260, 274, 277, 279, 281, 282, 283, 284, 285, 287, 291, 292, 293, 294, 298, 300, 301, 306, 312, 316, 317, 319, 324, 328, 331, 332, 333, 334, 336, 364, 365, 380, 387, 396, 443, 489, 495, 515, 523, 526, 550, 551, 552, 563, 571, 594, 603, 604, 650, 651, 671, 679, 696, 700, 703, 728, 770, 815, 818, 834, 836, 853, 860, 867, 870, 871, 873, 875, 876, 878, 897, 898, 906, 936, 943, 956], "assist": [4, 217, 320, 941, 948], "model": [4, 14, 29, 31, 33, 37, 38, 39, 44, 48, 52, 57, 58, 62, 67, 68, 76, 82, 100, 128, 132, 133, 136, 140, 143, 148, 161, 167, 177, 181, 182, 185, 186, 187, 188, 190, 196, 197, 198, 201, 202, 208, 209, 210, 211, 212, 217, 218, 219, 223, 231, 232, 240, 252, 259, 274, 277, 279, 283, 284, 286, 290, 291, 293, 296, 301, 303, 304, 317, 319, 328, 329, 331, 333, 334, 335, 336, 339, 341, 342, 344, 345, 346, 347, 364, 365, 370, 372, 375, 410, 423, 429, 433, 442, 483, 487, 489, 490, 493, 495, 500, 501, 524, 526, 545, 550, 556, 592, 593, 597, 598, 599, 602, 603, 604, 605, 614, 633, 635, 645, 650, 656, 667, 681, 690, 692, 693, 709, 718, 732, 733, 741, 746, 770, 787, 790, 799, 828, 834, 852, 854, 876, 891, 904, 923, 936, 942, 943, 946, 948, 949, 956], "fit": [4, 13, 29, 30, 33, 34, 36, 37, 38, 39, 41, 42, 44, 47, 50, 66, 67, 71, 76, 85, 97, 98, 100, 101, 103, 105, 106, 107, 109, 114, 128, 138, 143, 151, 163, 167, 177, 178, 182, 184, 191, 192, 196, 198, 203, 205, 209, 210, 211, 212, 213, 214, 216, 219, 223, 227, 230, 231, 234, 235, 236, 237, 239, 259, 277, 282, 283, 284, 285, 287, 288, 290, 292, 293, 294, 296, 299, 300, 301, 304, 305, 306, 307, 308, 309, 317, 320, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 346, 367, 369, 373, 374, 380, 410, 411, 412, 413, 416, 420, 421, 422, 434, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 504, 512, 522, 526, 550, 551, 563, 594, 597, 603, 633, 635, 636, 637, 640, 643, 645, 646, 647, 651, 660, 661, 671, 701, 733, 748, 769, 784, 786, 787, 788, 789, 790, 799, 834, 853, 860, 864, 868, 870, 872, 875, 876, 879, 880, 881, 883, 886, 888, 890, 891, 892, 896, 898, 936, 939, 952, 956], "io": [5, 14, 15, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 52, 54, 55, 58, 59, 60, 68, 71, 72, 75, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 151, 155, 158, 159, 161, 163, 166, 167, 168, 170, 171, 172, 175, 177, 178, 182, 183, 184, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 203, 206, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 317, 318, 320, 323, 324, 325, 330, 331, 332, 333, 334, 336, 341, 348, 350, 363, 434, 456, 488, 516, 518, 521, 598, 636, 644, 648, 649, 650, 660, 671, 784, 788, 789, 790, 804, 834, 881, 936, 939, 941, 946, 955, 956], "fif": [5, 6, 27, 29, 31, 33, 36, 37, 39, 40, 41, 42, 44, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 91, 93, 95, 96, 98, 99, 100, 101, 103, 105, 106, 107, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 157, 158, 159, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 216, 217, 218, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 273, 274, 281, 282, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 300, 301, 302, 306, 307, 309, 312, 316, 317, 320, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 341, 344, 372, 380, 402, 434, 435, 436, 504, 513, 514, 515, 516, 533, 550, 551, 572, 576, 587, 594, 598, 617, 621, 636, 646, 660, 667, 671, 683, 689, 691, 692, 693, 694, 698, 701, 703, 709, 713, 716, 720, 723, 749, 752, 779, 821, 823, 834, 852, 922, 924, 925, 926, 927, 928, 929, 932, 933, 935, 949, 952, 956], "file": [5, 14, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 75, 82, 85, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 119, 120, 121, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 151, 155, 156, 158, 159, 161, 163, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 200, 203, 206, 207, 208, 209, 210, 211, 214, 215, 217, 218, 219, 221, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 246, 248, 249, 251, 252, 254, 257, 258, 259, 260, 262, 263, 265, 267, 269, 272, 273, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 317, 319, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 368, 371, 372, 375, 376, 377, 380, 381, 386, 388, 389, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 413, 426, 431, 432, 434, 435, 436, 442, 450, 455, 456, 457, 458, 464, 475, 476, 502, 504, 512, 513, 514, 515, 516, 524, 525, 531, 532, 533, 535, 536, 540, 542, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 594, 595, 597, 598, 609, 616, 617, 621, 625, 626, 635, 636, 646, 647, 648, 649, 658, 660, 667, 671, 681, 682, 683, 684, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 726, 727, 729, 733, 735, 736, 737, 749, 752, 761, 779, 782, 783, 784, 785, 786, 787, 788, 789, 790, 806, 807, 808, 819, 821, 823, 828, 834, 843, 852, 854, 889, 900, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 939, 941, 942, 948, 949, 952, 953, 956], "contain": [5, 30, 42, 44, 53, 57, 64, 67, 69, 79, 106, 114, 121, 128, 135, 139, 143, 155, 163, 166, 169, 170, 172, 175, 177, 181, 184, 188, 191, 192, 194, 195, 196, 197, 198, 201, 207, 209, 215, 216, 217, 218, 219, 229, 231, 232, 233, 234, 237, 238, 239, 240, 243, 244, 250, 252, 255, 268, 269, 270, 273, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 299, 300, 302, 303, 306, 307, 309, 316, 317, 318, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 351, 352, 356, 364, 365, 366, 371, 375, 376, 377, 380, 381, 382, 383, 386, 387, 388, 394, 403, 418, 423, 424, 425, 426, 427, 428, 429, 434, 435, 436, 437, 438, 439, 440, 441, 456, 460, 462, 463, 464, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 502, 504, 507, 510, 511, 512, 517, 524, 525, 526, 527, 531, 532, 533, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 550, 551, 558, 560, 561, 562, 563, 565, 567, 568, 569, 570, 571, 572, 575, 576, 577, 578, 579, 580, 581, 583, 584, 588, 589, 592, 594, 596, 597, 614, 622, 625, 626, 631, 635, 636, 637, 639, 641, 651, 652, 656, 660, 666, 667, 668, 670, 671, 675, 677, 683, 684, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 700, 701, 702, 706, 709, 712, 714, 715, 717, 723, 725, 727, 728, 732, 733, 739, 740, 741, 742, 743, 744, 745, 746, 747, 750, 752, 753, 761, 763, 769, 771, 772, 774, 775, 776, 779, 780, 784, 785, 786, 787, 788, 789, 790, 798, 801, 809, 813, 814, 816, 817, 826, 834, 845, 852, 853, 854, 855, 860, 863, 864, 867, 868, 869, 870, 872, 873, 875, 876, 877, 879, 885, 888, 891, 892, 893, 894, 895, 896, 898, 899, 900, 926, 929, 931, 932, 934, 936, 939, 942], "epoch": [5, 14, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 53, 58, 59, 60, 62, 71, 72, 75, 82, 85, 88, 96, 97, 98, 99, 100, 105, 106, 109, 110, 114, 117, 119, 120, 122, 123, 124, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 139, 140, 148, 150, 155, 156, 158, 161, 162, 167, 174, 176, 188, 193, 194, 195, 196, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 223, 226, 227, 230, 233, 234, 237, 239, 240, 244, 245, 251, 252, 256, 257, 258, 259, 268, 269, 270, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 317, 318, 319, 323, 324, 325, 326, 330, 332, 333, 334, 336, 337, 341, 342, 348, 358, 359, 362, 381, 382, 385, 409, 422, 423, 424, 426, 427, 428, 430, 465, 483, 485, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 508, 509, 512, 513, 524, 542, 547, 550, 551, 557, 589, 594, 595, 601, 602, 603, 604, 605, 606, 607, 609, 610, 614, 617, 619, 620, 631, 633, 635, 636, 637, 638, 644, 645, 648, 649, 653, 654, 655, 659, 663, 670, 671, 686, 694, 695, 696, 697, 698, 705, 709, 725, 728, 738, 748, 769, 770, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 804, 813, 814, 815, 816, 817, 818, 834, 845, 860, 865, 866, 867, 868, 879, 880, 881, 883, 887, 889, 890, 897, 936, 939, 955, 956], "tool": [5, 14, 22, 30, 53, 80, 81, 97, 106, 116, 166, 177, 181, 184, 187, 197, 217, 219, 226, 227, 229, 232, 234, 238, 256, 265, 270, 277, 290, 299, 303, 310, 312, 316, 320, 321, 338, 339, 342, 345, 346, 347, 550, 551, 592, 618, 936, 937, 945, 946, 948, 950, 952, 954], "work": [5, 53, 57, 95, 97, 102, 105, 109, 113, 149, 159, 163, 164, 165, 166, 170, 173, 174, 175, 176, 177, 181, 182, 186, 187, 192, 193, 194, 195, 199, 200, 201, 203, 204, 207, 210, 215, 217, 220, 221, 223, 226, 228, 230, 231, 232, 233, 234, 237, 238, 241, 242, 243, 245, 246, 248, 252, 257, 260, 263, 265, 268, 269, 270, 274, 277, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 302, 304, 306, 307, 309, 310, 312, 314, 317, 318, 319, 320, 321, 322, 325, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 380, 381, 384, 386, 391, 394, 396, 400, 406, 416, 422, 424, 428, 429, 430, 432, 435, 441, 452, 456, 459, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 506, 510, 512, 517, 518, 523, 524, 535, 545, 547, 548, 550, 551, 557, 561, 564, 568, 570, 590, 592, 593, 596, 598, 601, 602, 603, 604, 605, 606, 607, 609, 610, 614, 620, 627, 631, 632, 635, 636, 637, 649, 656, 657, 658, 659, 666, 671, 685, 694, 698, 703, 709, 713, 714, 715, 716, 732, 733, 761, 779, 784, 786, 787, 788, 789, 790, 834, 835, 838, 845, 852, 858, 860, 866, 868, 869, 874, 875, 879, 883, 888, 889, 891, 896, 898, 902, 904, 906, 942, 943, 947, 948, 949, 956], "data": [5, 6, 14, 19, 26, 27, 28, 32, 35, 36, 38, 40, 42, 43, 46, 48, 50, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 108, 109, 110, 111, 113, 114, 118, 125, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 145, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 164, 165, 169, 170, 171, 174, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 196, 197, 199, 200, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 221, 223, 224, 225, 226, 227, 229, 232, 233, 234, 235, 236, 237, 241, 242, 248, 253, 254, 255, 257, 258, 262, 266, 267, 269, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 318, 319, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 378, 379, 380, 381, 382, 384, 386, 388, 392, 394, 395, 396, 403, 405, 407, 410, 412, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 439, 440, 441, 443, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 510, 511, 512, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 535, 540, 542, 545, 547, 548, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 609, 610, 611, 614, 617, 618, 619, 620, 627, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 665, 667, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 685, 686, 689, 690, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 709, 711, 713, 715, 716, 725, 728, 732, 733, 734, 735, 736, 737, 738, 740, 742, 743, 744, 748, 750, 752, 756, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 779, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 804, 805, 813, 814, 815, 816, 817, 818, 822, 828, 829, 834, 836, 839, 843, 845, 849, 851, 852, 853, 854, 855, 857, 858, 860, 861, 863, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 906, 907, 921, 927, 934, 935, 937, 939, 940, 943, 949, 952, 954, 956], "non": [6, 9, 21, 26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 50, 60, 66, 67, 68, 72, 76, 85, 97, 99, 100, 103, 108, 109, 110, 114, 120, 126, 136, 140, 141, 142, 148, 159, 162, 167, 168, 169, 170, 172, 176, 177, 184, 191, 192, 195, 197, 198, 201, 206, 207, 211, 212, 216, 217, 218, 223, 226, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 243, 250, 260, 261, 262, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 298, 302, 304, 306, 307, 308, 309, 310, 316, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 353, 364, 365, 386, 422, 423, 427, 429, 483, 489, 490, 491, 495, 512, 518, 519, 521, 522, 524, 548, 550, 551, 567, 609, 616, 622, 627, 633, 635, 636, 637, 650, 651, 671, 672, 689, 695, 698, 718, 745, 763, 764, 771, 772, 774, 775, 779, 780, 784, 786, 787, 788, 789, 790, 816, 824, 834, 853, 864, 867, 868, 875, 879, 888, 891, 895, 896, 898, 936, 941, 949, 956], "format": [6, 30, 53, 60, 69, 70, 89, 93, 97, 141, 149, 161, 163, 166, 169, 175, 176, 177, 186, 191, 192, 194, 196, 197, 198, 202, 208, 215, 218, 219, 230, 232, 233, 234, 235, 238, 240, 243, 244, 245, 247, 255, 256, 257, 260, 273, 282, 284, 286, 287, 290, 291, 293, 294, 302, 303, 305, 308, 309, 312, 316, 317, 319, 323, 325, 328, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 380, 398, 399, 403, 405, 419, 420, 421, 443, 483, 490, 512, 513, 514, 515, 516, 549, 550, 551, 554, 557, 559, 563, 568, 573, 625, 631, 635, 636, 651, 653, 666, 689, 693, 698, 704, 714, 729, 730, 735, 736, 737, 749, 764, 771, 772, 774, 775, 784, 785, 786, 787, 788, 789, 790, 804, 805, 807, 829, 834, 851, 853, 868, 875, 879, 888, 891, 894, 896, 898, 899, 926, 934, 936, 949, 952, 956], "base": [7, 9, 15, 19, 29, 31, 33, 35, 37, 42, 47, 48, 53, 54, 58, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 80, 81, 84, 85, 88, 95, 97, 104, 109, 111, 117, 119, 121, 123, 126, 127, 130, 134, 136, 137, 139, 140, 141, 144, 146, 148, 158, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 186, 187, 188, 191, 192, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 216, 218, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 251, 252, 253, 255, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 277, 281, 282, 283, 284, 285, 287, 288, 290, 291, 293, 294, 297, 298, 301, 302, 303, 307, 308, 309, 312, 316, 317, 319, 325, 326, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 380, 382, 386, 387, 392, 397, 400, 410, 411, 412, 413, 416, 422, 423, 424, 425, 428, 429, 433, 445, 476, 483, 485, 486, 489, 490, 491, 493, 494, 496, 497, 500, 504, 506, 509, 512, 514, 516, 518, 519, 521, 522, 524, 527, 534, 540, 542, 549, 550, 551, 553, 557, 568, 588, 594, 595, 598, 601, 604, 618, 633, 635, 636, 638, 639, 643, 644, 645, 646, 647, 650, 651, 653, 654, 660, 661, 671, 684, 685, 686, 698, 703, 705, 722, 732, 736, 737, 744, 757, 760, 769, 770, 771, 772, 773, 774, 775, 779, 780, 784, 786, 787, 788, 789, 790, 792, 795, 798, 805, 814, 816, 817, 819, 830, 834, 844, 847, 853, 855, 860, 865, 866, 868, 874, 875, 876, 877, 879, 881, 882, 883, 888, 889, 891, 893, 894, 896, 898, 899, 900, 912, 928, 936, 941, 942, 943, 945, 946, 947, 952, 956], "class": [7, 9, 14, 15, 36, 42, 45, 87, 96, 114, 121, 122, 141, 142, 163, 166, 168, 175, 177, 183, 191, 192, 194, 197, 198, 201, 222, 228, 229, 232, 243, 246, 250, 260, 271, 272, 274, 281, 282, 283, 284, 285, 287, 288, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 304, 307, 309, 316, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 355, 370, 380, 381, 434, 465, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 524, 549, 550, 551, 585, 602, 635, 636, 637, 656, 668, 734, 764, 784, 785, 786, 787, 788, 789, 790, 821, 822, 823, 824, 829, 830, 831, 834, 835, 836, 837, 847, 907, 908, 909, 910, 911, 912, 913, 950, 956], "bem": [8, 14, 29, 31, 33, 49, 52, 53, 66, 67, 69, 70, 71, 76, 95, 136, 153, 161, 162, 176, 181, 182, 185, 186, 189, 190, 191, 197, 202, 206, 207, 208, 209, 210, 211, 212, 217, 218, 235, 263, 264, 265, 274, 279, 280, 281, 284, 285, 287, 288, 290, 291, 292, 294, 295, 299, 300, 302, 303, 307, 308, 317, 319, 329, 341, 344, 434, 457, 482, 502, 526, 533, 592, 593, 594, 597, 598, 667, 690, 691, 714, 720, 722, 723, 733, 749, 852, 854, 923, 924, 929, 934, 948, 955, 956], "minimum_norm": [9, 14, 31, 33, 37, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 78, 80, 81, 83, 84, 85, 87, 117, 121, 131, 134, 135, 136, 137, 152, 192, 203, 204, 205, 207, 208, 218, 223, 233, 251, 252, 263, 265, 283, 284, 286, 287, 288, 290, 291, 292, 293, 302, 304, 308, 316, 319, 320, 955], "linear": [9, 28, 31, 32, 34, 35, 39, 43, 45, 46, 52, 53, 67, 71, 76, 80, 81, 87, 128, 134, 136, 137, 139, 147, 161, 162, 167, 184, 185, 192, 202, 203, 207, 208, 222, 223, 229, 231, 232, 233, 277, 279, 282, 283, 290, 291, 293, 296, 298, 303, 306, 307, 316, 317, 319, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 344, 345, 346, 347, 410, 422, 483, 487, 489, 490, 495, 498, 501, 518, 519, 521, 522, 550, 551, 593, 606, 608, 615, 618, 635, 636, 651, 663, 669, 698, 707, 735, 736, 737, 749, 769, 770, 779, 784, 786, 787, 789, 790, 822, 824, 834, 836, 853, 855, 860, 868, 869, 871, 875, 877, 879, 884, 888, 890, 891, 894, 896, 898, 899, 900, 936, 949, 956], "solver": [9, 31, 36, 37, 39, 41, 44, 53, 62, 66, 71, 72, 82, 85, 201, 223, 279, 281, 283, 284, 285, 286, 287, 290, 292, 294, 297, 299, 312, 328, 329, 333, 335, 336, 342, 526, 527, 547, 593, 618, 692, 701, 703, 770, 895, 946, 956], "l2": [9, 57, 66, 80, 81, 277, 547, 548, 618, 744, 798], "minimum": [9, 48, 57, 83, 97, 105, 109, 162, 166, 175, 177, 188, 192, 194, 197, 203, 205, 206, 228, 229, 234, 251, 263, 277, 282, 283, 284, 285, 288, 290, 291, 292, 293, 296, 297, 299, 300, 302, 316, 319, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 360, 361, 362, 363, 364, 365, 410, 412, 413, 428, 516, 518, 519, 521, 522, 524, 526, 527, 550, 551, 598, 603, 604, 605, 606, 607, 609, 610, 614, 616, 618, 619, 620, 638, 639, 644, 653, 654, 660, 731, 741, 744, 746, 749, 777, 784, 791, 792, 793, 794, 795, 796, 797, 815, 818, 834, 860, 874, 890, 893, 907, 949], "norm": [9, 53, 57, 62, 73, 74, 75, 76, 82, 83, 85, 105, 110, 143, 175, 182, 188, 192, 203, 205, 211, 234, 251, 252, 277, 281, 285, 291, 296, 297, 299, 305, 316, 319, 328, 329, 331, 332, 333, 334, 335, 336, 342, 343, 344, 429, 527, 545, 546, 547, 548, 550, 551, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 616, 618, 619, 620, 692, 701, 703, 713, 741, 744, 746, 798, 863, 864, 893, 895, 949, 956], "estim": [9, 14, 22, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 281, 284, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 308, 312, 315, 317, 319, 323, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 351, 352, 356, 357, 358, 359, 361, 362, 364, 365, 380, 388, 396, 410, 412, 416, 423, 427, 428, 429, 434, 435, 436, 439, 440, 441, 443, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 517, 518, 520, 522, 523, 524, 526, 527, 530, 545, 546, 547, 548, 550, 551, 556, 588, 590, 591, 597, 599, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 617, 618, 619, 620, 623, 636, 637, 641, 645, 646, 653, 657, 661, 664, 669, 671, 683, 685, 686, 701, 703, 706, 711, 712, 713, 723, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 751, 765, 769, 770, 776, 777, 779, 780, 786, 789, 791, 792, 793, 794, 795, 796, 805, 813, 814, 816, 817, 834, 852, 853, 859, 860, 861, 868, 876, 883, 890, 893, 894, 895, 898, 899, 900, 936, 943, 949, 956], "inverse_spars": [9, 14, 57, 61, 66, 72, 85, 201, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 298], "spars": [9, 29, 53, 62, 70, 72, 82, 146, 201, 255, 260, 263, 265, 277, 284, 285, 290, 291, 292, 298, 309, 320, 323, 328, 329, 333, 335, 336, 342, 343, 344, 376, 386, 397, 429, 441, 443, 527, 545, 546, 547, 548, 602, 603, 614, 692, 701, 703, 713, 750, 764, 770, 771, 772, 774, 775, 834, 863, 864, 895, 949, 956], "beamform": [9, 14, 53, 62, 77, 82, 86, 130, 191, 192, 213, 214, 252, 277, 283, 284, 285, 286, 287, 290, 291, 292, 293, 296, 298, 299, 301, 302, 304, 305, 306, 307, 317, 319, 328, 331, 333, 334, 335, 336, 342, 343, 344, 346, 423, 427, 429, 433, 441, 524, 526, 550, 604, 612, 614, 633, 692, 703, 713, 785, 788, 795, 797, 816, 834, 955, 956], "sourc": [9, 14, 24, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 61, 63, 66, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 123, 124, 126, 127, 128, 130, 132, 133, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 183, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 201, 205, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 258, 259, 260, 267, 268, 269, 270, 273, 274, 277, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 317, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 940, 942, 943, 946, 948, 949, 952, 956], "local": [9, 48, 52, 53, 59, 60, 61, 62, 66, 67, 68, 72, 73, 74, 75, 77, 80, 81, 82, 84, 85, 86, 95, 97, 110, 117, 119, 121, 136, 140, 143, 147, 176, 177, 178, 181, 184, 192, 197, 201, 205, 206, 210, 212, 214, 218, 223, 234, 238, 252, 277, 284, 290, 291, 294, 298, 302, 312, 319, 320, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 342, 346, 364, 365, 367, 369, 380, 384, 398, 411, 413, 422, 423, 427, 428, 433, 439, 440, 441, 443, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 490, 504, 524, 526, 527, 540, 545, 547, 548, 550, 551, 558, 597, 598, 602, 603, 604, 614, 618, 635, 636, 644, 651, 661, 666, 692, 701, 703, 716, 725, 728, 732, 741, 744, 746, 748, 784, 786, 787, 789, 790, 826, 834, 844, 852, 853, 861, 864, 868, 873, 875, 876, 879, 888, 891, 895, 896, 898, 904, 936, 941, 943, 948, 949, 956], "dipol": [9, 14, 29, 48, 52, 53, 54, 57, 60, 61, 62, 65, 66, 67, 68, 72, 77, 82, 85, 86, 87, 95, 109, 110, 119, 120, 121, 136, 146, 178, 181, 184, 191, 192, 195, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 218, 231, 250, 252, 277, 281, 283, 284, 287, 288, 290, 291, 293, 294, 301, 302, 303, 304, 316, 319, 320, 328, 330, 331, 332, 333, 334, 335, 336, 339, 342, 345, 346, 347, 364, 365, 366, 367, 369, 370, 379, 411, 422, 433, 443, 460, 504, 524, 526, 528, 545, 546, 547, 548, 550, 551, 597, 602, 603, 605, 614, 623, 633, 690, 692, 693, 701, 703, 716, 718, 732, 736, 737, 741, 744, 746, 748, 750, 784, 786, 787, 788, 789, 790, 834, 844, 852, 853, 863, 864, 895, 899, 904, 949, 952, 955, 956], "singl": [9, 27, 28, 32, 42, 44, 53, 59, 60, 62, 71, 82, 94, 97, 101, 109, 110, 113, 121, 128, 130, 132, 133, 134, 140, 144, 147, 150, 156, 166, 167, 168, 170, 171, 175, 176, 177, 184, 191, 192, 194, 195, 196, 198, 202, 204, 206, 209, 210, 215, 216, 217, 223, 226, 227, 229, 232, 233, 234, 235, 237, 238, 239, 243, 244, 250, 252, 255, 260, 261, 262, 265, 269, 270, 277, 279, 282, 284, 285, 287, 288, 290, 293, 294, 296, 297, 298, 299, 301, 302, 308, 309, 312, 316, 317, 320, 323, 325, 326, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 358, 359, 362, 364, 365, 372, 380, 382, 386, 387, 392, 422, 423, 428, 456, 483, 484, 490, 496, 499, 505, 509, 512, 524, 542, 550, 551, 567, 570, 571, 573, 589, 592, 595, 597, 599, 602, 603, 605, 607, 609, 610, 617, 627, 633, 635, 636, 641, 644, 651, 686, 694, 698, 705, 711, 718, 728, 733, 750, 764, 765, 767, 768, 769, 771, 772, 779, 784, 785, 786, 787, 788, 789, 790, 802, 812, 813, 814, 816, 817, 824, 834, 836, 852, 853, 854, 860, 864, 867, 868, 869, 870, 871, 872, 875, 876, 879, 886, 887, 888, 890, 891, 892, 896, 898, 919, 924, 936, 939, 956], "util": [10, 14, 18, 50, 120, 172, 206, 216, 279, 281, 286, 287, 288, 294, 298, 308, 309, 320, 331, 332, 513, 516, 550, 551, 829, 941, 948], "cuda": [10, 14, 197, 286, 287, 288, 298, 301, 331, 332, 333, 334, 485, 489, 494, 495, 521, 522, 523, 550, 551, 936, 946, 955], "step": [12, 30, 34, 37, 41, 44, 50, 67, 72, 85, 90, 95, 121, 126, 130, 136, 139, 147, 166, 168, 177, 178, 184, 187, 192, 193, 194, 196, 198, 217, 218, 223, 226, 227, 228, 229, 232, 234, 235, 237, 239, 240, 243, 255, 256, 270, 273, 277, 282, 291, 294, 298, 300, 303, 309, 310, 312, 316, 317, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 356, 358, 410, 411, 412, 416, 483, 489, 498, 501, 524, 525, 541, 542, 548, 550, 551, 568, 631, 636, 646, 651, 660, 669, 734, 751, 771, 772, 774, 775, 776, 801, 809, 824, 834, 852, 860, 889, 900, 939, 942, 943, 948], "instruct": [12, 87, 143, 184, 187, 216, 238, 240, 286, 289, 291, 292, 309, 542, 936, 941, 942, 943, 944, 946, 948, 949, 950, 951], "us": [12, 13, 14, 23, 26, 28, 29, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 120, 122, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 176, 177, 178, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 226, 227, 228, 229, 230, 231, 233, 234, 236, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 253, 255, 256, 257, 258, 260, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 317, 318, 319, 321, 324, 326, 347, 349, 351, 352, 353, 356, 358, 362, 363, 371, 372, 373, 374, 375, 376, 377, 385, 387, 388, 397, 407, 408, 415, 431, 439, 440, 442, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 485, 488, 494, 496, 508, 510, 511, 513, 514, 515, 516, 521, 522, 527, 528, 533, 534, 538, 539, 541, 543, 544, 549, 552, 555, 560, 565, 575, 577, 578, 582, 585, 586, 607, 611, 616, 621, 622, 628, 629, 638, 642, 646, 647, 664, 665, 666, 667, 668, 669, 672, 680, 684, 686, 696, 697, 699, 702, 707, 708, 717, 719, 720, 723, 726, 729, 730, 731, 735, 747, 754, 755, 757, 758, 759, 760, 761, 766, 781, 791, 792, 793, 798, 800, 801, 803, 804, 808, 809, 811, 812, 814, 815, 819, 820, 821, 822, 823, 824, 831, 832, 837, 843, 846, 848, 851, 862, 865, 866, 868, 870, 873, 875, 879, 880, 881, 882, 883, 886, 889, 890, 891, 892, 896, 897, 900, 901, 902, 905, 907, 914, 918, 919, 920, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 935, 939, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 955, 956], "gui": [12, 14, 183, 184, 186, 282, 284, 285, 287, 293, 294, 299, 300, 302, 303, 306, 308, 309, 312, 316, 318, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 376, 550, 551, 636, 836, 866, 871, 883, 889, 894, 899, 936, 941, 946, 948, 949], "coregistr": [12, 14, 49, 53, 107, 182, 186, 187, 189, 190, 191, 207, 284, 285, 287, 293, 294, 299, 300, 302, 303, 308, 312, 316, 329, 336, 341, 344, 372, 376, 435, 442, 459, 502, 556, 594, 598, 667, 722, 752, 779, 823, 834, 852, 904, 956], "subject": [12, 30, 31, 33, 34, 35, 36, 37, 45, 48, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 95, 98, 99, 106, 107, 109, 116, 117, 118, 122, 131, 136, 139, 140, 142, 143, 145, 152, 153, 154, 157, 160, 161, 162, 163, 166, 169, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 226, 227, 228, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 266, 269, 270, 273, 274, 277, 282, 283, 285, 286, 287, 288, 290, 291, 293, 294, 298, 302, 303, 304, 305, 308, 312, 316, 318, 319, 320, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 364, 365, 371, 375, 376, 377, 380, 410, 411, 412, 413, 418, 420, 421, 429, 434, 435, 436, 442, 450, 455, 457, 458, 459, 460, 465, 475, 476, 502, 517, 533, 535, 537, 539, 541, 542, 543, 544, 550, 551, 552, 556, 588, 590, 592, 594, 598, 602, 603, 614, 622, 623, 636, 640, 651, 666, 667, 671, 688, 692, 698, 703, 705, 706, 708, 711, 715, 720, 721, 722, 723, 732, 733, 734, 736, 737, 738, 747, 749, 750, 761, 765, 767, 776, 779, 780, 824, 826, 833, 834, 852, 854, 859, 864, 865, 878, 892, 894, 899, 900, 930, 931, 936, 948, 956], "structur": [12, 29, 30, 34, 35, 36, 53, 67, 69, 85, 89, 90, 94, 97, 109, 121, 122, 139, 141, 151, 161, 163, 168, 172, 173, 174, 177, 179, 180, 181, 185, 191, 192, 193, 196, 197, 199, 200, 207, 211, 212, 213, 214, 216, 217, 219, 222, 232, 240, 244, 247, 248, 253, 254, 255, 256, 270, 277, 283, 285, 288, 309, 316, 317, 318, 319, 325, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 344, 345, 346, 347, 378, 379, 380, 388, 422, 442, 443, 459, 463, 524, 548, 550, 551, 556, 571, 596, 616, 627, 630, 632, 633, 647, 656, 667, 671, 694, 696, 700, 701, 711, 744, 754, 755, 756, 757, 758, 759, 760, 764, 784, 786, 787, 788, 789, 790, 805, 824, 834, 892, 943, 946, 949, 952, 956], "scale": [12, 29, 30, 31, 36, 42, 45, 48, 53, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 80, 81, 83, 84, 85, 87, 92, 97, 101, 104, 111, 117, 121, 127, 128, 130, 131, 134, 135, 136, 137, 141, 142, 143, 146, 149, 159, 162, 163, 167, 168, 175, 177, 182, 183, 186, 192, 197, 203, 204, 205, 206, 207, 208, 209, 212, 217, 218, 219, 222, 223, 229, 231, 232, 234, 235, 240, 246, 251, 252, 263, 265, 269, 270, 273, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 299, 301, 302, 303, 306, 308, 319, 323, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 364, 365, 396, 406, 422, 423, 427, 428, 434, 439, 440, 441, 483, 490, 492, 504, 506, 517, 526, 527, 542, 544, 545, 547, 548, 550, 551, 561, 609, 610, 614, 616, 619, 620, 635, 636, 646, 647, 660, 671, 701, 720, 721, 722, 723, 736, 737, 748, 751, 784, 786, 787, 788, 789, 790, 798, 824, 834, 849, 851, 853, 860, 864, 866, 867, 868, 870, 872, 874, 875, 876, 877, 879, 884, 888, 889, 890, 891, 895, 896, 897, 898, 899, 956], "templat": [12, 119, 120, 153, 161, 181, 183, 189, 190, 191, 196, 202, 260, 277, 284, 287, 288, 290, 293, 294, 300, 303, 307, 319, 335, 336, 344, 351, 370, 380, 384, 385, 386, 396, 398, 402, 434, 443, 459, 508, 551, 566, 598, 651, 668, 690, 713, 733, 852, 904, 956], "which": [12, 22, 26, 29, 30, 31, 38, 42, 44, 45, 47, 52, 57, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 87, 97, 101, 106, 107, 108, 109, 114, 121, 128, 130, 136, 139, 141, 142, 143, 146, 147, 149, 151, 155, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 204, 206, 208, 210, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 357, 364, 365, 373, 374, 380, 382, 389, 396, 398, 399, 400, 401, 402, 408, 409, 410, 412, 416, 418, 422, 423, 428, 429, 432, 436, 442, 443, 450, 456, 475, 483, 485, 490, 491, 494, 500, 502, 504, 507, 509, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 534, 541, 542, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 588, 589, 590, 594, 595, 597, 603, 604, 612, 613, 616, 617, 621, 625, 635, 636, 637, 638, 644, 646, 647, 650, 651, 653, 654, 655, 656, 660, 667, 669, 671, 676, 685, 688, 694, 696, 700, 701, 702, 703, 705, 706, 708, 713, 714, 717, 718, 719, 720, 722, 723, 725, 726, 728, 733, 734, 738, 741, 744, 746, 747, 750, 752, 753, 761, 763, 764, 770, 776, 779, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 802, 805, 808, 812, 813, 814, 816, 817, 819, 821, 824, 834, 835, 836, 838, 840, 841, 845, 851, 852, 854, 857, 859, 860, 862, 864, 866, 867, 868, 870, 871, 874, 875, 879, 881, 883, 888, 889, 890, 894, 896, 899, 903, 904, 906, 907, 908, 909, 910, 911, 912, 913, 915, 917, 919, 927, 928, 929, 931, 933, 934, 935, 936, 939, 941, 943, 945, 946, 947, 950, 952], "i": [12, 14, 23, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 52, 53, 54, 57, 58, 60, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 80, 85, 87, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 113, 114, 117, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 154, 155, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 195, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 363, 364, 365, 367, 369, 370, 372, 374, 375, 376, 380, 382, 385, 386, 388, 390, 391, 392, 393, 395, 397, 398, 399, 405, 407, 410, 411, 412, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 507, 508, 509, 510, 512, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 539, 540, 541, 542, 545, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 594, 595, 596, 597, 598, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 625, 626, 627, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 675, 676, 678, 679, 680, 685, 686, 688, 689, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 705, 706, 708, 711, 714, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 802, 804, 805, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 824, 828, 829, 830, 832, 833, 834, 835, 836, 838, 840, 843, 844, 845, 846, 848, 849, 852, 853, 854, 857, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 912, 913, 917, 926, 927, 929, 931, 934, 937, 938, 939, 942, 943, 945, 946, 950, 951, 952, 954], "avail": [12, 26, 27, 31, 33, 34, 38, 45, 47, 48, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 95, 98, 100, 103, 105, 107, 108, 109, 112, 113, 117, 119, 120, 121, 122, 128, 136, 143, 146, 147, 151, 157, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 181, 182, 185, 188, 191, 192, 193, 194, 195, 198, 199, 202, 203, 204, 205, 206, 207, 210, 215, 216, 218, 219, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 256, 268, 273, 274, 281, 284, 285, 288, 302, 303, 304, 305, 309, 312, 317, 319, 320, 321, 323, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 371, 373, 374, 380, 400, 406, 442, 444, 450, 475, 476, 482, 483, 489, 490, 495, 502, 509, 531, 547, 550, 551, 594, 612, 613, 627, 628, 629, 635, 636, 651, 701, 708, 749, 780, 784, 785, 786, 787, 789, 790, 803, 816, 834, 853, 860, 866, 868, 870, 872, 875, 876, 879, 883, 886, 888, 889, 890, 891, 892, 894, 896, 898, 899, 920, 921, 936, 938, 941, 943, 948, 949, 950, 951, 953], "also": [12, 14, 30, 36, 45, 47, 53, 54, 55, 56, 58, 64, 65, 67, 68, 69, 71, 73, 87, 89, 96, 97, 98, 105, 106, 107, 109, 110, 121, 122, 128, 131, 134, 136, 139, 141, 143, 144, 147, 149, 154, 161, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 207, 208, 209, 210, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 259, 260, 263, 265, 268, 269, 270, 273, 274, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 300, 302, 303, 305, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 364, 365, 372, 373, 374, 378, 380, 382, 390, 391, 395, 398, 408, 416, 423, 428, 429, 435, 439, 442, 450, 458, 483, 485, 490, 495, 499, 502, 504, 507, 518, 519, 521, 522, 523, 524, 526, 533, 536, 545, 547, 548, 550, 551, 559, 563, 572, 576, 594, 597, 598, 609, 610, 611, 614, 633, 635, 636, 638, 639, 645, 646, 648, 651, 652, 653, 654, 661, 662, 663, 664, 666, 667, 677, 679, 685, 686, 693, 701, 718, 719, 722, 728, 732, 733, 740, 749, 752, 770, 771, 776, 779, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 814, 817, 823, 824, 832, 834, 836, 852, 853, 860, 861, 864, 866, 867, 868, 870, 871, 872, 873, 875, 876, 878, 879, 880, 886, 887, 888, 889, 890, 891, 892, 894, 896, 898, 900, 902, 936, 937, 938, 941, 945, 946, 947, 948, 949], "mne_gui_addon": [12, 164, 191, 306, 312], "locate_ieeg": [12, 294, 302, 303, 306], "project": [13, 14, 26, 29, 31, 34, 37, 38, 39, 40, 41, 42, 44, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 109, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 265, 269, 270, 273, 274, 277, 280, 281, 283, 284, 285, 287, 291, 292, 293, 294, 297, 298, 301, 302, 303, 304, 305, 306, 309, 311, 312, 314, 316, 317, 319, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 346, 347, 351, 352, 364, 365, 367, 369, 410, 412, 416, 423, 424, 425, 426, 428, 439, 441, 458, 491, 503, 524, 526, 527, 549, 550, 551, 572, 595, 597, 599, 602, 604, 614, 635, 636, 647, 648, 649, 650, 652, 660, 667, 671, 679, 686, 694, 703, 709, 724, 725, 728, 748, 761, 779, 785, 786, 789, 791, 792, 793, 794, 795, 796, 797, 834, 852, 853, 858, 861, 868, 870, 872, 874, 875, 879, 887, 888, 889, 890, 892, 894, 899, 905, 906, 921, 932, 949, 952, 955, 956], "channel": [13, 14, 26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 117, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 167, 168, 170, 172, 176, 178, 182, 183, 184, 185, 188, 191, 192, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 223, 226, 230, 231, 233, 234, 236, 237, 239, 240, 241, 242, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 268, 269, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 318, 319, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 345, 346, 347, 348, 351, 352, 364, 365, 376, 378, 379, 410, 412, 414, 415, 418, 422, 423, 424, 425, 426, 427, 428, 439, 440, 441, 443, 451, 483, 485, 490, 491, 492, 494, 496, 499, 504, 508, 513, 515, 516, 521, 522, 524, 525, 526, 527, 535, 540, 545, 547, 548, 549, 550, 551, 553, 559, 561, 562, 563, 564, 566, 567, 568, 571, 574, 575, 576, 578, 579, 582, 591, 594, 598, 600, 602, 604, 614, 627, 628, 629, 630, 632, 633, 634, 635, 636, 638, 641, 642, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 659, 660, 661, 662, 663, 664, 666, 667, 668, 670, 671, 672, 675, 676, 677, 679, 682, 684, 685, 686, 689, 695, 696, 697, 698, 700, 701, 702, 703, 718, 719, 724, 725, 728, 734, 736, 737, 738, 752, 764, 770, 771, 772, 774, 775, 779, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 803, 809, 813, 816, 817, 818, 834, 845, 849, 852, 853, 856, 857, 858, 860, 861, 862, 865, 866, 867, 868, 870, 872, 873, 874, 875, 876, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 896, 897, 898, 906, 915, 916, 917, 918, 919, 921, 936, 939, 946, 949, 955, 956], "modul": [13, 14, 15, 16, 19, 22, 29, 100, 149, 166, 168, 169, 171, 172, 175, 176, 177, 187, 192, 193, 194, 195, 196, 197, 198, 212, 216, 217, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 250, 268, 270, 279, 284, 287, 294, 297, 298, 299, 300, 301, 309, 317, 320, 323, 416, 562, 630, 783, 831, 834, 936, 942, 949, 952], "dedic": [13, 177, 226, 232, 234, 243, 291, 309, 310, 550, 551, 889, 946], "manipul": [13, 53, 89, 166, 175, 191, 212, 247, 279, 317, 320, 432, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 595], "can": [13, 14, 23, 24, 30, 31, 33, 38, 39, 41, 42, 45, 47, 48, 50, 52, 53, 57, 58, 66, 67, 68, 69, 70, 71, 72, 73, 84, 85, 87, 88, 97, 98, 101, 102, 105, 106, 108, 109, 110, 114, 121, 122, 126, 128, 130, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 154, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 258, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 354, 357, 364, 365, 371, 372, 373, 374, 377, 378, 380, 382, 384, 385, 388, 389, 390, 391, 395, 396, 397, 398, 400, 403, 407, 408, 410, 411, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 456, 459, 460, 461, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 502, 504, 507, 508, 509, 510, 512, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 530, 533, 534, 535, 536, 539, 541, 542, 544, 545, 547, 548, 550, 551, 559, 563, 566, 567, 570, 571, 572, 574, 576, 578, 581, 584, 585, 588, 590, 593, 594, 595, 597, 598, 601, 603, 609, 610, 612, 613, 614, 616, 620, 622, 623, 624, 625, 633, 634, 635, 636, 638, 639, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 666, 667, 670, 671, 672, 675, 677, 678, 679, 684, 685, 686, 689, 691, 694, 695, 696, 697, 700, 701, 702, 704, 706, 708, 714, 718, 719, 720, 722, 723, 725, 728, 730, 732, 733, 740, 747, 748, 749, 750, 752, 754, 756, 758, 759, 763, 764, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 802, 809, 812, 814, 816, 817, 820, 822, 823, 824, 829, 831, 832, 834, 835, 836, 840, 843, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 894, 896, 898, 899, 900, 902, 913, 919, 923, 924, 927, 929, 934, 941, 942, 946, 947, 948, 949, 950, 952], "set": [13, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 108, 109, 110, 112, 113, 114, 117, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 176, 178, 181, 182, 184, 185, 186, 187, 188, 191, 192, 194, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 245, 250, 251, 252, 255, 258, 269, 270, 273, 274, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 310, 312, 318, 319, 320, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 354, 355, 364, 365, 367, 369, 370, 371, 385, 393, 398, 409, 410, 423, 424, 426, 428, 429, 430, 434, 439, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 506, 507, 508, 511, 512, 513, 516, 517, 518, 522, 524, 526, 539, 540, 541, 542, 547, 550, 551, 552, 559, 566, 567, 571, 574, 576, 582, 587, 588, 590, 592, 594, 596, 597, 598, 599, 601, 602, 605, 606, 607, 609, 610, 614, 619, 620, 622, 623, 624, 627, 635, 636, 637, 638, 639, 641, 648, 649, 650, 651, 653, 654, 656, 659, 660, 672, 684, 689, 695, 696, 700, 701, 702, 705, 708, 711, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 749, 761, 762, 766, 768, 770, 771, 772, 773, 774, 775, 779, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 802, 804, 805, 812, 813, 814, 815, 816, 817, 821, 824, 825, 827, 832, 833, 834, 836, 838, 845, 853, 855, 860, 863, 864, 866, 868, 871, 872, 873, 874, 875, 879, 881, 882, 883, 888, 889, 890, 891, 892, 894, 896, 898, 899, 900, 901, 902, 904, 905, 921, 936, 939, 941, 942, 946, 949, 956], "sensor": [13, 14, 24, 29, 30, 31, 37, 41, 42, 43, 46, 49, 51, 53, 54, 58, 60, 67, 68, 71, 75, 95, 97, 98, 104, 105, 106, 111, 114, 117, 119, 121, 122, 125, 129, 130, 136, 146, 147, 150, 152, 156, 158, 161, 170, 172, 176, 177, 182, 183, 184, 185, 188, 192, 194, 195, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 226, 227, 229, 231, 232, 233, 235, 236, 237, 243, 252, 255, 256, 257, 262, 268, 271, 272, 273, 274, 277, 279, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 316, 317, 318, 319, 324, 326, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 351, 352, 364, 365, 366, 373, 374, 378, 379, 380, 381, 386, 387, 388, 389, 391, 392, 394, 395, 396, 397, 406, 408, 411, 413, 418, 423, 424, 425, 426, 427, 433, 439, 440, 441, 443, 483, 484, 485, 486, 487, 490, 491, 492, 493, 498, 499, 501, 502, 503, 524, 526, 527, 534, 549, 550, 551, 552, 556, 558, 561, 562, 564, 576, 587, 591, 597, 598, 599, 604, 606, 609, 610, 614, 632, 633, 635, 636, 637, 641, 647, 650, 651, 659, 666, 667, 671, 676, 677, 679, 682, 694, 697, 698, 703, 716, 718, 719, 724, 736, 737, 748, 749, 752, 762, 764, 768, 769, 771, 772, 773, 774, 775, 779, 784, 785, 786, 787, 788, 789, 790, 816, 823, 834, 836, 849, 852, 853, 856, 857, 859, 860, 861, 862, 866, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 885, 886, 888, 889, 891, 892, 896, 897, 898, 903, 904, 906, 907, 936, 943, 949, 956], "locat": [13, 26, 29, 30, 31, 38, 47, 52, 53, 57, 61, 66, 67, 71, 73, 74, 75, 76, 81, 85, 87, 94, 95, 104, 106, 107, 108, 117, 120, 121, 122, 127, 136, 142, 145, 146, 151, 152, 161, 162, 163, 164, 167, 175, 176, 181, 182, 184, 185, 186, 187, 189, 191, 192, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 227, 233, 235, 236, 237, 239, 240, 243, 250, 251, 252, 255, 256, 257, 259, 260, 265, 270, 274, 277, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 302, 303, 304, 306, 307, 312, 316, 317, 319, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 364, 365, 374, 375, 376, 380, 381, 384, 386, 389, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 406, 411, 413, 414, 415, 423, 436, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 490, 503, 504, 513, 516, 524, 534, 539, 550, 551, 561, 563, 571, 576, 584, 588, 598, 602, 603, 612, 613, 614, 618, 622, 635, 636, 640, 651, 662, 665, 666, 671, 682, 696, 697, 700, 705, 706, 722, 723, 725, 733, 736, 737, 747, 750, 771, 772, 774, 775, 776, 784, 786, 787, 789, 790, 826, 834, 852, 853, 857, 860, 864, 868, 870, 874, 875, 878, 879, 888, 889, 890, 891, 892, 896, 898, 904, 906, 936, 943, 948, 956], "process": [13, 14, 30, 33, 53, 54, 58, 60, 71, 77, 85, 95, 96, 106, 110, 114, 128, 150, 161, 168, 169, 170, 175, 177, 178, 181, 182, 186, 187, 188, 192, 197, 198, 203, 208, 210, 215, 227, 228, 229, 230, 232, 233, 234, 235, 237, 239, 243, 245, 250, 255, 256, 257, 265, 270, 277, 284, 286, 287, 291, 293, 294, 300, 301, 302, 307, 310, 314, 316, 317, 320, 323, 328, 330, 331, 332, 333, 334, 336, 341, 354, 356, 358, 364, 365, 367, 423, 427, 428, 431, 439, 440, 441, 456, 464, 483, 485, 490, 491, 496, 500, 506, 507, 522, 526, 527, 545, 547, 548, 550, 551, 552, 562, 572, 609, 614, 636, 637, 646, 660, 671, 672, 679, 686, 688, 701, 731, 733, 737, 757, 760, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 813, 866, 870, 876, 889, 890, 936, 939, 941, 949, 950, 952], "plot": [13, 23, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 71, 72, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 148, 150, 156, 157, 158, 160, 161, 163, 166, 169, 170, 171, 172, 175, 177, 179, 180, 182, 184, 185, 186, 191, 192, 193, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 243, 245, 247, 248, 250, 252, 255, 256, 260, 263, 264, 265, 268, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 316, 317, 318, 319, 320, 321, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 380, 381, 389, 391, 392, 396, 406, 423, 433, 443, 483, 487, 490, 498, 501, 503, 509, 512, 524, 526, 550, 551, 558, 562, 564, 567, 570, 572, 576, 594, 598, 599, 602, 603, 612, 613, 614, 615, 617, 632, 633, 635, 636, 651, 656, 657, 679, 692, 693, 698, 701, 703, 706, 711, 716, 723, 733, 770, 784, 785, 786, 787, 788, 789, 790, 802, 812, 834, 835, 836, 837, 838, 840, 844, 845, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 906, 937, 939, 942, 946, 955, 956], "artifact": [13, 26, 33, 53, 58, 68, 97, 104, 109, 110, 111, 136, 137, 168, 170, 172, 175, 191, 192, 198, 209, 218, 219, 228, 229, 233, 235, 237, 238, 241, 242, 245, 246, 277, 279, 282, 291, 292, 296, 297, 298, 300, 302, 304, 307, 312, 317, 320, 325, 326, 328, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 413, 414, 424, 425, 426, 427, 428, 432, 485, 489, 496, 524, 548, 550, 551, 559, 564, 566, 581, 630, 633, 635, 636, 640, 641, 643, 648, 649, 651, 653, 654, 661, 662, 663, 665, 671, 674, 678, 683, 686, 736, 737, 784, 788, 789, 811, 813, 814, 816, 817, 852, 878, 880, 887, 888, 889, 904, 921, 936, 956], "detect": [13, 31, 34, 35, 38, 48, 53, 95, 97, 99, 101, 104, 108, 109, 120, 136, 139, 149, 163, 172, 177, 183, 185, 188, 191, 194, 198, 211, 217, 218, 219, 223, 227, 229, 230, 231, 232, 233, 234, 237, 240, 241, 242, 244, 270, 273, 277, 279, 281, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 298, 300, 302, 303, 304, 305, 308, 320, 323, 324, 331, 332, 333, 334, 336, 341, 386, 410, 412, 416, 522, 550, 551, 557, 581, 633, 636, 638, 640, 641, 642, 644, 648, 649, 652, 653, 654, 660, 661, 662, 664, 671, 770, 784, 815, 818, 834, 866, 882, 883, 889, 936, 949, 956], "ssp": [13, 26, 29, 37, 41, 44, 53, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 110, 114, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 148, 150, 156, 158, 166, 167, 168, 171, 172, 175, 177, 178, 188, 191, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 218, 226, 227, 228, 230, 231, 232, 235, 237, 241, 242, 243, 246, 251, 260, 263, 265, 281, 284, 287, 291, 296, 297, 298, 301, 312, 319, 326, 328, 331, 332, 333, 334, 335, 336, 340, 341, 342, 424, 425, 426, 524, 550, 551, 595, 630, 633, 635, 648, 649, 653, 654, 661, 686, 694, 703, 709, 724, 786, 789, 868, 870, 872, 874, 875, 887, 888, 890, 921, 936, 956], "ica": [13, 14, 33, 43, 46, 53, 101, 104, 110, 111, 114, 188, 191, 192, 226, 227, 228, 231, 234, 241, 242, 245, 277, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 328, 331, 332, 333, 334, 336, 341, 380, 395, 396, 443, 487, 497, 524, 550, 551, 566, 630, 633, 651, 653, 654, 664, 665, 669, 683, 684, 698, 866, 879, 880, 881, 882, 883, 889, 921, 936, 939, 949, 955, 956], "nir": [13, 14, 53, 104, 111, 197, 238, 290, 291, 294, 303, 320, 325, 336, 551, 581, 940, 942, 949, 955, 956], "specif": [13, 36, 45, 53, 69, 70, 71, 97, 132, 133, 139, 147, 161, 163, 167, 169, 170, 176, 177, 181, 186, 187, 196, 197, 198, 201, 216, 217, 218, 219, 226, 227, 229, 230, 232, 234, 235, 237, 239, 240, 243, 246, 252, 255, 256, 257, 260, 268, 269, 270, 273, 277, 282, 290, 291, 293, 300, 302, 303, 308, 309, 310, 312, 314, 317, 319, 320, 321, 325, 327, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 354, 364, 380, 483, 490, 507, 512, 514, 518, 524, 550, 551, 552, 566, 588, 612, 613, 633, 634, 635, 636, 642, 647, 651, 659, 660, 671, 705, 711, 733, 763, 770, 784, 785, 786, 787, 788, 789, 790, 834, 855, 860, 867, 868, 875, 879, 888, 889, 891, 894, 896, 897, 899, 900, 930, 946, 949, 956], "ieeg": [13, 14, 162, 294, 306, 312, 955], "intracrani": [13, 53, 104, 161, 164, 191, 277, 294, 302, 303, 306, 312, 316, 317, 380, 535, 550, 551, 666, 668], "eeg": [13, 14, 26, 29, 30, 31, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 89, 90, 91, 93, 95, 96, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 265, 268, 269, 273, 274, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 314, 319, 323, 326, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 364, 365, 367, 369, 370, 373, 374, 378, 379, 380, 382, 384, 386, 387, 391, 392, 394, 395, 396, 398, 399, 402, 403, 405, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 439, 440, 441, 443, 459, 474, 475, 476, 483, 485, 487, 490, 491, 492, 498, 499, 502, 504, 507, 512, 515, 516, 524, 526, 527, 540, 542, 545, 547, 548, 550, 551, 557, 559, 561, 562, 563, 566, 567, 568, 569, 570, 572, 574, 576, 579, 580, 583, 591, 594, 596, 598, 599, 602, 603, 604, 614, 615, 617, 618, 627, 633, 634, 635, 636, 637, 638, 641, 644, 645, 648, 649, 651, 652, 653, 654, 662, 663, 667, 670, 677, 679, 686, 690, 692, 694, 695, 697, 698, 701, 702, 703, 713, 716, 724, 725, 728, 733, 737, 744, 749, 752, 770, 771, 772, 774, 775, 779, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 816, 817, 826, 834, 836, 852, 853, 856, 860, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 879, 880, 886, 887, 888, 889, 890, 891, 892, 896, 897, 898, 903, 904, 921, 936, 939, 940, 949, 952, 956], "eyetrack": [13, 14, 149, 191, 220, 221, 240, 306, 307, 320, 325, 331, 332, 333, 334, 336, 379, 443, 550, 551, 570, 633, 784, 786, 787, 788, 789, 790, 956], "ey": [13, 23, 29, 53, 57, 101, 150, 153, 156, 161, 163, 184, 191, 198, 209, 212, 226, 228, 231, 233, 234, 241, 242, 307, 308, 317, 325, 331, 332, 333, 334, 336, 450, 512, 524, 550, 551, 567, 568, 570, 627, 633, 654, 656, 657, 658, 659, 662, 685, 695, 784, 786, 787, 788, 789, 790, 845, 956], "track": [13, 23, 52, 53, 140, 150, 156, 168, 175, 192, 195, 218, 219, 227, 230, 244, 245, 250, 292, 300, 306, 307, 317, 318, 331, 336, 512, 570, 636, 656, 657, 659, 845, 956], "referenc": [13, 26, 53, 55, 98, 104, 111, 120, 121, 166, 176, 177, 185, 188, 193, 208, 216, 227, 231, 235, 251, 255, 288, 294, 301, 302, 303, 309, 319, 320, 325, 331, 332, 333, 334, 336, 348, 392, 550, 551, 557, 725, 728, 784, 786, 787, 788, 789, 790, 870, 939, 956], "filter": [13, 14, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 43, 45, 46, 53, 58, 59, 60, 68, 71, 85, 95, 99, 100, 103, 104, 108, 109, 110, 111, 114, 119, 126, 136, 139, 140, 142, 148, 159, 162, 166, 167, 170, 171, 172, 175, 188, 191, 192, 193, 195, 197, 198, 202, 207, 209, 210, 211, 212, 218, 222, 226, 228, 231, 234, 238, 240, 241, 242, 243, 245, 246, 252, 260, 270, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 306, 309, 312, 316, 318, 319, 323, 326, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 416, 417, 420, 423, 427, 428, 439, 440, 441, 445, 483, 484, 485, 487, 490, 491, 494, 497, 498, 499, 501, 504, 512, 524, 526, 527, 545, 547, 548, 550, 551, 564, 596, 614, 633, 636, 637, 641, 647, 648, 649, 653, 654, 660, 661, 662, 671, 672, 675, 698, 738, 748, 784, 786, 787, 788, 789, 790, 798, 799, 802, 805, 876, 877, 878, 884, 889, 890, 921, 936, 939, 941, 955, 956], "iir": [13, 282, 286, 297, 306, 312, 323, 331, 332, 333, 334, 485, 494, 518, 519, 521, 522, 550, 551, 648, 649, 675, 738, 748, 799, 877, 889], "fir": [13, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 230, 231, 232, 234, 237, 238, 239, 240, 260, 282, 287, 298, 323, 331, 332, 333, 334, 485, 494, 518, 519, 521, 522, 550, 551, 648, 649, 675, 799, 877, 889, 936, 941], "resampl": [13, 14, 21, 33, 45, 47, 70, 102, 107, 108, 136, 162, 166, 172, 175, 177, 191, 197, 218, 222, 226, 229, 232, 234, 241, 242, 252, 263, 264, 265, 269, 279, 282, 284, 286, 287, 288, 291, 293, 294, 297, 298, 301, 307, 308, 318, 320, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 504, 518, 519, 521, 522, 524, 550, 551, 559, 566, 574, 633, 685, 784, 788, 789, 834, 866, 877, 894, 899, 921, 941, 956], "chpi": [13, 14, 106, 107, 151, 195, 209, 236, 237, 284, 287, 290, 291, 293, 294, 304, 307, 308, 312, 319, 320, 323, 331, 332, 333, 334, 336, 341, 379, 504, 550, 551, 633, 640, 643, 671, 735, 736, 737, 749, 784, 786, 787, 788, 789, 790, 859, 866, 889, 955], "head": [13, 14, 29, 30, 31, 36, 48, 52, 67, 69, 71, 76, 97, 98, 105, 106, 128, 136, 139, 142, 145, 147, 153, 161, 162, 169, 171, 176, 177, 183, 185, 189, 190, 191, 192, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 215, 217, 218, 226, 227, 232, 234, 235, 237, 239, 240, 241, 242, 243, 256, 270, 273, 277, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 299, 300, 302, 303, 304, 305, 308, 309, 312, 317, 319, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341, 344, 370, 372, 373, 374, 376, 380, 383, 384, 393, 396, 398, 403, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 423, 430, 432, 433, 434, 435, 443, 457, 460, 483, 490, 502, 504, 526, 533, 534, 542, 543, 544, 550, 551, 556, 558, 562, 563, 564, 571, 576, 579, 584, 586, 592, 593, 594, 597, 598, 599, 635, 636, 640, 643, 645, 646, 647, 651, 660, 667, 671, 672, 691, 696, 697, 700, 714, 732, 733, 735, 736, 737, 741, 746, 749, 752, 779, 784, 786, 787, 789, 790, 820, 821, 823, 834, 836, 852, 853, 854, 859, 860, 864, 868, 870, 871, 872, 873, 875, 876, 878, 879, 886, 888, 890, 891, 892, 896, 898, 904, 927, 929, 934, 956], "posit": [13, 26, 29, 30, 38, 45, 47, 50, 53, 64, 65, 67, 71, 97, 102, 105, 106, 108, 109, 117, 120, 121, 122, 128, 139, 146, 149, 150, 151, 156, 161, 162, 176, 177, 182, 184, 185, 186, 196, 201, 202, 204, 209, 210, 211, 212, 215, 217, 218, 226, 227, 231, 233, 237, 239, 240, 252, 255, 259, 263, 270, 273, 277, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 299, 301, 302, 303, 304, 305, 306, 307, 309, 316, 317, 319, 320, 323, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 357, 372, 374, 380, 381, 382, 393, 396, 398, 400, 403, 406, 411, 413, 414, 419, 420, 421, 423, 435, 451, 460, 483, 486, 489, 490, 493, 495, 502, 503, 504, 511, 525, 526, 535, 542, 550, 551, 564, 567, 572, 575, 576, 584, 597, 633, 635, 636, 640, 641, 643, 651, 656, 657, 660, 662, 669, 671, 684, 693, 695, 733, 735, 736, 737, 741, 742, 743, 744, 745, 746, 747, 749, 752, 753, 768, 784, 786, 787, 788, 789, 790, 801, 809, 810, 834, 835, 836, 840, 849, 852, 853, 855, 860, 866, 867, 868, 871, 873, 874, 875, 878, 879, 885, 888, 889, 891, 892, 894, 896, 897, 898, 900, 904, 906, 956], "c": [13, 26, 30, 36, 37, 38, 45, 48, 70, 77, 97, 101, 123, 136, 139, 142, 148, 154, 163, 187, 197, 202, 206, 209, 210, 215, 218, 222, 223, 233, 239, 257, 258, 259, 260, 270, 277, 281, 282, 283, 286, 290, 298, 312, 314, 316, 317, 320, 321, 323, 324, 337, 342, 343, 344, 367, 403, 406, 423, 429, 458, 475, 476, 489, 490, 524, 527, 545, 550, 551, 592, 598, 611, 636, 644, 650, 680, 698, 744, 749, 815, 818, 834, 941, 942, 946, 949, 952], "hpi": [13, 26, 38, 47, 107, 108, 146, 151, 182, 192, 195, 196, 210, 215, 218, 226, 237, 243, 281, 284, 285, 290, 294, 304, 319, 320, 323, 331, 332, 333, 334, 336, 373, 374, 380, 383, 393, 403, 405, 410, 411, 412, 415, 416, 417, 434, 502, 503, 550, 551, 558, 576, 633, 640, 784, 786, 787, 788, 789, 790, 859], "coil": [13, 26, 29, 31, 38, 47, 52, 67, 71, 76, 107, 108, 136, 146, 151, 152, 176, 182, 184, 185, 202, 207, 208, 209, 210, 211, 212, 215, 218, 226, 235, 236, 237, 274, 284, 290, 293, 294, 304, 319, 323, 331, 332, 333, 334, 336, 388, 403, 410, 411, 413, 414, 415, 417, 418, 503, 526, 550, 551, 553, 558, 576, 633, 646, 647, 650, 671, 682, 697, 725, 784, 786, 787, 788, 789, 790, 828, 859], "transform": [13, 14, 26, 29, 31, 33, 34, 37, 38, 40, 42, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 101, 104, 107, 108, 109, 111, 114, 117, 119, 120, 121, 122, 130, 131, 134, 135, 136, 137, 139, 140, 142, 146, 151, 152, 153, 157, 161, 171, 176, 181, 183, 184, 185, 192, 193, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 232, 235, 243, 251, 252, 268, 270, 273, 277, 279, 281, 282, 284, 285, 286, 288, 290, 291, 294, 297, 298, 299, 300, 301, 302, 304, 306, 307, 308, 316, 317, 319, 323, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 372, 380, 383, 384, 394, 423, 429, 430, 432, 434, 435, 436, 443, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 496, 497, 498, 501, 502, 504, 524, 526, 534, 542, 543, 544, 550, 551, 558, 584, 594, 597, 598, 609, 610, 619, 620, 636, 637, 640, 643, 645, 647, 660, 667, 671, 672, 703, 707, 715, 716, 723, 728, 749, 752, 769, 779, 781, 786, 789, 792, 795, 801, 802, 805, 809, 810, 811, 812, 813, 814, 815, 818, 820, 834, 852, 853, 900, 906, 927, 928, 935, 936, 949, 956], "helper": [13, 140, 255, 380, 398, 656], "variou": [13, 53, 89, 128, 147, 148, 161, 167, 176, 181, 191, 195, 196, 203, 204, 213, 214, 215, 216, 219, 220, 226, 229, 230, 232, 234, 241, 243, 245, 252, 255, 256, 284, 288, 290, 309, 310, 316, 320, 321, 328, 333, 336, 342, 398, 602, 603, 614, 636, 671, 692, 701, 703, 834, 858, 936, 956], "thi": [14, 27, 29, 30, 31, 33, 35, 36, 39, 40, 42, 44, 45, 47, 48, 52, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 76, 80, 81, 83, 84, 85, 87, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 113, 114, 117, 120, 121, 122, 123, 124, 126, 128, 130, 131, 136, 139, 140, 141, 142, 143, 144, 145, 149, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 358, 359, 362, 364, 365, 370, 371, 373, 374, 375, 376, 377, 380, 381, 384, 385, 386, 387, 388, 389, 392, 393, 394, 398, 399, 400, 405, 409, 410, 411, 414, 416, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 436, 439, 440, 441, 442, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 532, 533, 535, 536, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 557, 558, 559, 560, 562, 566, 567, 568, 570, 571, 574, 575, 579, 581, 584, 585, 588, 590, 595, 596, 598, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 620, 622, 623, 627, 631, 633, 635, 636, 637, 638, 639, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 666, 667, 668, 669, 670, 671, 672, 675, 678, 679, 685, 688, 689, 691, 694, 695, 696, 698, 700, 701, 705, 706, 711, 714, 720, 722, 725, 726, 728, 730, 732, 733, 736, 737, 738, 745, 747, 748, 749, 750, 751, 754, 755, 758, 761, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 793, 804, 814, 817, 821, 824, 828, 829, 831, 832, 834, 837, 838, 840, 844, 846, 849, 851, 852, 853, 854, 857, 858, 862, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 883, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 901, 902, 905, 906, 907, 908, 929, 931, 936, 939, 941, 942, 945, 946, 948, 949, 950], "camelcas": [14, 309], "name": [14, 30, 31, 33, 34, 36, 44, 48, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 97, 109, 117, 119, 120, 121, 122, 127, 128, 130, 136, 139, 154, 157, 158, 161, 163, 167, 168, 169, 170, 171, 175, 176, 185, 186, 187, 192, 194, 195, 196, 197, 198, 203, 204, 205, 206, 217, 218, 223, 227, 228, 229, 232, 233, 235, 237, 238, 239, 246, 250, 251, 252, 255, 256, 268, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 306, 308, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 371, 375, 376, 377, 378, 380, 381, 386, 389, 390, 391, 392, 393, 395, 396, 397, 402, 404, 405, 406, 408, 409, 420, 428, 429, 432, 434, 435, 436, 439, 440, 443, 451, 456, 459, 462, 483, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 502, 504, 507, 510, 513, 514, 515, 516, 524, 525, 533, 535, 536, 537, 539, 541, 542, 543, 544, 549, 550, 551, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 586, 587, 588, 590, 592, 594, 595, 602, 617, 621, 625, 626, 627, 633, 634, 635, 636, 637, 638, 649, 651, 652, 653, 654, 660, 661, 662, 663, 664, 667, 672, 677, 679, 682, 683, 686, 688, 689, 691, 693, 695, 696, 697, 698, 700, 702, 703, 704, 705, 706, 708, 709, 711, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 725, 728, 732, 733, 738, 752, 761, 765, 769, 770, 776, 779, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 802, 806, 808, 812, 814, 817, 819, 821, 831, 833, 834, 840, 852, 853, 854, 855, 857, 860, 864, 865, 866, 867, 868, 870, 872, 873, 874, 875, 879, 880, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 900, 907, 908, 909, 910, 911, 912, 913, 915, 917, 919, 925, 926, 927, 928, 931, 932, 933, 934, 935, 939, 941, 942, 946, 948, 950], "underscore_cas": 14, "group": [14, 30, 53, 94, 97, 136, 139, 150, 156, 163, 166, 168, 169, 171, 177, 181, 186, 187, 193, 198, 204, 229, 240, 246, 252, 255, 256, 259, 260, 264, 265, 277, 284, 286, 294, 302, 303, 309, 319, 320, 323, 331, 332, 333, 334, 336, 341, 364, 365, 382, 392, 500, 509, 510, 512, 550, 551, 567, 636, 651, 733, 749, 766, 772, 775, 840, 866, 867, 872, 889, 892, 949, 956], "themat": 14, "analysi": [14, 21, 22, 26, 28, 32, 34, 39, 41, 43, 46, 68, 69, 70, 97, 101, 109, 114, 123, 124, 128, 136, 166, 168, 170, 171, 179, 180, 181, 186, 187, 193, 194, 197, 198, 199, 200, 204, 209, 210, 215, 217, 218, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 243, 244, 246, 252, 255, 256, 257, 259, 260, 268, 272, 273, 277, 281, 282, 283, 291, 299, 300, 301, 310, 312, 314, 316, 317, 319, 320, 321, 331, 332, 333, 334, 336, 338, 339, 341, 342, 343, 345, 346, 347, 364, 365, 380, 382, 396, 422, 423, 429, 432, 443, 474, 476, 483, 491, 497, 507, 512, 524, 540, 545, 550, 551, 561, 572, 596, 602, 603, 617, 627, 633, 636, 637, 644, 651, 667, 669, 698, 733, 737, 744, 765, 766, 769, 771, 784, 786, 787, 788, 789, 790, 798, 800, 802, 804, 812, 813, 814, 815, 816, 817, 818, 834, 860, 869, 898, 921, 942, 943, 945, 949, 952, 956], "stage": [14, 164, 165, 170, 181, 182, 191, 198, 218, 227, 229, 232, 233, 238, 245, 277, 287, 298, 300, 309, 316, 317, 319, 325, 326, 331, 332, 333, 334, 343, 429, 475, 512, 550, 551, 566, 595, 651, 689, 694, 786, 824, 869, 949, 956], "ar": [14, 26, 29, 30, 31, 37, 38, 40, 41, 42, 44, 45, 47, 50, 52, 53, 57, 58, 59, 60, 64, 67, 69, 71, 72, 73, 76, 85, 94, 97, 101, 102, 103, 107, 108, 109, 110, 113, 114, 121, 126, 128, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 158, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 351, 352, 355, 356, 358, 364, 365, 370, 371, 373, 374, 375, 376, 378, 380, 381, 382, 384, 385, 388, 390, 391, 392, 393, 396, 397, 398, 400, 402, 403, 406, 410, 411, 412, 416, 422, 423, 427, 428, 429, 430, 432, 434, 439, 440, 441, 443, 456, 457, 464, 475, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 504, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 533, 535, 536, 540, 541, 542, 545, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 570, 572, 574, 576, 577, 579, 580, 581, 582, 583, 584, 588, 591, 594, 595, 597, 599, 601, 602, 611, 612, 613, 614, 615, 618, 619, 620, 625, 628, 629, 631, 632, 633, 635, 636, 637, 638, 639, 641, 643, 644, 646, 651, 652, 653, 654, 656, 660, 661, 663, 666, 670, 671, 672, 675, 676, 677, 679, 680, 682, 684, 686, 688, 689, 691, 694, 695, 696, 697, 698, 701, 703, 706, 709, 711, 718, 720, 721, 722, 723, 724, 725, 728, 730, 733, 734, 736, 737, 740, 741, 744, 746, 747, 749, 750, 752, 755, 756, 758, 759, 760, 765, 766, 769, 770, 771, 772, 773, 774, 775, 776, 780, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 803, 804, 805, 810, 813, 814, 815, 816, 817, 819, 821, 824, 829, 834, 835, 836, 840, 845, 851, 852, 853, 854, 857, 860, 861, 862, 863, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 879, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 906, 915, 916, 919, 926, 928, 929, 930, 931, 937, 938, 939, 941, 943, 945, 946, 948, 949, 950, 952, 953, 954, 956], "below": [14, 30, 36, 45, 69, 73, 102, 139, 141, 166, 177, 181, 186, 187, 192, 194, 196, 198, 217, 219, 222, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 245, 255, 260, 263, 265, 268, 270, 273, 274, 277, 302, 309, 310, 313, 316, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 338, 339, 342, 343, 344, 345, 346, 347, 374, 380, 429, 485, 494, 502, 510, 519, 521, 542, 550, 551, 568, 603, 636, 638, 644, 646, 736, 770, 771, 772, 774, 775, 784, 788, 834, 855, 867, 872, 876, 879, 881, 894, 899, 900, 936, 939, 946, 948, 950, 953], "found": [14, 24, 26, 27, 29, 30, 31, 34, 35, 37, 38, 42, 44, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 152, 155, 158, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 184, 185, 187, 188, 192, 194, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 223, 226, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 244, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 273, 274, 284, 288, 290, 293, 294, 298, 309, 312, 317, 319, 320, 323, 324, 326, 328, 331, 332, 333, 334, 336, 355, 370, 386, 387, 397, 417, 418, 434, 447, 448, 449, 450, 452, 453, 454, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 502, 510, 524, 525, 531, 532, 533, 542, 550, 551, 558, 579, 602, 636, 639, 648, 653, 654, 656, 661, 662, 664, 665, 680, 691, 714, 720, 722, 727, 728, 733, 771, 821, 834, 846, 848, 852, 866, 883, 889, 929, 937], "namespac": [14, 287, 294, 298, 300, 309, 831], "provid": [14, 30, 31, 44, 45, 53, 69, 70, 92, 106, 117, 120, 121, 122, 130, 134, 163, 166, 168, 172, 175, 176, 177, 181, 182, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 201, 210, 211, 215, 216, 217, 219, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 243, 244, 245, 246, 250, 252, 256, 257, 260, 275, 277, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 302, 303, 304, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 326, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 352, 355, 364, 365, 370, 371, 378, 381, 389, 397, 422, 424, 425, 426, 427, 428, 429, 434, 439, 442, 456, 457, 460, 483, 485, 490, 499, 504, 507, 510, 521, 522, 524, 526, 536, 542, 549, 550, 551, 571, 572, 584, 585, 588, 597, 599, 602, 619, 620, 623, 635, 636, 638, 639, 646, 652, 653, 654, 656, 660, 663, 671, 677, 679, 686, 696, 700, 711, 722, 733, 734, 749, 752, 769, 770, 772, 774, 775, 778, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 802, 812, 813, 814, 815, 816, 817, 818, 821, 822, 824, 831, 834, 836, 845, 852, 853, 855, 860, 862, 866, 867, 868, 870, 871, 872, 873, 875, 878, 879, 883, 885, 888, 889, 890, 891, 894, 896, 898, 899, 900, 916, 936, 941, 943, 945, 946, 947, 948, 949, 952], "multipl": [14, 21, 30, 42, 66, 70, 71, 77, 86, 120, 123, 124, 128, 130, 134, 139, 147, 166, 170, 175, 176, 185, 186, 192, 198, 201, 217, 222, 227, 229, 230, 232, 233, 235, 243, 244, 245, 256, 260, 263, 264, 265, 270, 274, 277, 279, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 303, 304, 306, 308, 309, 312, 317, 319, 320, 325, 330, 331, 332, 333, 334, 338, 339, 341, 342, 344, 345, 346, 347, 367, 369, 385, 423, 429, 456, 485, 494, 496, 506, 508, 510, 519, 520, 521, 522, 524, 527, 533, 547, 548, 550, 551, 564, 575, 597, 612, 613, 618, 623, 636, 654, 662, 671, 675, 693, 701, 725, 728, 733, 762, 768, 772, 773, 784, 785, 788, 798, 801, 808, 809, 814, 817, 834, 850, 860, 867, 870, 873, 876, 879, 881, 883, 889, 894, 895, 897, 899, 953], "command": [14, 30, 151, 177, 181, 184, 186, 197, 211, 216, 279, 281, 285, 290, 294, 300, 301, 302, 303, 308, 316, 318, 331, 332, 336, 429, 542, 550, 551, 592, 636, 724, 866, 883, 889, 941, 942, 945, 946, 948, 949, 950, 952], "line": [14, 26, 97, 107, 108, 128, 136, 147, 148, 151, 162, 163, 166, 167, 169, 170, 177, 178, 181, 182, 184, 186, 188, 195, 197, 198, 203, 209, 217, 218, 219, 229, 231, 234, 235, 236, 237, 238, 243, 246, 250, 257, 258, 269, 270, 273, 274, 277, 280, 285, 287, 290, 294, 300, 301, 302, 305, 307, 308, 312, 316, 317, 318, 320, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 403, 410, 416, 483, 490, 542, 550, 551, 585, 592, 635, 636, 651, 678, 686, 698, 705, 714, 717, 784, 786, 787, 789, 790, 834, 836, 843, 849, 852, 853, 860, 861, 866, 867, 868, 870, 872, 874, 875, 876, 878, 879, 882, 883, 884, 887, 888, 889, 890, 891, 893, 894, 895, 896, 898, 899, 908, 929, 934, 936, 941, 942, 945, 949, 952], "script": [14, 26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 279, 283, 284, 286, 294, 296, 309, 317, 320, 341, 550, 551, 889, 936, 937, 943, 945, 948, 949], "call": [14, 30, 44, 57, 69, 70, 113, 114, 121, 144, 155, 166, 168, 170, 171, 172, 175, 176, 177, 181, 182, 184, 186, 187, 192, 194, 196, 197, 198, 201, 204, 208, 217, 223, 226, 227, 229, 230, 232, 233, 237, 239, 243, 244, 245, 246, 255, 257, 259, 260, 265, 269, 270, 274, 281, 282, 283, 286, 290, 292, 293, 300, 301, 302, 303, 304, 306, 308, 309, 310, 318, 319, 320, 323, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 376, 380, 423, 424, 426, 428, 429, 434, 486, 489, 493, 496, 499, 500, 504, 516, 518, 526, 539, 541, 550, 551, 559, 566, 581, 594, 597, 598, 603, 604, 605, 606, 607, 609, 610, 619, 620, 636, 641, 646, 647, 648, 649, 653, 655, 660, 671, 686, 722, 732, 733, 735, 736, 737, 749, 754, 758, 771, 772, 773, 774, 775, 784, 785, 786, 788, 789, 791, 792, 793, 794, 795, 796, 802, 804, 805, 812, 813, 814, 815, 816, 817, 831, 832, 834, 836, 853, 860, 866, 867, 868, 871, 874, 875, 890, 898, 916, 917, 936, 939, 941, 942, 946, 950], "directli": [14, 45, 60, 69, 121, 122, 164, 169, 170, 175, 191, 196, 197, 198, 215, 217, 223, 227, 230, 231, 232, 233, 234, 245, 263, 269, 270, 284, 286, 287, 294, 303, 306, 318, 320, 323, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 340, 342, 343, 346, 347, 380, 381, 386, 390, 428, 441, 483, 490, 519, 547, 550, 551, 552, 554, 559, 572, 635, 636, 651, 653, 701, 728, 784, 786, 787, 789, 790, 837, 853, 855, 866, 868, 875, 879, 888, 891, 894, 896, 898, 900], "from": [14, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 239, 242, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 317, 318, 319, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 375, 377, 380, 381, 383, 386, 389, 392, 393, 394, 396, 398, 399, 400, 401, 402, 405, 406, 407, 411, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 439, 440, 441, 442, 443, 450, 456, 464, 465, 475, 476, 483, 487, 489, 490, 491, 492, 498, 501, 503, 505, 506, 507, 509, 512, 513, 514, 515, 516, 517, 522, 524, 525, 526, 527, 528, 531, 533, 535, 536, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 554, 555, 556, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 588, 593, 594, 595, 596, 597, 598, 599, 602, 603, 604, 609, 610, 611, 612, 613, 614, 616, 617, 618, 622, 623, 627, 628, 629, 633, 634, 635, 636, 637, 638, 639, 640, 643, 645, 646, 647, 650, 651, 652, 653, 654, 656, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 680, 681, 682, 683, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 723, 725, 728, 733, 734, 735, 736, 737, 738, 744, 747, 748, 749, 750, 751, 753, 754, 756, 757, 758, 759, 760, 761, 763, 764, 766, 770, 771, 772, 773, 774, 775, 776, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 812, 813, 814, 815, 816, 817, 818, 821, 822, 823, 824, 826, 829, 830, 833, 834, 843, 849, 852, 853, 860, 864, 865, 866, 868, 869, 870, 872, 873, 874, 875, 876, 877, 879, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 896, 898, 904, 906, 907, 918, 919, 927, 928, 931, 934, 936, 938, 941, 945, 946, 948, 949, 950, 952, 956], "termin": [14, 281, 291, 299, 309, 323, 936, 941, 942, 945, 946, 948, 951], "softwar": [14, 97, 184, 191, 210, 216, 217, 235, 277, 282, 291, 292, 294, 302, 309, 310, 316, 317, 319, 324, 336, 388, 516, 542, 550, 551, 560, 581, 671, 714, 902, 934, 936, 937, 938, 941, 943, 948, 950], "meg": [14, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 158, 160, 161, 162, 166, 167, 168, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 186, 188, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 219, 220, 221, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 250, 252, 257, 258, 259, 260, 263, 264, 265, 268, 269, 273, 274, 277, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 314, 316, 319, 323, 326, 328, 331, 332, 333, 334, 335, 336, 340, 342, 344, 351, 352, 364, 365, 367, 369, 378, 383, 386, 387, 388, 393, 395, 410, 422, 423, 424, 425, 426, 427, 428, 433, 439, 440, 441, 443, 463, 474, 483, 485, 490, 491, 499, 504, 524, 526, 527, 534, 540, 545, 547, 548, 550, 551, 553, 554, 558, 562, 564, 570, 572, 573, 576, 584, 586, 594, 596, 598, 602, 603, 604, 614, 615, 617, 618, 630, 633, 634, 635, 636, 638, 641, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 663, 667, 671, 672, 677, 679, 686, 692, 697, 701, 703, 718, 724, 736, 737, 741, 744, 746, 749, 752, 770, 771, 772, 774, 775, 779, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 816, 817, 820, 821, 834, 836, 849, 852, 853, 859, 860, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 878, 879, 880, 887, 888, 890, 891, 896, 898, 903, 936, 939, 940, 949, 952, 956], "most": [14, 45, 54, 71, 73, 97, 100, 108, 109, 131, 135, 136, 141, 147, 161, 166, 170, 175, 176, 177, 178, 181, 182, 191, 193, 195, 197, 198, 207, 215, 219, 226, 229, 231, 233, 234, 236, 237, 238, 239, 243, 255, 259, 268, 273, 294, 303, 304, 309, 310, 312, 318, 319, 320, 321, 323, 331, 332, 333, 334, 336, 337, 342, 345, 380, 398, 424, 425, 426, 447, 448, 449, 452, 453, 454, 456, 460, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 512, 518, 523, 526, 545, 588, 594, 623, 636, 646, 669, 671, 688, 736, 737, 738, 747, 748, 749, 750, 771, 772, 773, 774, 775, 824, 829, 834, 854, 875, 936, 939, 942, 946, 948], "raw": [14, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 53, 54, 58, 59, 60, 62, 67, 68, 71, 72, 75, 82, 88, 90, 92, 94, 95, 96, 98, 99, 100, 101, 103, 105, 106, 108, 109, 110, 114, 116, 118, 119, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 148, 149, 151, 155, 158, 159, 161, 162, 167, 168, 170, 171, 172, 175, 177, 182, 184, 185, 188, 191, 192, 193, 195, 196, 197, 199, 200, 206, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 247, 248, 251, 252, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 317, 318, 319, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 344, 348, 350, 351, 352, 363, 364, 365, 380, 382, 385, 409, 410, 412, 414, 415, 416, 417, 422, 423, 425, 426, 427, 428, 431, 432, 441, 451, 463, 488, 491, 508, 512, 516, 518, 521, 524, 525, 542, 549, 551, 552, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 587, 591, 594, 595, 596, 598, 600, 602, 603, 604, 605, 606, 607, 609, 610, 614, 617, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 653, 654, 655, 657, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 672, 673, 674, 675, 678, 679, 685, 686, 692, 696, 698, 700, 703, 705, 706, 725, 728, 734, 735, 736, 737, 738, 749, 750, 770, 784, 786, 787, 788, 789, 790, 799, 804, 832, 834, 866, 869, 870, 879, 880, 881, 883, 889, 890, 906, 939, 941, 955, 956], "evok": [14, 26, 27, 29, 30, 31, 33, 34, 41, 42, 43, 44, 46, 53, 54, 57, 61, 62, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 87, 88, 95, 98, 100, 104, 105, 106, 110, 111, 113, 114, 116, 118, 120, 122, 123, 124, 126, 127, 128, 134, 140, 143, 144, 150, 152, 156, 161, 162, 167, 169, 170, 180, 188, 193, 195, 196, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 223, 226, 227, 228, 229, 230, 232, 233, 234, 237, 240, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 270, 274, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 312, 317, 318, 319, 320, 323, 326, 328, 330, 331, 332, 334, 335, 336, 338, 339, 341, 342, 344, 346, 348, 351, 352, 356, 357, 360, 361, 364, 365, 367, 369, 382, 385, 409, 422, 423, 425, 427, 443, 463, 488, 497, 504, 508, 509, 514, 515, 517, 524, 526, 540, 542, 545, 547, 548, 550, 551, 556, 564, 594, 595, 598, 602, 603, 604, 605, 606, 607, 611, 614, 617, 632, 633, 634, 635, 636, 637, 644, 645, 648, 649, 652, 655, 659, 663, 670, 671, 686, 692, 694, 698, 699, 700, 701, 702, 703, 705, 706, 709, 725, 728, 732, 733, 738, 748, 750, 770, 779, 784, 786, 787, 788, 789, 790, 795, 799, 804, 814, 816, 817, 818, 834, 836, 853, 860, 863, 864, 866, 867, 870, 871, 872, 873, 874, 875, 876, 880, 883, 887, 889, 890, 893, 895, 898, 903, 927, 936, 939, 955, 956], "info": [14, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 99, 101, 102, 106, 107, 108, 109, 110, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 155, 159, 161, 162, 163, 166, 168, 170, 172, 175, 176, 177, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 312, 316, 317, 318, 319, 320, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 340, 341, 342, 344, 349, 351, 352, 364, 365, 366, 373, 374, 378, 379, 381, 385, 386, 387, 388, 392, 394, 395, 397, 408, 409, 411, 413, 418, 423, 427, 428, 434, 439, 440, 441, 443, 483, 485, 490, 491, 492, 494, 499, 502, 504, 508, 513, 514, 515, 516, 519, 521, 522, 526, 527, 534, 535, 545, 547, 548, 549, 550, 551, 552, 556, 558, 571, 587, 591, 594, 597, 598, 599, 602, 604, 614, 627, 630, 632, 633, 634, 635, 636, 638, 640, 647, 650, 652, 653, 654, 656, 658, 660, 663, 667, 671, 675, 676, 677, 679, 685, 686, 689, 696, 700, 718, 719, 724, 725, 728, 730, 735, 736, 737, 738, 748, 749, 752, 770, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 817, 823, 829, 832, 834, 836, 849, 852, 853, 856, 857, 860, 861, 862, 866, 867, 870, 871, 872, 873, 876, 878, 883, 885, 888, 889, 890, 892, 898, 906, 927, 936, 945, 956], "read": [14, 26, 27, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 172, 175, 177, 178, 182, 183, 184, 185, 186, 187, 188, 192, 193, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 246, 250, 251, 252, 256, 257, 258, 259, 264, 269, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 316, 318, 319, 320, 321, 323, 324, 325, 326, 328, 331, 332, 333, 334, 336, 342, 344, 364, 365, 368, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 420, 423, 427, 428, 439, 440, 441, 443, 483, 490, 491, 515, 524, 525, 526, 527, 531, 533, 536, 542, 545, 547, 548, 549, 550, 551, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 571, 572, 574, 576, 577, 578, 579, 584, 585, 602, 614, 616, 617, 625, 638, 663, 681, 682, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 716, 717, 718, 720, 721, 723, 730, 737, 785, 806, 808, 826, 843, 852, 876, 904, 927, 928, 939, 945, 950, 956], "anonymize_info": [14, 282, 283, 290, 293, 323, 331, 332, 333, 334, 336, 550, 551], "read_raw": [14, 94, 97, 161, 170, 198, 252, 291, 293, 306, 307, 323], "read_raw_artemis123": [14, 151, 215, 290, 320, 557], "read_raw_bti": [14, 151, 211, 215, 281, 288, 293, 302, 303, 304, 320], "read_raw_cnt": [14, 216, 281, 282, 283, 287, 288, 290, 304, 306, 307, 308, 320, 557], "read_raw_ctf": [14, 26, 33, 38, 47, 107, 108, 146, 151, 210, 215, 218, 280, 281, 283, 284, 285, 286, 288, 290, 291, 303, 320, 557], "read_raw_curri": [14, 288, 292, 294, 304, 305, 557, 955], "read_raw_edf": [14, 34, 35, 109, 139, 163, 185, 216, 232, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 301, 302, 303, 304, 306, 307, 317, 320, 557, 559, 574, 939], "read_raw_eyelink": [14, 149, 219, 240, 306, 307, 308, 320], "read_raw_bdf": [14, 216, 287, 292, 294, 302, 303, 304, 320, 557, 566, 574], "read_raw_gdf": [14, 216, 287, 288, 291, 292, 294, 302, 303, 308, 320, 557, 559, 566], "read_raw_kit": [14, 151, 197, 212, 215, 283, 288, 291, 292, 293, 294, 320, 557], "read_raw_nedf": [14, 293, 557, 955], "read_raw_nicolet": [14, 216, 280, 288, 293, 320, 557], "read_raw_hitachi": [14, 217, 294, 302, 304, 955], "read_raw_nirx": [14, 102, 217, 238, 290, 291, 294, 302, 303, 320, 557], "read_raw_snirf": [14, 217, 291, 294, 302, 303, 306, 307, 308], "read_raw_eeglab": [14, 155, 194, 216, 280, 282, 286, 287, 288, 292, 302, 303, 304, 305, 308, 320, 557, 939, 946], "read_raw_brainvis": [14, 196, 216, 270, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 294, 301, 303, 320, 557], "read_raw_egi": [14, 216, 240, 283, 285, 287, 288, 293, 294, 301, 302, 306, 307, 308, 320, 557], "read_raw_fif": [14, 29, 31, 36, 37, 39, 40, 41, 42, 44, 54, 55, 58, 59, 60, 68, 71, 72, 75, 88, 95, 96, 98, 99, 100, 101, 103, 106, 109, 110, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 140, 142, 144, 145, 148, 151, 158, 159, 166, 167, 168, 171, 172, 175, 177, 178, 182, 188, 192, 193, 194, 195, 196, 203, 206, 208, 209, 215, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 257, 258, 259, 260, 263, 265, 268, 269, 273, 282, 287, 290, 291, 292, 293, 301, 320, 325, 557, 939], "read_raw_eximia": [14, 216, 320, 557], "read_raw_fieldtrip": [14, 215, 286, 294, 320, 557, 955], "read_raw_boxi": [14, 217, 292, 320, 557, 955], "read_raw_persyst": [14, 216, 291, 293, 294, 320], "read_raw_nihon": [14, 216, 292, 294, 302], "read_raw_fil": [14, 215, 239, 306, 307, 320, 557], "read_raw_nsx": [14, 955], "read_raw_neuralynx": [14, 308, 955], "baseraw": [14, 283, 636, 644], "kit": [14, 15, 80, 81, 191, 196, 197, 210, 213, 214, 255, 277, 281, 282, 288, 290, 292, 293, 294, 298, 301, 308, 320, 328, 329, 331, 333, 334, 336, 370, 406, 415, 423, 503, 504, 526, 576, 598, 599, 618, 647, 660, 671, 697, 789, 852, 864, 904, 955, 956], "read_mrk": [14, 308, 955], "o": [14, 27, 45, 70, 88, 98, 102, 109, 142, 153, 166, 185, 187, 195, 197, 198, 211, 222, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 277, 283, 286, 290, 291, 293, 297, 299, 301, 302, 303, 306, 307, 309, 317, 323, 328, 331, 332, 333, 334, 336, 423, 442, 459, 483, 490, 531, 550, 551, 635, 636, 645, 650, 727, 784, 786, 787, 789, 790, 853, 868, 875, 891, 896, 898, 936, 946, 952], "channel_typ": [14, 195, 232, 331, 332, 333, 334, 336, 550, 551, 553, 636, 784, 786, 787, 788, 789, 790], "channel_indices_by_typ": [14, 195], "get_head_surf": [14, 302, 329, 594, 864], "get_meg_helmet_surf": 14, "get_volume_labels_from_aseg": [14, 207, 291], "get_volume_labels_from_src": [14, 283], "parse_config": [14, 955], "read_labels_from_annot": [14, 64, 67, 73, 95, 117, 121, 122, 154, 251, 283, 300, 622, 705, 931], "read_bem_solut": [14, 31, 71, 136, 185, 593, 923], "read_bem_surfac": [14, 187, 284, 592, 593, 690], "read_cov": [14, 37, 57, 61, 66, 67, 71, 74, 75, 76, 77, 80, 81, 84, 85, 86, 91, 95, 119, 121, 188, 204, 205, 328, 925, 936], "read_dipol": [14, 71, 143, 281, 284, 290, 293, 329, 330, 526], "read_epoch": [14, 128, 166, 169, 256, 279, 280, 286, 287, 291, 320, 936], "read_epochs_kit": [14, 166, 215, 301, 320, 955], "read_epochs_eeglab": [14, 166, 216, 280, 282, 283, 286, 288, 290, 302, 303, 305, 308, 320, 939], "read_epochs_fieldtrip": [14, 215, 286, 291, 294, 320, 955], "read_ev": [14, 37, 39, 40, 41, 42, 44, 54, 96, 114, 121, 123, 124, 127, 130, 131, 144, 148, 158, 166, 171, 177, 228, 244, 258, 259, 260, 263, 265, 282, 290, 301, 319, 524, 695, 926], "read_evok": [14, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 105, 112, 113, 143, 146, 147, 152, 175, 176, 198, 202, 204, 205, 207, 273, 274, 282, 291, 300, 303, 331, 332, 333, 334, 341, 550, 551, 927, 936], "read_evoked_besa": [14, 303, 955], "read_evoked_fieldtrip": [14, 215, 286, 290, 320, 955], "read_evokeds_mff": [14, 292, 955], "read_freesurfer_lut": [14, 291, 536, 955], "read_forward_solut": [14, 31, 48, 57, 58, 59, 60, 61, 66, 68, 69, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 117, 119, 120, 121, 122, 157, 184, 203, 204, 205, 206, 218, 223, 251, 252, 284, 335, 928], "read_label": [14, 54, 55, 63, 65, 119, 131, 134, 135, 342, 345, 734], "read_morph_map": [14, 288, 955], "read_proj": [14, 119, 138, 157, 168, 218, 233, 331, 332, 333, 334, 341, 550, 551, 932], "read_reject_paramet": [14, 955], "read_source_estim": [14, 63, 69, 79, 143, 160, 201, 207, 264, 273, 274, 288], "read_source_spac": [14, 52, 66, 69, 70, 161, 162, 182, 185, 186, 206, 263, 264, 265, 344, 933], "read_surfac": [14, 182, 186, 187, 291, 316, 337, 717, 733, 934], "read_tran": [14, 143, 145, 182, 186, 204, 218, 302, 344, 534, 749, 935], "read_tri": [14, 714, 934, 955], "write_labels_to_annot": [14, 291, 300, 705, 706, 930], "write_bem_solut": [14, 291, 316, 593, 690, 691], "write_bem_surfac": [14, 291, 316, 592, 593, 690, 691], "write_head_bem": [14, 187, 293], "write_cov": [14, 188, 302, 692], "write_ev": [14, 244, 302, 524, 698], "write_evok": [14, 88, 175, 290, 291, 294, 300, 302, 306, 333, 334, 514, 701, 936], "write_forward_solut": [14, 184, 284, 291, 703], "write_label": 14, "write_proj": [14, 233, 291, 302, 709], "write_source_spac": [14, 67, 283, 316, 713], "write_surfac": [14, 187, 291, 714, 717], "write_tran": [14, 183, 716], "what": [14, 57, 85, 98, 109, 117, 121, 122, 144, 155, 162, 166, 167, 168, 169, 170, 182, 186, 195, 197, 201, 206, 207, 208, 217, 227, 229, 238, 243, 244, 245, 252, 255, 257, 260, 268, 270, 273, 288, 304, 305, 308, 309, 319, 326, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 423, 427, 434, 439, 440, 456, 475, 502, 507, 512, 516, 533, 549, 550, 551, 567, 622, 676, 689, 691, 695, 720, 722, 734, 784, 788, 814, 817, 859, 894, 899, 929, 945, 948, 950, 955], "read_info": [14, 52, 91, 117, 119, 121, 122, 183, 184, 186, 195, 308], "write_info": [14, 308], "show_fiff": [14, 282, 298, 307, 843, 955], "get_channel_type_const": [14, 290], "baseepoch": [14, 166, 283, 288, 309, 636], "creat": [14, 26, 27, 29, 30, 31, 34, 35, 37, 41, 42, 44, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 90, 92, 94, 95, 96, 97, 98, 100, 102, 106, 109, 112, 114, 119, 120, 122, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 147, 148, 151, 153, 155, 158, 160, 161, 162, 167, 168, 171, 172, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 223, 226, 227, 228, 229, 230, 232, 233, 240, 243, 246, 252, 253, 254, 256, 258, 260, 263, 265, 268, 269, 273, 274, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 307, 308, 312, 317, 319, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 355, 364, 365, 370, 375, 376, 377, 380, 394, 423, 424, 425, 429, 434, 442, 443, 483, 490, 496, 500, 505, 507, 518, 519, 524, 550, 551, 563, 568, 570, 575, 591, 592, 593, 596, 598, 599, 602, 614, 625, 635, 636, 638, 639, 641, 645, 648, 649, 653, 654, 656, 661, 667, 695, 697, 721, 722, 723, 725, 728, 733, 734, 738, 761, 764, 770, 779, 784, 785, 786, 787, 788, 789, 790, 799, 802, 805, 811, 812, 813, 814, 816, 817, 821, 834, 836, 838, 840, 843, 845, 849, 852, 853, 859, 860, 862, 864, 867, 868, 871, 872, 873, 874, 875, 879, 881, 884, 886, 887, 888, 889, 890, 891, 892, 894, 896, 898, 899, 920, 921, 931, 937, 941, 946, 950, 956], "object": [14, 22, 30, 35, 36, 44, 45, 53, 56, 57, 58, 59, 60, 62, 73, 80, 81, 82, 87, 90, 105, 121, 126, 128, 130, 131, 136, 139, 140, 141, 158, 167, 170, 172, 177, 181, 183, 186, 187, 188, 191, 192, 193, 196, 197, 198, 201, 207, 208, 215, 216, 217, 218, 219, 223, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 240, 244, 247, 248, 252, 256, 263, 269, 270, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 312, 316, 318, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 351, 352, 355, 357, 358, 359, 362, 364, 365, 366, 370, 371, 373, 374, 378, 379, 380, 382, 385, 386, 387, 388, 389, 392, 394, 395, 408, 411, 413, 418, 422, 423, 426, 427, 428, 429, 430, 434, 439, 440, 441, 443, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 508, 512, 517, 524, 525, 527, 529, 534, 545, 547, 548, 549, 550, 551, 552, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 583, 584, 587, 588, 591, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 610, 612, 613, 614, 618, 625, 632, 633, 635, 636, 637, 638, 639, 647, 650, 651, 652, 653, 656, 664, 666, 667, 668, 670, 676, 677, 684, 689, 693, 694, 696, 700, 701, 702, 705, 711, 718, 719, 733, 734, 748, 749, 752, 761, 769, 770, 776, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 806, 807, 808, 813, 814, 815, 816, 817, 818, 819, 821, 823, 833, 834, 835, 836, 841, 844, 845, 847, 849, 850, 852, 853, 856, 857, 860, 861, 862, 863, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 888, 889, 890, 891, 892, 893, 896, 898, 903, 904, 927, 930, 938, 939, 956], "arrai": [14, 26, 29, 37, 57, 90, 97, 98, 101, 117, 123, 124, 142, 162, 163, 166, 167, 168, 170, 172, 175, 177, 182, 184, 186, 191, 192, 195, 197, 201, 207, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 237, 243, 245, 250, 251, 253, 255, 259, 260, 263, 264, 265, 268, 269, 270, 277, 281, 282, 283, 285, 286, 287, 288, 290, 293, 300, 306, 307, 308, 310, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 353, 354, 365, 366, 372, 374, 380, 381, 382, 389, 393, 398, 407, 417, 418, 420, 421, 431, 434, 438, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 507, 509, 511, 512, 517, 518, 519, 521, 522, 523, 524, 525, 526, 538, 539, 541, 543, 544, 545, 547, 548, 549, 550, 551, 567, 576, 589, 592, 596, 601, 612, 613, 615, 618, 619, 620, 627, 630, 631, 633, 635, 636, 637, 639, 640, 641, 643, 644, 647, 650, 651, 652, 653, 657, 660, 661, 662, 663, 664, 665, 671, 675, 676, 677, 679, 680, 689, 695, 697, 698, 707, 714, 717, 720, 723, 726, 728, 731, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 757, 760, 762, 764, 765, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 798, 801, 802, 804, 805, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 825, 827, 833, 834, 835, 838, 839, 840, 851, 852, 853, 855, 856, 857, 860, 866, 867, 868, 869, 870, 872, 873, 875, 876, 879, 882, 883, 886, 888, 889, 890, 891, 892, 894, 896, 897, 898, 899, 900, 906, 926, 929, 934], "evokedarrai": [14, 29, 40, 41, 42, 44, 47, 110, 127, 136, 209, 212, 215, 223, 250, 260, 283, 290, 300, 319, 332, 333, 551, 609, 610, 700, 702, 790], "epochsarrai": [14, 30, 215, 250, 280, 281, 300, 326, 331, 334, 430, 551, 696, 787], "rawarrai": [14, 45, 90, 92, 94, 97, 102, 109, 141, 185, 215, 217, 232, 235, 250, 283, 287, 294, 303, 319, 332, 334, 571, 790], "create_info": [14, 35, 40, 41, 45, 90, 92, 97, 141, 153, 185, 215, 217, 250, 286, 290, 301, 332, 334, 336, 483, 490, 551, 702, 787, 790], "export": [14, 50, 56, 67, 139, 142, 166, 173, 174, 175, 181, 191, 194, 198, 216, 217, 247, 287, 293, 294, 297, 302, 303, 305, 306, 308, 325, 331, 332, 333, 334, 338, 339, 342, 344, 345, 346, 347, 405, 407, 550, 551, 566, 576, 698, 784, 786, 787, 788, 789, 790, 939, 941, 948, 951, 956], "export_epoch": [14, 294, 302], "export_evok": [14, 294, 302], "export_evokeds_mff": [14, 294, 302, 333, 334, 514], "export_raw": [14, 294, 302, 303, 305, 306, 566], "dataset": [14, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 271, 272, 273, 274, 277, 279, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 300, 301, 302, 306, 307, 308, 309, 312, 318, 320, 321, 323, 325, 328, 329, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 364, 365, 370, 380, 396, 414, 422, 423, 424, 425, 427, 428, 430, 432, 439, 440, 441, 483, 486, 490, 493, 500, 503, 512, 514, 515, 524, 526, 527, 540, 545, 547, 548, 550, 551, 561, 562, 564, 576, 592, 593, 594, 598, 599, 602, 603, 606, 609, 610, 614, 619, 620, 633, 636, 649, 650, 654, 663, 671, 679, 700, 701, 702, 703, 709, 716, 732, 769, 771, 772, 774, 775, 784, 786, 788, 789, 808, 819, 834, 852, 860, 864, 869, 876, 898, 904, 927, 955, 956], "fetch_dataset": [14, 294, 462, 955], "has_dataset": [14, 294, 456, 955], "brainstorm": [14, 22, 28, 32, 53, 107, 108, 110, 136, 146, 191, 197, 213, 214, 220, 221, 277, 279, 285, 286, 320, 325, 328, 329, 331, 333, 334, 336, 342, 370, 422, 423, 424, 425, 428, 430, 432, 503, 524, 526, 550, 564, 592, 593, 598, 599, 602, 603, 614, 633, 649, 663, 671, 703, 709, 716, 732, 834, 852, 864, 876, 904, 955, 956], "bst_auditori": [14, 107, 108, 218, 955], "data_path": [14, 26, 27, 29, 31, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 251, 252, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 283, 285, 302, 306, 308, 309, 317, 320, 331, 332, 333, 334, 341, 456, 550, 551, 955], "bst_rest": [14, 317, 955], "bst_raw": [14, 26, 146, 317, 955], "eegbci": [14, 34, 35, 139, 185, 197, 232, 290, 955], "load_data": [14, 26, 29, 30, 34, 35, 38, 47, 60, 68, 97, 98, 101, 102, 103, 107, 108, 109, 110, 126, 136, 139, 140, 142, 162, 172, 177, 185, 192, 194, 198, 208, 212, 218, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 243, 244, 245, 246, 269, 279, 284, 290, 291, 293, 317, 320, 331, 332, 333, 334, 550, 551, 955], "standard": [14, 30, 34, 54, 60, 67, 70, 72, 97, 101, 109, 121, 136, 148, 161, 167, 175, 176, 177, 181, 185, 186, 195, 196, 197, 208, 218, 222, 223, 227, 229, 232, 235, 243, 250, 256, 265, 269, 277, 280, 282, 283, 284, 285, 287, 291, 293, 294, 301, 302, 303, 307, 312, 316, 317, 318, 319, 320, 323, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 354, 380, 382, 391, 396, 398, 459, 483, 490, 492, 503, 516, 517, 532, 536, 539, 550, 551, 559, 563, 566, 576, 581, 603, 619, 620, 630, 635, 636, 660, 689, 697, 704, 728, 733, 766, 769, 784, 786, 787, 788, 789, 790, 798, 799, 802, 812, 813, 816, 834, 845, 853, 854, 860, 861, 867, 868, 870, 875, 876, 879, 881, 888, 891, 894, 896, 897, 898, 900, 936, 941, 955], "fetch_aparc_sub_parcel": [14, 154, 955], "fetch_fsaverag": [14, 70, 153, 161, 185, 206, 217, 287, 317], "fetch_hcp_mmp_parcel": [14, 154, 207, 284, 291, 955], "fetch_infant_templ": [14, 183, 185, 293, 317], "fetch_phantom": [14, 209, 294, 503, 955], "fnirs_motor": [14, 102, 197, 238, 294, 317, 955], "hf_sef": [14, 27, 197, 294, 317, 955], "kiloword": [14, 128, 169, 197, 243, 256, 955], "limo": [14, 28, 32, 53, 197, 277, 290, 332, 333, 334, 422, 769, 860, 869, 955, 956], "misc": [14, 90, 92, 106, 107, 108, 142, 161, 163, 175, 195, 197, 208, 212, 215, 216, 218, 219, 240, 243, 250, 282, 287, 290, 291, 293, 294, 297, 304, 317, 331, 332, 333, 334, 336, 341, 379, 395, 415, 443, 516, 550, 551, 559, 561, 563, 566, 568, 574, 579, 582, 633, 784, 786, 787, 788, 789, 790, 860, 866, 870, 872, 874, 889, 955], "mtrf": [14, 45, 197, 222, 277, 284, 489, 955], "multimod": [14, 88, 163, 197, 277, 294, 939, 955], "opm": [14, 28, 32, 53, 132, 133, 191, 197, 241, 242, 277, 294, 306, 319, 320, 328, 329, 331, 333, 334, 336, 342, 370, 423, 427, 428, 433, 503, 524, 526, 550, 573, 593, 598, 599, 602, 603, 609, 614, 630, 633, 635, 650, 690, 703, 732, 789, 828, 834, 852, 861, 864, 904, 955, 956], "sleep_physionet": [14, 163, 287, 317, 955], "ag": [14, 30, 140, 163, 216, 277, 287, 317, 331, 332, 333, 334, 336, 459, 476, 550, 551, 552, 749], "fetch_data": [14, 163, 287, 317, 955], "temazepam": [14, 287, 317, 475, 955], "sampl": [14, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 92, 95, 96, 98, 99, 100, 103, 105, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 244, 245, 246, 250, 251, 252, 255, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 273, 274, 277, 281, 283, 284, 285, 286, 287, 288, 290, 294, 300, 301, 303, 306, 307, 309, 316, 319, 320, 321, 323, 324, 325, 326, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 363, 386, 423, 429, 431, 443, 456, 485, 486, 487, 488, 489, 493, 494, 495, 496, 497, 498, 500, 504, 507, 509, 511, 512, 518, 519, 520, 521, 522, 524, 525, 548, 549, 550, 551, 559, 566, 574, 578, 596, 598, 606, 612, 613, 627, 631, 633, 636, 638, 641, 650, 653, 654, 679, 685, 689, 696, 697, 698, 711, 713, 718, 734, 739, 740, 741, 742, 743, 744, 745, 746, 749, 750, 751, 756, 764, 766, 770, 771, 772, 773, 774, 775, 776, 777, 778, 784, 785, 787, 788, 791, 792, 793, 794, 795, 796, 797, 801, 802, 804, 805, 809, 810, 812, 813, 814, 815, 816, 832, 834, 866, 868, 869, 877, 889, 894, 899, 900, 902, 926, 936, 937, 949, 956], "somato": [14, 26, 58, 59, 60, 72, 88, 140, 197, 269, 294, 317, 955], "spm_face": [14, 33, 151, 197, 243, 317, 955], "ucl_opm_auditori": [14, 239, 317, 955], "visual_92_categori": [14, 36, 197, 283, 317, 955], "phantom_kit": [14, 197, 212, 308, 317, 955], "phantom_4dbti": [14, 197, 211, 285, 294, 317, 955], "phantom_kernel": [14, 29, 197, 317, 955], "refmeg_nois": [14, 101, 197, 294, 317, 955], "ssvep": [14, 94, 191, 196, 197, 271, 272, 294, 331, 336, 380, 396, 512, 561, 633, 786, 898, 955, 956], "erp_cor": [14, 170, 197, 317, 955], "epilepsy_ecog": [14, 162, 197, 294], "eyelink": [14, 149, 240, 307, 309, 312, 320, 570, 658, 955], "visual": [14, 29, 33, 34, 39, 40, 41, 42, 58, 59, 61, 62, 67, 68, 71, 82, 83, 85, 87, 88, 96, 98, 100, 106, 113, 121, 128, 131, 132, 133, 134, 140, 142, 143, 146, 147, 155, 156, 158, 160, 161, 163, 167, 169, 171, 173, 174, 177, 178, 179, 180, 181, 186, 188, 192, 194, 197, 198, 201, 204, 205, 209, 213, 214, 218, 219, 223, 226, 228, 229, 230, 235, 237, 240, 241, 242, 243, 244, 245, 246, 256, 257, 259, 269, 270, 274, 276, 277, 282, 283, 284, 286, 287, 288, 291, 292, 293, 296, 297, 298, 299, 300, 303, 306, 318, 319, 320, 321, 323, 326, 329, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 375, 376, 377, 381, 410, 411, 412, 413, 418, 420, 421, 429, 432, 433, 489, 507, 510, 512, 524, 526, 536, 550, 551, 566, 590, 594, 602, 603, 613, 615, 617, 631, 633, 636, 640, 656, 659, 671, 679, 695, 697, 698, 701, 703, 706, 709, 711, 724, 733, 736, 737, 771, 776, 784, 786, 787, 788, 802, 812, 813, 815, 816, 817, 818, 834, 836, 840, 853, 859, 860, 866, 867, 869, 870, 871, 874, 877, 878, 879, 880, 881, 882, 883, 886, 887, 889, 903, 920, 921, 936, 940, 941, 942, 943, 945, 946, 949, 952, 956], "viz": [14, 23, 27, 29, 30, 31, 33, 45, 50, 53, 57, 61, 64, 66, 68, 72, 73, 77, 78, 83, 85, 86, 97, 106, 107, 114, 119, 120, 128, 136, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 158, 159, 161, 162, 163, 167, 168, 169, 170, 176, 177, 181, 182, 183, 184, 185, 186, 192, 196, 197, 203, 204, 206, 207, 208, 209, 210, 211, 212, 217, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 244, 260, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 318, 320, 329, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 377, 386, 397, 550, 551, 636, 693, 701, 711, 716, 784, 936, 939, 941, 955, 956], "brain": [14, 30, 31, 33, 34, 36, 37, 41, 45, 47, 48, 50, 52, 53, 54, 55, 57, 58, 59, 61, 64, 66, 67, 68, 69, 70, 72, 80, 84, 85, 87, 97, 108, 114, 121, 131, 136, 142, 150, 154, 156, 161, 172, 177, 181, 182, 184, 188, 196, 201, 202, 203, 204, 205, 207, 208, 210, 215, 216, 217, 218, 223, 226, 231, 232, 234, 235, 252, 255, 263, 264, 265, 270, 277, 281, 282, 283, 288, 290, 291, 292, 293, 294, 299, 302, 303, 304, 305, 306, 307, 308, 309, 312, 316, 317, 319, 320, 322, 323, 329, 331, 332, 333, 334, 336, 338, 339, 342, 343, 344, 345, 346, 347, 357, 364, 365, 371, 399, 429, 442, 450, 483, 489, 491, 517, 522, 535, 548, 550, 551, 561, 572, 590, 594, 599, 602, 603, 617, 623, 633, 634, 637, 641, 652, 667, 668, 670, 693, 701, 711, 716, 721, 733, 749, 773, 784, 786, 787, 788, 789, 790, 844, 847, 850, 852, 854, 855, 858, 864, 871, 894, 895, 899, 900, 904, 906, 936, 941, 943, 948, 949, 954, 955, 956], "clickableimag": [14, 142, 955], "evokedfield": [14, 333, 334, 871, 955], "figure3d": [14, 309, 318, 329, 333, 334, 338, 339, 341, 342, 344, 345, 346, 347, 836, 844, 852, 864, 871, 894, 895, 899, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 955], "add_background_imag": [14, 955], "centers_to_edg": [14, 141, 291], "compare_fiff": [14, 955], "circular_layout": [14, 73], "iter_topographi": [14, 159, 287, 300], "mne_analyze_colormap": [14, 955], "plot_bem": [14, 184, 186, 282, 285, 290, 291, 300, 320, 377, 852, 936], "plot_brain_colorbar": [14, 273, 288], "plot_bridged_electrod": [14, 97, 303], "plot_chpi_snr": [14, 236, 294], "plot_cov": [14, 29, 68, 203, 285, 288], "plot_channel_labels_circl": [14, 161, 294], "plot_ch_adjac": [14, 260, 303, 386, 397], "plot_csd": [14, 955], "plot_dipole_amplitud": [14, 61, 66, 77, 85, 86], "plot_dipole_loc": [14, 29, 61, 66, 77, 85, 86, 204, 209, 211, 212, 281, 283, 288, 290, 291, 303], "plot_drop_log": [14, 177, 228, 238, 280, 293, 300, 302, 331, 332], "plot_epoch": [14, 279, 281, 283, 287, 290, 292, 294, 299, 309, 905, 955], "plot_epochs_psd_topomap": [14, 291, 306, 955], "plot_ev": [14, 30, 33, 163, 192, 238, 244, 290, 291, 300, 301, 331, 332, 866], "plot_evok": [14, 281, 284, 293, 298, 299, 303, 308, 955], "plot_evoked_imag": [14, 128, 285, 303], "plot_evoked_topo": [14, 158, 176, 238, 279, 281, 282, 283, 284, 286, 290, 293, 303, 305, 308], "plot_evoked_topomap": [14, 282, 283, 284, 290, 291, 292, 300, 303, 304, 308, 955], "plot_evoked_joint": [14, 284, 286, 294, 955], "plot_evoked_field": [14, 274, 287, 290, 308, 901], "plot_evoked_whit": [14, 209, 284, 291, 333, 334, 870], "plot_filt": [14, 223, 229, 230, 283, 291, 292, 304, 305, 483, 490, 884, 955], "plot_head_posit": [14, 106, 107, 236, 237, 283, 285], "plot_ideal_filt": [14, 229, 283, 877], "plot_compare_evok": [14, 27, 30, 128, 167, 168, 169, 170, 176, 177, 192, 238, 260, 273, 282, 284, 285, 287, 288, 291, 292, 293, 294, 303, 304, 308, 331, 332, 867, 939], "plot_ica_sourc": [14, 280, 288, 905, 955], "plot_ica_compon": [14, 290, 303, 305, 308, 636, 955], "plot_ica_properti": [14, 282, 293, 955], "plot_ica_scor": [14, 280, 294, 955], "plot_ica_overlai": [14, 292, 304, 955], "plot_epochs_imag": [14, 114, 144, 279, 281, 282, 284, 288, 290, 292, 305, 636, 879, 881], "plot_layout": [14, 281, 284, 331, 332, 333, 334, 336, 550, 551, 892, 955], "plot_montag": [14, 284, 293, 955], "plot_projs_topomap": [14, 166, 168, 175, 234, 246, 281, 283, 286, 290, 301, 308, 331, 332, 333, 334, 550, 551, 887, 955], "plot_projs_joint": [14, 234, 303], "plot_raw": [14, 197, 281, 282, 284, 292, 294, 299, 308, 331, 332, 333, 334, 336, 550, 551, 892, 905, 955], "plot_raw_psd": [14, 283, 284, 301, 955], "plot_regression_weight": [14, 304, 955], "plot_sensor": [14, 94, 168, 177, 196, 208, 217, 246, 273, 281, 282, 283, 284, 286, 290, 294, 306, 307, 331, 332, 333, 334, 336, 550, 551], "plot_snr_estim": [14, 83, 286, 291], "plot_source_estim": [14, 87, 282, 284, 288, 291, 292, 293, 308, 834, 901], "link_brain": [14, 290, 901, 955], "plot_volume_source_estim": [14, 286, 288, 291, 294, 308, 955], "plot_vector_source_estim": [14, 87, 290, 291, 901], "plot_sparse_source_estim": [14, 57, 61, 66, 72, 85, 119, 291, 294, 302, 901], "plot_tfr_topomap": [14, 290, 304, 306, 308, 955], "plot_topo_image_epoch": [14, 281, 287, 955], "plot_topomap": [14, 26, 41, 42, 44, 45, 47, 68, 97, 98, 106, 113, 127, 136, 167, 168, 170, 176, 177, 192, 196, 202, 203, 218, 226, 234, 238, 246, 260, 268, 269, 270, 274, 279, 281, 284, 285, 287, 290, 291, 293, 294, 299, 300, 303, 304, 306, 308, 328, 331, 332, 333, 334, 340, 550, 551, 636, 784, 786, 787, 789, 790, 856, 868, 873, 881, 955], "plot_align": [14, 29, 31, 50, 78, 107, 136, 142, 145, 151, 152, 153, 161, 162, 182, 183, 184, 185, 196, 204, 208, 209, 210, 211, 212, 284, 285, 286, 288, 290, 291, 292, 293, 294, 302, 303, 308, 316, 320, 331, 332, 333, 334, 336, 377, 550, 551, 854, 892, 901, 906, 936], "snapshot_brain_montag": [14, 142, 162, 283, 293, 294, 901], "plot_arrowmap": [14, 146, 176, 286, 303, 304], "set_3d_backend": [14, 291, 294, 920, 941, 955], "get_3d_backend": [14, 294], "use_3d_backend": [14, 287, 955], "set_3d_opt": [14, 291, 303, 941, 955], "set_3d_view": [14, 29, 31, 50, 78, 107, 136, 142, 145, 152, 153, 162, 182, 183, 184, 185, 186, 196, 204, 209, 212, 292, 308], "set_3d_titl": [14, 151, 153, 176, 292], "create_3d_figur": [14, 152, 182, 186, 204, 837], "close_3d_figur": [14, 955], "close_all_3d_figur": [14, 955], "get_brain_class": [14, 154, 181], "set_browser_backend": [14, 294, 302, 331, 332, 550, 551, 636, 866, 883, 889, 921, 955], "get_browser_backend": [14, 294], "use_browser_backend": [14, 177, 227, 230, 232, 233, 234, 235, 294, 331, 332, 550, 551, 636, 866, 883, 889], "ui": [14, 274, 302, 308, 333, 334, 834, 836, 875, 914], "event": [14, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 53, 54, 58, 59, 60, 68, 71, 72, 75, 88, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 114, 117, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 144, 148, 149, 155, 158, 161, 162, 166, 167, 168, 169, 171, 172, 175, 178, 179, 180, 188, 191, 195, 199, 200, 203, 206, 208, 209, 210, 211, 212, 215, 216, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 243, 246, 247, 248, 250, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 316, 317, 319, 320, 323, 324, 325, 326, 331, 332, 333, 334, 336, 341, 342, 350, 354, 382, 422, 423, 430, 431, 432, 438, 464, 484, 499, 504, 506, 507, 512, 524, 525, 540, 550, 551, 559, 566, 567, 568, 570, 574, 576, 582, 594, 596, 601, 626, 627, 631, 633, 636, 637, 638, 639, 644, 648, 649, 653, 654, 661, 662, 663, 664, 665, 685, 695, 696, 697, 698, 701, 711, 734, 763, 770, 784, 786, 787, 788, 834, 835, 836, 860, 866, 867, 869, 871, 875, 883, 889, 897, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 926, 936, 939, 955, 956], "preprocess": [14, 26, 29, 30, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 126, 139, 149, 163, 170, 172, 198, 210, 215, 218, 219, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 240, 242, 246, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 312, 317, 318, 319, 320, 325, 331, 332, 333, 334, 336, 341, 422, 483, 487, 490, 492, 504, 512, 524, 550, 551, 571, 573, 581, 630, 633, 696, 789, 834, 856, 860, 866, 869, 874, 878, 879, 880, 881, 882, 883, 889, 936, 939, 949, 955, 956], "compute_proj_epoch": [14, 218, 233, 234, 287, 308, 425, 426], "compute_proj_evok": [14, 26, 233, 308, 424, 426], "compute_proj_raw": [14, 233, 234, 287, 308, 320, 424, 425], "layout": [14, 36, 38, 39, 41, 45, 53, 65, 67, 73, 84, 97, 98, 99, 100, 117, 127, 134, 141, 142, 147, 150, 156, 158, 159, 168, 170, 172, 176, 177, 185, 186, 198, 202, 207, 209, 212, 216, 222, 229, 234, 237, 238, 239, 252, 255, 257, 258, 260, 269, 281, 283, 284, 287, 290, 292, 294, 297, 299, 301, 303, 308, 319, 320, 331, 332, 333, 334, 336, 340, 387, 389, 391, 394, 395, 396, 406, 443, 550, 551, 558, 562, 564, 575, 576, 599, 784, 786, 787, 789, 790, 802, 812, 835, 840, 849, 852, 860, 874, 885, 888, 897, 903, 904, 956], "digmontag": [14, 196, 208, 283, 284, 288, 291, 292, 293, 294, 301, 303, 306, 319, 331, 332, 333, 334, 336, 383, 384, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 434, 535, 550, 551, 563, 666, 668, 886, 906, 955], "compute_native_head_t": [14, 161, 185, 208, 291, 380], "fix_mag_coil_typ": [14, 291, 550, 955], "read_polhemus_fastscan": [14, 288, 292, 303, 405, 955], "get_builtin_montag": [14, 153, 196, 284, 303, 331, 332, 333, 334, 336, 396, 535, 550, 551], "make_dig_montag": [14, 288, 303, 305, 320, 331, 332, 333, 334, 336, 380, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 550, 551, 575, 955], "read_dig_polhemus_isotrak": [14, 215, 288, 303, 320, 380, 393, 396, 399, 400, 401, 402, 403, 404, 407, 955], "read_dig_captrak": [14, 291, 320, 380, 393, 396, 400, 401, 402, 403, 404, 405, 955], "read_dig_dat": [14, 290, 320, 380, 396, 399, 401, 402, 403, 404, 405, 563, 955], "read_dig_egi": [14, 288, 320, 380, 393, 396, 399, 400, 402, 403, 404, 405, 955], "read_dig_fif": [14, 185, 288, 320, 380, 393, 396, 399, 400, 401, 403, 404, 405], "read_dig_hpt": [14, 290, 303, 320, 380, 396, 399, 400, 401, 402, 404, 955], "read_dig_localit": [14, 294, 380, 393, 399, 400, 401, 402, 403, 405, 955], "make_standard_montag": [14, 34, 45, 97, 109, 153, 185, 196, 217, 270, 288, 290, 302, 331, 332, 333, 334, 336, 391, 398, 550, 551, 563, 575], "read_custom_montag": [14, 208, 217, 288, 290, 291, 293, 303, 331, 332, 333, 334, 336, 396, 550, 551], "compute_dev_head_t": [14, 288, 393, 955], "read_layout": [14, 142, 196, 297, 306, 381], "find_layout": [14, 168, 196, 281, 283, 290, 299, 955], "make_eeg_layout": [14, 196, 389, 395], "make_grid_layout": [14, 389, 394, 955], "find_ch_adjac": [14, 255, 256, 257, 260, 291, 293, 305, 397, 764, 771, 772, 774, 775, 857], "get_builtin_ch_adjac": [14, 255, 386, 397, 857], "read_ch_adjac": [14, 255, 291, 303, 308, 386, 390, 764, 857, 955], "equalize_channel": [14, 290, 409, 955], "unify_bad_channel": [14, 955], "rename_channel": [14, 94, 101, 139, 155, 166, 175, 177, 185, 211, 238, 243, 290, 291, 293, 300, 301, 307, 331, 332, 333, 334, 336, 380, 409, 550, 551, 562, 575], "generate_2d_layout": [14, 394, 395, 835, 955], "make_1020_channel_select": [14, 94, 155, 256, 286, 306], "combine_channel": [14, 177, 291, 303, 307, 409], "xdawn": [14, 43, 46, 53, 104, 111, 277, 279, 282, 284, 290, 328, 331, 333, 334, 336, 428, 443, 483, 487, 490, 498, 550, 633, 698, 867, 956], "eogregress": [14, 100, 231, 239, 304, 306, 681, 891], "annotate_amplitud": [14, 302, 660, 671, 955], "annotate_break": [14, 228, 294], "annotate_mov": [14, 107, 236, 290, 291, 302], "annotate_muscle_zscor": [14, 108, 291, 302], "annotate_nan": [14, 302, 955], "compute_average_dev_head_t": [14, 107, 290, 640], "compute_current_source_dens": [14, 98, 290, 291, 303, 728], "compute_bridged_electrod": [14, 97, 303, 670, 856], "compute_fine_calibr": [14, 292, 955], "compute_maxwell_basi": [14, 293, 306, 955], "compute_proj_ecg": [14, 172, 233, 234, 284, 293, 316, 653, 661], "compute_proj_eog": [14, 218, 233, 234, 284, 287, 293, 316, 654, 662], "compute_proj_hfc": [14, 29, 239, 306], "cortical_signal_suppress": [14, 95, 294], "create_ecg_epoch": [14, 226, 228, 232, 234, 281, 282, 283, 285, 287, 648, 661], "create_eog_epoch": [14, 33, 198, 226, 228, 231, 232, 234, 283, 284, 286, 293, 318, 649, 662], "find_bad_channels_maxwel": [14, 237, 290, 291, 294, 303, 671], "find_ecg_ev": [14, 226, 228, 234, 245, 287, 289, 292, 293, 648, 653], "find_eog_ev": [14, 99, 226, 228, 245, 284, 286, 293, 318, 325, 649, 654], "fix_stim_artifact": [14, 26, 283, 292], "ica_find_ecg_ev": [14, 955], "ica_find_eog_ev": [14, 955], "infomax": [14, 103, 232, 277, 279, 282, 287, 290, 300, 636, 939, 955], "interpolate_bridged_electrod": [14, 97, 303, 304], "equalize_bad": [14, 293, 955], "maxwell_filt": [14, 106, 210, 236, 237, 280, 281, 282, 283, 285, 286, 291, 293, 303, 306, 308, 504, 646, 660, 672, 878, 936], "maxwell_filter_prepare_emptyroom": [14, 303, 955], "oversampled_temporal_project": [14, 110, 285], "peak_find": [14, 285, 287, 318, 955], "read_ica": [14, 232, 636], "read_eog_regress": [14, 955], "realign_raw": [14, 240, 292, 294, 308], "regress_artifact": [14, 291, 304, 306, 955], "corrmap": [14, 232, 279, 290, 307], "read_ica_eeglab": [14, 290, 292, 293, 955], "read_fine_calibr": [14, 955], "write_fine_calibr": 14, "optical_dens": [14, 102, 238, 290, 294], "beer_lambert_law": [14, 238, 290, 294], "source_detector_dist": [14, 238, 290], "short_channel": [14, 290, 955], "scalp_coupling_index": [14, 238, 290, 291], "temporal_derivative_distribution_repair": [14, 102, 291, 303], "project_sensors_onto_brain": [14, 294, 306, 955], "make_montage_volum": [14, 306, 955], "warp_montag": [14, 306, 955], "calibr": [14, 215, 219, 237, 277, 280, 283, 292, 301, 307, 336, 503, 504, 646, 647, 658, 660, 671, 682, 687], "read_eyelink_calibr": [14, 240, 307, 656], "set_channel_types_eyetrack": [14, 219], "interpolate_blink": [14, 149, 240, 307], "add_reference_channel": [14, 235, 279, 282, 292, 303, 308, 331, 332, 333, 334, 336, 550, 551, 784, 786, 787, 788, 789, 790], "set_bipolar_refer": [14, 94, 235, 282, 284, 287, 292, 293, 305, 331, 332, 333, 334, 550, 551, 728], "set_eeg_refer": [14, 26, 55, 94, 98, 120, 121, 177, 185, 188, 193, 208, 216, 231, 233, 235, 251, 270, 282, 284, 285, 288, 291, 304, 331, 332, 333, 334, 550, 551, 635, 725, 748, 939], "construct_iir_filt": [14, 229, 282, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551, 648, 649], "create_filt": [14, 229, 230, 283, 331, 332, 333, 334, 521, 522, 550, 551, 877], "estimate_ringing_sampl": [14, 955], "filter_data": [14, 229, 282, 283, 286, 331, 332, 333, 334, 494, 518, 519, 522, 550, 551, 955], "notch_filt": [14, 26, 31, 108, 162, 193, 218, 230, 237, 239, 291, 306, 331, 332, 333, 334, 521, 550, 551, 955], "compute_chpi_amplitud": [14, 236, 290, 291, 411, 412], "compute_chpi_snr": [14, 236, 294, 307, 410, 859], "compute_chpi_loc": [14, 236, 237, 290, 293, 410, 412, 413], "compute_head_po": [14, 107, 236, 237, 290, 308, 411, 414, 671], "extract_chpi_locs_ctf": [14, 107, 290, 411, 413], "extract_chpi_locs_kit": [14, 293, 955], "filter_chpi": [14, 237, 284, 290, 291, 671], "get_active_chpi": [14, 237, 304], "get_chpi_info": [14, 236, 294], "head_pos_to_trans_rot_t": [14, 420, 421, 735, 736, 737, 749, 955], "read_head_po": [14, 106, 236, 237, 411, 413, 419, 421, 504, 660, 671, 735, 736, 737, 749], "write_head_po": [14, 236, 411, 413, 419, 420], "quat_to_rot": [14, 827], "rot_to_quat": [14, 825], "read_ras_mni_t": [14, 208], "annot": [14, 34, 35, 53, 64, 67, 70, 73, 95, 102, 104, 109, 111, 117, 121, 122, 139, 140, 149, 154, 155, 161, 162, 170, 172, 177, 186, 191, 192, 197, 199, 201, 207, 216, 217, 218, 219, 222, 226, 232, 235, 246, 247, 248, 251, 273, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 300, 302, 303, 304, 306, 307, 308, 317, 318, 319, 320, 326, 331, 332, 333, 334, 336, 350, 413, 414, 428, 432, 437, 458, 512, 549, 550, 551, 552, 559, 564, 566, 570, 572, 581, 595, 636, 638, 639, 640, 641, 642, 643, 653, 654, 657, 660, 661, 662, 671, 672, 685, 689, 698, 706, 722, 725, 789, 834, 852, 878, 881, 889, 890, 904, 905, 931, 955, 956], "acqparserfif": [14, 88, 282, 336, 550, 955], "concatenate_ev": [14, 955], "count_ev": [14, 306, 955], "find_ev": [14, 26, 29, 31, 33, 36, 58, 59, 60, 68, 71, 72, 75, 98, 99, 100, 106, 110, 117, 120, 122, 126, 134, 135, 137, 140, 166, 167, 168, 175, 178, 188, 192, 194, 197, 198, 203, 206, 208, 209, 211, 218, 223, 227, 230, 231, 232, 234, 239, 240, 244, 251, 252, 257, 268, 269, 282, 284, 285, 286, 298, 301, 302, 316, 319, 320, 336, 509, 525, 559, 566, 574, 582, 596, 631, 685, 698, 939], "find_stim_step": [14, 298, 524, 955], "make_fixed_length_ev": [14, 38, 47, 192, 194, 244, 250, 281, 285, 287, 307, 319, 428, 609], "make_fixed_length_epoch": [14, 172, 290, 291, 292, 293, 294, 326], "merge_ev": [14, 167, 244, 281, 423], "pick_ev": [14, 168, 244], "read_annot": [14, 163, 245, 285, 286, 287, 288, 290, 308, 834], "concatenate_epoch": [14, 218, 282, 283, 284, 286, 291, 294], "events_from_annot": [14, 34, 35, 139, 149, 155, 161, 162, 163, 170, 194, 238, 270, 286, 287, 288, 291, 325, 350, 559, 566], "annotations_from_ev": [14, 194, 290, 325, 512], "count_annot": [14, 307, 955], "define_target_ev": [14, 96, 111, 155, 956], "match_event_nam": [14, 302, 955], "shift_time_ev": [14, 287], "average_mov": [14, 106, 237, 280, 291, 671], "combine_event_id": [14, 331, 955], "equalize_epoch_count": [14, 263], "make_metadata": [14, 198, 293, 308], "space": [14, 24, 29, 31, 36, 43, 46, 48, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 85, 86, 87, 95, 101, 109, 114, 117, 119, 120, 121, 122, 125, 129, 132, 133, 135, 136, 140, 142, 146, 147, 152, 157, 160, 161, 162, 166, 173, 174, 177, 181, 182, 186, 188, 192, 194, 196, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 232, 235, 241, 242, 243, 246, 250, 252, 255, 256, 260, 262, 264, 267, 268, 269, 273, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 305, 306, 307, 312, 317, 319, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 364, 365, 380, 384, 393, 398, 416, 417, 420, 424, 425, 426, 428, 429, 432, 433, 436, 439, 443, 483, 486, 487, 490, 491, 493, 497, 500, 501, 504, 512, 517, 524, 528, 537, 539, 541, 544, 545, 546, 547, 548, 550, 551, 554, 556, 559, 566, 576, 589, 590, 595, 597, 598, 602, 603, 604, 605, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 632, 633, 635, 636, 646, 647, 648, 649, 660, 666, 671, 692, 694, 698, 701, 703, 705, 706, 713, 715, 718, 720, 722, 723, 724, 732, 733, 734, 741, 744, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 760, 768, 769, 771, 772, 774, 775, 776, 779, 780, 784, 786, 787, 789, 790, 798, 820, 834, 852, 854, 860, 866, 867, 868, 869, 872, 873, 875, 878, 879, 883, 888, 889, 891, 894, 895, 896, 898, 899, 900, 904, 933, 936, 948, 956], "combine_evok": [14, 30, 33, 126, 167, 170, 175, 177, 192, 202, 218, 238, 256, 258, 274, 282, 286, 288, 291, 293, 939], "concatenate_raw": [14, 34, 35, 36, 107, 139, 218, 282, 283, 284, 294, 300, 306, 317, 331, 332, 333, 334, 430, 431, 550, 551, 660, 671], "grand_averag": [14, 175, 177, 286, 288, 290, 301], "match_channel_ord": [14, 955], "pick_channel": [14, 71, 166, 175, 177, 195, 196, 240, 257, 285, 290, 300, 302, 303, 306, 308, 328, 331, 332, 333, 334, 335, 550, 551, 630, 784, 785, 786, 787, 788, 789, 790], "pick_channels_cov": 14, "pick_channels_forward": [14, 351, 352], "pick_channels_regexp": [14, 195, 227, 232, 234, 239, 627], "pick_typ": [14, 26, 31, 33, 34, 36, 37, 39, 40, 41, 47, 48, 52, 54, 60, 75, 95, 96, 99, 101, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 146, 148, 159, 166, 175, 176, 178, 188, 195, 196, 198, 203, 209, 226, 227, 228, 230, 231, 234, 238, 239, 243, 252, 257, 258, 259, 260, 263, 265, 269, 270, 291, 298, 300, 301, 303, 306, 308, 309, 320, 331, 332, 333, 334, 550, 551, 627, 784, 786, 787, 788, 789, 790, 939], "pick_types_forward": [14, 81, 95, 119, 351, 352], "pick_info": [14, 52, 146, 161, 193, 195, 252, 286, 302], "read_vectorview_select": [14, 71, 252, 257, 293], "baselin": [14, 18, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 96, 98, 99, 100, 101, 102, 105, 106, 109, 110, 112, 113, 114, 117, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 152, 155, 158, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 188, 191, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 227, 228, 230, 231, 232, 234, 238, 239, 240, 250, 252, 256, 257, 258, 259, 260, 263, 265, 269, 270, 273, 274, 277, 282, 286, 288, 291, 292, 293, 296, 302, 303, 304, 307, 316, 319, 320, 323, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 422, 423, 428, 450, 524, 550, 551, 595, 601, 619, 620, 636, 653, 654, 678, 694, 701, 702, 769, 784, 788, 860, 876, 880, 893, 896, 927, 936, 956], "rescal": [14, 41, 90, 134, 140, 141, 286, 300, 439, 440, 441, 654, 784, 788, 896], "covari": [14, 29, 31, 34, 35, 37, 38, 41, 45, 47, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 93, 95, 107, 114, 117, 119, 120, 121, 130, 131, 134, 135, 136, 137, 140, 150, 152, 156, 175, 178, 189, 190, 191, 192, 202, 204, 205, 207, 208, 209, 210, 211, 212, 218, 223, 227, 228, 232, 252, 263, 265, 277, 281, 282, 284, 285, 286, 287, 290, 295, 296, 297, 298, 300, 301, 303, 304, 308, 317, 319, 323, 331, 332, 333, 334, 335, 336, 341, 342, 361, 364, 365, 367, 369, 385, 422, 423, 424, 426, 427, 428, 439, 440, 441, 483, 489, 490, 491, 508, 524, 526, 527, 545, 547, 548, 550, 551, 556, 591, 602, 603, 604, 605, 606, 607, 609, 610, 614, 616, 619, 620, 628, 636, 637, 692, 698, 703, 738, 748, 770, 785, 797, 834, 861, 866, 870, 874, 876, 889, 925, 955, 956], "comput": [14, 19, 21, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 48, 49, 50, 52, 53, 57, 62, 64, 69, 70, 74, 76, 78, 83, 87, 95, 98, 99, 103, 105, 107, 113, 114, 119, 120, 122, 123, 124, 125, 127, 132, 140, 141, 142, 146, 147, 148, 151, 152, 157, 160, 161, 167, 168, 171, 172, 175, 176, 177, 178, 181, 182, 183, 186, 189, 191, 192, 193, 194, 197, 198, 201, 202, 204, 207, 208, 209, 210, 211, 212, 213, 216, 218, 222, 223, 227, 228, 230, 234, 235, 237, 239, 243, 246, 250, 251, 252, 255, 256, 259, 268, 269, 270, 274, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 317, 319, 324, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 349, 351, 352, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 369, 370, 372, 383, 384, 386, 388, 393, 397, 410, 411, 412, 413, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 439, 440, 441, 450, 483, 484, 487, 488, 489, 490, 491, 495, 499, 502, 512, 517, 522, 524, 526, 527, 528, 533, 539, 541, 545, 546, 547, 548, 550, 551, 556, 558, 563, 564, 566, 589, 592, 593, 594, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 633, 634, 636, 637, 640, 643, 644, 646, 647, 648, 649, 650, 653, 660, 667, 669, 688, 690, 691, 692, 693, 698, 701, 702, 703, 705, 706, 713, 715, 718, 720, 722, 724, 726, 728, 732, 733, 734, 739, 740, 741, 742, 743, 744, 745, 746, 749, 752, 754, 755, 756, 757, 758, 759, 760, 765, 766, 767, 770, 771, 772, 774, 775, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 810, 811, 812, 813, 814, 815, 816, 817, 818, 822, 823, 828, 834, 852, 853, 854, 860, 861, 863, 864, 866, 867, 868, 875, 876, 883, 888, 889, 895, 904, 929, 936, 943, 945, 948, 949, 952], "compute_covari": [14, 29, 31, 33, 60, 68, 72, 75, 110, 120, 148, 178, 188, 203, 206, 208, 209, 211, 212, 223, 251, 281, 282, 286, 290, 296, 301, 316, 328, 428, 441, 483, 490, 491, 614, 637, 692, 832, 936], "compute_raw_covari": [14, 68, 114, 136, 188, 210, 218, 228, 281, 283, 290, 316, 328, 423, 614, 692, 832], "cov": [14, 29, 31, 37, 47, 57, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 91, 95, 110, 117, 119, 120, 121, 122, 148, 178, 198, 202, 204, 205, 207, 208, 209, 210, 211, 212, 218, 222, 223, 251, 252, 286, 287, 290, 293, 294, 309, 316, 317, 323, 328, 341, 342, 423, 428, 526, 591, 604, 626, 636, 692, 710, 738, 748, 832, 861, 925, 936, 955], "compute_whiten": [14, 287, 293, 294, 301, 955], "prepare_noise_cov": [14, 301, 439, 955], "regular": [14, 27, 29, 31, 54, 55, 56, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 80, 81, 83, 84, 85, 87, 105, 109, 117, 121, 126, 131, 134, 135, 136, 137, 148, 192, 195, 204, 205, 206, 207, 208, 218, 223, 227, 234, 237, 250, 251, 252, 255, 263, 265, 280, 281, 283, 284, 286, 290, 294, 296, 298, 301, 310, 316, 333, 334, 337, 343, 364, 365, 423, 427, 428, 439, 440, 483, 490, 491, 495, 504, 512, 526, 527, 545, 547, 548, 559, 562, 566, 574, 603, 604, 605, 606, 607, 609, 610, 611, 614, 616, 619, 620, 630, 637, 645, 647, 660, 671, 706, 761, 764, 771, 772, 774, 775, 778, 875, 876, 893, 950], "compute_rank": [14, 29, 60, 287, 291, 294, 328, 491, 861], "make_ad_hoc_cov": [14, 117, 120, 122, 252, 285, 328, 365], "mri": [14, 29, 31, 50, 52, 56, 61, 66, 67, 69, 70, 71, 76, 85, 120, 121, 136, 142, 152, 153, 161, 162, 176, 183, 184, 187, 189, 190, 191, 192, 196, 197, 202, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 243, 252, 277, 279, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 299, 300, 302, 303, 304, 309, 312, 316, 319, 328, 329, 331, 333, 334, 335, 336, 341, 342, 343, 344, 346, 347, 370, 371, 372, 375, 376, 377, 380, 384, 393, 396, 398, 402, 423, 429, 434, 435, 436, 442, 443, 457, 459, 460, 502, 517, 524, 526, 534, 535, 536, 542, 543, 544, 550, 551, 566, 584, 586, 594, 597, 598, 602, 603, 614, 667, 690, 713, 715, 720, 721, 722, 723, 727, 732, 733, 752, 779, 820, 821, 823, 824, 826, 834, 847, 852, 854, 864, 900, 904, 929, 936, 943, 946, 949, 956], "coreg": [14, 142, 161, 183, 184, 185, 186, 197, 285, 286, 287, 288, 290, 291, 292, 293, 294, 300, 302, 304, 308, 316, 320, 380, 542, 544, 852], "get_mni_fiduci": [14, 186, 288, 292, 380, 435, 852], "estimate_head_mri_t": [14, 142, 161, 294], "read_fiduci": [14, 302, 434, 955], "write_fiduci": 14, "get_montage_volume_label": [14, 161, 294, 302, 834], "create_default_subject": [14, 283, 955], "head_to_mni": [14, 955], "head_to_mri": [14, 286, 304, 305, 955], "read_lta": [14, 306, 955], "read_talxfm": [14, 161, 186], "scale_mri": [14, 183, 292, 299, 302, 434, 723], "scale_bem": [14, 302, 722, 955], "scale_label": [14, 722, 955], "scale_source_spac": [14, 722, 955], "apply_volume_registr": [14, 294, 302], "apply_volume_registration_point": [14, 306], "compute_volume_registr": [14, 294, 302, 304, 822, 823], "vertex_to_mni": [14, 63, 337, 342], "forward": [14, 29, 31, 33, 38, 48, 51, 52, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 99, 106, 117, 119, 120, 121, 122, 157, 161, 172, 181, 182, 186, 187, 190, 192, 196, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 218, 223, 226, 227, 228, 229, 231, 232, 234, 235, 251, 252, 277, 279, 281, 282, 284, 286, 287, 290, 291, 292, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 312, 317, 319, 323, 331, 332, 333, 334, 336, 339, 341, 342, 344, 345, 347, 351, 352, 353, 364, 365, 366, 367, 369, 370, 380, 384, 385, 396, 402, 433, 443, 459, 483, 490, 494, 508, 510, 511, 518, 519, 521, 522, 545, 546, 547, 548, 550, 551, 556, 566, 592, 593, 597, 598, 599, 612, 613, 614, 615, 618, 629, 634, 690, 703, 713, 724, 728, 732, 733, 735, 736, 737, 748, 749, 784, 828, 834, 852, 854, 873, 877, 902, 904, 928, 943, 952, 955, 956], "sourcespac": [14, 52, 67, 69, 71, 76, 136, 184, 185, 186, 202, 235, 283, 287, 288, 291, 301, 302, 304, 319, 320, 335, 337, 338, 339, 342, 345, 346, 347, 349, 429, 517, 537, 546, 589, 590, 598, 612, 613, 618, 623, 713, 732, 733, 734, 741, 744, 746, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 776, 779, 780, 834, 852, 854, 894, 899, 900, 933], "add_source_space_dist": [14, 290, 955], "apply_forward": [14, 184, 294, 352], "apply_forward_raw": [14, 294, 301, 351], "average_forward_solut": [14, 320, 955], "convert_forward_solut": [14, 31, 48, 73, 74, 75, 80, 81, 95, 184, 204, 251, 284, 287, 320, 598, 703, 928], "decimate_surfac": [14, 290], "dig_mri_dist": [14, 182, 288, 302, 434], "compute_depth_prior": [14, 287, 364, 365, 528, 545, 547, 548, 614, 955], "compute_orient_prior": [14, 527, 955], "restrict_forward_to_label": [14, 284, 307, 530, 955], "restrict_forward_to_stc": [14, 284, 529, 955], "make_bem_model": [14, 184, 187, 218, 279, 287, 290, 316, 344, 370, 434, 502, 533, 593, 598, 599, 691, 720, 722, 733, 929], "make_bem_solut": [14, 136, 184, 218, 279, 316, 320, 370, 434, 502, 533, 592, 598, 599, 690, 691, 720, 722, 733, 929], "make_forward_dipol": [14, 71, 202, 281, 291, 303], "make_forward_solut": [14, 31, 33, 52, 67, 76, 136, 184, 185, 208, 218, 235, 281, 285, 290, 294, 302, 316, 320, 335, 614, 703, 828], "make_field_map": [14, 33, 152, 176, 274, 284, 286, 303, 304, 333, 334, 836, 871], "make_sphere_model": [14, 29, 110, 153, 182, 209, 210, 211, 212, 235, 286, 320, 592], "morph_source_spac": [14, 52, 279, 342, 345], "sensitivity_map": [14, 48, 52, 157, 184], "setup_source_spac": [14, 50, 67, 136, 181, 184, 186, 204, 218, 287, 288, 290, 300, 316, 320, 344, 713, 733, 754, 758], "setup_volume_source_spac": [14, 50, 67, 76, 182, 184, 186, 235, 283, 284, 287, 288, 290, 291, 294, 320, 338, 339, 342, 344, 345, 346, 347, 517, 590, 713, 732], "surfac": [14, 29, 31, 37, 48, 50, 52, 53, 57, 60, 61, 62, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 87, 95, 98, 107, 117, 119, 121, 136, 142, 143, 145, 147, 152, 153, 160, 161, 162, 176, 181, 182, 183, 185, 189, 190, 191, 192, 197, 198, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 215, 217, 218, 223, 226, 235, 237, 245, 251, 252, 255, 263, 264, 265, 274, 277, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 308, 312, 317, 319, 329, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 364, 365, 372, 375, 376, 377, 403, 429, 433, 434, 457, 460, 482, 502, 517, 528, 533, 534, 539, 541, 542, 544, 545, 547, 548, 576, 588, 590, 592, 593, 594, 598, 603, 604, 605, 606, 607, 610, 612, 613, 614, 619, 620, 622, 623, 645, 646, 666, 667, 688, 691, 703, 706, 711, 713, 714, 717, 720, 722, 732, 733, 747, 748, 749, 750, 753, 755, 756, 759, 761, 779, 780, 814, 817, 820, 823, 834, 836, 852, 854, 864, 871, 894, 895, 899, 924, 928, 929, 934, 936, 941, 943, 946, 948, 949, 955, 956], "complete_surface_info": [14, 955], "read_curvatur": [14, 186], "use_coil_def": [14, 31, 136], "conductormodel": [14, 29, 31, 71, 136, 184, 209, 210, 211, 212, 319, 328, 331, 332, 333, 334, 336, 340, 372, 380, 483, 490, 526, 550, 551, 592, 593, 598, 599, 635, 636, 651, 690, 733, 784, 786, 787, 789, 790, 852, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898, 923], "fit_sphere_to_headshap": [14, 281, 308, 504, 646, 647, 660, 671], "get_fitting_dig": [14, 502], "make_watershed_bem": [14, 184, 218, 290, 291, 303, 319, 936, 955], "make_flash_bem": [14, 184, 279, 287, 303, 319, 371, 955], "make_scalp_surfac": [14, 187, 282, 283, 284, 285, 293, 294, 302, 303, 949, 955], "convert_flash_mri": [14, 303, 307, 320, 375, 955], "distance_to_bem": [14, 303, 955], "invers": [14, 31, 33, 37, 45, 47, 58, 59, 60, 64, 69, 70, 71, 72, 74, 76, 77, 80, 81, 82, 84, 85, 86, 87, 114, 117, 132, 133, 134, 135, 136, 137, 152, 175, 181, 182, 185, 186, 188, 196, 198, 201, 202, 204, 205, 206, 207, 208, 214, 215, 218, 223, 227, 233, 235, 251, 252, 263, 265, 277, 279, 283, 284, 286, 287, 290, 291, 292, 295, 296, 298, 300, 301, 303, 304, 312, 319, 323, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 364, 365, 422, 429, 435, 436, 441, 489, 497, 501, 517, 545, 546, 547, 550, 551, 589, 598, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 616, 617, 618, 619, 620, 621, 633, 636, 637, 692, 698, 701, 703, 705, 706, 713, 732, 733, 801, 834, 852, 863, 864, 893, 895, 904, 943, 949, 956], "solut": [14, 29, 31, 33, 37, 48, 49, 52, 53, 57, 58, 59, 60, 62, 64, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 95, 97, 98, 117, 119, 120, 121, 122, 132, 133, 134, 135, 136, 137, 152, 157, 182, 183, 185, 188, 191, 192, 196, 197, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 223, 227, 234, 251, 252, 263, 265, 277, 279, 284, 286, 287, 290, 291, 295, 298, 299, 300, 301, 302, 303, 304, 308, 309, 319, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 351, 352, 353, 364, 365, 366, 377, 429, 433, 441, 517, 527, 528, 545, 546, 547, 548, 550, 551, 589, 593, 597, 598, 599, 602, 603, 604, 605, 606, 607, 610, 611, 614, 617, 618, 628, 629, 633, 634, 636, 683, 690, 692, 698, 701, 703, 705, 706, 713, 728, 732, 733, 735, 736, 737, 748, 749, 834, 852, 863, 864, 879, 881, 883, 894, 895, 899, 923, 928, 941, 943, 946, 949, 952, 956], "inverseoper": [14, 294, 300, 304, 341, 603, 604, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 893], "apply_invers": [14, 31, 33, 54, 56, 64, 65, 66, 67, 70, 71, 84, 85, 87, 117, 121, 192, 203, 204, 205, 207, 208, 218, 223, 233, 251, 252, 263, 265, 284, 286, 287, 288, 290, 291, 296, 300, 301, 316, 319, 320, 604, 605, 606, 607, 609, 610, 616, 619, 620], "apply_inverse_cov": [14, 60, 68, 290, 603, 605, 606, 607], "apply_inverse_epoch": [14, 37, 54, 71, 284, 296, 304, 338, 339, 342, 345, 346, 347, 603, 604, 606, 607], "apply_inverse_raw": [14, 55, 296, 603, 604, 605, 607], "apply_inverse_tfr_epoch": [14, 304, 603, 604, 605, 606], "compute_source_psd": [14, 135, 136, 283, 286, 308, 610], "compute_source_psd_epoch": [14, 131, 133, 291, 609, 956], "compute_rank_invers": [14, 955], "estimate_snr": [14, 84, 286, 290, 342, 955], "make_inverse_oper": [14, 31, 33, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 117, 121, 136, 203, 204, 205, 208, 218, 223, 252, 287, 291, 293, 298, 316, 320, 617], "prepare_inverse_oper": [14, 301, 603, 604, 605, 606, 607, 609, 610, 619, 620, 955], "read_inverse_oper": [14, 37, 54, 55, 56, 64, 65, 70, 73, 78, 83, 87, 131, 134, 135, 137, 152, 192, 207, 251, 263, 265, 621], "source_band_induced_pow": [14, 137, 291, 297], "source_induced_pow": [14, 134, 297, 308], "write_inverse_oper": [14, 203, 302, 617], "make_inverse_resolution_matrix": [14, 73, 74, 76, 80, 81, 290], "resolution_metr": [14, 80, 81, 82, 290, 956], "get_cross_talk": [14, 74, 75, 290, 292, 304], "get_point_spread": [14, 73, 74, 76, 290, 292, 304], "mixed_norm": [14, 66, 201, 284, 286, 287, 288, 290, 291, 294, 298, 548], "tf_mixed_norm": [14, 72, 85, 284, 285, 288, 290, 293, 547], "gamma_map": [14, 61, 284, 287, 291], "make_stc_from_dipol": [14, 61, 66, 72, 85, 284], "read_beamform": [14, 286, 955], "make_lcmv": [14, 60, 75, 206, 284, 285, 286, 287, 290, 291, 306, 307, 319, 356, 358, 360, 361, 362, 363, 364, 366], "apply_lcmv": [14, 206, 284, 285, 302, 356, 358, 361, 362, 363], "apply_lcmv_epoch": [14, 206, 284, 285, 338, 339, 342, 345, 346, 347, 360, 361, 363], "apply_lcmv_raw": [14, 206, 284, 285, 360, 361, 362], "apply_lcmv_cov": [14, 60, 206, 287, 291, 360, 362, 363], "make_d": [14, 58, 59, 60, 252, 285, 286, 287, 290, 291, 292, 293, 304, 319, 356, 357, 358, 359], "apply_d": [14, 285, 292, 357, 358, 359], "apply_dics_csd": [14, 59, 60, 252, 285, 356, 358, 359, 364], "apply_dics_epoch": [14, 285, 356, 357, 359], "apply_dics_tfr_epoch": [14, 58, 305, 356, 357, 358], "rap_mus": [14, 77, 82, 283, 284, 291, 306, 369, 526, 956], "trap_mus": [14, 82, 86, 306, 367, 956], "make_lcmv_resolution_matrix": [14, 75, 290], "dipolefix": [14, 329, 526, 693, 955], "fit_dipol": [14, 29, 31, 71, 110, 202, 207, 209, 210, 211, 212, 281, 283, 284, 286, 290, 294, 320, 329, 330, 367, 369, 693], "get_phantom_dipol": [14, 29, 110, 209, 212, 283, 287, 460], "bihemilabel": [14, 338, 339, 342, 345, 346, 347, 517, 589, 590, 955], "label": [14, 30, 34, 35, 36, 37, 38, 39, 41, 42, 44, 47, 48, 53, 54, 55, 62, 63, 70, 71, 82, 95, 97, 117, 119, 121, 122, 123, 124, 128, 132, 133, 137, 138, 139, 140, 143, 147, 154, 161, 163, 166, 168, 169, 170, 172, 175, 177, 181, 186, 192, 194, 197, 198, 202, 206, 207, 218, 219, 223, 228, 232, 234, 237, 240, 243, 244, 245, 256, 265, 269, 270, 273, 274, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 307, 308, 309, 312, 319, 327, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 364, 365, 429, 433, 455, 458, 483, 484, 485, 488, 490, 491, 492, 494, 500, 516, 517, 524, 529, 535, 536, 537, 541, 550, 551, 559, 562, 566, 570, 589, 590, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 615, 617, 619, 620, 622, 633, 635, 636, 637, 651, 688, 701, 703, 704, 705, 706, 711, 721, 722, 733, 734, 742, 747, 750, 751, 761, 780, 784, 786, 787, 788, 789, 790, 802, 812, 834, 840, 854, 855, 858, 860, 866, 867, 868, 869, 870, 872, 875, 879, 882, 883, 888, 889, 891, 894, 895, 896, 897, 898, 899, 930, 931, 949, 955, 956], "mixedsourceestim": [14, 201, 286, 290, 291, 319, 339, 342, 345, 346, 347, 711], "mixedvectorsourceestim": [14, 291, 899], "sourceestim": [14, 37, 48, 52, 57, 61, 63, 66, 72, 85, 87, 121, 181, 184, 191, 192, 207, 213, 214, 251, 252, 263, 264, 265, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 307, 312, 318, 319, 330, 333, 334, 337, 338, 339, 341, 343, 344, 345, 346, 347, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 429, 517, 530, 545, 546, 547, 548, 590, 603, 604, 605, 606, 607, 609, 612, 613, 618, 619, 705, 711, 724, 734, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 769, 776, 779, 780, 834, 850, 894, 895, 936, 955, 956], "vectorsourceestim": [14, 65, 87, 201, 284, 290, 291, 319, 338, 339, 342, 343, 346, 347, 359, 360, 545, 547, 548, 603, 604, 605, 606, 607, 612, 613, 711, 899, 900], "volsourceestim": [14, 201, 206, 207, 285, 286, 291, 292, 294, 308, 319, 338, 339, 342, 343, 345, 347, 356, 358, 359, 360, 361, 362, 363, 590, 597, 603, 604, 605, 606, 607, 609, 619, 711, 724], "volvectorsourceestim": [14, 287, 288, 338, 339, 342, 343, 346], "sourcemorph": [14, 206, 286, 288, 292, 346, 347, 429, 712, 900, 946], "compute_source_morph": [14, 66, 69, 70, 160, 184, 186, 206, 207, 263, 264, 265, 286, 290, 291, 292, 294, 302, 316, 338, 342, 343, 346, 347, 708, 894, 900], "extract_label_time_cours": [14, 64, 65, 67, 207, 281, 284, 288, 291, 292, 293, 300, 308, 338, 339, 342, 345, 346, 347, 590], "grade_to_tri": [14, 955], "grade_to_vertic": [14, 955], "select_sourc": [14, 117, 122, 287], "grow_label": [14, 292, 293, 955], "label_sign_flip": [14, 54, 281], "labels_to_stc": [14, 207, 287, 292], "morph_label": [14, 287, 337, 706, 955], "random_parcel": [14, 955], "read_source_morph": [14, 69, 70, 343, 955], "split_label": [14, 300, 337, 955], "stc_to_label": [14, 64, 300], "stc_near_sensor": [14, 161, 162, 292, 294, 302], "transform_surface_to": [14, 284], "source_spac": [14, 48, 292, 302, 344], "compute_distance_to_sensor": [14, 48, 292], "get_decimated_surfac": [14, 302], "time": [14, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 163, 167, 169, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 250, 251, 252, 255, 256, 259, 263, 264, 265, 268, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 316, 317, 318, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 363, 364, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 426, 428, 429, 430, 432, 443, 475, 483, 484, 485, 486, 489, 490, 492, 493, 494, 495, 496, 497, 499, 506, 507, 509, 511, 512, 517, 519, 521, 522, 524, 525, 526, 536, 541, 545, 546, 547, 548, 549, 550, 551, 564, 566, 570, 572, 581, 588, 590, 596, 597, 602, 603, 604, 606, 607, 609, 610, 611, 614, 615, 617, 619, 620, 631, 633, 635, 636, 638, 639, 640, 641, 644, 645, 646, 648, 649, 651, 653, 654, 655, 657, 660, 662, 663, 669, 679, 685, 688, 692, 693, 697, 698, 701, 702, 703, 705, 711, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 758, 759, 760, 764, 769, 770, 771, 772, 773, 774, 775, 776, 777, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 802, 805, 811, 812, 813, 814, 815, 816, 817, 818, 833, 834, 836, 839, 850, 853, 859, 860, 863, 864, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 883, 887, 888, 889, 890, 891, 894, 895, 896, 897, 898, 899, 900, 911, 926, 936, 939, 941, 942, 946, 948, 949, 952], "frequenc": [14, 27, 29, 31, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 59, 60, 62, 68, 82, 95, 98, 99, 100, 103, 107, 108, 109, 110, 114, 117, 120, 121, 126, 130, 131, 133, 134, 135, 136, 137, 139, 142, 148, 151, 154, 159, 163, 166, 167, 168, 169, 170, 172, 175, 177, 182, 193, 194, 195, 198, 206, 209, 212, 218, 222, 223, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 259, 263, 265, 272, 273, 277, 279, 282, 283, 284, 285, 287, 289, 290, 291, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 319, 323, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 345, 346, 347, 350, 354, 355, 356, 357, 358, 359, 364, 380, 396, 410, 411, 418, 423, 432, 443, 463, 483, 485, 488, 489, 491, 494, 495, 496, 504, 507, 509, 511, 512, 518, 519, 521, 522, 523, 524, 546, 548, 550, 551, 559, 561, 566, 602, 603, 607, 609, 610, 614, 619, 620, 633, 636, 641, 644, 648, 649, 653, 654, 660, 661, 662, 664, 665, 671, 675, 689, 692, 701, 703, 751, 763, 770, 771, 772, 774, 775, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 829, 834, 839, 859, 862, 863, 864, 868, 869, 877, 881, 884, 890, 895, 896, 898, 936, 939, 956], "time_frequ": [14, 22, 35, 47, 58, 59, 60, 119, 130, 133, 138, 139, 141, 192, 229, 250, 252, 257, 258, 259, 260, 268, 269, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 308, 312, 341, 488, 491, 496, 540, 955, 956], "averagetfr": [14, 35, 139, 141, 283, 287, 288, 290, 291, 293, 294, 301, 303, 304, 305, 306, 330, 333, 334, 385, 508, 540, 788, 808, 816, 817, 818, 819, 896, 955], "epochstfr": [14, 139, 141, 282, 284, 287, 293, 303, 304, 359, 607, 784, 797, 808, 816, 817, 819], "crossspectraldens": [14, 130, 290, 357, 364, 385, 508, 791, 792, 793, 794, 795, 796, 797, 803, 806, 862, 955], "spectrum": [14, 47, 101, 109, 130, 131, 135, 139, 159, 163, 166, 169, 191, 192, 198, 212, 226, 230, 232, 234, 239, 246, 250, 252, 269, 270, 271, 272, 277, 304, 305, 306, 308, 312, 319, 331, 332, 333, 334, 341, 409, 524, 550, 551, 636, 786, 787, 790, 804, 805, 807, 829, 879, 881, 890, 955, 956], "spectrumarrai": [14, 250, 308, 787, 789], "epochsspectrum": [14, 168, 191, 271, 272, 304, 331, 332, 333, 334, 409, 524, 550, 787, 789, 829, 955, 956], "epochsspectrumarrai": [14, 250, 308, 786, 790], "csd_tfr": [14, 58, 304], "csd_fourier": [14, 130, 285, 785, 791, 792, 793, 795, 796], "csd_multitap": [14, 130, 285, 785, 791, 792, 793, 794, 795, 804], "csd_morlet": [14, 59, 60, 130, 252, 285, 292, 785, 791, 792, 793, 794, 796], "pick_channels_csd": 14, "read_csd": [14, 304, 785, 955], "fit_iir_model_raw": [14, 119, 138, 283, 301], "tfr_morlet": [14, 58, 141, 192, 257, 258, 259, 260, 269, 279, 282, 286, 290, 300, 496, 811, 813, 814, 815, 817, 818], "tfr_multitap": [14, 139, 141, 269, 279, 282, 286, 290, 496, 813, 814, 815, 816, 818], "tfr_stockwel": [14, 141, 269, 286, 813, 814, 815, 816, 817], "read_tfr": [14, 290, 291, 784, 788, 819, 955], "write_tfr": [14, 784, 788, 808], "read_spectrum": [14, 786, 787, 789, 790, 955], "csd_array_fouri": [14, 285, 785, 792, 793, 794, 795, 796, 955], "csd_array_multitap": [14, 285, 305, 785, 791, 792, 794, 795, 796, 955], "csd_array_morlet": [14, 285, 785, 791, 793, 794, 795, 796, 955], "dpss_window": [14, 305, 955], "fwhm": [14, 187, 305, 802, 812, 955], "morlet": [14, 22, 53, 58, 130, 132, 133, 140, 192, 229, 259, 260, 277, 285, 304, 305, 331, 336, 354, 443, 496, 551, 784, 788, 792, 795, 800, 811, 813, 816, 817, 818, 839, 955, 956], "stft": [14, 85, 293, 301, 319, 548, 801, 810, 955], "istft": [14, 293, 809, 810, 955], "stftfreq": [14, 809, 955], "psd_array_multitap": [14, 268, 283, 294, 302, 305, 306, 331, 332, 333, 334, 488, 550, 551, 786, 789, 814, 817, 955], "psd_array_welch": [14, 47, 250, 268, 283, 284, 291, 294, 303, 306, 331, 332, 333, 334, 491, 550, 551, 786, 789], "tfr_array_morlet": [14, 141, 283, 284, 814, 815, 816, 817, 818], "tfr_array_multitap": [14, 283, 302, 305, 813, 815, 816, 817, 818, 955], "tfr_array_stockwel": [14, 283, 291, 813, 814, 816, 817, 818, 955], "tfr": [14, 22, 58, 139, 229, 257, 258, 269, 283, 286, 287, 290, 293, 301, 312, 319, 496, 603, 604, 605, 606, 784, 788, 792, 795, 797, 808, 813, 814, 816, 817, 818, 819, 896, 955], "cwt": [14, 955], "connect": [14, 25, 36, 64, 73, 97, 186, 192, 197, 240, 252, 255, 274, 277, 281, 284, 285, 287, 288, 290, 291, 292, 293, 294, 297, 298, 300, 303, 337, 356, 358, 364, 365, 445, 675, 764, 771, 772, 774, 775, 780, 856, 942, 948, 949, 952], "statist": [14, 31, 36, 37, 48, 54, 55, 57, 61, 64, 65, 66, 68, 69, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 113, 114, 117, 119, 120, 121, 122, 123, 124, 128, 130, 131, 134, 135, 137, 140, 152, 157, 175, 177, 181, 182, 184, 186, 188, 192, 198, 203, 204, 205, 207, 208, 218, 223, 229, 232, 233, 251, 252, 262, 277, 284, 285, 290, 293, 298, 300, 302, 318, 319, 323, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 351, 352, 364, 365, 386, 390, 392, 422, 423, 429, 433, 524, 550, 551, 603, 604, 605, 606, 607, 610, 614, 619, 620, 627, 633, 636, 691, 694, 698, 713, 718, 744, 748, 749, 762, 764, 765, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 784, 786, 787, 788, 789, 790, 816, 868, 872, 875, 896, 936, 949, 956], "stat": [14, 21, 30, 123, 124, 126, 127, 128, 129, 139, 140, 167, 222, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 270, 279, 280, 281, 283, 285, 286, 289, 290, 291, 293, 297, 298, 302, 307, 318, 331, 332, 386, 397, 636, 644, 865, 955, 956], "ttest_1samp_no_p": [14, 255, 291, 771, 774, 778], "ttest_ind_no_p": [14, 291, 955], "f_onewai": [14, 255, 765, 767, 772, 775, 955], "f_mway_rm": [14, 255, 259, 265, 279, 767], "f_threshold_mway_rm": [14, 255, 259, 265, 765], "linear_regress": [14, 30, 128, 167, 255, 280, 290], "linear_regression_raw": [14, 126, 129, 281, 285, 956], "bonferroni_correct": [14, 124, 255, 279, 290], "fdr_correct": [14, 124, 128, 255, 259], "combine_adjac": [14, 255, 257, 260, 263, 291, 386, 397, 771, 772, 774, 775], "permutation_cluster_test": [14, 123, 255, 258, 259, 285, 286, 291, 775], "permutation_cluster_1samp_test": [14, 139, 255, 257, 285, 291, 293, 302, 774], "permutation_t_test": [14, 127, 255, 307], "spatio_temporal_cluster_test": [14, 255, 256, 260, 264, 265, 285, 286, 302], "spatio_temporal_cluster_1samp_test": [14, 255, 263, 283, 291, 302, 771], "summarize_clusters_stc": [14, 263, 264, 265, 290, 291], "bootstrap_confidence_interv": [14, 140], "spatial_dist_adjac": [14, 291, 955], "spatial_src_adjac": [14, 263, 264, 265, 291, 771, 772, 774, 775], "spatial_tris_adjac": [14, 291, 955], "spatial_inter_hemi_adjac": [14, 291, 771, 772, 774, 775, 955], "spatio_temporal_src_adjac": [14, 291, 771, 772, 774, 775, 955], "spatio_temporal_tris_adjac": [14, 291, 538, 955], "spatio_temporal_dist_adjac": [14, 291, 955], "simul": [14, 95, 97, 106, 118, 132, 133, 166, 175, 187, 202, 215, 217, 228, 229, 243, 250, 254, 260, 263, 264, 265, 270, 277, 279, 282, 283, 284, 285, 286, 287, 288, 292, 293, 294, 296, 304, 317, 328, 331, 332, 333, 334, 335, 336, 337, 342, 344, 354, 423, 443, 524, 550, 551, 556, 588, 591, 597, 602, 603, 614, 633, 634, 675, 692, 698, 703, 705, 706, 709, 784, 786, 787, 789, 790, 799, 813, 816, 817, 818, 834, 839, 895, 955, 956], "add_chpi": [14, 287, 736, 737, 749, 955], "add_ecg": [14, 120, 121, 287, 737, 749], "add_eog": [14, 120, 121, 287, 736, 749], "add_nois": [14, 117, 120, 121, 122, 252, 287, 736, 737, 749], "simulate_evok": [14, 95, 119, 202, 251, 279, 284, 287, 294, 597, 749, 750, 751], "simulate_raw": [14, 117, 120, 121, 122, 252, 279, 283, 285, 286, 287, 292, 293, 736, 737, 748, 750, 751], "simulate_stc": [14, 251, 282, 287, 288, 748, 749, 750], "simulate_sparse_stc": [14, 95, 119, 120, 279, 748, 749, 751], "select_source_in_label": [14, 955], "sourcesimul": [14, 117, 121, 122, 287, 293, 749], "metric": [14, 19, 36, 41, 53, 62, 82, 117, 144, 163, 223, 239, 281, 290, 304, 310, 328, 333, 335, 336, 342, 433, 486, 489, 493, 602, 614, 615, 618, 634, 636, 692, 701, 703, 834, 882, 955, 956], "cosine_scor": [14, 117], "region_localization_error": [14, 117], "f1_score": [14, 117], "precision_scor": [14, 117], "recall_scor": [14, 117], "roc_auc_scor": [14, 36, 486, 493, 955], "spatial_deviation_error": [14, 117], "peak_position_error": [14, 117], "decod": [14, 40, 42, 45, 46, 47, 178, 191, 192, 194, 222, 224, 225, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 294, 298, 299, 303, 304, 305, 306, 307, 309, 317, 328, 331, 333, 334, 336, 342, 380, 396, 423, 432, 443, 512, 524, 550, 559, 564, 566, 576, 596, 602, 603, 605, 614, 617, 633, 637, 692, 698, 703, 784, 834, 955, 956], "csp": [14, 38, 43, 46, 53, 223, 279, 282, 283, 284, 290, 291, 292, 299, 300, 303, 305, 317, 331, 336, 380, 396, 432, 443, 487, 490, 512, 566, 633, 637, 784, 956], "em": [14, 43, 46, 53, 223, 282, 331, 333, 334, 336, 499, 550, 698, 956], "filterestim": [14, 301, 494, 955], "linearmodel": [14, 37, 44, 223, 279, 283, 290], "psdestim": [14, 955], "scaler": [14, 44, 283], "temporalfilt": [14, 282, 303, 485, 955], "timefrequ": [14, 282, 304, 955], "unsupervisedspatialfilt": [14, 40, 282], "vector": [14, 31, 41, 44, 45, 53, 60, 62, 67, 82, 136, 138, 157, 188, 201, 203, 204, 215, 222, 231, 232, 233, 234, 236, 237, 252, 277, 281, 282, 284, 285, 286, 287, 288, 290, 291, 294, 296, 298, 301, 304, 308, 319, 320, 323, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 357, 364, 365, 410, 412, 416, 424, 425, 426, 429, 484, 487, 489, 494, 499, 501, 517, 521, 522, 523, 545, 547, 548, 550, 551, 589, 595, 602, 603, 605, 606, 607, 612, 613, 617, 635, 636, 647, 648, 649, 650, 652, 660, 667, 671, 680, 686, 694, 701, 709, 711, 718, 724, 784, 785, 786, 788, 789, 834, 868, 870, 872, 874, 875, 878, 887, 890, 894, 897, 899, 900, 932, 936, 956], "receptivefield": [14, 45, 222, 284, 287, 307, 495], "timedelayingridg": [14, 222, 284, 292, 294, 489], "slidingestim": [14, 37, 223, 284, 285, 286, 304, 306, 307, 500], "generalizingestim": [14, 39, 223, 284, 285, 286, 290, 306, 500], "spoc": [14, 43, 46, 53, 277, 284, 286, 331, 336, 483, 491, 564, 596, 637, 955, 956], "ssd": [14, 43, 46, 53, 292, 306, 331, 333, 334, 336, 564, 596, 805, 956], "compute_em": [14, 42, 282, 300], "cross_val_multiscor": [14, 37, 223, 284, 285, 305], "get_coef": [14, 37, 44, 223, 283], "realtim": [14, 281, 282, 283, 286, 287, 299, 300, 679, 949], "report": [14, 41, 149, 163, 191, 199, 200, 219, 237, 239, 240, 256, 270, 277, 279, 280, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 312, 316, 320, 328, 331, 332, 333, 335, 336, 340, 342, 356, 358, 507, 524, 550, 551, 557, 602, 625, 636, 654, 660, 676, 701, 802, 812, 866, 883, 889, 936, 937, 941, 955, 956], "open_report": [14, 198, 286, 302, 341], "log": [14, 34, 35, 38, 47, 59, 109, 148, 168, 188, 203, 227, 229, 232, 234, 238, 246, 257, 269, 270, 283, 286, 290, 291, 292, 293, 297, 302, 303, 306, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 632, 636, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 729, 730, 732, 733, 735, 736, 737, 738, 748, 749, 752, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 775, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 802, 803, 804, 805, 808, 809, 812, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 829, 832, 833, 834, 836, 843, 852, 861, 864, 865, 868, 869, 870, 871, 876, 877, 879, 880, 881, 884, 886, 887, 889, 890, 892, 893, 894, 895, 896, 899, 900, 901, 905, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936], "configur": [14, 191, 194, 199, 200, 217, 234, 243, 260, 277, 302, 306, 311, 312, 317, 320, 331, 332, 450, 456, 503, 531, 532, 542, 550, 551, 576, 614, 624, 636, 648, 649, 727, 783, 829, 834, 866, 883, 889, 902, 903, 904, 936, 956], "get_config_path": [14, 197, 298], "get_config": [14, 197, 298, 306, 456, 727], "open_doc": [14, 283, 955], "set_log_level": [14, 197, 729, 832, 955], "set_log_fil": [14, 955], "set_config": [14, 181, 197, 282, 291, 298, 302, 308, 309, 316, 331, 332, 445, 456, 531, 550, 551, 636, 832, 866, 883, 889, 941], "set_cache_dir": [14, 771, 772, 774, 775, 955], "set_memmap_min_s": [14, 955], "sys_info": [14, 197, 281, 290, 294, 302, 303, 308, 341, 936, 941, 942], "use_log_level": [14, 197, 268], "verbos": [14, 31, 36, 37, 39, 40, 41, 60, 64, 66, 67, 68, 70, 75, 77, 84, 86, 97, 102, 105, 106, 110, 114, 120, 121, 126, 131, 135, 136, 148, 151, 152, 154, 160, 161, 162, 166, 168, 171, 172, 175, 176, 178, 183, 184, 185, 188, 196, 197, 198, 203, 205, 206, 207, 208, 209, 210, 217, 223, 227, 228, 229, 232, 235, 236, 237, 238, 239, 240, 244, 245, 255, 256, 257, 263, 268, 270, 284, 292, 293, 300, 302, 303, 304, 306, 308, 309, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 632, 636, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 730, 732, 733, 735, 736, 737, 738, 748, 749, 752, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 775, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 804, 805, 808, 809, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 829, 830, 833, 834, 836, 843, 852, 861, 864, 868, 869, 870, 871, 876, 879, 880, 881, 886, 887, 889, 890, 892, 893, 894, 895, 899, 900, 901, 905, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 941], "deprec": [14, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 323, 834, 888, 904], "warn": [14, 31, 36, 39, 64, 160, 161, 162, 166, 177, 188, 197, 198, 207, 210, 218, 230, 232, 233, 240, 244, 245, 257, 268, 281, 282, 284, 286, 288, 290, 291, 292, 293, 294, 302, 304, 305, 306, 308, 323, 325, 326, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 351, 352, 384, 407, 411, 417, 418, 423, 427, 429, 430, 432, 434, 439, 440, 475, 502, 510, 517, 530, 533, 550, 551, 572, 636, 647, 660, 671, 672, 691, 701, 720, 722, 725, 729, 730, 784, 786, 787, 788, 789, 790, 830, 832, 834, 869, 880, 927, 929, 948, 950], "get_cuda_memori": 14, "init_cuda": [14, 941, 955], "set_cuda_devic": [14, 288, 955], "standalon": [16, 181, 287, 944], "mne_realtim": [16, 293, 485], "correct": [18, 21, 26, 29, 34, 35, 37, 38, 42, 44, 47, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 96, 98, 99, 100, 101, 104, 105, 106, 109, 111, 112, 113, 114, 117, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 155, 157, 158, 161, 162, 163, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185, 186, 187, 188, 191, 192, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 240, 250, 251, 252, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 279, 280, 284, 285, 286, 287, 289, 290, 291, 292, 293, 298, 302, 304, 305, 306, 309, 311, 314, 316, 319, 320, 323, 325, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 354, 377, 388, 422, 423, 428, 434, 483, 489, 490, 495, 502, 504, 522, 524, 533, 550, 551, 557, 559, 563, 566, 581, 583, 601, 604, 619, 620, 633, 635, 636, 637, 646, 647, 650, 653, 654, 660, 671, 674, 678, 685, 689, 691, 698, 701, 702, 720, 722, 739, 740, 741, 742, 743, 744, 745, 746, 762, 765, 768, 769, 770, 771, 772, 773, 784, 786, 787, 788, 789, 790, 798, 805, 860, 867, 868, 874, 875, 880, 888, 890, 891, 893, 896, 927, 929, 936, 941, 956], "code": [19, 22, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 280, 281, 282, 283, 285, 287, 288, 289, 293, 294, 298, 299, 301, 303, 304, 310, 311, 312, 316, 319, 320, 321, 322, 326, 331, 332, 333, 334, 341, 350, 418, 510, 512, 522, 524, 527, 549, 550, 551, 559, 568, 576, 604, 671, 680, 696, 770, 784, 786, 787, 788, 789, 790, 802, 812, 815, 818, 834, 866, 868, 870, 890, 936, 939, 946], "stc": [19, 31, 33, 37, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 82, 84, 85, 87, 95, 119, 120, 121, 122, 131, 135, 136, 137, 143, 160, 161, 162, 184, 191, 192, 198, 202, 203, 204, 205, 206, 208, 213, 214, 223, 252, 264, 273, 274, 284, 286, 287, 288, 290, 291, 293, 300, 301, 302, 316, 319, 329, 333, 338, 339, 341, 342, 343, 344, 345, 346, 347, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 429, 517, 526, 530, 536, 545, 546, 547, 548, 590, 597, 602, 603, 604, 605, 606, 607, 610, 612, 613, 617, 619, 701, 711, 724, 734, 748, 749, 750, 751, 776, 779, 780, 834, 894, 895, 899, 900, 956], "parametr": [21, 30, 96, 121, 140, 191, 192, 260, 261, 262, 277, 285, 302, 319, 331, 333, 334, 336, 386, 422, 524, 550, 603, 627, 633, 636, 698, 718, 763, 764, 771, 772, 774, 775, 777, 778, 788, 816, 860, 881, 949, 956], "scipi": [21, 45, 57, 124, 138, 182, 197, 198, 212, 222, 229, 233, 252, 255, 256, 257, 260, 263, 264, 270, 281, 282, 286, 287, 288, 290, 292, 294, 296, 301, 305, 309, 310, 328, 331, 332, 333, 334, 338, 339, 340, 342, 343, 344, 345, 346, 347, 349, 386, 397, 427, 483, 485, 490, 494, 518, 519, 521, 522, 523, 526, 550, 551, 635, 636, 644, 651, 764, 766, 771, 772, 774, 775, 777, 778, 784, 786, 787, 788, 789, 790, 802, 805, 812, 834, 836, 853, 868, 871, 875, 879, 888, 890, 891, 896, 898, 936, 938, 942, 947], "statsmodel": [21, 255, 312], "option": [21, 140, 153, 161, 166, 168, 176, 177, 182, 187, 188, 191, 192, 193, 194, 197, 198, 199, 204, 215, 223, 226, 229, 232, 237, 238, 240, 243, 245, 246, 250, 255, 256, 259, 265, 268, 270, 275, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 320, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 351, 352, 371, 377, 380, 423, 433, 439, 442, 456, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 504, 514, 515, 516, 521, 522, 523, 525, 527, 545, 547, 548, 550, 551, 564, 566, 573, 594, 598, 603, 604, 605, 606, 607, 609, 610, 614, 616, 618, 619, 620, 628, 633, 635, 636, 637, 646, 647, 648, 649, 651, 660, 671, 691, 701, 703, 713, 749, 754, 758, 769, 771, 772, 774, 775, 778, 779, 784, 786, 787, 788, 789, 790, 824, 834, 852, 853, 854, 860, 864, 866, 868, 870, 872, 875, 876, 879, 883, 886, 888, 889, 890, 891, 892, 894, 896, 898, 899, 900, 902, 942, 948, 950], "mass": [21, 63, 191, 255, 256, 261, 262, 282, 298, 302, 331, 336, 337, 342, 550, 633, 698, 733, 741, 747, 750, 765, 767, 768, 772, 788, 816, 824, 834, 904, 956], "univari": [21, 37, 191, 223, 255, 256, 261, 262, 277, 298, 302, 331, 336, 550, 633, 698, 765, 767, 768, 772, 788, 816, 956], "comparison": [21, 26, 53, 57, 64, 109, 123, 124, 128, 139, 150, 156, 177, 181, 183, 193, 202, 209, 210, 218, 229, 234, 238, 260, 263, 264, 265, 269, 270, 277, 282, 283, 304, 316, 320, 342, 343, 429, 636, 639, 672, 711, 768, 772, 773, 950, 956], "cluster": [21, 36, 53, 125, 129, 139, 191, 256, 261, 262, 266, 267, 270, 277, 283, 284, 285, 290, 291, 293, 297, 298, 300, 301, 302, 331, 333, 334, 336, 342, 343, 344, 386, 422, 429, 506, 524, 550, 602, 603, 617, 627, 633, 698, 711, 713, 718, 756, 764, 765, 767, 771, 772, 774, 775, 776, 788, 816, 834, 895, 956], "method": [21, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 53, 54, 55, 56, 57, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 85, 97, 98, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 114, 120, 121, 122, 124, 126, 128, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 148, 149, 159, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 185, 186, 188, 191, 192, 193, 194, 195, 196, 198, 201, 203, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 245, 247, 248, 250, 251, 252, 256, 260, 263, 265, 268, 269, 270, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 355, 364, 365, 366, 367, 369, 370, 373, 374, 378, 379, 380, 381, 382, 386, 387, 388, 389, 392, 394, 395, 408, 411, 413, 416, 418, 423, 427, 428, 429, 434, 439, 440, 441, 443, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 503, 504, 506, 518, 519, 521, 522, 523, 527, 534, 545, 546, 547, 548, 549, 550, 551, 552, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 587, 588, 591, 598, 599, 602, 603, 604, 605, 606, 607, 609, 610, 614, 615, 616, 618, 619, 620, 632, 633, 635, 636, 637, 644, 647, 648, 649, 650, 652, 656, 667, 669, 671, 674, 675, 676, 677, 678, 686, 688, 692, 695, 701, 703, 718, 719, 728, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 762, 765, 766, 768, 771, 772, 773, 774, 775, 777, 784, 785, 786, 787, 788, 789, 790, 793, 796, 798, 804, 805, 813, 814, 816, 817, 821, 823, 829, 830, 832, 834, 835, 836, 849, 852, 856, 861, 862, 863, 864, 867, 871, 875, 878, 880, 888, 892, 895, 936, 939, 941, 956], "adjac": [21, 97, 168, 172, 227, 256, 264, 265, 291, 293, 300, 303, 386, 397, 495, 524, 638, 641, 754, 755, 756, 757, 758, 759, 760, 764, 771, 772, 774, 775, 857], "matric": [21, 27, 36, 56, 57, 60, 61, 64, 65, 66, 67, 70, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 105, 112, 113, 128, 130, 143, 146, 147, 166, 169, 172, 175, 182, 189, 191, 192, 198, 202, 204, 205, 207, 215, 223, 255, 256, 273, 274, 277, 282, 285, 286, 291, 300, 303, 316, 320, 357, 364, 423, 483, 491, 550, 551, 647, 660, 671, 683, 735, 736, 737, 749, 770, 785, 797, 825, 827, 862], "level": [21, 30, 34, 35, 53, 62, 70, 82, 125, 128, 129, 167, 168, 170, 176, 177, 181, 186, 191, 192, 194, 196, 197, 206, 207, 215, 222, 226, 228, 229, 232, 233, 234, 239, 252, 255, 257, 258, 259, 260, 261, 263, 264, 265, 270, 274, 277, 283, 286, 297, 300, 302, 308, 309, 317, 318, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 632, 633, 635, 636, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 730, 732, 733, 735, 736, 737, 738, 748, 749, 752, 754, 755, 756, 757, 758, 759, 760, 763, 765, 767, 771, 772, 773, 774, 775, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 804, 805, 808, 809, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 829, 832, 833, 834, 836, 843, 852, 853, 861, 864, 868, 869, 870, 871, 872, 875, 876, 879, 880, 881, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 905, 907, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 938, 947, 949, 956], "oper": [22, 26, 29, 31, 37, 41, 44, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 110, 114, 117, 119, 120, 122, 131, 134, 135, 136, 137, 148, 152, 158, 166, 167, 168, 171, 172, 175, 177, 178, 181, 182, 188, 189, 190, 191, 192, 193, 195, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 218, 223, 227, 228, 229, 230, 232, 233, 234, 237, 243, 251, 252, 257, 258, 260, 263, 265, 277, 279, 281, 285, 287, 290, 292, 295, 296, 300, 302, 303, 304, 309, 317, 319, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 341, 342, 344, 345, 349, 351, 352, 364, 365, 367, 369, 370, 380, 384, 385, 396, 402, 416, 422, 443, 444, 451, 459, 484, 489, 492, 499, 504, 505, 508, 521, 522, 523, 524, 528, 529, 530, 545, 546, 547, 548, 550, 551, 552, 559, 566, 588, 597, 598, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 629, 634, 636, 639, 641, 657, 663, 669, 685, 688, 690, 698, 703, 713, 724, 725, 736, 737, 738, 745, 747, 748, 749, 750, 763, 771, 772, 773, 774, 775, 778, 781, 784, 785, 813, 814, 815, 816, 817, 818, 820, 852, 893, 901, 904, 905, 928, 936, 939, 941, 948, 956], "python": [22, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 188, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 228, 230, 231, 234, 235, 236, 238, 239, 241, 242, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 275, 277, 281, 282, 283, 285, 286, 287, 288, 289, 291, 293, 294, 295, 299, 300, 301, 302, 304, 307, 308, 310, 313, 316, 317, 319, 320, 321, 322, 325, 329, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 364, 365, 382, 385, 391, 396, 397, 400, 422, 434, 443, 446, 447, 448, 449, 452, 453, 454, 456, 457, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 502, 508, 512, 516, 524, 531, 532, 533, 535, 542, 550, 551, 566, 568, 570, 572, 576, 593, 596, 602, 603, 617, 627, 630, 636, 653, 656, 657, 658, 660, 685, 691, 720, 722, 727, 729, 783, 784, 786, 787, 788, 789, 790, 802, 805, 812, 813, 814, 816, 817, 829, 830, 845, 860, 866, 869, 883, 889, 897, 929, 931, 937, 939, 941, 942, 949, 951, 954, 956], "np": [22, 26, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 45, 48, 54, 57, 58, 59, 60, 61, 64, 66, 68, 69, 71, 73, 76, 84, 85, 87, 95, 97, 98, 99, 101, 108, 110, 117, 119, 120, 121, 122, 124, 127, 134, 138, 139, 140, 141, 142, 144, 146, 147, 153, 159, 161, 162, 163, 167, 169, 172, 176, 177, 182, 183, 184, 185, 186, 192, 194, 196, 198, 202, 203, 204, 207, 208, 209, 210, 211, 212, 217, 218, 222, 223, 226, 227, 229, 230, 231, 233, 234, 237, 238, 239, 243, 244, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 283, 285, 287, 288, 302, 304, 307, 308, 309, 320, 325, 331, 332, 333, 334, 337, 338, 339, 342, 344, 345, 346, 347, 349, 382, 423, 438, 517, 518, 522, 539, 550, 551, 568, 585, 636, 651, 660, 669, 680, 750, 764, 776, 784, 786, 787, 788, 789, 790, 802, 804, 812, 814, 817, 834, 843, 850, 855, 860, 867, 890, 894, 896, 899, 900], "ndarrai": [22, 166, 243, 252, 270, 285, 286, 291, 300, 307, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 350, 364, 365, 373, 389, 413, 419, 432, 434, 438, 439, 482, 483, 484, 487, 490, 495, 499, 503, 509, 511, 519, 520, 521, 523, 526, 527, 528, 549, 550, 551, 554, 590, 611, 635, 636, 637, 644, 647, 648, 649, 651, 660, 664, 665, 668, 669, 686, 707, 733, 734, 749, 763, 764, 765, 769, 770, 771, 772, 774, 775, 784, 785, 786, 787, 788, 789, 790, 799, 802, 804, 805, 812, 815, 822, 823, 824, 834, 835, 839, 850, 852, 853, 855, 868, 872, 874, 875, 877, 878, 891, 894, 895, 896, 898, 899, 900, 929], "A": [22, 25, 30, 34, 35, 37, 42, 45, 47, 52, 57, 61, 68, 69, 70, 97, 102, 105, 109, 115, 128, 130, 140, 147, 148, 154, 155, 158, 159, 161, 163, 168, 169, 177, 181, 183, 186, 187, 188, 192, 194, 195, 197, 198, 201, 206, 212, 215, 216, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 243, 245, 246, 249, 252, 255, 256, 257, 259, 263, 264, 265, 268, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 297, 298, 299, 300, 301, 306, 308, 310, 314, 316, 317, 318, 319, 320, 322, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 357, 364, 372, 378, 380, 383, 384, 385, 388, 389, 392, 408, 423, 426, 429, 434, 435, 437, 438, 440, 450, 458, 459, 462, 464, 475, 476, 485, 487, 491, 500, 505, 507, 508, 519, 520, 521, 522, 526, 534, 535, 536, 540, 545, 550, 551, 552, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 588, 589, 596, 603, 604, 610, 618, 626, 628, 629, 631, 634, 635, 636, 637, 644, 650, 651, 655, 656, 658, 659, 660, 669, 672, 678, 680, 686, 688, 691, 698, 719, 725, 728, 733, 736, 737, 738, 744, 747, 748, 750, 761, 764, 765, 767, 768, 770, 771, 772, 773, 774, 775, 776, 779, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 800, 802, 805, 812, 814, 815, 817, 818, 821, 824, 834, 838, 849, 851, 852, 854, 856, 859, 860, 862, 866, 872, 873, 874, 876, 877, 880, 889, 890, 892, 894, 897, 898, 899, 941, 954], "implement": [22, 57, 97, 192, 195, 205, 223, 230, 232, 237, 252, 270, 280, 285, 298, 306, 308, 309, 312, 314, 321, 324, 328, 336, 355, 356, 358, 370, 400, 423, 429, 483, 490, 491, 496, 500, 523, 545, 547, 548, 550, 551, 598, 602, 603, 604, 605, 606, 607, 609, 610, 620, 636, 637, 644, 651, 656, 660, 686, 708, 768, 811, 813, 821, 889, 941, 949], "inspir": [22, 170, 309, 507, 522, 824], "matlab": [22, 30, 45, 222, 277, 286, 312, 317, 321, 371, 489, 571, 680, 696, 700, 938, 948, 949], "sheraz": [22, 146, 154, 277, 283, 286, 287, 652], "khan": [22, 146, 154, 277, 283, 286, 287, 652], "spm": [22, 28, 32, 53, 151, 223, 299, 422, 423, 478, 524, 564, 594, 598, 603, 614, 633, 636, 654, 869, 956], "routin": [23, 151, 211, 230, 274, 297, 298, 312, 526, 636, 671, 907, 908], "ui_ev": [23, 274, 308, 955], "api": [23, 168, 195, 219, 223, 246, 255, 268, 296, 321, 484, 624, 834, 844, 849, 950, 952], "inter": [23, 134, 277, 328, 331, 332, 333, 334, 340, 349, 483, 490, 507, 550, 551, 635, 636, 651, 736, 784, 786, 787, 789, 790, 813, 814, 816, 817, 853, 868, 875, 879, 888, 891, 896, 898], "figur": [23, 29, 30, 31, 34, 42, 45, 48, 54, 63, 64, 71, 75, 80, 81, 119, 130, 136, 138, 142, 143, 145, 151, 153, 161, 162, 167, 168, 171, 176, 182, 184, 186, 191, 192, 196, 204, 205, 206, 209, 210, 212, 218, 222, 223, 229, 231, 232, 234, 237, 238, 246, 252, 255, 260, 265, 269, 275, 276, 285, 286, 288, 290, 291, 292, 293, 294, 299, 301, 302, 303, 304, 306, 307, 308, 309, 318, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 380, 381, 394, 422, 483, 490, 542, 550, 551, 594, 635, 636, 651, 656, 701, 711, 784, 785, 786, 787, 788, 789, 790, 813, 814, 816, 817, 834, 836, 837, 838, 841, 844, 845, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 903, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 936, 941, 942, 956], "commun": [23, 217, 222, 223, 252, 277, 309, 311, 330, 331, 332, 333, 334, 489, 784, 788, 815, 818, 946], "The": [23, 29, 30, 31, 33, 34, 35, 37, 40, 41, 42, 44, 45, 47, 53, 57, 60, 64, 67, 69, 70, 71, 72, 73, 74, 75, 78, 84, 85, 87, 90, 92, 94, 96, 101, 102, 105, 106, 107, 108, 109, 110, 114, 121, 122, 128, 130, 131, 134, 136, 137, 139, 140, 141, 142, 143, 147, 154, 155, 160, 161, 162, 163, 164, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 197, 198, 199, 200, 203, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 450, 451, 455, 456, 457, 458, 459, 460, 462, 465, 475, 476, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 562, 563, 564, 566, 568, 571, 572, 573, 574, 575, 576, 579, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 727, 728, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 930, 931, 932, 933, 935, 936, 937, 938, 939, 941, 945, 946, 948, 952, 956], "allow": [23, 38, 45, 66, 69, 70, 72, 87, 121, 131, 139, 142, 143, 147, 163, 166, 167, 168, 169, 170, 172, 176, 177, 183, 184, 186, 192, 195, 196, 198, 204, 216, 219, 223, 229, 234, 243, 244, 246, 255, 256, 257, 274, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 318, 319, 320, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 336, 338, 339, 342, 344, 345, 346, 347, 358, 359, 362, 376, 380, 403, 408, 416, 423, 442, 483, 486, 489, 490, 491, 493, 516, 524, 541, 549, 550, 551, 554, 566, 567, 570, 572, 605, 607, 610, 612, 613, 614, 618, 636, 637, 641, 660, 669, 689, 695, 701, 719, 733, 749, 751, 770, 784, 786, 787, 788, 789, 790, 813, 814, 816, 817, 828, 832, 857, 866, 868, 879, 881, 889, 892, 941], "each": [23, 30, 35, 36, 37, 41, 42, 45, 50, 54, 58, 59, 64, 67, 70, 71, 94, 97, 106, 109, 120, 121, 122, 128, 130, 134, 135, 136, 139, 140, 142, 144, 147, 155, 159, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 186, 187, 188, 192, 193, 194, 195, 197, 198, 201, 202, 203, 204, 206, 207, 209, 211, 212, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 257, 259, 260, 263, 264, 265, 268, 270, 273, 274, 280, 282, 283, 288, 290, 291, 293, 294, 303, 304, 309, 313, 316, 317, 318, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 353, 356, 357, 364, 365, 371, 378, 382, 385, 389, 409, 411, 413, 414, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431, 434, 436, 441, 456, 475, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 506, 507, 508, 517, 521, 522, 523, 524, 525, 526, 527, 535, 541, 545, 547, 548, 549, 550, 551, 552, 555, 566, 575, 585, 586, 590, 592, 594, 595, 603, 607, 609, 610, 612, 613, 620, 626, 635, 636, 637, 639, 641, 644, 651, 653, 655, 656, 658, 660, 666, 670, 671, 675, 691, 695, 701, 714, 717, 725, 732, 733, 739, 740, 741, 742, 743, 744, 745, 746, 749, 750, 751, 753, 755, 764, 766, 767, 769, 771, 772, 773, 774, 775, 776, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 802, 804, 805, 812, 816, 817, 824, 834, 835, 839, 843, 852, 853, 854, 856, 857, 858, 860, 861, 862, 863, 864, 867, 868, 870, 872, 873, 874, 875, 876, 879, 887, 888, 889, 890, 891, 895, 896, 897, 898, 901, 905, 906, 915, 916, 927, 929, 934, 936, 941, 942, 946, 948], "other": [23, 30, 69, 88, 97, 109, 110, 139, 167, 169, 171, 176, 177, 181, 182, 186, 192, 194, 195, 196, 198, 201, 203, 206, 207, 212, 215, 216, 218, 219, 223, 226, 227, 230, 231, 232, 233, 234, 235, 236, 239, 243, 245, 246, 251, 252, 255, 259, 268, 270, 273, 274, 279, 281, 286, 291, 292, 293, 294, 301, 304, 305, 308, 310, 312, 316, 317, 318, 319, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 350, 380, 392, 393, 422, 429, 434, 489, 491, 500, 502, 504, 506, 507, 512, 516, 528, 532, 533, 545, 547, 548, 550, 551, 563, 603, 614, 625, 635, 636, 660, 666, 671, 685, 689, 691, 702, 705, 711, 714, 720, 722, 733, 744, 749, 755, 770, 784, 785, 786, 787, 788, 789, 790, 834, 849, 857, 864, 866, 868, 879, 883, 889, 894, 915, 918, 919, 929, 934, 936, 941, 948, 949, 950, 952], "chang": [23, 45, 57, 70, 71, 141, 162, 168, 171, 175, 177, 182, 184, 187, 193, 196, 197, 198, 201, 202, 204, 210, 215, 216, 218, 219, 222, 227, 232, 233, 234, 238, 239, 244, 245, 246, 251, 255, 258, 263, 265, 270, 273, 277, 281, 282, 283, 284, 285, 286, 287, 288, 290, 296, 298, 300, 301, 311, 313, 316, 320, 323, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 364, 365, 372, 375, 377, 380, 388, 403, 408, 410, 412, 416, 429, 431, 457, 483, 490, 503, 504, 507, 512, 517, 518, 520, 522, 524, 526, 527, 536, 542, 545, 547, 548, 550, 551, 567, 572, 575, 576, 590, 594, 597, 598, 614, 624, 625, 627, 628, 629, 635, 636, 638, 651, 657, 660, 667, 669, 671, 693, 695, 701, 703, 719, 728, 730, 732, 733, 749, 776, 779, 784, 786, 787, 788, 789, 790, 803, 829, 834, 836, 846, 852, 853, 854, 860, 861, 864, 865, 866, 867, 868, 870, 872, 875, 876, 877, 879, 881, 883, 886, 888, 889, 890, 891, 892, 894, 896, 898, 899, 900, 901, 904, 906, 908, 927, 936, 939, 943, 946, 948, 950], "one": [23, 26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 50, 57, 59, 60, 66, 67, 68, 69, 71, 72, 74, 75, 76, 84, 85, 92, 95, 97, 100, 101, 103, 108, 109, 110, 112, 113, 114, 117, 121, 123, 124, 126, 130, 136, 138, 140, 141, 142, 144, 148, 157, 159, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 257, 258, 259, 260, 264, 269, 270, 273, 280, 282, 285, 286, 288, 290, 291, 292, 294, 297, 300, 302, 305, 308, 309, 310, 316, 317, 318, 319, 320, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 353, 356, 364, 365, 379, 380, 382, 386, 387, 389, 422, 424, 425, 427, 429, 430, 434, 450, 459, 462, 464, 475, 476, 482, 483, 489, 490, 493, 496, 498, 502, 505, 506, 507, 514, 515, 517, 518, 524, 533, 540, 541, 542, 548, 549, 550, 551, 555, 559, 568, 570, 586, 588, 590, 592, 597, 612, 613, 619, 620, 622, 625, 636, 637, 638, 639, 653, 657, 658, 661, 664, 665, 666, 668, 679, 682, 691, 693, 701, 702, 708, 720, 722, 728, 733, 736, 750, 755, 765, 766, 771, 772, 773, 774, 775, 777, 780, 784, 785, 786, 787, 788, 789, 790, 792, 795, 802, 812, 813, 814, 816, 817, 819, 822, 823, 824, 834, 836, 849, 852, 854, 855, 860, 867, 868, 870, 871, 872, 873, 875, 876, 877, 879, 881, 894, 895, 897, 898, 899, 900, 915, 927, 929, 936, 941, 942, 945, 946, 950], "trigger": [23, 31, 36, 120, 130, 136, 170, 192, 194, 197, 203, 208, 211, 215, 216, 217, 218, 228, 233, 238, 240, 255, 274, 280, 282, 283, 299, 308, 309, 316, 319, 320, 323, 324, 423, 428, 524, 525, 550, 551, 559, 566, 568, 574, 576, 582, 654, 662, 698, 731, 749], "anoth": [23, 45, 57, 71, 97, 113, 122, 154, 167, 169, 170, 171, 175, 177, 181, 182, 187, 193, 197, 206, 215, 228, 229, 232, 233, 237, 239, 244, 245, 246, 255, 260, 286, 308, 309, 310, 317, 319, 320, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 345, 346, 347, 349, 382, 423, 424, 426, 428, 429, 486, 493, 496, 499, 500, 509, 526, 539, 541, 550, 551, 581, 594, 597, 598, 609, 610, 619, 620, 622, 641, 648, 649, 668, 732, 733, 735, 736, 737, 749, 755, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 822, 823, 824, 836, 857, 868, 871, 889, 890, 941, 950], "For": [23, 26, 30, 41, 45, 60, 69, 70, 73, 76, 81, 90, 94, 96, 97, 106, 122, 128, 130, 136, 140, 142, 147, 148, 151, 160, 161, 162, 166, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 246, 250, 255, 257, 259, 260, 263, 265, 268, 269, 270, 273, 274, 281, 282, 290, 293, 303, 307, 309, 311, 316, 317, 318, 319, 320, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 350, 364, 365, 382, 393, 403, 423, 427, 428, 429, 436, 439, 440, 441, 450, 456, 475, 476, 482, 483, 485, 486, 489, 490, 491, 493, 495, 496, 500, 504, 505, 506, 507, 509, 512, 513, 514, 516, 518, 519, 521, 522, 524, 525, 526, 527, 540, 541, 542, 544, 545, 547, 548, 549, 550, 551, 553, 557, 559, 566, 572, 575, 576, 601, 609, 614, 618, 619, 620, 623, 635, 636, 637, 638, 647, 652, 655, 656, 658, 660, 671, 675, 682, 689, 698, 714, 718, 720, 725, 728, 730, 733, 764, 769, 770, 771, 772, 774, 775, 779, 784, 785, 786, 787, 788, 789, 790, 804, 806, 813, 814, 816, 817, 824, 834, 845, 851, 852, 854, 860, 861, 866, 867, 868, 870, 872, 875, 876, 877, 879, 880, 881, 883, 889, 891, 892, 896, 898, 900, 936, 939, 941, 944, 947, 948, 951, 952], "exampl": [23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 277, 281, 282, 283, 284, 286, 287, 290, 291, 294, 298, 301, 302, 303, 304, 306, 308, 309, 316, 318, 319, 320, 321, 326, 347, 377, 403, 431, 437, 438, 439, 440, 450, 456, 464, 476, 482, 505, 510, 527, 549, 553, 575, 624, 646, 655, 680, 697, 720, 729, 812, 814, 824, 832, 866, 868, 875, 879, 881, 889, 891, 896, 900, 936, 937, 941, 945, 949, 956], "cursor": [23, 284, 835], "updat": [23, 172, 196, 198, 205, 216, 227, 229, 234, 237, 239, 243, 246, 270, 273, 274, 282, 284, 285, 287, 288, 290, 291, 292, 293, 294, 298, 302, 303, 304, 308, 309, 310, 317, 323, 328, 331, 332, 333, 334, 336, 355, 370, 434, 440, 442, 447, 448, 449, 450, 452, 453, 454, 456, 457, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 518, 535, 545, 550, 551, 572, 602, 637, 656, 723, 727, 821, 834, 907, 941], "current": [23, 26, 38, 47, 48, 53, 55, 56, 57, 60, 67, 68, 70, 85, 104, 105, 107, 108, 111, 121, 146, 151, 166, 175, 187, 188, 191, 192, 197, 203, 204, 205, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 227, 229, 237, 239, 245, 252, 263, 265, 277, 282, 284, 285, 286, 290, 303, 304, 308, 309, 310, 312, 316, 317, 319, 323, 324, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 346, 347, 351, 352, 364, 365, 386, 388, 394, 422, 429, 434, 442, 443, 446, 489, 504, 507, 516, 521, 523, 524, 526, 545, 549, 550, 551, 557, 562, 566, 582, 597, 598, 603, 606, 636, 645, 647, 648, 649, 660, 671, 701, 708, 728, 748, 765, 767, 784, 786, 787, 788, 789, 790, 811, 834, 842, 844, 846, 847, 848, 849, 853, 857, 860, 866, 889, 898, 899, 906, 936, 945, 948, 950, 956], "scenario": [23, 274], "two": [23, 30, 31, 38, 42, 45, 48, 58, 63, 68, 71, 73, 80, 81, 92, 94, 96, 97, 99, 101, 102, 107, 110, 114, 117, 139, 142, 144, 158, 159, 161, 163, 167, 168, 170, 172, 176, 177, 181, 182, 184, 186, 192, 194, 195, 196, 197, 198, 201, 204, 206, 217, 218, 219, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 240, 243, 244, 245, 246, 252, 255, 257, 259, 263, 265, 268, 270, 274, 277, 283, 284, 287, 291, 292, 298, 302, 303, 305, 306, 309, 310, 317, 319, 320, 325, 331, 332, 333, 334, 337, 338, 339, 342, 343, 345, 346, 347, 364, 365, 380, 388, 423, 427, 428, 439, 440, 441, 475, 483, 485, 490, 494, 498, 506, 507, 517, 519, 521, 522, 523, 526, 527, 545, 547, 548, 550, 551, 575, 590, 609, 614, 631, 636, 639, 646, 651, 660, 669, 670, 685, 686, 725, 728, 737, 761, 765, 766, 767, 769, 771, 772, 773, 774, 775, 779, 784, 786, 787, 788, 789, 790, 804, 805, 815, 824, 834, 836, 840, 843, 866, 867, 868, 871, 876, 883, 889, 894, 915, 936, 946, 948], "draw": [23, 182, 196, 202, 203, 229, 257, 274, 279, 284, 294, 308, 320, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 635, 636, 651, 656, 664, 784, 786, 787, 789, 790, 836, 853, 859, 860, 867, 868, 870, 871, 875, 879, 882, 886, 888, 891, 892, 896, 898, 907, 908], "same": [23, 30, 44, 45, 54, 70, 71, 80, 81, 84, 97, 101, 102, 109, 117, 126, 130, 136, 140, 141, 161, 166, 167, 168, 170, 175, 176, 177, 182, 186, 187, 188, 194, 195, 196, 197, 201, 202, 204, 209, 215, 217, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 244, 245, 246, 250, 255, 256, 257, 259, 260, 263, 264, 265, 268, 273, 274, 282, 283, 284, 286, 287, 291, 293, 294, 300, 303, 306, 307, 309, 317, 320, 321, 323, 325, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 351, 352, 354, 364, 367, 369, 377, 382, 385, 396, 409, 422, 423, 427, 428, 429, 441, 443, 460, 483, 490, 491, 496, 504, 507, 508, 517, 518, 533, 536, 540, 541, 545, 549, 550, 551, 558, 559, 566, 567, 578, 579, 583, 622, 636, 637, 638, 647, 650, 653, 654, 655, 660, 671, 672, 685, 689, 695, 696, 711, 729, 730, 734, 735, 736, 737, 744, 749, 750, 766, 770, 771, 772, 774, 775, 779, 784, 786, 787, 788, 789, 790, 802, 804, 805, 811, 812, 813, 814, 815, 816, 817, 818, 824, 834, 840, 852, 853, 860, 866, 867, 868, 870, 872, 875, 877, 888, 889, 892, 894, 895, 897, 934, 936, 939, 952], "window": [23, 26, 27, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 85, 98, 99, 100, 101, 103, 108, 109, 110, 114, 120, 126, 127, 130, 131, 135, 136, 140, 141, 142, 148, 151, 159, 162, 163, 167, 168, 169, 170, 172, 177, 192, 197, 198, 206, 209, 212, 218, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 245, 246, 250, 256, 260, 268, 269, 270, 279, 280, 284, 286, 287, 288, 290, 291, 292, 293, 294, 296, 302, 303, 305, 306, 308, 309, 323, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 357, 410, 412, 416, 483, 484, 488, 490, 494, 496, 499, 507, 509, 518, 519, 521, 522, 523, 532, 542, 548, 550, 551, 609, 610, 636, 638, 646, 660, 663, 669, 671, 679, 736, 737, 770, 784, 785, 786, 789, 793, 796, 798, 801, 804, 805, 809, 810, 813, 814, 815, 816, 817, 818, 834, 866, 867, 868, 875, 883, 889, 890, 894, 899, 942, 945, 946, 948], "stai": [23, 170, 229, 230, 250, 252, 273, 309, 319, 331, 332, 333, 334, 550, 551, 552, 733], "sync": [23, 170, 325, 336, 512, 568, 685], "author": [23, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 167, 183, 185, 187, 205, 206, 208, 209, 210, 211, 212, 218, 222, 229, 236, 240, 252, 255, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 309, 310, 314, 678, 802, 812, 948], "marijn": [23, 58, 59, 71, 87, 100, 130, 187, 252, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 301, 302, 303, 304, 308, 364, 365, 954], "van": [23, 58, 59, 69, 71, 87, 100, 130, 154, 187, 206, 229, 252, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 301, 302, 303, 304, 308, 320, 343, 364, 365, 429, 458, 644, 954], "vliet": [23, 58, 59, 71, 87, 100, 130, 187, 252, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 301, 302, 303, 304, 308, 364, 365, 954], "w": [23, 31, 47, 58, 59, 65, 71, 87, 88, 100, 109, 130, 158, 163, 168, 178, 182, 186, 187, 204, 208, 222, 223, 229, 238, 252, 255, 268, 273, 274, 277, 290, 295, 299, 320, 328, 330, 331, 332, 333, 334, 342, 346, 364, 365, 377, 389, 439, 483, 490, 550, 551, 603, 611, 614, 635, 636, 669, 711, 741, 746, 766, 784, 786, 787, 788, 789, 790, 802, 811, 812, 815, 818, 853, 868, 874, 875, 889, 891, 896, 897, 898], "m": [23, 26, 27, 29, 30, 31, 34, 42, 44, 45, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 70, 71, 72, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 96, 98, 99, 100, 105, 112, 113, 123, 124, 125, 127, 128, 130, 132, 136, 137, 140, 141, 143, 146, 147, 151, 154, 161, 163, 166, 167, 169, 170, 171, 175, 176, 177, 182, 183, 184, 185, 187, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 227, 228, 229, 232, 234, 236, 237, 239, 240, 244, 245, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 273, 274, 277, 279, 281, 282, 290, 303, 309, 314, 317, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 367, 372, 373, 393, 398, 403, 405, 407, 410, 412, 413, 414, 416, 423, 428, 434, 443, 450, 458, 475, 476, 483, 485, 487, 489, 490, 491, 494, 504, 507, 519, 521, 522, 526, 543, 544, 547, 548, 550, 551, 554, 567, 570, 591, 599, 603, 611, 614, 618, 635, 636, 638, 644, 645, 647, 650, 651, 653, 654, 657, 659, 660, 669, 671, 676, 679, 684, 695, 733, 737, 741, 744, 746, 749, 754, 755, 756, 758, 759, 765, 770, 771, 772, 774, 775, 779, 784, 786, 787, 788, 789, 790, 802, 812, 815, 818, 834, 836, 838, 853, 860, 868, 870, 871, 872, 875, 876, 879, 888, 889, 891, 894, 896, 898, 899, 900, 904, 906, 939, 949], "vanvliet": [23, 58, 59, 71, 87, 100, 130, 187, 252, 274], "gmail": [23, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 58, 59, 60, 64, 65, 68, 69, 70, 71, 72, 76, 77, 83, 84, 87, 92, 96, 99, 100, 101, 103, 105, 106, 107, 108, 110, 114, 117, 120, 121, 122, 126, 128, 130, 136, 139, 140, 141, 145, 147, 148, 151, 153, 154, 155, 158, 159, 161, 162, 163, 167, 183, 185, 187, 205, 206, 208, 209, 210, 212, 218, 222, 236, 252, 255, 259, 260, 263, 264, 265, 269, 270, 273, 274], "com": [23, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 58, 59, 60, 64, 65, 68, 69, 70, 71, 72, 76, 77, 83, 84, 87, 92, 96, 99, 100, 101, 103, 105, 106, 107, 108, 110, 114, 117, 120, 121, 122, 128, 130, 136, 139, 140, 141, 145, 146, 147, 148, 151, 153, 154, 155, 158, 159, 161, 162, 163, 167, 183, 185, 186, 187, 205, 206, 208, 209, 210, 212, 218, 222, 236, 251, 252, 255, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 309, 331, 332, 333, 334, 342, 458, 550, 551, 559, 936, 950], "demonstr": [24, 31, 45, 53, 59, 67, 69, 70, 71, 90, 94, 97, 98, 100, 106, 110, 126, 130, 141, 144, 171, 172, 177, 178, 187, 194, 196, 197, 198, 217, 219, 222, 226, 228, 229, 231, 232, 235, 237, 243, 251, 252, 255, 263, 268, 294, 317, 320, 321, 653, 936, 950], "00": [25, 26, 27, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 59, 60, 67, 68, 70, 71, 72, 76, 82, 85, 93, 97, 98, 99, 100, 103, 107, 108, 109, 110, 111, 114, 115, 117, 118, 120, 123, 126, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 146, 148, 151, 156, 159, 162, 165, 167, 169, 170, 172, 174, 177, 180, 182, 183, 184, 185, 186, 190, 193, 194, 195, 198, 200, 202, 206, 207, 208, 209, 210, 211, 212, 214, 218, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 272, 273, 276, 277, 603, 635, 644, 956], "000": [25, 26, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 60, 68, 85, 90, 92, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 114, 115, 117, 120, 121, 122, 126, 136, 139, 140, 141, 142, 146, 148, 151, 155, 156, 159, 162, 163, 166, 167, 168, 169, 170, 172, 175, 177, 178, 185, 192, 193, 194, 198, 205, 207, 208, 209, 210, 211, 212, 217, 218, 221, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 244, 245, 246, 249, 250, 252, 256, 258, 259, 260, 269, 576, 697, 956], "total": [25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 291, 300, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 427, 444, 500, 550, 551, 638, 688, 779, 786, 787, 789, 790, 868, 894, 899, 956], "execut": [25, 32, 46, 51, 58, 82, 93, 111, 115, 118, 129, 133, 156, 159, 162, 165, 174, 180, 181, 190, 197, 198, 200, 214, 221, 225, 226, 242, 248, 249, 254, 262, 267, 272, 276, 291, 292, 303, 309, 320, 329, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 445, 450, 486, 493, 496, 499, 500, 526, 539, 541, 542, 550, 551, 594, 597, 598, 609, 610, 619, 620, 636, 641, 648, 649, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 836, 864, 866, 868, 871, 883, 889, 890, 892, 941, 942, 945, 946, 956], "auto_exampl": [25, 32, 46, 51, 82, 93, 111, 115, 118, 129, 133, 156], "mem": [25, 32, 46, 51, 82, 93, 111, 115, 118, 129, 133, 156, 165, 174, 180, 190, 200, 214, 221, 225, 242, 248, 249, 254, 262, 267, 272, 276, 956], "mb": [25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 331, 332, 341, 550, 551, 866, 889, 948, 953, 956], "n": [25, 34, 36, 69, 71, 97, 109, 115, 120, 136, 141, 163, 167, 170, 175, 177, 183, 186, 196, 198, 201, 212, 215, 229, 232, 233, 234, 235, 243, 249, 250, 252, 255, 257, 259, 260, 270, 277, 293, 301, 305, 308, 317, 319, 320, 323, 325, 326, 330, 331, 332, 333, 334, 336, 337, 338, 339, 342, 343, 345, 346, 347, 349, 380, 389, 408, 419, 420, 421, 424, 425, 426, 429, 438, 450, 475, 476, 498, 504, 507, 518, 520, 541, 550, 551, 572, 618, 635, 636, 640, 643, 653, 654, 660, 671, 719, 744, 757, 758, 759, 760, 764, 769, 784, 788, 798, 799, 802, 812, 813, 814, 816, 817, 834, 838, 839, 855, 870, 877, 894, 899, 900, 906, 936, 939, 950], "go": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 309, 310, 320, 344, 426, 533, 550, 551, 636, 733, 936, 937, 951], "end": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 281, 285, 288, 293, 294, 307, 309, 310, 319, 320, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 354, 355, 380, 385, 392, 408, 410, 412, 423, 426, 428, 483, 489, 490, 495, 501, 506, 507, 508, 523, 524, 550, 551, 564, 572, 573, 579, 587, 596, 609, 617, 619, 620, 621, 635, 636, 639, 653, 654, 663, 681, 683, 685, 692, 694, 701, 702, 703, 709, 713, 717, 719, 740, 741, 742, 743, 744, 746, 749, 761, 784, 785, 788, 791, 792, 793, 794, 795, 796, 797, 799, 808, 819, 821, 834, 866, 875, 880, 883, 889, 896, 922, 923, 924, 925, 927, 928, 932, 933, 934, 935, 936, 941], "download": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 283, 292, 293, 306, 309, 317, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 941, 943, 944, 945, 949, 950], "full": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 268, 269, 270, 273, 274, 281, 286, 287, 291, 292, 293, 294, 300, 302, 304, 305, 306, 307, 309, 310, 316, 317, 331, 332, 333, 334, 336, 338, 339, 342, 344, 345, 347, 364, 365, 367, 369, 386, 387, 423, 427, 428, 429, 439, 440, 441, 483, 488, 490, 491, 496, 513, 516, 526, 527, 545, 547, 548, 550, 551, 602, 603, 614, 617, 633, 636, 698, 701, 764, 770, 771, 773, 775, 788, 800, 802, 804, 811, 812, 814, 816, 817, 824, 834, 852, 854, 857, 860, 866, 868, 876, 883, 889, 894, 899, 901, 902, 905, 941, 948, 952, 956], "here": [26, 29, 30, 31, 33, 35, 36, 37, 38, 41, 44, 45, 47, 54, 57, 59, 60, 64, 67, 68, 69, 71, 92, 94, 97, 98, 101, 102, 108, 109, 110, 117, 121, 122, 127, 128, 131, 136, 138, 139, 141, 143, 144, 147, 148, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 250, 252, 255, 256, 257, 259, 260, 263, 264, 265, 269, 270, 273, 289, 309, 317, 320, 321, 337, 341, 342, 344, 346, 347, 402, 429, 456, 462, 489, 500, 507, 523, 549, 588, 598, 601, 611, 636, 653, 669, 672, 686, 688, 701, 733, 736, 737, 738, 747, 748, 750, 771, 772, 773, 774, 775, 779, 869, 900, 936, 938, 939, 941, 949, 950], "we": [26, 29, 30, 31, 33, 35, 36, 37, 39, 42, 44, 45, 47, 48, 52, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 80, 84, 85, 92, 94, 95, 96, 97, 98, 100, 101, 102, 109, 110, 113, 114, 117, 121, 122, 128, 130, 134, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 154, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 281, 282, 287, 293, 302, 303, 304, 306, 307, 310, 312, 314, 316, 317, 318, 320, 328, 331, 332, 333, 334, 336, 338, 341, 342, 344, 346, 349, 375, 398, 491, 493, 507, 513, 514, 515, 516, 523, 533, 550, 551, 552, 584, 611, 636, 653, 670, 678, 744, 788, 834, 835, 852, 861, 876, 894, 916, 936, 939, 941, 946, 947, 950, 951], "tutori": [26, 53, 58, 89, 97, 100, 110, 136, 149, 152, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 203, 204, 206, 207, 208, 213, 214, 217, 218, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 251, 252, 253, 255, 257, 260, 261, 263, 265, 266, 268, 270, 271, 277, 279, 286, 287, 291, 292, 293, 294, 295, 303, 307, 308, 309, 317, 319, 320, 321, 328, 329, 331, 332, 333, 334, 336, 364, 370, 423, 428, 483, 503, 518, 521, 524, 526, 550, 551, 562, 564, 576, 599, 624, 671, 789, 813, 814, 816, 817, 852, 864, 876, 904, 936, 938, 956], "1": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 250, 251, 252, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 309, 310, 313, 314, 316, 317, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 357, 364, 365, 366, 367, 369, 372, 375, 376, 377, 380, 382, 386, 389, 390, 391, 403, 410, 411, 412, 416, 422, 423, 424, 425, 426, 428, 429, 434, 437, 438, 441, 450, 457, 458, 459, 463, 464, 465, 475, 476, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 507, 512, 513, 514, 515, 516, 518, 519, 521, 522, 523, 524, 526, 527, 528, 539, 541, 542, 544, 545, 547, 548, 549, 550, 551, 559, 561, 566, 567, 568, 575, 576, 577, 582, 589, 590, 592, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 627, 628, 629, 630, 633, 635, 636, 637, 638, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 660, 661, 662, 663, 664, 665, 666, 669, 671, 672, 675, 678, 679, 680, 686, 693, 695, 697, 703, 705, 718, 724, 728, 730, 731, 732, 733, 734, 735, 736, 737, 740, 741, 742, 743, 744, 746, 748, 749, 751, 758, 759, 760, 763, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 809, 811, 812, 813, 814, 815, 816, 817, 818, 822, 824, 829, 834, 836, 839, 845, 849, 852, 853, 857, 860, 864, 865, 866, 867, 868, 870, 871, 872, 875, 876, 877, 879, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 902, 904, 907, 936, 941, 942, 945, 947, 948, 950, 953, 956], "http": [26, 34, 41, 69, 97, 114, 140, 177, 181, 186, 197, 210, 223, 260, 277, 290, 309, 314, 320, 331, 332, 333, 334, 338, 342, 346, 423, 436, 450, 456, 458, 475, 476, 491, 545, 550, 551, 559, 603, 637, 729, 766, 768, 815, 818, 830, 894, 936, 948, 950], "neuroimag": [26, 36, 38, 44, 45, 47, 61, 68, 72, 85, 86, 102, 121, 128, 140, 148, 154, 170, 181, 188, 191, 206, 210, 213, 214, 223, 239, 255, 256, 277, 314, 318, 319, 320, 321, 328, 329, 331, 332, 333, 334, 336, 337, 342, 369, 370, 423, 459, 487, 489, 490, 491, 501, 504, 524, 526, 545, 548, 562, 599, 604, 614, 618, 636, 650, 678, 741, 744, 746, 768, 771, 772, 773, 774, 775, 777, 778, 800, 802, 812, 852, 864, 876, 936, 949, 956], "usc": [26, 210], "edu": [26, 35, 50, 61, 63, 69, 73, 84, 95, 97, 128, 131, 140, 141, 142, 147, 160, 177, 181, 210, 240, 277, 320, 338, 342, 346, 436, 680, 894], "mediannervectf": 26, "mainak": [26, 72, 105, 112, 113, 218, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 298, 299, 300, 301, 306, 308, 314, 548, 954], "ja": [26, 72, 105, 112, 113, 218, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 298, 299, 300, 301, 306, 308, 314, 548, 954], "telecom": [26, 105, 113, 218], "paristech": [26, 105, 113, 218, 322, 954], "fr": [26, 33, 35, 36, 37, 39, 44, 45, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 86, 91, 105, 113, 119, 123, 124, 127, 134, 135, 137, 138, 144, 148, 153, 157, 158, 163, 185, 211, 218, 223, 257, 258, 259, 263, 264, 265, 269, 277, 287], "licens": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 288, 299, 317, 447, 448, 449, 456, 458], "bsd": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 310, 671], "claus": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274], "copyright": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 310], "contributor": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 936, 946, 949], "import": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 274, 277, 281, 282, 284, 286, 287, 291, 292, 293, 301, 304, 307, 310, 316, 317, 318, 320, 325, 331, 332, 333, 334, 336, 380, 396, 443, 450, 475, 476, 523, 550, 551, 559, 561, 563, 566, 567, 568, 569, 570, 571, 572, 574, 579, 580, 583, 584, 636, 659, 680, 695, 696, 700, 714, 728, 749, 764, 766, 784, 786, 787, 788, 789, 790, 802, 812, 829, 832, 834, 884, 934, 936, 939, 941, 942, 946, 949, 950, 951, 956], "numpi": [26, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 45, 48, 54, 57, 58, 59, 60, 61, 64, 66, 68, 71, 73, 76, 84, 85, 87, 90, 95, 97, 98, 99, 101, 108, 110, 117, 119, 120, 121, 122, 124, 127, 134, 138, 139, 140, 141, 142, 144, 146, 147, 153, 159, 161, 162, 163, 166, 167, 169, 172, 175, 176, 177, 182, 183, 184, 185, 186, 192, 194, 196, 197, 198, 202, 203, 204, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 237, 238, 239, 243, 244, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 281, 282, 283, 284, 285, 288, 290, 291, 292, 294, 300, 302, 308, 310, 318, 319, 325, 328, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 483, 489, 490, 491, 521, 522, 523, 547, 548, 549, 550, 551, 588, 636, 651, 669, 680, 688, 736, 737, 738, 747, 748, 750, 764, 769, 771, 772, 773, 774, 775, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 796, 802, 812, 813, 814, 815, 816, 817, 818, 834, 852, 868, 870, 875, 888, 938, 942], "print": [26, 27, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 96, 97, 98, 99, 100, 101, 103, 105, 106, 109, 110, 112, 113, 114, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 155, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 176, 177, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 201, 202, 205, 207, 208, 209, 210, 211, 212, 218, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 240, 243, 244, 245, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 277, 279, 290, 294, 299, 303, 304, 307, 317, 323, 331, 332, 333, 334, 423, 464, 518, 524, 550, 551, 585, 729, 730, 783, 786, 787, 788, 829, 836, 843, 860, 871, 873, 876, 936, 946, 948], "__doc__": [26, 27, 30, 33, 34, 36, 37, 39, 40, 41, 42, 44, 48, 50, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 101, 103, 105, 106, 110, 112, 113, 114, 119, 120, 121, 122, 123, 124, 127, 130, 131, 134, 135, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 151, 155, 157, 158, 159, 162, 201, 205, 209, 210, 258, 259, 264, 265], "tmin": [26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 54, 57, 58, 59, 60, 61, 64, 66, 68, 71, 72, 75, 77, 85, 86, 87, 96, 98, 99, 100, 109, 110, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 139, 140, 141, 144, 148, 149, 155, 158, 159, 162, 163, 166, 167, 168, 170, 171, 175, 177, 188, 192, 198, 203, 206, 207, 209, 210, 211, 212, 218, 222, 223, 227, 228, 232, 236, 238, 239, 240, 243, 250, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 281, 283, 288, 291, 292, 294, 296, 301, 302, 303, 305, 308, 316, 320, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 410, 412, 423, 424, 425, 428, 489, 495, 507, 509, 550, 551, 590, 609, 626, 648, 649, 653, 654, 663, 751, 770, 776, 784, 785, 786, 788, 789, 791, 792, 793, 794, 795, 796, 797, 799, 834, 868, 890, 896, 939], "tmax": [26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 54, 57, 58, 59, 60, 61, 64, 66, 68, 71, 72, 75, 77, 85, 86, 87, 96, 98, 99, 100, 109, 110, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 139, 140, 141, 144, 148, 149, 155, 158, 159, 162, 163, 166, 167, 168, 170, 171, 172, 175, 177, 178, 188, 192, 193, 194, 198, 203, 206, 207, 208, 209, 210, 211, 212, 218, 222, 223, 226, 227, 228, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 281, 283, 288, 291, 292, 294, 296, 301, 302, 303, 304, 305, 308, 316, 320, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 410, 412, 423, 424, 425, 428, 489, 495, 507, 509, 550, 551, 609, 626, 648, 649, 653, 654, 663, 770, 773, 784, 785, 786, 788, 789, 791, 792, 793, 794, 795, 796, 797, 799, 834, 868, 877, 890, 896, 936, 939], "event_id": [26, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 54, 58, 59, 60, 68, 71, 72, 75, 96, 98, 99, 100, 114, 121, 123, 124, 126, 127, 130, 131, 134, 137, 139, 140, 144, 148, 149, 155, 158, 161, 162, 163, 166, 167, 168, 170, 175, 177, 178, 188, 192, 194, 198, 203, 206, 209, 210, 211, 218, 223, 231, 232, 234, 238, 240, 244, 250, 251, 252, 257, 258, 259, 260, 263, 265, 268, 269, 270, 280, 281, 283, 285, 287, 288, 290, 291, 297, 300, 307, 316, 320, 323, 324, 325, 326, 331, 332, 341, 350, 424, 499, 505, 507, 510, 512, 550, 551, 568, 601, 637, 648, 649, 653, 654, 661, 662, 663, 664, 665, 695, 697, 698, 770, 786, 787, 788, 866, 869, 889, 939], "2": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 145, 146, 147, 148, 151, 152, 154, 155, 156, 157, 158, 159, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 218, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 290, 292, 296, 299, 300, 301, 302, 309, 313, 314, 316, 317, 318, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 355, 357, 364, 365, 367, 370, 382, 384, 389, 403, 410, 412, 416, 417, 423, 424, 425, 426, 428, 429, 437, 438, 450, 458, 459, 475, 476, 483, 485, 486, 489, 490, 491, 493, 494, 495, 499, 500, 502, 504, 505, 506, 512, 516, 518, 519, 521, 522, 524, 528, 535, 538, 544, 545, 547, 548, 550, 551, 559, 566, 575, 581, 582, 591, 593, 598, 601, 602, 603, 609, 611, 612, 613, 614, 616, 618, 619, 620, 630, 635, 636, 637, 641, 644, 645, 646, 648, 649, 650, 651, 653, 654, 656, 657, 658, 660, 667, 669, 670, 671, 675, 681, 686, 688, 701, 702, 705, 708, 711, 713, 724, 728, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 756, 758, 759, 760, 761, 763, 765, 766, 767, 770, 771, 772, 773, 774, 775, 776, 783, 784, 785, 786, 787, 788, 789, 790, 798, 799, 801, 802, 804, 805, 809, 812, 813, 814, 815, 816, 817, 818, 821, 824, 834, 835, 839, 840, 845, 852, 853, 860, 867, 868, 870, 872, 875, 876, 877, 878, 879, 880, 881, 888, 890, 891, 892, 894, 895, 896, 898, 899, 906, 936, 941, 942, 948, 950, 953, 956], "take": [26, 30, 31, 33, 36, 42, 45, 52, 57, 64, 67, 69, 70, 71, 73, 76, 97, 98, 101, 103, 106, 109, 121, 123, 124, 128, 136, 137, 140, 142, 146, 151, 157, 159, 161, 163, 166, 167, 168, 170, 171, 175, 176, 178, 181, 184, 185, 186, 188, 192, 193, 194, 195, 197, 198, 202, 205, 207, 208, 209, 211, 212, 216, 219, 222, 223, 228, 229, 232, 233, 234, 235, 237, 243, 250, 252, 255, 263, 264, 265, 269, 270, 273, 280, 281, 282, 284, 287, 290, 291, 292, 297, 298, 302, 303, 304, 309, 310, 319, 320, 321, 323, 325, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 354, 364, 365, 377, 380, 398, 408, 411, 423, 427, 428, 429, 436, 439, 440, 441, 483, 490, 507, 512, 516, 524, 526, 527, 540, 542, 545, 547, 548, 550, 551, 579, 603, 604, 605, 606, 607, 609, 610, 614, 619, 620, 636, 639, 641, 644, 719, 725, 732, 734, 745, 750, 770, 779, 784, 786, 787, 788, 789, 790, 831, 834, 835, 853, 860, 868, 870, 875, 876, 879, 888, 896, 906, 945, 946, 950], "right": [26, 31, 34, 36, 37, 39, 41, 65, 66, 67, 69, 71, 73, 77, 78, 83, 86, 88, 94, 97, 98, 100, 106, 109, 121, 134, 136, 139, 140, 141, 143, 155, 158, 160, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 181, 182, 184, 186, 187, 192, 194, 198, 201, 202, 204, 205, 206, 207, 218, 219, 222, 228, 229, 231, 232, 233, 234, 237, 240, 243, 244, 245, 246, 251, 252, 257, 259, 260, 263, 264, 265, 268, 269, 273, 274, 279, 282, 285, 287, 292, 293, 306, 309, 310, 317, 319, 320, 327, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 380, 382, 392, 393, 403, 404, 429, 450, 483, 490, 505, 507, 510, 517, 541, 548, 550, 551, 570, 575, 588, 601, 635, 636, 656, 659, 718, 747, 784, 786, 787, 788, 789, 790, 802, 812, 834, 849, 859, 860, 866, 867, 868, 872, 874, 875, 879, 887, 888, 889, 891, 896, 898, 900, 936, 941, 945], "hand": [26, 31, 34, 35, 139, 182, 186, 227, 232, 233, 234, 270, 293, 320, 336, 450, 636], "reject": [26, 31, 33, 37, 39, 42, 53, 54, 58, 68, 71, 72, 88, 96, 103, 104, 109, 123, 124, 126, 127, 128, 130, 131, 134, 137, 140, 141, 144, 148, 158, 166, 167, 168, 170, 171, 172, 177, 178, 191, 192, 198, 203, 206, 216, 218, 223, 227, 232, 233, 234, 237, 238, 241, 242, 245, 255, 257, 258, 259, 260, 263, 265, 269, 277, 279, 280, 281, 283, 284, 287, 291, 294, 299, 300, 303, 312, 320, 323, 324, 325, 326, 331, 332, 333, 336, 341, 426, 428, 550, 551, 595, 633, 636, 638, 639, 648, 649, 650, 653, 654, 661, 662, 671, 694, 698, 710, 762, 768, 770, 866, 879, 880, 881, 882, 956], "dict": [26, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 42, 44, 47, 48, 52, 54, 58, 61, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 80, 81, 84, 85, 86, 88, 92, 94, 96, 97, 101, 103, 105, 106, 112, 114, 120, 121, 123, 124, 126, 127, 128, 130, 131, 134, 136, 137, 139, 140, 141, 142, 143, 144, 147, 148, 149, 151, 155, 157, 158, 161, 162, 163, 166, 167, 168, 169, 171, 176, 177, 178, 183, 184, 185, 186, 192, 194, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 210, 212, 218, 219, 222, 223, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 281, 285, 286, 287, 291, 292, 297, 298, 304, 305, 306, 308, 309, 316, 320, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 353, 355, 364, 365, 370, 372, 378, 380, 382, 392, 393, 408, 410, 411, 412, 413, 414, 415, 423, 426, 427, 428, 434, 435, 436, 437, 438, 439, 440, 441, 456, 462, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 505, 507, 510, 512, 515, 517, 518, 519, 521, 522, 526, 527, 528, 529, 531, 533, 534, 535, 536, 545, 547, 548, 549, 550, 551, 553, 555, 559, 566, 571, 575, 586, 590, 591, 592, 593, 594, 597, 598, 602, 603, 604, 605, 606, 607, 609, 610, 614, 616, 619, 620, 621, 626, 628, 629, 632, 634, 635, 636, 637, 638, 646, 648, 649, 651, 653, 654, 656, 659, 660, 667, 682, 687, 691, 695, 696, 697, 698, 700, 704, 710, 714, 716, 719, 725, 733, 735, 736, 737, 747, 749, 752, 753, 769, 770, 771, 772, 774, 775, 779, 781, 784, 786, 787, 788, 789, 790, 802, 812, 820, 821, 823, 824, 834, 835, 836, 852, 853, 855, 856, 858, 859, 860, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 881, 887, 888, 889, 891, 894, 895, 896, 897, 898, 899, 900, 906, 924, 934, 935, 939], "mag": [26, 29, 31, 33, 34, 35, 38, 39, 47, 48, 52, 54, 57, 58, 59, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 96, 101, 103, 106, 107, 108, 113, 120, 121, 131, 134, 136, 143, 146, 147, 148, 151, 152, 158, 166, 168, 171, 172, 176, 178, 182, 183, 184, 188, 192, 195, 196, 198, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 218, 223, 226, 228, 230, 232, 233, 234, 236, 237, 243, 250, 251, 252, 260, 263, 265, 268, 274, 287, 316, 319, 320, 323, 326, 328, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 364, 365, 379, 386, 387, 406, 423, 427, 428, 439, 440, 441, 443, 483, 490, 492, 526, 527, 545, 547, 548, 550, 551, 591, 614, 633, 634, 635, 636, 641, 646, 648, 649, 651, 653, 654, 660, 724, 770, 784, 786, 787, 788, 789, 790, 859, 860, 866, 867, 868, 870, 872, 874, 875, 876, 879, 889, 891, 892, 896, 897, 898], "4e": [26, 31, 35, 54, 57, 68, 71, 96, 105, 108, 131, 134, 148, 158, 178, 188, 203, 206, 211, 212, 218, 223, 232, 251, 252, 260, 316, 326, 331, 332, 341, 428, 550, 551, 636, 653, 654, 770, 866, 889], "12": [26, 29, 33, 35, 37, 38, 39, 44, 45, 46, 47, 50, 54, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 85, 96, 99, 103, 106, 107, 109, 111, 123, 128, 130, 131, 134, 135, 136, 139, 140, 141, 148, 156, 158, 171, 172, 177, 178, 187, 188, 192, 194, 195, 196, 197, 198, 200, 201, 203, 205, 206, 209, 211, 212, 214, 218, 222, 223, 226, 228, 229, 230, 231, 232, 234, 236, 237, 240, 242, 243, 245, 250, 252, 255, 256, 257, 259, 260, 264, 265, 269, 273, 277, 278, 282, 288, 289, 299, 313, 316, 317, 320, 325, 326, 330, 331, 332, 333, 334, 336, 341, 343, 344, 364, 373, 377, 381, 403, 416, 420, 421, 423, 428, 429, 450, 464, 489, 505, 524, 526, 548, 550, 551, 563, 597, 601, 603, 636, 647, 648, 649, 653, 654, 669, 671, 737, 770, 784, 786, 787, 788, 789, 790, 814, 817, 854, 866, 868, 873, 885, 889, 892, 936, 942, 953, 956], "eog": [26, 30, 34, 37, 40, 41, 42, 53, 54, 58, 59, 68, 71, 72, 88, 96, 98, 101, 103, 104, 107, 108, 109, 111, 114, 117, 120, 121, 123, 124, 127, 131, 134, 135, 136, 137, 140, 144, 155, 163, 166, 167, 171, 172, 175, 177, 178, 192, 193, 194, 195, 198, 203, 206, 216, 218, 219, 223, 227, 228, 230, 233, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 257, 258, 259, 260, 263, 265, 269, 273, 279, 281, 282, 286, 291, 293, 294, 296, 298, 304, 316, 317, 318, 319, 320, 326, 331, 332, 333, 334, 336, 341, 379, 428, 443, 516, 524, 550, 551, 559, 561, 562, 563, 566, 567, 568, 574, 579, 582, 633, 635, 636, 649, 653, 654, 662, 665, 681, 686, 695, 736, 737, 770, 784, 786, 787, 788, 789, 790, 866, 867, 882, 887, 889, 939, 956], "250e": [26, 58, 170, 192, 218, 231, 234, 326, 331, 332, 428, 636, 653, 654, 770], "6": [26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 95, 97, 98, 100, 103, 105, 106, 107, 108, 109, 110, 111, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 152, 156, 157, 159, 161, 162, 166, 167, 168, 169, 170, 171, 172, 177, 178, 180, 182, 183, 184, 185, 186, 188, 192, 194, 195, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 245, 250, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 269, 270, 273, 274, 277, 282, 291, 294, 297, 300, 301, 303, 305, 307, 313, 316, 317, 320, 323, 326, 328, 330, 331, 332, 333, 334, 336, 340, 341, 344, 349, 382, 403, 409, 428, 450, 457, 483, 485, 488, 490, 503, 507, 518, 519, 521, 522, 550, 551, 563, 567, 603, 620, 635, 636, 645, 651, 652, 653, 654, 669, 673, 684, 695, 724, 733, 737, 771, 772, 774, 775, 783, 784, 786, 787, 788, 789, 790, 802, 812, 814, 817, 834, 836, 845, 851, 852, 853, 866, 867, 868, 871, 872, 875, 879, 881, 883, 888, 889, 891, 895, 896, 898, 904, 941, 942, 945, 947, 948, 956], "raw_path": [26, 198, 210], "subj001_somatosensory_20111109_01_aux": [26, 146], "f": [26, 31, 34, 35, 36, 44, 45, 47, 48, 53, 54, 55, 58, 59, 65, 66, 67, 72, 73, 87, 90, 97, 98, 109, 112, 117, 119, 121, 125, 129, 131, 134, 136, 138, 139, 140, 141, 142, 146, 154, 161, 167, 170, 175, 176, 177, 183, 184, 185, 186, 191, 193, 196, 198, 202, 208, 212, 218, 222, 223, 226, 227, 229, 232, 234, 236, 237, 238, 240, 245, 250, 251, 252, 255, 257, 258, 259, 261, 262, 263, 264, 265, 268, 269, 270, 273, 277, 286, 302, 316, 317, 319, 320, 323, 325, 328, 331, 332, 333, 334, 336, 355, 364, 370, 386, 406, 422, 458, 522, 524, 550, 551, 602, 633, 645, 656, 698, 740, 764, 765, 766, 767, 770, 772, 775, 788, 802, 812, 813, 816, 821, 857, 860, 867, 948, 950, 956], "d": [26, 30, 33, 37, 38, 41, 45, 47, 48, 52, 60, 65, 67, 72, 76, 78, 83, 85, 92, 99, 106, 107, 108, 110, 120, 121, 127, 128, 136, 138, 140, 145, 146, 147, 151, 154, 161, 162, 167, 183, 184, 185, 186, 197, 205, 206, 208, 209, 210, 211, 212, 218, 222, 229, 235, 236, 245, 252, 255, 259, 263, 264, 265, 268, 270, 273, 277, 286, 287, 290, 291, 293, 303, 308, 312, 317, 318, 320, 323, 325, 328, 331, 332, 333, 334, 336, 355, 364, 365, 370, 389, 423, 458, 491, 545, 550, 551, 564, 568, 602, 603, 656, 702, 728, 777, 778, 786, 789, 805, 821, 835, 876, 889, 950], "crop": [26, 29, 31, 34, 35, 36, 38, 47, 56, 57, 58, 59, 60, 61, 64, 66, 68, 70, 71, 72, 77, 85, 86, 101, 103, 107, 108, 109, 110, 136, 139, 143, 163, 166, 167, 168, 172, 175, 177, 193, 194, 198, 202, 205, 206, 207, 209, 210, 211, 212, 226, 227, 230, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 252, 256, 257, 263, 265, 268, 269, 273, 281, 282, 285, 287, 288, 291, 292, 293, 294, 302, 303, 304, 305, 308, 318, 325, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 646, 672, 685, 784, 788, 955], "half": [26, 97, 229, 230, 265, 287, 305, 306, 309, 320, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 410, 485, 519, 521, 522, 550, 551, 655, 771, 772, 774, 775, 779, 798, 800, 802, 812, 814, 817, 834, 860, 866, 868, 889, 894, 899], "length": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 138, 139, 140, 141, 142, 148, 159, 162, 167, 169, 170, 175, 177, 198, 201, 212, 218, 223, 226, 228, 230, 231, 232, 233, 234, 237, 238, 239, 240, 243, 246, 250, 256, 260, 268, 280, 282, 283, 290, 291, 293, 298, 300, 305, 316, 317, 319, 320, 323, 326, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 354, 381, 428, 464, 483, 485, 488, 489, 490, 491, 494, 495, 498, 519, 521, 522, 541, 548, 549, 550, 551, 606, 618, 620, 635, 636, 638, 644, 653, 654, 671, 678, 701, 702, 723, 734, 750, 764, 765, 769, 770, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 798, 801, 804, 805, 809, 813, 814, 815, 816, 817, 818, 824, 834, 845, 851, 852, 853, 860, 867, 868, 870, 872, 875, 877, 879, 888, 891, 894, 895, 896, 897, 898, 899], "save": [26, 31, 33, 35, 37, 55, 56, 60, 67, 69, 70, 87, 88, 97, 101, 135, 136, 137, 140, 142, 161, 162, 168, 169, 176, 177, 182, 183, 184, 186, 187, 188, 194, 196, 203, 206, 207, 209, 215, 217, 218, 227, 228, 230, 232, 234, 235, 237, 244, 245, 246, 252, 259, 263, 279, 281, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 301, 302, 303, 304, 305, 306, 308, 309, 318, 320, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 355, 380, 381, 406, 456, 487, 513, 514, 515, 516, 542, 549, 550, 551, 568, 571, 576, 609, 610, 625, 635, 636, 684, 696, 697, 700, 701, 705, 708, 711, 722, 774, 775, 784, 785, 786, 787, 788, 789, 790, 806, 807, 819, 821, 834, 923, 927, 928, 930, 936, 939, 946], "memori": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 285, 291, 292, 293, 295, 296, 297, 298, 299, 302, 303, 307, 309, 312, 318, 323, 326, 331, 332, 333, 334, 349, 358, 359, 362, 398, 428, 430, 432, 444, 485, 492, 495, 496, 500, 521, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 595, 605, 606, 607, 609, 610, 616, 638, 671, 726, 731, 733, 771, 772, 774, 775, 792, 795, 811, 813, 814, 815, 816, 817, 818, 834, 870, 939, 941, 942, 948], "120": [26, 29, 31, 33, 50, 54, 59, 61, 64, 68, 71, 82, 85, 107, 108, 135, 159, 161, 168, 177, 186, 195, 202, 207, 212, 218, 223, 226, 228, 230, 232, 236, 239, 256, 259, 260, 269, 277, 323, 331, 332, 506, 550, 551, 646, 651, 866, 889, 956], "set_channel_typ": [26, 155, 166, 175, 177, 218, 243, 290, 301, 305, 306, 307, 331, 332, 333, 334, 336, 516, 550, 551, 659], "eeg058": 26, "averag": [26, 27, 29, 30, 31, 33, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 91, 93, 95, 96, 98, 99, 100, 103, 105, 106, 107, 108, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 134, 135, 137, 139, 140, 143, 144, 146, 147, 148, 152, 158, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 176, 178, 179, 180, 184, 185, 188, 191, 192, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 274, 277, 280, 281, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 298, 299, 301, 303, 304, 305, 307, 312, 316, 317, 319, 323, 324, 328, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 353, 422, 423, 425, 442, 459, 483, 490, 497, 502, 504, 517, 524, 540, 550, 551, 576, 589, 590, 604, 605, 606, 607, 609, 610, 616, 619, 620, 635, 636, 640, 641, 643, 648, 649, 651, 653, 656, 660, 661, 664, 667, 697, 701, 702, 725, 728, 740, 748, 784, 785, 786, 787, 788, 789, 790, 804, 805, 813, 814, 815, 816, 817, 818, 834, 836, 860, 868, 870, 871, 875, 879, 887, 888, 890, 891, 896, 898, 936, 939, 956], "true": [26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 112, 113, 114, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 192, 193, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 245, 246, 250, 251, 252, 255, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 274, 277, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 293, 298, 300, 302, 303, 304, 305, 306, 308, 309, 316, 317, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 354, 355, 364, 365, 367, 369, 370, 371, 374, 375, 376, 377, 380, 381, 382, 385, 388, 389, 390, 391, 392, 393, 406, 408, 410, 411, 412, 413, 416, 423, 427, 428, 429, 430, 432, 433, 439, 440, 441, 445, 447, 448, 449, 450, 452, 453, 454, 456, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 501, 502, 504, 505, 508, 512, 513, 514, 515, 516, 517, 518, 521, 522, 524, 526, 527, 528, 531, 536, 540, 541, 542, 544, 545, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 595, 596, 598, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 616, 618, 619, 620, 621, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 645, 647, 648, 649, 651, 653, 654, 655, 656, 657, 660, 661, 662, 667, 669, 671, 686, 694, 697, 698, 701, 703, 706, 714, 716, 719, 722, 725, 727, 728, 730, 732, 733, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 754, 758, 761, 762, 765, 766, 768, 771, 772, 774, 775, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 795, 796, 798, 803, 804, 805, 811, 813, 814, 815, 816, 817, 818, 819, 821, 829, 832, 834, 836, 840, 843, 844, 845, 849, 850, 852, 853, 854, 855, 857, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 906, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 941], "show": [26, 29, 30, 33, 34, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 57, 58, 61, 63, 64, 67, 68, 70, 71, 72, 73, 78, 79, 80, 81, 84, 85, 87, 90, 95, 96, 98, 100, 101, 104, 105, 111, 124, 126, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 151, 152, 154, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 181, 182, 183, 185, 186, 192, 194, 195, 196, 198, 202, 204, 205, 206, 207, 208, 217, 218, 226, 228, 229, 230, 231, 232, 233, 234, 236, 238, 243, 245, 246, 250, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 279, 281, 282, 283, 284, 286, 288, 290, 291, 294, 298, 302, 303, 306, 307, 309, 312, 316, 319, 320, 328, 329, 330, 331, 332, 333, 334, 336, 339, 340, 344, 345, 346, 347, 375, 377, 380, 381, 483, 490, 524, 542, 550, 551, 585, 633, 635, 636, 651, 656, 660, 662, 783, 784, 785, 786, 787, 789, 790, 802, 812, 834, 836, 843, 844, 845, 852, 853, 854, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 905, 941, 950, 955, 956], "power": [26, 38, 47, 53, 58, 62, 64, 82, 87, 95, 98, 108, 109, 132, 133, 139, 140, 141, 142, 148, 155, 159, 163, 171, 172, 175, 176, 188, 191, 192, 198, 206, 209, 212, 218, 222, 228, 229, 233, 236, 239, 246, 250, 253, 254, 256, 260, 261, 262, 268, 277, 279, 282, 284, 286, 287, 288, 290, 291, 292, 293, 298, 299, 302, 303, 308, 309, 310, 317, 319, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 345, 346, 347, 355, 356, 357, 358, 361, 364, 365, 386, 422, 423, 427, 428, 483, 485, 488, 490, 491, 494, 496, 517, 519, 521, 522, 523, 524, 550, 551, 557, 591, 593, 598, 602, 603, 604, 609, 610, 614, 617, 619, 620, 627, 632, 633, 636, 690, 698, 703, 705, 718, 732, 738, 749, 764, 765, 766, 767, 768, 771, 772, 773, 774, 775, 784, 785, 786, 787, 788, 789, 790, 795, 804, 805, 813, 814, 815, 816, 817, 818, 828, 834, 852, 859, 860, 861, 867, 868, 870, 873, 875, 876, 881, 887, 890, 896, 904, 936, 956], "interfer": [26, 151, 162, 226, 227, 230, 235, 236, 237, 239, 245, 277, 317, 319, 323, 650, 671, 936], "remov": [26, 33, 42, 44, 47, 53, 54, 57, 58, 61, 68, 77, 84, 85, 86, 94, 96, 97, 98, 99, 101, 102, 103, 104, 107, 108, 111, 117, 120, 126, 130, 136, 139, 140, 146, 149, 158, 162, 166, 167, 168, 169, 172, 175, 176, 177, 183, 184, 186, 187, 188, 192, 193, 194, 196, 198, 202, 203, 206, 207, 208, 209, 210, 212, 218, 223, 226, 227, 228, 229, 230, 231, 234, 235, 237, 239, 240, 243, 245, 246, 252, 257, 258, 259, 260, 268, 270, 273, 274, 277, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 317, 319, 320, 323, 325, 328, 331, 332, 333, 334, 335, 336, 337, 341, 342, 355, 370, 380, 396, 416, 423, 432, 433, 489, 491, 495, 506, 522, 526, 535, 547, 548, 550, 551, 552, 566, 572, 602, 633, 634, 635, 636, 637, 650, 652, 656, 660, 678, 679, 686, 692, 701, 703, 706, 725, 728, 748, 750, 784, 786, 787, 788, 789, 790, 821, 834, 857, 873, 889, 905, 906, 918, 939, 956], "compute_psd": [26, 98, 101, 136, 159, 163, 166, 168, 169, 192, 193, 209, 212, 218, 226, 228, 230, 234, 236, 238, 239, 246, 268, 269, 270, 304, 305, 306, 308, 331, 332, 333, 334, 488, 550, 551, 636, 786, 789, 804, 868, 879, 881, 890], "60": [26, 29, 31, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 91, 95, 96, 97, 99, 100, 101, 103, 105, 107, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 151, 152, 157, 158, 159, 162, 163, 166, 167, 169, 170, 175, 176, 177, 178, 185, 192, 193, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 223, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 243, 244, 245, 246, 251, 252, 255, 256, 258, 259, 260, 263, 265, 268, 273, 274, 283, 284, 299, 317, 323, 522, 550, 551, 669, 877, 955], "fals": [26, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 56, 57, 58, 66, 67, 68, 70, 73, 74, 75, 76, 80, 81, 90, 91, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 109, 110, 112, 114, 117, 121, 123, 124, 126, 127, 128, 131, 134, 135, 136, 137, 139, 141, 142, 145, 146, 147, 151, 152, 154, 160, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 186, 188, 192, 193, 194, 195, 196, 197, 198, 202, 204, 206, 207, 208, 209, 211, 215, 218, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 250, 251, 252, 256, 257, 258, 259, 260, 265, 268, 269, 270, 273, 277, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 293, 294, 300, 301, 302, 303, 306, 308, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 355, 358, 359, 362, 364, 365, 367, 369, 370, 371, 375, 376, 377, 380, 381, 382, 385, 388, 390, 391, 392, 394, 408, 411, 413, 416, 423, 428, 429, 430, 432, 433, 439, 442, 445, 447, 448, 449, 450, 452, 453, 454, 456, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 486, 488, 489, 490, 491, 493, 497, 501, 502, 504, 508, 513, 514, 515, 516, 517, 518, 524, 527, 531, 536, 541, 542, 544, 545, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 595, 598, 601, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 616, 619, 620, 621, 627, 628, 629, 631, 632, 633, 634, 635, 636, 641, 648, 649, 651, 653, 654, 656, 657, 660, 661, 662, 666, 667, 669, 671, 672, 675, 691, 694, 697, 698, 701, 703, 708, 713, 714, 716, 717, 719, 721, 722, 725, 728, 729, 730, 733, 739, 740, 741, 742, 743, 744, 745, 746, 751, 757, 760, 761, 762, 765, 768, 771, 772, 774, 775, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 793, 796, 798, 802, 803, 804, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 829, 832, 834, 836, 844, 849, 850, 852, 853, 854, 857, 860, 861, 864, 866, 867, 868, 870, 871, 872, 874, 875, 877, 879, 881, 883, 885, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 902, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 941], "pick": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 109, 112, 114, 117, 119, 120, 121, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 144, 146, 147, 148, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 183, 184, 186, 188, 192, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 218, 219, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 246, 250, 251, 252, 257, 258, 259, 260, 263, 265, 268, 269, 273, 274, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 303, 306, 308, 309, 316, 319, 320, 326, 328, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 345, 346, 347, 354, 364, 365, 378, 381, 382, 385, 395, 397, 428, 439, 485, 491, 499, 504, 508, 521, 522, 550, 551, 627, 628, 629, 630, 633, 634, 635, 636, 638, 650, 652, 653, 654, 663, 667, 677, 679, 686, 752, 770, 779, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 803, 816, 817, 834, 850, 854, 858, 860, 866, 867, 870, 872, 873, 879, 880, 881, 883, 885, 887, 890, 892, 894, 899, 939], "exclud": [26, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 50, 52, 54, 57, 60, 61, 66, 67, 69, 71, 75, 76, 77, 84, 85, 86, 91, 95, 96, 97, 98, 101, 105, 109, 112, 114, 117, 119, 123, 124, 126, 127, 131, 134, 135, 136, 137, 138, 139, 146, 159, 163, 168, 169, 170, 176, 182, 183, 184, 192, 195, 198, 202, 203, 207, 208, 209, 210, 211, 212, 218, 223, 226, 227, 228, 230, 232, 233, 234, 235, 236, 238, 246, 252, 257, 258, 259, 263, 265, 268, 269, 270, 281, 283, 285, 286, 287, 288, 291, 292, 293, 294, 298, 304, 316, 323, 328, 329, 330, 331, 332, 333, 334, 338, 339, 341, 342, 344, 345, 346, 347, 373, 374, 387, 394, 428, 434, 439, 441, 491, 502, 550, 551, 553, 559, 566, 568, 574, 578, 599, 627, 628, 629, 631, 633, 634, 635, 636, 637, 648, 649, 650, 651, 660, 671, 686, 698, 703, 724, 728, 733, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 803, 861, 870, 872, 873, 874, 880, 882, 883, 890, 915, 939], "bad": [26, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 53, 54, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 75, 77, 84, 85, 86, 91, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 111, 114, 117, 119, 120, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 148, 149, 155, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 188, 191, 192, 193, 194, 195, 196, 198, 202, 203, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 257, 258, 259, 260, 268, 269, 270, 273, 281, 283, 284, 285, 286, 287, 290, 291, 293, 294, 298, 299, 301, 302, 303, 305, 306, 307, 308, 318, 319, 323, 325, 326, 328, 331, 332, 333, 334, 336, 365, 378, 381, 382, 387, 394, 397, 409, 428, 432, 439, 440, 441, 485, 499, 504, 512, 521, 522, 524, 540, 550, 551, 563, 595, 614, 628, 629, 630, 633, 634, 635, 636, 638, 639, 640, 643, 648, 649, 650, 652, 653, 654, 655, 660, 661, 662, 663, 671, 672, 677, 679, 686, 698, 701, 724, 725, 728, 752, 770, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 817, 860, 861, 866, 867, 870, 872, 873, 874, 881, 885, 889, 890, 921, 936, 949, 956], "arang": [26, 30, 34, 35, 41, 45, 69, 71, 95, 108, 117, 119, 121, 122, 134, 139, 141, 147, 192, 212, 218, 222, 223, 229, 238, 239, 250, 252, 255, 257, 258, 259, 260, 264, 265, 270, 273, 337, 344, 522, 539, 550, 551, 568, 680, 776, 802, 812, 814, 817], "181": [26, 61, 126, 154, 195, 218, 236, 255, 259, 277, 749, 770], "fir_design": [26, 33, 34, 35, 37, 39, 40, 41, 42, 44, 103, 114, 126, 148, 159, 218, 229, 232, 270, 284, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "firwin": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 218, 223, 229, 230, 231, 232, 237, 238, 239, 240, 260, 270, 284, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "stim_channel": [26, 29, 31, 33, 68, 72, 106, 134, 135, 137, 140, 163, 166, 168, 175, 178, 192, 194, 203, 218, 227, 232, 234, 240, 244, 257, 268, 269, 284, 286, 287, 298, 324, 415, 524, 525, 550, 551, 559, 566, 574, 582, 663], "uppt001": [26, 33, 107, 108, 218], "stim": [26, 29, 31, 34, 37, 40, 41, 47, 54, 58, 59, 60, 68, 71, 72, 75, 92, 96, 98, 99, 100, 106, 107, 108, 114, 117, 120, 122, 126, 127, 131, 134, 135, 137, 140, 149, 166, 167, 168, 172, 175, 177, 178, 188, 192, 195, 198, 203, 206, 208, 209, 211, 212, 215, 218, 223, 227, 230, 231, 232, 234, 239, 240, 243, 244, 251, 252, 257, 258, 259, 269, 270, 279, 284, 286, 287, 298, 319, 320, 323, 324, 331, 332, 333, 334, 336, 341, 379, 418, 443, 516, 524, 525, 550, 551, 559, 566, 574, 576, 582, 633, 636, 663, 698, 734, 784, 786, 787, 788, 789, 790, 866, 889, 939], "none": [26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 100, 103, 105, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 123, 124, 126, 127, 130, 131, 134, 136, 137, 139, 140, 141, 144, 146, 147, 148, 149, 152, 158, 161, 162, 163, 167, 168, 169, 170, 171, 175, 176, 177, 178, 184, 185, 186, 187, 188, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 223, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 245, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 302, 303, 304, 306, 308, 309, 310, 316, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 389, 393, 394, 395, 396, 397, 398, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 677, 678, 679, 680, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 763, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 826, 829, 833, 834, 836, 838, 840, 843, 844, 845, 846, 848, 849, 852, 853, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 907, 915, 916, 917, 918, 919, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935], "preload": [26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 58, 59, 60, 68, 75, 94, 97, 98, 99, 100, 107, 108, 109, 110, 114, 126, 130, 134, 137, 139, 140, 141, 144, 148, 149, 159, 163, 166, 167, 168, 170, 171, 172, 175, 177, 178, 185, 192, 193, 196, 198, 206, 208, 209, 210, 211, 212, 215, 218, 223, 226, 228, 231, 232, 233, 234, 238, 240, 243, 251, 252, 257, 258, 259, 260, 263, 265, 268, 269, 270, 279, 283, 284, 287, 288, 291, 292, 295, 301, 302, 303, 308, 316, 317, 323, 331, 332, 333, 334, 341, 416, 432, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 595, 648, 649, 653, 654, 694, 696, 700, 725, 728, 784, 786, 787, 788, 789, 790, 866, 889], "physiolog": [26, 34, 68, 163, 219, 230, 232, 235, 277, 285, 317, 331, 332, 333, 334, 450, 475, 476, 550, 551, 728], "eyeblink": [26, 649, 654], "heartbeat": [26, 109, 168, 172, 228, 232, 233, 234, 235, 237, 245, 648, 653, 661, 664], "add_proj": [26, 27, 29, 30, 31, 68, 119, 128, 136, 138, 166, 168, 172, 175, 188, 198, 210, 211, 212, 218, 223, 226, 231, 233, 234, 238, 239, 243, 256, 331, 332, 333, 334, 341, 550, 551, 650, 748], "copi": [26, 27, 30, 31, 34, 35, 36, 38, 39, 40, 42, 44, 45, 47, 48, 53, 64, 71, 72, 73, 74, 75, 80, 84, 88, 94, 97, 100, 101, 105, 110, 134, 136, 141, 146, 162, 166, 167, 170, 172, 175, 176, 177, 181, 187, 188, 192, 194, 195, 197, 198, 202, 204, 211, 212, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 245, 252, 256, 259, 260, 273, 281, 283, 284, 286, 287, 290, 291, 297, 298, 303, 306, 308, 309, 318, 320, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 348, 354, 355, 370, 375, 377, 380, 385, 433, 440, 442, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 492, 505, 508, 521, 522, 550, 551, 600, 602, 616, 628, 629, 632, 635, 636, 645, 648, 649, 655, 656, 663, 667, 672, 686, 695, 722, 725, 728, 781, 784, 785, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 798, 803, 820, 821, 936, 939], "apply_proj": [26, 98, 121, 168, 172, 175, 185, 193, 208, 233, 234, 235, 239, 286, 291, 331, 332, 333, 334, 513, 514, 515, 516, 550, 551, 650, 728, 889], "fix": [26, 31, 48, 57, 66, 67, 71, 73, 74, 75, 80, 81, 84, 87, 106, 117, 127, 166, 168, 184, 189, 190, 191, 194, 196, 202, 206, 223, 238, 239, 251, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 320, 324, 329, 330, 333, 334, 335, 342, 364, 365, 376, 388, 423, 430, 433, 496, 524, 526, 528, 542, 545, 547, 548, 550, 592, 596, 598, 603, 604, 605, 606, 607, 614, 615, 618, 619, 620, 636, 640, 644, 669, 691, 703, 714, 724, 792, 795, 802, 812, 813, 814, 816, 817, 836, 852, 871, 928, 929, 934, 936, 941, 956], "delai": [26, 30, 45, 218, 222, 233, 234, 238, 277, 298, 308, 317, 324, 326, 331, 332, 333, 334, 489, 495, 500, 518, 519, 521, 522, 550, 551, 595, 694, 877], "due": [26, 31, 66, 69, 73, 107, 194, 212, 216, 217, 226, 228, 229, 233, 237, 238, 239, 243, 246, 251, 270, 287, 288, 303, 308, 316, 319, 320, 327, 331, 332, 333, 334, 335, 337, 475, 482, 489, 500, 504, 517, 547, 548, 550, 551, 646, 647, 660, 667, 671, 685, 705, 711, 788, 834, 930, 936], "hardwar": [26, 192, 217, 228, 235, 292, 319, 320, 324, 331, 332, 336, 445, 475, 550, 551, 636, 866, 883, 889, 941, 948], "4": [26, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 180, 182, 183, 184, 186, 187, 188, 190, 192, 194, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 219, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 267, 268, 269, 270, 273, 274, 277, 279, 281, 285, 292, 297, 300, 305, 313, 316, 317, 319, 320, 323, 328, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 364, 365, 369, 373, 374, 380, 381, 382, 392, 403, 423, 450, 459, 483, 489, 490, 491, 496, 502, 506, 507, 518, 524, 526, 541, 547, 548, 550, 551, 587, 592, 603, 610, 627, 628, 629, 635, 636, 641, 645, 648, 650, 651, 662, 668, 670, 680, 686, 703, 705, 724, 728, 733, 737, 744, 764, 765, 768, 772, 784, 786, 787, 788, 789, 790, 802, 803, 805, 809, 812, 814, 815, 817, 818, 821, 822, 823, 824, 834, 836, 838, 851, 852, 853, 855, 860, 866, 867, 868, 870, 871, 872, 875, 876, 879, 886, 888, 889, 890, 891, 892, 894, 896, 898, 899, 900, 936, 941, 942, 948, 956], "shift_tim": [26, 112, 166, 286, 290, 307, 330, 331, 332, 333, 334, 784, 788], "004": [26, 36, 58, 59, 70, 148, 155, 166, 168, 171, 175, 192, 195, 202, 231, 252, 277, 343, 429, 503, 599, 834], "result": [26, 34, 35, 52, 55, 56, 71, 72, 81, 84, 87, 97, 106, 109, 117, 126, 128, 130, 134, 141, 154, 160, 162, 163, 170, 172, 175, 177, 181, 182, 183, 185, 186, 188, 192, 193, 196, 198, 202, 204, 212, 215, 222, 223, 226, 229, 231, 232, 233, 234, 236, 243, 244, 246, 250, 252, 255, 256, 259, 260, 263, 264, 265, 273, 277, 280, 282, 283, 285, 287, 290, 301, 302, 304, 308, 309, 312, 316, 317, 320, 323, 325, 326, 331, 332, 333, 334, 336, 338, 339, 342, 343, 345, 346, 347, 356, 358, 365, 382, 385, 386, 422, 423, 428, 430, 432, 458, 460, 482, 484, 485, 499, 508, 517, 523, 541, 545, 547, 548, 550, 551, 568, 588, 595, 599, 603, 605, 606, 607, 609, 614, 615, 622, 636, 641, 647, 653, 654, 656, 660, 669, 671, 688, 694, 702, 725, 736, 737, 738, 747, 748, 750, 769, 770, 771, 772, 773, 774, 775, 776, 784, 786, 787, 788, 789, 790, 834, 843, 845, 860, 866, 867, 889, 936], "time_unit": [26, 37, 40, 61, 66, 68, 69, 77, 85, 86, 88, 96, 98, 112, 119, 120, 126, 127, 128, 148, 176, 177, 178, 188, 201, 203, 204, 209, 210, 211, 218, 223, 251, 256, 257, 258, 303, 330, 333, 334, 338, 339, 342, 345, 346, 347, 860, 870, 872, 875, 876, 894, 899], "": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 50, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81, 84, 85, 86, 88, 90, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 142, 143, 144, 146, 147, 148, 149, 151, 153, 154, 155, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 281, 282, 283, 284, 285, 286, 291, 292, 293, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 322, 323, 325, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 355, 357, 364, 365, 370, 371, 372, 389, 392, 396, 422, 423, 427, 429, 435, 436, 455, 456, 458, 475, 476, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 504, 507, 513, 514, 515, 516, 517, 519, 521, 522, 523, 542, 544, 547, 548, 550, 551, 556, 559, 566, 568, 574, 575, 582, 585, 590, 594, 597, 599, 602, 603, 614, 618, 619, 620, 635, 636, 637, 638, 647, 654, 655, 656, 658, 662, 663, 670, 671, 675, 678, 689, 701, 702, 711, 713, 714, 715, 716, 720, 721, 723, 725, 728, 729, 733, 734, 741, 744, 746, 761, 770, 771, 772, 773, 774, 775, 779, 780, 782, 784, 785, 786, 787, 788, 789, 790, 798, 802, 804, 805, 810, 812, 813, 814, 815, 816, 817, 818, 821, 826, 833, 834, 843, 844, 853, 854, 860, 862, 864, 866, 867, 870, 872, 873, 875, 876, 877, 879, 883, 889, 891, 892, 894, 896, 897, 898, 899, 900, 904, 915, 916, 917, 919, 930, 931, 936, 938, 939, 941, 946, 948, 952, 954, 956], "topomap": [26, 45, 68, 100, 109, 113, 146, 168, 177, 196, 231, 234, 260, 269, 274, 279, 281, 282, 283, 284, 286, 290, 291, 301, 303, 304, 305, 312, 319, 328, 331, 332, 333, 334, 336, 340, 341, 380, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 866, 868, 870, 873, 875, 879, 886, 887, 888, 889, 890, 891, 892, 896, 898], "016": [26, 29, 58, 59, 155, 166, 168, 175, 195, 229, 231, 252, 277, 320, 636, 749], "030": [26, 107, 155, 166, 175, 195, 243, 246, 252], "060": [26, 107, 166, 175, 195, 243, 246, 252], "070": [26, 107], "directori": [26, 38, 47, 59, 60, 107, 108, 121, 122, 143, 146, 151, 181, 182, 187, 192, 197, 198, 210, 218, 282, 290, 294, 302, 303, 306, 309, 316, 323, 329, 336, 337, 338, 341, 342, 345, 346, 347, 371, 375, 376, 377, 380, 429, 434, 435, 436, 442, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 502, 533, 535, 539, 541, 542, 543, 544, 558, 564, 579, 583, 588, 592, 594, 622, 667, 688, 702, 706, 708, 715, 721, 722, 723, 726, 732, 733, 747, 750, 761, 779, 780, 826, 834, 852, 854, 864, 894, 900, 931, 936, 945, 948], "home": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 161, 163, 166, 167, 169, 170, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 188, 192, 193, 194, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 223, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 243, 246, 251, 252, 256, 257, 258, 259, 260, 263, 265, 269, 273, 274, 282, 294, 302, 303, 331, 332, 442, 550, 551, 866, 889], "circleci": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 161, 163, 166, 167, 169, 170, 172, 175, 176, 177, 178, 182, 183, 184, 185, 188, 192, 193, 194, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 223, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 243, 246, 251, 252, 256, 257, 258, 259, 260, 263, 265, 269, 273, 274, 309], "mne_data": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 161, 163, 167, 169, 170, 172, 175, 176, 177, 178, 182, 183, 184, 185, 188, 192, 193, 194, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 223, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 243, 246, 251, 252, 256, 257, 258, 259, 260, 263, 265, 269, 273, 274, 282, 309, 447, 448, 449, 450, 452, 453, 454, 456, 457, 461, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 936], "res4": [26, 38, 47, 107, 108, 146, 151, 210, 218], "hc": [26, 38, 47, 107, 108, 146, 151, 210, 218], "present": [26, 30, 36, 38, 39, 42, 47, 57, 66, 69, 70, 96, 108, 143, 146, 151, 154, 160, 166, 168, 170, 175, 176, 184, 192, 194, 195, 196, 206, 215, 216, 218, 219, 226, 227, 231, 233, 234, 235, 237, 240, 244, 246, 255, 259, 263, 264, 265, 277, 281, 282, 283, 285, 287, 288, 290, 291, 293, 298, 301, 302, 304, 306, 316, 317, 319, 320, 323, 324, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 351, 352, 355, 364, 365, 370, 375, 380, 386, 388, 392, 397, 402, 412, 416, 423, 427, 428, 429, 438, 439, 440, 441, 462, 483, 490, 502, 504, 507, 512, 524, 525, 526, 527, 531, 545, 547, 548, 550, 551, 553, 559, 562, 566, 574, 582, 594, 602, 614, 633, 635, 636, 638, 639, 646, 647, 651, 653, 656, 661, 671, 679, 698, 699, 748, 753, 769, 784, 786, 787, 788, 789, 790, 804, 821, 834, 852, 853, 859, 860, 868, 870, 872, 875, 876, 879, 886, 888, 889, 890, 891, 892, 895, 896, 898, 948], "quaternion": [26, 38, 47, 107, 108, 146, 151, 210, 218, 285, 419, 420, 421, 640, 643, 825, 827, 878], "match": [26, 29, 34, 35, 37, 38, 43, 44, 46, 47, 53, 54, 57, 58, 59, 60, 66, 67, 71, 72, 73, 75, 77, 84, 85, 86, 88, 96, 98, 99, 100, 101, 106, 107, 108, 109, 114, 117, 120, 121, 122, 123, 124, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 146, 148, 149, 151, 155, 158, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 183, 187, 188, 192, 195, 198, 203, 206, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 234, 238, 240, 243, 244, 245, 250, 251, 252, 256, 257, 258, 259, 260, 263, 265, 269, 281, 282, 283, 284, 286, 287, 288, 290, 292, 293, 294, 306, 309, 320, 324, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 385, 409, 423, 427, 434, 439, 440, 483, 484, 489, 490, 491, 493, 499, 504, 507, 508, 510, 512, 514, 515, 517, 533, 549, 550, 551, 559, 566, 574, 582, 600, 622, 625, 627, 628, 629, 635, 636, 645, 646, 651, 657, 660, 672, 685, 695, 697, 698, 703, 718, 721, 734, 749, 770, 775, 779, 784, 785, 786, 787, 788, 789, 790, 802, 803, 812, 824, 834, 852, 860, 866, 867, 868, 872, 875, 876, 879, 882, 888, 889, 890, 891, 927, 946, 956], "desir": [26, 31, 37, 38, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 97, 107, 108, 117, 119, 120, 121, 122, 128, 131, 134, 135, 137, 139, 146, 151, 152, 157, 168, 172, 177, 183, 187, 192, 194, 196, 198, 203, 204, 205, 206, 207, 210, 215, 216, 218, 222, 223, 227, 228, 229, 230, 233, 244, 251, 252, 263, 265, 273, 282, 286, 293, 316, 318, 324, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 429, 482, 507, 518, 550, 551, 596, 614, 635, 663, 680, 728, 784, 786, 787, 788, 789, 790, 802, 812, 820, 834, 899, 936, 948], "v": [26, 30, 34, 35, 38, 39, 47, 50, 53, 54, 58, 69, 80, 81, 90, 92, 97, 102, 107, 108, 132, 133, 146, 151, 158, 163, 167, 197, 198, 204, 210, 218, 222, 226, 229, 233, 256, 259, 260, 265, 268, 273, 277, 293, 303, 304, 305, 309, 316, 319, 320, 323, 326, 328, 330, 331, 332, 333, 334, 336, 350, 354, 355, 365, 370, 388, 413, 428, 443, 450, 489, 490, 491, 504, 550, 551, 602, 611, 636, 644, 647, 653, 654, 656, 660, 671, 678, 770, 784, 786, 788, 789, 798, 804, 813, 816, 817, 818, 821, 839, 942, 946, 956], "84": [26, 37, 39, 45, 60, 61, 67, 73, 84, 107, 117, 135, 136, 139, 141, 146, 149, 156, 162, 177, 195, 223, 227, 236, 255, 256, 257, 259, 260, 263, 264, 265, 277, 560, 675, 956], "69": [26, 39, 41, 45, 61, 66, 73, 75, 107, 108, 130, 135, 139, 141, 146, 163, 166, 169, 195, 198, 202, 206, 210, 211, 218, 222, 223, 231, 236, 255, 256, 257, 259, 260, 263, 264, 265, 277, 331, 332, 364, 475, 956], "49": [26, 31, 39, 45, 54, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 105, 107, 111, 112, 113, 130, 135, 140, 141, 143, 146, 147, 151, 175, 183, 190, 195, 198, 202, 204, 205, 207, 209, 210, 211, 212, 214, 218, 222, 223, 236, 237, 238, 240, 245, 252, 255, 256, 257, 258, 259, 260, 264, 265, 273, 274, 277, 300, 301, 832, 956], "mm": [26, 29, 30, 31, 38, 47, 50, 52, 67, 70, 71, 76, 97, 98, 100, 103, 105, 106, 107, 108, 109, 117, 120, 121, 122, 136, 146, 151, 162, 167, 172, 177, 182, 183, 184, 185, 186, 187, 193, 194, 202, 204, 206, 207, 208, 209, 210, 211, 212, 218, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 251, 252, 273, 281, 288, 290, 292, 303, 305, 316, 320, 323, 329, 336, 338, 339, 342, 345, 346, 347, 373, 403, 405, 407, 429, 434, 502, 526, 535, 541, 543, 544, 563, 567, 588, 598, 656, 658, 659, 684, 695, 732, 733, 824, 826, 833, 834, 894, 899, 904], "orig": [26, 38, 47, 107, 108, 146, 151, 186, 210, 218, 227, 616, 628, 629, 634], "44": [26, 35, 39, 45, 46, 54, 61, 67, 71, 72, 73, 82, 105, 107, 130, 133, 135, 136, 139, 140, 141, 143, 146, 172, 174, 184, 194, 195, 202, 206, 207, 210, 223, 229, 234, 236, 237, 255, 256, 257, 259, 260, 263, 264, 265, 277, 300, 301, 364, 365, 504, 545, 771, 772, 774, 775, 956], "30": [26, 29, 31, 33, 34, 35, 37, 38, 39, 40, 45, 50, 54, 59, 60, 61, 67, 68, 71, 72, 73, 76, 84, 97, 100, 101, 103, 107, 108, 109, 117, 119, 121, 124, 128, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 146, 151, 156, 162, 172, 182, 184, 186, 192, 195, 197, 198, 209, 210, 212, 214, 222, 223, 226, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 243, 255, 256, 257, 258, 259, 260, 264, 265, 268, 270, 273, 277, 281, 301, 316, 317, 320, 323, 331, 332, 333, 334, 342, 344, 371, 375, 403, 423, 550, 551, 585, 635, 639, 644, 660, 737, 748, 749, 786, 787, 789, 790, 802, 812, 813, 815, 816, 818, 839, 843, 868, 956], "51": [26, 31, 34, 39, 45, 54, 60, 61, 67, 71, 73, 76, 97, 98, 106, 107, 108, 130, 131, 133, 135, 136, 139, 141, 146, 163, 178, 182, 184, 195, 198, 210, 211, 218, 223, 228, 232, 235, 236, 237, 243, 255, 256, 257, 259, 260, 264, 265, 273, 277, 295, 317, 341, 450, 671, 956], "45": [26, 29, 31, 34, 35, 37, 39, 41, 42, 45, 54, 61, 71, 76, 107, 110, 128, 130, 135, 136, 139, 140, 141, 146, 148, 151, 167, 169, 170, 171, 175, 182, 183, 184, 194, 195, 202, 206, 207, 212, 218, 222, 223, 229, 231, 232, 234, 235, 236, 237, 239, 245, 255, 256, 257, 259, 260, 263, 264, 265, 270, 279, 320, 325, 331, 332, 333, 334, 364, 365, 403, 423, 427, 428, 439, 440, 441, 483, 490, 518, 526, 527, 545, 547, 548, 550, 551, 614, 636, 765, 786, 787, 789, 790, 839, 868, 876], "252": [26, 61, 139, 146, 151, 195, 255, 259, 260], "43": [26, 39, 45, 52, 54, 60, 61, 67, 71, 72, 73, 74, 76, 80, 81, 82, 107, 108, 111, 130, 135, 139, 141, 146, 151, 171, 183, 184, 195, 197, 202, 203, 207, 208, 214, 222, 223, 236, 255, 256, 257, 259, 260, 263, 264, 265, 277, 331, 332, 403, 786, 787, 788, 956], "diff": [26, 35, 38, 47, 97, 107, 108, 146, 151, 160, 202, 209, 210, 212, 218, 243, 263, 309, 843, 950], "46": [26, 38, 39, 45, 47, 54, 59, 60, 61, 66, 71, 73, 77, 81, 86, 99, 107, 130, 131, 135, 139, 141, 146, 151, 175, 192, 195, 200, 222, 223, 228, 229, 231, 236, 242, 245, 255, 256, 257, 259, 260, 264, 265, 277, 280, 320, 956], "28": [26, 29, 37, 39, 44, 45, 52, 54, 60, 61, 67, 69, 70, 71, 73, 76, 82, 93, 101, 107, 111, 130, 135, 136, 139, 141, 146, 166, 184, 195, 197, 201, 202, 207, 208, 209, 210, 222, 223, 225, 228, 230, 236, 242, 255, 256, 257, 259, 260, 263, 265, 269, 272, 277, 280, 299, 403, 956], "53": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 54, 59, 60, 61, 66, 68, 71, 72, 73, 100, 103, 107, 108, 109, 110, 114, 121, 126, 130, 135, 139, 140, 141, 142, 146, 148, 151, 159, 162, 167, 170, 171, 172, 177, 181, 188, 195, 210, 212, 218, 223, 229, 230, 231, 232, 236, 237, 238, 239, 240, 245, 255, 256, 257, 259, 260, 264, 265, 277, 765, 936], "58": [26, 37, 39, 45, 61, 66, 71, 73, 74, 75, 80, 81, 83, 84, 85, 105, 107, 117, 120, 121, 130, 135, 136, 139, 141, 143, 146, 148, 162, 163, 175, 177, 178, 188, 195, 197, 198, 200, 204, 208, 218, 222, 223, 225, 226, 232, 234, 236, 243, 255, 256, 259, 260, 273, 274, 277, 280, 320, 423, 956], "243": [26, 39, 107, 146, 181, 190, 195, 218, 236, 259, 260, 956], "47": [26, 36, 39, 42, 45, 54, 59, 61, 71, 77, 107, 110, 130, 135, 139, 141, 146, 163, 168, 174, 176, 180, 185, 194, 195, 207, 209, 222, 223, 236, 245, 255, 256, 257, 259, 260, 264, 265, 277, 316, 317, 320, 367, 403, 476, 956], "86": [26, 31, 38, 39, 41, 45, 52, 60, 61, 66, 67, 73, 76, 107, 130, 135, 139, 141, 146, 163, 166, 177, 182, 183, 184, 194, 195, 198, 202, 207, 208, 210, 223, 230, 232, 234, 235, 236, 239, 244, 255, 256, 257, 259, 260, 265, 277, 314, 490, 800, 802, 812], "41": [26, 39, 45, 54, 60, 61, 70, 71, 73, 107, 108, 123, 130, 131, 135, 139, 141, 146, 194, 195, 205, 209, 210, 214, 218, 223, 232, 234, 235, 236, 243, 255, 256, 257, 259, 260, 263, 264, 265, 270, 277, 278, 343, 429, 475, 483, 942, 956], "63": [26, 39, 45, 54, 61, 71, 73, 97, 107, 108, 128, 130, 135, 139, 141, 144, 146, 163, 169, 195, 210, 211, 218, 223, 236, 255, 256, 257, 258, 259, 260, 263, 265, 301], "55": [26, 29, 37, 39, 45, 47, 54, 56, 57, 61, 64, 65, 66, 67, 70, 71, 72, 74, 76, 80, 81, 82, 83, 84, 87, 105, 107, 112, 113, 128, 130, 135, 136, 139, 141, 143, 146, 147, 152, 169, 175, 177, 186, 195, 198, 203, 204, 206, 207, 212, 218, 221, 222, 223, 231, 232, 234, 236, 238, 245, 255, 256, 257, 259, 260, 263, 264, 265, 267, 273, 274, 277, 279, 483, 491, 603, 635, 636, 686, 941, 956], "82": [26, 39, 41, 45, 61, 72, 107, 130, 139, 141, 146, 171, 195, 206, 207, 210, 218, 222, 223, 236, 255, 256, 257, 259, 260, 264, 265, 269, 475, 518], "230": [26, 107, 114, 133, 134, 146, 151, 195, 212, 236, 255, 956], "26": [26, 29, 31, 37, 39, 42, 45, 54, 58, 60, 61, 70, 71, 73, 97, 107, 108, 111, 123, 128, 130, 135, 136, 139, 141, 146, 151, 162, 163, 171, 183, 184, 186, 190, 195, 197, 200, 209, 210, 211, 212, 218, 222, 223, 236, 240, 242, 251, 252, 254, 255, 256, 257, 259, 260, 263, 264, 265, 268, 272, 277, 278, 300, 313, 317, 343, 344, 429, 464, 603, 956], "coordin": [26, 29, 31, 37, 38, 47, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 98, 107, 108, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 142, 146, 149, 151, 152, 157, 161, 162, 176, 184, 185, 189, 190, 191, 192, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 223, 235, 237, 239, 240, 251, 252, 263, 265, 273, 277, 279, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 297, 302, 303, 304, 305, 317, 319, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 344, 346, 347, 370, 372, 373, 374, 380, 383, 384, 389, 393, 396, 398, 399, 401, 403, 407, 433, 434, 436, 460, 483, 490, 502, 504, 526, 534, 542, 543, 544, 547, 550, 551, 555, 558, 562, 563, 576, 584, 586, 594, 599, 635, 636, 647, 651, 656, 660, 671, 703, 713, 714, 716, 717, 733, 737, 761, 764, 784, 786, 787, 789, 790, 820, 821, 833, 834, 835, 852, 853, 854, 860, 864, 868, 870, 872, 874, 875, 876, 878, 879, 886, 888, 890, 891, 892, 896, 898, 904, 906, 928, 929, 934, 956], "establish": [26, 38, 47, 107, 108, 146, 151, 210, 215, 218, 229, 260, 277, 771, 772, 774, 775], "digit": [26, 98, 100, 103, 107, 108, 109, 117, 120, 145, 146, 151, 167, 172, 177, 182, 183, 185, 186, 193, 194, 195, 197, 208, 211, 215, 216, 218, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 273, 277, 281, 282, 283, 284, 288, 290, 292, 293, 301, 302, 304, 308, 316, 317, 319, 323, 324, 328, 330, 331, 332, 333, 334, 336, 340, 373, 374, 380, 393, 394, 396, 398, 401, 402, 405, 407, 410, 411, 413, 434, 483, 490, 502, 504, 524, 542, 550, 551, 555, 558, 564, 576, 586, 594, 599, 635, 636, 645, 646, 647, 651, 660, 671, 697, 698, 733, 784, 786, 787, 788, 789, 790, 834, 852, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898, 906], "point": [26, 29, 31, 34, 35, 37, 38, 42, 44, 47, 48, 52, 53, 58, 59, 60, 62, 64, 67, 68, 70, 71, 72, 75, 80, 81, 82, 84, 87, 98, 99, 100, 103, 107, 108, 109, 117, 120, 121, 123, 124, 127, 128, 130, 134, 136, 137, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 155, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 280, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 300, 301, 302, 303, 304, 306, 308, 309, 310, 312, 316, 318, 319, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 364, 365, 373, 374, 380, 383, 384, 389, 393, 398, 402, 403, 404, 405, 407, 411, 417, 419, 423, 428, 429, 433, 434, 436, 482, 483, 484, 485, 489, 490, 492, 499, 502, 504, 517, 519, 521, 524, 542, 544, 545, 549, 550, 551, 554, 555, 558, 564, 571, 576, 586, 597, 598, 599, 602, 603, 612, 613, 614, 615, 617, 618, 635, 636, 638, 646, 647, 650, 651, 656, 660, 671, 692, 696, 697, 700, 701, 703, 706, 711, 714, 717, 728, 732, 733, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 751, 758, 760, 769, 770, 771, 772, 774, 775, 776, 784, 785, 786, 787, 788, 789, 790, 804, 805, 834, 835, 836, 839, 840, 852, 853, 854, 855, 860, 864, 868, 870, 871, 872, 873, 875, 876, 879, 880, 883, 886, 888, 890, 891, 892, 894, 895, 896, 898, 899, 900, 904, 929, 934, 936, 956], "subj00111092011": [26, 146], "po": [26, 45, 67, 73, 76, 106, 107, 108, 110, 120, 142, 146, 162, 177, 182, 202, 209, 210, 211, 212, 218, 235, 237, 281, 282, 291, 293, 303, 329, 333, 334, 337, 338, 339, 342, 345, 346, 347, 372, 381, 406, 420, 421, 503, 526, 543, 544, 564, 640, 643, 705, 733, 878, 898], "polhemu": [26, 38, 47, 107, 108, 146, 151, 182, 196, 210, 218, 283, 288, 320, 336, 380, 405, 407, 564, 576], "ad": [26, 30, 31, 37, 38, 47, 48, 53, 54, 55, 57, 61, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 94, 95, 97, 98, 107, 108, 117, 119, 120, 121, 122, 128, 131, 134, 135, 137, 146, 147, 151, 152, 157, 166, 167, 168, 172, 177, 182, 184, 185, 186, 187, 188, 192, 196, 201, 203, 204, 205, 207, 208, 210, 218, 223, 228, 232, 234, 235, 237, 245, 246, 250, 251, 252, 255, 256, 263, 265, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 317, 320, 323, 325, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 380, 406, 410, 412, 416, 429, 430, 441, 483, 490, 503, 504, 507, 527, 549, 550, 551, 567, 575, 591, 596, 597, 598, 601, 635, 636, 638, 651, 653, 693, 695, 728, 733, 734, 738, 748, 776, 779, 784, 786, 787, 788, 789, 790, 830, 834, 838, 840, 852, 853, 854, 860, 864, 865, 868, 870, 872, 875, 876, 879, 883, 886, 888, 890, 891, 892, 894, 896, 898, 899], "devic": [26, 29, 31, 38, 47, 52, 67, 71, 76, 98, 106, 107, 108, 136, 146, 149, 151, 176, 182, 184, 191, 192, 195, 196, 197, 202, 207, 209, 210, 211, 212, 218, 220, 221, 233, 235, 239, 240, 243, 281, 288, 290, 291, 292, 293, 294, 303, 308, 316, 317, 319, 323, 325, 333, 334, 336, 373, 380, 383, 396, 430, 432, 443, 446, 504, 515, 542, 550, 551, 558, 559, 561, 563, 566, 567, 568, 569, 570, 572, 574, 579, 580, 581, 583, 584, 640, 643, 659, 671, 672, 685, 695, 728, 834, 836, 852, 871, 927, 952, 956], "measur": [26, 30, 31, 38, 47, 52, 67, 71, 76, 98, 100, 103, 106, 107, 108, 109, 117, 120, 130, 136, 146, 151, 167, 170, 171, 172, 182, 184, 185, 188, 191, 192, 193, 194, 195, 196, 198, 202, 208, 210, 215, 216, 217, 218, 219, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 260, 261, 262, 266, 267, 269, 270, 273, 277, 279, 281, 282, 283, 285, 286, 290, 294, 296, 298, 299, 300, 302, 303, 306, 307, 316, 317, 319, 320, 324, 326, 328, 330, 331, 332, 333, 334, 335, 336, 340, 342, 344, 351, 352, 364, 365, 366, 373, 374, 378, 379, 386, 387, 388, 392, 394, 395, 408, 411, 413, 415, 418, 423, 427, 428, 429, 434, 439, 440, 441, 443, 483, 485, 487, 490, 491, 492, 502, 514, 515, 516, 526, 527, 534, 545, 547, 548, 549, 550, 551, 552, 556, 564, 566, 581, 587, 591, 594, 597, 598, 599, 602, 603, 604, 611, 612, 613, 614, 617, 632, 633, 636, 647, 650, 667, 671, 672, 675, 676, 677, 698, 713, 718, 719, 728, 740, 741, 748, 749, 752, 756, 765, 766, 767, 768, 772, 775, 776, 784, 785, 786, 787, 788, 789, 790, 816, 823, 834, 849, 852, 853, 856, 861, 862, 876, 878, 887, 888, 892, 927, 950, 956], "compos": [26, 38, 47, 52, 67, 71, 76, 107, 108, 136, 146, 151, 163, 184, 202, 210, 215, 218, 223, 316], "find": [26, 31, 33, 37, 38, 45, 47, 53, 54, 55, 56, 64, 65, 70, 73, 74, 75, 76, 78, 83, 84, 87, 95, 96, 104, 107, 108, 109, 111, 131, 134, 135, 137, 146, 151, 152, 155, 162, 166, 167, 171, 176, 177, 181, 182, 183, 187, 192, 196, 198, 201, 202, 206, 207, 210, 212, 218, 223, 226, 228, 229, 232, 237, 245, 252, 255, 256, 257, 265, 270, 273, 277, 279, 283, 294, 298, 303, 309, 314, 317, 319, 320, 321, 329, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 386, 424, 425, 426, 434, 517, 522, 524, 525, 550, 551, 571, 603, 633, 636, 639, 642, 648, 649, 651, 652, 653, 654, 660, 661, 662, 664, 665, 666, 680, 696, 700, 721, 743, 747, 750, 761, 834, 873, 875, 936, 941, 945, 946, 948, 956], "meg4": [26, 38, 47, 107, 108, 146, 151, 210, 218], "system": [26, 29, 31, 34, 36, 38, 45, 47, 53, 89, 97, 101, 106, 107, 108, 136, 143, 146, 150, 152, 156, 162, 163, 176, 177, 181, 182, 184, 185, 186, 192, 194, 195, 196, 198, 204, 209, 210, 211, 212, 216, 218, 219, 222, 226, 227, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 255, 268, 275, 276, 277, 281, 282, 285, 286, 287, 288, 290, 291, 294, 301, 302, 303, 305, 307, 308, 309, 311, 312, 316, 317, 319, 330, 331, 332, 333, 334, 336, 341, 342, 344, 346, 347, 351, 352, 367, 380, 383, 388, 391, 396, 398, 399, 401, 402, 403, 405, 407, 422, 433, 434, 436, 443, 450, 489, 503, 518, 520, 532, 543, 544, 545, 550, 551, 553, 558, 559, 560, 562, 563, 564, 576, 588, 594, 599, 633, 636, 638, 669, 671, 688, 701, 711, 718, 736, 737, 738, 747, 748, 750, 770, 771, 772, 773, 774, 775, 783, 784, 786, 787, 788, 789, 790, 798, 804, 820, 834, 836, 852, 853, 866, 869, 871, 874, 877, 883, 889, 897, 903, 904, 911, 912, 915, 916, 917, 929, 941, 942, 943, 945, 946, 947, 952, 956], "clock": [26, 38, 47, 107, 108, 146, 151, 210, 218, 292, 317, 550, 551, 564, 636, 685, 883, 889], "check": [26, 31, 38, 47, 52, 67, 69, 71, 76, 88, 97, 107, 108, 136, 146, 147, 148, 151, 153, 161, 163, 166, 168, 169, 170, 183, 184, 185, 187, 192, 194, 196, 197, 198, 201, 202, 207, 208, 210, 212, 218, 227, 229, 232, 233, 243, 244, 246, 255, 256, 269, 279, 282, 283, 285, 286, 287, 288, 290, 291, 293, 294, 297, 300, 302, 303, 304, 305, 307, 308, 309, 312, 316, 317, 326, 328, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 386, 388, 456, 462, 502, 516, 519, 549, 550, 551, 559, 562, 611, 625, 636, 644, 646, 771, 772, 774, 775, 783, 784, 786, 787, 788, 789, 790, 820, 834, 852, 870, 872, 873, 874, 875, 906, 936, 941, 942], "valid": [26, 34, 35, 36, 37, 38, 41, 42, 47, 101, 107, 108, 138, 146, 148, 151, 163, 188, 197, 203, 210, 217, 218, 223, 229, 238, 255, 270, 281, 283, 285, 291, 302, 305, 309, 316, 320, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 393, 406, 423, 428, 475, 483, 489, 490, 499, 500, 504, 515, 517, 524, 531, 535, 550, 551, 612, 613, 635, 636, 638, 651, 653, 654, 714, 728, 766, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 811, 821, 834, 838, 852, 853, 860, 867, 868, 869, 870, 872, 874, 875, 879, 888, 891, 894, 896, 897, 898, 899, 934, 936, 948, 949], "240": [26, 61, 68, 72, 102, 107, 136, 146, 195, 197, 207, 212, 226, 230, 236, 255, 259, 269], "x": [26, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 98, 99, 100, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 157, 158, 159, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 219, 222, 223, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 246, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 270, 273, 274, 277, 282, 283, 284, 285, 293, 294, 303, 305, 307, 309, 317, 319, 320, 323, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 344, 345, 346, 347, 355, 370, 380, 381, 403, 413, 414, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 521, 522, 523, 550, 551, 562, 563, 602, 603, 611, 635, 636, 637, 645, 651, 656, 658, 659, 680, 703, 736, 757, 760, 765, 769, 770, 771, 772, 773, 774, 775, 777, 784, 786, 787, 789, 790, 791, 792, 793, 798, 800, 801, 802, 804, 805, 809, 811, 812, 821, 824, 825, 827, 834, 835, 839, 853, 855, 857, 860, 868, 870, 872, 874, 875, 876, 877, 878, 879, 884, 886, 888, 890, 891, 892, 894, 896, 898, 899, 900, 902, 904, 928, 948], "1800": [26, 146, 219], "432000": [26, 146], "302": [26, 39, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 102, 109, 120, 121, 131, 134, 135, 137, 139, 146, 148, 166, 174, 178, 188, 192, 195, 202, 203, 204, 205, 206, 207, 212, 223, 236, 251, 260, 263, 265, 956], "ch": [26, 27, 34, 38, 47, 95, 107, 108, 139, 142, 146, 147, 151, 162, 163, 167, 175, 177, 192, 195, 196, 210, 218, 232, 243, 250, 252, 277, 279, 288, 299, 303, 317, 319, 323, 336, 387, 388, 450, 475, 476, 550, 551, 587, 906], "compens": [26, 27, 38, 47, 53, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 104, 105, 107, 108, 111, 112, 113, 128, 143, 146, 147, 151, 166, 169, 175, 198, 202, 204, 205, 207, 210, 211, 218, 219, 229, 236, 255, 256, 273, 274, 277, 280, 281, 282, 285, 286, 291, 292, 294, 298, 299, 304, 306, 323, 326, 331, 332, 333, 334, 336, 420, 434, 504, 506, 518, 519, 521, 522, 524, 549, 550, 551, 564, 572, 598, 633, 636, 647, 660, 667, 671, 701, 749, 784, 786, 787, 788, 789, 790, 877, 878, 956], "grade": [26, 38, 47, 50, 67, 97, 107, 108, 128, 136, 146, 151, 184, 187, 210, 215, 218, 263, 265, 286, 291, 326, 331, 332, 333, 334, 336, 337, 538, 539, 549, 550, 551, 636, 784, 786, 787, 788, 789, 790], "144000": [26, 107], "sec": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 54, 55, 58, 59, 60, 68, 71, 72, 75, 85, 88, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 148, 151, 158, 159, 161, 162, 163, 167, 170, 172, 175, 177, 178, 182, 185, 188, 192, 193, 194, 195, 198, 203, 205, 206, 207, 208, 209, 210, 211, 212, 217, 223, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 250, 251, 252, 257, 258, 259, 260, 263, 265, 269, 273, 285, 336, 783], "type": [26, 27, 29, 31, 41, 42, 48, 53, 55, 56, 57, 60, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 90, 94, 98, 102, 104, 105, 107, 108, 109, 111, 112, 117, 120, 121, 122, 130, 136, 140, 141, 142, 143, 145, 146, 147, 151, 152, 155, 157, 161, 162, 163, 167, 168, 169, 170, 171, 172, 175, 176, 182, 183, 184, 185, 188, 192, 193, 194, 196, 197, 198, 202, 204, 205, 206, 207, 208, 209, 211, 215, 217, 219, 223, 226, 227, 228, 231, 232, 233, 234, 235, 236, 238, 244, 246, 250, 251, 252, 255, 259, 260, 268, 269, 273, 274, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 316, 318, 319, 321, 324, 326, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 364, 365, 376, 378, 379, 381, 382, 385, 386, 387, 388, 389, 395, 403, 409, 412, 423, 424, 425, 426, 427, 428, 438, 439, 440, 441, 443, 450, 456, 475, 476, 483, 485, 490, 492, 499, 504, 507, 508, 515, 516, 518, 521, 522, 523, 524, 526, 527, 528, 533, 540, 545, 547, 548, 549, 550, 551, 553, 559, 566, 571, 579, 584, 585, 594, 614, 626, 633, 634, 635, 636, 637, 638, 641, 645, 647, 650, 651, 652, 653, 654, 659, 660, 662, 663, 667, 671, 677, 679, 686, 696, 698, 700, 701, 724, 725, 728, 735, 736, 737, 749, 752, 755, 764, 770, 771, 772, 774, 775, 779, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 817, 820, 834, 836, 851, 852, 855, 859, 860, 861, 862, 864, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 879, 880, 881, 887, 888, 889, 890, 891, 892, 894, 896, 897, 898, 899, 900, 902, 907, 922, 936, 939, 941, 942, 947, 948, 949, 951, 956], "select": [26, 31, 33, 37, 41, 47, 50, 54, 55, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 76, 77, 80, 81, 84, 85, 86, 94, 98, 99, 101, 103, 108, 109, 114, 117, 120, 121, 122, 126, 130, 136, 139, 140, 146, 147, 148, 155, 163, 167, 168, 170, 176, 177, 184, 185, 187, 188, 192, 193, 195, 196, 198, 201, 203, 204, 205, 206, 207, 208, 216, 218, 223, 226, 227, 228, 229, 231, 234, 235, 237, 244, 245, 246, 251, 252, 256, 260, 264, 265, 268, 269, 270, 274, 277, 279, 281, 282, 283, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 305, 306, 308, 309, 316, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 341, 342, 346, 387, 392, 423, 424, 425, 426, 434, 485, 491, 514, 521, 542, 547, 550, 551, 557, 588, 628, 629, 631, 632, 633, 634, 636, 637, 641, 650, 651, 653, 654, 664, 665, 680, 706, 718, 725, 728, 747, 750, 770, 784, 785, 786, 787, 788, 789, 790, 797, 803, 853, 860, 866, 870, 872, 874, 875, 876, 879, 881, 883, 889, 892, 894, 898, 901, 905, 910, 911, 913, 915, 919, 936, 939, 945], "re": [26, 30, 55, 71, 94, 98, 120, 121, 128, 130, 140, 141, 147, 166, 167, 170, 177, 182, 184, 185, 186, 187, 188, 192, 193, 195, 196, 197, 198, 208, 216, 227, 228, 229, 231, 232, 233, 234, 235, 243, 245, 251, 257, 259, 265, 270, 273, 277, 288, 290, 303, 309, 312, 318, 320, 323, 325, 328, 331, 332, 333, 334, 336, 340, 348, 381, 385, 483, 490, 508, 550, 551, 576, 628, 629, 632, 634, 635, 636, 645, 697, 725, 728, 733, 784, 786, 787, 788, 789, 790, 797, 803, 820, 853, 868, 875, 879, 888, 891, 893, 896, 898, 936, 937, 946, 950], "item": [26, 29, 34, 37, 38, 39, 40, 41, 42, 44, 45, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 155, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 182, 183, 184, 185, 186, 188, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 246, 250, 251, 252, 256, 257, 258, 259, 260, 263, 265, 269, 273, 274, 290, 308, 324, 328, 329, 331, 332, 336, 344, 350, 355, 370, 550, 551, 602, 656, 786, 787, 788, 789, 790, 821, 834, 948], "deactiv": [26, 29, 55, 68, 77, 86, 95, 98, 119, 120, 121, 138, 168, 172, 185, 188, 208, 218, 233, 234, 235, 239, 251, 857, 950], "wa": [26, 29, 31, 33, 39, 44, 47, 59, 87, 92, 98, 121, 142, 166, 170, 175, 177, 184, 185, 186, 192, 193, 194, 196, 197, 207, 208, 209, 212, 216, 218, 219, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 245, 246, 250, 258, 259, 260, 270, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 317, 319, 320, 324, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 351, 352, 364, 365, 400, 416, 460, 482, 483, 490, 505, 507, 547, 550, 551, 567, 568, 571, 581, 588, 598, 609, 610, 612, 613, 618, 619, 620, 635, 636, 637, 648, 649, 654, 656, 658, 660, 661, 662, 671, 678, 695, 696, 700, 721, 733, 736, 737, 769, 779, 784, 785, 786, 787, 788, 789, 790, 802, 806, 812, 834, 845, 852, 853, 866, 868, 870, 875, 879, 888, 891, 896, 898, 901, 905, 913, 942, 948, 949], "appli": [26, 29, 31, 33, 34, 35, 36, 37, 38, 41, 42, 44, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 155, 158, 160, 161, 162, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 182, 184, 185, 186, 187, 188, 192, 193, 195, 196, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 216, 218, 223, 226, 227, 228, 230, 232, 234, 235, 237, 238, 239, 240, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 273, 274, 277, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 297, 300, 301, 303, 304, 305, 307, 308, 309, 316, 318, 319, 320, 321, 324, 326, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 380, 406, 422, 427, 436, 439, 441, 483, 485, 486, 490, 491, 492, 494, 496, 504, 513, 514, 515, 516, 517, 518, 519, 521, 522, 524, 527, 541, 547, 548, 550, 551, 592, 595, 603, 604, 605, 606, 607, 612, 613, 615, 618, 619, 620, 635, 636, 637, 638, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 660, 661, 662, 663, 668, 671, 678, 686, 694, 698, 701, 702, 703, 723, 728, 740, 741, 742, 743, 744, 746, 751, 765, 766, 771, 772, 773, 784, 785, 786, 788, 789, 798, 815, 818, 822, 823, 824, 834, 836, 845, 860, 861, 866, 867, 868, 870, 872, 874, 875, 879, 880, 881, 883, 889, 890, 894, 896, 897, 899, 906, 928, 931, 936], "yet": [26, 98, 121, 185, 208, 216, 219, 233, 235, 270, 309, 331, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 491, 496, 625, 651, 834], "5": [26, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 152, 155, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 186, 188, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 273, 274, 277, 279, 280, 281, 282, 287, 288, 291, 292, 298, 300, 301, 302, 306, 309, 310, 312, 313, 316, 317, 320, 323, 325, 326, 328, 331, 332, 333, 334, 337, 338, 339, 340, 342, 345, 346, 347, 349, 364, 365, 367, 369, 371, 375, 382, 394, 403, 423, 429, 438, 450, 456, 482, 483, 489, 500, 503, 504, 506, 524, 525, 526, 539, 547, 550, 551, 576, 587, 591, 592, 603, 609, 614, 618, 619, 620, 627, 628, 629, 635, 636, 638, 639, 644, 645, 646, 647, 648, 651, 652, 653, 654, 655, 657, 660, 661, 664, 666, 669, 671, 675, 679, 680, 697, 703, 705, 724, 733, 737, 770, 784, 786, 787, 788, 789, 790, 798, 802, 803, 804, 812, 813, 814, 816, 817, 824, 834, 836, 851, 855, 867, 868, 871, 872, 873, 879, 881, 884, 889, 894, 899, 936, 941, 942, 948, 956], "becaus": [26, 29, 30, 31, 37, 42, 44, 47, 52, 60, 67, 69, 70, 71, 76, 87, 97, 101, 107, 108, 109, 128, 134, 141, 142, 146, 166, 168, 169, 170, 172, 175, 176, 177, 184, 186, 187, 188, 192, 193, 194, 196, 197, 202, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 245, 250, 255, 256, 257, 260, 263, 270, 284, 307, 308, 309, 310, 316, 318, 319, 320, 331, 332, 333, 334, 416, 427, 504, 526, 646, 657, 660, 670, 771, 772, 774, 775, 788, 844, 897, 936, 939, 946, 950, 953], "all": [26, 29, 30, 31, 36, 39, 40, 44, 45, 47, 53, 54, 57, 59, 61, 66, 71, 85, 88, 90, 94, 97, 100, 107, 108, 109, 117, 122, 124, 126, 130, 134, 138, 139, 140, 141, 143, 144, 146, 147, 148, 153, 161, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 202, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 260, 264, 268, 269, 270, 273, 274, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 298, 300, 301, 302, 303, 304, 306, 308, 310, 312, 314, 316, 317, 318, 319, 320, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 358, 359, 362, 364, 365, 367, 369, 370, 375, 376, 377, 378, 380, 381, 382, 385, 390, 391, 395, 396, 397, 406, 409, 417, 418, 422, 423, 427, 428, 429, 430, 434, 435, 438, 439, 440, 441, 443, 457, 483, 485, 486, 490, 492, 499, 500, 504, 507, 508, 510, 512, 513, 514, 515, 516, 517, 521, 522, 523, 524, 525, 526, 527, 531, 533, 539, 540, 541, 542, 545, 547, 548, 550, 551, 552, 553, 557, 559, 563, 566, 574, 576, 578, 580, 582, 585, 590, 602, 603, 605, 607, 610, 612, 613, 614, 615, 619, 620, 622, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 646, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 663, 666, 667, 671, 677, 679, 686, 691, 694, 695, 697, 698, 701, 702, 703, 706, 716, 721, 722, 728, 732, 734, 743, 749, 752, 761, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 779, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 802, 803, 804, 808, 812, 814, 816, 817, 821, 824, 832, 834, 836, 842, 843, 852, 853, 854, 860, 864, 866, 867, 868, 870, 871, 872, 873, 875, 876, 877, 879, 880, 883, 885, 886, 887, 888, 889, 890, 891, 892, 894, 896, 897, 898, 899, 900, 912, 915, 916, 918, 919, 939, 945, 949, 951, 956], "were": [26, 30, 31, 36, 44, 47, 64, 71, 107, 108, 134, 146, 163, 166, 167, 168, 169, 170, 175, 176, 177, 187, 193, 194, 197, 198, 207, 208, 209, 210, 215, 217, 218, 219, 227, 228, 229, 232, 233, 234, 235, 237, 238, 240, 243, 244, 245, 246, 250, 255, 257, 259, 260, 273, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 317, 319, 331, 332, 333, 334, 336, 339, 341, 342, 345, 347, 348, 364, 365, 388, 417, 418, 429, 432, 475, 476, 507, 509, 550, 551, 575, 636, 646, 647, 660, 671, 779, 784, 785, 786, 787, 788, 789, 790, 880, 882, 889, 936, 949], "effect": [26, 33, 43, 45, 46, 47, 52, 53, 65, 83, 85, 97, 98, 101, 109, 110, 126, 130, 136, 139, 140, 147, 148, 159, 167, 171, 175, 177, 186, 188, 192, 193, 194, 198, 209, 212, 218, 226, 228, 229, 230, 234, 235, 236, 237, 238, 239, 246, 250, 251, 252, 256, 257, 259, 260, 265, 268, 269, 277, 281, 282, 288, 291, 294, 298, 300, 308, 319, 331, 332, 333, 334, 336, 337, 338, 341, 342, 346, 364, 365, 388, 423, 427, 428, 439, 440, 441, 475, 476, 483, 484, 490, 499, 504, 506, 507, 522, 526, 527, 545, 547, 548, 550, 551, 567, 568, 603, 606, 614, 636, 639, 644, 698, 765, 767, 770, 771, 772, 774, 775, 786, 787, 789, 790, 793, 804, 866, 870, 876, 879, 881, 883, 889, 890, 892, 894, 936, 948, 949, 956], "size": [26, 31, 34, 35, 36, 47, 48, 58, 61, 67, 69, 70, 72, 79, 84, 97, 98, 101, 109, 127, 135, 136, 141, 147, 149, 154, 159, 160, 161, 162, 168, 170, 172, 176, 177, 181, 182, 184, 186, 192, 197, 198, 201, 203, 204, 205, 206, 207, 209, 212, 216, 217, 226, 227, 229, 230, 233, 234, 235, 236, 238, 239, 240, 243, 246, 250, 251, 252, 257, 260, 263, 268, 269, 270, 273, 277, 282, 285, 291, 294, 301, 302, 303, 305, 320, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 380, 388, 396, 398, 429, 483, 485, 490, 494, 495, 518, 519, 521, 522, 523, 547, 549, 550, 551, 595, 609, 633, 635, 636, 651, 660, 666, 669, 731, 750, 766, 770, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 810, 824, 834, 844, 849, 864, 866, 868, 874, 875, 879, 881, 882, 883, 886, 888, 889, 891, 892, 894, 895, 896, 897, 898, 899, 903, 949, 953], "707": [26, 236, 260], "need": [26, 29, 30, 31, 37, 54, 55, 56, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 80, 81, 84, 85, 87, 96, 97, 101, 102, 112, 117, 121, 122, 130, 131, 134, 135, 136, 137, 139, 141, 144, 146, 149, 161, 162, 166, 167, 168, 169, 170, 171, 175, 176, 177, 182, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 198, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 215, 217, 218, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 270, 273, 274, 277, 286, 290, 292, 293, 298, 301, 302, 308, 309, 310, 312, 316, 317, 320, 321, 331, 332, 333, 334, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 364, 386, 397, 442, 445, 456, 484, 485, 493, 499, 507, 516, 521, 541, 549, 550, 551, 559, 566, 575, 594, 599, 623, 636, 678, 733, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 834, 841, 853, 874, 879, 889, 908, 941, 943, 945, 946, 948, 949, 950], "than": [26, 29, 31, 39, 44, 50, 52, 59, 60, 67, 68, 70, 71, 72, 76, 80, 84, 85, 87, 96, 97, 105, 109, 112, 113, 121, 141, 146, 149, 152, 161, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 182, 184, 187, 192, 193, 194, 195, 196, 197, 198, 202, 206, 207, 209, 210, 211, 212, 215, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 255, 258, 268, 270, 273, 274, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 320, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 356, 373, 374, 422, 424, 425, 426, 427, 434, 483, 485, 488, 490, 494, 500, 502, 512, 517, 519, 521, 522, 524, 527, 539, 547, 548, 550, 551, 568, 570, 576, 590, 601, 609, 610, 620, 625, 635, 636, 638, 644, 646, 651, 653, 666, 669, 670, 672, 676, 679, 697, 702, 723, 733, 765, 771, 772, 773, 774, 775, 776, 779, 784, 786, 787, 788, 789, 790, 793, 796, 801, 804, 809, 815, 818, 834, 836, 853, 854, 866, 868, 869, 871, 872, 875, 879, 888, 889, 891, 894, 896, 898, 899, 941, 947, 948, 949], "make": [26, 29, 30, 35, 36, 39, 44, 45, 47, 54, 57, 58, 60, 64, 68, 71, 74, 76, 80, 81, 85, 88, 94, 97, 102, 112, 117, 120, 121, 130, 136, 138, 139, 140, 141, 149, 152, 159, 161, 162, 166, 167, 168, 169, 170, 176, 177, 182, 184, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 216, 218, 219, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 240, 243, 245, 250, 255, 257, 258, 259, 263, 264, 265, 270, 274, 275, 276, 281, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 297, 302, 303, 306, 312, 316, 317, 318, 319, 320, 323, 330, 331, 332, 333, 334, 336, 338, 339, 342, 344, 345, 346, 347, 348, 364, 365, 393, 405, 423, 427, 428, 429, 434, 439, 440, 441, 442, 483, 486, 487, 490, 492, 493, 502, 506, 507, 518, 519, 521, 522, 526, 527, 533, 540, 542, 545, 547, 548, 550, 551, 563, 596, 614, 620, 629, 635, 636, 646, 666, 667, 670, 679, 689, 691, 701, 711, 720, 722, 736, 748, 779, 781, 785, 802, 812, 813, 814, 816, 821, 829, 830, 834, 854, 855, 858, 862, 873, 876, 882, 889, 894, 899, 900, 929, 936, 937, 941, 942, 949, 950, 956], "topographi": [26, 39, 47, 53, 97, 98, 101, 112, 141, 147, 150, 156, 158, 168, 170, 177, 192, 196, 198, 202, 218, 232, 234, 235, 246, 258, 260, 268, 277, 284, 286, 292, 297, 298, 300, 301, 319, 331, 332, 333, 334, 336, 340, 341, 381, 483, 490, 550, 551, 633, 636, 652, 749, 784, 786, 787, 789, 790, 849, 868, 873, 874, 875, 879, 881, 885, 890, 892, 896, 897, 956], "disabl": [26, 112, 141, 168, 175, 176, 177, 198, 226, 227, 230, 246, 258, 286, 291, 292, 293, 302, 303, 304, 305, 308, 323, 328, 331, 332, 333, 334, 340, 341, 376, 434, 483, 489, 490, 495, 550, 551, 635, 636, 660, 671, 726, 730, 731, 784, 786, 787, 789, 790, 829, 834, 853, 868, 870, 874, 875, 879, 888, 889, 891, 896, 898, 902, 914, 941], "interact": [26, 53, 59, 71, 73, 112, 141, 142, 147, 166, 175, 176, 177, 184, 191, 192, 194, 197, 198, 206, 207, 218, 227, 228, 232, 233, 234, 238, 243, 252, 255, 258, 259, 265, 269, 270, 273, 275, 277, 279, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 296, 298, 299, 302, 303, 306, 307, 308, 309, 310, 312, 320, 321, 323, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 357, 364, 483, 490, 542, 550, 551, 603, 635, 636, 679, 765, 767, 784, 786, 787, 789, 790, 834, 836, 837, 852, 853, 857, 867, 868, 870, 871, 872, 874, 875, 879, 881, 883, 888, 889, 890, 891, 892, 894, 896, 897, 898, 899, 941], "contigu": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 223, 230, 231, 232, 234, 237, 238, 239, 240, 259, 260, 337], "segment": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 49, 50, 53, 59, 60, 64, 68, 90, 97, 100, 103, 107, 108, 109, 110, 114, 126, 136, 140, 141, 142, 148, 159, 161, 162, 163, 167, 170, 171, 172, 177, 188, 194, 198, 210, 212, 218, 223, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 245, 260, 269, 277, 281, 283, 285, 286, 287, 288, 290, 291, 294, 301, 302, 305, 316, 317, 319, 320, 323, 325, 329, 331, 332, 333, 334, 341, 344, 371, 423, 428, 512, 535, 536, 537, 549, 550, 551, 581, 595, 604, 606, 636, 638, 639, 640, 641, 642, 643, 646, 653, 654, 657, 660, 661, 669, 671, 784, 786, 789, 804, 805, 832, 834, 870, 872, 879, 881], "up": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 49, 50, 52, 53, 54, 59, 60, 68, 70, 71, 76, 96, 99, 100, 103, 106, 108, 109, 110, 114, 117, 120, 121, 122, 126, 130, 131, 136, 138, 139, 140, 141, 142, 144, 148, 151, 158, 159, 162, 166, 167, 170, 171, 172, 176, 177, 181, 182, 184, 185, 186, 188, 191, 192, 198, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 245, 246, 251, 252, 256, 257, 260, 263, 265, 270, 274, 279, 280, 281, 284, 286, 288, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 312, 319, 320, 321, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 342, 343, 345, 346, 347, 483, 488, 489, 490, 495, 523, 550, 551, 609, 610, 635, 636, 638, 660, 726, 732, 733, 770, 779, 783, 784, 786, 787, 789, 790, 804, 832, 834, 855, 864, 866, 867, 868, 872, 875, 879, 882, 888, 889, 891, 894, 896, 898, 899, 900, 906, 936, 941, 946], "band": [26, 29, 31, 34, 35, 38, 39, 40, 41, 42, 44, 47, 53, 58, 59, 60, 68, 99, 103, 108, 114, 121, 132, 133, 134, 136, 137, 139, 141, 142, 148, 154, 159, 162, 163, 167, 168, 170, 171, 172, 193, 198, 223, 226, 228, 229, 230, 231, 232, 234, 238, 239, 240, 246, 259, 260, 268, 269, 270, 277, 282, 284, 294, 296, 304, 317, 319, 331, 332, 333, 334, 354, 485, 491, 494, 518, 519, 521, 522, 524, 550, 551, 619, 641, 675, 763, 786, 787, 789, 790, 802, 812, 813, 816, 860, 868, 884, 936, 956], "stop": [26, 31, 55, 95, 108, 120, 123, 162, 193, 198, 212, 228, 229, 230, 237, 239, 243, 244, 245, 273, 282, 284, 286, 294, 301, 303, 309, 310, 323, 324, 331, 332, 333, 334, 351, 352, 363, 426, 485, 494, 518, 519, 521, 522, 549, 550, 551, 570, 596, 606, 609, 636, 660, 669, 685, 880, 883, 919], "paramet": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 50, 57, 60, 66, 67, 68, 69, 70, 74, 80, 81, 85, 88, 94, 96, 98, 99, 100, 102, 103, 108, 109, 110, 114, 123, 124, 126, 127, 128, 134, 135, 136, 137, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 155, 158, 159, 162, 163, 166, 167, 168, 170, 171, 172, 175, 176, 177, 182, 184, 185, 187, 188, 192, 194, 195, 196, 197, 198, 201, 204, 206, 212, 215, 218, 219, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 258, 268, 269, 270, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 843, 844, 845, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939], "design": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 87, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 186, 187, 198, 206, 212, 215, 217, 218, 226, 228, 230, 231, 232, 234, 235, 237, 238, 239, 240, 252, 255, 260, 277, 279, 282, 310, 312, 317, 324, 331, 332, 333, 334, 411, 457, 460, 485, 494, 518, 519, 521, 522, 550, 551, 559, 561, 563, 566, 567, 568, 574, 579, 582, 635, 637, 671, 678, 685, 695, 765, 769, 798, 809, 889, 920, 921, 936], "pass": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 69, 85, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 149, 159, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 192, 193, 194, 195, 196, 197, 198, 206, 209, 212, 216, 218, 219, 223, 226, 227, 228, 230, 231, 232, 233, 234, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 257, 259, 260, 263, 264, 265, 268, 269, 277, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 316, 318, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 386, 390, 391, 397, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496, 499, 500, 502, 504, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 628, 629, 632, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 688, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 730, 732, 733, 735, 736, 737, 738, 747, 748, 749, 750, 752, 754, 755, 756, 757, 758, 759, 760, 764, 771, 772, 773, 774, 775, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 804, 805, 808, 809, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 829, 833, 834, 835, 836, 843, 849, 852, 853, 856, 858, 860, 861, 862, 864, 866, 867, 868, 869, 870, 871, 873, 874, 875, 876, 879, 880, 881, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 905, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 941, 946], "zero": [26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 50, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 90, 97, 99, 100, 101, 103, 108, 109, 110, 114, 117, 120, 121, 122, 126, 136, 139, 140, 141, 142, 147, 148, 159, 162, 166, 167, 168, 170, 172, 175, 177, 178, 184, 186, 188, 192, 194, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 250, 251, 252, 255, 259, 260, 270, 279, 282, 283, 284, 285, 286, 288, 290, 292, 294, 301, 304, 309, 316, 319, 320, 324, 325, 326, 329, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 348, 350, 364, 365, 423, 427, 429, 439, 485, 489, 494, 495, 496, 517, 518, 519, 521, 522, 523, 524, 545, 550, 551, 552, 564, 609, 620, 636, 637, 661, 685, 698, 735, 736, 737, 745, 749, 764, 771, 772, 774, 775, 779, 780, 784, 786, 787, 788, 789, 790, 802, 805, 812, 813, 814, 815, 816, 818, 834, 836, 851, 855, 865, 866, 871, 889, 894, 899, 900], "phase": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 53, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 132, 133, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 193, 198, 212, 217, 218, 223, 226, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 252, 260, 270, 277, 279, 282, 283, 298, 300, 302, 306, 317, 319, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 357, 410, 441, 485, 494, 496, 517, 518, 519, 521, 522, 524, 550, 551, 602, 607, 617, 620, 633, 636, 705, 787, 790, 813, 814, 824, 877, 949, 956], "causal": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 260, 331, 332, 333, 334, 489, 518, 519, 521, 522, 550, 551], "bandstop": [26, 31, 108, 162, 230, 239, 550, 551, 889], "domain": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 72, 99, 100, 103, 108, 109, 110, 114, 126, 130, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 191, 192, 198, 212, 218, 223, 226, 228, 229, 230, 231, 234, 237, 238, 239, 240, 246, 260, 270, 271, 272, 277, 302, 310, 323, 331, 332, 333, 334, 485, 494, 495, 519, 521, 522, 523, 524, 550, 551, 619, 620, 733, 786, 789, 822, 829, 956], "ham": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 218, 223, 229, 230, 231, 232, 234, 237, 238, 239, 240, 260, 284, 292, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551, 805, 890], "0194": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 218, 223, 229, 230, 231, 232, 237, 238, 239, 240, 260], "passband": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 230, 231, 232, 234, 237, 238, 239, 240, 260, 316], "rippl": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 218, 223, 230, 231, 232, 237, 238, 239, 240, 260], "db": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 135, 136, 140, 141, 142, 148, 159, 162, 163, 167, 168, 170, 172, 177, 195, 198, 212, 218, 223, 226, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 243, 246, 250, 252, 260, 268, 269, 270, 293, 294, 304, 319, 320, 331, 332, 333, 334, 336, 379, 380, 441, 443, 516, 519, 550, 551, 566, 579, 609, 633, 634, 636, 728, 779, 784, 786, 787, 788, 789, 790, 834, 852, 868, 877, 881, 884, 890, 892], "stopband": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 218, 223, 230, 231, 232, 237, 238, 239, 240, 260], "attenu": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 188, 212, 218, 223, 230, 231, 232, 237, 238, 239, 240, 260, 282, 284, 320, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "lower": [26, 27, 29, 31, 34, 35, 36, 38, 39, 40, 41, 42, 44, 47, 48, 60, 63, 66, 68, 75, 80, 81, 88, 97, 99, 100, 103, 108, 109, 114, 126, 134, 139, 140, 141, 142, 147, 148, 159, 162, 167, 168, 170, 172, 177, 182, 186, 198, 206, 207, 210, 219, 223, 226, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 246, 257, 258, 259, 260, 263, 265, 270, 273, 280, 285, 294, 319, 326, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 485, 488, 490, 509, 519, 521, 550, 551, 595, 609, 610, 635, 636, 641, 646, 651, 675, 694, 763, 770, 771, 773, 774, 784, 785, 786, 787, 789, 790, 804, 805, 845, 853, 855, 860, 867, 868, 874, 875, 879, 888, 889, 890, 891, 894, 896, 898, 899, 900, 941], "transit": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 230, 231, 232, 234, 237, 238, 239, 240, 260, 286, 290, 291, 320, 324, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551, 638, 675, 902], "bandwidth": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 131, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 230, 231, 232, 234, 237, 238, 239, 240, 260, 270, 306, 331, 332, 333, 334, 488, 496, 522, 550, 551, 609, 610, 786, 789, 793, 796, 798, 804, 814, 817, 868], "50": [26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 54, 60, 61, 67, 68, 71, 72, 73, 92, 99, 103, 107, 108, 109, 110, 114, 117, 122, 126, 128, 130, 131, 135, 136, 139, 140, 141, 142, 147, 148, 149, 159, 161, 162, 163, 169, 170, 172, 175, 177, 184, 185, 186, 190, 192, 194, 195, 196, 197, 198, 204, 206, 210, 211, 212, 216, 218, 222, 223, 226, 228, 229, 230, 231, 232, 234, 236, 239, 240, 243, 244, 245, 252, 255, 256, 257, 259, 260, 263, 264, 265, 270, 277, 284, 305, 316, 320, 323, 403, 518, 550, 551, 570, 618, 645, 657, 741, 746, 764, 772, 834, 884, 956], "hz": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 59, 60, 68, 95, 98, 99, 100, 103, 107, 108, 109, 110, 114, 117, 120, 121, 122, 126, 131, 134, 135, 136, 140, 141, 142, 148, 151, 159, 162, 163, 167, 168, 170, 172, 177, 192, 193, 194, 195, 198, 206, 209, 210, 212, 216, 217, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 257, 258, 259, 260, 268, 269, 273, 277, 317, 323, 331, 332, 333, 334, 485, 488, 494, 518, 519, 521, 522, 524, 550, 551, 609, 610, 636, 641, 644, 648, 649, 660, 662, 665, 671, 675, 750, 770, 784, 786, 787, 788, 789, 790, 793, 796, 802, 804, 810, 812, 813, 814, 816, 817, 866, 868, 877, 884, 889, 890, 939], "upper": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 60, 65, 68, 88, 97, 99, 103, 108, 110, 114, 134, 140, 141, 142, 147, 148, 159, 162, 167, 168, 170, 172, 185, 192, 198, 212, 218, 223, 226, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 260, 269, 270, 273, 277, 285, 290, 328, 330, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 349, 483, 485, 488, 490, 509, 519, 521, 527, 550, 551, 609, 610, 635, 636, 641, 675, 763, 770, 771, 772, 773, 774, 775, 784, 785, 786, 787, 788, 789, 790, 802, 804, 805, 812, 845, 853, 855, 860, 868, 874, 875, 879, 888, 890, 891, 894, 896, 898, 899, 900], "7921": 26, "601": [26, 29, 31, 166, 175, 223, 226, 231, 243], "parallel": [26, 27, 29, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 57, 58, 60, 68, 92, 100, 103, 108, 109, 110, 114, 126, 140, 142, 148, 159, 162, 167, 170, 172, 177, 192, 197, 198, 202, 209, 212, 218, 223, 230, 231, 232, 234, 237, 238, 239, 240, 257, 260, 269, 277, 284, 303, 308, 312, 320, 323, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 485, 486, 488, 489, 493, 494, 496, 499, 500, 521, 522, 523, 526, 528, 539, 541, 545, 547, 548, 550, 551, 594, 597, 598, 609, 610, 614, 619, 620, 641, 648, 649, 679, 723, 726, 731, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 818, 836, 868, 871, 890, 936, 950], "n_job": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 67, 68, 100, 103, 108, 109, 110, 114, 123, 126, 127, 130, 134, 137, 140, 142, 148, 159, 162, 167, 170, 172, 177, 184, 185, 192, 198, 202, 209, 212, 218, 223, 230, 231, 232, 234, 237, 238, 239, 240, 255, 257, 259, 260, 263, 264, 265, 269, 284, 291, 293, 294, 303, 323, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 485, 486, 488, 489, 493, 494, 495, 496, 499, 500, 521, 522, 523, 526, 539, 541, 550, 551, 594, 597, 598, 609, 610, 619, 620, 641, 648, 649, 723, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 818, 836, 868, 871, 890, 936, 941], "done": [26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 97, 100, 103, 106, 108, 109, 110, 114, 117, 119, 120, 121, 122, 126, 128, 130, 131, 134, 135, 136, 137, 140, 142, 148, 152, 157, 159, 160, 161, 162, 166, 167, 169, 170, 172, 176, 177, 181, 182, 184, 185, 186, 187, 188, 192, 193, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 269, 270, 281, 282, 283, 284, 287, 290, 298, 306, 309, 310, 312, 316, 319, 320, 324, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 364, 365, 388, 428, 496, 545, 547, 548, 550, 551, 603, 605, 606, 607, 636, 648, 649, 652, 654, 770, 784, 785, 788, 811, 813, 814, 816, 817, 832, 834, 838, 852, 860, 890, 936, 948], "17": [26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 52, 54, 58, 60, 61, 67, 68, 69, 71, 73, 76, 82, 87, 88, 98, 100, 103, 107, 108, 109, 110, 114, 117, 126, 130, 135, 136, 139, 140, 141, 142, 148, 151, 156, 159, 162, 163, 167, 170, 171, 172, 177, 182, 183, 184, 186, 192, 195, 197, 202, 203, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 250, 255, 256, 257, 259, 260, 263, 265, 269, 277, 313, 317, 320, 331, 332, 333, 334, 338, 341, 342, 343, 344, 346, 347, 355, 364, 423, 425, 428, 429, 441, 483, 490, 492, 549, 550, 551, 603, 609, 610, 671, 737, 749, 772, 784, 802, 812, 813, 816, 853, 894, 900, 953, 956], "task": [26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 58, 59, 60, 68, 72, 97, 100, 103, 108, 109, 110, 114, 126, 139, 140, 142, 148, 159, 162, 163, 167, 169, 170, 172, 177, 181, 182, 191, 192, 195, 201, 202, 209, 212, 218, 223, 227, 230, 231, 232, 234, 237, 238, 239, 240, 257, 260, 269, 277, 284, 312, 317, 320, 321, 450, 486, 493, 802, 812, 813, 816, 939], "elaps": [26, 27, 29, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 142, 148, 159, 162, 167, 170, 172, 177, 192, 202, 209, 212, 218, 223, 230, 231, 232, 234, 237, 238, 239, 240, 257, 260, 269], "71": [26, 27, 29, 37, 38, 39, 40, 41, 42, 44, 45, 47, 58, 60, 61, 68, 71, 100, 103, 107, 108, 110, 114, 126, 130, 135, 136, 139, 140, 141, 142, 148, 159, 162, 163, 172, 192, 195, 202, 207, 208, 210, 212, 218, 222, 223, 230, 232, 234, 236, 237, 239, 240, 255, 256, 257, 259, 260, 263, 265, 269], "161": [26, 27, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 71, 100, 103, 108, 110, 114, 126, 140, 142, 148, 159, 172, 187, 190, 192, 195, 202, 214, 218, 223, 232, 234, 236, 237, 260, 269, 956], "287": [26, 27, 37, 39, 40, 41, 42, 44, 47, 58, 60, 68, 100, 103, 108, 110, 114, 139, 148, 159, 172, 192, 195, 202, 218, 234, 236, 237, 260], "9": [26, 29, 30, 31, 32, 33, 34, 35, 37, 39, 44, 45, 47, 48, 50, 52, 54, 58, 59, 60, 61, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 85, 88, 93, 95, 97, 98, 100, 103, 105, 106, 107, 109, 111, 113, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 133, 135, 136, 137, 139, 141, 142, 143, 144, 146, 152, 154, 156, 161, 163, 165, 166, 167, 168, 170, 171, 174, 176, 177, 180, 182, 184, 185, 188, 190, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 214, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 262, 263, 265, 268, 273, 274, 276, 277, 278, 281, 294, 298, 299, 300, 303, 313, 316, 317, 320, 329, 331, 332, 333, 334, 336, 338, 343, 344, 346, 347, 364, 365, 367, 380, 389, 403, 422, 423, 429, 430, 450, 476, 526, 536, 550, 551, 572, 591, 599, 611, 619, 635, 636, 644, 669, 686, 697, 725, 728, 766, 784, 786, 787, 788, 789, 790, 798, 808, 817, 818, 819, 834, 835, 838, 853, 863, 864, 869, 888, 893, 936, 941, 942, 948, 956], "66": [26, 38, 39, 42, 45, 47, 61, 66, 67, 71, 107, 130, 135, 139, 141, 170, 172, 184, 195, 202, 207, 210, 218, 222, 223, 232, 236, 255, 256, 259, 260, 277, 298, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 614, 636, 876], "id": [26, 29, 31, 38, 47, 58, 59, 60, 68, 71, 72, 75, 96, 98, 99, 100, 106, 107, 108, 117, 120, 121, 122, 126, 134, 135, 137, 139, 140, 166, 167, 168, 172, 175, 178, 188, 192, 194, 195, 197, 198, 203, 206, 208, 209, 211, 218, 223, 227, 230, 231, 232, 234, 239, 240, 250, 251, 252, 257, 269, 282, 285, 287, 288, 291, 294, 302, 307, 309, 320, 323, 326, 331, 332, 333, 336, 338, 339, 342, 344, 345, 346, 347, 350, 364, 365, 381, 423, 438, 446, 499, 505, 507, 509, 511, 512, 524, 536, 550, 551, 582, 595, 596, 601, 631, 637, 648, 649, 663, 688, 695, 697, 698, 704, 733, 786, 787, 788, 834, 866, 869, 889, 894, 899, 926, 936], "Not": [26, 29, 34, 35, 37, 38, 42, 44, 47, 54, 58, 59, 60, 71, 72, 75, 88, 96, 98, 99, 100, 101, 103, 106, 107, 108, 109, 114, 117, 120, 121, 122, 123, 124, 127, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 148, 149, 155, 158, 161, 162, 163, 166, 167, 168, 169, 171, 172, 175, 177, 178, 192, 193, 194, 195, 198, 203, 206, 208, 209, 210, 211, 212, 218, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 257, 258, 259, 260, 263, 265, 269, 273, 320, 333, 334, 339, 345, 346, 347, 491, 494, 518, 527, 637, 784, 834, 872, 900], "metadata": [26, 29, 30, 34, 35, 37, 38, 42, 44, 47, 54, 58, 59, 60, 71, 72, 75, 88, 96, 98, 99, 100, 101, 106, 109, 114, 117, 120, 121, 122, 123, 124, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 148, 149, 155, 158, 161, 162, 163, 166, 167, 168, 171, 172, 173, 174, 175, 177, 178, 187, 191, 192, 198, 203, 206, 208, 209, 210, 211, 212, 215, 216, 217, 218, 226, 227, 228, 230, 231, 232, 234, 238, 240, 243, 250, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 269, 285, 287, 291, 293, 302, 303, 308, 317, 319, 325, 326, 331, 332, 333, 334, 335, 336, 422, 507, 512, 550, 551, 557, 694, 714, 784, 786, 787, 788, 789, 790, 860, 956], "33": [26, 29, 34, 38, 39, 45, 47, 54, 59, 60, 61, 65, 66, 67, 71, 72, 73, 82, 103, 107, 109, 111, 129, 130, 134, 135, 136, 139, 141, 142, 147, 156, 163, 167, 170, 177, 188, 190, 195, 196, 204, 209, 214, 222, 223, 230, 232, 236, 240, 242, 255, 256, 257, 259, 260, 262, 264, 265, 280, 289, 320, 331, 332, 333, 334, 403, 524, 550, 551, 599, 890, 956], "interv": [26, 29, 36, 37, 54, 58, 59, 60, 64, 71, 72, 75, 88, 96, 97, 98, 99, 106, 109, 117, 120, 121, 122, 123, 124, 127, 130, 131, 134, 137, 139, 140, 144, 155, 158, 166, 168, 170, 171, 175, 176, 177, 178, 192, 198, 202, 203, 204, 206, 208, 209, 210, 211, 212, 218, 227, 228, 230, 231, 234, 237, 238, 251, 252, 257, 258, 259, 263, 265, 269, 273, 284, 291, 293, 317, 323, 325, 326, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 354, 415, 428, 507, 609, 619, 620, 636, 653, 654, 663, 701, 702, 734, 736, 761, 763, 784, 786, 787, 788, 789, 790, 799, 860, 881, 896, 939], "mode": [26, 29, 31, 37, 48, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 72, 73, 75, 77, 83, 84, 85, 86, 87, 88, 96, 98, 99, 100, 105, 106, 112, 113, 120, 121, 122, 123, 124, 127, 130, 131, 134, 137, 139, 140, 141, 144, 146, 147, 155, 157, 158, 162, 166, 167, 168, 170, 171, 175, 177, 178, 184, 187, 192, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 245, 246, 251, 257, 258, 259, 260, 263, 265, 269, 270, 273, 274, 277, 281, 283, 284, 285, 287, 288, 291, 293, 294, 300, 302, 303, 304, 306, 309, 312, 323, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 354, 364, 365, 410, 423, 427, 428, 429, 433, 434, 439, 440, 441, 482, 483, 489, 490, 517, 521, 522, 523, 542, 545, 550, 551, 594, 612, 613, 635, 636, 663, 671, 724, 747, 750, 779, 784, 785, 786, 787, 788, 789, 790, 811, 834, 862, 864, 866, 867, 868, 872, 875, 878, 879, 883, 888, 889, 890, 891, 894, 895, 896, 898, 899, 900, 905], "mean": [26, 29, 30, 34, 35, 36, 37, 40, 42, 45, 47, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 77, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 105, 106, 110, 112, 113, 120, 121, 122, 123, 124, 127, 128, 130, 131, 134, 137, 139, 140, 141, 144, 146, 147, 155, 158, 163, 166, 167, 168, 169, 170, 171, 175, 176, 178, 182, 183, 184, 186, 192, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 243, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 274, 282, 290, 291, 292, 303, 307, 308, 309, 310, 320, 325, 326, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 354, 357, 364, 365, 382, 386, 423, 428, 483, 489, 490, 492, 495, 504, 516, 517, 525, 542, 545, 547, 548, 550, 551, 552, 559, 566, 570, 574, 582, 588, 594, 603, 609, 612, 613, 614, 619, 620, 635, 636, 640, 643, 646, 647, 651, 653, 660, 662, 669, 671, 680, 688, 701, 702, 728, 736, 737, 738, 747, 748, 750, 763, 766, 771, 772, 773, 774, 775, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 802, 804, 805, 812, 813, 814, 816, 817, 834, 836, 860, 862, 866, 867, 868, 870, 871, 875, 879, 888, 889, 890, 891, 894, 896, 898, 936, 955], "activ": [26, 29, 30, 31, 34, 37, 38, 42, 44, 45, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 108, 109, 112, 113, 114, 116, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 152, 156, 158, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 184, 185, 188, 192, 193, 194, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 243, 244, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 274, 277, 284, 291, 293, 294, 304, 309, 310, 316, 317, 319, 320, 324, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 364, 365, 392, 417, 509, 512, 517, 524, 526, 530, 545, 547, 548, 549, 550, 551, 556, 567, 572, 588, 591, 602, 603, 604, 605, 606, 607, 614, 617, 633, 641, 652, 675, 701, 703, 705, 706, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 749, 756, 759, 776, 779, 784, 786, 787, 788, 789, 790, 802, 812, 813, 816, 844, 855, 857, 864, 871, 895, 900, 936, 941, 942, 943, 945, 946, 949, 950, 956], "projector": [26, 27, 29, 30, 31, 34, 35, 42, 44, 47, 54, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 96, 98, 100, 103, 109, 117, 119, 120, 121, 126, 128, 130, 136, 146, 148, 158, 166, 167, 172, 175, 176, 177, 178, 188, 191, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 227, 230, 231, 232, 238, 239, 241, 242, 243, 251, 252, 256, 257, 258, 259, 260, 263, 265, 273, 274, 281, 283, 284, 285, 287, 290, 291, 293, 297, 298, 302, 303, 304, 305, 316, 318, 319, 320, 323, 331, 332, 333, 334, 336, 340, 341, 364, 365, 423, 424, 425, 426, 427, 428, 439, 440, 441, 483, 490, 513, 514, 515, 516, 526, 527, 545, 547, 548, 550, 551, 572, 614, 636, 648, 649, 650, 671, 701, 709, 728, 785, 791, 792, 793, 794, 795, 796, 797, 866, 876, 883, 887, 888, 889, 921, 936, 956], "n_channel": [26, 42, 44, 45, 54, 57, 61, 68, 77, 84, 85, 86, 90, 92, 94, 96, 97, 98, 101, 102, 103, 107, 109, 110, 117, 126, 130, 141, 146, 158, 163, 166, 167, 168, 169, 175, 176, 177, 185, 188, 192, 193, 194, 198, 202, 203, 206, 207, 208, 212, 217, 223, 226, 227, 230, 231, 232, 233, 234, 235, 238, 243, 246, 250, 252, 257, 258, 259, 260, 263, 265, 270, 273, 274, 287, 319, 323, 326, 328, 330, 331, 332, 333, 334, 335, 336, 364, 365, 381, 382, 386, 397, 439, 483, 484, 485, 488, 489, 490, 491, 492, 494, 496, 497, 499, 521, 522, 550, 551, 635, 636, 637, 641, 644, 752, 769, 770, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 813, 814, 815, 853, 856, 860, 866, 867, 868, 875, 889, 891, 896, 898, 906], "No": [26, 27, 30, 31, 34, 35, 38, 42, 44, 47, 60, 67, 72, 74, 76, 80, 81, 101, 106, 109, 114, 117, 128, 135, 136, 139, 140, 141, 143, 144, 148, 149, 155, 161, 162, 163, 166, 167, 168, 169, 172, 175, 177, 182, 192, 197, 198, 204, 210, 211, 212, 217, 218, 223, 226, 229, 231, 232, 234, 237, 238, 239, 240, 250, 252, 255, 256, 260, 269, 273, 274, 309, 310, 317, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 457, 484, 499, 517, 545, 547, 548, 550, 551, 603, 605, 606, 607, 748, 890, 942], "grad": [26, 37, 42, 48, 54, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 88, 103, 105, 112, 113, 120, 121, 123, 124, 126, 127, 130, 131, 134, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 151, 152, 157, 158, 166, 168, 171, 176, 178, 182, 183, 184, 188, 192, 195, 196, 198, 202, 203, 204, 205, 206, 207, 209, 218, 223, 227, 228, 234, 236, 237, 243, 250, 251, 252, 257, 258, 259, 263, 265, 268, 269, 273, 286, 287, 316, 319, 320, 323, 326, 328, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 364, 365, 379, 386, 387, 406, 423, 427, 428, 439, 440, 441, 443, 483, 490, 492, 526, 527, 545, 547, 548, 550, 551, 591, 598, 614, 633, 634, 635, 636, 641, 646, 648, 649, 651, 653, 654, 660, 724, 770, 784, 786, 787, 788, 789, 790, 859, 860, 866, 867, 868, 870, 872, 874, 875, 876, 879, 889, 891, 892, 896, 897, 898], "skip": [26, 140, 170, 172, 175, 191, 192, 196, 197, 198, 217, 218, 229, 234, 240, 270, 282, 285, 286, 290, 294, 308, 309, 316, 323, 411, 572, 609, 653, 721], "axial": [26, 59, 73, 108, 110, 119, 136, 138, 157, 161, 168, 172, 186, 198, 206, 209, 218, 226, 233, 234, 255, 320, 329, 346, 347, 834, 854, 864], "100": [26, 27, 29, 31, 36, 37, 39, 42, 45, 48, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 101, 102, 105, 107, 109, 112, 113, 117, 119, 122, 123, 128, 130, 131, 135, 136, 138, 139, 141, 142, 143, 146, 147, 151, 153, 156, 161, 162, 163, 166, 167, 169, 170, 171, 172, 175, 177, 182, 184, 195, 196, 198, 202, 203, 204, 205, 206, 207, 209, 210, 212, 217, 218, 222, 223, 228, 229, 230, 232, 234, 236, 239, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 273, 274, 277, 302, 310, 317, 323, 331, 332, 333, 334, 341, 429, 504, 523, 547, 548, 550, 551, 575, 647, 660, 666, 671, 750, 770, 786, 787, 789, 790, 815, 818, 824, 834, 866, 884, 889, 953, 956], "pca": [26, 29, 31, 37, 39, 41, 42, 43, 44, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 101, 103, 105, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 151, 152, 157, 158, 159, 166, 167, 168, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273, 274, 285, 287, 292, 293, 296, 298, 300, 308, 316, 331, 333, 334, 336, 339, 345, 347, 364, 365, 423, 439, 443, 497, 545, 548, 550, 609, 610, 619, 620, 633, 636, 698, 880, 939, 956], "01": [26, 29, 32, 34, 37, 38, 39, 45, 47, 50, 51, 58, 59, 60, 61, 72, 82, 85, 94, 98, 100, 103, 105, 109, 110, 117, 118, 119, 120, 130, 135, 136, 138, 139, 140, 147, 148, 151, 152, 157, 163, 165, 167, 168, 172, 176, 177, 184, 185, 190, 192, 193, 194, 195, 196, 198, 206, 207, 209, 211, 212, 214, 218, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 252, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 269, 270, 272, 273, 277, 283, 313, 317, 322, 323, 325, 331, 332, 410, 412, 416, 450, 475, 476, 491, 550, 551, 562, 651, 660, 663, 669, 676, 680, 779, 956], "02": [26, 27, 31, 37, 39, 45, 46, 59, 60, 61, 82, 90, 93, 94, 108, 110, 111, 119, 130, 135, 136, 138, 141, 147, 151, 154, 156, 157, 162, 165, 168, 172, 174, 176, 180, 183, 186, 196, 198, 200, 206, 209, 223, 229, 233, 234, 235, 236, 238, 240, 245, 255, 256, 257, 259, 260, 262, 264, 265, 270, 277, 322, 323, 331, 332, 389, 545, 548, 550, 551, 562, 802, 812, 813, 815, 816, 818, 956], "an": [26, 29, 30, 31, 33, 37, 38, 41, 44, 45, 47, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 90, 94, 95, 96, 98, 100, 101, 105, 108, 109, 110, 114, 117, 119, 120, 121, 122, 128, 131, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 150, 155, 156, 158, 161, 162, 163, 166, 167, 170, 172, 175, 176, 177, 178, 179, 181, 182, 184, 186, 188, 189, 190, 191, 192, 193, 196, 197, 201, 202, 203, 204, 205, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 355, 356, 358, 360, 364, 365, 367, 369, 370, 371, 372, 380, 382, 384, 385, 386, 389, 393, 396, 398, 407, 416, 417, 418, 423, 424, 425, 426, 427, 429, 430, 432, 434, 439, 440, 442, 443, 456, 459, 460, 464, 482, 483, 489, 490, 491, 495, 498, 500, 501, 502, 505, 507, 508, 510, 512, 517, 518, 519, 522, 523, 524, 525, 526, 530, 531, 533, 538, 542, 545, 547, 548, 549, 550, 551, 552, 556, 558, 560, 561, 566, 567, 568, 569, 570, 572, 576, 579, 580, 586, 588, 590, 591, 594, 597, 598, 599, 602, 603, 605, 609, 610, 612, 613, 614, 616, 617, 618, 621, 623, 625, 632, 633, 635, 636, 637, 638, 639, 640, 644, 646, 648, 649, 651, 653, 654, 656, 658, 660, 662, 666, 669, 670, 671, 672, 678, 681, 684, 689, 690, 691, 692, 693, 696, 698, 700, 701, 703, 711, 713, 717, 718, 720, 722, 723, 725, 728, 732, 733, 734, 737, 740, 744, 749, 750, 756, 759, 761, 764, 765, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 799, 802, 805, 806, 812, 816, 817, 820, 821, 824, 826, 832, 834, 835, 836, 844, 849, 851, 852, 853, 857, 858, 860, 862, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 880, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 902, 904, 906, 916, 917, 919, 927, 928, 929, 936, 939, 941, 942, 946, 948, 949, 952, 956], "subspac": [26, 29, 37, 41, 44, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 114, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 148, 158, 166, 167, 168, 171, 172, 175, 177, 178, 188, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 218, 227, 228, 230, 232, 233, 234, 237, 251, 260, 263, 265, 319, 323, 652, 671], "dimens": [26, 29, 37, 41, 44, 45, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 114, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 148, 149, 158, 166, 167, 168, 171, 172, 175, 177, 178, 186, 188, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 218, 222, 223, 227, 228, 230, 232, 233, 234, 236, 251, 252, 255, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 277, 291, 301, 306, 316, 319, 320, 328, 331, 332, 333, 334, 338, 339, 340, 341, 342, 344, 345, 346, 347, 354, 381, 429, 483, 486, 489, 490, 493, 494, 496, 498, 522, 523, 545, 547, 548, 550, 551, 609, 610, 612, 613, 619, 620, 635, 636, 651, 764, 765, 769, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 804, 805, 815, 824, 834, 844, 845, 853, 868, 875, 879, 888, 889, 891, 896, 898], "fran\u00e7oi": [26, 98, 105, 136, 209, 210, 218, 227, 277, 320, 636, 645], "tadel": [26, 136, 209, 210, 218, 277], "sylvain": [26, 136, 209, 210, 218, 277], "baillet": [26, 136, 209, 210, 218, 277], "john": [26, 44, 45, 77, 95, 109, 136, 154, 204, 206, 209, 210, 218, 277, 294, 302, 308, 317, 320, 330, 331, 332, 333, 334, 367, 458, 459, 487, 489, 501, 545, 603, 614, 636, 652, 675, 741, 746, 784, 788], "mosher": [26, 77, 136, 206, 209, 210, 218, 277, 320, 367], "dimitrio": [26, 36, 136, 209, 210, 218, 277, 317], "pantazi": [26, 36, 136, 209, 210, 218, 277, 317], "richard": [26, 77, 136, 209, 210, 218, 236, 269, 277, 281, 283, 288, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308, 317, 320, 367, 459, 636, 644, 766, 954], "leahi": [26, 77, 136, 209, 210, 218, 277, 320, 367], "user": [26, 71, 102, 121, 136, 168, 182, 191, 193, 197, 198, 209, 210, 216, 217, 218, 228, 229, 243, 277, 281, 282, 283, 285, 288, 291, 293, 294, 297, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 321, 324, 326, 331, 332, 333, 334, 335, 336, 338, 339, 342, 344, 345, 346, 347, 447, 448, 449, 450, 452, 453, 454, 456, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 504, 512, 549, 550, 551, 568, 636, 660, 678, 729, 782, 783, 784, 788, 853, 866, 873, 883, 889, 898, 907, 908, 909, 910, 911, 913, 936, 938, 941, 944, 946, 947, 949, 951], "friendli": [26, 136, 209, 210, 218, 277, 312], "applic": [26, 41, 97, 100, 114, 136, 175, 188, 196, 204, 209, 210, 218, 219, 223, 229, 232, 233, 234, 237, 270, 277, 284, 291, 298, 302, 309, 320, 326, 331, 332, 333, 334, 485, 490, 494, 507, 519, 521, 522, 535, 550, 551, 570, 576, 594, 595, 636, 637, 668, 671, 694, 697, 786, 787, 789, 790, 834, 866, 868, 883, 889, 936, 945, 949, 952], "intellig": [26, 136, 209, 210, 218, 222, 277, 489, 523], "neurosci": [26, 30, 36, 42, 45, 69, 97, 101, 136, 140, 177, 209, 210, 218, 222, 223, 229, 260, 277, 310, 314, 317, 322, 343, 429, 484, 489, 499, 503, 636, 641, 644, 744, 771, 772, 774, 775, 802, 812, 813, 815, 816, 818, 954], "2011": [26, 41, 47, 60, 85, 114, 136, 177, 195, 209, 210, 216, 218, 229, 252, 255, 277, 313, 320, 364, 491, 548, 603, 637, 777, 778], "13": [26, 29, 35, 36, 37, 38, 39, 42, 45, 47, 50, 51, 52, 54, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 94, 97, 101, 103, 106, 107, 109, 110, 111, 113, 118, 120, 121, 123, 124, 127, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 147, 148, 152, 156, 158, 159, 160, 162, 163, 168, 169, 170, 171, 172, 174, 175, 176, 178, 180, 184, 187, 188, 190, 192, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 222, 223, 227, 228, 229, 231, 232, 234, 236, 237, 238, 242, 243, 250, 255, 256, 257, 258, 259, 260, 262, 263, 265, 269, 270, 277, 281, 290, 293, 313, 314, 316, 319, 320, 326, 330, 331, 332, 333, 334, 336, 337, 342, 344, 349, 403, 428, 450, 475, 494, 504, 518, 519, 521, 522, 524, 550, 551, 636, 653, 654, 671, 698, 714, 717, 747, 750, 784, 788, 816, 817, 870, 881, 892, 934, 942, 953, 956], "doi": [26, 30, 34, 36, 38, 39, 41, 42, 44, 45, 47, 59, 61, 66, 68, 69, 70, 72, 77, 80, 81, 84, 85, 86, 92, 97, 98, 101, 102, 105, 109, 110, 114, 121, 126, 128, 136, 139, 140, 144, 146, 148, 154, 163, 167, 170, 177, 181, 183, 188, 202, 204, 206, 209, 210, 218, 222, 223, 227, 229, 231, 232, 233, 234, 235, 237, 239, 252, 255, 256, 260, 268, 277, 314, 316, 317, 320, 331, 332, 333, 334, 337, 342, 343, 357, 364, 365, 367, 369, 423, 429, 450, 458, 459, 463, 464, 475, 476, 483, 484, 487, 489, 490, 491, 499, 501, 503, 507, 545, 547, 548, 550, 551, 603, 604, 614, 618, 635, 636, 637, 641, 644, 645, 647, 650, 651, 652, 671, 675, 678, 679, 686, 728, 737, 741, 744, 746, 749, 768, 770, 771, 772, 773, 774, 775, 777, 778, 786, 789, 798, 800, 802, 804, 805, 812, 813, 815, 816, 818, 853, 936], "10": [26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 54, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 154, 155, 156, 158, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 177, 181, 182, 183, 184, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 268, 269, 270, 273, 277, 280, 282, 286, 290, 291, 299, 300, 301, 303, 309, 312, 313, 314, 316, 317, 320, 325, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 357, 364, 365, 367, 369, 377, 380, 392, 398, 403, 408, 413, 416, 419, 420, 421, 423, 429, 434, 450, 458, 459, 463, 464, 475, 476, 483, 484, 485, 487, 489, 490, 491, 494, 499, 501, 503, 504, 507, 518, 519, 521, 522, 527, 545, 547, 548, 550, 551, 576, 592, 593, 603, 604, 614, 618, 623, 635, 636, 637, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 660, 661, 662, 665, 667, 671, 675, 678, 679, 686, 697, 719, 728, 737, 741, 744, 746, 748, 749, 750, 765, 767, 768, 770, 771, 772, 773, 774, 775, 777, 778, 784, 786, 787, 788, 789, 790, 798, 800, 802, 804, 805, 812, 813, 814, 815, 816, 817, 818, 824, 834, 840, 851, 853, 866, 868, 875, 877, 878, 883, 884, 889, 894, 899, 936, 942, 945, 948, 956], "1155": [26, 136, 209, 210, 218, 277], "879716": [26, 136, 209, 210, 218, 277], "run": [26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 282, 283, 284, 286, 290, 291, 293, 295, 300, 302, 304, 305, 310, 317, 320, 321, 323, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 371, 389, 416, 423, 424, 426, 428, 445, 450, 485, 486, 489, 493, 494, 496, 499, 500, 521, 522, 523, 526, 539, 541, 550, 551, 588, 594, 597, 598, 609, 610, 619, 620, 636, 641, 648, 649, 651, 660, 661, 664, 669, 672, 688, 723, 732, 733, 735, 736, 737, 738, 747, 748, 749, 750, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 818, 834, 836, 859, 866, 868, 871, 875, 878, 879, 883, 889, 890, 939, 941, 942, 945, 946, 948, 950], "minut": [26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 331, 332, 343, 349, 506, 550, 551, 636, 736, 737, 883, 889, 946], "634": [26, 32, 223, 236, 260, 274, 276, 277, 636, 956], "second": [26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 282, 283, 288, 292, 294, 302, 303, 304, 307, 309, 316, 317, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 351, 352, 354, 363, 364, 365, 390, 391, 410, 412, 426, 428, 483, 489, 490, 495, 507, 509, 512, 517, 518, 520, 524, 525, 548, 549, 550, 551, 570, 572, 575, 590, 595, 596, 606, 609, 635, 636, 638, 639, 640, 641, 644, 646, 648, 649, 653, 656, 657, 660, 661, 662, 663, 664, 671, 679, 685, 689, 698, 701, 734, 750, 770, 771, 772, 774, 775, 776, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 814, 817, 834, 836, 843, 860, 867, 868, 869, 872, 875, 879, 880, 881, 883, 888, 889, 890, 891, 894, 896, 898, 899, 910, 911, 926, 936, 948], "usag": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 281, 290, 291, 292, 299, 302, 303, 308, 309, 311, 319, 320, 323, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 492, 496, 550, 551, 671, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 792, 795, 811, 813, 814, 815, 816, 817, 818, 936], "492": [26, 76, 260], "jupyt": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 290, 291, 293, 294, 303, 304, 307, 308, 310, 321, 901, 936], "notebook": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 290, 291, 293, 294, 303, 304, 307, 308, 312, 321, 901, 920, 936, 946], "brainstorm_data": [26, 32, 956], "ipynb": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274], "py": [26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 284, 286, 292, 293, 296, 298, 300, 302, 307, 309, 312, 936, 941, 956], "galleri": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 309, 956], "gener": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 121, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 279, 280, 282, 284, 287, 288, 290, 291, 292, 293, 294, 296, 298, 300, 301, 302, 303, 307, 308, 310, 311, 312, 314, 316, 317, 318, 319, 321, 322, 323, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 358, 359, 362, 376, 389, 394, 395, 396, 416, 422, 423, 450, 483, 485, 486, 489, 490, 493, 494, 500, 507, 512, 517, 519, 521, 522, 524, 541, 546, 547, 550, 551, 553, 556, 557, 568, 572, 576, 588, 591, 598, 602, 603, 605, 607, 610, 614, 617, 633, 634, 635, 636, 637, 639, 648, 650, 653, 654, 661, 663, 664, 669, 671, 688, 692, 698, 701, 703, 705, 706, 708, 709, 732, 733, 734, 736, 737, 738, 747, 748, 749, 750, 751, 764, 768, 769, 771, 772, 773, 774, 775, 780, 784, 786, 787, 788, 789, 790, 798, 799, 819, 831, 834, 835, 838, 849, 852, 856, 860, 867, 875, 879, 880, 890, 891, 894, 895, 904, 914, 931, 937, 938, 947, 948, 949, 950, 952, 954, 956], "sphinx": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 306, 309, 830], "look": [27, 29, 30, 33, 34, 45, 47, 53, 58, 59, 68, 81, 84, 87, 94, 95, 97, 98, 109, 110, 120, 135, 138, 139, 140, 147, 148, 150, 159, 161, 167, 170, 171, 176, 177, 182, 184, 186, 187, 188, 192, 194, 198, 201, 203, 204, 205, 206, 208, 209, 212, 215, 216, 218, 219, 226, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 243, 252, 255, 257, 260, 269, 270, 273, 274, 302, 303, 309, 310, 314, 320, 321, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 367, 369, 371, 377, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 524, 531, 533, 550, 551, 583, 636, 638, 666, 689, 784, 834, 852, 855, 882, 892, 894, 899, 900, 937, 941, 942], "high": [27, 29, 30, 33, 36, 38, 48, 64, 66, 85, 100, 101, 108, 109, 110, 114, 121, 126, 146, 167, 168, 169, 177, 182, 183, 186, 193, 197, 215, 217, 218, 223, 226, 230, 232, 233, 234, 237, 238, 239, 257, 258, 259, 260, 264, 270, 277, 282, 284, 294, 300, 301, 303, 319, 331, 332, 333, 334, 344, 349, 423, 424, 425, 426, 428, 463, 485, 494, 518, 519, 521, 542, 550, 551, 576, 603, 636, 641, 644, 648, 649, 653, 654, 661, 662, 664, 665, 671, 675, 737, 770, 834, 913, 938, 949], "respons": [27, 30, 34, 36, 42, 43, 45, 46, 53, 61, 72, 75, 77, 85, 86, 92, 104, 111, 114, 121, 123, 124, 134, 140, 144, 147, 148, 150, 155, 156, 161, 168, 169, 171, 175, 176, 188, 194, 206, 209, 211, 218, 223, 226, 229, 234, 240, 259, 260, 263, 265, 270, 277, 279, 284, 293, 296, 297, 303, 304, 310, 316, 317, 319, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 423, 443, 463, 489, 495, 497, 507, 509, 512, 519, 522, 550, 551, 633, 637, 686, 698, 784, 786, 787, 788, 789, 790, 799, 867, 874, 876, 877, 884, 956], "jussi": [27, 88, 277, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 294, 463, 671], "nurminen": [27, 88, 277, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 294, 463, 671], "jnu": [27, 88], "iki": [27, 88], "fi": [27, 36, 88, 112, 218, 549], "fname_evok": [27, 37, 56, 64, 65, 67, 70, 83, 84, 87, 152, 205, 207, 251, 273], "path": [27, 45, 59, 69, 70, 71, 88, 102, 128, 142, 146, 147, 151, 153, 161, 162, 166, 170, 181, 182, 183, 184, 185, 192, 196, 197, 198, 201, 207, 208, 211, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 256, 282, 286, 287, 288, 291, 293, 294, 302, 303, 304, 306, 307, 309, 319, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 368, 371, 372, 375, 376, 377, 380, 381, 389, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 420, 421, 429, 434, 435, 436, 442, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 502, 504, 517, 526, 531, 532, 533, 535, 536, 539, 541, 542, 543, 544, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 594, 598, 617, 621, 622, 623, 625, 626, 635, 636, 646, 647, 658, 660, 666, 667, 671, 681, 682, 683, 684, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 721, 722, 729, 732, 733, 735, 736, 737, 747, 749, 750, 752, 753, 761, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 806, 807, 808, 819, 821, 823, 826, 828, 833, 834, 843, 852, 854, 864, 866, 876, 883, 889, 894, 899, 900, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 941, 945, 948, 951], "join": [27, 36, 45, 70, 88, 102, 161, 166, 185, 196, 197, 210, 211, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 331, 332, 333, 334, 550, 551], "subject_b": 27, "hf_sef_15min": 27, "av": [27, 29, 37, 56, 57, 61, 64, 65, 66, 67, 70, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 105, 112, 113, 117, 119, 122, 143, 146, 147, 152, 175, 176, 198, 202, 204, 205, 207, 251, 273, 274, 317, 323, 331, 332, 333, 334, 341, 550, 551, 626, 701, 710, 788, 927], "interest": [27, 29, 30, 35, 42, 47, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 90, 105, 108, 112, 113, 117, 122, 123, 124, 127, 128, 131, 134, 139, 140, 141, 143, 146, 147, 155, 161, 163, 166, 168, 169, 170, 175, 176, 181, 186, 188, 196, 198, 202, 204, 205, 206, 207, 217, 219, 222, 223, 226, 229, 230, 233, 238, 239, 240, 244, 251, 252, 255, 256, 257, 258, 259, 269, 270, 273, 274, 282, 294, 301, 303, 309, 316, 319, 320, 326, 331, 332, 333, 334, 336, 356, 358, 392, 488, 491, 507, 509, 527, 535, 550, 551, 588, 609, 610, 620, 635, 636, 686, 695, 697, 733, 784, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 816, 817, 834, 890, 896, 936], "t": [27, 29, 30, 31, 35, 41, 45, 47, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 90, 92, 97, 105, 107, 109, 110, 112, 113, 120, 121, 122, 123, 125, 128, 129, 135, 141, 142, 143, 144, 146, 147, 166, 167, 169, 170, 171, 172, 175, 177, 182, 183, 184, 185, 186, 188, 191, 192, 194, 196, 197, 198, 202, 203, 204, 205, 206, 207, 209, 210, 215, 218, 222, 223, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 245, 251, 252, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 273, 274, 277, 279, 281, 285, 286, 288, 291, 292, 293, 294, 301, 302, 303, 304, 306, 307, 308, 309, 310, 316, 317, 319, 320, 321, 323, 326, 327, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 354, 364, 365, 410, 413, 419, 428, 429, 442, 443, 447, 448, 449, 452, 453, 454, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 489, 504, 506, 518, 524, 527, 545, 548, 550, 551, 562, 563, 602, 603, 611, 617, 623, 625, 633, 636, 639, 647, 648, 653, 654, 660, 662, 669, 671, 672, 680, 688, 691, 695, 697, 698, 701, 702, 705, 708, 711, 713, 730, 733, 749, 750, 756, 762, 768, 769, 770, 771, 773, 774, 776, 777, 778, 784, 785, 786, 787, 788, 789, 790, 802, 806, 809, 812, 814, 817, 824, 834, 836, 871, 881, 942, 943, 948, 950, 956], "250": [27, 30, 47, 72, 107, 139, 144, 151, 162, 163, 167, 169, 177, 182, 192, 195, 207, 226, 228, 229, 230, 234, 268, 277, 305, 737, 793], "ctf": [27, 53, 56, 57, 61, 62, 64, 65, 66, 67, 70, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 105, 112, 113, 128, 143, 146, 147, 166, 169, 175, 191, 196, 198, 202, 204, 205, 207, 213, 214, 220, 221, 255, 256, 273, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 298, 299, 301, 303, 306, 308, 317, 320, 325, 328, 329, 331, 332, 333, 334, 335, 336, 342, 370, 406, 414, 422, 424, 428, 430, 432, 433, 524, 526, 550, 551, 564, 592, 593, 598, 599, 602, 603, 612, 613, 614, 615, 618, 633, 634, 649, 671, 692, 701, 703, 709, 716, 732, 784, 786, 787, 788, 789, 790, 834, 852, 956], "nave": [27, 31, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 95, 105, 112, 113, 117, 119, 121, 131, 134, 135, 136, 137, 141, 143, 146, 147, 175, 192, 198, 202, 203, 204, 205, 207, 208, 218, 223, 250, 251, 252, 263, 265, 273, 274, 282, 284, 288, 290, 297, 324, 330, 333, 334, 336, 422, 540, 604, 605, 606, 607, 609, 610, 616, 619, 620, 748, 784], "2790": 27, "aspect": [27, 42, 48, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 105, 112, 113, 134, 143, 146, 147, 168, 175, 198, 202, 204, 205, 207, 230, 233, 257, 258, 259, 260, 273, 274, 282, 284, 292, 333, 334, 838, 871], "specifi": [27, 30, 31, 35, 45, 57, 64, 67, 69, 73, 90, 114, 121, 122, 128, 130, 136, 141, 147, 155, 161, 166, 167, 168, 175, 176, 177, 181, 184, 192, 193, 194, 195, 196, 197, 198, 204, 210, 211, 212, 215, 219, 223, 226, 227, 229, 230, 231, 232, 234, 235, 237, 238, 239, 243, 244, 245, 246, 256, 257, 260, 263, 269, 273, 274, 281, 283, 285, 286, 288, 290, 291, 292, 293, 294, 297, 298, 299, 302, 303, 308, 309, 318, 319, 320, 323, 325, 326, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 355, 357, 364, 365, 370, 377, 382, 392, 398, 423, 424, 425, 426, 427, 428, 429, 439, 440, 441, 442, 447, 448, 449, 450, 452, 453, 454, 455, 458, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 490, 494, 495, 499, 500, 504, 507, 509, 518, 519, 521, 522, 524, 526, 527, 535, 539, 542, 545, 547, 548, 549, 550, 551, 552, 561, 566, 567, 576, 581, 594, 597, 602, 604, 612, 613, 614, 625, 635, 636, 639, 641, 646, 647, 649, 650, 651, 655, 656, 660, 671, 686, 689, 693, 695, 697, 702, 705, 711, 720, 723, 725, 728, 733, 734, 749, 761, 764, 770, 771, 772, 774, 775, 782, 784, 786, 787, 788, 789, 790, 802, 812, 821, 834, 836, 838, 845, 851, 852, 853, 855, 860, 867, 868, 870, 871, 874, 875, 876, 879, 881, 882, 883, 885, 888, 891, 894, 895, 896, 898, 899, 900, 901, 905, 931, 936], "pleas": [27, 30, 31, 101, 103, 109, 128, 136, 151, 161, 162, 163, 172, 192, 198, 210, 211, 212, 216, 223, 226, 231, 232, 238, 239, 256, 265, 293, 294, 299, 309, 311, 314, 316, 317, 319, 320, 321, 323, 331, 332, 356, 358, 400, 441, 459, 510, 522, 524, 550, 551, 562, 636, 660, 672, 703, 866, 883, 889, 928, 937, 941, 946, 948, 952], "consid": [27, 30, 31, 108, 120, 128, 131, 135, 136, 139, 163, 167, 170, 178, 182, 185, 187, 188, 192, 210, 211, 212, 219, 223, 226, 227, 228, 229, 231, 232, 237, 238, 239, 255, 256, 257, 260, 263, 265, 270, 281, 287, 294, 302, 304, 309, 310, 311, 319, 326, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 354, 364, 365, 377, 387, 405, 423, 427, 428, 440, 441, 483, 490, 491, 504, 513, 514, 515, 516, 518, 524, 531, 547, 548, 550, 551, 559, 566, 568, 574, 582, 631, 636, 638, 639, 644, 646, 647, 651, 653, 655, 657, 660, 663, 669, 671, 676, 695, 697, 701, 745, 754, 755, 756, 758, 759, 771, 772, 774, 775, 784, 787, 788, 791, 792, 793, 794, 795, 796, 797, 834, 849, 858, 866, 869, 870, 882, 889, 941], "self": [27, 30, 31, 128, 136, 198, 210, 211, 212, 223, 226, 231, 238, 239, 256, 265, 286, 309, 318, 325, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 355, 370, 434, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 549, 550, 551, 602, 635, 636, 637, 656, 657, 784, 786, 787, 788, 789, 790, 821, 835, 936], "highpass": [27, 38, 98, 100, 103, 107, 108, 109, 117, 120, 126, 167, 172, 177, 192, 193, 194, 195, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 270, 273, 281, 286, 287, 292, 301, 323, 331, 332, 333, 334, 336, 518, 550, 551, 786, 787, 789, 790, 889, 890], "version": [27, 45, 60, 97, 110, 141, 171, 172, 176, 181, 187, 192, 197, 215, 216, 217, 222, 223, 228, 229, 246, 274, 309, 310, 313, 314, 317, 320, 323, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 364, 365, 372, 375, 377, 380, 388, 408, 410, 412, 416, 429, 456, 483, 484, 485, 488, 490, 491, 492, 494, 499, 503, 504, 507, 512, 517, 518, 521, 522, 523, 527, 536, 542, 545, 547, 548, 550, 551, 560, 567, 572, 575, 577, 581, 582, 584, 590, 594, 597, 598, 614, 624, 627, 628, 629, 635, 636, 637, 651, 660, 693, 695, 701, 703, 719, 728, 732, 733, 736, 737, 749, 766, 776, 777, 778, 779, 783, 784, 786, 787, 788, 789, 790, 803, 834, 846, 852, 853, 854, 860, 861, 864, 865, 866, 868, 870, 872, 875, 876, 879, 883, 886, 888, 889, 890, 891, 892, 894, 896, 898, 899, 900, 901, 904, 927, 936, 942, 945, 946, 947, 948], "evoked_hp": 27, "l_freq": [27, 47, 109, 141, 170, 172, 177, 218, 229, 230, 232, 234, 270, 323, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 636, 644, 648, 649, 653, 654, 661, 662, 664, 665, 675, 939], "300": [27, 30, 31, 39, 47, 60, 72, 77, 86, 101, 107, 108, 119, 139, 143, 161, 166, 175, 177, 195, 209, 212, 230, 232, 236, 239, 255, 260, 268, 301, 784], "h_freq": [27, 47, 109, 141, 170, 172, 177, 218, 229, 230, 232, 234, 237, 270, 323, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 636, 644, 648, 649, 653, 654, 660, 661, 662, 664, 665, 675, 939], "3e": [27, 34, 35, 47, 58, 61, 71, 74, 75, 76, 77, 80, 81, 84, 86, 91, 121, 136, 178, 202, 204, 205, 206, 207, 210, 211, 223, 648, 649, 853], "edg": [27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 85, 97, 99, 100, 103, 108, 109, 110, 114, 126, 137, 140, 141, 142, 147, 148, 159, 162, 167, 168, 170, 172, 177, 187, 198, 212, 218, 223, 226, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 245, 246, 251, 255, 260, 270, 284, 285, 290, 292, 293, 303, 305, 306, 307, 328, 331, 332, 333, 334, 340, 341, 349, 386, 483, 485, 489, 490, 512, 519, 521, 523, 548, 550, 551, 559, 566, 635, 636, 638, 639, 651, 660, 671, 675, 784, 786, 787, 789, 790, 839, 849, 853, 854, 868, 875, 879, 888, 889, 891, 896, 898, 936], "75": [27, 29, 30, 31, 34, 38, 39, 41, 42, 45, 47, 50, 60, 61, 67, 70, 97, 99, 103, 106, 107, 109, 128, 130, 139, 141, 142, 161, 169, 170, 172, 184, 195, 198, 206, 210, 212, 218, 222, 223, 226, 228, 231, 232, 234, 235, 236, 240, 245, 255, 256, 259, 260, 273, 299, 301, 317, 320, 550, 551, 636, 892], "cutoff": [27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 52, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 230, 231, 232, 234, 237, 238, 239, 240, 260, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 636, 644, 660, 675], "262": [27, 38, 39, 47, 139, 177, 195, 238, 260, 277], "133": [27, 39, 61, 88, 182, 195, 223, 235, 236, 260], "044": [27, 166, 168, 175, 195, 252], "condit": [27, 36, 37, 42, 43, 46, 53, 56, 57, 61, 64, 65, 66, 67, 70, 71, 77, 84, 85, 86, 87, 88, 105, 112, 113, 114, 121, 123, 126, 137, 139, 146, 147, 150, 152, 156, 166, 167, 168, 169, 170, 171, 175, 176, 179, 191, 192, 194, 202, 203, 204, 205, 206, 207, 210, 211, 218, 223, 229, 238, 244, 250, 255, 256, 257, 260, 261, 262, 263, 264, 265, 268, 277, 282, 287, 291, 292, 293, 294, 297, 300, 301, 302, 303, 307, 309, 312, 316, 317, 319, 320, 324, 331, 332, 333, 334, 336, 422, 423, 486, 493, 499, 505, 550, 601, 626, 633, 637, 647, 660, 671, 686, 698, 700, 701, 702, 765, 770, 771, 772, 774, 784, 786, 787, 788, 789, 790, 808, 816, 860, 874, 939, 956], "kind": [27, 29, 31, 33, 37, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 91, 95, 109, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 152, 157, 161, 162, 168, 175, 177, 182, 186, 192, 195, 196, 198, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 217, 218, 223, 230, 233, 251, 252, 263, 264, 265, 273, 284, 286, 287, 290, 291, 304, 306, 309, 320, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 364, 365, 373, 374, 380, 381, 396, 406, 444, 460, 502, 503, 518, 544, 550, 551, 553, 586, 624, 637, 701, 779, 784, 786, 787, 788, 789, 790, 802, 812, 834, 836, 855, 857, 886, 892, 894, 899, 900, 907, 908, 936, 949], "timepoint": [27, 45, 85, 128, 147, 167, 175, 177, 205, 207, 210, 243, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 354, 417, 597, 653, 701, 702], "901": [27, 223], "306": [27, 39, 48, 52, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 88, 95, 109, 110, 117, 119, 120, 121, 122, 136, 139, 157, 172, 184, 195, 198, 202, 203, 204, 205, 206, 207, 209, 223, 236, 237, 251, 252, 255, 260, 317, 636], "number": [27, 29, 30, 31, 35, 36, 37, 57, 60, 61, 65, 66, 68, 70, 72, 75, 78, 85, 99, 101, 103, 108, 109, 114, 117, 119, 120, 127, 130, 134, 136, 140, 141, 148, 161, 166, 168, 169, 170, 171, 172, 175, 176, 177, 186, 187, 188, 191, 192, 194, 196, 197, 198, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 223, 226, 227, 228, 229, 231, 232, 233, 237, 240, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 277, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 314, 317, 319, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 364, 365, 366, 367, 369, 392, 395, 403, 411, 417, 423, 424, 425, 426, 427, 428, 429, 431, 434, 439, 440, 441, 450, 482, 483, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 499, 500, 504, 506, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 539, 540, 541, 545, 547, 548, 549, 550, 551, 552, 562, 576, 578, 585, 588, 594, 597, 598, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 616, 618, 619, 620, 635, 636, 637, 641, 645, 646, 647, 648, 649, 651, 652, 660, 661, 662, 664, 666, 667, 669, 670, 676, 677, 688, 698, 702, 723, 732, 733, 734, 735, 736, 737, 738, 742, 743, 744, 747, 748, 749, 750, 758, 759, 760, 761, 763, 764, 765, 767, 769, 771, 772, 773, 774, 775, 776, 779, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 800, 802, 804, 805, 812, 813, 814, 815, 816, 817, 818, 824, 832, 833, 834, 836, 843, 852, 853, 859, 860, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 875, 876, 877, 879, 880, 882, 883, 888, 889, 890, 891, 894, 895, 896, 897, 898, 899, 902, 913, 936], "rang": [27, 29, 30, 31, 35, 36, 37, 39, 40, 41, 42, 44, 45, 54, 55, 58, 59, 60, 68, 71, 72, 75, 85, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 114, 119, 120, 121, 123, 124, 126, 127, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 151, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 177, 178, 182, 184, 185, 186, 188, 192, 193, 194, 195, 197, 198, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 223, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 281, 282, 291, 293, 303, 306, 310, 316, 319, 320, 323, 324, 328, 331, 332, 333, 334, 336, 340, 341, 364, 389, 443, 450, 465, 475, 476, 483, 486, 490, 492, 493, 516, 542, 547, 550, 551, 559, 587, 635, 636, 641, 651, 660, 784, 785, 786, 787, 788, 789, 790, 802, 812, 834, 836, 853, 866, 867, 868, 872, 875, 879, 888, 889, 890, 891, 896, 898], "05": [27, 29, 30, 31, 34, 35, 36, 45, 46, 60, 61, 68, 72, 75, 77, 85, 86, 87, 98, 105, 110, 113, 119, 122, 123, 124, 127, 129, 130, 139, 143, 146, 147, 152, 156, 167, 170, 176, 177, 196, 197, 203, 205, 206, 207, 209, 211, 218, 222, 226, 227, 230, 234, 236, 238, 240, 243, 248, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 274, 277, 283, 303, 312, 313, 364, 365, 389, 392, 398, 503, 522, 526, 550, 551, 570, 618, 645, 657, 744, 762, 767, 768, 771, 772, 774, 775, 776, 784, 800, 802, 812, 839, 895, 956], "25": [27, 29, 30, 31, 37, 39, 42, 44, 45, 54, 60, 61, 67, 69, 71, 73, 75, 76, 78, 79, 82, 95, 97, 99, 107, 108, 109, 130, 133, 135, 136, 139, 140, 141, 143, 145, 152, 156, 161, 162, 163, 169, 170, 171, 172, 174, 177, 185, 190, 195, 197, 198, 201, 204, 206, 207, 209, 211, 212, 214, 222, 223, 226, 228, 229, 231, 232, 233, 234, 236, 237, 239, 242, 245, 252, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 277, 285, 292, 294, 313, 316, 320, 325, 331, 332, 333, 334, 338, 339, 342, 343, 344, 345, 346, 347, 429, 475, 483, 485, 494, 519, 521, 550, 551, 675, 744, 773, 834, 839, 845, 860, 872, 889, 892, 894, 899, 942, 956], "off": [27, 30, 36, 94, 100, 103, 120, 141, 143, 161, 163, 167, 169, 175, 177, 178, 182, 185, 186, 192, 193, 194, 195, 197, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 239, 243, 244, 245, 246, 250, 251, 252, 273, 277, 283, 284, 290, 292, 293, 294, 307, 309, 316, 317, 320, 323, 326, 331, 332, 333, 334, 344, 364, 365, 485, 494, 519, 521, 550, 551, 635, 648, 649, 651, 662, 665, 671, 675, 686, 814, 817], "compar": [27, 30, 36, 45, 47, 48, 52, 53, 54, 62, 64, 65, 82, 100, 104, 109, 111, 116, 118, 130, 134, 140, 141, 150, 156, 167, 169, 170, 171, 172, 184, 186, 188, 192, 193, 198, 202, 206, 209, 210, 218, 223, 229, 231, 233, 234, 235, 257, 258, 259, 263, 264, 270, 284, 290, 305, 309, 312, 326, 328, 331, 332, 333, 334, 335, 336, 337, 342, 344, 427, 428, 433, 457, 524, 550, 551, 556, 588, 591, 595, 602, 603, 614, 615, 618, 634, 636, 671, 692, 694, 698, 701, 703, 706, 734, 738, 739, 740, 741, 742, 743, 744, 746, 749, 755, 834, 843, 866, 874, 883, 889, 936, 950, 956], "unfilt": [27, 192, 198, 229, 232], "meg0443": 27, "ch_name": [27, 29, 30, 33, 41, 44, 45, 57, 90, 94, 97, 101, 127, 139, 141, 142, 147, 153, 161, 162, 166, 172, 175, 177, 185, 192, 194, 195, 198, 210, 212, 217, 218, 227, 230, 232, 234, 237, 238, 239, 240, 243, 250, 252, 257, 258, 259, 260, 269, 283, 286, 287, 290, 293, 303, 307, 323, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 364, 365, 380, 382, 386, 389, 392, 397, 405, 439, 440, 443, 549, 550, 551, 602, 627, 628, 629, 630, 636, 648, 649, 653, 654, 660, 661, 662, 682, 703, 725, 738, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 803, 857, 866, 867, 889], "index": [27, 30, 45, 47, 57, 73, 88, 97, 99, 102, 117, 159, 162, 169, 175, 176, 177, 186, 192, 195, 196, 198, 201, 206, 209, 210, 215, 218, 222, 226, 228, 231, 232, 233, 234, 236, 237, 238, 240, 244, 245, 251, 256, 257, 268, 269, 277, 282, 284, 285, 286, 287, 290, 291, 293, 294, 298, 303, 317, 319, 320, 324, 325, 329, 330, 331, 332, 333, 334, 338, 339, 341, 342, 344, 345, 346, 347, 351, 352, 363, 364, 365, 379, 389, 418, 432, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 595, 606, 626, 636, 653, 654, 661, 662, 664, 665, 666, 675, 701, 702, 744, 784, 785, 786, 787, 788, 789, 790, 834, 849, 854, 860, 864, 869, 879, 881, 883], "edi": 27, "147": [27, 32, 101, 195, 223, 236, 255, 259, 260, 956], "hf_sef_data": [27, 32, 956], "some": [28, 29, 30, 31, 36, 42, 47, 53, 60, 66, 80, 81, 88, 92, 94, 97, 100, 102, 122, 125, 130, 132, 136, 140, 141, 147, 149, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 182, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 206, 209, 210, 212, 216, 217, 218, 219, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 243, 244, 245, 246, 250, 251, 252, 255, 259, 260, 261, 268, 270, 273, 282, 283, 285, 288, 290, 291, 293, 301, 302, 303, 305, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 323, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 376, 380, 384, 388, 423, 442, 456, 497, 506, 517, 536, 542, 550, 551, 559, 566, 631, 635, 636, 638, 646, 655, 671, 679, 685, 695, 697, 724, 728, 732, 766, 772, 784, 786, 787, 788, 789, 790, 802, 812, 836, 852, 854, 871, 873, 889, 936, 937, 939, 941, 942, 945, 946, 949, 952, 953], "demo": [28, 53, 283, 300, 319], "common": [28, 43, 46, 53, 58, 59, 60, 69, 70, 94, 102, 142, 161, 175, 177, 181, 184, 186, 188, 191, 198, 216, 219, 229, 231, 232, 233, 234, 237, 238, 243, 244, 252, 264, 270, 274, 277, 299, 300, 304, 306, 309, 312, 317, 319, 320, 321, 331, 332, 333, 334, 336, 344, 380, 385, 396, 423, 432, 443, 483, 508, 512, 533, 539, 550, 551, 566, 570, 633, 636, 652, 714, 718, 728, 784, 934, 936, 939, 956], "public": [28, 53, 139, 143, 147, 170, 191, 229, 275, 276, 283, 284, 308, 309, 310, 316, 326, 333, 336, 342, 522, 549, 550, 701, 711, 834, 855, 956], "median": [28, 31, 32, 53, 97, 155, 176, 183, 223, 232, 256, 268, 269, 287, 288, 291, 293, 303, 328, 331, 332, 333, 334, 336, 340, 382, 425, 483, 490, 492, 524, 550, 551, 564, 633, 635, 636, 651, 663, 671, 763, 784, 786, 787, 788, 789, 790, 805, 853, 860, 867, 868, 875, 879, 888, 891, 896, 898, 956], "nerv": [28, 31, 32, 53, 331, 333, 334, 336, 425, 524, 564, 633, 663, 956], "hf": [28, 32, 53, 123, 218, 273, 333, 463, 860, 956], "sef": [28, 32, 53, 273, 316, 333, 463, 860, 956], "kernel": [28, 32, 53, 187, 217, 222, 255, 270, 277, 298, 328, 329, 331, 333, 334, 336, 338, 339, 342, 345, 346, 347, 370, 423, 427, 489, 503, 524, 526, 550, 599, 650, 737, 852, 861, 864, 904, 936, 941, 946, 948, 956], "phantom": [28, 32, 53, 110, 191, 213, 214, 277, 283, 285, 294, 308, 320, 328, 329, 331, 333, 334, 336, 370, 423, 427, 428, 460, 503, 524, 526, 550, 562, 564, 576, 599, 650, 671, 789, 852, 861, 864, 876, 904, 956], "trial": [28, 32, 39, 42, 44, 53, 54, 59, 96, 97, 99, 110, 128, 131, 134, 140, 141, 144, 150, 156, 166, 167, 168, 169, 170, 175, 177, 178, 191, 192, 194, 206, 209, 218, 222, 223, 228, 229, 232, 250, 252, 255, 260, 261, 262, 263, 265, 277, 279, 282, 291, 296, 299, 300, 302, 308, 317, 319, 331, 332, 333, 334, 336, 358, 359, 362, 386, 392, 422, 483, 496, 499, 505, 506, 507, 509, 512, 524, 550, 567, 570, 571, 605, 607, 627, 633, 636, 644, 698, 718, 764, 765, 767, 768, 769, 771, 772, 784, 788, 813, 814, 816, 817, 860, 866, 869, 956], "regress": [28, 32, 36, 37, 38, 41, 44, 45, 53, 57, 68, 104, 111, 125, 129, 173, 174, 191, 223, 241, 242, 255, 277, 291, 300, 302, 304, 312, 317, 331, 332, 333, 334, 336, 422, 489, 495, 524, 550, 601, 604, 633, 635, 654, 681, 686, 694, 768, 769, 770, 860, 869, 872, 891, 956], "optic": [28, 32, 53, 102, 191, 215, 217, 241, 242, 277, 286, 290, 292, 302, 317, 319, 329, 331, 333, 334, 336, 342, 370, 423, 433, 441, 512, 524, 526, 560, 573, 602, 603, 614, 630, 633, 635, 650, 673, 674, 678, 690, 703, 789, 828, 834, 852, 904, 956], "pump": [28, 32, 53, 191, 215, 241, 242, 277, 286, 317, 319, 329, 331, 333, 334, 336, 342, 370, 423, 433, 524, 526, 573, 602, 603, 614, 630, 633, 635, 650, 690, 703, 789, 828, 834, 852, 904, 956], "magnetomet": [28, 32, 48, 53, 58, 100, 103, 106, 107, 108, 113, 120, 136, 146, 147, 168, 171, 172, 176, 177, 188, 191, 192, 193, 194, 195, 206, 209, 210, 215, 218, 226, 227, 228, 230, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 250, 255, 277, 286, 290, 291, 292, 294, 298, 301, 303, 316, 317, 319, 320, 323, 326, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 364, 365, 370, 388, 423, 424, 425, 426, 427, 428, 433, 439, 440, 441, 483, 490, 504, 524, 526, 527, 545, 547, 548, 550, 551, 573, 591, 602, 603, 614, 630, 633, 634, 635, 636, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 671, 682, 690, 703, 770, 784, 786, 787, 788, 789, 790, 828, 834, 852, 853, 859, 866, 867, 868, 870, 872, 875, 876, 879, 888, 889, 891, 896, 897, 898, 904, 936, 956], "dspm": [28, 32, 37, 53, 55, 57, 62, 63, 64, 65, 66, 67, 68, 70, 81, 82, 85, 87, 131, 132, 133, 134, 135, 136, 191, 192, 201, 204, 205, 207, 208, 213, 214, 218, 223, 251, 252, 263, 265, 298, 316, 317, 319, 328, 331, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 357, 361, 364, 365, 422, 423, 427, 524, 547, 548, 550, 564, 589, 594, 598, 602, 603, 604, 605, 606, 607, 608, 609, 610, 614, 615, 616, 617, 619, 620, 633, 636, 654, 698, 701, 703, 705, 795, 834, 861, 869, 956], "face": [28, 30, 32, 36, 53, 96, 151, 166, 168, 170, 175, 177, 187, 192, 198, 201, 223, 226, 277, 291, 299, 304, 312, 331, 332, 374, 422, 423, 524, 564, 594, 598, 603, 614, 633, 636, 654, 714, 717, 784, 849, 869, 897, 929, 934, 956], "In": [29, 30, 31, 36, 41, 42, 45, 47, 58, 66, 68, 69, 70, 71, 72, 85, 97, 101, 105, 108, 109, 113, 114, 117, 121, 128, 130, 134, 139, 141, 142, 143, 145, 154, 158, 161, 163, 166, 168, 170, 175, 176, 177, 178, 181, 182, 184, 186, 187, 188, 192, 193, 194, 196, 197, 198, 201, 202, 204, 207, 215, 217, 218, 219, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 250, 252, 255, 256, 257, 265, 268, 269, 270, 273, 274, 277, 282, 286, 290, 291, 292, 294, 300, 302, 303, 304, 305, 306, 309, 310, 316, 317, 319, 320, 323, 325, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 355, 364, 365, 367, 370, 371, 376, 378, 388, 395, 397, 410, 423, 427, 428, 439, 440, 441, 442, 483, 485, 489, 490, 499, 500, 504, 507, 516, 518, 526, 527, 545, 547, 548, 550, 551, 559, 566, 602, 603, 604, 605, 606, 607, 611, 614, 631, 635, 636, 637, 638, 651, 652, 653, 654, 656, 663, 667, 669, 677, 679, 686, 688, 711, 728, 749, 752, 770, 779, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 802, 812, 813, 814, 815, 816, 817, 818, 821, 831, 834, 849, 860, 866, 867, 868, 869, 870, 872, 873, 875, 876, 879, 880, 887, 888, 889, 890, 891, 894, 896, 897, 898, 900, 936, 939, 941, 943, 948, 950, 951], "neuromag": [29, 136, 182, 184, 186, 192, 194, 209, 211, 227, 234, 237, 243, 244, 245, 282, 286, 288, 296, 308, 317, 319, 320, 323, 324, 329, 331, 332, 333, 334, 336, 341, 388, 503, 524, 550, 551, 562, 568, 576, 584, 671, 693, 718, 786, 787, 789, 790, 866, 869, 874, 889, 952], "place": [29, 31, 33, 52, 94, 166, 175, 176, 177, 182, 187, 191, 192, 195, 199, 200, 204, 229, 231, 232, 233, 235, 237, 239, 243, 250, 252, 263, 273, 284, 285, 290, 303, 306, 308, 309, 317, 319, 320, 321, 325, 328, 330, 331, 332, 333, 334, 335, 336, 340, 343, 348, 349, 354, 380, 385, 388, 408, 409, 416, 432, 433, 451, 455, 456, 458, 483, 490, 505, 507, 508, 521, 522, 550, 551, 552, 562, 600, 614, 623, 628, 632, 635, 636, 648, 649, 651, 654, 657, 659, 662, 663, 667, 719, 725, 728, 734, 735, 736, 737, 749, 781, 784, 785, 786, 787, 788, 789, 790, 803, 820, 838, 853, 857, 868, 875, 879, 888, 891, 896, 898, 937, 939, 956], "insid": [29, 31, 42, 50, 52, 67, 71, 76, 136, 166, 175, 182, 184, 185, 186, 187, 197, 202, 207, 208, 209, 210, 211, 212, 230, 235, 237, 243, 259, 265, 274, 285, 293, 297, 301, 303, 308, 309, 316, 320, 337, 341, 342, 345, 346, 347, 359, 464, 507, 535, 542, 550, 551, 583, 607, 668, 834, 889, 936], "helmet": [29, 31, 33, 53, 71, 106, 107, 136, 143, 150, 151, 156, 163, 176, 182, 184, 196, 198, 209, 210, 211, 212, 215, 239, 274, 285, 286, 287, 291, 300, 302, 304, 320, 333, 334, 336, 534, 594, 602, 617, 701, 834, 836, 844, 852, 871, 904, 956], "stimul": [29, 31, 58, 71, 177, 206, 212, 265, 293, 296, 317, 320, 331, 332, 333, 334, 428, 550, 551, 633, 634, 639, 663, 734, 784, 786, 787, 788, 789, 790, 834, 852], "7": [29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 45, 47, 54, 56, 58, 59, 60, 61, 66, 67, 68, 70, 71, 72, 73, 75, 81, 82, 85, 87, 88, 95, 97, 98, 100, 101, 102, 103, 106, 107, 109, 111, 114, 120, 121, 124, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 147, 149, 155, 156, 157, 162, 163, 166, 168, 169, 170, 171, 172, 174, 175, 177, 182, 184, 185, 186, 190, 192, 195, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 222, 223, 225, 226, 228, 229, 230, 232, 234, 235, 236, 237, 238, 240, 243, 245, 248, 250, 251, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 277, 279, 292, 294, 298, 301, 306, 308, 313, 314, 317, 320, 322, 330, 331, 332, 333, 334, 338, 339, 342, 344, 345, 346, 347, 382, 403, 423, 450, 459, 475, 482, 494, 496, 524, 547, 636, 641, 660, 669, 671, 675, 689, 723, 724, 750, 764, 765, 766, 784, 788, 789, 790, 792, 795, 802, 812, 813, 814, 817, 834, 852, 867, 872, 881, 894, 895, 899, 941, 942, 948, 956], "121": [29, 35, 118, 122, 166, 171, 192, 195, 196, 223, 236, 255, 260, 317, 331, 332, 506, 956], "trace": [29, 31, 57, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 101, 106, 117, 120, 121, 136, 149, 170, 175, 177, 192, 198, 203, 204, 205, 208, 218, 219, 223, 227, 234, 236, 237, 240, 243, 246, 252, 287, 291, 292, 293, 320, 323, 329, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 483, 550, 551, 636, 831, 834, 863, 866, 870, 878, 880, 887, 889, 894, 899], "fname": [29, 36, 38, 47, 79, 92, 105, 112, 113, 139, 146, 147, 155, 157, 186, 196, 232, 294, 302, 306, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 368, 380, 381, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 420, 421, 513, 514, 515, 516, 550, 551, 554, 555, 556, 557, 560, 565, 569, 570, 571, 572, 575, 578, 580, 581, 583, 584, 585, 586, 587, 617, 621, 625, 626, 635, 636, 658, 681, 682, 683, 684, 687, 689, 690, 691, 692, 693, 694, 696, 699, 700, 701, 702, 703, 704, 707, 709, 710, 711, 712, 713, 714, 716, 718, 729, 784, 785, 786, 787, 788, 789, 790, 806, 807, 808, 819, 821, 828, 922, 923, 924, 925, 927, 928, 929, 932, 933, 934, 935, 939], "phantom_32_100nam_raw": 29, "sti101": [29, 31, 136, 194, 324, 524, 525], "identifi": [29, 30, 38, 39, 53, 58, 59, 60, 104, 111, 163, 172, 177, 195, 218, 219, 223, 226, 232, 234, 252, 255, 277, 290, 302, 303, 309, 316, 317, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 380, 396, 403, 443, 486, 493, 535, 550, 551, 552, 557, 636, 640, 644, 651, 670, 680, 834, 844, 856, 894, 898, 899, 936, 956], "inspect": [29, 33, 47, 54, 97, 109, 167, 177, 182, 188, 218, 226, 237, 238, 273, 323, 331, 332, 333, 334, 375, 377, 386, 400, 550, 551, 671, 679, 736, 737, 866, 870, 889, 936, 952], "rc2": 29, "bx": [29, 770], "lc3": 29, "bz": 29, "drop": [29, 30, 34, 35, 37, 38, 42, 44, 47, 58, 59, 60, 68, 72, 75, 98, 99, 123, 124, 127, 130, 134, 137, 139, 140, 141, 144, 148, 149, 155, 161, 162, 163, 167, 168, 170, 171, 172, 177, 178, 188, 192, 193, 198, 203, 206, 208, 209, 211, 212, 218, 226, 227, 228, 231, 232, 234, 235, 238, 239, 240, 245, 251, 252, 257, 258, 259, 260, 263, 265, 269, 279, 280, 281, 282, 284, 287, 288, 290, 291, 292, 293, 299, 300, 302, 303, 309, 320, 325, 326, 328, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 382, 385, 508, 509, 516, 540, 550, 551, 564, 636, 648, 649, 653, 672, 695, 697, 725, 784, 785, 786, 787, 788, 789, 790, 865, 866, 879, 881, 945], "drop_channel": [29, 30, 68, 94, 97, 162, 166, 175, 243, 260, 287, 300, 304, 331, 332, 333, 334, 550, 551, 784, 786, 787, 788, 789, 790, 939], "add": [29, 54, 63, 69, 70, 97, 101, 117, 121, 122, 128, 141, 147, 154, 162, 166, 167, 169, 170, 177, 187, 194, 197, 198, 201, 202, 207, 216, 218, 222, 226, 227, 228, 230, 232, 233, 235, 240, 243, 245, 251, 252, 255, 260, 270, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 319, 323, 325, 327, 328, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 380, 442, 483, 485, 490, 494, 507, 519, 521, 522, 542, 550, 551, 635, 636, 646, 648, 649, 650, 651, 691, 713, 722, 725, 730, 732, 734, 735, 736, 737, 738, 748, 781, 784, 786, 787, 788, 789, 790, 829, 834, 838, 853, 856, 857, 866, 868, 873, 875, 879, 888, 891, 896, 898, 905, 941, 945, 948, 949], "order": [29, 30, 42, 44, 45, 53, 57, 60, 64, 71, 73, 96, 97, 101, 108, 110, 114, 119, 121, 134, 138, 139, 141, 144, 148, 151, 155, 162, 169, 170, 171, 175, 182, 186, 187, 188, 191, 192, 195, 198, 203, 215, 217, 222, 226, 227, 228, 231, 232, 233, 234, 236, 237, 239, 240, 243, 246, 252, 257, 260, 265, 277, 279, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 301, 303, 305, 306, 309, 316, 320, 323, 324, 326, 328, 331, 332, 333, 334, 335, 336, 337, 340, 341, 355, 370, 385, 392, 409, 410, 412, 416, 423, 430, 432, 436, 483, 485, 489, 490, 494, 504, 508, 512, 518, 519, 520, 521, 522, 527, 536, 550, 551, 558, 559, 566, 600, 602, 609, 610, 612, 613, 627, 628, 629, 635, 636, 644, 646, 647, 648, 649, 650, 656, 660, 671, 685, 703, 717, 728, 761, 766, 780, 784, 785, 786, 787, 788, 789, 790, 798, 799, 803, 819, 821, 824, 831, 840, 845, 853, 866, 867, 868, 872, 875, 877, 879, 883, 884, 888, 889, 891, 892, 896, 897, 898, 936, 941], "40": [29, 31, 35, 36, 38, 39, 45, 47, 54, 59, 61, 66, 71, 72, 73, 84, 85, 95, 100, 102, 106, 107, 110, 117, 127, 130, 131, 135, 136, 139, 141, 148, 152, 162, 166, 167, 170, 171, 177, 181, 182, 184, 186, 192, 195, 197, 198, 207, 209, 210, 212, 218, 222, 223, 228, 229, 231, 232, 236, 237, 239, 243, 248, 255, 256, 257, 259, 260, 263, 264, 265, 269, 277, 279, 299, 317, 320, 331, 332, 341, 504, 518, 550, 551, 560, 636, 648, 660, 661, 664, 736, 839, 866, 884, 889, 903], "decim": [29, 31, 33, 37, 38, 39, 44, 45, 50, 59, 60, 67, 68, 130, 136, 139, 184, 187, 188, 192, 198, 207, 209, 212, 223, 230, 232, 237, 256, 257, 258, 259, 260, 269, 281, 282, 283, 284, 286, 287, 288, 290, 291, 294, 299, 300, 303, 307, 316, 320, 323, 326, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 376, 482, 496, 504, 524, 550, 551, 576, 595, 619, 620, 636, 653, 654, 694, 697, 753, 770, 784, 788, 792, 795, 811, 813, 814, 815, 816, 817, 818, 834, 854, 866, 889], "snr": [29, 31, 33, 36, 37, 45, 47, 53, 54, 55, 56, 62, 64, 65, 67, 74, 80, 81, 82, 87, 114, 117, 131, 136, 192, 203, 205, 207, 210, 218, 229, 251, 252, 263, 265, 284, 290, 294, 301, 312, 316, 320, 328, 333, 335, 336, 342, 412, 527, 602, 603, 611, 614, 616, 617, 692, 701, 703, 748, 834, 859, 893, 956], "fig": [29, 30, 31, 36, 37, 38, 39, 41, 44, 45, 47, 48, 50, 65, 67, 68, 71, 73, 78, 84, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 113, 120, 123, 126, 130, 131, 134, 136, 139, 140, 141, 142, 143, 145, 147, 151, 152, 153, 161, 162, 163, 167, 170, 172, 176, 177, 182, 183, 184, 185, 186, 192, 196, 198, 202, 203, 204, 206, 207, 208, 209, 211, 212, 218, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 244, 245, 252, 255, 256, 257, 258, 259, 260, 269, 270, 273, 274, 290, 304, 328, 329, 330, 331, 332, 333, 334, 336, 340, 341, 344, 346, 347, 380, 381, 483, 490, 550, 551, 635, 636, 656, 784, 785, 786, 787, 789, 790, 836, 838, 845, 849, 852, 853, 854, 856, 857, 858, 859, 860, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 896, 897, 900, 906, 914, 915, 916, 917, 918, 919], "t_peak": [29, 209, 212], "ax": [29, 30, 36, 37, 38, 39, 41, 45, 47, 48, 63, 65, 67, 71, 73, 84, 94, 95, 96, 97, 98, 99, 100, 107, 108, 112, 117, 120, 123, 126, 131, 134, 139, 140, 141, 142, 143, 147, 149, 159, 161, 162, 163, 170, 171, 172, 176, 177, 182, 186, 187, 196, 198, 202, 203, 206, 207, 209, 212, 222, 223, 226, 229, 230, 233, 234, 237, 238, 239, 246, 252, 255, 256, 257, 258, 259, 260, 268, 269, 270, 273, 274, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 299, 303, 304, 305, 306, 307, 308, 320, 328, 329, 331, 332, 333, 334, 336, 340, 380, 381, 389, 394, 483, 490, 542, 550, 551, 635, 636, 656, 784, 786, 787, 789, 790, 802, 812, 835, 836, 838, 845, 849, 852, 853, 855, 858, 859, 860, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 881, 882, 884, 885, 886, 888, 890, 891, 892, 893, 896, 898], "axvlin": [29, 34, 36, 37, 39, 45, 71, 139, 170, 186, 212, 223, 237, 273, 274], "color": [29, 34, 35, 36, 37, 38, 39, 45, 47, 48, 64, 65, 71, 73, 74, 75, 76, 80, 81, 85, 97, 107, 108, 123, 124, 128, 131, 139, 140, 141, 142, 143, 147, 149, 158, 159, 161, 162, 163, 167, 168, 170, 175, 176, 177, 182, 186, 192, 194, 196, 197, 198, 201, 202, 203, 204, 207, 209, 211, 212, 222, 223, 226, 227, 229, 230, 233, 237, 238, 244, 245, 246, 252, 260, 265, 268, 269, 270, 273, 274, 280, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 300, 302, 303, 304, 305, 308, 319, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 439, 483, 490, 535, 536, 541, 542, 550, 551, 635, 636, 704, 705, 784, 786, 787, 789, 790, 802, 812, 834, 836, 844, 849, 851, 852, 853, 855, 858, 860, 863, 864, 865, 866, 867, 868, 869, 870, 872, 874, 875, 877, 878, 879, 884, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 902, 907, 930, 931], "k": [29, 33, 34, 35, 36, 37, 39, 40, 44, 45, 48, 54, 57, 64, 65, 67, 85, 92, 96, 97, 109, 124, 127, 131, 149, 168, 169, 184, 186, 202, 207, 212, 215, 222, 223, 229, 233, 244, 246, 259, 260, 268, 269, 270, 277, 298, 309, 319, 320, 328, 329, 331, 332, 333, 334, 337, 342, 350, 355, 364, 367, 369, 370, 483, 490, 545, 547, 548, 550, 551, 587, 602, 603, 635, 636, 656, 660, 703, 744, 765, 771, 772, 773, 775, 784, 786, 787, 789, 790, 802, 812, 821, 834, 849, 852, 853, 868, 874, 875, 878, 889, 891, 896, 897, 898, 941], "l": [29, 34, 45, 70, 75, 126, 154, 163, 170, 186, 198, 212, 215, 222, 232, 235, 237, 239, 260, 263, 269, 270, 273, 277, 303, 314, 317, 320, 322, 323, 343, 429, 450, 475, 476, 489, 603, 636, 644, 744, 815, 818, 854, 860, 881, 948, 954], "lw": [29, 45, 65, 170, 198, 207, 212, 222, 237, 239, 252, 279, 802, 812], "zorder": [29, 65, 186, 212, 282, 333, 334, 802, 812, 870, 873], "open": [29, 31, 37, 39, 40, 41, 42, 44, 54, 55, 58, 59, 60, 68, 71, 72, 75, 88, 95, 96, 97, 98, 99, 100, 101, 103, 106, 109, 110, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 136, 137, 138, 140, 142, 144, 145, 148, 151, 158, 159, 161, 167, 168, 170, 172, 176, 177, 178, 181, 182, 187, 188, 191, 192, 193, 194, 195, 198, 203, 206, 208, 209, 223, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 243, 246, 251, 252, 257, 258, 259, 260, 263, 265, 269, 270, 273, 277, 282, 283, 291, 299, 302, 306, 310, 311, 317, 319, 330, 331, 332, 333, 334, 341, 344, 450, 550, 551, 636, 644, 749, 874, 879, 889, 897, 936, 940, 942, 946, 948, 949], "526631": 29, "526": [29, 165, 956], "631": [29, 32, 236, 956], "readibandpass": [29, 34, 35, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 103, 108, 114, 140, 142, 148, 159, 162, 167, 170, 172, 198, 223, 226, 228, 231, 232, 234, 238, 239, 240, 260, 270, 304, 331, 332, 333, 334, 485, 491, 494, 518, 519, 521, 550, 551, 675, 786, 787, 789, 790, 889, 890], "6601": [29, 31], "351": [29, 82, 107, 195, 222, 236, 956], "origin": [29, 30, 31, 34, 35, 37, 38, 39, 42, 44, 47, 48, 50, 52, 58, 59, 60, 64, 67, 68, 71, 72, 75, 76, 97, 98, 99, 102, 105, 106, 107, 113, 120, 121, 123, 124, 127, 130, 134, 137, 139, 140, 141, 144, 145, 148, 149, 155, 161, 162, 163, 166, 167, 168, 170, 171, 172, 175, 177, 178, 182, 184, 185, 186, 187, 188, 192, 193, 195, 196, 198, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 240, 243, 245, 252, 257, 258, 259, 260, 263, 265, 268, 269, 285, 286, 290, 300, 307, 309, 316, 317, 319, 320, 323, 324, 325, 326, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 344, 345, 346, 347, 349, 351, 352, 364, 365, 380, 429, 439, 483, 490, 497, 498, 499, 504, 507, 517, 544, 549, 550, 551, 559, 562, 566, 571, 588, 594, 604, 635, 636, 637, 646, 647, 651, 660, 671, 678, 686, 696, 700, 703, 708, 721, 723, 725, 733, 735, 736, 737, 744, 749, 769, 776, 784, 786, 787, 788, 789, 790, 830, 834, 852, 853, 860, 866, 868, 870, 872, 875, 876, 879, 886, 888, 889, 890, 891, 892, 895, 896, 898, 907, 928, 948, 950], "prior": [29, 37, 38, 44, 53, 54, 55, 56, 60, 62, 64, 65, 66, 70, 73, 78, 82, 83, 84, 87, 117, 131, 134, 135, 137, 140, 152, 168, 175, 177, 188, 192, 198, 204, 205, 206, 207, 212, 219, 223, 232, 235, 237, 239, 246, 251, 260, 263, 265, 285, 290, 291, 320, 328, 329, 333, 335, 336, 342, 364, 365, 527, 528, 545, 546, 547, 548, 550, 551, 568, 602, 603, 614, 636, 646, 660, 671, 692, 701, 703, 834, 863, 864, 889, 895, 956], "dens": [29, 161, 182, 183, 184, 186, 208, 209, 217, 277, 285, 323, 344, 376, 644, 834, 852], "pack": [29, 785], "rank": [29, 31, 33, 34, 35, 38, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 110, 114, 117, 120, 121, 131, 134, 135, 136, 137, 140, 148, 178, 188, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 227, 231, 232, 233, 251, 252, 263, 265, 281, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 298, 300, 301, 306, 319, 328, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 491, 526, 527, 545, 547, 548, 608, 614, 636, 861, 876, 936], "toler": [29, 31, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 117, 120, 121, 136, 148, 178, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 229, 232, 233, 251, 252, 281, 290, 320, 427, 545, 547, 548, 636, 680], "5e": [29, 33, 34, 35, 39, 57, 58, 60, 61, 66, 67, 71, 75, 85, 103, 120, 136, 152, 167, 198, 209, 211, 212, 223, 235, 243, 252, 331, 332, 341, 526, 550, 551, 866, 889], "08": [29, 46, 60, 66, 68, 71, 76, 82, 84, 85, 110, 111, 121, 129, 130, 136, 139, 156, 177, 186, 192, 202, 203, 204, 205, 206, 209, 210, 212, 222, 223, 229, 234, 236, 243, 248, 251, 252, 255, 257, 259, 260, 277, 313, 956], "2e": [29, 31, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 97, 101, 117, 120, 121, 136, 146, 148, 178, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 251, 252, 648, 649], "ep": [29, 31, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 117, 120, 121, 136, 148, 178, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 251, 252, 603], "dim": [29, 31, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 117, 120, 121, 136, 148, 178, 186, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 251, 252, 268, 328, 609, 610, 619, 620, 637, 788], "8e": [29, 34, 35, 58, 61, 75, 101, 136, 148, 188, 198, 203, 206, 209, 211, 218, 223], "max": [29, 30, 31, 34, 35, 45, 47, 48, 57, 58, 59, 60, 61, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 87, 107, 110, 117, 120, 121, 123, 127, 134, 136, 139, 142, 143, 148, 162, 167, 170, 176, 178, 183, 186, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 223, 230, 237, 240, 243, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 274, 281, 286, 291, 300, 302, 308, 322, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 364, 365, 389, 427, 483, 485, 490, 494, 516, 517, 519, 521, 550, 551, 585, 612, 613, 618, 635, 636, 662, 666, 675, 680, 771, 772, 773, 774, 775, 777, 784, 786, 787, 789, 790, 802, 812, 834, 843, 845, 853, 867, 868, 875, 879, 888, 890, 891, 894, 896, 897, 898, 899, 907, 954], "singular": [29, 31, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 117, 120, 121, 136, 148, 178, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 233, 251, 252, 320, 328, 338, 339, 342, 345, 346, 347, 427, 517, 611, 861], "valu": [29, 30, 31, 33, 34, 35, 36, 42, 45, 47, 48, 50, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 96, 98, 117, 120, 121, 123, 128, 130, 131, 136, 139, 141, 147, 148, 149, 157, 158, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 182, 186, 188, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 228, 229, 230, 232, 233, 234, 237, 238, 239, 243, 245, 250, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 302, 303, 304, 305, 306, 307, 309, 316, 317, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 354, 355, 364, 365, 367, 369, 370, 374, 377, 378, 382, 389, 393, 395, 398, 417, 418, 423, 424, 426, 427, 428, 429, 434, 437, 438, 439, 440, 441, 445, 456, 475, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 504, 505, 507, 511, 512, 516, 517, 521, 522, 523, 524, 525, 526, 527, 528, 531, 536, 539, 541, 542, 545, 547, 548, 550, 551, 552, 553, 559, 561, 566, 570, 574, 576, 581, 582, 588, 590, 591, 594, 595, 597, 598, 599, 602, 603, 607, 609, 610, 611, 612, 613, 614, 617, 619, 620, 624, 635, 636, 637, 638, 639, 641, 642, 645, 648, 649, 651, 652, 653, 654, 656, 660, 662, 663, 666, 667, 669, 677, 679, 680, 682, 686, 688, 694, 698, 701, 705, 714, 721, 724, 725, 727, 728, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 757, 760, 762, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 782, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 802, 804, 805, 812, 813, 814, 815, 816, 817, 821, 822, 824, 834, 836, 838, 844, 852, 853, 855, 858, 860, 861, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 879, 880, 887, 888, 889, 890, 891, 894, 896, 897, 898, 899, 900, 901, 906, 907, 908, 934, 936, 956], "113": [29, 30, 61, 139, 182, 190, 195, 223, 255, 260, 277, 956], "small": [29, 30, 31, 37, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 102, 117, 120, 121, 131, 134, 135, 136, 137, 148, 155, 161, 167, 168, 178, 188, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 223, 229, 230, 232, 234, 245, 251, 252, 255, 257, 263, 265, 273, 281, 282, 294, 309, 317, 319, 320, 323, 328, 329, 331, 332, 333, 334, 337, 340, 388, 423, 483, 490, 550, 551, 567, 635, 636, 638, 689, 695, 771, 772, 774, 775, 777, 784, 786, 787, 789, 790, 864, 868, 875, 879, 888, 891, 896, 898, 936], "eigenvalu": [29, 31, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 117, 120, 121, 131, 134, 135, 136, 137, 148, 178, 188, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 251, 252, 263, 265, 320, 328, 483, 798], "without": [29, 31, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 97, 102, 117, 120, 121, 131, 134, 136, 140, 147, 148, 170, 175, 176, 177, 178, 185, 187, 188, 191, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 227, 228, 229, 231, 232, 233, 234, 235, 237, 245, 251, 252, 255, 270, 273, 282, 283, 284, 288, 290, 291, 292, 293, 294, 296, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 318, 320, 323, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 358, 359, 362, 364, 365, 393, 394, 423, 427, 428, 439, 440, 441, 442, 483, 490, 513, 514, 515, 516, 524, 526, 527, 545, 547, 548, 550, 551, 559, 566, 571, 572, 595, 605, 607, 610, 614, 629, 660, 678, 694, 696, 700, 701, 718, 778, 785, 824, 834, 871, 876, 894, 899, 906, 936, 941, 950], "reduc": [29, 31, 34, 35, 38, 41, 42, 47, 53, 60, 66, 68, 72, 75, 81, 85, 98, 104, 110, 111, 114, 131, 134, 135, 136, 137, 141, 147, 148, 172, 175, 177, 183, 184, 188, 193, 198, 203, 206, 208, 209, 211, 212, 218, 222, 223, 230, 231, 232, 233, 234, 235, 237, 239, 243, 251, 257, 258, 260, 263, 264, 265, 269, 277, 282, 284, 285, 287, 290, 291, 292, 293, 296, 302, 303, 304, 305, 307, 309, 319, 320, 328, 331, 332, 333, 334, 335, 338, 339, 342, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 458, 483, 484, 490, 496, 499, 500, 506, 518, 524, 526, 527, 545, 547, 548, 550, 551, 606, 609, 610, 614, 619, 620, 635, 636, 669, 679, 726, 771, 772, 774, 775, 792, 795, 811, 813, 814, 815, 816, 817, 818, 870, 875, 876, 936, 956], "empir": [29, 31, 34, 35, 41, 53, 57, 62, 72, 75, 82, 114, 120, 148, 188, 203, 206, 208, 209, 211, 212, 223, 237, 251, 277, 301, 328, 333, 334, 335, 336, 342, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 491, 526, 527, 545, 546, 547, 548, 614, 637, 692, 701, 703, 863, 864, 876, 895, 956], "36157": 29, "so": [29, 33, 36, 54, 57, 58, 64, 66, 70, 73, 90, 94, 97, 98, 102, 109, 120, 121, 122, 130, 131, 134, 136, 141, 142, 149, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 206, 207, 208, 209, 210, 212, 217, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 269, 270, 273, 274, 282, 283, 284, 288, 291, 296, 302, 303, 304, 306, 309, 310, 316, 318, 319, 320, 323, 331, 332, 333, 334, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 356, 357, 358, 365, 380, 402, 429, 436, 456, 460, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 514, 515, 517, 518, 522, 550, 551, 553, 570, 575, 578, 603, 609, 622, 636, 637, 638, 646, 647, 661, 671, 672, 689, 701, 723, 730, 732, 771, 772, 774, 775, 786, 787, 789, 790, 824, 829, 834, 835, 844, 846, 870, 879, 881, 883, 889, 916, 927, 936, 941, 945, 948, 949, 950], "let": [29, 30, 36, 44, 47, 52, 58, 73, 81, 97, 98, 100, 113, 136, 140, 148, 161, 162, 166, 167, 168, 170, 172, 176, 177, 178, 182, 184, 185, 186, 188, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 223, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 239, 240, 243, 252, 255, 259, 260, 263, 264, 265, 269, 270, 273, 294, 309, 588, 802, 812, 835, 945], "care": [29, 54, 60, 167, 176, 177, 186, 229, 232, 233, 243, 245, 301, 320, 331, 332, 333, 334, 441, 548, 550, 551, 770], "ahead": [29, 187, 309], "tol": [29, 60, 66, 72, 85, 101, 198, 294, 427, 526, 545, 547, 548], "1e": [29, 31, 34, 35, 58, 59, 60, 66, 71, 72, 75, 85, 91, 92, 97, 98, 101, 108, 120, 121, 141, 147, 148, 163, 184, 188, 205, 206, 209, 211, 212, 223, 228, 229, 251, 252, 255, 284, 319, 331, 332, 341, 545, 550, 551, 603, 635, 645, 669, 750, 777, 784, 866, 889, 891, 896], "tol_kind": [29, 60, 291, 427], "rel": [29, 36, 50, 58, 59, 60, 68, 88, 102, 112, 136, 139, 140, 163, 166, 168, 170, 182, 192, 194, 196, 212, 216, 219, 226, 229, 230, 234, 237, 238, 239, 245, 269, 270, 273, 281, 283, 284, 286, 290, 293, 309, 316, 319, 320, 323, 324, 326, 330, 331, 332, 333, 334, 377, 427, 434, 489, 504, 507, 519, 550, 551, 599, 636, 666, 669, 685, 721, 723, 740, 777, 784, 788, 791, 792, 793, 805, 834, 849, 854, 869, 874, 883, 887, 889, 897], "shrunk": [29, 33, 57, 60, 66, 67, 68, 71, 85, 148, 178, 188, 203, 209, 423], "91": [29, 34, 39, 45, 52, 61, 67, 71, 73, 76, 98, 105, 106, 135, 136, 139, 141, 144, 177, 182, 184, 188, 195, 202, 207, 208, 222, 223, 227, 234, 235, 236, 237, 238, 255, 256, 259, 260, 277, 403], "our": [29, 30, 31, 45, 52, 53, 68, 70, 89, 94, 97, 101, 106, 110, 120, 130, 136, 139, 141, 142, 147, 148, 149, 161, 162, 163, 166, 167, 168, 170, 171, 172, 176, 177, 182, 186, 192, 194, 197, 198, 201, 206, 207, 209, 210, 212, 223, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 250, 252, 255, 257, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 280, 303, 304, 305, 309, 310, 311, 312, 316, 320, 321, 344, 523, 524, 611, 802, 812, 830, 936, 942, 944, 945, 946, 947, 950, 954], "align": [29, 31, 33, 35, 54, 106, 161, 177, 181, 183, 184, 189, 190, 191, 194, 198, 208, 209, 210, 217, 243, 255, 284, 287, 288, 291, 293, 294, 302, 303, 304, 306, 319, 320, 325, 329, 331, 332, 336, 338, 339, 342, 343, 344, 345, 346, 347, 370, 376, 380, 434, 436, 460, 502, 517, 542, 550, 570, 599, 636, 668, 713, 714, 716, 733, 822, 823, 824, 834, 852, 864, 866, 904, 956], "sphere": [29, 31, 50, 52, 61, 67, 69, 71, 74, 76, 85, 94, 98, 110, 120, 121, 136, 147, 151, 153, 161, 182, 184, 185, 186, 202, 204, 207, 208, 209, 210, 211, 212, 216, 227, 235, 236, 237, 277, 283, 284, 285, 286, 290, 291, 293, 302, 303, 304, 319, 323, 328, 329, 331, 332, 333, 334, 336, 337, 340, 342, 364, 365, 370, 373, 374, 380, 429, 482, 483, 490, 526, 550, 551, 563, 594, 597, 599, 635, 636, 645, 651, 733, 747, 750, 784, 786, 787, 789, 790, 834, 852, 853, 860, 864, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 895, 896, 898, 906], "r0": [29, 110, 153, 182, 209, 210, 211, 212, 599], "head_radiu": [29, 110, 153, 182, 209, 210, 211, 212, 290, 599], "tran": [29, 31, 33, 52, 67, 76, 77, 78, 86, 95, 107, 136, 142, 143, 145, 152, 153, 161, 162, 176, 183, 184, 185, 186, 198, 202, 204, 207, 208, 209, 212, 217, 218, 235, 238, 274, 285, 292, 294, 300, 304, 316, 317, 319, 320, 323, 329, 341, 344, 372, 380, 434, 435, 457, 460, 502, 504, 526, 534, 542, 594, 597, 598, 667, 671, 716, 749, 752, 779, 820, 821, 823, 834, 852, 864, 935], "align_kwarg": 29, "outer_skin": [29, 107, 136, 145, 182, 184, 185, 187, 198, 316, 317, 320, 852], "show_ax": [29, 107, 151, 153, 182, 183, 185, 208, 209, 212, 285, 381, 852, 885], "coord_fram": [29, 50, 136, 145, 151, 152, 153, 161, 162, 182, 183, 184, 185, 195, 196, 204, 208, 209, 210, 212, 217, 237, 329, 335, 336, 344, 380, 393, 398, 504, 555, 586, 646, 647, 660, 671, 834, 852, 864], "equiv": [29, 182, 209, 210, 211, 212, 235], "rv": [29, 182, 209, 210, 211, 212, 235, 317], "00364477": [29, 209, 210, 211, 212], "mu1": [29, 182, 209, 210, 211, 212, 235], "944121": [29, 209, 210, 211, 212], "lambda1": [29, 182, 209, 210, 211, 212, 235], "138646": [29, 209, 210, 211, 212], "mu2": [29, 182, 209, 210, 211, 212, 235], "665982": [29, 209, 210, 211, 212], "lambda2": [29, 31, 33, 37, 54, 55, 56, 64, 65, 66, 67, 71, 73, 74, 76, 80, 81, 84, 85, 87, 98, 117, 121, 131, 135, 136, 182, 192, 203, 205, 207, 209, 210, 211, 212, 218, 235, 251, 263, 265, 316, 603, 604, 605, 606, 607, 609, 610, 615, 616, 619, 620, 645], "684475": [29, 209, 210, 211, 212], "mu3": [29, 182, 209, 210, 211, 212, 235], "140083": [29, 209, 210, 211, 212], "lambda3": [29, 182, 209, 210, 211, 212, 235], "0127517": [29, 209, 210, 211, 212], "scalp": [29, 30, 45, 53, 97, 98, 102, 105, 150, 156, 168, 170, 175, 177, 181, 182, 184, 192, 196, 197, 209, 210, 211, 212, 217, 226, 227, 232, 234, 235, 237, 238, 239, 246, 250, 268, 277, 283, 290, 294, 316, 317, 319, 320, 323, 331, 332, 333, 334, 336, 376, 502, 542, 550, 551, 599, 636, 645, 675, 716, 728, 786, 787, 789, 790, 834, 852, 868, 890, 904, 936, 943, 946, 949, 956], "radiu": [29, 30, 31, 50, 52, 67, 71, 76, 97, 98, 105, 106, 120, 121, 136, 177, 182, 184, 185, 196, 202, 207, 208, 209, 210, 211, 212, 227, 234, 235, 237, 251, 294, 305, 308, 320, 328, 331, 332, 333, 334, 336, 340, 370, 373, 380, 394, 396, 398, 483, 490, 503, 541, 550, 551, 588, 599, 618, 635, 636, 645, 651, 733, 736, 779, 784, 786, 787, 789, 790, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "80": [29, 31, 35, 39, 42, 45, 56, 57, 59, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 105, 106, 107, 112, 113, 117, 121, 135, 139, 141, 142, 143, 145, 146, 147, 153, 175, 177, 182, 184, 194, 195, 197, 198, 202, 204, 205, 207, 209, 210, 211, 212, 218, 222, 223, 234, 236, 237, 238, 255, 256, 257, 259, 260, 265, 273, 274, 277, 295, 482, 636, 736, 877, 884, 948], "get": [29, 30, 31, 33, 41, 44, 45, 47, 48, 52, 53, 54, 60, 64, 65, 67, 73, 74, 76, 78, 87, 89, 90, 92, 93, 96, 97, 99, 106, 107, 109, 110, 121, 122, 123, 124, 130, 134, 136, 140, 141, 143, 147, 151, 152, 161, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 181, 182, 183, 184, 186, 188, 191, 192, 193, 195, 196, 199, 200, 201, 206, 207, 209, 210, 211, 212, 219, 226, 227, 228, 229, 230, 232, 234, 240, 243, 245, 246, 255, 257, 259, 260, 265, 268, 269, 273, 274, 277, 284, 287, 288, 290, 291, 293, 294, 297, 298, 301, 303, 309, 310, 312, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 355, 370, 374, 378, 379, 380, 390, 391, 410, 411, 427, 434, 440, 441, 444, 447, 448, 449, 450, 452, 453, 454, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 500, 503, 507, 512, 518, 524, 532, 535, 538, 542, 550, 551, 557, 583, 592, 602, 612, 613, 625, 636, 637, 643, 645, 654, 656, 701, 733, 734, 753, 755, 763, 776, 779, 784, 785, 786, 787, 788, 789, 790, 802, 812, 821, 834, 835, 860, 867, 869, 882, 939, 941, 942, 944, 946, 947, 948, 951, 956], "kernel_flux": 29, "deform": [29, 186, 196, 277], "cad": 29, "acquisit": [29, 88, 182, 186, 194, 215, 216, 217, 218, 234, 243, 277, 282, 285, 286, 287, 290, 294, 307, 316, 319, 320, 324, 325, 331, 332, 333, 334, 336, 350, 524, 550, 551, 552, 660, 671, 685, 749, 952], "affin": [29, 70, 182, 206, 208, 287, 304, 306, 319, 320, 343, 429, 436, 668, 707, 715, 822, 823, 824], "nonlinear": [29, 70, 126, 277, 770], "displac": 29, "do": [29, 30, 31, 41, 42, 44, 50, 52, 53, 57, 60, 66, 67, 71, 73, 76, 77, 80, 81, 84, 85, 86, 87, 92, 94, 97, 101, 109, 136, 139, 141, 142, 147, 162, 163, 166, 167, 170, 175, 176, 177, 182, 183, 184, 185, 186, 187, 188, 192, 194, 197, 198, 201, 202, 203, 206, 208, 209, 210, 211, 212, 215, 216, 218, 219, 222, 223, 227, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 243, 245, 250, 251, 252, 255, 260, 263, 264, 265, 269, 270, 273, 277, 282, 283, 285, 286, 287, 288, 290, 291, 294, 303, 305, 306, 309, 310, 312, 316, 317, 320, 323, 324, 325, 326, 328, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 350, 354, 371, 375, 377, 387, 394, 423, 427, 434, 439, 440, 450, 456, 475, 476, 494, 495, 496, 502, 504, 512, 517, 518, 524, 533, 541, 547, 548, 550, 551, 559, 566, 598, 603, 604, 605, 606, 607, 609, 610, 619, 620, 627, 628, 629, 633, 634, 636, 637, 638, 639, 647, 653, 654, 660, 671, 688, 691, 698, 701, 702, 720, 722, 724, 771, 772, 774, 775, 779, 784, 786, 787, 788, 789, 790, 802, 803, 812, 824, 861, 865, 866, 877, 896, 926, 929, 931, 939, 941, 945, 947, 948, 950, 951], "great": [29, 30, 147, 170, 177, 270, 318], "dev_head_t": [29, 53, 104, 106, 111, 182, 192, 195, 212, 243, 283, 294, 302, 325, 336, 383, 413, 414, 432, 443, 564, 640, 643, 647, 660, 671, 735, 736, 737, 749, 852, 878, 904, 956], "approxim": [29, 52, 94, 196, 232, 243, 255, 277, 282, 286, 287, 319, 320, 323, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 380, 483, 490, 504, 519, 520, 522, 534, 550, 551, 635, 636, 647, 651, 660, 671, 732, 784, 786, 787, 789, 790, 798, 853, 860, 861, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "coverag": [29, 136, 317], "list": [29, 30, 35, 36, 37, 42, 54, 67, 69, 71, 73, 94, 96, 110, 121, 130, 131, 134, 138, 139, 140, 142, 143, 144, 158, 163, 166, 170, 171, 175, 176, 177, 187, 192, 194, 195, 196, 197, 198, 201, 203, 209, 211, 215, 218, 227, 228, 229, 232, 233, 234, 237, 238, 240, 243, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 264, 265, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 316, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 356, 357, 358, 359, 362, 364, 365, 367, 369, 371, 373, 374, 378, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 397, 405, 406, 409, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 436, 439, 440, 441, 443, 450, 456, 462, 464, 475, 476, 483, 485, 489, 490, 493, 495, 498, 499, 500, 502, 504, 505, 506, 507, 508, 510, 514, 515, 517, 518, 521, 522, 524, 525, 529, 531, 533, 535, 536, 537, 538, 539, 540, 541, 545, 546, 547, 548, 549, 550, 551, 555, 559, 561, 563, 566, 567, 568, 570, 574, 575, 576, 578, 579, 582, 585, 590, 592, 593, 594, 597, 600, 601, 605, 607, 610, 612, 613, 619, 620, 622, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 644, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 667, 670, 671, 672, 677, 679, 682, 686, 688, 691, 693, 695, 697, 698, 701, 702, 703, 706, 709, 716, 718, 724, 725, 728, 733, 734, 747, 750, 751, 752, 753, 761, 764, 765, 767, 769, 770, 771, 772, 774, 775, 776, 779, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 802, 803, 808, 811, 812, 817, 819, 820, 831, 833, 834, 835, 836, 839, 840, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 894, 895, 896, 898, 899, 900, 908, 915, 919, 924, 927, 931, 932, 936, 945, 949, 950, 951], "ii": [29, 36, 41, 45, 65, 120, 126, 134, 146, 161, 185, 209, 211, 217, 222, 239, 255, 265, 277, 292, 338, 339, 342, 345, 346, 347, 388, 486, 493, 560, 636, 733, 770, 853], "str": [29, 36, 56, 65, 67, 128, 155, 169, 171, 176, 197, 209, 212, 222, 256, 270, 288, 291, 308, 309, 312, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 677, 678, 679, 680, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 747, 748, 749, 750, 752, 754, 755, 756, 757, 758, 759, 760, 761, 763, 765, 767, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 804, 805, 808, 809, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 826, 829, 830, 831, 833, 834, 836, 838, 840, 843, 845, 846, 848, 851, 852, 853, 854, 855, 856, 857, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 907, 908, 909, 910, 911, 912, 913, 915, 916, 917, 918, 919, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935], "append": [29, 33, 34, 36, 42, 69, 70, 71, 73, 88, 95, 102, 106, 140, 163, 176, 198, 209, 222, 227, 232, 234, 238, 243, 255, 259, 260, 265, 279, 284, 285, 286, 287, 290, 294, 306, 309, 325, 331, 332, 333, 334, 337, 550, 551, 636, 651, 660, 671, 729, 761, 784, 785, 786, 787, 788, 789, 790, 806], "del": [29, 31, 44, 59, 67, 68, 72, 73, 74, 75, 76, 80, 81, 136, 140, 162, 163, 166, 168, 171, 175, 192, 198, 203, 205, 206, 207, 209, 210, 212, 218, 223, 229, 232, 240], "dip": [29, 61, 66, 85, 110, 143, 202, 207, 209, 210, 211, 212, 238, 270, 291, 297, 329, 526, 693], "residu": [29, 31, 54, 56, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 80, 81, 84, 85, 86, 87, 97, 102, 117, 121, 192, 203, 204, 205, 207, 208, 209, 210, 212, 218, 223, 232, 236, 251, 252, 263, 265, 286, 290, 367, 369, 526, 545, 547, 548, 603, 859], "actual_po": [29, 110, 209, 211, 212], "actual_ori": [29, 209, 212], "actual_amp": [29, 204, 209, 211, 212], "ones": [29, 57, 109, 114, 138, 167, 196, 204, 209, 211, 212, 215, 233, 234, 255, 270, 282, 286, 309, 320, 324, 337, 457, 518, 543, 544, 550, 551, 594, 638, 660, 705, 711, 718, 769, 915, 936], "len": [29, 35, 36, 41, 42, 44, 45, 54, 58, 65, 67, 68, 69, 71, 73, 78, 90, 94, 95, 97, 99, 101, 117, 120, 127, 141, 144, 163, 166, 169, 170, 182, 185, 194, 202, 204, 209, 211, 212, 218, 222, 226, 227, 228, 229, 230, 232, 234, 235, 237, 238, 239, 240, 244, 251, 252, 255, 256, 257, 259, 260, 270, 282, 283, 325, 326, 328, 329, 331, 332, 333, 334, 336, 342, 343, 344, 355, 370, 422, 429, 485, 493, 518, 521, 550, 551, 602, 656, 733, 764, 786, 787, 788, 802, 812, 821, 834, 840, 867, 889, 897, 898], "fake": [29, 90, 97, 185, 204, 208, 209, 211], "amp": [29, 177, 204, 209, 211, 212, 303, 323], "instanc": [29, 31, 41, 52, 57, 69, 70, 71, 76, 101, 109, 114, 136, 141, 184, 185, 192, 195, 197, 198, 202, 204, 208, 209, 211, 212, 215, 216, 218, 231, 232, 233, 235, 237, 239, 240, 243, 268, 274, 281, 282, 285, 286, 287, 288, 290, 291, 292, 294, 298, 299, 300, 301, 302, 304, 306, 307, 308, 309, 318, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 380, 381, 382, 384, 385, 387, 393, 396, 398, 399, 401, 402, 403, 404, 405, 406, 409, 410, 412, 414, 415, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 439, 440, 441, 443, 447, 448, 449, 451, 452, 453, 454, 456, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 524, 526, 527, 528, 529, 530, 537, 540, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 588, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 603, 604, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 623, 625, 627, 628, 629, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 678, 679, 683, 684, 685, 686, 688, 689, 690, 693, 694, 695, 696, 697, 700, 703, 705, 712, 715, 724, 725, 728, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 769, 770, 771, 772, 773, 774, 775, 776, 779, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 806, 807, 822, 823, 824, 826, 831, 834, 835, 836, 837, 838, 844, 845, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 906, 907, 923, 927, 931, 933], "actual_gof": [29, 204, 209, 211, 212], "gof": [29, 31, 66, 143, 195, 202, 204, 209, 210, 211, 212, 284, 291, 329, 331, 332, 333, 334, 367, 369, 379, 411, 413, 414, 415, 550, 551, 633, 784, 786, 787, 788, 789, 790, 864], "dip_tru": [29, 209, 211, 212], "arrow": [29, 182, 186, 187, 204, 209, 212, 226, 230, 233, 246, 285, 286, 287, 291, 303, 320, 328, 329, 331, 332, 333, 334, 339, 340, 345, 346, 347, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 834, 853, 864, 866, 867, 868, 872, 875, 878, 879, 888, 889, 891, 896, 898, 899, 900], "azimuth": [29, 31, 50, 107, 136, 142, 143, 145, 152, 153, 161, 162, 182, 183, 184, 186, 196, 204, 207, 209, 212, 217, 238, 252, 294, 834, 904], "elev": [29, 31, 50, 107, 136, 142, 143, 145, 152, 153, 161, 162, 182, 183, 184, 186, 196, 207, 209, 212, 217, 226, 233, 238, 252, 294, 834, 904], "70": [29, 31, 35, 38, 39, 41, 45, 47, 60, 67, 71, 72, 73, 84, 85, 107, 114, 117, 128, 130, 131, 135, 136, 139, 141, 143, 162, 166, 169, 170, 182, 184, 185, 192, 195, 196, 209, 210, 212, 222, 223, 229, 232, 236, 238, 255, 256, 259, 260, 263, 268, 270, 277, 284, 331, 332, 333, 334, 403, 548, 550, 551, 636, 786, 789, 802, 805, 812, 813, 816], "distanc": [29, 31, 37, 48, 50, 54, 55, 57, 61, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 106, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 143, 152, 155, 157, 161, 162, 169, 182, 183, 184, 185, 186, 187, 192, 196, 197, 198, 202, 203, 204, 205, 207, 209, 212, 217, 218, 219, 223, 229, 236, 238, 240, 251, 252, 263, 265, 274, 281, 284, 285, 287, 288, 290, 291, 292, 294, 297, 299, 301, 308, 319, 320, 323, 328, 331, 332, 333, 334, 336, 337, 340, 341, 342, 344, 349, 372, 413, 434, 483, 486, 490, 493, 502, 504, 526, 535, 541, 542, 550, 551, 588, 598, 618, 635, 636, 640, 644, 647, 651, 656, 658, 660, 671, 676, 677, 723, 732, 733, 741, 744, 747, 749, 750, 752, 754, 755, 756, 758, 759, 771, 772, 774, 775, 779, 784, 786, 787, 789, 790, 834, 853, 856, 868, 875, 879, 888, 891, 896, 898, 904], "layer": [29, 31, 71, 136, 184, 185, 208, 209, 210, 211, 212, 227, 277, 285, 288, 316, 320, 375, 457, 592, 599, 733, 741, 746, 852], "r": [29, 30, 34, 36, 38, 45, 47, 54, 63, 65, 67, 69, 75, 97, 107, 108, 123, 124, 126, 142, 162, 163, 167, 171, 182, 186, 192, 202, 206, 207, 209, 210, 211, 212, 222, 223, 227, 229, 231, 232, 234, 238, 239, 244, 251, 255, 259, 260, 265, 270, 273, 277, 303, 317, 319, 320, 323, 328, 329, 330, 331, 332, 333, 334, 336, 340, 343, 367, 429, 450, 483, 489, 490, 518, 550, 551, 586, 603, 611, 635, 636, 645, 648, 650, 651, 653, 661, 744, 768, 771, 772, 777, 778, 784, 786, 787, 788, 789, 790, 815, 818, 834, 853, 854, 860, 864, 868, 875, 879, 884, 888, 891, 896, 898], "ident": [29, 31, 71, 97, 126, 136, 153, 161, 176, 182, 184, 186, 192, 209, 210, 211, 212, 222, 232, 235, 237, 239, 292, 294, 307, 316, 317, 318, 319, 320, 329, 336, 343, 344, 372, 443, 460, 507, 586, 594, 597, 598, 609, 611, 660, 669, 671, 693, 749, 779, 802, 812, 821, 852], "rad": [29, 31, 71, 202, 207, 209, 210, 211, 212, 319, 659, 733], "guess": [29, 31, 71, 151, 197, 202, 207, 209, 210, 211, 212, 232, 236, 299, 323, 542, 562, 849], "grid": [29, 31, 50, 66, 67, 71, 76, 140, 142, 151, 161, 181, 182, 184, 202, 204, 206, 207, 209, 210, 211, 212, 222, 223, 235, 236, 239, 255, 257, 273, 284, 286, 291, 316, 317, 320, 323, 341, 343, 344, 395, 547, 636, 667, 733, 785, 862, 879, 882], "mindist": [29, 31, 50, 67, 71, 76, 182, 184, 185, 202, 207, 209, 210, 211, 212, 235, 598, 733, 749], "normal": [29, 31, 37, 41, 42, 44, 48, 50, 52, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 80, 81, 84, 85, 87, 95, 97, 117, 119, 121, 131, 134, 135, 136, 137, 140, 141, 142, 143, 162, 163, 168, 169, 181, 182, 183, 184, 186, 187, 195, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 223, 233, 234, 237, 250, 251, 252, 263, 265, 269, 270, 277, 281, 284, 285, 286, 288, 290, 291, 294, 298, 299, 302, 305, 309, 310, 319, 322, 324, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 344, 345, 346, 347, 351, 352, 364, 365, 381, 389, 427, 433, 483, 485, 488, 490, 517, 526, 545, 547, 548, 550, 551, 553, 571, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 619, 620, 635, 636, 646, 650, 667, 696, 700, 724, 733, 737, 748, 749, 766, 784, 786, 787, 789, 790, 798, 802, 804, 812, 835, 853, 868, 875, 879, 887, 888, 891, 896, 898, 948], "definit": [29, 31, 52, 67, 71, 76, 136, 184, 185, 186, 187, 188, 202, 207, 208, 209, 210, 211, 212, 229, 235, 257, 277, 283, 290, 291, 301, 310, 316, 319, 321, 323, 336, 341, 364, 365, 388, 390, 397, 526, 550, 650, 671, 717, 828, 834], "nois": [29, 30, 31, 33, 37, 44, 47, 53, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 93, 97, 101, 108, 110, 114, 117, 120, 121, 122, 131, 134, 135, 136, 137, 141, 147, 150, 152, 156, 170, 172, 175, 177, 178, 188, 192, 198, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 222, 223, 227, 229, 231, 235, 237, 243, 246, 252, 255, 263, 265, 277, 284, 285, 287, 291, 296, 298, 301, 319, 323, 328, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 364, 365, 367, 369, 416, 422, 423, 424, 425, 426, 427, 428, 439, 440, 441, 483, 490, 491, 506, 526, 527, 545, 547, 548, 550, 551, 556, 591, 603, 609, 610, 614, 616, 619, 620, 636, 637, 650, 671, 679, 680, 692, 698, 736, 737, 738, 748, 786, 787, 789, 790, 814, 817, 861, 866, 870, 874, 876, 889, 890, 925, 936, 956], "shape": [29, 31, 34, 42, 45, 48, 57, 67, 71, 73, 76, 79, 90, 91, 92, 97, 124, 141, 142, 147, 162, 163, 166, 172, 175, 183, 184, 186, 196, 201, 207, 209, 210, 211, 212, 215, 222, 223, 229, 243, 250, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 270, 286, 316, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 354, 364, 365, 366, 372, 373, 374, 380, 381, 382, 386, 389, 393, 397, 407, 413, 417, 418, 419, 420, 421, 432, 434, 438, 439, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 507, 511, 512, 517, 519, 521, 524, 525, 526, 527, 528, 541, 542, 543, 544, 545, 547, 550, 551, 554, 562, 576, 590, 592, 594, 596, 601, 611, 612, 613, 615, 618, 619, 620, 631, 635, 636, 637, 639, 640, 641, 643, 644, 645, 646, 647, 651, 656, 657, 658, 660, 663, 668, 669, 671, 676, 677, 685, 686, 695, 697, 698, 714, 717, 720, 721, 722, 723, 733, 734, 739, 740, 741, 742, 743, 744, 745, 746, 751, 752, 761, 763, 764, 765, 769, 770, 771, 772, 773, 774, 775, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 798, 801, 802, 804, 805, 809, 811, 812, 813, 814, 815, 816, 817, 821, 822, 823, 824, 825, 827, 833, 834, 838, 839, 840, 851, 852, 853, 855, 856, 857, 860, 866, 867, 868, 869, 870, 872, 875, 876, 878, 879, 881, 882, 886, 888, 890, 891, 892, 894, 896, 897, 898, 899, 900, 904, 906, 926, 929, 934, 949], "9e": [29, 34, 35, 47, 68, 75, 113, 152, 176, 178, 188, 203, 206, 208, 209, 210, 211, 223, 251, 274], "6e": [29, 34, 35, 60, 68, 72, 146, 148, 178, 198, 203, 209, 211, 212, 223], "n_sampl": [29, 31, 71, 79, 91, 124, 163, 209, 210, 211, 212, 223, 250, 255, 309, 483, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 497, 498, 500, 525, 619, 620, 637, 669, 734, 763, 770, 773], "36156": 29, "ra": [29, 31, 50, 52, 67, 69, 71, 76, 136, 161, 182, 184, 185, 187, 202, 206, 207, 209, 210, 211, 212, 235, 284, 286, 288, 291, 293, 304, 317, 319, 320, 329, 338, 339, 342, 344, 345, 346, 347, 380, 393, 434, 517, 544, 586, 666, 703, 821, 823, 826, 834, 928], "000000": [29, 31, 50, 52, 67, 71, 76, 136, 169, 170, 182, 184, 185, 202, 206, 207, 208, 209, 210, 211, 212, 235, 258, 264, 265, 270], "981060": 29, "039414": 29, "189651": 29, "085832": 29, "966167": 29, "243215": 29, "173648": 29, "254887": 29, "951251": 29, "105": [29, 31, 39, 50, 52, 61, 67, 71, 76, 94, 111, 121, 136, 141, 161, 163, 182, 184, 195, 202, 207, 209, 210, 211, 212, 223, 233, 235, 255, 956], "decompos": [29, 31, 34, 71, 202, 207, 209, 210, 211, 212, 232, 299, 320, 483, 487, 490, 636, 637, 816], "matrix": [29, 31, 35, 36, 37, 41, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 93, 95, 105, 107, 113, 117, 119, 120, 121, 122, 123, 124, 131, 132, 133, 134, 135, 136, 137, 146, 148, 152, 157, 160, 163, 167, 176, 177, 178, 182, 183, 184, 185, 186, 189, 190, 191, 192, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 223, 227, 232, 233, 234, 251, 252, 256, 257, 258, 259, 260, 264, 265, 274, 277, 279, 281, 282, 284, 286, 287, 290, 292, 295, 300, 301, 303, 312, 317, 319, 323, 328, 329, 331, 333, 334, 336, 341, 343, 344, 361, 364, 365, 366, 372, 380, 383, 384, 386, 397, 423, 428, 429, 439, 440, 441, 489, 504, 524, 527, 550, 551, 556, 594, 598, 603, 609, 610, 611, 612, 613, 614, 615, 618, 619, 620, 628, 633, 636, 637, 644, 669, 672, 692, 696, 698, 733, 738, 749, 754, 755, 756, 757, 758, 759, 760, 764, 769, 770, 771, 772, 774, 775, 779, 785, 794, 795, 796, 803, 821, 852, 856, 857, 861, 862, 879, 880, 883, 925, 956], "whiten": [29, 31, 33, 40, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 117, 120, 121, 131, 132, 133, 134, 135, 136, 137, 140, 150, 156, 175, 179, 180, 188, 191, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 232, 251, 252, 263, 265, 277, 284, 285, 287, 291, 292, 296, 297, 300, 301, 303, 319, 323, 328, 331, 332, 333, 334, 336, 341, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 524, 526, 527, 545, 547, 548, 550, 551, 611, 614, 633, 636, 637, 669, 698, 709, 799, 866, 870, 874, 876, 889, 893, 936, 956], "omit": [29, 31, 38, 47, 50, 52, 54, 55, 56, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 80, 81, 83, 84, 85, 87, 105, 107, 113, 117, 120, 121, 131, 134, 135, 136, 137, 146, 148, 152, 176, 178, 182, 184, 188, 192, 194, 195, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 218, 223, 227, 235, 237, 251, 252, 263, 265, 274, 281, 284, 291, 293, 294, 301, 302, 304, 309, 325, 331, 332, 333, 334, 341, 489, 550, 551, 590, 636, 661, 662, 672, 689, 701, 741, 746, 789, 824, 852, 854, 870, 875, 881, 890], "spheric": [29, 69, 98, 105, 177, 182, 196, 209, 210, 211, 212, 227, 234, 237, 277, 281, 284, 290, 301, 320, 328, 331, 332, 333, 334, 336, 337, 340, 342, 343, 380, 396, 398, 429, 483, 490, 504, 550, 551, 599, 635, 636, 645, 646, 647, 650, 651, 660, 671, 733, 747, 750, 761, 765, 784, 786, 787, 789, 790, 834, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "72": [29, 39, 41, 45, 54, 61, 71, 73, 98, 105, 106, 107, 123, 127, 130, 131, 139, 141, 144, 151, 166, 175, 182, 188, 195, 203, 206, 208, 209, 210, 211, 212, 222, 223, 227, 236, 237, 240, 255, 256, 257, 258, 259, 260, 263, 277, 298, 320, 636, 645], "cm": [29, 31, 35, 41, 50, 67, 71, 76, 117, 143, 151, 168, 171, 182, 184, 192, 196, 202, 207, 209, 210, 211, 212, 216, 228, 234, 235, 236, 237, 238, 257, 269, 292, 319, 323, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 403, 405, 407, 550, 551, 559, 591, 660, 867, 870, 872, 897], "extent": [29, 31, 39, 42, 50, 67, 71, 73, 76, 81, 97, 117, 122, 134, 166, 182, 184, 202, 207, 209, 210, 211, 212, 223, 234, 235, 257, 258, 259, 260, 263, 264, 265, 277, 290, 310, 320, 331, 332, 506, 541, 588, 618, 744, 774, 775], "y": [29, 31, 35, 36, 37, 38, 39, 42, 44, 45, 50, 67, 71, 73, 76, 94, 97, 98, 106, 108, 117, 139, 141, 142, 147, 162, 171, 177, 182, 184, 186, 187, 196, 198, 201, 202, 206, 207, 209, 210, 211, 212, 219, 222, 223, 226, 229, 230, 233, 235, 240, 243, 244, 245, 246, 255, 265, 270, 283, 284, 288, 290, 292, 303, 319, 320, 325, 328, 329, 331, 332, 333, 334, 336, 339, 340, 345, 347, 355, 370, 373, 374, 380, 381, 403, 413, 414, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 523, 550, 551, 563, 602, 603, 635, 636, 637, 645, 651, 656, 659, 703, 737, 770, 784, 786, 787, 789, 790, 821, 824, 825, 827, 834, 835, 839, 853, 860, 864, 867, 868, 869, 870, 872, 874, 875, 876, 877, 878, 879, 884, 886, 888, 890, 891, 892, 896, 897, 898, 904, 928, 941], "z": [29, 30, 31, 37, 42, 44, 50, 67, 71, 76, 155, 177, 182, 184, 185, 186, 195, 196, 201, 202, 206, 207, 209, 210, 211, 212, 216, 229, 233, 235, 277, 283, 284, 288, 303, 319, 320, 328, 331, 332, 333, 334, 335, 336, 339, 340, 345, 347, 373, 374, 380, 392, 403, 413, 414, 483, 490, 502, 550, 551, 563, 603, 635, 636, 641, 645, 651, 660, 703, 736, 737, 784, 786, 787, 789, 790, 824, 825, 827, 834, 853, 860, 866, 868, 870, 872, 875, 876, 878, 879, 883, 886, 888, 889, 890, 891, 892, 896, 898, 904, 905, 928, 948], "729": [29, 39, 209, 210, 211, 212, 260], "befor": [29, 30, 31, 47, 50, 52, 67, 70, 71, 76, 88, 95, 97, 108, 112, 114, 117, 121, 134, 146, 162, 163, 166, 167, 168, 169, 170, 171, 175, 177, 182, 183, 184, 186, 187, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 207, 209, 210, 211, 212, 215, 218, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 252, 268, 270, 273, 280, 281, 284, 286, 288, 290, 291, 293, 294, 297, 310, 316, 317, 320, 323, 324, 326, 328, 331, 332, 333, 334, 336, 338, 339, 341, 342, 343, 345, 346, 347, 364, 382, 410, 428, 431, 440, 441, 483, 489, 490, 492, 495, 507, 513, 514, 515, 516, 517, 518, 524, 525, 527, 550, 551, 595, 609, 610, 612, 613, 619, 620, 635, 636, 639, 648, 649, 653, 654, 656, 657, 660, 661, 686, 694, 701, 706, 740, 741, 742, 743, 744, 746, 748, 770, 771, 772, 774, 775, 779, 785, 786, 787, 789, 790, 804, 805, 853, 862, 867, 868, 870, 872, 874, 875, 880, 881, 882, 887, 890, 906, 931, 936, 941, 950], "ani": [29, 30, 31, 44, 50, 53, 67, 71, 76, 102, 109, 137, 139, 144, 147, 154, 161, 163, 166, 167, 168, 169, 175, 177, 182, 184, 186, 187, 188, 191, 192, 193, 195, 196, 197, 202, 207, 209, 210, 211, 212, 216, 217, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 255, 260, 270, 273, 274, 277, 281, 282, 285, 286, 287, 288, 293, 294, 304, 309, 310, 312, 317, 318, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 344, 345, 346, 347, 354, 356, 358, 373, 374, 380, 387, 392, 394, 430, 434, 457, 489, 502, 505, 506, 507, 510, 517, 535, 540, 550, 551, 567, 570, 625, 627, 628, 629, 633, 634, 636, 637, 638, 639, 653, 657, 660, 661, 666, 671, 678, 684, 689, 695, 703, 711, 721, 724, 725, 728, 734, 745, 749, 770, 779, 784, 785, 786, 787, 788, 789, 790, 803, 834, 835, 838, 861, 866, 867, 869, 878, 881, 889, 890, 900, 906, 915, 928, 931, 936, 941, 945], "178": [29, 118, 154, 195, 209, 210, 211, 212, 228, 236, 255, 277, 458, 956], "after": [29, 31, 34, 37, 42, 48, 50, 52, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 88, 95, 107, 114, 117, 119, 121, 128, 130, 134, 136, 157, 162, 163, 166, 167, 168, 170, 171, 172, 175, 176, 177, 181, 182, 184, 187, 192, 193, 194, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 245, 251, 252, 255, 257, 258, 263, 268, 270, 273, 274, 279, 280, 281, 284, 286, 287, 288, 291, 293, 300, 301, 304, 308, 309, 310, 312, 316, 317, 319, 320, 323, 324, 325, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 348, 354, 364, 365, 410, 423, 427, 428, 430, 432, 439, 440, 441, 456, 483, 485, 489, 490, 494, 496, 497, 501, 507, 524, 525, 526, 527, 545, 547, 548, 550, 551, 614, 635, 636, 639, 647, 648, 649, 653, 654, 657, 660, 661, 662, 664, 669, 672, 701, 703, 725, 745, 784, 811, 813, 814, 816, 817, 822, 834, 852, 860, 866, 870, 872, 874, 875, 876, 879, 880, 883, 887, 889, 900, 928, 936, 950], "infeas": [29, 31, 50, 67, 71, 76, 182, 184, 202, 207, 209, 210, 211, 212, 235], "within": [29, 30, 31, 42, 50, 64, 67, 71, 73, 76, 88, 96, 121, 134, 135, 136, 139, 147, 148, 155, 161, 166, 167, 170, 177, 181, 182, 184, 186, 187, 191, 192, 194, 198, 201, 202, 204, 207, 209, 210, 211, 212, 226, 229, 232, 233, 235, 237, 240, 245, 251, 255, 266, 270, 273, 277, 281, 287, 288, 290, 293, 302, 305, 308, 309, 310, 312, 319, 320, 324, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 349, 375, 382, 443, 456, 483, 488, 490, 507, 509, 512, 517, 535, 541, 550, 551, 553, 609, 610, 619, 620, 635, 636, 651, 657, 771, 772, 774, 775, 779, 784, 786, 787, 789, 790, 793, 796, 804, 815, 818, 831, 853, 867, 868, 875, 876, 879, 888, 891, 895, 896, 898, 936, 941, 948, 951], "170": [29, 33, 45, 101, 107, 110, 151, 163, 195, 198, 200, 203, 209, 210, 211, 212, 214, 218, 223, 229, 236, 255, 277, 956], "remain": [29, 31, 48, 50, 52, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 102, 117, 119, 121, 136, 157, 163, 170, 182, 184, 192, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 231, 232, 233, 235, 252, 303, 312, 316, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 506, 526, 527, 545, 547, 548, 550, 551, 552, 614, 636, 724, 772, 784, 786, 787, 788, 813, 814, 816, 817, 876, 950], "outsid": [29, 31, 42, 50, 52, 67, 71, 76, 136, 161, 166, 170, 182, 184, 185, 187, 202, 207, 208, 209, 210, 211, 212, 227, 229, 234, 235, 237, 243, 245, 279, 282, 287, 291, 293, 302, 306, 310, 320, 321, 325, 328, 331, 332, 333, 334, 335, 337, 338, 339, 340, 342, 345, 346, 347, 359, 460, 483, 490, 525, 550, 551, 588, 607, 635, 636, 651, 653, 784, 786, 787, 789, 790, 822, 831, 834, 853, 854, 868, 875, 879, 888, 891, 894, 896, 898, 899], "less": [29, 30, 31, 36, 44, 50, 52, 66, 67, 70, 71, 72, 75, 76, 97, 105, 113, 141, 146, 152, 166, 167, 169, 176, 177, 182, 184, 185, 197, 198, 202, 207, 209, 210, 211, 212, 215, 226, 227, 229, 230, 232, 234, 235, 237, 238, 239, 240, 243, 251, 255, 257, 270, 274, 292, 293, 302, 304, 309, 310, 317, 320, 432, 524, 547, 548, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 595, 603, 636, 644, 667, 669, 676, 771, 772, 773, 774, 775, 779, 834, 936, 949], "through": [29, 31, 35, 45, 53, 63, 71, 104, 111, 140, 166, 167, 168, 170, 171, 175, 181, 182, 186, 191, 192, 194, 198, 202, 206, 207, 209, 210, 211, 212, 222, 227, 229, 232, 233, 234, 237, 239, 243, 245, 246, 252, 263, 270, 274, 277, 290, 292, 302, 304, 309, 310, 312, 318, 319, 320, 324, 329, 331, 332, 333, 334, 364, 443, 524, 533, 542, 550, 586, 635, 636, 734, 798, 834, 858, 860, 864, 867, 869, 873, 881, 941, 949, 956], "35": [29, 31, 37, 38, 39, 45, 47, 51, 52, 54, 60, 61, 71, 73, 107, 130, 135, 136, 139, 141, 162, 169, 171, 172, 175, 184, 186, 195, 197, 202, 210, 211, 212, 214, 222, 223, 233, 234, 236, 238, 255, 256, 257, 259, 260, 263, 264, 265, 269, 277, 320, 323, 547, 603, 648, 649, 661, 664, 839, 956], "65": [29, 37, 38, 39, 45, 47, 60, 61, 71, 73, 107, 110, 130, 135, 136, 139, 141, 162, 169, 171, 182, 195, 196, 203, 204, 210, 212, 222, 223, 228, 235, 236, 255, 256, 257, 259, 260, 263, 264, 265, 277, 298, 679], "85": [29, 30, 39, 45, 61, 63, 73, 105, 130, 136, 139, 141, 163, 166, 171, 195, 197, 202, 208, 212, 222, 223, 230, 236, 255, 256, 259, 260, 297, 942], "90": [29, 30, 31, 37, 39, 45, 50, 61, 67, 68, 73, 106, 107, 117, 121, 128, 130, 131, 135, 136, 139, 141, 151, 161, 162, 169, 177, 182, 183, 184, 186, 195, 196, 197, 205, 210, 212, 217, 222, 223, 228, 230, 235, 236, 238, 239, 243, 248, 255, 256, 257, 259, 260, 263, 264, 265, 270, 277, 317, 318, 320, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 488, 490, 526, 527, 545, 547, 548, 599, 609, 610, 614, 636, 733, 740, 742, 743, 744, 765, 793, 796, 804, 840, 868, 876, 956], "95": [29, 30, 31, 33, 39, 45, 60, 73, 76, 97, 102, 106, 107, 117, 139, 140, 141, 148, 162, 168, 169, 171, 172, 177, 182, 184, 195, 205, 210, 212, 222, 223, 228, 236, 237, 238, 255, 256, 259, 260, 277, 320, 331, 332, 333, 334, 636, 651, 744, 763, 784, 860, 876, 881, 897], "110": [29, 44, 45, 47, 61, 67, 107, 108, 139, 184, 195, 212, 236, 255, 262, 277, 487, 489, 501, 641, 956], "115": [29, 47, 61, 82, 88, 110, 121, 195, 202, 209, 212, 223, 230, 236, 242, 244, 248, 277, 644, 956], "125": [29, 39, 45, 50, 61, 71, 163, 169, 170, 174, 182, 186, 195, 196, 197, 207, 212, 229, 236, 259, 270, 272, 273, 406, 956], "130": [29, 40, 107, 108, 109, 184, 195, 196, 212, 222, 236, 255, 259, 260, 277, 303, 406], "135": [29, 145, 153, 177, 184, 195, 212, 233, 234, 235, 236, 260, 277, 320, 344], "140": [29, 45, 60, 107, 108, 139, 151, 182, 195, 197, 212, 233, 234, 236, 259, 260, 263, 267, 277, 320, 641, 956], "145": [29, 42, 44, 71, 102, 108, 175, 195, 212, 236, 251, 255, 259, 260], "150": [29, 38, 61, 68, 71, 85, 100, 101, 103, 107, 108, 121, 147, 151, 167, 168, 172, 177, 184, 186, 192, 195, 206, 212, 218, 228, 232, 234, 236, 259, 260, 305, 323, 344, 804], "155": [29, 61, 156, 195, 212, 223, 236, 259, 260, 270, 300, 956], "have": [29, 30, 36, 45, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 98, 101, 105, 106, 109, 110, 112, 113, 117, 121, 122, 128, 130, 131, 139, 142, 143, 144, 146, 147, 157, 160, 161, 163, 166, 168, 169, 170, 171, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 205, 207, 208, 209, 215, 216, 217, 218, 219, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 259, 260, 263, 265, 268, 270, 273, 274, 279, 281, 282, 283, 284, 287, 288, 290, 291, 292, 293, 294, 298, 301, 302, 303, 304, 306, 307, 308, 310, 312, 317, 318, 319, 320, 322, 323, 324, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 358, 359, 362, 364, 365, 374, 382, 385, 388, 398, 409, 422, 423, 427, 428, 429, 434, 439, 440, 441, 475, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 502, 503, 504, 507, 508, 517, 518, 523, 526, 527, 533, 541, 545, 547, 548, 549, 550, 551, 553, 559, 562, 563, 566, 568, 572, 575, 578, 594, 596, 605, 607, 610, 614, 622, 631, 635, 636, 637, 646, 647, 651, 653, 654, 655, 660, 662, 671, 689, 691, 701, 720, 722, 725, 728, 734, 735, 736, 737, 738, 749, 754, 758, 766, 770, 784, 785, 786, 787, 788, 789, 790, 805, 806, 813, 814, 824, 834, 839, 840, 853, 859, 860, 866, 867, 868, 870, 873, 875, 876, 879, 888, 890, 891, 896, 897, 898, 902, 906, 929, 931, 937, 939, 941, 943, 946, 948, 952, 953], "alreadi": [29, 47, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 98, 101, 105, 112, 113, 121, 122, 142, 143, 146, 147, 161, 168, 170, 171, 175, 176, 177, 184, 185, 186, 188, 192, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 226, 228, 229, 232, 233, 234, 237, 243, 250, 270, 273, 274, 284, 303, 309, 317, 320, 321, 323, 331, 332, 333, 334, 338, 339, 341, 342, 343, 345, 346, 347, 364, 365, 375, 377, 396, 423, 427, 428, 436, 439, 440, 441, 442, 450, 475, 476, 483, 490, 517, 518, 526, 527, 545, 547, 548, 550, 551, 596, 614, 647, 648, 653, 701, 721, 722, 785, 806, 857, 860, 876, 931, 936, 943, 944, 946], "proj": [29, 31, 34, 35, 37, 39, 40, 41, 44, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 98, 105, 112, 113, 114, 119, 136, 138, 143, 144, 146, 147, 148, 152, 157, 166, 168, 171, 175, 176, 177, 188, 192, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 218, 223, 226, 230, 233, 234, 235, 238, 239, 243, 246, 250, 273, 274, 281, 285, 287, 291, 292, 298, 304, 316, 319, 323, 326, 328, 331, 332, 333, 334, 336, 340, 341, 364, 365, 410, 411, 423, 424, 425, 426, 427, 441, 549, 550, 551, 595, 635, 636, 648, 649, 650, 653, 686, 694, 701, 709, 724, 785, 786, 789, 791, 792, 793, 794, 795, 796, 797, 861, 868, 870, 872, 874, 875, 887, 888, 889, 890, 932], "attribut": [29, 41, 56, 57, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 98, 105, 109, 112, 113, 143, 146, 147, 166, 167, 169, 175, 176, 177, 192, 194, 195, 196, 198, 201, 202, 204, 205, 207, 208, 209, 228, 232, 233, 237, 238, 240, 246, 250, 273, 274, 279, 281, 282, 283, 287, 288, 290, 291, 292, 293, 294, 299, 300, 301, 302, 303, 306, 309, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 370, 422, 434, 483, 484, 486, 487, 489, 490, 491, 493, 498, 501, 540, 541, 549, 550, 551, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 594, 602, 635, 636, 637, 695, 701, 705, 711, 734, 769, 784, 785, 786, 787, 788, 789, 790, 821, 834, 837, 860, 869, 882, 907, 908, 909, 910, 911, 912, 913, 930], "42": [29, 31, 32, 34, 35, 37, 39, 40, 41, 42, 44, 45, 54, 55, 61, 68, 71, 73, 75, 95, 96, 98, 99, 100, 103, 106, 107, 109, 114, 117, 119, 120, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 148, 151, 156, 158, 159, 163, 167, 172, 177, 178, 182, 188, 192, 193, 194, 195, 198, 201, 202, 203, 206, 207, 208, 210, 222, 223, 226, 229, 230, 231, 232, 233, 234, 235, 236, 240, 243, 246, 251, 252, 255, 256, 257, 258, 259, 260, 263, 265, 273, 276, 277, 308, 317, 336, 603, 618, 744, 956], "223": [29, 32, 72, 195, 222, 236, 255, 259, 262, 956], "1345": 29, "kernel_phantom": [29, 32, 956], "explor": [30, 53, 132, 133, 136, 184, 207, 223, 227, 229, 231, 234, 240, 246, 251, 269, 270, 317, 318, 331, 334, 346, 347, 354, 524, 763, 900, 936, 940, 956], "replic": [30, 42, 259, 263, 264, 265, 286, 317, 337, 761, 936, 937], "extend": [30, 103, 167, 170, 177, 192, 206, 227, 232, 234, 237, 239, 260, 277, 279, 281, 282, 284, 285, 287, 290, 291, 299, 300, 307, 316, 325, 328, 329, 331, 332, 333, 334, 340, 346, 423, 483, 490, 550, 551, 588, 596, 635, 636, 639, 647, 651, 660, 669, 671, 751, 784, 786, 787, 789, 790, 802, 812, 813, 816, 824, 853, 864, 868, 875, 879, 888, 891, 896, 898, 949], "main": [30, 75, 121, 128, 169, 182, 194, 197, 235, 239, 245, 259, 265, 285, 303, 309, 317, 320, 321, 331, 332, 394, 463, 542, 564, 765, 767, 866, 942, 950], "integr": [30, 181, 186, 228, 232, 255, 265, 277, 292, 293, 299, 309, 320, 618, 636, 671, 744, 946, 952], "meeg": [30, 270], "toolbox": [30, 45, 97, 177, 181, 222, 277, 317, 371, 489, 522, 644, 949], "interfac": [30, 34, 41, 71, 114, 181, 184, 192, 216, 223, 227, 229, 232, 233, 246, 277, 282, 291, 295, 298, 301, 317, 333, 334, 445, 450, 542, 637, 834, 875, 945, 949, 952], "eeglab": [30, 94, 97, 155, 194, 229, 232, 277, 279, 280, 281, 282, 283, 284, 285, 286, 290, 293, 302, 303, 304, 305, 307, 308, 320, 328, 331, 332, 333, 334, 336, 340, 380, 398, 483, 490, 513, 516, 550, 551, 567, 635, 636, 644, 651, 684, 689, 695, 784, 786, 787, 789, 790, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "summari": [30, 36, 198, 228, 232, 246, 299, 309, 338, 339, 342, 345, 346, 347, 612, 613, 776], "If": [30, 53, 54, 57, 69, 70, 96, 97, 108, 126, 128, 142, 144, 147, 161, 163, 166, 168, 170, 172, 175, 176, 177, 182, 185, 186, 187, 191, 194, 195, 196, 197, 198, 201, 207, 208, 215, 216, 217, 219, 223, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 243, 244, 245, 246, 250, 255, 256, 257, 263, 268, 270, 273, 284, 287, 291, 292, 293, 305, 309, 310, 316, 317, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 400, 403, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 829, 833, 834, 836, 840, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 939, 941, 942, 945, 946, 948, 949, 950, 951], "disk": [30, 55, 106, 135, 137, 168, 169, 175, 176, 184, 192, 196, 198, 203, 206, 210, 227, 233, 236, 237, 243, 244, 245, 252, 279, 284, 285, 290, 291, 305, 316, 320, 323, 325, 326, 327, 331, 332, 333, 334, 336, 337, 349, 381, 456, 502, 524, 549, 550, 551, 638, 694, 701, 703, 705, 711, 733, 786, 787, 789, 790, 807, 834, 866, 870, 874, 876, 889, 928, 930, 936, 948], "fetcher": [30, 163, 279, 287, 294, 317], "automat": [30, 97, 105, 106, 109, 121, 128, 134, 166, 167, 168, 170, 171, 175, 176, 177, 181, 182, 192, 194, 195, 196, 198, 208, 216, 217, 218, 219, 226, 227, 228, 229, 230, 232, 233, 234, 237, 243, 245, 246, 250, 260, 277, 279, 281, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 297, 299, 301, 302, 304, 305, 306, 308, 309, 316, 317, 320, 323, 325, 326, 328, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 349, 380, 386, 408, 429, 447, 448, 449, 450, 452, 453, 454, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 486, 493, 496, 504, 507, 515, 531, 532, 539, 541, 550, 551, 557, 564, 568, 572, 576, 598, 635, 636, 638, 646, 647, 648, 651, 660, 661, 664, 669, 671, 686, 697, 708, 719, 722, 727, 728, 733, 744, 771, 772, 774, 775, 784, 788, 830, 834, 854, 855, 859, 860, 866, 869, 872, 873, 874, 875, 882, 883, 889, 894, 899, 900, 942, 948, 949], "repositori": [30, 196, 310, 321, 943, 948, 949], "dure": [30, 45, 59, 64, 69, 71, 97, 107, 109, 121, 127, 130, 143, 148, 149, 162, 167, 170, 175, 181, 183, 186, 192, 193, 194, 197, 198, 206, 208, 218, 223, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 240, 243, 244, 245, 246, 270, 273, 277, 279, 284, 286, 287, 290, 292, 302, 303, 304, 306, 307, 308, 310, 316, 317, 318, 319, 320, 323, 329, 331, 332, 333, 334, 335, 336, 338, 341, 342, 344, 346, 347, 348, 364, 365, 372, 410, 412, 416, 423, 427, 428, 430, 435, 439, 440, 441, 483, 489, 490, 500, 506, 507, 518, 526, 527, 545, 547, 548, 550, 551, 552, 564, 570, 581, 594, 598, 614, 622, 636, 656, 657, 658, 660, 667, 671, 686, 725, 728, 734, 749, 752, 758, 759, 760, 779, 784, 786, 787, 788, 789, 790, 792, 795, 815, 818, 822, 823, 832, 834, 852, 855, 866, 873, 876, 880, 883, 889, 894, 900, 942, 950], "e": [30, 33, 34, 38, 54, 67, 68, 70, 72, 73, 80, 96, 97, 98, 106, 110, 128, 139, 141, 147, 163, 166, 167, 169, 170, 172, 176, 177, 179, 181, 183, 186, 187, 188, 191, 192, 194, 195, 196, 197, 204, 206, 211, 215, 216, 217, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 240, 243, 244, 250, 251, 252, 255, 256, 257, 260, 263, 265, 269, 270, 277, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 298, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 316, 317, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 355, 364, 365, 366, 370, 371, 374, 376, 378, 380, 381, 386, 395, 397, 408, 420, 423, 427, 428, 434, 439, 440, 441, 450, 456, 457, 459, 464, 475, 476, 483, 485, 486, 489, 490, 492, 493, 494, 497, 498, 499, 502, 503, 504, 507, 510, 512, 515, 516, 517, 519, 521, 522, 524, 525, 526, 527, 533, 539, 542, 544, 545, 547, 548, 549, 550, 551, 552, 563, 564, 566, 568, 570, 582, 588, 590, 592, 595, 596, 597, 598, 602, 603, 609, 610, 611, 612, 613, 614, 615, 618, 619, 620, 622, 635, 636, 638, 639, 644, 645, 646, 647, 650, 651, 652, 653, 654, 656, 659, 660, 662, 663, 666, 667, 671, 677, 678, 679, 686, 691, 698, 701, 702, 705, 706, 711, 718, 719, 720, 721, 722, 723, 729, 731, 733, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 752, 755, 769, 770, 771, 772, 773, 774, 775, 776, 779, 780, 783, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 798, 799, 802, 812, 817, 821, 824, 834, 836, 840, 849, 852, 853, 854, 860, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 879, 880, 882, 883, 887, 888, 889, 890, 891, 894, 896, 898, 899, 902, 926, 929, 936, 939, 941, 942, 943, 946, 948, 952], "rate": [30, 96, 124, 128, 130, 206, 216, 217, 222, 229, 230, 232, 259, 269, 277, 283, 284, 292, 306, 326, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 443, 488, 518, 522, 524, 550, 551, 559, 566, 574, 662, 669, 685, 737, 749, 762, 768, 770, 773, 784, 786, 787, 788, 789, 790, 804, 866, 868, 877, 889, 936], "per": [30, 57, 73, 117, 121, 128, 134, 137, 147, 154, 157, 168, 170, 176, 177, 184, 192, 195, 206, 219, 228, 232, 234, 246, 255, 260, 265, 269, 279, 287, 302, 308, 309, 310, 320, 323, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 349, 382, 389, 429, 445, 458, 475, 483, 490, 493, 496, 504, 507, 516, 517, 550, 551, 612, 613, 618, 619, 620, 636, 637, 640, 688, 728, 736, 765, 767, 780, 784, 786, 787, 789, 790, 792, 795, 802, 804, 805, 812, 813, 814, 816, 817, 824, 834, 866, 867, 868, 875, 879, 880, 897, 910, 948], "etc": [30, 53, 57, 62, 73, 104, 169, 181, 186, 192, 193, 194, 197, 198, 201, 215, 216, 217, 226, 227, 228, 232, 237, 243, 246, 250, 255, 263, 270, 285, 297, 302, 306, 308, 309, 310, 312, 318, 319, 320, 324, 329, 331, 332, 333, 334, 336, 337, 338, 342, 346, 402, 512, 524, 525, 550, 551, 553, 559, 571, 575, 597, 608, 633, 636, 650, 671, 696, 700, 725, 730, 758, 759, 760, 761, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 834, 860, 864, 867, 894, 936, 939, 946], "mat": [30, 45, 222, 277, 283, 291, 300, 304, 320, 336, 571, 696, 700], "store": [30, 42, 55, 56, 97, 117, 120, 121, 122, 131, 136, 142, 143, 161, 166, 167, 168, 169, 170, 175, 176, 177, 181, 182, 184, 186, 188, 194, 195, 196, 198, 201, 208, 212, 216, 217, 218, 219, 227, 228, 233, 234, 237, 238, 240, 243, 245, 246, 251, 252, 270, 282, 285, 286, 287, 288, 290, 297, 299, 304, 307, 309, 316, 317, 318, 319, 320, 323, 324, 325, 329, 331, 332, 333, 334, 336, 340, 341, 342, 343, 345, 349, 392, 414, 432, 450, 456, 463, 464, 475, 476, 485, 487, 498, 507, 512, 516, 521, 542, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 595, 614, 623, 625, 636, 644, 651, 659, 670, 689, 695, 696, 700, 703, 726, 736, 737, 749, 764, 784, 785, 788, 791, 792, 793, 794, 795, 796, 797, 806, 835, 843, 856, 889, 927, 928, 936], "inferenti": [30, 255], "evalu": [30, 57, 70, 80, 81, 188, 215, 223, 237, 239, 255, 277, 310, 317, 320, 343, 429, 500, 509, 547, 548, 585, 618, 645, 660, 744, 936], "signific": [30, 99, 127, 128, 139, 177, 191, 198, 215, 226, 228, 229, 231, 232, 234, 255, 257, 258, 259, 260, 261, 262, 270, 277, 312, 316, 320, 328, 331, 332, 333, 334, 336, 386, 392, 422, 483, 489, 490, 522, 550, 551, 611, 635, 636, 694, 771, 772, 774, 775, 776, 784, 786, 787, 789, 790, 853, 868, 872, 875, 891, 896, 898, 956], "jose": [30, 290], "garcia": 30, "alani": [30, 290], "jcg": 30, "matplotlib": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 54, 55, 63, 64, 65, 67, 71, 73, 79, 84, 95, 96, 97, 98, 99, 100, 108, 112, 117, 119, 120, 123, 124, 126, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149, 157, 158, 159, 162, 163, 170, 171, 172, 177, 186, 196, 197, 198, 202, 203, 206, 207, 209, 210, 212, 222, 223, 227, 229, 230, 232, 233, 234, 235, 237, 238, 239, 243, 246, 252, 255, 256, 257, 258, 259, 260, 265, 269, 270, 273, 274, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 301, 302, 303, 304, 305, 306, 307, 308, 309, 318, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 380, 381, 483, 490, 550, 551, 635, 636, 651, 656, 705, 784, 785, 786, 787, 789, 790, 802, 812, 834, 835, 838, 845, 849, 851, 852, 853, 854, 856, 858, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 881, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 941, 942], "pyplot": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 54, 55, 63, 64, 65, 67, 71, 73, 79, 84, 95, 96, 97, 98, 99, 100, 108, 112, 117, 119, 120, 123, 124, 126, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149, 157, 158, 159, 162, 163, 170, 171, 172, 177, 186, 196, 198, 202, 203, 206, 207, 209, 210, 212, 222, 223, 229, 230, 233, 234, 237, 238, 239, 243, 252, 255, 256, 257, 258, 259, 260, 265, 269, 270, 273, 274, 292, 330, 331, 332, 333, 334, 784, 802, 812, 838, 860, 870, 872, 897], "plt": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 54, 55, 63, 64, 65, 67, 71, 73, 79, 84, 95, 96, 97, 98, 99, 100, 108, 112, 117, 119, 120, 123, 124, 126, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149, 157, 158, 159, 162, 163, 170, 171, 172, 177, 186, 196, 198, 202, 203, 206, 207, 209, 210, 212, 222, 223, 229, 230, 233, 234, 237, 238, 239, 243, 252, 255, 256, 257, 258, 259, 260, 265, 269, 270, 273, 274, 333, 334, 389, 802, 812, 874], "subj": [30, 186, 232], "experi": [30, 45, 71, 92, 97, 155, 177, 191, 192, 194, 195, 206, 218, 227, 228, 234, 237, 238, 239, 240, 243, 244, 277, 288, 294, 309, 311, 317, 319, 320, 336, 570], "particip": [30, 98, 100, 102, 103, 107, 108, 109, 117, 120, 149, 167, 170, 172, 177, 192, 193, 194, 195, 198, 219, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 270, 273, 310, 317, 319, 656, 658, 845], "perform": [30, 34, 36, 39, 45, 57, 71, 80, 102, 108, 110, 127, 128, 130, 134, 139, 146, 163, 166, 169, 170, 172, 175, 177, 181, 182, 183, 192, 193, 194, 195, 204, 215, 216, 219, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 243, 255, 257, 259, 263, 265, 279, 285, 287, 288, 292, 293, 294, 303, 306, 307, 316, 317, 319, 320, 324, 326, 328, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 354, 357, 364, 365, 422, 423, 424, 426, 428, 429, 445, 483, 486, 489, 490, 493, 495, 496, 499, 500, 504, 517, 518, 519, 524, 526, 539, 540, 541, 542, 545, 547, 548, 550, 551, 558, 559, 566, 594, 595, 597, 598, 603, 604, 605, 606, 607, 609, 610, 614, 619, 620, 635, 636, 638, 641, 648, 649, 650, 651, 653, 654, 656, 658, 660, 661, 669, 671, 686, 698, 732, 733, 735, 736, 737, 749, 761, 766, 770, 771, 772, 773, 774, 775, 777, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 824, 836, 852, 853, 860, 866, 867, 868, 871, 875, 879, 881, 883, 888, 889, 890, 891, 896, 898, 902, 941, 948, 949], "altern": [30, 141, 187, 188, 195, 198, 218, 226, 228, 229, 232, 239, 246, 255, 269, 270, 273, 282, 288, 291, 302, 303, 309, 317, 322, 324, 325, 328, 331, 332, 333, 334, 340, 423, 483, 490, 550, 551, 576, 597, 635, 636, 651, 693, 697, 773, 784, 786, 787, 789, 790, 834, 853, 868, 875, 879, 888, 891, 896, 898, 936, 948, 954], "forc": [30, 149, 187, 192, 197, 204, 228, 285, 309, 317, 323, 331, 332, 333, 334, 376, 387, 433, 445, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 550, 551, 576, 603, 697, 784, 786, 787, 788, 789, 790, 834, 941], "choic": [30, 141, 181, 186, 196, 197, 210, 229, 234, 244, 257, 317, 320, 344, 523, 533, 614, 777, 946], "discrimin": [30, 35, 44, 109, 223, 270, 277, 317, 483, 487, 490, 636], "between": [30, 34, 36, 42, 45, 48, 52, 53, 62, 64, 66, 71, 73, 85, 87, 96, 108, 109, 114, 123, 126, 127, 130, 135, 140, 141, 149, 155, 159, 160, 162, 163, 166, 167, 170, 172, 175, 176, 177, 182, 183, 184, 186, 187, 188, 191, 192, 195, 196, 197, 198, 202, 204, 212, 215, 216, 217, 218, 219, 222, 223, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 273, 277, 283, 284, 285, 288, 290, 291, 292, 294, 295, 298, 302, 304, 307, 308, 309, 310, 312, 316, 317, 319, 320, 323, 324, 325, 326, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 354, 376, 380, 386, 388, 389, 410, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 483, 484, 489, 495, 499, 502, 504, 506, 507, 509, 517, 524, 527, 528, 545, 547, 548, 550, 551, 570, 575, 595, 596, 609, 611, 614, 618, 619, 620, 633, 636, 638, 639, 641, 644, 646, 647, 648, 651, 652, 653, 654, 655, 656, 660, 661, 664, 669, 670, 671, 675, 677, 698, 701, 702, 725, 734, 735, 736, 737, 739, 741, 744, 745, 748, 749, 752, 754, 755, 756, 758, 759, 763, 764, 771, 772, 774, 775, 776, 779, 784, 785, 788, 791, 793, 794, 796, 801, 802, 805, 809, 810, 812, 813, 814, 816, 817, 824, 834, 836, 840, 852, 854, 855, 857, 860, 862, 866, 869, 870, 871, 872, 873, 875, 889, 890, 893, 894, 896, 899, 900, 902, 907, 927, 936, 948, 950, 956], "stimuli": [30, 45, 96, 143, 149, 155, 167, 170, 172, 175, 177, 192, 206, 218, 222, 231, 240, 277, 317, 319, 489, 639], "whole": [30, 54, 80, 81, 97, 188, 227, 255, 277, 285, 291, 309, 317, 338, 339, 342, 345, 346, 347, 517, 590, 671, 688, 733, 750, 784, 785, 834, 862, 896, 950], "vari": [30, 45, 48, 72, 73, 85, 167, 181, 217, 222, 229, 232, 233, 236, 237, 239, 252, 255, 294, 308, 312, 317, 320, 331, 332, 336, 338, 339, 342, 345, 346, 347, 410, 411, 412, 413, 414, 415, 506, 507, 517, 553, 736, 775, 859], "discern": [30, 317], "observ": [30, 102, 128, 139, 163, 170, 177, 182, 232, 234, 238, 239, 255, 257, 259, 260, 263, 265, 270, 316, 317, 319, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 522, 550, 551, 636, 765, 770, 771, 772, 773, 774, 775, 784, 786, 787, 788, 789, 790, 791, 792, 793, 889], "similar": [30, 42, 43, 44, 45, 46, 53, 59, 84, 87, 97, 114, 130, 136, 139, 141, 157, 162, 163, 166, 167, 168, 169, 170, 176, 186, 196, 223, 226, 227, 229, 231, 232, 233, 234, 235, 238, 243, 251, 255, 257, 260, 268, 277, 279, 281, 282, 283, 285, 290, 291, 294, 303, 304, 309, 310, 312, 317, 318, 320, 324, 329, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 364, 423, 432, 484, 499, 517, 524, 550, 551, 585, 633, 636, 651, 660, 739, 784, 788, 789, 790, 824, 834, 851, 870, 892, 948, 949, 956], "approach": [30, 36, 45, 47, 70, 71, 72, 85, 100, 102, 130, 167, 169, 170, 175, 176, 177, 182, 186, 189, 190, 191, 192, 193, 198, 206, 212, 222, 223, 226, 227, 229, 230, 231, 232, 235, 237, 239, 252, 255, 256, 259, 261, 270, 273, 277, 290, 310, 316, 317, 318, 319, 320, 336, 434, 459, 556, 593, 636, 653, 669, 678, 722, 852, 904, 950, 956], "across": [30, 42, 43, 44, 45, 46, 52, 53, 54, 58, 59, 73, 80, 81, 84, 87, 106, 109, 110, 130, 134, 136, 140, 141, 161, 163, 166, 167, 168, 169, 171, 175, 176, 179, 181, 188, 191, 192, 194, 198, 206, 223, 226, 227, 229, 231, 232, 233, 234, 235, 237, 239, 246, 250, 251, 255, 263, 264, 265, 269, 277, 279, 280, 281, 283, 287, 288, 290, 291, 293, 294, 301, 303, 309, 312, 316, 317, 319, 320, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 385, 409, 428, 429, 483, 486, 490, 492, 493, 495, 496, 497, 508, 517, 550, 551, 553, 600, 612, 613, 618, 633, 636, 638, 641, 651, 698, 708, 728, 749, 775, 779, 784, 785, 786, 787, 788, 789, 790, 797, 804, 813, 814, 816, 817, 836, 851, 855, 860, 867, 868, 870, 871, 875, 888, 890, 894, 897, 900, 915, 936, 956], "signal": [30, 34, 35, 36, 39, 41, 42, 45, 47, 53, 54, 68, 71, 77, 84, 85, 86, 90, 97, 98, 100, 101, 102, 104, 108, 111, 114, 127, 130, 138, 140, 141, 148, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 188, 191, 192, 198, 201, 204, 206, 210, 212, 216, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 235, 240, 241, 242, 243, 244, 246, 252, 253, 254, 255, 260, 271, 277, 282, 284, 285, 287, 288, 291, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 307, 316, 317, 319, 323, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 346, 347, 367, 369, 410, 412, 416, 417, 420, 423, 424, 425, 426, 428, 433, 441, 450, 475, 476, 483, 485, 487, 488, 489, 490, 491, 494, 495, 504, 507, 516, 517, 518, 519, 521, 522, 523, 524, 550, 551, 559, 566, 572, 602, 603, 604, 617, 633, 634, 635, 636, 637, 638, 645, 647, 648, 649, 652, 653, 654, 657, 660, 662, 670, 671, 692, 701, 703, 706, 725, 728, 748, 750, 751, 770, 771, 784, 786, 787, 788, 789, 790, 791, 792, 793, 801, 802, 804, 805, 809, 811, 812, 813, 815, 816, 818, 834, 860, 866, 868, 870, 875, 876, 878, 879, 880, 881, 883, 889, 890, 936, 956], "continuum": [30, 299, 317], "span": [30, 108, 146, 162, 166, 167, 175, 176, 177, 191, 192, 194, 204, 218, 226, 230, 241, 242, 243, 245, 246, 268, 270, 285, 306, 308, 316, 317, 318, 320, 325, 331, 332, 333, 334, 336, 550, 551, 633, 638, 639, 662, 698, 776, 784, 786, 787, 789, 790, 804, 851, 853, 890, 896, 956], "increas": [30, 37, 58, 81, 97, 139, 177, 198, 219, 229, 232, 233, 238, 239, 252, 257, 260, 270, 284, 285, 286, 292, 293, 300, 305, 317, 320, 330, 331, 332, 333, 334, 341, 524, 550, 551, 562, 636, 660, 679, 771, 772, 774, 775, 784, 788, 802, 812, 813, 814, 815, 816, 817, 818, 834, 839, 866, 883, 889], "word": [30, 128, 169, 177, 181, 194, 201, 223, 229, 233, 234, 237, 255, 256, 270, 277, 309, 317, 319, 320, 464, 489, 815, 818, 834, 849], "g": [30, 34, 54, 57, 63, 67, 68, 70, 95, 96, 97, 106, 107, 110, 123, 128, 139, 141, 142, 147, 154, 163, 166, 167, 169, 176, 177, 181, 186, 187, 188, 192, 194, 195, 196, 197, 206, 215, 216, 217, 222, 223, 226, 228, 229, 230, 231, 232, 233, 235, 240, 243, 244, 250, 251, 255, 256, 260, 263, 265, 269, 270, 273, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 297, 298, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 316, 317, 319, 320, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 364, 365, 366, 371, 378, 380, 381, 386, 395, 397, 408, 420, 423, 427, 428, 434, 439, 440, 441, 450, 456, 459, 464, 475, 476, 483, 485, 486, 489, 490, 492, 493, 494, 497, 498, 499, 502, 503, 504, 507, 512, 515, 516, 517, 519, 521, 522, 524, 525, 526, 527, 533, 539, 542, 544, 545, 547, 548, 549, 550, 551, 552, 564, 590, 592, 596, 597, 598, 603, 609, 610, 611, 614, 618, 619, 620, 622, 635, 636, 638, 639, 646, 647, 650, 651, 652, 653, 654, 659, 660, 663, 666, 667, 671, 677, 678, 679, 686, 691, 698, 705, 706, 711, 718, 719, 720, 721, 722, 723, 729, 731, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 752, 755, 769, 770, 771, 772, 773, 774, 775, 779, 780, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 802, 812, 815, 817, 818, 834, 836, 840, 849, 852, 853, 854, 860, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 879, 880, 882, 883, 887, 888, 889, 890, 891, 894, 896, 898, 899, 902, 926, 929, 936, 939, 941, 943, 946, 948, 952], "easi": [30, 159, 188, 192, 208, 215, 218, 227, 232, 235, 243, 245, 270, 306, 309, 317, 318, 319, 320, 341, 430, 489, 936, 948], "while": [30, 36, 52, 71, 101, 103, 109, 113, 134, 163, 167, 168, 169, 170, 176, 177, 184, 186, 192, 198, 204, 205, 215, 219, 226, 227, 232, 234, 235, 237, 245, 252, 255, 259, 263, 270, 273, 277, 281, 284, 286, 288, 301, 305, 309, 310, 312, 317, 319, 320, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 489, 490, 491, 500, 517, 526, 527, 545, 547, 548, 550, 551, 581, 606, 614, 636, 637, 648, 649, 653, 654, 661, 784, 788, 813, 814, 816, 817, 860, 866, 870, 874, 876, 883, 889, 892, 902, 945, 947], "low": [30, 31, 37, 45, 71, 73, 85, 97, 101, 107, 108, 109, 110, 121, 137, 141, 167, 169, 177, 192, 193, 206, 209, 212, 215, 218, 223, 227, 230, 232, 237, 238, 239, 255, 257, 259, 264, 277, 284, 286, 291, 294, 301, 302, 303, 309, 310, 316, 317, 319, 320, 323, 326, 330, 331, 332, 333, 334, 336, 373, 423, 428, 485, 491, 494, 496, 518, 519, 521, 550, 551, 559, 562, 576, 603, 636, 641, 644, 648, 649, 653, 654, 660, 661, 662, 664, 665, 675, 737, 741, 746, 777, 778, 784, 788, 814, 817, 834, 866, 889, 936], "hard": [30, 141, 168, 232, 252, 281, 303, 309, 317, 318, 432, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 595, 936], "extens": [30, 38, 69, 70, 162, 166, 177, 184, 186, 196, 216, 217, 219, 223, 244, 245, 284, 286, 291, 293, 294, 301, 312, 316, 317, 320, 323, 331, 332, 333, 334, 364, 365, 398, 399, 405, 490, 513, 514, 516, 550, 551, 558, 565, 568, 579, 671, 689, 698, 702, 785, 806, 834, 926, 945, 946], "veri": [30, 36, 70, 71, 76, 87, 90, 96, 97, 106, 109, 141, 159, 167, 170, 177, 183, 186, 194, 198, 207, 212, 227, 229, 230, 231, 232, 233, 234, 237, 252, 255, 264, 270, 309, 318, 319, 320, 364, 388, 507, 550, 770, 787, 790, 802, 812, 945], "ll": [30, 33, 36, 45, 52, 60, 80, 85, 94, 97, 141, 142, 143, 144, 147, 149, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 184, 186, 188, 192, 193, 194, 196, 197, 198, 205, 206, 207, 217, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 243, 244, 245, 246, 250, 252, 256, 257, 259, 265, 268, 269, 273, 274, 309, 936, 950], "begin": [30, 45, 100, 120, 177, 182, 192, 194, 195, 197, 198, 201, 215, 218, 222, 226, 228, 229, 230, 231, 232, 233, 234, 239, 245, 250, 270, 302, 307, 309, 320, 325, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 350, 354, 428, 512, 525, 550, 551, 579, 595, 609, 619, 620, 636, 639, 653, 654, 660, 661, 664, 671, 701, 702, 751, 784, 788, 789, 799, 869, 880, 881, 883, 890, 896, 934], "littl": [30, 186, 197, 212, 215, 229, 230, 232, 233, 252, 270, 274, 320, 945], "you": [30, 50, 53, 54, 67, 69, 73, 76, 85, 87, 105, 108, 109, 114, 130, 136, 140, 141, 142, 143, 144, 146, 147, 148, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 204, 206, 207, 208, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 243, 244, 245, 246, 250, 252, 255, 257, 258, 260, 263, 265, 268, 269, 270, 273, 274, 277, 290, 293, 294, 302, 308, 309, 311, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 330, 331, 332, 333, 334, 336, 337, 338, 341, 342, 344, 346, 348, 350, 356, 358, 364, 365, 381, 386, 396, 397, 398, 422, 423, 427, 428, 431, 432, 439, 440, 441, 446, 459, 483, 489, 490, 500, 507, 510, 516, 518, 524, 526, 527, 535, 542, 545, 547, 548, 550, 551, 552, 563, 567, 575, 578, 601, 603, 614, 635, 636, 653, 660, 662, 672, 689, 695, 733, 748, 764, 779, 784, 786, 787, 788, 789, 790, 802, 812, 832, 835, 836, 838, 852, 853, 857, 859, 866, 867, 871, 876, 879, 881, 882, 883, 889, 894, 906, 936, 937, 939, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951], "first": [30, 31, 33, 36, 37, 42, 45, 47, 54, 55, 58, 64, 65, 67, 68, 69, 70, 71, 73, 90, 97, 98, 106, 109, 110, 113, 114, 117, 121, 122, 130, 131, 135, 136, 139, 140, 141, 142, 147, 149, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 175, 176, 177, 182, 183, 185, 186, 187, 188, 192, 193, 194, 195, 197, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 215, 217, 218, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 270, 273, 277, 281, 282, 284, 285, 288, 290, 291, 292, 293, 294, 301, 303, 304, 316, 317, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 351, 352, 355, 363, 364, 365, 370, 385, 390, 391, 423, 431, 432, 439, 445, 456, 483, 489, 490, 498, 506, 507, 508, 511, 512, 514, 515, 517, 521, 522, 523, 524, 525, 531, 533, 541, 549, 550, 551, 572, 575, 576, 590, 596, 597, 602, 606, 612, 613, 631, 635, 636, 637, 639, 641, 644, 646, 651, 656, 657, 680, 685, 697, 698, 701, 705, 716, 728, 734, 736, 737, 740, 742, 743, 758, 759, 760, 765, 769, 770, 771, 772, 774, 775, 776, 778, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 821, 824, 834, 840, 843, 852, 860, 864, 866, 867, 868, 869, 872, 873, 875, 879, 880, 881, 883, 888, 889, 890, 891, 894, 896, 898, 899, 926, 927, 936, 939, 941, 942, 950], "limo_epoch": 30, "note": [30, 39, 42, 44, 47, 52, 73, 97, 101, 109, 120, 131, 136, 139, 141, 148, 161, 162, 166, 167, 168, 169, 171, 175, 177, 178, 182, 184, 186, 188, 192, 193, 194, 195, 196, 197, 198, 203, 206, 207, 208, 209, 216, 217, 219, 222, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 239, 243, 244, 245, 250, 251, 259, 260, 263, 264, 265, 270, 277, 303, 309, 310, 316, 319, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 360, 364, 365, 367, 369, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 385, 386, 387, 388, 389, 390, 396, 397, 398, 400, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 427, 428, 429, 430, 433, 434, 436, 439, 442, 443, 450, 456, 457, 458, 459, 460, 462, 475, 476, 482, 483, 485, 486, 487, 489, 490, 491, 492, 493, 495, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 533, 534, 536, 539, 540, 541, 542, 543, 544, 549, 550, 551, 552, 553, 559, 563, 564, 566, 567, 568, 570, 572, 574, 575, 576, 579, 581, 582, 583, 588, 590, 591, 592, 593, 595, 597, 598, 599, 601, 603, 604, 605, 606, 607, 609, 610, 611, 614, 616, 618, 619, 620, 622, 623, 635, 636, 637, 638, 639, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 657, 659, 660, 663, 667, 671, 672, 677, 678, 679, 680, 681, 685, 686, 689, 691, 693, 694, 695, 697, 698, 701, 702, 703, 705, 706, 708, 711, 717, 719, 720, 722, 723, 724, 725, 728, 730, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 753, 761, 764, 765, 766, 767, 770, 771, 772, 773, 774, 775, 777, 779, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 808, 812, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 828, 829, 832, 834, 835, 836, 838, 845, 851, 852, 853, 854, 855, 857, 859, 860, 861, 863, 864, 866, 867, 868, 869, 870, 872, 873, 875, 876, 877, 879, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 905, 906, 907, 908, 922, 926, 927, 928, 929, 930, 931, 936, 938, 943, 947, 949], "1055": 30, "good": [30, 31, 47, 57, 75, 97, 98, 100, 103, 107, 108, 109, 117, 120, 144, 151, 163, 166, 167, 169, 172, 177, 183, 192, 193, 194, 195, 197, 203, 210, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 257, 263, 265, 270, 273, 277, 284, 291, 293, 294, 308, 309, 310, 317, 320, 321, 326, 329, 331, 332, 333, 334, 336, 364, 365, 367, 369, 395, 413, 423, 427, 428, 439, 440, 441, 483, 485, 490, 491, 496, 499, 526, 527, 540, 542, 545, 547, 548, 550, 551, 595, 614, 627, 630, 633, 635, 636, 638, 641, 643, 646, 651, 652, 655, 660, 679, 686, 694, 705, 711, 752, 770, 779, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 814, 816, 817, 864, 866, 867, 870, 876, 890, 897, 936, 937, 942, 949, 951], "299944": 30, "499907": 30, "213": [30, 61, 195, 236, 248, 252, 255, 259, 956], "524": [30, 45, 260], "b": [30, 34, 36, 38, 48, 54, 63, 64, 70, 124, 137, 138, 155, 163, 229, 232, 233, 238, 244, 246, 252, 255, 256, 259, 263, 264, 265, 270, 273, 277, 282, 284, 309, 317, 320, 323, 326, 331, 332, 333, 334, 338, 339, 341, 342, 343, 345, 346, 347, 354, 423, 429, 450, 475, 476, 504, 518, 520, 550, 551, 619, 620, 653, 654, 701, 702, 737, 765, 767, 770, 778, 784, 788, 799, 813, 814, 816, 817, 834, 860, 866, 889, 896, 936], "531": [30, 656, 658], "visualis": [30, 53, 55, 56, 74, 75, 76, 80, 81, 104, 111, 128, 191, 202, 238, 261, 262, 325, 331, 333, 334, 336, 386, 392, 422, 551, 581, 674, 678, 694, 775, 956], "distribut": [30, 45, 48, 52, 72, 74, 80, 81, 85, 87, 99, 143, 171, 176, 181, 188, 191, 192, 203, 213, 214, 218, 232, 234, 255, 257, 260, 263, 264, 269, 270, 277, 291, 303, 310, 316, 317, 319, 320, 328, 329, 331, 332, 333, 334, 335, 336, 340, 342, 433, 547, 550, 551, 602, 603, 614, 644, 678, 692, 701, 703, 716, 732, 736, 766, 769, 771, 772, 774, 775, 786, 787, 789, 790, 834, 844, 852, 864, 897, 904, 936, 948, 949, 956], "should": [30, 31, 42, 45, 47, 66, 67, 90, 97, 108, 114, 117, 120, 147, 148, 159, 161, 162, 166, 167, 168, 170, 177, 178, 182, 183, 184, 186, 187, 191, 193, 198, 203, 206, 208, 209, 210, 217, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 250, 259, 260, 268, 270, 274, 277, 281, 282, 284, 286, 287, 291, 294, 302, 303, 304, 308, 309, 310, 312, 316, 317, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 396, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 493, 494, 495, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 533, 534, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 632, 635, 636, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 681, 683, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 746, 748, 749, 750, 752, 754, 755, 756, 757, 758, 759, 760, 761, 766, 771, 772, 773, 774, 775, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 804, 805, 808, 809, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 829, 830, 833, 834, 836, 837, 839, 843, 845, 852, 853, 854, 855, 859, 860, 861, 863, 864, 866, 867, 868, 869, 870, 871, 872, 875, 876, 879, 880, 881, 882, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 905, 906, 907, 908, 914, 915, 916, 917, 918, 919, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 941, 942, 945, 946, 947, 948, 951], "appear": [30, 121, 128, 166, 170, 184, 194, 198, 206, 209, 218, 226, 229, 230, 235, 245, 293, 302, 309, 317, 319, 320, 323, 331, 332, 333, 334, 336, 341, 504, 550, 551, 559, 562, 566, 590, 854, 892], "clearli": [30, 47, 170, 178, 192, 218, 230, 232, 234, 236, 273], "suptitl": [30, 44, 48, 63, 68, 71, 97, 100, 106, 113, 117, 130, 136, 139, 143, 147, 159, 167, 170, 172, 177, 186, 202, 218, 222, 227, 229, 230, 232, 233, 234, 235, 237, 238, 255, 304], "seen": [30, 38, 53, 101, 166, 169, 170, 172, 176, 177, 182, 195, 196, 223, 226, 230, 233, 234, 238, 239, 243, 246, 309, 320, 321, 364, 490, 736, 737, 814, 817], "abov": [30, 47, 68, 69, 71, 75, 87, 97, 101, 102, 108, 114, 134, 141, 143, 166, 168, 170, 176, 177, 182, 186, 187, 192, 193, 194, 196, 197, 198, 201, 215, 217, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 243, 244, 246, 250, 252, 259, 260, 270, 277, 309, 316, 319, 320, 321, 325, 328, 331, 332, 333, 334, 336, 344, 422, 483, 485, 490, 494, 507, 513, 514, 516, 519, 521, 550, 551, 552, 559, 581, 635, 636, 638, 660, 670, 680, 771, 772, 774, 775, 784, 786, 787, 789, 790, 814, 817, 824, 834, 852, 860, 867, 868, 875, 879, 881, 891, 892, 896, 898, 936, 939, 942], "These": [30, 53, 71, 80, 81, 87, 97, 121, 163, 164, 170, 171, 173, 177, 179, 181, 184, 186, 188, 189, 191, 192, 193, 196, 198, 199, 204, 206, 213, 215, 216, 217, 219, 220, 222, 223, 224, 228, 229, 232, 236, 238, 241, 246, 247, 252, 253, 255, 256, 261, 266, 270, 271, 275, 281, 294, 309, 310, 312, 316, 317, 319, 320, 321, 322, 331, 332, 333, 334, 336, 348, 373, 374, 393, 423, 427, 428, 429, 502, 550, 551, 599, 636, 646, 660, 671, 702, 741, 746, 770, 784, 786, 787, 788, 789, 790, 936, 949], "easili": [30, 69, 70, 128, 166, 170, 175, 186, 194, 196, 215, 217, 226, 229, 232, 234, 235, 243, 244, 245, 246, 263, 270, 296, 297, 309, 312, 316, 320, 510, 550, 551, 660, 770, 949], "access": [30, 78, 128, 158, 184, 192, 194, 195, 201, 219, 233, 240, 243, 245, 246, 268, 277, 283, 287, 290, 297, 298, 302, 309, 310, 318, 324, 326, 331, 332, 335, 344, 550, 551, 695, 697, 786, 787, 788, 789, 790, 815, 818, 948], "shown": [30, 58, 78, 97, 106, 109, 121, 128, 145, 147, 162, 168, 175, 176, 177, 182, 184, 188, 192, 198, 206, 208, 229, 233, 238, 240, 243, 244, 246, 260, 273, 274, 284, 290, 291, 292, 293, 294, 298, 302, 304, 305, 306, 308, 320, 321, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 380, 483, 490, 542, 550, 551, 585, 614, 635, 636, 651, 784, 786, 787, 788, 789, 790, 834, 836, 852, 853, 854, 860, 861, 863, 864, 866, 868, 870, 871, 872, 873, 874, 875, 877, 879, 883, 886, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 906], "conveni": [30, 37, 71, 97, 102, 163, 168, 177, 184, 187, 192, 195, 197, 198, 207, 212, 223, 226, 229, 233, 234, 244, 250, 255, 256, 257, 260, 263, 264, 265, 269, 277, 282, 283, 287, 293, 298, 302, 308, 309, 316, 317, 320, 331, 332, 333, 334, 335, 341, 549, 550, 551, 557, 585, 609, 636, 644, 653, 654, 725, 728, 730, 774, 775, 784, 786, 787, 788, 789, 790, 849, 946, 947], "491210": 30, "235572": 30, "043707": 30, "642398": 30, "659978": 30, "now": [30, 45, 50, 52, 58, 67, 71, 76, 97, 99, 101, 110, 113, 114, 136, 138, 139, 140, 147, 160, 161, 162, 163, 166, 167, 170, 171, 172, 177, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 198, 202, 204, 205, 206, 208, 209, 212, 222, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 245, 252, 257, 259, 260, 263, 264, 265, 269, 270, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 320, 329, 331, 332, 333, 334, 388, 536, 550, 551, 728, 835, 857, 864], "closer": [30, 50, 67, 136, 167, 184, 237, 255, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 733, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "want": [30, 67, 76, 109, 121, 139, 142, 147, 161, 162, 166, 167, 168, 169, 170, 171, 175, 176, 177, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 204, 206, 216, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 250, 251, 255, 257, 259, 260, 263, 264, 270, 273, 274, 309, 310, 320, 323, 324, 331, 332, 333, 334, 336, 338, 342, 346, 386, 446, 507, 512, 550, 551, 636, 653, 802, 812, 859, 889, 894, 906, 936, 937, 939, 942, 945, 949, 950], "column": [30, 36, 57, 121, 122, 128, 139, 166, 167, 169, 171, 177, 192, 198, 201, 215, 223, 234, 237, 238, 243, 255, 256, 281, 282, 285, 286, 291, 294, 298, 306, 312, 319, 320, 325, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 366, 395, 439, 483, 490, 507, 511, 512, 524, 525, 541, 550, 551, 596, 615, 618, 631, 635, 636, 637, 689, 696, 697, 698, 705, 769, 770, 784, 786, 787, 788, 789, 790, 834, 868, 869, 875, 876, 879, 887, 888, 891, 896, 926], "tabl": [30, 67, 151, 169, 170, 197, 198, 211, 216, 229, 243, 244, 268, 288, 302, 307, 319, 320, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 535, 536, 550, 551, 614, 733, 834, 855, 860, 867, 894, 899, 900, 901, 905, 931, 939], "epochs_summari": 30, "describ": [30, 39, 42, 101, 126, 140, 144, 175, 177, 182, 184, 188, 191, 192, 194, 195, 196, 197, 198, 215, 219, 222, 226, 228, 233, 234, 235, 237, 238, 244, 245, 252, 253, 256, 261, 270, 277, 293, 310, 312, 316, 319, 320, 333, 334, 364, 422, 423, 429, 483, 491, 504, 507, 515, 550, 551, 563, 635, 636, 637, 671, 707, 734, 754, 755, 756, 757, 758, 759, 760, 800, 802, 805, 812, 876, 882, 936, 941, 955], "round": [30, 63, 136, 166, 171, 175, 186, 194, 198, 212, 222, 229, 230, 232, 233, 239, 243, 252, 270, 285, 291, 293, 302, 304, 308, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 512, 550, 551, 784, 788], "count": [30, 48, 97, 99, 166, 197, 238, 245, 255, 259, 263, 265, 290, 293, 294, 301, 306, 307, 308, 325, 326, 331, 332, 333, 334, 364, 365, 423, 427, 428, 437, 438, 439, 440, 441, 483, 490, 506, 526, 527, 545, 547, 548, 595, 614, 646, 694, 771, 772, 774, 775, 876, 955], "uniqu": [30, 36, 44, 128, 169, 176, 177, 192, 194, 244, 255, 260, 303, 306, 307, 320, 325, 329, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 389, 437, 512, 541, 550, 551, 597, 636, 695, 757, 760, 784, 786, 787, 788, 789, 790, 814, 817, 860, 870], "nan": [30, 96, 97, 170, 237, 257, 258, 259, 260, 270, 285, 286, 290, 291, 294, 302, 304, 308, 331, 332, 333, 334, 550, 551, 581, 642, 660], "top": [30, 139, 142, 149, 162, 166, 177, 184, 186, 187, 198, 202, 207, 212, 219, 227, 230, 232, 233, 234, 235, 243, 245, 246, 255, 273, 274, 281, 309, 319, 320, 323, 331, 332, 333, 334, 339, 345, 347, 834, 835, 836, 854, 866, 870, 871, 899], "freq": [30, 35, 47, 58, 59, 60, 95, 131, 134, 136, 139, 141, 159, 163, 192, 212, 222, 226, 229, 230, 239, 250, 257, 258, 259, 260, 268, 269, 270, 272, 283, 284, 312, 323, 410, 412, 496, 522, 550, 551, 620, 764, 784, 785, 786, 787, 788, 789, 790, 800, 802, 804, 805, 810, 812, 813, 814, 815, 816, 817, 859, 877, 884, 956], "std": [30, 42, 177, 218, 252, 265, 268, 269, 270, 331, 332, 333, 334, 382, 483, 490, 550, 551, 591, 784, 860, 867, 870, 873, 890], "min": [30, 35, 47, 48, 123, 124, 134, 139, 141, 143, 162, 163, 167, 172, 183, 198, 212, 222, 226, 232, 234, 243, 255, 256, 257, 258, 259, 260, 263, 264, 265, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 389, 483, 485, 490, 494, 516, 519, 521, 550, 551, 635, 636, 648, 661, 662, 664, 666, 675, 679, 680, 784, 786, 787, 789, 790, 845, 853, 867, 868, 875, 879, 888, 889, 890, 891, 894, 896, 897, 898, 899], "619": [30, 260], "852": 30, "084": 30, "875": [30, 39, 169, 208, 236, 320], "642": [30, 85, 223, 246, 248, 277, 548, 956], "ran": [30, 260, 336], "There": [30, 101, 109, 147, 149, 167, 170, 177, 182, 184, 185, 192, 196, 197, 198, 203, 206, 217, 219, 226, 228, 229, 230, 232, 233, 237, 239, 240, 243, 245, 255, 268, 273, 309, 317, 320, 331, 475, 507, 636, 678, 733, 936, 937, 938, 946, 949], "subdivid": [30, 186, 187, 287, 323, 338, 342, 346, 455, 732, 894], "particular": [30, 53, 154, 166, 167, 181, 192, 194, 198, 201, 222, 223, 229, 232, 233, 243, 257, 265, 310, 320, 321, 323, 325, 331, 332, 341, 371, 500, 527, 550, 551, 559, 706, 764, 771, 772, 774, 775, 866, 889, 936], "addit": [30, 60, 68, 71, 87, 88, 97, 102, 108, 139, 141, 161, 166, 168, 171, 176, 178, 182, 186, 187, 188, 192, 196, 215, 216, 217, 218, 222, 223, 228, 229, 232, 233, 234, 235, 237, 239, 240, 243, 245, 246, 250, 260, 270, 282, 283, 287, 290, 291, 303, 308, 309, 311, 312, 316, 317, 320, 323, 328, 331, 332, 333, 334, 338, 339, 342, 343, 344, 345, 346, 347, 375, 377, 403, 422, 423, 428, 456, 483, 484, 485, 488, 490, 491, 494, 504, 507, 514, 516, 521, 550, 551, 557, 603, 604, 605, 606, 607, 609, 610, 616, 619, 620, 633, 634, 635, 636, 637, 648, 649, 672, 701, 727, 738, 770, 771, 772, 774, 775, 783, 784, 786, 787, 788, 789, 790, 805, 813, 814, 816, 817, 834, 849, 853, 866, 868, 870, 875, 881, 887, 889, 891, 894, 896, 898, 899, 936, 939, 945, 946, 948, 949], "score": [30, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 101, 109, 163, 198, 222, 223, 232, 237, 281, 284, 287, 291, 306, 317, 341, 483, 486, 489, 490, 493, 500, 636, 641, 651, 660, 740, 771, 772, 774, 775, 882, 905, 936], "thei": [30, 31, 52, 67, 71, 73, 76, 97, 98, 101, 108, 109, 121, 134, 141, 146, 166, 167, 168, 170, 175, 177, 178, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 202, 206, 207, 208, 215, 217, 218, 219, 223, 226, 227, 228, 229, 230, 232, 233, 234, 237, 238, 239, 240, 243, 244, 245, 246, 260, 263, 277, 281, 282, 283, 284, 286, 290, 294, 297, 303, 304, 305, 309, 310, 316, 318, 319, 320, 324, 326, 331, 332, 333, 334, 336, 341, 364, 375, 377, 393, 402, 423, 430, 432, 504, 506, 512, 516, 518, 525, 550, 551, 559, 566, 572, 574, 576, 582, 595, 612, 613, 625, 636, 647, 655, 660, 671, 686, 694, 695, 697, 728, 787, 788, 829, 834, 853, 869, 870, 873, 931, 941, 945, 949], "deviat": [30, 80, 81, 117, 124, 127, 148, 176, 177, 204, 223, 232, 236, 255, 257, 269, 282, 291, 319, 320, 328, 331, 332, 333, 334, 354, 382, 483, 618, 619, 620, 636, 660, 746, 766, 784, 786, 787, 788, 789, 790, 802, 812, 813, 816, 845, 860, 861, 867, 870, 876, 879, 881, 896, 897], "how": [30, 31, 35, 36, 39, 44, 45, 48, 52, 53, 57, 59, 69, 70, 71, 73, 84, 89, 91, 93, 94, 95, 96, 97, 98, 102, 105, 117, 121, 122, 125, 126, 132, 140, 143, 144, 147, 150, 152, 153, 156, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 209, 212, 215, 217, 219, 222, 223, 228, 229, 230, 231, 232, 233, 235, 236, 238, 240, 243, 244, 246, 247, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 265, 268, 269, 270, 273, 275, 277, 282, 283, 284, 287, 291, 294, 302, 303, 304, 306, 309, 310, 312, 316, 317, 319, 320, 321, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 344, 345, 346, 347, 364, 365, 376, 380, 381, 406, 411, 417, 434, 435, 436, 443, 483, 489, 490, 495, 510, 525, 527, 541, 542, 545, 547, 548, 550, 551, 556, 563, 564, 572, 573, 576, 585, 603, 612, 613, 614, 635, 636, 639, 647, 660, 671, 672, 713, 714, 715, 716, 724, 728, 771, 772, 774, 775, 782, 784, 785, 786, 787, 788, 789, 790, 805, 834, 835, 836, 843, 852, 853, 857, 860, 862, 866, 867, 868, 871, 875, 879, 880, 881, 882, 888, 889, 891, 894, 895, 896, 898, 899, 904, 906, 939, 941, 943, 950, 956], "onli": [30, 34, 36, 37, 38, 45, 47, 48, 57, 60, 65, 67, 70, 71, 73, 75, 76, 81, 90, 97, 101, 105, 108, 109, 114, 117, 120, 121, 122, 123, 124, 130, 134, 136, 139, 141, 142, 143, 144, 147, 157, 159, 162, 163, 166, 167, 168, 169, 175, 176, 177, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 206, 209, 212, 215, 216, 217, 218, 219, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 298, 301, 302, 303, 305, 306, 307, 308, 309, 310, 316, 317, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 393, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 502, 504, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 531, 533, 534, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 632, 633, 634, 635, 636, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 711, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 730, 732, 733, 735, 736, 737, 738, 747, 748, 749, 750, 752, 754, 755, 756, 757, 758, 759, 760, 761, 770, 771, 772, 773, 774, 775, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 803, 804, 805, 808, 809, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 829, 833, 834, 836, 843, 852, 853, 854, 855, 857, 860, 861, 864, 866, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 883, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 905, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 941, 946, 949], "500": [30, 36, 37, 48, 97, 106, 107, 109, 112, 114, 143, 161, 167, 169, 171, 207, 210, 217, 219, 221, 222, 223, 229, 232, 236, 238, 239, 240, 252, 260, 636, 956], "ts_arg": [30, 128, 155, 223, 238, 256, 286, 331, 332, 333, 334, 636, 867, 873, 881], "xlim": [30, 45, 63, 65, 124, 186, 207, 212, 222, 229, 230, 238, 239, 252, 255, 265, 270, 273, 333, 334, 870, 872], "plot_joint": [30, 98, 128, 176, 177, 192, 206, 208, 212, 223, 226, 232, 234, 238, 256, 269, 287, 291, 293, 305, 333, 334, 784, 939], "titl": [30, 34, 35, 41, 42, 45, 48, 56, 61, 65, 68, 69, 70, 72, 73, 74, 75, 76, 80, 81, 85, 96, 97, 98, 103, 108, 112, 117, 121, 128, 130, 134, 135, 136, 137, 141, 147, 151, 153, 158, 163, 167, 168, 170, 172, 177, 178, 186, 198, 201, 202, 203, 205, 206, 222, 223, 227, 229, 230, 232, 233, 234, 235, 239, 252, 255, 256, 257, 260, 265, 269, 270, 273, 277, 284, 285, 286, 287, 291, 292, 293, 294, 302, 303, 304, 305, 306, 308, 309, 314, 329, 331, 332, 333, 334, 336, 338, 341, 342, 346, 550, 551, 635, 636, 784, 786, 787, 789, 790, 834, 856, 859, 860, 864, 865, 866, 867, 868, 870, 872, 873, 874, 877, 879, 880, 882, 883, 884, 889, 891, 892, 894, 897, 903], "differ": [30, 35, 42, 47, 48, 53, 54, 59, 63, 65, 70, 71, 73, 80, 81, 90, 95, 97, 104, 106, 107, 111, 121, 123, 126, 128, 130, 134, 137, 138, 139, 141, 147, 150, 151, 156, 160, 161, 163, 166, 168, 169, 170, 173, 175, 176, 177, 178, 182, 184, 186, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 207, 209, 210, 211, 215, 216, 217, 218, 223, 226, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 250, 255, 256, 257, 258, 260, 263, 264, 265, 269, 273, 274, 277, 279, 283, 286, 288, 291, 293, 294, 297, 300, 301, 302, 303, 306, 309, 312, 316, 317, 318, 319, 320, 325, 326, 331, 332, 333, 334, 335, 336, 338, 339, 342, 345, 346, 347, 348, 364, 365, 366, 371, 388, 410, 423, 427, 428, 430, 432, 433, 439, 440, 441, 460, 475, 483, 490, 492, 504, 506, 507, 517, 524, 526, 527, 541, 542, 545, 547, 548, 550, 551, 559, 566, 574, 588, 595, 609, 611, 612, 613, 614, 623, 636, 638, 646, 647, 653, 660, 669, 671, 685, 688, 694, 695, 698, 702, 725, 735, 736, 737, 738, 744, 747, 748, 749, 750, 766, 771, 772, 773, 774, 775, 783, 784, 785, 786, 787, 788, 789, 790, 802, 812, 834, 840, 852, 862, 866, 870, 871, 874, 875, 876, 881, 883, 889, 892, 894, 900, 910, 927, 936, 941, 946, 950, 956], "wave": [30, 72, 122, 141, 163, 170, 177, 192, 229, 234, 256, 268, 277, 317, 331, 332, 333, 334, 475, 476, 550, 551, 584, 648, 653, 661, 786, 789, 798, 804], "contrast": [30, 33, 114, 123, 126, 175, 177, 192, 196, 235, 252, 255, 256, 263, 268, 269, 295, 312, 317, 330, 331, 332, 333, 334, 784, 788, 939], "although": [30, 47, 92, 128, 166, 169, 175, 187, 198, 228, 229, 231, 233, 243, 303, 320, 329, 516, 550, 551, 766, 949], "shouldn": [30, 177, 277, 342, 345, 623], "expect": [30, 58, 64, 121, 141, 148, 170, 182, 185, 187, 188, 191, 192, 193, 198, 206, 212, 217, 223, 229, 232, 233, 234, 238, 243, 244, 250, 252, 255, 259, 260, 265, 270, 294, 303, 306, 309, 310, 311, 319, 320, 321, 331, 332, 333, 334, 398, 400, 405, 427, 550, 551, 558, 567, 571, 579, 614, 636, 671, 695, 696, 700, 711, 722, 834, 866, 876, 883, 889, 936, 941], "among": [30, 36, 53, 62, 82, 198, 229, 255, 288, 291, 310, 342, 344, 433, 613, 615, 617, 636, 660, 703, 706, 764, 834, 840, 952, 956], "minu": [30, 167, 170, 257, 270, 320, 636, 725, 769], "difference_wav": 30, "weight": [30, 31, 33, 37, 41, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 80, 81, 84, 85, 87, 100, 101, 117, 121, 126, 131, 134, 135, 136, 137, 151, 163, 167, 170, 175, 177, 183, 192, 194, 202, 203, 204, 205, 206, 207, 208, 211, 215, 218, 222, 223, 227, 229, 230, 231, 233, 234, 235, 238, 251, 252, 255, 256, 258, 263, 264, 265, 277, 282, 284, 285, 287, 288, 291, 298, 301, 304, 316, 317, 319, 323, 336, 337, 342, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 422, 434, 487, 488, 489, 501, 504, 527, 528, 545, 547, 548, 562, 603, 609, 610, 614, 635, 636, 669, 740, 741, 746, 747, 750, 771, 772, 774, 775, 779, 793, 796, 804, 868, 891, 939], "clear": [30, 101, 140, 144, 166, 183, 227, 231, 233, 237, 239, 240, 252, 255, 288, 309, 312, 328, 331, 332, 336, 355, 370, 550, 551, 602, 656, 821, 834, 867], "pattern": [30, 37, 43, 45, 46, 47, 53, 72, 106, 109, 139, 140, 168, 169, 187, 192, 193, 198, 222, 226, 229, 232, 233, 234, 238, 270, 277, 279, 283, 284, 299, 301, 309, 316, 317, 320, 331, 332, 333, 334, 336, 341, 380, 396, 432, 443, 483, 487, 489, 490, 491, 498, 501, 507, 512, 533, 566, 568, 578, 633, 637, 698, 711, 721, 722, 737, 784, 786, 787, 788, 956], "when": [30, 47, 53, 54, 57, 70, 71, 72, 73, 87, 97, 101, 102, 107, 108, 109, 110, 117, 121, 122, 130, 134, 142, 149, 154, 166, 168, 169, 170, 171, 172, 175, 176, 177, 183, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 204, 206, 208, 210, 215, 216, 217, 218, 219, 223, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 255, 257, 260, 268, 269, 273, 274, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 316, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 354, 364, 365, 377, 380, 384, 385, 407, 416, 417, 418, 422, 423, 427, 428, 429, 430, 432, 434, 439, 440, 441, 442, 445, 483, 490, 491, 494, 500, 502, 504, 508, 510, 512, 515, 517, 518, 519, 521, 522, 524, 526, 527, 530, 533, 542, 545, 547, 548, 550, 551, 559, 564, 566, 567, 568, 572, 574, 576, 578, 581, 603, 604, 605, 606, 607, 609, 610, 614, 619, 620, 622, 625, 635, 636, 638, 641, 646, 647, 650, 651, 653, 656, 660, 661, 663, 664, 671, 672, 686, 689, 691, 695, 697, 699, 701, 714, 720, 722, 723, 724, 728, 733, 734, 745, 748, 771, 772, 773, 774, 775, 779, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 795, 798, 802, 804, 812, 824, 831, 834, 836, 843, 844, 853, 860, 864, 866, 868, 869, 870, 871, 872, 873, 875, 876, 878, 879, 881, 883, 886, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 902, 904, 915, 916, 927, 929, 936, 937, 939, 941, 945, 946, 948], "howev": [30, 42, 47, 71, 97, 101, 102, 166, 168, 172, 175, 188, 193, 195, 196, 197, 198, 216, 217, 218, 219, 222, 223, 227, 229, 231, 232, 233, 234, 235, 239, 240, 243, 244, 255, 257, 259, 260, 263, 265, 270, 281, 302, 309, 310, 320, 331, 332, 336, 364, 380, 423, 475, 504, 566, 568, 584, 603, 773, 936, 947], "could": [30, 54, 55, 56, 64, 65, 67, 69, 96, 110, 131, 166, 170, 177, 186, 187, 192, 195, 197, 198, 201, 205, 206, 207, 218, 226, 228, 232, 233, 234, 235, 237, 243, 244, 245, 250, 255, 256, 263, 265, 270, 279, 281, 282, 285, 287, 288, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 309, 310, 312, 331, 332, 333, 334, 336, 337, 342, 364, 450, 475, 476, 482, 504, 506, 510, 526, 550, 551, 552, 559, 636, 639, 654, 661, 662, 685, 838, 843, 922, 936], "narrow": [30, 226, 230, 270, 304, 341], "search": [30, 177, 182, 223, 277, 309, 341, 344, 364, 486, 493, 510, 531, 639, 644, 651, 802, 812, 813, 816, 852, 916, 936, 948], "bit": [30, 31, 33, 136, 167, 170, 186, 197, 206, 212, 216, 229, 231, 236, 239, 255, 263, 265, 270, 273, 274, 301, 317, 320, 331, 332, 336, 410, 550, 551, 559, 566, 573, 941, 942, 948], "sinc": [30, 45, 58, 69, 70, 97, 121, 142, 146, 161, 166, 167, 168, 170, 177, 186, 192, 193, 195, 197, 198, 201, 204, 212, 215, 216, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 240, 243, 244, 245, 250, 255, 258, 263, 265, 270, 274, 280, 287, 309, 312, 316, 320, 325, 326, 331, 332, 333, 334, 337, 341, 342, 345, 357, 380, 423, 427, 428, 504, 513, 514, 515, 516, 527, 539, 550, 551, 598, 623, 636, 647, 653, 660, 671, 771, 772, 773, 774, 775, 853, 936], "paradigm": [30, 33, 170, 188, 192, 226, 229, 300, 301, 317, 869], "might": [30, 31, 45, 47, 97, 147, 167, 170, 177, 182, 187, 188, 193, 194, 219, 223, 229, 232, 235, 255, 260, 263, 270, 273, 290, 309, 311, 316, 320, 338, 342, 346, 400, 507, 553, 622, 636, 679, 771, 894, 936, 941, 942], "best": [30, 31, 36, 42, 100, 109, 148, 161, 168, 175, 188, 192, 202, 203, 204, 206, 219, 222, 228, 232, 237, 252, 309, 310, 311, 312, 318, 320, 337, 423, 428, 491, 550, 551, 651, 740, 742, 743, 835, 936, 948, 950], "electrod": [30, 53, 94, 104, 105, 111, 145, 147, 150, 156, 161, 164, 167, 169, 176, 185, 187, 191, 192, 196, 213, 214, 218, 222, 226, 229, 231, 235, 237, 243, 255, 274, 277, 283, 284, 285, 288, 290, 291, 294, 301, 302, 303, 304, 306, 312, 316, 317, 319, 328, 331, 332, 333, 334, 335, 336, 340, 342, 348, 380, 381, 384, 394, 396, 398, 399, 400, 401, 402, 403, 406, 423, 435, 443, 483, 490, 524, 535, 542, 550, 551, 557, 559, 561, 566, 572, 574, 582, 598, 602, 603, 614, 635, 636, 644, 651, 666, 668, 670, 699, 728, 784, 786, 787, 788, 789, 790, 826, 834, 835, 852, 853, 856, 858, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898, 904, 906, 956], "over": [30, 31, 34, 35, 38, 47, 53, 54, 71, 72, 84, 85, 94, 97, 106, 107, 130, 131, 134, 136, 139, 140, 142, 150, 156, 161, 162, 163, 175, 176, 177, 185, 187, 188, 192, 195, 198, 201, 202, 218, 219, 227, 229, 232, 234, 237, 239, 245, 246, 252, 255, 256, 259, 260, 268, 270, 277, 282, 284, 285, 288, 302, 303, 308, 309, 310, 317, 318, 319, 320, 323, 325, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 358, 359, 362, 375, 389, 411, 423, 429, 483, 490, 492, 494, 522, 525, 550, 551, 589, 605, 607, 610, 619, 620, 636, 640, 657, 672, 685, 698, 733, 734, 759, 771, 780, 784, 786, 787, 788, 789, 790, 797, 805, 818, 834, 849, 867, 868, 878, 883, 936, 949, 956], "occipit": [30, 73, 75, 195, 231, 240, 270, 317, 320, 718], "lobe": [30, 73, 161, 162, 206], "easier": [30, 166, 168, 170, 176, 177, 182, 198, 218, 223, 227, 229, 232, 233, 234, 235, 283, 291, 309, 325, 442, 941], "spot": [30, 227, 230, 259, 284, 307, 341], "area": [30, 31, 80, 97, 121, 143, 149, 161, 204, 218, 219, 223, 227, 232, 240, 245, 251, 255, 259, 270, 279, 291, 309, 320, 331, 332, 333, 334, 337, 550, 551, 656, 658, 666, 745, 784, 858, 860, 870, 872, 890], "dictionari": [30, 36, 53, 62, 82, 85, 121, 142, 162, 166, 167, 168, 170, 171, 175, 176, 177, 192, 193, 195, 215, 232, 234, 237, 240, 243, 244, 250, 273, 277, 291, 292, 323, 325, 326, 328, 331, 332, 333, 334, 335, 336, 340, 341, 342, 344, 355, 364, 365, 366, 370, 378, 380, 392, 393, 408, 423, 427, 428, 434, 437, 438, 439, 440, 441, 443, 483, 485, 490, 494, 507, 510, 512, 515, 518, 519, 521, 522, 524, 526, 527, 545, 546, 547, 548, 549, 550, 551, 553, 586, 597, 602, 614, 636, 646, 648, 649, 651, 653, 656, 659, 660, 691, 698, 703, 714, 716, 719, 725, 733, 770, 784, 821, 824, 834, 836, 859, 860, 866, 867, 869, 871, 876, 879, 881, 889, 895, 949, 956], "concentr": [30, 217, 233, 238, 251, 290, 488, 609, 610, 673, 678, 793, 796, 804, 868], "b11": 30, "ylim": [30, 33, 35, 45, 61, 65, 66, 72, 77, 85, 86, 126, 139, 141, 177, 186, 222, 229, 231, 238, 239, 255, 265, 270, 273, 284, 293, 301, 333, 334, 860, 870, 874], "pretti": [30, 167, 170, 229, 232, 234, 936], "determin": [30, 48, 108, 155, 167, 171, 177, 187, 192, 195, 197, 204, 212, 217, 229, 231, 237, 243, 244, 245, 255, 258, 260, 281, 282, 283, 285, 291, 301, 305, 320, 325, 328, 329, 331, 332, 333, 334, 336, 339, 340, 345, 347, 350, 364, 365, 373, 380, 382, 410, 417, 423, 427, 428, 439, 440, 441, 456, 483, 489, 490, 491, 500, 522, 526, 527, 545, 547, 548, 550, 551, 563, 590, 594, 614, 636, 666, 669, 671, 676, 677, 699, 718, 776, 802, 812, 814, 817, 834, 864, 866, 867, 872, 874, 875, 876, 877, 886, 893, 899, 922, 936, 949], "whether": [30, 39, 108, 167, 170, 171, 172, 197, 204, 206, 223, 227, 232, 233, 237, 270, 283, 284, 285, 305, 309, 320, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 354, 364, 365, 380, 389, 390, 391, 392, 394, 423, 428, 433, 456, 463, 483, 490, 505, 516, 524, 542, 549, 550, 551, 553, 562, 570, 595, 603, 604, 605, 606, 607, 610, 612, 613, 614, 618, 619, 620, 635, 636, 637, 645, 651, 653, 654, 656, 660, 661, 662, 666, 669, 672, 686, 725, 728, 748, 749, 771, 772, 774, 775, 784, 785, 786, 787, 788, 789, 790, 792, 795, 798, 834, 836, 844, 853, 857, 860, 862, 864, 865, 866, 867, 868, 870, 871, 874, 875, 879, 881, 883, 886, 888, 889, 890, 891, 892, 894, 896, 897, 898, 899, 902, 906, 936, 948], "stronger": [30, 167, 218, 257, 265, 333, 334, 870], "along": [30, 45, 72, 94, 142, 146, 162, 166, 168, 186, 192, 194, 196, 204, 212, 222, 223, 226, 227, 231, 232, 235, 236, 243, 245, 246, 252, 263, 284, 287, 290, 299, 309, 312, 317, 319, 320, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 354, 483, 486, 490, 493, 494, 496, 523, 541, 542, 547, 550, 551, 635, 636, 688, 763, 764, 771, 772, 774, 775, 778, 784, 786, 787, 788, 789, 790, 834, 836, 852, 853, 860, 866, 867, 868, 871, 875, 879, 888, 891, 892, 894, 896, 897, 898, 899, 941, 942], "phase_coh": 30, "sort": [30, 33, 41, 47, 53, 73, 121, 148, 150, 156, 163, 169, 186, 196, 255, 282, 287, 331, 332, 333, 334, 336, 341, 392, 423, 428, 491, 509, 512, 536, 567, 636, 706, 785, 788, 867, 870, 872, 931, 950, 956], "2f": [30, 85, 183, 338, 339, 342, 345, 346, 347, 636, 834, 879, 894, 899], "zip": [30, 35, 36, 48, 53, 73, 107, 117, 134, 140, 141, 147, 163, 166, 176, 186, 191, 206, 222, 227, 229, 230, 232, 233, 235, 255, 256, 257, 258, 259, 260, 265, 269, 273, 309, 457, 575, 953], "c22": 30, "subplot": [30, 36, 37, 38, 39, 41, 45, 47, 48, 65, 67, 71, 73, 84, 95, 96, 97, 98, 99, 100, 108, 112, 117, 120, 123, 126, 131, 134, 139, 140, 141, 142, 143, 147, 149, 162, 163, 168, 170, 172, 177, 186, 196, 198, 202, 203, 206, 207, 209, 212, 222, 223, 229, 234, 237, 238, 239, 246, 252, 255, 256, 257, 258, 259, 260, 269, 270, 273, 274, 291, 294, 297, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 802, 812, 834, 858, 859, 868, 869, 874, 875, 879, 884, 888, 891, 896, 898, 901], "figsiz": [30, 38, 41, 45, 48, 71, 73, 97, 100, 123, 139, 140, 141, 142, 147, 162, 170, 186, 198, 202, 209, 212, 222, 229, 234, 237, 238, 252, 255, 256, 258, 259, 260, 269, 270, 273, 636, 881, 882], "cmap": [30, 35, 36, 39, 41, 42, 45, 48, 67, 97, 127, 128, 134, 136, 139, 141, 142, 143, 147, 149, 162, 169, 186, 208, 222, 223, 237, 255, 257, 258, 259, 260, 269, 307, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 785, 786, 787, 789, 790, 845, 851, 853, 860, 862, 867, 868, 872, 875, 878, 879, 888, 891, 892, 896, 897, 898, 907], "magma": 30, "consider": [30, 107, 126, 177, 228, 229, 232, 239, 251, 260, 277, 284, 312, 320, 341, 770, 949], "chosen": [30, 71, 163, 171, 177, 212, 226, 229, 231, 232, 234, 268, 320, 325, 328, 331, 332, 333, 334, 336, 339, 340, 344, 345, 347, 427, 483, 485, 490, 494, 496, 519, 521, 522, 541, 550, 551, 588, 611, 635, 636, 651, 669, 688, 736, 737, 771, 772, 774, 775, 784, 785, 786, 787, 788, 789, 790, 802, 812, 834, 852, 853, 862, 866, 868, 872, 875, 879, 882, 888, 889, 890, 891, 892, 896, 898], "test": [30, 34, 36, 39, 41, 42, 45, 52, 53, 117, 122, 125, 129, 139, 151, 155, 161, 166, 177, 191, 194, 197, 198, 215, 222, 223, 236, 237, 243, 256, 257, 258, 261, 262, 265, 266, 267, 270, 277, 280, 284, 286, 287, 288, 290, 292, 298, 300, 302, 307, 308, 312, 317, 320, 331, 332, 333, 334, 336, 342, 343, 344, 356, 358, 364, 386, 429, 456, 486, 500, 504, 506, 522, 550, 551, 560, 581, 585, 602, 603, 611, 617, 633, 636, 660, 671, 698, 711, 713, 756, 762, 764, 766, 768, 771, 772, 773, 774, 775, 776, 777, 778, 784, 786, 787, 788, 789, 790, 816, 834, 843, 857, 860, 868, 875, 882, 896, 936, 941, 943, 946, 956], "interpol": [30, 41, 50, 53, 87, 97, 104, 111, 113, 117, 120, 121, 122, 146, 149, 161, 162, 177, 203, 207, 215, 223, 232, 237, 240, 252, 255, 268, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 294, 296, 298, 300, 301, 302, 303, 304, 305, 307, 308, 328, 331, 332, 333, 334, 340, 344, 346, 347, 483, 490, 517, 540, 550, 551, 635, 636, 651, 655, 657, 663, 670, 701, 733, 735, 736, 737, 749, 784, 786, 787, 789, 790, 822, 834, 836, 853, 868, 871, 875, 879, 888, 891, 896, 898, 949, 956], "miss": [30, 70, 96, 110, 149, 161, 177, 184, 185, 206, 209, 215, 217, 229, 235, 240, 270, 281, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 301, 302, 303, 304, 305, 307, 308, 309, 319, 331, 332, 333, 334, 336, 344, 384, 407, 457, 475, 489, 550, 551, 559, 566, 572, 657, 671, 770, 869, 870, 946, 949, 950], "furthermor": [30, 181, 201, 204, 216, 231, 316, 320], "mark": [30, 34, 37, 75, 101, 105, 109, 119, 120, 138, 147, 154, 161, 163, 168, 170, 176, 177, 192, 195, 196, 197, 204, 212, 216, 217, 218, 228, 229, 232, 233, 235, 236, 237, 238, 243, 245, 246, 260, 273, 277, 279, 280, 281, 287, 291, 294, 299, 301, 303, 305, 306, 307, 308, 309, 317, 318, 319, 324, 326, 331, 332, 333, 334, 382, 441, 450, 458, 475, 476, 540, 542, 549, 550, 551, 635, 636, 641, 644, 650, 651, 655, 660, 670, 671, 679, 686, 695, 697, 725, 784, 786, 787, 788, 789, 790, 830, 856, 866, 868, 875, 880, 882, 889, 890, 896], "exg": 30, "prefix": [30, 101, 181, 196, 201, 319, 323, 328, 331, 332, 333, 334, 340, 424, 425, 483, 490, 550, 551, 559, 566, 567, 635, 636, 651, 684, 695, 784, 786, 787, 789, 790, 853, 875, 879, 888, 891, 896], "interpolate_bad": [30, 97, 105, 227, 284, 286, 287, 290, 291, 320, 331, 332, 333, 334, 540, 550, 551], "reset_bad": [30, 105, 227, 320, 331, 332, 333, 334, 550, 551], "exg1": 30, "exg2": 30, "exg3": 30, "exg4": 30, "spline": [30, 97, 98, 105, 177, 227, 277, 281, 301, 320, 331, 332, 333, 334, 550, 551, 645], "524face": 30, "To": [30, 31, 37, 44, 45, 48, 59, 70, 71, 114, 117, 121, 122, 140, 143, 149, 159, 163, 166, 168, 170, 172, 175, 176, 177, 182, 184, 185, 186, 187, 192, 194, 195, 196, 197, 198, 201, 204, 206, 210, 212, 215, 217, 218, 219, 222, 223, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 245, 246, 250, 252, 255, 257, 259, 260, 264, 265, 269, 273, 281, 291, 294, 299, 301, 302, 303, 309, 310, 314, 316, 317, 318, 320, 323, 325, 326, 331, 332, 333, 334, 337, 341, 346, 347, 364, 365, 423, 427, 428, 489, 496, 507, 513, 514, 515, 516, 518, 524, 550, 551, 559, 564, 570, 583, 588, 592, 598, 636, 650, 653, 660, 662, 667, 669, 671, 686, 688, 703, 729, 733, 736, 737, 738, 744, 747, 748, 750, 771, 772, 773, 774, 775, 777, 792, 795, 802, 811, 812, 813, 814, 815, 816, 817, 818, 832, 834, 853, 866, 879, 881, 883, 889, 900, 901, 928, 936, 939, 941, 942, 945, 946, 948, 950], "predict": [30, 36, 38, 39, 41, 42, 43, 46, 53, 68, 128, 163, 167, 202, 222, 223, 277, 294, 302, 317, 336, 364, 380, 396, 443, 486, 489, 493, 495, 500, 523, 551, 604, 611, 898, 956], "purpos": [30, 34, 37, 38, 47, 140, 166, 167, 175, 182, 194, 206, 216, 226, 227, 228, 229, 232, 233, 235, 259, 263, 265, 270, 277, 310, 316, 317, 319, 331, 332, 447, 448, 449, 450, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 494, 496, 550, 551, 852, 866, 889, 938, 939, 949], "intercept": [30, 128, 769], "predictor_var": 30, "where": [30, 36, 39, 57, 71, 95, 97, 101, 107, 108, 109, 117, 121, 122, 128, 139, 163, 166, 167, 168, 170, 175, 177, 181, 186, 191, 192, 193, 194, 195, 196, 198, 201, 208, 209, 210, 215, 217, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 245, 250, 251, 252, 255, 257, 259, 260, 263, 264, 265, 270, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 344, 345, 346, 347, 387, 389, 390, 391, 403, 422, 442, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 490, 496, 498, 517, 519, 522, 524, 550, 551, 588, 611, 635, 636, 638, 645, 651, 653, 654, 655, 671, 734, 740, 741, 742, 743, 744, 746, 748, 749, 764, 765, 770, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 802, 812, 813, 814, 816, 817, 834, 840, 852, 853, 854, 857, 858, 859, 866, 867, 868, 875, 879, 888, 889, 890, 891, 896, 898, 902, 936, 943, 945, 946, 948], "func": [30, 279, 282, 309, 338, 339, 342, 345, 346, 347, 559, 566, 574, 582], "reg": [30, 34, 35, 38, 47, 60, 75, 206, 252, 279, 283, 287, 320, 364, 365, 483, 490, 491, 637], "design_matrix": [30, 167, 769], "25728": 30, "target": [30, 43, 46, 53, 75, 104, 111, 128, 155, 167, 187, 223, 230, 232, 255, 256, 270, 284, 298, 309, 331, 333, 334, 336, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 500, 509, 550, 564, 596, 633, 636, 637, 698, 956], "regressor": [30, 96, 128, 223, 255, 769], "getattr": [30, 802, 812], "_field": [30, 167], "beta": [30, 38, 45, 58, 59, 60, 121, 128, 137, 139, 140, 142, 163, 167, 255, 269, 331, 332, 333, 334, 550, 551, 686, 769, 786, 787, 789, 790, 868], "stderr": [30, 167, 769], "t_val": [30, 167, 256, 769], "p_val": [30, 128, 167, 257, 258, 280, 765, 769], "mlog10_p_val": [30, 167, 280, 769], "just": [30, 31, 54, 58, 59, 67, 68, 70, 74, 76, 85, 97, 101, 108, 109, 128, 130, 136, 140, 141, 142, 147, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 177, 182, 184, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 203, 205, 206, 207, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 252, 256, 257, 260, 263, 264, 265, 269, 270, 291, 304, 306, 309, 318, 320, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 344, 345, 346, 347, 380, 483, 490, 517, 518, 550, 551, 567, 611, 635, 636, 646, 651, 670, 684, 695, 784, 786, 787, 789, 790, 830, 853, 860, 866, 868, 870, 872, 875, 876, 879, 883, 886, 888, 889, 890, 891, 892, 896, 898, 906, 941, 946, 950], "would": [30, 31, 45, 69, 70, 97, 166, 169, 170, 176, 177, 181, 182, 186, 187, 198, 201, 207, 217, 218, 223, 226, 228, 229, 230, 231, 232, 233, 234, 237, 250, 255, 256, 257, 260, 263, 265, 270, 281, 282, 284, 286, 287, 290, 291, 292, 293, 294, 302, 303, 305, 306, 307, 308, 310, 319, 320, 331, 332, 333, 334, 338, 339, 342, 344, 345, 346, 347, 357, 364, 365, 423, 427, 428, 439, 440, 441, 450, 456, 475, 476, 483, 490, 504, 505, 506, 518, 526, 527, 533, 545, 547, 548, 550, 551, 566, 601, 614, 636, 647, 671, 720, 784, 788, 834, 870, 875, 876, 889, 948], "higher": [30, 52, 64, 70, 80, 96, 101, 121, 167, 177, 210, 212, 219, 223, 226, 228, 230, 232, 237, 251, 257, 260, 270, 284, 294, 309, 320, 341, 671, 802, 812, 946, 947], "better": [30, 35, 45, 69, 87, 97, 121, 168, 172, 177, 209, 210, 222, 229, 231, 232, 237, 240, 255, 277, 281, 284, 285, 287, 290, 291, 292, 293, 302, 303, 309, 312, 320, 333, 334, 338, 339, 342, 345, 346, 347, 482, 651, 667, 671, 800, 802, 812, 834, 894, 899, 941], "visibl": [30, 73, 198, 218, 229, 230, 236, 245, 246, 270, 273, 285, 288, 319, 331, 332, 333, 334, 550, 551, 636, 724, 784, 834, 866, 872, 883, 889, 904], "neg": [30, 45, 48, 65, 98, 139, 141, 170, 176, 177, 188, 215, 218, 230, 232, 239, 255, 263, 270, 280, 283, 288, 294, 303, 317, 320, 328, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 353, 374, 483, 489, 490, 495, 502, 511, 525, 550, 551, 576, 635, 636, 656, 662, 669, 742, 743, 768, 784, 786, 787, 788, 789, 790, 855, 860, 866, 868, 875, 879, 888, 889, 891, 894, 896, 898, 900, 936], "around": [30, 75, 97, 102, 109, 121, 139, 167, 168, 170, 172, 177, 191, 192, 197, 198, 206, 209, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 240, 243, 250, 270, 319, 331, 332, 333, 334, 341, 427, 483, 490, 502, 507, 509, 550, 551, 588, 636, 648, 649, 653, 654, 688, 746, 784, 786, 787, 788, 789, 790, 860, 866, 872, 875, 876, 883, 889, 948], "200": [30, 35, 38, 73, 85, 102, 107, 117, 119, 122, 126, 136, 138, 141, 157, 161, 162, 168, 171, 172, 177, 184, 195, 198, 205, 207, 209, 212, 218, 223, 228, 230, 233, 234, 236, 240, 250, 255, 258, 259, 265, 269, 273, 277, 293, 316, 320, 410, 412, 416, 522, 550, 551, 609, 610, 636, 669, 949], "follow": [30, 50, 53, 58, 59, 60, 67, 68, 94, 96, 97, 106, 121, 130, 134, 136, 140, 143, 155, 161, 163, 167, 170, 177, 181, 184, 186, 187, 188, 194, 196, 198, 204, 206, 215, 216, 217, 219, 223, 228, 229, 230, 231, 235, 237, 239, 243, 244, 245, 250, 252, 255, 257, 259, 263, 265, 274, 278, 279, 280, 281, 282, 286, 288, 289, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 311, 316, 317, 319, 320, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 354, 355, 364, 365, 370, 371, 423, 434, 440, 456, 475, 483, 507, 509, 510, 521, 522, 523, 527, 549, 550, 551, 552, 557, 559, 566, 598, 602, 619, 620, 636, 653, 656, 660, 671, 672, 701, 711, 729, 765, 767, 769, 784, 786, 787, 788, 789, 790, 802, 812, 813, 816, 817, 821, 824, 830, 834, 836, 849, 860, 868, 873, 875, 896, 936, 939, 941, 942, 944, 946, 948, 950], "onset": [30, 34, 59, 60, 144, 161, 162, 163, 166, 170, 172, 192, 194, 212, 218, 228, 229, 231, 240, 245, 270, 286, 287, 288, 290, 293, 308, 317, 319, 324, 325, 331, 332, 423, 512, 524, 550, 551, 570, 639, 656, 685, 689, 791, 792, 793], "correspond": [30, 42, 57, 74, 76, 88, 99, 103, 114, 119, 121, 130, 139, 147, 163, 169, 170, 177, 181, 182, 184, 186, 194, 196, 198, 201, 206, 207, 208, 215, 218, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 243, 244, 245, 246, 257, 259, 260, 265, 270, 281, 282, 300, 303, 306, 309, 317, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 356, 364, 365, 367, 369, 372, 380, 390, 391, 392, 393, 403, 423, 427, 428, 431, 439, 440, 441, 450, 456, 475, 476, 483, 484, 486, 487, 489, 490, 493, 495, 499, 507, 512, 526, 527, 528, 536, 545, 547, 548, 550, 551, 559, 561, 563, 566, 571, 574, 576, 582, 583, 588, 592, 594, 597, 599, 601, 612, 613, 614, 635, 636, 637, 651, 653, 660, 661, 666, 696, 697, 700, 711, 724, 728, 733, 736, 749, 764, 765, 768, 769, 770, 771, 772, 774, 775, 776, 784, 785, 786, 787, 788, 789, 790, 798, 799, 805, 813, 816, 824, 825, 827, 834, 838, 845, 847, 849, 853, 854, 855, 860, 866, 867, 868, 870, 872, 874, 875, 876, 879, 888, 889, 891, 894, 896, 898, 899, 900, 936, 948], "unit": [30, 34, 40, 45, 47, 58, 109, 127, 130, 161, 162, 167, 182, 186, 194, 195, 206, 216, 217, 219, 227, 232, 234, 237, 243, 252, 257, 258, 260, 268, 269, 273, 277, 281, 282, 284, 285, 287, 288, 290, 291, 292, 293, 294, 301, 304, 305, 306, 308, 309, 319, 326, 328, 329, 330, 331, 332, 333, 334, 336, 340, 342, 364, 365, 373, 381, 398, 403, 405, 407, 428, 434, 443, 483, 485, 490, 492, 494, 504, 519, 521, 522, 527, 549, 550, 551, 553, 559, 561, 566, 567, 576, 636, 647, 653, 659, 660, 671, 684, 695, 734, 776, 784, 786, 787, 789, 790, 825, 827, 834, 845, 860, 867, 868, 870, 872, 875, 876, 888, 890, 896, 897, 904, 907, 955], "keep": [30, 37, 38, 53, 57, 87, 114, 131, 137, 138, 139, 163, 168, 171, 175, 177, 186, 187, 188, 191, 192, 195, 207, 212, 227, 228, 229, 230, 231, 232, 243, 244, 245, 250, 257, 287, 302, 303, 309, 310, 318, 323, 328, 331, 332, 333, 334, 358, 359, 362, 365, 441, 489, 507, 550, 551, 562, 605, 607, 610, 636, 672, 785, 798, 950], "avoid": [30, 34, 35, 54, 66, 85, 97, 114, 141, 163, 166, 177, 187, 192, 193, 195, 198, 209, 216, 218, 226, 229, 230, 234, 243, 245, 255, 268, 277, 279, 281, 285, 286, 287, 288, 290, 291, 294, 300, 302, 303, 306, 308, 310, 318, 320, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 423, 500, 512, 550, 551, 559, 566, 570, 574, 616, 636, 705, 711, 744, 747, 750, 766, 777, 778, 784, 788, 834, 894, 899, 936, 941, 946], "convers": [30, 182, 194, 216, 218, 219, 227, 229, 230, 285, 287, 290, 293, 299, 302, 305, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 550, 551, 576, 680, 771, 772, 774, 775, 784, 788], "micro": [30, 53, 104, 306, 331, 332, 333, 334, 550, 551], "volt": [30, 167, 232, 234, 250, 293, 320, 331, 332, 333, 334, 516, 550, 551], "topomap_arg": [30, 97, 128, 223, 238, 256, 286, 287, 333, 334, 636, 784, 856, 873, 881], "set_ylabel": [30, 38, 39, 47, 48, 71, 97, 123, 131, 139, 140, 142, 159, 170, 198, 209, 223, 229, 233, 258, 259, 260, 270, 274], "systemat": [30, 167, 188, 229, 277, 300, 486, 655, 936], "larg": [30, 36, 54, 97, 102, 106, 109, 110, 141, 147, 162, 168, 176, 177, 193, 197, 198, 204, 212, 223, 226, 227, 229, 230, 231, 233, 234, 235, 238, 239, 246, 255, 260, 263, 270, 277, 286, 290, 291, 292, 293, 294, 303, 305, 318, 331, 332, 337, 364, 423, 427, 428, 432, 492, 522, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 595, 616, 636, 638, 731, 771, 772, 774, 775, 834, 854, 901, 946], "consist": [30, 36, 69, 97, 103, 139, 151, 183, 184, 187, 194, 196, 201, 209, 216, 217, 218, 223, 227, 228, 229, 231, 232, 236, 255, 257, 258, 277, 281, 282, 283, 284, 285, 288, 290, 291, 292, 294, 300, 301, 303, 304, 305, 310, 316, 317, 319, 320, 323, 331, 332, 333, 334, 344, 348, 389, 438, 550, 551, 600, 636, 644, 651, 655, 736, 737, 769, 784, 786, 787, 788, 789, 790, 791, 792, 793], "guillaum": [30, 41, 114, 177, 183, 223, 229, 255, 277, 282, 287, 288, 290, 291, 292, 293, 294, 302, 303, 317, 637, 777, 778], "rousselet": [30, 177, 229, 277, 317], "2016": [30, 45, 72, 109, 140, 154, 222, 229, 277, 313, 317, 458, 459, 489, 547, 548, 636], "7488": [30, 277], "1556": [30, 58, 277], "carl": [30, 154, 277, 317, 458], "gaspar": [30, 277, 317], "cyril": [30, 277, 317], "pernet": [30, 277, 317], "jess": [30, 277, 317], "husk": [30, 277, 317], "patrick": [30, 277, 317, 320], "j": [30, 34, 38, 39, 44, 45, 47, 57, 61, 68, 70, 85, 86, 92, 97, 98, 101, 102, 109, 121, 126, 128, 140, 148, 154, 163, 170, 177, 181, 186, 188, 198, 204, 206, 222, 223, 229, 231, 232, 233, 234, 239, 255, 256, 260, 268, 277, 279, 281, 282, 286, 293, 314, 317, 320, 323, 331, 332, 333, 334, 337, 341, 342, 343, 364, 367, 369, 423, 429, 450, 459, 464, 476, 483, 487, 489, 490, 491, 501, 503, 545, 548, 550, 551, 603, 604, 611, 614, 618, 635, 636, 644, 645, 650, 651, 669, 675, 678, 741, 744, 746, 770, 771, 772, 774, 775, 777, 778, 786, 789, 798, 800, 802, 804, 812, 815, 818, 936], "bennett": [30, 277, 317], "allison": [30, 277, 317], "sekul": [30, 277, 317], "healthi": [30, 277, 317, 475, 476], "sensit": [30, 31, 33, 49, 51, 53, 108, 150, 156, 177, 184, 204, 230, 234, 239, 259, 265, 277, 298, 299, 301, 302, 310, 317, 331, 332, 333, 334, 335, 336, 341, 342, 344, 433, 527, 550, 551, 633, 636, 703, 709, 724, 752, 771, 772, 774, 775, 834, 956], "frontier": [30, 36, 45, 177, 222, 229, 277, 314, 317, 489, 641], "psychologi": [30, 36, 177, 229, 277, 317, 766], "2010": [30, 45, 121, 144, 181, 229, 277, 278, 317, 364, 423, 483, 815, 818], "3389": [30, 36, 45, 177, 222, 229, 277, 314, 317, 489, 641], "fpsyg": [30, 177, 229, 277, 317], "00019": [30, 277, 317], "studi": [30, 59, 97, 148, 170, 177, 187, 204, 206, 229, 231, 237, 252, 257, 259, 260, 277, 286, 316, 319, 320, 357, 364, 475, 476, 507], "bmc": [30, 42, 223, 277, 484, 499], "98": [30, 39, 41, 45, 59, 61, 68, 70, 73, 107, 139, 141, 144, 151, 163, 185, 195, 203, 206, 218, 223, 236, 252, 255, 256, 257, 258, 259, 260, 264, 265, 277, 357, 364, 411, 413, 671, 771, 772, 774, 775], "2008": [30, 36, 61, 70, 177, 196, 206, 232, 252, 255, 256, 277, 343, 364, 365, 406, 429, 483, 504, 522, 545, 618, 636, 744, 771, 772, 774, 775], "1186": [30, 42, 45, 223, 236, 277, 484, 499], "1471": [30, 42, 223, 277, 484, 499], "2202": [30, 42, 223, 277, 484, 499], "420": [30, 32, 61, 82, 107, 236, 260, 956], "632": [30, 123, 129, 260, 956], "limo_data": [30, 32, 956], "electr": [31, 192, 206, 226, 234, 235, 277, 316, 319, 364, 365, 636, 644, 856, 943], "deliv": 31, "left": [31, 36, 37, 39, 41, 49, 51, 53, 56, 57, 61, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 78, 80, 81, 83, 84, 85, 87, 88, 94, 98, 100, 105, 106, 109, 112, 113, 121, 134, 139, 143, 146, 147, 152, 155, 158, 160, 161, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 181, 182, 184, 186, 192, 194, 198, 201, 204, 206, 207, 208, 212, 218, 219, 222, 223, 231, 232, 233, 234, 235, 237, 244, 245, 246, 251, 252, 256, 259, 263, 264, 265, 268, 273, 274, 282, 285, 287, 306, 307, 308, 317, 319, 320, 324, 325, 327, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 380, 382, 392, 393, 403, 404, 429, 450, 456, 483, 490, 505, 507, 510, 517, 541, 548, 550, 551, 570, 575, 588, 601, 635, 636, 656, 659, 718, 723, 732, 733, 736, 747, 784, 786, 787, 788, 789, 790, 834, 852, 860, 866, 867, 868, 870, 872, 874, 875, 876, 879, 887, 888, 889, 890, 891, 896, 898, 900, 904, 956], "wrist": 31, "somatosensori": [31, 58, 60, 72, 140, 269, 277, 284, 292, 300, 463], "nine": [31, 168], "quspin": [31, 312], "serf": 31, "side": [31, 45, 58, 71, 97, 167, 182, 192, 231, 235, 263, 270, 288, 318, 320, 328, 329, 331, 332, 333, 334, 338, 340, 342, 346, 483, 490, 550, 551, 635, 636, 651, 660, 671, 769, 771, 772, 774, 775, 784, 785, 786, 787, 789, 790, 834, 853, 862, 864, 866, 868, 875, 879, 882, 888, 891, 894, 896, 898], "somatomotor": 31, "custom": [31, 53, 62, 82, 94, 136, 147, 149, 150, 154, 156, 166, 168, 171, 175, 176, 177, 193, 219, 229, 230, 231, 232, 234, 235, 240, 250, 260, 270, 282, 283, 284, 286, 291, 294, 300, 301, 302, 304, 305, 306, 309, 316, 317, 318, 319, 323, 328, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 345, 346, 347, 389, 393, 395, 456, 550, 551, 633, 636, 692, 701, 703, 764, 789, 828, 834, 849, 854, 855, 866, 873, 883, 889, 894, 895, 899, 900, 936, 956], "opm_sampl": [31, 136], "subjects_dir": [31, 33, 37, 48, 50, 52, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 95, 107, 117, 121, 122, 131, 136, 142, 143, 145, 152, 153, 154, 157, 160, 161, 162, 176, 181, 182, 183, 184, 185, 186, 187, 192, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 218, 223, 238, 251, 252, 263, 264, 265, 273, 274, 283, 294, 316, 320, 323, 329, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 371, 375, 376, 377, 380, 429, 434, 435, 436, 442, 455, 457, 458, 459, 460, 502, 533, 535, 537, 539, 541, 542, 543, 544, 588, 592, 594, 622, 623, 667, 688, 706, 708, 715, 720, 721, 722, 723, 732, 733, 747, 750, 761, 779, 780, 826, 833, 834, 852, 854, 864, 894, 899, 900, 931, 948], "raw_fnam": [31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 52, 58, 59, 60, 68, 71, 72, 75, 96, 97, 99, 100, 101, 103, 108, 109, 114, 120, 123, 124, 126, 127, 134, 135, 137, 138, 140, 144, 146, 148, 158, 159, 167, 178, 182, 184, 185, 188, 203, 206, 209, 211, 223, 231, 252, 257, 258, 259, 260, 263, 265, 269, 317, 320], "opm_sef_raw": 31, "bem_fnam": [31, 71, 95, 136], "5120": [31, 33, 52, 67, 71, 76, 95, 136, 176, 184, 185, 202, 207, 208, 274, 316, 323, 482, 592, 598, 749], "sol": [31, 33, 48, 52, 67, 71, 76, 95, 136, 184, 185, 202, 207, 208, 316, 323, 335, 598, 749], "fwd_fname": [31, 48, 57, 61, 66, 72, 77, 85, 86, 95, 117, 119, 120, 121, 122, 206, 218, 252], "fwd": [31, 37, 48, 52, 57, 58, 59, 60, 61, 66, 68, 69, 71, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 117, 119, 120, 121, 122, 136, 157, 184, 185, 198, 201, 202, 203, 204, 205, 206, 208, 218, 223, 251, 252, 316, 320, 323, 335, 342, 351, 352, 353, 433, 517, 529, 530, 597, 598, 703, 724, 748, 749, 834, 852, 928], "coil_def_fnam": 31, "coil_def": [31, 136, 317, 320], "dat": [31, 136, 237, 290, 291, 317, 320, 400, 565, 583, 647, 660, 671, 682, 687], "h_trans_bandwidth": [31, 47, 140, 141, 218, 229, 238, 282, 301, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 675], "notch_width": [31, 239, 522, 550, 551], "threshold": [31, 56, 60, 64, 101, 108, 123, 139, 147, 171, 177, 191, 192, 197, 198, 208, 210, 212, 215, 218, 227, 228, 232, 234, 237, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 283, 284, 285, 286, 291, 294, 297, 298, 299, 300, 301, 303, 316, 320, 323, 326, 331, 332, 333, 334, 336, 376, 386, 392, 422, 426, 427, 522, 550, 551, 570, 576, 618, 636, 638, 641, 648, 651, 653, 654, 660, 661, 662, 664, 666, 676, 694, 731, 740, 741, 742, 743, 744, 745, 746, 767, 768, 771, 772, 774, 775, 776, 788, 834, 860, 865, 866, 882, 956], "larger": [31, 75, 85, 97, 176, 205, 223, 226, 229, 231, 237, 246, 257, 270, 288, 310, 320, 331, 332, 341, 346, 347, 527, 550, 551, 570, 638, 662, 680, 779, 814, 815, 817, 818, 866, 889, 897, 900], "squid": [31, 136, 239, 277, 317, 319, 320], "257": [31, 39, 123, 139, 142, 195, 196, 223, 236, 317], "mask": [31, 54, 57, 108, 123, 127, 128, 139, 147, 168, 211, 229, 233, 251, 255, 256, 257, 258, 259, 260, 279, 282, 284, 285, 291, 292, 300, 301, 324, 328, 331, 332, 333, 334, 340, 483, 489, 490, 524, 550, 551, 559, 635, 636, 651, 698, 771, 772, 774, 775, 784, 786, 787, 789, 790, 853, 868, 872, 875, 879, 888, 891, 896, 898, 936], "mask_typ": [31, 211, 282, 284, 324, 524, 559, 698], "error": [31, 36, 39, 64, 68, 80, 81, 117, 120, 136, 141, 160, 161, 162, 166, 170, 175, 178, 183, 188, 197, 198, 207, 209, 211, 212, 215, 222, 223, 228, 229, 232, 235, 239, 240, 255, 256, 259, 277, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 300, 302, 303, 304, 305, 306, 307, 308, 309, 316, 317, 320, 326, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 351, 352, 384, 407, 417, 418, 423, 427, 430, 432, 434, 439, 440, 475, 502, 517, 518, 530, 531, 533, 550, 551, 567, 572, 618, 636, 647, 656, 660, 670, 671, 689, 691, 695, 720, 722, 730, 741, 744, 746, 762, 768, 769, 773, 784, 786, 787, 788, 789, 790, 831, 832, 834, 867, 869, 880, 927, 929, 936, 942, 948, 951], "suppress": [31, 39, 53, 64, 75, 104, 110, 111, 162, 171, 176, 177, 197, 206, 210, 215, 226, 227, 229, 230, 231, 234, 239, 277, 288, 294, 303, 304, 306, 317, 319, 320, 323, 328, 331, 332, 333, 334, 335, 336, 337, 342, 410, 412, 416, 433, 518, 519, 521, 522, 550, 551, 633, 634, 652, 692, 703, 706, 729, 748, 750, 873, 956], "about": [31, 39, 45, 53, 60, 69, 70, 97, 101, 121, 128, 141, 166, 167, 169, 170, 172, 175, 177, 181, 186, 188, 192, 194, 195, 198, 201, 204, 210, 212, 215, 216, 217, 218, 219, 222, 223, 227, 229, 230, 232, 233, 237, 238, 243, 244, 245, 251, 252, 255, 257, 281, 284, 286, 288, 291, 292, 294, 298, 303, 305, 309, 310, 311, 312, 316, 317, 319, 321, 323, 324, 326, 328, 330, 331, 332, 333, 334, 336, 340, 341, 342, 344, 349, 351, 352, 364, 365, 366, 373, 374, 378, 379, 386, 387, 388, 392, 394, 395, 408, 411, 413, 418, 427, 436, 439, 440, 441, 443, 483, 485, 490, 491, 492, 502, 507, 524, 527, 534, 549, 550, 551, 552, 556, 585, 587, 591, 598, 599, 604, 614, 632, 633, 636, 647, 650, 667, 676, 677, 698, 718, 719, 748, 749, 752, 770, 784, 785, 786, 787, 788, 789, 790, 813, 814, 816, 817, 823, 834, 836, 849, 852, 856, 861, 862, 871, 878, 888, 892, 936, 946], "caus": [31, 39, 70, 97, 168, 177, 187, 226, 227, 228, 229, 230, 233, 237, 239, 240, 245, 281, 282, 285, 287, 288, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 316, 328, 331, 332, 333, 334, 341, 542, 550, 551, 581, 636, 831, 870, 875, 943], "alias": [31, 39, 188, 207, 230, 284, 293, 326, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 496, 550, 551, 653, 654, 784, 788, 811, 813, 814, 816, 817, 866, 889, 902, 936], "ideal": [31, 97, 135, 159, 161, 170, 177, 196, 229, 231, 234, 235, 256, 270, 309, 319, 320, 380, 877, 884, 936], "instead": [31, 69, 94, 101, 131, 141, 147, 162, 168, 169, 172, 175, 176, 177, 182, 184, 186, 187, 192, 194, 195, 196, 197, 198, 223, 227, 228, 229, 230, 232, 233, 237, 239, 243, 244, 246, 252, 255, 263, 264, 265, 268, 269, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 316, 317, 318, 320, 323, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 356, 357, 358, 359, 362, 364, 375, 377, 380, 392, 422, 423, 428, 512, 513, 514, 515, 516, 517, 524, 531, 534, 539, 549, 550, 551, 605, 607, 610, 636, 637, 638, 678, 717, 728, 733, 748, 784, 788, 802, 812, 813, 814, 815, 816, 817, 818, 834, 837, 860, 866, 870, 876, 883, 889, 898, 904, 906, 941, 942, 946, 950], "isotrak": [31, 68, 128, 136, 151, 169, 188, 198, 234, 236, 256, 320, 323, 405], "700999": 31, "700": [31, 107, 142, 155, 221, 236, 260, 802, 812, 834, 956], "999": [31, 60, 103, 106, 110, 119, 123, 136, 138, 151, 157, 168, 170, 185, 194, 198, 209, 232, 233, 235, 236, 237, 260, 648, 653, 661, 664], "lowpass": [31, 37, 98, 100, 103, 107, 108, 109, 110, 117, 120, 167, 172, 177, 192, 193, 194, 195, 212, 218, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 273, 281, 286, 287, 288, 292, 293, 301, 303, 323, 330, 331, 332, 333, 334, 336, 518, 550, 551, 784, 786, 787, 788, 789, 790, 866, 889, 890], "331": [31, 48, 51, 60, 110, 139, 141, 195, 212, 223, 229, 236, 237, 255, 956], "48": [31, 37, 38, 39, 45, 47, 54, 61, 71, 72, 73, 107, 118, 121, 130, 135, 136, 139, 141, 163, 165, 171, 177, 183, 194, 195, 197, 206, 214, 222, 223, 236, 245, 255, 256, 257, 259, 260, 262, 264, 265, 277, 279, 956], "initi": [31, 42, 45, 47, 67, 69, 70, 97, 120, 123, 136, 139, 170, 175, 177, 182, 194, 206, 211, 212, 218, 232, 239, 243, 250, 255, 256, 257, 258, 259, 260, 263, 264, 265, 270, 278, 281, 282, 286, 288, 290, 292, 293, 300, 301, 302, 304, 305, 309, 310, 320, 322, 323, 329, 331, 332, 337, 338, 339, 341, 342, 343, 345, 346, 347, 443, 445, 545, 550, 551, 558, 580, 588, 636, 669, 678, 680, 688, 736, 737, 738, 747, 748, 750, 763, 771, 772, 773, 774, 775, 788, 824, 834, 864, 866, 880, 883, 889, 894, 899, 900, 949], "initial_valu": [31, 120, 136, 211, 302], "initial_ev": [31, 117, 120, 136, 211, 252, 285, 524], "201": [31, 71, 162, 195, 202, 207, 209, 236, 255, 260, 265, 273], "10251": 31, "examin": [31, 60, 73, 101, 162, 168, 171, 172, 177, 186, 192, 203, 204, 212, 232, 243, 245, 309, 936], "co": [31, 48, 95, 183, 229, 237, 250, 277, 317, 319, 320, 410, 509], "registr": [31, 69, 70, 160, 183, 206, 277, 294, 317, 320, 343, 429, 668, 822, 823, 824, 948], "equat": [31, 161, 182, 222, 223, 233, 277, 312, 320, 504, 647, 815, 818], "mi": [31, 317], "defin": [31, 34, 35, 36, 38, 44, 45, 47, 53, 57, 59, 69, 70, 87, 88, 103, 104, 111, 121, 122, 131, 134, 138, 141, 147, 149, 155, 162, 166, 167, 168, 170, 177, 181, 184, 186, 188, 189, 191, 193, 194, 196, 198, 201, 204, 206, 208, 217, 218, 222, 223, 229, 233, 238, 240, 252, 258, 259, 260, 263, 265, 269, 270, 277, 281, 282, 288, 291, 293, 297, 298, 300, 307, 309, 310, 316, 317, 319, 320, 323, 324, 328, 330, 331, 332, 333, 334, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 351, 352, 357, 364, 365, 380, 385, 388, 402, 403, 423, 429, 433, 456, 462, 483, 489, 490, 508, 509, 512, 518, 538, 541, 550, 551, 557, 563, 586, 588, 589, 597, 603, 604, 605, 606, 607, 610, 614, 619, 620, 622, 633, 635, 636, 637, 639, 640, 650, 651, 659, 669, 688, 693, 698, 733, 736, 737, 738, 741, 744, 746, 747, 748, 749, 750, 757, 760, 771, 772, 773, 774, 775, 779, 780, 784, 785, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 800, 802, 812, 813, 814, 816, 817, 834, 840, 853, 857, 860, 867, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898, 899, 948, 956], "lpa": [31, 162, 182, 186, 293, 317, 319, 374, 380, 393, 404, 414, 434, 436, 502, 558], "nasion": [31, 182, 183, 186, 196, 283, 293, 317, 319, 320, 374, 380, 393, 403, 404, 414, 434, 436, 502, 737], "rpa": [31, 162, 182, 186, 293, 317, 319, 374, 380, 393, 404, 414, 434, 436, 502, 558], "fine": [31, 207, 215, 237, 270, 280, 283, 336, 504, 646, 647, 660, 671, 682, 687], "analys": [31, 37, 53, 57, 67, 96, 125, 129, 143, 161, 169, 172, 176, 177, 184, 186, 219, 223, 227, 233, 234, 243, 256, 270, 277, 288, 291, 312, 317, 320, 333, 334, 550, 551, 694, 768, 769, 860, 872, 949, 956], "must": [31, 44, 58, 69, 70, 73, 87, 109, 155, 161, 170, 172, 182, 193, 195, 197, 198, 207, 210, 215, 217, 226, 227, 232, 234, 237, 240, 245, 250, 255, 257, 259, 260, 263, 265, 270, 273, 310, 316, 317, 320, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 353, 358, 364, 365, 380, 382, 383, 386, 389, 393, 409, 410, 412, 416, 423, 427, 428, 429, 434, 439, 440, 441, 456, 462, 465, 482, 483, 489, 490, 491, 495, 498, 499, 500, 502, 507, 512, 515, 517, 524, 526, 527, 545, 547, 548, 549, 550, 551, 559, 566, 570, 572, 574, 576, 586, 590, 595, 596, 597, 612, 613, 614, 635, 636, 638, 647, 649, 651, 652, 653, 660, 667, 671, 694, 697, 725, 728, 733, 734, 745, 749, 750, 752, 754, 755, 758, 766, 769, 770, 771, 772, 774, 775, 779, 784, 786, 787, 788, 789, 790, 801, 805, 809, 813, 816, 834, 836, 838, 840, 852, 853, 855, 859, 860, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 877, 879, 883, 884, 886, 888, 889, 890, 891, 892, 894, 897, 898, 899, 900, 936, 946], "temporari": [31, 177, 198, 323, 336, 726, 843], "src": [31, 33, 48, 50, 52, 54, 56, 57, 61, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 85, 87, 95, 117, 119, 120, 121, 122, 136, 161, 162, 182, 184, 185, 186, 204, 206, 207, 208, 218, 235, 251, 263, 264, 265, 286, 291, 316, 323, 335, 337, 338, 339, 342, 344, 345, 346, 347, 349, 365, 429, 517, 537, 546, 589, 590, 598, 612, 613, 616, 618, 623, 713, 723, 732, 733, 734, 741, 744, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 779, 780, 834, 852, 854, 894, 895, 899, 900, 933], "orient": [31, 37, 48, 52, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 106, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 143, 152, 157, 182, 184, 185, 186, 191, 192, 197, 198, 201, 202, 203, 206, 207, 208, 209, 213, 214, 215, 218, 223, 235, 237, 251, 252, 255, 263, 265, 277, 284, 285, 286, 287, 288, 290, 291, 293, 298, 299, 303, 304, 305, 307, 312, 316, 328, 329, 330, 333, 335, 336, 338, 339, 342, 345, 346, 347, 351, 352, 364, 365, 366, 433, 503, 517, 526, 527, 528, 542, 545, 547, 548, 571, 597, 598, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 615, 618, 619, 620, 682, 692, 693, 696, 700, 701, 703, 716, 732, 736, 748, 749, 834, 844, 852, 854, 855, 864, 904, 928, 938, 956], "later": [31, 37, 45, 58, 64, 69, 73, 96, 128, 136, 162, 166, 167, 168, 170, 175, 177, 188, 198, 201, 203, 206, 207, 216, 218, 226, 227, 228, 229, 232, 233, 234, 235, 239, 240, 243, 244, 245, 246, 250, 263, 264, 270, 273, 277, 287, 292, 309, 317, 318, 320, 326, 331, 332, 333, 334, 339, 341, 343, 345, 348, 429, 525, 550, 551, 636, 695, 697, 784, 786, 787, 788, 789, 790, 834, 899, 946, 948], "force_fix": [31, 73, 74, 75, 80, 81, 95, 184, 251, 284, 433, 614], "pial": [31, 142, 152, 161, 162, 181, 186, 207, 294, 302, 305, 306, 329, 344, 622, 706, 779, 834, 852, 864], "focalpoint": [31, 50, 78, 136, 143, 152, 161, 162, 182, 183, 184, 185, 186, 204, 252, 294, 834, 904], "04": [31, 39, 45, 50, 57, 59, 60, 61, 67, 68, 75, 76, 97, 98, 100, 110, 111, 117, 120, 122, 127, 129, 130, 135, 136, 148, 151, 152, 156, 167, 184, 188, 190, 197, 203, 206, 209, 211, 212, 222, 223, 227, 228, 236, 238, 255, 256, 257, 259, 260, 265, 273, 277, 290, 313, 320, 459, 504, 594, 599, 636, 671, 741, 746, 945, 956], "load": [31, 33, 37, 39, 40, 50, 52, 54, 55, 56, 58, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 95, 98, 102, 106, 107, 108, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 134, 136, 137, 139, 140, 144, 146, 147, 148, 151, 153, 155, 161, 168, 169, 171, 176, 177, 178, 182, 184, 186, 187, 188, 191, 193, 194, 195, 196, 197, 198, 202, 203, 206, 207, 208, 209, 210, 215, 216, 218, 219, 220, 223, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 244, 245, 246, 247, 255, 256, 257, 258, 259, 263, 264, 265, 268, 270, 273, 274, 283, 284, 285, 287, 290, 291, 294, 297, 302, 303, 304, 306, 307, 308, 317, 318, 319, 323, 326, 327, 331, 332, 333, 334, 341, 381, 386, 390, 397, 428, 430, 445, 533, 534, 550, 551, 558, 559, 566, 571, 572, 580, 594, 597, 598, 614, 625, 636, 638, 648, 684, 694, 696, 700, 701, 703, 705, 711, 712, 714, 749, 782, 807, 808, 852, 866, 870, 874, 876, 883, 889, 928], "three": [31, 57, 71, 121, 130, 136, 147, 168, 171, 177, 182, 184, 185, 187, 194, 204, 208, 215, 216, 219, 226, 227, 232, 233, 234, 243, 245, 246, 250, 255, 268, 270, 288, 290, 309, 317, 320, 323, 325, 328, 329, 331, 332, 333, 334, 336, 339, 340, 345, 347, 364, 365, 375, 376, 377, 392, 483, 490, 541, 545, 550, 551, 592, 612, 613, 635, 636, 646, 651, 682, 714, 717, 733, 736, 765, 767, 784, 786, 787, 789, 790, 824, 834, 853, 864, 866, 868, 875, 877, 879, 887, 888, 889, 891, 896, 898, 929, 934, 936], "colloc": [31, 52, 67, 71, 76, 136, 184, 185, 202, 208, 290, 593], "patch": [31, 37, 48, 54, 55, 57, 60, 61, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 152, 157, 182, 184, 186, 192, 198, 203, 204, 205, 207, 208, 218, 223, 251, 252, 263, 265, 273, 281, 284, 290, 298, 300, 307, 323, 328, 331, 332, 333, 334, 339, 340, 344, 345, 347, 349, 351, 352, 433, 483, 490, 550, 551, 603, 604, 605, 606, 607, 610, 614, 619, 620, 635, 636, 651, 691, 713, 732, 748, 749, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "3523": [31, 48, 57, 58, 59, 60, 61, 66, 68, 69, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 117, 119, 120, 121, 122, 157, 198, 203, 204, 205, 206, 218, 223, 251, 252], "8196": [31, 208, 218], "free": [31, 48, 52, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 107, 117, 119, 120, 121, 122, 136, 157, 166, 177, 184, 185, 192, 198, 202, 203, 204, 206, 208, 218, 223, 235, 237, 240, 251, 252, 256, 260, 277, 284, 285, 291, 298, 309, 310, 316, 317, 320, 329, 331, 332, 335, 364, 365, 366, 444, 526, 527, 528, 545, 547, 548, 603, 604, 605, 606, 607, 610, 614, 618, 619, 620, 645, 703, 724, 728, 771, 772, 774, 775, 928, 946, 948, 949], "frame": [31, 37, 48, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 106, 117, 119, 120, 121, 122, 131, 134, 135, 137, 139, 152, 157, 161, 162, 166, 177, 185, 189, 190, 191, 192, 196, 198, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 223, 237, 239, 251, 252, 263, 265, 281, 285, 288, 290, 291, 292, 293, 294, 297, 301, 303, 304, 310, 317, 319, 320, 323, 329, 331, 332, 333, 334, 335, 336, 344, 370, 371, 380, 384, 393, 398, 436, 460, 502, 542, 544, 550, 551, 555, 562, 584, 586, 594, 599, 647, 660, 671, 713, 714, 716, 730, 733, 809, 821, 829, 831, 834, 852, 864, 904, 910, 956], "emploi": [31, 37, 48, 52, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 80, 81, 84, 85, 95, 117, 119, 121, 136, 184, 185, 202, 203, 204, 205, 208, 215, 216, 218, 223, 252, 270, 310, 316, 317, 320, 635, 765], "rotat": [31, 36, 41, 45, 48, 60, 61, 66, 67, 68, 70, 72, 73, 74, 75, 80, 81, 84, 85, 95, 106, 117, 119, 121, 136, 182, 184, 198, 203, 204, 205, 206, 208, 212, 218, 219, 222, 223, 229, 231, 252, 303, 320, 323, 333, 334, 336, 364, 365, 419, 434, 439, 504, 542, 640, 646, 671, 824, 825, 827, 834, 836, 852, 871, 941, 948], "convert": [31, 48, 53, 60, 61, 66, 67, 68, 72, 73, 74, 75, 80, 81, 84, 85, 95, 102, 117, 119, 121, 136, 139, 150, 156, 162, 163, 166, 167, 168, 169, 170, 175, 176, 177, 182, 184, 186, 187, 195, 197, 203, 204, 205, 208, 215, 216, 217, 218, 219, 223, 228, 229, 233, 240, 243, 245, 251, 252, 256, 260, 263, 264, 265, 269, 282, 283, 285, 286, 287, 288, 290, 294, 302, 303, 309, 317, 320, 325, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 345, 346, 347, 350, 357, 371, 380, 381, 406, 419, 433, 435, 485, 489, 494, 495, 498, 512, 519, 521, 522, 539, 543, 544, 546, 550, 551, 562, 572, 576, 590, 597, 659, 673, 674, 784, 786, 787, 788, 789, 790, 802, 812, 825, 827, 833, 835, 839, 852, 904, 906, 943, 946, 949, 956], "unknown": [31, 72, 98, 100, 103, 109, 117, 120, 136, 167, 172, 177, 193, 194, 195, 207, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 273, 285, 288, 294, 303, 304, 320, 336, 393, 398, 545, 550, 551, 559, 566, 584, 586, 821, 889, 922, 931], "deriv": [31, 58, 59, 60, 72, 98, 136, 151, 154, 166, 170, 175, 182, 194, 212, 227, 255, 256, 268, 277, 282, 284, 291, 303, 320, 336, 434, 636, 678, 703, 928], "subset": [31, 71, 139, 166, 168, 170, 172, 177, 184, 186, 198, 201, 234, 235, 239, 245, 255, 268, 281, 282, 284, 288, 290, 291, 293, 294, 310, 320, 326, 331, 332, 333, 334, 337, 341, 351, 352, 364, 365, 423, 427, 428, 439, 440, 441, 475, 483, 486, 490, 493, 507, 521, 526, 527, 540, 545, 547, 548, 550, 551, 614, 636, 757, 760, 784, 785, 786, 787, 788, 789, 790, 834, 866, 876, 889], "dip_opm": 31, "_": [31, 34, 35, 45, 63, 64, 71, 76, 87, 94, 139, 163, 172, 177, 186, 187, 198, 204, 206, 218, 222, 229, 232, 234, 239, 243, 251, 255, 256, 259, 260, 269, 270, 309, 320, 371, 636, 647, 686, 802, 812], "040": [31, 107, 140, 148, 166, 175, 188, 195, 236, 252, 277, 333, 334, 423, 936], "080": [31, 64, 107, 211, 236, 256], "idx": [31, 57, 61, 66, 73, 85, 90, 110, 141, 159, 176, 207, 218, 226, 230, 234, 251, 263, 283, 325, 329, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 379, 549, 550, 551, 612, 613, 788, 864], "argmax": [31, 61, 64, 66, 74, 76, 84, 85, 146, 202, 207, 222], "1f": [31, 56, 66, 73, 103, 127, 136, 141, 182, 202, 209, 210, 212, 218, 223, 229, 251, 255, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 786, 787, 789, 790, 868, 875, 888], "1000": [31, 66, 74, 97, 107, 110, 123, 140, 141, 155, 165, 172, 182, 183, 185, 186, 202, 207, 208, 209, 210, 212, 218, 229, 230, 232, 234, 240, 243, 250, 256, 260, 263, 264, 265, 286, 319, 512, 518, 520, 524, 550, 551, 636, 705, 771, 772, 774, 775, 802, 812, 834], "n20m": 31, "plot_loc": [31, 202, 207, 291, 303, 329], "orthoview": [31, 61, 66, 85, 186, 202, 283, 288, 291, 329, 864], "36": [31, 39, 45, 54, 60, 61, 71, 73, 107, 109, 130, 135, 139, 141, 170, 177, 180, 195, 197, 207, 222, 223, 236, 238, 242, 255, 256, 257, 259, 260, 263, 264, 265, 270, 277, 300, 331, 332, 333, 334, 475, 503, 550, 551, 680, 956], "77": [31, 37, 39, 41, 45, 61, 107, 108, 135, 136, 139, 141, 182, 183, 194, 195, 197, 207, 218, 222, 223, 225, 234, 235, 236, 245, 255, 256, 259, 260, 268, 301, 403, 956], "10250": 31, "999800": [31, 136], "015800": [31, 136], "009200": [31, 136], "018100": [31, 136], "930500": [31, 136], "365900": [31, 136], "002800": [31, 136], "366000": [31, 136], "930600": [31, 136], "inner": [31, 52, 57, 67, 69, 71, 76, 136, 181, 184, 186, 187, 197, 202, 207, 208, 218, 277, 281, 316, 317, 319, 320, 323, 331, 332, 335, 372, 375, 526, 542, 598, 671, 733, 749, 834, 936, 943, 946, 949], "skull": [31, 52, 67, 69, 71, 76, 136, 140, 181, 182, 184, 186, 187, 196, 202, 207, 208, 218, 277, 281, 283, 316, 317, 319, 320, 323, 335, 344, 372, 375, 526, 598, 599, 667, 733, 741, 746, 749, 834, 852, 936, 943, 946, 949], "102": [31, 37, 39, 40, 41, 42, 44, 48, 52, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 91, 95, 96, 98, 99, 100, 101, 103, 105, 106, 109, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 151, 152, 157, 158, 159, 166, 167, 168, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 255, 257, 258, 259, 260, 263, 265, 273, 274, 323, 956], "73": [31, 39, 41, 45, 59, 60, 61, 66, 71, 86, 106, 107, 123, 134, 135, 139, 141, 148, 155, 171, 175, 195, 202, 208, 223, 236, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 277, 331, 332, 333, 334, 369, 550, 551, 786, 789, 805], "108": [31, 42, 61, 107, 108, 140, 141, 148, 188, 195, 218, 223, 260, 277, 333, 334, 423, 876, 936], "1080": [31, 36, 149, 222, 240, 277, 489, 656, 658, 845], "543": [31, 66, 223, 236, 240], "least": [31, 67, 71, 97, 110, 141, 167, 184, 185, 202, 207, 228, 229, 230, 232, 233, 237, 255, 260, 277, 291, 310, 316, 320, 331, 332, 333, 334, 341, 485, 494, 498, 500, 519, 521, 522, 540, 550, 551, 636, 638, 639, 655, 657, 660, 671, 769, 787, 790, 834, 866, 889, 936, 948], "awai": [31, 67, 71, 167, 170, 184, 185, 202, 207, 209, 215, 228, 233, 235, 239, 302, 320, 434, 563, 636, 666, 667, 737, 779, 814, 817, 834, 945], "few": [31, 47, 52, 67, 70, 71, 76, 97, 121, 128, 136, 161, 170, 171, 175, 181, 182, 183, 184, 185, 187, 188, 193, 197, 198, 202, 207, 208, 226, 227, 228, 229, 231, 232, 234, 235, 236, 240, 243, 246, 256, 260, 265, 268, 270, 284, 294, 306, 309, 318, 319, 320, 336, 504, 646, 647, 660, 671, 834, 852, 936, 938, 946, 950], "interior": [31, 52, 67, 71, 76, 136, 184, 185, 202, 207, 208, 237], "statu": [31, 52, 67, 71, 76, 136, 184, 185, 202, 207, 208, 215, 279, 284, 287, 307, 309, 319, 320, 331, 332, 333, 334, 336, 410, 432, 434, 550, 551, 559, 566, 574, 582, 633, 784, 786, 787, 788, 789, 790, 834], "exterior": [31, 52, 67, 71, 76, 136, 184, 185, 202, 207, 208, 237], "284": [31, 39, 195, 236, 255, 277, 300, 483], "473": [31, 141, 236, 255, 344], "qhull": [31, 52, 67, 71, 76, 136, 184, 185, 202, 207, 208, 294], "189": [31, 58, 59, 60, 72, 140, 195, 218, 223, 236, 255, 259, 269, 277, 320], "solid": [31, 52, 67, 71, 76, 136, 176, 184, 185, 187, 202, 207, 208, 234, 320, 860, 887], "angl": [31, 52, 67, 71, 76, 136, 145, 157, 184, 185, 187, 195, 196, 198, 202, 207, 208, 209, 212, 240, 285, 302, 320, 323, 336, 371, 375, 659, 669, 724, 834, 840, 904], "244": [31, 39, 139, 195, 223, 255, 260], "complet": [31, 33, 35, 52, 58, 59, 60, 67, 71, 76, 136, 149, 170, 176, 181, 184, 185, 187, 195, 202, 206, 207, 208, 227, 229, 232, 235, 252, 255, 277, 291, 292, 293, 294, 309, 316, 317, 318, 320, 323, 331, 332, 344, 371, 585, 636, 670, 684, 781, 830, 834, 843, 851, 936, 938, 949], "141": [31, 39, 46, 195, 236, 255, 259, 260, 344, 956], "299": [31, 39, 60, 166, 195, 210, 221, 260, 268], "limit": [31, 57, 60, 66, 67, 68, 71, 76, 84, 85, 117, 121, 136, 140, 141, 161, 163, 167, 168, 184, 191, 192, 194, 202, 203, 205, 207, 208, 216, 218, 223, 227, 229, 232, 237, 243, 252, 260, 270, 273, 277, 280, 287, 291, 293, 294, 298, 301, 302, 308, 309, 310, 312, 317, 320, 321, 325, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 349, 483, 490, 509, 516, 527, 547, 550, 551, 571, 635, 636, 640, 660, 671, 696, 700, 705, 711, 762, 768, 770, 784, 786, 787, 788, 789, 790, 845, 851, 853, 855, 860, 867, 868, 870, 872, 874, 875, 877, 879, 884, 888, 891, 894, 896, 898, 899, 900, 930, 941, 953], "214": [31, 195, 236, 246, 255, 260], "0642": [31, 195], "3529": 31, "7471": 31, "6757": 31, "1930": 31, "99": [31, 39, 41, 45, 52, 61, 73, 75, 96, 97, 107, 108, 117, 120, 130, 131, 134, 135, 136, 139, 141, 148, 163, 177, 178, 183, 186, 188, 195, 203, 205, 206, 207, 210, 212, 218, 222, 223, 234, 236, 240, 245, 251, 252, 255, 256, 258, 259, 260, 277, 299, 320, 331, 332, 341, 550, 551, 866, 889], "leakag": [31, 53, 62, 71, 82, 342, 344, 433, 613, 615, 617, 703, 706, 814, 817, 834, 840, 956], "constrain": [31, 36, 38, 39, 41, 45, 65, 67, 84, 97, 98, 99, 100, 117, 134, 136, 141, 142, 147, 170, 172, 186, 192, 198, 201, 202, 204, 205, 206, 207, 209, 212, 222, 229, 233, 234, 237, 238, 239, 252, 255, 257, 258, 259, 260, 269, 277, 292, 294, 308, 319, 320, 326, 331, 332, 360, 361, 362, 363, 364, 365, 429, 653, 802, 812, 936, 943, 949], "idea": [31, 33, 47, 53, 140, 181, 197, 201, 203, 229, 231, 232, 233, 234, 263, 265, 270, 277, 311, 320, 321, 331, 332, 376, 506, 936], "inverse_oper": [31, 33, 37, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 73, 74, 80, 85, 117, 131, 134, 135, 136, 137, 198, 203, 263, 265, 341, 603, 604, 605, 606, 607, 609, 610, 615, 619, 620], "loos": [31, 33, 57, 60, 61, 66, 67, 68, 72, 74, 80, 81, 85, 87, 117, 121, 136, 170, 203, 205, 208, 218, 223, 252, 284, 290, 291, 304, 316, 320, 527, 528, 545, 547, 548, 603, 604, 605, 606, 607, 609, 610, 614, 618, 619, 620], "depth": [31, 33, 37, 48, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 78, 80, 81, 83, 84, 85, 87, 117, 121, 131, 134, 135, 136, 137, 152, 192, 197, 198, 203, 204, 205, 207, 208, 218, 223, 246, 251, 252, 263, 265, 277, 284, 287, 291, 293, 298, 303, 329, 364, 365, 527, 545, 547, 548, 614, 741, 746, 752], "pick_ori": [31, 33, 37, 54, 55, 58, 59, 60, 64, 65, 67, 75, 87, 117, 135, 203, 204, 206, 207, 252, 283, 284, 286, 287, 290, 291, 299, 304, 364, 365, 545, 547, 548, 603, 604, 605, 606, 607, 609, 610, 619, 620], "hemi": [31, 33, 37, 52, 58, 59, 60, 64, 67, 69, 73, 74, 75, 76, 84, 87, 94, 121, 131, 134, 136, 143, 157, 160, 162, 181, 186, 192, 201, 203, 204, 205, 206, 207, 218, 223, 251, 252, 263, 264, 265, 273, 293, 337, 338, 339, 342, 345, 346, 347, 349, 541, 688, 706, 833, 834, 894, 899, 913, 931], "rh": [31, 50, 52, 60, 63, 64, 67, 69, 73, 85, 95, 117, 119, 121, 122, 134, 136, 143, 157, 162, 181, 184, 185, 186, 201, 203, 251, 252, 320, 327, 337, 338, 339, 342, 345, 346, 347, 539, 588, 688, 706, 711, 834, 894, 899, 913, 931], "view": [31, 33, 37, 52, 54, 55, 57, 58, 59, 61, 66, 69, 73, 76, 79, 84, 85, 96, 121, 122, 127, 131, 134, 135, 136, 140, 142, 145, 161, 162, 166, 168, 176, 177, 178, 184, 185, 186, 192, 195, 196, 198, 201, 203, 206, 207, 216, 217, 218, 223, 232, 234, 245, 246, 251, 252, 260, 263, 264, 265, 273, 277, 279, 287, 293, 294, 299, 302, 308, 310, 312, 316, 317, 319, 320, 328, 329, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 355, 370, 377, 550, 551, 602, 656, 718, 821, 834, 864, 866, 889, 894, 897, 899, 904, 906, 936], "lat": [31, 37, 52, 84, 121, 131, 162, 177, 186, 192, 223, 251, 265, 273, 834], "initial_tim": [31, 33, 37, 58, 67, 69, 84, 85, 87, 121, 131, 160, 192, 201, 203, 204, 205, 206, 207, 208, 218, 223, 251, 273, 338, 339, 342, 345, 346, 347, 834, 894, 899, 900], "clim": [31, 33, 36, 48, 52, 68, 69, 73, 75, 80, 81, 84, 85, 131, 136, 157, 161, 162, 172, 201, 203, 205, 206, 207, 238, 251, 263, 264, 265, 273, 291, 293, 301, 333, 334, 338, 339, 342, 345, 346, 347, 834, 855, 872, 894, 899, 900], "percent": [31, 52, 68, 134, 136, 139, 205, 257, 260, 291, 338, 339, 342, 345, 346, 347, 354, 619, 620, 636, 740, 741, 742, 743, 744, 746, 784, 788, 855, 881, 894, 896, 899, 900], "lim": [31, 33, 48, 52, 68, 69, 75, 80, 81, 84, 85, 131, 136, 157, 161, 162, 201, 203, 205, 206, 207, 264, 265, 273, 338, 339, 342, 345, 346, 347, 855, 894, 899, 900], "400": [31, 33, 39, 56, 66, 70, 82, 102, 107, 119, 138, 157, 161, 166, 167, 168, 170, 172, 174, 177, 182, 186, 197, 198, 202, 204, 207, 212, 223, 233, 234, 236, 238, 257, 273, 274, 542, 956], "background": [31, 47, 69, 143, 154, 161, 168, 177, 186, 191, 192, 198, 232, 234, 238, 241, 242, 243, 245, 246, 273, 277, 285, 287, 291, 310, 316, 329, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 483, 518, 519, 521, 550, 551, 572, 641, 666, 709, 784, 786, 787, 789, 790, 802, 834, 838, 844, 852, 864, 870, 874, 877, 884, 889, 894, 895, 897, 899, 900, 921, 956], "out": [31, 42, 45, 48, 52, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 97, 101, 106, 109, 114, 117, 119, 121, 136, 142, 147, 151, 157, 163, 166, 167, 169, 177, 182, 184, 186, 192, 193, 196, 198, 203, 204, 205, 206, 208, 210, 211, 212, 216, 218, 222, 223, 227, 229, 231, 232, 233, 234, 235, 237, 246, 252, 255, 269, 270, 273, 274, 283, 288, 303, 309, 317, 318, 320, 323, 328, 331, 332, 333, 334, 336, 340, 355, 370, 406, 424, 425, 426, 483, 485, 490, 494, 519, 521, 550, 551, 559, 575, 602, 610, 635, 636, 637, 651, 656, 679, 685, 687, 776, 784, 786, 787, 789, 790, 813, 814, 821, 853, 860, 868, 872, 875, 879, 888, 891, 896, 898, 936, 939, 941, 942, 948], "adjust": [31, 50, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 76, 77, 80, 81, 84, 85, 86, 117, 121, 136, 143, 147, 175, 182, 184, 187, 196, 198, 203, 204, 205, 206, 208, 212, 215, 218, 223, 235, 237, 245, 246, 252, 257, 273, 279, 281, 293, 294, 306, 307, 312, 316, 320, 323, 328, 331, 332, 333, 334, 336, 340, 353, 411, 413, 483, 490, 550, 551, 552, 562, 570, 635, 636, 646, 662, 672, 762, 768, 773, 777, 778, 784, 786, 787, 789, 790, 805, 836, 849, 866, 867, 868, 872, 874, 875, 879, 888, 889, 891, 896, 897, 898, 936, 941, 946], "svd": [31, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 117, 121, 136, 203, 204, 205, 208, 218, 223, 233, 252, 291, 316, 320, 328, 339, 345, 347, 410, 611, 612, 613, 861], "lead": [31, 48, 52, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 96, 97, 114, 117, 121, 136, 170, 177, 188, 193, 203, 204, 205, 208, 218, 222, 223, 227, 229, 237, 239, 252, 282, 283, 287, 291, 292, 293, 294, 305, 306, 318, 319, 320, 325, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 423, 517, 545, 547, 548, 550, 551, 603, 604, 605, 606, 607, 672, 703, 728, 771, 772, 774, 775, 784, 941], "largest": [31, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 117, 121, 136, 161, 177, 203, 204, 205, 208, 215, 218, 223, 252, 255, 483, 527, 576, 612, 613, 636], "38802": 31, "factor": [31, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 74, 76, 80, 81, 84, 85, 87, 117, 121, 131, 134, 135, 136, 137, 161, 183, 197, 203, 204, 205, 207, 208, 218, 223, 229, 230, 237, 239, 251, 252, 257, 258, 259, 263, 265, 269, 279, 280, 290, 291, 292, 294, 301, 302, 319, 320, 323, 326, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 366, 423, 427, 434, 441, 491, 492, 495, 496, 504, 523, 550, 551, 561, 606, 616, 619, 620, 646, 647, 653, 654, 660, 669, 671, 673, 720, 722, 723, 736, 737, 765, 767, 784, 788, 792, 795, 798, 811, 813, 814, 815, 816, 817, 818, 824, 834, 849, 866, 874, 887, 889, 895, 897, 899], "35945e": 31, "nchan": [31, 60, 66, 67, 68, 71, 74, 76, 78, 80, 81, 83, 84, 85, 117, 121, 136, 192, 193, 195, 203, 204, 205, 208, 218, 223, 243, 250, 252, 279, 335, 336], "nzero": [31, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 117, 121, 136, 203, 204, 205, 208, 218, 223, 252], "invert": [31, 47, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 80, 81, 83, 84, 85, 87, 117, 121, 131, 134, 135, 136, 137, 161, 182, 184, 187, 192, 203, 204, 205, 206, 207, 208, 212, 218, 223, 229, 251, 252, 263, 265, 270, 317, 350, 360, 363, 489, 492, 497, 545, 547, 548, 770, 809], "eigenlead": [31, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 80, 81, 84, 85, 87, 117, 121, 131, 134, 135, 136, 137, 192, 203, 204, 205, 207, 208, 218, 223, 251, 252, 263, 265, 320], "explain": [31, 44, 54, 56, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 80, 81, 84, 85, 86, 87, 117, 121, 163, 185, 186, 192, 203, 204, 205, 207, 208, 209, 218, 219, 223, 232, 251, 252, 263, 265, 280, 282, 290, 291, 292, 304, 308, 309, 320, 340, 367, 369, 424, 425, 426, 483, 490, 545, 547, 548, 612, 613, 636, 650, 880, 946], "97": [31, 37, 39, 41, 45, 60, 67, 70, 73, 98, 107, 109, 130, 135, 136, 139, 141, 144, 182, 186, 192, 195, 218, 222, 223, 232, 235, 236, 237, 255, 256, 259, 260, 274, 277, 279, 316, 320, 504, 599, 645, 647, 671, 765], "varianc": [31, 34, 40, 42, 54, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 80, 81, 84, 85, 86, 87, 97, 117, 121, 141, 192, 203, 204, 205, 206, 207, 208, 209, 218, 223, 227, 232, 239, 251, 252, 263, 265, 277, 280, 282, 290, 291, 292, 298, 304, 308, 319, 320, 340, 342, 360, 361, 362, 363, 364, 365, 424, 425, 426, 492, 528, 545, 547, 548, 612, 613, 614, 636, 644, 766, 777, 778, 814, 817, 859, 880, 881], "control": [31, 37, 45, 48, 52, 58, 59, 60, 64, 67, 68, 73, 74, 76, 87, 121, 136, 141, 147, 160, 166, 175, 176, 182, 192, 194, 197, 198, 204, 205, 207, 208, 215, 218, 223, 228, 229, 230, 232, 233, 234, 237, 238, 245, 251, 252, 255, 263, 273, 274, 283, 284, 285, 287, 288, 290, 291, 293, 294, 302, 303, 304, 305, 306, 308, 310, 317, 320, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 632, 636, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 732, 733, 735, 736, 737, 738, 748, 749, 752, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 775, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 802, 803, 804, 805, 808, 809, 812, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 829, 833, 834, 836, 843, 850, 852, 855, 861, 862, 864, 867, 868, 869, 870, 871, 876, 879, 880, 881, 882, 886, 887, 889, 890, 892, 893, 894, 895, 899, 900, 901, 902, 905, 907, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 948], "24807258e": 31, "55793898e": 31, "13115753e": 31, "578": [31, 32, 177, 212, 222, 223, 956], "869": [31, 32, 35, 260, 956], "opm_data": [31, 32, 956], "002": [32, 36, 39, 58, 59, 148, 155, 166, 167, 168, 171, 175, 192, 195, 215, 222, 223, 228, 229, 231, 234, 239, 243, 246, 252, 277, 524], "1344": [32, 956], "491": [32, 255, 956], "06": [32, 36, 46, 52, 61, 67, 70, 71, 72, 76, 78, 82, 85, 93, 98, 102, 110, 121, 127, 130, 156, 165, 181, 184, 200, 202, 205, 207, 209, 221, 229, 234, 236, 255, 256, 257, 260, 262, 265, 277, 313, 319, 343, 429, 491, 545, 645, 956], "spm_faces_dataset_sgskip": [32, 33, 956], "pipelin": [33, 34, 35, 36, 37, 38, 39, 41, 44, 136, 163, 187, 191, 192, 197, 198, 199, 222, 223, 227, 228, 232, 282, 294, 300, 317, 318, 483, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 536, 637, 824, 936, 942, 949], "reconstruct": [33, 42, 79, 184, 185, 188, 189, 190, 191, 208, 213, 214, 218, 222, 226, 227, 232, 237, 265, 277, 288, 291, 300, 305, 317, 320, 328, 329, 331, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 360, 365, 371, 375, 376, 377, 380, 423, 429, 434, 435, 436, 460, 463, 491, 524, 535, 539, 541, 542, 543, 544, 547, 588, 592, 594, 622, 636, 637, 646, 647, 660, 667, 671, 679, 688, 703, 706, 713, 715, 727, 732, 733, 747, 750, 761, 779, 780, 826, 834, 847, 852, 854, 864, 870, 875, 894, 899, 900, 931, 936, 956], "scrambl": [33, 223, 317], "doe": [33, 54, 57, 81, 84, 85, 97, 98, 102, 106, 110, 139, 144, 166, 167, 175, 177, 184, 186, 187, 188, 194, 204, 207, 208, 215, 216, 217, 219, 227, 229, 230, 231, 232, 233, 235, 237, 238, 239, 250, 252, 257, 259, 260, 263, 270, 273, 277, 283, 284, 290, 291, 293, 303, 306, 309, 310, 316, 320, 323, 324, 326, 328, 330, 331, 332, 333, 334, 338, 339, 342, 343, 345, 346, 347, 355, 364, 365, 370, 387, 400, 427, 430, 439, 440, 450, 457, 513, 514, 515, 516, 517, 541, 550, 551, 571, 575, 602, 622, 625, 638, 651, 653, 656, 663, 696, 700, 725, 730, 734, 784, 786, 787, 788, 789, 790, 821, 824, 829, 838, 874, 897, 936, 946], "quit": [33, 47, 170, 176, 177, 188, 229, 230, 232, 237, 238, 243, 255, 256, 264, 273, 309, 318, 636, 936], "even": [33, 97, 101, 139, 155, 168, 181, 186, 192, 193, 194, 197, 198, 209, 217, 218, 226, 227, 229, 231, 232, 233, 234, 235, 239, 243, 245, 255, 270, 281, 285, 288, 290, 291, 292, 294, 302, 308, 309, 317, 320, 323, 331, 332, 333, 334, 376, 392, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 550, 551, 581, 636, 798, 897, 950], "fast": [33, 47, 70, 155, 177, 181, 218, 268, 270, 277, 284, 298, 305, 320, 331, 332, 333, 334, 432, 491, 500, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 594, 595, 636, 680, 786, 789, 805, 936, 941], "sever": [33, 97, 102, 107, 108, 141, 171, 176, 177, 179, 181, 184, 185, 191, 192, 194, 195, 197, 198, 206, 207, 215, 216, 217, 218, 226, 228, 233, 234, 239, 243, 245, 246, 255, 263, 265, 273, 282, 308, 309, 316, 317, 320, 326, 331, 332, 475, 518, 550, 551, 679, 788, 814, 817, 936, 937, 945, 946, 947, 949, 952], "alexandr": [33, 35, 36, 37, 38, 39, 41, 44, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 91, 114, 119, 123, 124, 127, 134, 135, 137, 138, 140, 144, 148, 153, 157, 158, 163, 185, 188, 206, 211, 223, 232, 257, 258, 259, 263, 264, 265, 269, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 333, 334, 423, 483, 547, 548, 604, 636, 936, 954], "gramfort": [33, 35, 36, 37, 39, 44, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 91, 119, 123, 124, 127, 134, 135, 137, 138, 140, 144, 148, 153, 157, 158, 163, 185, 188, 206, 211, 223, 232, 257, 258, 259, 263, 264, 265, 269, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 333, 334, 423, 547, 548, 604, 636, 876, 936, 954], "inria": [33, 35, 36, 37, 39, 44, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 86, 91, 119, 123, 124, 127, 134, 135, 137, 138, 144, 148, 153, 157, 158, 163, 185, 211, 257, 258, 259, 263, 264, 265, 269], "deni": [33, 37, 39, 42, 47, 52, 59, 68, 96, 105, 128, 136, 140, 141, 147, 148, 154, 158, 159, 177, 188, 223, 259, 260, 265, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 297, 298, 299, 300, 301, 306, 308, 314, 333, 334, 423, 604, 936, 954], "engemann": [33, 37, 39, 42, 47, 52, 59, 68, 96, 105, 128, 136, 140, 141, 147, 148, 154, 158, 159, 188, 223, 259, 260, 265, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 297, 298, 299, 300, 301, 306, 308, 314, 333, 334, 423, 604, 876, 936, 954], "spm_path": 33, "spm_ctf_meg_example_faces1_3d": [33, 151], "downsampl": [33, 45, 136, 162, 171, 192, 222, 228, 230, 258, 279, 281, 289, 290, 297, 306, 323, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 482, 523, 524, 550, 551, 592, 660, 770, 784, 788, 895, 936], "heavili": [33, 136, 183, 223, 356, 358, 824], "advis": [33, 97, 216, 229, 293, 316, 320, 323], "real": [33, 58, 76, 119, 120, 177, 181, 182, 184, 186, 187, 229, 232, 233, 234, 235, 245, 250, 252, 257, 277, 291, 293, 299, 312, 364, 526, 550, 551, 553, 597, 680, 788, 802, 812, 813, 814, 834, 907, 949, 952], "jitter": [33, 194, 230, 550, 551, 936], "npad": [33, 45, 102, 107, 108, 218, 222, 263, 264, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 523, 550, 551, 936], "auto": [33, 36, 41, 42, 45, 48, 57, 97, 101, 102, 103, 107, 108, 109, 117, 134, 140, 147, 148, 153, 162, 173, 174, 182, 188, 191, 197, 218, 222, 229, 232, 235, 237, 257, 258, 259, 260, 263, 264, 281, 282, 283, 284, 286, 287, 288, 290, 291, 293, 302, 304, 305, 308, 316, 317, 323, 325, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 373, 374, 380, 396, 410, 412, 416, 422, 423, 427, 428, 429, 434, 483, 485, 489, 490, 494, 495, 502, 504, 507, 512, 513, 514, 516, 517, 519, 521, 522, 523, 528, 545, 547, 548, 550, 551, 557, 559, 561, 563, 566, 567, 574, 579, 582, 594, 599, 614, 633, 635, 636, 637, 645, 646, 647, 648, 651, 660, 661, 664, 671, 675, 684, 689, 695, 714, 728, 784, 786, 787, 788, 789, 790, 834, 836, 852, 853, 855, 860, 866, 868, 870, 871, 872, 873, 875, 876, 879, 881, 883, 886, 888, 889, 890, 891, 892, 894, 896, 898, 899, 900, 904, 934, 936, 956], "sfreq": [33, 34, 35, 40, 45, 47, 57, 90, 92, 95, 96, 97, 117, 119, 120, 121, 122, 136, 138, 141, 153, 155, 162, 163, 170, 192, 194, 195, 198, 212, 217, 218, 222, 228, 229, 230, 238, 239, 240, 243, 244, 245, 250, 252, 270, 273, 281, 287, 290, 301, 325, 326, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 350, 443, 485, 488, 489, 494, 495, 496, 507, 509, 511, 518, 519, 521, 550, 551, 675, 685, 689, 776, 787, 790, 791, 792, 793, 802, 804, 805, 810, 812, 813, 814, 815, 816, 869, 877], "major": [33, 290, 309, 310, 312, 388, 550, 936], "n_compon": [33, 34, 35, 38, 41, 101, 103, 109, 114, 144, 192, 198, 223, 232, 283, 291, 292, 483, 490, 491, 497, 636, 637, 651], "max_it": [33, 101, 103, 109, 192, 232, 293, 305, 603, 636, 669, 749, 793, 804], "random_st": [33, 34, 35, 36, 41, 66, 103, 109, 117, 119, 120, 121, 140, 144, 163, 192, 232, 251, 252, 287, 547, 588, 636, 669, 688, 736, 737, 738, 747, 748, 750, 763], "correl": [33, 38, 44, 48, 52, 70, 101, 130, 172, 188, 223, 231, 232, 237, 255, 256, 259, 277, 284, 287, 317, 320, 323, 336, 343, 411, 423, 429, 489, 490, 495, 636, 651, 671, 768, 773, 936], "indic": [33, 39, 42, 48, 57, 73, 74, 96, 97, 107, 127, 166, 167, 168, 170, 171, 172, 175, 177, 181, 182, 186, 194, 195, 196, 201, 204, 215, 218, 222, 226, 227, 228, 230, 232, 233, 236, 237, 239, 243, 245, 246, 250, 252, 257, 260, 282, 283, 285, 287, 288, 291, 293, 297, 307, 309, 310, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 378, 380, 381, 382, 392, 395, 397, 403, 423, 428, 439, 475, 483, 485, 489, 490, 491, 499, 504, 507, 512, 521, 522, 525, 550, 551, 559, 561, 563, 566, 567, 568, 574, 579, 582, 612, 613, 627, 630, 632, 633, 635, 636, 637, 638, 639, 644, 646, 651, 652, 653, 654, 663, 667, 669, 670, 676, 677, 679, 680, 686, 695, 701, 702, 705, 714, 717, 723, 728, 752, 753, 757, 760, 764, 770, 771, 772, 774, 775, 776, 779, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 816, 817, 834, 849, 852, 853, 854, 856, 860, 866, 867, 868, 870, 872, 873, 875, 879, 880, 881, 883, 885, 887, 888, 890, 891, 896, 898, 907, 908, 909, 910, 911, 913, 929, 934], "eog_epoch": [33, 198, 226, 231, 654], "mrt31": 33, "2908": 33, "eog_ind": [33, 232, 636], "eog_scor": [33, 198, 232, 341], "find_bads_eog": [33, 198, 232, 283, 291, 294, 341, 636], "plot_scor": [33, 101, 109, 232, 291, 294, 636], "plot_compon": [33, 103, 232, 282, 285, 303, 305, 306, 636, 939], "topograph": [33, 34, 42, 44, 45, 53, 150, 156, 159, 177, 223, 277, 303, 307, 333, 334, 336, 340, 341, 483, 490, 564, 632, 633, 636, 701, 784, 853, 860, 870, 875, 881, 888, 896, 898, 956], "compon": [33, 34, 38, 40, 41, 47, 53, 55, 56, 57, 60, 67, 68, 70, 71, 73, 85, 97, 101, 103, 104, 105, 106, 111, 113, 114, 121, 146, 152, 163, 176, 177, 188, 192, 198, 203, 204, 205, 207, 208, 210, 218, 223, 226, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 245, 252, 263, 265, 274, 277, 279, 280, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 297, 300, 303, 304, 305, 308, 312, 316, 317, 320, 333, 334, 335, 337, 341, 364, 365, 380, 396, 423, 427, 428, 439, 440, 441, 450, 475, 476, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 504, 522, 523, 526, 527, 528, 545, 547, 548, 550, 551, 566, 606, 609, 610, 612, 613, 614, 615, 620, 636, 637, 644, 646, 647, 650, 651, 659, 660, 669, 671, 788, 876, 879, 880, 881, 882, 883, 889, 936, 939, 949, 956], "saw": [33, 166, 168, 193, 194, 197, 226, 227, 228, 234, 243, 259], "2nd": [33, 177, 222, 226, 257, 260, 270, 277, 286, 651, 725], "ecg": [33, 98, 100, 103, 107, 108, 109, 117, 119, 120, 121, 136, 138, 157, 166, 167, 168, 172, 175, 177, 193, 194, 195, 198, 216, 218, 227, 228, 230, 231, 233, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 273, 279, 281, 287, 289, 293, 294, 296, 299, 300, 304, 319, 320, 331, 332, 333, 334, 336, 341, 379, 428, 443, 516, 550, 551, 562, 563, 566, 579, 633, 636, 648, 653, 654, 661, 664, 736, 737, 770, 784, 786, 787, 788, 789, 790, 866, 882, 887, 889], "too": [33, 53, 96, 104, 111, 166, 168, 170, 176, 177, 183, 184, 187, 191, 198, 204, 207, 226, 227, 228, 229, 230, 231, 234, 236, 238, 245, 255, 257, 259, 270, 273, 281, 282, 293, 294, 302, 303, 309, 331, 332, 333, 334, 336, 380, 396, 411, 443, 504, 507, 550, 551, 557, 567, 639, 644, 646, 647, 660, 670, 671, 689, 695, 834, 856, 898, 936, 956], "dipolar": [33, 526], "plot_overlai": [33, 109, 232, 286, 304, 307, 636], "clean": [33, 100, 101, 102, 110, 167, 170, 185, 192, 193, 198, 216, 227, 229, 231, 232, 233, 234, 238, 260, 270, 285, 293, 309, 326, 331, 332, 341, 550, 551, 564, 595, 636, 679, 694, 770, 880, 936], "default": [33, 47, 57, 69, 70, 101, 114, 130, 139, 141, 147, 161, 163, 166, 168, 171, 172, 175, 176, 177, 182, 184, 188, 192, 193, 194, 195, 196, 197, 198, 204, 205, 215, 216, 218, 219, 227, 228, 230, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 250, 255, 259, 260, 265, 268, 269, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 316, 317, 319, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 533, 534, 535, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 676, 677, 678, 679, 680, 683, 684, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 765, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 829, 831, 833, 834, 836, 838, 843, 844, 845, 849, 850, 852, 853, 854, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 905, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 946], "covarari": 33, "noise_cov": [33, 37, 57, 60, 66, 67, 68, 74, 75, 76, 77, 80, 81, 84, 85, 86, 121, 136, 148, 178, 188, 198, 203, 204, 206, 208, 218, 232, 284, 328, 331, 332, 333, 334, 341, 365, 367, 369, 439, 440, 527, 545, 547, 548, 550, 551, 614, 636, 866, 870, 874, 876, 889], "dig": [33, 136, 145, 153, 162, 182, 183, 184, 185, 186, 192, 195, 196, 209, 210, 243, 250, 274, 287, 288, 301, 336, 374, 380, 411, 502, 558, 599, 852], "montag": [33, 34, 45, 97, 109, 142, 153, 161, 162, 177, 185, 216, 217, 232, 250, 270, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 301, 302, 303, 306, 307, 308, 312, 317, 319, 320, 331, 332, 333, 334, 336, 348, 380, 383, 384, 386, 391, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 434, 516, 535, 550, 551, 563, 666, 668, 672, 886, 898, 906], "It": [33, 36, 39, 57, 65, 73, 81, 87, 97, 98, 101, 117, 121, 122, 130, 141, 143, 144, 148, 166, 168, 170, 171, 175, 176, 177, 182, 183, 184, 185, 186, 192, 195, 196, 197, 198, 201, 203, 206, 215, 216, 217, 219, 223, 227, 228, 230, 231, 232, 233, 235, 236, 237, 243, 244, 246, 250, 255, 257, 258, 260, 263, 265, 269, 270, 283, 286, 288, 292, 303, 309, 310, 312, 316, 317, 319, 320, 323, 324, 327, 330, 331, 332, 333, 334, 335, 336, 337, 339, 345, 346, 347, 349, 354, 364, 365, 371, 380, 398, 410, 423, 428, 434, 483, 491, 492, 518, 526, 545, 547, 548, 550, 551, 559, 566, 570, 571, 583, 594, 597, 603, 609, 610, 614, 619, 620, 636, 640, 646, 656, 660, 671, 672, 679, 685, 692, 696, 700, 705, 709, 711, 750, 756, 759, 773, 778, 784, 787, 788, 790, 802, 809, 812, 824, 834, 874, 879, 899, 925, 928, 932, 936, 941, 945, 946, 949, 952], "spm_dig_montag": 33, "trans_fnam": [33, 95, 107, 182, 204, 218], "spm_ctf_meg_example_faces1_3d_raw": 33, "map": [33, 34, 36, 42, 45, 49, 50, 51, 52, 53, 62, 66, 67, 69, 82, 84, 98, 103, 105, 113, 121, 132, 133, 134, 136, 142, 146, 150, 152, 155, 156, 160, 161, 162, 169, 170, 171, 172, 177, 182, 184, 186, 191, 192, 194, 197, 201, 204, 207, 208, 222, 223, 226, 227, 228, 229, 232, 233, 234, 238, 243, 251, 253, 254, 255, 260, 263, 264, 265, 274, 277, 283, 284, 288, 291, 292, 295, 298, 299, 301, 303, 307, 309, 312, 316, 319, 325, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 355, 357, 364, 378, 380, 392, 408, 429, 432, 433, 441, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 504, 507, 510, 512, 524, 528, 536, 545, 546, 547, 548, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 591, 594, 595, 602, 603, 614, 632, 633, 636, 637, 645, 651, 659, 692, 698, 701, 703, 704, 708, 709, 718, 719, 724, 731, 733, 738, 744, 749, 752, 765, 767, 768, 771, 773, 777, 778, 784, 785, 786, 787, 788, 789, 790, 795, 817, 834, 836, 853, 855, 860, 863, 864, 866, 870, 871, 875, 881, 888, 889, 894, 895, 896, 897, 898, 899, 900, 906, 941, 956], "plot_field": [33, 152, 176, 303, 333, 334], "time_view": [33, 87, 136, 152, 161, 162, 203, 207, 218, 273, 291, 333, 334, 338, 339, 342, 345, 346, 347, 834, 836, 871, 894, 899], "daat": 33, "plot_whit": [33, 120, 148, 178, 188, 203, 291, 301, 331, 332, 333, 334, 550, 551, 866, 870, 889, 936], "oct": [33, 37, 48, 50, 54, 55, 57, 61, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 152, 157, 182, 184, 185, 186, 192, 198, 203, 204, 205, 207, 208, 218, 223, 251, 252, 263, 265, 299, 323, 338, 342, 344, 346, 482, 732, 894], "spm_": 33, "s_dspm_invers": 33, "comment": [33, 72, 88, 142, 175, 176, 178, 197, 198, 212, 216, 235, 250, 269, 273, 291, 292, 293, 301, 302, 308, 309, 319, 320, 324, 330, 331, 332, 333, 334, 337, 341, 403, 541, 700, 705, 784, 788, 819, 860, 874, 934, 941], "3d": [33, 53, 57, 61, 64, 66, 78, 85, 87, 123, 124, 150, 156, 161, 162, 168, 177, 182, 184, 186, 187, 197, 201, 202, 211, 217, 223, 233, 237, 255, 258, 260, 273, 283, 287, 288, 291, 292, 293, 294, 300, 302, 303, 305, 308, 309, 317, 318, 319, 323, 329, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 357, 380, 381, 393, 406, 435, 491, 521, 522, 550, 551, 572, 584, 594, 647, 660, 671, 765, 771, 772, 834, 835, 836, 837, 842, 844, 846, 847, 852, 857, 864, 871, 886, 892, 894, 895, 899, 901, 902, 904, 906, 920, 937, 942, 946, 952, 956], "both": [33, 45, 57, 58, 59, 64, 66, 67, 71, 73, 77, 84, 85, 86, 96, 97, 98, 101, 113, 117, 121, 126, 136, 141, 158, 166, 167, 175, 176, 177, 188, 192, 194, 195, 196, 197, 198, 201, 203, 204, 206, 207, 208, 209, 216, 217, 218, 219, 223, 226, 228, 229, 230, 231, 232, 233, 234, 237, 238, 240, 243, 252, 257, 259, 263, 264, 265, 268, 269, 270, 274, 277, 283, 284, 287, 288, 293, 294, 298, 302, 305, 308, 309, 310, 317, 319, 320, 326, 327, 330, 331, 332, 333, 334, 338, 339, 341, 342, 344, 345, 346, 347, 354, 364, 365, 374, 383, 423, 427, 428, 429, 439, 440, 441, 483, 490, 502, 507, 524, 526, 527, 545, 547, 548, 550, 551, 570, 594, 614, 636, 639, 646, 651, 653, 685, 688, 701, 702, 706, 711, 733, 734, 738, 747, 765, 767, 771, 772, 774, 775, 784, 786, 787, 788, 813, 816, 831, 834, 836, 849, 859, 860, 867, 871, 872, 873, 876, 879, 894, 899, 915, 931, 936, 937, 948], "ven": [33, 76], "save_imag": [33, 263, 265, 834], "dspm_map": 33, "png": [33, 73, 142, 149, 198, 263, 265, 284, 305, 323, 341], "classifi": [34, 35, 36, 37, 39, 43, 46, 53, 223, 237, 285, 331, 333, 334, 336, 487, 498, 500, 501, 636, 660, 698, 742, 743, 956], "featur": [34, 37, 41, 44, 45, 53, 125, 129, 168, 176, 197, 198, 222, 223, 234, 237, 246, 255, 260, 270, 277, 284, 303, 309, 310, 311, 317, 320, 333, 334, 338, 339, 341, 342, 345, 346, 347, 483, 486, 489, 490, 492, 493, 495, 498, 516, 550, 551, 636, 660, 671, 694, 768, 769, 860, 870, 872, 894, 899, 901, 905, 936, 937, 942, 949, 950, 956], "extract": [34, 35, 44, 47, 50, 53, 62, 64, 67, 82, 88, 94, 100, 101, 106, 109, 127, 139, 140, 151, 155, 161, 162, 167, 168, 170, 175, 177, 184, 185, 191, 192, 195, 197, 207, 212, 215, 217, 218, 223, 226, 230, 232, 233, 234, 241, 242, 244, 250, 256, 257, 258, 265, 273, 277, 288, 290, 291, 297, 300, 301, 302, 303, 308, 309, 316, 317, 319, 320, 323, 324, 331, 333, 336, 337, 338, 339, 342, 344, 345, 346, 347, 375, 410, 411, 412, 413, 414, 415, 418, 420, 421, 431, 441, 456, 483, 487, 490, 491, 507, 517, 524, 550, 554, 559, 566, 571, 590, 602, 603, 617, 636, 640, 671, 696, 700, 701, 705, 711, 756, 759, 833, 859, 878, 956], "en": [34, 45, 223, 277, 287, 322, 954], "wikipedia": [34, 223, 255, 277], "org": [34, 41, 58, 59, 97, 98, 109, 114, 140, 141, 142, 143, 147, 161, 162, 223, 257, 259, 260, 263, 269, 273, 277, 290, 309, 314, 338, 342, 346, 450, 475, 476, 491, 522, 637, 729, 768, 815, 818, 830, 894, 936], "wiki": [34, 181, 223, 316, 319, 338, 342, 346, 636, 830, 894], "common_spatial_pattern": [34, 223], "document": [34, 41, 90, 114, 161, 162, 169, 175, 177, 186, 192, 194, 195, 196, 198, 203, 207, 216, 229, 230, 232, 234, 237, 243, 245, 246, 250, 269, 273, 277, 283, 284, 287, 288, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 308, 311, 313, 314, 316, 317, 320, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 397, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 629, 632, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 732, 733, 735, 736, 737, 738, 741, 746, 748, 749, 752, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 775, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 804, 805, 808, 809, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 829, 833, 834, 836, 843, 844, 852, 861, 864, 868, 869, 870, 871, 874, 876, 879, 880, 881, 886, 887, 889, 890, 892, 893, 894, 895, 899, 900, 901, 905, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 946, 949], "physionet": [34, 163, 232, 277, 287, 290, 317, 450, 475, 476], "martin": [34, 36, 61, 73, 131, 277, 278, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 308, 314, 317, 320, 483], "billing": [34, 291, 300, 301], "tugraz": 34, "sklearn": [34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 144, 163, 197, 222, 223, 232, 255, 286, 290, 292, 299, 309, 423, 428, 484, 486, 489, 492, 493, 497, 500, 830, 942], "discriminant_analysi": [34, 35], "lineardiscriminantanalysi": [34, 35], "model_select": [34, 35, 36, 38, 41, 42, 45, 286, 423, 428, 500], "shufflesplit": 34, "cross_val_scor": [34, 35], "classif": [34, 35, 36, 37, 38, 41, 77, 86, 164, 165, 172, 188, 191, 223, 277, 287, 317, 325, 331, 367, 369, 475, 484, 512, 566, 689, 786, 869, 956], "start": [34, 48, 55, 59, 60, 66, 88, 92, 97, 108, 120, 123, 149, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 186, 187, 191, 192, 193, 194, 196, 199, 200, 203, 204, 212, 215, 223, 227, 228, 230, 231, 232, 233, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 268, 269, 273, 284, 290, 291, 294, 301, 303, 304, 308, 309, 311, 316, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 350, 351, 352, 363, 403, 410, 411, 412, 413, 423, 426, 428, 483, 489, 490, 495, 507, 523, 524, 525, 541, 542, 549, 550, 551, 557, 559, 566, 570, 577, 581, 596, 602, 606, 625, 636, 639, 643, 648, 649, 653, 654, 656, 660, 661, 662, 663, 664, 666, 685, 701, 749, 761, 771, 772, 774, 775, 784, 785, 788, 791, 792, 793, 794, 795, 796, 797, 821, 834, 840, 860, 862, 869, 875, 880, 882, 883, 889, 936, 939, 941, 944, 945, 946, 950, 951, 956], "cue": [34, 161, 308, 507], "feet": [34, 35, 139, 450], "standard_1005": [34, 97, 109, 185, 196, 232], "set_montag": [34, 41, 45, 94, 97, 109, 153, 155, 161, 162, 177, 185, 196, 208, 216, 217, 232, 250, 270, 283, 285, 288, 290, 291, 293, 294, 301, 303, 305, 308, 320, 331, 332, 333, 334, 336, 348, 516, 550, 551, 563, 575], "skip_by_annot": [34, 35, 284, 285, 286, 306, 331, 332, 333, 334, 550, 551, 660, 671], "t1": [34, 35, 56, 70, 76, 139, 182, 183, 184, 185, 186, 187, 202, 287, 288, 305, 306, 317, 319, 320, 323, 344, 346, 347, 371, 375, 376, 377, 388, 437, 460, 550, 667, 733, 854, 900], "t2": [34, 35, 139, 305, 388, 550], "train": [34, 36, 37, 39, 41, 42, 45, 114, 163, 222, 223, 280, 309, 316, 317, 483, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 500, 636, 637, 879], "epochs_train": [34, 163], "edf": [34, 35, 109, 139, 163, 185, 219, 232, 281, 282, 284, 286, 287, 288, 290, 291, 292, 294, 299, 300, 301, 303, 305, 306, 307, 308, 317, 320, 516, 550, 551, 559, 566, 574, 689, 939], "eegmmidb": [34, 35, 109, 139, 185, 232, 290, 450], "s001": [34, 35, 109, 139, 185, 232], "s001r06": [34, 35, 139, 185], "19999": [34, 139, 185, 232], "124": [34, 61, 139, 185, 195, 223, 232, 236, 255, 259, 260, 277, 459], "994": [34, 35, 97, 109, 139, 185, 232, 260], "s001r10": [34, 35, 139], "s001r14": [34, 35, 139], "265": [34, 35, 39, 107, 108, 139, 195, 218, 236, 245, 248, 277, 741, 746, 956], "656": [34, 35, 260], "descript": [34, 35, 139, 149, 155, 161, 162, 163, 166, 168, 170, 177, 194, 195, 196, 215, 217, 218, 219, 228, 238, 243, 244, 245, 250, 255, 288, 292, 293, 294, 302, 303, 306, 309, 317, 319, 325, 331, 332, 333, 334, 336, 340, 350, 390, 391, 424, 425, 428, 437, 512, 550, 551, 552, 570, 595, 636, 639, 653, 654, 657, 661, 695, 784, 788, 789, 881, 890], "801": [34, 170, 260, 269], "discrim": 34, "mont": [34, 277], "carlo": [34, 277, 290, 305, 306], "cross": [34, 35, 36, 37, 38, 41, 42, 45, 53, 58, 59, 60, 62, 70, 82, 105, 113, 132, 133, 146, 148, 150, 156, 163, 188, 192, 203, 222, 223, 227, 232, 234, 237, 251, 252, 259, 277, 280, 281, 282, 283, 284, 285, 290, 299, 300, 301, 302, 304, 305, 308, 312, 317, 319, 328, 331, 333, 335, 336, 342, 343, 355, 357, 364, 365, 366, 423, 428, 429, 433, 441, 483, 486, 489, 495, 499, 500, 504, 524, 550, 602, 612, 613, 614, 615, 618, 633, 636, 646, 653, 660, 661, 671, 692, 698, 701, 703, 711, 785, 791, 792, 793, 794, 795, 796, 797, 803, 834, 862, 936, 952, 956], "epochs_data": [34, 282, 485, 488, 492], "get_data": [34, 35, 36, 38, 39, 40, 42, 44, 47, 97, 99, 102, 110, 123, 124, 127, 141, 142, 159, 163, 166, 167, 172, 175, 192, 193, 223, 230, 233, 256, 260, 268, 269, 270, 273, 283, 286, 287, 290, 291, 293, 294, 304, 308, 320, 331, 332, 333, 334, 550, 551, 785, 786, 787, 789, 790], "epochs_data_train": 34, "cv": [34, 35, 36, 37, 38, 41, 42, 45, 223, 282, 283, 285, 423, 428, 499, 500], "test_siz": 34, "cv_split": 34, "split": [34, 36, 37, 41, 42, 45, 84, 94, 114, 121, 171, 185, 192, 222, 223, 234, 251, 256, 265, 273, 277, 279, 281, 283, 285, 287, 291, 292, 294, 300, 307, 308, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 423, 428, 500, 542, 549, 550, 551, 572, 575, 609, 610, 671, 761, 770, 785, 815, 818, 834, 862, 894, 899, 955], "assembl": [34, 35, 259, 293, 318, 614, 776], "lda": [34, 35], "norm_trac": [34, 35, 223, 284, 483], "scikit": [34, 35, 42, 44, 45, 144, 223, 232, 281, 282, 284, 286, 288, 290, 292, 297, 309, 318, 487, 489, 491, 492, 493, 494, 496, 497, 498, 501, 636], "clf": [34, 35, 36, 37, 38, 39, 41, 44, 223, 281, 498], "class_bal": 34, "accuraci": [34, 36, 41, 59, 107, 163, 212, 277, 290, 294, 328, 331, 332, 333, 334, 340, 440, 441, 483, 489, 490, 495, 504, 526, 550, 551, 614, 635, 636, 650, 651, 666, 741, 746, 784, 786, 787, 789, 790, 814, 817, 824, 853, 868, 875, 879, 888, 891, 896, 898], "chanc": [34, 35, 36, 37, 223, 302, 310], "fit_transform": [34, 35, 36, 40, 44, 223, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 496, 497, 498, 637], "plot_pattern": [34, 38, 223, 283, 303, 305, 483, 490], "ch_type": [34, 40, 48, 52, 68, 90, 106, 108, 113, 127, 139, 141, 147, 152, 153, 157, 167, 168, 171, 175, 176, 177, 192, 196, 202, 203, 217, 232, 237, 238, 246, 250, 260, 268, 269, 283, 290, 328, 331, 332, 333, 334, 336, 386, 387, 443, 483, 490, 550, 551, 579, 594, 635, 636, 641, 651, 660, 724, 728, 784, 786, 787, 788, 789, 790, 867, 868, 875, 879, 891, 892, 896, 898, 907], "au": [34, 212, 328, 331, 332, 333, 334, 340, 443, 483, 490, 550, 551, 659, 784, 786, 787, 789, 790, 868, 875, 888, 896], "7e": [34, 35, 58, 61, 71, 74, 75, 80, 81, 84, 97, 121, 148, 176, 178, 188, 198, 204, 205, 208, 209, 211, 218, 223, 227, 251], "64": [34, 35, 38, 39, 45, 47, 52, 58, 59, 60, 61, 67, 71, 72, 73, 76, 84, 85, 107, 108, 109, 128, 130, 135, 139, 141, 163, 169, 184, 185, 195, 196, 197, 202, 204, 207, 210, 211, 218, 222, 223, 236, 252, 255, 256, 258, 259, 260, 277, 317, 320, 328, 331, 332, 333, 334, 337, 340, 342, 483, 490, 548, 550, 551, 573, 609, 610, 619, 620, 635, 636, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898, 939, 942, 948], "09": [34, 35, 46, 47, 68, 69, 70, 71, 75, 102, 107, 108, 129, 130, 143, 147, 148, 151, 156, 184, 185, 186, 188, 200, 201, 203, 206, 211, 212, 236, 254, 256, 257, 259, 260, 277, 313, 337, 342, 599, 678, 765, 815, 818, 955, 956], "0001": [34, 35, 58, 105, 113, 146, 152, 176, 205, 227, 274, 547, 548], "00012": [34, 35], "00011": [34, 35], "933333": 34, "533333": 34, "00025": 34, "00026": 34, "w_length": 34, "int": [34, 37, 45, 57, 95, 99, 117, 120, 122, 136, 141, 169, 175, 186, 195, 197, 212, 218, 222, 229, 230, 239, 243, 250, 252, 265, 270, 273, 286, 290, 294, 307, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 384, 385, 395, 397, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 499, 500, 502, 504, 505, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 533, 534, 536, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 730, 732, 733, 734, 735, 736, 737, 738, 747, 748, 749, 750, 752, 754, 755, 756, 757, 758, 759, 760, 761, 763, 764, 767, 770, 771, 772, 773, 774, 775, 776, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 803, 804, 805, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 829, 833, 834, 836, 843, 844, 845, 849, 852, 853, 854, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 879, 880, 881, 882, 883, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 913, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935], "w_step": 34, "w_start": 34, "scores_window": 34, "train_idx": 34, "test_idx": 34, "y_train": [34, 163, 222], "y_test": [34, 163, 222], "x_train": [34, 222], "x_test": [34, 222], "slide": [34, 38, 47, 182, 270, 341, 813, 814, 816, 817], "score_this_window": 34, "w_time": [34, 35], "linestyl": [34, 35, 37, 47, 124, 138, 139, 140, 176, 223, 229, 233, 238, 260, 273, 294, 802, 812, 860, 884], "axhlin": [34, 35, 36, 37, 39, 45, 47, 107, 108, 139, 140, 170, 186, 212, 223, 270, 636, 882], "xlabel": [34, 35, 41, 42, 45, 48, 54, 55, 63, 65, 67, 79, 84, 95, 99, 108, 117, 120, 124, 134, 135, 137, 141, 163, 177, 186, 203, 206, 207, 212, 222, 229, 238, 239, 252, 255, 257, 265, 269, 270, 273, 284, 290, 802, 812], "ylabel": [34, 35, 41, 42, 45, 48, 54, 55, 63, 65, 67, 79, 84, 95, 96, 99, 108, 117, 120, 124, 134, 135, 137, 163, 177, 186, 203, 206, 207, 212, 222, 229, 234, 238, 239, 252, 255, 257, 265, 269, 270, 273, 802, 812], "legend": [34, 35, 36, 37, 38, 42, 45, 47, 48, 54, 63, 64, 65, 67, 71, 95, 97, 123, 124, 137, 138, 163, 170, 171, 176, 188, 192, 198, 206, 222, 223, 238, 243, 244, 265, 269, 270, 273, 283, 285, 287, 288, 291, 293, 300, 304, 305, 331, 332, 333, 334, 802, 812, 834, 849, 859, 860, 866, 869, 874], "loc": [34, 36, 42, 63, 65, 97, 139, 151, 162, 166, 169, 170, 171, 195, 202, 206, 209, 212, 238, 269, 273, 320, 336, 398, 682, 802, 812, 859, 906], "zoltan": [34, 223, 277, 483], "kole": [34, 223, 277, 483], "quantit": [34, 188, 223, 277, 310, 636, 936], "abnorm": [34, 223, 277], "clinic": [34, 97, 98, 105, 139, 165, 177, 223, 227, 231, 232, 277, 317, 320, 603, 635, 636, 644, 645, 651, 671, 686, 815, 818, 956], "electroencephalographi": [34, 84, 98, 105, 139, 177, 223, 227, 231, 277, 320, 342, 635, 645, 686], "neurophysiologi": [34, 97, 98, 105, 139, 177, 223, 227, 231, 232, 277, 320, 635, 636, 644, 645, 651, 686, 815, 818], "79": [34, 42, 45, 61, 67, 71, 73, 107, 130, 135, 139, 141, 146, 183, 184, 195, 202, 207, 210, 222, 223, 236, 255, 256, 259, 260, 277, 475, 503], "440": [34, 107, 223, 236, 277], "447": [34, 223, 260, 277], "1991": [34, 223, 277, 483], "1016": [34, 38, 39, 44, 45, 47, 61, 68, 70, 85, 86, 97, 98, 101, 102, 105, 121, 128, 139, 140, 146, 148, 154, 170, 177, 181, 188, 206, 223, 227, 229, 231, 232, 239, 255, 256, 260, 277, 314, 317, 320, 333, 334, 337, 342, 343, 364, 369, 423, 429, 459, 487, 489, 490, 491, 501, 503, 545, 548, 603, 604, 614, 618, 635, 636, 644, 645, 650, 651, 675, 678, 686, 741, 744, 746, 771, 772, 774, 775, 777, 778, 800, 802, 812, 815, 818, 853, 936], "0013": [34, 98, 105, 139, 177, 223, 227, 231, 277, 320, 635, 645, 686], "4694": [34, 98, 105, 139, 177, 223, 227, 231, 277, 320, 635, 645, 686], "90163": [34, 223, 277], "gerwin": [34, 232, 277, 317, 450], "schalk": [34, 232, 277, 317, 450], "denni": [34, 232, 277, 317, 450], "mcfarland": [34, 232, 277, 317, 450], "thilo": [34, 232, 277, 317, 450], "hinterberg": [34, 232, 277, 317, 450], "niel": [34, 232, 277, 306, 317, 450], "birbaum": [34, 232, 277, 317, 450], "jonathan": [34, 128, 232, 256, 277, 292, 317, 450, 464], "wolpaw": [34, 232, 277, 317, 450], "bci2000": [34, 232, 277, 317, 450], "bci": [34, 41, 114, 139, 185, 223, 232, 277, 300, 317, 450, 637], "ieee": [34, 41, 66, 72, 77, 98, 109, 110, 114, 144, 163, 170, 188, 206, 223, 232, 268, 277, 316, 317, 320, 331, 332, 333, 334, 364, 365, 367, 423, 450, 476, 483, 507, 547, 548, 550, 551, 636, 637, 645, 679, 786, 789, 805, 815, 818, 936], "transact": [34, 41, 77, 98, 110, 114, 144, 163, 188, 206, 223, 232, 268, 277, 316, 317, 320, 331, 332, 333, 334, 364, 365, 367, 423, 450, 476, 483, 547, 550, 551, 603, 636, 637, 645, 679, 786, 789, 805, 936], "biomed": [34, 41, 98, 110, 114, 144, 163, 206, 216, 223, 232, 252, 277, 316, 317, 320, 322, 364, 365, 450, 476, 483, 636, 637, 645, 679, 954], "engin": [34, 41, 98, 109, 110, 114, 144, 206, 223, 232, 233, 234, 252, 277, 309, 316, 317, 320, 364, 365, 450, 476, 483, 603, 636, 637, 645, 679, 948], "1034": [34, 46, 232, 236, 277, 317, 450, 737, 956], "1043": [34, 195, 232, 277, 317, 450], "2004": [34, 97, 222, 232, 277, 317, 320, 423, 450, 644, 744], "1109": [34, 41, 66, 72, 77, 98, 109, 110, 114, 144, 163, 170, 188, 206, 222, 223, 232, 268, 277, 316, 317, 320, 331, 332, 333, 334, 364, 365, 367, 423, 450, 476, 483, 507, 547, 548, 550, 551, 636, 637, 645, 679, 786, 789, 805, 936], "tbme": [34, 41, 98, 110, 114, 144, 223, 232, 277, 316, 317, 450, 483, 636, 637, 645, 679], "827072": [34, 232, 277, 317, 450], "ari": [34, 163, 232, 277, 302, 317, 450, 475, 476, 949], "goldberg": [34, 163, 232, 277, 317, 450, 475, 476], "lui": [34, 163, 232, 277, 317, 450, 475, 476], "amar": [34, 163, 232, 277, 317, 450, 475, 476], "leon": [34, 163, 232, 277, 317, 450, 475, 476], "glass": [34, 57, 61, 66, 70, 85, 87, 163, 207, 232, 277, 317, 339, 345, 346, 347, 450, 475, 476, 895, 899, 900], "jeffrei": [34, 163, 232, 277, 317, 450, 475, 476, 603], "hausdorff": [34, 163, 232, 277, 317, 450, 475, 476], "plamen": [34, 163, 232, 277, 317, 450, 475, 476], "ivanov": [34, 163, 232, 277, 317, 450, 475, 476], "roger": [34, 36, 163, 232, 277, 317, 450, 475, 476], "joseph": [34, 163, 232, 277, 317, 450, 475, 476], "mietu": [34, 163, 232, 277, 317, 450, 475, 476], "georg": [34, 163, 232, 239, 277, 306, 307, 317, 450, 475, 476, 650], "moodi": [34, 163, 232, 277, 317, 450, 475, 476], "chung": [34, 163, 232, 277, 317, 450, 475, 476], "kang": [34, 163, 232, 277, 317, 450, 475, 476], "peng": [34, 163, 232, 277, 317, 450, 475, 476], "h": [34, 123, 128, 139, 163, 229, 231, 232, 245, 273, 277, 304, 306, 307, 314, 316, 317, 320, 323, 325, 331, 332, 389, 450, 475, 476, 519, 522, 635, 686, 744, 766, 782, 799, 866, 877], "eugen": [34, 163, 232, 277, 317, 450, 475, 476], "stanlei": [34, 163, 232, 277, 317, 450, 475, 476], "physiobank": [34, 163, 232, 277, 317, 450, 475, 476], "physiotoolkit": [34, 163, 232, 277, 317, 450, 475, 476], "new": [34, 40, 45, 47, 53, 57, 88, 96, 107, 120, 140, 148, 163, 166, 168, 171, 175, 177, 178, 187, 188, 191, 198, 201, 203, 208, 209, 219, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 243, 245, 246, 250, 255, 258, 259, 260, 268, 274, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 354, 355, 360, 364, 365, 367, 369, 370, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 389, 390, 391, 392, 396, 398, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 439, 440, 441, 442, 450, 457, 459, 460, 475, 476, 482, 483, 485, 487, 489, 490, 494, 495, 502, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 530, 531, 533, 536, 540, 541, 542, 544, 545, 547, 548, 549, 550, 551, 559, 562, 563, 564, 566, 567, 568, 572, 575, 581, 586, 588, 590, 591, 592, 593, 594, 595, 596, 597, 599, 601, 602, 603, 604, 605, 606, 609, 610, 611, 612, 613, 616, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 635, 636, 637, 638, 639, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 656, 657, 660, 661, 667, 670, 671, 672, 679, 681, 684, 685, 686, 691, 695, 697, 698, 702, 703, 706, 714, 716, 717, 718, 719, 720, 722, 725, 728, 733, 735, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 761, 765, 767, 777, 778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 798, 800, 803, 804, 805, 808, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 831, 834, 835, 836, 838, 843, 844, 845, 849, 852, 853, 854, 855, 857, 859, 860, 862, 863, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 896, 898, 899, 900, 902, 905, 908, 910, 911, 922, 925, 926, 927, 931, 932, 934, 936, 937, 942, 944, 946, 947, 948, 950, 951, 954], "research": [34, 94, 97, 149, 163, 167, 170, 177, 181, 194, 226, 232, 240, 252, 270, 277, 311, 314, 317, 322, 450, 475, 476, 570, 604, 675, 766, 950, 954], "resourc": [34, 151, 163, 170, 230, 232, 277, 312, 317, 321, 450, 475, 476, 942], "complex": [34, 58, 63, 141, 161, 163, 219, 232, 255, 277, 286, 291, 295, 302, 303, 306, 309, 317, 319, 331, 332, 333, 334, 357, 450, 475, 476, 496, 550, 551, 607, 736, 788, 804, 805, 813, 814, 816], "circul": [34, 163, 232, 277, 317, 450, 475, 476], "2000": [34, 36, 163, 219, 228, 229, 231, 232, 234, 243, 277, 316, 317, 320, 331, 332, 333, 334, 336, 450, 475, 476, 483, 512, 550, 551, 552, 603, 635, 763], "1161": [34, 163, 223, 232, 277, 317, 450, 475, 476], "cir": [34, 163, 232, 277, 317, 450, 475, 476], "101": [34, 97, 141, 163, 184, 195, 217, 223, 232, 234, 236, 255, 260, 277, 317, 450, 475, 476, 491], "e215": [34, 163, 232, 277, 317, 450, 475, 476], "766": [34, 39, 46, 956], "decoding_csp_eeg": [34, 46, 956], "decomposit": [35, 37, 40, 43, 46, 53, 54, 55, 56, 58, 64, 65, 70, 73, 78, 83, 87, 101, 103, 130, 131, 134, 135, 137, 139, 140, 152, 192, 198, 207, 223, 226, 232, 233, 250, 251, 255, 257, 258, 260, 263, 265, 269, 270, 277, 282, 290, 292, 293, 304, 316, 320, 331, 333, 334, 336, 338, 339, 342, 345, 346, 347, 483, 490, 491, 496, 497, 517, 564, 596, 617, 636, 651, 669, 792, 795, 805, 811, 813, 814, 816, 817, 956], "iter": [35, 45, 53, 61, 62, 69, 70, 82, 85, 109, 117, 120, 121, 122, 131, 139, 160, 163, 183, 195, 198, 205, 206, 222, 232, 245, 252, 259, 263, 264, 265, 277, 279, 287, 290, 294, 305, 307, 308, 320, 325, 326, 328, 331, 332, 333, 334, 335, 336, 337, 341, 342, 343, 355, 358, 359, 362, 370, 416, 423, 429, 434, 486, 493, 500, 524, 545, 546, 547, 548, 549, 550, 551, 586, 602, 603, 605, 607, 610, 636, 639, 646, 651, 656, 669, 703, 734, 749, 769, 770, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 793, 804, 821, 824, 834, 849, 879, 895, 956], "roll": [35, 136, 152, 212, 834, 904], "laura": [35, 223, 277, 283, 284], "gwilliam": [35, 223, 277, 283, 284], "nyu": [35, 63, 128, 147, 160, 197, 255, 288], "jean": [35, 36, 37, 38, 39, 40, 42, 44, 98, 105, 211, 223, 227, 232, 277, 279, 280, 281, 282, 283, 284, 285, 287, 290, 292, 293, 294, 300, 301, 303, 316, 320, 636, 645, 744], "remi": [35, 36, 37, 38, 39, 40, 42, 44, 279, 280, 281, 282, 283, 284, 285, 287, 290, 292, 293, 294, 300, 301, 303], "king": [35, 36, 37, 38, 39, 40, 42, 44, 223, 277, 279, 280, 281, 282, 283, 284, 285, 287, 290, 292, 293, 294, 300, 301, 303], "jeanremi": [35, 36, 37, 38, 39, 40, 42, 44], "alex": [35, 58, 64, 97, 98, 109, 141, 142, 143, 147, 161, 162, 211, 259, 260, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 954], "barach": [35, 38, 41, 114, 223, 277, 279, 282, 284, 483], "stratifiedkfold": [35, 36, 41, 42, 285, 500], "make_pipelin": [35, 36, 37, 38, 39, 41, 44, 163, 223, 498], "labelencod": 35, "motor": [35, 43, 46, 53, 58, 102, 109, 136, 139, 170, 207, 223, 238, 300, 331, 336, 380, 396, 432, 450, 483, 490, 512, 566, 633, 956], "imageri": [35, 43, 46, 53, 139, 223, 300, 331, 336, 380, 396, 432, 450, 483, 512, 566, 633, 956], "n_split": [35, 36, 38, 41, 42, 45, 500], "speed": [35, 36, 37, 45, 58, 59, 67, 68, 70, 76, 101, 108, 109, 110, 121, 130, 136, 140, 161, 167, 171, 177, 184, 187, 188, 191, 198, 205, 206, 209, 212, 222, 223, 226, 232, 234, 236, 239, 256, 257, 260, 263, 265, 279, 280, 284, 286, 288, 290, 291, 292, 293, 294, 297, 299, 302, 309, 312, 321, 331, 332, 338, 339, 342, 343, 345, 346, 347, 488, 489, 495, 539, 550, 551, 609, 610, 636, 726, 804, 834, 866, 868, 889, 894, 899, 910, 936, 941], "shuffl": [35, 36, 38, 41, 260, 282], "n_cycl": [35, 58, 134, 137, 139, 141, 192, 229, 257, 258, 259, 260, 269, 496, 619, 620, 792, 795, 800, 802, 812, 813, 814, 816, 817], "mani": [35, 70, 97, 101, 139, 147, 148, 166, 168, 172, 175, 176, 177, 178, 181, 184, 186, 187, 188, 192, 193, 197, 198, 203, 217, 222, 226, 227, 228, 229, 230, 232, 233, 234, 250, 252, 255, 268, 270, 273, 274, 281, 286, 290, 291, 292, 293, 294, 297, 302, 304, 306, 309, 312, 316, 318, 319, 320, 322, 323, 324, 331, 332, 336, 341, 343, 364, 417, 423, 507, 512, 525, 542, 636, 733, 769, 779, 784, 785, 834, 852, 862, 879, 881, 882, 936, 938, 939, 945, 946, 947], "cycl": [35, 134, 141, 210, 212, 229, 269, 270, 286, 309, 331, 332, 410, 496, 550, 551, 619, 620, 636, 792, 795, 800, 802, 812, 813, 814, 816, 817, 860, 866, 869, 881, 889], "min_freq": 35, "max_freq": 35, "n_freq": [35, 141, 222, 259, 269, 488, 496, 620, 764, 774, 775, 784, 785, 786, 787, 788, 790, 802, 804, 805, 811, 812, 813, 814, 816, 817], "bin": [35, 48, 53, 97, 125, 129, 147, 151, 168, 170, 197, 229, 237, 239, 240, 257, 263, 268, 270, 290, 309, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 357, 364, 491, 550, 551, 558, 573, 660, 694, 764, 768, 769, 771, 772, 774, 775, 785, 786, 787, 789, 790, 860, 868, 872, 945, 946, 948, 951, 955, 956], "tupl": [35, 142, 176, 196, 197, 198, 222, 232, 243, 245, 259, 260, 291, 292, 302, 304, 306, 307, 325, 326, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 354, 355, 370, 381, 390, 391, 429, 456, 483, 490, 498, 516, 517, 520, 523, 549, 550, 551, 559, 561, 562, 563, 566, 567, 568, 574, 579, 582, 590, 602, 619, 620, 635, 636, 639, 644, 651, 653, 654, 656, 659, 670, 695, 701, 702, 735, 736, 737, 749, 761, 769, 771, 772, 774, 775, 776, 784, 786, 787, 788, 789, 790, 798, 805, 821, 824, 834, 835, 844, 845, 850, 853, 855, 856, 858, 860, 864, 865, 867, 868, 870, 872, 874, 875, 877, 879, 882, 884, 888, 890, 891, 894, 895, 896, 898, 899, 900, 904, 915], "linspac": [35, 45, 58, 66, 68, 95, 97, 140, 144, 162, 167, 176, 198, 203, 222, 226, 233, 234, 250, 251, 270], "freq_rang": [35, 270], "infer": [35, 36, 69, 70, 140, 182, 191, 196, 229, 244, 245, 256, 260, 261, 262, 277, 282, 284, 292, 294, 302, 308, 319, 320, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 364, 365, 386, 390, 423, 427, 428, 432, 439, 440, 441, 483, 490, 513, 514, 516, 526, 527, 545, 547, 548, 550, 551, 559, 561, 566, 614, 636, 714, 762, 768, 771, 772, 773, 774, 775, 777, 784, 786, 787, 789, 790, 849, 874, 875, 876, 883, 889, 898, 934, 949, 956], "gap": [35, 212, 273, 277, 283, 284, 285, 320, 547, 548, 550, 551, 570, 889], "window_spac": 35, "centered_w_tim": 35, "n_window": [35, 660], "instanti": [35, 170, 198, 223, 232, 250, 287, 301, 302, 326, 328, 329, 330, 331, 332, 336, 340, 341, 343, 380, 551, 786, 789, 837, 849], "le": 35, "59999": [35, 210], "374": [35, 107, 195, 223, 243], "loop": [35, 68, 87, 136, 147, 161, 163, 175, 203, 207, 227, 260, 265, 270, 277, 294, 317, 320, 476, 504, 647, 660, 671, 834], "init": [35, 309, 445], "freq_scor": 35, "fmin": [35, 58, 130, 131, 135, 140, 141, 143, 159, 163, 268, 269, 270, 287, 301, 302, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 488, 550, 551, 609, 610, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 796, 804, 805, 815, 818, 834, 855, 890, 894, 896, 899, 900, 907], "fmax": [35, 58, 101, 130, 131, 135, 140, 141, 143, 159, 163, 192, 226, 230, 239, 268, 269, 270, 287, 301, 302, 331, 332, 333, 334, 488, 550, 551, 609, 610, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 796, 804, 805, 815, 818, 834, 851, 890, 896, 907], "enumer": [35, 36, 41, 45, 54, 65, 66, 73, 98, 121, 123, 131, 134, 139, 141, 161, 162, 172, 175, 176, 177, 185, 222, 229, 232, 234, 238, 251, 260, 265, 270], "being": [35, 71, 141, 143, 162, 186, 192, 197, 198, 227, 229, 234, 235, 237, 243, 252, 255, 257, 260, 273, 283, 284, 286, 287, 290, 291, 293, 294, 302, 304, 305, 307, 308, 309, 310, 320, 328, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 431, 434, 517, 527, 541, 550, 551, 590, 636, 660, 662, 706, 784, 786, 787, 789, 790, 834, 854, 866, 867, 870, 872, 873, 890, 895, 900, 907, 908, 915], "w_size": 35, "isol": [35, 71, 141, 228, 232, 234, 300], "raw_filt": [35, 141, 167, 230, 232], "pad": [35, 141, 255, 260, 270, 273, 282, 283, 284, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 389, 518, 521, 522, 523, 550, 551, 805], "drop_bad": [35, 168, 177, 218, 228, 281, 286, 287, 293, 294, 303, 320, 331, 332, 382, 540, 636, 786, 787, 788], "fold": [35, 36, 38, 41, 42, 52, 163, 337, 342, 500, 747, 750], "roc_auc": [35, 37, 39, 223, 486, 493], "axi": [35, 36, 38, 40, 41, 42, 45, 47, 48, 54, 57, 61, 71, 84, 87, 95, 97, 99, 110, 117, 123, 127, 131, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 159, 163, 166, 167, 168, 170, 176, 177, 182, 186, 192, 198, 207, 209, 211, 212, 218, 222, 223, 227, 229, 239, 243, 246, 250, 255, 258, 260, 263, 265, 269, 270, 273, 274, 277, 283, 286, 287, 288, 290, 292, 293, 294, 302, 303, 308, 320, 323, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 354, 382, 389, 434, 483, 490, 496, 503, 523, 542, 550, 551, 562, 635, 636, 650, 651, 737, 761, 763, 771, 772, 774, 775, 778, 784, 786, 787, 789, 790, 815, 818, 834, 836, 849, 852, 853, 860, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 879, 881, 883, 884, 888, 889, 890, 891, 896, 897, 898, 948], "701": [35, 161, 218], "205": [35, 195, 210, 212, 223, 236, 259], "281": [35, 39, 139, 195, 236, 255, 260], "629": [35, 236, 260], "165": [35, 172, 195, 212, 229, 232, 236, 238, 255, 260, 277], "031": [35, 155, 166, 175, 195, 210, 231, 242, 252, 956], "581": [35, 223, 236], "139": [35, 195, 218, 221, 236, 252, 260, 265, 267, 281, 344, 956], "549": [35, 223, 235, 236, 260, 277], "756": [35, 260], "523": [35, 67, 260], "bar": [35, 169, 176, 197, 209, 245, 246, 270, 286, 287, 288, 292, 302, 303, 305, 306, 320, 328, 331, 332, 333, 334, 340, 341, 483, 486, 490, 493, 550, 551, 635, 636, 784, 786, 787, 789, 790, 834, 860, 865, 866, 867, 868, 872, 875, 879, 883, 888, 889, 891, 896, 898, 905], "width": [35, 141, 149, 186, 197, 198, 226, 229, 230, 240, 246, 255, 270, 273, 285, 290, 293, 294, 302, 305, 319, 320, 329, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 381, 389, 394, 485, 494, 519, 521, 522, 542, 550, 551, 656, 658, 675, 784, 800, 802, 812, 815, 818, 834, 844, 845, 864, 865, 892, 894, 895, 899, 936], "edgecolor": [35, 36, 269], "black": [35, 47, 71, 73, 74, 76, 139, 161, 168, 177, 186, 217, 234, 238, 274, 291, 328, 329, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 834, 849, 852, 853, 864, 868, 870, 874, 875, 879, 887, 888, 890, 891, 894, 896, 897, 898, 899], "xtick": [35, 41, 45, 117, 222, 229, 239, 255, 273], "tf_score": 35, "center": [35, 63, 71, 95, 97, 106, 117, 122, 139, 147, 148, 177, 182, 184, 186, 196, 211, 226, 228, 229, 230, 234, 240, 255, 270, 282, 317, 320, 322, 323, 333, 334, 337, 342, 373, 492, 562, 588, 599, 636, 645, 733, 736, 741, 747, 750, 784, 824, 834, 839, 876, 887, 895, 904, 954], "w_tmin": 35, "w_tmax": 35, "av_tfr": 35, "newaxi": [35, 41, 54, 127, 144, 260, 263, 264, 265, 834], "white": [35, 50, 52, 67, 78, 136, 139, 143, 148, 154, 159, 161, 168, 182, 184, 185, 186, 202, 204, 217, 237, 251, 255, 260, 273, 274, 291, 302, 316, 319, 323, 329, 331, 332, 333, 334, 337, 338, 339, 342, 344, 345, 346, 347, 439, 541, 550, 551, 588, 622, 623, 688, 706, 732, 784, 786, 787, 789, 790, 834, 852, 854, 864, 874, 876, 894, 897, 899], "vmin": [35, 39, 45, 114, 134, 139, 141, 143, 144, 162, 167, 186, 202, 222, 223, 237, 238, 255, 257, 258, 269, 281, 283, 291, 304, 305, 306, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 834, 853, 867, 868, 875, 879, 888, 891, 896, 897, 898], "red": [35, 80, 85, 97, 106, 107, 109, 127, 139, 158, 159, 168, 170, 176, 182, 186, 196, 204, 207, 212, 217, 222, 226, 227, 230, 234, 237, 238, 240, 246, 260, 263, 269, 270, 292, 298, 309, 319, 327, 328, 329, 331, 332, 333, 334, 337, 340, 483, 490, 550, 551, 635, 636, 651, 705, 784, 786, 787, 789, 790, 834, 851, 853, 860, 861, 864, 867, 868, 870, 875, 879, 888, 891, 896, 898], "720": [35, 39, 46, 107, 236, 260, 277, 317, 644, 956], "decoding_csp_timefreq": [35, 46, 956], "supervis": [36, 44, 114, 163, 483, 500], "character": [36, 39, 223, 277, 320, 636, 746, 882], "confus": [36, 41, 163, 170, 219, 309, 744], "serv": [36, 194, 244, 260, 309, 310, 320, 328, 331, 332, 333, 334, 340, 348, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 788, 789, 790, 832, 852, 853, 868, 875, 879, 888, 891, 896, 898], "proxi": [36, 232, 236], "mental": [36, 39, 223, 277], "rsa": [36, 283, 317, 949], "imag": [36, 42, 53, 56, 58, 59, 61, 66, 70, 72, 81, 85, 97, 114, 134, 139, 147, 150, 152, 155, 156, 162, 169, 172, 175, 181, 182, 185, 186, 192, 196, 202, 206, 208, 217, 218, 226, 229, 232, 233, 234, 235, 252, 255, 256, 257, 258, 259, 260, 269, 270, 273, 277, 279, 281, 282, 284, 286, 287, 288, 292, 293, 294, 297, 300, 301, 302, 303, 304, 306, 317, 319, 322, 328, 331, 332, 333, 334, 336, 340, 341, 343, 344, 346, 347, 356, 357, 358, 359, 364, 365, 371, 375, 380, 381, 389, 406, 422, 429, 435, 459, 483, 490, 545, 547, 548, 550, 551, 560, 572, 603, 635, 636, 651, 666, 668, 698, 733, 739, 740, 741, 742, 743, 744, 745, 746, 784, 786, 787, 789, 790, 802, 812, 822, 823, 824, 834, 835, 838, 852, 853, 854, 867, 868, 872, 874, 875, 879, 881, 888, 891, 892, 896, 897, 898, 900, 904, 906, 943, 948, 949, 954, 956], "92": [36, 39, 45, 60, 61, 70, 107, 130, 139, 141, 169, 195, 206, 222, 223, 228, 236, 255, 256, 257, 259, 260, 264, 265, 320, 599], "human": [36, 45, 59, 84, 121, 140, 154, 170, 177, 181, 204, 206, 222, 252, 277, 316, 317, 319, 322, 331, 332, 333, 334, 342, 357, 364, 444, 458, 485, 489, 494, 519, 521, 522, 550, 551, 641, 773, 802, 812, 813, 816, 940, 949, 954], "anim": [36, 162, 281, 317, 333, 334], "inanim": [36, 317], "bodi": [36, 234, 235, 317, 824], "part": [36, 146, 166, 168, 170, 177, 181, 184, 186, 187, 188, 197, 208, 226, 229, 230, 234, 239, 243, 252, 273, 277, 280, 291, 294, 300, 307, 309, 310, 312, 319, 320, 321, 322, 331, 333, 334, 336, 337, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 512, 526, 527, 545, 547, 548, 550, 552, 572, 609, 610, 614, 711, 761, 771, 772, 774, 775, 784, 788, 834, 853, 872, 876, 943, 953], "6gb": 36, "build": [36, 38, 47, 58, 71, 181, 198, 201, 218, 226, 227, 229, 255, 263, 264, 265, 291, 292, 310, 941, 946, 948], "jaakko": [36, 218, 279, 280, 281, 282, 283, 284, 301], "leppakanga": [36, 218, 279, 280, 281, 282, 283, 284, 301], "jaeilepp": [36, 218], "student": [36, 218, 309, 312], "jyu": [36, 218], "panda": [36, 40, 128, 139, 166, 169, 173, 174, 175, 177, 191, 197, 217, 218, 237, 243, 256, 268, 281, 282, 283, 287, 288, 290, 292, 293, 297, 298, 309, 312, 320, 325, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 507, 550, 551, 698, 770, 784, 786, 787, 788, 789, 790, 942, 956], "read_csv": [36, 217, 218], "linear_model": [36, 37, 38, 39, 41, 44, 223, 312], "logisticregress": [36, 37, 39, 41, 223, 487, 498], "manifold": [36, 144, 146, 853], "md": [36, 277, 737], "standardscal": [36, 37, 39, 44, 223, 492], "stimulu": [36, 39, 59, 60, 75, 96, 98, 100, 107, 108, 117, 120, 134, 147, 166, 168, 169, 170, 172, 175, 188, 192, 193, 194, 195, 206, 209, 215, 218, 219, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 243, 244, 245, 246, 252, 259, 265, 270, 285, 294, 306, 308, 317, 319, 320, 323, 325, 331, 332, 333, 334, 336, 382, 415, 423, 489, 507, 512, 550, 551, 633, 639, 749, 784, 786, 787, 788, 789, 790], "visual_stimuli": 36, "csv": [36, 151, 218, 245, 286, 293, 304, 325, 398, 404, 575, 689], "cond": [36, 66, 72, 85, 88, 126, 128, 176, 260, 265, 324], "restrict": [36, 54, 55, 131, 154, 168, 177, 184, 187, 192, 204, 230, 231, 234, 235, 243, 251, 255, 258, 259, 270, 282, 288, 290, 291, 293, 303, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 351, 352, 364, 365, 529, 530, 550, 551, 603, 604, 605, 606, 607, 609, 610, 619, 620, 628, 629, 632, 633, 634, 747, 784, 786, 787, 788, 789, 790, 797, 803, 915, 939, 955], "max_trigg": 36, "row": [36, 100, 128, 139, 167, 168, 169, 170, 171, 176, 192, 195, 198, 201, 223, 238, 243, 255, 256, 273, 281, 290, 294, 320, 326, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 366, 427, 439, 483, 489, 490, 507, 550, 551, 575, 615, 618, 636, 637, 660, 769, 770, 784, 785, 786, 787, 788, 789, 790, 834, 862, 867, 875, 879, 882], "cond_tag": 36, "els": [36, 41, 54, 57, 66, 73, 121, 123, 141, 177, 186, 201, 218, 229, 234, 243, 255, 270, 298, 309, 321, 328, 329, 331, 332, 333, 334, 336, 355, 370, 483, 490, 550, 551, 594, 602, 620, 636, 637, 656, 733, 739, 740, 741, 742, 743, 744, 745, 746, 767, 786, 787, 789, 790, 813, 814, 821, 864, 868, 889, 942], "bodypart": 36, "natur": [36, 45, 149, 154, 198, 222, 240, 259, 277, 302, 317, 320, 458, 489, 523, 675], "n_run": 36, "sample_subject_": 36, "_tsss_mc": 36, "on_split_miss": [36, 292, 550, 572], "ignor": [36, 67, 73, 96, 107, 136, 161, 166, 172, 177, 188, 192, 198, 207, 210, 218, 226, 227, 228, 234, 255, 280, 283, 284, 285, 287, 290, 291, 292, 293, 294, 303, 308, 309, 319, 323, 326, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 364, 365, 384, 392, 407, 417, 418, 423, 427, 429, 430, 432, 434, 439, 440, 445, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 490, 492, 502, 510, 512, 517, 519, 524, 530, 533, 540, 545, 547, 548, 550, 551, 552, 562, 564, 568, 572, 581, 614, 631, 635, 636, 639, 647, 660, 671, 691, 695, 697, 698, 706, 720, 722, 725, 732, 733, 749, 771, 773, 784, 786, 787, 788, 789, 790, 831, 853, 864, 865, 866, 868, 869, 872, 875, 879, 880, 888, 889, 890, 891, 896, 898, 927, 929, 931], "filenam": [36, 69, 70, 98, 100, 103, 107, 108, 109, 120, 161, 166, 167, 172, 177, 182, 183, 193, 194, 198, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 252, 273, 282, 283, 288, 292, 293, 294, 301, 302, 303, 323, 325, 326, 328, 331, 332, 333, 334, 337, 341, 344, 355, 368, 377, 380, 420, 421, 513, 514, 516, 526, 536, 542, 549, 550, 551, 555, 571, 572, 577, 583, 585, 597, 598, 682, 687, 689, 694, 696, 698, 700, 701, 704, 705, 706, 707, 710, 714, 718, 722, 729, 733, 749, 785, 806, 828, 834, 843, 889, 922, 923, 924, 926, 929, 930, 931, 934, 948], "min_dur": [36, 239, 240, 524, 638], "appel": 36, "dissimilar": 36, "rdm": 36, "cichi": [36, 277, 317], "et": [36, 42, 45, 47, 222, 229, 231, 240, 270, 279, 317, 320, 322, 331, 332, 614, 644, 802, 812, 813, 816, 954], "al": [36, 42, 45, 47, 222, 229, 231, 270, 279, 320, 331, 332, 614, 644, 802, 812, 813, 816], "multiclass": [36, 277, 282, 483, 500], "multinomi": 36, "logist": [36, 37, 41, 44, 223], "paper": [36, 42, 229, 233, 277, 314, 320, 364, 545, 603, 636, 744], "pairwis": [36, 73, 97, 144, 277, 644], "binari": [36, 126, 186, 219, 223, 244, 290, 300, 320, 329, 484, 500, 524, 567, 568, 573, 576, 693, 764, 770, 782, 926, 941, 948], "roc": [36, 39, 745], "auc": [36, 39, 223, 745], "final": [36, 42, 45, 68, 94, 96, 97, 109, 110, 139, 140, 141, 163, 166, 167, 170, 172, 176, 177, 182, 186, 188, 192, 197, 205, 207, 208, 212, 217, 222, 227, 228, 232, 233, 234, 237, 238, 240, 255, 257, 259, 260, 263, 265, 270, 273, 281, 309, 310, 316, 331, 332, 333, 334, 386, 397, 489, 526, 550, 551, 734, 906, 936], "sake": [36, 228, 259, 273, 939], "did": [36, 37, 54, 55, 56, 64, 65, 70, 73, 78, 83, 87, 109, 131, 134, 135, 137, 152, 186, 187, 188, 192, 196, 198, 201, 202, 207, 229, 232, 234, 235, 250, 251, 263, 265, 281, 291, 293, 306, 307, 318, 336, 344], "instant": [36, 39, 68, 147, 203, 209, 223, 329, 333, 334, 354, 422, 526, 758, 759, 760, 784, 791, 792, 793, 794, 795, 796, 797, 836, 871, 873, 875], "50m": 36, "300m": 36, "focu": [36, 38, 109, 170, 228, 229, 273, 288, 948], "liblinear": [36, 37, 39, 41, 44, 223], "multi_class": [36, 41], "y_pred": [36, 38, 45, 163, 281, 486, 489, 493], "probabilist": [36, 277, 320, 423, 486, 493], "necessari": [36, 47, 57, 100, 121, 161, 172, 177, 181, 182, 184, 186, 187, 192, 195, 197, 206, 226, 228, 229, 230, 231, 232, 233, 234, 240, 243, 244, 250, 255, 273, 281, 285, 290, 292, 293, 301, 302, 304, 309, 310, 316, 317, 319, 320, 324, 331, 332, 333, 334, 335, 338, 339, 342, 343, 345, 346, 347, 364, 365, 384, 386, 393, 427, 445, 483, 490, 492, 507, 518, 526, 549, 550, 551, 559, 566, 571, 587, 603, 671, 679, 689, 696, 700, 728, 748, 784, 786, 787, 788, 789, 790, 834, 875, 894, 899, 937], "predict_proba": [36, 486, 493], "train_class": 36, "jj": 36, "im": [36, 39, 41, 48, 97, 142, 162, 223, 303, 838, 898, 906], "matshow": [36, 39], "rdbu_r": [36, 39, 42, 45, 48, 134, 141, 222, 223, 257, 258, 309, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 867, 868, 872, 875, 879, 888, 891, 896, 897, 898], "set_ytick": 36, "set_yticklabel": [36, 139], "set_xtick": [36, 270], "set_xticklabel": [36, 270], "colorbar": [36, 39, 41, 48, 97, 98, 134, 139, 141, 142, 143, 147, 162, 168, 172, 176, 202, 208, 223, 234, 238, 246, 255, 256, 257, 259, 260, 273, 281, 282, 283, 285, 288, 290, 291, 293, 304, 308, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 490, 550, 551, 635, 636, 651, 784, 785, 786, 787, 789, 790, 834, 850, 853, 855, 860, 861, 862, 867, 868, 872, 873, 875, 879, 888, 891, 894, 896, 897, 898, 899, 900], "relat": [36, 38, 45, 53, 58, 59, 60, 97, 104, 128, 132, 133, 139, 144, 155, 158, 162, 170, 172, 179, 180, 181, 184, 186, 188, 191, 192, 198, 199, 204, 215, 216, 219, 222, 223, 226, 228, 229, 231, 232, 233, 236, 237, 238, 245, 256, 263, 269, 270, 277, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 317, 318, 319, 320, 321, 331, 332, 333, 334, 336, 341, 354, 382, 397, 422, 464, 489, 490, 507, 519, 524, 540, 550, 551, 627, 636, 644, 698, 733, 763, 784, 802, 812, 834, 849, 857, 860, 867, 882, 883, 889, 897, 921, 936, 937, 945, 956], "histor": [36, 176, 306, 312, 320, 330, 331, 332, 333, 334, 403, 784, 788], "summar": [36, 71, 140, 177, 230, 232, 243, 298, 310, 316, 331, 332, 338, 339, 342, 345, 346, 347, 860, 867, 939], "dimension": [36, 176, 201, 223, 227, 233, 234, 243, 260, 263, 264, 265, 277, 287, 293, 302, 312, 319, 320, 333, 334, 338, 339, 342, 345, 346, 347, 423, 491, 496, 498, 636, 764, 784, 834, 870], "reduct": [36, 43, 46, 53, 141, 218, 230, 238, 239, 277, 293, 300, 331, 332, 333, 334, 336, 439, 443, 482, 491, 497, 550, 633, 636, 637, 671, 679, 698, 814, 817, 956], "multi": [36, 42, 53, 62, 72, 82, 109, 131, 154, 196, 216, 223, 229, 263, 264, 265, 277, 283, 286, 290, 297, 303, 308, 320, 328, 329, 331, 332, 333, 334, 335, 336, 340, 346, 370, 458, 483, 484, 488, 490, 499, 522, 524, 526, 548, 550, 551, 597, 602, 603, 605, 609, 610, 614, 635, 636, 650, 651, 690, 692, 693, 718, 784, 786, 787, 789, 790, 804, 809, 853, 868, 875, 879, 888, 891, 896, 898, 902, 949, 956], "togeth": [36, 69, 97, 101, 167, 175, 177, 192, 198, 201, 215, 226, 232, 234, 237, 238, 240, 243, 250, 260, 274, 294, 308, 309, 319, 331, 332, 333, 334, 341, 350, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 505, 507, 526, 527, 545, 547, 548, 550, 551, 576, 614, 636, 670, 697, 714, 717, 771, 772, 774, 775, 804, 876, 915, 929, 934], "precomput": [36, 182, 197, 207, 218, 286, 331, 332, 429, 550, 551, 636, 732, 787, 790, 866, 883, 889], "colormap": [36, 50, 84, 136, 139, 140, 143, 149, 162, 168, 186, 234, 270, 273, 281, 282, 283, 290, 291, 294, 302, 308, 309, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 490, 550, 551, 635, 636, 651, 776, 784, 785, 786, 787, 789, 790, 834, 845, 851, 853, 855, 860, 862, 867, 868, 872, 875, 878, 879, 888, 891, 892, 894, 896, 897, 898, 899, 900, 907, 931], "rainbow": 36, "sel": [36, 57, 256, 627, 630, 632, 633, 718, 785], "this_nam": 36, "scatter": [36, 71, 142, 255, 287, 854], "facecolor": [36, 73, 177, 255], "scatterpoint": 36, "ncol": [36, 41, 100, 134, 139, 147, 163, 172, 177, 202, 209, 238, 273, 290, 305, 333, 334, 483, 490, 636, 875, 879], "shepard": [36, 277], "multidimension": [36, 255, 277, 486, 493, 500], "tree": [36, 277], "scienc": [36, 39, 59, 66, 128, 140, 206, 223, 252, 256, 270, 277, 317, 320, 322, 357, 364, 464, 547, 603, 636, 954], "210": [36, 39, 59, 61, 107, 113, 152, 176, 194, 195, 200, 212, 223, 236, 239, 255, 274, 277, 956], "4468": [36, 277], "390": [36, 38, 39, 47, 107, 236, 277], "398": [36, 37, 46, 107, 222, 236, 255, 260, 277, 956], "1980": [36, 45, 177, 277], "1126": [36, 277], "aarr": [36, 277], "laakso": [36, 277], "garrison": [36, 277], "cottrel": [36, 277], "content": [36, 53, 132, 184, 192, 195, 198, 229, 230, 233, 238, 246, 269, 277, 293, 300, 303, 305, 309, 319, 331, 332, 335, 341, 457, 458, 515, 585, 843, 860, 867], "assess": [36, 39, 163, 182, 188, 196, 226, 240, 277, 320, 603, 614, 636, 741, 746, 936], "neural": [36, 44, 45, 48, 53, 59, 89, 93, 97, 98, 109, 144, 163, 177, 204, 206, 223, 226, 229, 232, 235, 239, 252, 270, 271, 277, 284, 317, 319, 336, 357, 364, 365, 443, 483, 487, 489, 490, 545, 550, 551, 636, 645, 669, 943, 956], "philosoph": [36, 277, 320, 603], "76": [36, 39, 42, 44, 45, 60, 61, 72, 73, 106, 107, 123, 130, 135, 136, 139, 141, 146, 185, 195, 202, 218, 222, 223, 236, 255, 256, 257, 259, 260, 263, 264, 265, 277, 765, 853], "09515080050002726": [36, 277], "nikolau": [36, 277], "kriegeskort": [36, 277], "mariek": [36, 277], "mur": [36, 277], "peter": [36, 206, 268, 277, 286, 320, 331, 332, 333, 334, 550, 551, 603, 636, 786, 789, 805, 815, 818], "bandettini": [36, 277], "branch": [36, 277, 309], "neuro": [36, 112, 277, 299], "radoslaw": [36, 277, 317], "aud": [36, 54, 55, 63, 65, 75, 119, 126, 131, 134, 135, 176, 260, 277, 317, 331, 860], "oliva": [36, 277, 317], "resolv": [36, 206, 232, 237, 277, 303, 304, 305, 317, 797, 946], "recognit": [36, 72, 128, 177, 229, 277, 317, 815, 818], "455": [36, 45, 223, 255, 277, 317, 344], "462": [36, 73, 82, 255, 277, 317, 344, 956], "2014": [36, 38, 39, 44, 45, 66, 98, 140, 148, 177, 188, 223, 229, 255, 277, 313, 314, 317, 333, 334, 423, 487, 489, 490, 491, 501, 547, 645, 675, 766, 815, 818, 936], "1038": [36, 154, 222, 277, 317, 458, 489], "nn": [36, 204, 277, 291, 317, 344, 733], "3635": [36, 277, 317], "decoding_rsa_sgskip": [36, 46, 956], "cortic": [37, 50, 52, 53, 57, 58, 67, 69, 84, 104, 106, 111, 117, 121, 136, 140, 150, 156, 181, 184, 189, 191, 192, 198, 201, 204, 206, 213, 218, 227, 252, 255, 264, 277, 284, 287, 290, 291, 294, 299, 305, 307, 312, 317, 319, 323, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 349, 351, 352, 364, 365, 429, 433, 459, 517, 528, 545, 547, 548, 550, 588, 603, 604, 605, 606, 607, 610, 614, 619, 620, 633, 634, 652, 688, 691, 692, 703, 706, 713, 741, 744, 746, 747, 748, 749, 750, 780, 834, 847, 895, 941, 943, 946, 949, 956], "confin": [37, 73, 184, 259, 320, 357], "potenti": [37, 41, 73, 97, 98, 100, 105, 114, 128, 144, 155, 167, 170, 179, 180, 191, 194, 198, 223, 227, 229, 231, 235, 255, 256, 259, 270, 273, 277, 281, 283, 284, 310, 316, 317, 320, 331, 332, 333, 334, 336, 337, 342, 377, 382, 422, 429, 439, 464, 522, 539, 540, 550, 551, 552, 627, 637, 644, 645, 698, 747, 750, 770, 777, 851, 860, 867, 897, 921, 936, 956], "relev": [37, 38, 52, 128, 139, 154, 177, 195, 206, 223, 229, 230, 231, 238, 274, 277, 309, 314, 316, 320, 344, 442, 490, 636, 653, 783, 879, 881, 936], "eric": [37, 45, 48, 52, 60, 65, 76, 83, 92, 99, 106, 110, 120, 121, 136, 145, 147, 151, 154, 161, 162, 181, 183, 185, 205, 206, 208, 209, 210, 212, 218, 222, 223, 236, 255, 259, 260, 263, 264, 265, 273, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 317, 337, 342, 459, 603, 679, 749, 771, 772, 774, 775, 954], "larson": [37, 45, 48, 52, 60, 65, 76, 83, 92, 99, 106, 110, 120, 121, 136, 145, 147, 151, 154, 161, 162, 185, 205, 206, 208, 209, 210, 212, 218, 222, 223, 236, 255, 259, 263, 264, 265, 273, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 317, 331, 332, 333, 334, 337, 342, 459, 550, 551, 679, 749, 954], "feature_select": 37, "selectkbest": 37, "f_classif": 37, "meg_path": [37, 39, 40, 41, 42, 48, 54, 56, 57, 61, 63, 65, 66, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 95, 96, 98, 99, 103, 105, 112, 113, 114, 119, 120, 121, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 144, 145, 148, 157, 158, 159, 204, 205, 206, 207, 223, 252, 257, 258, 259, 260, 263, 264, 265], "fname_fwd": [37, 58, 59, 60, 67, 68, 69, 73, 74, 75, 80, 84, 203, 205, 251], "sample_audvi": [37, 48, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 95, 105, 112, 113, 117, 119, 120, 121, 122, 131, 134, 135, 137, 143, 146, 147, 152, 157, 160, 175, 176, 192, 198, 201, 202, 203, 204, 205, 206, 207, 223, 251, 252, 263, 264, 265, 273, 274, 323, 331, 332, 333, 334, 550, 551], "sample_audvis_filt": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 103, 114, 123, 124, 126, 127, 144, 148, 158, 159, 167, 171, 177, 178, 192, 195, 198, 203, 206, 223, 228, 232, 260, 263, 265, 320], "40_raw": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 103, 114, 123, 124, 126, 127, 144, 148, 158, 159, 167, 171, 177, 178, 192, 195, 198, 203, 206, 223, 228, 232, 260, 263, 265, 320], "event_fnam": [37, 40, 41, 42, 44, 96, 114, 123, 124, 127, 144, 148, 158, 258, 259, 260, 263, 265], "ev": [37, 39, 40, 41, 42, 44, 54, 96, 114, 121, 123, 124, 127, 130, 131, 144, 148, 158, 166, 171, 177, 198, 228, 244, 258, 259, 260, 263, 265, 274, 297, 301, 323, 698, 699, 926, 936], "fname_cov": [37, 67, 74, 75, 76, 80, 81, 84, 91, 121, 202, 205, 207], "fname_inv": [37, 54, 55, 56, 64, 65, 70, 73, 83, 87, 131, 134, 135, 137, 152, 207, 251, 263, 265], "inv": [37, 54, 55, 56, 64, 65, 70, 71, 73, 78, 83, 87, 121, 131, 134, 135, 137, 152, 182, 184, 186, 192, 198, 203, 204, 205, 207, 208, 218, 223, 251, 252, 263, 265, 286, 309, 316, 320, 323, 517, 608, 611, 614, 616, 617, 621, 893], "aud_r": [37, 40, 41, 68, 259], "vis_r": [37, 40, 41, 68, 114, 259], "contra": 37, "setup": [37, 41, 42, 44, 50, 69, 70, 71, 96, 97, 99, 114, 123, 124, 127, 134, 135, 137, 144, 158, 181, 257, 258, 263, 265, 269, 274, 301, 305, 309, 317, 324, 344, 445, 524, 937, 942, 943, 944, 946, 948], "modifi": [37, 88, 96, 144, 166, 175, 176, 177, 187, 191, 194, 195, 198, 199, 200, 208, 223, 227, 233, 235, 238, 245, 250, 252, 255, 259, 268, 277, 290, 291, 295, 304, 306, 308, 316, 317, 320, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 348, 354, 380, 386, 408, 409, 430, 432, 433, 434, 455, 483, 485, 487, 488, 490, 491, 492, 494, 495, 497, 498, 505, 542, 545, 550, 551, 559, 566, 584, 600, 603, 616, 627, 628, 629, 632, 635, 636, 657, 659, 663, 667, 668, 670, 671, 672, 673, 674, 686, 703, 719, 725, 728, 735, 736, 737, 738, 766, 777, 778, 784, 785, 786, 787, 788, 789, 790, 803, 805, 830, 834, 836, 838, 852, 857, 871, 873, 889, 903, 904, 956], "your": [37, 57, 73, 96, 97, 121, 122, 144, 148, 161, 166, 167, 168, 175, 177, 181, 183, 184, 185, 187, 188, 192, 193, 194, 198, 203, 207, 208, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 243, 244, 245, 255, 268, 269, 270, 273, 287, 302, 308, 311, 314, 316, 317, 318, 320, 323, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 348, 364, 365, 377, 386, 397, 400, 403, 423, 427, 428, 439, 440, 441, 459, 483, 490, 507, 524, 526, 527, 545, 547, 548, 550, 551, 562, 567, 614, 622, 635, 636, 639, 646, 653, 659, 671, 689, 695, 770, 784, 786, 787, 788, 789, 790, 813, 816, 834, 866, 873, 876, 882, 883, 889, 894, 906, 936, 937, 941, 945, 946, 948, 949, 950], "2443": [37, 68, 100, 103, 114, 119, 120, 134, 135, 137, 138, 144, 148, 172, 192, 193, 194, 195, 203, 206, 223, 226, 227, 228, 233, 234, 237, 243, 244, 245, 246, 252, 257, 258, 259, 263, 265], "4000e": [37, 42, 54, 68, 71, 72, 103, 123, 124, 127, 130, 131, 134, 137, 140, 144, 148, 158, 178, 192, 203, 206, 223, 234, 257, 258, 259, 263, 265, 269, 316, 326, 331, 332, 428, 636, 653, 654, 770], "150e": [37, 42, 54, 68, 71, 123, 124, 127, 131, 134, 137, 144, 167, 168, 178, 192, 203, 206, 223, 234, 257, 258, 259, 260, 263, 265, 316, 320, 331, 332, 341, 550, 551, 866, 889], "v1": [37, 39, 40, 41, 42, 44, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 103, 105, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 143, 144, 145, 146, 147, 148, 151, 152, 158, 159, 166, 167, 168, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 216, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273, 274, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 369, 372, 375, 376, 380, 384, 390, 391, 392, 409, 417, 434, 483, 490, 502, 510, 533, 542, 544, 550, 551, 559, 563, 566, 567, 586, 593, 594, 612, 613, 620, 621, 635, 636, 638, 644, 650, 651, 657, 670, 672, 681, 684, 686, 695, 720, 722, 728, 733, 739, 740, 741, 742, 743, 744, 745, 746, 753, 783, 784, 785, 786, 787, 788, 789, 790, 798, 800, 805, 823, 824, 834, 836, 844, 845, 853, 857, 860, 864, 866, 868, 870, 871, 875, 877, 879, 880, 881, 883, 886, 887, 888, 889, 891, 896, 898, 902, 925, 927, 932], "idl": [37, 39, 40, 41, 42, 44, 52, 54, 55, 68, 71, 75, 88, 95, 96, 98, 99, 100, 103, 109, 110, 114, 119, 120, 121, 123, 124, 126, 127, 130, 131, 134, 137, 138, 144, 145, 148, 151, 157, 158, 159, 167, 168, 172, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 198, 203, 206, 208, 209, 218, 223, 226, 230, 231, 232, 233, 234, 236, 237, 243, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273], "v2": [37, 39, 40, 41, 42, 44, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 103, 105, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 143, 144, 145, 146, 147, 148, 151, 152, 158, 159, 166, 167, 168, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 216, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273, 274, 277, 280, 458, 671], "v3": [37, 39, 40, 41, 42, 44, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 103, 105, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 143, 144, 145, 146, 147, 148, 151, 152, 158, 159, 166, 167, 168, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273, 274], "refer": [37, 40, 48, 53, 54, 55, 56, 57, 64, 65, 67, 71, 73, 74, 75, 76, 78, 83, 87, 88, 91, 94, 95, 96, 99, 100, 103, 104, 107, 108, 111, 112, 113, 117, 119, 120, 122, 123, 124, 126, 127, 131, 134, 135, 137, 143, 147, 152, 158, 159, 171, 175, 176, 178, 182, 184, 185, 191, 192, 193, 195, 196, 198, 201, 203, 205, 207, 208, 215, 219, 228, 236, 241, 242, 243, 251, 263, 265, 269, 270, 273, 274, 277, 280, 281, 282, 284, 285, 286, 287, 288, 291, 295, 298, 299, 301, 303, 304, 305, 307, 308, 310, 312, 314, 319, 321, 323, 324, 325, 328, 330, 331, 332, 333, 334, 335, 336, 337, 340, 342, 343, 344, 348, 357, 364, 365, 367, 369, 370, 403, 423, 428, 429, 439, 450, 455, 458, 459, 462, 463, 464, 475, 476, 483, 484, 487, 489, 490, 491, 493, 499, 501, 503, 504, 507, 509, 522, 545, 547, 548, 550, 551, 562, 576, 598, 599, 603, 604, 614, 618, 633, 634, 635, 636, 637, 641, 644, 645, 647, 648, 649, 650, 651, 652, 660, 669, 671, 672, 675, 678, 679, 686, 723, 725, 728, 733, 737, 741, 744, 746, 749, 766, 768, 770, 771, 772, 773, 774, 775, 777, 778, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 798, 800, 802, 804, 805, 812, 813, 815, 816, 818, 834, 837, 852, 853, 868, 875, 876, 879, 880, 883, 888, 890, 891, 896, 898, 921, 946, 956], "6450": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 103, 114, 123, 124, 126, 127, 144, 148, 158, 159, 167, 177, 178, 192, 195, 198, 203, 206, 223, 232, 260, 263, 265], "48149": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 103, 114, 123, 124, 126, 127, 144, 148, 158, 159, 167, 177, 178, 192, 195, 198, 203, 206, 223, 232, 260, 263, 265], "956": [37, 39, 40, 41, 42, 44, 54, 55, 68, 71, 75, 95, 96, 98, 99, 100, 103, 106, 109, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 137, 138, 144, 145, 148, 151, 158, 159, 167, 169, 172, 177, 178, 182, 188, 192, 193, 194, 195, 198, 203, 206, 208, 223, 226, 230, 231, 232, 233, 234, 235, 243, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273], "320": [37, 39, 40, 41, 42, 44, 54, 55, 67, 68, 71, 75, 95, 96, 98, 99, 100, 103, 107, 109, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 139, 144, 145, 148, 151, 158, 159, 166, 167, 172, 175, 177, 178, 182, 188, 190, 192, 193, 194, 195, 197, 198, 203, 206, 208, 223, 226, 227, 230, 231, 232, 233, 234, 236, 243, 246, 251, 252, 257, 258, 259, 260, 263, 265, 268, 272, 273, 482, 956], "665": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 103, 114, 117, 121, 122, 123, 124, 126, 127, 144, 148, 158, 159, 167, 177, 178, 192, 195, 198, 203, 206, 223, 232, 260, 263, 265], "41699": [37, 39, 40, 41, 42, 44, 68, 99, 100, 114, 126, 148, 159, 167, 178, 192, 223, 260], "277": [37, 39, 40, 41, 42, 44, 68, 98, 99, 100, 114, 126, 148, 159, 167, 178, 192, 193, 195, 208, 223, 228, 231, 236, 243, 260], "709": [37, 39, 40, 41, 42, 44, 68, 99, 100, 114, 126, 148, 159, 167, 178, 192, 223, 260], "199": [37, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 105, 112, 113, 143, 146, 147, 175, 195, 198, 202, 204, 205, 207, 209, 218, 236, 237, 250, 265, 273, 274, 277, 800, 802, 812], "325": [37, 39, 139, 195, 236, 260], "143": [37, 75, 100, 195, 228, 236, 237, 255, 259, 260, 277, 344], "19979521315838786": [37, 54, 88, 96, 98, 99, 106, 120, 121, 123, 124, 127, 130, 131, 134, 137, 144, 158, 168, 171, 175, 176, 178, 192, 198, 203, 206, 208, 227, 228, 231, 251, 258, 259, 263, 265], "151": [37, 47, 147, 177, 195, 198, 232, 236, 255, 260, 265, 344], "061": [37, 42, 54, 58, 59, 71, 72, 88, 98, 99, 100, 120, 121, 123, 127, 134, 140, 144, 166, 171, 177, 178, 192, 193, 194, 195, 198, 203, 206, 226, 227, 228, 231, 232, 233, 234, 237, 243, 244, 245, 246, 255, 256, 257, 258, 259, 260, 263, 265, 269, 277, 771, 772, 774, 775], "366": [37, 48, 57, 61, 66, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 91, 95, 107, 117, 119, 120, 121, 122, 157, 170, 175, 195, 198, 204, 205, 223, 236, 251, 252, 255, 260, 268], "305": [37, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 103, 105, 113, 114, 121, 131, 134, 135, 136, 137, 139, 148, 152, 166, 176, 178, 188, 192, 195, 198, 202, 203, 204, 205, 206, 207, 235, 251, 263, 265, 274, 277, 331, 332, 333, 334, 550, 551, 728], "22494": [37, 48, 54, 55, 61, 64, 65, 78, 83, 87, 131, 134, 135, 137, 152, 192, 198, 207, 263, 265], "diagon": [37, 54, 55, 56, 64, 65, 70, 73, 78, 83, 87, 97, 131, 134, 135, 137, 152, 192, 198, 206, 207, 223, 251, 252, 263, 265, 277, 298, 320, 328, 364, 365, 423, 441, 591, 603, 611], "retriev": [37, 223, 232, 236, 269, 282, 283, 290, 294, 302, 303, 304, 306, 396, 397, 418, 501, 559, 566, 701], "lh_data": [37, 143, 201, 265, 342, 345], "hemispher": [37, 50, 53, 66, 69, 73, 78, 94, 150, 154, 156, 167, 177, 181, 184, 201, 204, 209, 263, 264, 265, 273, 284, 290, 294, 298, 308, 327, 337, 338, 339, 342, 343, 344, 345, 346, 347, 392, 429, 458, 541, 588, 688, 706, 708, 711, 732, 747, 755, 780, 833, 834, 894, 899, 913, 931, 956], "prepar": [37, 38, 45, 47, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 80, 81, 83, 84, 85, 87, 105, 113, 117, 121, 131, 134, 135, 136, 137, 146, 152, 176, 192, 197, 203, 204, 205, 207, 208, 218, 223, 227, 234, 251, 252, 257, 263, 274, 286, 292, 301, 309, 375, 386, 397, 439, 440, 603, 604, 605, 606, 607, 609, 610, 616, 619, 620, 672], "seri": [37, 42, 53, 54, 55, 57, 62, 67, 82, 98, 107, 117, 120, 121, 122, 138, 163, 187, 194, 201, 206, 207, 215, 232, 233, 246, 252, 265, 270, 277, 291, 298, 309, 319, 320, 330, 331, 332, 333, 334, 337, 338, 339, 342, 344, 345, 346, 347, 364, 365, 423, 486, 493, 496, 517, 551, 602, 603, 606, 617, 636, 641, 645, 701, 705, 770, 771, 772, 784, 785, 788, 791, 792, 793, 802, 811, 812, 849, 860, 900, 941, 956], "time_decod": [37, 223], "03": [37, 39, 45, 50, 51, 59, 60, 61, 75, 82, 85, 93, 98, 100, 102, 103, 109, 110, 111, 117, 120, 121, 130, 133, 135, 136, 147, 148, 156, 167, 172, 174, 176, 177, 184, 188, 190, 192, 193, 194, 195, 196, 200, 206, 208, 209, 210, 221, 222, 223, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 264, 265, 273, 277, 313, 325, 329, 423, 636, 771, 772, 774, 775, 864, 956], "86it": [37, 45, 59, 60, 70, 130, 131, 135, 223, 236, 255, 259, 260], "89it": [37, 45, 59, 60, 130, 136, 139, 222, 223, 236, 255, 256, 258, 259, 260], "04it": [37, 39, 45, 59, 130, 206, 222, 223, 236, 255, 256, 259, 260, 263, 265], "99it": [37, 39, 45, 59, 130, 135, 223, 236, 255, 256, 257, 259, 260], "82it": [37, 45, 59, 60, 130, 136, 139, 206, 222, 223, 236, 255, 256, 257, 259, 260, 265], "41it": [37, 39, 45, 130, 136, 139, 222, 223, 236, 255, 257, 259, 260, 265], "72it": [37, 39, 45, 60, 130, 139, 206, 222, 223, 236, 255, 256, 259, 260, 265], "21it": [37, 39, 45, 130, 139, 222, 223, 236, 255, 259, 260, 264], "24it": [37, 39, 45, 59, 60, 130, 135, 136, 206, 222, 223, 236, 255, 256, 257, 260, 264], "74it": [37, 45, 130, 131, 135, 139, 222, 223, 236, 255, 256, 260, 263, 265], "60it": [37, 39, 45, 59, 60, 130, 135, 136, 139, 222, 223, 236, 255, 256, 257, 259, 260], "39": [37, 38, 39, 45, 47, 54, 61, 71, 73, 107, 118, 130, 135, 136, 139, 141, 163, 166, 183, 184, 185, 195, 206, 210, 211, 218, 222, 223, 228, 229, 236, 237, 242, 255, 256, 257, 259, 260, 263, 264, 265, 277, 316, 344, 475, 956], "10it": [37, 39, 45, 60, 130, 135, 136, 139, 222, 223, 236, 255, 256, 259, 260, 264], "85it": [37, 39, 45, 60, 70, 130, 139, 222, 223, 236, 255, 259, 260, 265], "37it": [37, 39, 45, 130, 139, 206, 236, 255, 256, 259, 260], "52": [37, 39, 45, 54, 61, 71, 73, 107, 108, 126, 130, 131, 135, 136, 139, 141, 171, 177, 194, 195, 218, 223, 229, 236, 255, 256, 259, 260, 263, 265, 277, 280, 475, 770, 815, 818], "56it": [37, 39, 45, 130, 136, 139, 222, 223, 236, 255, 256, 257, 259, 260, 265], "15it": [37, 39, 45, 60, 130, 139, 222, 223, 236, 255, 256, 260, 265], "68it": [37, 39, 45, 59, 60, 130, 136, 139, 222, 223, 236, 255, 257, 260], "61": [37, 39, 45, 46, 56, 61, 71, 73, 77, 83, 86, 98, 107, 109, 117, 120, 130, 135, 136, 139, 141, 143, 151, 162, 172, 175, 192, 193, 194, 195, 196, 197, 198, 200, 202, 204, 205, 210, 211, 222, 223, 226, 227, 230, 233, 234, 235, 236, 237, 243, 244, 245, 246, 255, 256, 257, 259, 260, 263, 264, 265, 273, 274, 277, 423, 956], "23it": [37, 39, 45, 60, 130, 135, 136, 139, 222, 223, 236, 255, 260], "79it": [37, 39, 45, 60, 130, 135, 136, 139, 222, 223, 236, 255, 257, 260, 265], "68": [37, 39, 45, 60, 61, 67, 71, 73, 107, 108, 117, 128, 130, 135, 136, 139, 141, 154, 163, 166, 169, 171, 184, 195, 197, 202, 207, 210, 218, 222, 223, 236, 255, 256, 259, 260, 277, 333, 334, 364, 365, 403, 423, 427, 428, 439, 440, 441, 475, 483, 490, 526, 527, 545, 547, 548, 614, 876], "32it": [37, 45, 60, 130, 135, 222, 223, 236, 255, 256, 259, 260], "90it": [37, 39, 45, 60, 136, 139, 151, 222, 223, 255, 256, 257, 260, 264], "74": [37, 39, 45, 52, 61, 67, 71, 76, 106, 107, 108, 130, 135, 136, 139, 141, 163, 184, 194, 195, 196, 202, 207, 210, 218, 223, 229, 234, 236, 252, 255, 256, 259, 260, 263, 265, 765], "00it": [37, 39, 45, 59, 60, 130, 135, 136, 222, 223, 236, 255, 256, 257, 259, 260], "81": [37, 39, 41, 42, 45, 60, 61, 107, 130, 135, 136, 139, 141, 168, 182, 195, 206, 210, 222, 223, 235, 236, 238, 255, 256, 259, 260, 263, 268, 277, 279, 296, 741, 746, 800, 802, 812], "64it": [37, 45, 130, 131, 135, 139, 222, 223, 236, 255, 257, 260, 265], "12it": [37, 45, 59, 130, 135, 136, 139, 222, 236, 255, 259, 260], "87": [37, 39, 41, 44, 45, 59, 61, 73, 106, 121, 135, 136, 139, 141, 151, 152, 156, 157, 195, 222, 223, 234, 236, 237, 255, 256, 259, 260, 277, 320, 487, 489, 501, 956], "76it": [37, 45, 59, 130, 139, 222, 236, 255, 256, 257, 259, 260, 264, 265], "94": [37, 39, 45, 61, 73, 107, 130, 135, 136, 139, 141, 163, 195, 196, 206, 209, 218, 222, 223, 234, 236, 242, 255, 256, 257, 259, 260, 263, 264, 265, 277, 320, 956], "26it": [37, 39, 45, 130, 139, 223, 236, 255, 256, 259, 260, 264, 265], "97it": [37, 45, 59, 60, 130, 135, 139, 222, 223, 236, 255, 259, 260, 264], "01it": [37, 39, 60, 130, 135, 139, 222, 223, 236, 255, 256, 257, 260], "49it": [37, 45, 59, 130, 136, 139, 222, 223, 236, 255, 257, 259, 260, 263], "22it": [37, 39, 45, 60, 130, 135, 139, 222, 223, 236, 255, 256, 257, 259, 260, 263], "42it": [37, 39, 45, 60, 123, 130, 136, 222, 223, 236, 255, 256, 259, 260], "69it": [37, 39, 45, 60, 130, 136, 139, 222, 223, 236, 255, 256, 258, 259, 260, 265], "52it": [37, 45, 135, 139, 223, 236, 255, 256, 259, 260], "87it": [37, 39, 45, 59, 60, 130, 135, 139, 223, 236, 255, 259, 260, 263], "65it": [37, 39, 45, 60, 130, 135, 136, 139, 222, 223, 236, 255, 256, 259, 260], "16it": [37, 39, 45, 59, 60, 130, 135, 139, 222, 223, 236, 255, 259, 260], "71it": [37, 39, 45, 60, 130, 139, 223, 236, 255, 256, 257, 259, 260, 263, 264, 265], "20it": [37, 45, 60, 130, 136, 139, 222, 223, 236, 252, 259, 260, 264], "66it": [37, 45, 135, 139, 222, 223, 236, 255, 256, 259, 260, 263, 264], "63it": [37, 45, 59, 60, 130, 139, 223, 236, 255, 259, 260], "08it": [37, 39, 45, 59, 60, 130, 135, 136, 222, 236, 255, 257, 259, 263], "62it": [37, 39, 45, 60, 130, 139, 222, 223, 236, 255, 256, 259, 260, 265], "06it": [37, 39, 45, 59, 60, 70, 130, 135, 139, 222, 223, 236, 255, 259, 260, 264], "61it": [37, 39, 45, 60, 130, 135, 136, 139, 206, 223, 236, 255, 256, 259, 260], "05it": [37, 45, 59, 60, 70, 130, 135, 136, 139, 222, 223, 236, 255, 256, 259, 260], "54it": [37, 39, 45, 123, 130, 135, 136, 139, 223, 236, 255, 256, 259, 260, 263, 264], "95it": [37, 39, 45, 59, 130, 135, 222, 223, 236, 255, 256, 259, 260, 263], "80it": [37, 39, 45, 60, 135, 139, 222, 223, 236, 255, 256, 259, 260, 264, 265], "93it": [37, 39, 45, 60, 130, 131, 139, 222, 236, 255, 256, 259, 260, 264], "50it": [37, 39, 45, 59, 60, 130, 135, 136, 236, 255, 256, 259, 260, 263, 264], "84it": [37, 39, 45, 59, 60, 130, 135, 139, 222, 223, 236, 257, 258, 260, 265], "11it": [37, 39, 45, 60, 130, 135, 206, 222, 223, 236, 252, 255, 256, 260], "91it": [37, 39, 45, 60, 136, 139, 222, 223, 236, 255, 256, 257, 260, 264, 265], "53it": [37, 45, 130, 136, 139, 223, 236, 255, 256, 257, 260, 264], "75it": [37, 39, 45, 130, 136, 139, 223, 236, 256, 257, 259, 260, 263, 264, 265], "57it": [37, 45, 60, 130, 135, 139, 222, 223, 236, 255, 256, 257, 259, 260, 264], "03it": [37, 45, 59, 60, 123, 130, 139, 222, 223, 236, 255, 256, 257, 260], "47it": [37, 45, 59, 60, 130, 135, 136, 223, 236, 255, 259, 260, 264, 265], "83it": [37, 39, 45, 60, 131, 135, 136, 139, 223, 236, 255, 259, 260, 264, 265], "25it": [37, 39, 45, 60, 130, 136, 139, 223, 236, 255, 256, 257, 259, 260], "98it": [37, 45, 60, 123, 130, 135, 139, 222, 223, 236, 255, 257, 260], "39it": [37, 39, 45, 59, 130, 136, 139, 222, 223, 236, 255, 256, 257, 259, 260, 263, 264], "94it": [37, 39, 45, 59, 60, 130, 136, 139, 151, 206, 222, 223, 236, 255, 256, 257, 259, 260], "77it": [37, 39, 45, 60, 130, 139, 222, 223, 236, 255, 256, 259, 260, 263, 264, 265], "88it": [37, 39, 45, 59, 60, 135, 136, 139, 206, 222, 223, 236, 255, 256, 259, 260, 263], "92it": [37, 39, 45, 59, 60, 135, 136, 222, 236, 255, 256, 257, 260], "70it": [37, 45, 60, 130, 135, 136, 139, 206, 222, 223, 236, 255, 259, 260, 265], "40it": [37, 39, 45, 60, 130, 136, 139, 222, 223, 236, 255, 256, 257, 260, 264], "48it": [37, 39, 45, 59, 130, 135, 139, 206, 223, 236, 255, 256, 259, 260], "17it": [37, 39, 45, 60, 130, 136, 139, 222, 223, 236, 255, 257, 259, 260, 263, 264], "09it": [37, 39, 45, 130, 135, 139, 222, 223, 236, 255, 259, 260, 264], "46it": [37, 39, 45, 130, 136, 139, 222, 236, 255, 256, 257, 259, 260], "33it": [37, 39, 45, 59, 130, 135, 139, 222, 223, 236, 255, 257, 260, 264], "78it": [37, 45, 59, 60, 130, 135, 139, 222, 223, 236, 255, 256, 257, 260, 263, 265], "67it": [37, 39, 45, 130, 135, 136, 139, 222, 223, 236, 255, 257, 259, 260, 263, 265], "81it": [37, 45, 59, 60, 135, 206, 222, 223, 236, 255, 257, 259, 260, 263, 265], "27it": [37, 45, 130, 135, 139, 223, 236, 255, 257, 259, 260], "58it": [37, 45, 130, 139, 222, 223, 236, 255, 259, 260], "30it": [37, 39, 45, 130, 139, 151, 222, 223, 236, 255, 259, 260, 263], "34it": [37, 39, 45, 59, 123, 130, 206, 222, 223, 236, 255, 260, 265], "43it": [37, 39, 45, 60, 130, 206, 222, 223, 236, 255, 256, 259, 260, 265], "18it": [37, 39, 45, 60, 135, 139, 206, 223, 236, 255, 256, 259, 260, 264], "investig": [37, 47, 170, 177, 218, 229, 265, 317, 333, 334, 636, 876], "patterns_": [37, 41, 44, 45, 47, 223, 284, 290, 483, 487, 489, 490, 491, 501, 637], "inverse_transform": [37, 44, 223, 491, 492, 497, 498, 501, 637], "lookup": [37, 67, 307, 319, 324, 331, 332, 333, 334, 336, 344, 535, 536, 550, 551, 733, 834], "vertic": [37, 48, 50, 54, 64, 65, 67, 69, 74, 78, 79, 95, 134, 143, 160, 162, 166, 168, 181, 184, 185, 186, 187, 201, 204, 207, 218, 227, 230, 235, 236, 243, 246, 252, 255, 256, 263, 264, 265, 273, 274, 282, 284, 288, 290, 291, 292, 308, 319, 320, 327, 331, 332, 333, 334, 337, 338, 339, 342, 343, 344, 345, 346, 347, 351, 352, 364, 365, 427, 429, 517, 530, 539, 541, 542, 550, 551, 588, 590, 612, 613, 619, 620, 656, 705, 734, 747, 749, 750, 752, 753, 754, 755, 756, 758, 759, 760, 771, 772, 774, 775, 776, 779, 780, 833, 834, 850, 855, 860, 866, 874, 889, 894, 899, 931], "lh_vertno": [37, 143, 201, 342, 345, 747], "empti": [37, 41, 166, 168, 176, 187, 188, 192, 195, 197, 198, 210, 211, 218, 228, 232, 233, 235, 237, 243, 250, 265, 281, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 301, 302, 303, 308, 309, 316, 319, 320, 325, 328, 331, 332, 333, 334, 336, 342, 355, 370, 378, 387, 394, 417, 418, 423, 428, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 510, 531, 550, 551, 559, 563, 566, 567, 574, 579, 602, 627, 628, 629, 633, 634, 636, 637, 639, 646, 647, 656, 660, 671, 672, 695, 703, 714, 724, 728, 765, 771, 780, 784, 786, 787, 788, 789, 790, 803, 821, 844, 860, 861, 866, 867, 873, 875, 883, 889, 890], "stc_feat": 37, "ab": [37, 45, 61, 64, 66, 73, 85, 87, 95, 124, 146, 147, 161, 177, 205, 209, 212, 218, 222, 229, 255, 257, 258, 263, 264, 265, 270, 273, 302, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 638, 802, 812], "tstep": [37, 48, 57, 72, 85, 117, 121, 122, 207, 252, 263, 264, 265, 281, 338, 339, 342, 345, 346, 347, 428, 548, 590, 636, 734, 751, 770, 776, 801, 809], "transpar": [37, 84, 128, 149, 198, 207, 227, 270, 292, 297, 310, 323, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 784, 834, 855, 872, 889, 894, 899, 900, 901, 902], "07it": [37, 45, 59, 60, 130, 136, 139, 222, 236, 255, 256, 257, 259, 260, 264], "38it": [37, 39, 45, 59, 60, 130, 136, 139, 222, 223, 255, 256, 259, 260], "50724321": 37, "37721471": 37, "59502306": 37, "076": [37, 46, 133, 140, 956], "decoding_spatio_temporal_sourc": [37, 46, 956], "comodul": [38, 490], "composit": [38, 215, 223, 320, 338, 339, 342, 345, 346, 347, 834, 894, 899], "orthogon": [38, 141, 182, 186, 204, 223, 233, 234, 237, 288, 292, 312, 320, 364, 365, 636, 814, 817], "spatial": [38, 40, 41, 43, 44, 46, 53, 57, 58, 59, 60, 62, 73, 82, 97, 98, 106, 109, 110, 117, 140, 146, 148, 177, 178, 181, 182, 188, 201, 226, 227, 229, 233, 234, 239, 246, 250, 252, 255, 257, 260, 263, 264, 265, 269, 270, 277, 280, 282, 283, 284, 290, 292, 294, 299, 301, 303, 304, 308, 316, 317, 319, 320, 328, 331, 332, 333, 334, 335, 336, 337, 340, 342, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 380, 396, 423, 429, 432, 433, 443, 483, 484, 490, 491, 497, 499, 501, 512, 550, 551, 563, 564, 566, 596, 602, 614, 615, 618, 633, 634, 635, 636, 637, 650, 651, 670, 671, 692, 698, 701, 703, 738, 741, 746, 754, 755, 756, 757, 761, 771, 772, 774, 775, 784, 786, 787, 789, 790, 805, 824, 834, 853, 868, 870, 875, 876, 879, 888, 891, 896, 898, 936, 956], "maxim": [38, 87, 114, 168, 186, 202, 203, 206, 209, 223, 229, 231, 277, 284, 320, 339, 345, 346, 347, 364, 365, 491, 636, 669, 754, 755, 756, 758, 759, 770, 900], "variabl": [38, 42, 57, 69, 128, 130, 139, 144, 167, 169, 176, 181, 194, 196, 223, 226, 229, 231, 233, 243, 245, 259, 260, 265, 277, 284, 288, 291, 293, 302, 303, 316, 319, 320, 324, 329, 331, 332, 337, 338, 339, 341, 342, 345, 346, 347, 371, 375, 376, 377, 380, 429, 434, 435, 436, 442, 445, 447, 448, 449, 450, 452, 453, 454, 457, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 490, 500, 502, 512, 524, 525, 531, 533, 535, 539, 541, 542, 543, 544, 550, 551, 571, 588, 592, 594, 622, 635, 636, 660, 667, 686, 688, 696, 700, 706, 715, 720, 721, 722, 723, 730, 732, 733, 747, 750, 761, 771, 772, 773, 774, 775, 779, 780, 826, 834, 852, 854, 864, 866, 883, 889, 894, 899, 900, 902, 931, 936, 939, 941, 948], "fluctuat": [38, 167, 168, 177, 226, 228, 234, 235, 239, 252, 319, 333, 334, 876], "electromyogram": [38, 284], "cortico": 38, "muscular": [38, 226, 232], "coher": [38, 58, 59, 130, 134, 206, 252, 277, 317, 319, 356, 357, 358, 359, 364, 784, 785, 813, 814, 815, 816, 817, 818, 862, 949], "fieldtrip": [38, 182, 218, 229, 235, 255, 257, 263, 284, 286, 290, 291, 300, 301, 303, 312, 320, 390, 397, 571, 696, 700, 813, 814, 816, 817], "ridg": [38, 45, 222, 489, 495], "kfold": [38, 42, 45, 285, 423, 428, 500], "cross_val_predict": [38, 286], "fieldtrip_cmc": [38, 47, 197], "subjectcmc": [38, 47], "emg": [38, 109, 163, 195, 216, 223, 243, 250, 277, 281, 304, 305, 317, 320, 331, 332, 333, 334, 336, 341, 379, 443, 490, 516, 550, 551, 563, 566, 579, 633, 636, 784, 786, 787, 788, 789, 790, 866, 889], "emglft": 38, "ref_meg": [38, 47, 101, 146, 151, 195, 239, 284, 331, 332, 333, 334, 341, 379, 443, 550, 551, 553, 633, 634, 650, 784, 786, 787, 788, 789, 790, 866, 889], "durat": [38, 47, 75, 92, 97, 98, 100, 101, 102, 103, 107, 108, 109, 117, 120, 121, 151, 163, 166, 167, 170, 172, 175, 176, 177, 192, 193, 194, 212, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 252, 263, 264, 265, 273, 281, 286, 287, 291, 292, 293, 294, 302, 304, 306, 307, 308, 309, 319, 323, 325, 331, 332, 333, 334, 341, 342, 350, 410, 412, 426, 428, 483, 485, 489, 490, 494, 495, 507, 512, 519, 521, 522, 524, 550, 551, 568, 595, 596, 636, 638, 639, 641, 660, 671, 679, 685, 734, 736, 776, 800, 802, 812, 866, 875, 883, 889], "meg_epoch": [38, 44], "detrend": [38, 137, 161, 238, 282, 298, 326, 331, 332, 333, 334, 595, 694, 955], "emg_epoch": 38, "var": [38, 73, 97, 197, 234, 445, 531, 777], "oa": [38, 47, 110, 209, 423], "validaton": 38, "first_samp": [38, 97, 102, 163, 192, 194, 210, 212, 243, 244, 245, 281, 283, 284, 287, 290, 293, 301, 302, 307, 319, 325, 326, 331, 332, 336, 341, 350, 431, 511, 512, 524, 549, 550, 551, 572, 596, 631, 636, 672, 697, 698, 734, 749, 787, 869, 883, 889, 926], "set_xlabel": [38, 39, 45, 47, 48, 71, 97, 123, 131, 140, 159, 170, 172, 198, 209, 223, 233, 258, 259, 260, 274], "set_titl": [38, 39, 48, 71, 97, 98, 123, 126, 139, 141, 147, 162, 170, 222, 223, 237, 238, 258, 259, 260, 269, 270, 273, 274], "78": [38, 39, 45, 47, 60, 61, 73, 77, 106, 107, 130, 139, 141, 151, 163, 183, 184, 192, 195, 202, 205, 211, 219, 221, 223, 236, 243, 255, 256, 257, 259, 260, 264, 265, 277, 320, 367, 475, 956], "62": [38, 39, 42, 45, 47, 60, 61, 64, 71, 73, 82, 97, 107, 130, 135, 139, 141, 162, 163, 195, 206, 223, 236, 255, 256, 259, 260, 263, 277, 956], "256": [38, 39, 45, 47, 97, 139, 142, 152, 182, 186, 195, 196, 197, 198, 209, 236, 252, 255, 259, 260, 320, 344, 515, 805, 851, 941, 942], "258": [38, 39, 45, 47, 76, 111, 114, 139, 151, 184, 192, 195, 236, 956], "114": [38, 39, 45, 46, 47, 61, 68, 82, 107, 177, 195, 207, 259, 260, 279, 956], "12000": [38, 47, 308], "911610": [38, 47], "191": [38, 47, 195, 236, 259, 260], "180000": 38, "793": [38, 170, 260], "661": [38, 212, 223, 229, 236, 256, 260], "1057": 38, "881": [38, 47, 88, 93, 172, 236, 344, 956], "1801": 38, "183": [38, 45, 182, 190, 195, 236, 259, 260, 956], "contribut": [38, 45, 71, 95, 175, 177, 206, 257, 260, 277, 283, 284, 285, 286, 290, 291, 292, 293, 294, 310, 311, 317, 322, 331, 332, 503, 512, 652, 740, 941, 946], "sven": [38, 44, 45, 223, 277, 487, 489, 490, 491, 501], "d\u00e4hne": [38, 44, 45, 223, 277, 487, 489, 490, 501], "frank": [38, 44, 45, 102, 223, 232, 277, 487, 489, 490, 501, 636, 678], "meineck": [38, 44, 45, 223, 277, 487, 489, 490, 501], "stefan": [38, 44, 45, 59, 140, 223, 232, 257, 260, 263, 269, 273, 277, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308, 487, 489, 490, 491, 501, 651, 954], "hauf": [38, 44, 45, 223, 277, 487, 489, 490, 491, 501], "johann": [38, 223, 277, 282, 291, 293, 294, 303, 308, 490], "h\u00f6hne": [38, 223, 277, 490], "michael": [38, 45, 128, 222, 223, 231, 232, 277, 282, 317, 320, 423, 483, 489, 490, 635, 636, 675, 686, 800, 802, 812], "tangermann": [38, 223, 232, 277, 490], "klau": [38, 223, 232, 277, 483, 490, 636], "robert": [38, 102, 206, 222, 223, 232, 239, 260, 277, 290, 291, 292, 293, 294, 302, 303, 306, 308, 317, 483, 489, 490, 650, 771, 772, 774, 775, 954], "m\u00fcller": [38, 101, 223, 232, 277, 483, 490, 636], "vadim": [38, 47, 223, 277, 490, 491], "nikulin": [38, 47, 223, 277, 490, 491], "novel": [38, 47, 223, 277, 400, 490, 491], "framework": [38, 61, 223, 277, 320, 490, 545, 952], "amplitud": [38, 45, 61, 63, 65, 66, 71, 73, 79, 85, 107, 108, 120, 121, 122, 143, 151, 158, 161, 166, 167, 170, 171, 188, 192, 198, 201, 206, 209, 210, 212, 217, 219, 222, 223, 226, 227, 229, 232, 233, 234, 236, 238, 239, 252, 273, 277, 283, 284, 303, 319, 320, 323, 326, 329, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 357, 365, 410, 411, 412, 416, 428, 490, 526, 547, 548, 550, 551, 597, 607, 618, 636, 638, 653, 654, 693, 736, 737, 741, 745, 746, 770, 771, 786, 787, 788, 789, 790, 802, 812, 834, 863, 864, 877, 890, 936, 949], "neuron": [38, 47, 163, 170, 222, 223, 226, 277, 317, 319, 320, 364, 476, 489, 490, 491, 603, 650], "oscil": [38, 47, 95, 121, 140, 141, 212, 223, 226, 230, 252, 277, 490, 491, 737, 800, 802, 812], "behavior": [38, 170, 195, 215, 223, 226, 228, 229, 234, 277, 281, 282, 283, 284, 285, 286, 288, 290, 291, 293, 294, 302, 306, 307, 309, 310, 311, 324, 331, 332, 341, 490, 524, 596, 601, 603, 671, 698, 733, 786, 787, 789, 790, 906, 936], "111": [38, 58, 61, 72, 140, 171, 195, 223, 236, 259, 260, 273, 277, 490], "122": [38, 42, 82, 86, 186, 195, 196, 223, 232, 236, 255, 259, 277, 286, 288, 320, 403, 484, 490, 499, 956], "2013": [38, 42, 44, 45, 69, 85, 107, 108, 170, 195, 223, 277, 313, 314, 337, 342, 343, 349, 429, 484, 487, 489, 490, 499, 501, 507, 548, 641, 675, 741, 746], "07": [38, 45, 61, 72, 85, 107, 110, 111, 130, 133, 135, 156, 160, 186, 196, 202, 205, 209, 210, 211, 214, 218, 221, 222, 223, 236, 240, 242, 257, 260, 277, 320, 389, 490, 744, 956], "079": [38, 162, 223, 277, 490], "738": [38, 46, 260, 956], "369": [38, 107, 195, 236, 277, 320, 603, 744], "decoding_spoc_cmc": [38, 46, 956], "illustr": [39, 53, 54, 95, 96, 117, 121, 122, 153, 160, 164, 168, 172, 176, 177, 191, 192, 197, 215, 226, 227, 228, 230, 232, 234, 238, 243, 255, 259, 265, 269, 316, 319, 320, 550, 551], "discriminatori": 39, "given": [39, 42, 45, 52, 57, 97, 106, 121, 122, 139, 147, 148, 163, 169, 170, 175, 176, 177, 184, 186, 188, 191, 192, 195, 196, 197, 201, 204, 206, 212, 213, 214, 215, 222, 223, 228, 229, 232, 233, 234, 237, 239, 243, 244, 246, 255, 257, 259, 260, 268, 270, 282, 288, 290, 292, 302, 306, 309, 310, 317, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 345, 346, 347, 355, 364, 365, 370, 378, 380, 384, 385, 386, 395, 397, 398, 423, 428, 434, 435, 436, 438, 439, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 490, 491, 493, 498, 499, 503, 504, 508, 518, 519, 522, 524, 526, 528, 539, 545, 547, 548, 549, 550, 551, 553, 595, 598, 599, 602, 603, 604, 605, 606, 607, 609, 610, 611, 614, 619, 620, 635, 636, 637, 638, 639, 641, 647, 651, 652, 653, 654, 656, 660, 663, 667, 671, 677, 679, 685, 686, 691, 694, 728, 733, 738, 748, 751, 752, 764, 766, 770, 771, 772, 774, 775, 777, 779, 782, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 798, 799, 802, 804, 806, 810, 812, 817, 821, 822, 826, 834, 836, 839, 841, 852, 853, 854, 860, 864, 866, 867, 868, 870, 871, 872, 873, 875, 880, 883, 887, 889, 890, 891, 892, 894, 896, 898, 899, 903, 904, 915, 916, 918, 936, 941, 956], "subsequ": [39, 96, 110, 139, 140, 166, 168, 171, 183, 187, 192, 223, 227, 230, 232, 243, 263, 277, 287, 294, 303, 316, 319, 320, 331, 332, 550, 551, 636, 639, 646, 660, 776, 936, 945], "accur": [39, 52, 67, 70, 71, 76, 136, 161, 184, 185, 202, 208, 215, 223, 231, 232, 234, 237, 239, 290, 291, 292, 303, 316, 324, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 526, 550, 551, 594, 636, 650, 666, 824, 875, 902], "events_fnam": 39, "auditori": [39, 41, 56, 57, 63, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 86, 87, 88, 92, 98, 105, 106, 112, 113, 121, 134, 139, 143, 146, 147, 152, 158, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 191, 192, 194, 198, 201, 202, 204, 205, 206, 207, 208, 220, 221, 222, 223, 229, 234, 239, 244, 251, 259, 263, 265, 268, 270, 273, 274, 277, 282, 324, 325, 326, 328, 331, 332, 333, 334, 336, 337, 342, 422, 424, 428, 430, 432, 489, 510, 524, 550, 564, 592, 593, 598, 601, 602, 603, 614, 649, 675, 695, 697, 703, 709, 716, 732, 787, 788, 834, 956], "050": [39, 77, 82, 107, 166, 168, 175, 195, 206, 227, 235, 236, 252, 277, 956], "faster": [39, 44, 70, 147, 166, 209, 223, 232, 270, 277, 281, 282, 285, 287, 289, 290, 298, 323, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 429, 432, 523, 539, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 595, 636, 638, 771, 772, 774, 775, 941, 945, 946, 948], "constructor": [39, 114, 166, 168, 177, 191, 192, 198, 228, 230, 233, 245, 250, 253, 282, 283, 287, 298, 300, 302, 304, 309, 326, 338, 339, 342, 345, 346, 347, 549, 637, 653, 894, 899, 936], "497": [39, 40, 41, 103, 114, 126, 148, 159, 204, 232, 260, 277, 344], "310": [39, 40, 41, 61, 103, 107, 114, 126, 136, 139, 148, 159, 195, 223, 232, 236, 260], "lbfg": [39, 44, 223], "time_gen": [39, 223], "experiment": [39, 42, 71, 97, 98, 100, 103, 107, 108, 109, 117, 120, 166, 167, 172, 175, 176, 177, 179, 191, 193, 194, 195, 206, 223, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 273, 277, 294, 300, 316, 319, 320, 331, 332, 333, 334, 336, 484, 499, 550, 551, 552, 603, 660, 671, 672, 736, 737, 744, 784, 788, 939], "19it": [39, 45, 60, 130, 131, 136, 139, 222, 223, 236, 255, 256, 257, 259, 260], "35it": [39, 60, 130, 136, 223, 236, 255, 259, 260], "34": [39, 45, 54, 60, 61, 67, 71, 73, 95, 98, 107, 130, 133, 135, 139, 141, 143, 171, 195, 197, 207, 211, 223, 229, 236, 237, 251, 255, 256, 257, 259, 260, 264, 265, 277, 645, 765, 942, 956], "57": [39, 45, 60, 61, 66, 71, 107, 130, 135, 139, 141, 144, 154, 162, 176, 177, 183, 195, 206, 209, 210, 218, 222, 223, 232, 236, 242, 245, 255, 256, 257, 259, 260, 265, 268, 277, 301, 331, 332, 333, 334, 403, 547, 550, 551, 786, 789, 798, 804, 942, 956], "67": [39, 45, 59, 61, 73, 83, 107, 108, 130, 135, 139, 141, 143, 175, 184, 195, 198, 202, 204, 207, 218, 223, 236, 255, 256, 257, 259, 260, 264, 265, 274, 277, 281, 603], "1225": 39, "263": [39, 107, 108, 195, 207, 214, 218, 223, 236, 237, 255, 956], "248": [39, 72, 111, 130, 151, 195, 236, 238, 255, 259, 260, 956], "55it": [39, 45, 60, 130, 135, 139, 223, 236, 255, 256, 257, 259, 260, 265], "249": [39, 68, 69, 72, 82, 100, 177, 195, 223, 259, 260, 277, 956], "246": [39, 72, 195, 206, 223, 236, 255, 259, 277], "59it": [39, 45, 59, 123, 130, 135, 139, 222, 223, 255, 256, 259, 260, 265], "14it": [39, 45, 130, 139, 222, 223, 236, 255, 256, 259, 260], "255": [39, 139, 141, 186, 195, 236, 259, 260, 270, 273, 338, 339, 342, 345, 346, 347, 834, 855, 894, 899, 900], "36it": [39, 45, 59, 60, 135, 206, 223, 236, 255, 259, 260], "261": [39, 61, 98, 139, 195], "259": [39, 195, 260, 277, 320], "13it": [39, 45, 130, 139, 222, 223, 236, 255, 256, 257, 260, 263, 264], "142": [39, 68, 109, 188, 195, 198, 234, 236, 301, 344], "02it": [39, 45, 59, 60, 139, 222, 223, 236, 255, 256, 257, 259, 260, 263, 264, 265], "153": [39, 71, 195, 223, 236, 255, 260, 475], "266": [39, 58, 59, 60, 72, 139, 140, 195, 229, 236, 255, 260, 269, 277], "264": [39, 107, 108, 139, 177, 195, 218, 260, 277], "174": [39, 61, 154, 195, 236, 255, 277, 344], "273": [39, 61, 72, 139, 192, 195, 210, 260, 279], "185": [39, 195, 212, 228, 255, 344], "193": [39, 42, 46, 195, 222, 223, 236, 255, 259, 260, 299, 956], "274": [39, 72, 107, 108, 139, 151, 192, 195, 218, 255], "207": [39, 61, 141, 184, 195, 236, 255, 259, 260, 277], "219": [39, 61, 67, 195, 205, 214, 236, 259, 260, 297, 956], "289": [39, 72, 139, 175, 195, 222, 223, 259, 260, 277, 489, 636], "29it": [39, 45, 130, 135, 136, 139, 222, 223, 236, 255, 256, 259, 260], "228": [39, 82, 95, 110, 111, 195, 218, 236, 255, 259, 277, 652, 956], "242": [39, 195, 236, 259, 300], "296": [39, 139, 195, 202, 214, 956], "275": [39, 63, 72, 139, 151, 192, 195, 196, 218, 236, 255, 260, 277, 317, 320, 406, 483], "301": [39, 72, 139, 141, 195, 218, 236, 240, 255, 260, 268], "298": [39, 72, 102, 195, 223, 236, 255, 260, 656, 658], "293": [39, 61, 139, 195, 209, 260, 277], "304": [39, 76, 136, 139, 152, 176, 195, 197, 210, 256, 274, 301], "316": [39, 170, 195, 222, 260, 277, 489], "31it": [39, 45, 59, 60, 130, 223, 255, 256, 257, 260], "335": [39, 72, 136, 139, 195, 255, 277, 320], "347": [39, 93, 118, 122, 195, 281, 956], "357": [39, 66, 82, 107, 195, 229, 236, 956], "368": [39, 46, 107, 195, 197, 255, 260, 263, 956], "377": [39, 107, 236], "384": [39, 47, 51, 61, 107, 170, 197, 260], "295": [39, 72, 139, 195, 236, 255, 260], "288": [39, 41, 61, 98, 99, 139, 158, 167, 171, 186, 195, 197, 222, 240, 255, 260, 265, 277, 645], "396": [39, 71, 107, 202, 207, 277, 364], "406": [39, 66, 82, 107, 222, 236, 956], "282": [39, 139, 195, 223], "416": [39, 170, 197, 223, 236, 260], "425": [39, 45], "96it": [39, 45, 60, 130, 139, 222, 223, 236, 255, 257, 258, 259, 260], "433": [39, 223, 260], "279": [39, 139, 152, 156, 195, 222, 230, 236, 255, 260, 277, 636, 815, 818, 956], "442": [39, 255], "278": [39, 133, 139, 141, 195, 236, 255, 260, 956], "37": [39, 45, 47, 54, 60, 61, 68, 71, 73, 107, 130, 135, 139, 141, 171, 176, 180, 183, 195, 208, 214, 222, 223, 236, 255, 256, 257, 259, 260, 262, 264, 265, 268, 291, 298, 300, 403, 475, 524, 647, 956], "450": [39, 102, 107, 167, 186, 236, 302, 344], "276": [39, 139, 195, 236, 255, 260], "459": [39, 133, 134, 222, 223, 236, 255, 260, 956], "38": [39, 45, 47, 54, 60, 61, 67, 71, 73, 80, 82, 98, 100, 107, 108, 120, 123, 130, 135, 139, 141, 166, 167, 168, 170, 182, 184, 190, 195, 206, 210, 218, 222, 223, 228, 234, 236, 255, 256, 257, 259, 260, 264, 265, 273, 647, 956], "471": [39, 98, 111, 226, 229, 242, 277, 956], "480": [39, 101, 107, 126, 129, 197, 218, 260, 956], "488": [39, 76, 193, 200, 223, 255, 260, 956], "507": [39, 188, 255], "517": [39, 81, 82, 208, 214, 223, 260, 956], "529": [39, 75, 82, 109, 223, 956], "280": [39, 107, 139, 195, 196, 236, 303, 406], "538": [39, 170, 223], "550": [39, 97, 107, 188, 223, 252, 260, 277, 504, 644], "283": [39, 67, 98, 139, 144, 156, 195, 255, 277, 645, 956], "564": [39, 63, 82, 223, 236, 260, 277, 475, 956], "290": [39, 107, 139, 170, 195, 210, 236, 260, 277, 744], "44it": [39, 45, 130, 131, 135, 136, 222, 223, 236, 255, 256, 259, 260, 265], "573": [39, 223, 236, 260], "586": [39, 55, 82, 223, 260, 956], "599": 39, "297": [39, 60, 61, 82, 195, 956], "609": [39, 177, 236, 260, 277], "618": [39, 91, 93, 223, 236, 260, 277, 766, 956], "628": 39, "637": 39, "292": [39, 139, 195], "648": [39, 45, 175, 236], "54": [39, 45, 54, 60, 61, 71, 73, 107, 130, 135, 139, 141, 170, 177, 184, 195, 222, 223, 236, 237, 255, 256, 259, 260, 277, 279, 344], "659": [39, 72, 194, 236], "294": [39, 195, 236, 252, 254, 255, 956], "669": [39, 142], "56": [39, 41, 45, 58, 61, 71, 73, 102, 106, 107, 108, 114, 130, 135, 139, 141, 177, 186, 195, 198, 202, 206, 218, 222, 223, 236, 238, 255, 256, 259, 260, 277, 325, 483, 637, 771, 772, 774, 775], "681": 39, "691": [39, 136], "702": 39, "712": [39, 50, 51, 207, 260, 956], "59": [39, 41, 45, 54, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 74, 75, 80, 81, 84, 85, 87, 96, 98, 100, 103, 105, 107, 109, 117, 119, 120, 121, 123, 130, 135, 138, 139, 141, 143, 145, 148, 157, 167, 168, 171, 176, 177, 178, 182, 184, 188, 193, 194, 195, 198, 202, 204, 208, 210, 222, 223, 226, 227, 228, 232, 233, 234, 236, 237, 240, 243, 244, 245, 246, 251, 255, 256, 257, 259, 260, 264, 265, 273, 274, 277, 344, 504, 647, 660, 671, 777, 778], "739": [39, 260], "747": [39, 222, 236], "757": 39, "775": [39, 223, 273], "784": [39, 228, 242, 956], "795": [39, 170, 185, 190, 956], "805": [39, 108, 111, 121, 236, 956], "818": 39, "833": [39, 236, 260], "842": 39, "858": [39, 45, 260], "307": [39, 45, 140, 195], "317": [39, 102, 139, 195], "884": [39, 45, 236, 260, 277], "315": [39, 139, 195, 255, 278], "896": [39, 222, 260], "907": [39, 260], "51it": [39, 45, 59, 123, 130, 136, 139, 222, 223, 236, 256, 260, 265], "916": [39, 260, 270], "314": [39, 139, 175, 180, 195, 236, 956], "929": 39, "318": [39, 139, 195, 236, 255, 260], "940": [39, 107, 260], "948": [39, 236], "961": [39, 67, 82, 139, 186, 236, 260, 956], "974": [39, 223, 225, 956], "321": [39, 139, 195, 229, 236, 255, 260], "982": 39, "992": [39, 238], "1003": 39, "313": [39, 61, 195, 236, 297], "83": [39, 45, 61, 66, 73, 86, 107, 130, 135, 139, 141, 195, 223, 228, 231, 236, 237, 255, 256, 259, 260, 277, 369, 403, 635, 686, 771, 772, 774, 775], "1015": [39, 45], "1029": [39, 212, 223], "1040": [39, 236], "1047": 39, "312": [39, 61, 139, 195, 255, 260], "1056": 39, "1064": 39, "73it": [39, 45, 59, 60, 130, 135, 136, 139, 206, 222, 223, 236, 255, 257, 259, 260, 265], "88": [39, 45, 52, 61, 67, 71, 73, 76, 106, 107, 108, 130, 136, 139, 141, 184, 195, 202, 206, 207, 208, 212, 218, 222, 223, 236, 255, 256, 257, 259, 260, 264, 265, 277, 423], "1072": [39, 236], "303": [39, 61, 114, 139, 195, 236, 251, 255, 264], "1081": 39, "89": [39, 45, 60, 61, 73, 98, 105, 106, 107, 108, 130, 135, 139, 141, 162, 195, 210, 218, 222, 223, 227, 236, 255, 256, 259, 260, 277, 320, 645], "1092": 39, "1102": 39, "1113": [39, 195], "1123": [39, 195], "93": [39, 45, 59, 61, 66, 73, 106, 123, 130, 135, 139, 141, 195, 222, 223, 236, 255, 256, 259, 260, 277, 675], "1134": 39, "1143": [39, 195, 223], "1152": [39, 277], "1163": 39, "96": [39, 41, 44, 45, 70, 73, 108, 130, 135, 139, 140, 141, 163, 188, 195, 197, 206, 210, 222, 223, 233, 234, 236, 255, 256, 257, 259, 260, 265, 276, 277, 333, 334, 487, 489, 501, 876, 936, 956], "1173": [39, 223], "1182": 39, "1191": 39, "1204": 39, "1214": 39, "1224": 39, "vmax": [39, 45, 97, 114, 134, 139, 141, 143, 144, 152, 162, 167, 186, 202, 222, 223, 237, 238, 255, 257, 258, 269, 281, 291, 304, 305, 306, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 834, 836, 853, 867, 868, 871, 875, 879, 888, 891, 896, 897, 898], "xaxi": [39, 273], "set_ticks_posit": 39, "bottom": [39, 97, 101, 139, 166, 172, 187, 218, 245, 246, 255, 273, 302, 319, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 849, 866, 876, 894, 899], "ntest": 39, "ntrain": 39, "fontweight": [39, 170, 237, 273], "bold": [39, 170, 177, 227, 230, 233, 234, 235, 237, 238, 255, 273], "r\u00e9mi": [39, 223, 277], "stanisla": [39, 42, 163, 223, 277, 287, 484, 499], "dehaen": [39, 42, 223, 277, 484, 499], "dynam": [39, 47, 53, 58, 59, 97, 121, 132, 133, 139, 192, 206, 223, 229, 231, 232, 239, 252, 277, 284, 317, 319, 320, 331, 334, 337, 342, 354, 356, 357, 358, 359, 364, 491, 522, 524, 550, 551, 603, 636, 637, 644, 763, 889, 949, 956], "represent": [39, 43, 46, 53, 69, 70, 121, 130, 139, 142, 166, 175, 186, 192, 194, 195, 196, 198, 201, 217, 223, 232, 243, 244, 263, 264, 265, 268, 269, 277, 279, 282, 283, 287, 292, 293, 294, 301, 304, 308, 317, 319, 331, 332, 333, 334, 341, 343, 429, 432, 518, 524, 550, 551, 585, 633, 784, 786, 787, 789, 790, 813, 814, 816, 817, 818, 843, 949, 956], "tempor": [39, 42, 45, 53, 72, 85, 104, 111, 132, 133, 140, 141, 161, 162, 163, 166, 168, 172, 177, 191, 206, 210, 224, 225, 228, 229, 230, 231, 234, 237, 245, 255, 257, 258, 259, 260, 266, 267, 277, 280, 290, 291, 296, 298, 303, 317, 318, 320, 326, 331, 332, 333, 334, 336, 342, 343, 344, 423, 429, 489, 495, 503, 506, 509, 523, 524, 526, 546, 547, 548, 550, 551, 595, 599, 602, 603, 617, 619, 620, 633, 636, 638, 652, 671, 678, 679, 694, 698, 709, 711, 713, 718, 739, 740, 741, 742, 743, 744, 745, 746, 756, 758, 759, 760, 765, 767, 774, 775, 776, 799, 802, 812, 813, 814, 815, 816, 817, 818, 834, 956], "trend": [39, 92, 140, 167, 223, 277], "cognit": [39, 68, 69, 223, 229, 277, 322, 343, 429, 604, 954], "203": [39, 61, 66, 68, 75, 76, 84, 85, 100, 103, 106, 113, 119, 120, 121, 129, 138, 143, 146, 148, 151, 152, 157, 168, 172, 176, 178, 182, 183, 184, 188, 193, 194, 195, 196, 198, 203, 204, 205, 206, 223, 226, 227, 228, 233, 234, 236, 237, 243, 244, 245, 246, 252, 259, 260, 277, 956], "tic": [39, 223, 277], "800": [39, 45, 46, 59, 69, 77, 86, 90, 93, 107, 109, 142, 154, 156, 160, 161, 170, 181, 182, 186, 192, 201, 203, 212, 219, 229, 236, 263, 273, 338, 339, 342, 345, 346, 347, 542, 834, 894, 899, 956], "decoding_time_generalization_condit": [39, 46, 956], "Then": [40, 45, 71, 94, 108, 136, 140, 142, 161, 162, 166, 182, 187, 207, 217, 218, 219, 234, 260, 270, 309, 320, 333, 334, 385, 508, 651, 779, 872, 936, 946, 950, 951], "virtual": [40, 97, 126, 177, 232, 235, 290, 301, 319, 331, 332, 333, 334, 382, 504, 550, 551, 670, 725, 728, 941, 950], "output": [40, 45, 58, 61, 66, 70, 72, 73, 85, 134, 140, 141, 150, 161, 166, 169, 175, 177, 181, 187, 189, 190, 191, 194, 197, 198, 215, 219, 222, 223, 229, 230, 232, 233, 234, 240, 243, 244, 246, 250, 255, 257, 273, 279, 282, 283, 285, 286, 288, 291, 293, 294, 302, 304, 305, 306, 309, 312, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 495, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 631, 632, 636, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 688, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 729, 732, 733, 735, 736, 737, 738, 747, 748, 749, 750, 752, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 775, 776, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 804, 805, 808, 809, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 829, 833, 834, 836, 839, 843, 852, 861, 864, 868, 869, 870, 871, 876, 877, 879, 880, 881, 886, 887, 889, 890, 892, 893, 894, 895, 899, 900, 901, 904, 905, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 942, 946, 950, 956], "asish": [40, 281, 282, 283], "asishrocks95": 40, "fastica": [40, 103, 232, 636], "aud_l": [40, 41, 44, 68, 203, 259, 869], "vis_l": [40, 41, 44, 68, 259], "ie": [40, 79, 137, 328, 338, 342, 346, 688, 802, 812, 834, 861, 894, 895], "pca_data": 40, "window_titl": [40, 218, 333, 334, 870], "ica_data": 40, "ev1": [40, 282], "045": [40, 46, 166, 168, 175, 195, 252, 273, 276, 956], "decoding_unsupervised_spatial_filt": [40, 46, 956], "erp": [41, 126, 128, 144, 155, 179, 180, 191, 198, 223, 226, 227, 229, 232, 234, 235, 240, 277, 279, 297, 331, 333, 334, 336, 382, 422, 540, 550, 627, 636, 637, 698, 770, 860, 879, 881, 921, 939, 949, 956], "concaten": [41, 97, 101, 107, 139, 163, 177, 194, 215, 218, 231, 233, 243, 270, 282, 283, 284, 285, 294, 295, 300, 301, 302, 308, 331, 332, 333, 334, 430, 431, 432, 483, 492, 547, 550, 551, 639, 655, 660, 671, 749, 878], "fed": [41, 507], "classification_report": [41, 163], "confusion_matrix": [41, 163], "minmaxscal": 41, "n_filter": 41, "penalti": [41, 66, 72, 277, 312, 547, 548], "l1": [41, 66, 547, 548], "pred": 41, "target_nam": [41, 163], "cm_normal": 41, "astyp": [41, 99, 171, 186, 212, 218, 222, 230, 243], "float": [41, 45, 57, 66, 92, 120, 142, 162, 169, 170, 171, 175, 186, 195, 197, 215, 219, 222, 232, 243, 245, 255, 280, 285, 287, 288, 290, 291, 292, 294, 300, 302, 308, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 357, 364, 365, 372, 373, 380, 389, 394, 396, 398, 410, 411, 412, 413, 416, 422, 423, 424, 425, 426, 427, 428, 429, 434, 441, 443, 483, 485, 488, 489, 490, 491, 494, 495, 496, 500, 504, 507, 509, 511, 512, 518, 519, 521, 522, 523, 524, 526, 527, 528, 535, 541, 542, 545, 547, 548, 549, 550, 551, 561, 562, 570, 576, 588, 590, 591, 592, 595, 596, 598, 599, 603, 604, 605, 606, 607, 609, 610, 614, 615, 616, 618, 619, 620, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 649, 651, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 668, 669, 671, 673, 675, 676, 677, 679, 680, 689, 714, 720, 721, 722, 723, 733, 734, 739, 740, 741, 742, 743, 744, 745, 746, 749, 751, 754, 755, 756, 758, 759, 762, 763, 766, 767, 768, 770, 771, 772, 774, 775, 776, 777, 778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 810, 812, 813, 814, 815, 816, 817, 818, 822, 823, 824, 834, 836, 839, 840, 845, 849, 853, 855, 856, 860, 864, 865, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 886, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 904, 907, 908, 910, 911, 934], "sum": [41, 54, 57, 67, 73, 87, 99, 108, 136, 140, 141, 144, 163, 170, 175, 187, 188, 194, 201, 209, 210, 212, 229, 255, 256, 260, 270, 288, 291, 320, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 353, 422, 427, 550, 551, 618, 636, 641, 736, 771, 772, 774, 775, 779, 785, 786, 787, 789, 790, 868, 936, 955], "imshow": [41, 42, 48, 97, 134, 142, 143, 149, 162, 172, 186, 198, 223, 255, 257, 258, 259, 260, 273, 331, 332, 333, 334, 389, 784, 835, 838, 874, 897, 906], "nearest": [41, 52, 106, 143, 147, 162, 166, 171, 186, 194, 208, 243, 255, 281, 288, 290, 291, 303, 320, 328, 331, 332, 333, 334, 337, 338, 339, 340, 342, 344, 345, 346, 347, 349, 429, 434, 483, 490, 550, 551, 635, 636, 651, 779, 784, 785, 786, 787, 788, 789, 790, 822, 834, 836, 853, 854, 860, 868, 871, 875, 879, 888, 891, 896, 898], "blue": [41, 80, 81, 106, 109, 139, 158, 161, 168, 177, 182, 198, 201, 203, 204, 207, 217, 234, 263, 264, 270, 319, 329, 834, 851, 852, 860, 864], "tick_mark": 41, "ytick": [41, 222, 229, 255, 273], "precis": [41, 73, 97, 117, 163, 183, 210, 219, 229, 230, 237, 243, 252, 286, 298, 303, 316, 325, 331, 332, 337, 364, 365, 524, 550, 551, 573, 671, 740, 742, 761, 813, 814, 816, 817, 936], "recal": [41, 117, 163, 175, 176, 182, 244, 740, 741, 743, 746], "f1": [41, 97, 117, 163, 740], "support": [41, 60, 88, 151, 161, 162, 163, 164, 166, 168, 175, 176, 177, 191, 192, 196, 198, 207, 208, 211, 216, 217, 219, 246, 268, 269, 270, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 318, 319, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 364, 365, 372, 380, 386, 388, 408, 423, 428, 429, 439, 440, 441, 443, 462, 483, 490, 491, 499, 503, 504, 507, 513, 514, 516, 517, 521, 522, 523, 549, 550, 551, 557, 562, 567, 572, 575, 576, 577, 579, 582, 584, 590, 594, 597, 598, 636, 647, 659, 660, 671, 693, 695, 696, 697, 711, 718, 719, 728, 732, 733, 749, 765, 767, 776, 779, 784, 786, 787, 788, 789, 790, 834, 852, 854, 857, 860, 864, 865, 866, 870, 875, 883, 889, 890, 894, 899, 900, 901, 902, 905, 936, 939, 941, 945, 947, 948, 949, 952], "macro": [41, 163], "avg": [41, 163, 170, 255, 323, 813, 814], "last": [41, 97, 108, 131, 163, 166, 170, 172, 177, 186, 192, 209, 215, 223, 227, 228, 229, 230, 232, 233, 243, 246, 255, 256, 263, 270, 273, 281, 284, 286, 288, 294, 310, 317, 319, 320, 326, 328, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 354, 355, 370, 388, 411, 423, 431, 486, 493, 494, 496, 507, 521, 522, 523, 524, 549, 550, 551, 576, 596, 602, 631, 636, 639, 656, 765, 770, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 804, 815, 821, 834, 868, 873, 875, 880, 883, 890, 896, 942], "nrow": [41, 71, 100, 147, 172, 177, 202, 209, 238, 256, 273, 290, 305, 333, 334, 483, 490, 636, 875, 879], "fitted_xdawn": 41, "get_channel_typ": [41, 166, 195, 285, 290, 291, 303, 331, 332, 333, 334, 336, 550, 551, 636, 784, 786, 787, 788, 789, 790], "get_montag": [41, 142, 161, 162, 291, 294, 303, 306, 331, 332, 333, 334, 336, 550, 551], "cur_class": 41, "cur_pattern": 41, "pattern_evok": 41, "time_format": [41, 47, 127, 136, 139, 171, 202, 245, 294, 303, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 636, 784, 788, 875, 883, 889], "show_nam": [41, 94, 127, 147, 177, 196, 208, 256, 284, 286, 304, 305, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 872, 875, 879, 886, 888, 891, 892, 896], "bertrand": [41, 98, 105, 114, 223, 227, 277, 286, 320, 637, 645, 802, 812, 813, 816], "rivet": [41, 114, 223, 277, 637], "antoin": [41, 114, 223, 277, 286, 287, 294, 637], "souloumiac": [41, 114, 223, 277, 637], "virgini": [41, 114, 223, 277, 637], "attina": [41, 114, 223, 277, 637], "gibert": [41, 114, 223, 277, 637], "algorithm": [41, 53, 57, 97, 101, 104, 109, 110, 111, 114, 140, 154, 178, 182, 183, 188, 192, 223, 227, 229, 232, 237, 255, 260, 263, 264, 265, 277, 279, 282, 285, 287, 290, 306, 312, 316, 317, 318, 336, 337, 341, 377, 423, 482, 483, 497, 504, 547, 550, 603, 622, 636, 637, 639, 644, 646, 647, 653, 660, 662, 669, 671, 678, 679, 680, 744, 761, 766, 824, 949, 952, 956], "enhanc": [41, 114, 222, 223, 256, 260, 277, 285, 297, 298, 309, 311, 312, 489, 636, 637, 660, 771, 772, 774, 775], "2035": [41, 114, 206, 223, 277, 637], "2043": [41, 114, 195, 223, 277, 637], "2009": [41, 61, 84, 114, 144, 197, 223, 232, 255, 256, 277, 279, 316, 342, 545, 637, 651, 771, 772, 774, 775], "2012869": [41, 114, 223, 277, 637], "hubert": [41, 114, 277, 286, 287, 291, 294, 637], "cecotti": [41, 114, 277, 637], "emmanuel": [41, 114, 229, 277, 637], "mabi": [41, 114, 277, 637], "j\u00e9r\u00e9mie": [41, 114, 277, 637], "mattout": [41, 114, 277, 637], "theoret": [41, 114, 222, 223, 229, 250, 277, 319, 483, 637], "effici": [41, 68, 70, 114, 218, 229, 255, 277, 291, 297, 306, 318, 326, 331, 332, 333, 334, 495, 550, 551, 636, 637, 638, 744, 786, 787, 789, 790, 816, 817], "p300": [41, 114, 218, 223, 229, 277, 637, 815, 818], "proceed": [41, 59, 66, 72, 114, 192, 206, 231, 232, 252, 277, 316, 320, 357, 364, 548, 637, 815, 818], "eusipco": [41, 114, 277, 637, 815, 818], "1382": [41, 114, 277, 637], "1386": [41, 114, 236, 277, 637], "barcelona": [41, 114, 277, 637], "url": [41, 114, 140, 177, 223, 277, 290, 309, 320, 423, 450, 456, 458, 462, 475, 476, 545, 603, 637, 766, 815, 818], "ieeexplor": [41, 114, 277, 637, 815, 818], "7073970": [41, 114, 277, 637], "915": [41, 46, 956], "129": [41, 46, 61, 88, 99, 111, 114, 148, 155, 156, 195, 196, 236, 240, 259, 260, 262, 277, 956], "decoding_xdawn_eeg": [41, 46, 956], "cours": [42, 53, 58, 62, 64, 65, 67, 76, 82, 97, 101, 109, 117, 119, 122, 128, 140, 143, 161, 162, 168, 169, 177, 191, 192, 198, 201, 202, 203, 206, 213, 214, 223, 226, 229, 233, 234, 252, 260, 265, 277, 281, 282, 291, 297, 300, 308, 319, 320, 329, 330, 331, 332, 333, 334, 337, 338, 339, 342, 344, 345, 346, 347, 356, 358, 360, 363, 429, 484, 499, 517, 526, 536, 545, 547, 548, 550, 551, 590, 597, 602, 603, 617, 633, 701, 705, 711, 734, 748, 750, 751, 770, 784, 786, 787, 788, 789, 790, 833, 834, 860, 887, 894, 899, 956], "techniqu": [42, 43, 46, 53, 85, 97, 100, 101, 102, 175, 177, 191, 192, 223, 226, 229, 231, 232, 234, 235, 237, 238, 239, 241, 252, 255, 277, 317, 319, 320, 321, 331, 332, 333, 334, 336, 443, 485, 494, 497, 519, 521, 522, 542, 550, 551, 633, 636, 698, 728, 956], "By": [42, 71, 97, 106, 109, 130, 131, 139, 161, 168, 171, 175, 176, 177, 184, 192, 194, 195, 196, 197, 198, 204, 215, 216, 227, 229, 232, 233, 234, 235, 237, 240, 243, 244, 246, 268, 274, 281, 282, 283, 286, 287, 288, 290, 308, 320, 323, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 377, 394, 507, 524, 550, 551, 636, 639, 725, 749, 761, 777, 784, 785, 786, 787, 788, 789, 790, 862, 866, 874, 882, 889, 899, 915, 919], "onto": [42, 44, 66, 100, 161, 162, 168, 181, 192, 196, 201, 206, 222, 227, 233, 234, 237, 251, 283, 291, 294, 302, 306, 317, 320, 337, 339, 345, 347, 491, 667, 733, 761, 834, 852, 887, 906], "surrog": [42, 183, 209, 234, 288, 292, 304, 434, 499, 544], "expos": [42, 159, 222, 259, 284, 290, 299, 305], "exhibit": [42, 270, 320, 333, 334, 338, 339, 342, 345, 346, 347], "evolut": [42, 140, 636, 883], "audl": [42, 99], "visl": [42, 99], "wai": [42, 47, 53, 60, 69, 70, 101, 141, 142, 166, 167, 168, 170, 175, 176, 177, 182, 186, 187, 192, 194, 195, 196, 197, 198, 203, 206, 212, 217, 222, 227, 228, 229, 230, 232, 233, 234, 237, 239, 244, 245, 246, 250, 252, 255, 257, 258, 263, 265, 270, 273, 277, 279, 286, 290, 293, 298, 303, 308, 309, 310, 311, 314, 316, 317, 318, 319, 321, 325, 326, 330, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 423, 507, 517, 566, 595, 636, 638, 653, 657, 663, 672, 694, 701, 733, 765, 766, 767, 773, 779, 784, 788, 800, 802, 812, 834, 941, 945, 948], "n_epoch": [42, 141, 166, 172, 175, 192, 222, 223, 250, 260, 269, 284, 326, 331, 332, 382, 483, 484, 485, 488, 489, 490, 491, 492, 494, 495, 497, 498, 521, 522, 637, 644, 786, 787, 788, 791, 792, 793, 813, 814, 815, 860, 866, 867], "n_time": [42, 45, 57, 90, 92, 94, 97, 102, 109, 141, 166, 172, 175, 185, 192, 217, 218, 222, 223, 232, 235, 243, 250, 252, 255, 259, 260, 263, 264, 265, 287, 326, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 382, 417, 483, 484, 485, 488, 489, 490, 491, 492, 494, 496, 497, 499, 517, 519, 521, 522, 549, 550, 551, 572, 611, 637, 669, 734, 739, 740, 741, 742, 743, 744, 745, 746, 751, 758, 759, 760, 764, 770, 774, 775, 784, 786, 787, 788, 789, 790, 791, 792, 793, 804, 805, 809, 811, 813, 814, 815, 834, 860, 867, 868, 875, 896], "993": [42, 44, 140, 223], "613": [42, 44, 222, 236, 260], "106": [42, 61, 99, 123, 124, 127, 148, 167, 171, 178, 192, 195, 198, 203, 206, 223, 228, 232, 236, 259, 260], "x_transform": 42, "leav": [42, 163, 170, 198, 218, 226, 231, 243, 283, 679, 919, 948, 950], "recommend": [42, 67, 69, 70, 71, 97, 141, 181, 184, 187, 198, 215, 217, 219, 229, 230, 232, 233, 235, 237, 277, 281, 282, 287, 294, 309, 311, 320, 326, 331, 332, 333, 334, 338, 342, 346, 349, 375, 377, 386, 398, 416, 423, 428, 429, 443, 482, 485, 491, 527, 545, 550, 551, 559, 566, 571, 584, 595, 603, 609, 616, 636, 641, 653, 671, 678, 694, 696, 700, 725, 732, 733, 770, 774, 775, 802, 812, 844, 852, 894, 936, 941, 946, 947, 948], "stratifi": [42, 500], "tend": [42, 188, 204, 229, 231, 232, 255, 320, 646, 936], "overfit": [42, 114, 222], "cannot": [42, 85, 187, 195, 198, 215, 217, 219, 229, 230, 233, 235, 245, 265, 293, 309, 310, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 357, 410, 412, 505, 550, 551, 603, 636, 659, 660, 703, 733, 784, 834, 872, 894, 899, 928, 941], "x_scale": 42, "futur": [42, 97, 197, 232, 246, 286, 309, 310, 318, 349, 489, 495, 523, 660, 936, 946], "filters_": [42, 44, 290, 483, 484, 487, 490, 491, 501, 637], "individu": [42, 52, 58, 63, 68, 69, 70, 128, 166, 168, 170, 181, 185, 192, 196, 198, 201, 227, 233, 234, 238, 245, 246, 255, 269, 270, 277, 283, 288, 294, 309, 310, 316, 317, 320, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 364, 365, 396, 418, 483, 524, 550, 551, 604, 612, 613, 653, 679, 701, 762, 768, 776, 815, 818, 854, 866, 870, 874, 887, 889, 927, 946], "argsort": [42, 57, 144, 155, 169, 207], "reorder": [42, 73, 144, 285, 331, 332, 333, 334, 550, 551, 562, 784, 786, 787, 788, 789, 790, 867, 897], "kei": [42, 121, 122, 163, 166, 167, 168, 175, 176, 178, 192, 195, 196, 197, 207, 216, 233, 234, 240, 243, 244, 246, 250, 273, 280, 284, 285, 287, 290, 292, 302, 304, 306, 307, 309, 317, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 355, 364, 365, 370, 392, 393, 423, 427, 428, 434, 437, 438, 439, 440, 441, 456, 462, 475, 483, 490, 492, 499, 507, 510, 512, 526, 527, 528, 531, 545, 547, 548, 550, 551, 553, 586, 591, 602, 603, 614, 626, 635, 636, 638, 651, 653, 654, 656, 660, 682, 695, 697, 714, 727, 735, 736, 737, 749, 753, 769, 770, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 821, 824, 834, 852, 853, 858, 859, 860, 864, 866, 867, 868, 869, 870, 872, 874, 875, 876, 879, 888, 889, 891, 892, 894, 896, 898, 899, 900, 934, 948], "ems_av": 42, "u": [42, 45, 47, 73, 97, 131, 139, 142, 143, 163, 167, 170, 172, 175, 177, 186, 192, 197, 198, 206, 207, 215, 216, 222, 228, 229, 232, 233, 234, 240, 243, 244, 250, 277, 282, 287, 294, 309, 310, 311, 320, 322, 323, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 517, 550, 551, 611, 945, 950], "schurger": [42, 223, 277, 484, 499], "thu": [42, 44, 69, 73, 81, 97, 130, 141, 166, 167, 175, 178, 196, 197, 201, 206, 208, 215, 219, 223, 229, 232, 234, 235, 237, 255, 302, 309, 316, 317, 319, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 416, 485, 494, 506, 517, 519, 521, 550, 551, 603, 611, 614, 638, 802, 812, 813, 814, 816, 817, 936], "equalize_event_count": [42, 175, 177, 192, 259, 260, 265, 293, 294, 331, 332, 788], "103": [42, 61, 76, 139, 141, 148, 195, 236], "aaron": [42, 223, 277, 307, 484, 499], "sebastien": [42, 223, 277, 293, 484, 499], "marti": [42, 223, 277, 300, 484, 499], "reveal": [42, 128, 140, 170, 196, 218, 223, 229, 270, 277, 484, 499, 815, 818], "393": [42, 46, 107, 176, 180, 956], "ems_filt": [42, 46, 956], "continu": [43, 45, 46, 47, 53, 125, 129, 166, 168, 171, 174, 177, 187, 194, 215, 223, 224, 225, 226, 228, 229, 232, 233, 237, 241, 244, 248, 250, 255, 268, 277, 284, 293, 294, 297, 299, 309, 310, 312, 316, 317, 319, 323, 325, 331, 332, 333, 334, 336, 414, 422, 426, 428, 432, 483, 489, 490, 491, 495, 523, 524, 550, 551, 564, 570, 571, 584, 595, 596, 633, 635, 636, 639, 648, 689, 694, 768, 769, 770, 784, 786, 787, 788, 789, 790, 811, 860, 872, 879, 881, 956], "spectro": [43, 46, 53, 141, 191, 224, 225, 331, 333, 334, 336, 489, 491, 495, 523, 564, 596, 805, 956], "mvpa": [44, 191, 224, 225, 298, 328, 331, 333, 334, 336, 342, 423, 483, 484, 486, 487, 490, 492, 493, 498, 500, 501, 524, 603, 614, 637, 703, 834, 956], "neurophysiolog": [44, 45, 940], "interpret": [44, 45, 130, 168, 177, 185, 186, 215, 223, 229, 230, 245, 257, 259, 260, 265, 277, 279, 307, 309, 312, 320, 326, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 349, 371, 378, 381, 395, 397, 423, 424, 426, 428, 439, 485, 486, 487, 489, 493, 496, 499, 500, 501, 504, 521, 522, 526, 539, 541, 542, 550, 551, 559, 566, 574, 576, 594, 597, 598, 603, 609, 610, 619, 620, 635, 636, 638, 641, 648, 649, 652, 653, 654, 660, 663, 667, 677, 679, 686, 732, 733, 735, 736, 737, 740, 749, 752, 770, 771, 772, 773, 774, 775, 779, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 804, 805, 813, 814, 815, 816, 817, 834, 836, 860, 866, 867, 868, 870, 871, 872, 873, 880, 885, 887, 890, 945, 946, 951], "romain": [44, 279, 294, 298, 299, 301], "trachel": [44, 279, 298, 299, 301], "trachelr": 44, "sample_path": [44, 152, 161, 162], "meg_data": [44, 166], "reshap": [44, 163, 222, 255, 256, 259, 263, 265, 489, 498], "coef": [44, 45, 222, 223, 501], "revers": [44, 45, 99, 169, 172, 198, 215, 226, 228, 229, 231, 232, 234, 243, 291, 298, 328, 333, 334, 338, 339, 342, 344, 345, 346, 347, 870, 872, 874, 875, 894, 899], "sequenti": [44, 166, 176, 212, 250, 319, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 403, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 594, 597, 598, 609, 610, 619, 620, 641, 648, 649, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 824, 834, 836, 855, 860, 868, 871, 890, 894, 899, 900, 949], "kai": [44, 45, 170, 277, 487, 489, 501, 507], "g\u00f6rgen": [44, 45, 277, 487, 489, 501], "dylan": [44, 45, 109, 277, 487, 489, 501, 636], "hayn": [44, 45, 277, 487, 489, 501], "benjamin": [44, 45, 277, 483, 487, 489, 501], "blankertz": [44, 45, 277, 483, 487, 489, 501], "felix": [44, 45, 139, 277, 282, 293, 305, 306, 487, 489, 501], "bie\u00dfmann": [44, 45, 277, 487, 489, 501], "On": [44, 45, 97, 98, 192, 194, 227, 229, 232, 233, 270, 277, 293, 309, 318, 320, 323, 349, 487, 489, 501, 512, 532, 636, 645, 941, 948, 950], "multivari": [44, 45, 117, 121, 163, 188, 222, 223, 277, 282, 317, 423, 487, 489, 501, 738, 936], "067": [44, 45, 248, 277, 487, 489, 501], "220": [44, 46, 107, 163, 195, 212, 236, 255, 264, 267, 956], "1035": 44, "linear_model_pattern": [44, 46, 956], "reproduc": [45, 71, 97, 120, 177, 222, 244, 285, 309, 364, 588, 636, 669, 688, 736, 737, 738, 747, 748, 750, 771, 772, 773, 774, 775], "lalor": [45, 222, 277, 317, 489], "speech": [45, 222, 277, 317, 489, 675, 815, 818], "envelop": [45, 108, 140, 141, 142, 162, 172, 223, 287, 288, 292, 317, 331, 332, 333, 334, 490, 550, 551, 641, 802, 812, 813, 816], "128": [45, 50, 67, 76, 147, 184, 186, 194, 195, 196, 197, 232, 236, 250, 252, 259, 279, 303, 317, 331, 332, 482, 854], "try": [45, 57, 97, 101, 109, 166, 167, 169, 177, 182, 184, 187, 188, 193, 197, 202, 206, 219, 229, 230, 231, 232, 233, 234, 243, 251, 252, 270, 282, 290, 291, 303, 305, 309, 318, 341, 349, 500, 520, 533, 559, 566, 636, 651, 852, 922, 936, 937, 941, 942], "known": [45, 70, 114, 139, 141, 170, 177, 182, 186, 191, 206, 253, 254, 255, 284, 293, 317, 319, 320, 328, 331, 332, 333, 334, 335, 336, 337, 342, 423, 433, 507, 518, 524, 550, 551, 553, 559, 566, 584, 602, 603, 617, 679, 703, 706, 740, 748, 751, 766, 834, 952, 956], "literatur": [45, 170, 270, 319, 330, 331, 332, 333, 334, 784, 788], "simpli": [45, 69, 161, 169, 170, 172, 175, 196, 197, 215, 227, 228, 232, 234, 237, 244, 245, 255, 269, 270, 294, 309, 317, 320, 326, 330, 331, 332, 333, 334, 364, 365, 550, 551, 653, 654, 784, 788, 941, 945, 950], "chri": [45, 141, 162, 222, 223, 277, 279, 281, 282, 283, 284, 285, 293, 301], "holdgraf": [45, 141, 142, 162, 222, 223, 277, 279, 281, 282, 283, 284, 285, 301, 489], "choldgraf": [45, 141, 142, 162, 222], "nicola": [45, 73, 277, 284, 290, 293, 744], "barascud": [45, 284, 290], "sphinx_gallery_thumbnail_numb": [45, 147, 223], "loadmat": [45, 222], "collect": [45, 97, 177, 183, 194, 198, 209, 210, 217, 218, 219, 227, 237, 240, 270, 273, 277, 282, 302, 309, 314, 316, 319, 320, 324, 328, 331, 332, 333, 334, 389, 483, 490, 510, 550, 551, 635, 636, 656, 658, 769, 784, 786, 787, 789, 790, 850, 860, 868, 875, 879, 891, 896, 898], "listen": [45, 310, 317, 917], "know": [45, 66, 168, 182, 186, 195, 198, 212, 216, 219, 227, 229, 232, 233, 234, 245, 259, 273, 294, 309, 318, 320, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 611, 614, 724, 876, 936, 945, 948, 949], "primarili": [45, 97, 196, 226, 229, 240, 319, 485, 550, 551, 685, 858, 949], "speech_data": [45, 222], "down": [45, 47, 97, 139, 177, 187, 212, 219, 222, 223, 229, 233, 245, 246, 257, 259, 284, 300, 302, 309, 310, 328, 329, 331, 332, 333, 334, 340, 341, 483, 490, 523, 550, 551, 635, 636, 669, 771, 772, 774, 775, 784, 786, 787, 789, 790, 834, 864, 866, 867, 868, 872, 875, 879, 888, 889, 891, 896, 898, 941], "biosemi128": [45, 196], "ln": [45, 119, 134, 320, 802, 812, 948], "alpha": [45, 47, 54, 61, 65, 66, 70, 72, 75, 76, 85, 97, 123, 124, 137, 139, 140, 143, 149, 161, 163, 172, 177, 198, 203, 207, 217, 222, 233, 239, 255, 257, 260, 265, 269, 270, 274, 285, 292, 294, 302, 312, 327, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 423, 489, 495, 541, 545, 547, 548, 550, 551, 619, 705, 762, 768, 771, 772, 774, 775, 784, 786, 787, 789, 790, 834, 836, 845, 852, 855, 868, 871, 872, 884, 890, 894, 899, 907], "ln1": 45, "frameon": [45, 273], "float64": [45, 90, 92, 94, 97, 102, 109, 119, 121, 141, 185, 193, 217, 232, 235, 250, 307, 320, 549, 764], "7677": 45, "7676": 45, "119": [45, 151, 161, 186, 195, 223, 236, 255, 262, 301, 956], "938": [45, 147, 156, 260, 956], "construct": [45, 68, 96, 130, 166, 170, 188, 194, 204, 206, 209, 210, 215, 218, 223, 229, 232, 233, 234, 237, 252, 255, 269, 270, 281, 282, 284, 286, 288, 293, 316, 319, 320, 331, 332, 333, 334, 338, 342, 344, 346, 347, 351, 352, 364, 381, 429, 507, 518, 519, 521, 522, 550, 551, 568, 651, 695, 728, 733, 734, 770, 779, 792, 795, 849, 855, 889, 894, 900], "relationship": [45, 48, 169, 186, 219, 231, 255, 310, 317, 319, 320, 489, 495, 527, 802, 812, 813, 814, 816, 817], "rf": [45, 222, 307, 489], "feature_nam": [45, 222, 287, 489], "corrcoef": [45, 48, 73, 489], "extra": [45, 107, 108, 171, 186, 192, 195, 196, 218, 234, 243, 251, 281, 283, 285, 306, 319, 328, 331, 332, 333, 334, 336, 340, 373, 374, 380, 403, 405, 483, 484, 490, 502, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 830, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898, 946, 950], "inclus": [45, 151, 166, 169, 211, 303, 323, 331, 332, 341, 344, 450, 475, 476, 528, 545, 547, 548, 562, 614, 631, 636, 660, 776, 785, 788], "n_delai": [45, 489], "held": [45, 106, 197, 222, 310], "coef_": [45, 222, 487, 489, 635], "n_output": [45, 489, 495], "n_featur": [45, 222, 223, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 498, 637, 669, 764], "delays_": [45, 222, 489], "mean_coef": 45, "mean_scor": 45, "ix_ch": 45, "sometim": [45, 53, 87, 109, 139, 142, 144, 155, 166, 170, 182, 187, 194, 195, 216, 217, 227, 229, 230, 232, 234, 235, 255, 273, 292, 303, 304, 307, 309, 316, 319, 320, 328, 331, 332, 333, 334, 336, 340, 483, 490, 550, 551, 567, 635, 636, 651, 689, 695, 784, 786, 787, 789, 790, 853, 860, 868, 875, 879, 888, 891, 896, 898, 936, 950], "well": [45, 48, 58, 63, 73, 97, 105, 143, 147, 162, 163, 166, 169, 170, 176, 178, 186, 188, 191, 192, 195, 198, 201, 208, 210, 212, 215, 216, 218, 222, 226, 227, 229, 231, 232, 233, 234, 235, 237, 239, 241, 243, 250, 252, 260, 268, 270, 274, 277, 282, 283, 284, 291, 302, 303, 309, 310, 312, 317, 318, 319, 320, 331, 332, 333, 334, 341, 342, 388, 411, 423, 439, 483, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 507, 522, 523, 550, 551, 636, 637, 650, 657, 659, 671, 678, 784, 802, 804, 812, 815, 816, 817, 818, 866, 868, 882, 936, 938, 941, 946, 948, 952], "recreat": [45, 166, 229, 273, 274, 859], "time_plot": 45, "180": [45, 50, 61, 107, 119, 134, 138, 182, 195, 204, 212, 218, 226, 228, 230, 232, 236, 239, 255, 287, 338, 339, 342, 345, 346, 347, 517, 840], "highlight": [45, 47, 117, 122, 141, 147, 176, 177, 198, 201, 202, 230, 232, 237, 245, 303, 307, 309, 328, 329, 331, 332, 333, 334, 341, 483, 490, 550, 551, 635, 784, 786, 787, 789, 790, 853, 864, 868, 870, 875, 891, 896, 898], "max_coef": 45, "pcolormesh": [45, 141, 222, 291], "shade": [45, 197, 222, 233, 291, 844, 860, 901, 902], "gouraud": [45, 222], "ncoeffici": 45, "setp": [45, 222, 230], "get_xticklabel": [45, 222], "2c": [45, 320], "ix_plot": 45, "argmin": [45, 147, 170, 270], "vlim": [45, 97, 106, 127, 136, 149, 167, 168, 231, 234, 238, 260, 270, 290, 291, 304, 305, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 845, 853, 868, 875, 879, 888, 891, 896, 898], "nfor": 45, "case": [45, 70, 84, 97, 100, 117, 121, 122, 130, 141, 147, 151, 164, 166, 169, 170, 175, 181, 187, 188, 191, 194, 195, 197, 198, 206, 207, 211, 215, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 255, 256, 257, 263, 265, 268, 270, 273, 274, 277, 281, 282, 283, 285, 287, 290, 291, 294, 300, 302, 304, 305, 306, 309, 310, 312, 319, 320, 325, 326, 328, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 355, 364, 365, 370, 376, 386, 397, 422, 423, 427, 428, 439, 440, 441, 442, 483, 490, 500, 507, 512, 523, 526, 527, 534, 541, 545, 547, 548, 550, 551, 559, 566, 574, 582, 584, 587, 590, 595, 602, 603, 604, 605, 606, 607, 614, 625, 631, 639, 651, 656, 669, 688, 694, 711, 725, 728, 744, 749, 770, 771, 784, 786, 787, 788, 789, 790, 798, 804, 814, 817, 821, 834, 852, 854, 860, 867, 869, 872, 873, 876, 894, 907, 908, 909, 910, 911, 912, 913, 936, 941, 950], "aim": [45, 163, 184, 203, 251, 252, 371, 424, 425, 426], "exploit": [45, 114, 279], "context": [45, 68, 143, 197, 198, 201, 223, 229, 255, 288, 302, 310, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 483, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 594, 597, 598, 604, 609, 610, 619, 620, 625, 636, 641, 648, 649, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 828, 829, 836, 866, 868, 871, 883, 889, 890, 914, 920, 921, 948], "treat": [45, 47, 177, 198, 223, 234, 235, 255, 259, 284, 285, 293, 300, 331, 332, 335, 341, 562, 564, 627, 771, 772, 774, 775, 788, 860, 878], "independ": [45, 97, 101, 109, 136, 139, 177, 184, 188, 192, 205, 206, 207, 223, 226, 228, 229, 231, 232, 233, 237, 245, 255, 274, 277, 282, 283, 291, 316, 317, 320, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 427, 486, 493, 498, 550, 551, 636, 637, 644, 651, 660, 669, 671, 766, 768, 771, 772, 774, 775, 778, 813, 814, 816, 817, 879, 881, 883, 936, 949], "therefor": [45, 97, 121, 134, 162, 168, 172, 177, 184, 188, 195, 196, 216, 223, 227, 228, 229, 231, 232, 235, 237, 255, 270, 309, 310, 316, 320, 331, 332, 341, 386, 388, 507, 550, 559, 566, 567, 571, 636, 689, 695, 696, 700, 946], "qualiti": [45, 148, 183, 191, 192, 198, 228, 229, 232, 234, 240, 246, 270, 275, 277, 297, 300, 301, 309, 310, 312, 316, 320, 326, 331, 332, 333, 334, 550, 551, 594, 636, 653, 675, 880], "expens": [45, 191, 192, 198, 282, 321, 679], "especi": [45, 81, 97, 139, 147, 169, 175, 188, 192, 195, 226, 227, 229, 231, 232, 236, 243, 270, 273, 282, 286, 288, 309, 316, 319, 320, 333, 334, 342, 550, 551, 636, 661, 679, 771, 772, 774, 775, 876, 936, 945], "lag": [45, 53, 104, 111, 222, 252, 277, 298, 331, 333, 334, 336, 489, 495, 509, 550, 633, 698, 956], "footcit": [45, 309, 455], "crosseetal2016": 45, "earlier": [45, 171, 193, 197, 218, 226, 229, 243, 274, 300, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 525, 526, 527, 545, 547, 548, 614, 876], "wherea": [45, 107, 162, 169, 182, 184, 194, 201, 223, 229, 230, 231, 237, 255, 285, 319, 320, 325, 331, 332, 350, 364, 365, 550, 551, 559, 866, 889, 895, 939], "affect": [45, 75, 98, 107, 167, 168, 175, 177, 193, 217, 226, 227, 229, 230, 232, 233, 235, 237, 270, 277, 286, 292, 300, 301, 305, 308, 309, 316, 320, 324, 326, 331, 332, 333, 334, 338, 341, 342, 346, 434, 475, 524, 525, 550, 551, 572, 653, 701, 736, 737, 813, 814, 816, 817, 889, 894], "obvious": [45, 184, 237, 270], "cf": [45, 171, 181, 802, 812], "next": [45, 80, 81, 84, 141, 143, 148, 161, 162, 167, 171, 176, 177, 182, 183, 187, 192, 197, 201, 203, 205, 215, 217, 226, 228, 232, 234, 238, 243, 244, 245, 255, 269, 270, 284, 286, 289, 291, 294, 304, 308, 309, 320, 328, 331, 332, 333, 334, 340, 423, 482, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 788, 789, 790, 815, 818, 853, 854, 875, 879, 888, 891, 896, 941, 950], "section": [45, 101, 143, 162, 163, 166, 168, 170, 175, 176, 177, 182, 191, 192, 193, 197, 198, 201, 215, 216, 217, 219, 226, 228, 229, 230, 232, 235, 237, 243, 244, 270, 279, 282, 285, 288, 291, 294, 301, 303, 305, 307, 308, 309, 310, 316, 320, 321, 326, 328, 329, 330, 331, 332, 333, 334, 340, 341, 343, 364, 365, 380, 462, 483, 490, 504, 510, 518, 520, 550, 551, 568, 581, 635, 636, 651, 660, 672, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898, 907, 908, 946], "haufeetal2014": 45, "sr": [45, 149, 240, 317, 320, 570], "1e4": 45, "mean_pattern": 45, "max_pattern": 45, "8384": [45, 292], "1160": 45, "1659": [45, 148], "2188": [45, 204], "2619": 45, "340": [45, 51, 52, 61, 77, 107, 108, 139, 151, 195, 218, 255, 260, 277, 298, 367, 956], "3005": 45, "407": [45, 107], "3166": 45, "463": [45, 260, 344], "3205": 45, "3270": 45, "583": [45, 73, 82, 223, 236, 277, 491, 956], "3313": 45, "3388": 45, "705": [45, 61, 260], "3400": 45, "759": [45, 156, 160, 956], "3396": 45, "830": [45, 107, 148], "3487": 45, "908": [45, 260], "3605": 45, "980": [45, 107, 232, 236], "3676": 45, "1053": [45, 218], "3745": 45, "1124": 45, "3799": 45, "1195": 45, "3843": 45, "1279": [45, 222, 223], "3946": 45, "1365": 45, "4046": 45, "1450": 45, "4134": 45, "1535": [45, 47, 277, 491], "4216": 45, "1619": 45, "4285": 45, "1704": 45, "4350": [45, 211], "1789": 45, "4412": 45, "1866": [45, 222], "4436": 45, "1937": [45, 66, 277, 547], "4435": 45, "4440": 45, "2085": 45, "4454": 45, "2163": 45, "4477": 45, "2240": 45, "4496": 45, "2314": 45, "4503": 45, "2390": 45, "4515": 45, "2467": 45, "4531": 45, "2549": 45, "4563": 45, "2610": 45, "4517": 45, "2673": 45, "4482": 45, "2747": 45, "4488": 45, "2819": 45, "4487": 45, "2889": 45, "4481": 45, "2963": 45, "3039": 45, "4500": [45, 58], "3120": 45, "4529": 45, "3199": 45, "4549": 45, "3277": 45, "4564": 45, "3350": 45, "3423": 45, "3505": 45, "4592": 45, "3589": 45, "4626": 45, "3671": [45, 403], "4650": 45, "3752": 45, "4669": 45, "3828": 45, "4673": 45, "3906": 45, "4683": 45, "3977": 45, "4667": 45, "4052": 45, "4665": 45, "4133": 45, "4686": 45, "4214": 45, "4703": 45, "4299": 45, "4735": 45, "4382": 45, "4755": 45, "4445": 45, "4709": 45, "4513": 45, "4685": 45, "4586": 45, "4676": 45, "4659": 45, "4668": 45, "4732": 45, "4803": 45, "4646": 45, "4866": 45, "4609": 45, "4934": 45, "4590": [45, 67, 123], "5008": 45, "4591": 45, "5084": 45, "4597": 45, "5161": 45, "4606": 45, "5236": 45, "4608": 45, "5312": 45, "4613": 45, "5388": 45, "4618": 45, "5463": 45, "4622": 45, "5540": 45, "4629": 45, "5617": 45, "4636": 45, "5694": [45, 61], "4644": 45, "5772": 45, "4653": 45, "5850": 45, "4660": 45, "5923": 45, "4654": 45, "5998": 45, "6072": 45, "6144": 45, "4641": 45, "6215": 45, "4627": 45, "6287": 45, "6360": [45, 167], "6436": 45, "6512": 45, "4623": 45, "6587": 45, "4624": 45, "6665": 45, "6751": 45, "4670": 45, "6837": 45, "4705": 45, "6923": 45, "4737": 45, "45it": [45, 130, 135, 136, 139, 222, 223, 236, 255, 256, 259, 260], "7009": 45, "4767": 45, "7095": 45, "4794": 45, "7179": 45, "4816": [45, 52], "7244": 45, "4776": 45, "7301": 45, "4712": 45, "7357": 45, "4651": 45, "7425": 45, "4630": 45, "7500": 45, "4633": [45, 123], "7561": 45, "7623": 45, "4554": 45, "7679": 45, "4499": 45, "7736": 45, "4448": [45, 277, 815, 818], "7792": 45, "4400": 45, "7848": 45, "4353": 45, "7907": 45, "4319": 45, "7979": 45, "4328": 45, "8044": 45, "4312": 45, "8099": 45, "4265": 45, "8154": 45, "4223": 45, "8209": 45, "4180": 45, "8265": 45, "4145": 45, "8321": [45, 292], "4110": 45, "8378": 45, "4080": 45, "4385": [45, 236], "1977": 45, "166": [45, 176, 195, 223, 229, 236, 255, 259, 260, 265, 277], "2844": 45, "225": [45, 74, 82, 170, 195, 212, 223, 259, 273, 277, 317, 956], "3026": 45, "3426": 45, "381": [45, 61, 82, 107, 136, 223, 255, 956], "3627": 45, "3771": 45, "527": [45, 161, 223, 236, 260], "3865": 45, "600": [45, 61, 66, 84, 85, 98, 101, 107, 109, 117, 120, 154, 160, 181, 182, 186, 193, 194, 204, 205, 206, 210, 218, 226, 227, 230, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 251, 252, 254, 273, 277, 281, 548, 834, 956], "3951": 45, "672": [45, 260], "4013": 45, "744": [45, 61, 222, 254, 260], "4064": 45, "819": [45, 236], "4126": 45, "4115": 45, "947": [45, 61, 223, 277, 545], "4095": 45, "4105": [45, 232, 277], "1071": 45, "4050": 45, "1129": [45, 236, 277, 636, 669], "4010": 45, "3969": 45, "1242": [45, 195], "3931": 45, "1298": 45, "3896": 45, "1357": 45, "3880": 45, "1414": 45, "3853": 45, "1472": 45, "3837": 45, "1531": [45, 60, 192, 195, 252, 323], "3825": 45, "1588": 45, "3807": 45, "1646": [45, 236], "3790": 45, "1705": [45, 203, 206], "3782": 45, "1766": 45, "3780": 45, "1841": [45, 60, 195, 252], "1918": 45, "3897": [45, 277], "1992": 45, "3941": 45, "2052": [45, 136], "3928": 45, "2109": 45, "3903": 45, "2167": 45, "3883": 45, "2224": 45, "3863": 45, "2281": 45, "2337": 45, "3823": 45, "2393": 45, "3802": 45, "2449": 45, "3783": 45, "2505": 45, "3765": 45, "2561": 45, "3749": 45, "3739": 45, "2675": 45, "3724": 45, "2735": 45, "3725": 45, "28it": [45, 130, 135, 139, 223, 236, 255, 259, 260], "2798": 45, "3734": 45, "2869": 45, "3770": 45, "2935": 45, "3786": 45, "2991": 45, "3047": 45, "3754": 45, "3117": 45, "3785": 45, "3189": 45, "3822": 45, "3263": 45, "3323": 45, "3856": 45, "3377": 45, "3445": 45, "3849": 45, "3517": 45, "3881": 45, "3588": 45, "3909": 45, "3660": [45, 136], "3937": 45, "3729": 45, "3956": 45, "3798": 45, "3973": 45, "3873": [45, 403], "4009": 45, "3947": 45, "4038": 45, "4028": 45, "4089": 45, "4088": 45, "4070": 45, "4144": 45, "4196": 45, "3996": 45, "4249": 45, "3958": 45, "4322": 45, "3986": 45, "4397": 45, "4021": 45, "4478": 45, "4073": 45, "4541": 45, "4599": 45, "4039": 45, "4655": 45, "4011": 45, "4771": 45, "3968": 45, "4830": 45, "3953": 45, "4888": 45, "3936": 45, "4945": 45, "3914": 45, "5003": [45, 320], "3898": 45, "5059": 45, "3878": 45, "5129": 45, "3901": 45, "5199": 45, "3925": 45, "5256": 45, "3904": 45, "3882": 45, "5370": 45, "3869": 45, "5444": 45, "3905": 45, "5502": 45, "3888": 45, "5561": 45, "3876": 45, "5619": 45, "3862": 45, "5678": 45, "3851": 45, "5737": 45, "3840": [45, 209], "5794": 45, "5854": 45, "3821": 45, "5917": 45, "5979": 45, "6045": 45, "3838": 45, "6127": 45, "6209": 45, "3963": 45, "6294": 45, "6378": 45, "4087": 45, "6462": 45, "6547": 45, "4203": 45, "6631": 45, "4255": 45, "6706": 45, "4275": 45, "6779": 45, "4287": [45, 61], "6853": 45, "4303": 45, "6928": 45, "4320": 45, "6999": 45, "4325": 45, "7070": [45, 292], "4329": 45, "7140": 45, "4331": 45, "7210": 45, "7285": 45, "4348": 45, "7358": 45, "4356": [45, 123], "7430": 45, "4362": 45, "7503": 45, "4371": 45, "7576": 45, "4379": 45, "7649": 45, "4387": 45, "7720": 45, "4388": 45, "4393": 45, "7862": 45, "4390": 45, "7936": [45, 209], "4399": 45, "8009": 45, "4405": 45, "8085": 45, "4421": 45, "8166": 45, "4453": 45, "8248": 45, "4484": 45, "8333": 45, "4525": 45, "4082": 45, "1756": 45, "2691": 45, "3262": 45, "511": [45, 223], "4111": 45, "598": [45, 223, 236, 260], "4286": 45, "684": [45, 223, 256, 260], "4417": 45, "770": [45, 107], "4625": 45, "945": [45, 260, 333, 334, 784, 874], "4702": 45, "1032": [45, 195], "4768": 45, "1119": [45, 236], "4825": 45, "1206": 45, "4879": 45, "1290": 45, "4910": 45, "1375": 45, "4940": 45, "1463": 45, "4981": 45, "1549": 45, "5011": 45, "1636": 45, "5039": 45, "1722": [45, 195], "5062": 45, "1810": 45, "5089": 45, "1895": 45, "5101": 45, "5115": 45, "2067": [45, 61], "5132": 45, "2154": [45, 52], "5151": 45, "2241": [45, 58, 60, 185, 195, 252], "5169": 45, "2324": 45, "5168": 45, "2410": [45, 222], "5178": 45, "2496": 45, "5188": 45, "2581": 45, "5193": 45, "2663": 45, "5187": 45, "2748": 45, "5191": 45, "2834": 45, "5200": 45, "2915": 45, "2999": 45, "3082": 45, "3161": 45, "5176": 45, "3219": 45, "3275": 45, "4994": 45, "3332": 45, "4909": 45, "3443": 45, "4749": 45, "3499": 45, "4678": 45, "3555": 45, "4611": 45, "3612": 45, "4553": 45, "3669": 45, "3726": 45, "4444": 45, "4394": 45, "3846": 45, "4369": 45, "3902": 45, "3957": 45, "4273": 45, "4230": 45, "4069": 45, "4189": 45, "4155": 45, "4183": 45, "4122": 45, "4240": 45, "4093": 45, "4297": 45, "4062": 45, "4032": 45, "4420": 45, "4501": 45, "4091": 45, "4572": 45, "4108": 45, "4645": 45, "4130": 45, "4718": 45, "4151": 45, "4791": 45, "4171": 45, "4862": 45, "4185": 45, "4218": 45, "5020": 45, "4295": 45, "5181": 45, "4330": 45, "5260": 45, "4359": 45, "5335": 45, "4374": 45, "5397": 45, "4345": 45, "5473": 45, "4363": 45, "5552": 45, "4389": 45, "5633": 45, "5712": 45, "4446": 45, "5792": 45, "4473": 45, "5872": 45, "4497": 45, "5953": 45, "4524": 45, "6035": 45, "6117": 45, "4580": 45, "6202": 45, "4616": 45, "6288": 45, "4652": 45, "6372": 45, "4680": 45, "6454": 45, "4701": 45, "6538": 45, "4727": [45, 218], "6622": 45, "4752": 45, "6702": 45, "4764": 45, "6785": 45, "4783": 45, "6862": 45, "4784": 45, "6940": 45, "4786": 45, "7017": 45, "4785": 45, "7101": 45, "4806": 45, "7185": 45, "4826": 45, "7269": 45, "4845": 45, "7350": 45, "4854": 45, "7428": 45, "4852": 45, "7508": 45, "4858": 45, "7586": 45, "4856": 45, "7662": 45, "4848": 45, "7730": 45, "7790": 45, "4760": 45, "7851": 45, "7912": 45, "7973": 45, "8034": 45, "4583": 45, "8096": 45, "4546": 45, "8158": 45, "4509": 45, "8214": 45, "4456": 45, "8269": 45, "4401": 45, "8325": 45, "8382": 45, "4311": 45, "4557": 45, "sens": [45, 87, 97, 168, 186, 229, 234, 239, 240, 270, 309, 310, 319, 320, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 614, 858, 876], "actual": [45, 49, 53, 67, 69, 87, 90, 107, 142, 155, 170, 177, 184, 186, 188, 194, 196, 198, 201, 208, 209, 210, 211, 216, 217, 222, 227, 228, 229, 230, 240, 245, 255, 257, 260, 263, 264, 265, 270, 284, 285, 291, 292, 303, 309, 317, 319, 320, 324, 341, 517, 616, 636, 656], "valid_samples_": [45, 489], "grei": [45, 140, 168, 270, 285, 333, 334, 784, 872], "attempt": [45, 102, 222, 226, 257, 284, 292, 310, 319, 331, 332, 333, 334, 339, 345, 347, 445, 550, 551, 558, 568, 636, 714, 728, 783, 899, 934], "reflect": [45, 87, 97, 147, 161, 167, 175, 177, 186, 187, 203, 207, 226, 231, 232, 234, 243, 282, 287, 290, 291, 304, 306, 308, 309, 316, 319, 320, 331, 332, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 521, 522, 523, 526, 527, 545, 547, 548, 550, 551, 614, 701, 764, 875, 876, 889], "toward": [45, 69, 72, 80, 81, 97, 130, 186, 206, 219, 228, 259, 270, 277, 285, 320, 525, 527, 618, 639], "obtain": [45, 64, 68, 69, 87, 117, 121, 122, 163, 172, 177, 181, 183, 184, 196, 198, 201, 203, 204, 210, 211, 212, 229, 231, 237, 243, 244, 252, 255, 257, 260, 269, 282, 287, 291, 297, 299, 300, 302, 304, 310, 316, 317, 319, 320, 329, 331, 332, 333, 334, 335, 338, 342, 346, 347, 365, 377, 411, 413, 423, 425, 429, 443, 489, 491, 533, 534, 544, 547, 548, 550, 551, 559, 566, 571, 588, 603, 611, 622, 636, 640, 647, 669, 688, 696, 700, 706, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 754, 758, 771, 772, 773, 774, 775, 785, 814, 817, 834, 836, 855, 871, 894, 895, 900, 937], "via": [45, 161, 162, 166, 168, 170, 171, 175, 176, 183, 194, 195, 196, 197, 198, 201, 206, 219, 226, 227, 228, 232, 233, 243, 246, 255, 256, 259, 263, 265, 268, 269, 277, 283, 285, 286, 287, 290, 291, 292, 293, 294, 297, 299, 300, 302, 303, 304, 308, 309, 319, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 341, 343, 344, 346, 347, 350, 364, 365, 377, 386, 390, 396, 397, 445, 494, 517, 519, 521, 522, 535, 542, 550, 551, 564, 636, 765, 771, 772, 774, 775, 786, 788, 789, 790, 836, 837, 852, 856, 857, 866, 870, 871, 875, 883, 889, 927, 936, 941, 942, 944, 945, 950], "procedur": [45, 140, 170, 187, 188, 215, 231, 232, 237, 255, 257, 258, 259, 265, 270, 277, 290, 302, 317, 319, 320, 324, 326, 331, 332, 333, 334, 416, 423, 428, 491, 550, 551, 636, 637, 651, 653, 669, 679, 701, 771, 936], "straightforward": [45, 130, 216, 229, 252, 302, 320], "sign": [45, 54, 64, 65, 73, 177, 232, 255, 258, 263, 284, 286, 291, 294, 295, 302, 309, 320, 333, 334, 338, 339, 342, 345, 346, 347, 403, 517, 525, 545, 547, 548, 589, 603, 604, 605, 606, 607, 669, 771, 772, 774, 775], "strength": [45, 48, 61, 121, 177, 201, 232, 274, 320, 339, 345, 347, 651], "direct": [45, 87, 106, 151, 176, 182, 186, 187, 194, 204, 206, 211, 227, 233, 234, 236, 270, 277, 282, 284, 291, 306, 309, 310, 319, 320, 323, 329, 331, 332, 338, 339, 341, 342, 345, 346, 347, 357, 364, 365, 505, 517, 525, 550, 551, 562, 603, 646, 666, 736, 786, 789, 834, 866, 878, 889, 899, 915, 936, 948], "nbetween": 45, "giovanni": [45, 222, 277, 317, 489], "di": [45, 66, 169, 212, 222, 277, 317, 489], "liberto": [45, 222, 277, 317, 489], "adam": [45, 161, 162, 222, 277, 290, 291, 292, 293, 294, 302, 303, 308, 317, 489, 954], "bednar": [45, 222, 277, 317, 489], "edmund": [45, 222, 277, 317, 489], "fnhum": [45, 177, 222, 277, 317, 489, 641], "00604": [45, 222, 277, 317, 489], "226": [45, 46, 61, 170, 195, 210, 259, 260, 297, 956], "receptive_field_mtrf": [45, 46, 956], "954": [46, 82, 85, 232, 260, 956], "ssd_spatial_filt": [46, 47, 956], "055": [46, 47, 166, 168, 175, 195, 235, 252, 277, 459, 956], "retain": [47, 139, 175, 204, 227, 228, 243, 255, 292, 303, 312, 326, 331, 332, 341, 344, 507, 636, 771, 772, 774, 775, 879, 941], "oscillatori": [47, 140, 252, 269, 277, 364, 365, 802, 812, 813, 816], "propos": [47, 270, 309, 312, 651, 660], "surround": [47, 108, 128, 240, 270, 309, 491, 641, 666, 680, 779], "victoria": [47, 292, 293], "peterson": [47, 292, 293, 294, 308], "victoriapeterson09": 47, "freqs_sig": 47, "freqs_nois": 47, "sort_by_spectral_ratio": [47, 491], "filt_params_sign": [47, 491], "l_trans_bandwidth": [47, 140, 141, 229, 238, 282, 301, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 675], "filt_params_nois": [47, 491], "72000": [47, 108, 218], "196608": 47, "262144": 47, "327680": 47, "393216": 47, "458752": 47, "67108864": 47, "67174400": 47, "134742016": 47, "136314880": 47, "268435456": 47, "legaci": [47, 120, 148, 166, 168, 178, 188, 198, 203, 209, 246, 304, 306, 307, 308, 331, 332, 333, 334, 550, 551, 784, 786, 787, 788, 789, 790, 868, 890], "inst": [47, 120, 148, 178, 188, 198, 203, 209, 232, 282, 283, 285, 286, 288, 302, 303, 304, 306, 308, 323, 325, 330, 331, 332, 333, 334, 336, 340, 341, 348, 380, 382, 409, 427, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 542, 550, 551, 635, 636, 637, 644, 645, 650, 655, 659, 663, 670, 686, 725, 728, 738, 769, 784, 786, 787, 788, 789, 790, 816, 817, 818, 879, 880, 881, 883, 890], "825": [47, 109, 141, 277, 636], "086": [47, 277, 741, 746], "preserv": [47, 60, 181, 182, 186, 192, 193, 222, 227, 232, 243, 255, 259, 286, 290, 291, 302, 303, 320, 326, 331, 332, 333, 334, 482, 513, 514, 515, 516, 550, 551, 570, 653, 667, 784, 786, 787, 788, 789, 790], "ratio": [47, 84, 114, 170, 192, 223, 229, 232, 234, 252, 257, 258, 259, 260, 273, 277, 284, 316, 320, 338, 339, 342, 345, 346, 347, 354, 491, 618, 619, 620, 636, 637, 724, 742, 743, 784, 788, 838, 896], "accord": [47, 182, 195, 196, 219, 222, 243, 282, 285, 291, 303, 317, 320, 324, 331, 332, 333, 334, 489, 491, 512, 550, 551, 559, 562, 566, 568, 631, 672, 689, 728, 734], "either": [47, 58, 69, 168, 175, 176, 177, 192, 193, 194, 196, 197, 198, 217, 226, 230, 235, 237, 244, 245, 251, 255, 270, 298, 309, 316, 317, 326, 328, 331, 332, 333, 334, 335, 338, 339, 340, 342, 344, 345, 346, 347, 355, 370, 389, 406, 423, 424, 425, 426, 483, 490, 491, 500, 507, 510, 518, 541, 543, 550, 551, 563, 584, 585, 588, 594, 598, 601, 602, 635, 636, 638, 647, 651, 656, 660, 671, 701, 711, 728, 730, 735, 736, 737, 749, 769, 770, 784, 785, 786, 787, 789, 790, 798, 808, 813, 814, 816, 817, 821, 834, 845, 852, 853, 857, 860, 867, 868, 875, 879, 880, 888, 889, 890, 891, 894, 896, 898, 899, 904, 907, 936, 948], "multipli": [47, 215, 229, 255, 320, 336, 338, 339, 342, 345, 346, 347, 366, 491, 517, 603, 609, 784], "eq": [47, 320, 491, 802, 812], "c_n": [47, 320], "reli": [47, 195, 228, 270, 286, 294, 309, 316, 320, 380, 936], "suggest": [47, 52, 167, 170, 188, 228, 229, 230, 231, 232, 234, 306, 310, 331, 332, 356, 358, 834, 936, 942, 946], "pariet": [47, 75, 317, 718, 834], "ssd_sourc": [47, 491], "psd": [47, 53, 95, 101, 119, 132, 133, 138, 159, 163, 166, 192, 198, 223, 226, 230, 239, 246, 250, 268, 269, 281, 283, 284, 286, 287, 288, 291, 296, 297, 301, 302, 304, 305, 307, 317, 328, 331, 332, 333, 334, 336, 337, 341, 342, 428, 488, 524, 550, 551, 593, 598, 602, 609, 610, 614, 617, 633, 690, 705, 732, 786, 787, 789, 790, 793, 796, 804, 805, 828, 834, 852, 868, 890, 904, 956], "n_fft": [47, 135, 136, 141, 159, 212, 239, 250, 268, 270, 282, 283, 331, 332, 333, 334, 491, 550, 551, 609, 785, 786, 789, 791, 793, 794, 796, 805, 815, 818, 890], "4096": [47, 208, 335], "spec_ratio": [47, 491], "sorter": 47, "get_spectral_ratio": [47, 491], "spectral": [47, 53, 58, 59, 60, 95, 98, 132, 133, 139, 140, 141, 144, 159, 163, 168, 192, 198, 212, 223, 228, 236, 252, 269, 277, 282, 285, 286, 292, 297, 299, 303, 304, 305, 312, 317, 328, 331, 332, 333, 334, 336, 337, 342, 356, 357, 358, 364, 428, 488, 491, 524, 527, 550, 551, 593, 598, 602, 609, 610, 614, 617, 633, 636, 690, 698, 705, 732, 772, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 803, 804, 805, 813, 814, 816, 817, 828, 834, 852, 862, 868, 890, 904, 956], "orang": [47, 177, 182, 217, 238, 260, 265, 893], "frac": [47, 175, 229, 230, 237, 255, 320, 342, 611, 744, 799, 802, 812, 813, 814, 816, 817], "p_f": 47, "p_": [47, 320], "sf": [47, 255], "lowest": [47, 149, 270, 326, 331, 332, 333, 334, 337, 410, 653, 761, 784, 785, 788, 860, 870], "below50": 47, "bandfilt": 47, "loglog": 47, "fill_between": [47, 140, 177, 265, 269, 270], "10000": [47, 110, 138, 212, 512, 545, 669, 749, 773], "green": [47, 74, 75, 76, 107, 143, 177, 182, 207, 217, 234, 270, 287, 333, 334, 834, 857, 870, 887, 893], "enjoi": [47, 270], "situat": [47, 231, 235, 250, 252, 293, 309, 310, 341, 387, 510, 636, 946], "chunk": [47, 106, 110, 163, 166, 172, 210, 237, 284, 303, 316, 426, 428, 512, 550, 551, 636, 660, 734], "overlap": [47, 97, 110, 126, 136, 166, 169, 172, 177, 178, 192, 194, 218, 228, 244, 245, 250, 268, 277, 279, 282, 284, 287, 291, 292, 293, 294, 298, 302, 307, 319, 325, 331, 332, 333, 334, 394, 428, 485, 494, 507, 519, 521, 522, 541, 550, 551, 595, 596, 609, 622, 637, 653, 654, 671, 751, 770, 805, 834, 890], "ssd_epoch": 47, "pattern_epoch": 47, "1251": 47, "449": [47, 172, 240, 255, 344], "647": [47, 172, 236], "1151": [47, 172], "1457": [47, 172], "guido": [47, 277, 491], "nolt": [47, 277, 491], "gabriel": [47, 66, 231, 277, 491, 547, 635, 686], "curio": [47, 277, 491], "reliabl": [47, 130, 195, 230, 277, 491, 636], "basi": [47, 172, 188, 223, 277, 291, 293, 308, 320, 491, 504, 647, 650, 660, 671, 936], "spatio": [47, 72, 85, 191, 210, 222, 223, 255, 256, 266, 267, 277, 291, 292, 298, 320, 331, 333, 334, 336, 342, 343, 344, 429, 489, 491, 506, 546, 547, 550, 602, 603, 617, 633, 671, 698, 711, 713, 739, 740, 741, 742, 743, 744, 745, 746, 756, 758, 759, 760, 765, 767, 774, 775, 776, 834, 956], "1528": [47, 277, 491], "057": [47, 166, 168, 175, 195, 252, 277, 491], "produc": [48, 64, 108, 109, 144, 146, 155, 170, 187, 191, 198, 205, 209, 217, 219, 229, 231, 237, 255, 270, 275, 277, 282, 284, 285, 288, 290, 303, 306, 308, 310, 316, 320, 323, 326, 329, 331, 332, 337, 341, 344, 371, 372, 395, 398, 420, 424, 425, 426, 428, 435, 458, 541, 550, 551, 588, 594, 595, 598, 609, 622, 636, 639, 645, 648, 649, 660, 667, 669, 688, 694, 698, 718, 733, 735, 736, 737, 738, 747, 748, 749, 750, 752, 771, 772, 773, 774, 775, 779, 823, 834, 852, 853, 889, 930], "abl": [48, 117, 161, 163, 170, 185, 187, 191, 198, 231, 232, 237, 252, 263, 281, 305, 309, 312, 317, 320, 341, 522, 550, 551, 636, 879, 936, 941], "region": [48, 64, 67, 73, 75, 121, 122, 134, 155, 161, 163, 176, 181, 207, 217, 229, 230, 255, 256, 269, 270, 282, 291, 294, 316, 319, 329, 331, 332, 333, 334, 336, 344, 392, 485, 494, 519, 521, 522, 535, 536, 537, 541, 550, 551, 588, 688, 733, 744, 834, 866, 889, 892], "source_estim": [48, 53, 62, 82, 337, 342, 705, 711, 833, 956], "surf_ori": [48, 73, 74, 75, 80, 81, 95, 184, 204, 251, 284, 335, 433, 614], "leadfield": [48, 67, 184, 189, 191, 198, 290, 364, 365, 366], "7498": [48, 57, 61, 66, 68, 69, 73, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 95, 117, 119, 120, 121, 122, 157, 198, 201, 203, 204, 205, 207, 223, 251, 252], "combin": [48, 50, 55, 56, 57, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 113, 117, 119, 120, 121, 122, 128, 139, 154, 155, 157, 158, 163, 166, 167, 168, 171, 176, 177, 181, 192, 194, 196, 201, 203, 204, 205, 206, 207, 208, 215, 217, 218, 222, 223, 226, 234, 235, 237, 238, 240, 243, 245, 252, 255, 257, 260, 263, 265, 277, 283, 286, 287, 288, 290, 291, 293, 294, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 320, 323, 326, 331, 332, 333, 334, 337, 338, 339, 342, 344, 345, 346, 347, 357, 364, 365, 373, 374, 382, 423, 424, 425, 426, 431, 441, 458, 483, 488, 490, 502, 505, 542, 550, 551, 567, 570, 596, 597, 603, 606, 609, 610, 612, 613, 636, 648, 649, 684, 695, 705, 711, 718, 755, 784, 786, 787, 788, 789, 790, 793, 796, 804, 834, 852, 860, 867, 868, 875, 878, 896], "grad_map": 48, "mag_map": [48, 52], "eeg_map": 48, "204": [48, 60, 126, 157, 184, 192, 195, 198, 209, 210, 236, 237, 243, 252, 255, 260, 269, 298], "gain": [48, 50, 57, 67, 92, 117, 120, 121, 122, 136, 184, 206, 229, 252, 284, 286, 287, 291, 293, 294, 300, 302, 303, 304, 305, 306, 320, 364, 365, 518, 527, 877, 884], "picks_meg": 48, "picks_eeg": 48, "sharex": [48, 71, 100, 117, 140, 222, 234, 270], "fontsiz": [48, 63, 139, 147, 170, 202, 237, 273, 895], "fig_2": [48, 198], "hist": [48, 97, 157, 170, 238], "ravel": [48, 138, 140, 144, 157, 222, 229, 256], "gradiomet": [48, 58, 60, 61, 72, 85, 98, 100, 103, 106, 108, 113, 120, 127, 130, 135, 136, 137, 138, 140, 144, 146, 147, 168, 171, 172, 176, 188, 192, 193, 194, 195, 206, 209, 210, 215, 218, 226, 227, 228, 230, 232, 233, 234, 236, 237, 243, 244, 245, 246, 250, 252, 255, 257, 258, 259, 269, 281, 284, 286, 290, 293, 294, 298, 301, 316, 319, 320, 323, 326, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 364, 365, 423, 424, 425, 426, 427, 428, 439, 440, 441, 483, 490, 504, 526, 527, 545, 547, 548, 550, 551, 591, 614, 633, 634, 635, 636, 646, 647, 648, 649, 651, 652, 653, 654, 660, 671, 682, 770, 784, 786, 787, 788, 789, 790, 853, 859, 860, 866, 867, 868, 870, 872, 874, 875, 876, 879, 888, 889, 891, 896, 897, 898, 936], "brain_sen": 48, "add_text": [48, 69, 73, 74, 75, 76, 80, 81, 201, 203, 205, 834], "font_siz": [48, 69, 73, 74, 75, 76, 80, 81, 201, 203, 205, 834], "02108201": 48, "32186553": 48, "euclidean": [48, 337, 342, 344, 618, 744, 747, 750, 752, 755], "maxdep": 48, "vertno": [48, 69, 74, 75, 76, 184, 201, 204, 251, 263, 264, 265, 342, 344, 345], "depths_map": 48, "brain_dep": 48, "like": [48, 52, 53, 57, 60, 61, 62, 66, 67, 68, 73, 82, 85, 87, 97, 108, 109, 128, 136, 139, 161, 162, 166, 167, 168, 169, 170, 175, 176, 177, 181, 182, 186, 187, 188, 192, 193, 194, 195, 197, 198, 201, 203, 207, 208, 212, 215, 216, 217, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 246, 250, 255, 259, 270, 273, 274, 282, 283, 285, 286, 287, 288, 291, 293, 294, 298, 302, 303, 305, 307, 308, 309, 310, 312, 316, 318, 319, 320, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 355, 368, 370, 371, 372, 375, 376, 377, 380, 381, 389, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 416, 420, 421, 422, 423, 429, 434, 435, 436, 438, 442, 450, 455, 456, 458, 460, 483, 490, 504, 506, 507, 512, 518, 524, 526, 533, 535, 536, 539, 541, 542, 543, 544, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 590, 592, 594, 597, 598, 602, 603, 605, 614, 617, 621, 622, 623, 625, 626, 635, 636, 641, 651, 654, 656, 657, 658, 662, 666, 667, 668, 669, 671, 679, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 721, 722, 729, 732, 733, 735, 736, 737, 738, 747, 748, 749, 750, 753, 761, 765, 767, 770, 771, 772, 773, 774, 775, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 802, 806, 807, 808, 812, 819, 821, 822, 826, 828, 831, 834, 843, 852, 853, 854, 860, 864, 866, 868, 870, 872, 874, 875, 876, 879, 883, 886, 888, 889, 890, 891, 892, 894, 896, 898, 899, 900, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 941, 942, 943, 945, 946, 948, 949, 950, 956], "corr": [48, 323], "gradiomt": 48, "815476": 48, "sensitivii": 48, "highest": [48, 202, 232, 320, 326, 329, 331, 332, 333, 334, 337, 527, 550, 551, 559, 566, 653, 761, 784, 785, 788, 864, 876], "close": [48, 87, 97, 124, 138, 144, 147, 166, 168, 170, 175, 177, 184, 186, 198, 218, 227, 228, 231, 232, 234, 235, 238, 246, 252, 255, 260, 273, 284, 293, 302, 307, 309, 320, 329, 331, 332, 333, 334, 336, 337, 411, 427, 450, 506, 526, 542, 550, 551, 636, 654, 662, 755, 779, 786, 787, 789, 790, 802, 812, 834, 841, 842, 864, 866, 883, 889, 892, 909, 936, 952, 955], "decreas": [48, 81, 139, 229, 252, 282, 284, 298, 320, 330, 331, 332, 333, 334, 483, 504, 636, 780, 784, 788, 813, 814, 816, 817, 834], "rapidli": [48, 239], "inreas": 48, "confirm": [48, 73, 97, 197, 217, 228, 232, 240, 309, 320], "202": [48, 51, 136, 195, 200, 236, 255, 256, 259, 260, 299, 956], "forward_sensitivity_map": [48, 51, 956], "displai": [49, 50, 51, 53, 70, 73, 103, 139, 143, 153, 166, 169, 177, 182, 184, 186, 188, 192, 219, 232, 235, 240, 243, 246, 256, 260, 279, 280, 281, 283, 285, 287, 288, 292, 293, 294, 297, 299, 300, 302, 303, 304, 305, 307, 308, 312, 319, 320, 323, 324, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 380, 433, 550, 551, 594, 633, 635, 636, 656, 658, 703, 724, 752, 784, 786, 787, 789, 790, 834, 835, 836, 851, 852, 860, 865, 866, 867, 869, 870, 871, 872, 874, 875, 876, 877, 880, 881, 886, 889, 890, 891, 892, 894, 895, 897, 899, 900, 936, 941, 942, 945, 948, 952, 956], "cerebellum": [49, 51, 53, 67, 344, 732, 733, 852, 904, 956], "volum": [49, 51, 53, 57, 62, 70, 82, 85, 98, 161, 162, 181, 182, 184, 186, 192, 198, 202, 206, 237, 277, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 299, 301, 304, 306, 312, 314, 316, 319, 320, 323, 328, 329, 333, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 371, 377, 380, 429, 517, 528, 536, 537, 545, 547, 548, 590, 598, 602, 603, 613, 614, 615, 617, 666, 668, 692, 701, 711, 714, 723, 732, 733, 756, 759, 776, 779, 822, 823, 824, 834, 852, 894, 899, 900, 904, 934, 956], "morph": [49, 51, 53, 62, 66, 82, 160, 162, 181, 186, 203, 207, 263, 264, 265, 279, 284, 286, 287, 288, 290, 291, 292, 297, 298, 299, 316, 317, 319, 323, 333, 335, 336, 337, 338, 342, 343, 344, 345, 346, 347, 429, 539, 556, 598, 602, 603, 617, 622, 623, 632, 633, 668, 701, 703, 708, 711, 712, 713, 724, 733, 822, 823, 824, 834, 894, 900, 955, 956], "its": [50, 97, 102, 121, 154, 161, 163, 166, 167, 169, 171, 176, 182, 184, 186, 192, 194, 195, 196, 197, 198, 201, 206, 209, 216, 217, 223, 226, 227, 229, 230, 232, 233, 234, 235, 237, 243, 244, 246, 255, 260, 268, 270, 274, 277, 282, 284, 285, 290, 292, 294, 301, 302, 306, 309, 310, 316, 318, 319, 320, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 380, 483, 486, 490, 497, 498, 517, 524, 547, 548, 549, 550, 551, 559, 566, 635, 636, 651, 724, 740, 750, 770, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 802, 804, 805, 812, 813, 816, 824, 853, 860, 864, 866, 867, 868, 875, 879, 887, 888, 889, 891, 894, 896, 898, 899, 936, 942, 946, 948], "freesurf": [50, 58, 59, 60, 64, 67, 69, 70, 73, 143, 161, 162, 182, 184, 187, 189, 190, 191, 197, 198, 201, 208, 218, 277, 290, 291, 294, 297, 301, 303, 305, 306, 317, 319, 327, 329, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 371, 375, 376, 377, 380, 429, 434, 435, 436, 442, 455, 457, 458, 460, 463, 482, 502, 517, 535, 536, 537, 539, 541, 542, 543, 544, 556, 588, 590, 592, 594, 622, 666, 667, 688, 704, 705, 706, 707, 713, 714, 715, 716, 727, 732, 733, 747, 750, 761, 779, 780, 782, 826, 833, 834, 847, 852, 854, 864, 894, 899, 900, 904, 930, 931, 934, 936, 946, 948, 949, 952, 956], "alan": [50, 277, 279, 299, 300, 301, 330, 331, 332, 333, 334, 784, 788], "leggitt": [50, 279, 299, 300, 301], "ucsf": 50, "aseg_fnam": 50, "aseg": [50, 67, 161, 202, 207, 291, 319, 329, 338, 339, 342, 345, 346, 347, 517, 535, 536, 590, 733, 834], "mgz": [50, 56, 67, 70, 76, 182, 184, 186, 187, 202, 206, 207, 208, 285, 287, 290, 291, 303, 307, 319, 320, 323, 338, 339, 342, 344, 345, 346, 347, 371, 375, 376, 377, 460, 517, 536, 590, 733, 854, 900, 936], "surf": [50, 52, 67, 107, 136, 145, 161, 181, 182, 183, 184, 185, 186, 187, 198, 202, 207, 251, 255, 316, 317, 320, 323, 329, 337, 342, 344, 346, 347, 375, 533, 534, 588, 593, 623, 691, 714, 747, 750, 781, 820, 834, 854, 864, 924], "add_dist": [50, 67, 136, 184, 290, 300, 320, 323, 732, 754, 758], "lh_surf": 50, "cortex": [50, 52, 57, 63, 67, 69, 78, 79, 80, 81, 84, 87, 121, 136, 143, 154, 161, 171, 177, 184, 192, 204, 207, 217, 222, 232, 238, 252, 277, 294, 316, 317, 319, 320, 338, 339, 342, 344, 345, 346, 347, 458, 489, 675, 688, 750, 834, 894, 899], "volume_label": [50, 67, 288, 291, 338, 339, 342, 344, 345, 346, 347, 517, 590, 733], "lh_cereb": 50, "sphere_unit": [50, 184, 290, 733], "octahedron": [50, 67, 136, 182, 184, 186, 323, 338, 342, 346, 732, 894], "subdivis": [50, 67, 136, 184], "octahedr": [50, 67, 136, 184, 482], "vertex": [50, 52, 67, 74, 75, 76, 109, 117, 136, 182, 183, 184, 186, 187, 201, 203, 206, 207, 251, 252, 255, 265, 284, 294, 302, 303, 320, 337, 338, 339, 342, 343, 344, 345, 346, 347, 349, 364, 365, 517, 539, 541, 588, 612, 613, 622, 636, 705, 706, 717, 718, 723, 750, 751, 752, 757, 760, 761, 776, 779, 780, 781, 833, 834, 913], "lh": [50, 52, 54, 55, 63, 64, 65, 67, 69, 73, 74, 75, 80, 81, 87, 95, 117, 119, 121, 122, 131, 134, 135, 136, 143, 154, 160, 161, 181, 182, 183, 184, 185, 186, 187, 198, 201, 202, 204, 205, 208, 209, 218, 251, 252, 264, 265, 273, 320, 323, 327, 337, 338, 339, 342, 345, 346, 347, 539, 588, 688, 706, 711, 721, 834, 894, 899, 913, 931], "triangl": [50, 52, 67, 78, 136, 182, 183, 184, 186, 187, 201, 204, 251, 320, 337, 344, 482, 717, 753, 757, 760, 781], "neighbor": [50, 52, 67, 136, 168, 182, 183, 184, 187, 227, 251, 255, 257, 270, 288, 291, 300, 301, 310, 320, 390, 397, 410, 525, 575, 667, 754, 755, 756, 758, 759, 764, 771, 772, 774, 775, 781], "geometri": [50, 67, 87, 97, 136, 184, 187, 209, 210, 237, 277, 291, 294, 302, 316, 319, 323, 460, 483, 527, 714, 834], "triangul": [50, 67, 78, 136, 184, 201, 256, 257, 284, 320, 323, 344, 386, 714, 717, 929, 934], "4098": [50, 69, 185, 186, 208, 316], "155407": [50, 52, 67, 69, 78, 184, 186], "156866": [50, 52, 67, 69, 78, 184, 186], "132651": 50, "57769": 50, "50733": 50, "401": [50, 107, 236, 255, 260], "voxel": [50, 67, 70, 76, 182, 184, 186, 235, 255, 277, 288, 291, 302, 320, 341, 344, 346, 347, 429, 666, 777, 778, 824, 834, 854, 900], "neighborhood": [50, 67, 76, 182, 184, 235, 344], "005000": [50, 184], "001000": [50, 67, 76, 184], "556177": 50, "16777216": 50, "nonzero": [50, 238, 320], "nifti": [50, 56, 67, 181, 286, 344, 346, 347], "nii_fnam": [50, 67], "mne_sample_lh": 50, "nii": [50, 56, 67, 181, 323], "export_volum": [50, 67, 291, 344], "mri_resolut": [50, 56, 67, 70, 291, 343, 344, 346, 347, 517], "And": [50, 68, 80, 97, 136, 186, 205, 207, 217, 223, 229, 234, 238, 309, 316, 320, 344, 601, 611, 774, 775], "freeview": [50, 149, 208, 279, 306, 320, 936], "run_subprocess": 50, "mri_fnam": 50, "lut": [50, 319, 536, 704, 834], "opac": [50, 57, 61, 66, 72, 85, 119, 182, 197, 302, 323, 333, 334, 341, 542, 786, 787, 789, 790, 834, 836, 845, 871, 895, 901, 907], "jet": 50, "colorscal": 50, "slice": [50, 61, 66, 85, 166, 169, 182, 184, 186, 198, 207, 222, 245, 259, 281, 283, 287, 289, 291, 302, 312, 320, 323, 325, 326, 329, 330, 331, 332, 333, 334, 336, 341, 346, 347, 378, 381, 395, 397, 428, 439, 485, 486, 489, 493, 496, 499, 504, 521, 522, 550, 551, 559, 566, 635, 636, 638, 650, 652, 653, 654, 660, 663, 667, 677, 679, 686, 752, 770, 771, 772, 774, 775, 779, 784, 786, 787, 788, 789, 790, 792, 794, 795, 796, 797, 799, 811, 813, 814, 816, 817, 854, 860, 864, 866, 867, 870, 872, 873, 879, 880, 881, 883, 885, 887, 890, 900], "157": [50, 151, 163, 177, 195, 196, 215, 223, 236, 238, 255, 259, 260, 277, 281, 406, 744], "358": [50, 51, 107, 136, 195, 255, 260, 956], "left_cerebellum_volume_sourc": [50, 51, 956], "source_space_morph": [51, 52, 956], "582": [51, 52, 210, 214, 223, 260, 277, 956], "oppos": [52, 87, 240, 252, 281, 309, 319, 416, 492], "evenli": [52, 235, 237, 320, 333, 334, 428, 671, 873], "caution": [52, 53, 168, 183, 195, 219, 331, 332, 333, 334, 336, 485, 550, 551, 552, 788, 844], "fname_tran": [52, 67, 76, 78, 152, 202, 207, 316], "sample_audvis_raw": [52, 55, 67, 71, 76, 78, 95, 98, 109, 119, 120, 121, 130, 131, 134, 135, 137, 138, 143, 145, 151, 152, 166, 168, 172, 175, 176, 182, 184, 186, 188, 192, 193, 194, 196, 198, 202, 204, 207, 208, 226, 227, 230, 231, 233, 234, 235, 237, 243, 244, 245, 246, 251, 252, 257, 258, 259, 268, 273, 274, 309, 323], "fname_bem": [52, 67, 76, 185, 202, 207, 208], "fname_src_f": 52, "fsaverag": [52, 66, 69, 70, 153, 154, 161, 162, 182, 183, 186, 197, 207, 217, 238, 263, 264, 265, 277, 283, 287, 291, 294, 302, 316, 329, 337, 338, 342, 343, 346, 347, 372, 380, 396, 429, 434, 435, 436, 442, 455, 457, 458, 539, 594, 598, 622, 667, 720, 721, 752, 776, 779, 780, 823, 834, 852, 894, 900], "ico": [52, 66, 69, 162, 184, 185, 187, 218, 263, 264, 265, 299, 316, 323, 338, 342, 346, 349, 482, 592, 732, 756, 759, 894], "src_f": [52, 70, 206], "src_morph": 52, "subject_to": [52, 66, 69, 70, 263, 265, 316, 323, 337, 343, 346, 347, 429, 622, 623, 708, 720, 721, 722, 723, 900], "return": [52, 57, 60, 95, 96, 102, 110, 119, 120, 121, 126, 130, 134, 135, 136, 137, 140, 141, 142, 144, 148, 163, 166, 167, 170, 172, 175, 176, 177, 186, 187, 192, 193, 194, 195, 197, 204, 215, 232, 233, 234, 235, 237, 240, 243, 245, 252, 255, 256, 259, 265, 268, 269, 270, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 300, 301, 302, 303, 304, 306, 307, 308, 310, 312, 318, 320, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 447, 448, 449, 450, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 725, 728, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 832, 833, 834, 835, 837, 838, 839, 840, 843, 844, 845, 846, 847, 848, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 905, 906, 922, 933, 934, 935], "mag_map_f": 52, "to_original_src": [52, 279, 284, 342, 345], "sulcal": [52, 186, 834], "gyral": [52, 186, 834], "outlier": [52, 97, 183, 502, 636, 882], "mai": [52, 97, 101, 103, 109, 130, 161, 166, 167, 169, 170, 172, 175, 176, 177, 178, 182, 184, 187, 192, 194, 196, 198, 215, 216, 217, 219, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 243, 244, 245, 246, 250, 252, 257, 260, 263, 277, 294, 309, 310, 312, 314, 316, 318, 320, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 345, 346, 347, 366, 386, 397, 398, 403, 422, 434, 482, 483, 485, 490, 492, 496, 502, 507, 513, 514, 515, 516, 517, 522, 533, 535, 542, 550, 551, 553, 559, 566, 567, 572, 597, 600, 603, 623, 635, 636, 638, 651, 653, 654, 660, 662, 671, 672, 689, 691, 693, 695, 701, 720, 722, 766, 770, 771, 772, 774, 775, 777, 779, 784, 786, 787, 788, 789, 790, 811, 813, 814, 815, 816, 817, 818, 834, 836, 852, 853, 866, 868, 870, 871, 873, 875, 879, 883, 888, 889, 891, 896, 898, 919, 929, 936, 941, 943, 945, 946, 948, 949, 950], "occur": [52, 70, 73, 97, 102, 117, 121, 122, 166, 169, 170, 177, 187, 194, 228, 229, 234, 240, 243, 257, 258, 281, 303, 309, 310, 316, 320, 324, 326, 330, 331, 332, 333, 334, 342, 349, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 506, 507, 509, 525, 526, 527, 545, 547, 548, 550, 551, 581, 614, 653, 654, 656, 734, 784, 788, 866, 876, 889, 943, 948], "kwarg": [52, 84, 136, 139, 143, 151, 167, 205, 206, 222, 229, 251, 269, 309, 331, 332, 333, 334, 336, 341, 344, 486, 493, 550, 551, 557, 625, 784, 834, 835, 858, 873, 892, 895], "smooth": [52, 64, 69, 85, 98, 109, 141, 149, 160, 161, 168, 177, 182, 192, 197, 207, 222, 234, 255, 256, 263, 264, 265, 277, 290, 297, 300, 302, 311, 331, 332, 333, 334, 337, 338, 339, 342, 343, 345, 346, 347, 429, 550, 551, 636, 645, 771, 772, 774, 775, 780, 802, 804, 812, 813, 814, 816, 817, 834, 844, 845, 867, 894, 897, 899, 901, 902, 905, 955], "smoothing_step": [52, 67, 68, 69, 81, 85, 87, 131, 136, 143, 157, 162, 201, 203, 205, 207, 251, 263, 338, 339, 342, 345, 346, 347, 834, 894, 899], "almost": [52, 141, 166, 194, 309, 320], "equidist": [52, 341], "unevenli": [52, 597], "achiev": [52, 69, 70, 139, 168, 170, 172, 186, 187, 206, 229, 238, 245, 252, 273, 290, 299, 312, 320, 333, 334, 423, 432, 588, 611, 636, 669, 688, 736, 737, 738, 747, 748, 750, 771, 772, 773, 774, 775, 876, 936, 939], "closest": [52, 170, 183, 184, 243, 270, 293, 302, 320, 326, 331, 332, 333, 334, 337, 344, 550, 551, 780, 786, 787, 789, 790, 834, 854, 868], "brain_subject": 52, "time_label": [52, 59, 60, 85, 87, 136, 152, 157, 252, 263, 264, 265, 274, 333, 334, 338, 339, 342, 345, 346, 347, 834, 836, 871, 894, 899], "brain_f": 52, "remap": [52, 53, 104, 111, 290, 301, 333, 334, 701, 956], "destin": [52, 69, 70, 106, 181, 186, 281, 290, 291, 298, 325, 328, 329, 331, 332, 333, 334, 335, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 376, 377, 380, 381, 429, 442, 482, 504, 513, 514, 515, 516, 550, 551, 586, 621, 623, 635, 636, 660, 671, 720, 721, 723, 784, 785, 786, 787, 788, 789, 790, 819, 820, 821, 878, 923, 924, 925, 926, 927, 928, 929, 932, 933, 934, 935], "n_vertic": [52, 67, 69, 79, 136, 184, 185, 186, 327, 337, 338, 339, 342, 345, 346, 347, 517, 527, 618, 619, 714, 717, 752, 771, 772, 774, 775, 782, 833, 834, 929, 934], "n_use": [52, 67, 69, 71, 76, 136, 184, 185, 186, 202, 235], "10242": [52, 69, 185, 263, 264, 265, 316, 337, 349, 539, 776], "coord": [52, 67, 69, 71, 76, 136, 153, 184, 185, 186, 187, 202, 235, 411, 526, 834, 835, 906, 934], "conductor": [52, 67, 71, 76, 136, 182, 184, 185, 202, 208, 284, 319, 320, 372, 526, 599, 733, 852], "20484": [52, 162, 185, 187, 263, 264, 323, 592], "999310": [52, 67, 76, 184, 202, 207, 208], "009985": [52, 67, 76, 184, 202, 207, 208], "035787": [52, 67, 76, 184, 202, 207, 208], "012759": [52, 67, 76, 184, 202, 207, 208], "812405": [52, 67, 76, 184, 202, 207], "582954": [52, 67, 76, 184, 202, 207], "034894": [52, 67, 76, 184, 202, 207, 208], "583008": [52, 67, 76, 184, 202, 207], "811716": [52, 67, 76, 184, 202, 207, 208], "991420": [52, 67, 71, 76, 184, 202, 207], "039936": [52, 67, 71, 76, 184, 202, 207], "124467": [52, 67, 71, 76, 184, 202, 207], "060661": [52, 67, 71, 76, 184, 202, 207], "984012": [52, 67, 71, 76, 184, 202, 207], "167456": [52, 67, 71, 76, 184, 202, 207], "115790": [52, 67, 71, 76, 184, 202, 207], "173570": [52, 67, 71, 76, 184, 202, 207], "977991": [52, 67, 71, 76, 184, 202, 207], "homogen": [52, 67, 76, 136, 184, 202, 235, 277, 280, 285, 320, 650], "8088": 52, "8079": 52, "10233": [52, 302], "4820": 52, "2113": [52, 195], "8129": 52, "8125": 52, "10237": 52, "20470": 52, "finish": [52, 67, 71, 76, 136, 184, 185, 202, 208, 235, 245, 302, 318], "00205101": 52, "08784125": 52, "17433707": 52, "often": [53, 94, 97, 101, 102, 109, 166, 168, 176, 192, 194, 195, 201, 204, 206, 215, 217, 219, 223, 227, 229, 230, 233, 235, 237, 244, 245, 257, 270, 293, 309, 310, 316, 319, 320, 321, 333, 334, 338, 339, 342, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 614, 672, 834, 876, 894, 899, 936, 946], "lack": [53, 97, 217, 307, 321, 328, 355, 370, 602, 656, 672, 821], "narr": [53, 191, 319, 321], "explan": [53, 100, 168, 181, 191, 259, 306, 321, 331, 332, 786, 787, 954], "discov": [53, 303, 318, 321], "ve": [53, 142, 166, 175, 177, 182, 186, 197, 212, 226, 228, 232, 234, 243, 244, 246, 270, 309, 318, 321, 906, 936], "flag": [53, 191, 193, 281, 288, 309, 316, 323, 331, 332, 336, 338, 339, 342, 345, 346, 347, 377, 550, 551, 592, 855, 889, 894, 899, 900, 936], "tutorial_script": [53, 191], "them": [53, 73, 76, 94, 97, 101, 142, 160, 161, 163, 166, 167, 168, 170, 171, 175, 176, 177, 182, 186, 187, 191, 192, 194, 196, 197, 198, 212, 218, 219, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 240, 243, 244, 245, 252, 255, 256, 263, 265, 270, 273, 287, 288, 294, 298, 302, 309, 310, 312, 316, 317, 318, 319, 320, 323, 325, 331, 332, 333, 334, 337, 358, 359, 362, 428, 431, 436, 486, 487, 501, 562, 563, 570, 596, 597, 605, 607, 610, 631, 635, 636, 655, 672, 679, 693, 698, 738, 748, 761, 789, 790, 829, 882, 941, 950], "shortcut": [53, 246, 287, 303, 824, 834], "intention": [53, 236], "record": [53, 89, 92, 97, 101, 109, 110, 136, 149, 163, 166, 170, 172, 177, 182, 188, 192, 194, 195, 196, 198, 201, 210, 212, 213, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 243, 244, 245, 250, 252, 255, 270, 277, 279, 283, 285, 287, 288, 290, 291, 292, 293, 294, 300, 302, 303, 306, 307, 308, 312, 316, 317, 318, 319, 320, 325, 326, 331, 332, 333, 334, 336, 341, 348, 367, 388, 416, 423, 428, 432, 475, 506, 515, 550, 551, 553, 560, 564, 570, 572, 575, 581, 583, 596, 636, 638, 639, 640, 644, 646, 647, 656, 658, 660, 671, 672, 679, 685, 701, 728, 770, 784, 786, 787, 788, 789, 790, 869, 883, 889, 936, 949, 952], "past": [53, 177, 229, 310, 495, 734, 936, 946], "recip": [53, 89, 309], "write": [53, 55, 67, 89, 93, 135, 137, 166, 186, 187, 196, 197, 198, 203, 216, 230, 243, 265, 268, 280, 281, 282, 284, 285, 286, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 308, 309, 316, 318, 320, 323, 325, 328, 329, 333, 334, 336, 337, 338, 339, 341, 344, 345, 347, 355, 375, 421, 524, 556, 586, 587, 621, 635, 687, 692, 783, 819, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 945, 946, 956], "ensembl": [53, 89, 93, 163, 336, 443, 550, 551, 956], "neo": [53, 89, 93, 215, 301, 336, 443, 550, 551, 956], "xdf": [53, 89, 93, 336, 443, 551, 956], "anatomi": [53, 116, 118, 182, 201, 287, 317, 319, 328, 331, 333, 334, 335, 336, 337, 342, 344, 376, 551, 556, 602, 603, 614, 692, 698, 703, 706, 734, 736, 737, 738, 749, 834, 956], "contact": [53, 104, 161, 164, 191, 226, 294, 302, 303, 306, 309, 317, 400, 666], "contralater": [53, 104, 111, 121, 177, 235, 336, 392, 557, 725, 956], "css": [53, 104, 111, 198, 277, 285, 294, 328, 334, 335, 336, 337, 341, 342, 433, 550, 633, 634, 652, 692, 703, 706, 748, 750, 956], "bridg": [53, 104, 111, 277, 303, 304, 336, 380, 396, 443, 551, 557, 644, 670, 856, 898, 956], "much": [53, 70, 81, 101, 104, 109, 111, 163, 166, 167, 168, 170, 175, 187, 191, 192, 196, 209, 218, 223, 229, 231, 232, 233, 234, 235, 236, 239, 243, 252, 270, 277, 281, 303, 309, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 380, 396, 443, 507, 518, 522, 523, 550, 551, 557, 644, 670, 724, 856, 898, 945, 946, 956], "gel": [53, 104, 111, 303, 336, 380, 396, 443, 551, 557, 644, 670, 856, 898, 956], "densiti": [53, 58, 59, 60, 95, 102, 104, 105, 111, 132, 133, 146, 159, 163, 168, 186, 187, 192, 198, 212, 217, 223, 227, 228, 236, 252, 269, 277, 282, 285, 290, 299, 302, 303, 304, 305, 317, 319, 320, 328, 331, 332, 333, 334, 336, 337, 342, 357, 364, 394, 428, 441, 488, 524, 550, 551, 593, 598, 602, 609, 610, 614, 617, 633, 636, 644, 645, 673, 674, 678, 690, 698, 705, 732, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 803, 804, 805, 828, 834, 836, 852, 862, 868, 871, 890, 904, 956], "csd": [53, 58, 59, 60, 104, 111, 132, 133, 195, 252, 299, 303, 319, 331, 332, 333, 334, 336, 357, 364, 379, 394, 398, 441, 524, 550, 551, 633, 645, 698, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 803, 806, 862, 956], "maxwel": [53, 104, 110, 111, 191, 192, 210, 226, 241, 242, 280, 281, 285, 290, 293, 303, 306, 331, 333, 334, 336, 364, 365, 416, 417, 420, 423, 427, 428, 439, 440, 441, 483, 490, 504, 524, 526, 527, 545, 547, 548, 550, 551, 614, 647, 660, 671, 672, 876, 878, 956], "movement": [53, 101, 102, 104, 109, 111, 139, 163, 191, 219, 226, 232, 233, 234, 240, 241, 242, 245, 246, 277, 280, 281, 290, 302, 317, 319, 323, 325, 331, 333, 334, 336, 410, 411, 412, 413, 414, 416, 418, 420, 421, 432, 504, 524, 542, 550, 564, 640, 643, 660, 671, 737, 749, 836, 852, 859, 871, 878, 904, 956], "reestim": [53, 104, 111, 302, 325, 336, 413, 414, 432, 564, 640, 643, 646, 852, 878, 904, 956], "muscl": [53, 104, 111, 170, 232, 277, 291, 303, 325, 380, 396, 564, 566, 636, 641, 956], "denois": [53, 104, 111, 223, 279, 285, 328, 331, 333, 334, 336, 423, 428, 491, 503, 524, 526, 550, 599, 633, 637, 647, 679, 698, 867, 956], "oversampl": [53, 104, 111, 277, 331, 333, 334, 423, 503, 524, 526, 550, 599, 679, 956], "shift": [53, 102, 104, 111, 166, 192, 212, 222, 226, 229, 230, 235, 246, 277, 285, 286, 287, 290, 293, 294, 298, 303, 326, 330, 331, 332, 333, 334, 346, 347, 489, 511, 550, 551, 559, 566, 636, 638, 667, 678, 701, 784, 788, 798, 834, 877, 889, 900, 956], "2d": [53, 57, 61, 66, 85, 123, 124, 146, 150, 156, 177, 192, 198, 212, 217, 223, 227, 230, 232, 233, 234, 235, 255, 260, 283, 284, 293, 294, 298, 302, 303, 317, 319, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 380, 381, 386, 389, 397, 406, 435, 486, 491, 493, 494, 498, 500, 521, 522, 550, 551, 563, 572, 584, 590, 636, 769, 771, 772, 834, 835, 848, 852, 853, 857, 874, 895, 897, 898, 904, 905, 906, 921, 946, 956], "arrowmap": [53, 150, 156, 286, 333, 336, 564, 632, 633, 701, 853, 956], "heatmap": [53, 150, 156, 161, 237, 240, 317, 331, 512, 570, 657, 845, 956], "parcel": [53, 64, 67, 95, 117, 121, 122, 150, 156, 161, 181, 202, 207, 251, 277, 283, 284, 287, 297, 298, 303, 319, 337, 455, 457, 458, 535, 688, 706, 834, 847, 931, 956], "roi": [53, 64, 150, 156, 177, 181, 227, 256, 277, 282, 291, 319, 320, 329, 331, 333, 334, 336, 392, 509, 512, 567, 603, 834, 872, 956], "rt": [53, 150, 156, 194, 331, 336, 392, 509, 512, 567, 956], "lock": [53, 132, 133, 166, 182, 188, 194, 231, 234, 259, 270, 277, 326, 331, 336, 337, 507, 524, 550, 602, 617, 620, 633, 636, 705, 883, 936, 956], "vectorview": [53, 88, 132, 133, 146, 196, 209, 317, 319, 320, 324, 328, 333, 334, 336, 342, 381, 387, 388, 402, 406, 428, 460, 503, 504, 550, 553, 593, 598, 609, 614, 647, 660, 671, 690, 732, 828, 834, 852, 904, 952, 956], "induc": [53, 132, 133, 134, 188, 192, 257, 258, 259, 270, 277, 284, 331, 332, 336, 342, 524, 550, 602, 617, 619, 620, 633, 784, 788, 802, 812, 813, 816, 936, 956], "erd": [53, 132, 133, 269, 277, 284, 286, 317, 328, 331, 332, 333, 334, 340, 432, 483, 490, 512, 550, 551, 566, 635, 636, 771, 784, 786, 787, 788, 789, 790, 817, 853, 868, 875, 879, 888, 891, 896, 898, 956], "multitap": [53, 101, 109, 130, 132, 133, 136, 163, 168, 169, 192, 198, 223, 232, 260, 268, 269, 277, 281, 284, 287, 301, 304, 305, 308, 312, 331, 332, 333, 334, 336, 354, 443, 496, 522, 550, 551, 609, 784, 786, 789, 793, 796, 813, 814, 815, 816, 817, 818, 839, 956], "stockwel": [53, 132, 133, 260, 277, 282, 301, 304, 331, 336, 354, 443, 551, 784, 813, 815, 816, 817, 818, 839, 956], "hilbert": [53, 108, 132, 133, 140, 193, 260, 286, 304, 331, 332, 333, 334, 336, 354, 443, 550, 551, 784, 813, 816, 817, 818, 839, 956], "permut": [53, 125, 129, 139, 191, 255, 256, 257, 258, 261, 262, 265, 266, 267, 277, 298, 300, 301, 302, 331, 333, 334, 336, 342, 343, 344, 386, 429, 506, 550, 602, 603, 617, 633, 698, 711, 713, 756, 764, 771, 772, 773, 774, 775, 776, 788, 816, 834, 857, 860, 956], "1d": [53, 125, 129, 144, 212, 237, 331, 336, 350, 354, 547, 548, 550, 590, 633, 647, 660, 671, 680, 698, 771, 772, 774, 775, 839, 877, 956], "fdr": [53, 125, 128, 129, 289, 331, 336, 550, 633, 698, 762, 768, 956], "rer": [53, 125, 129, 331, 333, 334, 336, 422, 524, 550, 633, 770, 956], "p": [53, 73, 77, 84, 86, 123, 124, 125, 127, 128, 129, 139, 182, 186, 198, 215, 229, 252, 255, 256, 257, 259, 260, 263, 264, 265, 270, 277, 279, 280, 284, 288, 290, 309, 316, 320, 323, 330, 331, 332, 333, 334, 336, 342, 422, 522, 524, 545, 550, 551, 614, 633, 636, 647, 741, 744, 746, 762, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 784, 788, 854, 867, 936, 956], "sloreta": [53, 54, 56, 57, 62, 64, 65, 67, 74, 76, 82, 85, 117, 131, 191, 192, 201, 204, 205, 207, 213, 214, 251, 263, 265, 277, 296, 298, 319, 328, 331, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 423, 524, 550, 602, 603, 604, 605, 606, 607, 609, 610, 614, 615, 616, 617, 619, 620, 703, 705, 834, 861, 956], "timecours": [53, 59, 62, 68, 82, 328, 329, 331, 333, 334, 335, 336, 342, 346, 355, 359, 364, 370, 524, 526, 550, 597, 602, 603, 605, 614, 690, 692, 693, 703, 718, 785, 788, 797, 816, 834, 956], "dic": [53, 57, 62, 82, 130, 191, 206, 253, 254, 277, 283, 285, 299, 301, 305, 317, 319, 328, 331, 335, 336, 342, 355, 356, 357, 358, 359, 361, 364, 365, 423, 427, 524, 550, 551, 557, 591, 602, 603, 604, 614, 632, 633, 703, 718, 738, 749, 785, 788, 795, 797, 816, 834, 949, 956], "er": [53, 58, 59, 62, 82, 139, 269, 277, 304, 317, 328, 331, 332, 335, 336, 342, 357, 361, 364, 365, 423, 427, 524, 550, 604, 614, 633, 703, 770, 795, 834, 867, 956], "lcmv": [53, 57, 62, 82, 191, 201, 213, 214, 283, 284, 285, 286, 287, 296, 298, 299, 301, 319, 328, 331, 333, 334, 335, 336, 342, 343, 344, 346, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 423, 427, 429, 433, 441, 524, 527, 550, 604, 612, 614, 633, 692, 703, 713, 795, 834, 956], "gamma": [53, 62, 82, 139, 140, 144, 277, 298, 320, 328, 331, 332, 333, 334, 335, 336, 342, 441, 545, 546, 550, 551, 611, 692, 701, 703, 786, 787, 789, 790, 802, 812, 813, 816, 863, 864, 868, 895, 956], "bayesian": [53, 62, 82, 277, 320, 328, 333, 335, 336, 342, 423, 441, 545, 546, 692, 701, 703, 863, 864, 895, 949, 956], "mix": [53, 62, 82, 85, 130, 223, 232, 270, 277, 283, 286, 291, 294, 296, 297, 301, 305, 306, 307, 312, 328, 329, 333, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 364, 365, 429, 517, 528, 545, 546, 547, 548, 559, 566, 590, 598, 602, 603, 614, 636, 669, 692, 701, 703, 706, 711, 713, 732, 733, 739, 740, 741, 742, 743, 744, 745, 746, 776, 779, 834, 863, 864, 879, 894, 895, 899, 956], "mxne": [53, 57, 62, 82, 201, 279, 284, 296, 297, 319, 328, 329, 331, 333, 334, 335, 336, 342, 343, 344, 423, 429, 524, 546, 547, 548, 602, 603, 614, 692, 701, 703, 713, 834, 863, 864, 895, 956], "irmxn": [53, 62, 82, 328, 329, 333, 335, 336, 342, 343, 344, 429, 546, 547, 602, 603, 614, 692, 701, 703, 713, 863, 864, 895, 956], "volumetr": [53, 62, 76, 82, 161, 184, 186, 201, 203, 207, 284, 288, 291, 292, 302, 312, 319, 333, 338, 339, 342, 343, 344, 345, 346, 347, 429, 590, 602, 603, 617, 666, 701, 713, 834, 894, 899, 900, 902, 956], "xfit": [53, 62, 82, 281, 290, 297, 303, 328, 329, 331, 333, 334, 335, 336, 346, 370, 524, 526, 550, 597, 602, 603, 605, 614, 690, 692, 693, 718, 956], "reweight": [53, 62, 66, 82, 277, 328, 331, 333, 334, 335, 342, 423, 524, 546, 547, 548, 703, 895, 956], "tf": [53, 57, 62, 82, 85, 229, 279, 284, 297, 328, 331, 333, 334, 335, 342, 423, 524, 546, 548, 703, 895, 956], "multiscal": [53, 62, 82, 328, 331, 333, 334, 335, 342, 423, 524, 546, 548, 703, 895, 956], "circular": [53, 62, 82, 177, 251, 297, 320, 342, 344, 433, 541, 613, 615, 617, 703, 706, 834, 840, 949, 956], "graph": [53, 62, 82, 144, 277, 297, 342, 344, 433, 613, 615, 617, 703, 706, 754, 755, 756, 757, 758, 759, 760, 834, 840, 956], "spread": [53, 62, 68, 80, 81, 82, 98, 107, 109, 110, 140, 191, 194, 229, 234, 235, 237, 253, 254, 277, 290, 300, 309, 320, 328, 331, 333, 334, 335, 336, 337, 342, 344, 346, 423, 433, 524, 550, 598, 602, 603, 604, 612, 613, 614, 615, 617, 618, 644, 671, 692, 701, 703, 706, 733, 746, 748, 751, 834, 956], "psf": [53, 62, 80, 81, 82, 290, 328, 333, 335, 336, 342, 344, 346, 433, 598, 602, 612, 613, 614, 615, 618, 692, 701, 703, 733, 834, 956], "talk": [53, 62, 82, 186, 229, 237, 257, 280, 285, 290, 300, 310, 319, 328, 331, 333, 335, 336, 342, 355, 365, 366, 423, 433, 441, 504, 524, 602, 612, 613, 614, 615, 618, 633, 646, 660, 671, 692, 701, 703, 834, 956], "rap": [53, 62, 82, 86, 277, 301, 328, 333, 335, 367, 369, 692, 701, 703, 863, 864, 956], "music": [53, 62, 82, 232, 277, 301, 306, 328, 333, 335, 367, 369, 692, 701, 703, 863, 864, 956], "resolut": [53, 56, 62, 70, 73, 74, 76, 82, 141, 147, 149, 172, 182, 183, 184, 202, 239, 240, 257, 258, 277, 282, 284, 290, 294, 302, 303, 310, 316, 319, 320, 324, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 366, 429, 433, 483, 490, 517, 539, 542, 550, 551, 602, 603, 612, 613, 614, 615, 618, 634, 635, 636, 656, 658, 692, 701, 703, 784, 786, 787, 789, 790, 802, 812, 813, 814, 815, 816, 817, 818, 834, 845, 853, 868, 875, 879, 888, 891, 894, 896, 898, 899, 913, 949, 956], "trap": [53, 62, 82, 85, 277, 306, 328, 333, 335, 369, 692, 701, 703, 863, 864, 956], "auto_examples_python": 53, "auto_examples_jupyt": 53, "fname_raw": [54, 55, 88, 130, 131, 183, 208, 236, 273], "fname_ev": [54, 121, 130, 131], "label_nam": [54, 55, 73, 119, 121, 131, 134, 207, 251, 536], "fname_label": [54, 55, 131, 134, 135], "assumpt": [54, 136, 148, 166, 167, 170, 178, 188, 229, 233, 237, 255, 288, 304, 320, 333, 334, 679, 766, 876, 936], "053": [54, 75, 96, 100, 119, 120, 131, 134, 135, 137, 138, 144, 166, 167, 175, 177, 188, 192, 193, 194, 195, 203, 226, 227, 228, 232, 233, 234, 235, 237, 243, 244, 245, 246, 252, 257, 258, 273], "sqrt": [54, 144, 209, 210, 212, 251, 252, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 641, 669, 802, 812, 890, 955], "mean_stc": 54, "flip": [54, 64, 65, 142, 187, 232, 255, 284, 287, 293, 295, 320, 323, 338, 339, 342, 345, 346, 347, 371, 517, 589, 771, 906], "cancel": [54, 107, 206, 229, 237, 316, 320, 338, 339, 342, 345, 346, 347, 504, 517, 671], "label_mean": 54, "label_mean_flip": 54, "stc_evok": 54, "sub": [54, 58, 59, 60, 67, 72, 92, 94, 97, 109, 140, 149, 172, 181, 196, 239, 240, 269, 270, 303, 320, 331, 332, 333, 334, 336, 510, 550, 551, 669, 733, 785, 834, 862, 936, 952], "stc_evoked_label": 54, "in_label": [54, 63, 64, 65, 288, 291, 301, 342, 345, 346, 347], "polar": [54, 73, 168, 234, 858], "label_mean_evok": 54, "1711": [54, 60, 71, 134, 148, 158, 168, 171, 172, 178, 192, 195, 203, 206, 228, 252, 260, 263, 265], "benefit": [54, 71, 72, 81, 85, 98, 154, 198, 217, 277, 310, 316, 618, 645, 744], "1e3": [54, 55, 64, 65, 67, 96, 99, 124, 140, 149, 163, 175, 177, 182, 183, 203, 211, 219, 240, 251, 257, 258, 259, 265], "h0": [54, 123, 127, 255, 256, 257, 258, 259, 263, 264, 265, 771, 772, 773, 774, 775], "h1": [54, 123, 139, 255, 256, 257, 258, 259, 260, 263, 264, 265], "linewidth": [54, 65, 124, 139, 140, 162, 176, 186, 233, 255, 328, 331, 332, 333, 334, 483, 490, 550, 551, 635, 784, 786, 787, 789, 790, 834, 853, 860, 868, 875, 891, 892, 895, 896, 898], "h2": 54, "unflip": 54, "pool": [54, 166, 175, 177, 192, 244, 312, 364, 365, 545, 547, 548, 603, 604, 605, 606, 607, 609, 610, 620], "stc_trial": 54, "_nolegend_": 54, "compute_mne_inverse_epochs_in_label": [54, 82, 956], "smaller": [55, 67, 102, 131, 168, 175, 184, 229, 234, 237, 255, 256, 270, 273, 286, 302, 306, 316, 320, 326, 331, 332, 338, 339, 342, 345, 346, 347, 548, 570, 638, 653, 660, 669, 771, 772, 774, 775, 801, 809, 834, 894, 899], "time_as_index": [55, 66, 110, 166, 175, 201, 243, 286, 297, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 784, 788], "mne_": [55, 56], "s_raw_inverse_": 55, "overwrit": [55, 67, 131, 135, 137, 166, 187, 198, 218, 245, 283, 287, 291, 292, 293, 298, 302, 307, 308, 323, 325, 328, 329, 331, 332, 333, 334, 335, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 375, 376, 377, 380, 381, 513, 514, 515, 516, 550, 551, 586, 621, 635, 636, 645, 721, 722, 725, 729, 784, 785, 786, 787, 788, 789, 790, 819, 821, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935], "25800": [55, 71, 95, 98, 106, 109, 119, 120, 130, 131, 134, 137, 138, 145, 151, 172, 182, 188, 193, 194, 198, 208, 226, 230, 231, 233, 234, 235, 243, 246, 251, 252, 257, 258, 259, 273], "192599": [55, 71, 95, 98, 109, 119, 120, 130, 131, 134, 137, 138, 145, 151, 172, 182, 188, 193, 194, 198, 208, 226, 230, 231, 233, 234, 243, 246, 251, 252, 257, 258, 259, 273], "670": [55, 71, 81, 82, 95, 98, 107, 109, 119, 120, 130, 131, 134, 137, 138, 145, 151, 172, 182, 188, 193, 194, 198, 208, 226, 230, 231, 233, 234, 236, 243, 246, 251, 252, 257, 258, 259, 260, 273, 956], "compute_mne_inverse_raw_in_label": [55, 82, 956], "nilearn": [56, 67, 70, 197, 202, 207, 208, 346, 347, 900, 942], "index_img": 56, "plot_stat_map": 56, "vol": [56, 70, 76, 161, 186, 202, 206, 207, 277, 329, 331, 332, 333, 334, 344, 367, 504, 711, 739, 740, 741, 742, 743, 744, 745, 746, 876, 913], "4d": [56, 151, 191, 213, 214, 215, 281, 285, 288, 298, 320, 328, 329, 331, 332, 333, 334, 336, 370, 423, 524, 526, 550, 551, 562, 599, 633, 634, 771, 772, 784, 786, 787, 788, 789, 790, 852, 864, 956], "img": [56, 143, 186, 208, 255, 346, 347], "as_volum": [56, 286, 346, 347], "nib": [56, 70, 182], "s_invers": 56, "gz": [56, 166, 181, 198, 233, 293, 297, 323, 330, 331, 332, 333, 334, 335, 344, 380, 456, 550, 551, 572, 617, 621, 636, 683, 689, 692, 694, 701, 703, 709, 713, 749, 922, 925, 927, 928, 932, 933, 948], "t1_fname": [56, 186, 202], "499": [56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 105, 112, 113, 143, 146, 147, 168, 169, 175, 194, 198, 202, 204, 205, 207, 258, 259, 273, 274], "11271": [56, 70, 207, 305], "421": [56, 98, 134, 137, 168, 188, 202, 208, 231, 251, 255, 258, 259], "compute_mne_inverse_volum": [56, 82, 956], "plug": [57, 309, 320], "facil": [57, 324], "wmne": [57, 547, 548], "eloreta": [57, 191, 192, 201, 204, 205, 213, 214, 263, 265, 285, 286, 290, 291, 319, 328, 331, 333, 334, 336, 342, 364, 365, 423, 524, 545, 547, 548, 602, 603, 604, 605, 606, 607, 609, 610, 614, 616, 619, 620, 703, 834, 861, 956], "educ": [57, 310], "shall": [57, 170, 228, 309, 310, 333, 334, 507, 636, 752, 836, 871], "develop": [57, 97, 197, 232, 237, 294, 310, 317, 322, 323, 400, 660, 783, 844, 936, 945, 946, 948, 949], "meant": [57, 117, 122, 136, 197, 255, 291, 340, 356, 358, 410, 485, 495, 590, 730, 828, 829, 838], "practic": [57, 98, 126, 141, 177, 186, 194, 228, 229, 235, 237, 270, 277, 309, 310, 312, 319, 320, 337, 364, 507, 636, 645, 705, 711, 770], "apply_solv": 57, "linalg": [57, 110, 182, 186, 211, 233, 281, 286, 427, 770, 936], "ave_fnam": [57, 66, 85, 95, 119], "cov_fnam": [57, 61, 66, 71, 77, 85, 86, 95, 119, 198, 252, 341], "handl": [57, 66, 72, 85, 159, 166, 170, 172, 177, 181, 186, 191, 192, 194, 196, 198, 199, 234, 237, 241, 242, 273, 274, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 297, 299, 302, 303, 305, 306, 307, 308, 309, 326, 331, 332, 333, 334, 336, 411, 510, 524, 550, 551, 630, 633, 636, 671, 728, 835, 844, 853, 856, 858, 869, 880, 884, 921, 956], "365": [57, 66, 67, 71, 85, 107, 195, 236, 255, 277, 337, 342, 423], "auxiliari": [57, 168, 442], "def": [57, 60, 95, 103, 110, 119, 120, 121, 136, 140, 144, 159, 163, 176, 177, 182, 186, 229, 230, 233, 252, 255, 259, 265, 270, 274, 309], "account": [57, 106, 136, 151, 167, 168, 182, 184, 188, 206, 211, 219, 227, 228, 234, 235, 237, 243, 244, 255, 260, 270, 280, 281, 287, 290, 291, 292, 303, 309, 320, 325, 328, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 614, 636, 639, 669, 876, 936], "constraint": [57, 87, 184, 192, 204, 222, 235, 277, 284, 331, 332, 354, 366, 526, 614, 867], "weigth": 57, "formul": [57, 320, 802, 812, 813, 816], "problem": [57, 66, 85, 97, 114, 123, 124, 141, 163, 170, 187, 192, 201, 202, 215, 216, 223, 227, 231, 232, 234, 235, 243, 255, 256, 260, 263, 264, 265, 270, 277, 282, 284, 285, 286, 287, 291, 303, 309, 312, 320, 547, 567, 636, 660, 689, 695, 771, 772, 774, 775, 777, 778, 902, 936, 937, 942], "bia": [57, 66, 97, 110, 167, 177, 210, 229, 263, 265, 269, 277, 279, 291, 292, 298, 303, 320, 328, 333, 334, 364, 365, 429, 496, 545, 547, 548, 614, 669, 805, 870, 875], "callabl": [57, 176, 291, 293, 305, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 350, 380, 382, 408, 434, 483, 486, 490, 493, 500, 512, 550, 551, 606, 635, 636, 651, 719, 750, 751, 763, 770, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 832, 834, 849, 853, 860, 867, 868, 870, 875, 879, 888, 891, 894, 896, 897, 898, 899, 917, 919], "boolean": [57, 128, 167, 169, 195, 197, 233, 234, 243, 245, 282, 288, 301, 303, 307, 309, 328, 331, 332, 333, 334, 340, 342, 483, 490, 550, 551, 635, 636, 771, 772, 774, 775, 784, 786, 787, 789, 790, 867, 868, 872, 875, 879, 888, 891, 896, 898, 939], "tangenti": [57, 320, 364, 365, 528, 545, 547, 548, 614], "discret": [57, 71, 131, 184, 202, 223, 235, 268, 277, 284, 288, 294, 299, 303, 305, 310, 330, 331, 332, 333, 334, 344, 490, 528, 545, 547, 548, 550, 551, 597, 614, 733, 784, 786, 788, 789, 798, 804], "coeffici": [57, 128, 136, 167, 172, 184, 222, 229, 231, 279, 283, 284, 286, 292, 487, 489, 495, 501, 518, 519, 520, 547, 548, 635, 646, 647, 660, 671, 682, 686, 738, 747, 748, 769, 770, 786, 787, 789, 790, 799, 801, 804, 805, 809, 877], "privat": [57, 301, 309], "mxne_invers": 57, "_make_sparse_stc": 57, "_prepare_gain": 57, "_reapply_source_weight": 57, "is_fixed_ori": [57, 287], "all_ch_nam": 57, "gain_info": 57, "source_weight": 57, "weights_min": [57, 66, 85, 288, 547, 548], "dot": [57, 105, 113, 139, 146, 152, 170, 176, 186, 201, 204, 208, 211, 217, 222, 227, 234, 238, 240, 263, 265, 273, 274, 305, 306, 309, 320, 329, 333, 334, 338, 342, 346, 770, 864, 870], "n_orient": [57, 338, 339, 342, 345, 346, 347, 517, 618], "active_set": 57, "penal": 57, "strongest": [57, 61, 66, 73, 85, 177], "n_dipol": [57, 77, 86, 95, 119, 120, 184, 329, 338, 339, 342, 345, 346, 347, 367, 369, 503, 612, 613, 615, 750], "depend": [57, 97, 108, 128, 154, 161, 162, 163, 167, 175, 177, 181, 183, 184, 188, 196, 197, 198, 217, 222, 228, 229, 231, 233, 234, 237, 245, 252, 255, 256, 257, 265, 270, 277, 282, 284, 288, 292, 293, 294, 304, 306, 308, 309, 314, 316, 317, 320, 325, 331, 332, 333, 334, 338, 339, 342, 344, 345, 346, 347, 366, 386, 397, 411, 412, 476, 489, 495, 509, 517, 527, 550, 551, 553, 559, 566, 568, 636, 646, 660, 666, 679, 685, 765, 771, 772, 774, 775, 777, 779, 780, 783, 784, 786, 787, 788, 789, 790, 808, 834, 844, 857, 859, 860, 866, 867, 870, 883, 889, 936, 941, 942, 945, 948, 949, 950], "n_active_dipol": 57, "bool": [57, 147, 197, 260, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 388, 389, 390, 391, 392, 394, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 531, 533, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 676, 678, 679, 680, 683, 684, 685, 686, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 765, 768, 771, 772, 773, 774, 775, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 802, 803, 804, 805, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 829, 833, 834, 836, 840, 843, 844, 845, 849, 850, 852, 853, 854, 855, 857, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 906, 907, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936], "entri": [57, 136, 166, 168, 170, 176, 177, 192, 196, 197, 223, 227, 243, 283, 287, 290, 292, 304, 309, 320, 325, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 353, 382, 410, 411, 412, 413, 414, 415, 483, 490, 493, 505, 515, 518, 548, 549, 550, 551, 553, 603, 611, 635, 636, 651, 729, 733, 735, 736, 737, 749, 764, 784, 786, 787, 788, 789, 790, 834, 836, 845, 853, 854, 866, 867, 868, 871, 872, 875, 879, 888, 889, 891, 894, 895, 896, 898, 899, 945], "x_full": 57, "solv": [57, 85, 187, 201, 312, 320, 483, 567, 636, 689, 695, 770], "dtype": [57, 119, 121, 141, 147, 170, 182, 193, 250, 252, 260, 307, 320, 331, 332, 333, 334, 489, 549, 550, 551], "bgcolor": [57, 61, 66, 72, 85, 119, 182, 186, 204, 550, 551, 844, 855, 889, 895], "868": [57, 82, 232, 277, 651, 956], "260": [57, 82, 107, 111, 139, 195, 219, 236, 255, 260, 317, 680, 956], "custom_inverse_solv": [57, 82, 956], "synchron": [58, 59, 60, 139, 172, 238, 269, 277, 303, 309, 317, 324, 364, 552, 559, 566], "rockhil": [58, 97, 98, 109, 141, 142, 143, 147, 161, 162, 259, 260, 277, 290, 291, 293, 294, 302, 303, 304, 305, 306, 307, 308, 954], "aprockhil": [58, 97, 98, 109, 141, 142, 143, 147, 161, 162, 259, 260], "mailbox": [58, 59, 97, 98, 109, 140, 141, 142, 143, 147, 161, 162, 257, 259, 260, 263, 269, 273], "organ": [58, 98, 259, 260, 277, 310, 317, 645, 774, 775], "_task": [58, 59, 60, 72, 140, 269], "_meg": [58, 59, 60, 72, 140, 198, 269, 288, 293, 323, 550, 551, 572, 573], "5000e": 58, "mostli": [58, 136, 167, 201, 204, 215, 228, 231, 317, 319, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 528, 545, 547, 548, 550, 551, 614, 834], "wavelet": [58, 130, 140, 192, 229, 259, 277, 285, 319, 496, 620, 784, 788, 792, 795, 800, 802, 811, 812, 813, 814, 816, 817], "wish": [58, 170, 197, 217, 235, 250, 256, 257, 263, 309, 310, 432, 550, 551, 660, 835, 838, 950], "epochs_tfr": [58, 359, 607, 797], "return_itc": [58, 139, 141, 192, 257, 258, 259, 260, 269, 815, 816, 817, 818], "buffer": [58, 141, 216, 240, 282, 283, 285, 286, 299, 301, 323, 336, 549, 550, 551, 567, 657, 660, 671, 689, 695], "01_task": [58, 59, 60, 72, 94, 140, 149, 196, 240, 269, 270], "somato_meg": [58, 59, 60, 72, 140, 269], "237600": [58, 59, 60, 72, 140, 269], "506999": [58, 59, 60, 72, 140, 269], "791": [58, 59, 60, 72, 140, 207, 239, 242, 269, 956], "1688": [58, 59, 60, 72, 140, 269], "sti": [58, 59, 60, 68, 71, 72, 75, 96, 98, 99, 100, 106, 117, 120, 121, 122, 126, 134, 135, 137, 140, 166, 167, 168, 172, 175, 178, 188, 192, 194, 195, 198, 203, 206, 208, 215, 223, 227, 230, 231, 232, 234, 240, 244, 251, 252, 257, 268, 269, 279, 283, 308, 319, 324, 524, 525, 550, 551, 568], "014": [58, 59, 60, 68, 71, 72, 75, 88, 96, 98, 99, 100, 106, 117, 120, 121, 122, 126, 134, 135, 137, 140, 155, 166, 167, 168, 172, 175, 178, 188, 192, 194, 195, 198, 203, 206, 208, 215, 223, 227, 230, 231, 232, 234, 240, 244, 251, 252, 257, 268, 269, 279, 283, 308, 324, 524, 525, 550, 551, 568], "9989760657919393": 58, "1052": [58, 59, 60], "0121": [58, 60, 171, 192, 195, 243, 252], "0211": [58, 60, 192, 195, 252], "1331": [58, 60, 171, 195, 228, 236, 252], "2211": [58, 60, 195, 252], "2521": [58, 60, 166, 175, 195, 252], "1641": [58, 60, 195, 252], "1831": [58, 60, 195, 252], "1921": [58, 60, 195, 252], "1941": [58, 60, 61, 195, 252], "1611": [58, 60, 147, 195, 252], "0441": [58, 60, 195, 252], "1631": [58, 60, 147, 195, 240, 252], "period": [58, 107, 148, 166, 167, 170, 171, 175, 176, 198, 206, 212, 226, 228, 229, 230, 232, 239, 240, 270, 290, 291, 292, 294, 303, 305, 307, 309, 310, 319, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 423, 636, 639, 640, 641, 653, 701, 702, 798, 830, 870], "baseline_csd": 58, "scalar": [58, 167, 186, 206, 252, 291, 293, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 357, 364, 365, 366, 483, 490, 550, 551, 636, 770, 786, 787, 789, 790, 834, 868, 875, 879, 888, 894, 899], "beamfom": 58, "noise_csd": [58, 59, 364], "reduce_rank": [58, 59, 60, 75, 290, 364, 365], "real_filt": [58, 59, 60, 252, 283, 293, 364], "epochs_stc": 58, "return_gener": [58, 131, 358, 359, 362, 517, 605, 607, 610], "nsourc": [58, 78, 335], "epoch_stc": 58, "conj": [58, 141, 364, 365], "apply_baselin": [58, 139, 167, 175, 198, 204, 226, 231, 232, 234, 240, 257, 258, 259, 260, 269, 273, 274, 279, 281, 282, 285, 292, 302, 303, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 784, 788], "8155": [58, 59, 60, 72], "001": [58, 59, 98, 106, 109, 110, 148, 155, 166, 167, 168, 170, 171, 175, 176, 177, 186, 192, 194, 195, 198, 215, 222, 226, 228, 229, 230, 231, 234, 239, 243, 252, 255, 256, 257, 259, 260, 263, 264, 269, 274, 277, 317, 320, 611, 645, 734, 771, 772, 774, 775], "003": [58, 59, 99, 148, 155, 166, 167, 168, 171, 175, 192, 193, 195, 198, 228, 229, 231, 232, 234, 243, 252, 277], "005": [58, 59, 148, 155, 166, 168, 175, 183, 185, 188, 192, 195, 231, 252, 265, 269, 329, 413, 638, 864], "006": [58, 59, 148, 155, 166, 168, 171, 175, 184, 192, 195, 231, 232, 234, 242, 252, 277, 316, 323, 337, 342, 592, 956], "015": [58, 59, 155, 166, 168, 175, 195, 212, 231, 232, 252, 263, 277, 329, 651, 744, 864], "074": 58, "gyri": [58, 121, 181, 184, 251, 277], "border": [58, 64, 85, 131, 143, 154, 181, 207, 290, 291, 303, 305, 328, 331, 332, 333, 334, 340, 483, 490, 509, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 834, 868, 874, 875, 879, 888, 891, 896, 897, 898], "central": [58, 155, 167], "sulcu": 58, "primari": [58, 121, 175, 310, 320], "s1": [58, 575], "m1": [58, 94, 196, 235, 255, 270, 290, 331, 332, 333, 334, 550, 551, 728], "dorsal": [58, 834], "brain_kwarg": [58, 67, 143, 206, 207, 338, 339, 342, 345, 346, 347, 894, 899], "add_data_kwarg": [58, 161, 207, 338, 339, 342, 345, 346, 347, 894, 899], "fmid": [58, 301, 338, 339, 342, 345, 346, 347, 834, 855, 894, 899, 900, 907], "scale_factor": [58, 61, 74, 75, 76, 85, 203, 339, 345, 347, 380, 834, 886, 895, 899], "colorbar_kwarg": [58, 161, 207, 834], "label_font_s": [58, 161, 207], "688": [58, 260], "33913449": 58, "817": [58, 156, 260], "80202112": 58, "3163": 58, "68479992": 58, "536": [58, 82, 154, 236, 277, 458, 956], "dics_epoch": [58, 82, 283, 285, 956], "roman": [59, 277, 298, 299, 300, 314], "goj": [59, 277, 298, 299, 300, 314], "appelhoff": [59, 140, 257, 260, 263, 269, 273, 285, 286, 288, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308, 954], "shorter": [59, 141, 229, 237, 270, 284, 338, 339, 342, 345, 346, 347, 507, 512, 550, 551, 641, 672, 678, 802, 812, 813, 814, 816, 817, 889], "498464098687909": [59, 60], "logspac": [59, 60, 222, 269, 423], "log10": [59, 60, 127, 159, 229, 239, 252, 255, 269, 270, 784], "loss": [59, 97, 228, 233, 320, 331, 332, 333, 334, 486, 493, 513, 514, 515, 516, 550, 551, 766], "csd_baselin": [59, 60], "csd_er": [59, 60], "block": [59, 60, 85, 90, 130, 149, 159, 168, 169, 198, 219, 228, 240, 252, 279, 284, 286, 302, 303, 307, 320, 329, 331, 332, 333, 334, 336, 341, 524, 542, 547, 550, 551, 625, 636, 669, 702, 771, 772, 774, 775, 786, 787, 789, 790, 834, 864, 866, 883, 889, 890, 892, 941], "rather": [59, 60, 87, 166, 167, 172, 175, 182, 192, 193, 194, 196, 197, 204, 215, 223, 228, 234, 235, 239, 243, 255, 259, 263, 268, 283, 285, 286, 287, 290, 291, 293, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 317, 319, 320, 331, 332, 335, 338, 339, 342, 345, 346, 347, 490, 550, 551, 601, 609, 610, 620, 670, 776, 779, 834, 854, 889, 941], "entir": [59, 101, 131, 170, 177, 202, 210, 228, 229, 231, 237, 239, 244, 255, 270, 291, 292, 307, 309, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 354, 484, 499, 603, 604, 605, 606, 607, 636, 653, 701, 734, 784], "baseline_source_pow": 59, "beta_source_pow": 59, "messag": [59, 197, 240, 268, 281, 284, 286, 287, 288, 290, 291, 303, 306, 308, 309, 323, 338, 339, 342, 345, 346, 347, 434, 517, 567, 570, 689, 695, 729, 730, 829, 830, 831, 834, 936, 941, 948, 951], "40188307": 59, "5102619": 59, "34636424": 59, "joachim": [59, 206, 252, 277, 357, 364], "gro\u00df": [59, 206, 252, 277, 357, 364], "jan": [59, 206, 252, 277, 290, 291, 294, 302, 306, 316, 357, 364, 365], "kujala": [59, 206, 252, 277, 357, 364, 365], "matti": [59, 66, 80, 81, 84, 85, 86, 154, 188, 204, 206, 237, 252, 277, 278, 300, 303, 314, 320, 342, 357, 364, 369, 547, 548, 603, 614, 618, 647, 652, 671, 741, 746, 936, 949], "h\u00e4m\u00e4l\u00e4inen": [59, 66, 84, 85, 154, 204, 206, 252, 277, 278, 300, 342, 357, 364, 504, 547, 548, 603, 614, 618, 652, 741, 744, 746, 949], "lar": [59, 206, 252, 277, 357, 364], "timmermann": [59, 206, 252, 277, 357, 364], "alfon": [59, 206, 252, 277, 357, 364], "schnitzler": [59, 206, 252, 277, 357, 364], "riitta": [59, 140, 204, 206, 252, 277, 357, 364, 365], "salmelin": [59, 140, 206, 252, 277, 357, 364, 365], "nation": [59, 206, 252, 277, 322, 357, 364, 954], "academi": [59, 206, 252, 277, 357, 364], "694": [59, 206, 252, 260, 277, 357, 364], "699": [59, 166, 177, 206, 252, 260, 277, 357, 364], "2001": [59, 67, 97, 206, 222, 235, 252, 277, 331, 332, 333, 334, 357, 364, 489, 550, 551, 644, 728, 768], "1073": [59, 206, 223, 252, 277, 357, 364], "pna": [59, 206, 252, 277, 357, 364], "164": [59, 82, 108, 195, 229, 255, 259, 260, 262, 277, 771, 772, 774, 775, 956], "dics_source_pow": [59, 82, 283, 285, 956], "luke": [60, 64, 68, 102, 107, 108, 136, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 299, 302, 303, 306, 307, 308, 954], "bloi": [60, 64, 68, 107, 108, 136, 283, 284, 285, 286, 288, 290, 291, 293, 294, 299, 302], "90092": 60, "maxfilt": [60, 215, 237, 283, 292, 296, 301, 308, 336, 419, 420, 421, 504, 550, 551, 609, 610, 619, 620, 646, 647, 660, 671, 735, 736, 737, 749], "conserv": [60, 97, 172, 255, 301, 644, 733, 834], "onc": [60, 69, 70, 87, 97, 121, 147, 159, 161, 168, 169, 170, 171, 176, 177, 192, 194, 195, 196, 198, 203, 207, 226, 227, 229, 231, 232, 233, 234, 240, 243, 245, 273, 282, 287, 293, 299, 303, 309, 310, 316, 320, 324, 325, 331, 332, 333, 334, 343, 349, 445, 518, 519, 521, 522, 550, 551, 655, 669, 814, 817, 857, 889], "advanc": [60, 100, 187, 188, 191, 197, 231, 245, 273, 275, 277, 298, 305, 312, 320, 328, 331, 332, 333, 334, 340, 423, 443, 483, 490, 542, 545, 550, 551, 635, 636, 651, 749, 784, 786, 787, 789, 790, 844, 853, 868, 875, 879, 888, 891, 896, 898, 936, 937, 938, 942, 944, 946], "correctli": [60, 69, 70, 176, 217, 231, 265, 279, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 308, 316, 317, 320, 331, 332, 333, 334, 400, 516, 550, 551, 659, 851, 870, 941, 942, 948], "active_win": 60, "baseline_win": 60, "baseline_cov": 60, "active_cov": 60, "common_cov": 60, "3737": 60, "ref": [60, 88, 94, 151, 177, 288, 292, 309, 323, 834, 852], "ex": [60, 237, 309, 336, 942, 946], "_gen_dic": 60, "stc_base": [60, 68], "stc_act": 60, "_gen_lcmv": 60, "_gen_mn": 60, "stc_dic": 60, "stc_lcmv": 60, "stc_dspm": [60, 66, 85], "0131": [60, 171, 192, 195, 252], "1931": [60, 195, 252], "1821": [60, 195, 252], "2021": [60, 170, 195, 206, 217, 239, 252, 277, 303, 310, 313, 317, 459, 581, 650], "1041": [60, 195, 252], "0621": [60, 195, 252], "0931": [60, 195, 252], "2541": [60, 195, 228, 252], "0711": [60, 195, 252], "2531": [60, 195, 228, 252], "1741": [60, 195, 228, 252, 277], "0331": [60, 192, 195, 252], "1911": [60, 195, 252, 255], "1221": [60, 195, 228, 252], "2321": [60, 195, 252], "2041": [60, 195, 222, 252], "1341": [60, 195, 222, 236, 252], "2111": [60, 195, 252], "1211": [60, 195, 252], "0811": [60, 195, 228, 252], "0241": [60, 195, 252], "0911": [60, 195, 228, 252], "0821": [60, 195, 252], "0231": [60, 147, 192, 195, 252], "2441": [60, 195, 252], "1431": [60, 195, 228, 252], "0411": [60, 195, 252], "0631": [60, 195, 252], "0111": [60, 171, 192, 195, 228, 234, 243, 252, 718], "2331": [60, 195, 252, 630], "1731": [60, 61, 195, 252], "1231": [60, 195, 252], "1121": [60, 195, 252], "2511": [60, 195, 252], "1321": [60, 195, 222, 228, 252], "2311": [60, 195, 252], "1011": [60, 195, 223, 252], "2121": [60, 195, 252], "1421": [60, 171, 172, 195, 228, 234, 252], "0431": [60, 195, 252], "0521": [60, 195, 228, 252], "1721": [60, 195, 252], "2641": [60, 195, 252], "2231": [60, 195, 252], "0741": [60, 195, 252], "0421": [60, 195, 252], "0531": [60, 195, 252], "2141": [60, 195, 228, 252, 255, 277, 777, 778], "2631": [60, 195, 228, 252], "1441": [60, 171, 195, 218, 222, 228, 236, 252], "1021": [60, 195, 252, 277, 331, 332, 333, 334, 550, 551], "0341": [60, 195, 252], "1141": [60, 195, 252], "2341": [60, 195, 252], "0141": [60, 195, 228, 252], "1521": [60, 192, 195, 252], "1131": [60, 195, 252], "2621": [60, 195, 228, 252], "0311": [60, 192, 195, 252], "1111": [60, 126, 167, 177, 195, 223, 229, 252, 260, 277, 309, 423, 770, 771, 772, 774, 775], "0611": [60, 195, 252], "1511": [60, 192, 195, 252], "1241": [60, 195, 252], "2421": [60, 147, 195, 228, 252], "0921": [60, 195, 252], "1541": [60, 195, 228, 236, 252], "0731": [60, 195, 252], "0541": [60, 195, 252], "0221": [60, 192, 195, 252], "1311": [60, 161, 195, 236, 252], "0321": [60, 192, 195, 252], "2411": [60, 147, 195, 252], "0721": [60, 195, 252], "0641": [60, 195, 252], "1031": [60, 195, 223, 252], "1621": [60, 147, 195, 252], "2131": [60, 195, 228, 252, 255, 277, 777, 778], "2611": [60, 195, 228, 252], "1411": [60, 171, 172, 195, 228, 234, 236, 252], "0511": [60, 172, 195, 252], "2221": [60, 195, 252], "0941": [60, 195, 252], "1811": [60, 147, 176, 195, 243, 252], "2031": [60, 195, 252], "2431": [60, 195, 222, 252], "planar": [60, 66, 68, 76, 84, 85, 98, 110, 119, 121, 136, 138, 146, 157, 168, 172, 198, 203, 204, 205, 209, 215, 223, 226, 233, 234, 237, 252, 255, 290, 320, 853], "7615": [60, 154, 277, 458], "004172": 60, "17919e": 60, "exp": [60, 66, 68, 76, 84, 85, 117, 119, 121, 136, 203, 204, 205, 208, 218, 223, 234, 252, 255, 364, 365, 527, 545, 547, 548, 614], "37519": 60, "81525e": 60, "brain_dic": 60, "5205929": 60, "6585548": 60, "71744034": 60, "brain_lcmv": 60, "47976501": 60, "58604361": 60, "05052667": 60, "brain_dspm": 60, "71156005": 60, "88777473": 60, "99146759": 60, "432": [60, 192, 197, 200, 236, 255, 260, 956], "evoked_ers_source_pow": [60, 82, 956], "detail": [61, 70, 71, 106, 146, 166, 168, 175, 176, 177, 181, 182, 184, 192, 193, 194, 195, 196, 197, 198, 201, 203, 206, 215, 216, 217, 222, 223, 227, 228, 230, 232, 233, 234, 237, 243, 244, 245, 246, 265, 268, 277, 282, 291, 297, 304, 307, 309, 311, 312, 316, 317, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 632, 635, 636, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 688, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 732, 733, 735, 736, 737, 738, 747, 748, 749, 750, 752, 754, 755, 756, 757, 758, 759, 760, 771, 772, 773, 774, 775, 777, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 804, 805, 808, 809, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 829, 833, 834, 836, 843, 851, 852, 853, 860, 861, 864, 867, 868, 869, 870, 871, 874, 875, 876, 878, 879, 880, 881, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 905, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936], "luessi": [61, 73, 131, 277, 278, 289, 295, 296, 297, 298, 299, 300, 301, 314], "mluessi": [61, 73, 131], "nmr": [61, 69, 73, 131, 141, 181, 243, 320, 338, 342, 346, 436, 894], "mgh": [61, 69, 73, 84, 131, 141, 181, 196, 243, 281, 284, 302, 312, 317, 320, 338, 342, 346, 396, 436, 733, 894, 951], "harvard": [61, 69, 73, 84, 131, 141, 181, 320, 322, 338, 342, 346, 436, 894, 954], "daniel": [61, 66, 72, 84, 85, 119, 236, 273, 277, 279, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 314, 342, 547, 548, 954], "strohmeier": [61, 66, 72, 85, 119, 277, 279, 284, 285, 296, 297, 298, 299, 300, 301, 314, 547, 548], "tu": [61, 66, 72, 85, 119], "ilmenau": [61, 66, 72, 85, 119, 322, 954], "de": [61, 66, 72, 85, 119, 126, 139, 222, 223, 240, 270, 277, 279, 290, 302, 305, 306, 312, 316, 322, 489, 636, 651, 954], "evoked_fnam": [61, 77, 86, 117, 122, 331, 332, 333, 334, 550, 551], "50e": [61, 119, 177, 231], "300e": 61, "xyz_same_gamma": [61, 291, 545], "return_residu": [61, 66, 72, 77, 85, 86, 203, 284, 367, 369, 545, 547, 548, 603], "return_as_dipol": [61, 66, 72, 85, 291, 545, 547, 548], "364": [61, 66, 74, 75, 80, 81, 84, 85, 95, 107, 119, 121, 148, 188, 192, 195, 204, 260, 268], "converg": [61, 66, 72, 85, 198, 205, 232, 285, 305, 320, 545, 603, 636, 793, 804], "055e": 61, "22233": 61, "855e": 61, "20712": 61, "375e": 61, "17166": 61, "061e": 61, "12996": 61, "272e": 61, "10107": 61, "574e": 61, "8307": 61, "319e": 61, "7209": 61, "369e": 61, "6342": 61, "631e": 61, "047e": 61, "5142": 61, "579e": 61, "4692": 61, "199e": 61, "889e": 61, "4002": [61, 255, 320], "634e": 61, "3696": 61, "422e": 61, "3429": 61, "246e": 61, "3153": 61, "099e": 61, "2952": [61, 188], "747e": 61, "2745": 61, "702e": 61, "2559": 61, "817e": 61, "2394": 61, "062e": 61, "2229": 61, "417e": 61, "883e": 61, "711e": 61, "1836": 61, "552e": 61, "400e": 61, "1617": 61, "266e": 61, "1509": 61, "166e": 61, "1440": 61, "066e": 61, "1350": [61, 222], "965e": 61, "1245": 61, "861e": 61, "1200": [61, 223, 251], "754e": 61, "1128": 61, "643e": 61, "1077": [61, 84, 277, 342, 618, 744], "529e": 61, "1017": [61, 277], "410e": 61, "975": 61, "288e": 61, "924": [61, 223], "163e": 61, "873": [61, 260, 263], "036e": 61, "837": [61, 172, 174, 260, 956], "906e": 61, "798": [61, 170, 236], "776e": 61, "644e": 61, "513e": 61, "687": [61, 88], "382e": 61, "660": [61, 107, 208, 214, 219, 221, 956], "253e": 61, "627": [61, 233, 242, 956], "125e": 61, "000e": 61, "588": [61, 223, 260], "877e": 61, "570": [61, 107, 223, 236], "758e": 61, "552": [61, 223, 260], "642e": 61, "528": [61, 169, 223, 236], "495": [61, 108, 175, 180, 250, 255, 956], "421e": 61, "486": [61, 169], "316e": 61, "465": [61, 230], "215e": 61, "441": [61, 136, 277, 636, 669], "118e": 61, "417": [61, 146, 188, 260, 277, 636, 669, 853], "026e": 61, "408": [61, 107, 211, 255], "937e": 61, "402": [61, 107, 170, 236, 255, 260], "853e": 61, "387": [61, 107, 223, 236, 255, 260, 277, 364], "772e": 61, "378": [61, 107, 236, 243, 248, 260, 956], "695e": 61, "348": [61, 195, 229, 260, 281], "622e": 61, "339": [61, 195, 255], "333": [61, 102, 139, 195, 236], "486e": 61, "330": [61, 76, 107, 108, 139, 195, 209, 260, 298], "423e": 61, "306e": 61, "252e": 61, "201e": 61, "152e": 61, "106e": 61, "020e": 61, "807e": 61, "234": [61, 139, 195, 255, 259, 260], "432e": 61, "222": [61, 72, 195, 218, 236, 259, 265], "075e": 61, "735e": 61, "413e": 61, "814e": 61, "198": [61, 195, 210, 255, 259, 260, 265], "536e": 61, "192": [61, 195, 197, 234, 236, 242, 255, 260, 956], "271e": 61, "186": [61, 71, 170, 195, 202, 207, 223, 236, 259], "019e": 61, "779e": 61, "549e": 61, "168": [61, 71, 195, 202, 207, 222, 255, 265], "122e": 61, "159": [61, 71, 92, 141, 175, 195, 223, 259, 260], "922e": 61, "156": [61, 71, 95, 111, 159, 184, 190, 195, 202, 207, 255, 259, 260, 344, 956], "732e": 61, "550e": 61, "138": [61, 86, 192, 195, 197, 223, 236, 259, 260, 277, 299, 344, 641], "896e": 61, "132": [61, 72, 155, 156, 177, 195, 223, 236, 240, 255, 259, 260, 956], "749e": 61, "609e": 61, "126": [61, 195, 236, 255], "345e": 61, "123": [61, 151, 195, 217, 221, 232, 234, 255, 260, 414, 956], "220e": 61, "104": [61, 88, 195, 223, 259, 260, 277, 297, 744], "101e": 61, "117": [61, 88, 123, 171, 195, 223, 277, 280, 815, 818], "986e": 61, "875e": 61, "107": [61, 88, 140, 142, 166, 195, 223, 255, 259, 260, 277, 279], "769e": 61, "667e": 61, "474e": 61, "209e": 61, "127e": 61, "689e": 61, "500e": 61, "441e": 61, "384e": 61, "329e": 61, "127": [61, 195, 223, 236, 259, 260], "275e": 61, "985e": 61, "137": [61, 82, 195, 223, 236, 255, 344, 956], "154": [61, 163, 194, 195, 236, 255, 259, 260], "273e": 61, "247e": 61, "650e": 61, "177": [61, 171, 195, 223, 259, 260, 277, 771, 772, 774, 775], "179": [61, 102, 120, 195, 218, 236, 255, 259, 260, 277, 320, 678], "815e": 61, "524e": 61, "211": [61, 67, 85, 171, 195, 236, 259, 260], "307e": 61, "274e": 61, "042e": 61, "161e": 61, "784e": 61, "169e": 61, "343": [61, 133, 169, 195, 196, 236, 301, 956], "949e": 61, "886e": 61, "857e": 61, "reach": [61, 66, 72, 85, 198, 270, 305, 324, 331, 332, 333, 334, 550, 551, 740, 784, 786, 787, 789, 790, 793, 804, 814, 817, 831, 868, 875, 896], "mri_head_t": [61, 66, 77, 85, 86, 207, 335, 336, 543, 544], "fig_nam": [61, 66, 72, 85, 895], "david": [61, 68, 146, 154, 222, 229, 268, 277, 286, 287, 294, 320, 331, 332, 333, 334, 423, 458, 489, 545, 550, 551, 604, 786, 789, 798, 804, 815, 818, 853], "wipf": [61, 277, 545], "srikantan": [61, 252, 277, 364, 365, 545], "nagarajan": [61, 252, 277, 364, 365, 545], "unifi": [61, 163, 206, 229, 277, 281, 286, 290, 298, 300, 409, 545, 744], "966": [61, 68, 188, 198, 206, 214, 222, 234, 260, 277, 545, 956], "059": [61, 166, 168, 175, 195, 227, 243, 252, 277, 545], "553": [61, 82, 222, 223, 277, 489, 956], "gamma_map_invers": [61, 82, 956], "form": [63, 167, 169, 186, 194, 201, 204, 226, 229, 231, 232, 233, 237, 255, 257, 260, 263, 282, 286, 300, 309, 310, 311, 320, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 403, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 518, 545, 547, 548, 550, 551, 588, 597, 603, 605, 606, 607, 635, 636, 637, 645, 651, 671, 714, 717, 733, 734, 735, 736, 737, 749, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 798, 853, 868, 870, 875, 879, 888, 891, 896, 898, 929, 934, 936], "merg": [63, 167, 244, 245, 281, 284, 288, 292, 297, 306, 309, 310, 326, 331, 333, 334, 422, 525, 570, 601, 725, 733], "christian": [63, 147, 154, 160, 170, 277, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 303, 304, 314, 317, 458, 459, 483, 507, 744], "brodbeck": [63, 147, 160, 277, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 296, 297, 298, 299, 300, 301, 304, 314], "christianbrodbeck": [63, 147, 160], "aud_lh": 63, "aud_rh": 63, "stc_lh": [63, 73], "stc_rh": [63, 73], "stc_bh": 63, "calcul": [63, 64, 84, 107, 128, 134, 139, 155, 170, 176, 177, 184, 188, 192, 196, 202, 206, 215, 222, 228, 229, 232, 234, 239, 243, 255, 256, 260, 269, 281, 282, 284, 285, 286, 288, 290, 291, 292, 293, 294, 298, 299, 301, 302, 319, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 364, 365, 372, 386, 423, 427, 428, 439, 440, 441, 483, 490, 491, 518, 526, 527, 540, 545, 547, 548, 550, 551, 592, 597, 598, 599, 614, 636, 643, 648, 649, 653, 660, 671, 675, 691, 701, 713, 749, 763, 771, 772, 774, 775, 777, 778, 785, 798, 805, 876, 881, 890, 936], "mni": [63, 161, 162, 185, 202, 207, 208, 217, 285, 288, 293, 294, 320, 329, 346, 347, 380, 396, 436, 543, 715, 826, 833, 834, 900], "vtx": 63, "t_lh": 63, "center_of_mass": [63, 251, 282, 337, 342, 747, 750, 955], "mni_lh": 63, "t_rh": 63, "mni_rh": 63, "625": [63, 169, 260], "hl": 63, "hr": 63, "hb": 63, "figlegend": 63, "label_activation_from_stc": [63, 82, 956], "typic": [64, 70, 87, 97, 109, 169, 171, 175, 177, 182, 186, 193, 194, 196, 215, 218, 219, 223, 226, 227, 229, 231, 232, 233, 234, 235, 237, 239, 245, 255, 270, 283, 284, 309, 310, 317, 318, 319, 320, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 346, 347, 364, 365, 380, 381, 399, 411, 413, 423, 427, 428, 429, 431, 490, 501, 507, 526, 536, 539, 550, 551, 616, 635, 636, 638, 646, 651, 672, 682, 685, 695, 733, 755, 769, 770, 771, 772, 774, 775, 784, 788, 834, 874, 883, 887, 889, 936, 942, 948], "anatom": [64, 70, 97, 121, 161, 182, 186, 202, 207, 277, 294, 300, 319, 320, 329, 346, 347, 434, 535, 834, 854, 858, 900], "yield": [64, 166, 168, 171, 175, 177, 181, 187, 197, 206, 219, 230, 232, 243, 244, 270, 287, 293, 317, 318, 319, 320, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 386, 500, 504, 636, 639, 646, 647, 660, 671, 697, 736, 737, 776, 802, 812, 814, 817, 834, 936], "peak": [64, 80, 81, 87, 97, 99, 101, 108, 117, 121, 122, 158, 171, 175, 176, 192, 198, 201, 203, 204, 206, 209, 210, 211, 212, 218, 226, 228, 231, 232, 234, 236, 238, 255, 270, 273, 279, 281, 287, 293, 294, 302, 316, 320, 323, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 428, 618, 636, 638, 641, 648, 649, 653, 654, 660, 661, 662, 664, 665, 666, 680, 741, 770, 784, 836, 866, 871, 873, 874, 875], "banksst": [64, 67, 73], "aparc_label_nam": 64, "stc_mean": 64, "grow": [64, 117, 122, 270, 310, 541, 588, 688, 949], "halt": [64, 168, 303, 329, 331, 332, 333, 334, 336, 542, 550, 551, 636, 786, 787, 789, 790, 864, 866, 883, 889, 892, 948], "parc": [64, 67, 73, 706, 931], "aparc": [64, 67, 73, 95, 117, 121, 122, 154, 161, 181, 202, 207, 251, 287, 319, 329, 338, 339, 342, 345, 346, 347, 455, 517, 535, 590, 706, 721, 834], "regexp": [64, 117, 121, 122, 227, 232, 234, 239, 287, 512, 630, 706], "stc_mean_label": 64, "func_label": 64, "maximum": [64, 73, 74, 76, 84, 109, 142, 146, 177, 202, 203, 207, 208, 228, 229, 232, 243, 274, 277, 284, 291, 293, 298, 300, 302, 305, 319, 320, 326, 331, 332, 333, 334, 338, 339, 342, 344, 345, 346, 347, 364, 365, 394, 411, 434, 491, 516, 517, 520, 541, 545, 547, 548, 550, 551, 588, 596, 603, 612, 613, 618, 636, 638, 653, 656, 666, 669, 670, 724, 749, 771, 772, 774, 775, 780, 784, 791, 792, 793, 794, 795, 796, 797, 798, 800, 802, 804, 812, 815, 818, 834, 836, 860, 865, 871, 874, 894, 899, 900, 907], "anat_label": 64, "stc_anat_label": 64, "pca_anat": 64, "pca_flip": [64, 65, 338, 339, 342, 345, 346, 347, 517], "stc_func_label": 64, "pca_func": 64, "show_view": [64, 74, 136, 143, 161, 186, 207, 217, 238, 252, 265, 274, 293, 294, 303, 308, 338, 339, 342, 345, 346, 347, 834, 894, 899], "add_label": [64, 85, 131, 143, 154, 834], "73227205": 64, "80078852": 64, "62750681": 64, "846": [64, 82, 184, 208, 258, 956], "label_from_stc": [64, 82, 956], "strategi": [65, 223, 226, 232, 234, 235, 277, 422, 434, 488, 500, 547, 744, 804, 868, 936], "simpl": [65, 72, 155, 170, 171, 177, 186, 187, 192, 207, 212, 222, 223, 229, 233, 252, 255, 270, 277, 300, 309, 317, 320, 323, 392, 422, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 568, 637, 802, 812, 884], "patheffect": [65, 186], "path_effect": [65, 186], "label_fnam": 65, "stc_label": 65, "mean_flip": [65, 284, 338, 339, 342, 345, 346, 347, 517], "tc": 65, "pe": 65, "stroke": [65, 186], "foreground": [65, 168, 186, 291, 338, 339, 342, 345, 346, 347, 834, 894, 899], "possibl": [65, 69, 71, 141, 163, 166, 168, 169, 171, 175, 176, 177, 182, 186, 187, 194, 195, 196, 197, 198, 204, 206, 215, 217, 219, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 239, 243, 244, 245, 246, 250, 252, 255, 259, 260, 268, 270, 282, 285, 286, 288, 292, 298, 302, 303, 305, 308, 310, 317, 318, 320, 325, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 394, 423, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 500, 506, 524, 534, 542, 550, 551, 559, 576, 636, 637, 656, 678, 679, 697, 698, 728, 766, 771, 773, 784, 785, 789, 790, 820, 836, 852, 862, 870, 871, 874, 879, 882, 883, 890, 907, 908, 936, 939, 941], "stc_vec": [65, 67, 206], "stc_vec_label": 65, "ee6677": [65, 186, 802, 812], "228833": 65, "4477aa": [65, 802, 812], "xyz": [65, 182, 186, 204, 293, 338, 339, 342, 345, 346, 347, 380, 398, 517, 545, 576, 906], "604": [65, 82, 111, 223, 236, 260, 956], "134": [65, 82, 97, 151, 156, 195, 236, 255, 259, 277, 344, 601, 644, 956], "label_source_activ": [65, 82, 956], "ir": 66, "l0": [66, 547], "sparser": [66, 338, 342, 346, 894], "convex": [66, 72, 85, 277, 291, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "sure": [66, 69, 71, 94, 97, 136, 140, 161, 166, 167, 170, 177, 182, 187, 188, 192, 196, 197, 198, 202, 216, 227, 230, 231, 232, 234, 237, 243, 259, 263, 264, 265, 287, 290, 294, 309, 323, 331, 332, 333, 334, 336, 348, 514, 515, 547, 550, 551, 563, 620, 635, 646, 779, 802, 812, 813, 814, 816, 873, 927, 941, 942, 950], "criterion": [66, 281, 284, 603], "n_mxne_it": [66, 547], "use_cp": [66, 119, 184, 251, 284, 285, 290, 320, 339, 345, 347, 351, 352, 433, 603, 604, 605, 606, 607, 610, 614, 619, 620, 748, 749], "maxit": [66, 85, 545, 547, 548], "3000": [66, 75, 140, 163, 168, 171, 172, 219, 228, 234, 239, 323, 547, 548], "active_set_s": [66, 547], "debia": [66, 85, 547, 548], "slower": [66, 70, 72, 229, 309, 312, 326, 331, 432, 482, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 595, 606, 679], "sure_alpha_grid": [66, 547], "083": [66, 152, 188, 190, 956], "tidx": [66, 207], "7262": [66, 84, 85, 121, 204, 223, 252], "020866": [66, 84, 223], "58122e": [66, 84, 85, 121, 204, 223, 252], "element": [66, 84, 117, 194, 198, 204, 205, 208, 218, 219, 223, 229, 233, 234, 243, 245, 255, 257, 277, 287, 309, 310, 319, 325, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 390, 391, 483, 490, 495, 504, 505, 517, 518, 538, 550, 551, 590, 591, 592, 635, 651, 657, 671, 733, 764, 772, 784, 786, 787, 789, 790, 840, 853, 855, 860, 868, 875, 888, 891, 894, 896, 898, 899, 900, 937, 948], "21995": 66, "82623e": 66, "360": [66, 74, 75, 80, 81, 82, 84, 85, 107, 108, 120, 121, 148, 178, 188, 195, 198, 204, 218, 223, 236, 255, 269], "warm": 66, "33333333333333": 66, "66666666666667": 66, "66666666666666": 66, "666666666666664": 66, "60279": 66, "6036917851": 66, "59855": 66, "33381591424": 66, "60434": 66, "8708663271": 66, "60386": 66, "806545232204": 66, "60336": 66, "58240550615": 66, "60303": 66, "83155507343": 66, "60157": 66, "01344242948": 66, "59974": 66, "675255708076": 66, "59597": 66, "869136565314": 66, "59084": 66, "52688073421": 66, "subject_from": [66, 69, 70, 206, 316, 337, 343, 429, 622, 623, 708, 720, 721, 722, 723], "stc_fsaverag": [66, 69, 70, 316], "src_fsaverage_fnam": 66, "src_fsaverag": 66, "matthieu": [66, 85, 277, 547, 548], "kowalski": [66, 85, 277, 547, 548], "acceler": [66, 277, 294, 320, 547, 936, 948], "gradient": [66, 146, 239, 277, 282, 294, 306, 326, 331, 332, 333, 334, 336, 547, 549, 550, 551, 598, 636, 650, 784, 786, 787, 788, 789, 790, 853], "physic": [66, 182, 186, 196, 202, 204, 216, 237, 277, 306, 319, 320, 333, 334, 336, 504, 516, 547, 550, 551, 603, 647, 660, 671, 870], "medicin": [66, 109, 202, 237, 277, 320, 547, 636, 671], "biologi": [66, 109, 202, 237, 277, 320, 547, 636, 671], "1961": [66, 277, 547], "2012": [66, 85, 177, 195, 229, 255, 277, 313, 337, 342, 349, 423, 547, 548, 777, 778], "1088": [66, 202, 222, 235, 237, 277, 320, 331, 332, 333, 334, 489, 547, 550, 551, 671, 728], "0031": [66, 202, 237, 277, 320, 547, 671], "9155": [66, 202, 237, 277, 320, 547, 671], "jen": [66, 72, 85, 277, 285, 286, 547, 548], "haueisen": [66, 72, 85, 277, 547, 548], "improv": [66, 97, 170, 222, 223, 231, 234, 239, 277, 280, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 316, 318, 331, 332, 333, 334, 373, 410, 412, 416, 440, 441, 485, 494, 519, 521, 522, 523, 550, 551, 614, 637, 679, 682, 741, 746, 814, 817, 936], "prni": [66, 72, 277, 548], "t\u00fcbingen": [66, 277], "6858545": [66, 277], "charl": [66, 70, 277, 343, 429, 547], "alban": [66, 277, 547], "deledal": [66, 277, 547], "samuel": [66, 121, 122, 277, 287, 303, 306, 307, 547], "vaiter": [66, 277, 547], "jalal": [66, 277, 547], "fadili": [66, 277, 547], "peyr\u00e9": [66, 277, 547], "stein": [66, 277, 547], "unbias": [66, 277, 547], "risk": [66, 207, 229, 232, 259, 277, 331, 332, 333, 334, 547, 550, 551, 660, 834], "sugar": [66, 277, 547], "siam": [66, 277, 547], "journal": [66, 69, 97, 98, 101, 146, 183, 223, 229, 237, 260, 268, 277, 314, 331, 332, 333, 334, 343, 423, 429, 503, 504, 547, 550, 551, 636, 644, 645, 647, 671, 744, 771, 772, 774, 775, 786, 789, 798, 802, 804, 812, 813, 815, 816, 818, 853], "2448": [66, 277, 547], "2487": [66, 277, 547], "1137": [66, 223, 236, 277, 547], "140968045": [66, 277, 547], "mixed_norm_invers": [66, 82, 956], "annalisa": [67, 283, 285], "pascarella": [67, 283, 285], "iac": 67, "cnr": 67, "dir": [67, 197, 320, 323, 834], "data_dir": [67, 83, 160, 170], "bem_dir": [67, 71, 136, 185, 187, 208], "fname_mixed_src": 67, "fname_aseg": [67, 207], "fname_model": 67, "_audvi": 67, "_audvis_raw": [67, 183], "substructur": 67, "labels_vol": 67, "amygdala": 67, "thalamu": 67, "proper": [67, 97, 255, 270, 282, 284, 291, 301, 302, 306, 309, 312, 317, 332, 333, 334, 337, 364, 365, 423, 427, 428, 434, 439, 440, 441, 443, 483, 490, 526, 527, 545, 547, 548, 551, 614, 847, 876], "stem": [67, 99, 342, 346, 558, 579], "oct6": [67, 136, 184, 316, 323, 338, 342, 346, 723, 732, 894], "oct5": [67, 136, 316], "1026": [67, 136, 316], "bound": [67, 184, 274, 280, 281, 291, 304, 308, 320, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 490, 507, 527, 550, 551, 635, 636, 733, 784, 785, 786, 787, 789, 790, 804, 822, 834, 845, 851, 853, 855, 860, 868, 875, 879, 888, 889, 890, 891, 894, 896, 898, 899, 900, 904, 907], "10mm": 67, "someth": [67, 175, 187, 197, 198, 218, 229, 234, 235, 243, 273, 293, 308, 309, 319, 338, 339, 342, 345, 346, 347, 787, 790, 834, 835, 894, 899, 941, 942, 945, 946, 949], "vol_src": [67, 161, 184], "add_interpol": [67, 76, 184, 733], "usual": [67, 76, 97, 109, 139, 141, 149, 166, 169, 171, 175, 176, 177, 181, 182, 186, 187, 192, 193, 194, 196, 198, 206, 209, 215, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 263, 265, 268, 269, 307, 309, 319, 320, 323, 329, 330, 331, 332, 333, 334, 335, 336, 344, 371, 393, 398, 403, 405, 407, 534, 550, 551, 576, 749, 771, 772, 774, 775, 936, 943, 945, 948, 950], "nuse": [67, 336, 344], "2562": [67, 136, 176, 184, 274, 316], "node": [67, 73, 184, 300, 758, 759, 760, 840], "2961": 67, "346": [67, 139, 170, 195, 255], "1275": 67, "2615": 67, "1340": 67, "1589": 67, "730": [67, 107], "1372": 67, "1306": [67, 236], "010000": [67, 182], "2169": 67, "again": [67, 167, 168, 170, 176, 177, 181, 182, 187, 198, 223, 226, 227, 229, 231, 232, 233, 234, 243, 255, 260, 270, 302, 303, 306, 310, 320, 331, 332, 333, 334, 341, 550, 551, 636, 679, 887, 927, 942], "plot_img": 67, "nipy_spectr": 67, "exist": [67, 70, 126, 128, 166, 169, 175, 176, 182, 187, 196, 197, 198, 202, 206, 228, 229, 230, 233, 234, 235, 245, 250, 255, 257, 273, 274, 284, 285, 286, 287, 288, 290, 291, 294, 298, 299, 302, 309, 310, 312, 316, 317, 323, 325, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 355, 375, 376, 377, 380, 381, 442, 447, 448, 449, 450, 452, 453, 454, 456, 457, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 505, 509, 513, 514, 515, 516, 518, 535, 550, 551, 552, 566, 570, 586, 621, 623, 625, 635, 636, 639, 646, 672, 691, 701, 721, 722, 725, 728, 729, 730, 734, 736, 737, 754, 755, 758, 784, 785, 786, 787, 788, 789, 790, 819, 821, 822, 834, 859, 875, 890, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 939, 950], "5mm": [67, 110, 161, 503, 834], "innerskul": 67, "815": [67, 236], "554": [67, 223, 260], "807": [67, 236], "6003": 67, "inv_method": [67, 117], "a2009": [67, 121, 161, 181, 202, 338, 339, 342, 345, 346, 347, 517, 590, 706], "39266": 67, "01344e": 67, "coron": [67, 161, 184, 186, 206, 329, 834, 854, 864], "silhouett": [67, 206, 207, 293, 338, 339, 342, 345, 346, 347, 834, 894, 899], "43101017": 67, "98225664": 67, "7504814": 67, "45409596": 67, "02821047": 67, "97219252": 67, "vox": [67, 186, 206, 207, 208], "2045": 67, "21567156": 67, "47889133": 67, "39837939": 67, "labels_parc": 67, "label_t": 67, "allow_empti": [67, 338, 339, 342, 345, 346, 347, 517], "nam": [67, 120, 121, 122, 209, 210, 212, 252, 283, 290, 750], "mixed_source_space_invers": [67, 82, 956], "computation": [68, 198, 229, 232, 233, 320, 679], "sabbagh": [68, 277, 286, 604], "pierr": [68, 103, 232, 277, 285, 294, 604, 636], "ablin": [68, 103, 232, 277, 285, 604, 636], "ga\u00ebl": [68, 277, 604], "varoquaux": [68, 277, 604], "state": [68, 117, 120, 136, 154, 166, 188, 192, 194, 201, 226, 227, 234, 235, 244, 255, 270, 277, 279, 286, 301, 309, 310, 312, 319, 320, 324, 326, 331, 332, 418, 507, 547, 567, 588, 595, 604, 636, 669, 688, 689, 694, 695, 736, 737, 738, 747, 748, 750, 771, 772, 773, 774, 775, 784, 786, 787, 788, 834, 879, 941, 950], "2020": [68, 101, 170, 183, 255, 277, 313, 317, 459, 604, 636], "116893": [68, 277, 604], "alexand": [68, 239, 277, 280, 282, 283, 284, 287, 305, 306, 317, 650], "captur": [68, 72, 163, 170, 192, 209, 210, 223, 231, 232, 233, 234, 235, 301, 319, 336, 341, 527, 635, 648, 649, 653, 685, 686], "environ": [68, 69, 70, 181, 198, 201, 274, 291, 293, 303, 304, 306, 316, 320, 329, 337, 338, 339, 341, 342, 344, 345, 346, 347, 371, 375, 376, 377, 380, 429, 434, 435, 436, 442, 447, 448, 449, 450, 452, 453, 454, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 502, 531, 533, 535, 539, 541, 542, 543, 544, 588, 592, 594, 622, 623, 667, 688, 706, 708, 715, 720, 721, 722, 723, 727, 730, 732, 733, 747, 750, 761, 779, 780, 826, 833, 834, 852, 854, 864, 894, 899, 900, 902, 931, 936, 941, 942, 945, 946, 947, 948, 950], "raw_empty_room_fnam": [68, 188], "ernoise_raw": [68, 188, 198, 234], "raw_empty_room": [68, 188], "19800": [68, 188, 198, 234], "85867": [68, 188, 198, 234], "965": [68, 149, 156, 188, 198, 200, 234, 258, 956], "18000": 68, "658": [68, 223, 260], "319": [68, 75, 82, 99, 100, 126, 139, 167, 178, 180, 192, 195, 203, 206, 223, 228, 277, 636, 956], "environment": [68, 192, 226, 230, 233, 235, 237, 243, 245, 246, 316], "rest": [68, 97, 100, 136, 154, 163, 166, 188, 192, 194, 195, 244, 277, 286, 291, 309, 310, 319, 321, 331, 332, 333, 334, 342, 443, 463, 550, 551, 728, 737], "base_cov": 68, "data_cov": [68, 206, 361, 365], "fig_noise_cov": 68, "show_svd": [68, 91, 328, 861], "fig_base_cov": 68, "fig_data_cov": 68, "1680": [68, 222], "_cov": 68, "_kw": 68, "7265": [68, 203, 205], "037795": [68, 203], "52065e": [68, 203, 205], "40105": 68, "62956e": 68, "stc_data": [68, 121, 751], "11870454": 68, "45629497": 68, "03742168": 68, "870": [68, 82, 107, 277, 768, 956], "mne_cov_pow": [68, 82, 956], "pre": [69, 75, 166, 167, 188, 192, 206, 228, 229, 232, 243, 250, 288, 291, 298, 300, 309, 331, 332, 333, 334, 423, 550, 551, 636, 725, 728, 943, 947, 952], "surfer": [69, 181, 320, 338, 342, 346, 436, 834, 894], "fswiki": [69, 181, 320, 338, 342, 346, 436, 894], "surfaceregandtempl": 69, "depict": [69, 320, 333, 334, 339, 345, 347, 876, 899], "success": [69, 170, 309, 323, 331, 332, 338, 339, 342, 343, 345, 346, 347, 429, 548, 612, 613, 669, 734, 771, 772, 774, 775, 786, 787, 788, 801, 809, 824, 857], "inflat": [69, 74, 75, 80, 81, 85, 87, 154, 161, 177, 201, 218, 277, 290, 293, 306, 320, 338, 342, 346, 482, 834, 852, 894, 948], "overlaid": [69, 70, 162, 198, 290, 320, 323, 733], "tommi": [69, 70, 285, 286], "clausner": [69, 70, 285, 286], "sample_dir": [69, 70, 143, 184, 198, 201], "fname_src": [69, 161, 185, 208], "fname_fsaverage_src": 69, "fname_stc": [69, 201, 207, 273], "repres": [69, 97, 101, 107, 142, 146, 166, 167, 168, 169, 170, 175, 177, 182, 184, 187, 188, 192, 194, 195, 196, 197, 201, 216, 222, 229, 232, 246, 277, 286, 297, 302, 309, 316, 319, 320, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 344, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 517, 526, 527, 545, 547, 548, 550, 551, 567, 573, 576, 588, 602, 614, 636, 651, 684, 695, 697, 772, 784, 787, 788, 790, 834, 853, 876, 879, 881, 883, 894, 895, 899, 936], "itself": [69, 97, 169, 177, 186, 198, 215, 229, 232, 233, 234, 245, 255, 307, 309, 320, 325, 331, 332, 337, 342, 345, 375, 516, 550, 551, 623, 834, 936, 941], "proxim": [69, 161, 294, 335, 779], "src_orig": [69, 342, 345], "3732": [69, 201], "3766": [69, 255], "src_to": [69, 70, 206, 290, 291, 292, 429], "argument": [69, 70, 147, 177, 181, 187, 188, 195, 196, 198, 206, 215, 216, 217, 218, 219, 228, 229, 230, 233, 237, 240, 243, 255, 259, 265, 269, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 316, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 387, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 631, 632, 636, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 732, 733, 735, 736, 737, 738, 748, 749, 752, 754, 755, 756, 757, 758, 759, 760, 766, 771, 772, 773, 774, 775, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 804, 805, 808, 809, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 829, 830, 831, 832, 833, 834, 835, 836, 843, 851, 852, 856, 858, 861, 864, 867, 868, 869, 870, 871, 873, 876, 879, 880, 881, 886, 887, 888, 889, 890, 892, 893, 894, 895, 897, 899, 900, 901, 905, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935], "special": [69, 186, 195, 233, 243, 270, 274, 287, 310, 312, 320, 441, 559, 566, 946], "alwai": [69, 100, 169, 170, 175, 177, 186, 193, 194, 195, 201, 217, 226, 228, 229, 230, 231, 232, 233, 234, 235, 243, 250, 255, 270, 279, 286, 288, 290, 292, 293, 294, 301, 304, 306, 307, 308, 309, 319, 320, 329, 331, 332, 336, 338, 339, 341, 342, 344, 345, 346, 347, 386, 507, 517, 585, 636, 660, 701, 703, 771, 785, 843, 854, 864, 865, 895, 897, 906, 928, 939], "10239": 69, "10240": 69, "10241": 69, "give": [69, 70, 85, 97, 101, 122, 168, 178, 187, 194, 197, 206, 208, 223, 227, 229, 230, 233, 255, 284, 292, 309, 310, 316, 319, 320, 323, 328, 331, 332, 333, 334, 336, 340, 344, 380, 483, 484, 485, 490, 494, 499, 500, 504, 519, 521, 522, 526, 547, 548, 550, 551, 567, 635, 636, 651, 660, 671, 689, 695, 770, 771, 772, 774, 775, 783, 784, 786, 787, 789, 790, 798, 802, 812, 834, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898, 936, 941, 948], "surfer_kwarg": [69, 201, 203], "brain_inf": 69, "under": [69, 70, 87, 169, 170, 188, 216, 223, 226, 229, 233, 251, 255, 257, 263, 273, 281, 284, 294, 303, 307, 308, 309, 310, 312, 316, 320, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 380, 392, 423, 424, 426, 428, 447, 448, 449, 450, 452, 453, 454, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 563, 571, 594, 597, 598, 609, 610, 619, 620, 641, 648, 649, 651, 679, 696, 700, 732, 733, 735, 736, 737, 745, 749, 769, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 836, 868, 871, 890, 947], "h5": [69, 70, 198, 206, 252, 286, 291, 335, 338, 339, 341, 342, 343, 345, 346, 347, 355, 635, 681, 703, 784, 785, 788, 806, 808, 819, 923, 924, 928], "respect": [69, 70, 73, 81, 95, 98, 117, 158, 166, 170, 177, 182, 185, 194, 195, 198, 201, 215, 223, 227, 229, 232, 233, 235, 236, 243, 244, 260, 287, 288, 291, 292, 293, 294, 302, 303, 304, 305, 306, 308, 309, 316, 320, 326, 328, 331, 332, 333, 334, 340, 341, 342, 346, 347, 364, 365, 366, 403, 423, 427, 428, 434, 439, 440, 441, 483, 485, 490, 494, 507, 519, 521, 526, 527, 545, 547, 548, 550, 551, 557, 576, 588, 591, 599, 614, 635, 636, 637, 638, 640, 651, 653, 689, 697, 733, 741, 744, 746, 752, 772, 784, 786, 787, 789, 790, 805, 813, 814, 816, 817, 834, 836, 852, 853, 857, 860, 866, 868, 870, 871, 875, 876, 879, 880, 883, 888, 889, 891, 896, 898, 900, 936, 945, 948], "my": [69, 70, 198, 208, 250], "further": [69, 167, 177, 183, 192, 194, 204, 215, 223, 228, 232, 234, 237, 243, 255, 260, 265, 270, 292, 303, 310, 318, 320, 331, 332, 356, 358, 388, 434, 636, 640, 771, 772, 774, 775, 788, 851, 867, 952], "assign": [69, 71, 128, 130, 147, 162, 166, 169, 170, 177, 187, 194, 196, 201, 204, 215, 216, 219, 234, 237, 244, 250, 280, 285, 291, 302, 303, 316, 320, 325, 331, 336, 341, 344, 541, 559, 563, 566, 568, 574, 576, 588, 597, 636, 653, 654, 661, 662, 664, 665, 693, 727, 834, 858, 931], "chain": [69, 193, 223, 227, 243, 318, 320, 489], "handi": [69, 217, 232, 274], "liner": 69, "shortest": [69, 182, 229, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551, 641], "dougla": [69, 277, 343, 429], "greve": [69, 277, 343, 429], "lise": [69, 277, 343, 429], "der": [69, 277, 286, 291, 320, 343, 429], "haegen": [69, 277, 343, 429], "qing": [69, 277, 343, 429], "cai": [69, 277, 343, 429], "steven": [69, 84, 154, 170, 177, 229, 277, 286, 291, 293, 317, 342, 343, 429, 483, 614, 741, 746], "stufflebeam": [69, 84, 154, 277, 342, 343, 429, 614, 618, 741, 744, 746], "mert": [69, 277, 343, 429], "sabuncu": [69, 277, 343, 429], "bruce": [69, 121, 181, 277, 320, 343, 429, 603], "fischl": [69, 121, 181, 277, 320, 343, 429, 603], "marc": [69, 277, 343, 429], "brysbaert": [69, 277, 343, 429], "languag": [69, 177, 198, 229, 259, 265, 277, 287, 328, 331, 332, 333, 334, 340, 341, 343, 429, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 868, 875, 879, 888, 891, 896, 938, 946], "asymmetri": [69, 277, 343, 429], "1477": [69, 277, 343, 429], "1492": [69, 236, 277, 316, 343, 429], "1162": [69, 277, 343, 429, 636], "jocn_a_00405": [69, 277, 343, 429], "morph_surface_stc": [69, 82, 956], "symmetr": [70, 229, 277, 294, 305, 331, 332, 333, 334, 338, 339, 342, 343, 345, 346, 347, 429, 518, 519, 521, 522, 550, 551, 668, 771, 772, 774, 775, 785, 798, 822, 823, 824, 834, 855, 894, 899, 900], "diffeomorph": [70, 277, 294, 343, 429, 668, 822, 823, 824], "sdr": [70, 206, 291, 343, 429, 668, 822, 823, 824], "afterward": [70, 175, 292, 303, 331, 332, 333, 334, 550, 551, 728, 748], "nibabel": [70, 182, 186, 197, 208, 303, 309, 320, 344, 543, 544, 666, 834, 942], "plot_glass_brain": [70, 208], "sample_dir_raw": [70, 201], "fname_t1_fsaverag": 70, "ensur": [70, 71, 109, 139, 170, 175, 185, 187, 188, 206, 229, 230, 233, 235, 237, 238, 252, 282, 288, 290, 292, 293, 294, 309, 310, 312, 320, 328, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 388, 410, 423, 517, 518, 550, 551, 552, 570, 600, 627, 628, 629, 639, 671, 672, 703, 784, 785, 786, 787, 788, 789, 790, 802, 803, 812, 829, 941, 950], "fname_src_fsaverag": 70, "root": [70, 108, 161, 162, 175, 176, 177, 185, 198, 206, 217, 252, 282, 290, 309, 320, 328, 333, 334, 338, 339, 342, 345, 346, 347, 364, 365, 450, 456, 475, 861, 870], "txt": [70, 161, 185, 206, 209, 244, 245, 286, 297, 309, 325, 398, 407, 456, 554, 558, 576, 689, 697, 698, 926, 936], "zoom": [70, 97, 177, 186, 206, 232, 234, 274, 292, 293, 302, 343, 429, 824], "reslic": [70, 206, 429, 824], "isotrop": [70, 320], "niter_affin": [70, 206, 294, 343, 429], "niter_sdr": [70, 206, 294, 343, 429], "999999888241291": 70, "translat": [70, 161, 182, 186, 206, 212, 216, 237, 263, 280, 285, 323, 331, 332, 333, 334, 419, 434, 483, 490, 504, 562, 636, 640, 671, 784, 824, 834, 852, 867, 872, 875, 880, 883], "optim": [70, 85, 108, 168, 183, 186, 188, 205, 206, 228, 229, 232, 237, 255, 263, 264, 265, 277, 286, 291, 294, 298, 319, 333, 334, 337, 423, 483, 526, 547, 550, 551, 636, 646, 671, 761, 815, 818, 824, 936], "r\u00b2": [70, 206], "rigid": [70, 206, 239, 824], "compute_vol_morph_mat": [70, 292, 343, 429], "equival": [70, 161, 167, 176, 182, 184, 186, 188, 191, 197, 213, 214, 216, 229, 232, 235, 251, 255, 268, 279, 282, 304, 309, 312, 316, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 345, 346, 347, 364, 365, 380, 422, 483, 489, 490, 523, 526, 527, 545, 547, 548, 550, 551, 597, 603, 614, 635, 636, 639, 641, 651, 660, 701, 730, 748, 771, 784, 786, 787, 789, 790, 802, 812, 816, 817, 824, 834, 852, 853, 860, 866, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 894, 896, 898, 899, 936, 939, 956], "reus": [70, 101, 163, 320, 333, 334, 784, 872], "exce": [70, 255, 290, 326, 331, 332, 333, 334, 410, 412, 483, 490, 550, 551, 638, 641, 653, 771, 813, 816, 875, 889], "thousand": [70, 128, 233, 256, 277, 293, 317, 429, 464], "nifti1": [70, 343, 346, 347], "img_fsaverag": 70, "t1_fsaverag": 70, "plot_anat": [70, 202], "draw_cross": 70, "overlai": [70, 181, 186, 198, 206, 232, 283, 333, 334, 338, 339, 342, 345, 346, 347, 636, 834, 836, 871, 880, 894, 899], "add_overlai": [70, 834], "brian": [70, 222, 277, 320, 343, 429, 489], "avant": [70, 277, 343, 429], "epstein": [70, 277, 343, 429], "murrai": [70, 177, 277, 343, 429], "grossman": [70, 277, 343, 429], "jame": [70, 229, 277, 343, 429], "gee": [70, 277, 343, 429], "autom": [70, 109, 140, 148, 170, 182, 188, 189, 190, 191, 192, 197, 226, 227, 228, 231, 232, 237, 277, 286, 287, 288, 298, 299, 300, 301, 312, 320, 323, 333, 334, 336, 343, 423, 429, 434, 459, 556, 722, 731, 852, 876, 904, 936, 950, 956], "elderli": [70, 277, 343, 429], "neurodegen": [70, 277, 343, 429], "medic": [70, 85, 233, 234, 277, 320, 322, 343, 429, 547, 548, 603, 954], "media": [70, 277, 343, 429], "2007": [70, 206, 260, 277, 343, 429, 545, 636, 771, 772, 774, 775, 815, 818], "897": [70, 82, 133, 140, 956], "856": [70, 82, 956], "morph_volume_stc": [70, 82, 956], "megin": [71, 182, 288, 308, 671], "program": [71, 177, 187, 198, 309, 320, 323, 329, 331, 332, 333, 334, 336, 341, 375, 542, 550, 551, 636, 786, 787, 789, 790, 864, 866, 883, 889, 892, 938, 946, 948, 949], "offer": [71, 207, 223, 229, 235, 252, 255, 256, 287, 309, 312, 324, 325, 834, 939, 947], "guid": [71, 181, 293, 310, 311, 321, 336, 941, 946], "ecd": [71, 191, 213, 214, 303, 319, 329, 330, 333, 334, 335, 336, 346, 422, 526, 597, 701, 748, 956], "manual": [71, 109, 147, 163, 168, 175, 177, 182, 183, 186, 187, 188, 198, 208, 215, 217, 219, 226, 227, 228, 230, 233, 237, 273, 277, 282, 285, 287, 291, 302, 303, 317, 320, 324, 327, 336, 337, 386, 396, 423, 445, 504, 518, 636, 646, 647, 660, 671, 672, 724, 936, 948], "advantag": [71, 140, 163, 176, 177, 193, 194, 229, 231, 232, 235, 239, 255, 270, 941, 950], "graphic": [71, 181, 216, 287, 291, 301, 309, 317, 331, 332, 341, 550, 551, 636, 866, 883, 889, 941, 946, 948, 949], "everyth": [71, 131, 139, 161, 185, 186, 195, 204, 208, 218, 229, 243, 273, 309, 317, 318, 333, 334, 874, 936, 941, 944], "audvi": [71, 317], "evoked_left": [71, 238], "evoked_right": [71, 238], "09989760657919393": [71, 88], "80m": 71, "picks_left": 71, "evoked_fit_left": 71, "cov_fit_left": 71, "picks_right": 71, "evoked_fit_right": 71, "cov_fit_right": 71, "sss": [71, 188, 191, 226, 236, 241, 242, 280, 286, 291, 293, 294, 320, 331, 332, 333, 334, 336, 410, 412, 416, 417, 420, 441, 504, 550, 551, 572, 636, 647, 660, 671, 701, 866, 870, 878, 889, 936, 956], "normalize_proj": [71, 281, 336], "dip_left": 71, "dip_right": 71, "38720": [71, 208], "900": [71, 107, 202, 207], "354": [71, 107, 195, 202, 207, 255], "195": [71, 192, 195, 202, 207, 212, 236, 255, 259, 260, 277], "9828": [71, 294], "152": [71, 133, 195, 217, 236, 259, 260, 269, 344], "149": [71, 195, 207, 236, 255, 260, 344], "9733": 71, "prevent": [71, 97, 147, 227, 237, 280, 282, 284, 290, 291, 294, 302, 303, 304, 305, 323, 588, 641, 666, 671, 749], "lambda": [71, 94, 127, 139, 171, 223, 238, 251, 270, 320, 328, 331, 332, 333, 334, 340, 382, 483, 490, 550, 551, 611, 635, 636, 651, 750, 784, 786, 787, 789, 790, 853, 860, 867, 875, 879, 888, 891, 896], "fulli": [71, 101, 198, 228, 230, 255, 259, 279, 284, 312, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 388, 550, 551, 552, 765, 834, 855, 894, 899, 900], "stc_left": 71, "stc_right": 71, "sharei": [71, 100, 140, 141, 222, 234, 270], "supylabel": 71, "meter": [71, 107, 120, 121, 177, 182, 183, 186, 196, 202, 208, 219, 234, 240, 250, 282, 305, 320, 323, 328, 329, 331, 332, 333, 334, 336, 337, 340, 349, 380, 396, 405, 434, 483, 490, 504, 550, 551, 567, 576, 594, 635, 636, 640, 645, 646, 647, 651, 656, 658, 660, 671, 676, 677, 684, 695, 705, 733, 779, 784, 786, 787, 789, 790, 834, 853, 860, 864, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "kb": [71, 76, 163, 169, 202, 207, 235, 250], "7064": 71, "97954e": 71, "stcs_left": 71, "stcs_right": 71, "90m": 71, "amplitudes_left": 71, "amplitudes_right": 71, "vstack": [71, 142, 162, 167, 210, 252], "ampltud": 71, "n_left": 71, "mean_left": 71, "mean_right": 71, "transition_point": 71, "c0": [71, 177, 233], "c1": [71, 97, 139, 177, 233], "text": [71, 95, 161, 168, 177, 186, 203, 209, 215, 216, 218, 219, 229, 230, 233, 234, 244, 245, 255, 270, 273, 282, 290, 291, 307, 309, 316, 320, 323, 331, 332, 344, 400, 550, 551, 576, 698, 749, 834, 926, 946], "867": [71, 82, 206, 260, 277, 364, 365, 956], "608": [71, 82, 203, 956], "multi_dipole_model": [71, 82, 956], "promot": [72, 85], "focal": [72, 85, 109, 206, 291, 636, 834, 904], "assum": [72, 85, 90, 120, 121, 142, 151, 161, 167, 170, 177, 184, 186, 191, 198, 208, 215, 216, 219, 228, 229, 232, 239, 245, 255, 257, 259, 270, 293, 294, 304, 307, 309, 319, 320, 323, 325, 328, 329, 331, 332, 333, 334, 336, 337, 340, 344, 364, 365, 371, 372, 375, 380, 393, 405, 423, 427, 428, 434, 439, 440, 441, 443, 483, 490, 502, 510, 518, 524, 525, 526, 527, 533, 545, 547, 548, 550, 551, 558, 559, 566, 583, 594, 598, 606, 614, 635, 636, 650, 651, 691, 698, 717, 720, 722, 733, 749, 771, 772, 774, 775, 778, 779, 784, 786, 787, 788, 789, 790, 822, 834, 852, 853, 860, 868, 870, 872, 875, 876, 877, 878, 879, 886, 888, 890, 891, 892, 896, 898, 929, 939, 950], "stationar": [72, 85, 522, 550, 551], "properti": [72, 85, 101, 128, 141, 169, 187, 198, 216, 222, 227, 232, 233, 243, 246, 273, 282, 283, 286, 287, 290, 291, 292, 305, 324, 325, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 370, 434, 482, 550, 551, 602, 622, 636, 653, 654, 672, 734, 749, 766, 784, 785, 786, 787, 788, 789, 790, 821, 834, 837, 855, 864, 866, 870, 876, 877, 879, 881, 889, 894, 899, 900, 907, 908, 909, 910, 911, 912, 913, 939], "bias": [72, 97, 177, 192, 206, 227, 229, 234, 240, 259, 277, 290, 527], "short": [72, 85, 92, 108, 130, 139, 141, 162, 163, 166, 186, 194, 198, 226, 229, 233, 234, 236, 238, 245, 256, 268, 270, 273, 277, 279, 281, 282, 294, 298, 309, 317, 319, 320, 321, 331, 332, 333, 334, 550, 551, 568, 676, 679, 786, 789, 791, 794, 801, 802, 805, 809, 812], "transient": [72, 108, 226, 237, 270, 641], "mathurin": [72, 277, 283, 284, 285, 290], "massia": [72, 277, 283, 284, 285, 290], "yousra": [72, 77, 120, 154, 277, 279, 281, 284, 298, 299, 301, 547, 548], "bekhti": [72, 77, 120, 154, 277, 279, 281, 284, 298, 299, 301, 547, 548], "350e": [72, 140, 269], "49948803289596966": 72, "16610": 72, "multidict": 72, "l1_ratio": [72, 85, 285, 548], "wsize": [72, 85, 548, 801, 809, 810], "n_tfmxne_it": [72, 548], "dgap": [72, 85], "89e": 72, "p_obj": [72, 85], "000835": 72, "d_obj": [72, 85], "190": [72, 85, 102, 107, 143, 195, 210, 212, 236, 260, 277, 771, 772, 774, 775], "083203": 72, "n_activ": [72, 85, 237, 417], "247": [72, 133, 139, 195, 239, 277, 317, 956], "27e": 72, "253": [72, 195, 236, 255, 277], "327890": 72, "582652": 72, "53e": 72, "707285": 72, "182101": 72, "18e": 72, "589468": 72, "408712": 72, "82e": 72, "243688": 72, "420556": 72, "67e": [72, 85], "094971": 72, "57e": 72, "991067": 72, "49e": [72, 85], "936498": 72, "442467": 72, "08e": 72, "906871": 72, "829870": 72, "70e": 72, "887205": 72, "017223": 72, "24e": 72, "872107": 72, "148583": 72, "11e": 72, "762424": 72, "94e": 72, "854012": 72, "259629": 72, "867870": 72, "46e": 72, "043596": 72, "270": [72, 107, 139, 195, 218, 255, 260, 279], "587841": 72, "87e": 72, "722230": 72, "272": [72, 139, 146, 195, 197, 236, 255, 267, 277, 741, 746], "856399": 72, "29e": 72, "678013": 72, "849283": 72, "966495": 72, "73e": 72, "239": [72, 95, 107, 108, 184, 195, 218, 230, 236, 259, 260], "215341": 72, "236": [72, 195, 214, 223, 236, 259, 956], "481796": 72, "17e": 72, "095509": 72, "238": [72, 195, 236, 256], "178504": 72, "77e": 72, "068507": 72, "591286": 72, "546285": 72, "06e": 72, "133013": 72, "826666": 72, "194637": 72, "debias": [72, 85], "551": [72, 141, 223, 260], "d0": [72, 85], "235946e": 72, "000000e": [72, 85], "irtf": 72, "2015": [72, 98, 126, 128, 140, 148, 188, 229, 232, 256, 270, 277, 313, 317, 333, 334, 423, 459, 464, 503, 645, 770, 815, 818, 876, 936], "intern": [72, 97, 98, 109, 159, 162, 186, 194, 196, 209, 217, 219, 227, 234, 237, 257, 273, 277, 280, 287, 291, 308, 309, 331, 332, 333, 334, 380, 423, 428, 434, 460, 483, 504, 550, 551, 566, 572, 633, 636, 644, 645, 646, 647, 660, 671, 701, 770, 771, 784, 785, 786, 787, 788, 789, 790, 834, 882], "workshop": [72, 277, 483], "roland": [72, 277, 548], "badeau": [72, 277, 548], "trento": [72, 277, 548], "7552337": [72, 277, 548], "912": [72, 82, 236, 260, 956], "352": [72, 96, 107, 195, 197, 223, 236, 255], "multidict_reweighted_tfmxn": [72, 82, 956], "plane": [73, 182, 196, 233, 257, 260, 269, 319, 320, 503, 737, 814, 817, 854], "olaf": [73, 74, 75, 76, 80, 81, 128, 277, 290, 291, 292, 300, 304, 618, 741, 746], "hauk": [73, 74, 75, 76, 80, 81, 128, 277, 290, 291, 292, 300, 304, 618, 741, 746], "mrc": [73, 74, 75, 76, 80, 81, 320], "cbu": [73, 74, 75, 76, 80, 81, 320], "cam": [73, 74, 75, 76, 80, 81, 320], "ac": [73, 74, 75, 76, 80, 81, 217, 226, 230, 277, 319, 320, 423, 441], "uk": [73, 74, 75, 76, 80, 81, 277, 320, 423], "rougier": 73, "borrow": [73, 259, 265], "hi": [73, 323], "plot_connectivity_circl": [73, 858], "rm_mne": [73, 80], "n_label": [73, 251, 338, 339, 342, 345, 346, 347, 517, 590, 619, 620, 751], "label_color": [73, 536], "lh_label": [73, 834], "endswith": [73, 196], "label_ypo": 73, "ypo": 73, "yp": 73, "rh_label": [73, 834], "summaris": [73, 239], "five": [73, 168, 176, 197, 209, 236, 246, 277, 320, 410, 550, 551, 636, 813, 816, 834, 881], "princip": [73, 232, 233, 277, 280, 320, 337, 423, 636, 761], "probabl": [73, 97, 191, 215, 226, 227, 228, 229, 232, 233, 255, 257, 260, 270, 309, 320, 493, 512, 550, 551, 563, 834, 893, 948, 949], "n_comp": [73, 612, 613], "stcs_psf_mne": 73, "pca_vars_mn": 73, "return_pca_var": [73, 612, 613], "n_vert": 73, "printopt": 73, "caudalanteriorcingul": 73, "caudalmiddlefront": [73, 117, 122, 161], "cuneu": [73, 834], "entorhin": 73, "frontalpol": 73, "fusiform": 73, "inferiorpariet": [73, 251], "inferiortempor": 73, "insula": 73, "isthmuscingul": 73, "lateraloccipit": 73, "lateralorbitofront": 73, "lingual": 73, "medialorbitofront": 73, "middletempor": 73, "paracentr": 73, "parahippocamp": [73, 95], "parsoperculari": 73, "parsorbitali": 73, "parstriangulari": 73, "pericalcarin": 73, "postcentr": [73, 95], "posteriorcingul": 73, "precentr": [73, 161], "precuneu": 73, "rostralanteriorcingul": 73, "rostralmiddlefront": [73, 251], "superiorfront": [73, 161], "superiorpariet": 73, "superiortempor": 73, "supramargin": 73, "temporalpol": 73, "transversetempor": [73, 251], "overal": [73, 234, 257, 263, 264, 273, 293, 310, 548], "bigger": [73, 107, 264, 273, 550, 551], "leaker": 73, "psfs_mat": 73, "pearson": [73, 229, 232, 277, 330, 331, 332, 333, 334, 636, 784, 788], "arbitrari": [73, 142, 186, 191, 192, 193, 197, 219, 229, 250, 253, 257, 260, 284, 286, 290, 300, 301, 303, 310, 320, 328, 330, 331, 332, 333, 334, 340, 483, 490, 550, 551, 568, 636, 654, 662, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 868, 875, 882, 888, 896], "absolut": [73, 87, 108, 112, 151, 161, 177, 205, 216, 255, 290, 302, 309, 319, 326, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 427, 483, 550, 551, 554, 612, 613, 618, 636, 653, 683, 733, 745, 777, 784, 788, 854, 860, 880, 900, 948], "leakage_mn": 73, "node_ord": [73, 840], "mirror": [73, 94, 97, 196, 291, 312, 331, 332, 333, 334, 338, 342, 346, 347, 521, 522, 523, 550, 551, 851, 855, 894, 900], "node_angl": [73, 840], "start_po": [73, 840], "group_boundari": [73, 840], "subplot_kw": 73, "n_line": 73, "node_color": 73, "neighbour": [73, 290, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 868, 875, 879, 888, 891, 896, 898], "deeper": [73, 80, 81, 206, 320], "versu": [73, 167, 177, 192, 244, 252, 366, 950], "fname_fig": 73, "plot_label_leakag": 73, "savefig": [73, 142], "inde": [73, 97, 167, 194, 201, 233, 234, 270], "max_val": 73, "brain_lh": 73, "caudal": [73, 117, 122, 834], "pos_lim": [73, 80, 81, 206, 251, 263, 338, 339, 342, 345, 346, 347, 855, 894, 899, 900], "brain_rh": 73, "psf_ctf_label_leakag": [73, 82, 956], "fname_evo": [74, 75, 76, 80, 81, 91], "regularis": [74, 80, 81, 615], "rm_lor": 74, "stc_psf": 74, "stc_ctf": 74, "31738": [74, 80, 81], "68644e": [74, 80, 81], "vertno_lh": 74, "verttru": [74, 75], "maxima": [74, 171, 302, 333, 334, 680, 873, 875], "vert_max_psf": 74, "vert_max_ctf": 74, "brain_psf": 74, "ventral": [74, 834], "add_foci": [74, 75, 76, 186, 201, 203, 252, 302, 834], "coords_as_vert": [74, 75, 76, 201, 203, 252, 834], "22842778": 74, "2956258": 74, "85246681": 74, "brain_ctf": 74, "10932369": 74, "16149934": 74, "93351158": 74, "439": [74, 75, 236, 255, 260, 518], "psf_ctf_vertic": [74, 82, 956], "vi": [75, 176, 260, 331, 860], "cov_pr": 75, "post": [75, 147, 206, 229, 234, 237, 309, 310, 311, 319, 936, 948, 949], "cov_post": 75, "4433": 75, "filters_pr": 75, "weight_norm": [75, 206, 252, 284, 286, 287, 291, 364, 365], "filters_post": 75, "rm_pre": 75, "stc_pre": 75, "rm_post": 75, "stc_post": 75, "brain_pr": 75, "ndata": 75, "brain_post": 75, "psf_ctf_vertices_lcmv": [75, 82, 956], "coars": 76, "don": [76, 122, 142, 144, 147, 167, 170, 171, 172, 183, 184, 185, 188, 194, 197, 227, 230, 232, 233, 234, 240, 243, 257, 258, 259, 260, 265, 270, 274, 301, 302, 309, 310, 321, 323, 326, 331, 332, 442, 562, 563, 625, 672, 688, 695, 697, 733, 771, 774, 787, 936, 943, 948, 950], "src_vol": 76, "forward_vol": 76, "3375": 76, "1045": 76, "895": 76, "015000": [76, 235], "860": [76, 107, 223, 236], "158": [76, 93, 133, 139, 195, 236, 260, 956], "403": [76, 107], "inverse_operator_vol": 76, "rm_lor_vol": 76, "sources_vol": 76, "stc_psf_vol": 76, "383": [76, 107, 111, 255, 956], "140193": 76, "7904e": 76, "66519": 76, "31885e": 76, "1209": [76, 222], "verttrue_vol": 76, "max_vert_idx": 76, "unravel_index": [76, 207, 257], "vert_max_ctf_vol": 76, "brain_psf_vol": 76, "plot_3d": [76, 161, 206, 291, 292, 346, 347], "volume_opt": [76, 338, 339, 342, 345, 346, 347, 834, 894, 899], "32501697": 76, "38884743": 76, "87974682": 76, "952": [76, 82, 148, 156, 956], "116": [76, 110, 111, 195, 223, 255, 259, 260, 956], "psf_volum": [76, 82, 956], "recurs": [77, 86, 186, 229, 277, 323, 338, 342, 346, 367, 369, 732, 894], "n100": [77, 86, 192, 218, 229, 234], "1834": [77, 86], "ori": [77, 86, 202, 206, 209, 211, 212, 252, 329, 364, 365, 503, 526], "24703241413887334": [77, 86], "7764326014811735": [77, 86], "5797649538579381": [77, 86], "5304": [77, 86], "5154591819142753": [77, 86], "5345116894131513": [77, 86], "6697753994145834": [77, 86], "332": [77, 139, 195, 218, 260, 277, 367], "1999": [77, 139, 270, 277, 320, 330, 331, 332, 333, 334, 367, 423, 636, 669, 784, 788], "740118": [77, 277, 367], "254": [77, 82, 139, 195, 236, 259, 956], "inv_fnam": 78, "fmri": [78, 223, 277, 317, 319, 320, 547, 548, 603], "fmri_prior": 78, "rr": [78, 186, 187, 201, 204, 344, 411, 413, 414, 415, 714, 717, 733, 753, 929], "use_tri": [78, 186, 344], "8192": [78, 208, 211, 482], "957": [78, 82, 169, 956], "read_invers": [78, 82, 956], "nb": [79, 550, 551], "007": [79, 82, 148, 155, 166, 167, 168, 171, 175, 192, 195, 228, 234, 252, 256, 277, 349, 675, 956], "read_stc": [79, 82, 956], "localis": [80, 81, 211, 255, 256, 277, 306, 618, 771, 772, 774, 775], "mimic": [80, 81, 484, 507, 603], "ple": [80, 81, 618], "sd": [80, 81, 270, 746, 786, 787, 789, 790], "ple_mne_psf": 80, "peak_err": [80, 81, 618], "sd_mne_psf": 80, "sd_ext": [80, 81, 618], "rm_dspm": 80, "ple_dspm_psf": 80, "sd_dspm_psf": 80, "brain_ple_mn": 80, "brain_ple_dspm": 80, "subtract": [80, 81, 92, 97, 100, 134, 140, 147, 160, 167, 177, 202, 229, 235, 237, 255, 257, 282, 299, 301, 319, 320, 323, 326, 327, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 354, 364, 365, 422, 423, 427, 428, 439, 440, 441, 483, 490, 491, 526, 527, 545, 547, 548, 550, 551, 552, 614, 619, 620, 636, 637, 653, 671, 701, 702, 725, 728, 771, 774, 784, 786, 788, 789, 804, 805, 876, 896], "diff_pl": [80, 81], "brain_ple_diff": [80, 81], "superfici": [80, 206, 320], "brain_sd_mn": 80, "brain_sd_dspm": 80, "diff_sd": [80, 81], "brain_sd_diff": [80, 81], "wors": [80, 197, 316, 671], "distinguish": [80, 99, 177, 198, 223, 226, 227, 228, 231, 232, 234, 243, 290, 319, 430], "stenroo": [80, 81, 86, 277, 369, 618, 741, 746], "matthia": [80, 81, 277, 302, 303, 618], "treder": [80, 81, 277, 618], "biorxiv": [80, 81, 252, 277, 364, 365, 618], "2019": [80, 81, 92, 102, 167, 235, 238, 255, 260, 277, 313, 618, 652, 678, 771, 772, 774, 775, 800, 802, 812, 815, 818, 948], "1101": [80, 81, 141, 252, 277, 364, 365, 618], "672956": [80, 81, 277, 618], "323": [80, 82, 195, 236, 237, 255, 956], "501": [80, 82, 193, 194, 200, 223, 230, 236, 255, 956], "resolution_matrix": 81, "spatial_resolut": 81, "fname_fwd_emeg": 81, "forward_emeg": 81, "forward_meg": 81, "inv_emeg": 81, "inv_meg": 81, "63485": 81, "05542e": 81, "rm_emeg": 81, "ple_psf_emeg": 81, "sd_psf_emeg": 81, "rm_meg": 81, "ple_psf_meg": 81, "sd_psf_meg": 81, "brain_ple_emeg": 81, "emeg": 81, "brain_ple_meg": 81, "bring": [81, 97, 182, 207, 232, 245, 320, 336, 346, 347, 504, 647, 660, 671, 900], "brain_sd_emeg": 81, "brain_sd_meg": 81, "resolution_metrics_eegmeg": [81, 82, 956], "1555": [82, 956], "vector_mne_solut": [82, 87, 956], "443": [82, 87, 169, 260, 277, 956], "231": [82, 85, 87, 195, 259, 260, 956], "431": [82, 136, 236, 956], "time_frequency_mixed_norm_invers": [82, 85, 956], "209": [82, 195, 210, 229, 236, 259, 269, 272, 277, 956], "source_space_snr": [82, 84, 956], "237": [82, 84, 184, 195, 209, 255, 259, 956], "438": [82, 236, 255, 260, 956], "snr_estim": [82, 83, 956], "779": [82, 83, 956], "padma": [84, 277, 290, 652], "sundaram": [84, 277, 290, 652], "tottochan": 84, "kaisu": [84, 290], "lankinen": [84, 290], "klankinen": 84, "inv_op": [84, 251], "snr_stc": [84, 342], "maxidx": 84, "med": [84, 121, 162, 192, 223, 251], "viridi": [84, 128, 149, 162, 169, 255, 273, 785, 878], "70263": [84, 204], "18949e": [84, 204], "evoked_eeg": [84, 175, 234], "inv_op_eeg": 84, "stc_eeg": 84, "snr_stc_eeg": 84, "7499": [84, 117], "118742": [84, 117], "155292": [84, 117], "81981": 84, "0644e": 84, "goldenholz": [84, 277, 342], "seppo": [84, 277, 342, 614, 741, 746], "ahlfor": [84, 277, 342, 504, 614, 741, 746], "dahlia": [84, 277, 342], "sharon": [84, 277, 342], "mamiko": [84, 277, 342], "ishitobi": [84, 277, 342], "lucia": [84, 154, 277, 342], "vaina": [84, 154, 277, 342], "magnetoencephalographi": [84, 183, 204, 277, 320, 342, 503, 744, 815, 818], "1086": [84, 236, 277, 342], "1002": [84, 110, 204, 268, 277, 316, 331, 332, 333, 334, 342, 550, 551, 679, 737, 773, 786, 789, 798, 804], "hbm": [84, 204, 277, 316, 342, 773], "20571": [84, 277, 342], "229": [84, 146, 156, 195, 196, 200, 236, 259, 260, 956], "built": [85, 166, 176, 177, 183, 185, 191, 192, 193, 201, 207, 230, 232, 238, 243, 247, 248, 255, 284, 288, 290, 293, 303, 309, 329, 331, 332, 333, 334, 336, 372, 396, 397, 406, 435, 512, 534, 535, 550, 551, 572, 594, 598, 667, 718, 752, 779, 789, 823, 834, 852, 936, 937, 947, 948, 952, 956], "fourier": [85, 130, 229, 268, 270, 277, 331, 332, 333, 334, 550, 551, 786, 789, 791, 794, 798, 801, 802, 804, 805, 809, 812, 813, 814, 816, 817], "henc": [85, 141, 168, 176, 182, 188, 201, 217, 231, 234, 243, 255, 268, 270, 319, 330, 331, 332, 333, 334, 341, 784, 788, 849, 936, 949], "minima": [85, 680], "slightli": [85, 97, 186, 206, 210, 229, 234, 237, 238, 259, 273, 281, 291, 294, 306, 316, 317, 320, 331, 332, 333, 334, 337, 428, 550, 551, 606, 614, 761, 834, 873], "eventu": [85, 162, 309, 316, 386, 397, 655], "020865": [85, 121, 204, 252], "96729": 85, "38524e": 85, "985": [85, 223, 236, 252, 254, 956], "descent": [85, 277, 279, 294, 297, 547], "4411": 85, "845726": 85, "4408": [85, 210, 218], "353441": 85, "4410": 85, "859492": 85, "292946": 85, "51e": 85, "670058": 85, "519426": 85, "61e": 85, "669663": 85, "668049": 85, "547913e": 85, "049948803289596964": [85, 122, 205, 207], "2996928197375818": [85, 166, 175, 177, 257], "10e": [85, 95, 117, 122], "15e": 85, "20e": [85, 331, 332, 341, 550, 551, 866, 889], "medial": [85, 265, 771, 772, 834], "yellow": [85, 234, 333, 334, 851, 870, 887], "scalar_thresh": [85, 834], "stationari": [85, 106, 232, 234, 239, 277, 316, 416, 548], "410": [85, 98, 107, 109, 118, 119, 226, 230, 234, 236, 246, 255, 260, 268, 277, 548, 956], "422": [85, 236, 260, 277, 548], "051": [85, 166, 168, 175, 195, 227, 252, 277, 548], "sparsiti": [85, 277, 548, 744], "g\u00e1bor": [85, 277, 548], "sz\u00e9keli": [85, 277, 548], "horst": [85, 277, 548], "hahn": [85, 277, 548], "editor": [85, 218, 277, 309, 318, 400, 545, 548, 636, 815, 818, 946], "6801": [85, 277, 548], "page": [85, 198, 229, 246, 277, 284, 285, 295, 302, 309, 310, 311, 314, 316, 320, 321, 331, 332, 397, 458, 548, 550, 551, 636, 802, 812, 813, 815, 816, 818, 834, 866, 889, 936, 937, 941, 943, 946, 948, 949, 952], "611": [85, 260, 277, 423, 548], "springer": [85, 252, 277, 364, 365, 458, 548, 636], "berlin": [85, 252, 277, 364, 365, 548], "heidelberg": [85, 252, 277, 364, 365, 548], "1007": [85, 177, 233, 234, 235, 252, 277, 320, 364, 365, 483, 548, 603, 636, 652, 749], "978": [85, 140, 177, 229, 232, 252, 277, 330, 331, 332, 333, 334, 364, 365, 423, 548, 636, 766, 784, 788], "22092": [85, 277, 548], "0_49": [85, 277, 548], "truncat": [86, 105, 113, 146, 152, 176, 227, 234, 244, 274, 277, 285, 288, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 369, 506, 512, 550, 551, 564, 784, 788, 860], "th\u00e9odor": [86, 288, 306], "papadopoulo": [86, 288, 306, 308], "theodor": [86, 306], "niko": [86, 277, 320, 369], "m\u00e4kel\u00e4": [86, 277, 369, 463], "jukka": [86, 202, 204, 277, 280, 369], "sarva": [86, 202, 277, 369], "risto": [86, 204, 233, 234, 277, 320, 369, 603], "ilmoniemi": [86, 204, 233, 234, 277, 320, 369, 603], "167": [86, 195, 223, 255, 259, 260, 277, 369], "2018": [86, 102, 110, 154, 163, 223, 232, 252, 277, 313, 364, 365, 369, 636, 678, 679], "2017": [86, 110, 177, 232, 277, 290, 313, 369, 463, 636, 679, 744, 749], "013": [86, 92, 155, 166, 167, 175, 177, 195, 252, 277, 369], "magnitud": [87, 90, 97, 139, 140, 161, 168, 171, 175, 176, 192, 194, 204, 206, 226, 227, 229, 244, 252, 263, 264, 291, 339, 345, 347, 423, 483, 504, 527, 611, 641, 647, 660, 671, 680, 776, 877, 899, 936, 941], "accomplish": [87, 161, 175, 187, 197, 316, 317, 320, 941, 948], "hood": [87, 169, 216, 226, 229, 233, 273, 281, 947], "impos": [87, 222, 228, 293, 802, 812], "underli": [87, 186, 192, 229, 233, 255, 256, 268, 277, 285, 288, 291, 305, 325, 330, 331, 332, 333, 334, 337, 342, 483, 557, 662, 784, 788, 824], "getter": [87, 203, 283], "peak_tim": [87, 201], "get_peak": [87, 175, 177, 201, 203, 204, 206, 273, 280, 284, 285, 300, 303, 333, 334, 338, 339, 342, 345, 346, 347], "movi": [87, 161, 162, 203, 207, 291, 834], "save_movi": [87, 161, 162, 203, 207, 291, 834], "time_dil": [87, 161, 162, 203, 207, 834], "framer": [87, 161, 162, 203, 207, 834], "95048065": 87, "56941314": 87, "72451438": 87, "stc_max": 87, "cosin": [87, 117, 229, 250, 320, 739], "source_nn": [87, 335, 364, 365], "brain_max": 87, "975978731472672": 87, "90575168": 87, "52414196": 87, "71336747": 87, "brain_norm": 87, "83607509": 87, "44726242": 87, "57923594": 87, "lot": [87, 97, 178, 184, 186, 192, 195, 227, 229, 231, 232, 233, 238, 243, 245, 273, 309, 428, 434, 502, 533, 691, 720, 722, 929], "fname_inv_fix": 87, "inv_fix": 87, "stc_fix": 87, "brain_fix": [87, 204], "00351751": 87, "62842071": 87, "43519503": 87, "pars": [88, 166, 177, 191, 197, 199, 200, 217, 228, 244, 282, 287, 290, 291, 292, 293, 300, 301, 304, 308, 319, 324, 325, 331, 336, 350, 512, 524, 531, 550, 559, 566, 567, 574, 582, 596, 626, 698, 956], "elekta": [88, 110, 182, 191, 213, 214, 237, 281, 282, 285, 296, 317, 320, 324, 328, 329, 331, 332, 333, 334, 336, 341, 370, 423, 503, 524, 526, 550, 551, 599, 852, 864, 866, 876, 889, 904, 952, 956], "triux": [88, 209, 308, 317, 320, 324, 331, 332, 333, 334, 460, 550, 551, 633, 784, 786, 787, 788, 789, 790], "dacq": [88, 317, 324], "accordingli": [88, 176, 184, 204, 216, 243, 286, 320, 326, 331, 332, 333, 334, 542, 550, 551, 559, 566, 572, 672], "multimodal_raw": 88, "grad_ssp_upright": 88, "mag_ssp_upright": 88, "v4": [88, 236, 237], "v5": [88, 236, 237], "183600": 88, "576599": 88, "960": [88, 107, 128, 169, 222, 240, 256, 258, 260, 317], "categori": [88, 139, 171, 282, 284, 290, 320, 321, 324, 403, 702, 831], "acqpars": [88, 282, 324, 550], "get_condit": [88, 324], "plot_topo": [88, 176, 178, 192, 246, 268, 269, 279, 284, 285, 291, 298, 301, 305, 306, 331, 332, 333, 334, 389, 550, 551, 784, 786, 787, 789, 790, 955], "background_color": [88, 158, 284, 333, 334, 874], "cat": [88, 139], "flat": [88, 109, 138, 161, 166, 167, 176, 207, 227, 228, 229, 233, 234, 235, 237, 280, 287, 291, 294, 298, 316, 319, 324, 326, 331, 332, 338, 342, 346, 426, 428, 636, 638, 648, 649, 653, 654, 660, 770, 834, 894], "fiff": [88, 142, 182, 186, 280, 282, 288, 290, 292, 293, 295, 298, 299, 300, 301, 308, 317, 331, 332, 335, 341, 344, 550, 551, 553, 555, 568, 585, 586, 636, 648, 649, 820, 843], "fname_out": [88, 843], "118": [88, 195, 236, 259, 277, 296, 636], "0812": [88, 195], "0123": [88, 171, 192, 195, 243], "0942": [88, 195], "2232": [88, 195, 403], "newcat": 88, "longer": [88, 141, 171, 188, 193, 194, 198, 218, 227, 228, 229, 230, 232, 255, 270, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 294, 298, 301, 302, 303, 307, 309, 320, 331, 332, 333, 334, 336, 410, 507, 518, 522, 524, 550, 551, 638, 671, 788, 813, 814, 816, 817, 834, 846, 866, 869, 904, 936, 948], "reqev": [88, 324], "requir": [88, 136, 161, 162, 166, 168, 170, 176, 182, 184, 187, 188, 192, 194, 196, 197, 198, 208, 216, 217, 218, 219, 223, 226, 229, 230, 232, 235, 237, 239, 243, 250, 252, 255, 256, 259, 263, 283, 284, 285, 286, 287, 289, 290, 291, 292, 294, 301, 307, 308, 310, 312, 316, 317, 319, 320, 323, 324, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 364, 365, 371, 376, 380, 423, 424, 425, 426, 428, 429, 432, 456, 482, 483, 485, 486, 490, 492, 493, 496, 499, 500, 521, 522, 524, 526, 539, 541, 543, 544, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 590, 594, 595, 597, 598, 606, 609, 610, 619, 620, 635, 636, 638, 641, 648, 649, 651, 663, 672, 680, 689, 726, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 780, 784, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 828, 834, 836, 853, 859, 866, 868, 871, 875, 879, 883, 888, 889, 890, 891, 894, 896, 898, 899, 905, 941, 943, 946, 947], "reqwithin": [88, 324], "reqwhen": [88, 324], "freeli": 88, "elekta_epoch": [88, 93, 956], "scratch": [90, 166, 175, 191, 215, 217, 218, 243, 253, 254, 270, 331, 332, 333, 334, 336, 443, 550, 551, 596, 787, 789, 790, 805, 956], "exampleio": 90, "won": [90, 177, 233, 234, 245, 259, 277, 331, 332, 333, 334, 429, 550, 551, 636, 701, 784, 786, 787, 788, 789, 790, 824], "consult": [90, 229, 233, 309, 310, 316, 320, 671, 936, 948], "reader": [90, 192, 201, 215, 233, 243, 280, 281, 285, 286, 288, 290, 291, 292, 301, 303, 304, 307, 308, 312, 320, 398, 549, 557, 559, 560, 561, 563, 566, 569, 570, 572, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 695, 697, 699, 939], "fakedata": 90, "nof": 90, "lazi": 90, "analogsign": 90, "multichannel": [90, 97, 139, 177, 223, 237, 277, 504, 644, 647, 671], "sampling_r": 90, "show_scrollbar": [90, 102, 177, 232, 238, 250, 288, 331, 332, 550, 551, 636, 866, 883, 889], "100000": [90, 520], "99999": [90, 512], "read_neo_format": [90, 93, 956], "ev_info": 91, "15972": 91, "read_noise_covariance_matrix": [91, 93, 956], "analyz": [92, 98, 166, 191, 194, 206, 219, 223, 226, 227, 229, 230, 237, 240, 244, 245, 255, 277, 293, 294, 309, 316, 320, 331, 332, 509, 639, 645, 767, 940], "pabr": 92, "maddox": [92, 277, 279, 284, 294, 300], "lab": [92, 95, 311, 312], "clemen": [92, 139, 279, 280, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 302, 303, 304, 306, 307, 308, 954], "brunner": [92, 139, 279, 280, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 302, 303, 304, 306, 307, 308, 954], "pyxdf": [92, 216], "p001_se": 92, "s004_task": 92, "default_run": 92, "001_eeg_a2": 92, "stream": [92, 216, 227, 230, 287, 308, 312], "header": [92, 140, 151, 182, 186, 208, 216, 218, 281, 282, 284, 285, 287, 290, 291, 293, 294, 302, 333, 334, 364, 365, 407, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 549, 558, 561, 563, 579, 581, 583, 614, 876], "load_xdf": 92, "time_seri": 92, "assert": [92, 136, 166, 170, 175, 182, 197, 212, 218, 244, 252, 255, 257, 288, 305, 310], "four": [92, 97, 167, 170, 177, 192, 211, 229, 255, 265, 277, 316, 320, 321, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 834, 853, 868, 875, 879, 888, 891, 896, 898], "plu": [92, 192, 194, 203, 208, 212, 229, 232, 234, 236, 259, 281, 291, 302, 318, 320, 805, 949], "rerefer": 92, "bipolar": [92, 94, 218, 231, 232, 255, 282, 287, 301, 331, 332, 333, 334, 550, 551, 725, 728], "subselect": [92, 143, 169, 175, 176, 177, 192, 243, 257, 260, 268, 270, 281, 282, 291, 330, 331, 332, 333, 334, 336, 440, 784, 785, 786, 787, 788, 936], "uv": [92, 281, 331, 332, 333, 334, 550, 551], "preamp": 92, "nominal_sr": 92, "100e": [92, 171, 177, 228, 252], "2320128": 92, "2320127": 92, "232": [92, 170, 195, 222, 236], "melissa": [92, 277], "polonenko": [92, 277], "ross": [92, 277, 279, 284, 294, 300], "brainstem": [92, 277], "hear": [92, 277, 675], "2331216519871395": [92, 277], "1177": [92, 128, 236, 256, 277, 317, 464], "048": [92, 93, 128, 166, 168, 175, 195, 209, 246, 252, 256, 277, 800, 802, 812, 956], "read_xdf": [92, 93, 956], "mastoid": [94, 216, 235, 331, 332, 333, 334, 550, 551, 728], "bone": [94, 338, 339, 342, 345, 346, 347, 834, 894, 899], "sleep": [94, 164, 165, 191, 194, 277, 287, 319, 325, 331, 475, 476, 512, 566, 689, 786, 869, 936, 956], "ssvep_fold": [94, 196], "ssvep_data_raw_path": [94, 196], "se": [94, 196, 228, 239, 270, 320], "02_se": [94, 196, 270], "ssvep_eeg": [94, 196, 270], "vhdr": [94, 162, 196, 270, 284, 301, 303, 317, 320, 516, 550, 551, 689], "easycap": [94, 196, 255, 270, 290, 307], "467579": 94, "467": [94, 236], "579": [94, 96, 223, 260], "tp9": 94, "tp10": 94, "m2": [94, 235, 331, 332, 333, 334, 550, 551, 728], "midlin": [94, 155, 195, 196, 246, 256, 306, 392], "return_ch_nam": [94, 306, 392], "rereferenc": [94, 193, 270], "rereferenced_midline_ch": 94, "alter": [94, 235, 237, 243, 292, 304, 325, 672], "anod": [94, 235, 284, 287, 725], "cathod": [94, 235, 287, 725], "strip": [94, 139, 277], "suffix": [94, 285, 302, 323, 341, 550, 551, 564], "replac": [94, 105, 114, 128, 167, 169, 177, 185, 198, 215, 217, 228, 233, 234, 237, 243, 245, 277, 279, 281, 282, 284, 286, 287, 291, 292, 293, 294, 302, 305, 306, 308, 309, 320, 328, 331, 332, 333, 334, 340, 341, 483, 490, 505, 518, 550, 551, 563, 581, 601, 635, 636, 651, 784, 786, 787, 789, 790, 853, 875, 879, 888, 891, 896, 946, 948, 951], "unreferenc": [94, 725], "add_channel": [94, 97, 101, 240, 286, 293, 304, 331, 332, 333, 334, 550, 551, 636, 784, 786, 787, 788, 789, 790], "467580": 94, "o1": [94, 97, 155, 185, 250, 270], "po9": [94, 270], "p7": [94, 97, 155, 185, 575], "p3": [94, 97, 155, 170, 185, 575], "cp5": [94, 155, 575], "cp1": [94, 97, 155], "t7": [94, 155, 185, 196, 303, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 575, 635, 636, 651, 784, 786, 787, 789, 790, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "c3": [94, 139, 155, 170, 185, 575], "fc1": [94, 97, 155, 549], "fc5": [94, 155, 575], "f3": [94, 97, 155, 170, 185, 235, 575], "f7": [94, 170, 185, 403, 575], "fp1": [94, 170, 185, 235, 250, 403, 519, 522, 559, 566, 654, 662], "o2": [94, 155, 185, 250, 270], "po10": [94, 270], "p8": [94, 97, 155, 185], "p4": [94, 97, 155, 170, 185], "cp6": [94, 155], "cp2": [94, 97, 155], "c4": [94, 97, 139, 155, 170, 185], "t8": [94, 97, 155, 185, 196, 303, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "fc2": [94, 97, 155], "fc6": [94, 97, 155], "f4": [94, 97, 155, 170, 185, 196, 235], "f8": [94, 170, 185], "fp2": [94, 170, 185, 250, 403, 519, 522, 654, 662], "still": [94, 97, 101, 105, 142, 147, 168, 169, 170, 186, 197, 215, 216, 226, 227, 229, 230, 231, 233, 235, 237, 239, 243, 246, 255, 263, 286, 292, 294, 297, 306, 309, 318, 331, 336, 344, 388, 434, 502, 533, 550, 636, 671, 691, 720, 722, 766, 788, 844, 859, 860, 901, 929, 941, 948], "fpz": [94, 155, 163, 196, 232, 303, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "oz": [94, 97, 155, 163, 185, 196, 270, 303, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 635, 636, 651, 733, 784, 786, 787, 789, 790, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "271": [94, 111, 139, 192, 195, 236, 242, 255, 260, 956], "contralateral_referenc": [94, 111, 956], "facilit": [95, 139, 161, 162, 193, 217, 223, 256, 287, 290, 291, 292, 304, 312, 316, 320, 331, 332, 333, 334, 550, 551, 784, 786, 787, 788, 789, 790], "subcort": [95, 277, 294, 652], "samuelsson": [95, 277, 294, 652], "johnsam": 95, "mit": [95, 98, 177, 277, 317, 320, 545, 645, 951], "all_label": 95, "select_label": 95, "hiplab": 95, "postcenlab": 95, "cortical_waveform": 95, "waveform": [95, 126, 229, 231, 234, 238, 277, 339, 345, 347, 734, 736, 750, 751, 770, 895, 949], "pi": [95, 117, 120, 121, 122, 141, 229, 234, 250, 251, 252, 320, 611, 680, 750, 802, 810, 812, 813, 816], "subcortical_waveform": 95, "data_fun": [95, 119, 120, 121, 750], "isin": [95, 139, 147, 170], "evoked_subcort": [95, 652], "n_proj": [95, 652], "fft": [95, 135, 159, 229, 268, 270, 279, 282, 294, 298, 305, 331, 332, 333, 334, 491, 495, 496, 550, 551, 609, 619, 620, 785, 791, 792, 793, 794, 795, 796, 798, 805, 811, 813, 814, 815, 816, 817, 818, 890], "rfft": 95, "psd_proc": 95, "transax": 95, "footbibliographi": [95, 309], "put": [96, 143, 151, 167, 170, 181, 182, 187, 196, 198, 208, 209, 211, 222, 229, 232, 243, 250, 251, 252, 255, 273, 303, 309, 333, 334, 337, 456, 834, 870], "earli": [96, 97, 167, 198, 227, 229, 270, 277, 326, 331, 332, 333, 334, 550, 551, 595, 694], "button": [96, 98, 121, 148, 155, 166, 168, 170, 178, 182, 187, 192, 194, 218, 226, 228, 233, 244, 245, 246, 288, 293, 302, 303, 309, 317, 328, 331, 332, 333, 334, 340, 341, 483, 490, 509, 550, 551, 635, 636, 784, 786, 787, 789, 790, 866, 867, 868, 870, 872, 875, 879, 888, 889, 890, 891, 896, 898], "press": [96, 98, 140, 148, 155, 166, 168, 170, 177, 178, 182, 187, 192, 194, 198, 218, 226, 228, 244, 245, 246, 277, 283, 287, 288, 317, 331, 332, 423, 509, 522, 545, 550, 551, 636, 645, 866, 881, 883, 889], "590": [96, 107, 118, 119, 223, 260, 956], "millisecond": [96, 108, 139, 166, 171, 175, 194, 243, 263, 264, 265, 303, 307, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 509, 550, 551, 784, 788, 834, 894, 899], "late": [96, 188, 936], "quickli": [96, 191, 192, 222, 232, 233, 245, 279, 281, 290, 309, 321], "slowli": 96, "quick": [96, 100, 120, 209, 226, 269, 309, 601], "reference_id": [96, 155, 509], "smilei": [96, 98, 121, 178, 192, 194, 244, 317], "target_id": [96, 155, 509], "new_id": [96, 155, 509, 601], "hit": [96, 270, 285, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 867, 868, 872, 875, 879, 888, 891, 896, 898], "fill_na": [96, 509], "fill": [96, 251, 284, 297, 300, 337, 342, 344, 345, 429, 509, 539, 550, 551, 663, 751, 780, 834, 955], "events_": 96, "besid": [96, 228, 233], "tmin_": 96, "tmax_": 96, "8522": [96, 292], "10649": 96, "12859": 96, "14830": 96, "16850": 96, "18826": 96, "21224": 96, "23200": 96, "25272": 96, "27243": 96, "29525": 96, "31530": 96, "33481": 96, "35611": 96, "38007": 96, "566": [96, 223, 260], "08643728": 96, "532": [96, 223, 235, 260], "78723509": 96, "97154325": 96, "359": [96, 107, 195, 236, 260], "63138369": 96, "446": [96, 255, 277, 314], "20930939": 96, "40611816": 96, "512": [96, 99, 223, 236, 341, 344, 482], "80771377": 96, "ft": [96, 168, 171, 192, 228, 234, 269, 319, 320, 323, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 490, 550, 551, 591, 635, 636, 651, 660, 784, 786, 787, 789, 790, 853, 867, 868, 870, 872, 875, 879, 888, 891, 896, 897, 898], "697": [96, 111, 260, 956], "conduct": [97, 98, 128, 177, 184, 218, 255, 256, 257, 259, 277, 290, 303, 309, 311, 316, 319, 320, 323, 592, 599, 656, 741, 746], "undesir": [97, 231, 303, 636], "otherwis": [97, 109, 147, 170, 177, 188, 198, 215, 228, 229, 260, 263, 265, 284, 291, 309, 320, 325, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 355, 364, 365, 370, 380, 392, 405, 423, 427, 428, 429, 439, 440, 441, 456, 476, 483, 490, 518, 521, 522, 526, 527, 541, 545, 547, 548, 550, 551, 559, 561, 566, 600, 601, 602, 603, 609, 614, 635, 636, 651, 656, 689, 698, 720, 721, 723, 729, 733, 750, 769, 770, 784, 786, 787, 788, 789, 790, 798, 810, 821, 824, 834, 836, 852, 853, 860, 864, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 879, 886, 888, 889, 890, 891, 892, 894, 895, 896, 898, 899, 926, 941], "introduc": [97, 102, 166, 167, 175, 177, 191, 192, 199, 201, 226, 228, 229, 230, 232, 233, 234, 239, 243, 263, 265, 293, 312, 320, 326, 331, 332, 333, 334, 388, 550, 551, 636, 866, 870, 889, 936], "smear": [97, 106, 107, 168, 229, 270, 303, 670, 813, 814, 816, 817], "unfortun": [97, 188, 936], "brigd": 97, "far": [97, 109, 166, 167, 170, 183, 197, 204, 228, 229, 230, 233, 235, 243, 244, 255, 273, 320, 434, 563, 639, 771, 772, 774, 775, 814, 817, 860], "address": [97, 123, 124, 192, 229, 255, 256, 263, 264, 265, 277, 309, 336, 771, 772, 774, 775, 948], "Or": [97, 147, 197, 226, 236, 250, 309, 651], "quantifi": [97, 238, 270, 342], "outcom": 97, "awar": [97, 130, 166, 170, 193, 194, 240, 245, 257, 263, 283, 307, 331, 332, 333, 334, 336, 550, 551, 873], "mitig": [97, 206, 229, 230, 237, 320], "confound": [97, 177, 636], "psychophysiologi": [97, 98, 126, 167, 177, 229, 260, 277, 645, 770, 771, 772, 774, 775], "cpmc": 97, "columbia": 97, "ebridg": 97, "html": [97, 169, 195, 197, 277, 280, 284, 287, 291, 293, 294, 300, 304, 308, 309, 323, 341, 651, 729], "linearsegmentedcolormap": [97, 851], "nearli": [97, 309], "exactli": [97, 166, 170, 201, 210, 223, 243, 270, 273, 290, 291, 293, 638, 770, 854, 898], "suffici": [97, 227, 229, 237, 257, 290, 309, 316, 320, 331, 332, 333, 334, 336, 349, 423, 550, 551, 594, 866, 889, 936, 941, 948], "portion": [97, 204, 226, 228, 243, 269, 306, 309, 310, 331, 332, 389, 550, 551, 636, 866, 883, 889, 936], "plenti": 97, "settl": [97, 364], "ed_data": 97, "raw_data": 97, "1959919512423807e": 97, "665886892347761": 97, "iz": 97, "43673209034739": 97, "fcz": [97, 170, 270], "fc4": [97, 170], "f2": 97, "4835197413857302e": 97, "5878177987698265": 97, "fc3": [97, 170, 575], "cp3": [97, 575], "af7": 97, "af3": 97, "af4": 97, "af8": 97, "f5": [97, 575], "fz": [97, 155, 170, 185, 250, 256, 516, 550, 551, 566], "ft8": 97, "tp8": 97, "p5": [97, 575], "p1": [97, 139, 238], "p6": 97, "po3": [97, 155, 270], "po4": [97, 155, 270], "po8": [97, 155, 270, 303], "746002687400852": 97, "cz": [97, 139, 155, 163, 170, 185, 196, 216, 218, 233, 235, 250, 256, 303, 331, 332, 333, 334, 550, 551, 728], "c2": [97, 139, 233], "cp4": 97, "pz": [97, 155, 163, 169, 185, 218, 250, 256], "p2": [97, 139], "590631749463075": 97, "f6": 97, "understand": [97, 161, 170, 217, 229, 270, 306, 309, 312, 320, 321], "physiologi": 97, "clip": [97, 198, 246, 291, 308, 323, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 889, 891, 896, 898], "bridged_idx": [97, 644, 670, 856], "ed_matrix": [97, 644, 856], "ax1": [97, 112, 117, 126, 163, 209, 222], "ax2": [97, 112, 117, 123, 126, 163, 209, 222, 257, 258], "triangular": [97, 186, 187, 316, 320, 337, 714, 771, 772, 774, 775, 895, 934], "ed_plot": 97, "triu_idx": 97, "triu_indic": 97, "idx0": 97, "idx1": 97, "nanmedian": 97, "im1": 97, "cax1": 97, "set_label": [97, 223, 255], "mu": [97, 229, 255, 302, 644], "im2": 97, "cax2": 97, "histogram": [97, 184, 331, 332, 866], "previou": [97, 149, 166, 170, 177, 187, 196, 197, 198, 207, 228, 229, 233, 235, 246, 282, 286, 288, 291, 294, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 489, 490, 526, 527, 545, 547, 548, 614, 646, 660, 671, 834, 854, 876, 946, 951], "pair": [97, 130, 147, 163, 170, 194, 215, 216, 217, 219, 223, 237, 238, 255, 263, 270, 281, 284, 293, 298, 306, 309, 323, 328, 331, 332, 333, 334, 336, 338, 339, 342, 344, 345, 346, 347, 350, 355, 370, 483, 490, 550, 551, 575, 602, 635, 636, 644, 656, 670, 682, 714, 771, 773, 774, 784, 785, 786, 787, 789, 790, 821, 834, 852, 856, 857, 860, 868, 874, 875, 879, 891, 894, 896, 898, 899, 934], "isnan": 97, "arrang": [97, 177, 191, 196, 246, 273, 277, 392, 840], "light": [97, 163, 168, 197, 217, 227, 302, 317, 319, 331, 332, 333, 334, 486, 493, 550, 551, 636, 834, 866, 870, 883, 889], "horizont": [97, 107, 161, 163, 166, 167, 168, 206, 218, 226, 237, 255, 288, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 636, 656, 834, 855, 870, 882, 883, 889, 894, 899], "stand": [97, 181, 195, 201, 309, 745, 952], "insert": [97, 177, 195, 243, 328, 336, 355, 370, 509, 525, 602, 656, 821, 840], "syring": 97, "tip": [97, 232, 277, 423, 937, 939, 946], "saniti": [97, 147, 170, 208, 212, 229, 283, 291, 312, 519, 749], "implausibli": [97, 229, 255, 777], "interestingli": [97, 320], "though": [97, 101, 139, 177, 182, 186, 194, 198, 205, 209, 217, 226, 229, 230, 232, 233, 234, 239, 255, 285, 317, 319, 320, 336, 838], "distinct": [97, 98, 223, 277, 328, 331, 332, 333, 334, 483, 490, 550, 551, 635, 784, 786, 787, 789, 790, 853, 868, 875, 891, 896, 898], "unlik": [97, 166, 167, 175, 176, 182, 186, 196, 207, 226, 229, 231, 243, 282, 316, 320, 330, 331, 332, 333, 334, 339, 345, 347, 430, 460, 491, 672, 789, 790, 899], "ch1": 97, "ch2": [97, 250], "9760": [97, 109], "9759": [97, 109], "lesser": [97, 287, 292, 550, 551, 889], "trough": [97, 170], "monoton": [97, 128, 562, 666, 839], "discrep": [97, 320], "driven": [97, 223, 255, 441, 490, 545], "blink": [97, 99, 109, 120, 121, 149, 170, 198, 219, 226, 228, 231, 232, 234, 235, 243, 245, 270, 277, 287, 307, 325, 331, 332, 570, 635, 651, 657, 736, 737], "flatten": [97, 146, 233, 255, 259, 265, 277, 290, 853], "axvspan": [97, 123, 177], "compel": 97, "evid": [97, 140, 229, 230, 277, 636, 815, 818], "judici": [97, 309], "electrolyt": [97, 277, 644], "tri": [97, 186, 187, 194, 201, 204, 284, 318, 320, 331, 332, 337, 338, 342, 344, 346, 386, 434, 506, 538, 714, 717, 733, 753, 757, 760, 894, 929], "those": [97, 101, 105, 126, 168, 170, 177, 183, 187, 191, 192, 194, 195, 196, 197, 198, 201, 206, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 250, 251, 255, 273, 279, 288, 291, 303, 309, 310, 316, 320, 323, 326, 331, 332, 333, 334, 336, 344, 364, 378, 380, 392, 395, 424, 425, 426, 428, 438, 439, 485, 489, 499, 504, 506, 507, 512, 516, 535, 550, 551, 562, 581, 614, 622, 635, 636, 638, 639, 652, 653, 654, 663, 667, 677, 679, 686, 733, 736, 737, 752, 770, 779, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 813, 814, 816, 817, 860, 866, 867, 870, 872, 873, 880, 887, 890, 938, 941], "biolog": [97, 226, 233, 234, 277, 316, 320, 603], "midwai": [97, 670], "aid": [97, 277, 302, 306, 670], "recov": [97, 192, 288, 434], "impli": [97, 188, 251, 270, 336, 398, 433, 566, 936], "unbridg": 97, "ch0": 97, "bridged_idx_simul": 97, "data_orig": 97, "rng": [97, 119, 120, 121, 141, 222, 229, 255, 588, 636, 669, 688, 736, 737, 738, 747, 748, 750, 771, 772, 773, 774, 775], "random": [97, 110, 117, 119, 120, 121, 141, 185, 217, 218, 222, 226, 229, 232, 252, 255, 256, 258, 263, 264, 265, 284, 285, 287, 547, 588, 636, 669, 688, 736, 737, 738, 747, 748, 750, 771, 772, 773, 774, 775], "default_rng": [97, 258], "seed": [97, 117, 122, 139, 141, 232, 251, 252, 256, 258, 263, 264, 265, 284, 298, 541, 588, 636, 669, 688, 736, 737, 738, 747, 748, 750, 763, 771, 772, 773, 774, 775], "raw_sim": [97, 120, 121], "bridged_data": 97, "tile": [97, 141, 212], "back": [97, 101, 109, 114, 143, 166, 169, 184, 187, 188, 192, 197, 198, 206, 207, 227, 229, 232, 233, 234, 235, 268, 281, 286, 290, 302, 309, 324, 331, 332, 333, 334, 341, 434, 439, 498, 524, 550, 551, 636, 870, 936], "raw_virtu": 97, "data_virtu": 97, "raw_comp": 97, "data_comp": 97, "With": [97, 134, 141, 148, 188, 197, 198, 215, 218, 233, 234, 239, 245, 252, 309, 310, 319, 320, 331, 332, 333, 334, 349, 525, 550, 551, 576, 636, 721, 834, 871, 884, 936, 945, 950, 952], "comp": [97, 195, 286, 336], "108628963104301e": 97, "1398345563221063e": 97, "brought": [97, 182], "impend": 97, "help": [97, 99, 147, 161, 166, 170, 171, 172, 177, 185, 186, 187, 188, 192, 195, 197, 198, 207, 212, 215, 217, 223, 226, 227, 228, 230, 231, 232, 234, 246, 259, 280, 282, 284, 286, 291, 303, 306, 307, 308, 309, 310, 316, 318, 320, 321, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 510, 512, 518, 542, 550, 551, 559, 566, 567, 574, 585, 636, 689, 695, 728, 733, 747, 750, 776, 784, 788, 831, 834, 843, 866, 880, 894, 941, 946, 948, 955], "quest": 97, "technician": [97, 316, 317], "noisi": [97, 119, 168, 176, 227, 229, 234, 237, 240, 255, 263, 265, 270, 294, 316, 336, 660, 661, 664, 736, 737, 748], "bid": [97, 162, 197, 277, 286, 291, 292, 293, 294, 312, 317, 331, 332, 380, 550, 551, 942, 949], "tsv": [97, 293, 398], "kohm": 97, "passiv": [97, 226], "accept": [97, 121, 166, 195, 197, 198, 215, 227, 228, 229, 232, 233, 234, 243, 281, 283, 284, 285, 286, 288, 290, 291, 293, 294, 302, 303, 304, 306, 307, 308, 309, 311, 326, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 382, 413, 428, 447, 448, 449, 456, 458, 550, 551, 576, 638, 653, 654, 769, 771, 772, 774, 775, 786, 787, 789, 790, 834, 860, 867, 868, 874, 892, 934], "from_list": 97, "impedance_cmap": 97, "cn": [97, 898], "cax": [97, 139, 143, 260, 273], "omega": [97, 136], "hopefulli": [97, 212, 226, 270, 523], "convinc": [97, 177], "tenk": [97, 98, 277, 644, 645], "kayser": [97, 98, 277, 644, 645], "electroencephalogram": [97, 277, 644], "offici": [97, 98, 217, 277, 302, 309, 310, 576, 636, 644, 645, 697, 938, 950], "feder": [97, 277, 636, 644], "112": [97, 142, 195, 197, 227, 236, 242, 255, 259, 270, 272, 277, 644, 956], "545": [97, 277, 644], "march": [97, 277, 302, 644], "s1388": [97, 139, 277, 644], "2457": [97, 139, 277, 644], "00553": [97, 277, 644], "arnaud": [97, 277, 636, 644], "delorm": [97, 277, 636, 644], "scott": [97, 139, 170, 240, 277, 302, 303, 306, 307, 308, 316, 507, 545, 636, 644], "makeig": [97, 139, 170, 277, 316, 507, 545, 636, 644], "jneumeth": [97, 101, 229, 260, 277, 503, 636, 644, 744, 771, 772, 774, 775], "2003": [97, 222, 270, 277, 316, 489, 644], "009": [97, 100, 148, 155, 166, 175, 195, 252, 277, 644], "194": [97, 111, 195, 223, 236, 277, 279, 320, 956], "eeg_bridg": [97, 111, 956], "laplacian": [98, 222, 277, 284, 290, 495, 645, 728], "sharper": [98, 229], "impact": [98, 163, 204, 227, 270, 281, 301, 483], "166799": [98, 193, 208, 231], "714": [98, 193, 208, 223, 231, 260], "date": [98, 100, 103, 107, 108, 109, 117, 120, 167, 172, 177, 193, 194, 195, 216, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 273, 281, 282, 285, 286, 287, 288, 290, 292, 302, 303, 307, 309, 323, 325, 331, 332, 333, 334, 336, 550, 551, 552, 563, 566, 672, 783, 941], "decemb": [98, 100, 103, 107, 108, 109, 117, 120, 167, 172, 177, 193, 194, 195, 226, 227, 228, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 252, 273], "2002": [98, 100, 103, 109, 117, 120, 139, 167, 172, 177, 192, 193, 194, 195, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 252, 255, 273, 277, 320, 325, 603, 766, 768, 773], "gmt": [98, 100, 103, 107, 108, 109, 117, 120, 167, 172, 177, 193, 194, 195, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 240, 243, 244, 245, 246, 252, 273], "146": [98, 100, 103, 109, 117, 120, 167, 172, 177, 184, 192, 193, 194, 195, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 252, 259, 260, 273, 277], "172": [98, 109, 120, 193, 194, 195, 223, 226, 227, 229, 230, 233, 234, 235, 236, 237, 243, 244, 245, 246, 255, 260, 273, 277, 330, 331, 332, 333, 334, 744, 749, 784, 788], "hh": [98, 100, 103, 107, 108, 109, 117, 120, 167, 172, 177, 193, 194, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 252, 273], "ss": [98, 100, 103, 107, 108, 109, 117, 120, 167, 172, 177, 193, 194, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 252, 273, 320], "raw_csd": 98, "evoked_csd": 98, "stiff": [98, 645], "flexibl": [98, 169, 198, 216, 239, 292, 294, 304, 834], "set_size_inch": [98, 231], "this_evoked_csd": 98, "contour": [98, 128, 147, 184, 198, 269, 283, 284, 291, 300, 308, 323, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 667, 784, 786, 787, 789, 790, 836, 853, 854, 868, 871, 872, 875, 879, 888, 891, 896, 898, 955], "n\u03bb\u00b2": 98, "perrin": [98, 105, 227, 277, 320, 645], "pernier": [98, 105, 227, 277, 320, 645, 802, 812, 813, 816], "bme": [98, 277, 645], "1987": [98, 202, 229, 277, 645], "326089": [98, 277, 645], "jacqu": [98, 105, 227, 277, 320, 645, 802, 812, 813, 816], "olivi": [98, 105, 227, 277, 320, 423, 636, 645, 802, 812, 813, 816], "fran\u0107oi": [98, 105, 227, 277, 320, 645], "echalli": [98, 105, 227, 277, 320, 645], "184": [98, 102, 105, 195, 223, 227, 259, 260, 277, 320, 645, 678], "187": [98, 102, 105, 195, 201, 214, 223, 227, 236, 260, 277, 320, 636, 645, 956], "1989": [98, 105, 227, 277, 320, 645], "90180": [98, 105, 227, 277, 320, 645], "mike": [98, 277, 645], "cohen": [98, 146, 277, 286, 645, 800, 802, 812, 853], "theori": [98, 191, 204, 237, 277, 645, 671], "j\u00fcrgen": [98, 232, 277, 636, 645], "craig": [98, 277, 645], "methodologi": [98, 128, 277, 423, 645], "electrophysiologi": [98, 277, 645], "171": [98, 102, 154, 195, 223, 229, 232, 255, 259, 260, 277, 280, 458, 614, 645, 678, 741, 746], "173": [98, 171, 184, 195, 223, 236, 255, 259, 277, 344, 645], "ijpsycho": [98, 277, 645], "eeg_csd": [98, 111, 956], "eog_event_id": 99, "eog_ev": [99, 228, 325, 649, 662, 665], "add_ev": [99, 198, 286, 300, 341, 550, 551], "audr": 99, "visr": 99, "squeez": [99, 167, 259, 260, 265], "375": [99, 107, 121, 195, 226, 228, 234], "dc": [99, 192, 194, 198, 212, 217, 226, 228, 229, 230, 231, 232, 234, 239, 244, 284, 287, 288, 308, 319, 326, 331, 333, 334, 336, 410, 550, 551, 636, 638, 671, 889], "offset": [99, 120, 162, 187, 194, 198, 212, 218, 226, 228, 229, 231, 232, 233, 234, 240, 243, 244, 245, 286, 290, 293, 301, 302, 307, 319, 323, 325, 326, 330, 331, 332, 333, 334, 336, 430, 512, 524, 550, 551, 570, 585, 639, 656, 685, 698, 764, 784, 788, 834], "saccad": [99, 198, 218, 219, 226, 228, 231, 232, 234, 240, 570, 635], "firwin2": [99, 172, 198, 218, 226, 228, 229, 231, 232, 234, 284, 296, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "hann": [99, 110, 135, 136, 172, 198, 226, 228, 229, 231, 232, 234, 284, 331, 332, 333, 334, 494, 519, 521, 522, 550, 551, 609, 610, 735, 736, 737, 749], "1502": [99, 198, 228, 232], "435": [99, 111, 223, 260, 956], "eog_artifact_histogram": [99, 111, 956], "basic": [100, 109, 139, 176, 177, 184, 187, 188, 191, 192, 197, 198, 199, 202, 220, 226, 231, 232, 233, 234, 237, 243, 246, 247, 252, 271, 272, 277, 294, 317, 320, 323, 331, 336, 380, 396, 443, 460, 512, 518, 561, 633, 786, 898, 956], "thorough": [100, 191, 227, 321], "elimin": [100, 195, 231, 233, 237, 255, 263, 265, 296, 320, 424, 425, 426, 483, 663, 936], "slow": [100, 155, 163, 167, 170, 176, 229, 231, 238, 277, 309, 317, 331, 332, 475, 476, 488, 609, 610, 669, 804, 824, 868], "drift": [100, 167, 229, 231, 238, 239, 292, 636, 685], "1653": [100, 101], "offpca": [100, 103, 120, 193, 194, 195, 226, 227, 228, 230, 232, 233, 234, 237, 243, 244, 245, 246, 252], "offaverag": [100, 120, 195, 228, 232], "raw_clean": [100, 110, 231, 679], "evoked_befor": 100, "evoked_aft": 100, "epochs_aft": 100, "spatial_color": [100, 121, 126, 163, 170, 176, 177, 234, 246, 250, 283, 284, 288, 304, 331, 332, 333, 334, 550, 551, 786, 787, 789, 790, 870, 873, 890], "706": [100, 111, 170, 236, 956], "eog_regress": [100, 111, 956], "intermitt": 101, "extern": [101, 177, 206, 215, 237, 277, 302, 316, 317, 320, 331, 332, 333, 334, 410, 412, 416, 504, 513, 514, 515, 516, 550, 551, 636, 646, 647, 660, 671], "magnet": [101, 107, 146, 176, 182, 202, 215, 230, 231, 239, 260, 274, 277, 316, 317, 319, 411, 603, 636, 650, 853, 943], "fail": [101, 234, 282, 284, 287, 294, 302, 304, 305, 306, 307, 308, 309, 310, 427, 434, 502, 504, 533, 567, 568, 646, 647, 660, 671, 689, 691, 695, 720, 722, 929], "succe": [101, 187, 197, 948], "choos": [101, 108, 134, 141, 142, 161, 167, 172, 177, 186, 188, 206, 207, 216, 222, 226, 229, 231, 232, 237, 257, 270, 284, 291, 305, 309, 310, 324, 331, 332, 338, 339, 342, 344, 345, 346, 347, 387, 524, 603, 611, 635, 641, 648, 661, 664, 671, 698, 747, 750, 770, 834, 852, 855, 894, 899, 900, 936, 941], "made": [101, 143, 181, 198, 226, 229, 255, 281, 283, 286, 292, 298, 301, 302, 303, 307, 309, 310, 317, 331, 332, 337, 339, 344, 345, 347, 382, 396, 559, 685, 749, 867, 869, 899, 941], "whose": [101, 122, 170, 194, 196, 215, 223, 252, 293, 310, 320, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 512, 517, 526, 527, 545, 547, 548, 550, 551, 595, 614, 636, 641, 651, 653, 654, 661, 737, 788, 789, 860, 863, 866, 876, 881, 890, 891, 914, 915, 918], "particularli": [101, 187, 217, 231, 255, 320, 331, 332, 333, 334, 507, 510, 550, 551, 636, 660, 945], "heavi": [101, 263, 265, 292, 936], "jeff": [101, 277, 292, 294, 302, 636], "hanna": [101, 277, 287, 288, 305, 306, 636], "sample_reference_meg_nois": 101, "refmeg": 101, "165353": 101, "530": [101, 107, 235, 236, 260, 277], "30000": [101, 482], "select_pick": 101, "plot_kwarg": [101, 183, 231, 239], "raw_tog": 101, "ica_kwarg": 101, "picard": [101, 103, 109, 232, 285, 636, 949], "fit_param": [101, 103, 198, 284, 287, 290, 483, 484, 485, 486, 487, 488, 490, 491, 493, 494, 500, 636, 637], "all_pick": 101, "ica_tog": 101, "allow_ref_meg": [101, 636], "bad_comp": 101, "find_bads_ref": [101, 294, 636], "plot_properti": [101, 109, 192, 232, 282, 284, 287, 291, 292, 293, 303, 636, 939], "patient": [101, 103, 109, 162, 192, 198, 232, 287], "took": [101, 103, 109, 192, 198, 232, 636], "dpss": [101, 109, 130, 131, 163, 168, 169, 192, 198, 232, 268, 269, 287, 305, 331, 332, 333, 334, 496, 550, 551, 786, 789, 798, 804, 814, 817], "raw_sep": 101, "ref_pick": 101, "ica_ref": 101, "ica_sep": 101, "think": [101, 170, 198, 223, 229, 255, 311, 319], "ekg": [101, 162], "cardiac": [101, 238], "ref_comp": 101, "get_sourc": [101, 283, 300, 636], "ref_": 101, "recognis": 101, "cora": [101, 277, 293, 303, 636], "kim": [101, 277, 293, 303, 636], "nadia": [101, 277, 636], "voggel": [101, 277, 636], "magnetoencephalograph": [101, 277, 636], "108592": [101, 277, 636], "find_ref_artifact": [101, 111, 956], "fnir": [102, 191, 195, 196, 220, 221, 241, 242, 277, 282, 290, 291, 292, 293, 294, 302, 303, 308, 319, 320, 331, 332, 333, 334, 336, 380, 396, 422, 441, 443, 512, 550, 551, 575, 581, 584, 633, 673, 674, 675, 677, 678, 784, 786, 787, 788, 789, 790, 834, 852, 860, 869, 874, 949, 956], "mail": [102, 255, 951], "robertluk": 102, "net": [102, 196, 222, 277, 303, 320, 489, 766, 948], "exact": [102, 130, 230, 255, 263, 270, 277, 284, 301, 303, 319, 320, 331, 332, 333, 334, 357, 500, 550, 551, 603, 771, 773, 774, 785, 791, 793, 794, 796, 946], "fnirs_data_fold": [102, 238], "fnirs_cw_amplitude_dir": [102, 238], "raw_intens": [102, 238], "raw_od": [102, 238], "new_annot": [102, 245], "set_annot": [102, 107, 108, 163, 194, 218, 228, 245, 286, 287, 288, 325, 331, 332, 550, 551, 638, 672, 955], "23238": [102, 238], "2974": [102, 238], "464": [102, 170, 197, 236, 238, 255, 260, 344], "spike": [102, 109, 316, 324, 678], "person": [102, 177, 219, 238, 309, 310, 316, 336], "optod": [102, 217, 238, 291, 293, 317, 584, 675, 834, 852], "corrupted_data": 102, "750": [102, 107, 169, 222, 260, 317], "corrupted_od": 102, "245": [102, 195, 211, 228, 236, 259, 260, 277, 320], "8924": 102, "8923": 102, "suppli": [102, 128, 178, 198, 206, 234, 250, 255, 285, 287, 288, 291, 292, 293, 294, 329, 330, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 429, 456, 507, 517, 518, 550, 551, 636, 651, 677, 678, 725, 784, 788, 859, 860, 879], "corrected_tddr": 102, "said": [102, 201], "fishburn": [102, 277, 678], "ruth": [102, 277, 678], "ludlum": [102, 277, 678], "chandan": [102, 277, 678], "vaidya": [102, 277, 678], "andrei": [102, 277, 678], "medvedev": [102, 277, 678], "tddr": [102, 277, 291, 303, 678], "motion": [102, 277, 290, 640, 678], "025": [102, 155, 162, 166, 175, 195, 218, 226, 229, 252, 255, 277, 657, 678], "428": [102, 111, 236, 260, 956], "fnirs_artifact_remov": [102, 111, 956], "pierreablin": 103, "9009": [103, 198, 232], "run_ica": [103, 281, 287, 290], "t0": [103, 127, 211, 270, 324, 437, 791, 792, 793], "fit_tim": 103, "822": [103, 111, 236, 260, 956], "ica_comparison": [103, 111, 956], "evoked_interp": 105, "product": [105, 113, 146, 152, 176, 196, 215, 216, 222, 227, 234, 274, 277, 303, 310, 320, 336, 399, 496, 764, 814, 815, 817, 818, 844], "evoked_interp_mn": 105, "\u03b1": [105, 168, 234, 246], "0e": [105, 222, 234], "212": [105, 111, 195, 229, 236, 260, 277, 956], "interpolate_bad_channel": [105, 111, 956], "bilater": [106, 234, 290, 732], "repeat": [106, 120, 128, 140, 166, 187, 191, 193, 233, 234, 243, 244, 255, 261, 262, 266, 267, 279, 287, 290, 298, 301, 302, 309, 325, 331, 332, 333, 334, 336, 342, 344, 429, 507, 550, 602, 603, 617, 633, 636, 651, 680, 698, 713, 756, 765, 767, 768, 772, 775, 776, 788, 816, 834, 874, 936, 950, 956], "head_po": [106, 107, 236, 237, 290, 504, 660, 671, 735, 736, 737, 749], "simulated_quat": 106, "simulated_movement_raw": 106, "raw_stat": 106, "simulated_stationary_raw": 106, "34208": 106, "955": [106, 109, 169, 223, 260], "backward": [106, 229, 279, 281, 282, 286, 288, 294, 301, 320, 323, 331, 332, 333, 334, 441, 483, 489, 490, 494, 511, 518, 519, 521, 522, 550, 551, 609, 786, 787, 789, 790, 834, 868, 877, 901], "quiver": [106, 329, 834, 864, 878], "306m": [106, 136, 143, 151, 152, 176, 182, 184, 196, 198, 209, 274], "topo_kwarg": [106, 167], "evoked_stat": 106, "naiv": [106, 259], "therebi": [106, 201, 231, 233, 320, 814, 817], "third": [106, 121, 122, 177, 195, 198, 215, 234, 238, 245, 309, 320, 325, 326, 331, 332, 511, 512, 524, 525, 550, 551, 596, 631, 636, 697, 698, 774, 775, 787, 789, 790, 869, 926], "restor": [106, 228, 235, 291, 297, 333, 334, 483, 487, 636, 637, 683, 834, 927], "raw_sss": [106, 198, 237, 323, 550, 551, 572, 671], "evoked_raw_mc": 106, "harmon": [106, 120, 209, 210, 218, 226, 230, 236, 237, 270, 277, 306, 320, 650], "fourth": [106, 229, 245, 320, 541], "cleanli": [106, 195], "evoked_evo_mc": 106, "893": [106, 111, 956], "movement_compens": [106, 111, 956], "contamin": [107, 229, 232, 277, 636], "similarli": [107, 126, 139, 169, 175, 197, 223, 229, 235, 238, 318, 320, 325, 636, 860], "suffer": [107, 316], "adonai": [107, 108, 290, 291], "nune": [107, 108, 277, 290, 291, 744], "data_path_meg": 107, "raw_fname1": [107, 218], "s01_aef_20131218_01": [107, 108, 218], "raw_fname2": [107, 218], "s01_aef_20131218_02": [107, 218], "mismatch": [107, 186, 187, 218, 283, 286, 305, 423, 517, 611, 893], "on_mismatch": [107, 218, 294, 423, 430, 432, 927], "350": [107, 143, 144, 167, 186, 195, 223], "s01_20131218_01": [107, 108, 218], "2400": [107, 108, 210, 218], "864000": [107, 108, 218], "udio001": [107, 108], "eab": [107, 108], "s01": [107, 108], "lt": [107, 142], "br": 107, "gt": 107, "chpi_loc": [107, 236, 411, 413, 414, 415], "original_head_dev_t": 107, "invert_transform": [107, 161], "average_head_dev_t": 107, "val": [107, 128], "val_ori": 107, "010": [107, 121, 155, 166, 175, 181, 195, 252, 277], "020": [107, 155, 156, 157, 166, 175, 195, 252, 956], "090": [107, 236], "160": [107, 108, 110, 151, 195, 196, 197, 212, 215, 223, 236, 255, 259, 260, 277, 406, 614, 648, 661, 664, 741, 746], "370": [107, 195, 277, 337, 342], "380": [107, 223, 255], "430": [107, 236, 255], "460": [107, 210, 218, 223, 236, 260, 277, 314], "470": [107, 236, 255, 260], "490": [107, 236], "510": [107, 170, 222, 225, 236, 255, 270, 956], "520": [107, 223, 260], "540": [107, 223, 252, 277, 364, 365], "560": [107, 223, 235], "580": [107, 223, 236], "610": [107, 236], "620": [107, 260], "630": [107, 260], "640": [107, 133, 138, 209, 222, 223, 236, 250, 956], "650": [107, 108, 172, 239, 260], "680": 107, "690": [107, 260], "710": [107, 236, 260, 277, 644], "740": [107, 222, 260], "760": [107, 236, 260], "780": [107, 260], "790": [107, 236, 260], "810": [107, 236, 260], "820": [107, 260], "840": [107, 223], "850": [107, 236, 302], "880": [107, 206, 223, 236, 260, 277, 364, 365], "890": [107, 236, 277, 344], "910": [107, 222, 236, 260], "920": [107, 128, 169, 236, 256, 260], "930": [107, 236, 260], "950": [107, 204, 214, 236, 260, 270, 956], "970": 107, "990": [107, 163, 236], "353": [107, 163, 165, 170, 174, 195, 236, 260, 956], "355": [107, 180, 195, 222, 236, 255, 260], "356": [107, 195], "182": [107, 195, 218, 223, 226, 236, 242, 255, 260, 956], "361": [107, 195, 236, 259, 262, 264, 956], "362": [107, 195, 223, 251, 255, 256], "363": [107, 195], "367": [107, 195, 222, 227], "371": [107, 156, 159, 195, 222, 255, 264, 267, 956], "372": [107, 195, 223, 255, 260], "373": [107, 195, 222, 236, 260], "376": [107, 120, 121, 122, 175, 192, 193, 195, 205, 222, 243, 255], "379": [107, 223, 236, 260], "382": [107, 223, 236, 255, 277, 744], "385": [107, 222, 236], "386": [107, 111, 255, 956], "388": [107, 168, 174, 277, 956], "389": [107, 111, 112, 236, 258, 260, 262, 956], "391": [107, 255], "392": [107, 212, 214, 236, 255, 260, 956], "394": [107, 223, 236, 766], "395": [107, 255, 260], "397": 107, "399": [107, 223, 260], "404": [107, 255], "405": [107, 236, 260], "409": [107, 146, 236, 260, 277, 853], "mean_distance_limit": [107, 640], "0015": 107, "annotation_mov": 107, "hpi_disp": [107, 640], "disp": 107, "0015m": 107, "0036m": 107, "new_dev_head_t": 107, "ctf_275": [107, 151, 210], "movement_detect": [107, 111, 956], "contract": [108, 310], "clench": [108, 232], "jaw": [108, 232], "swallow": [108, 226, 232], "twitch": 108, "cranial": 108, "notic": [108, 110, 166, 167, 169, 171, 175, 176, 177, 182, 186, 188, 192, 193, 196, 201, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 243, 245, 246, 250, 251, 309, 660], "taken": [108, 121, 163, 168, 219, 227, 231, 233, 234, 260, 263, 270, 284, 287, 291, 310, 317, 324, 325, 333, 334, 336, 337, 341, 342, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 549, 550, 551, 614, 669, 689, 785, 798, 876, 889], "analyt": [108, 140, 277, 295, 299, 331, 332, 333, 334, 550, 551], "divid": [108, 128, 168, 169, 170, 173, 174, 188, 191, 237, 255, 257, 260, 273, 300, 319, 321, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 354, 548, 550, 551, 595, 619, 620, 641, 644, 648, 671, 705, 761, 771, 774, 784, 786, 787, 788, 789, 790, 801, 809, 868, 892, 896, 936, 956], "squar": [108, 140, 155, 166, 175, 176, 177, 188, 194, 195, 204, 216, 229, 243, 250, 252, 255, 257, 268, 277, 290, 319, 320, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 364, 365, 395, 483, 490, 527, 550, 551, 611, 618, 635, 636, 651, 764, 769, 771, 772, 774, 775, 784, 785, 786, 787, 789, 790, 834, 853, 861, 862, 868, 870, 875, 877, 879, 882, 888, 891, 894, 896, 898, 899, 936], "hundr": [108, 232, 233, 541], "bad_muscl": [108, 641], "min_length_good": [108, 641], "fraction": [108, 140, 170, 201, 226, 232, 255, 304, 310, 394, 609, 618, 636, 655, 779, 880], "notch": [108, 218, 230, 239, 416, 522, 550, 551], "1981": 108, "603": [108, 223, 260], "scores_muscl": [108, 641], "threshold_muscl": 108, "annot_muscl": 108, "filter_freq": [108, 641], "zscore": [108, 354, 619, 620, 636, 784, 788, 896], "144": [108, 195, 197, 231, 236, 238, 260, 300, 344], "196": [108, 111, 195, 236, 259, 956], "muscle_detect": [108, 111, 956], "gross": [109, 277, 483], "widespread": [109, 232], "recover": 109, "ubiquit": 109, "postur": [109, 232], "mainten": [109, 234, 302, 309], "appropri": [109, 134, 172, 175, 188, 192, 208, 209, 217, 228, 232, 234, 237, 250, 255, 257, 259, 270, 274, 277, 281, 288, 309, 314, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 386, 392, 429, 459, 460, 550, 551, 599, 614, 770, 834, 860, 889, 894, 899, 936, 941], "wouldn": [109, 281], "pronounc": [109, 229, 936], "simultan": [109, 163, 168, 219, 223, 230, 232, 240, 246, 274, 292, 302, 312, 317, 320, 491, 541, 575, 597, 685, 693, 773, 915], "18019": 109, "1983": [109, 231, 277, 330, 331, 332, 333, 334, 635, 686, 784, 788], "18020": 109, "exclus": [109, 196, 227, 232, 283, 568, 631, 636, 880, 882, 883], "mdash": [109, 232], "plot_sourc": [109, 232, 288, 291, 292, 293, 294, 302, 303, 307, 331, 332, 550, 551, 636, 866, 883, 889], "85861": 109, "103880": 109, "criteria": [109, 166, 192, 228, 233, 234, 238, 285, 324, 331, 332, 341, 631, 636], "slope": [109, 215, 229, 298, 323, 324, 336, 410, 411, 576, 636], "peripher": [109, 636], "pole": [109, 186], "foci": [109, 302, 834], "blob": [109, 263, 264], "worth": [109, 128, 175, 256, 277, 309, 317, 318, 464, 559, 566, 936], "fire": 109, "fuzzi": 109, "textbook": [109, 233, 277, 766], "temporali": 109, "ear": [109, 192, 196, 206, 317], "muscle_idx": [109, 636], "log_scal": [109, 636, 881], "blink_idx": 109, "heartbeat_idx": 109, "muscle_idx_auto": 109, "find_bads_muscl": [109, 303, 304, 305, 636], "s001r01": 109, "s002": [109, 232], "s002r01": 109, "dhani": [109, 277, 636], "dharmaprani": [109, 277, 636], "hoang": [109, 277, 636], "nguyen": [109, 277, 636], "trent": [109, 277, 636], "lewi": [109, 277, 320, 636], "delosangel": [109, 277, 636], "willoughbi": [109, 277, 636], "kenneth": [109, 170, 277, 507, 636], "pope": [109, 277, 636], "38th": [109, 277, 636], "annual": [109, 234, 277, 636, 938], "confer": [109, 170, 277, 367, 507, 636, 938], "societi": [109, 217, 277, 320, 423, 603, 636, 815, 818], "embc": [109, 232, 277, 636], "828": [109, 277, 636], "orlando": [109, 277, 636], "fl": [109, 134, 277, 636], "usa": [109, 226, 277, 636], "7590828": [109, 277, 636], "474": [109, 111, 184, 344, 956], "muscle_ica": [109, 111, 956], "otp": [110, 111, 679, 956], "flux": [110, 237, 239, 317, 320, 331, 332, 333, 334, 550, 551, 633, 784, 786, 787, 788, 789, 790], "jump": [110, 139, 170, 226, 237, 300, 771, 772, 774, 775], "bst_phantom_elekta": [110, 209], "rid": [110, 259], "1522": [110, 195], "dipole_numb": 110, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [110, 209], "47000": [110, 209], "437999": [110, 209], "437": [110, 163, 209, 223], "alongsid": [110, 171, 175, 181, 227, 232, 233, 235, 244, 319, 887, 949], "lump": [110, 671], "compute_bia": 110, "sti201": [110, 209, 336], "036": [110, 166, 175, 195, 209, 252, 277, 744], "1fmm": 110, "worst": [110, 148, 291, 423, 428, 740, 742, 743], "bias_clean": 110, "2mm": [110, 320], "4mm": 110, "samu": [110, 188, 237, 277, 280, 647, 671, 679, 749, 936], "taulu": [110, 188, 237, 277, 280, 504, 647, 671, 679, 749, 936], "1013": [110, 195, 277, 679], "2734641": [110, 277, 679], "169": [111, 126, 195, 236, 255, 259, 260, 277, 770, 956], "virtual_evok": [111, 113, 956], "772": [111, 113, 192, 260, 956], "xdawn_denois": [111, 114, 956], "shift_evok": [111, 112, 956], "hut": 112, "2332": [112, 195, 630], "ax3": [112, 117, 126, 209, 222], "magnomet": 113, "virt_evok": 113, "as_typ": [113, 284, 290, 301, 331, 332, 333, 334], "signal_cov": [114, 637], "xd": 114, "1388": 114, "41640": 114, "epochs_denois": 114, "brief": [117, 122, 192, 226, 246, 255, 309], "introduct": [117, 122, 177, 260, 268, 270, 277, 341, 938], "simplest": [117, 122, 194, 223, 239, 255, 320], "kostiantyn": [117, 121, 122, 277, 285, 287, 288, 304, 744], "maksymenko": [117, 121, 122, 277, 285, 287, 288, 304, 744], "functool": [117, 255, 309, 338, 339, 342, 345, 346, 347], "partial": [117, 175, 177, 192, 228, 243, 244, 255, 277, 287, 292, 294, 312, 317, 331, 332, 338, 339, 342, 345, 346, 347, 386, 673, 815, 818, 834, 860, 901, 905], "determinist": [117, 232, 281], "middl": [117, 122, 139, 186, 192, 229, 233, 250, 298, 309, 320, 329, 336, 338, 339, 342, 345, 346, 347, 519, 855, 864, 894, 899, 900], "frontal": [117, 122, 192, 226, 232, 234, 240, 243, 252, 373, 718, 834], "selected_label": [117, 122], "term": [117, 130, 154, 192, 194, 219, 222, 229, 233, 255, 259, 265, 270, 303, 309, 310, 312, 317, 319, 320, 321, 330, 331, 332, 333, 334, 398, 410, 447, 448, 449, 458, 611, 623, 645, 650, 744, 784, 788, 801, 802, 809, 812], "label_region": 117, "1915": [117, 222], "One": [117, 123, 124, 127, 167, 169, 175, 176, 177, 181, 183, 192, 197, 204, 218, 229, 231, 232, 239, 243, 255, 277, 303, 309, 316, 320, 331, 332, 333, 334, 341, 380, 382, 510, 516, 550, 551, 636, 766, 773, 854, 866, 867, 883, 889, 938], "label_dipol": 117, "source_time_seri": [117, 121, 122], "sin": [117, 119, 120, 121, 122, 141, 229, 250, 251, 252, 410, 680, 750], "n_event": [117, 122, 319, 326, 331, 332, 336, 341, 350, 432, 511, 512, 524, 550, 551, 568, 596, 631, 639, 663, 685, 695, 697, 698, 734, 770, 787, 788, 866, 869, 926], "source_simulator_region": 117, "add_data": [117, 121, 122, 143, 338, 339, 342, 345, 346, 347, 734, 834, 894, 899], "source_simulator_dipol": 117, "gaussian": [117, 121, 141, 148, 178, 187, 188, 229, 232, 251, 255, 316, 320, 331, 332, 333, 334, 545, 669, 738, 802, 812, 813, 815, 816, 818, 845, 867, 876, 897, 936], "raw_region": 117, "iir_filt": [117, 119, 120, 122, 252, 738, 748], "raw_dipol": 117, "cos2": [117, 120, 121, 122, 252, 735, 736, 737, 749], "498": [117, 255], "evoked_region": 117, "evoked_dipol": 117, "stc_true_region": 117, "get_stc": [117, 121, 734], "start_sampl": [117, 243, 734], "stop_sampl": [117, 243, 734], "stc_true_dipol": 117, "stc_est_region": 117, "stc_est_dipol": 117, "0004": 117, "2931": 117, "34986e": 117, "scorer": [117, 281, 290, 489, 500], "rle": [117, 744], "region_result": 117, "thx": 117, "per_sampl": [117, 739, 740, 741, 742, 743, 744, 745, 746], "ax4": 117, "col": [117, 139, 294, 834], "super": [117, 270], "ticklabel_format": 117, "style": [117, 176, 177, 197, 215, 238, 273, 281, 282, 285, 293, 302, 303, 307, 323, 326, 328, 331, 332, 333, 334, 341, 346, 347, 364, 483, 489, 490, 542, 550, 551, 576, 635, 636, 784, 786, 787, 788, 789, 790, 834, 836, 852, 853, 860, 867, 868, 871, 873, 874, 875, 883, 884, 889, 891, 896, 897, 898, 900], "sci": [117, 238, 675], "scilimit": 117, "tweak": [117, 141, 270, 273, 318, 936, 941], "dipole_result": 117, "889": [117, 118, 223, 344, 956], "216": [117, 118, 195, 236, 259, 260, 956], "plot_stc_metr": [117, 118, 956], "452": [118, 236, 255, 344], "simulated_raw_data_using_subject_anatomi": [118, 121, 956], "785": [118, 121, 956], "804": [118, 223, 260, 956], "simulate_raw_data": [118, 120, 956], "841": [118, 120, 163, 260, 956], "source_simul": [118, 121, 122, 956], "simulate_evoked_data": [118, 119, 956], "sample_audvis_ecg": [119, 138, 157, 168, 198, 233, 323], "randomst": [119, 120, 121, 141, 185, 222, 229, 252, 255, 284, 588, 636, 669, 688, 736, 737, 738, 747, 748, 750, 771, 772, 773, 774, 775], "randn": [119, 141, 185, 222, 229, 252, 255, 263, 264, 265], "high_resolut": [119, 895], "wronkiewicz": [120, 279, 280, 281, 299, 301], "wronk": 120, "epoch_dur": [120, 644], "stagger": 120, "sinusoid": [120, 121, 141, 209, 210, 212, 229, 236, 250, 252, 319, 410, 522, 550, 551, 750], "10hz": 120, "global": [120, 140, 148, 155, 168, 170, 175, 176, 181, 188, 192, 209, 234, 277, 279, 293, 308, 309, 319, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 507, 832, 860, 867, 870, 873, 875, 876, 894, 899, 936], "n_samp": [120, 243, 252, 280], "25e": 120, "1e9": [120, 210, 212, 252], "plt_show": [120, 206], "input": [120, 121, 141, 181, 198, 215, 222, 223, 229, 234, 237, 240, 243, 255, 259, 260, 265, 284, 285, 286, 287, 291, 293, 302, 303, 304, 305, 306, 310, 316, 320, 323, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 350, 382, 398, 424, 425, 426, 430, 438, 483, 484, 486, 487, 489, 490, 491, 493, 495, 500, 507, 512, 518, 540, 542, 547, 550, 551, 576, 579, 636, 637, 645, 646, 648, 649, 653, 654, 660, 661, 666, 684, 698, 750, 761, 763, 770, 771, 772, 774, 775, 782, 784, 804, 805, 834, 835, 836, 838, 839, 852, 860, 867, 871, 875, 883, 894, 897, 899], "millimet": [120, 121, 182, 186, 208, 305, 320, 403, 407, 526, 541, 567, 588, 684, 695], "calc": 120, "orphan": 120, "ivana": [121, 287], "kojcic": [121, 287], "deslauri": [121, 122, 287], "gauthier": [121, 122, 286, 287], "sam": [121, 122, 286], "doesn": [121, 166, 182, 196, 197, 232, 234, 235, 237, 243, 257, 260, 270, 291, 293, 294, 306, 307, 309, 316, 447, 448, 449, 452, 453, 454, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 625, 636, 639, 654, 662, 671, 691, 730, 785, 788, 806, 881, 936], "fname_info": 121, "g_temp_sup": 121, "g_t_transv": 121, "s_calcarin": 121, "vice": [121, 160, 186, 229, 320, 342], "versa": [121, 160, 186, 229, 320, 342], "moreov": [121, 163, 233, 234, 255], "ipsilater": [121, 177, 202], "activation_list": 121, "region_nam": 121, "latenc": [121, 169, 170, 171, 175, 260, 277, 285, 333, 334, 338, 339, 342, 345, 346, 347, 507, 771, 772, 774, 775, 836, 871], "sigma": [121, 144, 149, 155, 163, 168, 223, 255, 320, 331, 332, 599, 777, 778, 802, 812, 813, 816, 824, 845, 867, 897], "gf": 121, "rand": [121, 252], "100m": 121, "30m": 121, "15m": 121, "region_id": 121, "events_tmp": 121, "label_tmp": 121, "amplitude_tmp": 121, "latency_tmp": 121, "wf_tmp": 121, "evoked_aud_left": 121, "evoked_vis_right": 121, "mere": [121, 198, 232, 310, 701], "stc_aud": 121, "stc_vi": 121, "stc_diff": 121, "49264": [121, 204], "64e": [121, 204], "32542029": 121, "92022543": 121, "5110744": 121, "christoph": [121, 142, 177, 181, 222, 277, 279, 281, 282, 284, 293, 298, 299, 301, 423, 489, 768], "destrieux": [121, 181, 277], "ander": [121, 181, 204, 277, 320, 603], "dale": [121, 181, 204, 277, 320, 603], "halgren": [121, 181, 277, 603], "sulci": [121, 181, 186, 251, 277], "nomenclatur": [121, 181, 243, 277], "sine": [122, 250, 323, 801, 809], "everi": [122, 130, 140, 167, 170, 177, 194, 198, 201, 223, 230, 231, 232, 246, 270, 273, 309, 326, 330, 331, 332, 333, 334, 417, 532, 540, 547, 548, 588, 636, 638, 653, 654, 658, 669, 688, 736, 737, 738, 747, 748, 750, 771, 772, 773, 774, 775, 784, 788, 936, 937], "significantli": [123, 124, 127, 255, 258, 263, 264, 270, 307, 310, 338, 339, 342, 345, 346, 347, 771, 772, 774, 775], "1332": [123, 124, 171, 192, 195, 257, 258, 259], "epochs1": [123, 263, 506], "condition1": [123, 263], "epochs2": [123, 263, 506], "condition2": [123, 263], "t_ob": [123, 256, 257, 263, 302, 771, 773, 774], "cluster_p_valu": [123, 257, 258, 259, 263, 264, 265], "n_permut": [123, 127, 139, 255, 256, 257, 258, 259, 260, 264, 265, 771, 772, 773, 774, 775], "tail": [123, 139, 177, 255, 257, 258, 259, 260, 263, 270, 283, 329, 771, 772, 773, 774, 775, 813, 816, 864, 895], "out_typ": [123, 139, 255, 257, 258, 259, 291, 293, 771, 772, 774, 775], "stat_fun": [123, 139, 140, 255, 256, 257, 258, 259, 260, 263, 264, 265, 763, 771, 772, 774, 775], "000227": 123, "167093": 123, "3407": 123, "3777": 123, "414": [123, 223, 236, 255], "4079": 123, "587": [123, 223, 236], "761": [123, 260], "4528": 123, "933": [123, 236], "erf": [123, 144, 155, 218, 226, 229, 260, 277, 279, 297, 636, 879, 881, 949], "i_c": 123, "cluster_stats_evok": [123, 129, 956], "discoveri": [124, 259, 277, 306, 768], "pval": [124, 259, 762, 768, 771, 772, 774, 775], "ttest_1samp": [124, 255, 777], "n_test": [124, 773], "threshold_uncorrect": 124, "ppf": [124, 238, 255, 257, 260, 263, 264, 673, 771, 772, 774, 775], "reject_bonferroni": 124, "pval_bonferroni": 124, "threshold_bonferroni": 124, "reject_fdr": 124, "pval_fdr": 124, "indep": [124, 768], "threshold_fdr": 124, "xmin": 124, "xmax": 124, "hline": [124, 167, 333, 334, 870], "uncorrect": [124, 255], "bonferroni": [124, 289, 522, 550, 551, 762, 773], "525": [124, 129, 223, 260, 956], "fdr_stats_evok": [124, 129, 956], "generalis": 126, "tradit": [126, 169, 235, 239, 813, 814, 816, 817, 860], "predictor": [126, 167, 255, 635, 686, 770], "inapplic": 126, "rerp": [126, 277, 770], "smith": [126, 154, 255, 256, 277, 458, 770, 771, 772, 774, 775], "kuta": [126, 277, 770], "jona": [126, 128, 155, 223, 260, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 301, 303, 771, 772, 774, 775], "sassenhagen": [126, 128, 155, 223, 260, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 301, 303, 771, 772, 774, 775], "rerf": 126, "param": [126, 140, 212, 282, 293, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 625, 637, 710], "nathaniel": [126, 277, 770], "marta": [126, 277, 770], "psyp": [126, 167, 177, 229, 260, 277, 770, 771, 772, 774, 775], "12320": [126, 277, 770], "temporal_mask": 127, "logical_and": [127, 141], "50000": 127, "p_valu": [127, 255, 260, 522, 550, 551, 773], "significant_sensor": 127, "significant_sensors_nam": 127, "49999": 127, "0243": [127, 168, 195], "1323": [127, 195], "1333": [127, 195, 263, 265], "1613": [127, 195, 222], "1643": [127, 195], "2423": [127, 195], "2522": [127, 195], "2622": [127, 195], "2632": [127, 195], "2642": [127, 195], "2643": [127, 195], "cbar_fmt": [127, 136, 305, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 868, 875, 879, 888, 891, 896], "342": [127, 129, 140, 148, 188, 195, 260, 277, 333, 334, 423, 876, 936, 956], "sensor_permutation_test": [127, 129, 956], "psycholinguist": [128, 255], "tal": [128, 147, 154, 277, 283, 284, 287, 290, 300, 559, 566], "linzen": [128, 147, 300], "pd": [128, 139, 162, 169, 177, 217, 218, 237], "kword_metadata": [128, 169, 256], "epo": [128, 166, 169, 198, 256, 294, 323, 331, 332, 694], "concret": [128, 169, 170], "consonantvowelproport": [128, 169], "visualcomplex": [128, 169], "film": [128, 169, 256], "783710": [128, 169], "cent": [128, 169], "141553": [128, 169], "shot": [128, 169], "600033": [128, 169], "cold": [128, 169], "657457": [128, 169], "945661": [128, 169], "characterist": [128, 177, 229, 230, 277, 319, 331, 332, 475, 506, 518, 660], "imagin": [128, 139, 233], "df": [128, 139, 166, 171, 218, 243, 255, 256, 257, 263, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 619, 771, 774, 784, 786, 787, 788, 789, 790], "cut": [128, 139, 140, 206, 212, 233, 270, 294, 323, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 648, 649, 662, 665, 671, 675, 950], "split_legend": [128, 260, 860], "percentil": [128, 161, 162, 172, 212, 301, 331, 332, 338, 339, 341, 342, 345, 346, 347, 550, 551, 822, 855, 860, 866, 889, 894, 899, 900], "gfp": [128, 140, 155, 168, 170, 176, 188, 192, 218, 260, 279, 282, 288, 293, 307, 319, 331, 332, 333, 334, 611, 636, 860, 867, 870, 876, 880, 893, 936], "7424": 128, "null": [128, 291, 350, 509, 766], "hypothesi": [128, 198, 256, 762, 766, 768, 773], "colour": [128, 202, 304], "palett": [128, 139, 171], "dark": [128, 197, 198, 293, 302, 331, 332, 550, 551, 636, 834, 866, 883, 889], "reject_h0": 128, "fdr_pval": 128, "plot_imag": [128, 155, 168, 169, 172, 176, 192, 226, 228, 238, 256, 281, 284, 286, 290, 293, 300, 305, 308, 331, 332, 333, 334], "st\u00e9phane": [128, 256, 277, 317, 464], "dufau": [128, 256, 277, 317, 464], "grainger": [128, 256, 277, 317, 464], "katherin": [128, 256, 277, 317, 464, 815, 818], "midglei": [128, 256, 277, 317, 464], "phillip": [128, 167, 256, 277, 282, 284, 285, 303, 317, 459, 464], "holcomb": [128, 256, 277, 317, 464], "pictur": [128, 256, 277, 317, 341, 464], "snapshot": [128, 198, 256, 277, 283, 291, 294, 309, 317, 464, 906], "megastudi": [128, 256, 277, 317, 464], "psycholog": [128, 256, 277, 317, 464], "1887": [128, 222, 256, 277, 317, 464], "1897": [128, 256, 277, 317, 464], "0956797615603934": [128, 256, 277, 317, 464], "matt": [128, 277, 283, 284, 293, 301, 303], "davi": [128, 277], "ford": [128, 277], "friedmann": [128, 277], "pulverm\u00fcl": [128, 277], "william": [128, 222, 277, 489], "marslen": [128, 277], "wilson": [128, 277], "1383": [128, 277], "1400": [128, 277], "2006": [128, 204, 222, 237, 277, 331, 332, 614, 671, 741, 746, 815, 818], "2005": [128, 188, 237, 277, 504, 614, 647, 671, 741, 744, 746, 936], "072": [128, 129, 956], "163": [128, 195, 236, 255, 260, 344], "sensor_regress": [128, 129, 956], "052": [129, 166, 168, 175, 188, 195, 211, 227, 252, 277, 815, 818], "162": [129, 195, 211, 255, 259, 260, 277, 344, 956], "core": [130, 170, 192, 194, 197, 216, 250, 277, 282, 290, 292, 309, 310, 312, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 594, 597, 598, 609, 610, 619, 620, 641, 648, 649, 671, 723, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 836, 868, 871, 890, 941, 942, 949], "clariti": [130, 939], "722": [130, 236, 260, 277, 802, 812, 813, 816], "adapt": [130, 140, 192, 217, 235, 252, 255, 277, 279, 305, 309, 310, 317, 331, 332, 333, 334, 364, 365, 488, 522, 523, 550, 551, 609, 610, 636, 671, 786, 789, 793, 796, 802, 804, 812, 830, 868, 948, 949], "csd_fft": 130, "csd_mt": 130, "convolv": [130, 138, 229, 255, 270, 489, 496], "600hz": 130, "enough": [130, 184, 206, 230, 231, 232, 234, 237, 243, 255, 270, 281, 300, 305, 310, 320, 328, 331, 332, 333, 334, 336, 340, 373, 374, 380, 483, 490, 502, 550, 551, 635, 636, 651, 779, 784, 786, 787, 788, 789, 790, 844, 853, 860, 866, 868, 870, 872, 875, 876, 879, 883, 886, 888, 889, 890, 891, 892, 896, 898, 946], "10th": 130, "greatli": [130, 507], "minim": [130, 167, 195, 229, 250, 270, 320, 331, 332, 429, 491, 506, 646, 770, 814, 817, 834, 936, 946], "csd_wav": 130, "trick": [130, 227, 270, 277, 289, 773, 946], "comma": [130, 292, 293, 294, 309, 323], "plot_dict": [130, 269], "567": [130, 133, 223, 260, 277, 956], "compute_csd": [130, 133, 956], "taper": [131, 141, 286, 297, 302, 305, 331, 332, 333, 334, 488, 496, 522, 550, 551, 609, 610, 786, 789, 793, 796, 798, 804, 814, 817, 868], "prolat": [131, 268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 798, 804], "spheroid": [131, 268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 798, 804], "sequenc": [131, 163, 277, 317, 320, 323, 331, 332, 333, 334, 550, 551, 761, 786, 787, 789, 790, 798, 834, 868], "n_epochs_us": 131, "psd_avg": 131, "set_xlim": [131, 140, 177, 212, 233], "851": [131, 133, 956], "source_power_spectrum_opm": [133, 136, 956], "839": [133, 136, 237, 242, 260, 320, 956], "time_frequency_erd": [133, 139, 302, 956], "571": [133, 139, 223, 260, 956], "time_frequency_global_field_pow": [133, 140, 956], "source_label_time_frequ": [133, 134, 956], "time_frequency_simul": [133, 141, 956], "source_space_time_frequ": [133, 137, 956], "778": [133, 137, 260, 956], "679": [133, 137, 260, 276, 956], "source_power_spectrum": [133, 135, 956], "092": [133, 135, 956], "temporal_whiten": [133, 138, 956], "former": [134, 168, 259, 301, 310, 423, 636], "latter": [134, 168, 177, 194, 320, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 637], "epochs_induc": 134, "subtract_evok": [134, 140, 231, 291, 331, 332, 686, 955], "this_epoch": 134, "itc": [134, 813, 814, 815, 816, 817, 818], "baseline_mod": [134, 619, 620], "multi_label_pow": 134, "return_plv": [134, 620], "l_idx": 134, "l_power": 134, "100hz": 135, "2048": [135, 138, 141, 159, 331, 332, 333, 334, 482, 550, 551, 609, 890], "psd_dspm": 135, "welch": [136, 252, 268, 269, 270, 277, 281, 301, 305, 306, 308, 331, 332, 333, 334, 550, 551, 786, 789, 805, 890], "next_fast_len": 136, "src_fname": [136, 263, 264, 265], "vv_fname": 136, "squid_resting_st": 136, "vv_erm_fnam": 136, "squid_empty_room": 136, "vv_trans_fnam": 136, "opm_fnam": 136, "opm_resting_state_raw": 136, "opm_erm_fnam": 136, "opm_empty_room_raw": 136, "opm_tran": 136, "opm_coil_def_fnam": 136, "vv": 136, "simplifi": [136, 205, 229, 277, 287, 300, 302, 303, 323, 331, 332, 333, 334, 550, 551, 936, 937], "housekeep": [136, 239], "raw_erm": [136, 210, 218, 316], "new_sfreq": 136, "nyquist": [136, 229, 230, 284, 290], "meg2233": 136, "meg1842": 136, "hold": [136, 212, 218, 252, 255, 312, 319, 320, 331, 332, 333, 334, 336, 340, 504, 550, 551, 660, 671, 782, 870, 890, 892], "61999": 136, "60999": 136, "dist": [136, 182, 183, 238, 251, 323, 337, 344, 349, 434, 502, 535, 677, 754, 755, 756, 758, 759], "169022": 136, "169992": 136, "995623": 136, "029776": 136, "088592": 136, "062622": 136, "916188": 136, "395825": 136, "069381": 136, "399641": 136, "914042": 136, "993107": 136, "074371": 136, "090590": 136, "079171": 136, "995577": 136, "050589": 136, "086427": 136, "057412": 136, "994603": 136, "334": [136, 139, 195, 255], "692": [136, 170, 260, 270], "percentag": [136, 232, 280, 331, 332, 638, 740, 741, 742, 743, 744, 746, 822, 865], "freq_band": [136, 163], "topo": [136, 142, 168, 176, 238, 269, 283, 287, 308, 331, 332, 838, 849, 860, 897], "stc_psd": [136, 609], "sensor_psd": [136, 609], "return_sensor": [136, 609, 610], "topo_norm": 136, "keepdim": [136, 163], "stc_norm": 136, "1969": 136, "014611": 136, "18765e": 136, "291": [136, 139, 195, 212, 236, 255, 260], "34378": 136, "07671e": 136, "3720": 136, "1698": 136, "007069": 136, "0841e": 136, "46031": 136, "26253e": 136, "worthwhil": [136, 177, 232], "plot_band": 136, "inferno": [136, 162, 255], "cau": 136, "show_trac": [136, 161, 273, 291, 338, 339, 342, 345, 346, 347, 834, 894, 899], "fig_alpha": 136, "brain_alpha": [136, 339, 345, 347, 899], "70497772": 136, "95689511": 136, "07335117": 136, "profil": [136, 197, 239, 309, 941, 942], "beneath": 136, "fig_beta": 136, "brain_beta": 136, "1893528": 136, "35877086": 136, "88328024": 136, "fig_beta_opm": 136, "brain_beta_opm": 136, "25576851": 136, "68102302": 136, "87437276": 136, "344": [136, 170, 195, 236, 255, 260], "use_fft": [137, 139, 269, 496, 619, 620, 792, 795, 811, 813, 814, 816, 817], "induced_power_": 137, "proj_fnam": [138, 218], "20000": 138, "innov": 138, "d_": 138, "lfilter": [138, 331, 332, 333, 334, 518, 519, 521, 522, 550, 551], "regener": [138, 287, 331, 332], "r_": [138, 320, 741, 746], "dummi": [138, 153, 250, 265], "nfft": [138, 252], "written": [139, 197, 198, 201, 219, 236, 245, 285, 286, 290, 291, 301, 312, 316, 327, 371, 375, 515, 516, 549, 550, 551, 705, 711, 926, 931, 934, 949], "desynchron": [139, 269, 277, 317], "conceptu": [139, 177, 229, 232, 277], "ersp": [139, 284], "perturb": 139, "goal": [139, 163, 309, 310, 312, 318], "35hz": 139, "customari": [139, 320], "klotzsch": [139, 293, 305, 306], "cb": 139, "mpg": 139, "seaborn": [139, 171, 237], "sn": [139, 171, 237], "twoslopenorm": 139, "pcluster_test": 139, "suitabl": [139, 172, 185, 187, 240, 257, 259, 312, 316, 317, 319, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 374, 422, 443, 482, 507, 538, 550, 551, 575, 592, 771, 784, 786, 787, 788, 789, 790], "cnorm": [139, 305, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "asymmetr": [139, 851], "thing": [139, 167, 171, 177, 186, 197, 198, 207, 215, 227, 229, 243, 252, 260, 263, 265, 274, 291, 309, 312, 380, 550, 551, 787, 790, 936], "rdbu": 139, "equal": [139, 166, 173, 174, 175, 177, 191, 194, 198, 201, 202, 206, 226, 229, 245, 246, 263, 265, 286, 288, 291, 292, 293, 300, 303, 310, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 341, 353, 364, 365, 385, 422, 423, 427, 428, 439, 440, 441, 483, 490, 491, 496, 506, 508, 526, 527, 540, 545, 547, 548, 550, 551, 568, 595, 603, 614, 619, 620, 635, 636, 648, 654, 669, 676, 677, 702, 740, 765, 766, 771, 772, 774, 775, 776, 778, 779, 784, 786, 787, 788, 789, 790, 805, 813, 816, 853, 854, 860, 864, 867, 868, 869, 870, 872, 875, 876, 891, 892, 896, 898, 939, 956], "promin": [139, 169, 226, 238, 270, 424, 425, 426], "extrem": [139, 168, 270, 333, 334, 364, 365, 389, 423, 427, 428, 439, 440, 441, 483, 490, 491, 526, 527, 545, 547, 548, 614, 771, 772, 774, 775, 876], "vcenter": 139, "step_down_p": [139, 771, 772, 774, 775], "buffer_s": [139, 255, 259, 260, 263, 264, 265, 606, 771, 772, 774, 775], "tfr_ev": 139, "gridspec_kw": [139, 202, 238, 273], "width_ratio": [139, 202, 238], "stack": [139, 167, 252, 263, 730, 829, 831, 946, 950], "mask_styl": [139, 333, 334, 784, 872], "set_yscal": 139, "724718": 139, "552076": 139, "183231": 139, "337": [139, 195, 236, 260], "324": [139, 195, 239, 242, 255, 956], "329": [139, 177, 180, 195, 236, 956], "328": [139, 140, 148, 188, 195, 222, 255, 277, 333, 334, 423, 876, 936], "528367": 139, "706422": 139, "326": [139, 195, 260], "338": [139, 195, 255], "309": [139, 184, 195, 255, 277, 675, 815, 818], "311": [139, 195, 236], "581589": 139, "346448": 139, "235": [139, 184, 195, 207, 212, 236, 260], "285": [139, 195, 236, 260], "713872": 139, "754759": 139, "360704": 139, "992503": 139, "416450": 139, "327": [139, 195, 236], "308": [139, 190, 195, 236, 260, 956], "044340": 139, "070444": 139, "206": [139, 195, 236, 259], "221": [139, 172, 195, 236, 260], "268": [139, 195, 211, 218, 236], "datafram": [139, 166, 173, 174, 175, 177, 191, 217, 218, 237, 243, 256, 268, 287, 290, 293, 298, 312, 320, 325, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 507, 550, 551, 698, 770, 784, 786, 787, 788, 789, 790, 956], "to_data_fram": [139, 162, 166, 171, 175, 243, 256, 284, 287, 290, 293, 301, 303, 306, 320, 325, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 784, 786, 787, 788, 789, 790], "0000": [139, 309], "473093": 139, "474571": 139, "764021": 139, "9875": 139, "491659": 139, "480088": 139, "762445": 139, "9750": [139, 294], "500872": 139, "469376": 139, "749421": 139, "9625": 139, "500605": 139, "449373": 139, "728686": 139, "9500": 139, "515911": 139, "443439": 139, "719536": 139, "lineplot": [139, 171], "confid": [139, 140, 168, 171, 177, 192, 202, 234, 284, 294, 329, 336, 636, 763, 786, 787, 789, 790, 860, 881, 937], "long_format": [139, 171, 287, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 784, 786, 787, 788, 789, 790], "freq_bound": 139, "delta": [139, 163, 212, 229, 331, 332, 333, 334, 547, 550, 551, 619, 786, 787, 789, 790, 868], "theta": [139, 140, 163, 331, 332, 333, 334, 550, 551, 786, 787, 789, 790, 868], "freq_bands_of_interest": 139, "remove_unused_categori": 139, "reorder_categori": 139, "facetgrid": 139, "margin_titl": 139, "n_boot": 139, "axline_kw": 139, "dash": [139, 166, 176, 198, 230, 233, 237, 238, 246, 292, 308, 328, 331, 332, 333, 334, 550, 551, 786, 787, 789, 790, 860, 861, 887, 890], "set_axis_label": 139, "col_templ": 139, "col_nam": [139, 336], "row_templ": 139, "row_nam": [139, 335], "add_legend": [139, 834], "subplots_adjust": [139, 177, 227, 230, 232, 233, 234, 235, 273], "df_mean": 139, "queri": [139, 166, 171, 175, 191, 247, 256, 268, 326, 331, 332, 510, 788], "groupbi": [139, 171, 177, 256], "reset_index": [139, 171], "col_ord": 139, "violinplot": [139, 171], "deep": [139, 163, 171, 184, 207, 229, 277, 293, 320, 331, 332, 333, 334, 355, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 550, 551, 633, 634, 637, 784, 786, 787, 788, 789, 790, 831, 834, 852], "hue_ord": 139, "gert": [139, 277], "pfurtschel": [139, 277], "fernando": [139, 277, 316], "lope": [139, 277, 316], "da": [139, 277, 307, 316], "silva": [139, 277, 316], "principl": [139, 230, 255, 260, 277, 318, 320], "1842": [139, 195, 277], "1857": [139, 277], "00141": [139, 277], "bernhard": [139, 277, 545], "graimann": [139, 277], "jane": [139, 277], "huggin": [139, 277], "simon": [139, 277, 282, 284, 298, 303, 307], "levin": [139, 277], "ecog": [139, 142, 161, 164, 165, 191, 195, 243, 250, 255, 277, 281, 283, 285, 287, 288, 291, 292, 293, 294, 302, 304, 319, 320, 331, 332, 333, 334, 336, 342, 344, 379, 380, 389, 441, 443, 452, 512, 516, 550, 551, 566, 633, 634, 667, 713, 728, 779, 784, 786, 787, 788, 789, 790, 834, 852, 892, 904, 906, 940, 949, 956], "00697": [139, 277], "exposur": [139, 232, 277, 309], "tone": [139, 192, 277, 317], "1993": [139, 204, 277], "90110": [139, 277], "rectifi": 140, "uncertainti": [140, 268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 798, 804, 949], "importantli": [140, 141, 228, 316], "hari": [140, 141, 154, 204, 277, 300, 301], "neuromagnet": [140, 232, 277, 636], "1997": [140, 206, 233, 234, 277, 320, 364, 365, 737, 802, 812, 813, 816], "s0166": [140, 277], "2236": [140, 277], "10065": [140, 277], "bradlei": [140, 277], "efron": [140, 277], "trevor": [140, 277], "hasti": [140, 277], "institut": [140, 277, 815, 818], "mathemat": [140, 177, 202, 227, 229, 237, 255, 277, 293, 309, 316, 320, 581, 603, 771, 815, 818], "monograph": [140, 277], "cambridg": [140, 177, 277, 423], "univers": [140, 277, 282, 310, 317, 322, 423, 522, 954], "york": [140, 229, 277, 288, 322, 522, 954], "isbn": [140, 177, 229, 252, 277, 330, 331, 332, 333, 334, 364, 365, 423, 766, 784, 788], "14989": [140, 277], "web": [140, 172, 232, 240, 270, 277, 303, 341, 624, 843], "stanford": [140, 277], "casi": [140, 277], "iter_freq": 140, "frequency_map": 140, "job": [140, 230, 232, 239, 305, 308, 323, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 485, 486, 488, 489, 493, 494, 495, 496, 499, 500, 521, 522, 523, 526, 539, 541, 550, 551, 594, 597, 598, 609, 610, 619, 620, 641, 648, 649, 723, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 818, 836, 868, 871, 890], "apply_hilbert": [140, 141, 142, 162, 193, 282, 283, 287, 331, 332, 333, 334, 550, 551], "269399": 140, "077": 140, "1202": 140, "emerg": 140, "bootstrap": [140, 168, 198, 284, 763, 786, 787, 789, 790, 860], "domin": [140, 231, 237, 270, 338, 339, 342, 345, 346, 347, 517, 636], "winter_r": 140, "freq_nam": 140, "ci_low": 140, "ci_up": 140, "dhz": 140, "xy": [140, 142, 162, 207, 320, 389, 503, 835, 906], "horizontalalign": [140, 229, 233], "xycoord": 140, "898": [140, 177, 236], "trade": [141, 229, 814, 817], "bharadwaj": [141, 154, 277, 300, 301], "berkelei": [141, 142, 322, 954], "sim0001": 141, "sim0002": 141, "1024": [141, 771, 772, 774, 775], "burst": [141, 209, 212, 226, 317], "ramp": [141, 229], "logical_or": 141, "on_tim": 141, "han": [141, 290, 291, 293, 663, 736, 737, 813, 814, 816, 817], "sin50hz": 141, "4000": [141, 192, 234, 323, 575], "41160": 141, "41159": 141, "time_bandwidth": [141, 496, 814, 817], "sim": [141, 320, 611], "nmore": 141, "1025": [141, 170, 268], "balanc": [141, 228, 229, 255, 259, 279, 740, 765], "strictli": [141, 177, 187, 194, 195, 204, 229, 231, 282, 294, 357, 834], "regard": [141, 235, 252, 260, 269, 284, 300, 320, 656], "recoverd": 141, "lossless": 141, "disregard": 141, "numer": [141, 182, 188, 197, 229, 232, 240, 243, 255, 260, 282, 288, 302, 303, 310, 312, 320, 337, 344, 422, 446, 518, 550, 551, 636, 761, 771, 772, 774, 775, 799, 936, 942], "all_n_cycl": 141, "isinst": [141, 166, 326, 549], "exagger": 141, "wise": [141, 188, 226, 230, 287, 319, 333, 334, 492, 773], "epochs_hilb": 141, "tfr_data": 141, "413": [141, 204, 277], "3301": [141, 240, 255], "avgpow": 141, "avg_pow": [141, 813, 814], "mesh": [141, 182, 186, 187, 201, 284, 290, 291, 294, 302, 303, 333, 334, 337, 339, 345, 347, 376, 377, 429, 482, 538, 539, 714, 834, 836, 871, 895, 899, 913, 934, 948], "electrocorticographi": [142, 162, 277, 281, 317, 320, 331, 332, 333, 334, 550, 551, 633, 634, 784, 786, 787, 788, 789, 790], "scatterplot": 142, "pyvista": [142, 197, 207, 287, 291, 292, 294, 303, 308, 312, 318, 329, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 550, 551, 834, 837, 846, 850, 852, 864, 892, 894, 895, 899, 901, 906, 941, 942], "own": [142, 177, 203, 209, 234, 246, 257, 260, 273, 274, 309, 310, 331, 332, 333, 334, 338, 341, 342, 346, 389, 548, 550, 551, 671, 834, 867, 894, 936, 945, 946], "dirnam": [142, 153, 185, 197], "pathlib": [142, 151, 170, 183, 196, 198, 288, 293, 294, 302, 319, 341, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 598], "noqa": [142, 144, 233, 255], "f401": [142, 255], "misc_path": [142, 161, 208], "ecog_data_fnam": 142, "sample_ecog_ieeg": 142, "click": [142, 159, 168, 176, 177, 182, 187, 207, 218, 227, 232, 245, 246, 269, 279, 282, 285, 287, 292, 293, 299, 300, 301, 309, 312, 318, 328, 331, 332, 333, 334, 336, 340, 346, 347, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 835, 849, 857, 866, 867, 868, 870, 872, 874, 875, 879, 883, 888, 889, 890, 891, 892, 896, 897, 898, 900, 941, 948], "layout_path": 142, "__file__": [142, 151, 196, 197, 198], "layout_nam": 142, "custom_layout": 142, "lout": [142, 196, 297, 381, 394, 395, 406], "sample_ecog": 142, "apply_tran": [142, 161, 182, 186, 208, 294, 380], "conjunct": [142, 255, 312, 326, 331, 332, 485], "xy_pt": [142, 162], "beta_pow": 142, "fig2": [142, 177, 196, 274], "coolwarm": 142, "cbar": [142, 172, 223, 255, 273, 855], "set_axis_off": [142, 162, 198], "bbox_inch": [142, 302], "tight": [142, 177, 187, 301, 302, 308, 333, 334, 809, 870, 872], "mous": [142, 218, 245, 274, 284, 293, 318, 328, 329, 331, 332, 333, 334, 340, 483, 490, 542, 550, 551, 635, 636, 784, 786, 787, 789, 790, 835, 836, 850, 852, 864, 866, 867, 868, 870, 871, 872, 875, 879, 888, 890, 891, 896, 898], "imread": [142, 149, 198], "plot_click": [142, 835, 955], "to_layout": [142, 835, 955], "got": [142, 170, 197, 227, 232, 252, 294, 945], "3d_to_2d": [142, 156, 956], "scalarmapp": 143, "low_contrast": [143, 154, 161, 207, 217, 338, 339, 342, 345, 346, 347, 834, 894, 899], "rh_data": [143, 201, 342, 345], "rh_vertno": [143, 201, 342, 345, 747], "recon": [143, 161, 181, 186, 288, 294, 302, 306, 377, 435, 622], "brodmann": 143, "ba44": 143, "add_head": [143, 161, 182, 217, 294, 834], "seghead": [143, 182, 183, 184, 187, 198, 202, 208, 209, 323, 329, 834, 852, 864], "add_sensor": [143, 161, 162, 217, 238, 294, 306, 834], "role": [143, 191, 196, 203, 213, 214, 309, 310, 328, 329, 333, 335, 336, 342, 433, 602, 603, 614, 692, 701, 703, 716, 732, 834, 844, 852, 864, 904, 956], "sample_audvis_set1": 143, "ylorrd": 143, "add_dipol": [143, 302, 834], "1e8": 143, "static": [143, 206, 237, 243, 277, 283, 287, 290, 293, 323, 330, 458, 668, 822, 823, 824, 941], "add_ax": [143, 273], "827": [143, 156, 236, 260, 956], "embed": [144, 182, 198, 228, 229, 284, 309, 341, 949], "simplic": [144, 203, 223, 229, 255, 259, 302, 936], "instal": [144, 161, 162, 172, 181, 187, 197, 207, 286, 287, 294, 302, 306, 309, 321, 323, 331, 332, 333, 334, 349, 371, 375, 455, 458, 482, 485, 489, 494, 521, 522, 523, 550, 551, 788, 936, 937, 950], "order_func": 144, "spectral_embed": 144, "rbf_kernel": 144, "this_data": 144, "good_pick": 144, "bad_pick": [144, 239], "plt_time": 144, "overlay_tim": [144, 155, 281, 331, 332, 867], "renaud": [144, 277], "keriven": [144, 277], "maureen": [144, 277], "clerc": [144, 277], "1051": [144, 223, 236, 277], "1061": [144, 277], "2037139": [144, 277], "channel_epochs_imag": [144, 156, 956], "322": [145, 156, 195, 223, 260, 956], "eeg_on_scalp": [145, 156, 956], "upon": [146, 170, 183, 196, 198, 274, 286, 294, 309, 310, 331, 332, 341, 489, 550, 551, 835, 853, 906, 948], "hosaka": [146, 277, 286, 853], "flow": [146, 204, 277, 286, 853], "underneath": [146, 286, 853], "poor": [146, 226, 229, 238, 287, 853], "man": [146, 177, 198, 277, 853], "hidehiro": [146, 277, 853], "electrocardiologi": [146, 277, 853], "1976": [146, 277, 853], "s0022": [146, 277, 853], "0736": [146, 277, 853], "80041": [146, 277, 853], "khansheraz": 146, "evoked_mag": 146, "evoked_grad": 146, "topoplot": [146, 170, 196, 232, 270, 303, 853, 856], "max_time_idx": 146, "latitud": [146, 853], "longitud": [146, 186, 853], "radial": [146, 184, 609, 610, 620, 724, 853], "cartesian": [146, 201, 204, 320, 853], "info_from": [146, 304, 853], "info_to": [146, 853], "raw_ctf": 146, "raw_ctf_info": 146, "evoked_arrowmap": [146, 156, 956], "engeman": 147, "miko\u0142aj": [147, 282, 283, 284, 285, 287, 290, 292, 294, 302, 303, 305, 306, 954], "magnuski": [147, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 294, 302, 303, 305, 306, 954], "mmagnuski": [147, 281], "swp": [147, 322, 954], "pl": 147, "20m": 147, "regularli": [147, 192, 194], "multilin": [147, 290], "all_tim": 147, "rm": [147, 176, 177, 215, 252, 281, 293, 307, 320, 328, 331, 332, 333, 334, 342, 483, 490, 550, 551, 611, 635, 636, 784, 870, 874, 875, 879, 880, 891, 898], "drawn": [147, 176, 246, 255, 294, 304, 328, 331, 332, 333, 334, 339, 340, 345, 347, 483, 490, 550, 551, 635, 636, 651, 736, 737, 784, 786, 787, 789, 790, 853, 854, 859, 860, 866, 868, 869, 872, 874, 875, 879, 888, 890, 891, 892, 896, 898, 899, 908], "spectral_r": 147, "circl": [147, 187, 196, 219, 251, 279, 300, 303, 309, 319, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 840, 853, 858, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "extrapol": [147, 176, 238, 287, 290, 291, 292, 305, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "box": [147, 187, 216, 291, 301, 308, 328, 331, 332, 333, 334, 340, 381, 389, 406, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 830, 853, 868, 870, 872, 874, 875, 879, 888, 891, 896, 898, 948], "stretch": [147, 228, 834], "beyond": [147, 170, 192, 217, 265, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 588, 635, 636, 651, 779, 784, 786, 787, 789, 790, 830, 853, 868, 875, 879, 888, 889, 891, 896, 898], "axes_row": 147, "extr": 147, "margin": [147, 273, 788, 860], "exceed": [147, 210, 234, 237, 257, 331, 636, 669, 788], "mask_param": [147, 260, 328, 331, 332, 333, 334, 483, 490, 550, 551, 635, 784, 786, 787, 789, 790, 853, 868, 875, 891, 896, 898], "markers": [147, 260, 328, 331, 332, 333, 334, 483, 490, 550, 551, 635, 784, 786, 787, 789, 790, 853, 868, 875, 891, 896, 898], "markerfacecolor": [147, 328, 331, 332, 333, 334, 483, 490, 550, 551, 635, 784, 786, 787, 789, 790, 853, 868, 875, 891, 896, 898], "_time": 147, "significant_channel": 147, "_channel": 147, "_ch": 147, "perhap": [147, 229, 234, 243, 255], "imped": [147, 229, 277, 291], "image_interp": [147, 303, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "cubic": [147, 303, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 834, 836, 853, 868, 871, 875, 879, 888, 891, 896, 898], "smoothest": 147, "voronoi": [147, 303, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "debug": [147, 188, 197, 309, 323, 447, 448, 449, 452, 453, 454, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 730, 829, 832, 936], "unalt": [147, 430], "properli": [147, 162, 181, 182, 187, 194, 209, 216, 227, 233, 234, 243, 244, 263, 265, 274, 277, 280, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308, 309, 316, 323, 326, 330, 331, 332, 333, 334, 336, 342, 371, 375, 416, 429, 485, 489, 494, 521, 522, 523, 550, 551, 653, 654, 728, 749, 784, 788, 830, 876, 902, 941, 945], "animate_topomap": [147, 281, 290, 303, 304, 333, 334], "frame_r": [147, 333, 334], "blit": [147, 333, 334], "evoked_topomap": [147, 156, 956], "excel": [148, 176, 186, 229, 252], "diagnost": [148, 191, 198, 232, 237, 241], "rare": [148, 281, 282, 294, 310, 341], "80e": [148, 238, 320], "uncom": 148, "fewer": [148, 170, 177, 187, 196, 198, 226, 229, 244, 255, 265, 284, 331, 332, 333, 334, 341, 485, 489, 494, 495, 519, 521, 522, 550, 551, 662, 667, 814, 817, 834, 872], "008": [148, 155, 166, 171, 175, 177, 192, 195, 237, 252, 277, 671], "method_param": [148, 205, 423, 428, 603, 604, 605, 606, 607, 609, 610, 616, 619, 620], "diagonal_fix": [148, 188, 286, 423], "return_estim": [148, 188, 423, 428, 936], "likelihood": [148, 177, 188, 203, 277, 320, 328, 333, 334, 423, 428, 636, 876, 936], "loglik": [148, 328], "1891": 148, "unseen": [148, 188, 203, 423, 936], "descend": [148, 188, 203, 287], "1628": 148, "673": [148, 223, 236, 260], "1802": [148, 206, 227, 277], "672906104771": 148, "829870948659": 148, "1031535821069": 148, "evoked_whiten": [148, 156, 956], "cover": [149, 166, 173, 175, 177, 179, 181, 188, 189, 191, 192, 194, 197, 198, 199, 213, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 241, 243, 246, 247, 255, 266, 270, 271, 275, 291, 302, 309, 320, 321, 337, 341, 671, 679, 688, 768, 931], "tracker": [149, 191, 218, 241, 242, 307, 309, 317, 325, 331, 524, 568, 570, 627, 656, 657, 658, 685, 845, 936, 956], "asc": [149, 240, 320, 570, 658], "plot_gaz": [149, 240], "task_fpath": 149, "et_fpath": [149, 240], "freeview_eyetrack": 149, "stim_fpath": 149, "naturalist": 149, "pixel": [149, 168, 198, 219, 240, 255, 273, 302, 317, 319, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 483, 490, 542, 550, 551, 635, 636, 656, 658, 784, 786, 787, 789, 790, 834, 845, 852, 853, 864, 868, 875, 879, 888, 891, 894, 896, 898, 899], "eyegaz": [149, 195, 219, 240, 308, 331, 332, 333, 334, 550, 551, 633, 657, 659, 784, 786, 787, 788, 789, 790, 845], "legibl": [149, 219, 240], "pupil": [149, 195, 240, 308, 331, 332, 333, 334, 550, 551, 633, 657, 659, 784, 786, 787, 788, 789, 790], "bad_acq_skip": [149, 219, 240, 285, 302, 307, 325, 331, 332, 333, 334, 550, 551, 570, 572, 660, 671], "interpolate_gaz": [149, 240, 657], "renam": [149, 163, 177, 216, 238, 243, 279, 281, 284, 288, 291, 294, 299, 302, 306, 307, 309, 325, 331, 332, 333, 334, 336, 380, 408, 550, 551, 559, 566, 719, 834, 846, 901, 950, 955], "dvn": 149, "intuit": [149, 198, 223, 270, 484, 499, 742, 743], "event_dict": [149, 166, 168, 171, 175, 177, 192, 194, 238, 240, 244, 250, 268], "bad_": [149, 240, 245, 287, 307], "bad_blink": [149, 219, 228, 240, 307, 657], "canva": [149, 274, 320, 331, 332, 333, 334, 784, 845, 849, 874, 897], "screen": [149, 166, 197, 219, 240, 277, 284, 287, 306, 308, 317, 323, 331, 332, 550, 551, 636, 656, 658, 845, 866, 883, 889, 902], "1920x1080": [149, 656, 658, 845], "height": [149, 197, 212, 240, 273, 285, 304, 319, 323, 336, 338, 339, 342, 345, 346, 347, 377, 381, 389, 394, 542, 656, 658, 834, 844, 845, 894, 899], "px_width": 149, "px_height": 149, "1920": [149, 240, 656, 658, 845], "get_cmap": [149, 162], "10001": [149, 229, 302], "gaze": [149, 240, 656, 659, 845], "greater": [149, 170, 192, 227, 232, 255, 258, 282, 292, 331, 332, 343, 424, 425, 426, 427, 524, 636, 666, 667, 773, 788, 815, 818, 834], "darkest": 149, "set_und": 149, "0003": [149, 322], "eyetracking_plot_heatmap": [149, 156, 956], "root_path": 151, "parent": [151, 176, 187, 196, 197, 198, 305], "241": [151, 195, 230, 236, 260, 522, 550, 551], "324474": 151, "bti_path": 151, "test_pdf_linux": 151, "test_config_linux": 151, "test_hs_linux": 151, "magn": [151, 215, 320], "3600wh": 151, "pdf": [151, 211, 222, 277, 321, 323, 458, 545, 562], "critic": [151, 177, 186, 197, 204, 211, 229, 237, 255, 257, 260, 317, 671, 730, 832, 939], "mne_create_comp_data": [151, 211, 323, 562], "print_tabl": [151, 211], "magnes_3600wh": [151, 211], "kit_path": 151, "sqd": [151, 197, 212, 320, 323, 554, 576, 697], "artemis_data_2017": 151, "10h": 151, "38m": 151, "59s_phantom_1k_hpi_1": 151, "artemis123_mneloc": 151, "1863": 151, "hpifit": [151, 236, 323], "ok": [151, 215, 236, 327, 337], "997": [151, 161, 165, 229, 236, 237, 277, 956], "cardin": [151, 192, 195, 243, 250, 290, 319, 373, 374, 403, 502], "meg_sensor": [151, 156, 283, 956], "mne_helmet": [152, 156, 956], "ship": [153, 196, 255, 302, 320, 331, 332, 333, 334, 336, 390, 391, 396, 397, 535, 550, 551, 952], "joan": [153, 163, 185, 284, 285, 286, 287, 288, 290, 304], "massich": [153, 163, 185, 284, 285, 286, 287, 288, 290, 304], "mailsik": [153, 163, 185], "op": [153, 185, 210, 211, 236, 331, 332, 333, 334, 550, 551], "against": [153, 166, 167, 175, 232, 243, 277, 280, 283, 294, 309, 741, 746], "current_montag": 153, "fiduci": [153, 162, 182, 185, 186, 196, 215, 216, 283, 284, 286, 288, 290, 292, 293, 294, 299, 302, 303, 304, 308, 316, 319, 320, 380, 383, 384, 393, 403, 404, 434, 435, 436, 457, 555, 558, 576, 586, 697, 722, 852], "mri_fiduci": [153, 182, 185, 209, 292, 852], "montage_sgskip": [153, 156, 956], "hcp": [154, 277, 283, 458, 949], "mmp1": [154, 277, 283, 458], "448": [154, 197, 236, 242, 260, 287, 344, 956], "mmp": [154, 458], "Of": [154, 168, 226, 233, 234, 252, 676, 677], "acknowledg": [154, 229], "wu": 154, "minn": 154, "publicli": [154, 192, 310, 317, 475, 476], "hcpmmp1": 154, "add_annot": [154, 161, 181, 207, 308, 834], "aud_label": 154, "l_a1_roi": 154, "hcpmmp1_combin": [154, 207, 458], "aparc_sub": 154, "matthew": [154, 206, 277, 458], "glasser": [154, 277, 458], "timothi": [154, 277, 294, 458], "coalson": [154, 277, 458], "emma": [154, 277, 458, 636], "robinson": [154, 206, 277, 458], "hacker": [154, 277, 458], "harwel": [154, 277, 458], "essa": [154, 277, 458], "yacoub": [154, 277, 458], "kamil": [154, 277, 458], "ugurbil": [154, 277, 458], "jesper": [154, 277, 284, 458], "andersson": [154, 277, 458], "beckmann": [154, 277, 458], "jenkinson": [154, 277, 458], "stephen": [154, 206, 222, 255, 256, 277, 284, 458, 489, 636, 771, 772, 774, 775, 815, 818], "essen": [154, 277, 458], "modal": [154, 216, 259, 265, 277, 458], "cerebr": [154, 277, 458], "nature18933": [154, 277, 458], "javeria": [154, 277], "hashmi": [154, 277], "fahimeh": [154, 277, 290], "mamashli": [154, 277, 290], "konstantino": [154, 277], "michmizo": [154, 277], "manfr": [154, 277, 289], "kitzbichl": [154, 277, 289], "santosh": [154, 277], "ganesan": [154, 277], "keri": [154, 277], "lee": [154, 277, 301, 337, 342, 636, 669], "garel": [154, 277], "susan": [154, 277, 737], "whitfield": [154, 277], "gabri": [154, 277], "randi": [154, 277, 603], "gollub": [154, 277], "jian": [154, 277], "kong": [154, 277], "kunjan": [154, 277], "rana": [154, 277], "kenet": [154, 277], "matur": [154, 277], "trajectori": [154, 277], "network": [154, 222, 277, 308, 364, 489, 636, 951], "mediat": [154, 277, 815, 818], "018": [154, 155, 166, 175, 195, 252, 277, 652], "062": [154, 156, 956], "notat": [155, 233, 259, 265, 312, 320], "odd": [155, 229, 320, 392, 482], "test_raw": [155, 194, 323], "eog1": 155, "eog2": 155, "011": [155, 166, 175, 195, 229, 252, 277], "012": [155, 166, 175, 195, 246, 252], "017": [155, 166, 175, 195, 212, 243, 252], "019": [155, 166, 175, 195, 235, 252, 277], "021": [155, 166, 167, 175, 192, 195, 252], "022": [155, 166, 175, 195, 210, 252], "023": [155, 166, 168, 175, 195, 252, 277], "024": [155, 166, 175, 195, 252, 260, 277, 771, 772, 774, 775], "po7": [155, 270], "026": [155, 166, 175, 195, 252, 277], "poz": [155, 270], "027": [155, 166, 175, 195, 252, 255, 277, 314, 364, 636, 777, 778], "028": [155, 166, 175, 195, 252, 265, 267, 277, 644, 815, 818, 956], "029": [155, 166, 175, 195, 252, 277], "standard_1020": [155, 177, 185, 196, 250, 575], "fdt": [155, 194, 567, 695], "msec": [155, 177, 784], "new_ev": [155, 244, 509, 511, 601], "203125": 155, "12z": [155, 256], "group_bi": [155, 168, 256, 286, 288, 292, 303, 323, 331, 332, 333, 334, 550, 551, 866, 867, 872, 889], "vline": [155, 287, 333, 334, 860, 874], "roi_erpimage_by_rt": [155, 156, 956], "topo_custom": [156, 159, 956], "ssp_projs_sensitivity_map": [156, 157, 956], "xhemi": [156, 160, 343, 429, 708, 956], "topo_compare_condit": [156, 158, 956], "741": [156, 158, 956], "ecg_fnam": 157, "ssp_ecg_map": 157, "arg": [157, 259, 265, 309, 323, 336, 344, 766], "audio": [158, 201, 218, 223, 268, 277, 331, 332, 333, 334, 490, 550, 551, 786, 788, 789, 805], "nleft": 158, "20hz": 159, "return_freq": [159, 163, 268, 269, 270, 304, 786, 787, 789, 790], "my_callback": 159, "ch_idx": [159, 236, 257, 269], "callback": [159, 274, 283, 300, 434, 834, 849, 916, 917, 919], "fig_facecolor": [159, 168, 268, 331, 332, 333, 334, 550, 551, 784, 786, 787, 789, 790, 849, 897], "axis_facecolor": [159, 268, 331, 332, 333, 334, 550, 551, 786, 787, 789, 790, 849], "axis_spinecolor": [159, 849], "on_pick": [159, 849], "gcf": 159, "639": [159, 192, 198, 236, 260], "stc_path": [160, 198], "fsaverage_sym": [160, 429], "left_right": [160, 429], "stc_xhemi": 160, "70314401": 160, "48867635": 160, "29876034": 160, "stereoelectroencephalographi": [161, 317], "talairach": [161, 186, 206, 207, 285, 288, 320, 346, 347, 435, 436, 715, 900, 936], "xfm": [161, 285, 320, 346, 347, 436, 715, 900], "involv": [161, 162, 182, 184, 186, 226, 229, 230, 233, 245, 310, 320, 436, 638, 918], "pip": [161, 162, 172, 187, 309, 941, 944, 947, 950], "conda": [161, 162, 187, 286, 309, 312, 941, 942, 944, 947, 950], "li": [161, 162, 186, 198, 235, 277, 290, 291, 292, 293, 294, 302, 303, 308, 320, 954], "adam2392": [161, 162], "sample_seeg_ieeg": 161, "1310640": 161, "1370605": 161, "411": [161, 255, 260, 277, 423], "1371": [161, 183, 223, 268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 798, 804], "fixat": [161, 219, 240, 308, 317, 507, 570], "isi": [161, 218], "mni_tal": [161, 162, 380, 393], "this_subject_dir": 161, "head_mri_t": 161, "sample_seeg": 161, "mri_mni_t": [161, 715], "taliarach": 161, "fro": [161, 527, 821], "rostral": [161, 834], "warp": [161, 182, 185, 197, 277, 294, 317, 668], "combine_transform": 161, "view_kwarg": [161, 183, 186], "tan": [161, 239, 294], "video": [161, 182, 186, 187, 303, 306, 317, 910, 938], "nearbi": [161, 162, 222, 226, 234, 237, 251, 277, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 666, 671, 779, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "atla": [161, 207, 277, 294, 317, 319, 320, 323, 329, 338, 339, 342, 344, 345, 346, 347, 377, 517, 590, 733, 936], "lami": 161, "lttr": 161, "isdigit": 161, "lpm": 161, "lsma": 161, "elec": [161, 256], "lofc": 161, "lpcn": 161, "lphg": 161, "lent": 161, "rahp": 161, "ltpo": 161, "lstg": 161, "rphp": 161, "lpli": 161, "lpit": 161, "lbri": 161, "lacn": 161, "ctx": 161, "putamen": 161, "add_volume_label": [161, 207, 294, 302, 305, 307, 834], "lfp": 161, "Its": [161, 236, 320], "view_layout": [161, 206, 338, 339, 342, 345, 346, 347, 834, 894, 899], "sagitt": [161, 186, 206, 329, 834, 854, 864], "websit": [161, 162, 177, 203, 207, 216, 234, 274, 309, 310, 475, 476, 651, 945], "m4": 161, "sai": [161, 162, 229, 230, 233, 235, 243, 250, 257, 260, 309, 316, 830, 948], "20_seeg": [161, 165, 956], "epilepsi": [162, 293], "seizur": [162, 293], "complementari": [162, 228, 312], "seeg": [162, 164, 165, 191, 195, 243, 250, 281, 285, 287, 288, 291, 292, 293, 294, 301, 304, 306, 319, 320, 331, 332, 333, 334, 336, 344, 346, 379, 380, 384, 435, 441, 443, 512, 516, 535, 550, 551, 557, 566, 632, 633, 634, 636, 713, 715, 728, 779, 784, 786, 787, 788, 789, 790, 834, 852, 858, 892, 940, 949, 956], "liberti": [162, 277, 291, 293], "hamilton": [162, 277, 291, 293], "libertyhamilton": 162, "mne_bid": 162, "bidspath": 162, "read_raw_bid": 162, "bids_root": 162, "bids_path": 162, "pt1": 162, "session": [162, 166, 168, 175, 176, 192, 197, 198, 227, 237, 239, 245, 297, 302, 308, 316, 321, 331, 332, 445, 446, 550, 551, 636, 658, 866, 883, 889, 897, 936, 941], "presurgeri": 162, "ictal": 162, "datatyp": [162, 219, 285], "trans_bandwidth": [162, 229, 519, 522, 550, 551], "get_posit": [162, 273, 292, 380], "add_mni_fiduci": [162, 294, 380], "posterior": [162, 182, 186, 302, 319, 337, 380, 392, 545, 761], "commissur": [162, 380], "epoch_length": 162, "269079": 162, "269": [162, 195, 202, 214, 236, 956], "2201": 162, "ad1": 162, "att1": 162, "ast1": 162, "g16": 162, "slt1": 162, "sensor_color": [162, 308, 834, 852], "gamma_power_t": 162, "gamma_info": 162, "445": [162, 222], "gamma_power_at_15": 162, "rgba": [162, 294, 337, 338, 339, 342, 345, 346, 347, 834, 851, 855, 894, 899, 900], "tolist": 162, "funcanim": [162, 333, 334], "gamma_pow": 162, "x_line": 162, "epileptiform": 162, "progress": [162, 177, 191, 197, 228, 277, 286, 287, 292, 305, 306, 309, 486, 493], "posteriorli": 162, "becom": [162, 167, 208, 228, 229, 231, 232, 237, 239, 263, 264, 265, 302, 309, 310, 312, 320, 331, 332, 333, 334, 685, 857, 872, 950], "xyz_pt": 162, "vmid": 162, "intra": [162, 755], "4932": 162, "649": [162, 165, 260, 956], "645": [162, 165, 209, 956], "30_ecog": [162, 165, 956], "cite": [163, 309, 317, 330, 331, 332, 333, 334, 459, 522, 784, 788], "toi": [163, 255, 312], "answer": [163, 234, 260, 270, 309, 936], "question": [163, 167, 237, 270, 309, 311, 937, 945], "alic": 163, "tackl": 163, "chambon": [163, 277, 287], "stan": 163, "randomforestclassifi": 163, "accuracy_scor": 163, "functiontransform": 163, "associ": [163, 170, 194, 198, 218, 226, 233, 234, 236, 240, 255, 257, 274, 277, 288, 307, 309, 320, 325, 326, 330, 331, 332, 333, 334, 491, 534, 550, 551, 553, 597, 695, 697, 734, 766, 771, 776, 784, 787, 788, 858, 867, 869, 870, 872, 887, 888, 941], "ground": [163, 192, 234, 312, 636, 887], "truth": [163, 234, 636, 887], "expert": [163, 188, 309, 310, 936], "alice_fil": 163, "bob_fil": 163, "raw_train": 163, "marker": [163, 177, 194, 197, 203, 215, 216, 222, 228, 233, 286, 287, 288, 291, 293, 294, 317, 323, 328, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 483, 486, 490, 493, 496, 499, 500, 526, 539, 541, 550, 551, 554, 576, 594, 597, 598, 609, 610, 619, 620, 635, 636, 641, 648, 649, 651, 697, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 784, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 836, 853, 866, 868, 871, 875, 879, 888, 889, 890, 891, 895, 896, 898], "infer_typ": [163, 302, 306, 559, 566], "annot_train": 163, "emit_warn": [163, 325, 550, 551, 672], "resp": [163, 195, 243, 293, 320, 331, 332, 333, 334, 336, 341, 379, 550, 551, 566, 633, 784, 786, 787, 788, 789, 790, 866, 889], "physionet_sleep": 163, "sc4001e0": 163, "recogn": [163, 197, 234, 288, 290, 293, 306, 310, 566], "oro": 163, "nasal": 163, "subment": 163, "temp": [163, 336], "rectal": 163, "7949999": 163, "79499": 163, "wake": 163, "rem": [163, 194], "abbrevi": [163, 201, 233, 304, 320, 834], "rapid": [163, 170, 222, 229, 277, 489], "long": [163, 166, 167, 172, 226, 229, 230, 232, 236, 244, 245, 250, 256, 263, 264, 282, 287, 290, 291, 302, 304, 309, 310, 312, 316, 329, 331, 332, 333, 334, 338, 339, 342, 343, 345, 346, 347, 423, 429, 550, 551, 606, 639, 644, 671, 784, 786, 787, 788, 789, 790, 834, 945, 946], "awak": 163, "night": [163, 317, 475], "imbal": [163, 259, 646, 647, 660, 671, 682], "trim": [163, 331, 332], "occurr": [163, 170, 226, 507, 509], "annotation_desc_2_event_id": 163, "redefin": 163, "events_train": 163, "chunk_dur": [163, 194, 287, 512], "stage_color": 163, "rcparam": [163, 229, 273, 286, 892], "prop_cycl": 163, "by_kei": 163, "188": [163, 195, 210, 223, 236, 255, 259], "raw_test": 163, "annot_test": 163, "events_test": 163, "epochs_test": 163, "sc4011e0": 163, "8405999": 163, "84059": 163, "1103": [163, 204, 277], "109": [163, 195, 223, 232, 236, 255, 259, 317, 450], "562": 163, "signatur": [163, 227, 259, 304, 306, 309, 318, 486, 493, 500], "ci": [163, 172, 229, 238, 255, 268, 282, 309, 312, 636, 763, 786, 787, 789, 790, 860, 881], "\u00b5v\u00b2": 163, "eeg_power_band": 163, "compat": [163, 170, 197, 279, 281, 284, 286, 288, 293, 294, 298, 299, 301, 306, 307, 320, 324, 331, 332, 333, 334, 388, 431, 441, 456, 464, 489, 491, 494, 496, 497, 498, 523, 542, 550, 551, 609, 636, 786, 787, 789, 790, 834, 852, 866, 868, 889, 890, 901, 936, 948, 950], "psds_band": 163, "boilerpl": 163, "sckit": 163, "manner": [163, 177, 204, 255, 256, 283, 326, 331, 332], "thank": [163, 166, 309], "pipe": [163, 309, 317], "n_estim": [163, 486, 493], "acc": 163, "6854034451495921": 163, "ye": [163, 236, 237, 255, 292, 333, 550, 572, 701, 936], "databas": [163, 277, 459, 475, 476], "mathieu": [163, 277, 294, 302, 303, 304, 305, 306, 307, 308, 954], "galtier": [163, 277], "pierrick": [163, 277], "arnal": [163, 277], "gill": [163, 277], "wainrib": [163, 277], "architectur": [163, 277, 292], "rehabilit": [163, 277], "758": [163, 277], "769": [163, 236, 260, 277], "tnsre": [163, 277], "2813138": [163, 277], "kemp": [163, 277, 317, 475, 476], "zwinderman": [163, 277, 317, 475, 476], "tuk": [163, 277, 317, 476], "kamphuisen": [163, 277, 317, 475, 476], "obery\u00e9": [163, 277, 317, 476], "feedback": [163, 277, 299, 317, 476], "microcontinu": [163, 277, 317, 476], "1185": [163, 277, 317, 476], "1194": [163, 277, 317, 476], "867928": [163, 277, 317, 476], "1458": [163, 165, 956], "60_sleep": [163, 165, 956], "polysomnographi": [164, 165, 191, 287, 317, 325, 331, 475, 476, 512, 566, 689, 786, 869, 956], "psg": [164, 165, 191, 287, 317, 325, 331, 475, 512, 566, 689, 786, 869, 956], "auto_tutori": [165, 174, 180, 190, 197, 200, 214, 221, 225, 242, 248, 249, 254, 262, 267, 272, 276], "possibli": [166, 175, 192, 198, 229, 257, 258, 302, 316, 333, 334, 343, 364, 365, 378, 423, 427, 428, 439, 440, 441, 456, 483, 490, 526, 527, 545, 547, 548, 553, 614, 636, 655, 660, 766, 834, 876], "del_proj": [166, 175, 226, 233, 234, 235, 283, 331, 332, 333, 334, 550, 551, 955], "plot_psd": [166, 168, 246, 268, 269, 281, 283, 284, 285, 288, 290, 291, 294, 301, 307, 309, 320, 331, 332, 333, 334, 341, 550, 551, 955], "plot_psd_topomap": [166, 168, 268, 290, 291, 294, 301, 304, 331, 332, 333, 334, 550, 551, 955], "sample_data_fold": [166, 168, 171, 172, 181, 192, 193, 194, 195, 196, 226, 227, 228, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 268], "sample_data_raw_fil": [166, 168, 171, 172, 192, 193, 194, 195, 226, 227, 228, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 268], "sample_data_events_fil": [166, 171, 244], "events_from_fil": [166, 244], "bare": [166, 192], "integ": [166, 168, 169, 171, 175, 176, 177, 186, 192, 194, 195, 197, 201, 216, 219, 230, 232, 243, 244, 250, 260, 273, 283, 287, 288, 290, 291, 292, 294, 319, 320, 323, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 364, 365, 378, 381, 382, 389, 395, 397, 423, 424, 425, 426, 427, 428, 439, 440, 441, 483, 485, 490, 499, 500, 504, 505, 512, 521, 522, 525, 526, 527, 541, 545, 547, 548, 550, 551, 586, 612, 613, 614, 635, 636, 638, 651, 652, 653, 654, 663, 667, 677, 679, 686, 695, 697, 701, 732, 734, 752, 770, 779, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 817, 820, 853, 860, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 879, 880, 881, 883, 885, 887, 888, 889, 890, 891, 896, 898], "299693": [166, 177], "699283": 166, "quot": [166, 222, 309, 320, 330, 331, 332, 333, 334, 784, 788], "didn": [166, 170, 285, 288, 292, 293, 302, 331, 518, 788], "string": [166, 169, 170, 171, 175, 176, 194, 195, 197, 198, 228, 240, 243, 244, 245, 268, 274, 281, 285, 286, 287, 288, 290, 291, 293, 294, 298, 302, 304, 306, 308, 309, 312, 314, 324, 325, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 378, 380, 389, 395, 397, 408, 422, 423, 427, 428, 432, 439, 444, 447, 448, 449, 452, 453, 454, 456, 461, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 485, 486, 490, 493, 499, 500, 504, 507, 512, 517, 518, 531, 533, 535, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 590, 595, 603, 609, 610, 633, 634, 635, 636, 638, 639, 651, 652, 653, 654, 656, 657, 660, 662, 663, 667, 671, 677, 679, 686, 695, 697, 701, 719, 740, 741, 742, 743, 744, 746, 749, 752, 761, 765, 767, 770, 779, 780, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 817, 821, 822, 824, 834, 843, 852, 853, 860, 866, 867, 868, 870, 872, 873, 874, 875, 876, 879, 880, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 907, 919, 936, 941, 942], "buttonpress": [166, 175, 177, 192, 194, 198, 244], "mention": [166, 170, 177, 192, 194, 195, 196, 201, 229, 233, 234, 235, 243, 260, 309, 422, 907, 908], "haven": [166, 245, 286, 309, 321], "turn": [166, 175, 176, 178, 201, 218, 227, 232, 233, 234, 235, 270, 274, 282, 283, 284, 304, 310, 317, 320, 324, 326, 331, 332, 524, 592, 733, 835, 857], "accommod": [166, 284, 287], "request": [166, 187, 192, 197, 198, 232, 234, 237, 243, 244, 282, 290, 292, 303, 306, 310, 319, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 482, 550, 551, 553, 559, 566, 636, 648, 649, 691, 728, 765, 767, 785, 786, 787, 789, 790, 844, 868, 877, 879, 894, 899, 909, 936, 937, 948, 949], "drop_log": [166, 168, 228, 291, 293, 298, 300, 326, 331, 332, 341, 648, 649, 788, 865], "too_short": [166, 177, 331, 788], "forget": [166, 183, 184, 194, 309], "brows": [166, 197, 198, 207, 227, 245, 288, 306, 318, 329, 331, 332, 550, 551, 636, 864, 866, 883, 889, 952], "seem": [166, 167, 169, 170, 177, 178, 188, 218, 229, 232, 234, 250, 270, 309, 636], "duplic": [166, 169, 177, 178, 187, 250, 282, 283, 284, 286, 287, 288, 302, 326, 331, 332, 333, 334, 336, 337, 341, 380, 408, 550, 551, 719], "scrollbar": [166, 288, 302, 331, 332, 550, 551, 636, 866, 883, 889], "focus": [166, 167, 207, 245, 309, 331, 332, 550, 551, 636, 741, 746, 866, 883, 889, 938, 946, 949], "bracket": [166, 175, 177, 195, 216, 243, 250, 268, 302], "catch": [166, 168, 192, 207, 259, 265, 309], "charact": [166, 192, 195, 227, 243, 244, 282, 287, 290, 291, 293, 294, 302, 308, 309, 392, 567, 585, 689, 695, 740, 741, 742, 743, 744, 746, 843], "tag": [166, 170, 177, 191, 271, 272, 277, 282, 290, 293, 294, 302, 307, 309, 312, 317, 319, 323, 331, 332, 336, 341, 380, 396, 507, 512, 561, 585, 633, 786, 788, 843, 898, 956], "complain": 166, "ask": [166, 170, 186, 309, 310, 314, 317, 937], "except": [166, 169, 197, 201, 202, 219, 237, 243, 288, 291, 292, 294, 302, 306, 309, 320, 331, 332, 333, 334, 336, 351, 352, 396, 417, 418, 423, 475, 524, 550, 551, 552, 625, 637, 660, 711, 775, 779, 824], "keyerror": [166, 328, 331, 332, 336, 355, 370, 602, 656, 788, 821], "rais": [166, 170, 235, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 302, 303, 306, 308, 309, 310, 326, 328, 331, 332, 333, 334, 336, 337, 341, 342, 345, 351, 352, 355, 370, 384, 407, 411, 417, 418, 423, 427, 430, 432, 434, 439, 440, 475, 502, 510, 524, 530, 531, 533, 550, 551, 572, 602, 625, 636, 656, 670, 691, 702, 720, 722, 725, 729, 734, 771, 772, 774, 775, 784, 786, 787, 788, 789, 790, 821, 869, 880, 927, 929], "reorder_channel": [166, 175, 243, 285, 292, 331, 332, 333, 334, 550, 551, 784, 786, 787, 788, 789, 790], "exploratori": [166, 175, 193, 233, 243, 256, 318], "epochs_eeg": 166, "new_ord": [166, 175], "epochs_subset": 166, "032": [166, 175, 195, 252, 256, 277], "033": [166, 175, 195, 252, 272], "034": [166, 175, 195, 252], "035": [166, 175, 195, 252], "037": [166, 175, 195, 243, 252], "038": [166, 175, 183, 190, 195, 252, 956], "039": [166, 168, 175, 195, 252], "041": [166, 168, 175, 195, 252], "042": [166, 175, 195, 252, 320], "043": [166, 175, 195, 252], "046": [166, 168, 175, 195, 252, 269, 272, 277, 320, 744, 956], "047": [166, 168, 175, 195, 252], "049": [166, 168, 175, 195, 252], "054": [166, 168, 175, 195, 235, 252, 277, 614, 741, 746], "056": [166, 168, 175, 195, 252], "058": [166, 168, 175, 195, 246, 252], "unchang": [166, 175, 233, 331, 332, 333, 334, 550, 551, 672, 723], "blinkchannel": 166, "20auditori": 166, "20buttonpress": 166, "4face": [166, 177], "4visual": 166, "19visual": 166, "shorter_epoch": 166, "include_tmax": [166, 288, 294, 304, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 784, 788], "obj": [166, 187, 291, 714, 934], "0998976": 166, "expand": [166, 170, 186, 228, 233, 240, 294, 300, 302, 303, 306, 331, 332, 333, 334, 337, 342, 345, 423, 513, 516, 541, 550, 551, 786, 787, 789, 790, 868, 936, 955], "later_epoch": 166, "tshift": [166, 330, 331, 332, 333, 334, 511, 784, 788], "amount": [166, 167, 188, 193, 204, 227, 234, 235, 251, 270, 290, 320, 328, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 432, 444, 483, 490, 523, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 595, 611, 635, 636, 680, 696, 784, 786, 787, 788, 789, 790, 845, 866, 868, 875, 879, 888, 889, 891, 894, 896, 898, 899, 936], "00166496": 166, "00332992": 166, "99833504": 166, "99667008": 166, "enforc": [166, 290, 666], "eog_data": 166, "channel_4_6_8": 166, "arr": [166, 243, 270, 763], "repeatedli": [166, 232, 234, 290, 550, 551, 948], "hierarch": [166, 169, 170, 268, 277, 282, 319, 507, 545, 601], "multiindex": [166, 331, 332, 784, 786, 787, 788, 789, 790], "aggreg": [166, 169, 171, 269, 284, 308, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 382, 507, 517, 550, 551, 784, 786, 787, 789, 790, 867, 868], "endpoint": [166, 169, 194, 198, 250, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 354, 653, 701, 702, 802, 812], "sort_index": 166, "inplac": [166, 171, 309, 325, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 385, 508, 518, 550, 551, 632, 685, 738], "audiovisu": [166, 192, 243], "epochs_from_fil": 166, "convent": [166, 186, 196, 198, 215, 217, 233, 234, 244, 277, 304, 307, 320, 323, 336, 371, 392, 402, 568, 679, 702, 718, 802, 811, 812, 834], "basenam": [166, 244], "_epo": 166, "issu": [166, 167, 170, 177, 187, 222, 229, 230, 233, 244, 245, 279, 287, 288, 292, 293, 302, 303, 309, 310, 311, 312, 319, 331, 332, 337, 342, 356, 358, 494, 550, 551, 636, 678, 747, 750, 866, 883, 889, 937, 941], "adher": [166, 169, 427, 515], "epochsfif": [166, 169], "anyth": [166, 215, 232, 309, 457, 834, 947], "10_epochs_overview": [166, 174, 956], "aldai": [167, 277, 282, 284, 285, 303], "reason": [167, 175, 176, 188, 192, 197, 198, 210, 227, 228, 229, 230, 231, 233, 234, 235, 243, 245, 255, 264, 265, 277, 302, 309, 310, 316, 320, 330, 331, 332, 333, 334, 341, 365, 423, 441, 495, 550, 551, 636, 648, 661, 664, 671, 771, 772, 774, 775, 777, 784, 788, 834, 865, 902, 904, 936], "safer": [167, 338, 339, 342, 345, 346, 347, 563], "distort": [167, 216, 229, 246, 270, 563, 824], "spuriou": [167, 172, 188, 524, 936], "carina": [167, 303], "forster": [167, 303], "email": [167, 309, 948], "carinaforster0611": 167, "baseline_tmin": 167, "baseline_tmax": 167, "4957": [167, 177, 403], "trad_aud": 167, "trad_vi": 167, "heterogen": [167, 228, 282, 287], "aud_predictor": 167, "vis_predictor": 167, "trickier": 167, "seaprat": 167, "baseline_predictor": 167, "singleton": [167, 292, 834], "1e6": [167, 175, 177, 273, 328, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 423, 427, 428, 483, 490, 492, 550, 551, 867, 870, 872, 874, 875, 897], "\u03bcv": 167, "microvolt": [167, 215, 320, 561], "unstabl": [167, 188, 231, 292, 423, 936], "transpos": [167, 243, 255, 256, 260, 263, 264, 265, 292], "reg_model": 167, "lm": [167, 644], "namedtupl": [167, 769], "dict_kei": [167, 195, 233], "1998": [167, 175, 277, 320], "49949": [167, 175], "tell": [167, 176, 181, 188, 192, 197, 228, 232, 234, 240, 243, 257, 259, 265, 309, 311, 320, 344, 945, 946], "strongli": [167, 198, 226, 227, 235, 309, 316, 320, 550, 551, 584, 936, 941], "\u03b2": [167, 168, 246], "constant": [167, 182, 186, 196, 223, 226, 229, 239, 270, 285, 287, 288, 317, 319, 320, 326, 331, 332, 333, 334, 336, 441, 550, 551, 553, 555, 586, 822], "effect_of_baselin": 167, "unsurprisingli": 167, "farther": [167, 936], "weaker": [167, 320, 331, 332, 333, 334, 518, 519, 521, 522, 550, 551], "pure": [167, 309, 342], "influenc": [167, 229, 231, 232, 277, 310], "reg_aud": 167, "reg_vi": 167, "show_sensor": [167, 170, 192, 285, 860], "truncate_yaxi": [167, 260, 284, 288, 860], "subtl": 167, "apart": [167, 176, 194, 250], "diff_tradit": 167, "diff_regress": 167, "themselv": [167, 310, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 614, 876], "ought": 167, "persist": [167, 168, 226, 230, 280, 936], "interaction_effect": 167, "randomli": [167, 192, 255, 588, 669, 688, 750], "glm": [167, 277, 949], "lift": [167, 204, 223, 263, 265, 277], "13451": [167, 277], "796": [167, 170, 174, 222, 223, 956], "15_baseline_regress": [167, 174, 956], "imagemap": 168, "discontinu": [168, 172, 173, 174, 177, 191, 194, 229, 232, 243, 244, 250, 268, 319, 331, 524, 570, 694, 786, 787, 789, 790, 956], "176": [168, 195, 197, 223, 235, 236, 242, 255, 277, 636, 956], "until": [168, 227, 228, 235, 238, 309, 320, 326, 329, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 542, 549, 550, 551, 636, 639, 786, 787, 789, 790, 831, 834, 864, 866, 883, 889, 892], "That": [168, 170, 187, 188, 229, 260, 273, 308, 320, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 614, 876], "scroll": [168, 192, 245, 246, 274, 285, 302, 329, 331, 332, 550, 551, 636, 864, 866, 883, 889, 905], "enabl": [168, 198, 246, 270, 279, 281, 282, 284, 288, 291, 293, 301, 303, 304, 306, 308, 310, 316, 320, 323, 324, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 443, 542, 550, 551, 651, 678, 730, 771, 772, 774, 775, 786, 787, 788, 829, 834, 836, 844, 849, 852, 871, 889, 894, 899, 902, 941, 948], "unappli": [168, 176, 233, 235, 302, 331, 332, 333, 334, 513, 514, 515, 516, 550, 551], "purg": 168, "catch_trials_and_buttonpress": 168, "event_color": [168, 240, 244, 290, 292, 331, 332, 550, 551, 866, 889], "butterfli": [168, 175, 177, 178, 198, 227, 233, 237, 246, 284, 287, 288, 302, 331, 332, 333, 334, 341, 550, 551, 636, 866, 870, 873, 880, 889, 905, 939], "ecg_proj_fil": [168, 233], "ecg_proj": [168, 172, 233, 234], "175": [168, 176, 195, 212, 223, 236, 251, 254, 255, 259, 277, 636, 956], "41auditori": 168, "40button": 168, "8face": 168, "8visual": 168, "40visual": 168, "room": [168, 177, 188, 198, 210, 218, 230, 232, 233, 235, 237, 239, 273, 277, 285, 303, 316, 319, 320, 342, 423, 428, 646, 647, 660, 671, 672], "inherit": [168, 268, 305, 423], "joint": [168, 208, 234, 277, 290, 291, 303, 304, 312, 331, 332, 333, 334, 340, 483, 490, 550, 551, 728, 786, 787, 789, 790, 868, 875, 888], "\u03b4": [168, 246], "\u03b8": [168, 246], "\u03b3": [168, 246], "jointli": [168, 188, 232, 234, 279, 287, 290, 304, 331, 332, 333, 334, 340, 364, 365, 424, 425, 426, 483, 490, 550, 551, 636, 648, 649, 786, 787, 789, 790, 868, 875, 887, 888, 936], "prefer": [168, 177, 196, 197, 216, 217, 219, 229, 232, 233, 309, 310, 311, 320, 326, 331, 332, 333, 334, 429, 490, 512, 531, 550, 551, 636, 727, 786, 789, 890, 941, 946, 948, 949], "untransform": 168, "docstr": [168, 177, 206, 229, 230, 237, 243, 246, 268, 279, 287, 294, 302, 304, 305, 306, 307, 350, 364, 365, 545, 547, 548, 614, 786, 787, 830, 832, 851], "plot_topo_imag": [168, 281, 331, 332], "accompani": [168, 310, 749], "scalebar": [168, 293], "highli": [168, 215, 234, 251, 259, 571, 696, 700, 770, 946], "customiz": [168, 333, 334, 784, 873], "respond": [168, 170, 222, 274, 310], "opposit": [168, 194, 320, 590], "0242": [168, 195], "pop": [168, 176, 227, 303, 306, 328, 331, 332, 336, 355, 370, 602, 656, 821, 897, 941], "had": [168, 177, 193, 194, 201, 207, 228, 229, 230, 233, 234, 246, 268, 270, 286, 288, 293, 294, 300, 302, 303, 307, 312, 320, 331, 332, 476, 506, 660, 701, 788, 916], "At": [168, 218, 231, 232, 238, 286, 309, 316, 388, 550, 948], "fullscreen": [168, 303, 542], "unusu": [168, 210, 227, 231], "reject_criteria": [168, 171, 177, 192, 228, 238], "3000e": [168, 171, 228], "\u00b5v": [168, 170, 171, 175, 177, 192, 228, 234, 256, 273, 293, 319, 320, 323, 328, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 483, 490, 550, 551, 591, 635, 636, 651, 784, 786, 787, 789, 790, 853, 866, 867, 868, 870, 872, 875, 879, 888, 889, 891, 896, 897, 898], "font_color": [168, 331, 332, 784, 897], "reinforc": 168, "disguis": 168, "mayb": [168, 330, 331, 332, 333, 334, 550, 551, 633, 784, 786, 787, 788, 789, 790], "832": [168, 174, 260, 956], "20_visualize_epoch": [168, 174, 956], "who": [169, 283, 284, 285, 286, 290, 291, 292, 293, 294, 309, 310, 317, 323, 336, 636, 946], "lexic": [169, 317], "decis": [169, 218, 229, 270, 317, 326, 331, 332, 595, 694], "kiloword_data_fold": 169, "kiloword_data_fil": 169, "capabl": [169, 181, 192, 194, 274, 286, 299, 309, 317, 446, 834, 901, 905, 920, 921, 941, 949], "surviv": [169, 336], "reload": 169, "attach": [169, 195, 227, 240, 243, 256, 268, 317, 319, 507, 602], "numberoflett": [169, 256], "english": [169, 317], "lexicon": 169, "wordfrequ": 169, "render": [169, 182, 186, 197, 198, 284, 287, 291, 292, 294, 302, 303, 308, 309, 320, 321, 323, 331, 332, 338, 339, 341, 342, 345, 346, 347, 542, 550, 551, 636, 784, 834, 844, 866, 883, 889, 894, 895, 899, 902, 904, 948], "orthographicdist": 169, "bigramfrequ": 169, "450000": 169, "189490": 169, "900000": 169, "700704": 169, "546": [169, 260], "600000": 169, "858537": 169, "484": [169, 231, 277, 635, 686], "700000": 169, "454540": 169, "1095": 169, "539076": 169, "686": [169, 236], "drudgeri": 169, "473684": 169, "556303": 169, "732357": 169, "991226": 169, "859": [169, 260], "545879": 169, "billiard": 169, "500000": [169, 170, 222], "672098": 169, "838597": 169, "958": [169, 232, 256, 260], "698970": 169, "615": [169, 223], "088112": 169, "959": 169, "solenoid": 169, "111111": 169, "301030": 169, "544507": 169, "iloc": [169, 171], "iat": 169, "nindex": 169, "arbitrarili": [169, 184, 260, 320], "highcomplex": 169, "But": [169, 170, 198, 210, 229, 237, 239, 250, 255, 263, 270, 273, 318, 636], "startswith": [169, 294], "district": 169, "disarrai": 169, "disast": 169, "diseas": 169, "discord": 169, "dispos": 169, "267": [169, 194, 195, 223, 236, 255, 277, 314], "lasso": [169, 277, 282, 331, 332, 333, 334, 336, 550, 551, 866, 889, 892], "tentacl": 169, "banjo": 169, "corsag": 169, "fall": [169, 177, 194, 197, 237, 245, 281, 290, 293, 319, 320, 324, 341, 434, 476, 507, 524, 638], "rich": [169, 197, 941, 946], "typhoon": 169, "bungalow": 169, "colossu": 169, "linguist": 169, "dozen": [169, 227, 232, 234, 318], "share": [169, 217, 229, 240, 245, 288, 290, 294, 303, 309, 318, 320, 325, 364, 685, 771, 772, 774, 775, 915], "letter": [169, 196, 215, 256, 277, 283, 834], "n_letter": 169, "intens": [169, 186, 197, 207, 208, 217, 232, 302, 319, 333, 334, 338, 339, 342, 345, 346, 347, 349, 612, 613, 666, 834, 836, 871, 894, 899], "sort_ord": 169, "obviou": [169, 197, 227, 232, 246, 263], "reaction": [169, 255, 281, 331, 332, 867], "new_metadata": 169, "foo": [169, 176, 197, 309, 331, 332, 456, 788], "565": [169, 174, 223, 956], "30_epochs_metadata": [169, 174, 956], "eriksen": 170, "flanker": [170, 317], "introductori": [170, 176, 188, 194, 195, 226, 243, 244, 255, 936], "straight": [170, 331, 332, 333, 334, 336, 550, 551, 892], "creation": [170, 175, 181, 194, 228, 245, 279, 281, 283, 284, 290, 291, 293, 299, 302, 303, 320, 323, 325, 328, 331, 332, 341, 344, 376, 482, 648, 649], "familiar": [170, 226, 273, 317, 944], "ourselv": [170, 201, 231, 232, 234], "incorrect": [170, 212, 219, 228, 229, 239, 277, 290, 293, 300, 301, 302, 303, 304, 307, 308, 320, 787, 790, 941], "sophist": [170, 216, 525], "infil": 170, "core_subject": 170, "001_task": [170, 239], "flankers_eeg": 170, "all_ev": 170, "all_event_id": 170, "935935": 170, "913": [170, 236, 260], "33793": 170, "target_left": 170, "target_right": 170, "incompat": [170, 283, 291, 705, 711, 941], "decid": [170, 238, 270, 310, 326, 331, 332, 523, 595, 694, 865], "1500": 170, "invalid": [170, 257, 286, 292, 302, 303, 657], "metadata_tmin": 170, "metadata_tmax": 170, "why": [170, 177, 184, 186, 219, 228, 229, 233, 243, 252, 255, 259, 277, 310, 815, 818], "event_nam": [170, 260, 507, 510, 917, 919], "551758": 170, "997070": 170, "434570": 170, "797": 170, "343750": 170, "917969": 170, "425781": 170, "416016": 170, "799": [170, 260], "392578": 170, "990234": 170, "402344": 170, "802": [170, 223], "eleg": 170, "row_ev": [170, 507], "pertain": 170, "508789": 170, "00000": 170, "503906": 170, "449219": 170, "542969": 170, "792": 170, "496094": 170, "794": [170, 236, 260], "437500": 170, "465820": 170, "547852": 170, "46582": 170, "descriptor": [170, 192, 268, 277, 319, 507, 550, 551], "hed": [170, 177, 268, 277, 319, 507], "keep_first": [170, 507], "regardless": [170, 177, 197, 217, 231, 234, 319, 524, 887], "first_respons": [170, 507], "notna": 170, "411133": 170, "454102": 170, "443359": 170, "466797": 170, "400391": 170, "499023": 170, "584961": 170, "421875": 170, "450195": 170, "399414": 170, "316406": 170, "416992": 170, "386719": 170, "410156": 170, "467773": 170, "377930": 170, "483398": 170, "454": [170, 344], "457031": 170, "456": [170, 236, 260, 344], "566406": 170, "395508": 170, "354492": 170, "516": [170, 184, 236], "326172": 170, "432617": 170, "322266": 170, "482422": 170, "606": [170, 223], "484375": 170, "652": 170, "371094": 170, "342773": 170, "704": [170, 223, 955], "307617": 170, "442383": 170, "728": [170, 260], "376953": 170, "first_stimulu": 170, "perfect": [170, 184, 229, 237], "stimulus_sid": 170, "response_correct": 170, "correct_response_count": 170, "rememb": [170, 176, 187, 197, 202, 227, 232, 233, 243, 260, 320], "epochs_tmin": 170, "epochs_tmax": 170, "strong": [170, 209, 227, 232, 259, 316, 636, 741, 746], "099609375": 170, "513": [170, 260], "lastli": [170, 198, 236, 238, 269, 270, 309], "vis_erp": 170, "vis_erp_slow": 170, "asid": [170, 198, 226, 265], "fact": [170, 175, 177, 207, 208, 226, 232, 233, 237, 244, 316, 319, 320, 489, 495, 636, 701], "noisier": [170, 218], "deal": [170, 188, 197, 206, 229, 232, 233, 235, 244, 255, 259, 263, 265, 285, 287, 288, 290, 292, 312, 333, 334, 338, 339, 342, 345, 346, 347, 364, 365, 527, 636, 647, 660, 671, 685], "keep_last": [170, 507], "previous": [170, 175, 196, 231, 232, 281, 282, 283, 290, 291, 293, 294, 302, 303, 323, 357, 364, 365, 721, 834], "last_": [170, 507], "last_stimulu": 170, "last_respons": 170, "431641": 170, "576172": 170, "puls": [170, 172, 192, 194, 226, 232, 234, 244, 320, 661, 664], "c5": [170, 575], "cpz": 170, "isna": 170, "bummer": 170, "nice": [170, 176, 195, 197, 243, 255, 270, 273, 300, 309, 320], "impress": 170, "resp_erp_correct": 170, "resp_erp_incorrect": 170, "deflect": [170, 212, 226, 233, 234, 291], "immedi": [170, 182, 194, 227, 232, 235, 270, 293, 302, 309, 310, 319, 320, 324, 500, 550, 551, 639, 694, 756, 759, 844, 889], "doubt": [170, 950], "resp_erp_diff": 170, "bolder": 170, "set_linewidth": 170, "grai": [170, 182, 186, 198, 227, 237, 240, 244, 257, 258, 259, 260, 265, 308, 337, 541, 636, 688, 834, 851, 852, 860, 879], "trough_time_idx": 170, "trough_tim": 170, "emili": [170, 229, 277, 278, 284, 317], "kappenman": [170, 229, 277, 317], "jaclyn": [170, 277, 317], "farren": [170, 277, 317], "wendi": [170, 222, 277, 317, 489], "zhang": [170, 277, 293, 304, 308, 317, 320], "andrew": [170, 206, 277, 284, 298, 299, 300, 301, 304, 308, 317, 636, 773], "stewart": [170, 277, 317], "luck": [170, 177, 229, 277, 317], "117465": [170, 277, 317], "nima": [170, 277, 507], "bigd": [170, 277, 507], "shamlo": [170, 277, 507], "kreutz": [170, 277, 507], "delgado": [170, 277, 507], "robbin": [170, 277, 507], "makoto": [170, 277, 507], "miyakoshi": [170, 277, 507], "marissa": [170, 277, 507], "westerfield": [170, 277, 507], "tarik": [170, 277, 507], "bel": [170, 277, 507], "bahar": [170, 277, 507], "koth": [170, 277, 507], "jessica": [170, 277, 507], "hsi": [170, 277, 507], "globalsip": [170, 277, 507], "6736796": [170, 277, 507], "40_autogenerate_metadata": [170, 174, 956], "workflow": [171, 181, 228, 298, 311, 317], "200e": [171, 177, 228], "0113": [171, 192, 195, 202, 243], "0112": [171, 192, 195, 243], "0122": [171, 192, 195, 243, 269], "0132": [171, 195], "199795": 171, "320252": 171, "567619": 171, "248584": 171, "609895": 171, "700540": 171, "352746": 171, "908667": 171, "193135": 171, "049675": 171, "702938": 171, "168267": 171, "480975": 171, "182237": 171, "225684": 171, "072452": 171, "186476": 171, "283711": 171, "006895": 171, "912317": 171, "130290": 171, "157198": 171, "842466": 171, "986073": 171, "179816": 171, "040471": 171, "643716": 171, "835772": 171, "517952": 171, "214631": 171, "043144": 171, "672744": 171, "173156": 171, "688943": 171, "974112": 171, "561683": 171, "450115": 171, "778315": 171, "795987": 171, "277138": 171, "timedelta": [171, 245, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 784, 788], "132025e": 171, "156762e": 171, "324858e": 171, "060990e": 171, "870054e": 171, "835275e": 171, "790867e": 171, "049675e": 171, "702938e": 171, "416827e": 171, "748098e": 171, "018224e": 171, "212257e": 171, "072452e": 171, "283711e": 171, "300690e": 171, "691232e": 171, "213029e": 171, "515720e": 171, "178425e": 171, "986073e": 171, "304047e": 171, "643716e": 171, "783577e": 171, "851795e": 171, "521463e": 171, "204314e": 171, "672744e": 171, "568894e": 171, "974112e": 171, "556168e": 171, "450115e": 171, "377831e": 171, "117960e": 171, "727714e": 171, "0133": [171, 195], "dai": [171, 234, 323, 331, 332, 333, 334, 336, 550, 551, 552], "800204787": 171, "379736": 171, "123525": 171, "806864627": 171, "734826": 171, "339465": 171, "813524468": 171, "996158": 171, "627037": 171, "820184308": 171, "748030": 171, "024973": 171, "826844149": 171, "123811": 171, "917677": 171, "pivot": [171, 329, 864, 895], "long_df": [171, 256], "coupl": [171, 238, 243, 265, 290, 486, 675, 938, 949], "1342": [171, 195, 263, 265], "categorydtyp": 171, "nicer": [171, 233, 294], "hue": 171, "peak_lat": 171, "regex": [171, 290], "2123": [171, 195], "idxmax": 171, "melt": 171, "id_var": 171, "var_nam": 171, "value_nam": 171, "satur": [171, 581], "081": [171, 174, 956], "537": [171, 174, 223, 236, 956], "50_epochs_to_data_fram": [171, 174, 956], "equidistantli": 172, "consecut": [172, 194, 263, 284, 338, 339, 342, 345, 346, 347, 524, 595, 638, 639], "briefli": [172, 177, 229, 246, 255], "hous": 172, "envelope_correl": [172, 287, 288, 292], "manag": [172, 192, 197, 198, 288, 293, 302, 309, 310, 312, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 594, 597, 598, 609, 610, 619, 620, 625, 636, 641, 648, 649, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 828, 829, 836, 866, 868, 871, 883, 889, 890, 914, 949], "server": [172, 192, 198, 230, 232, 243, 273, 902, 946], "chan": [172, 322, 764], "heart": [172, 226, 231, 277, 292, 815, 818], "beat": [172, 238, 648, 661, 664, 736], "onpca": 172, "onecg": 172, "unsuit": [172, 294], "misalign": [172, 204, 290, 562], "event_related_plot": 172, "1142": [172, 195], "n_sensor": [172, 269, 338, 342, 346], "alpha_data": 172, "epochconnect": 172, "corr_matrix": 172, "first_30": 172, "last_30": 172, "corr_matric": 172, "color_lim": 172, "mpbl": 172, "60_make_fixed_length_epoch": [172, 174, 956], "865": [174, 223, 236], "raw_fil": [175, 177], "happen": [175, 177, 182, 186, 187, 193, 194, 197, 223, 228, 230, 232, 255, 304, 309, 310, 317, 319, 324, 331, 332, 385, 506, 508, 936], "discuss": [175, 177, 182, 191, 192, 194, 199, 206, 218, 223, 226, 229, 230, 243, 246, 255, 260, 270, 277, 291, 309, 310, 311, 317, 320, 788, 936, 942], "transfer": [175, 223, 227, 229, 316, 319, 672], "maintain": [175, 227, 255, 284, 298, 302, 309, 310, 311, 320, 331, 332, 333, 334, 336, 550, 551, 552, 627], "proven": [175, 300, 303], "never": [175, 290, 309, 320, 331, 332, 386, 655, 854], "72160572e": 175, "57859354e": 175, "98040833e": 175, "75128428e": 175, "15309907e": 175, "83186429e": 175, "bewar": [175, 186, 320], "evoked_subset": 175, "repair": [175, 191, 192, 226, 227, 228, 233, 237, 241, 242, 246, 277, 291, 303, 316, 328, 331, 333, 334, 336, 424, 426, 524, 550, 566, 630, 633, 635, 636, 648, 649, 651, 653, 654, 661, 678, 679, 683, 789, 887, 888, 921, 956], "evk_fil": 175, "evokeds_list": [175, 176], "right_vi": 175, "remedi": 175, "left_right_aud": 175, "6992832460543575": [175, 177], "fairli": [175, 192, 226, 228, 229, 230, 232, 234, 235], "left_aud": 175, "right_aud": 175, "keyword": [175, 181, 195, 198, 218, 229, 237, 269, 273, 283, 284, 286, 290, 292, 302, 303, 304, 307, 308, 309, 316, 319, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 597, 598, 599, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 629, 632, 636, 638, 639, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 660, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 675, 678, 679, 680, 683, 684, 685, 686, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 728, 732, 733, 735, 736, 737, 738, 748, 749, 752, 754, 755, 756, 757, 758, 759, 760, 770, 771, 772, 773, 774, 775, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 803, 804, 805, 808, 809, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 829, 832, 833, 834, 835, 836, 843, 852, 853, 858, 861, 864, 868, 869, 870, 871, 876, 879, 880, 881, 886, 887, 889, 890, 892, 893, 894, 895, 899, 900, 901, 905, 915, 916, 917, 918, 919, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935], "proport": [175, 255, 291, 304, 320, 338, 339, 340, 342, 345, 346, 347, 422, 434, 548, 636, 644, 894, 899], "intend": [175, 197, 237, 244, 324, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 507, 550, 551, 636, 672, 678, 949], "standard_error": [175, 297, 331, 332, 333, 334, 701, 955], "iter_evok": [175, 177, 290, 331, 332, 955], "ix": [175, 177], "return_amplitud": [175, 177, 333, 334], "569": [175, 223], "10_evoked_overview": [175, 180, 956], "evoked_fil": 176, "life": [176, 310], "evk": [176, 177], "superimpos": [176, 198, 226, 246, 636, 835, 880], "timeseri": [176, 252, 331, 332, 333, 334, 550, 551, 751, 785], "resembl": [176, 188, 201, 603, 664, 665], "wing": 176, "behav": [176, 229, 243, 303, 335, 336, 512, 656], "time_ranges_of_interest": 176, "drag": [176, 177, 187, 245, 307, 318, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 867, 868, 872, 875, 879, 888, 890, 891, 896, 898, 941], "averaging_dur": 176, "augment": 176, "custom_func": 176, "0x7fdd87a7ae60": 176, "substr": [176, 298, 706, 718], "action": [176, 197, 309, 312], "ambigu": [176, 294, 302, 307, 339, 345, 347], "temp_list": 176, "_comment": 176, "_evk": 176, "overhead": [176, 293, 730, 829], "trans_fil": 176, "00097": [176, 274], "meg_surf": [176, 594], "_map": 176, "20_visualize_evok": [176, 180, 956], "materi": [177, 188, 309, 319, 936], "link": [177, 191, 216, 275, 276, 277, 290, 293, 302, 303, 308, 309, 312, 320, 333, 338, 342, 346, 422, 518, 594, 701, 711, 834, 836, 850, 871, 894, 911, 912, 916, 917, 918, 936, 948, 956], "events_fil": [177, 228], "discard": [177, 227, 232, 233, 234, 237, 265, 281, 670, 671, 698], "last_samp": [177, 301, 319, 336, 431, 549, 550, 551], "13514": 177, "mislabel": 177, "lowercas": 177, "channel_renaming_dict": [177, 243], "schemat": 177, "diagram": [177, 232, 319], "addition": [177, 197, 217, 226, 233, 245, 268, 309, 314, 322, 339, 345, 347, 386, 397, 729, 814, 817, 899, 938], "realist": [177, 277, 316, 320], "xx": [177, 227, 230, 233, 234, 235, 309, 325], "backend": [177, 182, 186, 192, 197, 198, 207, 227, 230, 232, 233, 234, 235, 284, 287, 288, 291, 292, 293, 294, 302, 303, 308, 312, 331, 332, 338, 339, 342, 345, 346, 347, 542, 550, 551, 636, 834, 842, 844, 846, 847, 848, 866, 883, 889, 894, 899, 901, 905, 906, 920, 921, 936, 941, 942, 946], "qt": [177, 192, 197, 198, 227, 230, 232, 233, 234, 235, 293, 302, 303, 306, 308, 331, 332, 550, 551, 636, 834, 866, 883, 889, 905, 921, 936, 941, 942], "scheme": [177, 215, 250, 259, 282, 284, 291, 309, 320, 328, 331, 332, 333, 334, 336, 340, 483, 490, 499, 550, 551, 635, 636, 651, 725, 728, 765, 784, 786, 787, 789, 790, 853, 866, 868, 875, 879, 888, 891, 892, 896, 898], "eeg53": 177, "eog61": 177, "chose": 177, "proce": [177, 326, 331, 332, 475, 636, 639, 646, 844, 936], "consol": [177, 302, 307, 946], "eeg03": 177, "eeg01": 177, "eeg02": 177, "eeg04": 177, "eeg06": 177, "eeg07": 177, "eeg25": 177, "25auditori": 177, "27buttonpress": 177, "5visual": 177, "28visual": 177, "barplot": [177, 232], "lose": [177, 216, 245, 936], "break": [177, 191, 241, 242, 245, 291, 294, 301, 302, 303, 306, 309, 316, 325, 331, 333, 336, 550, 633, 639, 662, 698, 934, 956], "l_aud": [177, 265], "l_vi": [177, 265], "fig1": [177, 196, 274], "speak": [177, 193, 194, 231, 947, 950], "agreement": [177, 310], "warrant": 177, "popul": [177, 181, 191, 250, 253, 258, 277, 286, 288, 292, 319, 332, 334, 443, 483, 515, 551, 672, 766, 830], "leverag": [177, 310], "verifi": [177, 208, 212, 270, 320, 948], "plain": [177, 219, 231, 270, 400, 926], "ddof": [177, 188, 936], "lime": 177, "revisit": [177, 277, 483], "eeg17": 177, "eeg18": 177, "eeg26": 177, "eeg23": 177, "eeg24": 177, "eeg34": 177, "eeg35": 177, "left_ix": 177, "right_ix": 177, "roi_dict": 177, "left_roi": [177, 331, 332, 333, 334, 867, 872], "right_roi": [177, 331, 332, 333, 334, 867, 872], "roi_evok": 177, "aud_minus_vi": 177, "29969": 177, "69928": 177, "weak": [177, 232], "chapter": 177, "erplab": [177, 277], "consequ": [177, 188, 195, 237, 301, 320, 424, 425, 426, 512, 523, 568, 623, 936], "voltag": [177, 192, 194, 215, 216, 235, 244, 301, 319, 576], "p100": 177, "submit": [177, 256, 309, 310], "throughout": [177, 197, 238, 306, 308, 317, 636], "remaind": 177, "print_peak_measur": 177, "3f": [177, 237, 256, 260, 270, 331, 332, 333, 334, 550, 551, 786, 787, 789, 790, 868, 875], "good_tmin": 177, "good_tmax": 177, "eeg55": 177, "508": [177, 255, 256], "pull": [177, 233, 310, 319, 906, 949], "priori": [177, 270, 320], "believ": [177, 270, 309, 320], "eeg59": 177, "fist": 177, "l_vis_roi": 177, "ch_roi": 177, "lat_roi": 177, "amp_roi": 177, "FOR": 177, "ONE": [177, 183, 223, 277], "713": 177, "suscept": [177, 230, 660], "challeng": [177, 239, 277, 312, 317, 936], "meth": [177, 198, 286, 304, 309], "guarante": [177, 215, 227, 232, 235, 237, 255, 294, 331, 332, 333, 334, 513, 514, 515, 516, 550, 551, 584], "rise": [177, 319, 567, 689, 695], "crucial": [177, 182, 226, 263], "095": [177, 196, 290, 328, 331, 332, 333, 334, 336, 340, 380, 398, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 860, 868, 870, 872, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "bad_tmin": 177, "bad_tmax": 177, "bad_lat_roi": 177, "bad_amp_roi": 177, "487": [177, 260], "unclear": [177, 309], "truli": [177, 229, 771], "panel": [177, 182, 188, 196, 206, 270, 273, 307, 323, 333, 334, 542, 636, 834, 876, 880, 936], "pink": [177, 182, 319, 852], "star": 177, "yourself": [177, 182, 195, 226, 230, 243, 309, 323, 333, 334, 562, 875], "c6": 177, "act": [177, 195, 230, 231, 233, 237, 302, 306, 310, 318, 319, 331, 332, 333, 334, 344, 364, 365, 416, 545, 547, 548, 550, 551, 614, 671, 728, 788, 936], "eeg54": 177, "eeg57": 177, "l_vis_mean_roi": 177, "mean_amp_roi": 177, "mean_amp_roi_df": 177, "mean_amp": 177, "numeric_onli": 177, "279764": 177, "685840": 177, "reiter": 177, "hypothes": [177, 255, 256], "l_vis_crop": 177, "mean_amp_al": 177, "mean_amp_all_df": 177, "option_context": 177, "max_column": 177, "689513": 177, "078492": 177, "381191": 177, "609264": 177, "eeg05": 177, "113717": 177, "eeg56": 177, "064174": 177, "259681": 177, "eeg58": 177, "156472": 177, "802306": 177, "eeg60": 177, "878811": 177, "dietrich": [177, 277, 320, 603], "lehmann": [177, 277, 320, 603], "wolfgang": [177, 277, 815, 818], "skrandi": [177, 277], "identif": [177, 232, 277, 651], "checkerboard": [177, 192, 270, 277, 317], "621": [177, 277], "90419": [177, 277], "review": [177, 204, 231, 232, 277, 309, 310, 635, 641], "neurobiologi": [177, 277], "227": [177, 195, 236, 255, 277, 317, 459], "1984": [177, 277], "0301": [177, 277], "0082": [177, 277], "90003": [177, 277], "micah": [177, 277], "brunet": [177, 277], "michel": [177, 211, 277, 459, 636, 744], "s10548": [177, 235, 277, 652, 749], "0054": [177, 277], "ma": [177, 277, 305, 306], "edit": [177, 195, 197, 227, 229, 232, 245, 273, 277, 303, 309, 330, 331, 332, 333, 334, 766, 784, 788, 857, 905, 936, 946], "52585": [177, 277], "mitpress": [177, 277], "book": [177, 277, 309, 522], "javier": [177, 277], "lopez": [177, 277], "calderon": [177, 277], "00213": [177, 277], "preclud": [177, 229, 237, 277, 671], "00131": [177, 229, 277], "rufin": [177, 229, 277], "vanrullen": [177, 229, 277], "fallaci": [177, 229, 277], "00365": [177, 229, 277], "nichola": [177, 239, 277, 317, 650], "gaspelin": [177, 277], "12639": [177, 277], "30_eeg_erp": [177, 180, 956], "perspect": [178, 233, 834], "satisfi": [178, 187, 255, 320, 364, 365, 766, 786, 787, 789, 790], "40_whiten": [178, 180, 956], "repetit": [179, 191, 749], "outer": [181, 184, 186, 187, 209, 316, 317, 319, 320, 323, 375, 636, 671, 834, 882, 936, 943, 946, 949], "tissu": [181, 184, 319], "boundari": [181, 184, 198, 208, 212, 218, 246, 281, 283, 287, 291, 302, 308, 319, 328, 331, 332, 333, 334, 337, 340, 341, 432, 483, 490, 541, 550, 551, 635, 636, 660, 688, 749, 763, 784, 786, 787, 789, 790, 834, 840, 845, 853, 854, 868, 875, 879, 888, 890, 891, 896, 898, 948], "analog": [181, 215, 217, 223, 233, 237, 287, 288, 294, 319, 331, 332, 333, 334, 518, 550, 551, 559, 566, 574, 582, 633, 784, 786, 787, 788, 789, 790], "freesurfer_hom": [181, 442, 948], "setupfreesurf": 181, "sh": [181, 945, 948], "folder": [181, 182, 184, 187, 196, 215, 243, 291, 294, 303, 305, 306, 309, 341, 344, 371, 375, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 531, 532, 537, 567, 578, 581, 695, 727, 852, 854, 945, 948], "my_subject": 181, "my_nifti": 181, "subfold": [181, 456], "hour": [181, 550, 551, 636, 883, 889], "beforehand": [181, 331, 332, 866], "scan": [181, 192, 202, 206, 209, 237, 336, 460, 666, 667, 943, 946, 949, 952], "buckner40not": 181, "10_background_freesurf": [181, 190, 956], "landmark": [182, 250, 294, 316, 319, 320, 403, 434], "t1w": [182, 380], "nifti1imag": [182, 208, 343, 346, 347, 375], "dataobj": [182, 186, 208], "xyzt_unit": 182, "uint8": 182, "t1_mgh": 182, "mghimag": [182, 320], "ight": 182, "medium": [182, 209, 273, 303, 312, 323, 376], "nterior": 182, "longest": 182, "uperior": 182, "camera": [182, 186, 219, 292, 303, 333, 334, 542, 834, 836, 850, 852, 871, 904], "na": [182, 270, 319, 558], "preauricular": [182, 319, 320, 380, 404], "manufactur": [182, 196, 215, 216, 217, 219, 303, 312, 319, 320], "faq": [182, 216, 229, 235, 377, 441, 559, 671, 937], "intersect": [182, 186, 187, 210, 288, 316, 671, 688], "purpl": [182, 184, 265], "perpendicular": [182, 204, 320], "goe": [182, 186, 229, 245, 274, 320], "upward": [182, 186, 232, 236, 834, 860], "compani": [182, 277, 310, 766], "acquir": [182, 227, 281, 294, 303, 310, 317, 320, 351, 352, 375, 575, 952], "emit": [182, 236, 274, 281, 286, 293, 294, 306, 308, 319, 325, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 351, 352, 384, 407, 417, 418, 423, 427, 430, 432, 434, 439, 440, 502, 517, 530, 533, 550, 551, 572, 636, 672, 691, 720, 722, 784, 786, 787, 788, 789, 790, 831, 869, 880, 927, 929], "coregist": [182, 375, 542], "front": [182, 319, 320, 333, 334, 374, 502, 834, 870], "magenta": 182, "1mm": 182, "anisotrop": [182, 277, 320], "incorrectli": [182, 286, 287, 290, 291, 292, 302, 303, 305, 306, 308, 936], "identity_tran": 182, "mri_voxel": [182, 393, 586, 821], "corner": [182, 218, 229, 230, 233, 246, 285, 300, 323, 331, 332, 333, 334, 336, 550, 551, 849, 860, 866, 874, 889], "inferior": [182, 186, 319], "seghead_rr": 182, "seghead_tri": 182, "mri_to_head": 182, "scalp_pts_in_head_coord": 182, "head_to_meg": 182, "scalp_pts_in_meg_coord": 182, "vox_to_mri": 182, "get_vox2ras_tkr": [182, 186, 208], "mri_to_vox": 182, "scalp_points_in_vox": 182, "scene": [182, 186, 197, 222, 277, 285, 291, 302, 317, 318, 323, 333, 334, 338, 339, 342, 345, 346, 347, 489, 542, 834, 836, 841, 842, 844, 852, 871, 894, 899, 903, 904, 906, 941], "nose": [182, 235, 374], "behind": [182, 197, 222, 227, 232, 318, 542, 855], "roughli": [182, 290, 423, 660, 941], "world": [182, 186, 198, 208, 229, 245, 257, 343, 526], "anonym": [182, 281, 282, 285, 290, 293, 300, 307, 331, 332, 333, 334, 336, 550, 551, 552, 936], "blur": [182, 320], "fiffv_point_cardin": [182, 186, 336], "fiffv_point_nas": [182, 186, 336], "fiffv_coord_head": [182, 335, 336], "nasion_mri": [182, 186], "nasion_vox": [182, 186], "toggl": [182, 192, 198, 218, 227, 232, 246, 279, 284, 287, 288, 291, 293, 302, 303, 331, 332, 550, 551, 636, 834, 866, 881, 883, 889, 905], "radio": 182, "icon": [182, 198], "fid": [182, 308, 783], "icp": [182, 285, 288, 304], "finetun": 182, "inner_skul": [182, 184, 185, 187, 198, 209, 316, 317, 344, 720, 852], "outer_skul": [182, 184, 185, 187, 196, 198, 316, 317, 344, 852], "00348961": [182, 235], "944714": [182, 235], "137173": [182, 235], "667447": [182, 235], "683794": [182, 235], "26595": [182, 235], "0105972": [182, 235], "6156": 182, "2300": 182, "1904": 182, "20_source_align": [182, 190, 956], "hsp": [183, 215, 282, 283, 320, 323, 380, 393, 405, 434, 576, 697], "preprat": 183, "jon": [183, 277, 281, 283, 284, 285, 288, 303], "houck": [183, 277, 281, 283, 284, 285, 288, 303], "faveli": [183, 287, 288, 290, 291, 292, 293, 294, 302, 303], "skin": [183, 184, 187, 304, 317, 319, 320, 323, 331, 332, 333, 334, 375, 434, 550, 551, 633, 784, 786, 787, 788, 789, 790, 936], "fit_fiduci": [183, 434], "fit_icp": [183, 434], "n_iter": [183, 434, 669], "nasion_weight": [183, 434], "omit_head_shape_point": [183, 434], "compute_dig_mri_dist": [183, 434], "abil": [183, 204, 206, 223, 279, 281, 282, 283, 285, 286, 290, 291, 294, 297, 298, 300, 306, 310, 312, 318, 742, 743, 814, 817], "set_scale_mod": [183, 434], "clau": [183, 277], "plo": [183, 223, 277], "e0232100": [183, 277], "pone": [183, 223, 277], "0232100": [183, 277], "25_automated_coreg": [183, 190, 956], "concept": [184, 202, 255, 277, 319, 321, 939], "watershed_bem": [184, 286, 288, 320, 667, 936, 949], "flash_bem": [184, 279, 286, 287, 303, 320, 667, 949], "plot_bem_kwarg": 184, "brain_surfac": [184, 854], "mrilab": 184, "isn": [184, 192, 252, 270, 309, 327, 331, 475, 476, 705, 708, 711, 788, 936], "candid": [184, 227, 310, 319], "oct4": 184, "90mm": 184, "57798": 184, "24365": 184, "20377": 184, "32480": 184, "22941": 184, "2787": 184, "9357": 184, "20154": 184, "10797": 184, "12738": 184, "14152": 184, "10203": 184, "2362": [184, 232, 277, 636], "10376": 184, "midpoint": [184, 217, 291, 320, 333, 334, 813, 816, 854], "4th": [184, 226, 331, 332, 333, 334, 485, 494, 518, 519, 521, 522, 550, 551, 648, 649], "icosahedron": [184, 186, 187, 323, 338, 342, 346, 732, 894], "n_tri": [184, 186, 337, 929], "topologi": [184, 229, 285, 623], "commonli": [184, 194, 196, 201, 229, 270, 305, 312, 319, 336, 541, 636], "gone": 184, "adequ": [184, 234, 336], "1422": [184, 195], "fwd_fix": 184, "explicitli": [184, 198, 215, 223, 228, 230, 231, 232, 263, 281, 284, 290, 291, 293, 302, 308, 309, 310, 312, 316, 326, 331, 332, 333, 334, 336, 341, 364, 365, 371, 378, 381, 397, 423, 427, 428, 439, 440, 441, 483, 485, 490, 499, 504, 521, 522, 526, 527, 545, 547, 548, 550, 551, 588, 614, 635, 636, 638, 652, 653, 654, 663, 669, 677, 679, 686, 688, 728, 736, 737, 738, 747, 748, 750, 752, 770, 771, 772, 773, 774, 775, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 817, 860, 866, 867, 870, 872, 873, 876, 885, 890, 941], "src_hemi": 184, "justifi": [184, 302, 522, 550, 551], "claim": 184, "30_forward": [184, 190, 956], "centimet": 185, "fs_dir": [185, 457], "live": [185, 229, 287, 309], "1005": 185, "new_nam": 185, "rstrip": 185, "fp": [185, 519, 742], "999994": 185, "003552": 185, "000202": 185, "003558": 185, "998389": 185, "056626": 185, "000001": [185, 256, 259, 260], "998395": 185, "2433": [185, 195], "7809": 185, "4324": 185, "8001": 185, "4376": 185, "6mo": [185, 459], "ants6": 185, "0months3t": 185, "come": [185, 201, 207, 215, 216, 229, 230, 232, 234, 245, 256, 270, 274, 282, 293, 294, 309, 317, 319, 320, 337, 342, 442, 575, 596, 659, 698, 941, 946], "fname_1020": 185, "mon": [185, 575], "03d": [185, 568], "99975431": 185, "01839625": 185, "01236795": 185, "00087239": 185, "0143472": 185, "96230429": 185, "27159646": 185, "01252444": 185, "01689809": 185, "27135229": 185, "96233177": 185, "03137219": 185, "48640": 185, "48214": 185, "674": [185, 190, 956], "35_eeg_no_mri": [185, 190, 956], "outlin": [186, 198, 202, 229, 270, 273, 290, 291, 303, 304, 305, 328, 329, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 635, 636, 651, 686, 784, 786, 787, 789, 790, 853, 860, 864, 868, 870, 872, 873, 875, 876, 879, 886, 888, 890, 891, 892, 896, 898], "readabl": [186, 309, 331, 332, 333, 334, 444, 485, 494, 519, 521, 522, 550, 551, 666], "anterior": [186, 302, 319, 320, 337, 392, 761], "superior": [186, 319, 320, 339, 345, 347, 706, 834], "wide": [186, 192, 243, 309, 310], "unfamiliar": [186, 946], "asarrai": [186, 259], "unsign": [186, 302, 338, 339, 342, 345, 346, 347], "triplet": [186, 336, 527, 603, 734], "geograph": 186, "earth": 186, "north": 186, "prime": [186, 196], "meridian": 186, "degre": [186, 188, 219, 233, 240, 255, 257, 260, 263, 287, 290, 319, 320, 323, 328, 333, 334, 336, 371, 375, 562, 640, 656, 669, 737, 771, 772, 774, 775, 784, 834, 840, 872, 904, 936, 948], "nonetheless": [186, 229], "scanner": [186, 317, 320, 344, 544], "nativ": [186, 208, 215, 216, 281, 287, 291, 293, 299, 302, 317, 331, 332, 333, 334, 384, 393, 398, 513, 514, 515, 516, 550, 551, 568, 576, 697, 834, 837, 936], "mind": [186, 188, 201, 229, 309, 322], "si": [186, 217, 219, 255, 269, 331, 332, 333, 334, 365, 527, 550, 551, 659, 870, 872], "xyz_ra": 186, "00000000e": 186, "15484021e": 186, "91852465e": 186, "22726395e": 186, "56816911e": 186, "57160827e": 186, "18960930e": 186, "49011647e": 186, "40284092e": 186, "00712036e": 186, "726": [186, 260], "ras_coords_mm": 186, "inv_affin": 186, "i_": [186, 215], "j_": 186, "k_": 186, "imshow_mri": 186, "aff2axcod": 186, "ori_slic": 186, "ori_nam": 186, "va": [186, 273], "set_path_effect": 186, "reorient": 186, "rightward": 186, "x_order": 186, "lip": 186, "y_order": 186, "torig": 186, "vox2ras_tkr": [186, 208], "conform": [186, 217, 291, 320, 325], "matter": [186, 196, 302, 308, 310, 316, 331, 332, 333, 334, 337, 541, 550, 551, 588, 636, 688, 784, 786, 787, 788, 789, 790, 870], "freeurfer": 186, "whenev": [186, 229, 274, 309, 318, 333, 334, 875, 917], "everywher": 186, "xyz_mri": 186, "digpoint": [186, 287, 434], "nasion_head": 186, "nasion_dig_mri": 186, "nasion_dig_vox": 186, "convention": 186, "facet": [186, 273], "rr_mm": 186, "313728": 186, "80481719970703": 186, "rr_vox": 186, "tricontour": 186, "renderer_kwarg": 186, "curv": [186, 223, 307, 320, 331, 332, 333, 334, 336, 550, 551, 745, 782, 786, 787, 789, 790], "y_shift": 186, "z_shift": 186, "this_rr": 186, "this_tri": 186, "copper_r": 186, "quiver3d": [186, 233, 303], "1050": [186, 197, 223], "wirefram": 186, "cyan": [186, 550, 551, 889], "66ccee": [186, 273, 802, 812], "line_width": 186, "cull": 186, "render_lines_as_tub": 186, "uniformli": [186, 218, 234, 547], "uniform": [186, 283, 291, 292, 306, 319, 434, 504, 603, 736, 751, 774, 775], "subsampl": [186, 290, 316, 326, 330, 331, 332, 333, 334, 344, 550, 551, 592, 653, 654, 732, 770, 784, 788, 798, 834], "rr_sph": 186, "mri_mni_tran": 186, "xyz_mni": 186, "02248488": 186, "00844919": 186, "03621711": 186, "00111715": 186, "07107091": 186, "91486582": 186, "40609791": 186, "02300193": 186, "00875602": 186, "43369992": 186, "02811882": 186, "03356932": 186, "land": [186, 250], "difficult": [186, 216, 228, 260, 320, 636], "gist": [186, 202, 216, 331, 332, 333, 334, 550, 551, 936], "github": [186, 308, 310, 311, 331, 332, 333, 334, 550, 551, 783, 936, 937, 941, 949, 950, 952, 953], "alexrockhil": 186, "b5a1ce6c6ba363cf3f277cd321a763bf": 186, "415": [186, 190, 255, 260, 956], "50_background_freesurfer_mn": [186, 190, 956], "aris": [187, 226, 660], "ezemikulan": 187, "blender_freesurf": 187, "ezequiel": [187, 286, 290, 291], "mikulan": [187, 286, 290, 291], "manorama": [187, 293], "kadwani": [187, 293], "shutil": 187, "flash": [187, 240, 279, 303, 317, 344, 371, 375, 667, 852], "surf_dir": 187, "problemat": [187, 216, 229, 232, 233, 237, 255, 331, 332, 341, 376, 398], "skill": [187, 309], "conv": 187, "conv_dir": 187, "makedir": 187, "exist_ok": 187, "read_metadata": [187, 714], "wavefront": [187, 291, 714, 934], "navig": [187, 243, 321, 331, 332, 341, 346, 347, 550, 551, 866, 889, 900, 941, 946], "vert": [187, 204, 252, 270, 344], "preset": [187, 338, 339, 342, 345, 346, 347, 834, 894, 899], "beginn": [187, 938, 944], "teach": [187, 203, 277, 302], "_fix": 187, "inner_skull_fix": 187, "Be": [187, 240, 243, 245, 331, 332, 333, 334, 550, 551, 873], "backup": 187, "mistak": [187, 309, 936], "inner_skull_orig": 187, "volume_info": [187, 714, 934], "vol_info": 187, "faulti": 187, "head_dir": 187, "shrinkwrap": 187, "\u2460": 187, "\u2461": 187, "\u2462": 187, "\u2464": 187, "tab": [187, 219, 308, 309, 318, 323, 542, 624, 843], "\u2465": 187, "\u2467": 187, "snap": [187, 288], "noth": [187, 210, 211, 228, 285, 306, 317, 328, 331, 332, 333, 334, 340, 343, 423, 434, 483, 490, 494, 496, 550, 551, 635, 636, 651, 725, 784, 786, 787, 789, 790, 838, 849, 853, 868, 875, 879, 888, 891, 896, 898], "toolbar": [187, 901], "\u2468": 187, "extrus": 187, "extrud": 187, "rough": [187, 936], "mri_convert": [187, 320], "t1_smoothed_3": 187, "delet": [187, 197, 212, 227, 228, 238, 283, 284, 286, 293, 309, 320, 325, 328, 331, 332, 333, 334, 340, 432, 483, 490, 550, 551, 635, 636, 651, 727, 784, 786, 787, 789, 790, 853, 875, 879, 888, 891, 896, 950, 955], "cleaner": [187, 229], "encount": [187, 191, 216, 229, 517, 936, 941, 948], "runtimeerror": 187, "20516": [187, 222], "isomorph": 187, "defect": [187, 294, 302, 323, 376, 434, 502, 533, 691, 720, 722, 929, 936], "733": 187, "1014": [187, 222], "2068": 187, "7732": 187, "8435": [187, 292], "8489": 187, "10181": 187, "11120": [187, 304], "11121": 187, "11122": [187, 304], "11304": 187, "11788": 187, "disrupt": 187, "999668": 187, "wrong": [187, 288, 290, 292, 293, 294, 297, 305, 306, 307, 942], "easiest": [187, 226, 228, 230, 250, 309, 945], "unedit": 187, "gpl": 187, "water": 187, "clean_from_arrai": 187, "476": [187, 190, 255, 260, 277, 483, 956], "80_fix_bem_in_blend": [187, 190, 956], "bb": [188, 512], "pp": [188, 331, 332, 504, 766], "desc": [188, 233, 340], "66000": 188, "inaccur": [188, 243, 316, 320, 328, 331, 332, 333, 334, 340, 423, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "noise_cov_baselin": 188, "noise_cov_reg": 188, "1768": [188, 237, 277, 671], "1785": 188, "1797": 188, "freedom": [188, 233, 255, 257, 260, 263, 290, 328, 333, 334, 542, 771, 772, 774, 775, 836, 852, 871, 936], "violat": [188, 309, 936], "hack": [188, 270], "evoked_meg": 188, "empty_room": 188, "improp": [188, 287, 308], "overestim": [188, 231], "juha": [188, 237, 277, 671, 936], "simola": [188, 237, 277, 671, 936], "kajola": [188, 237, 277, 320, 504, 647, 671, 936], "3359": [188, 277, 936], "3372": [188, 277, 936], "tsp": [188, 232, 277, 423, 636, 936], "853302": [188, 277, 936], "90_compute_covari": [188, 190, 956], "aka": [189, 191, 217], "emphasi": [191, 321, 333, 334, 870], "topic": [191, 192, 216, 226, 229, 231, 277, 314, 321, 364, 938], "knowledg": [191, 270, 310, 316], "unexplain": 191, "experienc": [191, 310, 638], "troubl": [191, 303], "infrar": [191, 217, 241, 242, 277, 282, 317, 320, 331, 332, 333, 334, 336, 422, 512, 550, 551, 581, 633, 673, 674, 675, 677, 784, 786, 787, 788, 789, 790, 834, 860, 869, 874, 949, 956], "spectroscopi": [191, 217, 241, 242, 277, 282, 317, 320, 331, 332, 333, 334, 336, 422, 512, 550, 551, 581, 633, 673, 674, 675, 677, 784, 786, 787, 788, 789, 790, 834, 860, 869, 874, 949, 956], "vssr": [191, 271, 272, 317, 331, 336, 380, 396, 512, 561, 633, 786, 898, 956], "bti": [191, 213, 214, 255, 281, 285, 288, 298, 301, 320, 328, 329, 331, 333, 334, 336, 370, 423, 524, 526, 562, 599, 852, 864, 956], "twowai": [191, 261, 262, 302, 331, 336, 550, 633, 698, 765, 767, 768, 772, 788, 816, 956], "anova": [191, 223, 255, 258, 261, 262, 266, 267, 279, 298, 302, 331, 333, 334, 336, 342, 344, 429, 550, 602, 603, 617, 633, 698, 713, 756, 765, 766, 767, 768, 772, 775, 776, 788, 816, 834, 956], "spatiotempor": [191, 257, 261, 262, 277, 298, 301, 302, 331, 333, 334, 336, 386, 550, 633, 671, 698, 764, 771, 775, 776, 788, 816, 857, 860, 956], "strf": [191, 224, 225, 489, 495, 523, 956], "submodul": [191, 192, 226, 232, 234, 243, 250, 253, 304, 309], "corrupt": [191, 226, 227, 253, 254, 291, 306, 307, 328, 331, 334, 335, 336, 337, 342, 423, 433, 524, 550, 602, 603, 617, 703, 706, 748, 751, 834, 936, 956], "auto_tutorials_python": 191, "auto_tutorials_jupyt": 191, "varieti": [192, 215, 217, 226, 243, 320], "smoothli": [192, 228, 243, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 868, 875, 879, 888, 891, 896, 898], "substitut": [192, 310, 320, 442, 941], "glimps": [192, 243], "41700": 192, "custom_ref_appli": [192, 195, 243, 250, 291, 336], "file_id": [192, 195, 243, 283, 331, 332, 333, 334, 336, 550, 551, 552], "hpi_mea": [192, 195, 243, 286, 336], "hpi_result": [192, 195, 243, 286, 336], "meas_dat": [192, 194, 195, 228, 243, 245, 250, 285, 286, 288, 290, 291, 292, 302, 325, 331, 332, 333, 334, 336, 549, 550, 551, 552, 636, 672, 883, 889], "utc": [192, 195, 243, 245, 302, 331, 332, 333, 334, 336, 550, 551], "meas_id": [192, 195, 243, 283, 331, 332, 333, 334, 336, 550, 551, 552], "breviti": 192, "walk": [192, 232, 234], "orig_raw": 192, "chan_idx": 192, "sent": [192, 194, 217, 218, 232, 240, 244, 317, 341], "deliveri": 192, "squarewav": 192, "unambigu": [192, 194], "older": [192, 194, 196, 282, 283, 293, 388, 503, 550], "summat": [192, 194, 229, 776], "6994": 192, "7086": 192, "7192": 192, "7304": 192, "7413": 192, "ordinari": [192, 194, 227, 233, 255, 310, 654, 662, 769], "autoreject": [192, 227, 228, 949], "aren": [192, 235, 527], "fewest": 192, "conds_we_care_about": 192, "aud_epoch": 192, "vis_epoch": 192, "136": [192, 195, 197, 236, 255, 259, 260, 344], "richer": 192, "aud_evok": 192, "vis_evok": 192, "classic": [192, 270, 338, 339, 342, 345, 346, 347, 815, 818, 834, 894, 899], "p200": [192, 218], "dorso": 192, "evoked_diff": [192, 238], "underdetermin": 192, "akin": 192, "inverse_operator_fil": 192, "inv_oper": 192, "\u03bb\u00b2": 192, "61922423e": 192, "06837855e": 192, "49139511e": 192, "10_overview": [192, 200, 956], "obligatorili": 193, "unexpect": [193, 223, 277, 331, 332, 333, 334, 386, 423, 581, 936], "apply_funct": [193, 283, 287, 293, 295, 331, 332, 333, 334, 550, 551], "unprocess": 193, "original_raw": 193, "complex128": [193, 331, 332, 333, 334, 550, 551], "certain": [193, 194, 218, 226, 230, 232, 237, 250, 269, 297, 300, 303, 304, 306, 307, 308, 309, 310, 320, 329, 333, 334, 456, 509, 538, 550, 551, 614, 636, 655, 672, 771, 772, 870, 902, 941], "unaffect": [193, 230, 489], "rereferenced_raw": 193, "ref_data": [193, 728], "fig_orig": 193, "fig_reref": 193, "unless": [193, 283, 286, 288, 302, 303, 309, 310, 320, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 483, 486, 490, 493, 496, 499, 500, 502, 507, 526, 528, 539, 541, 545, 547, 548, 550, 551, 553, 561, 594, 597, 598, 609, 610, 614, 619, 620, 635, 636, 641, 648, 649, 671, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 824, 836, 860, 866, 867, 868, 871, 875, 883, 889, 890, 891], "15_inplac": [193, 200, 956], "broadli": 194, "ram": [194, 226, 228, 243, 244, 245, 246, 293, 331, 332, 550, 551, 636, 866, 883, 889], "36037": [194, 226, 230, 233, 234, 235, 237, 244, 245, 246], "necessarili": [194, 196, 216, 226, 228, 231, 320, 324, 331, 332, 364, 844], "instantan": [194, 252], "receiv": [194, 217, 274, 286, 320, 504, 568, 745, 915, 941], "rectangular": [194, 229, 255, 338, 339, 342, 345, 346, 347, 894, 899], "ttl": [194, 685], "upcom": 194, "newer": [194, 196, 232, 305, 941, 945, 948, 950], "27977": 194, "28345": 194, "28771": 194, "29219": 194, "29652": 194, "preced": [194, 278, 279, 280, 281, 289, 295, 296, 297, 298, 299, 300, 301, 309, 319, 429, 834], "config": [194, 197, 215, 281, 288, 291, 304, 306, 309, 323, 324, 331, 332, 445, 447, 448, 449, 450, 452, 453, 454, 456, 457, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 524, 525, 531, 532, 542, 550, 551, 562, 626, 636, 710, 720, 723, 727, 834, 844, 866, 883, 889, 946], "mne_stim_channel": [194, 197, 324, 524, 525, 550, 551], "mne_stim_channel_1": [194, 324, 524, 525], "saver": [194, 228, 230, 318, 936], "testing_data_fold": 194, "eeglab_raw_fil": 194, "eeglab_raw": 194, "began": 194, "000068": 194, "217": [194, 195, 248, 255, 956], "602": [194, 223, 230], "unmodifi": [194, 235, 307, 581], "custom_map": 194, "orig_tim": [194, 228, 245, 283, 286, 287, 290, 291, 302, 325, 350], "annot_from_ev": 194, "event_desc": [194, 350], "suppos": [194, 233, 273, 320, 849], "rem_annot": 194, "rem_ev": 194, "rem_event_dict": 194, "modulo": 194, "onlin": [194, 227, 232, 246, 282, 285, 312, 324, 938, 952], "816": [194, 200, 223, 260, 956], "20_events_from_raw": [194, 200, 956], "alon": [195, 952], "gantri": [195, 285, 336], "blank": [195, 243, 302, 784, 948], "subject_info": [195, 285, 304, 308, 331, 332, 333, 334, 336, 550, 551, 552], "device_info": [195, 288, 331, 332, 333, 334, 336, 515, 550, 551, 552], "helium_info": [195, 288, 331, 332, 333, 334, 336, 550, 551, 552], "hpi_subsystem": [195, 336], "proc_histori": [195, 331, 332, 333, 334, 336, 550, 551, 552], "proj_id": [195, 243, 331, 332, 333, 334, 336, 550, 551, 552], "proj_nam": [195, 243, 331, 332, 333, 334, 336, 550, 551, 552], "utc_offset": [195, 288, 302, 331, 332, 333, 334, 336, 550, 551, 552], "line_freq": [195, 270, 336], "gantry_angl": [195, 336], "ctf_head_t": [195, 336], "dev_ctf_t": [195, 336], "acq_par": [195, 243, 324, 336], "acq_stim": [195, 336], "xplotter_layout": [195, 336], "kit_system_id": [195, 336], "0143": 195, "0142": 195, "0213": 195, "0212": [195, 403], "0222": 195, "0223": 195, "0232": 195, "0233": 195, "0313": 195, "0312": 195, "0322": 195, "0323": 195, "0333": 195, "0332": 195, "0343": 195, "0342": 195, "0413": 195, "0412": 195, "0422": 195, "0423": 195, "0432": 195, "0433": 195, "0443": 195, "0442": 195, "0513": 195, "0512": 195, "0523": [195, 277, 749], "0522": 195, "0532": 195, "0533": 195, "0542": 195, "0543": 195, "0613": 195, "0612": 195, "0622": 195, "0623": 195, "0633": 195, "0632": 195, "0643": 195, "0713": 195, "0712": 195, "0723": 195, "0722": 195, "0733": 195, "0732": 195, "0743": 195, "0742": 195, "0813": 195, "0822": 195, "0823": 195, "0913": 195, "0912": 195, "0923": 195, "0922": 195, "0932": 195, "0933": 195, "0943": 195, "1012": 195, "1023": 195, "1022": [195, 236], "1033": 195, "1042": [195, 403], "1112": 195, "1122": [195, 222, 230], "1133": 195, "1132": [195, 223], "1213": [195, 222], "1212": [195, 223], "1223": 195, "1222": 195, "1232": 195, "1233": 195, "1243": 195, "1312": 195, "1313": 195, "1322": 195, "1343": 195, "1412": 195, "1413": 195, "1423": 195, "1433": [195, 222], "1432": 195, "1442": 195, "1443": 195, "1512": [195, 277, 545], "1513": 195, "1523": [195, 277, 802, 812, 813, 815, 816, 818], "1533": 195, "1532": 195, "1543": 195, "1542": 195, "1612": 195, "1622": 195, "1623": 195, "1632": 195, "1633": 195, "1642": 195, "1713": 195, "1712": 195, "1723": 195, "1732": 195, "1733": 195, "1743": 195, "1742": 195, "1813": 195, "1812": 195, "1822": 195, "1823": 195, "1832": 195, "1833": 195, "1843": 195, "1912": 195, "1913": 195, "1923": 195, "1922": 195, "1932": [195, 255], "1933": 195, "1943": 195, "1942": 195, "2023": [195, 197, 240, 313, 315, 942], "2022": [195, 206, 239, 277, 313, 317, 650], "2032": 195, "2033": 195, "2042": 195, "2112": 195, "2122": 195, "2133": 195, "2132": 195, "2143": [195, 277, 815, 818], "2142": 195, "2212": 195, "2213": 195, "2223": 195, "2222": 195, "2233": 195, "2242": [195, 243], "2243": 195, "2312": 195, "2313": [195, 237], "2323": 195, "2322": 195, "2333": [195, 630], "2343": [195, 222], "2342": 195, "2412": 195, "2413": 195, "2422": 195, "2432": 195, "2442": 195, "2512": 195, "2513": 195, "2523": 195, "2533": 195, "2532": 195, "2543": 195, "2542": 195, "2612": 195, "2613": 195, "2623": 195, "2633": [195, 222], "bear": [195, 288, 309, 936], "scanno": [195, 336], "logno": [195, 336], "cal": [195, 240, 336, 388, 549, 656], "coil_typ": [195, 317, 336, 553], "unit_mul": [195, 336], "131": [195, 223, 236, 403], "148": [195, 236, 255, 259, 260], "197": [195, 236, 255, 317, 956], "208": [195, 197, 215, 236, 255, 260, 277], "215": [195, 212, 223, 236, 259, 277, 652], "218": [195, 229, 245, 255, 259, 260, 277], "224": [195, 197, 215, 222, 223, 255, 260], "233": [195, 236, 259], "251": [195, 236, 239, 259, 277, 503, 550, 551], "286": [195, 260], "336": [195, 197, 236, 299], "341": [195, 222, 223, 236, 238, 242, 255, 601, 956], "345": [195, 236], "349": [195, 236, 255, 260, 277, 320], "oxyhemoglobin": [195, 319, 320, 331, 332, 333, 334, 550, 551, 633, 784, 786, 787, 788, 789, 790], "deoxyhemoglobin": [195, 217, 319, 320, 331, 332, 333, 334, 550, 551, 633, 784, 786, 787, 788, 789, 790], "hbo": [195, 217, 238, 243, 250, 319, 320, 331, 332, 333, 334, 336, 379, 441, 443, 550, 551, 633, 784, 786, 787, 788, 789, 790], "hbr": [195, 217, 238, 243, 250, 319, 320, 331, 332, 333, 334, 336, 379, 441, 443, 550, 551, 633, 784, 786, 787, 788, 789, 790], "express": [195, 227, 294, 298, 310, 320, 500, 512, 559, 566, 574, 611, 630, 660, 689, 706, 800], "unawar": 195, "accident": [195, 245, 283, 293, 302, 307, 749], "emb": 195, "comprehens": [195, 223, 243, 255, 257, 309, 310, 483], "ch_idx_by_typ": 195, "exci": [195, 243, 320, 331, 332, 333, 334, 336, 379, 550, 551, 633, 784, 786, 787, 788, 789, 790], "ia": [195, 243, 282, 288, 320, 331, 332, 333, 334, 336, 379, 550, 551, 633, 784, 786, 787, 788, 789, 790], "syst": [195, 243, 320, 331, 332, 333, 334, 336, 379, 550, 551, 633, 784, 786, 787, 788, 789, 790], "bio": [195, 250, 320, 331, 332, 333, 334, 379, 443, 516, 550, 551, 566, 633, 784, 786, 787, 788, 789, 790], "temperatur": [195, 304, 317, 319, 320, 331, 332, 333, 334, 336, 379, 550, 551, 633, 784, 786, 787, 788, 789, 790], "gsr": [195, 304, 320, 331, 332, 333, 334, 336, 379, 550, 551, 633, 784, 786, 787, 788, 789, 790], "fnirs_cw_amplitud": [195, 217, 238, 319, 331, 332, 333, 334, 336, 441, 550, 551], "fnirs_fd_ac_amplitud": [195, 217, 319, 331, 332, 333, 334, 336, 441, 550, 551], "fnirs_fd_phas": [195, 217, 319, 331, 332, 333, 334, 336, 441, 550, 551], "fnirs_od": [195, 319, 331, 332, 333, 334, 336, 441, 550, 551], "eeg_indic": 195, "ipython": [195, 310, 321, 331, 332, 550, 551, 636, 866, 883, 889, 936, 941, 951], "836": [195, 200, 223, 260, 956], "30_info": [195, 200, 956], "plai": [196, 232, 252, 270, 310, 320, 814, 817], "eeg_posit": 196, "builtin_montag": 196, "montage_nam": 196, "montage_descript": 196, "standard_alphabet": 196, "a1": [196, 235], "b2": 196, "standard_postfix": 196, "postfix": 196, "intermedi": [196, 227, 306, 320, 337, 356, 358, 770, 834, 907], "standard_prefix": 196, "standard_prim": 196, "biosemi16": [196, 255], "biosemi": [196, 255, 320, 406, 559], "cap": [196, 223, 255, 302, 317, 319], "biosemi32": [196, 255], "biosemi64": [196, 255], "biosemi160": 196, "biosemi256": 196, "m10": [196, 290], "m43": [196, 307], "egi_256": 196, "geodes": [196, 303, 541, 588, 754, 755, 756, 758, 759], "gsn": [196, 515], "hydrocel": [196, 515], "64_1": 196, "65_1": 196, "mgh60": [196, 305], "mgh70": [196, 286], "brainvis": [196, 280, 282, 283, 284, 286, 287, 288, 291, 292, 294, 299, 301, 302, 303, 308, 317, 320, 398, 399, 512, 516, 550, 551, 561, 689], "artini": [196, 217, 293, 302, 308, 396], "octamon": [196, 217, 293], "detector": [196, 217, 238, 243, 291, 294, 320, 575, 676, 677, 834, 852], "brite23": [196, 293], "brainproduct": 196, "rnp": 196, "ba": [196, 282, 304, 320, 518], "easycap_montag": 196, "headshap": [196, 291, 323, 373, 380, 393, 405, 576], "gca": 196, "view_init": [196, 233, 255], "azim": [196, 233], "ssvep_raw": 196, "circumfer": 196, "t4": 196, "t3": [196, 291, 388, 550], "075": 196, "sample_data_raw_path": 196, "sample_raw": 196, "ax2d": 196, "add_subplot": [196, 255], "ax3d": 196, "irregular": [196, 281, 936], "fastrak": 196, "predefin": [196, 319], "layout_dir": 196, "iterdir": 196, "IN": 196, "ctf151": [196, 255, 406], "lai": [196, 291, 294, 303, 320, 406, 583], "ctf275": [196, 255, 406], "eeg1005": [196, 406], "egi256": [196, 406], "geodesicheadweb": [196, 406], "AS": [196, 406], "umd": [196, 255, 406], "neuromag_122": [196, 406], "grad_norm": [196, 406], "magneswh3600": [196, 406, 562], "biosemi_layout": 196, "layout_from_raw": 196, "make_meg_layout": 196, "snugli": 196, "40_sensor_loc": [196, 200, 956], "suit": [197, 952], "unnam": 197, "mne_use_cuda": [197, 445, 941], "json": [197, 532], "unset": [197, 285, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 594, 597, 598, 609, 610, 619, 620, 641, 648, 649, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 836, 868, 871, 890], "typeerror": [197, 202, 282, 860], "err": [197, 231, 413], "nonetyp": 197, "unsur": [197, 230, 309], "fallback": [197, 282, 310, 331, 332, 550, 551, 866, 889], "missing_config_kei": 197, "mne_browse_raw_s": 197, "mne_datasets_brainstorm_path": 197, "mne_datasets_eegbci_path": [197, 450, 456], "mne_datasets_epilepsy_ecog_path": [197, 452], "mne_datasets_erp_core_path": [197, 453], "mne_datasets_eyelink_path": [197, 454], "mne_datasets_fieldtrip_cmc_path": 197, "mne_datasets_fnirs_motor_path": [197, 461], "mne_datasets_hf_sef_path": [197, 463], "mne_datasets_kiloword_path": [197, 464], "mne_datasets_limo_path": [197, 465], "mne_datasets_misc_path": [197, 466], "mne_datasets_mtrf_path": [197, 467], "mne_datasets_multimodal_path": [197, 468], "mne_datasets_opm_path": 197, "mne_datasets_phantom_4dbti_path": [197, 470], "mne_datasets_phantom_kernel_path": [197, 471], "mne_datasets_phantom_kit_path": [197, 472], "mne_datasets_refmeg_noise_path": [197, 473], "mne_datasets_sample_path": [197, 456, 474], "mne_datasets_somato_path": [197, 477], "mne_datasets_spm_face_path": 197, "mne_datasets_ssvep_path": [197, 479], "mne_datasets_testing_path": 197, "mne_datasets_ucl_opm_auditory_path": [197, 480], "mne_logging_level": [197, 730], "mne_3d_option_them": [197, 302, 834], "mne_browser_overview_mod": [197, 331, 332, 550, 551, 636, 866, 883, 889], "hidden": [197, 198, 292, 293, 304, 331, 332, 550, 551, 636, 834, 866, 883, 889], "mne_browser_backend": [197, 302, 308, 331, 332, 550, 551, 636, 866, 883, 889], "mne_browser_precomput": [197, 331, 332, 550, 551, 636, 866, 883, 889], "mne_browser_them": [197, 302, 331, 332, 550, 551, 636, 866, 883, 889], "mne_3d_option_antialia": [197, 291, 902, 941], "antialias": [197, 291, 941], "mne_3d_option_depth_peel": [197, 902], "peel": 197, "mne_3d_option_multi_sampl": [197, 303, 941], "mne_3d_option_smooth_shad": [197, 844, 902], "theme": [197, 293, 302, 303, 331, 332, 550, 551, 636, 834, 866, 883, 889], "browser": [197, 198, 218, 243, 279, 302, 308, 309, 323, 331, 332, 341, 550, 551, 624, 636, 843, 848, 866, 883, 889, 905, 921, 942], "inch": [197, 273, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 868, 875, 879, 888, 891, 896, 898], "mne_browser_use_opengl": [197, 302, 331, 332, 550, 551, 636, 866, 883, 889], "opengl": [197, 323, 331, 332, 542, 550, 551, 636, 866, 883, 889, 941, 942, 948, 952], "mne_cache_dir": 197, "cach": [197, 941], "mne_coreg_advanced_rend": 197, "mne_coreg_copy_annot": 197, "mne_coreg_fullscreen": [197, 542], "mne_coreg_guess_mri_subject": 197, "mne_coreg_head_high_r": [197, 542], "mne_coreg_head_opac": [197, 542], "mne_coreg_head_insid": 197, "opaqu": [197, 198, 293, 341, 542], "occlud": [197, 542], "mne_coreg_interact": 197, "trackbal": [197, 323, 333, 334, 542, 834, 836, 852, 871], "terrain": [197, 285, 302, 323, 333, 334, 542, 834, 836, 852, 871], "mne_coreg_mark_insid": 197, "mne_coreg_prepare_bem": 197, "mne_coreg_orient_to_surfac": 197, "mne_coreg_scale_label": 197, "mne_coreg_scale_by_dist": 197, "mne_coreg_scene_scal": 197, "mne_coreg_window_height": 197, "mne_coreg_window_width": [197, 542], "mne_coreg_subjects_dir": 197, "mne_cuda_devic": [197, 288], "gpu": [197, 288, 936], "mne_datasets_megsim_path": 197, "megsim": [197, 284], "mne_datasets_spm_face_datasets_test": 197, "mne_datasets_visual_92_categories_path": [197, 481], "mne_force_seri": 197, "serial": [197, 336], "decor": [197, 830, 832], "stabl": [197, 206, 229, 231, 277, 309, 326, 364, 365, 410, 522, 549, 550, 551, 624, 636, 646, 844, 936, 948], "intro": [197, 198, 200, 270, 956], "50_configure_mn": [197, 200, 956], "mne_memmap_min_s": 197, "worker": [197, 312], "1m": [197, 731], "5g": 197, "mne_repr_html": [197, 304], "mne_skip_network_test": 197, "requires_good_network": 197, "mne_skip_testing_dataset_test": 197, "requires_spm_data": 197, "requires_bstraw_data": 197, "mne_tqdm": [197, 291, 292], "tqdm": [197, 291, 292], "presenc": [197, 227, 238, 252, 270, 277, 281, 290, 292, 303, 309, 316, 336, 462, 507], "absenc": [197, 507], "mne_use_numba": 197, "numba": [197, 288, 290, 291, 292, 942], "compil": [197, 672], "misspel": 197, "mnee_use_cuudaa": 197, "runtimewarn": [197, 831], "unrecogn": [197, 293, 331, 332, 333, 334, 336, 550, 551], "concern": [197, 231, 255, 571, 660, 696, 700], "userprofil": [197, 532], "linux": [197, 286, 309, 943, 945, 948, 950], "maco": [197, 287, 293, 309, 943, 945, 946], "home_dir": [197, 531, 532, 727], "use_env": [197, 531], "set_env": [197, 282, 727], "python_env": [197, 232], "minimal_cmd": 197, "usr": [197, 948, 951], "sbin": 197, "statement": [197, 198, 255, 729, 948], "fresh": 197, "me": [197, 779], "worrisom": 197, "temporarili": [197, 233, 234, 331, 332, 333, 334, 446, 485, 521, 550, 551, 636, 866, 883, 889, 914], "kit_data_path": 197, "abspath": 197, "496": [197, 223, 236, 260, 344], "meg160": 197, "v2r004": 197, "160ch": 197, "jan24": 197, "eq1160c": 197, "dewar": 197, "fll": 197, "board": 197, "adc": [197, 216], "alloc": [197, 771, 772, 774, 775], "shorthand": 197, "whatev": [197, 235, 309, 550, 551, 788], "recent": [197, 229, 303, 309, 316, 483, 942], "hasn": [197, 293, 302, 648], "stdout": [197, 304, 729, 783], "platform": [197, 322, 331, 332, 333, 334, 550, 551, 786, 787, 789, 790, 889, 942, 945, 950, 952, 954], "aw": [197, 322], "x86_64": [197, 948], "glibc2": 197, "nov": 197, "gcc": 197, "cpu": [197, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 495, 496, 499, 500, 526, 539, 541, 550, 551, 594, 597, 598, 609, 610, 619, 620, 636, 641, 648, 649, 671, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 836, 866, 868, 871, 883, 889, 890, 941, 942], "gb": [197, 941, 942, 948], "latest": [197, 290, 303, 309, 783, 936, 941, 950], "releas": [197, 216, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 308, 309, 310, 783, 936, 950], "openbla": [197, 936, 942], "dev": [197, 252, 624, 729, 942], "thread": [197, 265, 320, 331, 332, 550, 551, 636, 866, 883, 889, 942], "agg": 197, "pooch": [197, 294, 302, 456, 942], "jinja2": [197, 302, 942], "dipi": [197, 306, 343, 668, 822, 823, 824, 942], "openmeeg": [197, 304, 593, 598, 942], "unavail": [197, 290, 942], "cupi": [197, 286, 331, 332, 333, 334, 485, 489, 494, 521, 522, 523, 550, 551, 941, 942], "mesa": [197, 291, 302, 303, 305, 542, 902, 942], "0ubuntu1": 197, "llvmpipe": [197, 941, 942], "llvm": [197, 941, 942], "pyvistaqt": [197, 294, 338, 342, 346, 846, 894, 901, 920, 941, 942], "vtk": [197, 302, 482, 834, 851, 941, 942], "qtpy": [197, 942], "pyqt6": 197, "ipympl": [197, 942], "pyqtgraph": [197, 294, 302, 331, 332, 550, 551, 636, 866, 883, 889, 942], "ipywidget": 197, "trame_cli": 197, "trame_serv": 197, "trame_vtk": 197, "trame_vuetifi": 197, "ecosystem": [197, 942, 943, 946, 949], "icalabel": [197, 303, 942, 949], "424": [197, 200, 956], "shell": [198, 209, 237, 277, 309, 320, 323, 592, 599, 936, 942, 948, 949], "deploi": [198, 936], "tempfil": 198, "ndimag": 198, "raw_tsss": [198, 323, 550, 551, 572], "_eeg": [198, 293, 323, 550, 551], "_ieeg": [198, 293, 323, 550, 551], "underscor": [198, 228, 232, 243, 636], "parse_fold": [198, 285, 286, 290, 291, 292, 293, 294, 301, 341], "add_raw": [198, 302, 341], "slider": [198, 274, 286, 293, 302, 303, 333, 334, 341, 875, 941], "scrub": 198, "report_raw": 198, "jqueri": 198, "bundl": [198, 302, 945], "tableexport": 198, "highlightj": 198, "atom": 198, "meaning": [198, 244, 309, 725], "events_path": 198, "report_ev": 198, "add_epoch": [198, 302, 341], "fly": [198, 257, 301, 331, 332, 550, 551, 819, 832, 866, 889], "report_epoch": 198, "add_evok": [198, 341], "n_time_point": [198, 341], "evoked_path": 198, "cov_path": 198, "evokeds_subset": 198, "report_evok": 198, "add_covari": [198, 341], "report_cov": 198, "ecg_proj_path": 198, "report_proj": 198, "add_ica": [198, 304, 308, 341], "ecg_evok": [198, 232, 234, 341], "eog_evok": [198, 231, 232, 234, 341], "artifactu": [198, 226, 229, 232, 277, 636], "find_bads_ecg": [198, 232, 283, 291, 294, 341, 636], "ecg_scor": [198, 232, 341], "liber": 198, "eog_compon": 198, "report_ica": 198, "add_bem": [198, 294, 341], "th": [198, 320, 331, 636, 741, 744, 746, 788, 936], "report_mri_and_bem": 198, "add_tran": [198, 302, 341], "trans_path": 198, "report_coregistr": 198, "add_forward": [198, 302, 341, 834, 955], "fwd_path": 198, "report_forward_sol": 198, "add_inverse_oper": [198, 341], "inverse_op_path": 198, "report_inverse_op": 198, "add_stc": [198, 302, 341], "report_inverse_sol": 198, "01632618": 198, "06303297": 198, "63565434": 198, "add_cod": [198, 341], "syntax": [198, 309, 320, 341], "snippet": [198, 263, 341, 936], "liter": [198, 320, 341], "mne_init_py_path": 198, "__init__": [198, 625], "mne_init_py_cont": 198, "read_text": 198, "utf": [198, 286, 303, 567, 689, 695], "report_cod": 198, "add_figur": [198, 294, 302, 303, 341], "caption": [198, 294, 341], "num": [198, 269], "sky": 198, "image_format": [198, 305, 306, 323, 341], "report_custom_figur": 198, "fig_1": 198, "ax_1": 198, "ax_2": 198, "report_custom_figure_sect": 198, "logo": [198, 279], "mne_logo_path": 198, "mne_icon": 198, "fig_arrai": 198, "rotation_angl": 198, "fig_array_rot": 198, "fun": [198, 331, 332, 333, 334, 550, 551], "photo": 198, "screenshot": [198, 273, 294, 834, 906], "sketch": 198, "add_imag": [198, 294, 303, 305, 341], "jpeg": [198, 341], "gif": [198, 305, 341, 834], "svg": [198, 284, 301, 306, 323, 341], "report_custom_imag": 198, "add_": 198, "dropdown": [198, 302], "menu": [198, 245, 321, 945, 948], "hide": [198, 245, 268, 279, 288, 302], "checkbox": [198, 302], "report_tag": 198, "hdf5": [198, 286, 300, 308, 335, 338, 339, 341, 345, 347, 355, 368, 625, 635, 681, 711, 784, 785, 786, 787, 788, 789, 790, 806, 807, 808, 819, 923, 924, 928, 936], "report_parti": 198, "amend": [198, 400], "report_from_disk": 198, "report_fin": 198, "invok": [198, 300, 323, 849, 948], "barebon": [198, 323], "render_bem": [198, 285, 341], "raw_butterfli": [198, 341], "report_parse_folder_bas": 198, "raw_psd": [198, 286, 341], "refin": [198, 343, 388, 429], "report_parse_folder_raw_psd_proj": 198, "mri_decim": [198, 323, 341], "report_parse_folder_mri_bem": 198, "temporarydirectori": 198, "n_time_points_evok": [198, 341], "report_parse_folder_evok": 198, "tmp": 198, "tmpqn1cxzhz": 198, "add_html": [198, 294, 341], "remind": [198, 309, 636], "my_html": 198, "ol": [198, 300, 312, 769], "manifest": [198, 230, 231, 232, 234, 319], "n1": 198, "report_add_html": 198, "70_report": [198, 200, 956], "771": [200, 956], "realli": 201, "carri": [201, 226, 232, 270, 559, 765], "belong": [201, 336, 337, 341, 705, 761, 833, 834], "shape_lh": 201, "is_equ": 201, "suspect": 201, "nth": [201, 232, 326, 330, 331, 332, 333, 334, 653, 654, 784, 788], "peak_vertex": 201, "vert_as_index": [201, 206, 338, 339, 342, 345, 346, 347], "peak_vertex_surf": 201, "peak_valu": 201, "logic": [201, 250, 257, 260, 304, 331, 332, 333, 334, 336, 542, 550, 551, 552, 636, 660], "lh_coordin": 201, "rh_coordin": 201, "10_stc_class": [201, 214, 956], "load_mni152_templ": 202, "fname_av": 202, "fname_surf_lh": 202, "n100m": 202, "evoked_ful": 202, "posixpath": [202, 207], "6179": 202, "6941": 202, "5491": 202, "2193": 202, "0405": 202, "7598": 202, "4769": 202, "mni_po": 202, "to_mni": [202, 293, 329], "mri_po": 202, "to_mri": [202, 304, 329], "best_dip_idx": 202, "to_volume_label": [202, 294, 329], "fig_t1": 202, "cut_coord": 202, "fig_templ": 202, "pred_evok": 202, "inf": [202, 218, 226, 251, 283, 331, 332, 333, 334, 349, 488, 547, 548, 550, 551, 585, 649, 784, 786, 787, 789, 790, 791, 793, 794, 796, 804, 805, 843, 890, 896], "best_idx": 202, "best_tim": 202, "conf": [202, 309, 329], "plot_param": 202, "0f": [202, 333, 334, 836, 871], "dip_fix": 202, "7506": 202, "6606": 202, "electromagnet": [202, 204, 226, 234, 237, 252, 277, 319, 320, 364, 365, 504, 603, 647, 671], "biomagnet": [202, 277], "20_dipole_fit": [202, 214, 956], "200m": 203, "500m": 203, "fig_cov": [203, 328, 861], "fig_spectra": 203, "1468": 203, "506": 203, "1574": 203, "67933": 203, "16538e": 203, "set_color": [203, 209], "98df81": [203, 209], "vertno_max": 203, "time_max": [203, 204], "824": [203, 214, 260, 956], "30_mne_dspm_loreta": [203, 214, 956], "left_auditori": 204, "dip_po": 204, "dip_ori": 204, "dip_len": 204, "dip_tim": 204, "rgb": [204, 338, 339, 342, 345, 346, 347, 536, 541, 834, 855, 894, 899, 900], "outward": [204, 329, 339, 345, 347, 434, 864, 936], "moment": [204, 206, 336, 339, 345, 347, 386, 411, 413, 414, 415, 504, 646, 647, 660, 671, 899], "06165525": 204, "70033915": 204, "34794621": 204, "inward": [204, 936], "curvatur": [204, 294, 338, 339, 342, 345, 346, 347, 782, 834, 894, 899], "collaps": [204, 341, 505], "brain_mag": 204, "overlay_alpha": [204, 339, 345, 347, 899], "44205e": 204, "79973942": 204, "38378769": 204, "8347911": 204, "somewhat": [204, 226], "strai": 204, "unrestrict": 204, "brain_loos": 204, "03844879": 204, "68532258": 204, "12541436": 204, "knuutila": [204, 277], "olli": [204, 277], "lounasmaa": [204, 277], "instrument": [204, 226, 232, 277], "noninvas": [204, 277], "modern": [204, 215, 277, 287, 294, 320, 457, 938, 941], "revmodphi": [204, 277], "fa": [204, 277, 614, 741, 746], "hsuan": [204, 277, 614, 741, 746], "lin": [204, 222, 277, 489, 614, 741, 746], "belliveau": [204, 277, 603, 614, 741, 746], "20155": [204, 277], "519": [204, 214, 260, 270, 956], "35_dipole_orient": [204, 214, 956], "variant": [205, 216, 290, 536, 647, 941], "1498464098687909": [205, 207], "037797": 205, "65922": 205, "72259e": 205, "28047949e": 205, "72734062e": 205, "97200565e": 205, "56295849": 205, "27742998": 205, "00597185": 205, "65359441": 205, "22223216": 205, "63030546": 205, "eigen": [205, 337, 761], "34003429e": 205, "79067976e": 205, "93243713e": 205, "61893": 205, "8713e": 205, "81398590e": 205, "00293217e": 205, "59049573e": 205, "79225614": 205, "45181115": 205, "88420759": 205, "65906465": 205, "11446799": 205, "4224023": 205, "41240750e": 205, "15338772e": 205, "80101709e": 205, "576": [205, 214, 223, 260, 956], "40_mne_fixed_fre": [205, 214, 956], "britta": [206, 277, 284, 285, 286, 287, 290, 291, 293, 294, 302, 305, 306, 307, 954], "westner": [206, 277, 284, 285, 286, 287, 290, 291, 293, 294, 302, 305, 306, 307, 954], "wstnr": 206, "linearli": [206, 233, 237, 277, 319, 360, 361, 362, 363, 364, 365, 936], "ingredi": 206, "valuabl": [206, 320], "gaug": 206, "incorpor": [206, 255, 260, 303, 309, 320, 388, 507, 516, 550, 551, 641], "rule": [206, 226, 230, 277, 320, 636], "thumb": [206, 226, 230, 317, 636], "advic": [206, 309], "defici": [206, 283, 284, 320, 439, 636], "misrepres": 206, "3757": [206, 207], "inher": [206, 216, 260, 500], "somehow": [206, 208, 232], "nai": [206, 286, 291, 364, 365], "switch": [206, 209, 210, 229, 236, 252, 277, 287, 291, 294, 309, 323, 337, 342, 418, 550, 551, 941, 948], "invari": [206, 364, 365], "filters_vec": 206, "087": 206, "stat_map": [206, 346, 347, 900], "5184": 206, "glass_brain": [206, 207, 288, 346, 347, 900], "022485": [206, 207], "008449": [206, 207], "036217": [206, 207], "071071": [206, 207], "914866": [206, 207], "406098": [206, 207], "008756": [206, 207], "433700": [206, 207], "028119": [206, 207], "plotter": [206, 279, 292, 318, 331, 332, 636, 834, 837, 866, 883], "peak_vox": 206, "ori_label": 206, "fname_fs_src": 206, "stc_f": [206, 207], "085": [206, 212], "17352": 206, "barri": [206, 229, 231, 232, 277, 364, 365, 635, 651], "veen": [206, 277, 364, 365], "wim": [206, 277, 364, 365], "drongelen": [206, 277, 364, 365], "mosh": [206, 277, 364, 365], "yuchtman": [206, 277, 364, 365], "akifumi": [206, 277, 364, 365], "suzuki": [206, 277, 364, 365], "623056": [206, 277, 364, 365], "brook": [206, 277, 279, 280, 281, 282, 283, 284, 286, 287, 291, 297, 298, 299, 300, 301, 314], "jiri": [206, 277], "vrba": [206, 277], "clair": [206, 277, 285], "stevenson": [206, 277], "gareth": [206, 239, 277, 317, 650], "barn": [206, 239, 277, 317, 650], "arjan": [206, 277], "hillebrand": [206, 277], "morri": [206, 277], "optimis": [206, 277], "1788": [206, 277], "sarang": [206, 277, 312], "dalal": [206, 277, 312], "vladimir": [206, 255, 277, 777, 778], "litvak": [206, 255, 277, 777, 778], "oostenveld": [206, 260, 277, 290, 771, 772, 774, 775], "mathij": [206, 277], "schoffelen": [206, 277], "118789": [206, 277], "918": [206, 214, 956], "50_beamformer_lcmv": [206, 214, 956], "flatmap": [207, 293, 338, 342, 346, 834, 894], "mpl_fig": 207, "94880328959697": 207, "84640986879091": 207, "649601096532322": 207, "5653": 207, "67635542": 207, "11717401": 207, "19136023": 207, "atlas": [207, 291, 733], "label_tc": [207, 338, 339, 342, 345, 346, 347, 517], "lidx": 207, "xytext": 207, "arrowprop": [207, 222], "arrowstyl": [207, 222], "spine": [207, 273, 849, 860], "set_vis": 207, "grain": [207, 294], "loci": 207, "stc_back": 207, "6210": 207, "69834054": 207, "98871778": 207, "62206532": 207, "70708526": 207, "36619556": 207, "64056812": 207, "6864": 207, "60_visualize_stc": [207, 214, 956], "reconstrct": 208, "elc": [208, 282, 398], "synthes": [208, 215, 287, 371, 375, 576, 661], "fname_t1_electrod": 208, "sample_eeg_mri": 208, "t1_electrod": 208, "fname_mon": 208, "sample_mri_montag": 208, "ras_mni_t": [208, 826], "mni_affin": 208, "img_mni": 208, "hot_black_bon": 208, "black_bg": 208, "resampling_interpol": 208, "pos_vox": 208, "fname_t1": 208, "vox2mri_t": 208, "pos_mri": [208, 329], "tkmedit": [208, 320, 948], "dig_montag": 208, "head_siz": [208, 396, 398], "99930957": 208, "00998471": 208, "03578661": 208, "00316747": 208, "01275917": 208, "81240435": 208, "58295487": 208, "00685511": 208, "03489383": 208, "58300899": 208, "81171605": 208, "02888406": 208, "812404": 208, "582955": 208, "583009": 208, "3252": 208, "3250": 208, "1767": 208, "3223": 208, "4097": [208, 229], "1805": 208, "8193": 208, "040598": 208, "157084": 208, "86184": 208, "24877e": 208, "17591891": 208, "939572": 208, "86348066": 208, "70_eeg_mri_coord": [208, 214, 956], "planor": 209, "meg1933": 209, "meg2421": 209, "768": 209, "1792": 209, "bmax": [209, 323], "ring": [209, 229, 284, 285, 518, 520], "otaniemi": [209, 283, 294, 317, 460, 503], "phantom_otaniemi": 209, "32640": 209, "32639": 209, "976295": 209, "211976": 209, "043756": 209, "206488": 209, "972764": 209, "105326": 209, "064891": 209, "093794": 209, "993475": 209, "rad2deg": [209, 212], "arcco": [209, 212], "911": [209, 214, 956], "80_brainstorm_phantom_elekta": [209, 214, 956], "phantomctf": 210, "bst_phantom_ctf": 210, "phantom_200ua_20150709_01": 210, "dip_freq": [210, 212], "phantom_20ua_20150603_03": 210, "erm_path": 210, "emptyroom_20150709_01": 210, "24000": 210, "23999": 210, "hdac006": 210, "zeros_lik": [210, 222], "ones_lik": [210, 257, 258], "tsss": [210, 280, 306, 333, 336, 550, 572, 671, 679, 701], "apply_gradient_compens": [210, 215, 282, 320, 550, 551], "un": [210, 230, 233, 237, 246, 320, 550, 551, 612, 613, 889], "mf_kwarg": 210, "st_durat": [210, 237, 660, 671], "021666666666666667": 210, "458": [210, 255, 260], "catch_warn": 210, "simplefilt": 210, "60000": 210, "998": [210, 218, 237, 649, 654, 662, 665], "999939": 210, "002039": 210, "010868": 210, "001115": 210, "959234": 210, "282612": 210, "011001": 210, "282607": 210, "959173": 210, "expected_po": 210, "array_str": 210, "835": [210, 214, 236, 956], "85_brainstorm_phantom_ctf": [210, 214, 956], "4dbti": 211, "badier": [211, 277, 744], "marseil": [211, 317], "franc": 211, "rfhp1": 211, "0hz": 211, "a173": 211, "a213": 211, "a232": 211, "not_and": [211, 284, 324, 524, 698], "hs_file": [211, 215, 562], "13599": 211, "20053968578577042": 211, "6576": 211, "6575": 211, "975564": 211, "033891": 211, "217085": 211, "044586": 211, "998011": 211, "044560": 211, "215143": 211, "053150": 211, "975135": 211, "975554": 211, "034041": 211, "217109": 211, "044503": 211, "998063": 211, "043482": 211, "215208": 211, "052081": 211, "975178": 211, "975577": 211, "033678": 211, "217061": 211, "044611": 211, "997960": 211, "045666": 211, "215080": 211, "054233": 211, "975089": 211, "975557": 211, "033946": 211, "217110": 211, "044391": 211, "998071": 211, "043409": 211, "215218": 211, "051986": 211, "975181": 211, "37436305": 211, "3777228": 211, "21169488": 211, "17616473": 211, "483": [211, 214, 225, 236, 255, 956], "90_phantom_4dbti": [211, 214, 956], "find_peak": 212, "oyama": [212, 277, 503], "002_phantom_11hz_100ua": 212, "con": [212, 226, 229], "plot_scal": 212, "raw_plot_kwarg": 212, "582800": 212, "boxcar": [212, 270, 286, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 523, 550, 551, 936], "downward": [212, 331, 332, 333, 334, 336, 550, 551, 892], "dip_act": 212, "dip_t": 212, "thresh": [212, 654, 662, 666, 680, 771, 772, 774, 775, 834], "min_dist": [212, 526], "safe": [212, 230, 243, 277, 331, 332, 388, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 550, 948, 950], "peak_idx": 212, "ro": 212, "n_dip": 212, "bo": 212, "caught": [212, 232], "onset_idx": 212, "rx": 212, "n_rep": 212, "group_delta": 212, "544": [212, 223, 236, 260], "hleft": 212, "088": 212, "pitch": 212, "rot": [212, 434, 825, 827], "yaw": 212, "deg2rad": 212, "18522": 212, "18521": 212, "998477": 212, "050618": 212, "021924": 212, "052328": 212, "994909": 212, "086126": 212, "017452": 212, "087142": 212, "996043": 212, "2057": [212, 214, 956], "95_phantom_kit": [212, 214, 956], "711": [214, 235, 260, 277, 331, 332, 333, 334, 550, 551, 728, 956], "maxshield": [215, 282, 285, 323, 333, 336, 550, 572, 671, 701], "allow_maxshield": [215, 236, 237, 333, 550, 572, 701], "ucl": [215, 239, 277, 306, 423], "mandatori": [215, 320, 364, 365, 388, 550, 636], "rfdc": [215, 323], "realiz": [215, 229], "carefulli": [215, 227, 229, 317], "technic": [215, 268, 277, 310, 316, 320, 331, 332, 333, 334, 550, 551, 603, 786, 789, 798, 804], "disturb": [215, 316, 320], "mainli": [215, 270, 309, 320], "nicknam": 215, "n_1": 215, "n_2": 215, "n_3": 215, "x_1": [215, 320], "x_2": [215, 320], "x_3": 215, "denot": [215, 223, 245, 319, 320, 339, 345, 347, 669, 741, 744, 746, 765, 767, 785], "x_": [215, 223, 320], "m_": 215, "bmatrix": [215, 320], "c_": [215, 255, 320], "standardize_nam": [215, 291, 576, 697], "nx3": [215, 538], "mrk": [215, 288, 323, 554, 576, 697], "elp": [215, 282, 290, 320, 323, 398, 405, 576, 697, 699], "onward": [215, 734], "miscellan": [215, 243, 320, 331, 332, 333, 334, 550, 551, 633, 784, 786, 787, 788, 789, 790], "eight": [215, 304, 320], "endian": [215, 292], "big": [215, 232, 273, 279, 281, 292, 294, 318, 492, 773], "stimthresh": [215, 323, 576], "sum_": [215, 229, 320, 744], "t_p": 215, "d_p": 215, "bigg": 215, "leq": [215, 255], "intent": [215, 318], "original_data": 215, "read_raw_fiff": 215, "original_info": 215, "data_from_ft": 215, "evoked_data": [215, 257], "untest": 215, "cnt": [215, 281, 287, 288, 306, 320, 512, 563, 689], "egi": [215, 240, 283, 284, 285, 286, 287, 288, 291, 292, 300, 301, 303, 308, 317, 320, 398, 401, 568], "eximia": [215, 285, 320, 569], "3rd": [215, 226, 338, 339, 342, 345, 346, 347, 770], "parti": 215, "librari": [215, 288, 297, 309, 318, 837, 936, 941, 948, 949, 952], "abund": 215, "electrophysiolog": [215, 229, 277, 319], "10_reading_meg_data": [215, 221, 956], "meta": [216, 312, 331, 332, 333, 334, 336, 550, 551, 552], "ini": 216, "host": [216, 284, 310], "pybv": [216, 516, 550, 551], "mnelab": [216, 949], "pyedflib": 216, "amplifi": [216, 231, 235, 303, 581, 952], "byte": [216, 291, 307, 323, 331, 332, 550, 551, 585, 843], "overcom": 216, "gender": [216, 277, 475], "danger": [216, 336], "x_coord": 216, "y_coord": 216, "electloc": 216, "encourag": [216, 252, 305, 310, 951], "netstat": [216, 300, 568], "nexstim": 216, "nk": 216, "11d": 216, "cmt": 216, "cn2": 216, "histori": [216, 301, 319, 336, 515], "successfulli": [216, 244, 309], "neither": [216, 450, 540, 550, 551, 950], "nor": [216, 235, 310, 540, 550, 551, 950], "20_reading_eeg_data": [216, 221, 956], "emitt": 217, "transmitt": 217, "oxyhaemoglobin": [217, 238], "modif": [217, 219, 265, 300, 398, 443, 949], "Near": 217, "effort": [217, 309, 312, 559, 937], "sfnir": 217, "gowerlab": [217, 303], "cortivis": 217, "provis": 217, "haemoglobin": [217, 290, 302, 673], "optode_fram": [217, 584], "vendor": [217, 320], "icbm": 217, "2009b": 217, "nirstar": [217, 581], "aurora": [217, 294, 303, 581], "nirscout": [217, 581], "nirsport": [217, 294, 581], "iss": [217, 292, 560], "paren": 217, "unmodul": 217, "unpars": 217, "organis": 217, "digaux": 217, "port": [217, 948, 952], "discourag": [217, 304, 331, 332, 333, 334, 550, 551, 786, 787, 789, 790, 868, 936], "standardis": [217, 304], "to_csv": [217, 243], "_d": 217, "wavelength": [217, 226], "s1_d1": [217, 238], "s2_d1": 217, "s3_d1": 217, "s4_d1": 217, "s5_d2": 217, "s6_d2": 217, "s7_d2": 217, "s8_d2": 217, "ficidu": 217, "30_reading_fnirs_data": [217, 221, 956], "site": [218, 231, 232, 237, 277, 309, 336, 388, 550, 647, 660, 671], "beep": 218, "deviant": [218, 229], "finger": [218, 317], "bug": [218, 289, 309, 310, 311, 324, 524, 542, 783, 834, 937], "consumpt": [218, 285, 293, 302, 333, 334, 500, 870], "use_precomput": 218, "erm_fnam": 218, "s01_noise_20131218_01": 218, "demand": [218, 243, 279, 320, 500, 504, 549, 694], "n_times_run1": 218, "4800": 218, "unus": [218, 285, 290, 302, 308, 309, 344, 660], "heog": [218, 563], "veog": [218, 304, 563], "favorit": [218, 309], "annotations_df": 218, "csv_fname": 218, "events_bad_0": 218, "concat": [218, 483], "saccades_ev": 218, "7625": 218, "2776": [218, 222], "142459": 218, "892": 218, "216954": 218, "345135": 218, "5816": 218, "357687": 218, "409101": 218, "3736": 218, "461110": 218, "479866": 218, "426": [218, 236, 255, 260], "764914": 218, "11500": [218, 306], "798174": 218, "6589": 218, "846880": 218, "5383": 218, "858863": 218, "5136": 218, "5583": 218, "9256": 218, "3114": 218, "14287": 218, "3456": 218, "116432": 218, "134489": 218, "1329": [218, 236], "464527": 218, "494136": 218, "4519": 218, "749288": 218, "788623": 218, "7937": 218, "21179": 218, "72993": 218, "134527": 218, "196555": 218, "249894": 218, "343357": 218, "400771": 218, "450256": 218, "593101": 218, "733942": 218, "765939": 218, "789476": 218, "792852": 218, "833208": 218, "859869": 218, "862888": 218, "saccade_epoch": 218, "reject_by_annot": [218, 238, 245, 283, 284, 285, 287, 291, 331, 428, 550, 551, 595, 636, 653, 654, 661, 662, 789, 881, 890], "projs_saccad": 218, "n_mag": [218, 234, 308, 323, 424, 425, 426, 648, 649], "n_eeg": [218, 234, 308, 323, 424, 425, 426, 648, 649, 834, 852], "desc_prefix": [218, 424, 425], "projs_eog": 218, "1201": [218, 277, 367], "spectra": [218, 250, 268, 277, 308, 319, 328, 331, 332, 333, 334, 488, 550, 551, 609, 610, 771, 786, 787, 789, 790, 793, 796, 804, 805, 861, 868, 890], "doubl": [218, 229, 232, 270, 280, 282, 298, 309, 320, 331, 332, 333, 334, 485, 494, 516, 518, 519, 521, 522, 549, 550, 551, 573, 671, 948], "filter_length": [218, 229, 230, 234, 282, 291, 323, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551, 648, 649, 661, 662], "sound": [218, 222, 223, 232, 277, 490, 815, 818], "uadc001": 218, "sound_data": 218, "min_diff": 218, "\u03bc": [218, 237, 492], "\u03c3": [218, 237, 492, 599], "mlo52": 218, "mrt51": 218, "mlo42": 218, "mlo43": 218, "epochs_standard": 218, "epochs_devi": 218, "mlp52": 218, "evoked_std": 218, "evoked_dev": 218, "p50": 218, "paint": [218, 331, 332, 333, 334, 550, 551, 870, 890], "mmn": 218, "emphasis": 218, "evoked_differ": 218, "ico4": [218, 316, 723], "8033": 218, "015871": 218, "10585e": 218, "09843": 218, "11765e": 218, "stc_standard": 218, "80289065": 218, "69025561": 218, "89954825": 218, "stc_deviant": 218, "12814543": 218, "29154718": 218, "6203076": 218, "stc_differ": 218, "96162575": 218, "78319301": 218, "94351171": 218, "60_ctf_bst_auditori": [218, 221, 956], "radian": [219, 240, 434], "glossari": [219, 309, 321], "ascii": [219, 283, 291, 294, 303, 308, 317, 320, 323, 567, 570, 689, 695, 717], "edf2asc": 219, "european": [219, 320, 322], "ocular": [219, 231, 232, 234, 277, 307, 635, 686], "binocular": [219, 240], "ypos_right": [219, 240], "fpath": 219, "px_textpage_w": 219, "create_annot": [219, 240, 570], "custom_sc": 219, "trackabl": 219, "href_textpage_w": 219, "diamet": [219, 320], "ellips": 219, "delimint": 219, "2000hz": 219, "timestamp": [219, 245, 288, 325, 338, 339, 342, 345, 346, 347, 550, 551, 568, 689], "70_reading_eyetracking_data": [219, 221, 956], "multivariate_norm": 222, "1337": 222, "path_audio": 222, "spectrogram": [222, 260, 270, 299, 312, 319], "n_decim": 222, "explicit": [222, 282, 291, 293, 294, 309, 330, 427, 439, 440], "delays_samp": 222, "delays_sec": 222, "5000": [222, 257], "meshgrid": [222, 233, 260], "swap": [222, 259, 265, 293, 320, 717], "swapax": [222, 259, 265], "gabor": 222, "means_high": 222, "means_low": 222, "2500": [222, 281], "gauss_high": 222, "gauss_low": 222, "artifici": [222, 277, 317, 568, 636], "convolut": [222, 229, 270, 294, 496, 619, 620, 792, 795, 802, 811, 812, 813, 814, 816, 817, 949], "n_second": 222, "x_del": 222, "ix_delai": 222, "ndim": [222, 270], "elif": 222, "rollaxi": 222, "weights_sim": 222, "iep": 222, "noise_amp": 222, "x_plt": 222, "hstack": [222, 233], "y_plt": 222, "autocorrel": [222, 489, 495], "ix_best_alpha": 222, "best_mod": 222, "best_pr": 222, "iax": 222, "time_pr": 222, "3450": 222, "749": [222, 236, 260], "1648": 222, "2380": 222, "2761": 222, "3057": 222, "3287": 222, "502": [222, 260, 601], "23187": 222, "746": [222, 223, 260], "23301": 222, "1063": [222, 237, 277, 647, 671], "22066": 222, "1288": [222, 277], "19909": 222, "19993": 222, "1988": 222, "20641": 222, "2354": 222, "21007": 222, "2729": 222, "21361": 222, "3074": 222, "21385": 222, "3305": 222, "20691": 222, "23267": 222, "23072": 222, "1120": 222, "23303": 222, "22412": 222, "20759": 222, "2044": 222, "21109": 222, "2415": 222, "21450": 222, "2781": 222, "21657": 222, "3156": 222, "21896": 222, "21839": 222, "20494": 222, "19116": 222, "20147": 222, "21021": 222, "1668": 222, "20875": 222, "19846": 222, "2288": 222, "20412": 222, "2652": 222, "20754": 222, "3009": 222, "20964": 222, "3341": 222, "20932": 222, "20865": 222, "14498": 222, "548": [222, 223], "16978": 222, "15454": 222, "981": [222, 260], "15174": 222, "14966": 222, "14780": 222, "1655": 222, "14629": 222, "14608": 222, "2115": 222, "14559": 222, "14511": 222, "2574": 222, "14500": 222, "2805": 222, "14493": 222, "3034": 222, "14467": 222, "3264": 222, "14455": 222, "14530": 222, "17992": 222, "667": [222, 260], "20897": 222, "18892": 222, "1238": 222, "19312": 222, "20216": 222, "1990": [222, 255, 277, 483], "20841": 222, "2370": 222, "21314": 222, "2750": 222, "21671": 222, "3027": 222, "21080": 222, "3321": 222, "20743": 222, "20799": 222, "23146": 222, "23296": 222, "1127": 222, "23444": 222, "1391": 222, "21559": 222, "1694": 222, "20980": 222, "2065": 222, "21394": 222, "21631": 222, "2806": 222, "21892": 222, "3173": 222, "22031": 222, "21740": 222, "subplot2grid": [222, 273], "i_alpha": 222, "ddot": 222, "tikhonov": 222, "trf": [222, 259], "insensit": [222, 283, 331, 332, 512, 559, 566, 574, 582, 639, 788], "whilst": [222, 239], "mse": 222, "scores_lap": 222, "models_lap": 222, "reg_typ": [222, 495], "ix_best_alpha_lap": 222, "22158": 222, "723": 222, "22571": 222, "19849": 222, "1301": [222, 236], "20240": 222, "1676": 222, "20935": 222, "21288": 222, "21579": 222, "21765": 222, "3043": 222, "21074": 222, "3339": 222, "20753": 222, "20885": 222, "23309": 222, "743": [222, 223], "23186": 222, "21511": 222, "20480": [222, 482], "1691": [222, 236], "21056": 222, "2066": 222, "21498": 222, "2437": 222, "21777": 222, "2814": 222, "22036": 222, "3118": 222, "21617": 222, "3399": 222, "21108": 222, "21221": 222, "12015": 222, "11986": 222, "11999": [222, 308], "12429": 222, "14175": 222, "1498": 222, "15929": 222, "1877": [222, 277, 636], "17209": 222, "2255": 222, "18157": 222, "18889": 222, "2926": 222, "18815": 222, "3220": 222, "18762": 222, "18523": 222, "22887": 222, "23210": 222, "23069": 222, "20893": 222, "1706": 222, "21185": 222, "2083": 222, "21626": 222, "2461": 222, "21949": 222, "2838": 222, "22184": 222, "3221": 222, "22385": 222, "21737": 222, "12059": 222, "11731": 222, "568": [222, 223, 236], "11823": [222, 307], "763": [222, 260], "11916": 222, "996": [222, 260], "12500": 222, "1346": 222, "14267": 222, "1717": 222, "15739": 222, "2091": 222, "16868": 222, "2463": 222, "17729": 222, "2831": 222, "18381": 222, "3080": 222, "18050": 222, "3303": 222, "17595": 222, "16965": 222, "13938": 222, "13861": 222, "657": 222, "13636": 222, "13980": 222, "15259": 222, "1540": [222, 315], "16233": 222, "16916": 222, "2194": 222, "17439": 222, "2489": 222, "17569": 222, "17412": 222, "18057": 222, "3424": 222, "18168": 222, "17786": 222, "21906": 222, "19930": 222, "863": [222, 260], "17805": 222, "1217": [222, 223], "18960": 222, "1599": [222, 236], "20043": 222, "1967": [222, 268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 805], "20592": 222, "2345": 222, "21090": 222, "2710": 222, "21337": 222, "2944": 222, "20418": 222, "3267": 222, "20385": 222, "20461": 222, "rf_lap": 222, "fr\u00e9d\u00e9ric": [222, 277, 489], "theunissen": [222, 277, 489], "nandini": [222, 277, 489], "singh": [222, 277, 281, 489], "ann": [222, 245, 277, 285, 489], "hsu": [222, 277, 489], "vinj": [222, 277, 489], "jack": [222, 277, 293, 304, 308, 489], "gallant": [222, 277, 489], "ben": [222, 277, 303, 489], "willmor": [222, 277, 489], "darragh": [222, 277, 489], "smyth": [222, 277, 489], "cell": [222, 226, 277, 290, 489], "577": [222, 223, 236, 277, 489], "0954": [222, 277, 489], "898x_14_3_309": [222, 277, 489], "heer": [222, 277, 489], "paslei": [222, 277, 489], "jochem": [222, 277, 489], "rieger": [222, 277, 489], "nathan": [222, 277, 489], "crone": [222, 277, 489], "knight": [222, 277, 489], "tune": [222, 234, 277, 489], "ncomms13654": [222, 277, 489], "30_strf": [222, 225, 956], "visit": [223, 277, 309, 952], "insight": [223, 320], "eas": 223, "camel": 223, "n_meg_channel": 223, "standand": 223, "interquartil": 223, "robustscal": [223, 492], "n_frequenc": [223, 364, 619, 620, 785], "popular": [223, 319, 946], "win": [223, 270], "grasp": 223, "competit": 223, "kaggl": 223, "week": [223, 310], "clf_csp": 223, "ssnr": [223, 637], "rewrit": [223, 279], "boil": [223, 941], "evoked_time_gen": 223, "joint_kwarg": 223, "diag": [223, 764], "1296": [223, 236, 277], "461": [223, 242], "482": 223, "534": 223, "542": [223, 260], "556": [223, 236, 260], "572": [223, 236], "584": [223, 229, 242, 250, 254, 260, 956], "475": [223, 236, 260, 344], "575": 223, "494": [223, 236, 255, 260], "597": [223, 277, 491], "682": [223, 236, 256], "703": [223, 260], "591": [223, 260], "724": 223, "593": [223, 236, 260], "595": [223, 277], "767": [223, 236, 260, 277, 316], "596": [223, 236, 260], "789": [223, 236, 260], "823": [223, 236], "921": [223, 260], "943": [223, 260], "585": [223, 277], "964": [223, 260], "1006": [223, 277, 320, 768], "589": [223, 236], "1027": 223, "1048": 223, "1069": [223, 277, 618, 744], "1090": [223, 277, 815, 818], "594": 223, "1153": 223, "1174": [223, 236], "1196": 223, "1239": 223, "1260": 223, "1281": 223, "481": [223, 236, 255, 260], "505": [223, 255, 260], "518": [223, 260], "555": 223, "557": [223, 236, 260, 277, 475], "558": 223, "559": [223, 236, 260], "419": [223, 255], "561": [223, 260], "522": [223, 260], "563": 223, "574": 223, "622": [223, 236, 277, 423], "663": [223, 236, 242, 956], "762": 223, "782": 223, "844": [223, 260], "886": 223, "906": [223, 256, 262, 956], "928": [223, 260], "968": [223, 260], "988": 223, "1008": 223, "1094": [223, 236], "1115": 223, "1157": [223, 236], "1199": 223, "1226": 223, "1240": 223, "541": [223, 257, 260, 277, 504], "1255": 223, "535": [223, 260], "1268": 223, "1282": 223, "1295": 223, "653": 223, "693": [223, 235, 277, 331, 332, 333, 334, 550, 551, 728], "735": [223, 260], "755": [223, 260], "854": [223, 260], "872": [223, 260], "941": [223, 236], "1087": 223, "1105": 223, "1125": 223, "1181": 223, "1220": 223, "1259": [223, 277, 459], "lanczo": 223, "1353": 223, "91709": 223, "26373e": 223, "98776221": 223, "41838256": 223, "06628583": 223, "methodolog": [223, 277], "uncov": [223, 277], "hal": [223, 277], "01848442": [223, 277], "archiv": [223, 277, 309, 313, 456, 936, 948], "ouvert": [223, 277], "lionel": [223, 277], "naccach": [223, 277], "subtend": [223, 277, 320], "e85791": [223, 277], "0085791": [223, 277], "50_decod": [223, 225, 956], "vibrat": 226, "door": [226, 228], "slam": [226, 228], "phone": 226, "geomagnet": 226, "unshield": 226, "headphon": 226, "malfunct": [226, 227, 316], "qr": [226, 297, 299, 323, 648, 661, 664], "sensori": 226, "plan": [226, 227, 230, 235, 310, 507, 941, 946], "genesi": 226, "intact": [226, 243, 273], "ssp_projector": 226, "readili": [226, 230, 312, 507], "mag_channel": 226, "remove_dc": [226, 230, 288, 302, 308, 331, 332, 333, 334, 550, 551, 786, 789, 804, 805, 889], "get_xdata": [226, 230], "get_ydata": [226, 230], "searchsort": [226, 230], "dx": [226, 230], "dy": [226, 230], "head_width": [226, 230], "length_includes_head": [226, 230], "ecg_epoch": [226, 232, 653], "6007": [226, 231], "streak": 226, "avg_ecg_epoch": 226, "blocki": 226, "efficaci": 226, "pro": [226, 229, 309], "10_preprocessing_overview": [226, 242, 956], "deepcopi": 227, "usabl": [227, 281, 292, 293, 498, 646, 679], "wildcard": 227, "original_bad": 227, "bad_chan": 227, "paus": [227, 294, 333, 334, 834], "codebas": [227, 309, 312, 314, 321], "good_eeg": 227, "all_eeg": 227, "setdiff1d": 227, "excess": [227, 229, 304, 306, 550, 551, 889], "protocol": [227, 316], "sheet": [227, 316], "offlin": 227, "raw2": [227, 245], "invest": [227, 310], "unrealist": [227, 316], "shrink": [227, 255, 256, 273, 667, 936], "dramat": 227, "robust": [227, 231, 232, 269, 277, 281, 286, 295, 331, 332, 483, 636, 741, 746], "uninform": 227, "deweight": 227, "fair": [227, 235], "eeg_data": [227, 243], "eeg_data_interp": 227, "interp": [227, 283, 735, 736, 737, 749], "00000022": 227, "bad_color": [227, 550, 551, 889], "grad_data": 227, "grad_data_interp": 227, "00000009": 227, "propag": [227, 230, 325, 943], "15_handling_bad_channel": [227, 242, 956], "fake_keypress": [228, 245], "keyboard": [228, 246, 287, 290, 303, 317, 834], "push": [228, 229, 302, 309], "enter": [228, 234, 245, 246, 309, 942, 945], "bad_cough": 228, "wrapper": [228, 281, 296, 298, 335, 514, 518, 557, 774, 775], "blink_annot": 228, "eeg_pick": 228, "albeit": 228, "first_tim": [228, 290, 291, 549, 550, 551, 572, 672, 685], "block_1": 228, "block_2": 228, "block_annot": 228, "break_annot": [228, 639], "min_break_dur": [228, 639], "t_start_after_previ": [228, 639], "t_stop_before_next": [228, 639], "bad_break": [228, 639], "events_subset": 228, "flat_criteria": 228, "stringent": 228, "reject_tmin": [228, 291, 293, 326, 331, 332, 653], "reject_tmax": [228, 291, 293, 326, 331, 332, 653], "disappear": [228, 270, 306], "subsum": 228, "stronger_reject_criteria": 228, "2000e": 228, "20_rejecting_bad_data": [228, 242, 956], "park": [229, 277], "burru": [229, 277], "ifeachor": [229, 277], "jervi": [229, 277], "widmann": [229, 277], "somedai": 229, "conclud": [229, 259], "lightli": [229, 309], "cautious": 229, "hope": [229, 230, 232, 270], "math": [229, 936], "b_0": 229, "b_1": [229, 320], "b_2": 229, "ldot": 229, "b_m": [229, 320], "a_1": 229, "a_2": 229, "a_n": 229, "mb_kz": 229, "na_kz": 229, "b_k": [229, 320, 342], "denomin": [229, 260, 290, 364, 365, 738, 748, 772, 775, 799], "a_k": 229, "autoregress": 229, "broken": [229, 303, 309, 336, 523], "finit": [229, 251, 260, 277, 294, 316, 320, 527], "impuls": [229, 936], "infinit": [229, 288, 294, 320], "qquad": 229, "foral": [229, 320], "steeper": [229, 230], "accumul": [229, 331, 332], "despit": [229, 259], "throughput": 229, "sharp": [229, 255, 293], "steep": 229, "broader": [229, 330, 331, 332, 333, 334, 784, 788], "fundament": 229, "fftfreq": 229, "f_p": [229, 320], "flim": [229, 230, 877, 884], "dlim": [229, 877], "f_": 229, "nyq": [229, 519, 522], "third_height": 229, "hypothet": [229, 636], "na\u00efv": 229, "brick": [229, 230], "wall": [229, 230, 277, 771, 772], "correspondingli": [229, 320, 331, 332], "tighter": [229, 285], "fortun": [229, 233, 320], "remez": 229, "firl": 229, "ifft": 229, "relax": [229, 265, 284], "shallow": 229, "gradual": 229, "shorten": [229, 246, 270, 291, 320, 860, 946], "benefici": [229, 343], "wherebi": 229, "came": [229, 948], "minimum_phas": 229, "falloff": 229, "h_min": 229, "uncompens": 229, "imaginari": [229, 277, 290, 813, 814], "dur": 229, "morlet_freq": 229, "tlim": 229, "ttick": 229, "blip": 229, "n_onset": 229, "x_orig": 229, "transition_band": 229, "x_v16": 229, "twice": [229, 331, 332, 333, 334, 518, 519, 521, 522, 550, 551, 889], "filter_dur": 229, "x_v14": 229, "x_v13": 229, "h_eff": 229, "design_mne_c_filt": 229, "x_mne_c": 229, "hpw": 229, "lpw": 229, "x_min": [229, 381], "cost": [229, 312, 320, 338, 339, 342, 345, 346, 347, 489, 495, 636, 771, 772, 774, 775, 834, 894, 899], "plot_sign": 229, "yscale": [229, 283, 784], "yticklabel": 229, "get_yticklabel": 229, "iirfilt": [229, 518], "iirdesign": [229, 518], "butterworth": [229, 297, 331, 332, 333, 334, 485, 494, 518, 519, 521, 522, 550, 551, 648, 649], "worsen": 229, "filtfilt": [229, 331, 332, 333, 334, 494, 518, 519, 521, 522, 550, 551, 889], "btype": [229, 518], "ftype": [229, 338, 339, 342, 345, 346, 347, 518], "butter": [229, 518], "x_shallow": 229, "sosfiltfilt": 229, "sosfilt": 229, "zpk2so": 229, "polynomi": [229, 294, 320, 331, 332, 333, 334, 550, 551, 594], "iir_param": [229, 234, 287, 331, 332, 333, 334, 485, 494, 518, 519, 521, 522, 550, 551, 648, 649], "filt": [229, 519], "x_steep": 229, "chebychev": [229, 518], "cheby1": [229, 518], "rp": [229, 518], "chebyshev": [229, 297, 518], "substanti": [229, 237, 310, 312, 320, 331, 332, 337, 443, 539], "adjust_ax": 229, "errant": [229, 308], "misappl": 229, "deleteri": 229, "schr\u00f6ger": [229, 277], "uncontrol": 229, "acunzo": [229, 277], "misinterpret": 229, "tanner": [229, 277], "semant": 229, "syntact": 229, "n400": 229, "p600": 229, "5\u00b5v": 229, "sic": 229, "poststimulu": 229, "octav": 229, "energi": [229, 301, 322, 936], "understood": [229, 834], "cos_t": 229, "sig": [229, 259, 264, 265], "iir_lp_30": 229, "iir_hp_p1": 229, "iir_lp_2": 229, "iir_hp_2": 229, "x_lp_30": 229, "padlen": [229, 518], "x_hp_p1": 229, "x_lp_2": 229, "x_hp_2": 229, "x_f": 229, "lp": 229, "_2": [229, 320], "hp": [229, 237, 323], "evolv": 229, "maess": [229, 277, 283], "rebut": 229, "old": [229, 243, 245, 268, 277, 284, 286, 288, 290, 291, 293, 296, 300, 309, 313, 325, 328, 331, 332, 333, 334, 336, 342, 345, 380, 388, 408, 475, 550, 551, 563, 576, 601, 675, 697, 718, 719, 730, 834, 901, 905, 950], "baseline_plot": 229, "all_ax": 229, "ri": [229, 255, 277, 815, 818], "iir_hp": 229, "x_hp": 229, "leak": [229, 251, 310, 320], "n_pre": 229, "sig_pr": 229, "adopt": [229, 309], "reciproc": [229, 331, 332, 333, 334, 410, 485, 494, 504, 519, 521, 522, 550, 551, 647, 660, 671], "decent": 229, "blackman": [229, 331, 332, 333, 334, 494, 519, 521, 522, 550, 551], "fir_window": [229, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "fir_desgin": 229, "meet": [229, 310], "8197": 229, "outdat": 229, "transition_bandwidth": 229, "fir_coef": 229, "0545": 229, "0017": 229, "wider": [229, 230], "thoma": [229, 255, 256, 277, 286, 288, 290, 291, 292, 302, 306, 307, 614, 741, 746, 768, 771, 772, 773, 774, 775], "sidnei": [229, 277], "wilei": [229, 277], "82896": [229, 277], "andrea": [229, 277, 282, 283, 364], "erich": [229, 277], "burkhard": [229, 277, 283], "00233": [229, 277], "graham": [229, 277], "mackenzi": [229, 277], "rossum": [229, 277], "darren": [229, 277], "kara": [229, 277], "morgan": [229, 277], "inappropri": [229, 277, 338, 339, 342, 345, 346, 347], "conclus": [229, 257, 277], "1009": [229, 277], "12437": [229, 277], "1469": [229, 277], "8986": [229, 277], "01009": [229, 277], "commentari": [229, 277], "artefact": [229, 239, 277], "norton": [229, 277], "ermf": [229, 277], "25_background_filt": [229, 242, 956], "mathrm": [230, 237, 255, 802, 812, 814, 817], "raw_highpass": 230, "19821": 230, "9911": [230, 294], "filter_param": 230, "add_arrow": 230, "ymax": [230, 260, 265, 273], "shield": [230, 239, 277, 320, 331, 332, 333, 334, 336, 550, 551, 633, 671, 784, 786, 787, 788, 789, 790], "meg_pick": 230, "raw_notch": 230, "3965": 230, "raw_notch_fit": 230, "spectrum_fit": [230, 291, 522, 550, 551], "notabl": [230, 269, 303], "consum": [230, 294, 341, 646, 777], "raw_downsampl": 230, "pitfal": 230, "614990234375": [230, 243], "current_sfreq": 230, "desired_sfreq": 230, "obtained_sfreq": 230, "lowpass_freq": 230, "19813025304873463": 230, "80214146205357": 230, "synch": 230, "664": [230, 260], "30_filtering_resampl": [230, 242, 956], "gratton": [231, 277, 635, 686], "croft": [231, 277, 635], "articl": [231, 314], "6607": 231, "bleed": [231, 349, 666], "250m": 231, "model_plain": 231, "picks_artifact": [231, 239, 635, 686], "epochs_clean_plain": 231, "redo": 231, "partli": 231, "variat": [231, 252, 302, 316, 483], "prone": 231, "allevi": [231, 320], "epochs_sub": 231, "model_sub": 231, "epochs_clean_sub": 231, "piec": [231, 245, 320, 331, 332, 550, 551], "ongo": [231, 312, 316, 639], "alik": 231, "model_evok": 231, "epochs_clean_evok": 231, "eog_evoked_clean": 231, "raw_kwarg": 231, "cole": [231, 277, 635, 686], "emanuel": [231, 277, 299, 635, 686, 737], "donchin": [231, 277, 635, 686], "468": [231, 236, 255, 260, 277, 635, 686], "90135": [231, 277, 635, 686], "s0987": [231, 277, 635], "7053": [231, 277, 635], "00055": [231, 277, 635], "35_artifact_correction_regress": [231, 242, 956], "guidanc": [232, 234, 310], "blind": [232, 277, 636, 669], "microphon": 232, "unmix": [232, 292, 300, 636, 637, 669, 880, 883], "analogi": 232, "unwant": [232, 234, 238, 302, 386], "ic": [232, 279, 282, 341, 636, 651, 879, 881, 883], "n_pca_compon": [232, 292, 636, 880], "pc": 232, "smallest": [232, 260, 320, 410, 483, 636, 936], "runica": [232, 636], "mixing_matrix_": [232, 636], "unmixing_matrix_": [232, 636], "tesla": [232, 234, 250, 320], "artifact_pick": [232, 234], "harder": [232, 309], "filt_raw": 232, "huge": [232, 770], "parallelfun": 232, "logcoshfun_arg": 232, "nonemax_it": 232, "9010": 232, "get_explained_variance_ratio": [232, 304, 636], "explained_var_ratio": 232, "9358001342790973": 232, "7798689203334388": 232, "ratio_perc": 232, "trackpad": [232, 333, 334, 542, 836, 852, 871], "15459": 232, "ica000": [232, 284], "ica001": [232, 341, 636, 879, 881, 883], "anywai": [232, 244, 302, 309, 948], "reconst_raw": 232, "tediou": 232, "reset": [232, 290, 301, 328, 331, 332, 333, 334, 340, 434, 483, 490, 550, 551, 635, 636, 784, 786, 787, 788, 789, 790, 834, 867, 868, 872, 875, 879, 888, 891, 896, 898, 955], "eog_indic": 232, "prefront": 232, "ctp": [232, 291, 636], "ecg_indic": 232, "ica014": 232, "refit": [232, 290], "new_ica": 232, "neck": [232, 376], "trail": [232, 307, 636, 671, 830], "s001r03": 232, "s002r03": 232, "19679": 232, "s003": 232, "s003r03": 232, "lib": [232, 941, 948], "python3": [232, 300], "_fastica": 232, "convergencewarn": 232, "s004": 232, "s004r03": 232, "6250": 232, "6249": 232, "6150": 232, "6149": 232, "ica002": 232, "labels_": [232, 636, 651, 882], "get_compon": [232, 283, 636], "subject_index": 232, "component_index": 232, "template_eog_compon": 232, "33638605": 232, "32708878": 232, "32846765": 232, "32807248": 232, "35916344": 232, "37615216": 232, "42464993": 232, "21789139": 232, "22387812": 232, "22237922": 232, "21342143": 232, "2425263": 232, "26757238": 232, "27806995": 232, "15470616": 232, "1693302": 232, "17711037": 232, "17373137": 232, "19651749": 232, "21091786": 232, "22459439": 232, "68783519": 232, "46717407": 232, "64182737": 232, "34165002": 232, "28991817": 232, "76938995": 232, "0057612": 232, "54311043": 232, "54567127": 232, "63806031": 232, "57058636": 232, "52637437": 232, "51788659": 232, "55774431": 232, "56188149": 232, "69340923": 232, "73333856": 232, "2829121": 232, "39253171": 232, "16120286": 232, "25431324": 232, "06352167": 232, "1647002": 232, "11930156": 232, "1811579": 232, "10112171": 232, "12638332": 232, "13623739": 232, "1301851": 232, "14380943": 232, "15329772": 232, "1715539": 232, "16560352": 232, "13293812": 232, "08175318": 232, "10173655": 232, "10764581": 232, "12707317": 232, "09785876": 232, "07433338": 232, "08470678": 232, "07373196": 232, "03379354": 232, "recomput": [232, 235, 260, 300, 301, 524, 636, 669, 723], "ecg_ind": 232, "francoi": [232, 277, 636], "cardoso": [232, 277, 636], "precondit": [232, 237, 277, 303, 636, 672], "hessian": [232, 277, 636], "4040": [232, 277, 636], "4049": [232, 277, 636], "2844203": [232, 277, 636], "iren": [232, 277], "winkler": [232, 277], "deben": [232, 277, 651], "4101": [232, 277], "milan": [232, 277, 288], "7319296": [232, 277], "dammer": [232, 277, 285, 300, 636], "schiek": [232, 277, 636], "boer": [232, 277, 636], "carmen": [232, 277, 459, 636], "silex": [232, 277, 636], "mikhail": [232, 277, 636], "zvyagintsev": [232, 277, 636], "uw": [232, 240, 277, 636], "pietrzyk": [232, 277, 636], "mathiak": [232, 277, 636], "2353": [232, 277, 636], "926677": [232, 277, 636], "filipa": [232, 277, 651], "campo": [232, 277, 651], "viola": [232, 277, 279, 651], "jeremi": [232, 277, 651], "thorn": [232, 277, 651], "edmond": [232, 277, 651], "till": [232, 277, 651], "schneider": [232, 277, 651], "tom": [232, 277, 281, 286, 305, 306, 651], "eichel": [232, 277, 651], "semi": [232, 277, 279, 651], "877": [232, 236, 260, 277, 651], "clinph": [232, 277, 636, 644, 651, 815, 818], "40_artifact_correction_ica": [232, 242, 956], "mpl_toolkit": [233, 255, 260, 273, 860], "mplot3d": [233, 255], "axes3d": [233, 255, 293, 329, 331, 332, 333, 334, 336, 380, 550, 551, 864, 886, 892], "setup_3d_ax": 233, "set_zlabel": 233, "set_ylim": [233, 270], "set_zlim": 233, "geometr": [233, 316, 320, 338, 339, 342, 345, 346, 347, 517, 901], "shadow": [233, 724], "cast": [233, 291, 324, 524, 839], "sun": 233, "xy_projection_matrix": 233, "projected_point": 233, "projected_vector": 233, "arrow_coord": 233, "arrow_length_ratio": 233, "symbol": [233, 303, 320, 323, 783, 937], "expans": [233, 237, 320, 331, 332, 333, 334, 504, 550, 551, 594, 646, 647, 660, 671], "unpack": [233, 260, 849, 948], "lucki": 233, "bother": [233, 243], "trigger_effect": 233, "internet": [233, 310], "algebra": [233, 289, 290, 936], "full_matric": 233, "trigger_projection_matrix": 233, "plot_trisurf": 233, "interchang": [233, 319, 364], "ten": [233, 270, 317, 541, 946], "hyperplan": [233, 486, 493], "synonym": 233, "incident": [233, 333, 334, 542, 836, 852, 871], "phrase": 233, "publish": [233, 274, 277, 318, 333, 334, 636, 834, 836, 875, 907, 908, 909, 910, 911, 912, 913, 915, 917], "first_projector": 233, "explained_var": [233, 280, 340], "inact": [233, 237, 310, 331, 332, 333, 334, 550, 551], "ortho": [233, 636], "forgo": 233, "offecg": 233, "remove_exist": [233, 234, 331, 332, 333, 334, 550, 551, 834], "perman": [233, 302, 316, 941, 946], "mags_ecg": 233, "_projector": 233, "cheaper": 233, "consequenti": 233, "mikko": [233, 234, 277, 320], "uusitalo": [233, 234, 277, 320], "bf02534144": [233, 234, 277, 320], "45_projectors_background": [233, 242, 956], "equip": [234, 320], "system_proj": 234, "empty_room_fil": 234, "empty_room_raw": 234, "_ex": 234, "xscale": [234, 290, 331, 332, 333, 334, 550, 551, 786, 787, 789, 790, 890], "n_grad": [234, 308, 323, 424, 425, 426, 648, 649], "empty_room_proj": 234, "distant": [234, 936], "_proj": [234, 301], "no_proj": [234, 648, 649], "picks_trac": [234, 887], "ecg_l_freq": [234, 323, 648], "ecg_h_freq": [234, 323, 648], "filter_method": [234, 648, 649], "presum": 234, "clutter": 234, "eog_proj": 234, "okai": 234, "eog_projs_bad": 234, "perfectli": [234, 270, 320, 809], "get_titl": [234, 238], "get_ylabel": 234, "yaxi": [234, 273], "set_tick_param": 234, "labelbottom": 234, "50_artifact_correction_ssp": [234, 242, 956], "earlob": 235, "collarbon": 235, "disadvantag": [235, 255], "ref_channel": [235, 331, 332, 333, 334, 348, 550, 551, 728, 784, 786, 787, 788, 789, 790], "raw_new_ref": 235, "raw_avg_ref": 235, "wasn": [235, 304], "infin": [235, 277, 291, 331, 332, 333, 334, 550, 551, 728], "raw_rest": 235, "_raw": [235, 238], "2197": 235, "655": [235, 260], "00413199": 235, "0159844": 235, "05174612": 235, "eeg_bipolar": [235, 725], "transvers": [235, 329], "raw_bip_ref": 235, "36038": [235, 243], "61837": 235, "valueerror": [235, 342, 345, 517, 702, 725, 734, 860], "yao": [235, 277, 331, 332, 333, 334, 550, 551, 728, 744], "0967": [235, 277, 331, 332, 333, 334, 550, 551, 728], "3334": [235, 277, 331, 332, 333, 334, 550, 551, 728], "dezhong": [235, 277], "yun": [235, 277], "qin": [235, 277], "shiang": [235, 277], "hu": [235, 277], "dong": [235, 277, 300], "maria": [235, 277], "bringa": [235, 277], "vega": [235, 277], "pedro": [235, 277], "vald": [235, 277], "\u00e9": [235, 277], "sosa": [235, 277], "00707": [235, 277], "55_setting_eeg_refer": [235, 242, 956], "h\u00f6chenberg": [236, 269, 281, 283, 288, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308, 954], "hoechenberg": [236, 269], "mccloi": [236, 273, 279, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308, 310, 954], "dan": [236, 273, 279, 297, 300, 301], "test_move_anon_raw": [236, 237], "v6": [236, 237], "v7": [236, 237, 286, 304], "10800": [236, 237, 303], "31199": [236, 237], "20399": 236, "chpi_freq": 236, "chpi_cod": 236, "chpi_amplitud": [236, 410, 411], "1696": 236, "451": [236, 344], "477": [236, 255, 260], "503": [236, 260], "635": 236, "698": 236, "734": [236, 260, 277, 802, 812, 813, 816], "493": [236, 260], "773": 236, "786": [236, 260], "521": [236, 260, 262, 277, 423, 956], "831": 236, "843": [236, 260], "855": [236, 260], "902": [236, 260], "914": [236, 260], "926": 236, "937": [236, 260], "949": [236, 260], "973": [236, 260], "1010": 236, "624": [236, 260], "1046": 236, "1058": [236, 277, 367, 773], "643": 236, "1070": 236, "1082": 236, "651": [236, 260], "654": 236, "1107": 236, "731": 236, "1190": 236, "732": 236, "1208": 236, "1227": 236, "1246": 236, "787": 236, "1265": 236, "1284": 236, "1294": 236, "812": [236, 260], "1310": 236, "1348": 236, "1367": 236, "879": 236, "1396": 236, "862": [236, 268, 272, 956], "1430": [236, 268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 798, 804], "1448": 236, "887": 236, "1467": [236, 277, 423], "899": [236, 260, 270], "1486": 236, "1493": 236, "888": [236, 260], "1506": 236, "1525": 236, "1544": 236, "1563": 236, "922": [236, 260], "1582": 236, "1593": 236, "1608": 236, "1627": [236, 277, 331, 332, 333, 334, 550, 551], "931": 236, "1665": 236, "951": 236, "1684": 236, "423": [236, 255, 955, 956], "666": [236, 260], "737": 236, "848": [236, 260], "1062": 236, "1234": 236, "1280": [236, 323, 482, 592], "1286": 236, "1315": 236, "1319": 236, "1325": 236, "1385": 236, "1434": 236, "1565": [236, 277], "1573": 236, "1580": [236, 331, 332], "1586": 236, "1590": 236, "1594": 236, "1609": 236, "1652": 236, "1683": 236, "snr_dict": [236, 859], "418": [236, 300], "434": [236, 255], "444": [236, 260, 265], "485": [236, 255, 260, 344], "59_head_posit": [236, 242, 956], "obliqu": 237, "crosstalk": 237, "fine_cal_fil": 237, "sss_cal_mgh": 237, "crosstalk_fil": 237, "ct_sparse_mgh": 237, "raw_check": 237, "auto_noisy_ch": 237, "auto_flat_ch": 237, "auto_scor": 237, "cross_talk": [237, 646, 660, 671], "return_scor": [237, 660], "ei": [237, 336], "ch_subset": 237, "scores_noisi": [237, 660], "limits_noisi": [237, 660], "bin_label": 237, "data_to_plot": 237, "cbar_kw": 237, "nanmin": 237, "nanmax": [237, 258], "appar": [237, 316], "fashion": [237, 294, 441], "min_count": [237, 660], "qualifi": 237, "int_ord": [237, 306, 504, 647, 660, 671], "ext_ord": [237, 410, 412, 416, 504, 646, 647, 660, 671], "thick": [237, 320], "mathtt": [237, 802, 812, 813, 814, 816, 817], "st": [237, 323], "_durat": 237, "penultim": 237, "st_correl": [237, 660, 671, 679], "st_onli": [237, 281, 660, 671], "doublecheck": 237, "chpi_fif_fil": 237, "head_pos_fil": 237, "headpo": [237, 323, 420], "patent": [237, 671, 679], "legal": [237, 310, 860], "commerci": [237, 671], "124905": [237, 277, 504, 647, 671], "1935742": [237, 277, 647, 671], "1759": [237, 277, 671], "60_maxwell_filtering_sss": [237, 242, 956], "deoxyhaemoglobin": [238, 294], "itertool": 238, "compress": [238, 285, 326, 330, 331, 332, 333, 334, 456, 550, 551, 653, 654, 784, 788, 948], "novemb": [238, 277, 367, 741, 746], "cw": [238, 319, 441], "set_dur": [238, 294, 325, 955], "mid": [238, 255], "photodetect": 238, "beer": 238, "lambert": 238, "law": [238, 294, 310], "raw_haemo": 238, "haemodynam": 238, "predominantli": 238, "raw_haemo_unfilt": 238, "1291": 238, "s4_d4": 238, "s8_d8": 238, "s3_d3": 238, "s7_d6": 238, "s7_d7": 238, "s6_d8": 238, "oxi": [238, 294], "morphologi": 238, "evoked_dict": 238, "color_dict": 238, "aa3377": [238, 802, 812], "styles_dict": 238, "chroma": 238, "drive": [238, 432, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 595], "tidi": 238, "leg_lin": 238, "get_c": 238, "70_fnirs_process": [238, 242, 956], "technologi": [239, 277, 322, 954], "placement": [239, 287, 290, 319, 333, 334, 873], "opm_data_fold": 239, "opm_fil": 239, "002_se": 239, "aef_run": 239, "001_meg": 239, "540000": 239, "6000": [239, 669], "pt": [239, 308, 555, 586], "amp_scal": 239, "1e12": [239, 440], "data_d": 239, "time_d": 239, "set_kwarg": 239, "ambient": 239, "knowldg": 239, "evironment": [239, 650], "g2": 239, "psd_kwarg": 239, "psd_pre": 239, "psd_post_reg": 239, "9901": [239, 294], "relatiship": 239, "hfc": [239, 306, 650], "homgen": 239, "psd_post_hfc": 239, "broadband": 239, "remnant": 239, "motiv": [239, 270], "minimis": 239, "interfec": 239, "39601": 239, "ni": 239, "trig": 239, "seymour": [239, 277, 293, 306, 317, 650], "stephani": [239, 277, 317, 650], "mellor": [239, 277, 317, 650], "neill": [239, 277, 306, 307, 317, 650], "tim": [239, 277, 317, 650], "tiernei": [239, 277, 317, 650], "eleanor": [239, 277, 317, 650], "maguir": [239, 277, 317, 650], "opportun": [239, 277, 317], "118834": [239, 277, 317], "februari": [239, 277, 317], "80_opm_process": [239, 242, 956], "huberti": [240, 302, 303, 306, 307, 308], "seh33": 240, "dominik": [240, 270, 285, 290, 293, 303, 304, 306, 308], "welk": [240, 270, 290, 293, 303, 306, 308], "mff": [240, 283, 284, 285, 286, 287, 292, 294, 303, 308, 320, 333, 334, 401, 514, 515, 568, 702], "plr_eyetrack": 240, "eeg_fpath": 240, "plr_eeg": 240, "raw_et": 240, "raw_eeg": 240, "june": 240, "signal1": [240, 252], "monocular": 240, "xpos_right": 240, "pupil_right": 240, "first_cal": 240, "hv5": 240, "photodiod": [240, 317], "signifi": [240, 403, 636], "et_ev": 240, "shortest_ev": [240, 524], "uint_cast": [240, 324, 524], "eeg_ev": 240, "din3": 240, "din": [240, 308], "et_flash_tim": 240, "eeg_flash_tim": 240, "force_update_info": [240, 331, 332, 333, 334, 550, 551, 784, 786, 787, 788, 789, 790], "e19": 240, "e11": 240, "e4": 240, "e12": 240, "e5": 240, "e61": 240, "e62": 240, "e78": 240, "e67": 240, "e72": 240, "e77": 240, "picks_idx": 240, "constrict": 240, "crosshair": 240, "kept": [240, 268, 281, 287, 307, 309, 326, 331, 332, 337, 392, 441, 507, 545, 547, 548, 570, 595, 603, 604, 605, 606, 607, 609, 610, 620, 636, 637, 647, 694, 880], "878": [240, 242, 277, 768, 956], "90_eyetracking_data": [240, 242, 956], "166800": 243, "read_raw_": [243, 286, 320, 549], "famili": [243, 773, 942], "seriou": [243, 310], "parenthes": [243, 320], "estimate_rank": [243, 281, 287], "n_time_samp": 243, "time_sec": 243, "n_chan": [243, 764, 813, 814, 898], "000167471573526": 243, "megacq": 243, "acqch001": 243, "110113": 243, "acqch002": 243, "110112": 243, "acqch003": 243, "110111": 243, "acqch004": 243, "110122": 243, "frequent": [243, 290, 291, 309, 318, 570, 937, 941], "12012": 243, "18018": 243, "24024": 243, "underlyingli": [243, 318], "n_timepoint": [243, 769], "pose": [243, 309], "undo": [243, 291, 701], "eeg_and_eog": 243, "raw_temp": 243, "channel_nam": [243, 283, 568, 702], "eog_and_frontal_eeg": 243, "frivol": 243, "eeg_059": 243, "eeg_060": 243, "blink_detector": 243, "makeshift": 243, "eeg_001": 243, "raw_select": 243, "1503": 243, "unspecifi": [243, 250, 860], "500770084699155": 243, "5001290587975622": 243, "raw_selection1": 243, "raw_selection2": 243, "raw_selection3": 243, "5041000049184614": 243, "sampling_freq": [243, 250], "start_stop_second": 243, "channel_index": [243, 849], "85742192e": 243, "64355481e": 243, "89306644e": 243, "99872648": 243, "00039144": 243, "0020564": 243, "9933487": 243, "99501366": 243, "99667862": 243, "data_arrai": 243, "times_arrai": 243, "meg_0712": 243, "meg_1022": 243, "two_meg_chan": 243, "y_offset": 243, "safest": [243, 316], "eeg_channel_indic": 243, "planar1": [243, 328, 331, 332, 333, 334, 483, 490, 550, 551, 633, 634, 635, 636, 651, 784, 786, 787, 788, 789, 790, 868, 875, 879, 891, 896, 898], "planar2": [243, 328, 331, 332, 333, 334, 483, 490, 550, 551, 633, 634, 635, 636, 651, 784, 786, 787, 788, 789, 790, 868, 875, 879, 891, 896, 898], "return_tim": [243, 273, 550, 551], "first_channel_data": [243, 320], "eeg_and_eog_data": 243, "two_meg_chans_data": 243, "my_data": 243, "npy": [243, 244], "afford": 243, "scaling_tim": 243, "start_end_sec": 243, "to_hdf": 243, "eeg_002": 243, "999750": 243, "847885e": 243, "243790e": 243, "952283e": 243, "001415": 243, "612900e": 243, "200958e": 243, "069226e": 243, "003080": 243, "589401e": 243, "176483e": 243, "080921e": 243, "004745": 243, "724518e": 243, "182602e": 243, "010755e": 243, "006410": 243, "286621e": 243, "10_raw_overview": [243, 248, 956], "lst": [244, 698, 926], "array_equ": 244, "_eve": 244, "my_experi": 244, "told": 244, "events_no_button": 244, "merged_ev": 244, "ultim": [244, 309], "send": [244, 831], "cumbersom": 244, "781": [244, 248, 956], "20_event_arrai": [244, 248, 956], "datetim": [245, 290, 302, 325, 331, 332, 333, 334, 336, 350, 550, 551], "compris": [245, 250, 320, 331, 332, 772, 786, 787, 788, 789, 790], "posix": [245, 325], "my_annot": 245, "aaa": 245, "bbb": 245, "ccc": 245, "microsecond": [245, 325, 331, 332, 333, 334, 336, 550, 551], "time_of_first_sampl": 245, "95597083": 245, "iso": 245, "8601": 245, "new_orig_tim": 245, "strftime": 245, "later_annot": 245, "ddd": 245, "eee": 245, "fff": 245, "720100": 245, "rectangl": [245, 273, 784, 853], "darker": 245, "spinbox": 245, "safeguard": [245, 280, 336], "interactive_annot": 245, "ordereddict": 245, "95597082905339": [245, 325], "tzinfo": 245, "timezon": [245, 331, 332, 333, 334, 336, 550, 551], "descr": 245, "70597082905339": 245, "45597082905339": 245, "20597082905339": 245, "WILL": 245, "NOT": 245, "annot_from_fil": 245, "30_annotate_raw": [245, 248, 956], "versatil": 246, "lengthen": 246, "unmark": 246, "newli": [246, 312, 857], "hover": 246, "thumbnail": 246, "plot_psd_topo": [246, 268, 331, 332, 333, 334, 550, 551, 955], "40_visualize_raw": [246, 248, 956], "synthet": [250, 281, 308, 320, 568, 653, 661], "hertz": [250, 252, 336, 785, 791, 792, 793, 794, 795, 796], "eog001": 250, "meg001": 250, "meg002": 250, "meg003": 250, "meg004": 250, "meg005": 250, "meg006": 250, "meg007": 250, "meg008": 250, "seven": [250, 280, 320], "molar": [250, 320], "amper": [250, 320], "simulated_raw": 250, "show_scalebar": [250, 294, 331, 332, 550, 551, 866, 889], "995": [250, 260], "simulated_epoch": 250, "column_stack": 250, "condition_a": 250, "condition_b": 250, "evoked_arrai": 250, "n_per_seg": [250, 270, 283, 331, 332, 333, 334, 550, 551, 786, 789, 805], "psd_ave": 250, "10_array_obj": [250, 254, 956], "dt": [251, 504, 798], "17545": 251, "hemi_to_ind": 251, "elig": [251, 310], "surf_vertic": 251, "restrict_vert": 251, "intersect1d": 251, "restrict_vertic": [251, 337, 342], "cent_idx": 251, "elsewher": 251, "distances_to_outsid": [251, 294, 337], "compute_area": [251, 294, 337], "stc_gen": 251, "value_fun": [251, 751], "brain_gen": 251, "evoked_gen": 251, "stc_inv": 251, "brain_inv": 251, "45968308": 251, "57021267": 251, "69354621": 251, "evoked_snr": 251, "70_point_spread": [251, 254, 956], "unit_impuls": 252, "coh_signal_gen": 252, "t_rand": 252, "base_freq": 252, "cumsum": 252, "signal2": 252, "am": [252, 283, 329, 332, 334, 443, 551], "nperseg": 252, "coh": [252, 785, 862], "noverlap": 252, "146374": 252, "33830": 252, "stc_signal": 252, "stc_nois": 252, "pretend": [252, 255], "s_rm": 252, "59828": 252, "89697e": 252, "40489756": 252, "65479053": 252, "61269642": 252, "dampen": [252, 724], "consensu": [252, 310], "csd_signal": 252, "filters_approach1": 252, "filters_approach2": 252, "filters_1": 252, "power_approach1": 252, "power_approach2": 252, "plot_approach": 252, "brain1": 252, "42918831e": 252, "04345299e": 252, "40589757e": 252, "brain2": 252, "mia": [252, 277, 364, 365], "liljestr\u00f6m": [252, 277, 364, 365], "susanna": [252, 277, 285, 364, 365], "aro": [252, 277, 285, 364, 365], "245530": [252, 277, 364, 365], "kensuk": [252, 277, 364, 365], "sekihara": [252, 277, 364, 365], "79369": [252, 277, 364, 365], "79370": [252, 277, 364, 365], "80_dic": [252, 254, 956], "phenomena": 255, "n_subject": [255, 263, 265, 767], "signal_mean": 255, "signal_sd": 255, "noise_sd": 255, "gaussian_sd": 255, "n_src": [255, 339, 344], "h_0": 255, "colon": [255, 323, 456], "h_1": 255, "neq": [255, 320], "geq": 255, "cdot": [255, 320, 744, 813, 816], "1600": 255, "mcc": 255, "plot_t_p": 255, "p_lim": 255, "t_lim": 255, "mgrid": 255, "plot_surfac": [255, 290, 291], "rstride": 255, "cstride": 255, "ztick": 255, "mappabl": 255, "set_tick": 255, "set_ticklabel": 255, "get_xaxi": 255, "set_label_coord": 255, "set_weight": 255, "use_p": 255, "log_": 255, "t_": [255, 320], "exchang": [255, 281], "verid": 255, "n_": [255, 320], "samp": 255, "gymnast": 255, "declar": [255, 310], "p_type_i": 255, "combat": 255, "familywis": 255, "fwer": 255, "benjamini": [255, 768], "hochberg": [255, 768], "strict": [255, 526], "indistinguish": 255, "mathbf": [255, 647], "perm_": 255, "aforement": 255, "rethink": 255, "thought": [255, 319, 765], "refram": 255, "drawback": 255, "touch": [255, 389], "feature_extract": 255, "grid_to_graph": 255, "e402": 255, "mini_adjac": 255, "toarrai": 255, "builtin_ch_adj": 255, "adj_nam": 255, "adj_descript": 255, "bti148": 255, "bti248": 255, "bti248grad": 255, "ctf64": 255, "easycap128ch": 255, "easycap32ch": 255, "easycap64ch": 255, "easycapm1": [255, 303], "easycapm11": 255, "m11": 255, "easycapm14": 255, "m14": 255, "easycapm15": 255, "m15": 255, "ecog256": 255, "256channel": 255, "ecog256bipolar": 255, "eeg1010_neighb": 255, "elec1005": 255, "elec1010": 255, "elec1020": 255, "itab153": 255, "itab": 255, "itab28": 255, "language29ch": 255, "mpi": 255, "mpi_59_channel": 255, "neuromag122cmb": 255, "neuromag122": [255, 293], "neuromag306cmb": 255, "neuromag306": 255, "neuromag306mag": [255, 260], "neuromag306planar": [255, 257], "yokogawa160": 255, "yokogawa440": 255, "n_space": 255, "t_thresh": [255, 257], "t_clust": 255, "viewabl": 255, "p_clust": 255, "cl": 255, "195527": 255, "120434": 255, "1960": 255, "stat_fun_hat": 255, "t_hat": 255, "p_hat": 255, "043603": 255, "127369": 255, "3347": 255, "3954": 255, "riemann": 255, "threshold_tfc": 255, "t_tfce": 255, "p_tfce": 255, "h_power": [255, 256], "e_pow": [255, 256], "466": [255, 260], "478": 255, "t_tfce_hat": 255, "p_tfce_hat": 255, "472": [255, 260, 277, 483], "489": [255, 270], "jag": 255, "peaki": 255, "broad": [255, 270], "tighten": 255, "broaden": 255, "exhaust": [255, 364], "unbalanc": 255, "anova_lm": 255, "wrap": [255, 291, 335, 609], "q": [255, 320, 323, 744, 771, 772, 774, 775], "unpair": 255, "gerard": [255, 277, 777, 778], "ridgwai": [255, 277, 777, 778], "flandin": [255, 277, 777, 778], "karl": [255, 277, 322, 777, 778, 954], "friston": [255, 277, 777, 778], "Will": [255, 277, 323, 331, 332, 335, 379, 519, 549, 636, 777, 778, 783, 798, 805, 830, 922], "penni": [255, 277, 777, 778], "haircut": [255, 277, 777, 778], "nichol": [255, 256, 277, 768, 771, 772, 773, 774, 775], "10_background_stat": [255, 262, 956], "confirmatori": 256, "tfce": [256, 291, 298, 302, 771, 772, 774, 775], "ttest_ind": [256, 778], "unsaf": [256, 788], "median_valu": 256, "long_word": 256, "short_word": 256, "time_window": [256, 784], "ntarget": 256, "short_df": 256, "format_dict": 256, "096": 256, "453939": 256, "232879": 256, "222424": 256, "518939": 256, "214091": 256, "371515": 256, "064": [256, 277, 415, 618, 744], "811667": 256, "793636": 256, "250152": 256, "039697": 256, "188636": 256, "318030": 256, "163030": 256, "018939": 256, "425152": 256, "509": [256, 260], "absent": [256, 284, 292, 434], "amongst": [256, 270], "temor": 256, "cluster_pv": [256, 771, 772, 774, 775], "significant_point": 256, "delaunai": [256, 257, 284, 386], "917298": 256, "1856": 256, "20_erp_stat": [256, 262, 956], "whom": [257, 260, 309], "picks_eog": 257, "picks_grad": 257, "picks_rtemp": 257, "downstream": [257, 258, 787, 790], "nonparametr": [257, 258, 260, 277, 771, 772, 773, 774, 775], "spectrotempor": [257, 258, 813, 814, 816, 817], "tfr_epoch": 257, "logratio": [257, 269, 354, 619, 620, 784, 788, 896], "epochs_pow": [257, 259, 260], "lattic": [257, 260, 764, 771, 772, 774, 775], "sensor_adjac": 257, "use_idx": 257, "n_ch": 257, "unrol": 257, "degrees_of_freedom": 257, "455144": 257, "265125": 257, "caveat": [257, 260, 277, 320, 636], "anywher": [257, 287], "t_obs_plot": 257, "f_idx": 257, "t_idx": [257, 550, 551], "nanargmax": 257, "936": [257, 262, 956], "40_cluster_1samp_time_freq": [257, 262, 956], "epochs_condition_1": 258, "epochs_condition_2": 258, "comptuat": 258, "tfr_epochs_1": 258, "tfr_epochs_2": 258, "epochs_power_1": 258, "epochs_power_2": 258, "f_ob": [258, 259, 260, 264, 265, 772, 775], "8675309": 258, "566824": 258, "927": [258, 260], "evoked_power_1": 258, "evoked_power_2": 258, "evoked_power_contrast": 258, "f_obs_plot": [258, 259, 260], "max_f": 258, "evoked_condition_1": 258, "evoked_condition_2": 258, "evoked_contrast": 258, "50_cluster_between_time_freq": [258, 262, 956], "interplai": 259, "perceptu": 259, "56aud_r": 259, "60vis_l": 259, "64vis_r": 259, "forgiv": 259, "zero_mean": [259, 620, 802, 812, 813, 814, 816], "this_tfr": [259, 260], "this_pow": 259, "n_condit": [259, 260, 265, 772, 775], "n_replic": 259, "factor_level": [259, 265, 765, 767], "formula": [259, 265, 288, 290, 312, 320, 364, 365, 423, 740, 744, 799, 800], "a1b1": [259, 765], "a1b2": [259, 765], "a2b1": [259, 765], "b2b2": 259, "fval": 259, "effect_label": 259, "autumn": [259, 260], "overrid": [259, 310, 341, 440, 442, 550, 551, 568, 720, 721, 722, 723, 832, 860, 946, 948], "necessit": [259, 265, 305], "return_pv": [259, 265, 765], "pthresh": [259, 265], "f_thresh": [259, 260, 265], "419588": 259, "good_clust": [259, 263], "f_imag": [259, 260], "f_obs_plot2": 259, "70_cluster_rmanova_time_freq": [259, 262, 956], "differenti": [260, 277, 312, 331, 332, 333, 334, 507, 550, 551, 815, 818], "axes_grid1": [260, 273, 860], "make_axes_locat": [260, 273], "_csr": 260, "csr_matrix": [260, 343, 344, 386, 397, 708], "bind": [260, 265], "stackexchang": 260, "73993": 260, "alpha_cluster_form": 260, "n_observ": [260, 769, 771, 772, 774, 775, 860], "dfn": [260, 772, 775], "dfd": [260, 772, 775], "cluster_stat": [260, 312], "003379": 260, "775354": 260, "453": [260, 344], "614": 260, "623": 260, "644": 260, "662": 260, "678": 260, "717": 260, "745": 260, "783": 260, "788": 260, "838": 260, "849": 260, "861": 260, "866": 260, "883": 260, "894": 260, "905": 260, "932": 260, "972": 260, "977": 260, "983": 260, "989": 260, "p_accept": 260, "good_cluster_ind": [260, 264, 265], "crimson": [260, 834], "steelblu": [260, 550, 551, 889], "i_clu": 260, "clu_idx": 260, "time_ind": 260, "space_ind": 260, "ch_ind": 260, "f_map": 260, "sig_tim": 260, "ax_topo": 260, "f_evok": 260, "ax_colorbar": 260, "append_ax": [260, 273], "ax_sign": 260, "ymin": [260, 265], "get_ylim": 260, "fill_betweenx": [260, 265], "tfr_adjac": 260, "tfr_threshold": 260, "408366": 260, "427": 260, "469": 260, "514": 260, "533": 260, "539": 260, "605": 260, "617": 260, "633": 260, "638": 260, "668": 260, "676": 260, "683": 260, "685": 260, "696": 260, "708": 260, "716": 260, "718": 260, "742": 260, "753": 260, "764": 260, "774": 260, "777": 260, "803": 260, "808": 260, "814": 260, "826": 260, "829": 260, "834": 260, "845": 260, "857": 260, "871": 260, "876": [260, 344], "885": 260, "891": 260, "925": 260, "935": 260, "953": 260, "979": 260, "984": 260, "986": 260, "difficulti": [260, 476, 936, 941], "freq_ind": 260, "ax_spec": 260, "f_obs_plot_sig": 260, "ax_colorbar2": 260, "mari": [260, 277, 291, 771, 772, 774, 775], "dejan": [260, 277, 771, 772, 774, 775], "draschkow": [260, 277, 771, 772, 774, 775], "e13335": [260, 277, 771, 772, 774, 775], "13335": [260, 277, 771, 772, 774, 775], "75_cluster_ftest_spatiotempor": [260, 262, 956], "1000e": [263, 265], "sample_vertic": [263, 265], "evoked1": [263, 939], "evoked2": [263, 939], "n_vertices_sampl": [263, 265], "morph_data": [263, 286, 296], "fsave_vertic": [263, 264, 265], "morph_mat": [263, 265, 343], "n_vertices_fsav": [263, 264, 265], "govern": 263, "member": [263, 310, 769], "max_step": [263, 771, 772, 774, 775], "p_threshold": [263, 264], "t_threshold": 263, "clu": [263, 264, 265, 776], "563537": 263, "791547": 263, "permutationt": 263, "good_clusters_idx": 263, "stc_all_cluster_vi": [263, 264, 265], "20_cluster_1samp_spatiotempor": [263, 267, 956], "stc_fname": [264, 274], "n_subjects1": 264, "n_subjects2": 264, "x1": [264, 769, 772], "x2": [264, 769, 772], "subjects_k": 264, "f_threshold": [264, 767], "632172": 264, "30_cluster_ftest_spatiotempor": [264, 267, 956], "engemannn": 265, "r_aud": 265, "r_vi": 265, "tini": [265, 365], "1782": 265, "851281": 265, "brighter": 265, "inds_t": 265, "inds_v": 265, "cluster_ind": 265, "eve_id": 265, "mean_tc": 265, "std_tc": 265, "60_cluster_rmanova_spatiotempor": [265, 267, 956], "874": [267, 956], "v\u00b2": 268, "\u00b2": [268, 269], "t\u00b2": [268, 270], "overridden": [268, 290, 548], "esp": 268, "method_kw": [268, 331, 332, 333, 334, 550, 551, 786, 789], "irrelev": [268, 309, 320, 323], "epo_spectrum": 268, "npsd": 268, "__getitem__": [268, 290, 291, 324, 325, 326, 328, 329, 331, 332, 336, 344, 355, 370, 550, 551, 602, 656, 785, 786, 787, 788, 789, 790, 821], "evk_spectrum": 268, "61863537e": 268, "13487136e": 268, "88010499e": 268, "89065956e": 268, "24056397e": 268, "91160668e": 268, "56762015e": 268, "65842303e": 268, "39426775e": 268, "38758770e": 268, "03771739e": 268, "98519756e": 268, "agg_fun": [268, 331, 332, 333, 334, 550, 551, 786, 787, 789, 790, 868], "psd_welch": [268, 281, 283, 284, 288, 290, 291, 292, 304], "psd_multitap": [268, 281, 284, 304], "area_mod": [268, 331, 332, 333, 334, 550, 551, 890], "periodogram": [268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 805], "electroacoust": [268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 805], "tau": [268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 805], "1161901": [268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 805], "slepian": [268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 798, 804], "bell": [268, 277, 331, 332, 333, 334, 550, 551, 636, 669, 786, 789, 798, 804], "1978": [268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 798, 804], "1538": [268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 798, 804], "7305": [268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 798, 804], "tb02104": [268, 277, 331, 332, 333, 334, 550, 551, 786, 789, 798, 804], "10_spectrum_class": [268, 272, 956], "72074": 269, "mean_spectrum": 269, "psds_mean": [269, 270], "psds_std": [269, 270], "arithmet": [269, 280, 295, 636, 805], "psds_welch_mean": 269, "freqs_mean": 269, "psds_welch_median": 269, "freqs_median": 269, "epo_idx": 269, "unaggreg": [269, 288, 305, 805], "n_segment": [269, 805], "welch_unagg": 269, "topomap_kw": 269, "fmin_fmax": 269, "timefreq": [269, 784], "20_sensors_time_frequ": [269, 272, 956], "fpv": 270, "steadi": 270, "assr": 270, "norcia": 270, "picton": 270, "wet": [270, 317], "evgenii": [270, 291, 292, 293], "kalenkovich": [270, 287, 291, 292, 293], "ttest_rel": 270, "bids_fnam": 270, "12hz": 270, "15hz": 270, "decai": 270, "stabil": [270, 301, 518, 636, 647], "bach": 270, "meigen": 270, "n_overlap": [270, 331, 332, 333, 334, 550, 551, 786, 789, 805, 890], "snr_spectrum": 270, "noise_n_neighbor_freq": 270, "noise_skip_neighbor_freq": 270, "n_trial": [270, 499], "n_frequency_bin": 270, "increment": [270, 547, 636], "ON": 270, "averaging_kernel": 270, "mean_nois": 270, "apply_along_axi": 270, "psd_": 270, "edge_width": 270, "pad_width": 270, "constant_valu": 270, "drastic": [270, 302, 343], "reappear": 270, "grand": [270, 301, 320, 540], "floor": [270, 496, 669, 814, 817], "ceil": [270, 809], "psds_plot": 270, "snr_mean": 270, "snr_std": 270, "stim_freq": 270, "i_bin_12hz": 270, "1st": [270, 725], "i_bin_24hz": 270, "i_bin_36hz": 270, "i_bin_15hz": 270, "i_bin_30hz": 270, "i_bin_45hz": 270, "i_trial_12hz": 270, "i_trial_15hz": 270, "roi_vi": 270, "o9": 270, "o10": 270, "picks_roi_vi": 270, "hotel": 270, "snrs_target": 270, "6936554171862": 270, "wait": [270, 286, 309, 326, 331, 950], "snrs_12hz": 270, "snrs_12hz_chaverag": 270, "tstat_roi_vs_scalp": 270, "985902": 270, "693655": 270, "000067": 270, "Such": [270, 310, 319, 320, 330, 331, 332, 333, 334, 364, 365, 724, 784, 788], "somewher": [270, 321, 550, 551, 889], "unintend": 270, "preregist": 270, "peopl": [270, 283, 284, 285, 286, 290, 291, 292, 293, 294, 309, 310, 317, 951], "detour": 270, "snrs_roi": 270, "freq_plot": 270, "color_plot": 270, "darkblu": [270, 550, 551, 889], "darkgreen": 270, "mediumblu": 270, "seagreen": 270, "xpos_plot": 270, "stim_12hz_tmp": 270, "stim_15hz_tmp": 270, "snr_tmp": 270, "yerr": 270, "stim_12hz_snrs_": 270, "ihz": 270, "stim_15hz_snrs_": 270, "tick": [270, 273, 294, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 860, 868, 872, 875, 879, 888, 891, 896, 897, 898], "strike": 270, "tstat_12hz_trial_stim": 270, "stim_12hz_snrs_12hz": 270, "stim_12hz_snrs_15hz": 270, "tstat_12hz_trial_1st_harmon": 270, "stim_12hz_snrs_24hz": 270, "stim_12hz_snrs_30hz": 270, "tstat_12hz_trial_2nd_harmon": 270, "stim_12hz_snrs_36hz": 270, "stim_12hz_snrs_45hz": 270, "tstat_15hz_trial_stim": 270, "stim_15hz_snrs_12hz": 270, "stim_15hz_snrs_15hz": 270, "tstat_15hz_trial_1st_harmon": 270, "stim_15hz_snrs_24hz": 270, "stim_15hz_snrs_30hz": 270, "tstat_15hz_trial_2nd_harmon": 270, "stim_15hz_snrs_36hz": 270, "stim_15hz_snrs_45hz": 270, "000037": 270, "000014": 270, "000297": 270, "000024": 270, "006525": 270, "tour": [270, 281, 286], "overli": 270, "stim_bandwidth": 270, "window_length": 270, "window_snr": 270, "i_win": 270, "this_spectrum": 270, "windowed_psd": 270, "windowed_freq": 270, "stimfreq": 270, "bin_width": 270, "skip_neighbor_freq": 270, "n_neighbor_freq": 270, "windowed_snr": 270, "boxplot": 270, "stochast": [270, 277, 636], "window_start": 270, "greyscal": 270, "optimist": 270, "serious": [270, 320], "50_ssvep": [270, 272, 956], "imagegrid": 273, "inset_loc": [273, 860], "max_t": 273, "17909658": [273, 274], "18448887": [273, 274], "83197989": [273, 274], "nonwhite_pix": 273, "nonwhite_row": 273, "nonwhite_col": 273, "cropped_screenshot": 273, "nrows_ncol": 273, "axes_pad": 273, "labels": 273, "titles": 273, "gridspec": [273, 333, 334, 875], "height_ratio": 273, "rowspan": 273, "bot": 273, "evoked_idx": 273, "brain_idx": 273, "peak_lin": 273, "columnspac": 273, "labelspac": 273, "fancybox": 273, "handlelength": 273, "n_ave": 273, "set_axisbelow": 273, "wspace": 273, "hspace": 273, "transfigur": 273, "to_plot": 273, "inset_ax": [273, 860], "axin": 273, "tast": 273, "luckili": 273, "set_": 273, "get_children": 273, "line2d": 273, "0x7fdd7eb578e0": 273, "0x7fdd7eb57550": 273, "0x7fdd7eb57c10": 273, "0x7fdd7db7a140": 273, "pathcollect": 273, "0x7fdd7db788e0": 273, "0x7fdd7fccb5b0": 273, "0x7fdd7fcca260": 273, "0x7fdd7fcc8640": 273, "0x7fdd7fcc8940": 273, "0x7fdd7fccb3d0": 273, "0x7fdd7fcc9690": 273, "0x7fdd871501f0": 273, "certainli": 273, "artistlist": 273, "sensor_dot": 273, "set_siz": 273, "10_publication_figur": [273, 276, 956], "timechang": [274, 333, 334, 834, 836, 875], "subscrib": [274, 333, 334, 834, 836, 875, 916, 919, 951], "ion": 274, "evokeds_fnam": 274, "avg_evok": 274, "fieldlin": [274, 836, 898], "fig_brain": 274, "field_map": 274, "fig_field": 274, "set_tim": [274, 292, 834, 836, 955], "ing": 274, "snake": [274, 907, 908, 909, 910, 911, 912, 913], "time_chang": 274, "hassl": 274, "fig3": 274, "fig4": 274, "fig5": 274, "time_bar": 274, "on_motion_notifi": 274, "mpl_event": 274, "xdata": 274, "on_time_chang": 274, "set_xdata": 274, "curstom": 274, "motion_notify_ev": 274, "20_ui_ev": [274, 276, 956], "alphabet": [277, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 309], "fiorenzo": [277, 636], "artoni": [277, 636], "magazin": [277, 483], "962275": 277, "stephan": [277, 483], "bonnet": [277, 483], "marco": [277, 483], "congedo": [277, 483], "jutten": [277, 483], "riemannian": [277, 483], "multimedia": [277, 483], "mmsp": [277, 483], "5662067": [277, 483], "barber": [277, 423], "51814": [277, 423], "www": [277, 309, 423, 522, 559, 651, 936], "staff": [277, 423, 948], "brml": [277, 423], "becker": [277, 744], "albera": [277, 744], "comon": [277, 744], "gribonv": [277, 744], "fleureau": [277, 744], "guillotel": [277, 744], "merlet": [277, 744], "sissi": [277, 744], "august": [277, 315, 503, 744], "anthoni": [277, 636], "terrenc": [277, 636], "sejnowski": [277, 636, 669], "deconvolut": [277, 636, 669], "1159": [277, 636, 669], "1995": [277, 320, 475, 636, 669], "neco": [277, 636], "anna": [277, 293, 737], "rita": [277, 737], "bentivoglio": [277, 737], "bressman": [277, 737], "cassetta": [277, 737], "donatella": [277, 737], "carretta": [277, 737], "pietro": [277, 737], "tonali": [277, 737], "alberto": [277, 737], "albanes": [277, 737], "disord": [277, 737], "1028": [277, 737], "870120629": [277, 737], "berg": [277, 320], "scherg": [277, 320], "1994": [277, 320, 603], "90113": [277, 320], "quentin": [277, 286, 306], "anderson": [277, 294], "arindam": 277, "banerje": 277, "kenji": 277, "fukumizu": 277, "24th": 277, "pmlr": 277, "apr": 277, "mlr": 277, "v130": 277, "bertrand21a": 277, "ryota": [277, 483], "tomioka": [277, 483], "lemm": [277, 483], "motoaki": [277, 483], "kawanab": [277, 483], "msp": [277, 483], "4408441": [277, 483], "fred": 277, "bookstein": 277, "thin": 277, "plate": 277, "24792": 277, "oleg": 277, "burdakov": 277, "bori": 277, "merkulov": 277, "lith": 277, "\u00f6": 277, "ping": 277, "yilun": [277, 423], "chen": [277, 423], "ami": [277, 423], "wiesel": [277, 423], "yonina": [277, 423], "eldar": [277, 423], "alfr": [277, 316, 423], "hero": [277, 423], "shrinkag": [277, 284, 423, 483, 490, 491, 637], "mmse": [277, 423], "5016": [277, 423], "5029": [277, 423], "2053029": [277, 423], "readthedoc": 277, "octob": [277, 744], "ronald": [277, 330, 331, 332, 333, 334, 784, 788], "crochier": [277, 330, 331, 332, 333, 334, 784, 788], "lawrenc": [277, 330, 331, 332, 333, 334, 644, 784, 788], "rabin": [277, 330, 331, 332, 333, 334, 784, 788], "multir": [277, 330, 331, 332, 333, 334, 784, 788], "englewood": [277, 330, 331, 332, 333, 334, 784, 788], "cliff": [277, 330, 331, 332, 333, 334, 784, 788], "nj": [277, 330, 331, 332, 333, 334, 784, 788], "605162": [277, 330, 331, 332, 333, 334, 784, 788], "adrian": [277, 337, 342], "guggisberg": 277, "erik": [277, 285, 305, 306], "edward": 277, "findlai": 277, "ryan": [277, 294, 650], "canolti": 277, "mitchel": 277, "berger": 277, "barbaro": 277, "heidi": 277, "kirsch": 277, "1686": 277, "1700": 277, "sereno": [277, 320], "nimg": [277, 320, 768], "0395": [277, 320], "arthur": [277, 603, 815, 818], "liu": [277, 603], "buckner": [277, 603], "lewin": [277, 603], "s0896": [277, 603], "6273": [277, 603], "81138": [277, 603], "jocn": 277, "darva": 277, "ermer": 277, "20171": 277, "salat": [277, 320], "andr\u00e9": [277, 320], "kouw": [277, 320], "makri": [277, 320], "florent": [277, 320], "s\u00e9gonn": [277, 320], "quinn": [277, 304, 320], "reson": [277, 320], "s69": [277, 320], "s84": [277, 320], "0396": 277, "tootel": 277, "intersubject": 277, "sici": 277, "1097": 277, "0193": 277, "hbm10": 277, "genoves": [277, 768], "nicol": [277, 284, 768], "lazar": [277, 483, 768], "1037": [277, 768], "supplementari": [277, 458], "neuroanatom": [277, 458], "esm": [277, 458], "art": [277, 312, 458], "3a10": [277, 458], "2fnature18933": [277, 458], "mediaobject": [277, 458], "41586_2016_bfnature18933_moesm330_esm": [277, 458], "s\u00f3nia": [277, 316], "gon\u00e7alv": [277, 316], "casper": [277, 316], "munck": [277, 316], "jeroen": [277, 291, 316], "verbunt": [277, 316], "fetsj": [277, 316], "bijma": [277, 316], "rob": [277, 303, 306, 307, 308, 316], "heethaar": [277, 316], "vivo": [277, 316], "resist": [277, 316], "eit": [277, 316], "754": [277, 316], "812164": [277, 316], "teon": [277, 279, 280, 281, 282, 283, 284, 286, 287, 291, 297, 298, 299, 300, 301, 314], "lauri": [277, 314], "parkkonen": [277, 314], "\u00e4": [277, 314, 491], "inen": [277, 314], "fnin": [277, 314], "00267": [277, 314], "greischar": [277, 644], "cori": [277, 644], "burghi": [277, 644], "carien": [277, 644], "reekum": [277, 644], "daren": [277, 644], "jackson": [277, 644], "diego": [277, 644], "pizzag": [277, 644], "corrina": [277, 644], "mueller": [277, 644], "davidson": [277, 644], "electroencephalograph": [277, 644], "neuroinformat": 277, "fninf": 277, "00062": 277, "hne": [277, 491], "073": [277, 491], "gari": [277, 766], "heiman": [277, 766], "houghton": [277, 766], "mifflin": [277, 766], "boston": [277, 322, 766, 954], "17028": [277, 766], "joerg": [277, 364], "hipp": [277, 364], "hawellek": 277, "maurizio": 277, "corbetta": 277, "marku": [277, 364], "siegel": [277, 364], "engel": [277, 364], "spontan": [277, 316], "3101": 277, "percept": [277, 293, 317, 319, 364], "aapo": [277, 636], "hyv\u00e4rinen": [277, 636], "626": [277, 636], "761722": [277, 636], "toga": 277, "mazziotta": 277, "academ": 277, "san": 277, "b978": 277, "012693019": 277, "50012": 277, "bf02512476": [277, 603], "tkk": 277, "a559": 277, "helsinki": 277, "16463": 277, "kevin": [277, 815, 818], "jone": [277, 815, 818], "bernic": [277, 815, 818], "porjesz": [277, 815, 818], "chorlian": [277, 815, 818], "madhavi": [277, 815, 818], "rangaswami": [277, 815, 818], "chella": [277, 815, 818], "kamarajan": [277, 815, 818], "ajayan": [277, 815, 818], "padmanabhapillai": [277, 815, 818], "stimu": [277, 815, 818], "henri": [277, 815, 818], "begleit": [277, 815, 818], "deficit": [277, 815, 818], "diagnos": [277, 301, 815, 818], "alcohol": [277, 815, 818], "2128": [277, 815, 818], "jorg": 277, "jovicich": 277, "silvest": 277, "czanner": 277, "elizabeth": 277, "halei": 277, "andr": [277, 293], "kennedi": 277, "franz": 277, "schmitt": 277, "gregori": 277, "brown": [277, 618, 744], "macfal": 277, "436": 277, "scientif": [277, 938, 946], "056101": 277, "4802845": 277, "antti": [277, 283], "ahonen": 277, "lain": 277, "claudia": [277, 320], "tesch": [277, 320], "3315": 277, "3320": 277, "281163": 277, "zhou": [277, 483], "bf01129656": [277, 483], "philipp": 277, "lachaux": 277, "eugenio": 277, "rodriguez": [277, 293], "martineri": 277, "francisco": 277, "varela": 277, "synchroni": 277, "hbm4": 277, "attent": [277, 309, 337, 342], "ledoit": [277, 423], "wolf": [277, 423], "s0047": [277, 423], "259x": [277, 423], "00096": [277, 423], "te": [277, 290, 636], "girolami": [277, 636, 669], "subgaussian": [277, 279, 636, 669], "supergaussian": [277, 636, 669], "089976699300016719": [277, 636], "seok": [277, 316], "lew": [277, 316], "carsten": [277, 316], "wolter": [277, 316], "anwand": [277, 316], "macleod": [277, 316], "compart": [277, 316, 319, 323, 599], "2862": [277, 316], "2878": [277, 316], "20714": [277, 316], "witzel": [277, 614, 741, 746], "8945": 277, "8950": 277, "10024": [277, 302], "lowri": [277, 766], "vassarstat": [277, 766], "bernard": [277, 744], "giusiano": [277, 744], "roehri": [277, 744], "b\u00e9nar": [277, 744], "kathryn": [277, 458], "mill": [277, 458], "6084": [277, 458], "m9": [277, 458], "figshar": [277, 458], "3498446": [277, 458], "molin": [277, 618, 744], "quantif": [277, 504, 618, 744, 949], "thirtieth": [277, 367], "asilomar": [277, 367], "1207": [277, 367], "1996": [277, 367], "issn": [277, 367], "6393": [277, 367], "acssc": [277, 367], "599135": [277, 367], "paul": [277, 283, 287, 308, 320], "748978": [277, 320], "ali": [277, 815, 818], "moukadem": [277, 815, 818], "zi": [277, 815, 818], "bouguila": [277, 815, 818], "djaffar": [277, 815, 818], "ould": [277, 815, 818], "abdeslam": [277, 815, 818], "alain": [277, 815, 818], "dieterlen": [277, 815, 818], "lisbon": [277, 815, 818], "6952743": [277, 815, 818], "mourtazaev": [277, 475], "1093": [277, 475], "suresh": [277, 641], "muthukumaraswami": [277, 641], "00138": [277, 641], "ndiay": 277, "fercoq": 277, "salmon": 277, "sugiyama": 277, "luxburg": 277, "guyon": 277, "garnett": 277, "curran": 277, "inc": [277, 309], "nip": [277, 545], "cc": [277, 310, 545], "6405": 277, "holm": [277, 650, 773], "primer": [277, 773], "ou": 277, "bai": 277, "wheaton": 277, "sherri": 277, "vorbach": 277, "hallett": 277, "2292": 277, "2307": 277, "zieh": 277, "aloi": 277, "schl\u00f6gl": 277, "kr\u00e4mer": 277, "brismar": 277, "robustli": 277, "physrevlett": 277, "234101": 277, "hilla": [277, 463], "paananen": [277, 463], "jyrki": [277, 463], "5281": [277, 314, 463], "zenodo": [277, 314, 463], "889234": [277, 463], "reilli": [277, 290, 291, 293, 303, 317, 459], "mayada": [277, 317, 459], "elsabbagh": [277, 317, 459], "infant": [277, 283, 293, 459], "117682": [277, 317, 459], "thom": [277, 316], "oostendorp": [277, 316], "delbek": [277, 316], "dick": [277, 316], "stegeman": [277, 316], "vitro": [277, 316], "1487": [277, 316], "880100": [277, 316], "oppenheim": [277, 330, 331, 332, 333, 334, 784, 788], "schafer": [277, 330, 331, 332, 333, 334, 784, 788], "buck": [277, 330, 331, 332, 333, 334, 784, 788], "prentic": [277, 330, 331, 332, 333, 334, 784, 788], "hall": [277, 330, 331, 332, 333, 334, 784, 788], "saddl": [277, 330, 331, 332, 333, 334, 784, 788], "river": [277, 330, 331, 332, 333, 334, 784, 788], "754920": [277, 330, 331, 332, 333, 334, 784, 788], "daisuk": [277, 503], "yoshiaki": [277, 503], "adachi": [277, 503], "masato": [277, 503], "yumoto": [277, 503], "isao": [277, 503], "hashimoto": [277, 503], "gen": [277, 503, 849], "uehara": [277, 503], "dry": [277, 503, 651], "roberto": [277, 320, 603], "pascual": [277, 320, 603], "marqui": [277, 320, 603], "martha": [277, 320, 603], "koukkou": [277, 320, 603], "kieko": [277, 320, 603], "kochi": [277, 320, 603], "bernd": [277, 320, 603], "saletu": [277, 320, 603], "hideaki": [277, 320, 603], "tanaka": [277, 320, 603], "koichi": [277, 320, 603], "hirata": [277, 320, 603], "lesli": [277, 320, 603], "prichep": [277, 320, 603], "rolando": [277, 320, 603], "biscai": [277, 320, 603], "lirio": [277, 320, 603], "toshihiko": [277, 320, 603], "kinoshita": [277, 320, 603], "tomographi": [277, 306, 319, 320, 603], "royal": [277, 320, 423, 603], "1952": [277, 320, 603], "3768": [277, 320, 603], "3784": [277, 320, 603], "1098": [277, 320, 603], "rsta": [277, 320, 603], "0081": [277, 320, 603], "donald": 277, "perciv": 277, "walden": 277, "35532": 277, "cbo9780511622762": 277, "dinh": [277, 298, 299, 301], "tuan": 277, "pham": 277, "hermitian": 277, "1136": 277, "s089547980035689x": 277, "luca": [277, 675], "pollonini": [277, 675], "cristen": [277, 675], "homer": [277, 675], "abaya": [277, 675], "heather": [277, 675], "bortfeld": [277, 675], "beauchamp": [277, 338, 342, 346, 675, 894], "oghalai": [277, 675], "cochlear": [277, 675], "implant": [277, 675], "ernesto": 277, "pereda": 277, "ricardo": 277, "bru": 277, "\u00f1": 277, "maest": 277, "\u00fa": 277, "dog": 277, "056011": 277, "2552": 277, "aacfe4": 277, "sanchez": [277, 459], "meek": [277, 459], "wanz": [277, 459], "xie": [277, 459], "1254": [277, 459], "hat": [277, 291, 298, 320, 611, 647, 744, 777, 778], "brittani": 277, "stedelin": 277, "alessandra": 277, "mantovani": 277, "ahm": 277, "raslan": 277, "swann": 277, "21105": 277, "joss": 277, "03897": 277, "noam": [277, 652], "pele": [277, 652], "00694": [277, 652], "abraham": [277, 331, 332, 333, 334, 550, 551], "savitzki": [277, 331, 332, 333, 334, 550, 551], "marcel": [277, 331, 332, 333, 334, 550, 551], "golai": [277, 301, 331, 332, 333, 334, 550, 551], "chemistri": [277, 331, 332, 333, 334, 550, 551], "1639": [277, 331, 332, 333, 334, 550, 551], "1964": [277, 331, 332, 333, 334, 550, 551], "ac60214a047": [277, 331, 332, 333, 334, 550, 551], "corn": 277, "stam": 277, "daffertshof": 277, "diminish": 277, "1178": 277, "1193": 277, "20346": 277, "luigi": [277, 815, 818], "rodino": [277, 815, 818], "bert": [277, 815, 818], "schulz": [277, 291, 293, 294, 302, 303, 308, 815, 818], "wong": [277, 290, 291, 304, 815, 818], "pseudo": [277, 364, 365, 382, 815, 818], "american": [277, 815, 818], "fic": [277, 815, 818], "2218": [277, 547], "2228": [277, 547], "tmi": [277, 547], "2553445": [277, 547], "evelina": 277, "busa": 277, "glessner": 277, "hybrid": 277, "1060": 277, "1075": 277, "catherin": [277, 802, 812, 813, 816], "tallon": [277, 802, 812, 813, 816], "baudri": [277, 802, 812, 813, 816], "claud": [277, 802, 812, 813, 816], "delpuech": [277, 802, 812, 813, 816], "jneurosci": [277, 802, 812, 813, 815, 816, 818], "00722": [277, 802, 812, 813, 816], "minna": [277, 320], "huotilainen": [277, 320], "oili": [277, 320], "salonen": [277, 320], "00064": [277, 320], "niall": [277, 650], "118484": [277, 650], "nd": [277, 650], "timm": [277, 650], "119338": [277, 650], "bishop": [277, 423], "9868": [277, 423], "00196": [277, 423], "vinck": 277, "wingerden": 277, "franscesco": 277, "battaglia": 277, "cyriel": 277, "pennartz": 277, "1548": 277, "womelsdorf": 277, "pascal": 277, "fri": 277, "rhythmic": 277, "wehner": [277, 504], "modi": [277, 504], "children": [277, 322, 504, 954], "wheat": [277, 815, 818], "pier": [277, 815, 818], "cornelissen": [277, 815, 818], "frost": [277, 815, 818], "hansen": [277, 815, 818], "phonologi": [277, 815, 818], "5229": [277, 815, 818], "5233": [277, 815, 818], "whitham": [277, 636], "sean": [277, 636], "fitzgibbon": [277, 636], "clark": [277, 293, 636], "loveless": [277, 636], "marita": [277, 636], "broberg": [277, 636], "angu": [277, 636], "wallac": [277, 636], "lilli": [277, 636], "hardi": [277, 636], "rik": [277, 636], "fronsko": [277, 636], "alyson": [277, 636], "pulbrook": [277, 636], "paralysi": [277, 636], "1888": [277, 636], "rei": [277, 545], "ram\u00edrez": [277, 545], "jason": [277, 545], "palmer": [277, 545], "bhaskar": [277, 545], "rao": [277, 545], "neuroelectromagnet": [277, 545], "sch\u00f6lkopf": [277, 545], "platt": [277, 545], "hoffman": [277, 545], "1505": [277, 545], "3089": [277, 545], "jun": [277, 744, 942], "juliu": [277, 304, 744], "dewald": [277, 744], "april": [277, 744], "zhi": [277, 293, 320], "multilay": [277, 320], "moritz": [277, 304, 305, 306, 483], "wentrup": [277, 483], "buss": [277, 483], "921154": [277, 483], "jair": [277, 279, 282, 636], "montoya": [277, 279, 282, 636], "mart\u00ednez": [277, 636], "petr": [277, 636], "tichavsk\u00fd": [277, 636], "massoud": [277, 636], "babai": [277, 636], "zadeh": [277, 636], "nad\u00e8g": [277, 636], "thirion": [277, 636], "moreau": [277, 307, 636], "latent": [277, 636, 883], "10169": [277, 636], "lectur": [277, 636, 938], "cham": [277, 636], "53547": [277, 636], "0_27": [277, 636], "pharmacologi": [277, 320, 603], "pubm": [277, 320, 603], "ncbi": [277, 320, 603], "nlm": [277, 320, 603], "nih": [277, 320, 603], "gov": [277, 320, 603], "12575463": [277, 320, 603], "encyclopedia": 277, "php": 277, "international_system_of_unit": 277, "oldid": 277, "982683558": 277, "commit": [278, 279, 280, 281, 289, 295, 296, 297, 298, 299, 300, 301, 309, 310, 312], "committ": [278, 279, 280, 281, 282, 289, 295, 296, 297, 298, 299, 300, 301], "ellen": 278, "lau": [278, 291], "ruzich": 278, "keypress": [279, 293], "timedecod": [279, 281, 283, 284], "freeview_bem_surfac": 279, "skirt": [279, 304], "martinez": [279, 282], "clarifi": [279, 291, 303, 310], "jeythekei": [279, 286, 287], "lorenzo": [279, 283], "desanti": 279, "add_slider_to_sect": [279, 293, 294], "federico": [279, 280, 281, 282, 285, 290, 294, 300, 301, 302], "raimondo": [279, 280, 281, 282, 284, 285, 290, 291, 292, 294, 300, 301], "bailei": [279, 281, 282, 284, 285, 293], "_setup_vmin_vmax": 279, "concatenatechannel": 279, "epochsvector": [279, 282], "ledoit_wolf": [279, 423], "redesign": [279, 300], "rewrot": 279, "gsoc": [279, 286, 312], "plot_image_epoch": 279, "preload_data": [279, 301], "rawbrainvis": [279, 561], "santi": 279, "natali": [279, 281], "klein": [279, 281], "fede": [279, 280, 281, 284, 285, 290, 291, 292, 294], "roan": [279, 300, 301], "laplant": [279, 300, 301], "wakeman": [279, 297, 300, 301], "googl": [280, 312, 315, 322, 901], "summer": [280, 312, 322], "nenonen": 280, "nicolet": [280, 320, 579], "generalizationacrosstim": [280, 281, 283, 284, 301], "add_eeg_average_proj": 280, "silent": [280, 288, 294, 306, 318, 326, 331, 332, 475, 672], "add_eeg_ref": [280, 282], "n_samp_tot": 280, "rudiuk": [280, 282, 283, 284], "emilyps14": 280, "lennyvarghes": 280, "marian": [280, 294, 304], "dovgialo": [280, 294, 304], "show_info": 281, "neuroscan": [281, 283, 320, 512], "cwt_morlet": [281, 282], "read_select": [281, 293], "compute_raw_psd": [281, 301], "compute_epochs_psd": [281, 301], "614990234": 281, "00064103": 281, "99897607": 281, "minor": [281, 282, 309, 312], "spectral_connect": [281, 284, 290, 293], "vision": [281, 310, 561], "orth": [281, 427], "train_tim": 281, "ecg_criterion": 281, "eog_criterion": 281, "replace_ev": [281, 601], "rawedf": [281, 559, 566, 582], "coordinan": 281, "plot_tran": [281, 282, 283, 284], "ware": 281, "score_mod": 281, "stimserv": [281, 299], "superflu": [281, 283], "ip": 281, "mesh_color": 281, "brain_color": [281, 895], "multitaper_psd": 281, "dig_kind": [281, 373, 374, 502], "inconsist": [281, 288, 302, 306], "pseudoinvers": [281, 284, 320, 636, 647], "choleski": [281, 320, 770], "vertor": 281, "renorm": 281, "drop_bad_epoch": [281, 289], "drop_epoch": 281, "do_forward_solut": 281, "favor": [281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 300, 301, 302, 304, 305, 306, 307, 308, 312, 320], "chronolog": [281, 294], "kaichogami": 281, "cl\u00e9ment": [281, 301], "moutard": [281, 301], "camilo": [281, 282], "lamu": [281, 282], "martinbab": 281, "mikolaj": [281, 282, 283, 284, 285, 286, 290, 291, 292], "nikla": [281, 283], "wilm": [281, 283], "sagun": 281, "pai": [281, 309], "sourav": 281, "dupr\u00e9": [281, 286], "la": [281, 286, 290, 305, 306, 317, 322, 954], "kambyses": 281, "pbnsilva": 281, "sviter": [281, 301], "zuxfoucault": 281, "csd_arrai": [282, 285], "nick": [282, 300], "foti": 282, "pop_prop": 282, "maryland": 282, "kit2fiff": [282, 294, 299, 300], "read_dig_montag": [282, 283, 284, 288], "preview": 282, "repr": [282, 290, 291, 304, 305], "selector": [282, 331, 332, 333, 334, 336, 550, 551, 866, 889, 892], "filterchpi": [282, 323], "browse_raw": [282, 287, 288, 291, 293, 309], "raimundo": 282, "transform_into": [282, 483, 490], "hid": 282, "pablo": [282, 308], "aria": 282, "merge_grad": [282, 333, 334, 874], "assertionerror": [282, 283, 294], "duma": 282, "fieldtripcli": 282, "get_data_as_epoch": 282, "crash": [282, 284, 287, 290, 325], "unitsposit": 282, "mullin": 282, "bva": 282, "latin": [282, 286, 294, 302], "strictest": 282, "weakest": [282, 333, 334, 870], "hojlund": 282, "niediek": 282, "refactor": [282, 285, 293, 308], "slight": [282, 324], "revert": [282, 331, 332, 703, 928], "csd_epoch": [282, 285], "csd_compute_epoch": 282, "ev2": 282, "\u00b5": 282, "aru": 282, "unsupport": 282, "pysurf": [282, 290, 294, 297, 298], "config_opt": 282, "favour": 282, "compli": [282, 284, 949], "single_trial_pow": 282, "uint16_codec": [282, 567, 689, 695], "f\u00e9lix": 282, "keith": [282, 283, 287, 288, 292], "doell": [282, 283, 287, 288, 292], "kraus": 282, "shlomo": 282, "poil": 282, "yaroslav": [282, 283, 285, 289, 299], "halchenko": [282, 283, 285, 289, 299], "artemis123": [283, 286, 303, 320, 558], "toddler": 283, "fasttrack": 283, "boggess": [283, 284], "tf_dic": [283, 293], "brovelli": 283, "score_sourc": [283, 287, 636, 955], "to_spher": [283, 331, 332, 333, 334, 336, 550, 551, 892], "improperli": [283, 288, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 614, 876], "_plot_topo_onpick": 283, "erkka": [283, 286, 305, 306], "heinila": [283, 286, 305, 306], "read_montag": [283, 284, 286, 288, 301], "rtepoch": [283, 286, 299, 485], "rantala": 283, "_bad_drop": 283, "_filenam": 283, "pasler": 283, "partit": [283, 320, 331, 332, 428, 550, 551, 772], "predict_mod": 283, "chanloc": 283, "conflict": [283, 309, 337, 941, 946], "dualiti": [283, 284, 285, 547, 548], "mxne_optim": [283, 284, 285], "dgap_l21": 283, "band_pass_filt": 283, "band_stop_filt": 283, "low_pass_filt": 283, "high_pass_filt": 283, "eeg_sensor": 283, "typecheck": 283, "mislead": [283, 302], "nz": [283, 320], "leonardo": 283, "barbosa": 283, "mne_root": [283, 320, 948], "protect": [283, 294], "crist\u00f3bal": [283, 284, 287], "mo\u00ebnn": [283, 284, 287], "loccoz": [283, 284, 287], "hermann": 283, "sonntag": 283, "jakub": 283, "kaczmarzyk": 283, "lorenz": [283, 286], "esch": [283, 286], "alfin": 283, "matteo": [283, 293], "visconti": 283, "reppling": [283, 284, 285, 286, 287, 290], "bvef": [284, 398], "baptist": 284, "schiratti": 284, "utilis": 284, "gdf": [284, 286, 287, 288, 292, 320, 559, 566, 574], "find_edf_ev": [284, 287], "dgap_l21l1": 284, "find_ch_connect": [284, 288, 291], "ramonapariciog": 284, "get_pos2d": 284, "\u03c7\u00b2": 284, "writabl": 284, "anti": [284, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 902], "plot_roi_erpimage_by_rt": 284, "spatial_src_connect": [284, 291], "spatio_temporal_src_connect": [284, 291], "hcpmmp": [284, 319], "compute_morph_matrix": [284, 286], "return_drop_log": [284, 648, 649], "ansi": 284, "codepag": 284, "okba": 284, "bekhelifi": 284, "duemos": 284, "nielsen": 284, "luk\u00e1\u0161": 284, "hejtm\u00e1nek": 284, "_v": [284, 331, 332, 333, 334], "_virtual": 284, "char": [284, 302], "treatment": 284, "alejandro": [284, 285, 291], "weinstein": [284, 285, 291], "mrn": 284, "reformat": 284, "lcmv_epoch": [284, 285, 298], "lcmv_raw": [284, 285], "plot_gat_tim": 284, "plot_gat_matrix": 284, "read_events_eeglab": 284, "tf_lcmv": 284, "scale_tim": 284, "scalings_tim": 284, "akshay0724": 284, "dykstra": [284, 298, 299, 300, 301], "laetitia": 284, "grabot": 284, "proulx": 284, "apariciogarcia": 284, "robin": 284, "tibor": 284, "schirrmeist": 284, "rodrigo": 284, "h\u00fcbner": 284, "gutstein": [284, 286], "kern": [284, 303, 307], "nathali": [285, 287], "gayraud": [285, 287], "mayavi": [285, 291, 294, 301, 312], "tilt": [285, 320, 336, 562, 834], "workaround": 285, "read_annotations_eeglab": [285, 286], "builtin": [285, 309, 390, 391, 834], "trainsform": 285, "sophi": [285, 290], "dubarri": 285, "tf_mxne_optim": 285, "alpha_spac": [285, 548], "alpha_tim": [285, 548], "dgap_freq": [285, 547, 548], "multidictionari": 285, "base_estim": [285, 486, 493], "cp": [285, 320, 323, 948], "add_figs_to_sect": [285, 293, 294, 301], "bypass": [285, 309], "failur": [285, 309], "unread": [285, 302, 320], "keep_ecg": [285, 653], "bdf": [285, 287, 288, 290, 299, 320, 559, 566, 574], "anymor": [285, 290, 292, 293, 302, 304, 636, 950], "image_mask": 285, "capit": [285, 392], "clean_nam": [285, 564], "oleh": 285, "kozynet": 285, "braboszcz": 285, "desislava": 285, "petkova": 285, "krzemi\u0144ski": 285, "hornberg": 285, "henrich": [285, 286, 290], "kolkhorst": [285, 286, 290], "evan": [285, 286, 292, 294, 303], "juergen": [285, 300], "kambiz": [285, 286], "tavabi": [285, 286], "katrin": 285, "leinweb": 285, "larri": [285, 287], "eisenman": [285, 287], "hartmann": [286, 290, 291, 292, 302], "dirk": [286, 287, 288], "g\u00fctlin": [286, 287, 288], "rasmu": [286, 308], "zetter": 286, "molfes": 286, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 286, "pymatread": [286, 304, 946], "trig_shift_by_typ": 286, "split_nam": [286, 291, 292, 294, 331, 332, 550, 551], "read_annotations_brainvis": 286, "bcd": [286, 294, 547], "get_blas_func": 286, "_compute_covariance_auto": 286, "flash30": [286, 287, 303, 307, 320, 323, 371], "onewai": 286, "sara": [286, 291], "sommariva": [286, 291], "marcin": 286, "koculak": 286, "buildup": 286, "incom": 286, "bethard": 286, "ed": [286, 744], "thrown": [286, 834], "resiz": [286, 302, 331, 332, 333, 334, 550, 551, 784, 786, 787, 788, 789, 790, 875], "buffer_size_sec": [286, 549, 550, 551], "parser": [286, 324, 512], "dateutil": 286, "jasper": 286, "den": [286, 293], "bosch": 286, "_current": 286, "symlink": [286, 323, 375, 377], "unit_noise_gain": 286, "buildqa": 286, "synthesi": [286, 287], "sti014": [286, 324, 524], "annotmap": 286, "runtimeexcept": 286, "fmt": [286, 320, 331, 332, 333, 334, 513, 514, 516, 550, 551], "morph_precomput": 286, "morph_data_precomput": 286, "pycuda": 286, "warn_explicit": 286, "save_stc_as_volum": 286, "save_as_volum": [286, 301, 346, 347], "stop_receive_thread": 286, "memmap": [286, 331, 332, 333, 334, 550, 551, 726, 731, 784, 786, 787, 788, 789, 790], "banvil": [286, 287, 291, 294], "johan": 286, "meer": 286, "manu": 286, "sutela": 286, "perri": 286, "sergei": 286, "antopolskii": 286, "teekuninga": 286, "jochmann": 286, "tristan": [286, 293], "stenner": [286, 293], "filtord": [287, 323, 550, 551, 889], "hoc": [287, 591, 949], "drop_ref": [287, 725], "jevri": [287, 288, 305, 306], "card": [287, 941, 948], "mark_flat": [287, 290, 291], "mixin": [287, 300], "channel_wis": [287, 331, 332, 333, 334, 550, 551], "__repr__": [287, 302], "lslclient": 287, "lsl": [287, 312], "nikola": [287, 291], "chala": 287, "mocklslstream": 287, "roujanski": [287, 308], "fault": 287, "vmrk": [287, 303, 317, 516, 550, 551, 689], "kovrig": 287, "n_pad": 287, "bruno": 287, "nicenboim": 287, "32bit": 287, "edge_": 287, "topolog": [287, 294, 302, 316, 323, 376, 434, 482, 502, 533, 691, 720, 722, 929], "lang": [287, 341], "v0": [287, 300, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 355, 360, 364, 365, 367, 373, 374, 375, 377, 380, 381, 385, 386, 389, 396, 398, 407, 408, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 439, 440, 441, 457, 459, 460, 482, 483, 485, 487, 489, 490, 494, 495, 502, 504, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 530, 531, 536, 540, 542, 545, 547, 548, 549, 550, 551, 559, 562, 563, 564, 566, 567, 568, 572, 575, 581, 588, 590, 591, 592, 593, 594, 595, 596, 597, 599, 603, 604, 605, 606, 609, 610, 611, 616, 618, 619, 620, 622, 623, 627, 628, 629, 635, 636, 637, 639, 645, 646, 647, 648, 649, 651, 653, 654, 660, 661, 671, 679, 685, 691, 695, 697, 698, 702, 703, 706, 714, 716, 717, 719, 725, 728, 733, 735, 736, 738, 747, 748, 749, 750, 751, 765, 767, 779, 783, 784, 785, 786, 787, 788, 789, 790, 803, 804, 805, 808, 813, 814, 816, 817, 818, 819, 822, 824, 831, 834, 835, 836, 838, 852, 853, 854, 855, 859, 860, 863, 864, 866, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 884, 885, 886, 888, 889, 890, 891, 892, 893, 894, 896, 898, 899, 900, 902, 905, 922, 927, 931, 934, 953], "dicom": [287, 317], "hidpi": [287, 288], "retina": 287, "hash": [287, 456, 462], "mishandl": 287, "haslach": 287, "clean_eog_ecg": 287, "ascend": [287, 706, 877, 884, 936], "_criterion": 287, "detect_artifact": [287, 290, 294], "katarina": 287, "slama": 287, "limit_depth_ch": [287, 527], "rework": [287, 365], "patch_info": 287, "sebastian": [287, 290], "castano": 287, "finder": 287, "formerli": [287, 655], "enclos": [287, 320, 338, 339, 342, 345, 346, 347, 834, 894, 899], "xml": [288, 320, 399, 401, 515, 702], "read_dig_captrack": [288, 291], "captrak": [288, 291, 399], "bvct": [288, 320, 399], "polici": [288, 310], "markerfil": 288, "brainmask": [288, 290, 323, 377, 936], "autorecon1": [288, 377, 936], "curri": [288, 292, 294, 307, 565, 689], "infrastructur": [288, 310], "complic": [288, 309], "10x": 288, "jit": 288, "plot_sensors_connect": [288, 293], "ryb\u00e1\u0159": 288, "errantli": [288, 291, 292, 293, 305, 307, 308], "mri_spac": [288, 343], "1970": [288, 290], "abram": 288, "hindl": 288, "mv": [288, 291, 319], "2gb": [288, 331, 332, 550, 551], "joshua": [288, 294, 302, 307], "eberhard": 288, "eich": 288, "radman": 288, "macosx": [288, 293], "erron": [288, 293, 294, 303, 319], "pycord": 288, "set_dig": 288, "update_ch_nam": 288, "raweeglab": [288, 567], "raise_if_subset": 288, "bump": [288, 290], "zen": [288, 293, 331, 332, 550, 551, 636, 866, 883, 889], "smartshield": [288, 336], "_smsh_": 288, "_smartshield": 288, "max_tick": 288, "truncate_xaxi": [288, 860], "show_legend": 288, "textual": [288, 319], "biosig": 288, "nightli": [289, 948], "pick_types_evok": [289, 301], "migrat": [289, 293, 636], "upgrad": [289, 388, 550], "herbst": 290, "allow_line_onli": [290, 416], "set_meas_d": [290, 291, 307, 331, 332, 333, 334, 336, 550, 551], "victor": 290, "ferat": 290, "mohammad": 290, "daneshzand": 290, "dist_limit": [290, 336, 344, 349, 413], "return_event_id": [290, 331, 332, 698, 786, 787, 788], "plv": [290, 620], "match_cas": [290, 331, 332, 333, 334, 336, 550, 551], "nirx": [290, 294, 320, 581], "dmitrii": [290, 308], "altukhov": [290, 308], "epochs_color": 290, "setup_forward_model": [290, 291], "prepare_bem_model": 290, "bdip": [290, 329, 693], "besa": [290, 303, 398, 699], "return_n_it": [290, 669], "n_iter_": [290, 636], "eg": [290, 398], "force_equ": [290, 603], "reappli": [290, 304, 636, 880, 928], "compromis": 290, "nfree": [290, 328, 329], "roc_auc_ovo": 290, "roc_auc_ovo_weight": 290, "old_tim": 290, "unix": [290, 949], "subprocess": 290, "servic": [290, 299, 310], "anticip": [290, 310], "cpp": [290, 949], "htp": 290, "insuffici": [290, 941], "demetr": 290, "kosta": 290, "glyph": [290, 303, 329, 339, 345, 347, 834, 852, 864, 895, 899, 901], "gridsearchcv": 290, "chun": 290, "hui": 290, "yu": [290, 291, 293], "luo": [290, 291, 293], "fu": 290, "geoff": 290, "brookshir": 290, "eegmi_url": 290, "ramiro": 290, "gatti": 290, "tandem": 290, "point_spread_funct": 290, "cross_talk_funct": 290, "ariel": 290, "rokem": 290, "torr": [290, 305, 306], "jos\u00e9": 290, "garc\u00eda": 290, "moham": 290, "sherif": 290, "nataliia": 290, "kozhemiako": 290, "legrand": 290, "f\u00e9rat": 290, "rahul": 291, "nadkarni": 291, "m\u00f8ller": 291, "andersen": 291, "kyle": [291, 292], "mathewson": [291, 292], "sedivi": 291, "benerradi": [291, 293, 294, 303, 308], "donckt": 291, "simeon": [291, 304], "svea": 291, "meyer": 291, "lx37": 291, "bierer": [291, 293], "divis": [291, 320], "rai": 291, "n_iter_sdr": 291, "single_volum": [291, 733], "subvolum": [291, 346, 347], "bg_img": [291, 346, 347, 900], "alia": [291, 303, 309, 331, 332, 333, 334, 336, 344, 550, 551, 678, 832, 852, 889], "immut": 291, "show_orient": [291, 854], "on_miss": [291, 304, 326, 331, 332, 333, 334, 336, 351, 352, 384, 417, 418, 475, 510, 530, 550, 551, 784, 786, 787, 788, 789, 790, 869], "max_pca_compon": [291, 292], "fxaa": 291, "_split": 291, "_part": 291, "read_raw_xxx": 291, "esss": [291, 293, 312, 647, 660, 671], "blender": [291, 303], "ricoh": [291, 576, 697], "component_ord": [291, 483], "mutual_info": [291, 483], "simpler": 291, "persyst": [291, 320, 583], "snirf": [291, 293, 294, 306, 584], "birthdai": [291, 308, 331, 332, 333, 334, 336, 550, 551, 552], "permit": 291, "src_mri_t": [291, 344], "use_lut": [291, 344], "outermost": 291, "wrongli": [291, 305], "sfp": [291, 398], "add_bem_to_sect": [291, 293, 294, 301], "hull": [291, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "event_rep": [291, 326, 331], "trip": [291, 293, 302, 308], "unicod": [291, 300, 323, 783], "conjug": 291, "watersh": [291, 317, 377], "throw": 291, "trialinfo": [291, 696], "read_ch_connect": [291, 300], "spatial_dist_connect": 291, "spatial_inter_hemi_connect": 291, "spatial_tris_connect": 291, "spatio_temporal_dist_connect": 291, "spatio_temporal_tris_connect": 291, "reserv": [291, 309, 310, 389], "normalize_fwd": 291, "n_col": [291, 395, 636, 785, 788, 862, 882], "stc_mix": 291, "use_dev_head_tran": [291, 640], "spell": 291, "captrack": 291, "annotate_flat": [291, 302], "anton": 291, "waniek": 291, "harmelen": 291, "chapochn": 291, "mshader": 291, "austin": 292, "hurst": 292, "aniket": 292, "pradhan": 292, "eduard": [292, 293, 302, 304], "ort": [292, 293, 302, 304], "hathawai": [292, 294, 303], "hongjiang": 292, "stout": [292, 294, 302], "kuziek": 292, "qianliang": 292, "tod": 292, "flak": 292, "mffpy": [292, 515], "8354": 292, "imgag": 292, "boxi": [292, 320, 560], "7717": 292, "8275": 292, "8445": 292, "8553": 292, "clearer": [292, 294, 302, 341], "8351": 292, "8190": 292, "realign": [292, 319, 685], "8539": 292, "8379": 292, "8366": 292, "8642": 292, "8447": 292, "8323": 292, "reset_drop_log_select": [292, 331, 332], "8449": 292, "8402": 292, "8460": 292, "8532": 292, "8482": 292, "8608": 292, "8502": 292, "8515": 292, "on_header_miss": [292, 407], "8622": 292, "8862": [292, 293], "8381": 292, "8584": 292, "8442": 292, "8534": 292, "8624": 292, "8519": 292, "8452": 292, "8415": 292, "8395": 292, "8658": 292, "cascad": 292, "8633": 292, "8580": 292, "8400": 292, "test_egi": 292, "mandatorili": 292, "8474": 292, "8339": 292, "8558": 292, "s390x": 292, "8618": 292, "8594": 292, "8610": 292, "8377": 292, "8285": 292, "tight_layout": 292, "8344": 292, "8318": 292, "8637": 292, "8306": 292, "overflow": 292, "8448": 292, "8283": 292, "name_split": 292, "01_meg": 292, "name_meg": 292, "8464": 292, "8326": 292, "8343": 292, "8425": 292, "8317": 292, "8663": 292, "8320": 292, "8303": 292, "8484": 292, "8349": 292, "max_pca_components_": 292, "8341": 292, "999999": [292, 636], "n_components_": [292, 636], "everyhwer": 292, "8368": 292, "8393": 292, "ch_info": [292, 725], "8416": 292, "8434": 292, "8486": 292, "8491": 292, "8492": 292, "led": [292, 294, 302, 307], "inset": [292, 860], "8545": 292, "8590": 292, "tukei": 292, "8542": 292, "8520": 292, "8589": 292, "8564": 292, "doc": [292, 309, 312, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 729, 784, 786, 787, 789, 790, 802, 812, 853, 868, 875, 879, 888, 891, 896, 898, 936], "tstart": [292, 298, 323, 338, 339, 342, 345, 346, 347, 648, 649, 661, 662, 664], "8605": 292, "8374": 292, "8357": 292, "8356": 292, "8389": 292, "justu": 292, "schwabed": 292, "mad": [292, 299, 300, 301], "jensen": [292, 299, 300, 301], "sumalyo": 293, "datta": 293, "pade": 293, "koehler": 293, "rotem": 293, "falach": 293, "sanderson": 293, "enrico": 293, "varano": 293, "judi": [293, 308], "zhu": [293, 308], "valerii": [293, 294, 304], "chirkov": [293, 294, 304], "anelli": 293, "apoorva": 293, "karek": 293, "silvia": 293, "cotroneo": 293, "pari": [293, 322], "erica": [293, 294, 308], "maggi": 293, "eeglabio": [293, 331, 332, 513, 516, 550, 551], "9192": 293, "9285": 293, "9278": 293, "9124": 293, "9203": 293, "9174": 293, "9088": 293, "9156": 293, "9043": 293, "9096": 293, "citat": [293, 309], "8867": 293, "8739": 293, "9169": 293, "yokogawa": 293, "8813": 293, "match_alia": [293, 303, 331, 332, 333, 334, 336, 550, 551], "8799": 293, "ipyvtk_simpl": 293, "8503": 293, "allow_dupl": [293, 331, 332, 333, 334, 336, 380, 408, 550, 551, 719], "8346": 293, "8896": 293, "8723": 293, "8738": 293, "8789": 293, "incomplet": [293, 312, 941], "9268": 293, "8790": 293, "8697": 293, "8801": 293, "8829": 293, "8744": 293, "add_custom_j": [293, 341, 955], "add_custom_css": [293, 341, 955], "javascript": [293, 341], "8762": 293, "9037": 293, "8793": 293, "projoff": [293, 323], "9262": 293, "8806": 293, "starstim": 293, "enobio": 293, "nedf": [293, 307, 308, 577], "8734": 293, "8760": 293, "8783": 293, "8822": 293, "8771": 293, "8805": 293, "canon": [293, 314, 434, 558, 834, 852], "8794": 293, "auto_clos": 293, "8730": 293, "8841": 293, "respiratori": [293, 331, 332, 333, 334, 550, 551, 633, 784, 786, 787, 788, 789, 790], "8858": 293, "checker": 293, "pylanc": 293, "8874": 293, "interobail": 293, "8868": 293, "qt_mac_wants_lay": 293, "pyqt": [293, 946], "8959": 293, "8879": 293, "8834": 293, "9023": 293, "9015": 293, "9087": 293, "9113": 293, "add_estimated_fiduci": [293, 380, 955], "9118": 293, "sex": [293, 305, 336], "keep_hi": [293, 323, 331, 332, 333, 334, 336, 550, 551, 552], "9103": 293, "9175": 293, "9149": 293, "9166": 293, "9210": 293, "9136": 293, "9241": 293, "9261": 293, "9269": 293, "9270": 293, "9141": 293, "9347": 293, "misbehav": 293, "8013": 293, "9207": 293, "9187": 293, "9151": 293, "9162": 293, "9152": 293, "x_label": 293, "9115": 293, "9062": 293, "8989": 293, "8839": 293, "stim_pick": [293, 550, 551], "8844": 293, "8311": 293, "8688": 293, "8983": 293, "superset": 293, "8675": 293, "8713": 293, "8689": 293, "8954": 293, "8884": 293, "num_sampl": 293, "duration_in_sec": 293, "8712": 293, "8780": 293, "8804": 293, "8842": 293, "8857": 293, "9315": 293, "overwritten": [293, 331, 332, 333, 334, 336, 457, 550, 551, 552, 651, 672, 784, 786, 787, 788, 789, 790], "8956": 293, "9284": 293, "forev": [293, 331, 332], "9317": 293, "8845": 293, "8811": 293, "8736": 293, "8831": 293, "8728": 293, "8731": 293, "8996": 293, "8752": 293, "8759": 293, "8775": 293, "8800": 293, "8817": 293, "8821": 293, "8856": 293, "viewer": [293, 312, 319, 333, 334, 338, 339, 342, 345, 346, 347, 834, 836, 871, 894, 899], "8965": 293, "8985": 293, "8891": 293, "8963": 293, "9109": 293, "9178": 293, "9252": 293, "concis": [293, 302], "9027": 293, "9236": 293, "9246": 293, "9305": 293, "9277": 293, "9099": 293, "cbar_label": 293, "9248": 293, "8870": 293, "9122": 293, "9033": 293, "9340": 293, "ana": [293, 308], "radanov": [293, 308], "catalina": [293, 945], "magalvan": 293, "mista": 293, "christina": 293, "zhao": 293, "giorgio": 293, "marinato": 293, "jori": 293, "bossch": 293, "gensollen": 293, "treguer": 293, "timon": [293, 305, 306, 317], "merk": [293, 305, 306], "julien": 294, "dominiqu": [294, 303], "makowski": [294, 303], "derollepot": 294, "sosulski": [294, 302], "xiaokai": 294, "xia": 294, "bannier": 294, "darin": 294, "erat": 294, "sleiter": 294, "scheltienn": [294, 302, 303, 304, 305, 306, 307, 308, 954], "gate": 294, "reza": [294, 303], "shoorangiz": [294, 303], "evgeni": 294, "goldstein": 294, "teve": [294, 302], "riessariu": 294, "stargardski": 294, "9801": 294, "9575": 294, "nirsport2": 294, "9348": 294, "9401": 294, "9376": 294, "9430": 294, "9481": 294, "9637": 294, "9872": 294, "9782": 294, "9858": 294, "9640": 294, "6888": 294, "9892": 294, "9725": 294, "ckdtree": 294, "9568": 294, "9643": 294, "9369": 294, "9427": 294, "hitachi": [294, 575], "9391": 294, "9396": 294, "9424": 294, "9403": 294, "9463": 294, "9431": 294, "9443": 294, "9406": 294, "9438": 294, "datablock": 294, "acquist": 294, "9437": 294, "9445": 294, "9419": 294, "9458": 294, "9444": 294, "ct": [294, 302, 666, 824], "9503": 294, "mr": [294, 302, 320, 824], "9484": 294, "9697": 294, "9468": 294, "9514": 294, "9541": 294, "9519": 294, "9525": 294, "9529": 294, "9558": 294, "9555": 294, "9553": 294, "warp_montage_volum": [294, 306], "insens": 294, "9544": 294, "9556": 294, "9578": 294, "9570": 294, "9545": 294, "9540": 294, "9601": 294, "9605": 294, "abort": 294, "9614": 294, "9516": 294, "9618": 294, "localit": [294, 404], "9658": 294, "9585": 294, "9682": 294, "remove_fiduci": [294, 380], "circumst": [294, 303, 380, 512], "9684": 294, "9688": [294, 320], "9789": 294, "9694": 294, "9586": 294, "9742": 294, "9796": 294, "9763": 294, "9784": 294, "9810": 294, "revamp": 294, "9754": 294, "9847": 294, "9860": 294, "9861": 294, "9862": 294, "9863": 294, "9871": 294, "9881": 294, "9891": 294, "9795": 294, "9800": 294, "tild": [294, 306, 320, 611], "9613": 294, "9845": 294, "9851": 294, "9869": 294, "by_event_typ": [294, 331, 332], "9859": 294, "9687": 294, "9708": 294, "typo": [294, 309, 311], "9706": 294, "9378": 294, "ceo": [294, 310], "cdt": [294, 565, 689], "9381": 294, "9712": 294, "9719": 294, "9765": 294, "9849": 294, "9897": 294, "9920": 294, "9384": 294, "9404": 294, "9435": 294, "9531": 294, "9447": 294, "9612": 294, "9831": 294, "9522": 294, "9485": 294, "9513": 294, "9489": 294, "9524": 294, "9603": 294, "9528": 294, "imposs": 294, "9893": 294, "9535": 294, "9564": 294, "9565": 294, "spawn": [294, 500], "9629": 294, "9771": 294, "9607": 294, "9663": 294, "9630": 294, "9580": 294, "9758": 294, "dollar": 294, "9695": 294, "9746": 294, "9799": 294, "9804": 294, "9777": 294, "9780": 294, "9933": 294, "9864": 294, "9873": 294, "9940": 294, "9867": 294, "9904": 294, "launch": [294, 309, 542, 624, 941, 946, 948], "mne_kit_gui": 294, "niter": [294, 824], "finer": [294, 304, 814, 817], "9505": 294, "9596": 294, "prox": 294, "cd": [294, 309, 320, 547, 936, 948], "outperform": 294, "9608": 294, "9493": 294, "9685": 294, "dataset_nam": [294, 456, 462], "has_": 294, "_data": 294, "9781": 294, "add_images_to_sect": [294, 301], "add_htmls_to_sect": [294, 301], "sort_sect": 294, "sort_cont": [294, 341], "9815": 294, "center_cmap": 294, "pathlength": [294, 673], "9843": 294, "9909": 294, "gansheng": 294, "josh": 294, "koen": 294, "luka": [294, 300, 303, 304, 305, 306], "hecker": [294, 305, 306], "steve": [294, 302], "matindi": [294, 302], "l21": [296, 297], "speedup": [296, 297], "backport": [296, 309], "mne_analyz": [296, 312, 317, 344, 749, 851, 948], "mne_compute_proj_ecg": 296, "mne_compute_proj_eog": [296, 298], "mne_maxfilt": 296, "tm": [296, 320], "loui": 296, "thibault": 296, "brad": [296, 298, 300], "buran": [296, 298, 300], "mne_dipole_fit": [297, 329], "nitim": [297, 488, 798, 804, 868], "clike": 297, "gzip": [297, 550, 551], "bessel": 297, "time_to_index": 297, "zeroth": [298, 326, 331], "kornblith": 298, "smarter": 298, "sources_as_epoch": 298, "psi": 298, "applicationon": 298, "proj_act": 298, "keep_comp": 298, "dest_comp": 298, "stimclient": 299, "rtclient": 299, "mockrtclient": 299, "polygon": [299, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898, 902], "trelli": 299, "debian": 299, "travi": [299, 307], "ki2fiff": 299, "anaconda": [299, 309, 941, 946, 947, 951], "pick_norm": 299, "write_stc": 299, "praveen": [299, 300], "sripad": [299, 300], "olivetti": 299, "ward": 300, "radic": 300, "tack": 300, "membership": [300, 331, 332, 333, 334, 550, 551, 636, 784, 786, 787, 788, 789, 790], "equalize_channnel": 300, "s\u00e9bastien": 300, "add_channels_epoch": [300, 304], "connector": 300, "client": [300, 301, 309], "cathi": 300, "nangini": 300, "events_list": [300, 432], "succinctli": 300, "breuer": 300, "aesthet": 300, "qunxi": 300, "drop_pick": 300, "labels_from_parc": 300, "parc_from_label": 300, "setno": 300, "plot_": 300, "marmaduk": [300, 301], "woodman": [300, 301], "tanai": 300, "saket": 300, "choudhari": 300, "add_sect": 301, "stereotact": [301, 320, 331, 332, 333, 334, 550, 551, 633, 634, 784, 786, 787, 788, 789, 790], "whiten_evok": 301, "oddbal": 301, "label_1": 301, "label_2": 301, "savitski": 301, "_baseraw": 301, "prof": 301, "decoupl": 301, "read_hsp": 301, "read_elp": 301, "write_hsp": 301, "write_mrk": 301, "label_time_cours": 301, "as_data_fram": 301, "textbox": 301, "iir_filter_raw": 301, "515": 301, "ingoo": 301, "kj": 301, "basil": 301, "pinsard": 301, "hafeza": 301, "anevar": 301, "manoj": 301, "kumar": 301, "tucker": 301, "use_orig_tim": [302, 325], "10396": 302, "michiru": [302, 303, 306], "kaneda": [302, 303, 306], "10089": 302, "senwen": 302, "deng": 302, "10076": 302, "zerfowski": 302, "10054": 302, "etienn": 302, "montalivet": 302, "10174": 302, "veillett": [302, 308], "10307": 302, "10281": 302, "9952": 302, "10379": 302, "cval": [302, 822], "9922": 302, "9978": 302, "9994": 302, "9929": 302, "fill_hole_s": [302, 834], "hole": [302, 834], "debugg": [302, 309], "10042": 302, "10056": 302, "10077": 302, "load_bad_channel": [302, 550, 551, 955], "10102": 302, "10058": 302, "10109": 302, "10115": 302, "10119": 302, "feel": [302, 309, 310, 949], "10114": 302, "10116": 302, "dpi": 302, "10126": 302, "10129": 302, "10135": 302, "10142": 302, "10166": 302, "on_defect": [302, 434, 502, 533, 691, 720, 722, 929], "10175": 302, "drop_log_ignor": [302, 341], "10182": 302, "10186": 302, "10185": 302, "9969": 302, "10019": 302, "10200": 302, "10255": 302, "cube": [302, 329, 864], "10202": 302, "9972": 302, "10206": 302, "widget": [302, 834, 837], "10220": 302, "10230": 302, "10249": 302, "10243": 302, "10212": 302, "10222": 302, "10183": 302, "10247": 302, "10297": 302, "map_surfac": [302, 834], "10299": 302, "10330": 302, "remove_dipol": [302, 834], "remove_forward": [302, 834], "10373": [302, 303], "10384": 302, "10417": 302, "10418": 302, "10408": 302, "subsurfac": 302, "10421": 302, "10429": 302, "eberlein": 302, "10431": 302, "rawmff": 302, "10304": 302, "10361": 302, "shift_jist": 302, "10356": 302, "eog_ch": [302, 323, 562], "10093": 302, "adina": 302, "wagner": 302, "loadtxt": 302, "10189": 302, "zamberlan": 302, "10007": 302, "nikolai": [302, 308], "chapochnikov": [302, 308], "use_opengl": [302, 331, 332, 550, 551, 636, 866, 883, 889], "9957": 302, "9966": 302, "9998": 302, "9968": 302, "alphanumer": 302, "10002": 302, "9975": 302, "9980": 302, "9990": 302, "suboptim": 302, "9991": 302, "10004": 302, "9970": 302, "10021": 302, "roundtrip": [302, 336], "10040": 302, "10358": 302, "10047": 302, "10399": 302, "10073": 302, "10087": 302, "annotate_": 302, "meas_tim": 302, "10067": 302, "10118": 302, "10074": 302, "grant": [302, 309, 310, 322, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 614, 876], "10082": 302, "10112": 302, "10177": 302, "10127": 302, "10132": 302, "10095": 302, "10176": 302, "10210": 302, "10235": 302, "10267": 302, "unabl": [302, 310], "german": 302, "de_d": 302, "french": 302, "fr_fr": 302, "italian": 302, "it_it": 302, "10277": 302, "10292": 302, "10309": 302, "10265": 302, "10415": 302, "10289": 302, "10324": 302, "10342": 302, "10347": 302, "10313": 302, "10400": 302, "10335": 302, "10393": 302, "10392": 302, "10401": 302, "mne_qt_brows": [302, 303, 331, 332, 550, 551, 636, 866, 883, 889], "9960": 302, "10039": 302, "slash": [302, 319, 510], "10348": 302, "event_list": [302, 432], "10143": 302, "max_ori_out": 302, "10366": 302, "10323": 302, "tempita": 302, "10211": 302, "julia": 302, "guiomar": 302, "niso": 302, "gal\u00e1n": 302, "10974": 303, "ilia": 303, "machaira": 303, "10942": 303, "tziona": 303, "nessaiv": 303, "10922": 303, "mingjian": 303, "he": 303, "10736": 303, "jordan": 303, "drew": 303, "10632": 303, "courtemanch": 303, "ahdr": [303, 689], "10515": 303, "alessandro": 303, "tonin": 303, "10555": 303, "powel": 303, "10627": 303, "10615": 303, "overview_mod": [303, 331, 332, 550, 551, 636, 866, 883, 889], "10501": 303, "crop_by_annot": [303, 550, 551, 955], "10460": 303, "10544": 303, "10720": 303, "10464": 303, "10699": 303, "10534": 303, "head_sourc": [303, 329, 594, 864], "10568": 303, "joblib": [303, 312, 323, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 594, 597, 598, 609, 610, 619, 620, 641, 648, 649, 726, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 836, 868, 871, 890], "parallel_backend": 303, "10567": 303, "10533": 303, "10557": 303, "10591": 303, "10571": 303, "10587": 303, "hemoglobin": [303, 678], "10125": 303, "10606": 303, "10610": 303, "10614": 303, "10611": 303, "10633": 303, "get_view": [303, 308, 834], "10661": 303, "10668": 303, "10681": 303, "timeformat": 303, "yyyi": 303, "dd": [303, 512, 563], "_convert_tim": 303, "10674": 303, "10694": 303, "10572": 303, "10734": 303, "10284": 303, "10749": 303, "10788": 303, "avr": [303, 699], "mul": [303, 699], "10892": 303, "10940": 303, "vref": 303, "10823": 303, "10979": 303, "_project_onto_surfac": 303, "return_nn": 303, "10930": 303, "10927": 303, "nasri": 303, "hypnodyn": 303, "zmax": 303, "10754": 303, "frederik": 303, "weber": 303, "10718": 303, "gemein": [303, 304], "t1t2": 303, "10639": 303, "toivonen": 303, "10217": 303, "wang": 303, "10517": 303, "10470": 303, "dold": 303, "10485": 303, "10487": 303, "10500": 303, "10491": 303, "10662": 303, "10866": 303, "10957": 303, "10513": 303, "10493": 303, "10504": 303, "10705": 303, "10521": 303, "10547": 303, "10543": 303, "10912": 303, "10560": 303, "10619": 303, "10618": 303, "10638": 303, "10664": 303, "honor": 303, "10686": 303, "10685": 303, "10688": 303, "8754": 303, "10703": 303, "10730": 303, "10753": 303, "10765": 303, "po6": 303, "youtub": [303, 312], "10778": 303, "10802": 303, "10471": 303, "orig_format": [303, 549, 550, 551], "10851": 303, "10898": 303, "10990": 303, "10968": 303, "10936": 303, "10963": 303, "10978": 303, "10531": 303, "bilinear": 303, "smoother": [303, 320], "set_interpol": 303, "10617": 303, "flash5": [303, 320, 323, 371, 375], "mef05_": [303, 323, 371], "mef30_": [303, 323, 371], "10715": 303, "10950": 303, "10925": 303, "10945": 303, "adelin": 303, "fecker": 303, "ciok": 303, "archit": 303, "singhal": 303, "ashlei": 303, "beaslei": 303, "hamid": 303, "maymandi": 303, "naveen": 303, "srinivasan": 303, "sondr": 303, "foslien": 303, "11073": 304, "10656": 304, "gerster": [304, 305, 306], "10784": 304, "11011": 304, "11006": 304, "6233": 304, "10986": 304, "11048": 304, "8639": 304, "11083": 304, "redund": [304, 320, 423], "11051": 304, "starting_affin": [304, 824], "11020": 304, "11075": 304, "galvan": [304, 320, 331, 332, 333, 334, 550, 551, 633, 784, 786, 787, 788, 789, 790], "electroderm": 304, "11090": 304, "11108": 304, "10980": 304, "11099": 304, "11077": 304, "11094": 304, "11095": 304, "probe": [304, 575], "11186": 304, "11116": 304, "11147": 304, "11150": 304, "unscal": [304, 305, 544], "11185": 304, "utf8": [304, 559, 566, 689], "11154": 304, "11141": 304, "on_baselin": [304, 636, 880], "11232": 304, "11159": 304, "11196": 304, "unlabel": 304, "11074": 304, "sebastiaan": 304, "mathot": 304, "11072": 304, "chetan": 304, "gohil": 304, "clone": [304, 309, 486, 493, 941], "11004": 304, "carlstr\u00f6m": 304, "schad": 304, "sy": [304, 783, 946], "11190": 304, "wetzel": 304, "11019": 304, "sena": 304, "subject_id": [304, 834], "11049": 304, "11084": 304, "11145": 304, "11182": 304, "11040": 304, "11171": 304, "11181": 304, "11193": 304, "11102": 304, "11081": 304, "11191": 304, "6870": 304, "11197": 304, "11212": 304, "11203": 304, "11201": 304, "h\u00fcseyin": 304, "orkun": 304, "elma": 304, "futurewarn": [304, 309, 830], "deprecationwarn": 304, "11123": 304, "11050": 304, "show_toolbar": 304, "10184": 304, "11180": 304, "11046": 304, "welzel": 304, "luzpaz": 304, "11333": 305, "tooma": [305, 306], "anij\u00e4rv": [305, 306], "11237": 305, "11236": 305, "11241": 305, "11357": 305, "webp": [305, 341], "11359": 305, "11096": 305, "11353": 305, "montage_unit": [305, 308, 567, 684, 695], "11283": 305, "11329": 305, "edflib": [305, 516, 550, 551], "11375": 305, "hennei": [305, 306], "11310": 305, "santeri": [305, 306, 308], "ruuskanen": [305, 306, 308], "11289": 305, "mauricio": [305, 306], "cesped": [305, 306], "tenorio": 305, "11235": 305, "hasegan": [305, 306], "11245": 305, "dinara": [305, 306], "issagaliyeva": [305, 306], "jennif": [305, 306], "behnk": [305, 306], "hakimeh": [305, 306], "aslsardroud": [305, 306], "pavel": [305, 306], "navratil": [305, 306], "ear_left": 305, "ear_right": 305, "11255": 305, "11263": 305, "ortiz": 305, "11351": 305, "enzo": [305, 306], "altamiranda": [305, 306], "reject_": 305, "11244": 305, "11303": 305, "11290": 305, "11248": 305, "11258": 305, "outli": 305, "11298": 305, "11345": 305, "11311": 305, "11300": 305, "11340": 305, "11318": 305, "11346": 305, "11344": 305, "11347": 305, "11293": 305, "11322": 305, "11369": 305, "11361": 305, "nowadai": 305, "interp_from": 305, "interp_kind": 305, "sym": [305, 798], "11371": 305, "brayet": [305, 306], "omer": [305, 306], "shubi": [305, 306], "11631": 306, "jacob": [306, 307, 308], "woessner": [306, 307, 308], "11469": 306, "sawradip": 306, "saha": 306, "11458": 306, "binn": 306, "ch_group": [306, 331, 332, 333, 334, 336, 550, 551, 892], "11465": 306, "hyonyoung": 306, "shin": 306, "fil": [306, 312, 317, 320, 573], "11366": 306, "11536": 306, "11470": 306, "ebert": 306, "11078": 306, "barth\u00e9lemi": 306, "11397": 306, "11401": 306, "11407": 306, "11166": 306, "11388": 306, "11556": 306, "11419": 306, "11430": 306, "11440": 306, "11436": 306, "microelectrod": 306, "11567": 306, "imwarp": 306, "diffeomorphicmap": [306, 343, 668, 822, 823, 824], "transform_point": 306, "11572": 306, "11614": 306, "10554": 306, "11152": 306, "11632": 306, "on_unit_chang": [306, 331, 332, 333, 334, 336, 550, 551], "11668": 306, "11679": 306, "qt6": 306, "aa_usehighdpipixmap": 306, "11662": 306, "florin": 306, "gave": [306, 319], "11479": 306, "stone": 306, "setuptool": 306, "11454": 306, "arn": 306, "pelzer": 306, "11666": 306, "timur": 306, "sokhin": 306, "11457": 306, "zvi": 306, "baratz": 306, "11505": 306, "fock": 306, "sanit": 306, "11399": 306, "splash": [306, 308, 331, 332, 550, 551, 636, 866, 883, 889], "11398": 306, "lta": [306, 707], "11402": 306, "11421": 306, "11427": 306, "11441": 306, "11450": 306, "11489": 306, "11473": 306, "11499": 306, "dialog": [306, 323, 331, 332, 333, 334, 336, 550, 551, 889, 892, 948], "11409": 306, "11537": 306, "11562": 306, "11563": 306, "11521": 306, "11569": 306, "11502": 306, "11607": 306, "11612": 306, "11664": 306, "11623": 306, "11654": 306, "11683": 306, "11616": 306, "aligned_ct": 306, "base_imag": [306, 666], "unalign": 306, "pick_channels_evok": 306, "11665": 306, "dimitri": [306, 308], "orfano": [306, 308], "giulio": 306, "nsx": [307, 582], "blackrock": [307, 582], "microsystem": [307, 582], "11432": 307, "proloi": 307, "11720": 307, "gennadii": 307, "belonosov": 307, "11736": 307, "quotat": 307, "11718": 307, "11744": 307, "diptyajit": 307, "11719": 307, "11746": 307, "11740": 307, "11770": 307, "show_byt": [307, 585], "11800": 307, "11796": 307, "11830": 307, "11839": 307, "11841": 307, "flash5_reg": [307, 320], "11842": 307, "hamza": [307, 308], "abdelhedi": [307, 308], "11786": 307, "louviot": 307, "codec": [307, 567, 689, 695, 834], "11773": 307, "yipe": 307, "zuo": 307, "11704": 307, "earl": 307, "richardson": 307, "11575": 307, "calder": 307, "indexerror": 307, "11808": 307, "11804": 307, "tse": 307, "upsampl": [307, 346, 347, 517, 523, 559, 566], "11549": 307, "unnecessari": [307, 316, 318, 542, 559, 566, 574], "11828": 307, "11730": 307, "11694": 307, "pyside6": 307, "11721": 307, "11853": 307, "hang": 307, "_mpl_figur": 307, "spyder": [307, 309, 936, 941, 945, 946], "11696": 307, "11698": 307, "11857": 307, "gap_descript": 307, "11733": 307, "11754": 307, "11755": 307, "11748": 307, "11846": 307, "fit_intercept_": 307, "fit_intercept": [307, 489, 495], "sl": 307, "11852": 307, "11822": 307, "11778": 307, "11766": 307, "11862": 307, "11713": 307, "11445": 307, "hint": [308, 331, 332, 333, 334, 550, 551, 867], "12236": 308, "defusedxml": 308, "12264": 308, "neuralynx": [308, 578], "11969": 308, "kristijan": 308, "armeni": 308, "ivan": 308, "skelin": 308, "11884": 308, "11685": 308, "11891": 308, "anchor": 308, "incrementor": 308, "11890": 308, "complement": [308, 320], "11918": 308, "11769": 308, "cumul": [308, 424, 425, 426, 636], "11919": 308, "12001": 308, "11926": 308, "11306": 308, "12067": 308, "11925": 308, "11951": 308, "11803": 308, "12036": 308, "11964": 308, "12098": 308, "12181": 308, "check_vers": [308, 456, 783], "12146": 308, "12142": 308, "12050": 308, "12103": 308, "11942": 308, "uievent": [308, 916], "12057": 308, "12105": 308, "12118": 308, "12026": 308, "12160": 308, "12185": 308, "12194": 308, "12168": 308, "aagaard": 308, "unsync": 308, "11950": 308, "qian": 308, "chu": 308, "11958": 308, "gilbert": 308, "test_adjacency_matches_ft": 308, "test_fetch_uncompressed_fil": 308, "12041": 308, "maksym": 308, "balatsko": 308, "11608": 308, "zubarev": 308, "12121": 308, "mainar": 308, "11876": 308, "11896": 308, "12154": 308, "11912": 308, "12186": 308, "11934": 308, "compliant": [308, 312, 765], "11915": 308, "11927": 308, "trame": [308, 312], "11956": 308, "11910": 308, "11946": 308, "12155": 308, "12167": 308, "11952": 308, "12145": 308, "glitch": 308, "12038": 308, "12147": 308, "12164": 308, "11960": 308, "12017": 308, "12044": 308, "12004": 308, "apply_offset": [308, 570], "12003": 308, "prune": 308, "12010": 308, "12025": 308, "12080": 308, "12019": 308, "12078": 308, "12113": 308, "12122": 308, "12165": 308, "12198": 308, "12192": 308, "12189": 308, "12205": 308, "apply_maxfilt": 308, "11938": 308, "pickl": 308, "savetxt": 308, "delimit": [308, 325], "newlin": 308, "11937": 308, "wherev": [308, 678], "11907": 308, "reset_camera": [308, 834, 904], "scrollabl": [308, 542], "head_insid": [308, 542], "guess_mri_subject": [308, 542], "advanced_rend": [308, 542], "andi": 308, "gonzalo": 308, "reina": 308, "sustain": [309, 310], "volunt": 309, "welcom": 309, "anyon": [309, 310], "abid": 309, "forum": [309, 311, 317, 936, 937, 941, 942, 945, 948, 949], "fastest": [309, 948], "upstream": 309, "usernam": [309, 456], "desktop": 309, "appreci": 309, "sudo": [309, 943, 948], "apt": [309, 943, 948], "dmg": [309, 948], "atlassian": 309, "macport": [309, 948], "homebrew": [309, 948], "bash": [309, 323, 942, 948, 951], "subsystem": [309, 336], "yourdomain": 309, "sooner": 309, "emac": 309, "vim": 309, "nano": 309, "subl": 309, "makefil": 309, "newest": 309, "guil": 309, "w32": 309, "ezwinport": 309, "path_to_git": 309, "mingw64": 309, "mnedev": 309, "path_to_anaconda": 309, "miniconda": [309, 947], "team": [309, 310], "curl": 309, "githubusercont": 309, "yml": 309, "env": [309, 445, 531, 941, 942, 946, 950], "github_usernam": 309, "insert_your_actual_github_username_her": 309, "install_loc": 309, "opt": [309, 946, 948], "blame": 309, "ignorerevsfil": 309, "rev": 309, "site_packag": 309, "graphviz": 309, "graphviz_dot": 309, "conda_prefix": 309, "optipng": 309, "unzip": [309, 456], "pytest": [309, 941], "traceback": [309, 942], "test_eyelink": 309, "url_of_remote_repo": 309, "nickname_of_remot": 309, "repo": [309, 310], "undoubtedli": 309, "checkout": 309, "colleagu": 309, "unstag": 309, "some_fil": 309, "some_new_fil": 309, "entireti": 309, "some_other_fil": 309, "enh": 309, "some_testing_fil": 309, "new_tutorial_fil": 309, "stuck": 309, "password": [309, 456], "secur": [309, 948], "authent": [309, 456], "secret": 309, "test_evok": 309, "python_refer": 309, "rst": 309, "my_funct": 309, "my_new_funct": 309, "old_param": 309, "new_param": 309, "my_other_funct": 309, "depr_messag": 309, "changeset": 309, "devel": 309, "subsect": 309, "bugfix": [309, 950], "happi": 309, "credit": 309, "gh": 309, "newcontrib": 309, "firstnam": 309, "lastnam": 309, "_your": 309, "oxford": [309, 522], "test_topo": 309, "pep": 309, "ruff": 309, "hook": 309, "ins": 309, "linter": 309, "snake_cas": 309, "nsampl": 309, "diverg": [309, 338, 339, 342, 345, 346, 347, 834, 855, 894, 899, 900], "sphinxcontrib": 309, "bibtex": [309, 314], "grep": [309, 941, 950], "bibliograph": 309, "bib": 309, "singleauthor2019": 309, "authoroneauthortwo2020": 309, "firstauthoretal2021a": 309, "firstauthoretal2021b": 309, "param_nam": 309, "test_docstring_paramet": 309, "mod": 309, "attr": [309, 501], "intersphinx": 309, "Their": [309, 660], "inventori": 309, "sphobjinv": 309, "dump": 309, "ext": 309, "backtick": [309, 936], "idiom": [309, 331, 332, 333, 334, 550, 551, 890], "nest": [309, 336, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 637, 831], "exit": [309, 323, 337, 542, 625], "pdb": 309, "ultraslowtest": 309, "test_io_evok": 309, "restructuredtext": 309, "imit": 309, "noplot": 309, "regex_to_select_my_tutori": 309, "unrel": 309, "mortem": 309, "pm": 309, "everyon": 309, "scientist": [309, 311, 946], "spare": 309, "streamlin": 309, "collabor": [309, 310, 949], "fruit": 309, "road": 309, "someon": 309, "occasion": [309, 317], "cosmet": 309, "whats_new": 309, "draft": 309, "wip": 309, "mrg": 309, "notifi": [309, 729], "sty": 309, "azp": 309, "azur": 309, "convei": 309, "sg_execution_tim": 309, "sg_api_usag": 309, "exemplifi": 309, "formal": 310, "extraordinari": 310, "profit": 310, "entiti": 310, "openli": 310, "affili": 310, "discours": 310, "foundat": [310, 322], "behalf": 310, "strive": [310, 814, 817], "barrier": 310, "leadership": 310, "neutral": 310, "tradition": [310, 320], "reward": 310, "benevol": 310, "dictat": 310, "defer": 310, "vote": 310, "deadlock": 310, "fork": 310, "disagre": 310, "deleg": 310, "appoint": 310, "successor": 310, "faith": 310, "director": 310, "quantiti": [310, 320, 434, 669], "year": [310, 314, 322, 336, 475], "everydai": 310, "peer": 310, "privileg": 310, "scope": 310, "strateg": 310, "mechan": [310, 331, 332], "nomin": [310, 336], "willing": 310, "capac": 310, "outreach": 310, "deliber": 310, "divers": 310, "viewpoint": 310, "talent": 310, "sole": [310, 317, 639], "soon": [310, 317, 320, 834], "grace": 310, "retir": 310, "eject": 310, "deem": 310, "harm": 310, "financi": 310, "employ": 310, "proprietari": [310, 941], "disclos": 310, "recus": 310, "themself": 310, "sparingli": 310, "privaci": [310, 948], "apach": 310, "veto": 310, "rational": 310, "opinion": 310, "regist": [310, 319, 320, 323, 375, 668, 822, 823, 824], "suffic": 310, "usurp": 310, "duti": [310, 322], "likewis": [310, 320, 331, 332, 788], "countri": 310, "gift": 310, "partnership": 310, "approv": 310, "employe": [310, 322], "commenc": 310, "laps": 310, "resum": [310, 333, 334], "pursu": 310, "monei": 310, "donor": 310, "umbrella": 310, "trademark": 310, "invit": 310, "waiv": 310, "troubleshoot": [311, 937, 942], "cluster_based_statist": 312, "ob": 312, "cluster_alpha": 312, "wilkinson": 312, "patsi": 312, "dmatric": 312, "clusterstat": 312, "4859": 312, "facto": 312, "mint": 312, "recruit": 312, "8221": 312, "11275": 312, "11276": 312, "11579": 312, "12179": 312, "vet": [312, 671], "6784": 312, "crossspectrum": 312, "multitaperspectrum": 312, "6290": 312, "7671": 312, "8026": 312, "8724": 312, "9045": 312, "pr": 312, "6609": 312, "6629": 312, "6672": 312, "6673": 312, "8397": 312, "8892": 312, "ipyvtklink": [312, 942], "7162": 312, "addon": 312, "openneuro": 312, "fund": 312, "mnefun": 312, "pde": 312, "swig": 312, "ambit": 312, "cleanup": [312, 834], "useless": 312, "cibuildwheel": 312, "deploy": 312, "pypi": [312, 947], "forg": [312, 941, 942, 946], "nutmegtrip": 312, "view_vol_stc": 312, "cloud": 312, "dask": 312, "czi": 312, "eoss2": [312, 322], "7751": 312, "docker": 312, "2024": 313, "sidebar": 314, "592483": 314, "gramfortetal2013a": 314, "gramfortetal2014": 314, "bibliographi": 314, "scholar": 315, "2040": 315, "meg2443": 316, "essenti": [316, 320, 344, 457], "vanish": 316, "advers": 316, "preliminari": 316, "implicitli": [316, 320, 427, 495, 671], "stamp": 316, "mm2": 316, "ico5": 316, "tessel": 316, "prerequisit": 316, "bulletproof": 316, "feasibl": 316, "sep": 316, "homog": [316, 323, 592], "bem_sol": 316, "reestablish": 316, "corregistr": 316, "charg": 316, "photograph": 316, "uninterest": 316, "epilept": 316, "infrequ": 316, "hesit": [317, 936], "hm": [317, 951], "athinoula": [317, 322, 954], "martino": [317, 322, 954], "siemen": [317, 320], "sonata": 317, "mprage": [317, 320, 936], "interspers": 317, "lv": 317, "audvis_raw": 317, "auvi": 317, "agre": 317, "aalto": [317, 322, 954], "macquari": [317, 322, 954], "tap": [317, 323, 648, 649, 661, 662], "khz": 317, "richli": 317, "sydnei": 317, "australia": 317, "hospit": [317, 322, 954], "ilab": 317, "washington": [317, 322, 954], "9999": 317, "msr": 317, "retrospect": 317, "satisfactori": 317, "chin": 317, "respir": [317, 320], "hypnogram": 317, "rechtschaffen": 317, "kale": 317, "erlangen": 317, "germani": 317, "shaft": 317, "pend": 317, "craft": 317, "elicit": [317, 333, 550, 572, 701], "lrp": 317, "ern": 317, "pupillari": 317, "reflex": 317, "unrecogniz": 317, "neuroscientist": 318, "keystrok": 318, "vocabulari": [319, 321], "spindl": 319, "acronym": [319, 321], "definion": 319, "m\u00b2": [319, 337], "\u00b5m": 319, "fd": [319, 441], "od": 319, "dealt": 319, "synapt": 319, "intracellular": 319, "pyramid": [319, 320], "perpendicularli": 319, "peculiar": 319, "encapsul": [319, 320], "cartoon": 319, "pependicular": 319, "laser": 319, "ga": 319, "rubidium": 319, "rear": [319, 834], "superconduct": 319, "quantum": 319, "scaleogram": 319, "uncorrel": 319, "irrespect": [320, 326, 331, 332, 434, 502, 533, 691, 720, 722, 929], "mole": 320, "unitless": [320, 331, 332, 333, 334, 550, 551], "sensibl": 320, "femtotesla": 320, "typecast": 320, "electrocardiographi": 320, "electromyographi": 320, "monitor": [320, 414, 656, 658], "excit": [320, 331, 332, 333, 334, 336, 550, 551, 633, 784, 786, 787, 788, 789, 790], "celsiu": 320, "nxe": [320, 569], "hpt": [320, 403], "compumed": [320, 400, 563], "fastscan": [320, 407, 576], "channels_3_and_4": 320, "boldsymbol": 320, "r_i": [320, 741, 746], "c_0": 320, "g_": 320, "infti": 320, "2n": [320, 758, 759, 760], "legendr": [320, 331, 332, 333, 334, 550, 551, 594, 645], "r_j": 320, "t_d": 320, "underbrac": 320, "b_": 320, "b_n": 320, "dotso": 320, "uc_n": 320, "constitut": 320, "orthonorm": 320, "c_e": 320, "perp": 320, "uu": 320, "approx": [320, 606], "eigenvector": [320, 328], "segonn": 320, "mri_watersh": [320, 323, 377, 936], "_brain_surfac": 320, "_inner_skull_surfac": 320, "_outer_skull_surfac": 320, "_outer_skin_surfac": 320, "availablili": 320, "echo": [320, 323, 371, 942, 948], "fov": 320, "dcm2niix": 320, "mne_organize_dicom": 320, "flash05": 320, "fat32": 320, "noflash30": [320, 323], "mef": [320, 371], "unwarp": [320, 323, 371], "grad_unwarp": [320, 323, 371], "parameter_map": [320, 323, 375], "mri_ms_fitparm": 320, "mri_synthes": 320, "fsl_rigid_regist": 320, "cor": 320, "mri_make_bem_surfac": 320, "tringul": 320, "t_x": 320, "auricular": [320, 403], "ti": 320, "feed": [320, 651], "mm3": 320, "hardli": 320, "mnitalairach": 320, "mni305": 320, "y_2": 320, "z_2": 320, "y_1": 320, "z_1": 320, "x_0": 320, "y_0": 320, "z_0": 320, "x_k": 320, "y_k": 320, "z_k": 320, "jk": 320, "0485": 320, "9189": 320, "coordinatesystem": [320, 436], "t_1": 320, "s_1": 320, "s_n": 320, "t_2": 320, "filessepar": 320, "t_3": 320, "mghformat": 320, "t_4": 320, "hardcod": 320, "periauricular": [320, 393], "idiosyncrasi": 320, "conceiv": 320, "s_k": [320, 342], "s_p": 320, "50mm": 320, "r_0": 320, "e_x": 320, "e_i": 320, "e_z": 320, "r_c": 320, "r_d": 320, "0d": 320, "n_k": 320, "w_": 320, "kp": 320, "pickup": [320, 504, 647, 660, 671], "sixteen": 320, "centerpoint": 320, "mne_list_coil_def": 320, "3012": 320, "8mm": 320, "3013": 320, "3022": [320, 388, 550], "3023": [320, 388, 550], "3024": [320, 388, 550], "4001": 320, "wh": 320, "3600": 320, "4003": 320, "4004": 320, "4005": 320, "5001": 320, "5002": 320, "5004": 320, "6001": 320, "pound": [320, 403], "nx": 320, "ny": 320, "csf": [320, 599], "r_1": 320, "dotsc": 320, "r_m": 320, "mu_1": 320, "mu_m": 320, "int_": 320, "v_": 320, "ly": 320, "ensu": 320, "posteriori": 320, "viabl": 320, "mantl": [320, 614], "3p": 320, "unconstrain": 320, "mx": 320, "arriv": 320, "min_": [320, 744], "bigl": 320, "bigr": 320, "u_c": 320, "lambda_c": 320, "grg": 320, "possess": 320, "sum_k": [320, 342], "varepsilon_k": 320, "sigma_k": 320, "rout": 320, "superscript": 320, "gamma_k": [320, 611], "lambda_k": [320, 611], "v_k": 320, "w_k": 320, "propto": 320, "dimensionless": 320, "tendenc": 320, "2_k": 320, "g_i": 320, "u_": 320, "lambda_": 320, "_i": 320, "noiseless": 320, "misfit": 320, "pi_k": 320, "recolor": 320, "eigenfield": 320, "n_d": 320, "a_d": 320, "sigma_d": [320, 660], "postsynapt": 320, "microscop": 320, "rigidli": 320, "floc": 320, "lie": [320, 337], "thereaft": 320, "vloc": 320, "1p": 320, "2p": 320, "l_": 320, "eff": 320, "w_i": 320, "x_i": 320, "c_y": 320, "l_i": 320, "w_1": 320, "w_2": 320, "l_1": 320, "l_2": 320, "supposedli": 320, "x_j": 320, "t_j": 320, "biject": 320, "smudg": 320, "n_j": 320, "prod_": 320, "kindli": 321, "function_nam": 321, "health": 322, "r01": 322, "eb009048": 322, "eb006385": 322, "hd040712": 322, "ns044319": 322, "ns037462": 322, "ns104585": 322, "p41": 322, "eb015896": 322, "rr014075": 322, "0958669": 322, "1042134": 322, "council": 322, "ystg": 322, "263584": 322, "676943": 322, "depart": 322, "fg02": 322, "99er62764": 322, "agenc": 322, "national": 322, "recherch": [322, 954], "neuc": 322, "0002": 322, "idex": 322, "saclai": 322, "amazon": 322, "zuckerberg": 322, "eoss4": 322, "yliopiston": [322, 954], "perustieteiden": [322, 954], "korkeakoulu": [322, 954], "ae": [322, 954], "studio": [322, 945, 946, 954], "philadelphia": [322, 954], "donder": [322, 954], "behaviour": [322, 325, 581, 584, 954], "radboud": [322, 954], "school": [322, 954], "fondat": [322, 954], "campu": [322, 954], "biotech": [322, 954], "geneva": [322, 954], "informatiqu": [322, 954], "automatiqu": [322, 954], "franzen": [322, 954], "universit\u00e4t": [322, 954], "graz": [322, 954], "massachusett": [322, 954], "planck": [322, 954], "f\u00fcr": [322, 954], "bildungsforschung": [322, 954], "uniwersytet": [322, 954], "humanistycznospo\u0142eczni": [322, 954], "aarhu": [322, 954], "universitet": [322, 954], "commissariat": [322, 954], "\u00e0": [322, 954], "\u00e9nergi": [322, 954], "atomiqu": [322, 954], "aux": [322, 954], "forschungszentrum": [322, 954], "j\u00fclich": [322, 954], "du": [322, 954], "cerveau": [322, 954], "moell": [322, 954], "\u00e9pini\u00e8r": [322, 954], "sant\u00e9": [322, 954], "m\u00e9dical": [322, 954], "technisch": [322, 954], "t\u00e9l\u00e9com": [322, 954], "outfil": 323, "anon": 323, "n_dai": 323, "daysback": [323, 331, 332, 333, 334, 336, 550, 551, 552], "resav": 323, "navigaton": 323, "show_opt": [323, 550, 551, 889], "allowmaxshield": 323, "clamp": [323, 550, 551, 834, 889], "head_shap": 323, "out_fnam": 323, "rotation_x": [323, 562], "compensatori": 323, "deg": [323, 659], "ecg_ch": [323, 562], "e31": [323, 562], "e63": [323, 562], "my_raw": 323, "quiet": [323, 331, 332, 788], "mne_process_raw": 323, "in_raw": 323, "clean_raw": 323, "file_a": 323, "file_b": 323, "test_raw_sss": 323, "filters": 323, "rej": 323, "rej_grad": 323, "rej_mag": 323, "rej_eeg": 323, "rej_eog": 323, "bad_fnam": 323, "raw_event_fnam": 323, "qrsthr": 323, "qrs_threshold": [323, 648, 661, 664], "eog_l_freq": [323, 649], "eog_h_freq": [323, 649], "head_opac": [323, 542], "multiecho": [323, 371, 375], "noconvert": 323, "flash_path": 323, "mef05": 323, "mef30": 323, "spin": [323, 375], "kt2fiff": 323, "mkheadsurf": [323, 376], "_sss": 323, "origin_out": 323, "autobad": 323, "maxst": 323, "buflen": 323, "st_buflen": 323, "st_corr": 323, "mv_tran": 323, "in_fnam": 323, "movecomp": 323, "mv_hp": 323, "hpistep": 323, "mv_hpistep": 323, "hpisubt": 323, "mv_hpisubt": 323, "nohpicon": 323, "linefreq": 323, "nooverwrit": 323, "mx_arg": 323, "sof": 323, "bmin": 323, "TO": 323, "brainc": 323, "skullc": 323, "scalpc": 323, "7mm": 323, "gcaatla": [323, 377, 936], "brain_atla": [323, 377], "preflood": [323, 377, 936], "fname2": 323, "reaverag": 324, "category_nam": 324, "acq_dict": 324, "subav": 324, "subaverag": 324, "__len__": [324, 325, 327, 328, 329, 331, 332, 336, 337, 341, 355, 370, 550, 551, 602, 656, 785, 786, 787, 788, 821], "n_cat": 324, "delayed_lookup": 324, "acqp": 324, "mne_stim_channel_2": [324, 524, 525], "uint16": [324, 524], "sti016": [324, 524], "32768": [324, 482, 524], "mne_fix_stim14": [324, 524], "asynchroni": 324, "conds_data": 324, "n_epochs_out": 324, "n_annot": 325, "iso8601": 325, "bad_flux": 325, "bad_nois": 325, "meg0111": [325, 326, 331, 332, 333, 334, 336, 378, 395, 397, 428, 439, 485, 499, 504, 550, 551, 635, 636, 638, 652, 653, 654, 663, 667, 677, 679, 686, 718, 752, 770, 779, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 817, 860, 866, 867, 870, 872, 873, 880, 887, 890], "meg2563": 325, "meg1443": 325, "n_blink": 325, "yy": [325, 563], "______________": 325, "_________": 325, "anot": 325, "___________________": 325, "o_________": 325, "________________________": 325, "o______________": 325, "o________________________": 325, "__add__": [325, 327, 328, 337, 338, 339, 342, 344, 345, 346, 347, 380, 784], "concatenc": 325, "with_ch_nam": 325, "__iter__": [325, 328, 331, 332, 336, 355, 370, 602, 656, 734, 786, 787, 788, 821], "array_lik": [325, 326, 328, 329, 331, 332, 333, 334, 336, 340, 341, 350, 378, 380, 395, 428, 438, 439, 483, 485, 490, 493, 496, 498, 499, 500, 504, 510, 548, 550, 551, 562, 576, 594, 599, 635, 636, 637, 638, 641, 645, 646, 647, 650, 651, 652, 653, 654, 656, 657, 658, 660, 663, 667, 671, 677, 679, 685, 686, 721, 722, 738, 752, 762, 763, 766, 768, 769, 770, 778, 779, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 802, 812, 816, 817, 834, 840, 852, 853, 860, 866, 867, 868, 870, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 884, 886, 887, 888, 890, 891, 892, 896, 898], "676071": 325, "shortstimulu": 325, "longstimulu": 325, "tabular": [325, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 784, 786, 787, 788, 789, 790], "preload_at_end": 326, "raw_sfreq": [326, 332], "abstract": [326, 912], "meg2623": [326, 331, 332, 333, 334, 336, 378, 395, 397, 428, 439, 485, 499, 504, 550, 551, 635, 636, 638, 652, 653, 654, 663, 667, 677, 679, 686, 752, 770, 779, 784, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 817, 860, 866, 867, 870, 872, 873, 880, 887, 890], "ptp": [326, 331, 332, 426, 636, 638, 653], "40e": [326, 331, 332, 428, 636, 653, 654, 770], "unproject": [326, 331, 332, 595, 694], "postpon": [326, 331, 332, 595, 694], "coincid": [326, 331], "my_epoch": 326, "compensation_grad": [326, 331, 332, 333, 334, 336, 549, 550, 551, 636, 784, 786, 787, 788, 789, 790], "__sub__": [327, 337, 338, 339, 342, 345, 346, 347, 784], "eig": 328, "eigvec": 328, "__contains__": [328, 331, 332, 333, 334, 336, 355, 370, 550, 551, 602, 636, 656, 784, 786, 787, 788, 789, 790, 821], "as_diag": [328, 955], "diagnois": 328, "fromkei": [328, 336, 355, 370, 602, 656, 821], "fig_svd": [328, 861], "1e13": [328, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 423, 427, 428, 483, 490, 492, 550, 551, 867, 870, 872, 874, 875, 897], "1e15": [328, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 423, 427, 428, 483, 490, 492, 550, 551, 867, 870, 872, 874, 875, 897], "pluss": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "markeredgecolor": [328, 331, 332, 333, 334, 483, 490, 550, 551, 635, 784, 786, 787, 789, 790, 853, 868, 875, 891, 896, 898], "mask_po": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "cloughtocher2dinterpol": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "linearndinterpol": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "encompass": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 651, 784, 786, 787, 789, 790, 853, 868, 875, 879, 888, 891, 896, 898], "rightmost": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 868, 875, 879, 888, 891, 896], "mini": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 635, 636, 784, 786, 787, 789, 790, 868, 875, 879, 888, 891, 896], "unrepresent": [328, 336, 355, 370, 602, 656, 821], "popitem": [328, 336, 355, 370, 602, 656, 821], "lifo": [328, 336, 355, 370, 602, 656, 821], "setdefault": [328, 336, 355, 370, 602, 656, 821], "khi2": 329, "longitudin": 329, "qlong": 329, "qtran": 329, "\u03c7": 329, "plot_amplitud": [329, 955], "show_al": [329, 864], "highlight_color": [329, 864], "mri_rot": [329, 864], "600x600": [329, 852, 864], "use_round": [329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 512, 550, 551, 784, 788], "pos_mni": 329, "n_po": [329, 411, 413, 543, 544, 878], "subdirectori": [329, 535, 834], "aspect_kind": 330, "id_numb": 331, "event_id_1": 331, "event_id_2": 331, "new_id_numb": 331, "programmat": 331, "lost": [331, 332, 333, 334, 513, 514, 515, 516, 550, 551, 941], "no_data": [331, 788], "equalized_count": [331, 788], "audio_left": [331, 332, 788], "name_1": [331, 332, 788], "name_2": [331, 332, 788], "eval": [331, 332, 788], "col_a": [331, 332, 788], "col_b": [331, 332, 788], "add_annotations_to_metadata": [331, 332, 955], "annot_onset": [331, 332], "annot_dur": [331, 332], "annot_descript": [331, 332], "add_list": [331, 332, 333, 334, 550, 551, 784, 786, 787, 788, 789, 790], "januari": [331, 332, 333, 334, 336, 550, 551, 552], "1\u02e2\u1d57": [331, 332, 333, 334, 336, 550, 551, 552], "his_id": [331, 332, 333, 334, 336, 550, 551, 552], "parallel_config": [331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 594, 597, 598, 609, 610, 619, 620, 641, 648, 649, 732, 733, 735, 736, 737, 749, 771, 772, 773, 774, 775, 786, 789, 791, 792, 793, 794, 795, 796, 804, 805, 813, 814, 815, 816, 817, 836, 868, 871, 890], "workload": [331, 332, 333, 334, 550, 551], "x_a": [331, 332, 333, 334, 550, 551], "2u": [331, 332, 333, 334, 550, 551], "enevlop": [331, 332, 333, 334, 550, 551], "projs_a": [331, 332, 333, 334, 550, 551], "proj_a": [331, 332, 333, 334, 550, 551], "projs_b": [331, 332, 333, 334, 550, 551], "proj_b": [331, 332, 333, 334, 550, 551], "emphas": [331, 332, 333, 334], "trim_mean": [331, 332], "low_bia": [331, 332, 333, 334, 488, 550, 551, 609, 610, 786, 789, 793, 796, 798, 804, 868], "undrop": [331, 332], "timeout": [331, 332, 783], "lenient": [331, 332], "drop_log_stat": [331, 332], "perc": [331, 332], "mintim": [331, 332, 506], "seek": [331, 332, 491, 506], "nonspati": [331, 332], "cart_to_eeglab": [331, 332, 513, 516, 550, 551], "5500m": [331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "reflect_limit": [331, 332, 333, 334, 521, 522, 523, 550, 551], "savgol_filt": [331, 332, 333, 334, 550, 551], "get_annotations_per_epoch": [331, 332], "epoch_annot": [331, 332], "only_data_ch": [331, 332, 333, 334, 336, 550, 551, 636, 784, 786, 787, 788, 789, 790], "epoch_color": [331, 332, 866], "5th": [331, 332, 333, 334, 341, 550, 551, 866, 889], "1e2": [331, 332, 341, 550, 551, 866, 889], "20\u00b5v": [331, 332, 341, 550, 551, 866, 889], "disallow": [331, 332, 866], "ital": [331, 332, 333, 334, 550, 551, 866, 870, 874, 889], "processor": [331, 332, 456, 550, 551, 636, 866, 883, 889], "pyopengl": [331, 332, 550, 551, 636, 866, 883, 889], "stylesheet": [331, 332, 550, 551, 636, 834, 866, 883, 889], "qdarkstyl": [331, 332, 550, 551, 636, 834, 866, 883, 889], "darkdetect": [331, 332, 550, 551, 636, 834, 866, 883, 889], "startup": [331, 332, 550, 551, 636, 866, 883, 889], "mneqtbrows": [331, 332, 550, 551, 636, 866, 883, 889], "mpl": [331, 332, 338, 339, 342, 345, 346, 347, 550, 551, 834, 866, 889, 894, 899], "tkagg": [331, 332, 550, 551, 866, 889], "f11": [331, 332, 550, 551, 866, 889], "magic": [331, 332, 550, 551, 636, 866, 883, 889, 936, 941], "qt5": [331, 332, 550, 551, 636, 866, 883, 889, 946], "n_max_plot": [331, 332, 865], "good_epoch": [331, 332, 867], "area_alpha": [331, 332, 333, 334, 550, 551, 890], "line_alpha": [331, 332, 333, 334, 550, 551, 890], "asd": [331, 332, 333, 334, 550, 551, 890], "decibel": [331, 332, 333, 334, 342, 550, 551, 609, 786, 787, 789, 790, 868], "log\u2081\u2080": [331, 332, 333, 334, 550, 551, 769, 786, 787, 789, 790, 868], "n_ch_group": [331, 332, 333, 334, 336, 550, 551], "n_pick": [331, 332, 333, 334, 336, 550, 551, 686], "layout_scal": [331, 332, 333, 334, 784, 849, 874, 897], "fig_background": [331, 332, 333, 334, 784, 874, 897], "eeg061": [331, 332, 333, 334, 336, 380, 408, 550, 551, 719], "eeg161": [331, 332, 333, 334, 336, 380, 408, 550, 551, 719], "meaningless": [331, 332], "split_siz": [331, 332, 550, 551], "100mb": [331, 332, 550, 551], "schema": [331, 332, 550, 551], "fname_split": [331, 332, 550, 551], "bbac101d50176611136b": [331, 332, 333, 334, 550, 551], "setter": [331, 332, 550, 551], "eyetrack_po": [331, 332, 333, 334, 336, 550, 551], "eyetrack_pupil": [331, 332, 333, 334, 336, 550, 551], "channel_loc_alias": [331, 332, 333, 334, 336, 550, 551], "std_err": [331, 332], "1591": [331, 332], "juli": [331, 332], "rangeindex": [331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 784, 786, 787, 788, 789, 790], "timedeltaindex": [331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 784, 788], "__neg__": [333, 334, 338, 339, 342, 345, 346, 347], "negat": [333, 334, 338, 339, 342, 345, 346, 347], "evoked_neg": [333, 334], "prepend": [333, 334, 570], "unsort": [333, 334, 870], "obscur": [333, 334, 870], "multiax": [333, 334, 870], "t_start": [333, 334, 870], "t_end": [333, 334, 870], "surf_map": [333, 334, 594, 836, 871], "n_contour": [333, 334, 836, 871], "show_dens": [333, 334, 836, 871], "interp1d": [333, 334, 834, 836, 871], "slinear": [333, 334, 834, 836, 871], "quadrat": [333, 334, 834, 836, 871], "turntabl": [333, 334, 542, 834, 836, 852, 871], "unintent": [333, 334, 542, 836, 852, 871], "mask_cmap": [333, 334, 784, 872], "mask_alpha": [333, 334, 784, 872], "do_mask": [333, 334, 872], "illeg": [333, 334, 873], "01d": [333, 334, 483, 490, 875], "set_posit": [333, 334, 875], "amplif": [333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 614, 876], "logger": [333, 334, 829, 831, 876], "_ave": [333, 334], "source_ori": 335, "fiffv_mne_fixed_ori": 335, "fiffv_mne_free_ori": 335, "n_ori": 335, "source_rr": 335, "n_sourc": [335, 364, 365, 483, 490, 528, 545, 547, 548, 620], "fiffv_coil_meg": 336, "fiffv_eeg_ch": 336, "ez": 336, "fiff_unit_t_m": 336, "fiff_unitm_non": 336, "ctfkind": 336, "colcal": 336, "rowcal": 336, "save_calibr": 336, "fiffv_point_eeg": 336, "fiffc_vers": 336, "machid": 336, "mac": 336, "usec": 336, "he_level_raw": 336, "helium": 336, "helium_level": 336, "orig_file_guid": 336, "mea": 336, "creator": 336, "ncoil": 336, "hpi_coil": 336, "corr_coeff": 336, "coil_freq": 336, "dig_point": 336, "good_limit": 336, "coord_tran": 336, "event_channel": 336, "mri_id": 336, "block_id": 336, "max_info": 336, "sss_info": 336, "max_st": 336, "sss_ctc": 336, "sss_cal": 336, "last_nam": 336, "first_nam": 336, "middle_nam": 336, "month": 336, "male": [336, 475], "femal": [336, 475], "handed": 336, "ambidextr": 336, "kilogram": 336, "command_lin": [336, 344], "meas_fil": 336, "mri_fil": 336, "shh": 336, "working_dir": [336, 344], "xplotter": 336, "__setitem__": 336, "accuru": [337, 342], "versionad": 337, "outside_vertic": 337, "get_tri": 337, "label_tri": 337, "get_vertices_us": 337, "label_vert": 337, "n_label_vertic": 337, "icosahedr": [337, 429, 482, 538, 539], "div1": [337, 761], "div2": [337, 761], "mris_divide_parcel": [337, 761], "n_part": [337, 761], "fring": 337, "sens_data": [338, 339, 342, 345, 346, 347], "__div__": [338, 339, 342, 345, 346, 347], "__mul__": [338, 339, 342, 345, 346, 347, 784], "tstop": [338, 339, 342, 345, 346, 347], "pane": [338, 342, 346, 834, 894, 948], "n_color": [338, 339, 342, 345, 346, 347, 855, 894, 899, 900], "hot": [338, 339, 342, 345, 346, 347, 894, 899], "binar": [338, 339, 342, 345, 346, 347, 740, 742, 743, 834, 894, 899], "colorschem": [338, 339, 342, 345, 346, 347, 894, 899], "high_contrast": [338, 339, 342, 345, 346, 347, 834, 894, 899], "resort": [338, 342, 346, 894, 936], "devot": [338, 339, 342, 345, 346, 347, 894, 899], "occupi": [338, 339, 342, 345, 346, 347, 541, 733, 894, 899], "blend": [338, 339, 342, 345, 346, 347, 834, 855, 894, 899], "mip": [338, 339, 342, 345, 346, 347, 834, 894, 899], "surface_alpha": [338, 339, 342, 345, 346, 347, 834, 894, 899], "silhouette_alpha": [338, 339, 342, 345, 346, 347, 834, 894, 899], "silhouette_linewidth": [338, 339, 342, 345, 346, 347, 834, 894, 899], "time_label_s": [338, 339, 342, 345, 346, 347, 834, 894, 899], "freesurferoccipitalflattenedpatch": [338, 342, 346, 894], "openwetwar": [338, 342, 346, 894], "transform_data": [338, 339, 342, 345, 346, 347], "tmin_idx": [338, 339, 342, 345, 346, 347], "tmax_idx": [338, 339, 342, 345, 346, 347], "indicic": [338, 339, 342, 345, 346, 347], "data_t": [338, 339, 342, 345, 346, 347], "direction": [339, 345, 347], "vector_alpha": [339, 345, 347, 834, 899], "sane": [339, 345, 347, 899], "fiffv_proj_item_field": 340, "compute_proj_": 340, "info_fnam": 341, "fidel": 341, "n_file": 341, "topomap_kwarg": [341, 887], "declutt": 341, "inverse_op": 341, "altogeth": 341, "stc_plot_kwarg": 341, "add_sys_info": [341, 955], "sysinfo": 341, "on_error": 341, "n_time_points_stc": 341, "remove_al": 341, "removed_index": 341, "open_brows": 341, "nanoamper": 342, "log_10": 342, "subject_orig": [342, 345], "vertices_to": [343, 429], "pre_affin": 343, "sdr_morph": [343, 668, 822, 823, 824], "src_data": 343, "vol_morph_mat": 343, "affinemap": 343, "stc_from": 343, "nifti2": [343, 346, 347], "stc_to": 343, "nifti2imag": 343, "src_from": [343, 623], "monolith": 344, "fiffv_mne_surf_left_hemi": 344, "fiffv_mne_surf_right_hemi": 344, "fiffv_mne_surf_unknown": 344, "fiffv_coord_mri": 344, "inus": 344, "subject_his_id": [344, 429], "ntri": 344, "nuse_tri": 344, "pinfo": 344, "155295": 344, "155323": 344, "155330": 344, "864": 344, "904": 344, "patch_ind": 344, "n_src_remain": 344, "115407": 344, "nearest_dist": 344, "mri_width": 344, "mri_height": 344, "mri_depth": 344, "neighbor_vert": 344, "mri_ras_t": 344, "fiffv_mne_coord_ra": 344, "vox_mri_t": 344, "fiffv_mne_coord_mri_voxel": 344, "mri_volume_nam": 344, "seg_nam": 344, "include_surfac": 344, "include_discret": 344, "dest": [344, 346, 347, 820], "4x4": [344, 575, 735, 736, 737, 749], "trilinear": [346, 347, 517], "ensnur": [346, 347, 517], "initial_po": [346, 347, 900], "nutmeg": [346, 347, 900], "spatialimag": [346, 347, 371, 666, 668, 822, 823, 824, 900], "src_sampl": [346, 347, 900], "stc_vol_sampl": [346, 347, 900], "vl": [346, 711], "evoked_templ": 351, "zlogratio": [354, 619, 620, 784, 788, 896], "data_sc": 354, "meaningfulli": 357, "quadrant": 357, "borgiotti": [364, 365], "kaplan": [364, 365], "\u03b8i": [364, 365], "arguabl": [364, 365], "max_pow": [364, 365], "expon": [364, 365, 527, 545, 547, 548, 614], "n_weight": 364, "src_type": [364, 365], "is_free_ori": [364, 365], "supplement": 364, "is_ssp": 365, "vec_stc": 365, "resmat": [366, 612, 613, 615, 618], "n_dipoles_lcmv": 366, "n_dipoles_fwd": 366, "mef05_001": 371, "mef30_001": 371, "flash5_img": [371, 375], "origin_head": 373, "origin_devic": 373, "exclude_front": [374, 502], "n_pt": 374, "no_decim": 376, "idx_by_typ": 378, "acpc": 380, "ch_po": [380, 393], "x_max": 381, "y_min": 381, "y_max": 381, "my_layout": 381, "keep_stim": 382, "combined_inst": 382, "native_head_t": 384, "equalized_inst": [385, 508], "ch_adjac": [386, 397], "use_c": 388, "sq20483n": [388, 550], "sq20483": [388, 550], "sq20950n": [388, 550], "ch_indic": 389, "bg_imag": 389, "neighbor_nam": 390, "heurist": 392, "n_point": [393, 407, 434, 502, 554, 576, 697], "n_hpi": 393, "fs_tal": [393, 586, 821], "ctf_head": [393, 586, 821], "ctf_meg": [393, 586, 821], "viewport": [394, 550, 551, 889], "95mm": 396, "eloc": 398, "095m": 398, "weakli": 398, "eeg001": 402, "eeg002": 402, "filepath": [403, 405, 782, 834], "digitz": 403, "6729": 403, "6782": 403, "5228": 403, "3127": 403, "3976": 403, "2363": 403, "4493": 403, "8450": 403, "3601": 403, "5353": 403, "6828": 403, "8518": 403, "0697": 403, "0829": 403, "3744": 403, "6297": 403, "1376": 403, "4264": 403, "7352": 403, "7756": 403, "8676": 403, "0439": 403, "9297": 403, "6852": 403, "4881": 403, "2969": 403, "4939": 403, "union": [409, 507, 524, 636, 672], "t_step_min": [410, 411, 412], "t_window": [410, 412, 416, 646], "interf": [410, 412, 416], "_setup_hpi_amplitude_fit": 410, "disambigu": 410, "t_step_max": 411, "too_clos": 411, "adjust_dig": [411, 413], "\u03b4t": 411, "veloc": [411, 640], "chpi_snr": 412, "snr_mag": 412, "power_mag": 412, "resid_mag": 412, "snr_grad": 412, "power_grad": 412, "resid_grad": 412, "gof_limit": 413, "quat": [413, 419, 825, 827], "q1": [413, 550, 551, 825, 827], "q2": [413, 825, 827], "q3": [413, 550, 551, 825, 827], "hlc001": 414, "hlc002": 414, "hlc003": 414, "rawkit": [415, 576], "include_lin": 416, "t_step": 416, "hpi_freq": 418, "n_coil": 418, "hpi_pick": 418, "hpi_on": 418, "all_evok": 422, "keep_sample_mean": 423, "factor_analysi": 423, "store_precis": 423, "assume_cent": 423, "shrikag": 423, "iter_n_compon": 423, "emprici": 423, "on_rank_mismatch": [427, 439, 440], "resultingmorph": 429, "vertices_from": 429, "vert_rh": 429, "vert_lh": 429, "mris_left_right_regist": 429, "epochs_list": [430, 506], "add_offset": 430, "lpa_weight": 434, "rpa_weight": 434, "hsp_weight": 434, "eeg_weight": 434, "hpi_weight": 434, "set_fid_match": 434, "set_grow_hair": 434, "hair": 434, "set_rot": 434, "set_scal": 434, "sca": 434, "scale_mod": 434, "set_transl": 434, "tra": 434, "fids_mri": 436, "return_rank": 439, "return_color": [439, 536], "n_nonzero": 439, "1e11": 440, "1e5": 440, "reg_cov": 441, "fs_home": 442, "create_raw": 443, "ignore_config": 445, "device_id": 446, "force_upd": [447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "update_path": [447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481], "mne_datasets_brainstorm_data_path": [447, 448, 449], "prompt": [447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 936, 942, 945, 951], "base_url": [450, 475, 476], "foot": 450, "khanetal2018": 455, "dataset_param": 456, "return_vers": 456, "auth": 456, "token": 456, "archive_nam": [456, 462], "folder_nam": [456, 462], "config_kei": 456, "untar": [456, 941], "decompress": 456, "httpdownload": 456, "012345": 456, "uncompress": 456, "cryptograph": 456, "sha256": 456, "19uheid": 456, "md5": 456, "upodh2io": 456, "tar": [456, 941, 948], "12b75d1cb7df9dfb4ad73ed82f61094f": 456, "osf": 456, "86qa2": 456, "webpag": 458, "2wk": 459, "1mo": 459, "2mo": 459, "3mo": 459, "5mo": 459, "9mo": 459, "12mo": 459, "15mo": 459, "18mo": 459, "2yr": 459, "ants4": 459, "5month3t": 459, "subject_dir": 460, "\u00ecnt": 465, "mne_datasets_opml_path": 469, "edfx": [475, 476], "cassett": 475, "physionet_sleep_path": [475, 476], "telemetri": 476, "mild": 476, "asleep": 476, "mne_datasets_spm_data_path": 478, "n_triangl": 482, "quadric": 482, "30001": 482, "cov_est": 483, "average_pow": [483, 490], "cov_method_param": [483, 490, 491], "csp_space": [483, 490], "mutual": [483, 568, 824], "simplif": 483, "mean_": [483, 490], "std_": [483, 490], "x_new": [483, 484, 485, 488, 490, 491, 494, 637], "n_features_new": [483, 484, 485, 488, 490, 491, 494, 637], "get_param": [483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 637], "subobject": [483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 637], "name_format": [483, 490], "n_pattern": [483, 490], "set_param": [483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 637], "__": [483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 637], "classes_": [484, 486], "n_class": [484, 486, 493, 499], "allow_2d": [486, 493], "score_func": [486, 493, 636], "decision_funct": [486, 493], "nd_featur": [486, 493], "n_slice": 486, "n_features_1": [486, 493], "n_features_2": [486, 493], "n_task": [486, 493], "n_target": [486, 487, 493, 500], "xt": [486, 493, 496], "283185307179586": 488, "n_signal": [488, 809, 811], "r2": 489, "edge_correct": [489, 495], "baseestim": [489, 497, 500], "return_filt": 491, "flank": 491, "spectal": 491, "sprectal": 491, "sorter_spec": 491, "x_ssd": 491, "with_mean": 492, "with_std": 492, "quantil": 492, "estimators_": 493, "unsupervis": 497, "spatialfilt": 498, "_xdawntransform": 498, "features_shape_": 498, "objective_funct": 499, "leaveoneout": 499, "surrogate_tri": 499, "mean_spatial_filt": 499, "pre_dispatch": 500, "n_dimensional_featur": 500, "dispatch": 500, "explos": 500, "lightweight": 500, "n_score": 500, "extrema": [503, 666, 680], "orig_sfreq": 504, "weight_al": 504, "ignore_ref": [504, 598, 647, 660, 671], "return_map": 504, "mag_scal": [504, 647, 660, 671], "multipolar": [504, 646, 647, 660, 671], "magenetomet": [504, 647, 660, 671], "0168": [504, 647, 660, 671], "sp": 504, "old_event_id": 505, "new_event_id": 505, "safeti": [505, 950], "collat": 507, "ancillari": 507, "myevent": 507, "last_myev": 507, "first_": 507, "event_typ": 507, "respet": 507, "n_new_ev": 511, "aa": 512, "ee": 512, "gg": 512, "syncstatu": 512, "99998": 512, "xml_file": 515, "physical_rang": [516, 550, 551], "add_ch_typ": [516, 550, 551], "f_pass": 518, "f_stop": 518, "return_copi": 518, "ellipt": 518, "gpass": 518, "gstop": 518, "weren": 518, "triag": [518, 783], "fs1": 519, "fs2": [519, 522], "fstop": 519, "max_tri": 520, "mt_bandwidth": [522, 550, 551], "centr": [522, 550, 551, 618], "xf": 522, "chronux": 522, "partha": 522, "mitra": 522, "hemant": 522, "bokil": 522, "upfirdn": 523, "00000101": 524, "0000111": 524, "0100101": 524, "0000101": 524, "0000010": 524, "pad_start": 525, "pad_stop": 525, "whichev": [525, 527, 854], "v_from": 525, "v_to": 525, "rhoend": 526, "fmin_cobyla": 526, "combine_xyz": 527, "gk": 527, "frobeniu": 527, "depth_prior": 527, "orient_prior": 528, "fwd_out": [529, 530], "raise_error": 531, "config_path": 532, "mnemn": 532, "mgz_fname": 536, "atlas_id": [536, 704], "labels_aseg": 537, "all_inst": 540, "grown": 541, "territori": 541, "invad": 541, "broadcast": [541, 834, 852], "head_high_r": 542, "orient_to_surfac": 542, "scale_by_dist": 542, "mark_insid": 542, "movabl": 542, "splitter": 542, "qt4": 542, "wx": 542, "coregistrationui": 542, "update_mod": 545, "bay": 545, "mackai": 545, "time_pca": 547, "alpha_max": [547, 548], "epsilon": [547, 603], "raw_extra": 549, "orig_unit": 549, "unsplit": 549, "orig_nchan": 549, "nv": 549, "my_raw_object": 549, "subclass": 549, "_read_segment_fil": 549, "mult": 549, "time_slic": [550, 551], "data_fram": [550, 551], "quartil": [550, 551], "mne_fix_mag_coil_typ": 550, "bad_fil": [550, 551], "mne_mark_bad_channel": [550, 551], "europ": [550, 551], "lightgrai": [550, 551, 865, 889], "show_first_samp": [550, 551, 636, 883, 889], "eventloop": [550, 551, 889], "prj": [550, 551, 889], "secondari": [550, 551, 889], "supersampl": [550, 551], "optimum": [550, 551], "drop_small_buff": [550, 551], "projecton": [550, 551], "datetimeindex": [550, 551], "include_default": 553, "fiffv_coil_magnes_offdiag_ref_grad": 553, "fiffv_coil_vv_mag_t3": 553, "mrk_point": 554, "fiffv_coord_": [555, 586], "input_fnam": [558, 559, 563, 566, 567, 568, 574, 576, 579, 582, 695, 697], "pos_fnam": 558, "add_head_tran": 558, "batteri": 559, "trigger_sign": 559, "htm": 559, "cms_bit": 559, "cms_high": 559, "rawboxi": 560, "vhdr_fname": 561, "heogl": 561, "heogr": 561, "veogb": 561, "pdf_fname": 562, "config_fnam": 562, "head_shape_fnam": 562, "sort_by_ch_nam": 562, "e64": 562, "rawbti": 562, "data_format": 563, "date_format": 563, "int16": 563, "int32": 563, "numsampl": 563, "rawcnt": 563, "system_clock": 564, "rawctf": 564, "dap": [565, 689], "rs3": 565, "dpa": [565, 689], "cef": [565, 689], "rawcurri": 565, "storag": [566, 726], "sao2": 566, "subsecond": 566, "latin1": [567, 689, 695], "trev": 568, "e1": [568, 702], "e2": [568, 702], "e3": [568, 702], "rawegi": 568, "raweximia": 569, "find_overlap": 570, "overlap_threshold": 570, "occular": 570, "blink_l": 570, "blink_r": 570, "blink_both": 570, "raweyelink": 570, "data_nam": [571, 696, 700], "ft_datatype_raw": 571, "binfil": 573, "opmeg": 573, "rawfil": 573, "rawgdf": 574, "rawhitachi": 575, "3x5": 575, "etg": 575, "7000": 575, "d1": 575, "s2": 575, "d2": 575, "s3": 575, "d3": 575, "s4": 575, "d4": 575, "s5": 575, "d5": 575, "s6": 575, "d6": 575, "s7": 575, "d7": 575, "s8": 575, "ft7": 575, "tp7": 575, "3x3": [575, 603], "laid": 575, "d8": 575, "s9": 575, "d9": 575, "s10": 575, "3x11": 575, "d10": 575, "s11": 575, "d11": 575, "s12": 575, "d12": 575, "s13": 575, "d13": 575, "s14": 575, "d14": 575, "s16": 575, "d16": 575, "s17": 575, "d17": 575, "s18": 575, "stim_cod": 576, "allow_unknown_format": [576, 697], "laboratori": [576, 697], "neuroelectr": 577, "rawnedf": 577, "exclude_fname_pattern": 578, "nc": 578, "glob": 578, "rawneuralynx": 578, "nihon": 580, "kohden": 580, "rawnihon": 580, "nosatflag": 581, "rawnirx": 581, "wlx": 581, "nosatflags_wlx": 581, "neuralsg": 582, "rawpersyst": 583, "jnir": 584, "rawsnirf": 584, "indent": [585, 843], "read_limit": [585, 843], "max_str": [585, 843], "mne_show_fiff": 585, "mri_tal": [586, 821], "data_typ": 587, "reset_rang": 587, "fifft_float": 587, "fifft_doubl": 587, "fifft_dau_pack16": 587, "uniti": 587, "grow_outsid": 588, "standard_devi": 591, "relative_radii": 599, "radii": [599, 736], "n_events_in": 601, "n_events_out": 601, "1111111111111111": [603, 604, 609, 610, 615, 619, 620], "time_func": 606, "inv_split": [609, 610], "snr_est": 611, "unregular": 611, "biggest": 611, "chi": 611, "normalis": [612, 613], "willb": [612, 613], "n_orient_inv": [612, 613, 615], "n_orient_fwd": [612, 613, 615], "pca_var": [612, 613], "cog_err": 618, "graviti": 618, "cog": 618, "maxrad_ext": 618, "peak_amp": 618, "sum_amp": 618, "surf_nam": [622, 706], "mne_docs_kind": 624, "mne_docs_vers": 624, "grad_reject": 626, "mag_reject": 626, "eeg_reject": 626, "eog_reject": 626, "explanatori": [635, 686], "info_": 635, "intercept_": 635, "instabl": 636, "debat": 636, "zca": 636, "tol_fastica": 636, "tol_picard": 636, "current_fit": 636, "unfit": 636, "pre_whitener_": 636, "pca_components_": 636, "pca_mean_": 636, "pca_explained_variance_": 636, "scrap": 636, "n_samples_": 636, "ummix": [636, 637], "supra": [636, 638], "ecg_idx": 636, "kuiper": 636, "eog_idx": 636, "paralyz": 636, "threefold": 636, "farthest": 636, "msucl": 636, "ref_ica": 636, "ref_idx": 636, "unclean": 636, "pvaf": 636, "usecas": [636, 883], "plot_std": [636, 879, 881], "image_arg": [636, 784, 879, 881], "psd_arg": [636, 879, 881], "topomap_axi": [636, 881], "image_axi": [636, 881], "erp_axi": [636, 881], "spectrum_axi": [636, 881], "variance_axi": [636, 881], "logarithm": [636, 881], "ass": [636, 882], "n_ica_compon": [636, 882], "sublabel": [636, 882], "pearsonr": 636, "skew": 636, "correct_overlap": 637, "overlapp_correct": 637, "evokeds_": 637, "event_id_": 637, "correct_overlap_": 637, "n_event_typ": 637, "bad_perc": 638, "bad_peak": 638, "bad_flat": 638, "uncommon": 638, "rotation_velocity_limit": 640, "translation_velocity_limit": 640, "lm_cutoff": 644, "epoch_threshold": 644, "bw_method": 644, "intrins": 644, "hjorth": 644, "gaussian_kd": 644, "n_legendre_term": 645, "lap": [645, 728], "inst_csd": 645, "n_imbal": 646, "multipol": [646, 671], "bad_condit": [647, 660, 671], "extended_proj": [647, 660, 671], "ill": [647, 660, 671], "n_meg": [647, 660], "n_moment": 647, "n_good_meg": 647, "reg_moment": 647, "n_use_in": 647, "dagger": 647, "phi": 647, "phi_in": 647, "data_meg_good": 647, "raw_ev": [648, 649], "avg_ref": [648, 649], "ecg_ev": [648, 661, 664], "0005": [649, 936], "e0g": 649, "magentomet": 650, "quadratur": 650, "corrmapplugin1": 651, "categoris": 651, "preexist": 651, "template_fig": 651, "labelled_": 651, "mag_pick": 652, "grad_pick": 652, "r_peak_events_arrai": 653, "doctest": 653, "interp_thresh": 655, "insts_bad": 655, "avg_error": 656, "max_error": 656, "screen_siz": [656, 658], "screen_dist": [656, 658], "screen_resolut": [656, 658], "h3": 656, "hv3": 656, "n_calibration_point": 656, "show_offset": 656, "unpredict": 657, "px": 659, "l_x": 659, "r_pupil": 659, "noisy_ch": 660, "flat_ch": 660, "scores_flat": 660, "limits_flat": 660, "st_fix": [660, 671], "d_k": 660, "mu_d": 660, "textrm": 660, "return_ecg": 661, "ch_ecg": [661, 664], "average_puls": [661, 664], "ecg_sourc": 664, "eog_sourc": 665, "max_peak_dist": 666, "voxels_max": 666, "use_min": 666, "hypointens": 666, "hyperintens": 666, "elec_imag": 666, "n_neighbor": 667, "pressur": 667, "craniotomi": 667, "reg_affin": [668, 822, 823, 824], "montage_warp": 668, "l_rate": 669, "w_chang": 669, "anneal_deg": 669, "anneal_step": 669, "n_subgauss": 669, "kurt_siz": 669, "ext_block": 669, "blowup": [669, 749], "blowup_fac": 669, "n_small_angl": 669, "use_bia": 669, "kurtosi": 669, "unmixing_matrix": 669, "return_max_it": 669, "bad_limit": 670, "forth": 671, "relicens": 671, "permiss": 671, "certifi": 671, "seamless": 671, "abramowitz": 671, "stegun": 671, "us2006031038": 671, "us6876196": 671, "wo2005067789": 671, "wo2005078467": 671, "wo2006114473": 671, "lawyer": 671, "raw_er": 672, "from_raw": 672, "inject": 672, "raw_er_prepar": 672, "provision": 679, "x0": [680, 769], "peak_loc": 680, "peak_mag": 680, "nathanael": 680, "yoder": 680, "ncyoder": 680, "purdu": 680, "36900026": 680, "76007351": 680, "imb_cal": 682, "t_raw": 685, "t_other": 685, "n_picks_ref": 686, "epochs_no_av": 686, "epochs_clean": 686, "n_parcel": 688, "amrk": 689, "patch_stat": [691, 713], "s_id": 691, "eventtyp": 695, "trialinfo_column": 696, "mne_browse_raw": 698, "sidecar": 699, "timelock": 700, "_fwd": 703, "annot_fnam": [706, 931], "mne_make_morph_map": 708, "morph_map": 708, "left_map": 708, "right_map": 708, "asterisk": 711, "source_morph": 712, "return_dict": 714, "file_format": [714, 934], "voxels": [714, 934], "xra": [714, 934], "yra": [714, 934], "zra": [714, 934], "cra": [714, 934], "n_face": [714, 717, 934], "return_al": 716, "fname_in": 717, "clockwis": [717, 840], "counterclockwis": 717, "spcecifi": 718, "bem_nam": 720, "subjects_from": [720, 723], "ba3a": 721, "cfg": 721, "skip_fiduci": 722, "oserror": 722, "src_name": 723, "my_source_spac": 723, "mne_sensitivity_map": 724, "on_bad": 725, "cache_dir": 726, "output_format": 729, "howto": 729, "asctim": 729, "levelnam": 729, "return_old_level": 730, "add_fram": [730, 829], "old_level": 730, "memmap_min_s": 731, "megabyt": 731, "ox": 733, "oi": 733, "iii": 733, "get_stim_channel": 734, "stim_data": 734, "inhomogen": 737, "poisson": 737, "stc_true": [739, 740, 741, 742, 743, 744, 745, 746], "stc_est": [739, 740, 741, 742, 743, 744, 745, 746], "ppe": 741, "dfrac": [741, 746], "sum_i": [741, 746], "s_i": [741, 746], "tp": [742, 743], "fn": 743, "2q": 744, "r_k": 744, "r_l": 744, "mathbb": 744, "dle": 744, "terminologi": 744, "actual_snr": 748, "sti001": 749, "allow_overlap": 751, "coo_matrix": [754, 755, 756, 757, 758, 759, 760, 764], "additit": 755, "remap_vertic": [757, 760], "reassign": [757, 760], "pval_correct": [762, 768], "n_bootstrap": 763, "spmatrix": [764, 771, 772, 774, 775], "n_ob": 764, "chan_adj": 764, "5600x5600": 764, "27076": 764, "slowest": 765, "a2b2": 765, "greenhous": 765, "geisser": 765, "f_val": 765, "homoscedast": 766, "kruskal": 766, "walli": 766, "pvalu": 767, "yekuti": 768, "negcorr": 768, "n_regressor": 769, "n_cond": 770, "enorm": 770, "overload": 770, "subepoch": 770, "n_predictor": 770, "time_window_length": 770, "t_power": [771, 772, 774, 775], "check_disjoint": [771, 772, 774, 775], "subarrai": 771, "kth": 771, "unconnect": [771, 772, 774, 775], "disjoint": [771, 772, 774, 775], "rv_continu": [771, 772, 774, 775], "untract": 773, "spatial_exclud": [774, 775], "p_thresh": 776, "equal_var": 778, "ball": 779, "volu": 779, "do_neighbor_vert": 781, "do_neighbor_tri": 781, "show_path": 783, "power_baselin": 784, "frequency_window": 784, "as_cov": 785, "pick_frequ": 785, "getitem_epochspectrum_return": [786, 787], "ci_alpha": [786, 787, 789, 790], "latex": [786, 787, 789, 790], "pertin": 788, "12676": 788, "getitem_spectrum_return": [789, 790], "sixth": [789, 790], "subscript": [789, 790], "freq_indic": [789, 790], "half_nbw": 798, "kmax": 798, "nw": 798, "half_bw": 798, "bw": 798, "f0": 798, "tridiagon": 798, "jw": 799, "jnw": 799, "tx": 801, "n_step": [801, 809, 834], "_cycl": [802, 812, 813, 814, 816, 817], "desired_fwhm": [802, 812], "morlet2": [802, 812], "sp_morlet": [802, 812], "this_fwhm": [802, 812], "wavelet_sp": [802, 812], "half_max": [802, 812], "n_taper": [804, 814], "get_window": [805, 890], "epoch_data": [813, 814], "avg_power_itc": [813, 814], "power_": [813, 814], "interrel": [813, 814, 816, 817, 949], "undermin": [814, 817], "intertri": [815, 818], "st_power": 815, "from_str": 821, "to_str": 821, "reg_img": 822, "trans2": 823, "shear": 824, "affine_registr": 824, "contextlib": 828, "contextmanag": 828, "my_fnam": 828, "moin": 830, "pythondecoratorlibrari": 830, "sentenc": 830, "ignore_namespac": 831, "travers": 831, "_funct": 832, "dec": 832, "filler": 832, "5880": 832, "offscreen": 834, "buggi": 834, "playbackspe": [834, 955], "colormaprang": [834, 836, 955], "distributed_source_pow": 834, "vertexselect": [834, 955], "add_skul": [834, 955], "remove_data": 834, "remove_head": 834, "remove_label": 834, "remove_annot": 834, "remove_sensor": 834, "remove_skul": 834, "remove_text": 834, "remove_volume_label": 834, "timeview": 834, "get_picked_point": 834, "geo": 834, "ctab": 834, "lh_ctab": 834, "rh_ctab": 834, "rbga": 834, "icefir": 834, "rocket": 834, "nvtx": 834, "font": [834, 895], "add_scalar_bar": 834, "title_font_s": 834, "hex": [834, 860], "n_coord": 834, "stereotax": 834, "coord_as_vert": 834, "1cm": 834, "subdir": 834, "max_dist": 834, "eeg_color": [834, 852], "to_rgba_arrai": [834, 852], "justif": 834, "update_text": 834, "dilat": 834, "apply_auto_sc": 834, "clear_glyph": 834, "zenith": [834, 904], "plot_time_cours": [834, 955], "vertex_id": [834, 913], "plot_time_lin": [834, 955], "reset_view": [834, 955], "restore_user_sc": [834, 955], "bitrat": 834, "imageio": 834, "mov": 834, "n_frame": 834, "separate_canva": 834, "set_data_smooth": [834, 955], "set_playback_spe": [834, 955], "playback": [834, 910], "set_time_interpol": [834, 955], "set_time_point": [834, 955], "time_idx": 834, "setup_time_view": [834, 955], "time_interpol": 834, "toggle_interfac": [834, 955], "toggle_playback": [834, 955], "update_lut": 834, "imdata": 835, "onclick": [835, 955], "backend_bas": 835, "bg": [835, 838], "field_strength_meg": 836, "field_strength_eeg": 836, "set_contour": [836, 955], "set_vmax": [836, 955], "set_ratio": 838, "ax_im": 838, "node_nam": 840, "start_between": 840, "group_sep": 840, "n_node_nam": 840, "fname_1": 843, "fname_2": 843, "smooth_shad": [844, 902], "_render": 844, "undocu": 844, "backend_us": [846, 848], "ch_dx": 849, "teal": 851, "onselect": [853, 898], "rectangleselector": [853, 898], "show_indic": 854, "halfwai": 854, "colorbarbas": 855, "polarax": 858, "type_snr": 859, "type_pow": 859, "type_resid": 859, "invert_i": 860, "unweight": 860, "n_evok": 860, "hexadecim": 860, "equal_spac": 869, "1f77b4": 877, "fscale": [877, 884], "alim": [877, 884], "pointsiz": 892, "bet": 892, "bluish": 893, "fig_numb": 895, "cone": 895, "axesimag": 898, "contourset": 898, "backend_nam": [901, 905, 920, 921], "old_backend_nam": [901, 905], "inlin": [901, 941, 946], "jupyterlab": 901, "colab": 901, "antialia": [902, 941], "depth_peel": 902, "multi_sampl": 902, "hide_sensor": 906, "dn": 906, "include_ev": 915, "exclude_ev": 915, "bi": 915, "untouch": 919, "hsv": 931, "table_nam": 931, "colort": 931, "create_stamp": 934, "pycharm": [936, 946], "appnop": 936, "nope": 936, "nsappsleepdis": 936, "tempt": 936, "benfrederickson": 936, "dont": 936, "stackoverflow": 936, "21752259": 936, "write_": 936, "h5io": [936, 946], "h5py": [936, 946], "resid": 936, "plot_find_ecg_artifact": 936, "ordinarili": 936, "multithread": [936, 941], "intel": [936, 941, 945], "mkl": 936, "openmp": 936, "omp_num_thread": 936, "openblas_num_thread": 936, "num_cpu": 936, "sample_audvis_eog": 936, "implic": 936, "simplist": 936, "nvidia": [936, 941], "epochs_path": 936, "protrud": 936, "shrunken": 936, "dura": 936, "mri_norm": 936, "xopt": 936, "gentl": 936, "listserv": 936, "recon_al": 936, "autorecon2": 936, "autorecon3": 936, "w3school": 938, "carpentri": 938, "lesson": 938, "cond1": 939, "cond2": 939, "addpath": 939, "pop_fileio": 939, "pop_eegfiltnew": 939, "pop_averef": 939, "pop_select": 939, "pop_runica": 939, "pop_binica": 939, "pop_compprop": 939, "comp_num": 939, "winhandl": 939, "comphead": 939, "pop_selectcomp": 939, "list_of_components_to_exclud": 939, "pop_epoch": 939, "eeg_epoch": 939, "pop_timtopo": 939, "pop_compareerp": 939, "eeg_epochs1": 939, "eeg_epochs2": 939, "pop_saveset": 939, "lfreq": 939, "hfreq": 939, "filtered_raw": 939, "nb_conda_kernel": 941, "osmesa": 941, "xvfb": 941, "mesalib": 941, "git": [941, 942, 950], "driver": 941, "test_filt": 941, "swr": 941, "cento": 941, "mesa_gl_version_overrid": 941, "rend": 941, "msaa": 941, "libgl_always_softwar": 941, "prebuilt": 941, "xzvf": 941, "mesa_18": 941, "6_centos_lib": 941, "tgz": 941, "libgl_drivers_path": 941, "pwd": 941, "ld_library_path": 941, "went": [941, 942], "glxinfo": 941, "uninstal": [941, 950], "20348": 942, "sp0": 942, "msc": 942, "1936": 942, "amd64": 942, "miniconda3": 942, "intel64": 942, "genuineintel": 942, "dev67": 942, "gb12384562": 942, "qtagg": 942, "d92815a": 942, "gallium": 942, "pyqt5": [942, 946], "modulenotfounderror": 942, "bashrc": [942, 948], "zprofil": 942, "zsh": [942, 948], "tcsh": [943, 948], "ubuntu": [943, 945, 948], "bionic": 945, "beaver": 945, "1_0": 945, "appl": 945, "silicon": 945, "python_1": 945, "libmamba": 946, "conda_solv": 946, "unlock": 946, "vscode": 946, "microsoft": 946, "anaconda3": 946, "paid": 946, "profession": 946, "miniforg": 947, "mambaforg": 947, "cpython": 947, "poetri": 947, "venv": 947, "unproblemat": 947, "leopard": 948, "powerpc": 948, "runtim": 948, "mne_convert_mne_data": 948, "mne_epochs2mat": 948, "mne_raw2mat": 948, "mne_simu": 948, "xcode": 948, "xquartz": 948, "x11": 948, "libxt": 948, "dylib": 948, "bak": 948, "flat_namespac": 948, "netpbm": 948, "brew": 948, "app": 948, "path_to_desired_install_loc": 948, "zxvf": 948, "path_to_archive_fil": 948, "pkg": 948, "untrust": 948, "matlab_root": 948, "r2018b": 948, "undefin": 948, "mne_setup_sh": 948, "csh": 948, "mne_setup": 948, "path_to_mn": 948, "path_to_matlab": 948, "emul": 948, "zshrc": 948, "cshrc": 948, "tcshrc": 948, "setenv": [948, 951], "mne_opengl_test": 948, "redraw": 948, "spent": 948, "revolut": 948, "interrupt": 948, "glx": 948, "nondirect": 948, "IT": 948, "vnc": 948, "libxp": 948, "launchpad": 948, "7ezeehio": 948, "ppa": 948, "zeehio": 948, "libxp6": 948, "libgfortran": 948, "libfortran": 948, "gnu": 948, "maxdepth": 948, "interoper": 949, "reimplement": 949, "connectom": 949, "alphacsc": 949, "pactool": 949, "microst": 949, "conpi": 949, "eelbrain": 949, "posthoc": 949, "prep": 949, "pyprep": 949, "sesam": 949, "sesameeg": 949, "invertmeeg": 949, "niseq": 949, "name_of_environ": 950, "fool": 950, "proof": 950, "old_mn": 950, "dep": 950, "pubsw": 951, "modular": 952, "qt3d": 952, "babymeg": 952, "tmsi": 952, "refa": 952, "brainamp": 952, "ant": 952, "eegosport": 952, "gusbamp": 952, "bdfl": 954, "figureclos": 955, "disable_ui_ev": 955, "unlink": 955, "unsubscrib": 955}, "objects": {"": [[14, 0, 0, "-", "mne"]], "mne": [[324, 1, 1, "", "AcqParserFIF"], [325, 1, 1, "", "Annotations"], [326, 1, 1, "", "BaseEpochs"], [327, 1, 1, "", "BiHemiLabel"], [328, 1, 1, "", "Covariance"], [329, 1, 1, "", "Dipole"], [330, 1, 1, "", "DipoleFixed"], [331, 1, 1, "", "Epochs"], [332, 1, 1, "", "EpochsArray"], [333, 1, 1, "", "Evoked"], [334, 1, 1, "", "EvokedArray"], [335, 1, 1, "", "Forward"], [336, 1, 1, "", "Info"], [337, 1, 1, "", "Label"], [338, 1, 1, "", "MixedSourceEstimate"], [339, 1, 1, "", "MixedVectorSourceEstimate"], [340, 1, 1, "", "Projection"], [341, 1, 1, "", "Report"], [342, 1, 1, "", "SourceEstimate"], [343, 1, 1, "", "SourceMorph"], [344, 1, 1, "", "SourceSpaces"], [345, 1, 1, "", "VectorSourceEstimate"], [346, 1, 1, "", "VolSourceEstimate"], [347, 1, 1, "", "VolVectorSourceEstimate"], [348, 4, 1, "", "add_reference_channels"], [349, 4, 1, "", "add_source_space_distances"], [350, 4, 1, "", "annotations_from_events"], [351, 4, 1, "", "apply_forward"], [352, 4, 1, "", "apply_forward_raw"], [353, 4, 1, "", "average_forward_solutions"], [18, 0, 0, "-", "baseline"], [9, 0, 0, "-", "beamformer"], [8, 0, 0, "-", "bem"], [378, 4, 1, "", "channel_indices_by_type"], [379, 4, 1, "", "channel_type"], [13, 0, 0, "-", "channels"], [13, 0, 0, "-", "chpi"], [422, 4, 1, "", "combine_evoked"], [423, 4, 1, "", "compute_covariance"], [424, 4, 1, "", "compute_proj_epochs"], [425, 4, 1, "", "compute_proj_evoked"], [426, 4, 1, "", "compute_proj_raw"], [427, 4, 1, "", "compute_rank"], [428, 4, 1, "", "compute_raw_covariance"], [429, 4, 1, "", "compute_source_morph"], [430, 4, 1, "", "concatenate_epochs"], [431, 4, 1, "", "concatenate_events"], [432, 4, 1, "", "concatenate_raws"], [433, 4, 1, "", "convert_forward_solution"], [437, 4, 1, "", "count_annotations"], [438, 4, 1, "", "count_events"], [442, 4, 1, "", "create_default_subject"], [443, 4, 1, "", "create_info"], [10, 0, 0, "-", "cuda"], [3, 0, 0, "-", "datasets"], [482, 4, 1, "", "decimate_surface"], [4, 0, 0, "-", "decoding"], [502, 4, 1, "", "dig_mri_distances"], [9, 0, 0, "-", "dipole"], [5, 0, 0, "-", "epochs"], [508, 4, 1, "", "equalize_channels"], [5, 0, 0, "-", "event"], [512, 4, 1, "", "events_from_annotations"], [6, 0, 0, "-", "export"], [517, 4, 1, "", "extract_label_time_course"], [13, 0, 0, "-", "filter"], [524, 4, 1, "", "find_events"], [525, 4, 1, "", "find_stim_steps"], [526, 4, 1, "", "fit_dipole"], [531, 4, 1, "", "get_config"], [532, 4, 1, "", "get_config_path"], [533, 4, 1, "", "get_head_surf"], [534, 4, 1, "", "get_meg_helmet_surf"], [535, 4, 1, "", "get_montage_volume_labels"], [536, 4, 1, "", "get_volume_labels_from_aseg"], [537, 4, 1, "", "get_volume_labels_from_src"], [538, 4, 1, "", "grade_to_tris"], [539, 4, 1, "", "grade_to_vertices"], [540, 4, 1, "", "grand_average"], [541, 4, 1, "", "grow_labels"], [543, 4, 1, "", "head_to_mni"], [544, 4, 1, "", "head_to_mri"], [9, 0, 0, "-", "inverse_sparse"], [15, 0, 0, "-", "io"], [589, 4, 1, "", "label_sign_flip"], [590, 4, 1, "", "labels_to_stc"], [591, 4, 1, "", "make_ad_hoc_cov"], [592, 4, 1, "", "make_bem_model"], [593, 4, 1, "", "make_bem_solution"], [594, 4, 1, "", "make_field_map"], [595, 4, 1, "", "make_fixed_length_epochs"], [596, 4, 1, "", "make_fixed_length_events"], [597, 4, 1, "", "make_forward_dipole"], [598, 4, 1, "", "make_forward_solution"], [599, 4, 1, "", "make_sphere_model"], [600, 4, 1, "", "match_channel_orders"], [601, 4, 1, "", "merge_events"], [9, 0, 0, "-", "minimum_norm"], [622, 4, 1, "", "morph_labels"], [623, 4, 1, "", "morph_source_spaces"], [624, 4, 1, "", "open_docs"], [625, 4, 1, "", "open_report"], [626, 4, 1, "", "parse_config"], [627, 4, 1, "", "pick_channels"], [628, 4, 1, "", "pick_channels_cov"], [629, 4, 1, "", "pick_channels_forward"], [630, 4, 1, "", "pick_channels_regexp"], [631, 4, 1, "", "pick_events"], [632, 4, 1, "", "pick_info"], [633, 4, 1, "", "pick_types"], [634, 4, 1, "", "pick_types_forward"], [13, 0, 0, "-", "preprocessing"], [688, 4, 1, "", "random_parcellation"], [689, 4, 1, "", "read_annotations"], [690, 4, 1, "", "read_bem_solution"], [691, 4, 1, "", "read_bem_surfaces"], [692, 4, 1, "", "read_cov"], [693, 4, 1, "", "read_dipole"], [694, 4, 1, "", "read_epochs"], [695, 4, 1, "", "read_epochs_eeglab"], [696, 4, 1, "", "read_epochs_fieldtrip"], [697, 4, 1, "", "read_epochs_kit"], [698, 4, 1, "", "read_events"], [699, 4, 1, "", "read_evoked_besa"], [700, 4, 1, "", "read_evoked_fieldtrip"], [701, 4, 1, "", "read_evokeds"], [702, 4, 1, "", "read_evokeds_mff"], [703, 4, 1, "", "read_forward_solution"], [704, 4, 1, "", "read_freesurfer_lut"], [705, 4, 1, "", "read_label"], [706, 4, 1, "", "read_labels_from_annot"], [707, 4, 1, "", "read_lta"], [708, 4, 1, "", "read_morph_map"], [709, 4, 1, "", "read_proj"], [710, 4, 1, "", "read_reject_parameters"], [711, 4, 1, "", "read_source_estimate"], [712, 4, 1, "", "read_source_morph"], [713, 4, 1, "", "read_source_spaces"], [714, 4, 1, "", "read_surface"], [715, 4, 1, "", "read_talxfm"], [716, 4, 1, "", "read_trans"], [717, 4, 1, "", "read_tri"], [718, 4, 1, "", "read_vectorview_selection"], [719, 4, 1, "", "rename_channels"], [720, 4, 1, "", "scale_bem"], [721, 4, 1, "", "scale_labels"], [722, 4, 1, "", "scale_mri"], [723, 4, 1, "", "scale_source_space"], [724, 4, 1, "", "sensitivity_map"], [725, 4, 1, "", "set_bipolar_reference"], [726, 4, 1, "", "set_cache_dir"], [727, 4, 1, "", "set_config"], [728, 4, 1, "", "set_eeg_reference"], [729, 4, 1, "", "set_log_file"], [730, 4, 1, "", "set_log_level"], [731, 4, 1, "", "set_memmap_min_size"], [732, 4, 1, "", "setup_source_space"], [733, 4, 1, "", "setup_volume_source_space"], [19, 0, 0, "-", "simulation"], [754, 4, 1, "", "spatial_dist_adjacency"], [755, 4, 1, "", "spatial_inter_hemi_adjacency"], [756, 4, 1, "", "spatial_src_adjacency"], [757, 4, 1, "", "spatial_tris_adjacency"], [758, 4, 1, "", "spatio_temporal_dist_adjacency"], [759, 4, 1, "", "spatio_temporal_src_adjacency"], [760, 4, 1, "", "spatio_temporal_tris_adjacency"], [761, 4, 1, "", "split_label"], [21, 0, 0, "-", "stats"], [779, 4, 1, "", "stc_near_sensors"], [780, 4, 1, "", "stc_to_label"], [783, 4, 1, "", "sys_info"], [22, 0, 0, "-", "time_frequency"], [820, 4, 1, "", "transform_surface_to"], [13, 0, 0, "-", "transforms"], [828, 4, 1, "", "use_coil_def"], [829, 1, 1, "", "use_log_level"], [10, 0, 0, "-", "utils"], [832, 4, 1, "", "verbose"], [833, 4, 1, "", "vertex_to_mni"], [23, 0, 0, "-", "viz"], [922, 4, 1, "", "what"], [923, 4, 1, "", "write_bem_solution"], [924, 4, 1, "", "write_bem_surfaces"], [925, 4, 1, "", "write_cov"], [926, 4, 1, "", "write_events"], [927, 4, 1, "", "write_evokeds"], [928, 4, 1, "", "write_forward_solution"], [929, 4, 1, "", "write_head_bem"], [930, 4, 1, "", "write_label"], [931, 4, 1, "", "write_labels_to_annot"], [932, 4, 1, "", "write_proj"], [933, 4, 1, "", "write_source_spaces"], [934, 4, 1, "", "write_surface"], [935, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[324, 2, 1, "", "__getitem__"], [324, 2, 1, "", "__len__"], [324, 3, 1, "", "categories"], [324, 3, 1, "", "events"], [324, 2, 1, "", "get_condition"]], "mne.Annotations": [[325, 2, 1, "", "__add__"], [325, 2, 1, "", "__getitem__"], [325, 2, 1, "", "__iter__"], [325, 2, 1, "", "__len__"], [325, 2, 1, "", "append"], [325, 2, 1, "", "copy"], [325, 2, 1, "", "count"], [325, 2, 1, "", "crop"], [325, 2, 1, "", "delete"], [325, 3, 1, "", "orig_time"], [325, 2, 1, "", "rename"], [325, 2, 1, "", "save"], [325, 2, 1, "", "set_durations"], [325, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[327, 2, 1, "", "__add__"], [327, 2, 1, "", "__len__"], [327, 2, 1, "", "__sub__"]], "mne.Covariance": [[328, 2, 1, "", "__add__"], [328, 2, 1, "", "__contains__"], [328, 2, 1, "", "__getitem__"], [328, 2, 1, "", "__iter__"], [328, 2, 1, "", "__len__"], [328, 2, 1, "", "as_diag"], [328, 3, 1, "", "ch_names"], [328, 2, 1, "", "clear"], [328, 2, 1, "", "copy"], [328, 3, 1, "", "data"], [328, 2, 1, "", "fromkeys"], [328, 2, 1, "", "get"], [328, 2, 1, "", "items"], [328, 2, 1, "", "keys"], [328, 3, 1, "", "nfree"], [328, 2, 1, "", "pick_channels"], [328, 2, 1, "", "plot"], [328, 2, 1, "", "plot_topomap"], [328, 2, 1, "", "pop"], [328, 2, 1, "", "popitem"], [328, 2, 1, "", "save"], [328, 2, 1, "", "setdefault"], [328, 2, 1, "", "update"], [328, 2, 1, "", "values"]], "mne.Dipole": [[329, 2, 1, "", "__getitem__"], [329, 2, 1, "", "__len__"], [329, 2, 1, "", "copy"], [329, 2, 1, "", "crop"], [329, 2, 1, "", "plot_amplitudes"], [329, 2, 1, "", "plot_locations"], [329, 2, 1, "", "save"], [329, 2, 1, "", "time_as_index"], [329, 3, 1, "", "times"], [329, 2, 1, "", "to_mni"], [329, 2, 1, "", "to_mri"], [329, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[330, 3, 1, "", "ch_names"], [330, 2, 1, "", "copy"], [330, 2, 1, "", "crop"], [330, 2, 1, "", "decimate"], [330, 2, 1, "", "plot"], [330, 2, 1, "", "save"], [330, 2, 1, "", "shift_time"], [330, 2, 1, "", "time_as_index"], [330, 3, 1, "", "times"], [330, 3, 1, "", "tmax"], [330, 3, 1, "", "tmin"]], "mne.Epochs": [[331, 2, 1, "", "__contains__"], [331, 2, 1, "", "__getitem__"], [331, 2, 1, "", "__iter__"], [331, 2, 1, "", "__len__"], [331, 2, 1, "", "add_annotations_to_metadata"], [331, 2, 1, "", "add_channels"], [331, 2, 1, "", "add_proj"], [331, 2, 1, "", "add_reference_channels"], [331, 2, 1, "", "anonymize"], [331, 2, 1, "", "apply_baseline"], [331, 2, 1, "", "apply_function"], [331, 2, 1, "", "apply_hilbert"], [331, 2, 1, "", "apply_proj"], [331, 2, 1, "", "as_type"], [331, 2, 1, "", "average"], [331, 3, 1, "", "ch_names"], [331, 3, 1, "", "compensation_grade"], [331, 2, 1, "", "compute_psd"], [331, 2, 1, "", "copy"], [331, 2, 1, "", "crop"], [331, 2, 1, "", "decimate"], [331, 2, 1, "", "del_proj"], [331, 2, 1, "", "drop"], [331, 2, 1, "", "drop_bad"], [331, 2, 1, "", "drop_channels"], [331, 2, 1, "", "drop_log_stats"], [331, 2, 1, "", "equalize_event_counts"], [331, 2, 1, "", "export"], [331, 3, 1, "", "filename"], [331, 2, 1, "", "filter"], [331, 2, 1, "", "get_annotations_per_epoch"], [331, 2, 1, "", "get_channel_types"], [331, 2, 1, "", "get_data"], [331, 2, 1, "", "get_montage"], [331, 2, 1, "", "interpolate_bads"], [331, 2, 1, "", "iter_evoked"], [331, 2, 1, "", "load_data"], [331, 3, 1, "", "metadata"], [331, 2, 1, "", "next"], [331, 2, 1, "", "pick"], [331, 2, 1, "", "pick_channels"], [331, 2, 1, "", "pick_types"], [331, 2, 1, "", "plot"], [331, 2, 1, "", "plot_drop_log"], [331, 2, 1, "", "plot_image"], [331, 2, 1, "", "plot_projs_topomap"], [331, 2, 1, "", "plot_psd"], [331, 2, 1, "", "plot_psd_topo"], [331, 2, 1, "", "plot_psd_topomap"], [331, 2, 1, "", "plot_sensors"], [331, 2, 1, "", "plot_topo_image"], [331, 3, 1, "", "proj"], [331, 2, 1, "", "rename_channels"], [331, 2, 1, "", "reorder_channels"], [331, 2, 1, "", "resample"], [331, 2, 1, "", "reset_drop_log_selection"], [331, 2, 1, "", "save"], [331, 2, 1, "", "savgol_filter"], [331, 2, 1, "", "set_annotations"], [331, 2, 1, "", "set_channel_types"], [331, 2, 1, "", "set_eeg_reference"], [331, 2, 1, "", "set_meas_date"], [331, 2, 1, "", "set_montage"], [331, 2, 1, "", "shift_time"], [331, 2, 1, "", "standard_error"], [331, 2, 1, "", "subtract_evoked"], [331, 2, 1, "", "time_as_index"], [331, 3, 1, "", "times"], [331, 3, 1, "", "tmax"], [331, 3, 1, "", "tmin"], [331, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[332, 2, 1, "", "__contains__"], [332, 2, 1, "", "__getitem__"], [332, 2, 1, "", "__iter__"], [332, 2, 1, "", "__len__"], [332, 2, 1, "", "add_annotations_to_metadata"], [332, 2, 1, "", "add_channels"], [332, 2, 1, "", "add_proj"], [332, 2, 1, "", "add_reference_channels"], [332, 2, 1, "", "anonymize"], [332, 2, 1, "", "apply_baseline"], [332, 2, 1, "", "apply_function"], [332, 2, 1, "", "apply_hilbert"], [332, 2, 1, "", "apply_proj"], [332, 2, 1, "", "as_type"], [332, 2, 1, "", "average"], [332, 3, 1, "", "ch_names"], [332, 3, 1, "", "compensation_grade"], [332, 2, 1, "", "compute_psd"], [332, 2, 1, "", "copy"], [332, 2, 1, "", "crop"], [332, 2, 1, "", "decimate"], [332, 2, 1, "", "del_proj"], [332, 2, 1, "", "drop"], [332, 2, 1, "", "drop_bad"], [332, 2, 1, "", "drop_channels"], [332, 2, 1, "", "drop_log_stats"], [332, 2, 1, "", "equalize_event_counts"], [332, 2, 1, "", "export"], [332, 3, 1, "", "filename"], [332, 2, 1, "", "filter"], [332, 2, 1, "", "get_annotations_per_epoch"], [332, 2, 1, "", "get_channel_types"], [332, 2, 1, "", "get_data"], [332, 2, 1, "", "get_montage"], [332, 2, 1, "", "interpolate_bads"], [332, 2, 1, "", "iter_evoked"], [332, 2, 1, "", "load_data"], [332, 3, 1, "", "metadata"], [332, 2, 1, "", "next"], [332, 2, 1, "", "pick"], [332, 2, 1, "", "pick_channels"], [332, 2, 1, "", "pick_types"], [332, 2, 1, "", "plot"], [332, 2, 1, "", "plot_drop_log"], [332, 2, 1, "", "plot_image"], [332, 2, 1, "", "plot_projs_topomap"], [332, 2, 1, "", "plot_psd"], [332, 2, 1, "", "plot_psd_topo"], [332, 2, 1, "", "plot_psd_topomap"], [332, 2, 1, "", "plot_sensors"], [332, 2, 1, "", "plot_topo_image"], [332, 3, 1, "", "proj"], [332, 2, 1, "", "rename_channels"], [332, 2, 1, "", "reorder_channels"], [332, 2, 1, "", "resample"], [332, 2, 1, "", "reset_drop_log_selection"], [332, 2, 1, "", "save"], [332, 2, 1, "", "savgol_filter"], [332, 2, 1, "", "set_annotations"], [332, 2, 1, "", "set_channel_types"], [332, 2, 1, "", "set_eeg_reference"], [332, 2, 1, "", "set_meas_date"], [332, 2, 1, "", "set_montage"], [332, 2, 1, "", "shift_time"], [332, 2, 1, "", "standard_error"], [332, 2, 1, "", "subtract_evoked"], [332, 2, 1, "", "time_as_index"], [332, 3, 1, "", "times"], [332, 3, 1, "", "tmax"], [332, 3, 1, "", "tmin"], [332, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[333, 2, 1, "", "__contains__"], [333, 2, 1, "", "__neg__"], [333, 2, 1, "", "add_channels"], [333, 2, 1, "", "add_proj"], [333, 2, 1, "", "add_reference_channels"], [333, 2, 1, "", "animate_topomap"], [333, 2, 1, "", "anonymize"], [333, 2, 1, "", "apply_baseline"], [333, 2, 1, "", "apply_function"], [333, 2, 1, "", "apply_hilbert"], [333, 2, 1, "", "apply_proj"], [333, 2, 1, "", "as_type"], [333, 3, 1, "", "ch_names"], [333, 3, 1, "", "compensation_grade"], [333, 2, 1, "", "compute_psd"], [333, 2, 1, "", "copy"], [333, 2, 1, "", "crop"], [333, 3, 1, "", "data"], [333, 2, 1, "", "decimate"], [333, 2, 1, "", "del_proj"], [333, 2, 1, "", "detrend"], [333, 2, 1, "", "drop_channels"], [333, 2, 1, "", "export"], [333, 2, 1, "", "filter"], [333, 2, 1, "", "get_channel_types"], [333, 2, 1, "", "get_data"], [333, 2, 1, "", "get_montage"], [333, 2, 1, "", "get_peak"], [333, 2, 1, "", "interpolate_bads"], [333, 3, 1, "", "kind"], [333, 2, 1, "", "pick"], [333, 2, 1, "", "pick_channels"], [333, 2, 1, "", "pick_types"], [333, 2, 1, "", "plot"], [333, 2, 1, "", "plot_field"], [333, 2, 1, "", "plot_image"], [333, 2, 1, "", "plot_joint"], [333, 2, 1, "", "plot_projs_topomap"], [333, 2, 1, "", "plot_psd"], [333, 2, 1, "", "plot_psd_topo"], [333, 2, 1, "", "plot_psd_topomap"], [333, 2, 1, "", "plot_sensors"], [333, 2, 1, "", "plot_topo"], [333, 2, 1, "", "plot_topomap"], [333, 2, 1, "", "plot_white"], [333, 3, 1, "", "proj"], [333, 2, 1, "", "rename_channels"], [333, 2, 1, "", "reorder_channels"], [333, 2, 1, "", "resample"], [333, 2, 1, "", "save"], [333, 2, 1, "", "savgol_filter"], [333, 2, 1, "", "set_channel_types"], [333, 2, 1, "", "set_eeg_reference"], [333, 2, 1, "", "set_meas_date"], [333, 2, 1, "", "set_montage"], [333, 2, 1, "", "shift_time"], [333, 2, 1, "", "time_as_index"], [333, 3, 1, "", "times"], [333, 3, 1, "", "tmax"], [333, 3, 1, "", "tmin"], [333, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[334, 2, 1, "", "__contains__"], [334, 2, 1, "", "__neg__"], [334, 2, 1, "", "add_channels"], [334, 2, 1, "", "add_proj"], [334, 2, 1, "", "add_reference_channels"], [334, 2, 1, "", "animate_topomap"], [334, 2, 1, "", "anonymize"], [334, 2, 1, "", "apply_baseline"], [334, 2, 1, "", "apply_function"], [334, 2, 1, "", "apply_hilbert"], [334, 2, 1, "", "apply_proj"], [334, 2, 1, "", "as_type"], [334, 3, 1, "", "ch_names"], [334, 3, 1, "", "compensation_grade"], [334, 2, 1, "", "compute_psd"], [334, 2, 1, "", "copy"], [334, 2, 1, "", "crop"], [334, 3, 1, "", "data"], [334, 2, 1, "", "decimate"], [334, 2, 1, "", "del_proj"], [334, 2, 1, "", "detrend"], [334, 2, 1, "", "drop_channels"], [334, 2, 1, "", "export"], [334, 2, 1, "", "filter"], [334, 2, 1, "", "get_channel_types"], [334, 2, 1, "", "get_data"], [334, 2, 1, "", "get_montage"], [334, 2, 1, "", "get_peak"], [334, 2, 1, "", "interpolate_bads"], [334, 3, 1, "", "kind"], [334, 2, 1, "", "pick"], [334, 2, 1, "", "pick_channels"], [334, 2, 1, "", "pick_types"], [334, 2, 1, "", "plot"], [334, 2, 1, "", "plot_field"], [334, 2, 1, "", "plot_image"], [334, 2, 1, "", "plot_joint"], [334, 2, 1, "", "plot_projs_topomap"], [334, 2, 1, "", "plot_psd"], [334, 2, 1, "", "plot_psd_topo"], [334, 2, 1, "", "plot_psd_topomap"], [334, 2, 1, "", "plot_sensors"], [334, 2, 1, "", "plot_topo"], [334, 2, 1, "", "plot_topomap"], [334, 2, 1, "", "plot_white"], [334, 3, 1, "", "proj"], [334, 2, 1, "", "rename_channels"], [334, 2, 1, "", "reorder_channels"], [334, 2, 1, "", "resample"], [334, 2, 1, "", "save"], [334, 2, 1, "", "savgol_filter"], [334, 2, 1, "", "set_channel_types"], [334, 2, 1, "", "set_eeg_reference"], [334, 2, 1, "", "set_meas_date"], [334, 2, 1, "", "set_montage"], [334, 2, 1, "", "shift_time"], [334, 2, 1, "", "time_as_index"], [334, 3, 1, "", "times"], [334, 3, 1, "", "tmax"], [334, 3, 1, "", "tmin"], [334, 2, 1, "", "to_data_frame"]], "mne.Forward": [[335, 2, 1, "", "copy"], [335, 2, 1, "", "pick_channels"], [335, 2, 1, "", "save"]], "mne.Info": [[336, 2, 1, "", "__contains__"], [336, 2, 1, "", "__getitem__"], [336, 2, 1, "", "__iter__"], [336, 2, 1, "", "__len__"], [336, 2, 1, "", "anonymize"], [336, 2, 1, "", "clear"], [336, 3, 1, "", "compensation_grade"], [336, 2, 1, "", "copy"], [336, 2, 1, "", "fromkeys"], [336, 2, 1, "", "get"], [336, 2, 1, "", "get_channel_types"], [336, 2, 1, "", "get_montage"], [336, 2, 1, "", "items"], [336, 2, 1, "", "keys"], [336, 2, 1, "", "normalize_proj"], [336, 2, 1, "", "plot_sensors"], [336, 2, 1, "", "pop"], [336, 2, 1, "", "popitem"], [336, 2, 1, "", "rename_channels"], [336, 2, 1, "", "save"], [336, 2, 1, "", "set_channel_types"], [336, 2, 1, "", "set_meas_date"], [336, 2, 1, "", "set_montage"], [336, 2, 1, "", "setdefault"], [336, 2, 1, "", "update"], [336, 2, 1, "", "values"]], "mne.Label": [[337, 2, 1, "", "__add__"], [337, 2, 1, "", "__len__"], [337, 2, 1, "", "__sub__"], [337, 2, 1, "", "center_of_mass"], [337, 2, 1, "", "compute_area"], [337, 2, 1, "", "copy"], [337, 2, 1, "", "distances_to_outside"], [337, 2, 1, "", "fill"], [337, 2, 1, "", "get_tris"], [337, 2, 1, "", "get_vertices_used"], [337, 2, 1, "", "morph"], [337, 2, 1, "", "restrict"], [337, 2, 1, "", "save"], [337, 2, 1, "", "smooth"], [337, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[338, 2, 1, "", "__add__"], [338, 2, 1, "", "__div__"], [338, 2, 1, "", "__mul__"], [338, 2, 1, "", "__neg__"], [338, 2, 1, "", "__sub__"], [338, 2, 1, "", "apply_baseline"], [338, 2, 1, "", "bin"], [338, 2, 1, "", "copy"], [338, 2, 1, "", "crop"], [338, 3, 1, "", "data"], [338, 2, 1, "", "extract_label_time_course"], [338, 2, 1, "", "get_peak"], [338, 2, 1, "", "mean"], [338, 2, 1, "", "plot"], [338, 2, 1, "", "resample"], [338, 2, 1, "", "save"], [338, 3, 1, "", "sfreq"], [338, 3, 1, "", "shape"], [338, 2, 1, "", "sqrt"], [338, 2, 1, "", "sum"], [338, 2, 1, "", "surface"], [338, 2, 1, "", "time_as_index"], [338, 3, 1, "", "times"], [338, 3, 1, "", "tmin"], [338, 2, 1, "", "to_data_frame"], [338, 2, 1, "", "transform"], [338, 2, 1, "", "transform_data"], [338, 3, 1, "", "tstep"], [338, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[339, 2, 1, "", "__add__"], [339, 2, 1, "", "__div__"], [339, 2, 1, "", "__mul__"], [339, 2, 1, "", "__neg__"], [339, 2, 1, "", "__sub__"], [339, 2, 1, "", "apply_baseline"], [339, 2, 1, "", "bin"], [339, 2, 1, "", "copy"], [339, 2, 1, "", "crop"], [339, 3, 1, "", "data"], [339, 2, 1, "", "extract_label_time_course"], [339, 2, 1, "", "get_peak"], [339, 2, 1, "", "magnitude"], [339, 2, 1, "", "mean"], [339, 2, 1, "", "plot"], [339, 2, 1, "", "project"], [339, 2, 1, "", "resample"], [339, 2, 1, "", "save"], [339, 3, 1, "", "sfreq"], [339, 3, 1, "", "shape"], [339, 2, 1, "", "sqrt"], [339, 2, 1, "", "sum"], [339, 2, 1, "", "surface"], [339, 2, 1, "", "time_as_index"], [339, 3, 1, "", "times"], [339, 3, 1, "", "tmin"], [339, 2, 1, "", "to_data_frame"], [339, 2, 1, "", "transform"], [339, 2, 1, "", "transform_data"], [339, 3, 1, "", "tstep"], [339, 2, 1, "", "volume"]], "mne.Projection": [[340, 2, 1, "", "plot_topomap"]], "mne.Report": [[341, 2, 1, "", "__len__"], [341, 2, 1, "", "add_bem"], [341, 2, 1, "", "add_code"], [341, 2, 1, "", "add_covariance"], [341, 2, 1, "", "add_custom_css"], [341, 2, 1, "", "add_custom_js"], [341, 2, 1, "", "add_epochs"], [341, 2, 1, "", "add_events"], [341, 2, 1, "", "add_evokeds"], [341, 2, 1, "", "add_figure"], [341, 2, 1, "", "add_forward"], [341, 2, 1, "", "add_html"], [341, 2, 1, "", "add_ica"], [341, 2, 1, "", "add_image"], [341, 2, 1, "", "add_inverse_operator"], [341, 2, 1, "", "add_projs"], [341, 2, 1, "", "add_raw"], [341, 2, 1, "", "add_stc"], [341, 2, 1, "", "add_sys_info"], [341, 2, 1, "", "add_trans"], [341, 3, 1, "", "html"], [341, 2, 1, "", "parse_folder"], [341, 2, 1, "", "remove"], [341, 2, 1, "", "save"], [341, 3, 1, "", "tags"]], "mne.SourceEstimate": [[342, 2, 1, "", "__add__"], [342, 2, 1, "", "__div__"], [342, 2, 1, "", "__mul__"], [342, 2, 1, "", "__neg__"], [342, 2, 1, "", "__sub__"], [342, 2, 1, "", "apply_baseline"], [342, 2, 1, "", "bin"], [342, 2, 1, "", "center_of_mass"], [342, 2, 1, "", "copy"], [342, 2, 1, "", "crop"], [342, 3, 1, "", "data"], [342, 2, 1, "", "estimate_snr"], [342, 2, 1, "", "expand"], [342, 2, 1, "", "extract_label_time_course"], [342, 2, 1, "", "get_peak"], [342, 2, 1, "", "in_label"], [342, 3, 1, "", "lh_data"], [342, 3, 1, "", "lh_vertno"], [342, 2, 1, "", "mean"], [342, 2, 1, "", "plot"], [342, 2, 1, "", "resample"], [342, 3, 1, "", "rh_data"], [342, 3, 1, "", "rh_vertno"], [342, 2, 1, "", "save"], [342, 3, 1, "", "sfreq"], [342, 3, 1, "", "shape"], [342, 2, 1, "", "sqrt"], [342, 2, 1, "", "sum"], [342, 2, 1, "", "time_as_index"], [342, 3, 1, "", "times"], [342, 3, 1, "", "tmin"], [342, 2, 1, "", "to_data_frame"], [342, 2, 1, "", "to_original_src"], [342, 2, 1, "", "transform"], [342, 2, 1, "", "transform_data"], [342, 3, 1, "", "tstep"]], "mne.SourceMorph": [[343, 2, 1, "", "apply"], [343, 2, 1, "", "compute_vol_morph_mat"], [343, 2, 1, "", "save"]], "mne.SourceSpaces": [[344, 2, 1, "", "__add__"], [344, 2, 1, "", "__getitem__"], [344, 2, 1, "", "copy"], [344, 2, 1, "", "export_volume"], [344, 2, 1, "", "plot"], [344, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[345, 2, 1, "", "__add__"], [345, 2, 1, "", "__div__"], [345, 2, 1, "", "__mul__"], [345, 2, 1, "", "__neg__"], [345, 2, 1, "", "__sub__"], [345, 2, 1, "", "apply_baseline"], [345, 2, 1, "", "bin"], [345, 2, 1, "", "copy"], [345, 2, 1, "", "crop"], [345, 3, 1, "", "data"], [345, 2, 1, "", "expand"], [345, 2, 1, "", "extract_label_time_course"], [345, 2, 1, "", "get_peak"], [345, 2, 1, "", "in_label"], [345, 3, 1, "", "lh_data"], [345, 3, 1, "", "lh_vertno"], [345, 2, 1, "", "magnitude"], [345, 2, 1, "", "mean"], [345, 2, 1, "", "plot"], [345, 2, 1, "", "project"], [345, 2, 1, "", "resample"], [345, 3, 1, "", "rh_data"], [345, 3, 1, "", "rh_vertno"], [345, 2, 1, "", "save"], [345, 3, 1, "", "sfreq"], [345, 3, 1, "", "shape"], [345, 2, 1, "", "sqrt"], [345, 2, 1, "", "sum"], [345, 2, 1, "", "time_as_index"], [345, 3, 1, "", "times"], [345, 3, 1, "", "tmin"], [345, 2, 1, "", "to_data_frame"], [345, 2, 1, "", "to_original_src"], [345, 2, 1, "", "transform"], [345, 2, 1, "", "transform_data"], [345, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[346, 2, 1, "", "__add__"], [346, 2, 1, "", "__div__"], [346, 2, 1, "", "__mul__"], [346, 2, 1, "", "__neg__"], [346, 2, 1, "", "__sub__"], [346, 2, 1, "", "apply_baseline"], [346, 2, 1, "", "as_volume"], [346, 2, 1, "", "bin"], [346, 2, 1, "", "copy"], [346, 2, 1, "", "crop"], [346, 3, 1, "", "data"], [346, 2, 1, "", "extract_label_time_course"], [346, 2, 1, "", "get_peak"], [346, 2, 1, "", "in_label"], [346, 2, 1, "", "mean"], [346, 2, 1, "", "plot"], [346, 2, 1, "", "plot_3d"], [346, 2, 1, "", "resample"], [346, 2, 1, "", "save"], [346, 2, 1, "", "save_as_volume"], [346, 3, 1, "", "sfreq"], [346, 3, 1, "", "shape"], [346, 2, 1, "", "sqrt"], [346, 2, 1, "", "sum"], [346, 2, 1, "", "time_as_index"], [346, 3, 1, "", "times"], [346, 3, 1, "", "tmin"], [346, 2, 1, "", "to_data_frame"], [346, 2, 1, "", "transform"], [346, 2, 1, "", "transform_data"], [346, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[347, 2, 1, "", "__add__"], [347, 2, 1, "", "__div__"], [347, 2, 1, "", "__mul__"], [347, 2, 1, "", "__neg__"], [347, 2, 1, "", "__sub__"], [347, 2, 1, "", "apply_baseline"], [347, 2, 1, "", "as_volume"], [347, 2, 1, "", "bin"], [347, 2, 1, "", "copy"], [347, 2, 1, "", "crop"], [347, 3, 1, "", "data"], [347, 2, 1, "", "extract_label_time_course"], [347, 2, 1, "", "get_peak"], [347, 2, 1, "", "in_label"], [347, 2, 1, "", "magnitude"], [347, 2, 1, "", "mean"], [347, 2, 1, "", "plot"], [347, 2, 1, "", "plot_3d"], [347, 2, 1, "", "project"], [347, 2, 1, "", "resample"], [347, 2, 1, "", "save"], [347, 2, 1, "", "save_as_volume"], [347, 3, 1, "", "sfreq"], [347, 3, 1, "", "shape"], [347, 2, 1, "", "sqrt"], [347, 2, 1, "", "sum"], [347, 2, 1, "", "time_as_index"], [347, 3, 1, "", "times"], [347, 3, 1, "", "tmin"], [347, 2, 1, "", "to_data_frame"], [347, 2, 1, "", "transform"], [347, 2, 1, "", "transform_data"], [347, 3, 1, "", "tstep"]], "mne.baseline": [[354, 4, 1, "", "rescale"]], "mne.beamformer": [[355, 1, 1, "", "Beamformer"], [356, 4, 1, "", "apply_dics"], [357, 4, 1, "", "apply_dics_csd"], [358, 4, 1, "", "apply_dics_epochs"], [359, 4, 1, "", "apply_dics_tfr_epochs"], [360, 4, 1, "", "apply_lcmv"], [361, 4, 1, "", "apply_lcmv_cov"], [362, 4, 1, "", "apply_lcmv_epochs"], [363, 4, 1, "", "apply_lcmv_raw"], [364, 4, 1, "", "make_dics"], [365, 4, 1, "", "make_lcmv"], [366, 4, 1, "", "make_lcmv_resolution_matrix"], [367, 4, 1, "", "rap_music"], [368, 4, 1, "", "read_beamformer"], [369, 4, 1, "", "trap_music"]], "mne.beamformer.Beamformer": [[355, 2, 1, "", "__contains__"], [355, 2, 1, "", "__getitem__"], [355, 2, 1, "", "__iter__"], [355, 2, 1, "", "__len__"], [355, 2, 1, "", "clear"], [355, 2, 1, "", "copy"], [355, 2, 1, "", "fromkeys"], [355, 2, 1, "", "get"], [355, 2, 1, "", "items"], [355, 2, 1, "", "keys"], [355, 2, 1, "", "pop"], [355, 2, 1, "", "popitem"], [355, 2, 1, "", "save"], [355, 2, 1, "", "setdefault"], [355, 2, 1, "", "update"], [355, 2, 1, "", "values"]], "mne.bem": [[370, 1, 1, "", "ConductorModel"], [371, 4, 1, "", "convert_flash_mris"], [372, 4, 1, "", "distance_to_bem"], [373, 4, 1, "", "fit_sphere_to_headshape"], [374, 4, 1, "", "get_fitting_dig"], [375, 4, 1, "", "make_flash_bem"], [376, 4, 1, "", "make_scalp_surfaces"], [377, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[370, 2, 1, "", "__contains__"], [370, 2, 1, "", "__getitem__"], [370, 2, 1, "", "__iter__"], [370, 2, 1, "", "__len__"], [370, 2, 1, "", "clear"], [370, 2, 1, "", "copy"], [370, 2, 1, "", "fromkeys"], [370, 2, 1, "", "get"], [370, 2, 1, "", "items"], [370, 2, 1, "", "keys"], [370, 2, 1, "", "pop"], [370, 2, 1, "", "popitem"], [370, 3, 1, "", "radius"], [370, 2, 1, "", "setdefault"], [370, 2, 1, "", "update"], [370, 2, 1, "", "values"]], "mne.channels": [[380, 1, 1, "", "DigMontage"], [381, 1, 1, "", "Layout"], [382, 4, 1, "", "combine_channels"], [383, 4, 1, "", "compute_dev_head_t"], [384, 4, 1, "", "compute_native_head_t"], [385, 4, 1, "", "equalize_channels"], [386, 4, 1, "", "find_ch_adjacency"], [387, 4, 1, "", "find_layout"], [388, 4, 1, "", "fix_mag_coil_types"], [389, 4, 1, "", "generate_2d_layout"], [390, 4, 1, "", "get_builtin_ch_adjacencies"], [391, 4, 1, "", "get_builtin_montages"], [392, 4, 1, "", "make_1020_channel_selections"], [393, 4, 1, "", "make_dig_montage"], [394, 4, 1, "", "make_eeg_layout"], [395, 4, 1, "", "make_grid_layout"], [396, 4, 1, "", "make_standard_montage"], [397, 4, 1, "", "read_ch_adjacency"], [398, 4, 1, "", "read_custom_montage"], [399, 4, 1, "", "read_dig_captrak"], [400, 4, 1, "", "read_dig_dat"], [401, 4, 1, "", "read_dig_egi"], [402, 4, 1, "", "read_dig_fif"], [403, 4, 1, "", "read_dig_hpts"], [404, 4, 1, "", "read_dig_localite"], [405, 4, 1, "", "read_dig_polhemus_isotrak"], [406, 4, 1, "", "read_layout"], [407, 4, 1, "", "read_polhemus_fastscan"], [408, 4, 1, "", "rename_channels"], [409, 4, 1, "", "unify_bad_channels"]], "mne.channels.DigMontage": [[380, 2, 1, "", "__add__"], [380, 2, 1, "", "add_estimated_fiducials"], [380, 2, 1, "", "add_mni_fiducials"], [380, 2, 1, "", "apply_trans"], [380, 2, 1, "", "copy"], [380, 2, 1, "", "get_positions"], [380, 2, 1, "", "plot"], [380, 2, 1, "", "remove_fiducials"], [380, 2, 1, "", "rename_channels"], [380, 2, 1, "", "save"]], "mne.channels.Layout": [[381, 2, 1, "", "plot"], [381, 2, 1, "", "save"]], "mne.chpi": [[410, 4, 1, "", "compute_chpi_amplitudes"], [411, 4, 1, "", "compute_chpi_locs"], [412, 4, 1, "", "compute_chpi_snr"], [413, 4, 1, "", "compute_head_pos"], [414, 4, 1, "", "extract_chpi_locs_ctf"], [415, 4, 1, "", "extract_chpi_locs_kit"], [416, 4, 1, "", "filter_chpi"], [417, 4, 1, "", "get_active_chpi"], [418, 4, 1, "", "get_chpi_info"], [419, 4, 1, "", "head_pos_to_trans_rot_t"], [420, 4, 1, "", "read_head_pos"], [421, 4, 1, "", "write_head_pos"]], "mne.coreg": [[434, 1, 1, "", "Coregistration"], [435, 4, 1, "", "estimate_head_mri_t"], [436, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[434, 2, 1, "", "compute_dig_mri_distances"], [434, 2, 1, "", "fit_fiducials"], [434, 2, 1, "", "fit_icp"], [434, 2, 1, "", "omit_head_shape_points"], [434, 2, 1, "", "reset"], [434, 3, 1, "", "scale"], [434, 2, 1, "", "set_fid_match"], [434, 2, 1, "", "set_grow_hair"], [434, 2, 1, "", "set_rotation"], [434, 2, 1, "", "set_scale"], [434, 2, 1, "", "set_scale_mode"], [434, 2, 1, "", "set_translation"], [434, 3, 1, "", "trans"]], "mne.cov": [[439, 4, 1, "", "compute_whitener"], [440, 4, 1, "", "prepare_noise_cov"], [441, 4, 1, "", "regularize"]], "mne.cuda": [[444, 4, 1, "", "get_cuda_memory"], [445, 4, 1, "", "init_cuda"], [446, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[447, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[448, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[449, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[450, 4, 1, "", "load_data"], [451, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[452, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[453, 4, 1, "", "data_path"]], "mne.datasets.eyelink": [[454, 4, 1, "", "data_path"]], "mne.datasets": [[455, 4, 1, "", "fetch_aparc_sub_parcellation"], [456, 4, 1, "", "fetch_dataset"], [457, 4, 1, "", "fetch_fsaverage"], [458, 4, 1, "", "fetch_hcp_mmp_parcellation"], [459, 4, 1, "", "fetch_infant_template"], [460, 4, 1, "", "fetch_phantom"], [462, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[461, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[463, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[464, 4, 1, "", "data_path"]], "mne.datasets.limo": [[465, 4, 1, "", "load_data"]], "mne.datasets.misc": [[466, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[467, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[468, 4, 1, "", "data_path"]], "mne.datasets.opm": [[469, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[470, 4, 1, "", "data_path"]], "mne.datasets.phantom_kernel": [[471, 4, 1, "", "data_path"]], "mne.datasets.phantom_kit": [[472, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[473, 4, 1, "", "data_path"]], "mne.datasets.sample": [[474, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[475, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[476, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[477, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[478, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[479, 4, 1, "", "data_path"]], "mne.datasets.ucl_opm_auditory": [[480, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[481, 4, 1, "", "data_path"]], "mne.decoding": [[483, 1, 1, "", "CSP"], [484, 1, 1, "", "EMS"], [485, 1, 1, "", "FilterEstimator"], [486, 1, 1, "", "GeneralizingEstimator"], [487, 1, 1, "", "LinearModel"], [488, 1, 1, "", "PSDEstimator"], [489, 1, 1, "", "ReceptiveField"], [490, 1, 1, "", "SPoC"], [491, 1, 1, "", "SSD"], [492, 1, 1, "", "Scaler"], [493, 1, 1, "", "SlidingEstimator"], [494, 1, 1, "", "TemporalFilter"], [495, 1, 1, "", "TimeDelayingRidge"], [496, 1, 1, "", "TimeFrequency"], [497, 1, 1, "", "UnsupervisedSpatialFilter"], [498, 1, 1, "", "Vectorizer"], [499, 4, 1, "", "compute_ems"], [500, 4, 1, "", "cross_val_multiscore"], [501, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[483, 2, 1, "", "fit"], [483, 2, 1, "", "fit_transform"], [483, 2, 1, "", "get_params"], [483, 2, 1, "", "plot_filters"], [483, 2, 1, "", "plot_patterns"], [483, 2, 1, "", "set_params"], [483, 2, 1, "", "transform"]], "mne.decoding.EMS": [[484, 2, 1, "", "fit"], [484, 2, 1, "", "fit_transform"], [484, 2, 1, "", "get_params"], [484, 2, 1, "", "set_params"], [484, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[485, 2, 1, "", "fit"], [485, 2, 1, "", "fit_transform"], [485, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[486, 2, 1, "", "decision_function"], [486, 2, 1, "", "fit"], [486, 2, 1, "", "fit_transform"], [486, 2, 1, "", "get_params"], [486, 2, 1, "", "predict"], [486, 2, 1, "", "predict_proba"], [486, 2, 1, "", "score"], [486, 2, 1, "", "set_params"], [486, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[487, 2, 1, "", "fit"], [487, 2, 1, "", "get_params"], [487, 2, 1, "", "set_params"]], "mne.decoding.PSDEstimator": [[488, 2, 1, "", "fit"], [488, 2, 1, "", "fit_transform"], [488, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[489, 2, 1, "", "fit"], [489, 2, 1, "", "get_params"], [489, 2, 1, "", "predict"], [489, 2, 1, "", "score"], [489, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[490, 2, 1, "", "fit"], [490, 2, 1, "", "fit_transform"], [490, 2, 1, "", "get_params"], [490, 2, 1, "", "plot_filters"], [490, 2, 1, "", "plot_patterns"], [490, 2, 1, "", "set_params"], [490, 2, 1, "", "transform"]], "mne.decoding.SSD": [[491, 2, 1, "", "apply"], [491, 2, 1, "", "fit"], [491, 2, 1, "", "fit_transform"], [491, 2, 1, "", "get_params"], [491, 2, 1, "", "get_spectral_ratio"], [491, 2, 1, "", "inverse_transform"], [491, 2, 1, "", "set_params"], [491, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[492, 2, 1, "", "fit"], [492, 2, 1, "", "fit_transform"], [492, 2, 1, "", "get_params"], [492, 2, 1, "", "inverse_transform"], [492, 2, 1, "", "set_params"], [492, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[493, 2, 1, "", "decision_function"], [493, 2, 1, "", "fit"], [493, 2, 1, "", "fit_transform"], [493, 2, 1, "", "get_params"], [493, 2, 1, "", "predict"], [493, 2, 1, "", "predict_proba"], [493, 2, 1, "", "score"], [493, 2, 1, "", "set_params"], [493, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[494, 2, 1, "", "fit"], [494, 2, 1, "", "fit_transform"], [494, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[495, 2, 1, "", "fit"], [495, 2, 1, "", "get_params"], [495, 2, 1, "", "predict"], [495, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[496, 2, 1, "", "fit"], [496, 2, 1, "", "fit_transform"], [496, 2, 1, "", "get_params"], [496, 2, 1, "", "set_params"], [496, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[497, 2, 1, "", "fit"], [497, 2, 1, "", "fit_transform"], [497, 2, 1, "", "get_params"], [497, 2, 1, "", "inverse_transform"], [497, 2, 1, "", "set_params"], [497, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[498, 2, 1, "", "fit"], [498, 2, 1, "", "fit_transform"], [498, 2, 1, "", "inverse_transform"], [498, 2, 1, "", "transform"]], "mne.dipole": [[503, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[504, 4, 1, "", "average_movements"], [505, 4, 1, "", "combine_event_ids"], [506, 4, 1, "", "equalize_epoch_counts"], [507, 4, 1, "", "make_metadata"]], "mne.event": [[509, 4, 1, "", "define_target_events"], [510, 4, 1, "", "match_event_names"], [511, 4, 1, "", "shift_time_events"]], "mne.export": [[513, 4, 1, "", "export_epochs"], [514, 4, 1, "", "export_evokeds"], [515, 4, 1, "", "export_evokeds_mff"], [516, 4, 1, "", "export_raw"]], "mne.filter": [[518, 4, 1, "", "construct_iir_filter"], [519, 4, 1, "", "create_filter"], [520, 4, 1, "", "estimate_ringing_samples"], [521, 4, 1, "", "filter_data"], [522, 4, 1, "", "notch_filter"], [523, 4, 1, "", "resample"]], "mne.forward": [[527, 4, 1, "", "compute_depth_prior"], [528, 4, 1, "", "compute_orient_prior"], [529, 4, 1, "", "restrict_forward_to_label"], [530, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[542, 4, 1, "", "coregistration"]], "mne.inverse_sparse": [[545, 4, 1, "", "gamma_map"], [546, 4, 1, "", "make_stc_from_dipoles"], [547, 4, 1, "", "mixed_norm"], [548, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[549, 1, 1, "", "BaseRaw"], [550, 1, 1, "", "Raw"], [551, 1, 1, "", "RawArray"], [552, 4, 1, "", "anonymize_info"], [553, 4, 1, "", "get_channel_type_constants"], [15, 0, 0, "-", "kit"], [555, 4, 1, "", "read_fiducials"], [556, 4, 1, "", "read_info"], [557, 4, 1, "", "read_raw"], [558, 4, 1, "", "read_raw_artemis123"], [559, 4, 1, "", "read_raw_bdf"], [560, 4, 1, "", "read_raw_boxy"], [561, 4, 1, "", "read_raw_brainvision"], [562, 4, 1, "", "read_raw_bti"], [563, 4, 1, "", "read_raw_cnt"], [564, 4, 1, "", "read_raw_ctf"], [565, 4, 1, "", "read_raw_curry"], [566, 4, 1, "", "read_raw_edf"], [567, 4, 1, "", "read_raw_eeglab"], [568, 4, 1, "", "read_raw_egi"], [569, 4, 1, "", "read_raw_eximia"], [570, 4, 1, "", "read_raw_eyelink"], [571, 4, 1, "", "read_raw_fieldtrip"], [572, 4, 1, "", "read_raw_fif"], [573, 4, 1, "", "read_raw_fil"], [574, 4, 1, "", "read_raw_gdf"], [575, 4, 1, "", "read_raw_hitachi"], [576, 4, 1, "", "read_raw_kit"], [577, 4, 1, "", "read_raw_nedf"], [578, 4, 1, "", "read_raw_neuralynx"], [579, 4, 1, "", "read_raw_nicolet"], [580, 4, 1, "", "read_raw_nihon"], [581, 4, 1, "", "read_raw_nirx"], [582, 4, 1, "", "read_raw_nsx"], [583, 4, 1, "", "read_raw_persyst"], [584, 4, 1, "", "read_raw_snirf"], [585, 4, 1, "", "show_fiff"], [586, 4, 1, "", "write_fiducials"], [587, 4, 1, "", "write_info"]], "mne.io.Raw": [[550, 2, 1, "", "__contains__"], [550, 2, 1, "", "__getitem__"], [550, 2, 1, "", "__len__"], [550, 3, 1, "", "acqparser"], [550, 2, 1, "", "add_channels"], [550, 2, 1, "", "add_events"], [550, 2, 1, "", "add_proj"], [550, 2, 1, "", "add_reference_channels"], [550, 3, 1, "", "annotations"], [550, 2, 1, "", "anonymize"], [550, 2, 1, "", "append"], [550, 2, 1, "", "apply_function"], [550, 2, 1, "", "apply_gradient_compensation"], [550, 2, 1, "", "apply_hilbert"], [550, 2, 1, "", "apply_proj"], [550, 3, 1, "", "ch_names"], [550, 2, 1, "", "close"], [550, 3, 1, "", "compensation_grade"], [550, 2, 1, "", "compute_psd"], [550, 2, 1, "", "copy"], [550, 2, 1, "", "crop"], [550, 2, 1, "", "crop_by_annotations"], [550, 2, 1, "", "del_proj"], [550, 2, 1, "", "describe"], [550, 2, 1, "", "drop_channels"], [550, 2, 1, "", "export"], [550, 3, 1, "", "filenames"], [550, 2, 1, "", "filter"], [550, 3, 1, "", "first_samp"], [550, 3, 1, "", "first_time"], [550, 2, 1, "", "fix_mag_coil_types"], [550, 2, 1, "", "get_channel_types"], [550, 2, 1, "", "get_data"], [550, 2, 1, "", "get_montage"], [550, 2, 1, "", "interpolate_bads"], [550, 3, 1, "", "last_samp"], [550, 2, 1, "", "load_bad_channels"], [550, 2, 1, "", "load_data"], [550, 3, 1, "", "n_times"], [550, 2, 1, "", "notch_filter"], [550, 2, 1, "", "pick"], [550, 2, 1, "", "pick_channels"], [550, 2, 1, "", "pick_types"], [550, 2, 1, "", "plot"], [550, 2, 1, "", "plot_projs_topomap"], [550, 2, 1, "", "plot_psd"], [550, 2, 1, "", "plot_psd_topo"], [550, 2, 1, "", "plot_psd_topomap"], [550, 2, 1, "", "plot_sensors"], [550, 3, 1, "", "proj"], [550, 2, 1, "", "rename_channels"], [550, 2, 1, "", "reorder_channels"], [550, 2, 1, "", "resample"], [550, 2, 1, "", "save"], [550, 2, 1, "", "savgol_filter"], [550, 2, 1, "", "set_annotations"], [550, 2, 1, "", "set_channel_types"], [550, 2, 1, "", "set_eeg_reference"], [550, 2, 1, "", "set_meas_date"], [550, 2, 1, "", "set_montage"], [550, 2, 1, "", "time_as_index"], [550, 3, 1, "", "times"], [550, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[551, 2, 1, "", "__contains__"], [551, 2, 1, "", "__getitem__"], [551, 2, 1, "", "__len__"], [551, 2, 1, "", "add_channels"], [551, 2, 1, "", "add_events"], [551, 2, 1, "", "add_proj"], [551, 2, 1, "", "add_reference_channels"], [551, 3, 1, "", "annotations"], [551, 2, 1, "", "anonymize"], [551, 2, 1, "", "append"], [551, 2, 1, "", "apply_function"], [551, 2, 1, "", "apply_gradient_compensation"], [551, 2, 1, "", "apply_hilbert"], [551, 2, 1, "", "apply_proj"], [551, 3, 1, "", "ch_names"], [551, 2, 1, "", "close"], [551, 3, 1, "", "compensation_grade"], [551, 2, 1, "", "compute_psd"], [551, 2, 1, "", "copy"], [551, 2, 1, "", "crop"], [551, 2, 1, "", "crop_by_annotations"], [551, 2, 1, "", "del_proj"], [551, 2, 1, "", "describe"], [551, 2, 1, "", "drop_channels"], [551, 2, 1, "", "export"], [551, 3, 1, "", "filenames"], [551, 2, 1, "", "filter"], [551, 3, 1, "", "first_samp"], [551, 3, 1, "", "first_time"], [551, 2, 1, "", "get_channel_types"], [551, 2, 1, "", "get_data"], [551, 2, 1, "", "get_montage"], [551, 2, 1, "", "interpolate_bads"], [551, 3, 1, "", "last_samp"], [551, 2, 1, "", "load_bad_channels"], [551, 2, 1, "", "load_data"], [551, 3, 1, "", "n_times"], [551, 2, 1, "", "notch_filter"], [551, 2, 1, "", "pick"], [551, 2, 1, "", "pick_channels"], [551, 2, 1, "", "pick_types"], [551, 2, 1, "", "plot"], [551, 2, 1, "", "plot_projs_topomap"], [551, 2, 1, "", "plot_psd"], [551, 2, 1, "", "plot_psd_topo"], [551, 2, 1, "", "plot_psd_topomap"], [551, 2, 1, "", "plot_sensors"], [551, 3, 1, "", "proj"], [551, 2, 1, "", "rename_channels"], [551, 2, 1, "", "reorder_channels"], [551, 2, 1, "", "resample"], [551, 2, 1, "", "save"], [551, 2, 1, "", "savgol_filter"], [551, 2, 1, "", "set_annotations"], [551, 2, 1, "", "set_channel_types"], [551, 2, 1, "", "set_eeg_reference"], [551, 2, 1, "", "set_meas_date"], [551, 2, 1, "", "set_montage"], [551, 2, 1, "", "time_as_index"], [551, 3, 1, "", "times"], [551, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[554, 4, 1, "", "read_mrk"]], "mne.label": [[588, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[602, 1, 1, "", "InverseOperator"], [603, 4, 1, "", "apply_inverse"], [604, 4, 1, "", "apply_inverse_cov"], [605, 4, 1, "", "apply_inverse_epochs"], [606, 4, 1, "", "apply_inverse_raw"], [607, 4, 1, "", "apply_inverse_tfr_epochs"], [608, 4, 1, "", "compute_rank_inverse"], [609, 4, 1, "", "compute_source_psd"], [610, 4, 1, "", "compute_source_psd_epochs"], [611, 4, 1, "", "estimate_snr"], [612, 4, 1, "", "get_cross_talk"], [613, 4, 1, "", "get_point_spread"], [614, 4, 1, "", "make_inverse_operator"], [615, 4, 1, "", "make_inverse_resolution_matrix"], [616, 4, 1, "", "prepare_inverse_operator"], [617, 4, 1, "", "read_inverse_operator"], [618, 4, 1, "", "resolution_metrics"], [619, 4, 1, "", "source_band_induced_power"], [620, 4, 1, "", "source_induced_power"], [621, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[602, 2, 1, "", "__contains__"], [602, 2, 1, "", "__getitem__"], [602, 2, 1, "", "__iter__"], [602, 2, 1, "", "__len__"], [602, 3, 1, "", "ch_names"], [602, 2, 1, "", "clear"], [602, 2, 1, "", "copy"], [602, 2, 1, "", "fromkeys"], [602, 2, 1, "", "get"], [602, 3, 1, "", "info"], [602, 2, 1, "", "items"], [602, 2, 1, "", "keys"], [602, 2, 1, "", "pop"], [602, 2, 1, "", "popitem"], [602, 2, 1, "", "setdefault"], [602, 2, 1, "", "update"], [602, 2, 1, "", "values"]], "mne.preprocessing": [[635, 1, 1, "", "EOGRegression"], [636, 1, 1, "", "ICA"], [637, 1, 1, "", "Xdawn"], [638, 4, 1, "", "annotate_amplitude"], [639, 4, 1, "", "annotate_break"], [640, 4, 1, "", "annotate_movement"], [641, 4, 1, "", "annotate_muscle_zscore"], [642, 4, 1, "", "annotate_nan"], [643, 4, 1, "", "compute_average_dev_head_t"], [644, 4, 1, "", "compute_bridged_electrodes"], [645, 4, 1, "", "compute_current_source_density"], [646, 4, 1, "", "compute_fine_calibration"], [647, 4, 1, "", "compute_maxwell_basis"], [648, 4, 1, "", "compute_proj_ecg"], [649, 4, 1, "", "compute_proj_eog"], [650, 4, 1, "", "compute_proj_hfc"], [651, 4, 1, "", "corrmap"], [652, 4, 1, "", "cortical_signal_suppression"], [653, 4, 1, "", "create_ecg_epochs"], [654, 4, 1, "", "create_eog_epochs"], [655, 4, 1, "", "equalize_bads"], [13, 0, 0, "-", "eyetracking"], [660, 4, 1, "", "find_bad_channels_maxwell"], [661, 4, 1, "", "find_ecg_events"], [662, 4, 1, "", "find_eog_events"], [663, 4, 1, "", "fix_stim_artifact"], [664, 4, 1, "", "ica_find_ecg_events"], [665, 4, 1, "", "ica_find_eog_events"], [13, 0, 0, "-", "ieeg"], [669, 4, 1, "", "infomax"], [670, 4, 1, "", "interpolate_bridged_electrodes"], [671, 4, 1, "", "maxwell_filter"], [672, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [13, 0, 0, "-", "nirs"], [679, 4, 1, "", "oversampled_temporal_projection"], [680, 4, 1, "", "peak_finder"], [681, 4, 1, "", "read_eog_regression"], [682, 4, 1, "", "read_fine_calibration"], [683, 4, 1, "", "read_ica"], [684, 4, 1, "", "read_ica_eeglab"], [685, 4, 1, "", "realign_raw"], [686, 4, 1, "", "regress_artifact"], [687, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[635, 2, 1, "", "apply"], [635, 2, 1, "", "fit"], [635, 2, 1, "", "plot"], [635, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[636, 2, 1, "", "__contains__"], [636, 2, 1, "", "apply"], [636, 3, 1, "", "compensation_grade"], [636, 2, 1, "", "copy"], [636, 2, 1, "", "find_bads_ecg"], [636, 2, 1, "", "find_bads_eog"], [636, 2, 1, "", "find_bads_muscle"], [636, 2, 1, "", "find_bads_ref"], [636, 2, 1, "", "fit"], [636, 2, 1, "", "get_channel_types"], [636, 2, 1, "", "get_components"], [636, 2, 1, "", "get_explained_variance_ratio"], [636, 2, 1, "", "get_sources"], [636, 2, 1, "", "plot_components"], [636, 2, 1, "", "plot_overlay"], [636, 2, 1, "", "plot_properties"], [636, 2, 1, "", "plot_scores"], [636, 2, 1, "", "plot_sources"], [636, 2, 1, "", "save"], [636, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[637, 2, 1, "", "apply"], [637, 2, 1, "", "fit"], [637, 2, 1, "", "fit_transform"], [637, 2, 1, "", "get_params"], [637, 2, 1, "", "inverse_transform"], [637, 2, 1, "", "set_params"], [637, 2, 1, "", "transform"]], "mne.preprocessing.eyetracking": [[656, 1, 1, "", "Calibration"], [657, 4, 1, "", "interpolate_blinks"], [658, 4, 1, "", "read_eyelink_calibration"], [659, 4, 1, "", "set_channel_types_eyetrack"]], "mne.preprocessing.eyetracking.Calibration": [[656, 2, 1, "", "__contains__"], [656, 2, 1, "", "__getitem__"], [656, 2, 1, "", "__iter__"], [656, 2, 1, "", "__len__"], [656, 2, 1, "", "clear"], [656, 2, 1, "", "copy"], [656, 2, 1, "", "fromkeys"], [656, 2, 1, "", "get"], [656, 2, 1, "", "items"], [656, 2, 1, "", "keys"], [656, 2, 1, "", "plot"], [656, 2, 1, "", "pop"], [656, 2, 1, "", "popitem"], [656, 2, 1, "", "setdefault"], [656, 2, 1, "", "update"], [656, 2, 1, "", "values"]], "mne.preprocessing.ieeg": [[666, 4, 1, "", "make_montage_volume"], [667, 4, 1, "", "project_sensors_onto_brain"], [668, 4, 1, "", "warp_montage"]], "mne.preprocessing.nirs": [[673, 4, 1, "", "beer_lambert_law"], [674, 4, 1, "", "optical_density"], [675, 4, 1, "", "scalp_coupling_index"], [676, 4, 1, "", "short_channels"], [677, 4, 1, "", "source_detector_distances"], [678, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[734, 1, 1, "", "SourceSimulator"], [735, 4, 1, "", "add_chpi"], [736, 4, 1, "", "add_ecg"], [737, 4, 1, "", "add_eog"], [738, 4, 1, "", "add_noise"], [19, 0, 0, "-", "metrics"], [747, 4, 1, "", "select_source_in_label"], [748, 4, 1, "", "simulate_evoked"], [749, 4, 1, "", "simulate_raw"], [750, 4, 1, "", "simulate_sparse_stc"], [751, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[734, 2, 1, "", "__iter__"], [734, 2, 1, "", "add_data"], [734, 3, 1, "", "duration"], [734, 2, 1, "", "get_stc"], [734, 2, 1, "", "get_stim_channel"], [734, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[739, 4, 1, "", "cosine_score"], [740, 4, 1, "", "f1_score"], [741, 4, 1, "", "peak_position_error"], [742, 4, 1, "", "precision_score"], [743, 4, 1, "", "recall_score"], [744, 4, 1, "", "region_localization_error"], [745, 4, 1, "", "roc_auc_score"], [746, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[752, 4, 1, "", "compute_distance_to_sensors"], [753, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[762, 4, 1, "", "bonferroni_correction"], [763, 4, 1, "", "bootstrap_confidence_interval"], [764, 4, 1, "", "combine_adjacency"], [765, 4, 1, "", "f_mway_rm"], [766, 4, 1, "", "f_oneway"], [767, 4, 1, "", "f_threshold_mway_rm"], [768, 4, 1, "", "fdr_correction"], [769, 4, 1, "", "linear_regression"], [770, 4, 1, "", "linear_regression_raw"], [771, 4, 1, "", "permutation_cluster_1samp_test"], [772, 4, 1, "", "permutation_cluster_test"], [773, 4, 1, "", "permutation_t_test"], [774, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [775, 4, 1, "", "spatio_temporal_cluster_test"], [776, 4, 1, "", "summarize_clusters_stc"], [777, 4, 1, "", "ttest_1samp_no_p"], [778, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[781, 4, 1, "", "complete_surface_info"], [782, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[784, 1, 1, "", "AverageTFR"], [785, 1, 1, "", "CrossSpectralDensity"], [786, 1, 1, "", "EpochsSpectrum"], [787, 1, 1, "", "EpochsSpectrumArray"], [788, 1, 1, "", "EpochsTFR"], [789, 1, 1, "", "Spectrum"], [790, 1, 1, "", "SpectrumArray"], [791, 4, 1, "", "csd_array_fourier"], [792, 4, 1, "", "csd_array_morlet"], [793, 4, 1, "", "csd_array_multitaper"], [794, 4, 1, "", "csd_fourier"], [795, 4, 1, "", "csd_morlet"], [796, 4, 1, "", "csd_multitaper"], [797, 4, 1, "", "csd_tfr"], [798, 4, 1, "", "dpss_windows"], [799, 4, 1, "", "fit_iir_model_raw"], [800, 4, 1, "", "fwhm"], [801, 4, 1, "", "istft"], [802, 4, 1, "", "morlet"], [803, 4, 1, "", "pick_channels_csd"], [804, 4, 1, "", "psd_array_multitaper"], [805, 4, 1, "", "psd_array_welch"], [806, 4, 1, "", "read_csd"], [807, 4, 1, "", "read_spectrum"], [808, 4, 1, "", "read_tfrs"], [809, 4, 1, "", "stft"], [810, 4, 1, "", "stftfreq"], [22, 0, 0, "-", "tfr"], [813, 4, 1, "", "tfr_array_morlet"], [814, 4, 1, "", "tfr_array_multitaper"], [815, 4, 1, "", "tfr_array_stockwell"], [816, 4, 1, "", "tfr_morlet"], [817, 4, 1, "", "tfr_multitaper"], [818, 4, 1, "", "tfr_stockwell"], [819, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[784, 2, 1, "", "__add__"], [784, 2, 1, "", "__contains__"], [784, 2, 1, "", "__mul__"], [784, 2, 1, "", "__sub__"], [784, 2, 1, "", "add_channels"], [784, 2, 1, "", "add_reference_channels"], [784, 2, 1, "", "apply_baseline"], [784, 3, 1, "", "ch_names"], [784, 3, 1, "", "compensation_grade"], [784, 2, 1, "", "copy"], [784, 2, 1, "", "crop"], [784, 2, 1, "", "decimate"], [784, 2, 1, "", "drop_channels"], [784, 2, 1, "", "get_channel_types"], [784, 2, 1, "", "pick"], [784, 2, 1, "", "pick_channels"], [784, 2, 1, "", "pick_types"], [784, 2, 1, "", "plot"], [784, 2, 1, "", "plot_joint"], [784, 2, 1, "", "plot_topo"], [784, 2, 1, "", "plot_topomap"], [784, 2, 1, "", "reorder_channels"], [784, 2, 1, "", "save"], [784, 2, 1, "", "shift_time"], [784, 2, 1, "", "time_as_index"], [784, 3, 1, "", "times"], [784, 3, 1, "", "tmax"], [784, 3, 1, "", "tmin"], [784, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[785, 2, 1, "", "__getitem__"], [785, 2, 1, "", "__len__"], [785, 2, 1, "", "copy"], [785, 2, 1, "", "get_data"], [785, 2, 1, "", "mean"], [785, 3, 1, "", "n_channels"], [785, 2, 1, "", "pick_channels"], [785, 2, 1, "", "pick_frequency"], [785, 2, 1, "", "plot"], [785, 2, 1, "", "save"], [785, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[786, 2, 1, "", "__contains__"], [786, 2, 1, "", "__getitem__"], [786, 2, 1, "", "__iter__"], [786, 2, 1, "", "__len__"], [786, 2, 1, "", "add_channels"], [786, 2, 1, "", "add_reference_channels"], [786, 2, 1, "", "average"], [786, 3, 1, "", "compensation_grade"], [786, 2, 1, "", "copy"], [786, 2, 1, "", "drop_channels"], [786, 2, 1, "", "get_channel_types"], [786, 2, 1, "", "get_data"], [786, 3, 1, "", "metadata"], [786, 2, 1, "", "next"], [786, 2, 1, "", "pick"], [786, 2, 1, "", "pick_channels"], [786, 2, 1, "", "pick_types"], [786, 2, 1, "", "plot"], [786, 2, 1, "", "plot_topo"], [786, 2, 1, "", "plot_topomap"], [786, 2, 1, "", "reorder_channels"], [786, 2, 1, "", "save"], [786, 2, 1, "", "to_data_frame"], [786, 2, 1, "", "units"]], "mne.time_frequency.EpochsSpectrumArray": [[787, 2, 1, "", "__contains__"], [787, 2, 1, "", "__getitem__"], [787, 2, 1, "", "__iter__"], [787, 2, 1, "", "__len__"], [787, 2, 1, "", "add_channels"], [787, 2, 1, "", "add_reference_channels"], [787, 2, 1, "", "average"], [787, 3, 1, "", "compensation_grade"], [787, 2, 1, "", "copy"], [787, 2, 1, "", "drop_channels"], [787, 2, 1, "", "get_channel_types"], [787, 2, 1, "", "get_data"], [787, 3, 1, "", "metadata"], [787, 2, 1, "", "next"], [787, 2, 1, "", "pick"], [787, 2, 1, "", "pick_channels"], [787, 2, 1, "", "pick_types"], [787, 2, 1, "", "plot"], [787, 2, 1, "", "plot_topo"], [787, 2, 1, "", "plot_topomap"], [787, 2, 1, "", "reorder_channels"], [787, 2, 1, "", "save"], [787, 2, 1, "", "to_data_frame"], [787, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[788, 2, 1, "", "__contains__"], [788, 2, 1, "", "__getitem__"], [788, 2, 1, "", "__iter__"], [788, 2, 1, "", "__len__"], [788, 2, 1, "", "add_channels"], [788, 2, 1, "", "add_reference_channels"], [788, 2, 1, "", "apply_baseline"], [788, 2, 1, "", "average"], [788, 3, 1, "", "ch_names"], [788, 3, 1, "", "compensation_grade"], [788, 2, 1, "", "copy"], [788, 2, 1, "", "crop"], [788, 2, 1, "", "decimate"], [788, 2, 1, "", "drop_channels"], [788, 2, 1, "", "get_channel_types"], [788, 3, 1, "", "metadata"], [788, 2, 1, "", "next"], [788, 2, 1, "", "pick"], [788, 2, 1, "", "pick_channels"], [788, 2, 1, "", "pick_types"], [788, 2, 1, "", "reorder_channels"], [788, 2, 1, "", "save"], [788, 2, 1, "", "shift_time"], [788, 2, 1, "", "time_as_index"], [788, 3, 1, "", "times"], [788, 3, 1, "", "tmax"], [788, 3, 1, "", "tmin"], [788, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[789, 2, 1, "", "__contains__"], [789, 2, 1, "", "__getitem__"], [789, 2, 1, "", "add_channels"], [789, 2, 1, "", "add_reference_channels"], [789, 3, 1, "", "compensation_grade"], [789, 2, 1, "", "copy"], [789, 2, 1, "", "drop_channels"], [789, 2, 1, "", "get_channel_types"], [789, 2, 1, "", "get_data"], [789, 2, 1, "", "pick"], [789, 2, 1, "", "pick_channels"], [789, 2, 1, "", "pick_types"], [789, 2, 1, "", "plot"], [789, 2, 1, "", "plot_topo"], [789, 2, 1, "", "plot_topomap"], [789, 2, 1, "", "reorder_channels"], [789, 2, 1, "", "save"], [789, 2, 1, "", "to_data_frame"], [789, 2, 1, "", "units"]], "mne.time_frequency.SpectrumArray": [[790, 2, 1, "", "__contains__"], [790, 2, 1, "", "__getitem__"], [790, 2, 1, "", "add_channels"], [790, 2, 1, "", "add_reference_channels"], [790, 3, 1, "", "compensation_grade"], [790, 2, 1, "", "copy"], [790, 2, 1, "", "drop_channels"], [790, 2, 1, "", "get_channel_types"], [790, 2, 1, "", "get_data"], [790, 2, 1, "", "pick"], [790, 2, 1, "", "pick_channels"], [790, 2, 1, "", "pick_types"], [790, 2, 1, "", "plot"], [790, 2, 1, "", "plot_topo"], [790, 2, 1, "", "plot_topomap"], [790, 2, 1, "", "reorder_channels"], [790, 2, 1, "", "save"], [790, 2, 1, "", "to_data_frame"], [790, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[811, 4, 1, "", "cwt"], [812, 4, 1, "", "morlet"]], "mne.transforms": [[821, 1, 1, "", "Transform"], [822, 4, 1, "", "apply_volume_registration"], [823, 4, 1, "", "apply_volume_registration_points"], [824, 4, 1, "", "compute_volume_registration"], [825, 4, 1, "", "quat_to_rot"], [826, 4, 1, "", "read_ras_mni_t"], [827, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[821, 2, 1, "", "__contains__"], [821, 2, 1, "", "__getitem__"], [821, 2, 1, "", "__iter__"], [821, 2, 1, "", "__len__"], [821, 2, 1, "", "clear"], [821, 2, 1, "", "copy"], [821, 3, 1, "", "from_str"], [821, 2, 1, "", "fromkeys"], [821, 2, 1, "", "get"], [821, 2, 1, "", "items"], [821, 2, 1, "", "keys"], [821, 2, 1, "", "pop"], [821, 2, 1, "", "popitem"], [821, 2, 1, "", "save"], [821, 2, 1, "", "setdefault"], [821, 3, 1, "", "to_str"], [821, 2, 1, "", "update"], [821, 2, 1, "", "values"]], "mne.utils": [[830, 1, 1, "", "deprecated"], [831, 4, 1, "", "warn"]], "mne.viz": [[834, 1, 1, "", "Brain"], [835, 1, 1, "", "ClickableImage"], [836, 1, 1, "", "EvokedField"], [837, 1, 1, "", "Figure3D"], [838, 4, 1, "", "add_background_image"], [839, 4, 1, "", "centers_to_edges"], [840, 4, 1, "", "circular_layout"], [841, 4, 1, "", "close_3d_figure"], [842, 4, 1, "", "close_all_3d_figures"], [843, 4, 1, "", "compare_fiff"], [844, 4, 1, "", "create_3d_figure"], [23, 0, 0, "-", "eyetracking"], [846, 4, 1, "", "get_3d_backend"], [847, 4, 1, "", "get_brain_class"], [848, 4, 1, "", "get_browser_backend"], [849, 4, 1, "", "iter_topography"], [850, 4, 1, "", "link_brains"], [851, 4, 1, "", "mne_analyze_colormap"], [852, 4, 1, "", "plot_alignment"], [853, 4, 1, "", "plot_arrowmap"], [854, 4, 1, "", "plot_bem"], [855, 4, 1, "", "plot_brain_colorbar"], [856, 4, 1, "", "plot_bridged_electrodes"], [857, 4, 1, "", "plot_ch_adjacency"], [858, 4, 1, "", "plot_channel_labels_circle"], [859, 4, 1, "", "plot_chpi_snr"], [860, 4, 1, "", "plot_compare_evokeds"], [861, 4, 1, "", "plot_cov"], [862, 4, 1, "", "plot_csd"], [863, 4, 1, "", "plot_dipole_amplitudes"], [864, 4, 1, "", "plot_dipole_locations"], [865, 4, 1, "", "plot_drop_log"], [866, 4, 1, "", "plot_epochs"], [867, 4, 1, "", "plot_epochs_image"], [868, 4, 1, "", "plot_epochs_psd_topomap"], [869, 4, 1, "", "plot_events"], [870, 4, 1, "", "plot_evoked"], [871, 4, 1, "", "plot_evoked_field"], [872, 4, 1, "", "plot_evoked_image"], [873, 4, 1, "", "plot_evoked_joint"], [874, 4, 1, "", "plot_evoked_topo"], [875, 4, 1, "", "plot_evoked_topomap"], [876, 4, 1, "", "plot_evoked_white"], [877, 4, 1, "", "plot_filter"], [878, 4, 1, "", "plot_head_positions"], [879, 4, 1, "", "plot_ica_components"], [880, 4, 1, "", "plot_ica_overlay"], [881, 4, 1, "", "plot_ica_properties"], [882, 4, 1, "", "plot_ica_scores"], [883, 4, 1, "", "plot_ica_sources"], [884, 4, 1, "", "plot_ideal_filter"], [885, 4, 1, "", "plot_layout"], [886, 4, 1, "", "plot_montage"], [887, 4, 1, "", "plot_projs_joint"], [888, 4, 1, "", "plot_projs_topomap"], [889, 4, 1, "", "plot_raw"], [890, 4, 1, "", "plot_raw_psd"], [891, 4, 1, "", "plot_regression_weights"], [892, 4, 1, "", "plot_sensors"], [893, 4, 1, "", "plot_snr_estimate"], [894, 4, 1, "", "plot_source_estimates"], [895, 4, 1, "", "plot_sparse_source_estimates"], [896, 4, 1, "", "plot_tfr_topomap"], [897, 4, 1, "", "plot_topo_image_epochs"], [898, 4, 1, "", "plot_topomap"], [899, 4, 1, "", "plot_vector_source_estimates"], [900, 4, 1, "", "plot_volume_source_estimates"], [901, 4, 1, "", "set_3d_backend"], [902, 4, 1, "", "set_3d_options"], [903, 4, 1, "", "set_3d_title"], [904, 4, 1, "", "set_3d_view"], [905, 4, 1, "", "set_browser_backend"], [906, 4, 1, "", "snapshot_brain_montage"], [23, 0, 0, "-", "ui_events"], [920, 4, 1, "", "use_3d_backend"], [921, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[834, 2, 1, "", "add_annotation"], [834, 2, 1, "", "add_data"], [834, 2, 1, "", "add_dipole"], [834, 2, 1, "", "add_foci"], [834, 2, 1, "", "add_forward"], [834, 2, 1, "", "add_head"], [834, 2, 1, "", "add_label"], [834, 2, 1, "", "add_sensors"], [834, 2, 1, "", "add_skull"], [834, 2, 1, "", "add_text"], [834, 2, 1, "", "add_volume_labels"], [834, 2, 1, "", "apply_auto_scaling"], [834, 2, 1, "", "clear_glyphs"], [834, 2, 1, "", "close"], [834, 3, 1, "", "data"], [834, 2, 1, "", "get_picked_points"], [834, 2, 1, "", "get_view"], [834, 2, 1, "", "help"], [834, 3, 1, "", "interaction"], [834, 2, 1, "", "plot_time_course"], [834, 2, 1, "", "plot_time_line"], [834, 2, 1, "", "remove_annotations"], [834, 2, 1, "", "remove_data"], [834, 2, 1, "", "remove_dipole"], [834, 2, 1, "", "remove_forward"], [834, 2, 1, "", "remove_head"], [834, 2, 1, "", "remove_labels"], [834, 2, 1, "", "remove_sensors"], [834, 2, 1, "", "remove_skull"], [834, 2, 1, "", "remove_text"], [834, 2, 1, "", "remove_volume_labels"], [834, 2, 1, "", "reset"], [834, 2, 1, "", "reset_view"], [834, 2, 1, "", "restore_user_scaling"], [834, 2, 1, "", "save_image"], [834, 2, 1, "", "save_movie"], [834, 2, 1, "", "screenshot"], [834, 2, 1, "", "set_data_smoothing"], [834, 2, 1, "", "set_playback_speed"], [834, 2, 1, "", "set_time"], [834, 2, 1, "", "set_time_interpolation"], [834, 2, 1, "", "set_time_point"], [834, 2, 1, "", "setup_time_viewer"], [834, 2, 1, "", "show"], [834, 2, 1, "", "show_view"], [834, 3, 1, "", "time_interpolation"], [834, 2, 1, "", "toggle_interface"], [834, 2, 1, "", "toggle_playback"], [834, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[835, 2, 1, "", "onclick"], [835, 2, 1, "", "plot_clicks"], [835, 2, 1, "", "to_layout"]], "mne.viz.EvokedField": [[836, 2, 1, "", "set_contours"], [836, 2, 1, "", "set_time"], [836, 2, 1, "", "set_vmax"]], "mne.viz.Figure3D": [[837, 3, 1, "", "plotter"]], "mne.viz.eyetracking": [[845, 4, 1, "", "plot_gaze"]], "mne.viz.ui_events": [[907, 1, 1, "", "ColormapRange"], [908, 1, 1, "", "Contours"], [909, 1, 1, "", "FigureClosing"], [910, 1, 1, "", "PlaybackSpeed"], [911, 1, 1, "", "TimeChange"], [912, 1, 1, "", "UIEvent"], [913, 1, 1, "", "VertexSelect"], [914, 4, 1, "", "disable_ui_events"], [915, 4, 1, "", "link"], [916, 4, 1, "", "publish"], [917, 4, 1, "", "subscribe"], [918, 4, 1, "", "unlink"], [919, 4, 1, "", "unsubscribe"]], "mne.viz.ui_events.ColormapRange": [[907, 3, 1, "", "name"]], "mne.viz.ui_events.Contours": [[908, 3, 1, "", "name"]], "mne.viz.ui_events.FigureClosing": [[909, 3, 1, "", "name"]], "mne.viz.ui_events.PlaybackSpeed": [[910, 3, 1, "", "name"]], "mne.viz.ui_events.TimeChange": [[911, 3, 1, "", "name"]], "mne.viz.ui_events.UIEvent": [[912, 3, 1, "", "name"]], "mne.viz.ui_events.VertexSelect": [[913, 3, 1, "", "name"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 24, 53, 172, 309], "estim": [0, 45, 60, 64, 67, 68, 69, 70, 83, 117, 179, 191, 192, 207, 208, 222, 236, 251, 266, 316, 320], "covari": [1, 60, 68, 75, 91, 148, 188, 198, 203, 206, 251, 316, 320, 328, 936], "comput": [1, 25, 32, 42, 46, 47, 51, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 68, 71, 72, 73, 75, 77, 80, 81, 82, 84, 85, 86, 93, 97, 111, 115, 117, 118, 121, 129, 130, 131, 133, 134, 135, 136, 137, 139, 156, 162, 165, 174, 180, 184, 185, 188, 190, 196, 200, 203, 205, 206, 214, 221, 225, 229, 231, 232, 233, 236, 242, 248, 249, 254, 257, 258, 260, 262, 263, 264, 265, 267, 272, 276, 312, 316, 320, 323, 956], "creat": [2, 45, 117, 121, 142, 143, 163, 166, 170, 175, 215, 222, 231, 234, 235, 245, 250, 251, 259, 309, 316, 320, 323], "data": [2, 15, 18, 20, 29, 30, 31, 33, 34, 37, 39, 41, 44, 45, 47, 53, 55, 56, 67, 68, 75, 77, 83, 86, 90, 92, 98, 100, 102, 106, 107, 112, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 136, 141, 142, 143, 146, 147, 148, 149, 161, 162, 163, 166, 167, 168, 172, 173, 175, 176, 178, 185, 191, 192, 193, 194, 195, 198, 201, 203, 204, 206, 215, 216, 217, 218, 219, 220, 222, 228, 230, 231, 238, 239, 240, 243, 244, 245, 246, 247, 250, 251, 252, 256, 259, 260, 261, 263, 264, 265, 268, 270, 316, 317, 320, 323, 749, 936], "object": [2, 63, 70, 163, 166, 168, 169, 171, 175, 176, 194, 195, 243, 245, 246, 250, 268, 317, 936], "from": [2, 33, 34, 41, 45, 63, 64, 69, 70, 88, 117, 131, 163, 166, 168, 170, 175, 194, 195, 215, 216, 217, 219, 231, 234, 238, 240, 243, 244, 245, 246, 250, 251, 323, 939], "arrai": [2, 141, 194, 244, 320], "dataset": [3, 26, 27, 28, 30, 33, 53, 97, 109, 209, 210, 211, 212, 218, 243, 270, 317, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 936], "decod": [4, 34, 35, 37, 38, 39, 41, 43, 44, 53, 223, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "event": [5, 23, 30, 96, 140, 163, 170, 177, 192, 194, 198, 240, 244, 274, 509, 510, 511], "export": [6, 143, 171, 187, 243, 513, 514, 515, 516], "file": [7, 79, 88, 196, 198, 216, 244, 245, 316, 320, 323, 936], "i": [7, 188, 194, 196, 232, 233, 234, 320, 936, 941, 948, 949], "o": [7, 320], "forward": [8, 49, 53, 73, 136, 184, 185, 189, 191, 198, 206, 316, 320, 335, 527, 528, 529, 530, 936], "model": [8, 30, 45, 49, 53, 71, 138, 183, 184, 189, 191, 192, 203, 206, 222, 224, 235, 310, 312, 316, 320, 323], "invers": [9, 53, 54, 55, 56, 57, 61, 62, 65, 66, 67, 68, 73, 78, 83, 121, 131, 191, 192, 203, 213, 314, 316, 320, 936], "solut": [9, 54, 55, 56, 61, 65, 66, 67, 73, 87, 131, 184, 198, 203, 205, 229, 232, 316, 320, 323, 936], "log": [10, 197, 216], "configur": [10, 197, 309, 948], "most": 11, "us": [11, 34, 35, 40, 44, 52, 58, 59, 60, 61, 65, 73, 83, 90, 94, 98, 110, 121, 163, 169, 172, 175, 181, 182, 183, 186, 187, 197, 206, 222, 232, 235, 237, 259, 274, 309, 316, 320, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 354, 355, 357, 359, 360, 361, 364, 365, 366, 367, 369, 370, 378, 379, 380, 381, 382, 384, 386, 390, 391, 392, 394, 396, 398, 402, 406, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 441, 443, 452, 459, 474, 475, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 512, 517, 518, 519, 523, 524, 526, 531, 532, 535, 536, 540, 542, 545, 546, 547, 548, 550, 551, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 576, 579, 580, 581, 583, 584, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 623, 625, 627, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 670, 671, 673, 674, 675, 677, 678, 679, 683, 685, 689, 690, 691, 692, 693, 694, 695, 698, 701, 703, 705, 706, 709, 711, 713, 714, 715, 716, 718, 722, 724, 725, 727, 728, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748, 749, 750, 751, 752, 756, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 802, 805, 813, 816, 817, 818, 826, 828, 829, 833, 834, 835, 836, 839, 840, 844, 845, 847, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 867, 869, 871, 872, 874, 876, 877, 878, 884, 887, 888, 893, 894, 895, 898, 899, 903, 904, 906, 911, 912, 915, 916, 917, 921, 929, 934, 936, 941], "class": [11, 223, 268, 312, 941, 948], "mri": [12, 181, 182, 185, 186, 198, 206, 208, 317, 320, 323], "process": [12, 67, 149, 193, 206, 309, 312], "preprocess": [13, 53, 104, 136, 162, 167, 191, 192, 238, 239, 241, 245, 270, 316, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687], "python": [14, 149, 163, 164, 181, 186, 187, 191, 192, 197, 198, 227, 229, 232, 233, 237, 240, 243, 250, 309, 311, 312, 314, 315, 318, 323, 936, 938, 940, 944, 945, 946, 947, 950], "api": [14, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 318, 955], "refer": [14, 26, 30, 34, 36, 38, 39, 41, 42, 44, 45, 47, 59, 61, 66, 68, 69, 70, 72, 77, 80, 81, 84, 85, 86, 92, 97, 98, 101, 102, 105, 109, 110, 114, 121, 128, 136, 139, 140, 144, 146, 148, 154, 163, 167, 170, 177, 181, 183, 188, 202, 204, 206, 209, 210, 216, 218, 222, 223, 227, 229, 231, 232, 233, 234, 235, 237, 239, 252, 255, 256, 260, 268, 309, 316, 317, 320, 936], "read": [15, 69, 70, 73, 78, 79, 91, 92, 163, 191, 194, 196, 216, 220, 244, 245, 260, 263, 265, 936], "raw": [15, 26, 33, 55, 97, 107, 117, 120, 121, 163, 166, 178, 194, 198, 203, 231, 238, 239, 240, 243, 244, 245, 246, 250, 320, 323, 550, 936], "realtim": [16, 312], "mne": [17, 54, 56, 67, 68, 80, 87, 103, 143, 149, 152, 164, 181, 186, 187, 191, 192, 197, 198, 203, 205, 215, 227, 229, 232, 233, 237, 240, 243, 250, 255, 309, 311, 314, 315, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 940, 944, 945, 946, 948, 949, 950, 952], "report": [17, 198, 229, 323, 341], "sensor": [18, 39, 44, 48, 110, 123, 124, 127, 128, 143, 145, 151, 153, 159, 162, 168, 191, 196, 217, 223, 234, 238, 239, 246, 251, 260, 261, 269, 320], "space": [18, 20, 35, 37, 39, 44, 50, 52, 56, 67, 80, 84, 128, 131, 134, 137, 172, 184, 185, 189, 191, 204, 223, 233, 234, 237, 244, 251, 263, 265, 316, 320, 323], "simul": [19, 53, 116, 117, 119, 120, 121, 122, 141, 191, 222, 232, 251, 252, 253, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751], "sourc": [20, 37, 50, 52, 53, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 70, 71, 73, 80, 84, 98, 117, 121, 122, 131, 134, 135, 136, 137, 143, 182, 184, 185, 189, 191, 198, 202, 203, 204, 206, 207, 208, 213, 223, 235, 251, 263, 264, 265, 266, 312, 316, 320, 323], "statist": [21, 53, 125, 191, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 270, 312, 320], "time": [22, 25, 32, 35, 39, 46, 51, 53, 58, 63, 65, 72, 82, 85, 93, 96, 97, 99, 111, 112, 115, 118, 121, 129, 132, 133, 141, 156, 162, 165, 166, 168, 170, 171, 174, 180, 190, 191, 192, 200, 207, 214, 221, 223, 225, 232, 242, 243, 248, 249, 254, 257, 258, 260, 262, 267, 269, 270, 271, 272, 276, 309, 312, 956], "frequenc": [22, 35, 53, 58, 72, 85, 132, 140, 141, 162, 191, 192, 217, 226, 229, 236, 257, 258, 260, 268, 269, 270, 271, 312, 317], "visual": [23, 30, 45, 53, 73, 74, 75, 76, 80, 81, 139, 144, 150, 162, 166, 168, 170, 175, 176, 182, 184, 191, 196, 203, 206, 207, 208, 222, 231, 232, 233, 234, 236, 255, 260, 263, 264, 265, 268, 275, 309, 312, 317], "eyetrack": [23, 219, 317, 656, 657, 658, 659, 845], "ui": 23, "analysi": [24, 30, 36, 40, 53, 62, 163, 172, 177, 191, 192, 245, 261, 266, 269, 270, 271, 318, 936, 939], "exampl": [24, 28, 53, 125, 132, 164, 172, 182, 191, 201, 223, 232, 233, 234, 312, 317, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 354, 355, 357, 359, 360, 361, 364, 365, 366, 367, 369, 370, 378, 379, 380, 381, 382, 384, 386, 390, 391, 392, 394, 396, 398, 402, 406, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 441, 443, 452, 459, 474, 475, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 512, 517, 518, 519, 523, 524, 526, 531, 532, 535, 536, 540, 542, 545, 546, 547, 548, 550, 551, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 576, 579, 580, 581, 583, 584, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 623, 625, 627, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 643, 644, 645, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 670, 671, 673, 674, 675, 677, 678, 679, 683, 685, 689, 690, 691, 692, 693, 694, 695, 698, 701, 703, 705, 706, 709, 711, 713, 714, 715, 716, 718, 722, 724, 725, 727, 728, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748, 749, 750, 751, 752, 756, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 794, 795, 796, 797, 799, 802, 805, 813, 816, 817, 818, 826, 828, 829, 833, 834, 835, 836, 839, 840, 844, 845, 847, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 867, 869, 871, 872, 874, 876, 877, 878, 884, 887, 888, 893, 894, 895, 898, 899, 903, 904, 906, 911, 912, 915, 916, 917, 921, 929, 934], "brainstorm": [26, 209, 210, 218, 317, 447, 448, 449], "median": [26, 317], "nerv": [26, 317], "hf": 27, "sef": [27, 317], "open": [28, 53, 309, 312, 323], "kernel": [29, 317], "opm": [29, 31, 136, 215, 239, 312, 317, 469], "phantom": [29, 209, 210, 211, 212, 317], "singl": [30, 54, 131, 155, 257, 258, 259], "trial": [30, 155, 238, 244, 257, 258, 259, 269, 270], "linear": [30, 44, 320, 323], "regress": [30, 100, 126, 128, 167, 231, 239], "limo": [30, 317, 465], "about": [30, 196, 197, 226, 320], "load": [30, 45, 73, 100, 142, 143, 149, 162, 163, 166, 167, 175, 185, 192, 201, 204, 217, 222, 233, 240, 243, 251, 320], "condit": [30, 39, 158, 177, 258, 259], "erp": [30, 167, 170, 177, 317], "effect": [30, 42, 222, 223, 231, 233, 255, 270, 320], "stimulu": [30, 45, 240], "phase": [30, 134], "coher": [30, 269], "prepar": [30, 31, 170, 231, 265], "defin": [30, 96, 117, 182, 255, 257], "predictor": 30, "variabl": [30, 197, 309], "design": [30, 163, 223, 229, 318], "matrix": [30, 67, 91, 97, 130, 188, 255, 263, 316, 320, 936], "extract": [30, 63, 65, 121, 163, 166, 236, 238, 240, 243, 270], "coeffici": [30, 45], "plot": [30, 44, 60, 67, 68, 69, 70, 73, 74, 76, 87, 96, 97, 107, 108, 110, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 159, 162, 167, 168, 176, 178, 188, 196, 238, 240, 244, 246, 251, 257, 258, 269, 270, 273, 274, 936, 941], "result": [30, 69, 70, 80, 270], "optic": [31, 238, 239], "pump": [31, 239], "magnetomet": [31, 239], "local": [31, 57, 191, 202, 203, 204, 208, 213, 309, 316], "perform": [31, 100, 117, 162, 222], "dipol": [31, 71, 117, 143, 202, 204, 207, 329, 503], "fit": [31, 45, 183, 202, 207, 222, 232], "minimum": [31, 320], "norm": [31, 66, 320], "dspm": [33, 54, 56, 60, 80, 121, 137, 203, 320], "spm": [33, 317], "face": [33, 317], "motor": [34, 317], "imageri": [34, 317], "eeg": [34, 41, 48, 81, 84, 92, 94, 97, 98, 105, 145, 153, 177, 185, 192, 208, 215, 216, 235, 240, 256, 270, 312, 316, 317, 320], "common": [34, 35, 223, 240, 263, 265, 268], "spatial": [34, 35, 42, 47, 80, 81, 206, 223, 251], "pattern": [34, 35, 44, 223], "csp": [34, 35, 483], "represent": [36, 141, 238, 259, 320], "similar": [36, 175], "continu": [38, 107, 126, 128, 172, 173, 191, 192, 217, 222, 236, 243, 245, 246, 247, 320], "target": [38, 96], "spoc": [38, 223, 490], "gener": [39, 50, 64, 119, 120, 122, 170, 216, 223, 228, 239, 251, 277, 309, 320, 936], "across": [39, 97, 108, 177, 238], "evok": [40, 56, 60, 67, 77, 86, 96, 112, 117, 119, 121, 146, 147, 148, 158, 175, 176, 177, 178, 179, 191, 192, 198, 203, 231, 239, 250, 273, 316, 333], "respons": [40, 96, 158, 170, 177, 179, 191, 192, 203, 222, 231, 238, 239, 954], "ica": [40, 103, 109, 198, 232, 316, 636], "pca": [40, 73, 323], "reduct": [40, 232, 233, 234], "techniqu": 40, "xdawn": [41, 114, 223, 637], "match": [42, 223, 232], "filter": [42, 44, 47, 75, 106, 141, 177, 206, 223, 229, 230, 232, 237, 239, 320, 518, 519, 520, 521, 522, 523], "em": [42, 484], "machin": [43, 53, 191, 224], "learn": [43, 53, 163, 191, 224], "encod": [43, 53, 749], "mvpa": [43, 53, 223], "classifi": 44, "logisticregress": 44, "recept": [45, 222], "field": [45, 176, 177, 222, 239, 320], "predict": [45, 320], "public": [45, 273], "investig": 45, "reconstruct": [45, 117, 121, 181, 186, 206, 234, 316], "spectro": [47, 222], "decomposit": 47, "ssd": [47, 491], "epoch": [47, 54, 68, 121, 131, 141, 144, 149, 163, 166, 168, 169, 170, 171, 172, 173, 175, 177, 178, 191, 192, 198, 228, 231, 232, 238, 250, 260, 263, 265, 316, 320, 331, 504, 505, 506, 507], "displai": 48, "sensit": [48, 157], "map": [48, 61, 139, 147, 157, 168, 175, 176, 244, 252, 320], "meg": [48, 81, 101, 105, 113, 151, 159, 192, 215, 239, 251, 312, 317, 320], "left": [50, 238], "cerebellum": 50, "volum": [50, 56, 67, 76, 207], "morph": [52, 69, 70, 206, 320], "galleri": 53, "input": [53, 89], "output": [53, 89, 186, 206], "problem": [53, 62, 229], "sloreta": [55, 203, 320], "custom": [57, 159, 198, 217, 273, 274], "solver": 57, "level": [58, 123], "timecours": [58, 71, 273], "dic": [58, 59, 60, 252], "beamform": [58, 59, 60, 75, 206, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "power": [59, 60, 68, 131, 134, 135, 136, 137, 162, 168, 177, 223, 226, 230, 252, 257, 258, 259, 269, 270], "er": 60, "lcmv": [60, 75, 206], "spars": [61, 66, 85], "gamma": [61, 162], "empir": 61, "bayesian": 61, "method": [61, 102, 239, 243, 246, 255], "cours": [63, 121, 207], "source_estim": 63, "function": [64, 73, 74, 75, 76, 163, 238, 255, 265, 309, 936], "label": [64, 65, 67, 73, 131, 134, 135, 251, 337, 588], "seri": [65, 97, 168], "activ": [65, 117, 121, 155, 191, 206, 224, 238, 273], "view": [65, 67, 108, 143, 169, 238, 257, 258, 323], "vector": [65, 69, 87, 198, 206, 207, 223, 498], "mix": [66, 67], "mxne": [66, 72, 85], "irmxn": 66, "set": [67, 69, 171, 177, 183, 197, 216, 235, 257, 259, 260, 263, 264, 265, 309, 316, 317, 323], "up": [67, 69, 183, 187, 309, 316, 323], "our": [67, 208], "fwd": 67, "surfac": [67, 69, 184, 186, 187, 196, 207, 208, 238, 316, 320, 323, 781, 782], "project": [68, 110, 142, 157, 196, 198, 223, 233, 310, 320, 323, 340], "empti": [68, 234], "room": [68, 234], "appli": [68, 69, 70, 102, 163, 170, 206, 215, 217, 229, 231, 233, 270, 323], "oper": [68, 73, 78, 121, 141, 184, 185, 187, 245, 316, 318, 320], "sourcemorph": [69, 70, 343], "sourceestim": [69, 198, 201, 342], "write": [69, 70, 91, 244, 245], "disk": [69, 70, 166], "volumetr": [70, 206, 320], "get": [70, 88, 185, 187, 197, 198, 208, 270, 936, 937, 938, 949], "volsourceestim": [70, 346], "convert": [70, 142, 171, 194, 238, 323], "nifti": 70, "an": [71, 78, 79, 83, 97, 144, 168, 169, 171, 183, 185, 187, 194, 195, 198, 206, 208, 232, 235, 239, 270, 316], "xfit": 71, "like": [71, 196], "multi": 71, "iter": [72, 166], "reweight": 72, "tf": 72, "multiscal": 72, "dictionari": 72, "leakag": 73, "among": [73, 175], "circular": 73, "graph": 73, "organis": 73, "cortic": [73, 95, 154, 162, 186, 263, 265, 316, 320], "parcel": [73, 154], "point": [73, 74, 76, 183, 251, 320], "spread": [73, 74, 76, 251], "summari": [73, 97, 193, 201, 226, 227, 229, 243, 289], "all": [73, 206, 227, 259, 263, 265, 309, 936, 946, 950], "evalu": [73, 238], "base": [73, 96, 163, 167, 228, 318, 320, 323], "psf": [73, 74, 76], "correl": 73, "save": [73, 166, 175, 198, 233, 243], "figur": [73, 198, 273, 274], "option": [73, 147, 309, 323, 936], "individu": 73, "cross": [74, 75, 130, 160, 309], "talk": [74, 75], "ctf": [74, 151, 210, 215, 218], "differ": [75, 103, 117, 158, 167, 191, 220, 222, 270], "matric": [75, 188, 206], "resolut": [75, 80, 81, 187, 219, 323], "two": [75, 251], "rap": 77, "music": [77, 86], "stc": [79, 117, 201, 207], "metric": [80, 81, 97, 739, 740, 741, 742, 743, 744, 745, 746], "compar": [81, 97, 103, 117, 158, 176, 177, 222, 238, 239, 255, 323], "eegmeg": 81, "snr": [83, 84, 236, 270], "prior": 85, "trap": 86, "full": [87, 260], "valu": [87, 171, 270], "averag": [88, 141, 175, 177, 235, 320], "info": [88, 195, 243, 250, 323, 336], "fif": [88, 215, 323, 936], "how": [90, 142, 186, 188, 227, 234, 245, 314, 936], "neural": [90, 191, 222, 224, 238], "ensembl": 90, "neo": 90, "format": [90, 171, 216, 217, 320], "nois": [91, 148, 203, 226, 230, 233, 234, 251, 270, 316, 317, 320], "xdf": [92, 216], "contralater": 94, "referenc": [94, 219], "signal": [95, 176, 193, 194, 233, 234, 236, 237, 238, 239, 251, 270, 320], "suppress": [95, 316], "css": 95, "remov": [95, 100, 109, 232, 233, 238, 263, 265], "lag": 96, "identifi": 97, "electrod": [97, 142, 162, 208, 216, 320], "bridg": 97, "too": 97, "much": 97, "gel": 97, "electr": 97, "distanc": 97, "examin": [97, 167, 239], "distribut": [97, 102, 204, 312, 947], "topomap": [97, 147], "voltag": 97, "subject": [97, 121, 236, 317, 323], "eegbci": [97, 109, 317, 450, 451], "The": [97, 166, 170, 175, 193, 194, 195, 196, 201, 204, 206, 228, 243, 268, 310, 316, 317, 320], "relationship": [97, 201], "between": [97, 194, 258], "imped": 97, "transform": [98, 141, 163, 182, 186, 223, 263, 265, 320, 821, 822, 823, 824, 825, 826, 827], "current": [98, 143, 202, 320, 322, 954], "densiti": [98, 130, 131, 135, 136, 238, 246, 270], "csd": [98, 130], "show": [99, 240, 323], "eog": [99, 100, 226, 231, 232, 234, 323], "artifact": [99, 100, 101, 102, 107, 108, 226, 230, 231, 232, 234, 240, 316, 323], "reduc": 100, "through": 100, "import": [100, 102, 215, 216, 217, 219, 273, 309, 323], "packag": [100, 320, 950], "befor": [100, 231, 309], "after": [100, 941], "comparison": [100, 160, 255, 259], "find": [101, 251, 260, 263], "channel": [101, 105, 113, 144, 166, 171, 175, 177, 193, 194, 195, 196, 215, 227, 228, 232, 235, 238, 243, 260, 263, 265, 270, 316, 317, 320, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 749], "visualis": [102, 256], "nir": [102, 673, 674, 675, 676, 677, 678], "correct": [102, 124, 167, 170, 239, 255], "add": [102, 143], "artifici": 102, "tempor": [102, 110, 138, 222, 223, 263, 264, 265], "deriv": 102, "repair": [102, 230, 231, 232, 234, 320], "algorithm": [103, 314, 320, 323], "interpol": [105, 147, 227, 320], "bad": [105, 182, 183, 187, 227, 228, 263, 265, 316, 320], "maxwel": [106, 237, 320], "movement": [106, 107, 236, 237], "compens": [106, 215, 237, 320], "annot": [107, 108, 163, 194, 228, 238, 240, 245, 316, 325], "reestim": 107, "dev_head_t": 107, "head": [107, 143, 182, 184, 186, 187, 208, 216, 219, 236, 316, 320, 323], "posit": [107, 142, 143, 219, 236], "respect": 107, "mean": [107, 177], "record": [107, 108, 191, 216, 220, 234], "muscl": [108, 109], "z": 108, "score": [108, 117], "compon": [109, 170, 206, 232], "let": 109, "": [109, 141, 186, 313], "now": 109, "replic": 109, "thi": [109, 222], "denois": [110, 114, 239], "oversampl": 110, "shift": 112, "scale": [112, 171, 178, 320], "remap": 113, "type": [113, 166, 177, 195, 222, 229, 243, 270, 309, 320, 323], "main": 117, "paramet": [117, 193, 228, 257, 259, 260, 263, 264, 265], "true": 117, "correspond": [117, 316], "amplitud": [117, 177, 228], "threshold": [117, 255, 256], "For": 117, "region": [117, 143, 177], "anatomi": 121, "responss": 121, "permut": [123, 127, 259, 260, 263, 264], "f": [123, 126, 260], "test": [123, 124, 127, 163, 255, 259, 260, 263, 264, 309, 942, 948], "1d": 123, "cluster": [123, 255, 257, 258, 259, 260, 263, 264, 265, 312], "fdr": [124, 255, 259], "t": [124, 127, 263, 936], "rer": 126, "p": 126, "analys": [128, 316], "featur": [128, 162, 163], "bin": [128, 215, 936], "spectral": [130, 131, 135, 136, 246, 268, 270], "psd": [131, 135, 136, 270], "lock": [134, 170], "vectorview": [136, 215, 243], "align": [136, 182, 186, 240, 316, 323, 749], "alpha": 136, "beta": 136, "induc": 137, "whiten": [138, 148, 178, 320], "ar": [138, 175, 197, 226, 233, 936], "erd": 139, "explor": [140, 162], "relat": [140, 177, 949], "dynam": 140, "specif": 140, "band": 140, "multitap": 141, "v": [141, 223, 243, 945], "morlet": [141, 802, 812], "stockwel": 141, "hilbert": 141, "calcul": [141, 270, 316, 320], "tfr": [141, 259, 811, 812], "wavelet": 141, "narrow": 141, "bandpass": 141, "without": [141, 182], "over": [141, 144, 166, 223, 238, 274], "3d": [142, 176, 196, 206, 312, 320, 936, 941], "2d": [142, 196, 206, 312], "imag": [142, 143, 144, 149, 168, 176, 198, 238, 312, 314, 320, 323], "snapshot": 142, "manual": [142, 196, 232], "viz": [143, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921], "brain": [143, 152, 162, 186, 206, 238, 273, 834], "inform": [143, 195, 197, 204, 229, 238, 316, 320, 323], "modifi": [143, 169, 193, 243, 309], "highlight": 143, "includ": [143, 244, 323], "screenshot": 143, "scalp": [145, 167, 176], "topograph": [146, 147, 176, 178, 238], "arrowmap": 146, "basic": [147, 162, 166, 170, 175, 229, 270, 309], "plot_topomap": [147, 898], "addit": 147, "more": [147, 238, 273], "advanc": [147, 941], "usag": 147, "anim": 147, "ey": [149, 219, 240, 312], "track": [149, 240, 312], "heatmap": 149, "overlai": [149, 274], "layout": [151, 153, 196, 259, 381], "system": [151, 153, 191, 197, 215, 217, 220, 274, 320, 323, 948], "neuromag": [151, 215], "bti": [151, 211, 215, 317, 323], "kit": [151, 212, 215, 317, 323, 554], "artemis123": [151, 215], "helmet": 152, "group": [155, 170, 316], "roi": [155, 270], "sort": 155, "rt": 155, "ssp": [157, 233, 234, 316, 320, 323], "topographi": [159, 167, 176, 270], "hemispher": [160, 316, 323], "work": [161, 162, 169, 191, 196, 198, 218, 227, 240, 244, 247, 936, 941], "seeg": [161, 312, 317], "ecog": [162, 312, 317], "templat": [162, 185, 232, 317], "evolut": 162, "sleep": [163, 317], "stage": 163, "classif": 163, "polysomnographi": 163, "psg": 163, "hypnogram": 163, "30": 163, "found": [163, 936], "same": 163, "step": [163, 181, 936, 945], "bob": 163, "engin": 163, "scikit": 163, "multiclass": 163, "workflow": [163, 309, 316], "further": 163, "exercis": [163, 184, 223, 251, 260, 269, 270], "clinic": [164, 191, 312], "applic": [164, 191], "gui": [164, 182, 191, 323, 542], "addon": [164, 191], "structur": [166, 175, 194, 195, 201, 215, 243, 250, 320], "discontinu": 166, "subselect": [166, 244], "select": [166, 169, 175, 232, 238, 243, 263], "index": [166, 171, 243, 270], "drop": [166, 175, 195, 243], "reorder": [166, 175, 243], "chang": [166, 235, 243, 289, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308, 309], "name": [166, 177, 215, 243, 309], "domain": [166, 217, 232, 243, 268], "other": [166, 175, 229, 309, 314, 320, 322, 939, 946, 947], "form": [166, 270], "baselin": [167, 229, 251, 354], "tradit": 167, "regressor": 167, "wave": [167, 217], "interact": [167, 168, 245, 246, 274, 318], "term": 167, "pipelin": [168, 312], "script": [168, 198, 318], "projector": [168, 233, 234, 235, 246], "locat": [168, 177, 196, 208, 216, 217, 238, 246, 320], "spectrum": [168, 268, 789], "metadata": [169, 170], "restrict": 169, "datafram": [169, 171], "queri": [169, 195, 243], "ad": [169, 170, 198, 233], "auto": 170, "make_metadata": [170, 507], "specifi": [170, 217], "keep": 170, "onli": [170, 950], "first": [170, 181, 309, 312, 945], "new": [170, 309, 313], "column": [170, 194], "describ": [170, 309], "stimul": [170, 270], "side": 170, "knowledg": 170, "ern": 170, "panda": 171, "wide": 171, "versu": [171, 259, 318], "long": [171, 243], "divid": 172, "equal": [172, 244], "characterist": 172, "fix": [172, 187, 204, 205], "length": [172, 229], "case": 172, "segment": [173, 191], "subset": [175, 195, 270], "memori": [175, 215, 320], "core": [175, 317, 936, 946], "combin": [175, 244], "trace": 176, "butterfli": 176, "arrow": 176, "joint": [176, 269], "subplot": 176, "potenti": [177, 939], "global": 177, "gfp": 177, "interest": [177, 260, 310], "grand": 177, "latenc": 177, "measur": [177, 259, 265, 323], "peak": 177, "freesurf": [181, 186, 316, 320, 323, 943], "anatom": [181, 316], "fsaverag": [181, 185, 206, 317], "coordin": [182, 186, 217, 316, 320, 323], "frame": [182, 186, 316], "understand": [182, 186], "definit": [182, 260, 320], "A": [182, 936], "good": 182, "defac": 182, "tran": 182, "autom": 183, "approach": [183, 323], "coregistr": [183, 184, 198, 323, 434, 542], "initi": 183, "fiduci": 183, "refin": 183, "icp": 183, "omit": 183, "final": 183, "bem": [184, 187, 198, 316, 320, 323, 370, 371, 372, 373, 374, 375, 376, 377, 936], "adult": 185, "setup": [185, 252, 259, 260, 941, 945, 951], "infant": [185, 317], "surrog": 185, "under": [186, 936], "hood": 186, "ra": [186, 208], "spheric": 186, "decim": [186, 936], "mni": [186, 206], "affin": 186, "inflat": 186, "blender": 187, "edit": [187, 198], "low": [187, 226, 229], "high": [187, 229, 317, 323], "tip": 187, "what": [187, 194, 226, 232, 233, 234, 313, 323, 922, 936, 949], "you": 187, "still": [187, 936], "error": 187, "clean": [187, 323], "dens": 187, "smooth": [187, 320], "topolog": 187, "deal": 187, "topologi": [187, 320], "pymeshfix": 187, "should": [188, 936, 949], "regular": [188, 203, 222, 320, 441, 936], "tutori": [191, 199, 209, 210, 211, 212, 275, 312], "introductori": [191, 199], "overview": [192, 226, 309, 316, 317, 321, 949], "detect": [192, 226, 228, 238], "experiment": 192, "place": [193, 196, 318], "pick": 193, "copi": 193, "pars": 194, "stim": [194, 749], "middl": 194, "embed": 194, "make": [194, 244, 273, 309, 310], "multipl": [194, 255, 259, 936], "per": [194, 316], "obtain": 195, "montag": [196, 273], "built": [196, 246], "eeglab": [196, 216, 939], "sphere": [196, 320], "keyword": 196, "avail": 196, "mani": 196, "control": 196, "digit": [196, 320], "render": [196, 206, 941], "where": 197, "store": 197, "environ": [197, 309], "your": [197, 309, 942], "start": [198, 938], "inverseoper": [198, 602], "code": [198, 268, 309, 317, 945], "e": 198, "g": 198, "tag": [198, 270], "entir": 198, "folder": [198, 323], "html": 198, "descript": [198, 320], "text": 198, "inspect": [201, 269, 320], "sourcespac": [201, 344], "src": 201, "equival": 202, "ecd": 202, "eloreta": [203, 320], "role": 204, "orient": [204, 205, 320], "loos": 204, "limit": 204, "them": 204, "discard": 204, "variou": 205, "free": [205, 255], "introduct": 206, "handl": [206, 227, 240], "depth": [206, 320], "bia": [206, 234], "On": 206, "slice": 206, "orthoview": 206, "glass": 206, "maximum": [206, 255], "voxel": [206, 208], "three": 206, "given": 208, "prerequisit": 208, "coord": 208, "elekta": [209, 215], "4d": [211, 317, 323], "neuroimag": [211, 215, 317], "devic": [215, 216, 217, 219, 320], "megin": 215, "triux": 215, "fil": 215, "4": [215, 296, 306], "d": 215, "dir": 215, "polhemu": 215, "softwar": [215, 229, 314, 320, 939, 949], "gradient": [215, 320], "ricoh": 215, "con": 215, "sqd": 215, "fieldtrip": [215, 260], "mat": 215, "arbitrari": [215, 265], "brainvis": 216, "vhdr": 216, "vmrk": 216, "european": 216, "edf": 216, "biosemi": 216, "bdf": 216, "gdf": 216, "neuroscan": 216, "cnt": 216, "egi": 216, "simpl": [216, 936], "binari": 216, "mff": 216, "fdt": 216, "nicolet": 216, "eximia": 216, "nxe": 216, "persyst": 216, "lai": 216, "dat": 216, "nihon": 216, "kohden": 216, "21e": 216, "pnt": 216, "xdfz": 216, "shape": 216, "fnir": [217, 238, 317], "standard": [217, 238, 255, 309, 451], "snirf": 217, "nirx": 217, "directori": [217, 317, 320], "hdr": 217, "hitachi": 217, "csv": 217, "boxi": 217, "txt": 217, "legaci": [217, 268], "tsv": 217, "auditori": [218, 317], "sr": 219, "research": 219, "eyelink": [219, 317, 454], "asc": 219, "gaze": 219, "angl": 219, "href": 219, "pupil": 219, "size": [219, 255], "veloc": 219, "strf": 222, "audio": 222, "recov": 222, "philosophi": [223, 318], "scaler": [223, 492], "psdestim": [223, 488], "filterestim": [223, 485], "comodul": 223, "do": [226, 936], "drift": [226, 230, 232], "line": [226, 230, 309, 323], "heartbeat": 226, "ecg": [226, 232, 234, 323], "ocular": [226, 240], "mark": [227, 316], "block": 227, "execut": 227, "when": [227, 233, 309], "look": [227, 232, 936], "why": [227, 320, 936], "reject": [228, 316], "span": 228, "break": 228, "reject_by_annot": 228, "programmat": [228, 245], "background": [229, 230, 233, 235, 237, 251], "statement": 229, "fir": 229, "iir": 229, "some": 229, "pitfal": [229, 939], "pass": 229, "default": [229, 320], "c": [229, 948], "cutoff": 229, "order": 229, "transit": 229, "bandwidth": 229, "roll": 229, "off": [229, 941], "passband": 229, "rippl": 229, "stopband": 229, "attenu": 229, "delai": 229, "direct": 229, "resampl": [230, 255, 523, 936], "slow": [230, 232, 936], "best": [230, 233], "practic": [230, 233], "origin": [231, 251], "subtract": 231, "dimension": 232, "ignor": 232, "terminologi": 233, "environment": 234, "affect": [234, 245], "choos": 234, "number": [234, 243, 320], "via": [234, 239, 312, 320, 946], "infinit": 235, "rest": [235, 317], "bipolar": 235, "hpi": 236, "separ": [237, 270], "sss": 237, "spatiotempor": [237, 260], "tsss": 237, "caveat": 237, "infrar": 238, "spectroscopi": 238, "provid": [238, 255], "meaning": 238, "appropri": 238, "intens": 238, "qualiti": 238, "haemoglobin": 238, "heart": 238, "rate": [238, 255], "consist": [238, 250, 309], "tap": 238, "right": 238, "hand": 238, "homogen": 239, "nuisanc": 239, "tracker": 240, "check": [240, 270, 320, 323], "calibr": [240, 656], "blink": 240, "pupillari": 240, "light": 240, "reflex": 240, "attribut": 243, "sampl": [243, 257, 259, 264, 317, 474], "len": 243, "get_data": 243, "wai": 243, "exclud": 244, "id": [244, 946], "descriptor": 244, "togeth": 244, "brows": [246, 323], "scratch": 250, "unit": [250, 320], "corrupt": 251, "known": 251, "period": 251, "sinusoid": 251, "distant": 251, "center": [251, 951], "vertic": 251, "each": 251, "infer": 255, "hypothesi": 255, "null": 255, "parametr": [255, 257, 258], "hat": 255, "varianc": 255, "adjust": 255, "non": [255, 257, 258], "bonferroni": 255, "fals": 255, "discoveri": 255, "adjac": [255, 257, 260, 263], "enhanc": [255, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308], "tfce": 255, "signific": [256, 263], "1": [257, 278, 302, 303, 304, 305, 306, 307, 308], "mass": 259, "univari": 259, "twowai": 259, "repeat": [259, 265], "anova": [259, 265], "account": 259, "neighbor": 260, "spatio": [263, 264, 265], "one": [263, 265, 274], "2": [264, 289, 304], "contrast": 265, "epochsspectrum": [268, 786], "migrat": [268, 939], "quick": 268, "action": 268, "inter": 269, "itc": 269, "ssvep": [270, 317, 479], "vssr": 270, "ratio": 270, "spectra": 270, "12": [270, 280, 281, 292, 297, 305], "hz": 270, "indic": 270, "15": [270, 284, 298], "debrief": 270, "bonu": 270, "durat": 270, "resolv": 270, "readi": 273, "inset": 273, "link": [274, 915], "anoth": 274, "hook": 274, "bibliographi": 277, "version": [278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 941, 950, 953], "0": [278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "2011": [278, 289], "09": [278, 282, 288, 291], "23": [278, 293, 295], "author": [278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "10": [279, 281, 284, 304, 306], "2015": [279, 280, 301], "26": [279, 299], "changelog": [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 295, 296, 297, 298, 299, 300, 301, 309], "bug": [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 300, 301, 302, 303, 304, 305, 306, 307, 308, 936], "11": [280, 286, 289, 294, 299, 304, 308], "24": [280, 283, 288, 294, 296], "2016": [281, 282], "05": [281, 285, 287, 301, 306], "13": 282, "27": [282, 290, 293, 297], "14": [283, 307], "2017": [283, 284], "03": [283, 290, 294, 295, 302, 303], "20": [284, 290, 308], "16": [285, 308], "2018": [285, 286], "01": [285, 308], "17": [286, 292], "19": [286, 287, 288], "18": 287, "2019": [287, 288], "08": [289, 296, 303, 307], "2020": [290, 291, 292], "21": [291, 302, 305], "22": [292, 301], "2021": [293, 294], "04": 293, "3": [295, 305, 323], "2012": [295, 296, 297], "5": [297, 307], "6": [298, 308], "2013": [298, 299], "06": [298, 300], "7": 299, "8": 300, "2014": 300, "25": 300, "9": 301, "2022": [302, 303, 304, 305], "depend": [302, 946], "behavior": 303, "2023": [306, 307, 308], "2024": 308, "contribut": 309, "guid": 309, "develop": [309, 311, 941, 950], "git": 309, "gnu": 309, "fork": 309, "repositori": 309, "virtual": 309, "command": [309, 323, 936], "github": 309, "ssh": 309, "convent": 309, "requir": [309, 948], "must": 309, "have": [309, 316, 936], "coverag": 309, "document": [309, 310, 312, 321, 953, 954], "avoid": 309, "possibl": 309, "deprec": [309, 830], "decor": 309, "warn": [309, 831], "contributor": 309, "recur": 309, "pull": 309, "request": 309, "pr": 309, "fast": 309, "thorough": 309, "style": 309, "adher": 309, "guidelin": [309, 954], "we": 309, "mostli": [309, 318], "follow": 309, "numpi": [309, 320], "docstr": 309, "everywher": 309, "guidanc": 309, "organ": [309, 318, 320], "return": 309, "run": [309, 936], "suit": [309, 949], "build": 309, "tool": [309, 323, 949], "govern": 310, "bdfl": 310, "steer": [310, 954], "council": [310, 954], "membership": 310, "conflict": 310, "privat": 310, "commun": [310, 954], "decis": 310, "institut": [310, 322, 954], "partner": [310, 322, 954], "fund": [310, 322], "histori": [310, 954], "acknowledg": 310, "licens": 310, "roadmap": 312, "page": 312, "content": [312, 317, 323], "modern": 312, "In": [312, 318], "progress": 312, "divers": 312, "equiti": 312, "inclus": 312, "dei": 312, "support": [312, 320, 322, 946], "deep": 312, "updat": [312, 950], "complet": 312, "improv": 312, "db": 312, "access": [312, 320], "databas": [312, 317], "pediatr": 312, "integr": [312, 318], "openmeeg": 312, "bind": 312, "overhaul": 312, "cite": [314, 315, 936], "paper": 315, "typic": 316, "m": [316, 936], "recommend": 316, "subdivis": 316, "icosahedron": 316, "octahedron": 316, "creation": 316, "approxim": 316, "area": 316, "been": 316, "assum": 316, "1000": 316, "cm2": 316, "mesh": [316, 320, 936], "triangul": 316, "boundari": [316, 320], "element": [316, 320], "trigger": 317, "ucl": 317, "state": 317, "somatosensori": 317, "multimod": [317, 468], "92": 317, "categori": 317, "mtrf": [317, 467], "kiloword": [317, 464], "polysomnograph": 317, "miscellan": 317, "freeview": [317, 323], "scientif": 318, "stack": 318, "submodul": 318, "unifi": 318, "glossari": 319, "implement": 320, "detail": 320, "intern": 320, "float": 320, "precis": 320, "effici": 320, "preload": 320, "explicitli": 320, "concept": 320, "subspac": 320, "watersh": [320, 323, 936], "flash": [320, 323], "tessel": 320, "discret": 320, "geometri": 320, "coil": 320, "magnet": 320, "normal": 320, "accur": 320, "accuraci": 320, "purpos": 320, "patch": 320, "constraint": 320, "weight": 320, "former": [322, 954], "anonym": 323, "browse_raw": 323, "bti2fiff": 323, "magneswh3600": 323, "note": 323, "clean_eog_ecg": 323, "ie": 323, "compare_fiff": [323, 843], "fiff": 323, "compute_proj_ecg": [323, 648], "compute_proj_eog": [323, 649], "coreg": [323, 434, 435, 436], "flash_bem": 323, "layer": 323, "freeview_bem_surfac": 323, "kit2fiff": 323, "nyu": 323, "make_scalp_surfac": [323, 376], "maxfilt": 323, "prepare_bem_model": 323, "colloc": 323, "setup_forward_model": 323, "setup_source_spac": [323, 732], "bilater": 323, "subsampl": 323, "show_fiff": [323, 585], "show_info": 323, "surf2bem": 323, "sys_info": [323, 783], "watershed_bem": 323, "acqparserfif": 324, "baseepoch": 326, "bihemilabel": 327, "dipolefix": 330, "epochsarrai": 332, "evokedarrai": 334, "mixedsourceestim": 338, "mixedvectorsourceestim": 339, "vectorsourceestim": 345, "volvectorsourceestim": 347, "add_reference_channel": 348, "add_source_space_dist": 349, "annotations_from_ev": 350, "apply_forward": 351, "apply_forward_raw": 352, "average_forward_solut": 353, "rescal": 354, "apply_d": 356, "apply_dics_csd": 357, "apply_dics_epoch": 358, "apply_dics_tfr_epoch": 359, "apply_lcmv": 360, "apply_lcmv_cov": 361, "apply_lcmv_epoch": 362, "apply_lcmv_raw": 363, "make_d": 364, "make_lcmv": 365, "make_lcmv_resolution_matrix": 366, "rap_mus": 367, "read_beamform": 368, "trap_mus": 369, "conductormodel": 370, "convert_flash_mri": 371, "distance_to_bem": 372, "fit_sphere_to_headshap": 373, "get_fitting_dig": 374, "make_flash_bem": 375, "make_watershed_bem": 377, "channel_indices_by_typ": 378, "channel_typ": 379, "digmontag": 380, "combine_channel": 382, "compute_dev_head_t": 383, "compute_native_head_t": 384, "equalize_channel": [385, 508], "find_ch_adjac": 386, "find_layout": 387, "fix_mag_coil_typ": 388, "generate_2d_layout": 389, "get_builtin_ch_adjac": 390, "get_builtin_montag": 391, "make_1020_channel_select": 392, "make_dig_montag": 393, "make_eeg_layout": 394, "make_grid_layout": 395, "make_standard_montag": 396, "read_ch_adjac": 397, "read_custom_montag": 398, "read_dig_captrak": 399, "read_dig_dat": 400, "read_dig_egi": 401, "read_dig_fif": 402, "read_dig_hpt": 403, "read_dig_localit": 404, "read_dig_polhemus_isotrak": 405, "read_layout": 406, "read_polhemus_fastscan": 407, "rename_channel": [408, 719], "unify_bad_channel": 409, "chpi": [410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "compute_chpi_amplitud": 410, "compute_chpi_loc": 411, "compute_chpi_snr": 412, "compute_head_po": 413, "extract_chpi_locs_ctf": 414, "extract_chpi_locs_kit": 415, "filter_chpi": 416, "get_active_chpi": 417, "get_chpi_info": 418, "head_pos_to_trans_rot_t": 419, "read_head_po": 420, "write_head_po": 421, "combine_evok": 422, "compute_covari": 423, "compute_proj_epoch": 424, "compute_proj_evok": 425, "compute_proj_raw": 426, "compute_rank": 427, "compute_raw_covari": 428, "compute_source_morph": 429, "concatenate_epoch": 430, "concatenate_ev": 431, "concatenate_raw": 432, "convert_forward_solut": 433, "estimate_head_mri_t": 435, "get_mni_fiduci": 436, "count_annot": 437, "count_ev": 438, "cov": [439, 440, 441], "compute_whiten": 439, "prepare_noise_cov": 440, "create_default_subject": 442, "create_info": 443, "cuda": [444, 445, 446, 941], "get_cuda_memori": 444, "init_cuda": 445, "set_cuda_devic": 446, "bst_auditori": 447, "data_path": [447, 448, 449, 452, 453, 454, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481], "bst_raw": 448, "bst_rest": 449, "load_data": [450, 465], "epilepsy_ecog": 452, "erp_cor": 453, "fetch_aparc_sub_parcel": 455, "fetch_dataset": 456, "fetch_fsaverag": 457, "fetch_hcp_mmp_parcel": 458, "fetch_infant_templ": 459, "fetch_phantom": 460, "fnirs_motor": 461, "has_dataset": 462, "hf_sef": 463, "misc": 466, "phantom_4dbti": 470, "phantom_kernel": 471, "phantom_kit": 472, "refmeg_nois": 473, "sleep_physionet": [475, 476], "ag": 475, "fetch_data": [475, 476], "temazepam": 476, "somato": 477, "spm_face": 478, "ucl_opm_auditori": 480, "visual_92_categori": 481, "decimate_surfac": 482, "generalizingestim": 486, "linearmodel": 487, "receptivefield": 489, "slidingestim": 493, "temporalfilt": 494, "timedelayingridg": 495, "timefrequ": 496, "unsupervisedspatialfilt": 497, "compute_em": 499, "cross_val_multiscor": 500, "get_coef": 501, "dig_mri_dist": 502, "get_phantom_dipol": 503, "average_mov": 504, "combine_event_id": 505, "equalize_epoch_count": 506, "define_target_ev": 509, "match_event_nam": 510, "shift_time_ev": 511, "events_from_annot": 512, "export_epoch": 513, "export_evok": 514, "export_evokeds_mff": 515, "export_raw": 516, "extract_label_time_cours": 517, "construct_iir_filt": 518, "create_filt": 519, "estimate_ringing_sampl": 520, "filter_data": 521, "notch_filt": 522, "find_ev": 524, "find_stim_step": 525, "fit_dipol": 526, "compute_depth_prior": 527, "compute_orient_prior": 528, "restrict_forward_to_label": 529, "restrict_forward_to_stc": 530, "get_config": 531, "get_config_path": 532, "get_head_surf": 533, "get_meg_helmet_surf": 534, "get_montage_volume_label": 535, "get_volume_labels_from_aseg": 536, "get_volume_labels_from_src": 537, "grade_to_tri": 538, "grade_to_vertic": 539, "grand_averag": 540, "grow_label": 541, "head_to_mni": 543, "head_to_mri": 544, "inverse_spars": [545, 546, 547, 548], "gamma_map": 545, "make_stc_from_dipol": 546, "mixed_norm": 547, "tf_mixed_norm": 548, "io": [549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587], "baseraw": 549, "rawarrai": 551, "anonymize_info": 552, "get_channel_type_const": 553, "read_mrk": 554, "read_fiduci": 555, "read_info": 556, "read_raw": 557, "read_raw_artemis123": 558, "read_raw_bdf": 559, "read_raw_boxi": 560, "read_raw_brainvis": 561, "read_raw_bti": 562, "read_raw_cnt": 563, "read_raw_ctf": 564, "read_raw_curri": 565, "read_raw_edf": 566, "read_raw_eeglab": 567, "read_raw_egi": 568, "read_raw_eximia": 569, "read_raw_eyelink": 570, "read_raw_fieldtrip": 571, "read_raw_fif": 572, "read_raw_fil": 573, "read_raw_gdf": 574, "read_raw_hitachi": 575, "read_raw_kit": 576, "read_raw_nedf": 577, "read_raw_neuralynx": 578, "read_raw_nicolet": 579, "read_raw_nihon": 580, "read_raw_nirx": 581, "read_raw_nsx": 582, "read_raw_persyst": 583, "read_raw_snirf": 584, "write_fiduci": 586, "write_info": 587, "select_sourc": 588, "label_sign_flip": 589, "labels_to_stc": 590, "make_ad_hoc_cov": 591, "make_bem_model": 592, "make_bem_solut": 593, "make_field_map": 594, "make_fixed_length_epoch": 595, "make_fixed_length_ev": 596, "make_forward_dipol": 597, "make_forward_solut": 598, "make_sphere_model": 599, "match_channel_ord": 600, "merge_ev": 601, "minimum_norm": [602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621], "apply_invers": 603, "apply_inverse_cov": 604, "apply_inverse_epoch": 605, "apply_inverse_raw": 606, "apply_inverse_tfr_epoch": 607, "compute_rank_invers": 608, "compute_source_psd": 609, "compute_source_psd_epoch": 610, "estimate_snr": 611, "get_cross_talk": 612, "get_point_spread": 613, "make_inverse_oper": 614, "make_inverse_resolution_matrix": 615, "prepare_inverse_oper": 616, "read_inverse_oper": 617, "resolution_metr": 618, "source_band_induced_pow": 619, "source_induced_pow": 620, "write_inverse_oper": 621, "morph_label": 622, "morph_source_spac": 623, "open_doc": 624, "open_report": 625, "parse_config": 626, "pick_channel": 627, "pick_channels_cov": 628, "pick_channels_forward": 629, "pick_channels_regexp": 630, "pick_ev": 631, "pick_info": 632, "pick_typ": 633, "pick_types_forward": 634, "eogregress": 635, "annotate_amplitud": 638, "annotate_break": 639, "annotate_mov": 640, "annotate_muscle_zscor": 641, "annotate_nan": 642, "compute_average_dev_head_t": 643, "compute_bridged_electrod": 644, "compute_current_source_dens": 645, "compute_fine_calibr": 646, "compute_maxwell_basi": 647, "compute_proj_hfc": 650, "corrmap": 651, "cortical_signal_suppress": 652, "create_ecg_epoch": 653, "create_eog_epoch": 654, "equalize_bad": 655, "interpolate_blink": 657, "read_eyelink_calibr": 658, "set_channel_types_eyetrack": 659, "find_bad_channels_maxwel": 660, "find_ecg_ev": 661, "find_eog_ev": 662, "fix_stim_artifact": 663, "ica_find_ecg_ev": 664, "ica_find_eog_ev": 665, "ieeg": [666, 667, 668], "make_montage_volum": 666, "project_sensors_onto_brain": 667, "warp_montag": 668, "infomax": 669, "interpolate_bridged_electrod": 670, "maxwell_filt": 671, "maxwell_filter_prepare_emptyroom": 672, "beer_lambert_law": 673, "optical_dens": 674, "scalp_coupling_index": 675, "short_channel": 676, "source_detector_dist": 677, "temporal_derivative_distribution_repair": 678, "oversampled_temporal_project": 679, "peak_find": 680, "read_eog_regress": 681, "read_fine_calibr": 682, "read_ica": 683, "read_ica_eeglab": 684, "realign_raw": 685, "regress_artifact": 686, "write_fine_calibr": 687, "random_parcel": 688, "read_annot": 689, "read_bem_solut": 690, "read_bem_surfac": 691, "read_cov": 692, "read_dipol": 693, "read_epoch": 694, "read_epochs_eeglab": 695, "read_epochs_fieldtrip": 696, "read_epochs_kit": 697, "read_ev": 698, "read_evoked_besa": 699, "read_evoked_fieldtrip": 700, "read_evok": 701, "read_evokeds_mff": 702, "read_forward_solut": 703, "read_freesurfer_lut": 704, "read_label": 705, "read_labels_from_annot": 706, "read_lta": 707, "read_morph_map": 708, "read_proj": 709, "read_reject_paramet": 710, "read_source_estim": 711, "read_source_morph": 712, "read_source_spac": 713, "read_surfac": 714, "read_talxfm": 715, "read_tran": 716, "read_tri": 717, "read_vectorview_select": 718, "scale_bem": 720, "scale_label": 721, "scale_mri": 722, "scale_source_spac": 723, "sensitivity_map": 724, "set_bipolar_refer": 725, "set_cache_dir": 726, "set_config": 727, "set_eeg_refer": 728, "set_log_fil": 729, "set_log_level": 730, "set_memmap_min_s": 731, "setup_volume_source_spac": 733, "sourcesimul": 734, "add_chpi": 735, "add_ecg": 736, "add_eog": 737, "add_nois": 738, "cosine_scor": 739, "f1_score": 740, "peak_position_error": 741, "precision_scor": 742, "recall_scor": 743, "region_localization_error": 744, "roc_auc_scor": 745, "spatial_deviation_error": 746, "select_source_in_label": 747, "simulate_evok": 748, "simulate_raw": 749, "simulate_sparse_stc": 750, "simulate_stc": 751, "source_spac": [752, 753], "compute_distance_to_sensor": 752, "get_decimated_surfac": 753, "spatial_dist_adjac": 754, "spatial_inter_hemi_adjac": 755, "spatial_src_adjac": 756, "spatial_tris_adjac": 757, "spatio_temporal_dist_adjac": 758, "spatio_temporal_src_adjac": 759, "spatio_temporal_tris_adjac": 760, "split_label": 761, "stat": [762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778], "bonferroni_correct": 762, "bootstrap_confidence_interv": 763, "combine_adjac": 764, "f_mway_rm": 765, "f_onewai": 766, "f_threshold_mway_rm": 767, "fdr_correct": 768, "linear_regress": 769, "linear_regression_raw": 770, "permutation_cluster_1samp_test": 771, "permutation_cluster_test": 772, "permutation_t_test": 773, "spatio_temporal_cluster_1samp_test": 774, "spatio_temporal_cluster_test": 775, "summarize_clusters_stc": 776, "ttest_1samp_no_p": 777, "ttest_ind_no_p": 778, "stc_near_sensor": 779, "stc_to_label": 780, "complete_surface_info": 781, "read_curvatur": 782, "time_frequ": [784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "averagetfr": 784, "crossspectraldens": 785, "epochsspectrumarrai": 787, "epochstfr": 788, "spectrumarrai": 790, "csd_array_fouri": 791, "csd_array_morlet": 792, "csd_array_multitap": 793, "csd_fourier": 794, "csd_morlet": 795, "csd_multitap": 796, "csd_tfr": 797, "dpss_window": 798, "fit_iir_model_raw": 799, "fwhm": 800, "istft": 801, "pick_channels_csd": 803, "psd_array_multitap": 804, "psd_array_welch": 805, "read_csd": 806, "read_spectrum": 807, "read_tfr": 808, "stft": 809, "stftfreq": 810, "cwt": 811, "tfr_array_morlet": 813, "tfr_array_multitap": 814, "tfr_array_stockwel": 815, "tfr_morlet": 816, "tfr_multitap": 817, "tfr_stockwel": 818, "write_tfr": 819, "transform_surface_to": 820, "apply_volume_registr": 822, "apply_volume_registration_point": 823, "compute_volume_registr": 824, "quat_to_rot": 825, "read_ras_mni_t": 826, "rot_to_quat": 827, "use_coil_def": 828, "use_log_level": 829, "util": [830, 831], "verbos": 832, "vertex_to_mni": 833, "clickableimag": 835, "evokedfield": 836, "figure3d": 837, "add_background_imag": 838, "centers_to_edg": 839, "circular_layout": 840, "close_3d_figur": 841, "close_all_3d_figur": 842, "create_3d_figur": 844, "plot_gaz": 845, "get_3d_backend": 846, "get_brain_class": 847, "get_browser_backend": 848, "iter_topographi": 849, "link_brain": 850, "mne_analyze_colormap": 851, "plot_align": 852, "plot_arrowmap": 853, "plot_bem": 854, "plot_brain_colorbar": 855, "plot_bridged_electrod": 856, "plot_ch_adjac": 857, "plot_channel_labels_circl": 858, "plot_chpi_snr": 859, "plot_compare_evok": 860, "plot_cov": 861, "plot_csd": 862, "plot_dipole_amplitud": 863, "plot_dipole_loc": 864, "plot_drop_log": 865, "plot_epoch": 866, "plot_epochs_imag": 867, "plot_epochs_psd_topomap": 868, "plot_ev": 869, "plot_evok": 870, "plot_evoked_field": 871, "plot_evoked_imag": 872, "plot_evoked_joint": 873, "plot_evoked_topo": 874, "plot_evoked_topomap": 875, "plot_evoked_whit": 876, "plot_filt": 877, "plot_head_posit": 878, "plot_ica_compon": 879, "plot_ica_overlai": 880, "plot_ica_properti": 881, "plot_ica_scor": 882, "plot_ica_sourc": 883, "plot_ideal_filt": 884, "plot_layout": 885, "plot_montag": 886, "plot_projs_joint": 887, "plot_projs_topomap": 888, "plot_raw": 889, "plot_raw_psd": 890, "plot_regression_weight": 891, "plot_sensor": 892, "plot_snr_estim": 893, "plot_source_estim": 894, "plot_sparse_source_estim": 895, "plot_tfr_topomap": 896, "plot_topo_image_epoch": 897, "plot_vector_source_estim": 899, "plot_volume_source_estim": 900, "set_3d_backend": 901, "set_3d_opt": 902, "set_3d_titl": 903, "set_3d_view": 904, "set_browser_backend": 905, "snapshot_brain_montag": 906, "ui_ev": [907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919], "colormaprang": 907, "contour": 908, "figureclos": 909, "playbackspe": 910, "timechang": 911, "uievent": 912, "vertexselect": 913, "disable_ui_ev": 914, "publish": 916, "subscrib": 917, "unlink": 918, "unsubscrib": 919, "use_3d_backend": 920, "use_browser_backend": 921, "write_bem_solut": 923, "write_bem_surfac": 924, "write_cov": 925, "write_ev": 926, "write_evok": 927, "write_forward_solut": 928, "write_head_bem": 929, "write_label": 930, "write_labels_to_annot": 931, "write_proj": 932, "write_source_spac": 933, "write_surfac": 934, "write_tran": 935, "frequent": 936, "ask": 936, "question": 936, "faq": 936, "issu": 936, "help": [936, 937, 949], "can": 936, "pyvista": 936, "window": [936, 941], "maco": [936, 941, 948], "extrem": 936, "even": 936, "sure": 936, "x": 936, "my": 936, "y": 936, "think": 936, "danger": 936, "pickl": 936, "later": 936, "download": [936, 948], "onc": 936, "again": 936, "cpu": 936, "though": 936, "didn": 936, "tell": 936, "mysteri": 936, "take": 936, "forev": 936, "incorrect": 936, "homepag": 940, "jupyt": 941, "notebook": 941, "jupyterlab": 941, "fa": [941, 948], "brand": [941, 948], "instal": [941, 942, 943, 944, 945, 946, 947, 948, 949], "headless": 941, "linux": 941, "server": 941, "gpu": 941, "acceler": 941, "screen": 941, "mesa": 941, "troubleshoot": [941, 948], "troubl": 941, "upgrad": [941, 950], "pip": 946, "conda": 946, "hdf5": 946, "scenario": 946, "appl": 948, "martino": 951, "cpp": 952, "archiv": 953, "old": 953, "benevol": 954, "dictat": 954, "life": 954, "particip": 954, "lead": 954, "unus": 955, "entri": 955}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Connectivity Estimation": [[0, "connectivity-estimation"]], "Covariance computation": [[1, "covariance-computation"]], "Creating data objects from arrays": [[2, "creating-data-objects-from-arrays"]], "Datasets": [[3, "datasets"]], "Decoding": [[4, "decoding"]], "Events": [[5, "events"]], "Exporting": [[6, "exporting"]], "File I/O": [[7, "file-i-o"]], "Forward Modeling": [[8, "forward-modeling"]], "Inverse Solutions": [[9, "inverse-solutions"]], "Logging and Configuration": [[10, "logging-and-configuration"]], "Most-used classes": [[11, "most-used-classes"]], "MRI Processing": [[12, "mri-processing"]], "Preprocessing": [[13, "preprocessing"], [53, "preprocessing"], [104, "preprocessing"], [136, "preprocessing"], [167, "preprocessing"], [191, "preprocessing"], [192, "preprocessing"], [241, "preprocessing"], [316, "preprocessing"]], "Python API Reference": [[14, "python-api-reference"]], "Reading raw data": [[15, "reading-raw-data"]], "Realtime": [[16, "realtime"]], "MNE-Report": [[17, "mne-report"]], "Sensor Space Data": [[18, "sensor-space-data"]], "Simulation": [[19, "simulation"], [191, "simulation"], [253, "simulation"]], "Source Space Data": [[20, "source-space-data"]], "Statistics": [[21, "statistics"]], "Time-Frequency": [[22, "time-frequency"]], "Visualization": [[23, "visualization"], [53, "visualization"], [81, "visualization"], [150, "visualization"], [203, "visualization"], [309, "visualization"]], "Eyetracking": [[23, "eyetracking"]], "UI Events": [[23, "ui-events"]], "Connectivity Analysis Examples": [[24, "connectivity-analysis-examples"], [53, "connectivity-analysis-examples"]], "Computation times": [[25, "computation-times"], [32, "computation-times"], [46, "computation-times"], [51, "computation-times"], [82, "computation-times"], [93, "computation-times"], [111, "computation-times"], [115, "computation-times"], [118, "computation-times"], [129, "computation-times"], [133, "computation-times"], [156, "computation-times"], [165, "computation-times"], [174, "computation-times"], [180, "computation-times"], [190, "computation-times"], [200, "computation-times"], [214, "computation-times"], [221, "computation-times"], [225, "computation-times"], [242, "computation-times"], [248, "computation-times"], [249, "computation-times"], [254, "computation-times"], [262, "computation-times"], [267, "computation-times"], [272, "computation-times"], [276, "computation-times"], [956, "computation-times"]], "Brainstorm raw (median nerve) dataset": [[26, "brainstorm-raw-median-nerve-dataset"]], "References": [[26, "references"], [30, "references"], [34, "references"], [36, "references"], [38, "references"], [39, "references"], [41, "references"], [42, "references"], [44, "references"], [45, "references"], [47, "references"], [59, "references"], [61, "references"], [66, "references"], [68, "references"], [69, "references"], [70, "references"], [72, "references"], [77, "references"], [80, "references"], [81, "references"], [84, "references"], [85, "references"], [86, "references"], [92, "references"], [97, "references"], [98, "references"], [101, "references"], [102, "references"], [105, "references"], [109, "references"], [110, "references"], [114, "references"], [121, "references"], [128, "references"], [136, "references"], [139, "references"], [140, "references"], [144, "references"], [146, "references"], [148, "references"], [154, "references"], [163, "references"], [167, "references"], [170, "references"], [177, "references"], [181, "references"], [183, "references"], [188, "references"], [202, "references"], [204, "references"], [206, "references"], [209, "references"], [210, "references"], [218, "references"], [222, "references"], [223, "references"], [227, "references"], [229, "references"], [231, "references"], [232, "references"], [233, "references"], [234, "references"], [235, "references"], [237, "references"], [239, "references"], [252, "references"], [255, "references"], [256, "references"], [260, "references"], [268, "references"], [316, "references"], [317, "references"], [320, "references"], [936, "references"]], "HF-SEF dataset": [[27, "hf-sef-dataset"]], "Examples on open datasets": [[28, "examples-on-open-datasets"], [53, "examples-on-open-datasets"]], "Kernel OPM phantom data": [[29, "kernel-opm-phantom-data"]], "Single trial linear regression analysis with the LIMO dataset": [[30, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[30, "about-the-data"]], "Load the data": [[30, "load-the-data"], [163, "load-the-data"], [167, "load-the-data"], [185, "load-the-data"]], "Visualize events": [[30, "visualize-events"]], "Visualize condition ERPs": [[30, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[30, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[30, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[30, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[30, "extract-regression-coefficients"]], "Plot model results": [[30, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[31, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[31, "prepare-data-for-localization"]], "Perform dipole fitting": [[31, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[31, "perform-minimum-norm-localization"]], "From raw data to dSPM on SPM Faces dataset": [[33, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[34, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[35, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[36, "representational-similarity-analysis"]], "Decoding source space data": [[37, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[38, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[39, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[40, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[41, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[42, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[43, "machine-learning-decoding-encoding-and-mvpa"], [53, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[44, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[44, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[45, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[45, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[45, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[45, "investigate-model-coefficients"], [45, "id7"]], "Create and fit a stimulus reconstruction model": [[45, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[45, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[47, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[47, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[48, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[49, "forward-modeling"], [53, "forward-modeling"]], "Generate a left cerebellum volume source space": [[50, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[52, "use-source-space-morphing"]], "Examples Gallery": [[53, "examples-gallery"]], "Input/Output": [[53, "input-output"], [89, "input-output"]], "Data Simulation": [[53, "data-simulation"], [116, "data-simulation"]], "Time-Frequency Examples": [[53, "time-frequency-examples"], [132, "time-frequency-examples"]], "Statistics Examples": [[53, "statistics-examples"], [125, "statistics-examples"]], "Inverse problem and source analysis": [[53, "inverse-problem-and-source-analysis"], [62, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[54, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[55, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[56, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[57, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[58, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[59, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[60, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[60, "compute-covariances"]], "Plot source estimates": [[60, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[61, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[63, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[64, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[65, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[65, "compute-inverse-solution"], [67, "compute-inverse-solution"], [203, "compute-inverse-solution"]], "View source activations": [[65, "view-source-activations"]], "Using vector solutions": [[65, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[66, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[67, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[67, "set-up-our-source-space"]], "View the source space": [[67, "view-the-source-space"]], "Compute the fwd matrix": [[67, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[67, "plot-the-mixed-source-estimate"]], "Plot the surface": [[67, "plot-the-surface"]], "Plot the volume": [[67, "plot-the-volume"]], "Process labels": [[67, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[68, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[68, "compute-empty-room-covariance"]], "Epoch the data": [[68, "epoch-the-data"]], "Compute and plot covariances": [[68, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[68, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[69, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[69, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[69, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[69, "plot-results"], [70, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[69, "reading-and-writing-sourcemorph-from-and-to-disk"], [70, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[70, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[70, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[70, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[70, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[71, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[72, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[73, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[73, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[73, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[73, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[73, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[73, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[73, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[74, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[74, "visualize"], [75, "visualize"], [76, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[75, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[75, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[75, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[76, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[77, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[78, "reading-an-inverse-operator"]], "Reading an STC file": [[79, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[80, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[80, "mne"]], "dSPM": [[80, "dspm"], [320, "dspm"]], "Visualize results": [[80, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[81, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[81, "eegmeg"]], "MEG": [[81, "meg"]], "Estimate data SNR using an inverse": [[83, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[84, "computing-source-space-snr"]], "EEG": [[84, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[85, "compute-mxne-with-time-frequency-sparse-prior"]], "Compute Trap-Music on evoked data": [[86, "compute-trap-music-on-evoked-data"]], "Plotting the full vector-valued MNE solution": [[87, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[88, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[90, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[91, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[92, "reading-xdf-eeg-data"]], "Using contralateral referencing for EEG": [[94, "using-contralateral-referencing-for-eeg"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[95, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[96, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[97, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[97, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[97, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[97, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[97, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[97, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[97, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[97, "the-relationship-between-bridging-and-impedances"]], "Summary": [[97, "summary"], [193, "summary"], [201, "summary"], [226, "summary"], [227, "summary"], [229, "summary"]], "Transform EEG data using current source density (CSD)": [[98, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[99, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[100, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[100, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[100, "perform-regression-and-remove-eog"]], "Before/after comparison": [[100, "before-after-comparison"]], "Find MEG reference channel artifacts": [[101, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[102, "visualise-nirs-artifact-correction-methods"]], "Import data": [[102, "import-data"]], "Add artificial artifacts to data": [[102, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[102, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[103, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[105, "interpolate-bad-channels-for-meg-eeg-channels"]], "Maxwell filter data with movement compensation": [[106, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[107, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[107, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[107, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[108, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[108, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[108, "view-the-annotations"]], "Removing muscle ICA components": [[109, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[109, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[110, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[112, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[113, "remap-meg-channel-types"]], "XDAWN Denoising": [[114, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[117, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[117, "define-main-parameters-of-sources"]], "Create simulated source activity": [[117, "create-simulated-source-activity"], [121, "create-simulated-source-activity"]], "Simulate raw data": [[117, "simulate-raw-data"], [121, "simulate-raw-data"]], "Compute evoked from raw data": [[117, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[117, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[117, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[117, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[117, "for-region"]], "For Dipoles": [[117, "for-dipoles"]], "Generate simulated evoked data": [[119, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[120, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[121, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[121, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[121, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[122, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[123, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[124, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[126, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[127, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[128, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[130, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[131, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[131, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[134, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[135, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[136, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[136, "alignment-and-forward"]], "Alpha": [[136, "alpha"]], "Beta": [[136, "beta"]], "Compute induced power in the source space with dSPM": [[137, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[138, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[139, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[140, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[141, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[141, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[141, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[141, "multitaper-transform"]], "Stockwell (S) transform": [[141, "stockwell-s-transform"]], "Morlet Wavelets": [[141, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[141, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[141, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[141, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[142, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[142, "load-data"], [143, "load-data"], [204, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[142, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[142, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[143, "plotting-with-mne-viz-brain"]], "Add source information": [[143, "add-source-information"]], "Modify the view of the brain": [[143, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[143, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[143, "include-the-head-in-the-image"]], "Add sensors positions": [[143, "add-sensors-positions"]], "Add current dipoles": [[143, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[143, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[144, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[145, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[146, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[147, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[147, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[147, "additional-plot-topomap-options"]], "More advanced usage": [[147, "more-advanced-usage"]], "Interpolating topomaps": [[147, "interpolating-topomaps"]], "Animating the topomap": [[147, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[148, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting eye-tracking heatmaps in MNE-Python": [[149, "plotting-eye-tracking-heatmaps-in-mne-python"]], "Data loading": [[149, "data-loading"], [240, "data-loading"]], "Process and epoch the data": [[149, "process-and-epoch-the-data"]], "Plot a heatmap of the eye-tracking data": [[149, "plot-a-heatmap-of-the-eye-tracking-data"]], "Overlaying plots with images": [[149, "overlaying-plots-with-images"]], "Plotting sensor layouts of MEG systems": [[151, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[151, "neuromag"]], "CTF": [[151, "ctf"]], "BTi": [[151, "bti"]], "KIT": [[151, "kit"]], "Artemis123": [[151, "artemis123"]], "Plot the MNE brain and helmet": [[152, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[153, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[154, "plot-a-cortical-parcellation"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[155, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Sensitivity map of SSP projections": [[157, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[158, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[159, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[160, "cross-hemisphere-comparison"]], "Working with sEEG data": [[161, "working-with-seeg-data"]], "Working with ECoG data": [[162, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[162, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[162, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[162, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[162, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[162, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[163, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[163, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[163, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[163, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[163, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[163, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[163, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[163, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[163, "further-analysis-of-the-data"]], "Exercise": [[163, "exercise"], [184, "exercise"], [223, "exercise"], [269, "exercise"]], "Clinical applications": [[164, "clinical-applications"], [191, "clinical-applications"]], "MNE-GUI-addons examples": [[164, "mne-gui-addons-examples"], [191, "mne-gui-addons-examples"]], "MNE-Python examples": [[164, "mne-python-examples"], [191, "mne-python-examples"]], "The Epochs data structure: discontinuous data": [[166, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[166, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[166, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[166, "subselecting-epochs"]], "Selecting epochs by index": [[166, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[166, "selecting-dropping-and-reordering-channels"], [175, "selecting-dropping-and-reordering-channels"], [243, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[166, "changing-channel-name-and-type"], [243, "changing-channel-name-and-type"]], "Selection in the time domain": [[166, "selection-in-the-time-domain"], [243, "selection-in-the-time-domain"]], "Extracting data in other forms": [[166, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[166, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[166, "iterating-over-epochs"]], "Regression-based baseline correction": [[167, "regression-based-baseline-correction"]], "Traditional baselining": [[167, "traditional-baselining"]], "Regression-based baselining": [[167, "regression-based-baselining"]], "Plot the baseline regressor": [[167, "plot-the-baseline-regressor"]], "Plot the ERPs": [[167, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[167, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[167, "examine-the-interaction-term"]], "Visualizing epoched data": [[168, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[168, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[168, null]], "Plotting projectors from an Epochs object": [[168, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[168, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[168, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[168, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[169, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[169, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[169, null]], "Modifying the metadata": [[169, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[169, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[169, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[170, "auto-generating-epochs-metadata"]], "Preparation": [[170, "preparation"]], "Creating metadata from events": [[170, "creating-metadata-from-events"]], "The basics of make_metadata": [[170, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[170, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[170, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[170, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[170, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[170, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[171, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[171, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[171, "scaling-time-and-channel-values"]], "Setting the index": [[171, "setting-the-index"]], "Wide- versus long-format DataFrames": [[171, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[172, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[172, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[172, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[173, "segmenting-continuous-data-into-epochs"], [191, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[175, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[175, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[175, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[175, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[175, null]], "Similarities among the core data structures": [[175, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[175, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[175, "combining-evoked-objects"]], "Other uses of Evoked objects": [[175, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[176, "visualizing-evoked-data"]], "Plotting signal traces": [[176, "plotting-signal-traces"]], "Butterfly plots": [[176, null]], "Plotting scalp topographies": [[176, "plotting-scalp-topographies"]], "Arrow maps": [[176, "arrow-maps"]], "Joint plots": [[176, "joint-plots"]], "Comparing Evoked objects": [[176, "comparing-evoked-objects"]], "Image plots": [[176, "image-plots"]], "Topographical subplots": [[176, "topographical-subplots"]], "3D Field Maps": [[176, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[177, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[177, "channel-names-and-types"]], "Channel locations": [[177, "channel-locations"]], "Setting the EEG reference": [[177, "setting-the-eeg-reference"], [235, "setting-the-eeg-reference"]], "Filtering": [[177, "filtering"]], "Evoked responses: epoching and averaging": [[177, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[177, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[177, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[177, "comparing-conditions"]], "Grand averages": [[177, "grand-averages"]], "Amplitude and latency measures": [[177, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[177, "peak-latency-and-amplitude"]], "Mean Amplitude": [[177, "mean-amplitude"]], "Plotting whitened data": [[178, "plotting-whitened-data"]], "Raw data with whitening": [[178, "raw-data-with-whitening"]], "Epochs with whitening": [[178, "epochs-with-whitening"]], "Evoked data with whitening": [[178, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[178, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[178, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[179, "estimating-evoked-responses"], [191, "estimating-evoked-responses"], [192, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[181, "freesurfer-mri-reconstruction"]], "First steps": [[181, "first-steps"], [945, "first-steps"]], "Anatomical reconstruction": [[181, "anatomical-reconstruction"]], "Use with MNE-Python": [[181, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[181, "fsaverage"]], "Source alignment and coordinate frames": [[182, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[182, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[182, "coordinate-frame-definitions"]], "A bad example": [[182, "a-bad-example"]], "A good example": [[182, "a-good-example"]], "Visualizing the transformations": [[182, "visualizing-the-transformations"]], "Example: MRI defacing": [[182, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[182, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[182, "alignment-without-mri"]], "Using an automated approach to coregistration": [[183, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[183, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[183, "initial-fit-with-fiducials"]], "Refining with ICP": [[183, "refining-with-icp"]], "Omitting bad points": [[183, "omitting-bad-points"]], "Final coregistration fit": [[183, "final-coregistration-fit"]], "Head model and forward computation": [[184, "head-model-and-forward-computation"]], "Computing the forward operator": [[184, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[184, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[184, "visualizing-the-coregistration"]], "Compute Source Space": [[184, "compute-source-space"]], "Compute forward solution": [[184, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[185, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[185, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[185, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[185, "infant-mri-surrogates"]], "Get an infant MRI template": [[185, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[186, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[186, "mri-coordinate-frames"]], "Under the hood": [[186, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[186, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[186, null]], "Using FreeSurfer\u2019s surface reconstructions": [[186, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[186, "cortical-alignment-spherical"]], "Surface decimation": [[186, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[186, "freesurfer-s-mni-affine-transformation"]], "Understanding the inflated brain": [[186, "understanding-the-inflated-brain"]], "Fixing BEM and head surfaces": [[187, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[187, "exporting-surfaces-to-blender"]], "Editing in Blender": [[187, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[187, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[187, "editing-the-head-surfaces"]], "Low-resolution head": [[187, "low-resolution-head"]], "High-resolution head": [[187, "high-resolution-head"]], "Blender editing tips": [[187, "blender-editing-tips"]], "What if you still get an error?": [[187, "what-if-you-still-get-an-error"]], "Blender operations": [[187, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[187, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[187, "topological-errors"]], "Dealing with topology in blender": [[187, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[187, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[188, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[188, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[188, "how-should-i-regularize-the-covariance-matrix"], [936, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[189, "forward-models-and-source-spaces"], [191, "forward-models-and-source-spaces"]], "Tutorials": [[191, "tutorials"]], "Introductory tutorials": [[191, "introductory-tutorials"], [199, "introductory-tutorials"]], "Reading data for different recording systems": [[191, "reading-data-for-different-recording-systems"], [220, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[191, "working-with-continuous-data"], [247, "working-with-continuous-data"]], "Time-frequency analysis": [[191, "time-frequency-analysis"], [192, "time-frequency-analysis"], [271, "time-frequency-analysis"]], "Source localization and inverses": [[191, "source-localization-and-inverses"], [213, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[191, "statistical-analysis-of-sensor-data"], [261, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[191, "statistical-analysis-of-source-estimates"], [266, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[191, "machine-learning-models-of-neural-activity"], [224, "machine-learning-models-of-neural-activity"]], "Visualization tutorials": [[191, "visualization-tutorials"], [275, "visualization-tutorials"]], "Overview of MEG/EEG analysis with MNE-Python": [[192, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[192, "loading-data"]], "Detecting experimental events": [[192, "detecting-experimental-events"]], "Epoching continuous data": [[192, "epoching-continuous-data"]], "Inverse modeling": [[192, "inverse-modeling"]], "Modifying data in-place": [[193, "modifying-data-in-place"]], "Signal processing": [[193, "signal-processing"]], "Channel picking": [[193, "channel-picking"]], "The copy parameter": [[193, "the-copy-parameter"]], "Parsing events from raw data": [[194, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[194, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[194, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[194, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[194, null]], "Reading embedded events as Annotations": [[194, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[194, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[194, "making-multiple-events-per-annotation"]], "The Info data structure": [[195, "the-info-data-structure"]], "Querying the Info object": [[195, "querying-the-info-object"]], "Obtaining subsets of channels": [[195, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[195, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[195, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[196, "working-with-sensor-locations"]], "About montages and layouts": [[196, "about-montages-and-layouts"]], "Working with built-in montages": [[196, "working-with-built-in-montages"]], "Computing sensor locations": [[196, null]], "Plotting 2D sensor locations like EEGLAB": [[196, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[196, null]], "Manually controlling 2D channel projection": [[196, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[196, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[196, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[196, "working-with-layout-files"]], "Configuring MNE-Python": [[197, "configuring-mne-python"]], "Getting and setting configuration variables": [[197, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[197, "where-configurations-are-stored"]], "Using environment variables": [[197, "using-environment-variables"]], "Logging": [[197, "logging"]], "Getting information about your system": [[197, "getting-information-about-your-system"]], "Getting started with mne.Report": [[198, "getting-started-with-mne-report"]], "Adding Raw data": [[198, "adding-raw-data"]], "Adding events": [[198, "adding-events"]], "Adding Epochs": [[198, "adding-epochs"]], "Adding Evoked": [[198, "adding-evoked"]], "Adding Covariance": [[198, "adding-covariance"]], "Adding Projection vectors": [[198, "adding-projection-vectors"]], "Adding ICA": [[198, "adding-ica"]], "Adding MRI with BEM": [[198, "adding-mri-with-bem"]], "Adding coregistration": [[198, "adding-coregistration"]], "Adding a Forward solution": [[198, "adding-a-forward-solution"]], "Adding an InverseOperator": [[198, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[198, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[198, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[198, "adding-custom-figures"]], "Adding image files": [[198, "adding-image-files"]], "Working with tags": [[198, "working-with-tags"]], "Editing a saved report": [[198, "editing-a-saved-report"]], "Adding an entire folder of files": [[198, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[198, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[201, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[201, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[201, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[201, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[202, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[203, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[203, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[203, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[203, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[204, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[204, "the-source-space"]], "Fixed dipole orientations": [[204, "fixed-dipole-orientations"]], "Loose dipole orientations": [[204, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[204, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[204, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[205, "computing-various-mne-solutions"]], "Fixed orientation": [[205, "fixed-orientation"]], "Free orientation": [[205, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[206, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[206, "introduction-to-beamformers"]], "Data processing": [[206, "data-processing"]], "Computing the covariance matrices": [[206, "computing-the-covariance-matrices"]], "The forward model": [[206, "the-forward-model"]], "Handling depth bias": [[206, "handling-depth-bias"]], "Compute the spatial filter": [[206, "compute-the-spatial-filter"]], "Apply the spatial filter": [[206, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[206, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[206, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[206, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[206, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[206, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[206, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[207, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[207, "surface-source-estimates"]], "Volume Source Estimates": [[207, "volume-source-estimates"]], "Vector Source Estimates": [[207, "vector-source-estimates"]], "Dipole fits": [[207, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[208, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[208, "prerequisites"]], "Visualizing the MRI": [[208, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[208, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[208, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[209, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[210, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[211, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "KIT phantom dataset tutorial": [[212, "kit-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[215, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[215, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "FIL OPM (.bin)": [[215, "fil-opm-bin"]], "Artemis123 (.bin)": [[215, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[215, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[215, "ctf-data-dir"]], "CTF Polhemus data": [[215, "ctf-polhemus-data"]], "Applying software gradient compensation": [[215, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[215, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[215, null]], "FieldTrip MEG/EEG data (.mat)": [[215, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[215, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[216, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[216, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[216, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[216, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[216, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[216, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[216, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[216, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[216, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[216, "nicolet-data"]], "eXimia EEG data (.nxe)": [[216, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[216, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[216, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[216, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[216, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[216, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[217, "importing-data-from-fnirs-devices"]], "Standardized data": [[217, "standardized-data"]], "SNIRF (.snirf)": [[217, "snirf-snirf"]], "Specifying the coordinate system": [[217, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[217, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[217, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[217, "hitachi-csv"]], "Frequency Domain Devices": [[217, "frequency-domain-devices"]], "BOXY (.txt)": [[217, "boxy-txt"]], "Custom Data Import": [[217, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[217, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[217, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[218, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Importing Data from Eyetracking devices": [[219, "importing-data-from-eyetracking-devices"]], "SR Research (Eyelink) (.asc)": [[219, "sr-research-eyelink-asc"]], "Eye Position Data": [[219, "eye-position-data"]], "Gaze": [[219, "gaze"]], "Head-Referenced Eye Angle (HREF)": [[219, "head-referenced-eye-angle-href"]], "Pupil Position": [[219, "pupil-position"]], "Pupil Size Data": [[219, "pupil-size-data"]], "Velocity, resolution, and head position data": [[219, "velocity-resolution-and-head-position-data"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[222, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[222, "load-audio-data"]], "Create a receptive field": [[222, "create-a-receptive-field"]], "Simulate a neural response": [[222, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[222, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[222, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[222, "using-different-regularization-types"]], "Compare model performance": [[222, "compare-model-performance"]], "Decoding (MVPA)": [[223, "decoding-mvpa"]], "Design philosophy": [[223, "design-philosophy"], [318, "design-philosophy"]], "Transformation classes": [[223, "transformation-classes"]], "Scaler": [[223, "scaler"]], "Vectorizer": [[223, "vectorizer"]], "PSDEstimator": [[223, "psdestimator"]], "FilterEstimator": [[223, "filterestimator"]], "Spatial filters": [[223, "spatial-filters"]], "Common spatial pattern": [[223, "common-spatial-pattern"]], "Examples": [[223, null], [223, null], [223, null], [223, null], [223, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [323, "examples"], [323, "id6"], [323, "id9"], [323, "id12"], [323, "id15"], [323, "id18"], [323, "id21"], [323, "id24"], [323, "id27"], [323, "id31"], [323, "id34"], [323, "id37"], [323, "id40"], [323, "id43"], [323, "id46"], [323, "id49"], [323, "id52"], [323, "id55"], [323, "id58"], [323, "id61"], [323, "id64"], [323, "id67"], [323, "id70"]], "Source power comodulation (SPoC)": [[223, "source-power-comodulation-spoc"]], "xDAWN": [[223, "xdawn"]], "Effect-matched spatial filtering": [[223, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[223, "patterns-vs-filters"]], "Decoding over time": [[223, "decoding-over-time"]], "Temporal decoding": [[223, "temporal-decoding"]], "Temporal generalization": [[223, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[223, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[223, "source-space-decoding"]], "Overview of artifact detection": [[226, "overview-of-artifact-detection"]], "What are artifacts?": [[226, "what-are-artifacts"]], "What to do about artifacts": [[226, "what-to-do-about-artifacts"]], "Artifact detection": [[226, "artifact-detection"]], "Low-frequency drifts": [[226, "low-frequency-drifts"]], "Power line noise": [[226, "power-line-noise"], [230, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[226, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[226, "ocular-artifacts-eog"]], "Handling bad channels": [[227, "handling-bad-channels"]], "Marking bad channels": [[227, "marking-bad-channels"], [316, "marking-bad-channels"]], "Blocking execution": [[227, null]], "When to look for bad channels": [[227, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[227, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[227, "interpolating-bad-channels"]], "How interpolation works": [[227, "how-interpolation-works"]], "Interpolation in MNE-Python": [[227, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[228, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[228, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[228, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[228, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[228, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[228, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[229, "background-information-on-filtering"]], "Problem statement": [[229, "problem-statement"]], "Filtering basics": [[229, "filtering-basics"]], "FIR Filters": [[229, "fir-filters"]], "Designing FIR filters": [[229, "designing-fir-filters"]], "Applying FIR filters": [[229, "applying-fir-filters"]], "IIR filters": [[229, "iir-filters"]], "Designing IIR filters": [[229, "designing-iir-filters"]], "Applying IIR filters": [[229, "applying-iir-filters"]], "Some pitfalls of filtering": [[229, "some-pitfalls-of-filtering"]], "Low-pass problems": [[229, "low-pass-problems"]], "High-pass problems": [[229, "high-pass-problems"]], "Baseline problems (or solutions?)": [[229, "baseline-problems-or-solutions"]], "Filtering defaults": [[229, "filtering-defaults"]], "Defaults in MNE-Python": [[229, "defaults-in-mne-python"]], "Defaults in MNE-C": [[229, "defaults-in-mne-c"]], "Defaults in other software": [[229, "defaults-in-other-software"]], "Reporting Filters": [[229, "reporting-filters"]], "Filter type": [[229, "filter-type"]], "Cutoff frequency": [[229, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[229, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[229, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[229, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[230, "filtering-and-resampling-data"]], "Background on filtering": [[230, "background-on-filtering"]], "Repairing artifacts by filtering": [[230, "repairing-artifacts-by-filtering"]], "Slow drifts": [[230, "slow-drifts"]], "Resampling": [[230, "resampling"]], "Best practices": [[230, "best-practices"], [233, "best-practices"]], "Repairing artifacts with regression": [[231, "repairing-artifacts-with-regression"]], "Prepare the data": [[231, "prepare-the-data"]], "Visualize the original data": [[231, "visualize-the-original-data"]], "Compute and apply EOG regression": [[231, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[231, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[231, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[231, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[232, "repairing-artifacts-with-ica"]], "What is ICA?": [[232, "what-is-ica"]], "ICA in MNE-Python": [[232, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[232, null]], "Example: EOG and ECG artifact repair": [[232, "example-eog-and-ecg-artifact-repair"], [234, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[232, "visualizing-the-artifacts"], [234, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[232, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[232, "fitting-ica"]], "Ignoring the time domain": [[232, null]], "Looking at the ICA solution": [[232, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[232, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[232, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[232, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[232, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[232, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[233, "background-on-projectors-and-projections"]], "What is a projection?": [[233, "what-is-a-projection"]], "Example: projection as noise reduction": [[233, "example-projection-as-noise-reduction"]], "Terminology": [[233, null]], "Signal-space projection (SSP)": [[233, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[233, "projectors-in-mne-python"]], "Computing projectors": [[233, "computing-projectors"]], "Visualizing the effect of projectors": [[233, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[233, "loading-and-saving-projectors"]], "Adding and removing projectors": [[233, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[233, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[234, "repairing-artifacts-with-ssp"]], "What is SSP?": [[234, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[234, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[234, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[234, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[234, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[234, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[234, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[234, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[234, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[234, null]], "Background": [[235, "background"]], "Setting or changing the reference channel": [[235, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[235, "setting-average-reference"]], "Creating the average reference as a projector": [[235, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[235, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[235, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[235, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[236, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[236, "hpi-frequencies"]], "Estimating continuous head position": [[236, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[236, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[236, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[237, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[237, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[237, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[237, "spatiotemporal-sss-tsss"]], "Movement compensation": [[237, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[237, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[238, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[238, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[238, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[238, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[238, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[238, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[238, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[238, "removing-heart-rate-from-signal"]], "Extract epochs": [[238, "extract-epochs"]], "View consistency of responses across trials": [[238, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[238, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[238, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[238, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[238, "compare-tapping-of-left-and-right-hands"]], "Preprocessing optically pumped magnetometer (OPM) MEG data": [[239, "preprocessing-optically-pumped-magnetometer-opm-meg-data"]], "Examining raw data": [[239, "examining-raw-data"]], "Denoising: Regressing via reference sensors": [[239, "denoising-regressing-via-reference-sensors"]], "Denoising: Regressing via homogeneous field correction": [[239, "denoising-regressing-via-homogeneous-field-correction"]], "Comparing denoising methods": [[239, "comparing-denoising-methods"]], "Filtering nuisance signals": [[239, "filtering-nuisance-signals"]], "Generating an evoked response": [[239, "generating-an-evoked-response"]], "Working with eye tracker data in MNE-Python": [[240, "working-with-eye-tracker-data-in-mne-python"]], "Ocular annotations": [[240, "ocular-annotations"]], "Checking the calibration": [[240, "checking-the-calibration"]], "Plot the raw eye-tracking data": [[240, "plot-the-raw-eye-tracking-data"]], "Handling blink artifacts": [[240, "handling-blink-artifacts"]], "Extract common stimulus events from the data": [[240, "extract-common-stimulus-events-from-the-data"]], "Align the eye-tracking data with EEG data": [[240, "align-the-eye-tracking-data-with-eeg-data"]], "Showing the pupillary light reflex": [[240, "showing-the-pupillary-light-reflex"]], "The Raw data structure: continuous data": [[243, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[243, "loading-continuous-data"]], "Datasets in MNE-Python": [[243, null]], "Querying the Raw object": [[243, "querying-the-raw-object"]], "Attributes vs. Methods": [[243, null]], "The Raw.info attribute": [[243, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[243, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[243, null]], "Modifying Raw objects": [[243, "modifying-raw-objects"]], "len(raw)": [[243, null]], "Long channel names": [[243, null]], "Extracting data from Raw objects": [[243, "extracting-data-from-raw-objects"]], "Extracting data by index": [[243, "extracting-data-by-index"]], "Extracting channels by name": [[243, "extracting-channels-by-name"]], "Extracting channels by type": [[243, "extracting-channels-by-type"]], "The Raw.get_data() method": [[243, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[243, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[243, "exporting-and-saving-raw-objects"]], "Working with events": [[244, "working-with-events"]], "Reading and writing events from/to a file": [[244, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[244, "subselecting-and-combining-events"]], "Including/excluding events": [[244, null]], "Mapping Event IDs to trial descriptors": [[244, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[244, "plotting-events"]], "Plotting events and raw data together": [[244, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[244, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[245, "annotating-continuous-data"]], "Creating annotations programmatically": [[245, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[245, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[245, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[245, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[245, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[246, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[246, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[246, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[246, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[246, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[250, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[250, "creating-info-objects"]], "Info objects": [[250, null]], "Info consistency": [[250, null]], "Creating Raw objects": [[250, "creating-raw-objects"]], "Units": [[250, null]], "Creating Epochs objects": [[250, "creating-epochs-objects"]], "Creating Evoked Objects": [[250, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[251, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[251, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[251, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[251, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[251, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[251, "create-source-space-data-with-known-signals"]], "Plot original signals": [[251, "plot-original-signals"]], "Simulate sensor-space signals": [[251, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[251, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[251, "exercises"], [260, "exercises"]], "DICS for power mapping": [[252, "dics-for-power-mapping"]], "Setup": [[252, "setup"]], "Data simulation": [[252, "data-simulation"]], "Power mapping": [[252, "power-mapping"]], "Statistical inference": [[255, "statistical-inference"]], "Hypothesis testing": [[255, "hypothesis-testing"]], "Null hypothesis": [[255, "null-hypothesis"]], "Parametric tests": [[255, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[255, "hat-variance-adjustment"], [255, "id5"]], "Non-parametric tests": [[255, "non-parametric-tests"]], "Multiple comparisons": [[255, "multiple-comparisons"]], "Bonferroni correction": [[255, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[255, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[255, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[255, "clustering"]], "Effect size": [[255, null]], "Defining the adjacency matrix": [[255, "defining-the-adjacency-matrix"]], "Standard clustering": [[255, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[255, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[255, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[255, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[255, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[255, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[256, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[257, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[257, "set-parameters"], [259, "set-parameters"], [260, "set-parameters"], [263, "set-parameters"], [264, "set-parameters"], [265, "set-parameters"]], "Define adjacency for statistics": [[257, "define-adjacency-for-statistics"]], "Compute statistic": [[257, "compute-statistic"], [258, "compute-statistic"], [263, "compute-statistic"], [264, "compute-statistic"]], "View time-frequency plots": [[257, "view-time-frequency-plots"], [258, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[258, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[259, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[259, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[259, "setup-repeated-measures-anova"]], "Sample data layout": [[259, "id3"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[259, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[260, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[260, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[260, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[260, "compute-permutation-statistic"]], "Visualize clusters": [[260, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[260, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[263, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[263, "read-epochs-for-all-channels-removing-a-bad-one"], [265, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[263, "transform-to-source-space"], [265, "transform-to-source-space"]], "Transform to common cortical space": [[263, "transform-to-common-cortical-space"], [265, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[263, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[263, "selecting-significant-clusters"]], "Visualize the clusters": [[263, "visualize-the-clusters"], [264, "visualize-the-clusters"], [265, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[264, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[265, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[265, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[265, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[268, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[268, "visualizing-spectrum-objects"]], "Migrating legacy code": [[268, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[268, "id6"]], "Frequency and time-frequency sensor analysis": [[269, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[269, "frequency-analysis"], [270, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[269, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[269, "inspect-power"]], "Joint Plot": [[269, "joint-plot"]], "Inspect ITC": [[269, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[270, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[270, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[270, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[270, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[270, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[270, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[270, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[270, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[270, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[270, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[270, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[270, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[270, "debriefing"]], "Bonus exercises": [[270, "bonus-exercises"]], "Effect of trial duration on SNR": [[270, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[270, "time-resolved-snr"]], "Make figures more publication ready": [[273, "make-figures-more-publication-ready"]], "Imports": [[273, "imports"]], "Evoked plot with brain activation": [[273, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[273, "custom-timecourse-with-montage-inset"]], "Using the event system to link figures": [[274, "using-the-event-system-to-link-figures"]], "Linking interactive plots": [[274, "linking-interactive-plots"]], "Overlaying one figure over another": [[274, "overlaying-one-figure-over-another"]], "Hooking a custom plot into the event system": [[274, "hooking-a-custom-plot-into-the-event-system"]], "General bibliography": [[277, "general-bibliography"]], "Version 0.1 (2011-09-23)": [[278, "version-0-1-2011-09-23"]], "Authors": [[278, "authors"], [279, "authors"], [280, "authors"], [281, "authors"], [282, "authors"], [283, "authors"], [284, "authors"], [285, "authors"], [286, "authors"], [289, "authors"], [290, "authors"], [291, "authors"], [292, "authors"], [293, "authors"], [294, "authors"], [295, "authors"], [296, "authors"], [297, "authors"], [298, "authors"], [299, "authors"], [300, "authors"], [301, "authors"], [302, "authors"], [303, "authors"], [304, "authors"], [305, "authors"], [306, "authors"], [307, "authors"], [308, "authors"]], "Version 0.10 (2015-10-26)": [[279, "version-0-10-2015-10-26"]], "Changelog": [[279, "changelog"], [280, "changelog"], [281, "changelog"], [282, "changelog"], [283, "changelog"], [284, "changelog"], [285, "changelog"], [286, "changelog"], [287, "changelog"], [288, "changelog"], [289, "changelog"], [290, "changelog"], [295, "changelog"], [296, "changelog"], [297, "changelog"], [298, "changelog"], [299, "changelog"], [300, "changelog"], [301, "changelog"]], "BUG": [[279, "bug"], [280, "bug"], [281, "bug"], [282, "bug"], [283, "bug"], [284, "bug"], [300, "bug"], [301, "bug"]], "API": [[279, "api"], [280, "api"], [281, "api"], [282, "api"], [283, "api"], [284, "api"], [285, "api"], [286, "api"], [287, "api"], [288, "api"], [290, "api"], [297, "api"], [298, "api"], [299, "api"], [300, "api"], [301, "api"]], "Version 0.11 (2015-12-24)": [[280, "version-0-11-2015-12-24"]], "Version 0.12 (2016-05-10)": [[281, "version-0-12-2016-05-10"]], "Version 0.13 (2016-09-27)": [[282, "version-0-13-2016-09-27"]], "Version 0.14 (2017-03-24)": [[283, "version-0-14-2017-03-24"]], "Version 0.15 (2017-10-20)": [[284, "version-0-15-2017-10-20"]], "Version 0.16 (2018-05-01)": [[285, "version-0-16-2018-05-01"]], "Bug": [[285, "bug"], [286, "bug"], [287, "bug"], [288, "bug"], [290, "bug"]], "Version 0.17 (2018-11-19)": [[286, "version-0-17-2018-11-19"]], "Version 0.18 (2019-05-19)": [[287, "version-0-18-2019-05-19"]], "Version 0.19 (2019-09-24)": [[288, "version-0-19-2019-09-24"]], "Version 0.2 (2011-11-08)": [[289, "version-0-2-2011-11-08"]], "API changes summary": [[289, "api-changes-summary"]], "Version 0.20 (2020-03-27)": [[290, "version-0-20-2020-03-27"]], "Version 0.21 (2020-09-21)": [[291, "version-0-21-2020-09-21"]], "Enhancements": [[291, "enhancements"], [292, "enhancements"], [293, "enhancements"], [294, "enhancements"], [302, "enhancements"], [303, "enhancements"], [304, "enhancements"], [305, "enhancements"], [306, "enhancements"], [307, "enhancements"], [308, "enhancements"]], "Bugs": [[291, "bugs"], [292, "bugs"], [293, "bugs"], [294, "bugs"], [302, "bugs"], [303, "bugs"], [304, "bugs"], [305, "bugs"], [306, "bugs"], [307, "bugs"], [308, "bugs"]], "API changes": [[291, "api-changes"], [292, "api-changes"], [293, "api-changes"], [294, "api-changes"], [302, "api-changes"], [304, "api-changes"], [305, "api-changes"], [306, "api-changes"], [307, "api-changes"], [308, "api-changes"]], "Version 0.22.0 (2020-12-17)": [[292, "version-0-22-0-2020-12-17"]], "Version 0.23.0 (2021-04-27)": [[293, "version-0-23-0-2021-04-27"]], "Version 0.24.0 (2021-11-03)": [[294, "version-0-24-0-2021-11-03"]], "Version 0.3 (2012-03-23)": [[295, "version-0-3-2012-03-23"]], "Version 0.4 (2012-08-24)": [[296, "version-0-4-2012-08-24"]], "Version 0.5 (2012-12-27)": [[297, "version-0-5-2012-12-27"]], "Version 0.6 (2013-06-15)": [[298, "version-0-6-2013-06-15"]], "Version 0.7 (2013-11-26)": [[299, "version-0-7-2013-11-26"]], "Version 0.8 (2014-06-25)": [[300, "version-0-8-2014-06-25"]], "Version 0.9 (2015-05-22)": [[301, "version-0-9-2015-05-22"]], "Version 1.0.0 (2022-03-21)": [[302, "version-1-0-0-2022-03-21"]], "Dependencies": [[302, "dependencies"]], "Version 1.1.0 (2022-08-03)": [[303, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[303, "api-and-behavior-changes"]], "Version 1.2.0 (2022-10-11)": [[304, "version-1-2-0-2022-10-11"]], "Version 1.3.0 (2022-12-21)": [[305, "version-1-3-0-2022-12-21"]], "Version 1.4.0 (2023-05-10)": [[306, "version-1-4-0-2023-05-10"]], "Version 1.5.0 (2023-08-14)": [[307, "version-1-5-0-2023-08-14"]], "Version 1.6.1 (2024-01-16)": [[308, "version-1-6-1-2024-01-16"]], "Version 1.6.0 (2023-11-20)": [[308, "version-1-6-0-2023-11-20"]], "Contributing guide": [[309, "contributing-guide"]], "Overview of contribution process": [[309, "overview-of-contribution-process"]], "Setting up your local development environment": [[309, "setting-up-your-local-development-environment"]], "Configuring git": [[309, "configuring-git"]], "GNU Make": [[309, "gnu-make"]], "Forking the MNE-Python repository": [[309, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[309, "creating-the-virtual-environment"]], "Basic git commands": [[309, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[309, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[309, "mne-python-coding-conventions"]], "General requirements": [[309, "general-requirements"]], "All new functionality must have test coverage": [[309, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[309, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[309, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[309, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[309, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[309, "first-time-contributors"]], "Recurring contributors": [[309, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[309, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[309, "make-tests-fast-and-thorough"]], "Code style": [[309, "code-style"]], "Adhere to standard Python style guidelines": [[309, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[309, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[309, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[309, "cross-reference-everywhere"]], "Other style guidance": [[309, "other-style-guidance"]], "Code organization": [[309, "code-organization"]], "Importing": [[309, "importing"]], "Return types": [[309, "return-types"]], "Running the test suite": [[309, "running-the-test-suite"]], "Building the documentation": [[309, "building-the-documentation"]], "Modifying command-line tools": [[309, "modifying-command-line-tools"]], "GitHub workflow": [[309, "github-workflow"]], "Project Governance": [[310, "project-governance"]], "The Project": [[310, "the-project"]], "Governance model": [[310, "governance-model"]], "BDFL": [[310, "bdfl"]], "Steering Council": [[310, "steering-council"], [954, "steering-council"]], "Council membership": [[310, "council-membership"]], "Conflict of interest": [[310, "conflict-of-interest"]], "Private communications of the Council": [[310, "private-communications-of-the-council"]], "Council decision making": [[310, "council-decision-making"]], "Institutional Partners and funding": [[310, "institutional-partners-and-funding"]], "Document history": [[310, "document-history"], [954, "document-history"]], "Acknowledgements": [[310, "acknowledgements"]], "License": [[310, "license"]], "MNE-Python Development": [[311, "mne-python-development"]], "Roadmap": [[312, "roadmap"]], "Page contents": [[312, "page-contents"]], "Open": [[312, "open"]], "Clustering statistics API": [[312, "clustering-statistics-api"]], "Modernization of realtime processing": [[312, "modernization-of-realtime-processing"]], "In progress": [[312, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[312, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[312, "first-class-opm-support"]], "Deep source modeling": [[312, "deep-source-modeling"]], "Time-frequency classes": [[312, "time-frequency-classes"]], "3D visualization": [[312, "d-visualization"]], "Documentation updates": [[312, "documentation-updates"]], "Completed": [[312, "completed"]], "Improved sEEG/ECoG/DBS support": [[312, "improved-seeg-ecog-dbs-support"]], "Access to open EEG/MEG databases": [[312, "access-to-open-eeg-meg-databases"]], "Eye-tracking support": [[312, "eye-tracking-support"]], "Pediatric and clinical MEG pipelines": [[312, "pediatric-and-clinical-meg-pipelines"]], "Integrate OpenMEEG via improved Python bindings": [[312, "integrate-openmeeg-via-improved-python-bindings"]], "Time-frequency visualization": [[312, "time-frequency-visualization"]], "Distributed computing support": [[312, "distributed-computing-support"]], "2D visualization": [[312, "id4"]], "Tutorial / example overhaul": [[312, "tutorial-example-overhaul"]], "Cluster computing images": [[312, "cluster-computing-images"]], "What\u2019s new": [[313, "what-s-new"]], "How to cite MNE-Python": [[314, "how-to-cite-mne-python"]], "Citing the software": [[314, "citing-the-software"]], "Citing the inverse imaging algorithms": [[314, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[314, "citing-other-algorithms"]], "Papers citing MNE-Python": [[315, "papers-citing-mne-python"]], "The typical M/EEG workflow": [[316, "the-typical-m-eeg-workflow"]], "Overview": [[316, "overview"]], "Artifact suppression": [[316, "artifact-suppression"]], "SSP": [[316, "ssp"]], "ICA": [[316, "ica"]], "Epoching and evoked data": [[316, "epoching-and-evoked-data"]], "Rejection using annotations": [[316, "rejection-using-annotations"]], "Source localization": [[316, "source-localization"]], "Anatomical information": [[316, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[316, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[316, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[316, "id11"]], "Creating the BEM model meshes": [[316, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[316, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[316, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[316, "aligning-coordinate-frames"]], "Computing the forward solution": [[316, "computing-the-forward-solution"], [320, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[316, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[316, "calculating-the-inverse-operator"]], "Creating source estimates": [[316, "creating-source-estimates"]], "Group analyses": [[316, "group-analyses"]], "Datasets Overview": [[317, "datasets-overview"]], "Sample": [[317, "sample"]], "Trigger codes for the sample data set.": [[317, "id23"]], "Contents of the data set": [[317, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[317, "id24"]], "Overview of the contents of the subjects/sample directory.": [[317, "id25"]], "UCL OPM Auditory": [[317, "ucl-opm-auditory"]], "Brainstorm": [[317, "brainstorm"]], "Auditory": [[317, "auditory"]], "Resting state": [[317, "resting-state"]], "Median nerve": [[317, "median-nerve"]], "SPM faces": [[317, "spm-faces"]], "EEGBCI motor imagery": [[317, "eegbci-motor-imagery"]], "Somatosensory": [[317, "somatosensory"]], "Multimodal": [[317, "multimodal"]], "fNIRS motor": [[317, "fnirs-motor"]], "High frequency SEF": [[317, "high-frequency-sef"]], "Visual 92 object categories": [[317, "visual-92-object-categories"]], "mTRF Dataset": [[317, "mtrf-dataset"]], "Kiloword dataset": [[317, "kiloword-dataset"]], "KIT phantom dataset": [[317, "kit-phantom-dataset"]], "4D Neuroimaging / BTi dataset": [[317, "d-neuroimaging-bti-dataset"]], "Kernel OPM phantom dataset": [[317, "kernel-opm-phantom-dataset"]], "OPM": [[317, "opm"]], "The Sleep PolySomnoGraphic Database": [[317, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[317, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[317, "miscellaneous-datasets"]], "fsaverage": [[317, "fsaverage"]], "Infant template MRIs": [[317, "infant-template-mris"]], "ECoG Dataset": [[317, "ecog-dataset"]], "sEEG Dataset": [[317, "seeg-dataset"]], "LIMO Dataset": [[317, "limo-dataset"]], "ERP CORE Dataset": [[317, "erp-core-dataset"]], "SSVEP": [[317, "ssvep"]], "EYELINK": [[317, "eyelink"]], "EEG-Eyetracking": [[317, "eeg-eyetracking"]], "Freeviewing": [[317, "freeviewing"]], "Interactive versus scripted analysis": [[318, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[318, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[318, "submodule-based-organization"]], "(Mostly) unified API": [[318, "mostly-unified-api"]], "In-place operation": [[318, "in-place-operation"]], "Glossary": [[319, "glossary"]], "Algorithms and other implementation details": [[320, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[320, "internal-representation-units"]], "Floating-point precision": [[320, "floating-point-precision"]], "Supported channel types": [[320, "supported-channel-types"]], "Supported data formats": [[320, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[320, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[320, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[320, "preloading-continuous-raw-data"]], "Preloading epoched data": [[320, "preloading-epoched-data"]], "Loading data explicitly": [[320, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[320, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[320, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[320, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[320, "signal-space-projection-ssp"]], "General concepts": [[320, "general-concepts"]], "Estimation of the noise subspace": [[320, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[320, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[320, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[320, "using-the-watershed-algorithm"]], "Using FLASH images": [[320, "using-flash-images"]], "Organizing MRI data into directories": [[320, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[320, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[320, "inspecting-the-meshes"]], "The forward solution": [[320, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[320, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[320, "id20"]], "The head and device coordinate systems": [[320, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[320, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[320, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[320, "creating-the-bem-meshes"]], "Topology checks": [[320, "topology-checks"]], "Computing the BEM geometry data": [[320, "computing-the-bem-geometry-data"]], "Coil geometry information": [[320, "coil-geometry-information"]], "The sensor coordinate system": [[320, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[320, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[320, "implemented-coil-geometries"]], "Normal coil descriptions.": [[320, "id22"]], "Accurate coil descriptions": [[320, "id23"]], "The coil definition file": [[320, "the-coil-definition-file"]], "Coil representation accuracies.": [[320, "id24"]], "Purpose": [[320, "purpose"]], "Implementation of software gradient compensation": [[320, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[320, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[320, "id25"]], "EEG forward solution in the sphere model": [[320, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[320, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[320, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[320, "the-linear-inverse-operator"]], "Regularization": [[320, "regularization"]], "Whitening and scaling": [[320, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[320, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[320, "computation-of-the-solution"]], "Noise normalization": [[320, "noise-normalization"]], "sLORETA": [[320, "sloreta"]], "eLORETA": [[320, "eloreta"]], "Predicted data": [[320, "predicted-data"]], "Cortical patch statistics": [[320, "cortical-patch-statistics"]], "Orientation constraints": [[320, "orientation-constraints"]], "Depth weighting": [[320, "depth-weighting"]], "Effective number of averages": [[320, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[320, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[320, "why-morphing"]], "The morphing maps": [[320, "the-morphing-maps"]], "About smoothing": [[320, "about-smoothing"]], "Documentation overview": [[321, "documentation-overview"]], "Funding and other support": [[322, "funding-and-other-support"]], "Institutional partners": [[322, "institutional-partners"]], "Current partners": [[322, "current-partners"], [954, "current-partners"]], "Former partners": [[322, "former-partners"], [954, "former-partners"]], "Command line tools using Python": [[323, "command-line-tools-using-python"]], "mne anonymize": [[323, "mne-anonymize"]], "Anonymize raw fif file.": [[323, "anonymize-raw-fif-file"]], "Options": [[323, "options"], [323, "id5"], [323, "id8"], [323, "id11"], [323, "id14"], [323, "id17"], [323, "id20"], [323, "id23"], [323, "id26"], [323, "id30"], [323, "id33"], [323, "id36"], [323, "id39"], [323, "id42"], [323, "id45"], [323, "id48"], [323, "id51"], [323, "id54"], [323, "id57"], [323, "id60"], [323, "id63"], [323, "id66"], [323, "id69"]], "mne browse_raw": [[323, "mne-browse-raw"]], "Browse raw data.": [[323, "browse-raw-data"]], "mne bti2fiff": [[323, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[323, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[323, "notes"], [323, "id28"]], "mne clean_eog_ecg": [[323, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[323, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[323, "mne-compare-fiff"]], "Compare FIFF files.": [[323, "compare-fiff-files"]], "mne compute_proj_ecg": [[323, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[323, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[323, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[323, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[323, "mne-coreg"]], "Open the coregistration GUI.": [[323, "open-the-coregistration-gui"]], "mne flash_bem": [[323, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[323, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[323, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[323, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[323, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[323, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[323, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[323, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[323, "mne-maxfilter"]], "Apply MaxFilter.": [[323, "apply-maxfilter"]], "mne prepare_bem_model": [[323, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[323, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[323, "mne-report"]], "Create mne report for a folder.": [[323, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[323, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[323, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[323, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[323, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[323, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[323, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[323, "mne-show-info"]], "Show measurement info from .fif file.": [[323, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[323, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[323, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[323, "mne-sys-info"]], "Show system information.": [[323, "show-system-information"]], "mne watershed_bem": [[323, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[323, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[323, "mne-what"]], "Check type of FIF file.": [[323, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[324, "mne-acqparserfif"]], "mne.Annotations": [[325, "mne-annotations"]], "Examples using mne.Annotations": [[325, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[326, "mne-baseepochs"]], "mne.BiHemiLabel": [[327, "mne-bihemilabel"]], "mne.Covariance": [[328, "mne-covariance"]], "Examples using mne.Covariance": [[328, "examples-using-mne-covariance"]], "mne.Dipole": [[329, "mne-dipole"]], "Examples using mne.Dipole": [[329, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[330, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[330, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[331, "mne-epochs"]], "Examples using mne.Epochs": [[331, "examples-using-mne-epochs"]], "mne.EpochsArray": [[332, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[332, "examples-using-mne-epochsarray"]], "mne.Evoked": [[333, "mne-evoked"]], "Examples using mne.Evoked": [[333, "examples-using-mne-evoked"]], "mne.EvokedArray": [[334, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[334, "examples-using-mne-evokedarray"]], "mne.Forward": [[335, "mne-forward"]], "Examples using mne.Forward": [[335, "examples-using-mne-forward"]], "mne.Info": [[336, "mne-info"]], "Examples using mne.Info": [[336, "examples-using-mne-info"]], "mne.Label": [[337, "mne-label"]], "Examples using mne.Label": [[337, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[338, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[338, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[339, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[339, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[340, "mne-projection"]], "Examples using mne.Projection": [[340, "examples-using-mne-projection"]], "mne.Report": [[341, "mne-report"]], "Examples using mne.Report": [[341, "examples-using-mne-report"]], "mne.SourceEstimate": [[342, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[342, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[343, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[343, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[344, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[344, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[345, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[345, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[346, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[346, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[347, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[348, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[348, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[349, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[350, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[350, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[351, "mne-apply-forward"]], "mne.apply_forward_raw": [[352, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[353, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[354, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[354, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[355, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[355, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[356, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[357, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[357, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[358, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[359, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[359, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[360, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[360, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[361, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[361, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[362, "mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[363, "mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[364, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[364, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[365, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[365, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[366, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[366, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[367, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[367, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[368, "mne-beamformer-read-beamformer"]], "mne.beamformer.trap_music": [[369, "mne-beamformer-trap-music"]], "Examples using mne.beamformer.trap_music": [[369, "examples-using-mne-beamformer-trap-music"]], "mne.bem.ConductorModel": [[370, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[370, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[371, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[372, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[373, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[374, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[375, "mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[376, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[377, "mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[378, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[378, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[379, "mne-channel-type"]], "Examples using mne.channel_type": [[379, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[380, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[380, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[381, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[381, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[382, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[382, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[383, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[384, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[384, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[385, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[386, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[386, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[387, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[388, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[389, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[390, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[390, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[391, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[391, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[392, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[392, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[393, "mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[394, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[394, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[395, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[396, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[396, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[397, "mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[398, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[398, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[399, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[400, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[401, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[402, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[402, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[403, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[404, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[405, "mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[406, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[406, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[407, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[408, "mne-channels-rename-channels"]], "mne.channels.unify_bad_channels": [[409, "mne-channels-unify-bad-channels"]], "mne.chpi.compute_chpi_amplitudes": [[410, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[410, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[411, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[411, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[412, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[412, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[413, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[413, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[414, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[414, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[415, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[416, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[416, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[417, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[417, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[418, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[418, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[419, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[420, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[420, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[421, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[421, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[422, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[422, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[423, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[423, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[424, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[424, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[425, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[425, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[426, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[426, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[427, "mne-compute-rank"]], "Examples using mne.compute_rank": [[427, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[428, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[428, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[429, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[429, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[430, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[430, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[431, "mne-concatenate-events"]], "mne.concatenate_raws": [[432, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[432, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[433, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[433, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[434, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[434, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[435, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[435, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[436, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[436, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.count_annotations": [[437, "mne-count-annotations"]], "mne.count_events": [[438, "mne-count-events"]], "mne.cov.compute_whitener": [[439, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[440, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[441, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[441, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[442, "mne-create-default-subject"]], "mne.create_info": [[443, "mne-create-info"]], "Examples using mne.create_info": [[443, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[444, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[445, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[446, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[447, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[448, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[449, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[450, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[451, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[452, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[452, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[453, "mne-datasets-erp-core-data-path"]], "mne.datasets.eyelink.data_path": [[454, "mne-datasets-eyelink-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[455, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[456, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[457, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[458, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[459, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[459, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[460, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[461, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[462, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[463, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[464, "mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[465, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[466, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[467, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[468, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[469, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[470, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.phantom_kernel.data_path": [[471, "mne-datasets-phantom-kernel-data-path"]], "mne.datasets.phantom_kit.data_path": [[472, "mne-datasets-phantom-kit-data-path"]], "mne.datasets.refmeg_noise.data_path": [[473, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[474, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[474, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[475, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[475, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[476, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[477, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[478, "mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[479, "mne-datasets-ssvep-data-path"]], "mne.datasets.ucl_opm_auditory.data_path": [[480, "mne-datasets-ucl-opm-auditory-data-path"]], "mne.datasets.visual_92_categories.data_path": [[481, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[482, "mne-decimate-surface"]], "mne.decoding.CSP": [[483, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[483, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[484, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[484, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[485, "mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[486, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[486, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[487, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[487, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[488, "mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[489, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[489, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[490, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[490, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[491, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[491, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[492, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[492, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[493, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[493, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[494, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[495, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[495, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[496, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[497, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[497, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[498, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[498, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[499, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[499, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[500, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[500, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[501, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[501, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[502, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[502, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[503, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[503, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[504, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[504, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[505, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[506, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[506, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[507, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[507, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[508, "mne-equalize-channels"]], "mne.event.define_target_events": [[509, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[509, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[510, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[511, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[512, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[512, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[513, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[514, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[515, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[516, "mne-export-export-raw"]], "mne.extract_label_time_course": [[517, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[517, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[518, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[518, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[519, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[519, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[520, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[521, "mne-filter-filter-data"]], "mne.filter.notch_filter": [[522, "mne-filter-notch-filter"]], "mne.filter.resample": [[523, "mne-filter-resample"]], "Examples using mne.filter.resample": [[523, "examples-using-mne-filter-resample"]], "mne.find_events": [[524, "mne-find-events"]], "Examples using mne.find_events": [[524, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[525, "mne-find-stim-steps"]], "mne.fit_dipole": [[526, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[526, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[527, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[528, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[529, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[530, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[531, "mne-get-config"]], "Examples using mne.get_config": [[531, "examples-using-mne-get-config"]], "mne.get_config_path": [[532, "mne-get-config-path"]], "Examples using mne.get_config_path": [[532, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[533, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[534, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[535, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[535, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[536, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[536, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[537, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[538, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[539, "mne-grade-to-vertices"]], "mne.grand_average": [[540, "mne-grand-average"]], "Examples using mne.grand_average": [[540, "examples-using-mne-grand-average"]], "mne.grow_labels": [[541, "mne-grow-labels"]], "mne.gui.coregistration": [[542, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[542, "examples-using-mne-gui-coregistration"]], "mne.head_to_mni": [[543, "mne-head-to-mni"]], "mne.head_to_mri": [[544, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[545, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[545, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[546, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[546, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[547, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[547, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[548, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[548, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[549, "mne-io-baseraw"]], "mne.io.Raw": [[550, "mne-io-raw"]], "Examples using mne.io.Raw": [[550, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[551, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[551, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[552, "mne-io-anonymize-info"]], "mne.io.get_channel_type_constants": [[553, "mne-io-get-channel-type-constants"]], "mne.io.kit.read_mrk": [[554, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[555, "mne-io-read-fiducials"]], "mne.io.read_info": [[556, "mne-io-read-info"]], "Examples using mne.io.read_info": [[556, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[557, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[557, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[558, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[558, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[559, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[559, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[560, "mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[561, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[561, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[562, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[562, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[563, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[563, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[564, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[564, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[565, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[566, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[566, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[567, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[567, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[568, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[568, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[569, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[569, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_eyelink": [[570, "mne-io-read-raw-eyelink"]], "Examples using mne.io.read_raw_eyelink": [[570, "examples-using-mne-io-read-raw-eyelink"]], "mne.io.read_raw_fieldtrip": [[571, "mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[572, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[572, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_fil": [[573, "mne-io-read-raw-fil"]], "Examples using mne.io.read_raw_fil": [[573, "examples-using-mne-io-read-raw-fil"]], "mne.io.read_raw_gdf": [[574, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[574, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[575, "mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[576, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[576, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[577, "mne-io-read-raw-nedf"]], "mne.io.read_raw_neuralynx": [[578, "mne-io-read-raw-neuralynx"]], "mne.io.read_raw_nicolet": [[579, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[579, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[580, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[580, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[581, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[581, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_nsx": [[582, "mne-io-read-raw-nsx"]], "mne.io.read_raw_persyst": [[583, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[583, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[584, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[584, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[585, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[586, "mne-io-write-fiducials"]], "mne.io.write_info": [[587, "mne-io-write-info"]], "mne.label.select_sources": [[588, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[588, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[589, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[589, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[590, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[590, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[591, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[591, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[592, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[592, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[593, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[593, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[594, "mne-make-field-map"]], "Examples using mne.make_field_map": [[594, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[595, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[595, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[596, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[596, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[597, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[597, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[598, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[598, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[599, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[599, "examples-using-mne-make-sphere-model"]], "mne.match_channel_orders": [[600, "mne-match-channel-orders"]], "mne.merge_events": [[601, "mne-merge-events"]], "Examples using mne.merge_events": [[601, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[602, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[602, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[603, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[603, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[604, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[604, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[605, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[605, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[606, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[606, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[607, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[608, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[609, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[609, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[610, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[610, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[611, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[612, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[612, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[613, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[613, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[614, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[614, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[615, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[615, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[616, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[617, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[617, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[618, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[618, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[619, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[619, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[620, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[620, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[621, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[622, "mne-morph-labels"]], "mne.morph_source_spaces": [[623, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[623, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[624, "mne-open-docs"]], "mne.open_report": [[625, "mne-open-report"]], "Examples using mne.open_report": [[625, "examples-using-mne-open-report"]], "mne.parse_config": [[626, "mne-parse-config"]], "mne.pick_channels": [[627, "mne-pick-channels"]], "Examples using mne.pick_channels": [[627, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[628, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[629, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[630, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[630, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[631, "mne-pick-events"]], "Examples using mne.pick_events": [[631, "examples-using-mne-pick-events"]], "mne.pick_info": [[632, "mne-pick-info"]], "Examples using mne.pick_info": [[632, "examples-using-mne-pick-info"]], "mne.pick_types": [[633, "mne-pick-types"]], "Examples using mne.pick_types": [[633, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[634, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[634, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[635, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[635, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[636, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[636, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[637, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[637, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[638, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[639, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[639, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[640, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[640, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[641, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[641, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[642, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[643, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[643, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[644, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[644, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[645, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[645, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[646, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[647, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[648, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[648, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[649, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[649, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.compute_proj_hfc": [[650, "mne-preprocessing-compute-proj-hfc"]], "Examples using mne.preprocessing.compute_proj_hfc": [[650, "examples-using-mne-preprocessing-compute-proj-hfc"]], "mne.preprocessing.corrmap": [[651, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[651, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[652, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[652, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[653, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[653, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[654, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[654, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[655, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.eyetracking.Calibration": [[656, "mne-preprocessing-eyetracking-calibration"]], "Examples using mne.preprocessing.eyetracking.Calibration": [[656, "examples-using-mne-preprocessing-eyetracking-calibration"]], "mne.preprocessing.eyetracking.interpolate_blinks": [[657, "mne-preprocessing-eyetracking-interpolate-blinks"]], "Examples using mne.preprocessing.eyetracking.interpolate_blinks": [[657, "examples-using-mne-preprocessing-eyetracking-interpolate-blinks"]], "mne.preprocessing.eyetracking.read_eyelink_calibration": [[658, "mne-preprocessing-eyetracking-read-eyelink-calibration"]], "Examples using mne.preprocessing.eyetracking.read_eyelink_calibration": [[658, "examples-using-mne-preprocessing-eyetracking-read-eyelink-calibration"]], "mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[659, "mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "Examples using mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[659, "examples-using-mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "mne.preprocessing.find_bad_channels_maxwell": [[660, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[660, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[661, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[661, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[662, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[662, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[663, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[663, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[664, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[665, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.make_montage_volume": [[666, "mne-preprocessing-ieeg-make-montage-volume"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[667, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.ieeg.warp_montage": [[668, "mne-preprocessing-ieeg-warp-montage"]], "mne.preprocessing.infomax": [[669, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[670, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[670, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[671, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[671, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[672, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[673, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[673, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[674, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[674, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[675, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[675, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[676, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[677, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[677, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[678, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[678, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[679, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[679, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[680, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[681, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[682, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[683, "mne-preprocessing-read-ica"]], "Examples using mne.preprocessing.read_ica": [[683, "examples-using-mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[684, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[685, "mne-preprocessing-realign-raw"]], "Examples using mne.preprocessing.realign_raw": [[685, "examples-using-mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[686, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[687, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[688, "mne-random-parcellation"]], "mne.read_annotations": [[689, "mne-read-annotations"]], "Examples using mne.read_annotations": [[689, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[690, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[690, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[691, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[691, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[692, "mne-read-cov"]], "Examples using mne.read_cov": [[692, "examples-using-mne-read-cov"]], "mne.read_dipole": [[693, "mne-read-dipole"]], "Examples using mne.read_dipole": [[693, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[694, "mne-read-epochs"]], "Examples using mne.read_epochs": [[694, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[695, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[695, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[696, "mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[697, "mne-read-epochs-kit"]], "mne.read_events": [[698, "mne-read-events"]], "Examples using mne.read_events": [[698, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[699, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[700, "mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[701, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[701, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[702, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[703, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[703, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[704, "mne-read-freesurfer-lut"]], "mne.read_label": [[705, "mne-read-label"]], "Examples using mne.read_label": [[705, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[706, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[706, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[707, "mne-read-lta"]], "mne.read_morph_map": [[708, "mne-read-morph-map"]], "mne.read_proj": [[709, "mne-read-proj"]], "Examples using mne.read_proj": [[709, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[710, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[711, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[711, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[712, "mne-read-source-morph"]], "mne.read_source_spaces": [[713, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[713, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[714, "mne-read-surface"]], "Examples using mne.read_surface": [[714, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[715, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[715, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[716, "mne-read-trans"]], "Examples using mne.read_trans": [[716, "examples-using-mne-read-trans"]], "mne.read_tri": [[717, "mne-read-tri"]], "mne.read_vectorview_selection": [[718, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[718, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[719, "mne-rename-channels"]], "mne.scale_bem": [[720, "mne-scale-bem"]], "mne.scale_labels": [[721, "mne-scale-labels"]], "mne.scale_mri": [[722, "mne-scale-mri"]], "Examples using mne.scale_mri": [[722, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[723, "mne-scale-source-space"]], "mne.sensitivity_map": [[724, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[724, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[725, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[725, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[726, "mne-set-cache-dir"]], "mne.set_config": [[727, "mne-set-config"]], "Examples using mne.set_config": [[727, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[728, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[728, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[729, "mne-set-log-file"]], "mne.set_log_level": [[730, "mne-set-log-level"]], "mne.set_memmap_min_size": [[731, "mne-set-memmap-min-size"]], "mne.setup_source_space": [[732, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[732, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[733, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[733, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[734, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[734, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[735, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[736, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[736, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[737, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[737, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[738, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[738, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[739, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[739, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[740, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[740, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[741, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[741, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[742, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[742, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[743, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[743, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[744, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[744, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[745, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[746, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[746, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[747, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[748, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[748, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[749, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[749, "id5"]], "Examples using mne.simulation.simulate_raw": [[749, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[750, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[750, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[751, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[751, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[752, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[752, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[753, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[754, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[755, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[756, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[756, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[757, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[758, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[759, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[760, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[761, "mne-split-label"]], "mne.stats.bonferroni_correction": [[762, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[762, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[763, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[763, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[764, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[764, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[765, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[765, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[766, "mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[767, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[767, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[768, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[768, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[769, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[769, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[770, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[770, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[771, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[771, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[772, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[772, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[773, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[773, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[774, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[774, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[775, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[775, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[776, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[776, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[777, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[777, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[778, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[779, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[779, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[780, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[780, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[781, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[782, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[782, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[783, "mne-sys-info"]], "Examples using mne.sys_info": [[783, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[784, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[784, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[785, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[785, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[786, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[786, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsSpectrumArray": [[787, "mne-time-frequency-epochsspectrumarray"]], "Examples using mne.time_frequency.EpochsSpectrumArray": [[787, "examples-using-mne-time-frequency-epochsspectrumarray"]], "mne.time_frequency.EpochsTFR": [[788, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[788, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[789, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[789, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.SpectrumArray": [[790, "mne-time-frequency-spectrumarray"]], "Examples using mne.time_frequency.SpectrumArray": [[790, "examples-using-mne-time-frequency-spectrumarray"]], "mne.time_frequency.csd_array_fourier": [[791, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[792, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[793, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[794, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[794, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[795, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[795, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[796, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[796, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[797, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[797, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[798, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[799, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[799, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[800, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[801, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[802, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[802, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[803, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[804, "mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[805, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[805, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[806, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[807, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[808, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[809, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[810, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[811, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[812, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[813, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[813, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[814, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[815, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[816, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[816, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[817, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[817, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[818, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[818, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[819, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[820, "mne-transform-surface-to"]], "mne.transforms.Transform": [[821, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[822, "mne-transforms-apply-volume-registration"]], "mne.transforms.apply_volume_registration_points": [[823, "mne-transforms-apply-volume-registration-points"]], "mne.transforms.compute_volume_registration": [[824, "mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[825, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[826, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[826, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[827, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[828, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[828, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[829, "mne-use-log-level"]], "Examples using mne.use_log_level": [[829, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[830, "mne-utils-deprecated"]], "mne.utils.warn": [[831, "mne-utils-warn"]], "mne.verbose": [[832, "mne-verbose"]], "mne.vertex_to_mni": [[833, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[833, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[834, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[834, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[835, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[835, "examples-using-mne-viz-clickableimage"]], "mne.viz.EvokedField": [[836, "mne-viz-evokedfield"]], "Examples using mne.viz.EvokedField": [[836, "examples-using-mne-viz-evokedfield"]], "mne.viz.Figure3D": [[837, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[838, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[839, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[839, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[840, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[840, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[841, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[842, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[843, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[844, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[844, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.eyetracking.plot_gaze": [[845, "mne-viz-eyetracking-plot-gaze"]], "Examples using mne.viz.eyetracking.plot_gaze": [[845, "examples-using-mne-viz-eyetracking-plot-gaze"]], "mne.viz.get_3d_backend": [[846, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[847, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[847, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[848, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[849, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[849, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[850, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[851, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[852, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[852, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[853, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[853, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[854, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[854, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[855, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[855, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[856, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[856, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[857, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[857, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[858, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[858, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[859, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[859, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[860, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[860, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[861, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[861, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[862, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[863, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[863, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[864, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[864, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[865, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[866, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[867, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[867, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[868, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[869, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[869, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[870, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[871, "mne-viz-plot-evoked-field"]], "Examples using mne.viz.plot_evoked_field": [[871, "examples-using-mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[872, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[872, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[873, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[874, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[874, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[875, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[876, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[876, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[877, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[877, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[878, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[878, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[879, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[880, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[881, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[882, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[883, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[884, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[884, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[885, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[886, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[887, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[887, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[888, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[888, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[889, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[890, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[891, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[892, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[893, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[893, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[894, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[894, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[895, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[895, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[896, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[897, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[898, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[898, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[899, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[899, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[900, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[901, "mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[902, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[903, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[903, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[904, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[904, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[905, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[906, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[906, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.ui_events.ColormapRange": [[907, "mne-viz-ui-events-colormaprange"]], "mne.viz.ui_events.Contours": [[908, "mne-viz-ui-events-contours"]], "mne.viz.ui_events.FigureClosing": [[909, "mne-viz-ui-events-figureclosing"]], "mne.viz.ui_events.PlaybackSpeed": [[910, "mne-viz-ui-events-playbackspeed"]], "mne.viz.ui_events.TimeChange": [[911, "mne-viz-ui-events-timechange"]], "Examples using mne.viz.ui_events.TimeChange": [[911, "examples-using-mne-viz-ui-events-timechange"]], "mne.viz.ui_events.UIEvent": [[912, "mne-viz-ui-events-uievent"]], "Examples using mne.viz.ui_events.UIEvent": [[912, "examples-using-mne-viz-ui-events-uievent"]], "mne.viz.ui_events.VertexSelect": [[913, "mne-viz-ui-events-vertexselect"]], "mne.viz.ui_events.disable_ui_events": [[914, "mne-viz-ui-events-disable-ui-events"]], "mne.viz.ui_events.link": [[915, "mne-viz-ui-events-link"]], "Examples using mne.viz.ui_events.link": [[915, "examples-using-mne-viz-ui-events-link"]], "mne.viz.ui_events.publish": [[916, "mne-viz-ui-events-publish"]], "Examples using mne.viz.ui_events.publish": [[916, "examples-using-mne-viz-ui-events-publish"]], "mne.viz.ui_events.subscribe": [[917, "mne-viz-ui-events-subscribe"]], "Examples using mne.viz.ui_events.subscribe": [[917, "examples-using-mne-viz-ui-events-subscribe"]], "mne.viz.ui_events.unlink": [[918, "mne-viz-ui-events-unlink"]], "mne.viz.ui_events.unsubscribe": [[919, "mne-viz-ui-events-unsubscribe"]], "mne.viz.use_3d_backend": [[920, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[921, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[921, "examples-using-mne-viz-use-browser-backend"]], "mne.what": [[922, "mne-what"]], "mne.write_bem_solution": [[923, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[924, "mne-write-bem-surfaces"]], "mne.write_cov": [[925, "mne-write-cov"]], "mne.write_events": [[926, "mne-write-events"]], "mne.write_evokeds": [[927, "mne-write-evokeds"]], "mne.write_forward_solution": [[928, "mne-write-forward-solution"]], "mne.write_head_bem": [[929, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[929, "examples-using-mne-write-head-bem"]], "mne.write_label": [[930, "mne-write-label"]], "mne.write_labels_to_annot": [[931, "mne-write-labels-to-annot"]], "mne.write_proj": [[932, "mne-write-proj"]], "mne.write_source_spaces": [[933, "mne-write-source-spaces"]], "mne.write_surface": [[934, "mne-write-surface"]], "Examples using mne.write_surface": [[934, "examples-using-mne-write-surface"]], "mne.write_trans": [[935, "mne-write-trans"]], "Frequently Asked Questions (FAQ)": [[936, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[936, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[936, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[936, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[936, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[936, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[936, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[936, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[936, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[936, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[936, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[936, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[936, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[936, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[936, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[936, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[936, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[936, "my-watershed-bem-meshes-look-incorrect"]], "Getting help": [[937, "getting-help"], [949, "getting-help"]], "Getting started with Python": [[938, "getting-started-with-python"]], "Migrating from other analysis software": [[939, "migrating-from-other-analysis-software"]], "EEGLAB": [[939, "eeglab"]], "Potential pitfalls": [[939, "potential-pitfalls"]], "MNE-Python Homepage": [[940, "mne-python-homepage"]], "Advanced setup": [[941, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[941, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[941, null]], "Installing to a headless Linux server": [[941, "installing-to-a-headless-linux-server"]], "Using the development version": [[941, "using-the-development-version"]], "GPU acceleration with CUDA": [[941, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[941, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[941, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[941, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[942, "testing-your-installation"]], "Installing FreeSurfer": [[943, "installing-freesurfer"]], "Installing MNE-Python": [[944, "installing-mne-python"]], "MNE-Python installers": [[945, "mne-python-installers"]], "VS Code Setup": [[945, "vs-code-setup"]], "Install via pip or conda": [[946, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[946, "installing-mne-python-with-all-dependencies"]], "Installing MNE-Python with core dependencies": [[946, "installing-mne-python-with-core-dependencies"]], "Installing MNE-Python with HDF5 support": [[946, "installing-mne-python-with-hdf5-support"]], "Installing MNE-Python for other scenarios": [[946, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[946, "python-ides"]], "Installing Python": [[947, "installing-python"]], "Other Python distributions": [[947, "other-python-distributions"]], "Installing MNE-C": [[948, "installing-mne-c"]], "System requirements": [[948, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[948, null]], "Downloading and Installing MNE-C": [[948, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[948, "configuring-mne-c"]], "Testing MNE-C installation": [[948, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[948, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[949, "overview-of-the-mne-tools-suite"]], "Related software": [[949, "related-software"]], "What should I install?": [[949, "what-should-i-install"]], "Updating MNE-Python": [[950, "updating-mne-python"]], "Upgrading MNE-Python only": [[950, "upgrading-mne-python-only"]], "Upgrading all packages": [[950, "upgrading-all-packages"]], "Upgrading to the development version": [[950, "upgrading-to-the-development-version"]], "Martinos Center setup": [[951, "martinos-center-setup"]], "MNE with CPP": [[952, "mne-with-cpp"]], "Archived documentation for old versions": [[953, "archived-documentation-for-old-versions"]], "Current steering council and institutional partners": [[954, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[954, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[954, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[954, "institutional-partners"]], "Unused API Entries": [[955, "unused-api-entries"]]}, "indexentries": {"mne.datasets": [[3, "module-mne.datasets"]], "module": [[3, "module-mne.datasets"], [4, "module-mne.decoding"], [5, "module-mne.epochs"], [5, "module-mne.event"], [6, "module-mne.export"], [8, "module-mne.bem"], [9, "module-mne.beamformer"], [9, "module-mne.dipole"], [9, "module-mne.inverse_sparse"], [9, "module-mne.minimum_norm"], [10, "module-mne.cuda"], [10, "module-mne.utils"], [13, "module-mne.channels"], [13, "module-mne.chpi"], [13, "module-mne.filter"], [13, "module-mne.preprocessing"], [13, "module-mne.preprocessing.eyetracking"], [13, "module-mne.preprocessing.ieeg"], [13, "module-mne.preprocessing.nirs"], [13, "module-mne.transforms"], [14, "module-mne"], [15, "module-mne.io"], [15, "module-mne.io.kit"], [18, "module-mne.baseline"], [19, "module-mne.simulation"], [19, "module-mne.simulation.metrics"], [21, "module-mne.stats"], [22, "module-mne.time_frequency"], [22, "module-mne.time_frequency.tfr"], [23, "module-mne.viz"], [23, "module-mne.viz.eyetracking"], [23, "module-mne.viz.ui_events"]], "mne.decoding": [[4, "module-mne.decoding"]], "mne.epochs": [[5, "module-mne.epochs"]], "mne.event": [[5, "module-mne.event"]], "mne.export": [[6, "module-mne.export"]], "mne.bem": [[8, "module-mne.bem"]], "mne.beamformer": [[9, "module-mne.beamformer"]], "mne.dipole": [[9, "module-mne.dipole"]], "mne.inverse_sparse": [[9, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[9, "module-mne.minimum_norm"]], "mne.cuda": [[10, "module-mne.cuda"]], "mne.utils": [[10, "module-mne.utils"]], "mne.channels": [[13, "module-mne.channels"]], "mne.chpi": [[13, "module-mne.chpi"]], "mne.filter": [[13, "module-mne.filter"]], "mne.preprocessing": [[13, "module-mne.preprocessing"]], "mne.preprocessing.eyetracking": [[13, "module-mne.preprocessing.eyetracking"]], "mne.preprocessing.ieeg": [[13, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[13, "module-mne.preprocessing.nirs"]], "mne.transforms": [[13, "module-mne.transforms"]], "mne": [[14, "module-mne"], [319, "term-MNE"]], "mne.io": [[15, "module-mne.io"]], "mne.io.kit": [[15, "module-mne.io.kit"]], "mne.baseline": [[18, "module-mne.baseline"]], "mne.simulation": [[19, "module-mne.simulation"]], "mne.simulation.metrics": [[19, "module-mne.simulation.metrics"]], "mne.stats": [[21, "module-mne.stats"]], "mne.time_frequency": [[22, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[22, "module-mne.time_frequency.tfr"]], "mne.viz": [[23, "module-mne.viz"]], "mne.viz.eyetracking": [[23, "module-mne.viz.eyetracking"]], "mne.viz.ui_events": [[23, "module-mne.viz.ui_events"]], "bem": [[319, "term-BEM"]], "dc": [[319, "term-DC"]], "dics": [[319, "term-DICS"]], "ecd": [[319, "term-ECD"]], "freesurfer lut": [[319, "term-FreeSurfer-LUT"]], "gfp": [[319, "term-GFP"]], "hed": [[319, "term-HED"]], "hpi": [[319, "term-HPI"]], "lcmv": [[319, "term-LCMV"]], "lcmv beamformer": [[319, "term-LCMV-beamformer"]], "lut": [[319, "term-LUT"]], "opm": [[319, "term-OPM"]], "ras": [[319, "term-RAS"]], "roi": [[319, "term-ROI"]], "squid": [[319, "term-SQUID"]], "ssp": [[319, "term-SSP"]], "stc": [[319, "term-STC"]], "anatomical landmark": [[319, "term-anatomical-landmark"]], "annotations": [[319, "term-annotations"]], "beamformer": [[319, "term-beamformer"]], "boundary element method": [[319, "term-boundary-element-method"]], "boundary element model": [[319, "term-boundary-element-model"]], "chpi": [[319, "term-cHPI"]], "channels": [[319, "term-channels"]], "dspm": [[319, "term-dSPM"]], "data channels": [[319, "term-data-channels"]], "digitization": [[319, "term-digitization"]], "dipole": [[319, "term-dipole"]], "direct current": [[319, "term-direct-current"]], "dynamic imaging of coherent sources": [[319, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[319, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[319, "term-eLORETA"]], "epochs": [[319, "term-epochs"]], "equivalent current dipole": [[319, "term-equivalent-current-dipole"]], "events": [[319, "term-events"]], "evoked": [[319, "term-evoked"]], "fiducial": [[319, "term-fiducial"]], "fiducial point": [[319, "term-fiducial-point"]], "first_samp": [[319, "term-first_samp"]], "forward": [[319, "term-forward"]], "forward solution": [[319, "term-forward-solution"]], "global field power": [[319, "term-global-field-power"]], "head position indicator": [[319, "term-head-position-indicator"]], "hierarchical event descriptors": [[319, "term-hierarchical-event-descriptors"]], "info": [[319, "term-info"]], "inverse": [[319, "term-inverse"]], "inverse operator": [[319, "term-inverse-operator"]], "label": [[319, "term-label"]], "last_samp": [[319, "term-last_samp"]], "layout": [[319, "term-layout"]], "maximum intensity projection": [[319, "term-maximum-intensity-projection"]], "measurement info": [[319, "term-measurement-info"]], "minimum-norm estimate": [[319, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[319, "term-minimum-norm-estimation"]], "montage": [[319, "term-montage"]], "morphing": [[319, "term-morphing"]], "noise covariance": [[319, "term-noise-covariance"]], "optically pumped magnetometer": [[319, "term-optically-pumped-magnetometer"]], "path-like": [[319, "term-path-like"]], "pick": [[319, "term-pick"]], "projector": [[319, "term-projector"]], "raw": [[319, "term-raw"]], "region of interest": [[319, "term-region-of-interest"]], "sloreta": [[319, "term-sLORETA"]], "selection": [[319, "term-selection"]], "source estimate": [[319, "term-source-estimate"]], "source space": [[319, "term-source-space"]], "source time course": [[319, "term-source-time-course"]], "stim channel": [[319, "term-stim-channel"]], "superconducting quantum interference device": [[319, "term-superconducting-quantum-interference-device"]], "template montage": [[319, "term-template-montage"]], "tfr": [[319, "term-tfr"]], "trans": [[319, "term-trans"]], "trigger channel": [[319, "term-trigger-channel"]], "whitening": [[319, "term-whitening"]], "acqparserfif (class in mne)": [[324, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[324, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[324, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[324, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[324, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[324, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[325, "mne.Annotations"]], "__add__() (mne.annotations method)": [[325, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[325, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[325, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[325, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[325, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[325, "mne.Annotations.copy"]], "count() (mne.annotations method)": [[325, "mne.Annotations.count"]], "crop() (mne.annotations method)": [[325, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[325, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[325, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[325, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[325, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[325, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[325, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[326, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[327, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[327, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[327, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[327, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[328, "mne.Covariance"]], "__add__() (mne.covariance method)": [[328, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[328, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[328, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[328, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[328, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[328, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[328, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[328, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[328, "mne.Covariance.copy"]], "data (mne.covariance property)": [[328, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[328, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[328, "mne.Covariance.get"]], "items() (mne.covariance method)": [[328, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[328, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[328, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[328, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[328, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[328, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[328, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[328, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[328, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[328, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[328, "mne.Covariance.update"]], "values() (mne.covariance method)": [[328, "mne.Covariance.values"]], "dipole (class in mne)": [[329, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[329, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[329, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[329, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[329, "mne.Dipole.crop"]], "plot_amplitudes() (mne.dipole method)": [[329, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[329, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[329, "mne.Dipole.save"]], "time_as_index() (mne.dipole method)": [[329, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[329, "mne.Dipole.times"]], "to_mni() (mne.dipole method)": [[329, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[329, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[329, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[330, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[330, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[330, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[330, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[330, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[331, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[331, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[331, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[331, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[331, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[331, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[331, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[331, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[331, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[331, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[331, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[331, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[331, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[331, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[331, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[331, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[331, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[331, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[331, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[331, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[331, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[331, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[331, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[331, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[331, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[331, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[331, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[331, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[331, "mne.Epochs.export"]], "filename (mne.epochs property)": [[331, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[331, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[331, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[331, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[331, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[331, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[331, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[331, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[331, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[331, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[331, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[331, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[331, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[331, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[331, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[331, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[331, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[331, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[331, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[331, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[331, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[331, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[331, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[331, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[331, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[331, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[331, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[331, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[331, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[331, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[331, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[331, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[331, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[331, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[331, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[331, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[331, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[331, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[331, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[331, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[331, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[331, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[331, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[332, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[332, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[332, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[332, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[332, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[332, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[332, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[332, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[332, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[332, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[332, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[332, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[332, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[332, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[332, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[332, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[332, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[332, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[332, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[332, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[332, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[332, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[332, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[332, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[332, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[332, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[332, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[332, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[332, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[332, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[332, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[332, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[332, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[332, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[332, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[332, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[332, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[332, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[332, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[332, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[332, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[332, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[332, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[332, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[332, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[332, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[332, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[332, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[332, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[332, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[332, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[332, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[332, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[332, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[332, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[332, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[332, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[333, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[333, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[333, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[333, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[333, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[333, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[333, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[333, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[333, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[333, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[333, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[333, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[333, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[333, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[333, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[333, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[333, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[333, "mne.Evoked.crop"]], "data (mne.evoked property)": [[333, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[333, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[333, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[333, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[333, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[333, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[333, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[333, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[333, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[333, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[333, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[333, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[333, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[333, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[333, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[333, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[333, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[333, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[333, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[333, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[333, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[333, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[333, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[333, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[333, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[333, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[333, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[333, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[333, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[333, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[333, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[333, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[333, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[333, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[333, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[333, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[333, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[333, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[333, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[333, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[333, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[333, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[333, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[333, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[334, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[334, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[334, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[334, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[334, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[334, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[334, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[334, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[334, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[334, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[334, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[334, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[334, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[334, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[334, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[334, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[334, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[334, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[334, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[334, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[334, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[334, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[334, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[334, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[334, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[334, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[334, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[334, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[334, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[334, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[334, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[334, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[334, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[334, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[334, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[334, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[334, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[334, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[334, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[334, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[334, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[334, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[334, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[334, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[335, "mne.Forward"]], "copy() (mne.forward method)": [[335, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[335, "mne.Forward.pick_channels"]], "save() (mne.forward method)": [[335, "mne.Forward.save"]], "info (class in mne)": [[336, "mne.Info"]], "__contains__() (mne.info method)": [[336, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[336, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[336, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[336, "mne.Info.__len__"]], "anonymize() (mne.info method)": [[336, "mne.Info.anonymize"]], "clear() (mne.info method)": [[336, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[336, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[336, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[336, "mne.Info.fromkeys"]], "get() (mne.info method)": [[336, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[336, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[336, "mne.Info.get_montage"]], "items() (mne.info method)": [[336, "mne.Info.items"]], "keys() (mne.info method)": [[336, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[336, "mne.Info.normalize_proj"]], "plot_sensors() (mne.info method)": [[336, "mne.Info.plot_sensors"]], "pop() (mne.info method)": [[336, "mne.Info.pop"]], "popitem() (mne.info method)": [[336, "mne.Info.popitem"]], "rename_channels() (mne.info method)": [[336, "mne.Info.rename_channels"]], "save() (mne.info method)": [[336, "mne.Info.save"]], "set_channel_types() (mne.info method)": [[336, "mne.Info.set_channel_types"]], "set_meas_date() (mne.info method)": [[336, "mne.Info.set_meas_date"]], "set_montage() (mne.info method)": [[336, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[336, "mne.Info.setdefault"]], "update() (mne.info method)": [[336, "mne.Info.update"]], "values() (mne.info method)": [[336, "mne.Info.values"]], "label (class in mne)": [[337, "mne.Label"]], "__add__() (mne.label method)": [[337, "mne.Label.__add__"]], "__len__() (mne.label method)": [[337, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[337, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[337, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[337, "mne.Label.compute_area"]], "copy() (mne.label method)": [[337, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[337, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[337, "mne.Label.fill"]], "get_tris() (mne.label method)": [[337, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[337, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[337, "mne.Label.morph"]], "restrict() (mne.label method)": [[337, "mne.Label.restrict"]], "save() (mne.label method)": [[337, "mne.Label.save"]], "smooth() (mne.label method)": [[337, "mne.Label.smooth"]], "split() (mne.label method)": [[337, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[338, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.data"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.shape"]], "sqrt() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.times"]], "tmin (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[339, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.data"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.shape"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.times"]], "tmin (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[340, "mne.Projection"]], "plot_topomap() (mne.projection method)": [[340, "mne.Projection.plot_topomap"]], "report (class in mne)": [[341, "mne.Report"]], "__len__() (mne.report method)": [[341, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[341, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[341, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[341, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[341, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[341, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[341, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[341, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[341, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[341, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[341, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[341, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[341, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[341, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[341, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[341, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[341, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[341, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[341, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[341, "mne.Report.add_trans"]], "html (mne.report property)": [[341, "mne.Report.html"]], "parse_folder() (mne.report method)": [[341, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[341, "mne.Report.remove"]], "save() (mne.report method)": [[341, "mne.Report.save"]], "tags (mne.report property)": [[341, "mne.Report.tags"]], "sourceestimate (class in mne)": [[342, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[342, "mne.SourceEstimate.data"]], "estimate_snr() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[342, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[342, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[342, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[342, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[342, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[342, "mne.SourceEstimate.shape"]], "sqrt() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[342, "mne.SourceEstimate.times"]], "tmin (mne.sourceestimate property)": [[342, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[342, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[343, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[343, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[343, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[343, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[344, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[345, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.data"]], "expand() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.shape"]], "sqrt() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.times"]], "tmin (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[346, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.data"]], "extract_label_time_course() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.shape"]], "sqrt() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.times"]], "tmin (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[347, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.data"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.shape"]], "sqrt() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.times"]], "tmin (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[348, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[349, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[350, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[351, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[352, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[353, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[354, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[355, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[356, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[357, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[358, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[359, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[360, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[361, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[362, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[363, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[364, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[365, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[366, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[367, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[368, "mne.beamformer.read_beamformer"]], "trap_music() (in module mne.beamformer)": [[369, "mne.beamformer.trap_music"]], "conductormodel (class in mne.bem)": [[370, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[370, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[371, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[372, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[373, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[374, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[375, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[376, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[377, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[378, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[379, "mne.channel_type"]], "digmontage (class in mne.channels)": [[380, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[381, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[381, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[381, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[382, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[383, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[384, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[385, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[386, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[387, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[388, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[389, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[390, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[391, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[392, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[393, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[394, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[395, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[396, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[397, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[398, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[399, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[400, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[401, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[402, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[403, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[404, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[405, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[406, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[407, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[408, "mne.channels.rename_channels"]], "unify_bad_channels() (in module mne.channels)": [[409, "mne.channels.unify_bad_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[410, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[411, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[412, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[413, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[414, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[415, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[416, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[417, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[418, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[419, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[420, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[421, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[422, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[423, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[424, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[425, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[426, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[427, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[428, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[429, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[430, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[431, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[432, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[433, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[434, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[434, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[434, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[435, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[436, "mne.coreg.get_mni_fiducials"]], "count_annotations() (in module mne)": [[437, "mne.count_annotations"]], "count_events() (in module mne)": [[438, "mne.count_events"]], "compute_whitener() (in module mne.cov)": [[439, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[440, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[441, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[442, "mne.create_default_subject"]], "create_info() (in module mne)": [[443, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[444, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[445, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[446, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[447, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[448, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[449, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[450, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[451, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[452, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[453, "mne.datasets.erp_core.data_path"]], "data_path() (in module mne.datasets.eyelink)": [[454, "mne.datasets.eyelink.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[455, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[456, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[457, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[458, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[459, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[460, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[461, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[462, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[463, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[464, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[465, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[466, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[467, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[468, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[469, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[470, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.phantom_kernel)": [[471, "mne.datasets.phantom_kernel.data_path"]], "data_path() (in module mne.datasets.phantom_kit)": [[472, "mne.datasets.phantom_kit.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[473, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[474, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[475, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[476, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[477, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[478, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[479, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.ucl_opm_auditory)": [[480, "mne.datasets.ucl_opm_auditory.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[481, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[482, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[483, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[484, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[484, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[484, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[484, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[484, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[484, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[485, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[485, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[485, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[485, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[486, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[487, "mne.decoding.LinearModel"]], "fit() (mne.decoding.linearmodel method)": [[487, "mne.decoding.LinearModel.fit"]], "get_params() (mne.decoding.linearmodel method)": [[487, "mne.decoding.LinearModel.get_params"]], "set_params() (mne.decoding.linearmodel method)": [[487, "mne.decoding.LinearModel.set_params"]], "psdestimator (class in mne.decoding)": [[488, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[488, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[488, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[488, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[489, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[489, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[489, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[489, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[489, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[489, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[490, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[491, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[492, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[493, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[494, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[494, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[494, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[494, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[495, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[495, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[495, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[495, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[495, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[496, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[496, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[496, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[496, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[496, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[496, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[497, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[498, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[498, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[498, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[498, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[498, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[499, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[500, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[501, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[502, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[503, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[504, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[505, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[506, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[507, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[508, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[509, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[510, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[511, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[512, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[513, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[514, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[515, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[516, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[517, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[518, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[519, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[520, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[521, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[522, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[523, "mne.filter.resample"]], "find_events() (in module mne)": [[524, "mne.find_events"]], "find_stim_steps() (in module mne)": [[525, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[526, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[527, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[528, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[529, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[530, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[531, "mne.get_config"]], "get_config_path() (in module mne)": [[532, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[533, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[534, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[535, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[536, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[537, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[538, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[539, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[540, "mne.grand_average"]], "grow_labels() (in module mne)": [[541, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[542, "mne.gui.coregistration"]], "head_to_mni() (in module mne)": [[543, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[544, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[545, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[546, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[547, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[548, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[549, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[550, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[550, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[550, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[550, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[550, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[550, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[550, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[550, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[550, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[550, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[550, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[550, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[550, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[550, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[550, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[550, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[550, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[550, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[550, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[550, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[550, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[550, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[550, "mne.io.Raw.crop_by_annotations"]], "del_proj() (mne.io.raw method)": [[550, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[550, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[550, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[550, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[550, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[550, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[550, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[550, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[550, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[550, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[550, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[550, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[550, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[550, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[550, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[550, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[550, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[550, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[550, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[550, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[550, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[550, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[550, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[550, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[550, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[550, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[550, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[550, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[550, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[550, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[550, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[550, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[550, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[550, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[550, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[550, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[550, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[550, "mne.io.Raw.set_montage"]], "time_as_index() (mne.io.raw method)": [[550, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[550, "mne.io.Raw.times"]], "to_data_frame() (mne.io.raw method)": [[550, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[551, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[551, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[551, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[551, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[551, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[551, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[551, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[551, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[551, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[551, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[551, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[551, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[551, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[551, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[551, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[551, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[551, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[551, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[551, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[551, "mne.io.RawArray.crop_by_annotations"]], "del_proj() (mne.io.rawarray method)": [[551, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[551, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[551, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[551, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[551, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[551, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[551, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[551, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[551, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[551, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[551, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[551, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[551, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[551, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[551, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[551, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[551, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[551, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[551, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[551, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[551, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[551, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[551, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[551, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[551, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[551, "mne.io.RawArray.set_montage"]], "time_as_index() (mne.io.rawarray method)": [[551, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[551, "mne.io.RawArray.times"]], "to_data_frame() (mne.io.rawarray method)": [[551, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[552, "mne.io.anonymize_info"]], "get_channel_type_constants() (in module mne.io)": [[553, "mne.io.get_channel_type_constants"]], "read_mrk() (in module mne.io.kit)": [[554, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[555, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[556, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[557, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[558, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[559, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[560, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[561, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[562, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[563, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[564, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[565, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[566, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[567, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[568, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[569, "mne.io.read_raw_eximia"]], "read_raw_eyelink() (in module mne.io)": [[570, "mne.io.read_raw_eyelink"]], "read_raw_fieldtrip() (in module mne.io)": [[571, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[572, "mne.io.read_raw_fif"]], "read_raw_fil() (in module mne.io)": [[573, "mne.io.read_raw_fil"]], "read_raw_gdf() (in module mne.io)": [[574, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[575, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[576, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[577, "mne.io.read_raw_nedf"]], "read_raw_neuralynx() (in module mne.io)": [[578, "mne.io.read_raw_neuralynx"]], "read_raw_nicolet() (in module mne.io)": [[579, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[580, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[581, "mne.io.read_raw_nirx"]], "read_raw_nsx() (in module mne.io)": [[582, "mne.io.read_raw_nsx"]], "read_raw_persyst() (in module mne.io)": [[583, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[584, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[585, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[586, "mne.io.write_fiducials"]], "write_info() (in module mne.io)": [[587, "mne.io.write_info"]], "select_sources() (in module mne.label)": [[588, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[589, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[590, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[591, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[592, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[593, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[594, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[595, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[596, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[597, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[598, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[599, "mne.make_sphere_model"]], "match_channel_orders() (in module mne)": [[600, "mne.match_channel_orders"]], "merge_events() (in module mne)": [[601, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[602, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.__len__"]], "ch_names (mne.minimum_norm.inverseoperator property)": [[602, "mne.minimum_norm.InverseOperator.ch_names"]], "clear() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.get"]], "info (mne.minimum_norm.inverseoperator property)": [[602, "mne.minimum_norm.InverseOperator.info"]], "items() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[602, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[603, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[604, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[605, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[606, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[607, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[608, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[609, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[610, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[611, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[612, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[613, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[614, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[615, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[616, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[617, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[618, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[619, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[620, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[621, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[622, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[623, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[624, "mne.open_docs"]], "open_report() (in module mne)": [[625, "mne.open_report"]], "parse_config() (in module mne)": [[626, "mne.parse_config"]], "pick_channels() (in module mne)": [[627, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[628, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[629, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[630, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[631, "mne.pick_events"]], "pick_info() (in module mne)": [[632, "mne.pick_info"]], "pick_types() (in module mne)": [[633, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[634, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[635, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[635, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[635, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[635, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[635, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[636, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[636, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[636, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[637, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[637, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[637, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[637, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[637, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[637, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[637, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[637, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[638, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[639, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[640, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[641, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[642, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[643, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[644, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[645, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[646, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[647, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[648, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[649, "mne.preprocessing.compute_proj_eog"]], "compute_proj_hfc() (in module mne.preprocessing)": [[650, "mne.preprocessing.compute_proj_hfc"]], "corrmap() (in module mne.preprocessing)": [[651, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[652, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[653, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[654, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[655, "mne.preprocessing.equalize_bads"]], "calibration (class in mne.preprocessing.eyetracking)": [[656, "mne.preprocessing.eyetracking.Calibration"]], "__contains__() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.__contains__"]], "__getitem__() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.__getitem__"]], "__iter__() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.__iter__"]], "__len__() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.__len__"]], "clear() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.clear"]], "copy() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.copy"]], "fromkeys() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.fromkeys"]], "get() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.get"]], "items() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.items"]], "keys() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.keys"]], "plot() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.plot"]], "pop() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.pop"]], "popitem() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.popitem"]], "setdefault() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.setdefault"]], "update() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.update"]], "values() (mne.preprocessing.eyetracking.calibration method)": [[656, "mne.preprocessing.eyetracking.Calibration.values"]], "interpolate_blinks() (in module mne.preprocessing.eyetracking)": [[657, "mne.preprocessing.eyetracking.interpolate_blinks"]], "read_eyelink_calibration() (in module mne.preprocessing.eyetracking)": [[658, "mne.preprocessing.eyetracking.read_eyelink_calibration"]], "set_channel_types_eyetrack() (in module mne.preprocessing.eyetracking)": [[659, "mne.preprocessing.eyetracking.set_channel_types_eyetrack"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[660, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[661, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[662, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[663, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[664, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[665, "mne.preprocessing.ica_find_eog_events"]], "make_montage_volume() (in module mne.preprocessing.ieeg)": [[666, "mne.preprocessing.ieeg.make_montage_volume"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[667, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "warp_montage() (in module mne.preprocessing.ieeg)": [[668, "mne.preprocessing.ieeg.warp_montage"]], "infomax() (in module mne.preprocessing)": [[669, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[670, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[671, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[672, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[673, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[674, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[675, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[676, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[677, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[678, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[679, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[680, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[681, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[682, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[683, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[684, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[685, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[686, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[687, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[688, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[689, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[690, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[691, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[692, "mne.read_cov"]], "read_dipole() (in module mne)": [[693, "mne.read_dipole"]], "read_epochs() (in module mne)": [[694, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[695, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[696, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[697, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[698, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[699, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[700, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[701, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[702, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[703, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[704, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[705, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[706, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[707, "mne.read_lta"]], "read_morph_map() (in module mne)": [[708, "mne.read_morph_map"]], "read_proj() (in module mne)": [[709, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[710, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[711, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[712, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[713, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[714, "mne.read_surface"]], "read_talxfm() (in module mne)": [[715, "mne.read_talxfm"]], "read_trans() (in module mne)": [[716, "mne.read_trans"]], "read_tri() (in module mne)": [[717, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[718, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[719, "mne.rename_channels"]], "scale_bem() (in module mne)": [[720, "mne.scale_bem"]], "scale_labels() (in module mne)": [[721, "mne.scale_labels"]], "scale_mri() (in module mne)": [[722, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[723, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[724, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[725, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[726, "mne.set_cache_dir"]], "set_config() (in module mne)": [[727, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[728, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[729, "mne.set_log_file"]], "set_log_level() (in module mne)": [[730, "mne.set_log_level"]], "set_memmap_min_size() (in module mne)": [[731, "mne.set_memmap_min_size"]], "setup_source_space() (in module mne)": [[732, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[733, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[734, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[734, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[734, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[734, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[734, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[734, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[734, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[735, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[736, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[737, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[738, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[739, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[740, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[741, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[742, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[743, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[744, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[745, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[746, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[747, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[748, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[749, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[750, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[751, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[752, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[753, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[754, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[755, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[756, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[757, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[758, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[759, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[760, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[761, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[762, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[763, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[764, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[765, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[766, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[767, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[768, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[769, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[770, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[771, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[772, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[773, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[774, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[775, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[776, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[777, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[778, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[779, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[780, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[781, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[782, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[783, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[784, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[784, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[784, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[784, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[784, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[784, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[784, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[785, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[785, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[785, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[785, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[785, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[785, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[785, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[785, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[785, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[785, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[785, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[785, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[786, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[786, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[786, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[786, "mne.time_frequency.EpochsSpectrum.units"]], "epochsspectrumarray (class in mne.time_frequency)": [[787, "mne.time_frequency.EpochsSpectrumArray"]], "__contains__() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.__iter__"]], "__len__() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.__len__"]], "add_channels() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.average"]], "compensation_grade (mne.time_frequency.epochsspectrumarray property)": [[787, "mne.time_frequency.EpochsSpectrumArray.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.copy"]], "drop_channels() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.get_data"]], "metadata (mne.time_frequency.epochsspectrumarray property)": [[787, "mne.time_frequency.EpochsSpectrumArray.metadata"]], "next() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.next"]], "pick() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.pick"]], "pick_channels() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.pick_types"]], "plot() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.plot"]], "plot_topo() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.reorder_channels"]], "save() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.save"]], "to_data_frame() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.to_data_frame"]], "units() (mne.time_frequency.epochsspectrumarray method)": [[787, "mne.time_frequency.EpochsSpectrumArray.units"]], "epochstfr (class in mne.time_frequency)": [[788, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[788, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[788, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[788, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[788, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[788, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[788, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[788, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[789, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[789, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[789, "mne.time_frequency.Spectrum.units"]], "spectrumarray (class in mne.time_frequency)": [[790, "mne.time_frequency.SpectrumArray"]], "__contains__() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.__contains__"]], "__getitem__() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.__getitem__"]], "add_channels() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrumarray property)": [[790, "mne.time_frequency.SpectrumArray.compensation_grade"]], "copy() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.copy"]], "drop_channels() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.get_channel_types"]], "get_data() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.get_data"]], "pick() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.pick"]], "pick_channels() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.pick_channels"]], "pick_types() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.pick_types"]], "plot() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.plot"]], "plot_topo() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.reorder_channels"]], "save() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.save"]], "to_data_frame() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.to_data_frame"]], "units() (mne.time_frequency.spectrumarray method)": [[790, "mne.time_frequency.SpectrumArray.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[791, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[792, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[793, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[794, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[795, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[796, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[797, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[798, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[799, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[800, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[801, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[802, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[803, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[804, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[805, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[806, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[807, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[808, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[809, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[810, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[811, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[812, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[813, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[814, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[815, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[816, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[817, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[818, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[819, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[820, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[821, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[821, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[821, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[821, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[822, "mne.transforms.apply_volume_registration"]], "apply_volume_registration_points() (in module mne.transforms)": [[823, "mne.transforms.apply_volume_registration_points"]], "compute_volume_registration() (in module mne.transforms)": [[824, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[825, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[826, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[827, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[828, "mne.use_coil_def"]], "use_log_level (class in mne)": [[829, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[830, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[831, "mne.utils.warn"]], "verbose() (in module mne)": [[832, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[833, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[834, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[834, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[834, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[834, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[834, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[834, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[834, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[834, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[834, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[834, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[834, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[834, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[834, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[834, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[834, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[834, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[834, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[834, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[834, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[834, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[834, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[834, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[834, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[834, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[834, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[834, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[834, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[834, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[834, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[834, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[834, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[834, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[834, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[834, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[834, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[834, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[834, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[834, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[834, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[834, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[834, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[834, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[834, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[834, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[834, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[834, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[834, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[834, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[834, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[834, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[835, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[835, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[835, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[835, "mne.viz.ClickableImage.to_layout"]], "evokedfield (class in mne.viz)": [[836, "mne.viz.EvokedField"]], "set_contours() (mne.viz.evokedfield method)": [[836, "mne.viz.EvokedField.set_contours"]], "set_time() (mne.viz.evokedfield method)": [[836, "mne.viz.EvokedField.set_time"]], "set_vmax() (mne.viz.evokedfield method)": [[836, "mne.viz.EvokedField.set_vmax"]], "figure3d (class in mne.viz)": [[837, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[837, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[838, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[839, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[840, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[841, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[842, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[843, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[844, "mne.viz.create_3d_figure"]], "plot_gaze() (in module mne.viz.eyetracking)": [[845, "mne.viz.eyetracking.plot_gaze"]], "get_3d_backend() (in module mne.viz)": [[846, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[847, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[848, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[849, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[850, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[851, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[852, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[853, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[854, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[855, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[856, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[857, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[858, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[859, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[860, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[861, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[862, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[863, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[864, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[865, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[866, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[867, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[868, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[869, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[870, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[871, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[872, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[873, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[874, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[875, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[876, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[877, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[878, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[879, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[880, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[881, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[882, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[883, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[884, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[885, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[886, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[887, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[888, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[889, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[890, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[891, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[892, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[893, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[894, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[895, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[896, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[897, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[898, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[899, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[900, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[901, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[902, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[903, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[904, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[905, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[906, "mne.viz.snapshot_brain_montage"]], "colormaprange (class in mne.viz.ui_events)": [[907, "mne.viz.ui_events.ColormapRange"]], "name (mne.viz.ui_events.colormaprange property)": [[907, "mne.viz.ui_events.ColormapRange.name"]], "contours (class in mne.viz.ui_events)": [[908, "mne.viz.ui_events.Contours"]], "name (mne.viz.ui_events.contours property)": [[908, "mne.viz.ui_events.Contours.name"]], "figureclosing (class in mne.viz.ui_events)": [[909, "mne.viz.ui_events.FigureClosing"]], "name (mne.viz.ui_events.figureclosing property)": [[909, "mne.viz.ui_events.FigureClosing.name"]], "playbackspeed (class in mne.viz.ui_events)": [[910, "mne.viz.ui_events.PlaybackSpeed"]], "name (mne.viz.ui_events.playbackspeed property)": [[910, "mne.viz.ui_events.PlaybackSpeed.name"]], "timechange (class in mne.viz.ui_events)": [[911, "mne.viz.ui_events.TimeChange"]], "name (mne.viz.ui_events.timechange property)": [[911, "mne.viz.ui_events.TimeChange.name"]], "uievent (class in mne.viz.ui_events)": [[912, "mne.viz.ui_events.UIEvent"]], "name (mne.viz.ui_events.uievent property)": [[912, "mne.viz.ui_events.UIEvent.name"]], "vertexselect (class in mne.viz.ui_events)": [[913, "mne.viz.ui_events.VertexSelect"]], "name (mne.viz.ui_events.vertexselect property)": [[913, "mne.viz.ui_events.VertexSelect.name"]], "disable_ui_events() (in module mne.viz.ui_events)": [[914, "mne.viz.ui_events.disable_ui_events"]], "link() (in module mne.viz.ui_events)": [[915, "mne.viz.ui_events.link"]], "publish() (in module mne.viz.ui_events)": [[916, "mne.viz.ui_events.publish"]], "subscribe() (in module mne.viz.ui_events)": [[917, "mne.viz.ui_events.subscribe"]], "unlink() (in module mne.viz.ui_events)": [[918, "mne.viz.ui_events.unlink"]], "unsubscribe() (in module mne.viz.ui_events)": [[919, "mne.viz.ui_events.unsubscribe"]], "use_3d_backend() (in module mne.viz)": [[920, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[921, "mne.viz.use_browser_backend"]], "what() (in module mne)": [[922, "mne.what"]], "write_bem_solution() (in module mne)": [[923, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[924, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[925, "mne.write_cov"]], "write_events() (in module mne)": [[926, "mne.write_events"]], "write_evokeds() (in module mne)": [[927, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[928, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[929, "mne.write_head_bem"]], "write_label() (in module mne)": [[930, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[931, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[932, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[933, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[934, "mne.write_surface"]], "write_trans() (in module mne)": [[935, "mne.write_trans"]]}})