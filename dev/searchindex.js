Search.setIndex({"docnames": ["auto_examples/connectivity/index", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/contralateral_referencing", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/locate_ieeg_micro", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/publication_figure", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sensor_noise_level", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/10_ieeg_localize", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/80_opm_processing", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "bibliography", "cited", "connectivity", "covariance", "creating_from_arrays", "datasets", "decoding", "events", "export", "file_io", "forward", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.count_events", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.ucl_opm_auditory.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.gui.locate_ieeg", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_fil", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.make_montage_volume", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.ieeg.warp_montage", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.apply_volume_registration_points", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "glossary", "index", "install/advanced", "install/check_installation", "install/contributing", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "inverse", "logging", "martinos", "mne_cpp", "most_used_classes", "mri", "overview/cite", "overview/cookbook", "overview/datasets_index", "overview/design_philosophy", "overview/development", "overview/faq", "overview/get_help", "overview/governance", "overview/implementation", "overview/index", "overview/learn_python", "overview/matlab", "overview/migrating", "overview/people", "overview/roadmap", "preprocessing", "python_reference", "reading_raw_data", "realtime", "report", "sensor_space", "simulation", "source_space", "statistics", "time_frequency", "visualization", "whats_new"], "filenames": ["auto_examples/connectivity/index.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/contralateral_referencing.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/locate_ieeg_micro.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/publication_figure.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sensor_noise_level.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/10_ieeg_localize.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/80_opm_processing.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "bibliography.rst", "cited.rst", "connectivity.rst", "covariance.rst", "creating_from_arrays.rst", "datasets.rst", "decoding.rst", "events.rst", "export.rst", "file_io.rst", "forward.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.count_events.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.ucl_opm_auditory.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.gui.locate_ieeg.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_fil.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.make_montage_volume.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.ieeg.warp_montage.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.apply_volume_registration_points.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "glossary.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/contributing.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "inverse.rst", "logging.rst", "martinos.rst", "mne_cpp.rst", "most_used_classes.rst", "mri.rst", "overview/cite.rst", "overview/cookbook.rst", "overview/datasets_index.rst", "overview/design_philosophy.rst", "overview/development.rst", "overview/faq.rst", "overview/get_help.rst", "overview/governance.rst", "overview/implementation.rst", "overview/index.rst", "overview/learn_python.rst", "overview/matlab.rst", "overview/migrating.rst", "overview/people.rst", "overview/roadmap.rst", "preprocessing.rst", "python_reference.rst", "reading_raw_data.rst", "realtime.rst", "report.rst", "sensor_space.rst", "simulation.rst", "source_space.rst", "statistics.rst", "time_frequency.rst", "visualization.rst", "whats_new.rst"], "titles": ["Connectivity Analysis Examples", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Using contralateral referencing for EEG", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Locating micro-scale intracranial electrode contacts", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Make figures more publication ready", "Plot single trial activity, grouped by ROI and sorted by RT", "Show noise levels from empty room data", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Locating intracranial electrode contacts", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing optically pumped magnetometer (OPM) MEG data", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "General bibliography", "Papers citing MNE-Python", "Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.count_events", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.ucl_opm_auditory.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.gui.locate_ieeg", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_fil", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.make_montage_volume", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.ieeg.warp_montage", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.apply_volume_registration_points", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Glossary", "MNE", "Advanced setup", "Testing your installation", "Contributing guide", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Inverse Solutions", "Logging and Configuration", "Martinos Center setup", "MNE with CPP", "Most-used classes", "MRI Processing", "How to cite MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "MNE-Python Development", "Frequently Asked Questions (FAQ)", "Getting help", "Project Governance", "Algorithms and other implementation details", "Documentation overview", "Getting started with Python", "MNE-MATLAB documentation", "Migrating from other analysis software", "Current steering council and institutional partners", "Roadmap", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "What\u2019s new"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879], "8": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879], "demonstr": [0, 5, 19, 27, 33, 41, 43, 44, 45, 63, 67, 70, 71, 73, 80, 84, 99, 103, 114, 117, 146, 147, 152, 153, 162, 169, 171, 172, 173, 191, 195, 199, 201, 202, 204, 205, 208, 210, 215, 222, 223, 226, 234, 239, 574, 847, 856, 859, 862, 863, 880], "sensor": [0, 4, 5, 11, 15, 16, 17, 20, 23, 25, 27, 28, 32, 34, 41, 42, 45, 49, 68, 70, 71, 77, 78, 80, 85, 88, 90, 92, 94, 95, 98, 102, 103, 109, 119, 120, 122, 124, 127, 130, 132, 135, 136, 145, 147, 151, 152, 157, 158, 159, 160, 163, 167, 169, 170, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 189, 192, 199, 200, 202, 204, 205, 206, 208, 209, 210, 215, 223, 226, 227, 228, 233, 239, 242, 243, 244, 257, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 284, 285, 297, 298, 299, 305, 306, 310, 311, 312, 313, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 338, 340, 342, 344, 349, 354, 355, 356, 357, 358, 364, 369, 370, 371, 373, 410, 411, 412, 413, 414, 417, 418, 419, 420, 425, 426, 428, 429, 430, 451, 453, 454, 461, 470, 477, 478, 479, 480, 483, 485, 488, 489, 491, 502, 514, 520, 521, 522, 526, 528, 531, 532, 536, 549, 554, 555, 557, 558, 559, 563, 569, 572, 583, 584, 588, 593, 594, 596, 599, 611, 614, 615, 620, 633, 635, 636, 641, 652, 653, 664, 665, 668, 678, 680, 684, 685, 687, 688, 689, 690, 691, 695, 700, 701, 702, 703, 704, 730, 731, 732, 737, 748, 761, 764, 765, 768, 769, 771, 772, 773, 774, 778, 780, 782, 783, 784, 786, 787, 788, 790, 791, 797, 798, 800, 801, 803, 804, 808, 809, 810, 815, 816, 818, 835, 840, 846, 855, 856, 857, 859, 865, 868, 869, 870, 880], "sourc": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 35, 37, 40, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 99, 100, 101, 103, 105, 106, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 158, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 176, 180, 184, 185, 186, 188, 189, 190, 191, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 230, 231, 238, 239, 240, 241, 244, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 845, 846, 848, 851, 856, 859, 860, 861, 865, 870, 880], "space": [0, 5, 10, 17, 20, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 68, 74, 83, 88, 90, 92, 93, 94, 95, 98, 102, 105, 106, 108, 109, 113, 115, 119, 120, 124, 127, 131, 134, 135, 136, 137, 141, 148, 149, 152, 156, 157, 161, 163, 167, 169, 171, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 192, 195, 199, 205, 208, 213, 214, 215, 218, 221, 223, 226, 227, 231, 233, 235, 238, 239, 240, 244, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 297, 298, 312, 316, 325, 330, 342, 344, 347, 348, 351, 355, 356, 357, 359, 360, 363, 364, 367, 369, 373, 410, 413, 414, 417, 418, 420, 424, 427, 428, 431, 439, 444, 451, 455, 464, 466, 468, 472, 473, 474, 475, 476, 478, 479, 481, 483, 486, 493, 502, 512, 513, 518, 520, 521, 524, 525, 526, 527, 528, 529, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545, 554, 555, 557, 558, 568, 569, 570, 571, 577, 583, 588, 609, 611, 615, 618, 620, 622, 623, 630, 632, 635, 637, 639, 640, 641, 648, 649, 650, 657, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 684, 685, 687, 688, 690, 691, 692, 695, 696, 700, 702, 704, 712, 734, 748, 764, 766, 772, 778, 779, 780, 781, 784, 785, 787, 790, 791, 795, 800, 801, 803, 806, 807, 808, 811, 812, 816, 832, 835, 845, 856, 859, 868, 870, 880], "function": [0, 4, 8, 16, 19, 27, 31, 36, 44, 45, 54, 55, 56, 57, 59, 76, 92, 94, 95, 101, 103, 112, 113, 114, 115, 116, 133, 135, 136, 137, 141, 142, 145, 147, 150, 151, 152, 153, 156, 157, 158, 159, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 179, 181, 183, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 221, 222, 223, 228, 230, 231, 239, 240, 241, 244, 246, 249, 250, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 297, 298, 299, 303, 305, 307, 312, 317, 318, 320, 321, 329, 330, 332, 340, 341, 342, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 371, 373, 375, 386, 389, 410, 413, 414, 415, 416, 417, 419, 420, 427, 429, 431, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 449, 450, 451, 453, 467, 468, 471, 472, 476, 477, 478, 479, 484, 486, 487, 489, 490, 493, 495, 497, 498, 500, 502, 506, 508, 509, 511, 513, 521, 524, 525, 528, 531, 532, 533, 534, 535, 536, 537, 539, 540, 547, 553, 555, 557, 558, 560, 561, 562, 567, 568, 569, 570, 571, 572, 574, 575, 577, 580, 586, 588, 589, 590, 591, 592, 594, 595, 602, 605, 606, 609, 612, 613, 614, 615, 616, 617, 618, 620, 623, 628, 636, 639, 642, 645, 649, 650, 652, 653, 654, 663, 664, 666, 667, 684, 686, 687, 688, 689, 690, 691, 695, 696, 699, 700, 701, 702, 703, 704, 707, 710, 712, 718, 719, 728, 730, 731, 738, 742, 743, 744, 745, 746, 748, 758, 761, 763, 764, 765, 772, 774, 778, 780, 781, 786, 787, 788, 791, 794, 799, 800, 802, 803, 804, 806, 808, 810, 811, 812, 813, 817, 835, 837, 846, 847, 848, 854, 855, 856, 857, 862, 863, 866, 868, 869, 870, 872, 874, 877, 878, 880], "ha": [0, 1, 5, 9, 10, 27, 32, 42, 45, 49, 54, 70, 71, 74, 78, 83, 84, 93, 94, 103, 109, 114, 126, 127, 135, 137, 141, 143, 145, 146, 147, 150, 151, 152, 156, 157, 158, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 186, 189, 190, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 218, 221, 223, 226, 227, 231, 239, 241, 246, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 288, 289, 290, 291, 297, 298, 302, 303, 308, 354, 358, 359, 360, 369, 370, 371, 377, 378, 379, 382, 383, 385, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 416, 417, 431, 445, 446, 448, 449, 451, 453, 454, 457, 473, 475, 476, 478, 479, 480, 486, 487, 498, 506, 522, 524, 525, 526, 528, 536, 557, 558, 559, 561, 572, 584, 588, 595, 618, 619, 637, 640, 681, 682, 687, 688, 690, 691, 700, 701, 702, 703, 704, 707, 716, 718, 726, 727, 728, 730, 731, 735, 758, 772, 780, 782, 784, 785, 786, 787, 788, 791, 793, 795, 800, 801, 802, 803, 804, 806, 808, 810, 835, 837, 839, 843, 845, 846, 847, 855, 856, 857, 858, 859, 860, 861, 862, 865, 868, 872, 880], "move": [0, 27, 60, 75, 80, 81, 116, 135, 141, 146, 157, 162, 178, 202, 205, 206, 209, 234, 241, 246, 256, 261, 264, 265, 266, 267, 273, 279, 280, 365, 410, 417, 445, 478, 479, 557, 558, 562, 585, 700, 702, 704, 736, 737, 738, 779, 780, 784, 787, 791, 800, 803, 808, 812, 859, 861, 862, 872, 880], "mne_connect": [0, 27, 47, 147, 246, 770], "packag": [0, 27, 147, 161, 167, 190, 196, 200, 201, 202, 205, 223, 226, 246, 256, 258, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 372, 373, 413, 420, 423, 426, 427, 453, 466, 468, 478, 479, 516, 517, 520, 521, 531, 532, 541, 542, 563, 570, 571, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 780, 783, 802, 835, 836, 837, 839, 840, 842, 843, 844, 845, 846, 850, 854, 856, 857, 868, 880], "can": [0, 4, 5, 7, 12, 13, 15, 16, 19, 21, 22, 24, 26, 27, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 70, 71, 74, 75, 78, 79, 80, 82, 83, 84, 88, 94, 95, 99, 101, 103, 109, 112, 113, 114, 115, 116, 119, 120, 121, 126, 127, 129, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 181, 182, 183, 184, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 231, 234, 235, 236, 239, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 290, 297, 298, 303, 304, 305, 306, 309, 310, 312, 314, 316, 317, 320, 321, 322, 323, 327, 328, 329, 330, 332, 335, 339, 340, 341, 342, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 385, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 429, 431, 434, 435, 436, 437, 439, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 457, 460, 461, 462, 463, 466, 468, 469, 470, 472, 473, 475, 476, 478, 479, 486, 490, 493, 494, 497, 498, 500, 502, 506, 508, 509, 511, 513, 516, 517, 518, 520, 521, 523, 525, 531, 532, 534, 535, 536, 538, 542, 544, 545, 546, 547, 555, 556, 557, 558, 560, 561, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 587, 588, 589, 592, 594, 595, 596, 602, 603, 606, 608, 611, 612, 613, 614, 617, 618, 619, 621, 623, 625, 631, 635, 636, 637, 639, 640, 642, 645, 647, 648, 649, 656, 663, 664, 665, 666, 668, 670, 672, 674, 675, 679, 680, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 699, 700, 701, 702, 703, 704, 708, 709, 710, 711, 713, 716, 723, 726, 728, 730, 731, 734, 736, 737, 738, 743, 745, 746, 748, 749, 753, 756, 761, 764, 765, 766, 767, 768, 769, 770, 771, 772, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 798, 799, 800, 801, 802, 803, 804, 806, 808, 810, 811, 812, 814, 822, 823, 826, 828, 833, 835, 837, 838, 839, 843, 844, 845, 846, 847, 851, 854, 855, 856, 857, 861, 862, 863, 865, 868, 869, 870, 880], "found": [0, 1, 2, 4, 5, 8, 9, 11, 12, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 73, 74, 78, 80, 81, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 124, 127, 128, 129, 132, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 159, 160, 162, 163, 167, 169, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 216, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 256, 257, 259, 261, 264, 265, 266, 267, 269, 273, 288, 302, 318, 319, 329, 348, 349, 365, 377, 378, 379, 380, 382, 383, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 429, 437, 451, 452, 458, 459, 460, 469, 478, 479, 485, 504, 524, 558, 561, 570, 574, 575, 578, 579, 581, 582, 597, 608, 631, 637, 639, 644, 645, 649, 687, 735, 748, 758, 760, 764, 778, 795, 801, 828, 835, 838, 839, 844, 856, 860, 862, 868, 870, 880], "go": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 277, 357, 460, 478, 479, 558, 649, 839, 850, 859, 860, 861, 862], "end": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 287, 288, 312, 317, 324, 340, 341, 343, 354, 357, 359, 410, 416, 417, 422, 428, 433, 434, 435, 450, 451, 478, 479, 491, 498, 499, 504, 519, 531, 539, 541, 542, 543, 557, 558, 561, 574, 575, 580, 598, 600, 602, 609, 611, 618, 619, 620, 626, 630, 634, 636, 656, 657, 658, 659, 660, 662, 665, 677, 700, 701, 703, 705, 706, 707, 708, 709, 710, 711, 713, 722, 733, 735, 748, 778, 787, 792, 795, 801, 808, 821, 822, 823, 824, 826, 827, 831, 832, 833, 834, 835, 837, 839, 859, 861, 862, 865, 880], "download": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 837, 839, 840, 841, 842, 846, 847, 856, 880], "full": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240, 241, 264, 265, 266, 267, 269, 271, 272, 275, 277, 278, 280, 297, 298, 300, 318, 319, 354, 358, 359, 360, 369, 370, 371, 410, 415, 417, 418, 423, 440, 443, 453, 454, 473, 475, 476, 478, 479, 524, 525, 536, 539, 555, 558, 615, 618, 680, 686, 687, 689, 691, 703, 714, 716, 718, 725, 726, 728, 730, 731, 738, 748, 764, 766, 769, 772, 778, 780, 788, 795, 801, 806, 811, 813, 814, 817, 837, 839, 845, 851, 855, 856, 861, 880], "exampl": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 259, 280, 335, 362, 368, 369, 370, 380, 385, 403, 409, 432, 437, 454, 477, 546, 568, 576, 597, 637, 646, 726, 728, 746, 778, 780, 787, 791, 793, 801, 803, 808, 812, 835, 837, 839, 842, 846, 855, 857, 859, 860, 862, 863, 880], "code": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 255, 259, 264, 265, 266, 267, 274, 283, 349, 437, 439, 449, 451, 454, 477, 478, 479, 486, 495, 502, 526, 588, 597, 613, 686, 702, 704, 729, 732, 748, 780, 782, 802, 835, 843, 855, 858, 859, 861, 862, 863, 866, 868, 875, 878, 880], "here": [1, 4, 5, 7, 9, 10, 11, 12, 15, 18, 19, 21, 28, 31, 33, 34, 38, 41, 42, 43, 45, 65, 67, 70, 71, 74, 75, 79, 82, 83, 84, 90, 94, 95, 100, 101, 104, 109, 111, 112, 114, 116, 117, 120, 121, 127, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 230, 231, 234, 235, 236, 240, 241, 270, 274, 275, 277, 279, 280, 334, 360, 385, 391, 416, 427, 434, 450, 477, 511, 521, 523, 533, 558, 574, 586, 589, 603, 605, 618, 649, 652, 653, 654, 663, 664, 666, 687, 688, 689, 690, 691, 695, 781, 812, 837, 839, 846, 847, 856, 859, 862, 863, 864, 866, 880], "we": [1, 4, 5, 7, 9, 10, 11, 13, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 58, 59, 65, 67, 68, 69, 70, 71, 73, 74, 75, 79, 83, 84, 87, 88, 90, 94, 95, 101, 103, 109, 111, 112, 113, 114, 115, 116, 117, 120, 121, 126, 127, 129, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 261, 264, 265, 266, 267, 271, 274, 275, 277, 279, 282, 307, 330, 418, 420, 440, 441, 442, 443, 450, 460, 478, 479, 480, 508, 533, 558, 574, 587, 595, 660, 703, 748, 749, 764, 773, 788, 806, 837, 843, 844, 847, 850, 854, 855, 856, 857, 859, 861, 862, 866, 868, 880], "comput": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 31, 36, 38, 43, 44, 48, 50, 52, 57, 60, 68, 71, 72, 76, 78, 79, 81, 87, 88, 92, 93, 95, 96, 97, 98, 100, 105, 113, 114, 115, 119, 120, 121, 123, 124, 131, 134, 135, 136, 142, 143, 146, 147, 150, 151, 152, 153, 156, 157, 158, 161, 164, 166, 167, 168, 169, 173, 176, 177, 179, 182, 183, 184, 185, 186, 187, 190, 192, 195, 196, 200, 201, 203, 207, 208, 210, 212, 215, 218, 221, 222, 223, 226, 227, 230, 239, 240, 241, 244, 257, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 284, 285, 288, 289, 290, 291, 292, 294, 297, 298, 299, 300, 302, 304, 307, 309, 315, 316, 318, 320, 325, 329, 341, 342, 343, 344, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 369, 370, 371, 380, 410, 411, 414, 415, 416, 417, 418, 422, 426, 429, 439, 444, 449, 451, 453, 454, 455, 460, 466, 468, 469, 473, 474, 475, 476, 478, 479, 483, 485, 490, 491, 493, 512, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 555, 556, 558, 559, 562, 565, 566, 568, 569, 570, 571, 574, 577, 584, 586, 605, 607, 608, 609, 610, 615, 618, 619, 620, 622, 623, 630, 632, 635, 637, 639, 641, 643, 645, 648, 649, 650, 655, 656, 657, 658, 659, 660, 661, 662, 665, 668, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 686, 687, 688, 690, 691, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 718, 719, 724, 725, 726, 727, 728, 729, 730, 731, 732, 736, 737, 742, 748, 764, 765, 766, 772, 773, 775, 776, 778, 779, 780, 787, 788, 795, 800, 801, 807, 816, 824, 827, 828, 835, 839, 840, 842, 845, 846, 851, 856, 859, 865, 870, 875, 877, 880], "evok": [1, 2, 4, 5, 7, 8, 15, 16, 17, 18, 20, 27, 28, 31, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 68, 71, 73, 77, 78, 80, 84, 85, 87, 88, 89, 91, 93, 95, 96, 97, 99, 100, 101, 107, 113, 116, 117, 122, 124, 130, 136, 137, 142, 144, 145, 155, 163, 168, 170, 171, 177, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 196, 199, 200, 201, 202, 203, 205, 206, 207, 210, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 241, 244, 256, 259, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 274, 275, 277, 278, 279, 280, 281, 284, 285, 289, 290, 293, 294, 297, 298, 300, 314, 317, 353, 354, 356, 358, 373, 392, 415, 424, 431, 435, 436, 441, 442, 444, 451, 453, 467, 469, 473, 475, 476, 478, 479, 483, 491, 517, 518, 521, 524, 525, 526, 527, 528, 529, 533, 536, 539, 549, 554, 555, 556, 557, 558, 559, 566, 567, 570, 571, 573, 576, 580, 587, 588, 603, 609, 611, 615, 616, 617, 618, 619, 620, 622, 623, 626, 642, 645, 648, 649, 654, 664, 666, 686, 695, 700, 702, 703, 704, 709, 713, 718, 728, 730, 731, 732, 748, 765, 772, 773, 775, 776, 778, 779, 782, 783, 784, 785, 786, 787, 788, 792, 795, 799, 801, 802, 805, 807, 810, 815, 826, 835, 839, 856, 857, 859, 862, 865, 866, 870, 880], "from": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 144, 146, 147, 148, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 212, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 307, 309, 312, 313, 315, 318, 321, 324, 325, 326, 328, 330, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 369, 370, 371, 372, 373, 380, 385, 393, 394, 402, 403, 410, 414, 416, 417, 418, 419, 425, 428, 432, 433, 434, 436, 439, 440, 441, 442, 443, 444, 449, 451, 452, 453, 454, 455, 458, 460, 462, 463, 467, 468, 469, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 531, 532, 533, 534, 535, 536, 538, 539, 540, 544, 545, 549, 550, 551, 555, 556, 557, 558, 559, 560, 561, 562, 565, 567, 568, 569, 572, 573, 574, 575, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 597, 598, 599, 600, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 640, 642, 645, 649, 650, 651, 652, 653, 654, 660, 663, 664, 665, 666, 667, 669, 670, 672, 673, 674, 675, 676, 677, 679, 680, 682, 686, 687, 688, 689, 690, 691, 692, 695, 696, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 726, 728, 729, 731, 732, 735, 736, 737, 738, 740, 743, 744, 747, 748, 756, 761, 764, 765, 772, 776, 777, 778, 780, 781, 782, 784, 785, 786, 787, 788, 789, 791, 792, 793, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 808, 810, 816, 818, 826, 827, 830, 833, 835, 837, 839, 842, 843, 844, 845, 846, 847, 851, 855, 856, 857, 859, 861, 862, 864, 865, 868, 870, 878, 880], "tutori": [1, 27, 32, 62, 70, 73, 84, 109, 124, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 183, 187, 188, 191, 192, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 231, 232, 234, 236, 237, 239, 241, 242, 244, 261, 262, 264, 265, 266, 267, 269, 297, 302, 354, 359, 410, 430, 445, 448, 451, 453, 478, 479, 489, 491, 522, 546, 588, 727, 728, 730, 731, 764, 776, 788, 816, 835, 839, 856, 859, 862, 863, 864, 880], "For": [1, 4, 15, 19, 43, 44, 47, 50, 55, 63, 67, 69, 70, 80, 95, 101, 103, 109, 113, 115, 120, 121, 123, 127, 134, 135, 136, 137, 141, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 212, 215, 216, 218, 221, 226, 228, 230, 231, 234, 236, 239, 240, 241, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 297, 298, 314, 325, 335, 354, 358, 359, 360, 367, 369, 370, 371, 380, 385, 402, 403, 409, 410, 412, 413, 416, 417, 418, 420, 422, 423, 427, 431, 432, 433, 434, 436, 439, 440, 441, 443, 445, 446, 448, 449, 451, 452, 453, 454, 467, 468, 469, 472, 473, 475, 476, 477, 478, 479, 484, 486, 493, 498, 501, 502, 523, 531, 536, 540, 545, 557, 558, 559, 560, 569, 573, 576, 577, 588, 592, 599, 606, 615, 631, 635, 637, 642, 645, 647, 649, 680, 685, 686, 687, 688, 690, 691, 695, 700, 701, 702, 703, 704, 718, 720, 727, 728, 730, 731, 738, 748, 763, 764, 766, 772, 773, 778, 779, 780, 782, 784, 787, 788, 789, 791, 792, 793, 795, 801, 803, 804, 808, 810, 812, 835, 837, 839, 841, 845, 850, 851, 855, 856, 857, 858, 859, 862, 866, 880], "comparison": [1, 27, 31, 38, 83, 96, 97, 101, 112, 122, 130, 135, 152, 156, 158, 168, 177, 184, 185, 192, 202, 207, 211, 231, 234, 235, 236, 240, 241, 244, 275, 276, 360, 558, 561, 589, 628, 684, 688, 689, 847, 855, 862, 877, 880], "see": [1, 4, 7, 8, 10, 19, 21, 22, 26, 27, 32, 34, 35, 39, 43, 44, 62, 63, 70, 71, 73, 75, 80, 82, 83, 84, 101, 113, 115, 119, 120, 121, 127, 129, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 231, 234, 239, 241, 249, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 420, 421, 423, 426, 427, 429, 431, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 460, 461, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 552, 554, 557, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 646, 648, 649, 651, 652, 653, 654, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 716, 718, 719, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 743, 747, 748, 753, 756, 763, 764, 765, 772, 773, 776, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 790, 791, 792, 793, 795, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 817, 819, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 843, 844, 845, 846, 855, 856, 857, 859, 861, 862, 863, 866, 867, 868, 870, 877, 880], "1": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 290, 297, 298, 299, 304, 307, 308, 309, 312, 314, 316, 318, 321, 322, 323, 335, 338, 341, 342, 343, 347, 348, 353, 354, 355, 357, 359, 360, 365, 368, 371, 380, 386, 387, 388, 392, 393, 394, 402, 403, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 453, 454, 455, 460, 466, 468, 469, 472, 473, 475, 476, 477, 478, 479, 486, 488, 493, 494, 495, 501, 502, 503, 510, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 552, 555, 557, 558, 559, 560, 563, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 586, 587, 588, 589, 592, 595, 596, 597, 598, 603, 610, 612, 614, 622, 635, 637, 639, 641, 645, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 667, 669, 674, 675, 676, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 718, 719, 723, 725, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 743, 748, 752, 757, 761, 764, 765, 769, 772, 776, 777, 778, 779, 780, 782, 783, 784, 787, 788, 789, 791, 792, 793, 795, 796, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 814, 824, 826, 831, 835, 837, 838, 839, 842, 844, 845, 847, 854, 855, 856, 859, 861, 862, 865, 868], "http": [1, 8, 15, 43, 70, 88, 113, 152, 156, 161, 185, 196, 231, 244, 264, 265, 266, 267, 271, 275, 279, 300, 354, 367, 380, 385, 387, 402, 403, 418, 473, 478, 479, 486, 525, 559, 646, 682, 684, 729, 732, 744, 806, 837, 839, 847, 859, 862, 880], "neuroimag": [1, 10, 12, 18, 19, 21, 35, 42, 46, 59, 75, 94, 101, 113, 121, 126, 145, 156, 163, 166, 181, 185, 187, 188, 196, 212, 226, 227, 244, 261, 262, 264, 265, 266, 267, 269, 270, 275, 302, 354, 388, 414, 416, 417, 418, 428, 431, 451, 453, 473, 476, 489, 522, 526, 536, 540, 558, 595, 657, 660, 662, 684, 687, 688, 689, 690, 691, 693, 694, 714, 716, 726, 730, 764, 776, 788, 835, 846, 854, 857, 859, 862, 863, 868], "usc": [1, 185], "edu": [1, 9, 24, 35, 37, 43, 47, 58, 68, 70, 101, 104, 113, 114, 115, 120, 134, 152, 156, 185, 244, 271, 275, 279, 367, 597, 806, 862], "mediannervectf": 1, "author": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 142, 158, 160, 162, 180, 181, 183, 184, 185, 186, 192, 195, 202, 209, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 595, 839, 854, 861], "mainak": [1, 46, 78, 86, 87, 192, 244, 476, 854, 867, 880], "ja": [1, 46, 78, 86, 87, 192, 244, 476, 854, 867, 880], "telecom": [1, 78, 87, 192], "paristech": [1, 78, 87, 192, 255, 867], "fr": [1, 7, 9, 10, 11, 13, 18, 19, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 78, 87, 92, 96, 97, 100, 107, 108, 110, 111, 117, 121, 125, 131, 132, 138, 160, 186, 192, 196, 228, 229, 230, 234, 235, 236, 240, 244, 880], "licens": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 142, 158, 160, 162, 180, 181, 183, 184, 185, 186, 192, 195, 209, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241, 377, 378, 379, 385, 387, 856, 880], "bsd": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 142, 158, 160, 162, 180, 181, 183, 184, 185, 186, 192, 195, 209, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241, 588, 861], "claus": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 142, 158, 160, 162, 180, 181, 183, 184, 185, 186, 192, 195, 209, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241], "import": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 264, 265, 266, 267, 269, 312, 328, 330, 337, 373, 380, 402, 403, 450, 478, 479, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 558, 597, 612, 613, 614, 617, 631, 645, 665, 680, 682, 700, 702, 703, 704, 716, 726, 743, 746, 748, 796, 833, 837, 838, 843, 846, 847, 850, 855, 856, 857, 859, 861, 862, 866, 868, 880], "numpi": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 47, 50, 58, 59, 60, 63, 67, 68, 70, 71, 72, 74, 79, 82, 84, 90, 92, 93, 94, 95, 97, 100, 107, 111, 112, 113, 114, 115, 117, 119, 120, 125, 127, 133, 135, 136, 137, 138, 141, 142, 144, 147, 150, 151, 152, 157, 158, 159, 160, 161, 167, 169, 171, 172, 173, 177, 178, 179, 182, 183, 184, 185, 186, 191, 192, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 212, 215, 216, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 258, 261, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 410, 416, 417, 418, 448, 449, 450, 475, 476, 477, 478, 479, 511, 558, 572, 586, 597, 605, 652, 653, 654, 663, 664, 666, 680, 685, 687, 688, 689, 690, 691, 700, 701, 702, 703, 704, 705, 707, 708, 710, 716, 726, 727, 728, 729, 730, 731, 732, 748, 780, 782, 787, 800, 835, 838, 857, 861, 864, 880], "np": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 45, 47, 50, 58, 59, 60, 67, 68, 70, 71, 72, 74, 79, 82, 84, 90, 92, 93, 94, 95, 97, 100, 107, 111, 112, 113, 114, 115, 117, 119, 120, 125, 127, 133, 135, 136, 137, 138, 142, 144, 147, 151, 152, 157, 158, 159, 160, 161, 167, 169, 171, 173, 177, 178, 179, 182, 183, 184, 185, 186, 191, 192, 195, 196, 199, 200, 202, 203, 204, 206, 207, 210, 211, 212, 215, 216, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 258, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 282, 314, 354, 368, 444, 445, 449, 466, 478, 479, 495, 509, 558, 572, 577, 586, 597, 666, 680, 692, 700, 702, 703, 704, 716, 718, 726, 727, 728, 730, 731, 748, 756, 762, 767, 772, 779, 802, 806, 808, 811, 812, 839, 862, 865, 878, 880], "mne": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 163, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 199, 201, 203, 204, 207, 208, 209, 211, 212, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 249, 250, 251, 252, 254, 255, 835, 837, 838, 840, 844, 848, 849, 850, 855, 856, 857, 860, 861, 863, 866, 867, 868, 869, 870, 871, 874, 875, 877, 878, 879, 880], "bst_raw": [1, 119, 856, 870], "io": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 127, 128, 129, 132, 133, 135, 136, 138, 141, 142, 143, 145, 146, 147, 150, 152, 153, 157, 158, 159, 160, 161, 163, 167, 168, 169, 170, 171, 172, 173, 178, 181, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 251, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 283, 296, 365, 385, 415, 443, 445, 448, 521, 558, 566, 570, 571, 577, 588, 700, 702, 703, 704, 718, 748, 793, 837, 839, 843, 855, 856, 857, 859, 862, 866, 870, 871, 880], "read_raw_ctf": [1, 7, 12, 21, 81, 82, 119, 123, 185, 189, 192, 484, 862, 870, 880], "print": [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 76, 78, 80, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 128, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 151, 152, 157, 158, 159, 160, 161, 167, 168, 169, 170, 171, 172, 176, 177, 180, 182, 183, 184, 185, 186, 192, 196, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 215, 216, 217, 221, 222, 223, 226, 227, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 256, 264, 265, 266, 267, 273, 354, 393, 445, 451, 478, 479, 509, 646, 647, 699, 702, 703, 743, 756, 772, 783, 785, 788, 843, 845, 856, 859, 880], "__doc__": [1, 2, 4, 7, 8, 10, 11, 13, 14, 15, 16, 18, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 76, 78, 80, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 100, 103, 104, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 128, 131, 132, 133, 137, 176, 180, 184, 185, 192, 229, 230, 235, 236], "tmin": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 69, 71, 72, 73, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 112, 113, 114, 117, 121, 128, 132, 133, 137, 138, 141, 142, 143, 145, 146, 150, 152, 163, 167, 173, 178, 181, 182, 184, 185, 186, 192, 195, 196, 200, 201, 205, 209, 211, 212, 215, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 341, 343, 354, 355, 356, 359, 416, 422, 434, 436, 477, 478, 479, 513, 531, 548, 570, 571, 574, 575, 580, 667, 686, 692, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 748, 780, 802, 808, 855, 862, 866, 880], "tmax": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 69, 71, 72, 73, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 112, 113, 114, 117, 121, 128, 129, 132, 133, 137, 138, 141, 142, 143, 145, 146, 147, 150, 152, 153, 163, 167, 168, 169, 173, 178, 181, 182, 183, 184, 185, 186, 192, 195, 196, 199, 200, 201, 205, 206, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 341, 343, 354, 355, 356, 359, 416, 422, 434, 436, 477, 478, 479, 531, 548, 570, 571, 574, 575, 580, 686, 689, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 748, 780, 789, 802, 808, 855, 859, 862, 866, 880], "event_id": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 28, 32, 33, 34, 42, 45, 46, 49, 69, 71, 72, 73, 88, 94, 96, 97, 99, 100, 103, 104, 107, 110, 112, 113, 117, 121, 128, 132, 136, 137, 138, 141, 142, 143, 145, 150, 152, 153, 163, 167, 169, 173, 178, 181, 184, 185, 186, 192, 196, 204, 205, 207, 211, 216, 221, 222, 223, 228, 229, 230, 231, 234, 236, 239, 240, 241, 256, 257, 258, 259, 264, 265, 274, 283, 355, 426, 432, 434, 437, 439, 478, 479, 495, 523, 559, 570, 571, 574, 575, 578, 579, 580, 581, 582, 612, 614, 615, 686, 702, 703, 778, 781, 801, 855, 862, 866, 880], "0": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 246, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 293, 297, 298, 300, 304, 305, 306, 307, 309, 312, 313, 314, 317, 318, 321, 326, 328, 330, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 368, 369, 370, 371, 380, 386, 387, 388, 389, 402, 403, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 429, 430, 431, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 463, 466, 467, 468, 469, 473, 475, 476, 477, 478, 479, 486, 487, 488, 489, 490, 491, 493, 494, 495, 498, 501, 506, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 531, 532, 533, 536, 537, 538, 540, 541, 542, 543, 544, 545, 549, 550, 551, 552, 557, 558, 559, 560, 561, 563, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 583, 586, 588, 590, 592, 593, 596, 597, 602, 608, 610, 612, 613, 614, 615, 618, 619, 622, 623, 631, 633, 634, 636, 637, 639, 642, 645, 647, 648, 649, 650, 651, 652, 653, 654, 656, 658, 659, 663, 664, 665, 666, 667, 669, 678, 679, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 712, 713, 716, 717, 718, 719, 722, 724, 726, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 743, 745, 748, 749, 751, 752, 753, 757, 758, 764, 765, 766, 767, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 817, 821, 824, 826, 830, 831, 833, 835, 837, 838, 839, 842, 845, 855, 856, 859, 861, 862, 865], "2": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 237, 238, 239, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 300, 302, 314, 316, 321, 335, 341, 343, 347, 348, 354, 355, 356, 357, 359, 360, 368, 380, 387, 388, 402, 403, 410, 412, 413, 416, 417, 418, 420, 421, 422, 426, 427, 429, 431, 432, 433, 439, 443, 445, 446, 448, 449, 451, 455, 462, 465, 472, 473, 475, 476, 478, 479, 486, 493, 501, 506, 514, 516, 521, 523, 524, 525, 531, 533, 534, 535, 536, 538, 540, 541, 542, 552, 557, 558, 559, 563, 566, 567, 568, 570, 571, 572, 574, 575, 577, 584, 586, 587, 588, 592, 598, 603, 605, 618, 619, 622, 625, 628, 630, 641, 645, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 672, 674, 675, 676, 677, 679, 681, 682, 683, 686, 687, 688, 689, 690, 691, 692, 700, 701, 702, 703, 704, 712, 713, 715, 716, 718, 719, 723, 726, 727, 728, 729, 730, 731, 732, 735, 738, 748, 749, 752, 753, 765, 772, 779, 780, 782, 784, 787, 788, 789, 790, 791, 792, 793, 800, 802, 803, 804, 806, 807, 808, 810, 811, 818, 837, 838, 839, 844, 845, 847, 854, 855, 856, 857, 859, 862, 865], "take": [1, 4, 5, 7, 10, 16, 19, 26, 31, 38, 41, 43, 44, 45, 47, 50, 70, 71, 74, 76, 80, 83, 94, 96, 97, 101, 109, 110, 113, 115, 119, 123, 127, 131, 133, 135, 136, 138, 141, 142, 143, 145, 146, 150, 151, 153, 156, 159, 160, 161, 163, 167, 168, 169, 170, 172, 173, 177, 180, 182, 183, 184, 186, 190, 195, 196, 201, 202, 205, 206, 207, 208, 210, 215, 221, 223, 226, 234, 235, 236, 240, 241, 256, 258, 261, 264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 287, 297, 298, 309, 312, 330, 340, 342, 354, 358, 359, 360, 367, 369, 370, 371, 410, 417, 434, 439, 443, 451, 453, 454, 467, 469, 473, 475, 476, 478, 479, 504, 525, 526, 527, 528, 529, 531, 532, 536, 541, 542, 558, 561, 563, 566, 636, 642, 648, 650, 661, 666, 686, 695, 700, 702, 703, 704, 745, 748, 749, 765, 772, 778, 780, 782, 787, 788, 791, 800, 808, 818, 835, 839, 842, 843, 847, 861, 862, 863, 865, 880], "right": [1, 5, 8, 10, 11, 13, 15, 39, 40, 41, 43, 45, 47, 51, 52, 57, 61, 67, 70, 71, 73, 79, 80, 83, 94, 109, 112, 113, 114, 116, 120, 127, 128, 132, 134, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 159, 161, 162, 167, 169, 173, 176, 177, 179, 180, 181, 182, 192, 195, 201, 202, 204, 205, 206, 207, 210, 215, 216, 217, 218, 222, 223, 228, 230, 231, 234, 235, 236, 239, 240, 260, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 278, 279, 280, 312, 314, 324, 325, 335, 336, 360, 380, 410, 417, 432, 434, 437, 444, 468, 476, 478, 479, 501, 511, 523, 557, 558, 635, 663, 700, 702, 703, 704, 716, 726, 748, 761, 771, 772, 778, 779, 780, 784, 786, 787, 791, 799, 800, 801, 803, 808, 812, 835, 837, 839, 842, 856, 859, 861, 862, 865, 880], "hand": [1, 5, 8, 9, 112, 157, 161, 200, 205, 206, 207, 241, 269, 380, 558, 862, 880], "somato": [1, 32, 33, 34, 46, 61, 113, 240, 856, 870, 880], "reject": [1, 5, 7, 11, 13, 16, 27, 28, 32, 42, 45, 46, 61, 69, 76, 77, 83, 96, 97, 99, 100, 101, 103, 104, 107, 110, 113, 114, 117, 121, 132, 141, 142, 143, 145, 146, 147, 152, 153, 166, 167, 173, 178, 181, 190, 192, 196, 200, 205, 206, 207, 210, 211, 213, 214, 217, 226, 228, 229, 230, 231, 234, 236, 240, 244, 256, 257, 258, 259, 264, 265, 266, 269, 274, 357, 359, 478, 479, 518, 555, 558, 560, 561, 570, 571, 574, 575, 578, 579, 588, 611, 615, 627, 678, 684, 686, 778, 791, 792, 793, 794, 862, 880], "dict": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 21, 22, 26, 28, 32, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 61, 65, 67, 69, 70, 74, 76, 78, 80, 86, 88, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 128, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 146, 151, 152, 153, 158, 159, 160, 161, 167, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 185, 192, 195, 196, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 215, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 286, 288, 297, 298, 302, 304, 310, 312, 314, 324, 325, 340, 341, 342, 343, 344, 345, 346, 354, 357, 358, 359, 365, 366, 367, 368, 369, 370, 371, 385, 391, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 432, 434, 437, 439, 442, 444, 445, 446, 448, 449, 453, 454, 455, 456, 458, 460, 461, 462, 463, 470, 473, 475, 476, 477, 478, 479, 482, 486, 493, 497, 501, 510, 513, 514, 515, 516, 517, 520, 521, 524, 525, 526, 527, 528, 529, 531, 532, 536, 538, 541, 542, 543, 548, 550, 551, 554, 556, 557, 558, 559, 560, 568, 570, 571, 572, 574, 575, 577, 584, 599, 604, 608, 612, 613, 614, 615, 617, 621, 627, 631, 633, 636, 642, 649, 651, 652, 653, 663, 665, 668, 669, 685, 686, 687, 688, 690, 691, 695, 697, 700, 702, 703, 704, 716, 726, 734, 735, 737, 738, 748, 749, 764, 765, 767, 768, 770, 771, 772, 776, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 791, 793, 799, 800, 801, 803, 806, 807, 808, 809, 810, 811, 812, 818, 823, 833, 834, 839, 855, 862, 866, 880], "mag": [1, 5, 7, 8, 9, 12, 13, 21, 22, 26, 28, 31, 32, 33, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 69, 74, 76, 80, 81, 82, 87, 93, 94, 104, 107, 109, 116, 119, 120, 121, 123, 124, 132, 141, 143, 146, 147, 151, 153, 157, 158, 159, 163, 167, 170, 171, 173, 177, 178, 179, 180, 181, 182, 184, 185, 186, 192, 196, 199, 201, 203, 205, 206, 207, 209, 210, 215, 221, 222, 231, 234, 236, 239, 256, 259, 261, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 297, 298, 311, 318, 319, 338, 354, 358, 359, 369, 370, 371, 373, 410, 417, 419, 453, 454, 473, 475, 476, 478, 479, 514, 536, 555, 556, 557, 558, 563, 568, 570, 571, 572, 574, 575, 577, 641, 686, 700, 702, 703, 704, 771, 772, 778, 779, 780, 782, 784, 786, 787, 788, 791, 801, 803, 804, 808, 809, 810, 835, 855, 862, 880], "4e": [1, 9, 28, 31, 42, 45, 69, 78, 82, 104, 107, 121, 132, 153, 163, 178, 181, 186, 192, 196, 205, 222, 223, 231, 259, 264, 265, 274, 359, 478, 479, 558, 574, 575, 686, 778, 801, 855], "12": [1, 7, 9, 11, 12, 13, 18, 19, 21, 24, 28, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 49, 56, 59, 64, 69, 70, 72, 76, 80, 81, 83, 85, 101, 103, 104, 107, 108, 109, 112, 113, 114, 121, 127, 132, 135, 138, 146, 147, 152, 153, 162, 163, 167, 169, 170, 172, 173, 176, 178, 180, 181, 184, 186, 188, 192, 195, 196, 199, 201, 202, 203, 204, 205, 207, 209, 210, 212, 214, 215, 217, 221, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 244, 258, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 297, 305, 309, 313, 335, 347, 351, 352, 354, 359, 360, 380, 393, 416, 432, 451, 453, 476, 478, 479, 490, 520, 523, 525, 558, 569, 570, 571, 574, 575, 586, 588, 653, 686, 700, 702, 703, 704, 728, 731, 766, 778, 780, 785, 797, 801, 804, 855, 856, 859, 862, 865], "eog": [1, 4, 8, 9, 11, 12, 14, 15, 16, 27, 28, 32, 33, 42, 45, 46, 61, 69, 71, 74, 76, 77, 81, 82, 83, 85, 88, 90, 93, 94, 96, 97, 100, 104, 107, 108, 109, 110, 113, 117, 127, 128, 138, 141, 142, 146, 147, 150, 152, 153, 167, 168, 169, 170, 173, 178, 181, 190, 192, 196, 200, 201, 203, 206, 208, 210, 211, 212, 215, 216, 217, 218, 221, 223, 228, 229, 230, 231, 234, 236, 240, 259, 264, 265, 266, 267, 269, 274, 311, 359, 373, 443, 451, 478, 479, 486, 488, 489, 490, 493, 494, 495, 500, 504, 549, 555, 557, 558, 571, 574, 575, 579, 582, 598, 603, 612, 652, 653, 686, 700, 702, 703, 704, 778, 779, 794, 799, 801, 835, 855, 856, 857, 862, 865, 866, 880], "250e": [1, 32, 145, 167, 192, 204, 207, 259, 264, 265, 359, 558, 574, 575, 686], "6": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 73, 75, 76, 78, 80, 81, 82, 83, 84, 85, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 124, 127, 130, 131, 133, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 165, 167, 169, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 243, 244, 256, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 300, 314, 335, 359, 380, 386, 410, 412, 415, 417, 445, 446, 448, 449, 478, 479, 525, 557, 558, 567, 572, 573, 574, 575, 586, 590, 641, 653, 687, 688, 690, 691, 700, 702, 703, 704, 716, 726, 727, 728, 730, 731, 763, 764, 765, 778, 779, 780, 784, 787, 791, 793, 800, 801, 803, 807, 808, 810, 837, 838, 845, 855, 856, 862, 865], "data_path": [1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 264, 265, 266, 267, 274, 385, 478, 479, 839, 856, 862, 870, 880], "raw_path": [1, 173, 185], "meg": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 127, 129, 130, 131, 132, 134, 136, 137, 141, 142, 143, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 161, 163, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 193, 194, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 223, 228, 229, 230, 231, 234, 235, 236, 239, 240, 244, 256, 259, 261, 264, 265, 266, 267, 268, 269, 273, 275, 277, 284, 285, 297, 298, 300, 310, 315, 318, 319, 320, 325, 327, 329, 337, 341, 353, 354, 355, 356, 357, 358, 359, 364, 369, 370, 371, 373, 392, 410, 412, 417, 418, 426, 431, 451, 453, 454, 461, 467, 473, 475, 476, 478, 479, 481, 485, 489, 491, 497, 498, 499, 502, 508, 510, 517, 521, 524, 525, 526, 536, 537, 539, 540, 552, 555, 556, 557, 558, 560, 563, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 580, 584, 588, 589, 594, 596, 603, 609, 613, 614, 617, 618, 620, 635, 641, 652, 653, 657, 660, 662, 665, 668, 686, 687, 688, 690, 691, 695, 700, 702, 703, 704, 708, 709, 710, 711, 713, 730, 731, 734, 735, 748, 761, 764, 765, 771, 772, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 790, 791, 792, 799, 800, 802, 803, 808, 810, 815, 835, 836, 839, 846, 851, 854, 855, 859, 865, 866, 870, 880], "subj001_somatosensory_20111109_01_aux": [1, 119], "f": [1, 5, 8, 9, 10, 18, 19, 21, 22, 27, 28, 29, 32, 33, 39, 40, 41, 46, 47, 60, 63, 70, 71, 79, 83, 86, 90, 92, 94, 98, 102, 104, 107, 109, 111, 112, 113, 114, 115, 119, 126, 127, 135, 136, 142, 145, 150, 151, 152, 158, 159, 160, 161, 166, 168, 171, 173, 177, 183, 192, 195, 196, 199, 200, 202, 205, 207, 209, 210, 211, 217, 221, 222, 223, 226, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240, 241, 244, 256, 258, 261, 264, 265, 266, 267, 269, 273, 288, 297, 302, 318, 338, 353, 387, 449, 451, 478, 479, 524, 555, 567, 615, 656, 680, 681, 682, 683, 686, 688, 691, 703, 716, 726, 730, 735, 769, 772, 779, 835, 845, 847, 855, 856, 862, 880], "d": [1, 4, 7, 11, 12, 15, 19, 21, 22, 26, 34, 39, 41, 46, 50, 52, 57, 59, 65, 72, 80, 81, 82, 84, 93, 94, 100, 101, 109, 111, 113, 118, 119, 120, 123, 126, 127, 129, 135, 136, 137, 142, 158, 159, 160, 161, 172, 180, 181, 183, 184, 185, 186, 192, 195, 202, 208, 209, 217, 223, 226, 230, 234, 235, 236, 239, 241, 244, 256, 258, 261, 264, 265, 266, 267, 269, 273, 288, 297, 298, 302, 321, 354, 387, 418, 473, 478, 479, 491, 495, 524, 525, 619, 645, 693, 694, 702, 704, 719, 735, 749, 788, 801, 847, 856, 857, 862, 868, 880], "crop": [1, 5, 8, 9, 10, 12, 21, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 45, 46, 51, 59, 74, 76, 81, 82, 83, 84, 109, 112, 116, 127, 138, 141, 142, 143, 147, 150, 152, 168, 169, 173, 177, 180, 181, 182, 184, 185, 186, 199, 200, 203, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 223, 227, 228, 234, 236, 239, 240, 258, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 568, 589, 602, 700, 703, 857, 880], "half": [1, 70, 202, 203, 236, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 341, 412, 446, 448, 449, 478, 479, 576, 687, 688, 690, 691, 695, 712, 714, 716, 726, 728, 730, 731, 748, 772, 778, 780, 801, 806, 811, 839, 862, 880], "length": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 111, 112, 113, 114, 115, 121, 133, 137, 142, 144, 145, 150, 152, 173, 176, 192, 196, 199, 201, 203, 204, 205, 206, 207, 210, 211, 212, 215, 218, 221, 227, 231, 239, 256, 259, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 287, 313, 359, 393, 410, 412, 415, 416, 417, 418, 421, 422, 425, 446, 448, 449, 468, 476, 477, 478, 479, 528, 540, 542, 557, 558, 560, 566, 574, 575, 588, 595, 618, 619, 640, 650, 666, 680, 681, 685, 686, 700, 702, 703, 704, 705, 706, 707, 708, 710, 712, 715, 718, 719, 723, 727, 728, 729, 730, 731, 732, 738, 748, 763, 764, 765, 772, 779, 780, 782, 784, 787, 789, 791, 800, 803, 806, 807, 808, 809, 810, 811, 835, 855, 856, 862, 880], "save": [1, 5, 7, 9, 11, 29, 30, 32, 34, 41, 43, 44, 60, 61, 70, 74, 79, 108, 109, 110, 113, 115, 135, 136, 137, 143, 144, 151, 152, 157, 158, 159, 161, 162, 163, 169, 171, 178, 181, 182, 184, 189, 191, 192, 200, 201, 203, 205, 207, 208, 210, 216, 217, 218, 223, 230, 234, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 288, 312, 313, 338, 380, 385, 414, 440, 441, 442, 443, 469, 477, 478, 479, 495, 497, 502, 531, 532, 547, 557, 558, 601, 613, 614, 617, 618, 622, 625, 628, 639, 690, 691, 700, 701, 702, 703, 704, 720, 721, 733, 735, 748, 822, 826, 827, 829, 837, 839, 843, 857, 859, 862, 865, 866, 880], "memori": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 256, 259, 264, 265, 266, 267, 282, 291, 292, 295, 330, 359, 361, 363, 374, 412, 419, 422, 423, 427, 448, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518, 527, 528, 529, 531, 532, 538, 560, 588, 643, 649, 687, 688, 690, 691, 706, 709, 725, 727, 728, 729, 730, 731, 732, 748, 782, 837, 838, 845, 857, 866, 868, 880], "120": [1, 5, 7, 24, 33, 35, 38, 42, 45, 59, 79, 81, 82, 91, 108, 133, 135, 136, 143, 152, 161, 170, 177, 182, 192, 199, 201, 203, 205, 209, 212, 231, 240, 244, 256, 264, 265, 433, 478, 479, 568, 572, 778, 801], "load_data": [1, 4, 8, 9, 12, 21, 34, 42, 70, 71, 74, 75, 76, 81, 82, 83, 84, 99, 109, 112, 113, 115, 137, 147, 152, 160, 167, 169, 173, 183, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 240, 264, 265, 266, 267, 478, 479, 856, 862, 870, 880], "plot": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 49, 51, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 122, 129, 130, 131, 132, 134, 135, 136, 138, 141, 144, 145, 146, 147, 150, 152, 154, 155, 157, 159, 160, 161, 166, 167, 168, 169, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 219, 220, 221, 223, 226, 227, 231, 234, 235, 236, 239, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 312, 313, 321, 323, 324, 328, 338, 354, 364, 373, 410, 414, 417, 425, 428, 430, 436, 439, 451, 453, 470, 478, 479, 485, 489, 491, 494, 502, 517, 521, 522, 524, 525, 534, 535, 536, 537, 539, 554, 555, 557, 558, 572, 596, 609, 610, 615, 618, 620, 623, 628, 633, 640, 649, 686, 700, 701, 702, 703, 704, 716, 726, 748, 749, 750, 751, 753, 757, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 818, 835, 838, 839, 843, 855, 856, 857, 860, 862, 863, 866, 868, 869, 880], "set": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 151, 153, 156, 157, 159, 160, 161, 162, 163, 166, 167, 169, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 217, 221, 222, 223, 226, 229, 240, 241, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 287, 288, 297, 298, 300, 302, 303, 317, 325, 330, 341, 354, 355, 357, 359, 360, 361, 365, 369, 375, 376, 377, 378, 379, 380, 382, 383, 385, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 433, 434, 435, 438, 439, 440, 443, 444, 445, 449, 451, 453, 466, 467, 468, 469, 475, 478, 479, 480, 486, 493, 494, 497, 500, 502, 511, 513, 515, 517, 519, 520, 521, 522, 523, 524, 527, 528, 529, 531, 532, 536, 541, 542, 544, 545, 546, 549, 551, 557, 558, 559, 560, 561, 563, 570, 571, 572, 574, 575, 577, 589, 601, 606, 612, 613, 617, 618, 619, 622, 625, 628, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 665, 677, 678, 682, 684, 686, 687, 688, 689, 690, 691, 695, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 716, 718, 719, 726, 727, 728, 729, 730, 731, 735, 738, 739, 741, 746, 747, 748, 751, 765, 767, 772, 775, 776, 778, 780, 783, 784, 785, 786, 787, 791, 793, 794, 795, 800, 801, 802, 803, 804, 806, 808, 810, 811, 812, 813, 814, 817, 820, 835, 837, 838, 843, 844, 846, 857, 859, 861, 862, 865, 866, 869, 880], "channel": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 142, 143, 145, 147, 151, 153, 157, 158, 159, 160, 163, 166, 167, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 195, 196, 199, 203, 204, 206, 207, 209, 210, 212, 213, 214, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 239, 240, 244, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 278, 279, 280, 281, 284, 285, 297, 298, 308, 310, 311, 341, 343, 345, 346, 349, 353, 354, 355, 356, 357, 358, 359, 369, 370, 371, 373, 381, 410, 412, 417, 418, 419, 421, 423, 426, 431, 435, 440, 442, 443, 448, 449, 451, 452, 453, 454, 462, 467, 470, 473, 475, 476, 477, 478, 479, 486, 488, 489, 490, 491, 493, 494, 495, 497, 500, 501, 502, 504, 514, 517, 521, 526, 536, 549, 550, 551, 552, 554, 555, 556, 557, 558, 560, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 587, 588, 589, 592, 593, 594, 596, 599, 602, 603, 612, 613, 614, 615, 617, 618, 619, 620, 635, 636, 641, 642, 645, 650, 652, 653, 654, 668, 680, 686, 687, 688, 690, 691, 695, 700, 701, 702, 703, 704, 708, 709, 710, 711, 713, 717, 723, 727, 730, 731, 732, 748, 761, 764, 765, 768, 769, 770, 772, 773, 774, 777, 778, 779, 780, 782, 784, 785, 786, 787, 788, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804, 808, 809, 810, 818, 820, 835, 837, 839, 843, 846, 847, 857, 859, 861, 866, 869, 870, 880], "set_channel_typ": [1, 128, 141, 150, 152, 192, 215, 264, 265, 266, 267, 443, 478, 479, 880], "eeg058": 1, "set_eeg_refer": [1, 29, 67, 71, 93, 94, 152, 160, 163, 168, 183, 190, 204, 206, 208, 222, 241, 264, 265, 266, 267, 478, 479, 557, 642, 664, 866, 870, 880], "averag": [1, 2, 4, 5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 68, 69, 71, 72, 73, 76, 78, 80, 81, 82, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 107, 108, 110, 112, 113, 116, 117, 119, 120, 121, 124, 127, 129, 132, 133, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 151, 153, 154, 155, 159, 160, 163, 166, 167, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 256, 257, 261, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 286, 353, 354, 356, 372, 388, 410, 417, 424, 429, 431, 444, 451, 467, 478, 479, 502, 512, 513, 526, 527, 528, 529, 531, 532, 538, 541, 542, 557, 558, 562, 563, 565, 570, 571, 572, 574, 577, 578, 581, 584, 614, 618, 619, 642, 645, 656, 664, 700, 701, 702, 703, 704, 718, 719, 727, 728, 729, 730, 731, 732, 748, 772, 780, 782, 783, 787, 791, 792, 799, 800, 802, 803, 808, 810, 826, 835, 855, 856, 859, 865, 866, 868, 880], "project": [1, 4, 5, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 83, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 240, 241, 244, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 280, 284, 285, 297, 298, 300, 341, 343, 347, 354, 355, 356, 357, 359, 369, 371, 387, 418, 430, 451, 453, 454, 477, 478, 479, 498, 518, 520, 522, 524, 525, 526, 536, 557, 558, 569, 570, 571, 573, 577, 584, 588, 596, 603, 611, 620, 626, 641, 642, 645, 664, 677, 695, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 748, 764, 765, 770, 773, 780, 782, 784, 786, 787, 791, 799, 800, 801, 802, 804, 806, 811, 817, 818, 820, 831, 835, 839, 844, 846, 851, 855, 856, 858, 868, 869, 870, 880], "true": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 84, 86, 87, 88, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 222, 223, 226, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 288, 297, 298, 300, 302, 303, 306, 307, 308, 309, 312, 313, 314, 317, 320, 321, 322, 323, 325, 338, 340, 341, 342, 343, 344, 347, 354, 358, 359, 360, 361, 363, 364, 369, 370, 371, 375, 377, 378, 379, 380, 382, 383, 385, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 428, 429, 431, 432, 435, 439, 440, 441, 442, 443, 444, 445, 448, 449, 451, 453, 454, 455, 458, 463, 467, 468, 469, 470, 472, 473, 475, 476, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 518, 519, 521, 523, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 538, 540, 541, 542, 543, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 567, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 584, 586, 588, 603, 611, 614, 615, 618, 623, 631, 633, 636, 639, 642, 644, 645, 647, 648, 649, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 670, 674, 677, 678, 681, 682, 684, 687, 688, 690, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 709, 710, 712, 716, 717, 718, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 743, 746, 748, 753, 756, 757, 761, 762, 764, 765, 766, 767, 769, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 816, 818, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 837, 839, 855, 856, 859, 862, 880], "show": [1, 4, 7, 8, 10, 12, 13, 14, 15, 16, 19, 22, 26, 27, 28, 29, 31, 32, 35, 37, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 58, 59, 60, 63, 68, 69, 71, 73, 74, 77, 78, 79, 85, 97, 99, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 156, 157, 158, 160, 161, 167, 169, 170, 171, 173, 177, 179, 180, 181, 182, 183, 191, 192, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 215, 217, 218, 221, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 261, 262, 263, 264, 265, 266, 267, 269, 272, 273, 277, 278, 279, 280, 307, 309, 312, 313, 410, 417, 451, 469, 470, 478, 479, 509, 549, 555, 557, 558, 572, 577, 579, 699, 700, 701, 702, 704, 716, 726, 748, 756, 757, 764, 765, 766, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 817, 835, 837, 839, 844, 847, 855, 862, 868, 880], "power": [1, 12, 21, 27, 32, 36, 38, 56, 60, 68, 71, 82, 83, 105, 106, 112, 113, 114, 115, 121, 128, 133, 138, 146, 147, 150, 151, 163, 166, 167, 173, 181, 184, 192, 195, 201, 202, 206, 209, 212, 218, 221, 224, 225, 227, 231, 232, 233, 239, 244, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 278, 279, 280, 288, 289, 290, 291, 294, 297, 298, 318, 353, 354, 358, 359, 410, 412, 415, 417, 418, 421, 423, 444, 446, 448, 449, 450, 451, 478, 479, 484, 514, 516, 521, 524, 525, 526, 531, 532, 536, 539, 541, 542, 549, 554, 555, 558, 607, 615, 620, 622, 635, 648, 654, 665, 680, 681, 682, 683, 684, 687, 688, 689, 690, 691, 700, 701, 702, 703, 704, 709, 718, 719, 727, 728, 729, 730, 731, 732, 742, 748, 764, 771, 772, 773, 779, 780, 782, 785, 787, 788, 793, 799, 802, 808, 816, 835, 839, 856, 859, 861, 865, 880], "line": [1, 70, 81, 82, 101, 109, 120, 121, 123, 127, 137, 138, 141, 142, 145, 152, 156, 157, 159, 161, 163, 170, 172, 173, 178, 184, 191, 192, 202, 204, 207, 208, 209, 210, 211, 215, 218, 228, 229, 240, 241, 244, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 335, 341, 347, 410, 417, 469, 478, 479, 509, 515, 557, 558, 572, 595, 603, 615, 622, 631, 634, 700, 702, 704, 748, 756, 761, 764, 765, 772, 773, 778, 779, 780, 782, 784, 786, 787, 788, 790, 791, 794, 795, 796, 799, 800, 801, 802, 803, 805, 806, 807, 808, 810, 811, 828, 833, 837, 838, 842, 844, 846, 851, 855, 856, 857, 859, 862, 870, 880], "interfer": [1, 123, 137, 199, 200, 203, 208, 209, 210, 212, 217, 244, 256, 588, 835, 856, 859], "remov": [1, 7, 16, 18, 21, 27, 28, 31, 32, 35, 42, 51, 58, 59, 67, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 85, 90, 93, 99, 103, 109, 112, 113, 119, 127, 132, 135, 137, 141, 142, 143, 144, 147, 150, 151, 152, 158, 159, 161, 162, 163, 167, 168, 169, 171, 173, 177, 178, 181, 182, 183, 184, 185, 192, 196, 199, 200, 201, 202, 203, 204, 207, 208, 210, 212, 215, 217, 218, 223, 228, 229, 230, 231, 239, 241, 244, 256, 258, 261, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 288, 302, 312, 328, 338, 347, 354, 363, 364, 416, 418, 422, 433, 449, 453, 462, 475, 476, 478, 479, 480, 493, 498, 524, 555, 556, 557, 558, 559, 573, 577, 595, 596, 603, 609, 618, 620, 623, 642, 645, 664, 666, 700, 702, 703, 704, 735, 748, 769, 785, 801, 817, 818, 835, 839, 847, 856, 861, 862, 865, 866, 868, 880], "compute_psd": [1, 71, 74, 109, 129, 133, 138, 141, 143, 144, 167, 168, 184, 192, 199, 201, 203, 207, 209, 211, 212, 218, 239, 240, 241, 264, 265, 266, 267, 415, 478, 479, 558, 702, 704, 718, 780, 791, 793, 802, 880], "60": [1, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 29, 30, 31, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 68, 69, 70, 72, 73, 74, 76, 78, 81, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 114, 116, 117, 119, 120, 121, 123, 124, 127, 130, 131, 132, 133, 135, 137, 138, 141, 142, 144, 145, 150, 151, 152, 153, 160, 167, 168, 169, 170, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 222, 223, 226, 227, 229, 230, 231, 234, 236, 239, 256, 449, 478, 479, 586, 789, 856, 880], "fals": [1, 4, 5, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 40, 41, 42, 44, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 83, 84, 86, 88, 90, 94, 96, 97, 99, 100, 101, 104, 107, 108, 109, 110, 112, 114, 115, 118, 119, 120, 123, 124, 126, 127, 129, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 161, 163, 167, 168, 169, 170, 171, 172, 173, 177, 179, 181, 182, 183, 184, 186, 189, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 236, 239, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 291, 292, 295, 297, 298, 300, 302, 303, 307, 308, 309, 312, 313, 314, 317, 320, 322, 323, 326, 340, 342, 344, 347, 354, 359, 360, 361, 363, 364, 369, 372, 375, 377, 378, 379, 380, 382, 383, 385, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 415, 416, 417, 418, 424, 428, 429, 431, 435, 440, 441, 442, 443, 444, 445, 451, 454, 458, 463, 468, 469, 470, 472, 473, 475, 476, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 518, 521, 523, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 538, 541, 542, 543, 549, 550, 551, 553, 554, 555, 556, 557, 558, 563, 570, 571, 572, 574, 575, 577, 578, 579, 583, 584, 586, 588, 589, 592, 608, 611, 614, 615, 618, 625, 630, 631, 633, 634, 636, 638, 639, 642, 645, 646, 647, 649, 655, 656, 657, 658, 659, 660, 661, 662, 667, 673, 676, 677, 678, 681, 684, 687, 688, 690, 691, 696, 697, 699, 700, 701, 702, 703, 704, 707, 710, 712, 716, 717, 718, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 743, 746, 748, 757, 761, 762, 764, 765, 766, 769, 772, 773, 776, 778, 779, 780, 782, 784, 786, 787, 789, 791, 793, 795, 797, 800, 801, 802, 803, 804, 806, 807, 808, 810, 811, 814, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 837, 862, 865, 880], "notch_filt": [1, 5, 82, 137, 168, 192, 203, 210, 212, 264, 265, 266, 267, 448, 478, 479, 870, 880], "arang": [1, 4, 8, 9, 15, 19, 43, 45, 68, 82, 90, 92, 94, 95, 107, 112, 114, 120, 127, 167, 192, 195, 196, 202, 211, 212, 221, 223, 226, 228, 229, 230, 231, 235, 236, 241, 270, 277, 449, 466, 478, 479, 495, 597, 692, 716, 726, 727, 728, 730, 731], "181": [1, 35, 126, 170, 192, 226, 230, 231, 244, 665, 686], "fir_design": [1, 7, 8, 9, 11, 13, 14, 15, 16, 18, 76, 88, 99, 121, 133, 192, 202, 205, 241, 264, 265, 266, 267, 412, 421, 446, 448, 449, 478, 479, 880], "firwin": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 192, 196, 202, 203, 204, 205, 210, 211, 212, 231, 241, 264, 265, 266, 267, 412, 421, 446, 448, 449, 478, 479, 880], "event": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 32, 33, 34, 42, 45, 46, 49, 61, 70, 71, 72, 73, 74, 77, 80, 81, 82, 83, 84, 85, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 117, 121, 128, 132, 136, 137, 141, 142, 143, 144, 146, 147, 150, 153, 154, 155, 163, 166, 170, 174, 175, 178, 181, 183, 184, 185, 186, 189, 190, 192, 196, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 215, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 256, 257, 258, 259, 264, 265, 266, 267, 269, 274, 283, 287, 314, 353, 354, 361, 362, 363, 368, 393, 411, 426, 431, 433, 434, 439, 451, 452, 467, 478, 479, 486, 493, 494, 495, 500, 502, 519, 523, 548, 549, 553, 555, 558, 559, 560, 561, 566, 570, 571, 574, 575, 578, 579, 580, 581, 582, 602, 612, 613, 614, 615, 645, 650, 679, 686, 700, 702, 703, 748, 749, 772, 778, 779, 781, 795, 801, 809, 817, 820, 825, 835, 855, 856, 859, 862, 865, 866, 870, 880], "find_ev": [1, 5, 7, 10, 32, 33, 34, 42, 45, 46, 49, 71, 72, 73, 80, 84, 90, 93, 95, 99, 107, 108, 110, 113, 141, 142, 143, 150, 153, 163, 167, 169, 173, 178, 181, 183, 184, 186, 192, 196, 200, 203, 204, 205, 207, 212, 216, 222, 223, 228, 239, 240, 269, 436, 452, 486, 493, 500, 519, 553, 602, 615, 835, 855, 862, 866, 870, 880], "stim_channel": [1, 5, 7, 42, 46, 80, 107, 108, 110, 113, 138, 141, 143, 150, 153, 167, 169, 178, 192, 200, 205, 207, 216, 228, 239, 240, 257, 346, 451, 452, 478, 479, 486, 493, 500, 580, 880], "uppt001": [1, 7, 192], "pick": [1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 70, 72, 73, 74, 76, 78, 81, 82, 83, 86, 88, 90, 92, 94, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 115, 117, 119, 120, 121, 127, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 158, 159, 161, 163, 167, 170, 171, 173, 178, 179, 180, 181, 182, 183, 185, 192, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 215, 218, 221, 222, 223, 228, 229, 230, 231, 234, 236, 239, 240, 259, 261, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 278, 279, 280, 287, 297, 298, 310, 313, 314, 317, 324, 327, 329, 359, 369, 412, 418, 426, 431, 435, 448, 449, 478, 479, 549, 550, 551, 552, 555, 556, 557, 558, 560, 573, 574, 575, 580, 584, 594, 596, 603, 668, 686, 695, 700, 701, 702, 703, 704, 708, 709, 710, 711, 713, 717, 730, 731, 748, 762, 766, 770, 772, 778, 779, 782, 784, 785, 791, 792, 793, 795, 797, 799, 802, 804, 806, 811, 835, 839, 855, 862, 865, 866, 880], "pick_typ": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 28, 31, 34, 35, 40, 45, 46, 49, 51, 58, 59, 68, 69, 71, 72, 74, 83, 88, 90, 92, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 113, 119, 127, 133, 137, 141, 142, 150, 151, 167, 169, 170, 171, 173, 177, 182, 183, 196, 199, 200, 201, 203, 204, 205, 206, 207, 211, 212, 215, 223, 228, 229, 230, 231, 234, 236, 240, 241, 264, 265, 266, 267, 478, 479, 549, 700, 702, 703, 704, 839, 862, 866, 870, 880], "info": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 79, 80, 81, 82, 83, 84, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 133, 135, 136, 137, 138, 141, 143, 145, 147, 150, 151, 152, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 273, 274, 275, 277, 282, 284, 285, 297, 298, 299, 305, 306, 310, 311, 313, 317, 318, 319, 320, 324, 326, 327, 329, 340, 342, 344, 349, 354, 358, 359, 365, 369, 370, 371, 373, 410, 412, 417, 418, 419, 421, 426, 429, 431, 435, 440, 441, 442, 443, 446, 448, 449, 453, 454, 461, 462, 470, 473, 475, 476, 477, 478, 479, 480, 483, 485, 497, 514, 517, 520, 521, 522, 524, 526, 536, 549, 552, 554, 555, 556, 557, 558, 560, 562, 569, 573, 574, 575, 577, 580, 584, 588, 592, 593, 594, 596, 603, 606, 613, 617, 635, 636, 641, 642, 645, 647, 651, 652, 653, 654, 664, 665, 668, 686, 700, 701, 702, 703, 704, 708, 709, 710, 711, 713, 731, 737, 743, 746, 748, 761, 764, 765, 768, 769, 772, 773, 774, 778, 779, 782, 783, 784, 785, 788, 790, 795, 797, 800, 801, 802, 804, 810, 818, 826, 835, 837, 839, 842, 844, 855, 856, 857, 859, 862, 868, 870, 880], "eeg": [1, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 62, 63, 64, 66, 68, 69, 72, 73, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 236, 239, 240, 244, 256, 259, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 297, 298, 300, 302, 305, 306, 310, 311, 312, 314, 316, 318, 319, 323, 324, 326, 327, 328, 329, 330, 331, 334, 335, 337, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 369, 370, 371, 373, 388, 402, 403, 410, 412, 414, 417, 418, 419, 425, 426, 429, 431, 434, 439, 442, 443, 451, 453, 454, 467, 469, 473, 475, 476, 478, 479, 484, 486, 488, 489, 490, 493, 494, 495, 496, 500, 502, 504, 505, 507, 514, 517, 521, 522, 524, 525, 526, 536, 537, 539, 540, 549, 555, 556, 557, 558, 559, 560, 563, 566, 567, 570, 571, 572, 573, 574, 575, 579, 580, 584, 587, 594, 596, 603, 607, 609, 611, 612, 614, 615, 618, 619, 620, 630, 633, 641, 642, 645, 649, 653, 660, 665, 668, 686, 687, 688, 690, 691, 695, 700, 702, 703, 704, 708, 709, 710, 711, 713, 730, 731, 740, 748, 764, 765, 768, 772, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 792, 798, 799, 800, 801, 802, 803, 804, 808, 809, 810, 815, 816, 820, 835, 836, 846, 851, 854, 856, 859, 865, 866, 869, 870, 880], "stim": [1, 8, 9, 11, 14, 15, 16, 28, 42, 45, 46, 65, 69, 71, 72, 88, 90, 99, 100, 104, 107, 108, 110, 141, 142, 143, 150, 152, 167, 170, 173, 183, 189, 192, 196, 203, 204, 205, 215, 216, 223, 228, 229, 230, 240, 241, 256, 257, 264, 265, 266, 267, 269, 274, 311, 349, 373, 443, 451, 452, 478, 479, 486, 493, 500, 502, 555, 558, 580, 615, 650, 700, 702, 703, 704, 778, 801, 835, 862, 865, 866, 880], "exclud": [1, 5, 7, 8, 9, 11, 13, 14, 15, 16, 24, 26, 28, 31, 34, 35, 40, 41, 43, 45, 49, 50, 51, 58, 59, 64, 68, 69, 70, 71, 74, 78, 83, 86, 88, 92, 96, 97, 100, 104, 107, 108, 109, 110, 111, 112, 133, 143, 145, 151, 157, 158, 159, 167, 170, 173, 177, 178, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 205, 206, 208, 218, 223, 228, 229, 230, 234, 236, 241, 256, 261, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 305, 306, 319, 326, 359, 365, 369, 371, 418, 429, 478, 479, 486, 493, 495, 500, 522, 549, 550, 551, 553, 555, 556, 557, 558, 559, 570, 571, 572, 577, 588, 603, 615, 620, 641, 645, 649, 687, 688, 690, 691, 700, 702, 703, 704, 708, 709, 710, 711, 717, 773, 782, 784, 785, 786, 792, 794, 795, 802, 855, 865, 866, 880], "bad": [1, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 49, 51, 58, 59, 64, 68, 69, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 85, 88, 90, 92, 93, 96, 97, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 127, 128, 136, 137, 138, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 163, 166, 167, 168, 169, 170, 171, 173, 177, 178, 181, 182, 183, 184, 185, 186, 192, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 240, 241, 256, 258, 259, 261, 264, 265, 266, 267, 269, 298, 310, 313, 314, 319, 326, 329, 359, 363, 369, 370, 371, 412, 426, 431, 439, 448, 449, 451, 467, 478, 479, 518, 536, 550, 551, 552, 555, 556, 557, 558, 560, 561, 562, 565, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 588, 589, 594, 596, 603, 615, 618, 641, 642, 645, 668, 686, 700, 702, 703, 704, 708, 709, 710, 711, 713, 731, 772, 773, 778, 779, 782, 784, 785, 786, 793, 797, 801, 802, 820, 835, 846, 857, 859, 865, 880], "epoch": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 27, 32, 33, 34, 36, 45, 46, 49, 56, 59, 61, 69, 70, 71, 72, 73, 78, 80, 83, 84, 88, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 121, 122, 128, 130, 132, 136, 137, 142, 149, 151, 163, 168, 169, 170, 171, 178, 180, 181, 182, 183, 184, 185, 186, 189, 192, 195, 196, 199, 200, 203, 206, 207, 210, 212, 216, 217, 222, 223, 227, 228, 229, 230, 239, 240, 241, 251, 256, 257, 258, 259, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 275, 278, 279, 280, 281, 291, 292, 295, 313, 314, 317, 353, 354, 355, 357, 358, 359, 361, 394, 410, 412, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 435, 436, 439, 440, 451, 469, 475, 478, 479, 484, 512, 517, 518, 523, 524, 525, 526, 527, 528, 529, 531, 532, 539, 541, 542, 553, 555, 557, 558, 559, 560, 566, 567, 570, 571, 574, 575, 576, 580, 587, 588, 603, 611, 612, 613, 614, 615, 622, 626, 642, 645, 654, 664, 685, 686, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 718, 727, 728, 729, 730, 731, 732, 748, 772, 777, 778, 779, 780, 791, 792, 793, 795, 799, 801, 802, 809, 835, 839, 856, 857, 859, 865, 866, 868, 870, 880], "baselin": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 69, 71, 72, 73, 74, 75, 78, 80, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 124, 127, 128, 132, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 161, 163, 166, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 207, 211, 212, 221, 223, 227, 228, 229, 230, 231, 234, 236, 240, 241, 244, 256, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 353, 354, 359, 380, 451, 478, 479, 518, 523, 541, 542, 558, 574, 575, 595, 611, 618, 619, 685, 700, 703, 772, 788, 792, 805, 808, 826, 835, 855, 859, 862, 865, 870, 874, 880], "none": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 70, 71, 73, 76, 78, 81, 82, 83, 84, 86, 87, 88, 90, 93, 94, 96, 97, 99, 100, 103, 104, 107, 109, 110, 112, 113, 114, 117, 119, 120, 121, 124, 127, 132, 135, 136, 137, 138, 142, 143, 144, 145, 146, 150, 151, 152, 153, 159, 160, 161, 162, 163, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 195, 196, 202, 203, 204, 205, 207, 208, 210, 211, 212, 217, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 321, 325, 326, 327, 328, 329, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 551, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 594, 595, 596, 597, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 679, 685, 686, 687, 688, 689, 690, 691, 692, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 718, 719, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 740, 743, 747, 748, 751, 753, 756, 757, 758, 760, 761, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 839, 855, 861, 862, 880], "preload": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 49, 67, 70, 71, 72, 73, 81, 82, 83, 84, 88, 99, 103, 107, 110, 112, 113, 114, 117, 121, 129, 133, 141, 142, 143, 145, 146, 147, 150, 152, 153, 160, 167, 168, 171, 173, 181, 183, 184, 185, 186, 189, 192, 196, 199, 201, 204, 205, 206, 207, 211, 215, 222, 223, 228, 229, 230, 231, 234, 236, 239, 240, 241, 256, 264, 265, 266, 267, 274, 347, 363, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 518, 570, 571, 574, 575, 611, 613, 617, 642, 645, 700, 702, 703, 704, 778, 801, 855, 856, 880], "physiolog": [1, 8, 42, 138, 203, 205, 208, 244, 264, 265, 266, 267, 380, 402, 403, 478, 479, 645, 856, 880], "artifact": [1, 7, 27, 32, 42, 70, 77, 83, 84, 85, 109, 110, 143, 145, 147, 150, 166, 167, 173, 184, 192, 201, 202, 206, 208, 210, 211, 213, 214, 217, 218, 244, 258, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 344, 345, 355, 356, 357, 358, 359, 363, 412, 416, 423, 451, 476, 478, 479, 491, 493, 506, 549, 552, 555, 557, 558, 562, 563, 565, 570, 571, 572, 574, 575, 578, 579, 580, 582, 588, 591, 595, 603, 652, 653, 700, 703, 704, 725, 727, 728, 730, 731, 764, 790, 792, 799, 800, 801, 816, 820, 856, 859, 862, 868, 869, 880], "eyeblink": [1, 571, 575], "heartbeat": [1, 83, 143, 147, 201, 205, 206, 207, 208, 210, 217, 570, 574, 578, 581], "usssp": [1, 11, 15, 18, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 69, 71, 73, 84, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 122, 130, 132, 141, 142, 143, 146, 147, 150, 152, 153, 163, 166, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 192, 199, 200, 201, 203, 204, 205, 208, 210, 213, 214, 215, 218, 222, 231, 234, 236, 259, 261, 264, 265, 266, 267, 268, 269, 273, 274, 275, 355, 356, 357, 451, 478, 479, 518, 552, 555, 557, 570, 571, 574, 575, 603, 611, 620, 626, 641, 702, 704, 780, 782, 784, 786, 787, 799, 800, 802, 820, 835, 859, 865, 868, 869, 880], "add_proj": [1, 2, 4, 5, 42, 92, 101, 109, 111, 141, 143, 147, 150, 163, 173, 185, 186, 192, 196, 199, 204, 206, 207, 211, 212, 215, 227, 264, 265, 266, 267, 274, 478, 479, 664], "compute_proj_evok": [1, 206, 355, 357, 870], "copi": [1, 2, 4, 5, 8, 9, 10, 12, 18, 19, 22, 27, 38, 45, 46, 47, 48, 49, 54, 58, 61, 67, 70, 73, 74, 78, 84, 107, 109, 114, 119, 127, 135, 137, 141, 142, 145, 150, 151, 152, 156, 162, 163, 167, 169, 170, 173, 177, 179, 186, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 217, 223, 227, 230, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 281, 287, 288, 302, 307, 309, 312, 317, 364, 370, 372, 377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 419, 432, 435, 448, 449, 478, 479, 524, 538, 550, 551, 554, 557, 558, 567, 570, 571, 576, 580, 584, 589, 603, 612, 639, 642, 645, 697, 700, 701, 702, 703, 704, 706, 708, 709, 710, 711, 712, 717, 734, 735, 839, 847, 857, 859, 862, 865, 866, 880], "apply_proj": [1, 71, 94, 143, 147, 150, 160, 168, 183, 206, 207, 208, 264, 265, 266, 267, 440, 441, 442, 443, 478, 479, 645, 801, 880], "fix": [1, 5, 22, 31, 40, 41, 45, 47, 48, 49, 54, 55, 58, 60, 80, 90, 100, 135, 141, 143, 159, 164, 165, 166, 169, 171, 177, 181, 196, 211, 212, 222, 244, 257, 262, 263, 266, 267, 268, 275, 297, 298, 308, 320, 354, 361, 364, 423, 451, 453, 455, 469, 473, 475, 476, 478, 515, 519, 521, 525, 526, 527, 528, 529, 536, 537, 540, 541, 542, 558, 562, 566, 586, 608, 620, 631, 641, 706, 709, 716, 726, 727, 728, 730, 731, 764, 783, 827, 828, 833, 837, 839, 844, 858, 859, 862, 865, 880], "preprocess": [1, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 68, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 88, 99, 112, 135, 138, 145, 147, 173, 185, 189, 192, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 214, 218, 258, 264, 265, 266, 267, 269, 274, 353, 410, 414, 417, 419, 431, 439, 451, 478, 479, 497, 499, 506, 552, 555, 613, 704, 748, 768, 772, 778, 781, 786, 790, 791, 792, 793, 794, 795, 801, 835, 846, 856, 857, 859, 862, 866, 868, 870, 880], "fix_stim_artifact": [1, 870, 880], "correct": [1, 4, 8, 9, 11, 12, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 69, 71, 72, 73, 74, 77, 78, 80, 83, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 127, 128, 131, 132, 136, 137, 138, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 157, 160, 161, 162, 163, 166, 167, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 256, 258, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 287, 309, 320, 353, 354, 359, 365, 410, 416, 417, 422, 429, 431, 449, 451, 460, 478, 479, 484, 486, 490, 493, 506, 507, 523, 526, 541, 542, 555, 557, 558, 559, 568, 569, 574, 575, 577, 588, 591, 595, 602, 608, 615, 618, 619, 637, 639, 655, 656, 657, 658, 659, 660, 661, 662, 678, 681, 684, 685, 686, 687, 688, 689, 700, 702, 703, 704, 712, 719, 772, 779, 780, 786, 787, 791, 792, 800, 802, 803, 805, 808, 826, 828, 835, 837, 839, 844, 855, 858, 859, 862, 874, 877, 880], "delai": [1, 4, 19, 192, 195, 206, 207, 211, 244, 257, 259, 264, 265, 266, 267, 416, 422, 427, 445, 446, 448, 449, 478, 479, 518, 611, 789, 856, 880], "due": [1, 5, 40, 43, 47, 81, 135, 169, 190, 191, 199, 201, 202, 206, 210, 211, 212, 215, 218, 222, 241, 260, 264, 265, 266, 267, 268, 270, 402, 409, 416, 427, 431, 444, 475, 476, 478, 479, 568, 569, 577, 584, 588, 602, 622, 628, 703, 748, 829, 835, 855, 859, 862, 880], "hardwar": [1, 167, 191, 201, 208, 257, 264, 265, 269, 375, 402, 478, 479, 558, 778, 795, 801, 835, 845, 862, 865, 880], "i": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 26, 27, 28, 31, 32, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 59, 60, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 87, 88, 90, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 123, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 170, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 241, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 296, 297, 298, 300, 302, 304, 306, 307, 308, 312, 314, 317, 318, 320, 322, 323, 324, 325, 327, 329, 330, 331, 337, 339, 341, 342, 343, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 466, 467, 468, 469, 470, 473, 475, 476, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 544, 545, 547, 548, 549, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 593, 595, 596, 597, 602, 603, 605, 606, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 623, 625, 628, 631, 634, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 716, 718, 719, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 738, 742, 743, 744, 746, 747, 748, 749, 751, 753, 756, 757, 758, 760, 761, 764, 765, 766, 769, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 825, 826, 828, 830, 833, 835, 838, 839, 840, 842, 844, 847, 850, 851, 853, 855, 856, 857, 858, 860, 861, 863, 864, 865, 866, 867, 868, 870, 880], "4": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 127, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 170, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 194, 195, 196, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 239, 240, 241, 243, 244, 256, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 297, 298, 305, 306, 312, 313, 314, 335, 338, 354, 380, 388, 410, 416, 417, 418, 423, 429, 433, 434, 445, 451, 453, 468, 475, 476, 478, 479, 515, 525, 532, 557, 558, 563, 565, 567, 570, 572, 579, 585, 587, 597, 603, 622, 641, 645, 649, 653, 660, 680, 681, 684, 688, 700, 702, 703, 704, 716, 719, 723, 726, 727, 728, 729, 730, 731, 732, 735, 736, 737, 738, 748, 751, 763, 764, 765, 767, 772, 778, 779, 780, 782, 784, 787, 788, 791, 798, 800, 801, 802, 803, 804, 806, 808, 810, 811, 812, 835, 837, 838, 844, 845, 855, 856, 859, 862, 865], "m": [1, 2, 4, 5, 8, 16, 18, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 69, 71, 72, 73, 78, 86, 87, 96, 97, 98, 99, 100, 101, 103, 105, 109, 110, 113, 114, 116, 119, 120, 123, 126, 127, 135, 136, 138, 141, 142, 144, 145, 146, 150, 151, 152, 157, 158, 159, 160, 162, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 195, 200, 201, 202, 205, 207, 209, 210, 212, 216, 217, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 244, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 300, 304, 305, 325, 330, 335, 337, 339, 341, 343, 344, 345, 347, 354, 359, 365, 373, 380, 387, 402, 403, 410, 412, 414, 416, 417, 418, 421, 431, 434, 446, 448, 449, 453, 471, 472, 475, 476, 478, 479, 481, 494, 514, 522, 525, 533, 536, 540, 557, 558, 560, 566, 567, 569, 572, 574, 575, 577, 586, 588, 593, 596, 612, 649, 653, 657, 660, 662, 665, 670, 671, 672, 674, 675, 681, 686, 687, 688, 690, 691, 695, 700, 702, 703, 704, 716, 726, 729, 732, 748, 751, 765, 772, 780, 782, 783, 784, 787, 788, 791, 800, 801, 803, 806, 808, 810, 811, 812, 816, 818, 835, 839, 846, 854, 856, 862, 865, 866, 880], "shift_tim": [1, 86, 141, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703, 880], "004": [1, 10, 32, 33, 44, 121, 128, 141, 143, 146, 150, 167, 170, 177, 204, 223, 244, 276, 360, 522, 748], "result": [1, 8, 9, 26, 29, 30, 45, 46, 55, 58, 60, 70, 80, 83, 90, 99, 101, 103, 107, 114, 126, 127, 134, 135, 137, 138, 145, 147, 150, 152, 156, 157, 158, 160, 161, 163, 167, 168, 171, 173, 177, 179, 189, 195, 196, 199, 202, 204, 205, 206, 207, 209, 215, 216, 218, 221, 223, 226, 227, 230, 231, 234, 235, 236, 244, 256, 258, 259, 264, 265, 266, 267, 269, 271, 272, 275, 276, 278, 279, 280, 289, 291, 298, 314, 317, 318, 353, 354, 359, 361, 363, 387, 389, 409, 411, 412, 426, 435, 444, 450, 468, 473, 475, 476, 478, 479, 495, 511, 518, 522, 525, 527, 528, 529, 531, 536, 537, 544, 558, 563, 569, 574, 575, 577, 586, 588, 605, 611, 619, 642, 652, 653, 654, 663, 664, 666, 685, 686, 687, 688, 689, 690, 691, 692, 700, 702, 703, 704, 748, 756, 772, 778, 779, 801, 839, 844, 855, 856, 859, 862, 865, 880], "time_unit": [1, 11, 14, 35, 40, 42, 43, 51, 59, 61, 69, 71, 86, 92, 93, 99, 100, 101, 121, 151, 152, 153, 163, 176, 178, 179, 184, 185, 186, 192, 196, 222, 227, 228, 229, 263, 266, 267, 271, 272, 275, 278, 279, 280, 772, 782, 784, 787, 788, 806, 811, 880], "": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 58, 59, 61, 63, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 255, 256, 258, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 288, 290, 297, 298, 302, 303, 304, 321, 328, 353, 354, 357, 358, 360, 366, 367, 384, 385, 387, 402, 403, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 431, 434, 440, 441, 442, 443, 444, 446, 448, 449, 450, 469, 472, 475, 476, 478, 479, 483, 486, 493, 495, 500, 501, 509, 513, 517, 520, 522, 524, 525, 536, 540, 541, 542, 557, 558, 559, 560, 569, 575, 576, 579, 580, 587, 588, 592, 595, 618, 619, 628, 630, 631, 632, 633, 637, 638, 640, 642, 645, 646, 648, 649, 650, 657, 660, 662, 677, 686, 687, 688, 689, 690, 691, 695, 696, 698, 700, 701, 702, 703, 704, 712, 716, 718, 719, 724, 726, 728, 729, 731, 732, 735, 740, 747, 748, 756, 757, 765, 766, 772, 774, 776, 778, 779, 782, 784, 785, 787, 788, 789, 791, 795, 801, 803, 804, 806, 808, 809, 810, 811, 812, 816, 829, 830, 835, 837, 839, 843, 845, 851, 854, 855, 856, 857, 859, 861, 862, 864, 865, 866, 867, 868], "topomap": [1, 19, 42, 73, 83, 87, 119, 143, 152, 171, 204, 207, 231, 240, 261, 264, 265, 266, 267, 273, 274, 312, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 778, 780, 782, 785, 787, 791, 798, 799, 800, 801, 802, 803, 804, 808, 810, 835, 880], "plot_topomap": [1, 15, 16, 18, 19, 21, 42, 70, 71, 80, 87, 100, 109, 142, 143, 145, 151, 152, 167, 171, 177, 178, 192, 199, 207, 211, 218, 231, 239, 240, 241, 261, 264, 265, 266, 267, 273, 478, 479, 558, 700, 702, 704, 768, 780, 785, 793, 870, 880], "time": [1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 65, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 142, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 191, 192, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 221, 222, 223, 226, 227, 230, 234, 235, 236, 239, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 296, 297, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 357, 359, 360, 361, 363, 373, 402, 410, 411, 412, 413, 416, 417, 419, 420, 421, 422, 423, 424, 426, 433, 434, 436, 438, 439, 444, 446, 448, 449, 451, 452, 453, 463, 468, 473, 474, 475, 476, 477, 478, 479, 491, 493, 498, 506, 511, 513, 519, 520, 524, 525, 526, 528, 529, 531, 532, 533, 536, 537, 539, 541, 542, 549, 553, 555, 557, 558, 560, 561, 562, 563, 566, 567, 568, 570, 571, 572, 574, 575, 576, 577, 579, 580, 586, 596, 602, 605, 609, 610, 614, 615, 618, 619, 620, 622, 628, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 674, 675, 676, 680, 685, 686, 687, 688, 689, 690, 691, 692, 693, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 716, 719, 725, 726, 727, 728, 729, 730, 731, 732, 747, 748, 752, 762, 765, 771, 772, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 795, 799, 800, 801, 802, 803, 806, 807, 808, 809, 810, 811, 812, 825, 835, 837, 838, 843, 845, 846, 851, 855, 856, 857, 859, 861, 862, 865, 866, 870, 880], "arraidirectori": [1, 12, 21, 33, 34, 81, 82, 94, 95, 116, 119, 123, 156, 157, 162, 167, 172, 173, 185, 192, 256, 262, 269, 270, 271, 274, 275, 278, 279, 280, 303, 307, 308, 309, 312, 360, 365, 366, 367, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 429, 460, 462, 466, 468, 469, 470, 471, 472, 485, 491, 504, 507, 511, 515, 517, 544, 584, 605, 619, 623, 625, 632, 638, 639, 640, 643, 648, 649, 663, 666, 677, 695, 696, 740, 748, 764, 766, 776, 806, 812, 830, 839, 842, 845, 855, 859, 880], "home": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 136, 138, 141, 142, 144, 145, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 167, 168, 169, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 196, 199, 203, 204, 205, 206, 207, 209, 210, 211, 215, 218, 222, 223, 227, 228, 229, 230, 231, 234, 236, 240, 264, 265, 372, 380, 478, 479, 778, 801, 838, 844, 880], "circleci": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 136, 138, 141, 142, 144, 145, 147, 150, 151, 152, 153, 157, 158, 159, 160, 163, 167, 168, 169, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 196, 199, 203, 204, 205, 206, 207, 209, 210, 211, 215, 218, 222, 223, 227, 228, 229, 230, 231, 234, 236, 240, 839], "mne_data": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 136, 138, 142, 144, 145, 147, 150, 151, 152, 153, 157, 158, 159, 160, 163, 167, 168, 169, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 196, 199, 203, 204, 205, 206, 207, 209, 210, 211, 215, 218, 222, 223, 227, 228, 229, 230, 231, 234, 236, 240, 377, 378, 379, 380, 382, 383, 385, 386, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 839, 859, 880], "data": [1, 2, 3, 6, 9, 10, 12, 14, 16, 17, 20, 22, 24, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 74, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 91, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 117, 118, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 139, 140, 144, 145, 146, 149, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 171, 172, 174, 175, 177, 180, 182, 183, 184, 185, 186, 187, 188, 194, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 210, 213, 214, 220, 224, 225, 226, 228, 229, 233, 237, 238, 240, 242, 243, 244, 251, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 309, 310, 311, 312, 313, 314, 316, 318, 320, 324, 326, 327, 328, 329, 330, 335, 337, 338, 339, 341, 343, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 369, 370, 371, 373, 377, 378, 379, 380, 381, 382, 383, 385, 386, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 433, 434, 436, 437, 438, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 462, 467, 469, 473, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 531, 532, 533, 536, 539, 540, 541, 542, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 582, 584, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 603, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 626, 628, 630, 632, 633, 642, 645, 648, 649, 650, 651, 652, 653, 654, 656, 658, 659, 660, 664, 666, 668, 672, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 727, 728, 729, 730, 731, 732, 736, 742, 743, 748, 752, 756, 761, 763, 764, 765, 766, 767, 769, 770, 772, 773, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 818, 820, 826, 833, 834, 835, 836, 839, 840, 846, 851, 854, 857, 860, 861, 866, 867, 868, 870, 875, 880], "res4": [1, 12, 21, 81, 82, 119, 123, 185, 192], "read": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 141, 142, 143, 144, 145, 147, 150, 152, 153, 157, 158, 159, 160, 161, 162, 163, 167, 168, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 221, 222, 223, 227, 228, 229, 230, 235, 240, 256, 257, 258, 259, 261, 264, 265, 266, 267, 269, 275, 277, 297, 298, 301, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 351, 354, 358, 359, 369, 370, 371, 373, 410, 417, 418, 442, 451, 452, 453, 454, 458, 460, 463, 469, 473, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 490, 491, 492, 493, 494, 495, 497, 498, 500, 502, 503, 504, 508, 509, 524, 536, 538, 539, 547, 560, 580, 598, 599, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 633, 634, 635, 637, 638, 640, 647, 653, 701, 720, 722, 740, 756, 764, 788, 816, 826, 827, 835, 839, 842, 847, 855, 857, 862, 863, 866, 868, 870, 880], "hc": [1, 12, 21, 81, 82, 119, 123, 185, 192], "separ": [1, 10, 12, 16, 21, 32, 33, 45, 47, 70, 74, 81, 82, 83, 94, 119, 123, 136, 141, 142, 143, 146, 147, 150, 151, 152, 156, 157, 161, 162, 163, 166, 169, 176, 185, 190, 192, 196, 199, 202, 204, 205, 206, 207, 209, 213, 214, 215, 216, 217, 234, 236, 239, 244, 246, 256, 258, 259, 264, 265, 266, 267, 269, 273, 274, 297, 298, 324, 342, 344, 345, 347, 348, 351, 355, 356, 357, 362, 371, 385, 392, 410, 417, 431, 443, 473, 478, 479, 494, 501, 517, 519, 558, 568, 569, 570, 571, 574, 577, 586, 588, 602, 612, 619, 649, 655, 656, 657, 658, 659, 660, 661, 662, 687, 688, 690, 691, 702, 703, 704, 705, 706, 707, 730, 731, 738, 748, 753, 771, 772, 778, 779, 780, 787, 788, 790, 795, 800, 801, 802, 835, 837, 839, 843, 855, 856, 857, 859, 862, 865, 868, 880], "posit": [1, 4, 12, 19, 21, 24, 27, 38, 39, 41, 45, 70, 75, 78, 79, 80, 82, 83, 90, 93, 94, 95, 101, 112, 119, 122, 123, 127, 130, 135, 136, 137, 151, 152, 157, 159, 160, 161, 171, 176, 177, 179, 184, 185, 186, 189, 191, 192, 199, 200, 204, 206, 210, 212, 223, 226, 230, 234, 241, 244, 256, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 290, 304, 306, 312, 313, 314, 325, 328, 330, 332, 335, 338, 342, 344, 345, 350, 351, 352, 354, 366, 381, 389, 410, 413, 416, 417, 420, 422, 429, 430, 431, 438, 452, 453, 462, 469, 478, 479, 491, 494, 498, 501, 502, 508, 520, 557, 558, 562, 563, 565, 572, 577, 579, 586, 588, 610, 612, 649, 651, 652, 653, 657, 658, 659, 660, 661, 662, 663, 665, 668, 669, 684, 700, 702, 703, 704, 715, 723, 724, 748, 749, 753, 761, 764, 765, 767, 772, 778, 779, 780, 783, 785, 786, 787, 790, 791, 797, 800, 801, 803, 804, 806, 808, 809, 810, 812, 816, 818, 835, 839, 855, 856, 862, 865, 869, 880], "file": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 56, 59, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 96, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 123, 127, 128, 129, 130, 132, 133, 135, 136, 138, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 172, 175, 178, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 194, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 218, 220, 222, 223, 225, 228, 229, 230, 231, 233, 234, 236, 238, 240, 243, 251, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 301, 303, 304, 307, 308, 309, 312, 313, 318, 320, 321, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 357, 362, 363, 365, 366, 367, 372, 380, 384, 385, 386, 387, 393, 402, 403, 429, 431, 439, 440, 441, 442, 443, 451, 452, 458, 459, 460, 462, 463, 467, 469, 470, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 517, 518, 520, 521, 531, 538, 539, 543, 547, 548, 557, 558, 568, 569, 570, 571, 577, 584, 588, 598, 599, 600, 601, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 643, 644, 646, 649, 651, 652, 653, 665, 668, 677, 695, 698, 699, 700, 701, 702, 703, 704, 720, 721, 722, 733, 735, 737, 742, 748, 756, 764, 766, 801, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 844, 845, 846, 851, 856, 866, 870, 880], "present": [1, 4, 10, 12, 13, 16, 21, 31, 40, 43, 44, 69, 82, 116, 119, 123, 126, 134, 141, 143, 145, 150, 151, 159, 167, 169, 170, 171, 181, 189, 190, 192, 199, 200, 204, 206, 207, 208, 210, 216, 218, 226, 230, 234, 235, 236, 244, 256, 257, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 284, 285, 288, 297, 298, 302, 307, 312, 318, 320, 329, 334, 343, 347, 354, 358, 359, 360, 368, 369, 370, 371, 391, 410, 417, 429, 431, 434, 439, 451, 452, 453, 454, 458, 473, 475, 476, 478, 479, 486, 489, 493, 500, 517, 524, 536, 555, 557, 558, 560, 561, 568, 569, 572, 574, 578, 588, 596, 615, 616, 664, 669, 685, 700, 702, 703, 704, 718, 735, 748, 764, 765, 771, 772, 778, 780, 782, 784, 787, 788, 791, 798, 800, 801, 802, 803, 804, 807, 808, 810, 835, 845, 855, 856, 862, 865, 880], "quaternion": [1, 12, 21, 81, 82, 119, 123, 185, 192, 350, 351, 352, 562, 565, 739, 741, 790, 880], "match": [1, 4, 8, 9, 11, 12, 17, 18, 20, 21, 27, 28, 31, 32, 33, 34, 40, 41, 45, 46, 47, 49, 51, 58, 59, 61, 69, 71, 72, 73, 74, 80, 81, 82, 83, 88, 90, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 119, 121, 123, 128, 132, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 158, 162, 163, 167, 170, 173, 178, 181, 183, 184, 185, 186, 192, 195, 199, 200, 201, 203, 204, 207, 211, 212, 215, 216, 217, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 240, 257, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 317, 329, 354, 358, 365, 369, 370, 410, 411, 416, 417, 418, 420, 426, 431, 434, 435, 437, 439, 441, 442, 444, 460, 477, 478, 479, 486, 493, 500, 544, 547, 550, 555, 557, 558, 567, 568, 572, 577, 589, 602, 612, 614, 615, 635, 638, 650, 665, 686, 691, 695, 700, 701, 702, 703, 704, 716, 717, 726, 738, 772, 778, 779, 780, 784, 787, 788, 791, 794, 800, 801, 802, 803, 826, 839, 843, 862, 880], "desir": [1, 5, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 70, 81, 82, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 112, 119, 123, 124, 127, 131, 143, 147, 152, 158, 162, 167, 169, 171, 173, 178, 179, 180, 181, 182, 185, 189, 190, 192, 195, 196, 200, 201, 202, 203, 206, 216, 222, 223, 234, 236, 257, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 360, 409, 434, 445, 478, 479, 519, 536, 557, 580, 597, 645, 700, 702, 703, 704, 734, 748, 811, 845, 855, 857, 859, 865, 880], "v": [1, 4, 8, 9, 12, 13, 21, 24, 27, 28, 32, 43, 54, 55, 63, 65, 70, 75, 81, 82, 105, 106, 119, 123, 127, 132, 138, 142, 172, 173, 179, 185, 192, 195, 199, 202, 206, 227, 230, 231, 236, 239, 244, 256, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 283, 287, 288, 298, 302, 320, 344, 359, 373, 380, 416, 417, 418, 431, 478, 479, 524, 533, 558, 566, 569, 574, 575, 577, 588, 595, 686, 700, 702, 703, 704, 712, 718, 727, 730, 731, 732, 735, 752, 835, 839, 843, 855, 862, 865, 880], "transform": [1, 5, 7, 8, 11, 12, 14, 16, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 74, 77, 79, 81, 82, 83, 85, 88, 90, 92, 93, 94, 95, 103, 104, 107, 108, 109, 110, 112, 113, 115, 119, 123, 124, 125, 127, 131, 135, 136, 146, 151, 156, 158, 159, 160, 167, 168, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 205, 208, 215, 222, 223, 239, 241, 244, 256, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 304, 312, 315, 316, 326, 354, 360, 361, 363, 365, 366, 367, 373, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 431, 451, 453, 461, 469, 470, 471, 472, 478, 479, 485, 508, 517, 520, 521, 531, 532, 541, 542, 558, 559, 562, 565, 567, 569, 577, 584, 588, 589, 620, 624, 632, 633, 640, 645, 665, 668, 685, 695, 697, 702, 704, 706, 709, 715, 716, 719, 723, 724, 725, 726, 727, 728, 729, 732, 734, 748, 764, 765, 812, 818, 826, 827, 834, 835, 846, 855, 856, 859, 869, 870, 880], "84": [1, 11, 13, 19, 34, 35, 41, 47, 58, 79, 81, 108, 109, 112, 114, 119, 129, 135, 137, 152, 170, 196, 200, 209, 226, 227, 228, 230, 231, 234, 235, 236, 244, 487, 592], "69": [1, 13, 15, 19, 35, 40, 47, 49, 79, 81, 82, 103, 108, 112, 114, 119, 138, 141, 144, 170, 177, 181, 185, 186, 192, 195, 196, 204, 209, 226, 227, 228, 229, 230, 231, 234, 235, 236, 244, 264, 265, 297, 402], "49": [1, 5, 13, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 81, 86, 87, 96, 103, 108, 112, 113, 114, 116, 119, 120, 123, 127, 150, 170, 172, 173, 177, 179, 180, 181, 182, 185, 186, 188, 192, 196, 198, 209, 210, 211, 217, 223, 226, 227, 228, 229, 230, 231, 235, 236, 238, 244, 746, 838, 880], "00": [1, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 33, 34, 41, 42, 44, 45, 46, 50, 56, 59, 66, 70, 71, 72, 73, 76, 81, 82, 83, 84, 85, 88, 90, 91, 93, 96, 99, 101, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 119, 121, 123, 127, 130, 133, 137, 140, 142, 144, 145, 147, 149, 152, 155, 157, 158, 159, 160, 161, 165, 168, 169, 170, 173, 175, 177, 181, 182, 183, 184, 185, 186, 188, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 243, 244, 525, 557, 566], "mm": [1, 4, 5, 12, 21, 24, 26, 41, 44, 45, 50, 70, 71, 73, 76, 78, 80, 81, 82, 83, 90, 93, 94, 95, 109, 119, 123, 127, 135, 137, 142, 147, 152, 157, 158, 159, 160, 161, 162, 168, 169, 177, 179, 181, 182, 183, 184, 185, 186, 192, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 222, 223, 256, 262, 269, 271, 272, 275, 278, 279, 280, 305, 335, 337, 339, 360, 365, 429, 453, 462, 468, 471, 472, 490, 494, 511, 521, 612, 648, 649, 738, 740, 747, 748, 806, 811, 816, 855, 862, 880], "orig": [1, 12, 21, 81, 82, 119, 123, 161, 185, 192, 200, 538, 550, 551, 556], "44": [1, 13, 19, 20, 28, 35, 41, 45, 46, 47, 81, 103, 108, 112, 113, 114, 116, 119, 147, 149, 159, 169, 170, 177, 181, 182, 185, 195, 196, 202, 209, 210, 226, 227, 228, 230, 231, 234, 235, 236, 244, 297, 298, 431, 473, 687, 688, 690, 691, 880], "30": [1, 5, 7, 8, 9, 11, 12, 13, 14, 19, 24, 28, 33, 34, 35, 41, 42, 45, 46, 47, 50, 58, 70, 73, 74, 76, 79, 81, 82, 83, 85, 90, 92, 94, 96, 97, 101, 103, 104, 107, 108, 109, 112, 113, 114, 115, 119, 123, 127, 135, 137, 145, 147, 157, 159, 161, 165, 167, 170, 172, 173, 184, 185, 195, 196, 199, 201, 202, 204, 205, 207, 208, 209, 211, 215, 226, 227, 228, 229, 230, 231, 235, 236, 239, 241, 244, 256, 264, 265, 266, 267, 275, 277, 303, 307, 335, 354, 478, 479, 509, 557, 561, 566, 577, 653, 664, 665, 702, 704, 716, 726, 727, 729, 730, 732, 752, 756, 780, 837, 855, 856, 862, 865, 880], "51": [1, 5, 8, 19, 28, 34, 35, 45, 47, 70, 71, 80, 81, 82, 103, 108, 109, 112, 114, 119, 127, 138, 153, 157, 159, 170, 173, 185, 186, 192, 195, 196, 201, 205, 208, 209, 210, 215, 226, 227, 228, 230, 231, 235, 236, 244, 274, 380, 588, 856, 880], "45": [1, 5, 8, 9, 11, 13, 15, 16, 19, 26, 28, 35, 45, 50, 81, 84, 103, 108, 109, 112, 113, 114, 119, 121, 123, 142, 144, 145, 146, 150, 157, 158, 159, 169, 170, 177, 181, 182, 192, 195, 196, 202, 204, 205, 207, 208, 209, 210, 217, 220, 226, 227, 228, 230, 231, 234, 235, 236, 241, 258, 264, 265, 266, 267, 297, 298, 335, 354, 358, 359, 369, 370, 371, 410, 417, 445, 453, 454, 473, 475, 476, 478, 479, 536, 558, 681, 702, 704, 752, 780, 788, 862, 880], "252": [1, 35, 112, 119, 123, 170, 231], "43": [1, 19, 26, 28, 34, 35, 41, 45, 46, 47, 48, 50, 54, 55, 81, 82, 103, 106, 107, 108, 112, 114, 119, 123, 146, 158, 159, 170, 177, 182, 183, 184, 188, 195, 196, 209, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 244, 264, 265, 335, 702, 703], "diff": [1, 9, 12, 21, 70, 81, 82, 119, 123, 134, 177, 184, 185, 192, 215, 234, 756, 847], "000": [1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 34, 42, 59, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 88, 90, 93, 94, 95, 99, 109, 112, 113, 114, 115, 119, 121, 123, 128, 129, 130, 133, 135, 137, 141, 142, 143, 144, 145, 147, 150, 152, 153, 160, 167, 168, 169, 173, 180, 182, 183, 184, 185, 186, 191, 192, 194, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 221, 223, 227, 229, 230, 231, 240, 502, 614], "46": [1, 12, 13, 19, 21, 28, 33, 34, 35, 40, 45, 47, 51, 55, 72, 81, 103, 106, 108, 112, 114, 119, 123, 150, 151, 155, 170, 195, 196, 201, 202, 204, 209, 217, 226, 227, 228, 230, 231, 234, 236, 244, 862, 880], "28": [1, 11, 13, 18, 19, 26, 28, 34, 35, 41, 43, 45, 47, 50, 56, 76, 79, 81, 85, 103, 104, 108, 109, 112, 114, 119, 141, 159, 170, 172, 176, 177, 182, 183, 184, 185, 186, 188, 196, 201, 203, 209, 211, 214, 226, 227, 228, 230, 231, 235, 236, 240, 244, 335, 880], "53": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 32, 33, 34, 35, 40, 42, 45, 46, 47, 73, 76, 81, 82, 83, 84, 88, 94, 99, 103, 108, 112, 113, 114, 115, 119, 121, 123, 133, 137, 142, 145, 146, 147, 152, 156, 163, 165, 170, 177, 185, 192, 195, 196, 202, 203, 204, 205, 209, 210, 211, 212, 217, 226, 227, 228, 230, 231, 235, 236, 244, 681, 859], "58": [1, 11, 19, 35, 40, 45, 47, 48, 49, 54, 55, 57, 58, 59, 78, 81, 90, 93, 94, 103, 108, 109, 112, 114, 116, 119, 121, 127, 137, 138, 150, 152, 153, 163, 170, 173, 179, 183, 192, 196, 199, 205, 207, 209, 215, 226, 227, 230, 231, 234, 244, 354, 862, 880], "243": [1, 81, 112, 119, 170, 192, 226, 231], "47": [1, 10, 16, 19, 28, 33, 35, 41, 45, 51, 79, 81, 84, 103, 104, 108, 112, 114, 119, 138, 160, 169, 170, 182, 184, 195, 196, 209, 217, 226, 227, 228, 230, 231, 235, 236, 244, 300, 335, 403, 855, 856, 862], "86": [1, 5, 12, 13, 15, 19, 26, 34, 35, 40, 41, 47, 50, 81, 103, 108, 112, 114, 119, 138, 141, 152, 157, 158, 159, 169, 170, 173, 177, 182, 183, 185, 195, 196, 203, 205, 207, 208, 212, 216, 226, 227, 228, 230, 231, 236, 244, 417, 714, 716, 726, 730, 854], "41": [1, 13, 19, 28, 34, 35, 44, 45, 47, 81, 82, 103, 108, 112, 114, 119, 167, 169, 170, 175, 184, 185, 192, 195, 196, 205, 207, 208, 209, 215, 226, 227, 228, 230, 231, 234, 235, 236, 241, 244, 276, 360, 402, 410, 880], "63": [1, 13, 19, 35, 45, 47, 70, 79, 81, 82, 101, 103, 108, 112, 114, 117, 119, 138, 144, 170, 185, 186, 192, 195, 196, 209, 226, 227, 228, 230, 231, 234, 236, 880], "55": [1, 11, 13, 19, 21, 28, 30, 31, 32, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 54, 55, 57, 58, 60, 78, 79, 81, 86, 87, 101, 103, 108, 109, 112, 114, 116, 119, 120, 124, 127, 140, 144, 150, 152, 161, 170, 172, 173, 178, 179, 181, 182, 196, 204, 205, 207, 209, 211, 217, 226, 227, 228, 230, 231, 236, 244, 410, 418, 525, 557, 558, 603, 837, 880], "82": [1, 13, 19, 35, 46, 81, 103, 112, 114, 119, 146, 170, 181, 182, 185, 192, 195, 196, 209, 226, 227, 228, 230, 231, 235, 236, 240, 402, 445], "230": [1, 19, 81, 88, 112, 119, 170, 230, 231], "26": [1, 5, 6, 11, 13, 16, 19, 28, 32, 34, 35, 41, 44, 45, 47, 50, 56, 64, 66, 70, 79, 81, 82, 85, 93, 101, 103, 106, 108, 109, 112, 114, 119, 137, 138, 146, 159, 170, 172, 184, 185, 186, 192, 196, 209, 223, 225, 226, 227, 228, 230, 231, 234, 235, 236, 244, 276, 277, 360, 393, 525, 856], "coordin": [1, 5, 11, 12, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 71, 79, 81, 82, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 115, 119, 123, 124, 127, 131, 135, 136, 137, 151, 159, 160, 164, 165, 166, 167, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 196, 208, 210, 212, 222, 223, 234, 236, 244, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 277, 279, 280, 302, 304, 305, 306, 312, 315, 316, 321, 325, 328, 330, 331, 333, 335, 339, 364, 365, 367, 389, 410, 417, 429, 431, 453, 461, 469, 471, 472, 475, 478, 479, 482, 485, 489, 490, 502, 508, 510, 517, 522, 557, 558, 569, 572, 577, 588, 620, 630, 631, 633, 634, 649, 653, 677, 680, 700, 702, 704, 734, 735, 747, 748, 749, 764, 765, 766, 772, 776, 780, 782, 784, 786, 787, 788, 790, 791, 798, 800, 802, 803, 804, 808, 810, 816, 818, 827, 828, 833, 835, 856, 880], "establish": [1, 12, 21, 81, 82, 119, 123, 185, 189, 192, 202, 231, 244, 687, 688, 690, 691], "digit": [1, 71, 73, 76, 81, 82, 83, 90, 93, 118, 119, 123, 127, 135, 142, 147, 152, 157, 158, 160, 161, 168, 169, 170, 183, 186, 189, 190, 192, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 244, 256, 257, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 305, 306, 312, 325, 326, 328, 330, 333, 334, 337, 339, 341, 342, 344, 365, 410, 417, 429, 431, 451, 469, 478, 479, 482, 485, 491, 502, 510, 517, 522, 557, 558, 567, 568, 569, 572, 577, 588, 614, 615, 649, 700, 702, 703, 704, 748, 764, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 818, 835, 855, 856, 865, 880], "point": [1, 5, 8, 9, 11, 12, 16, 18, 21, 22, 26, 27, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 49, 54, 55, 56, 58, 60, 71, 72, 73, 76, 79, 81, 82, 83, 90, 93, 94, 96, 97, 100, 101, 103, 107, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 123, 127, 128, 134, 135, 136, 137, 138, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 297, 298, 305, 306, 312, 315, 316, 321, 325, 330, 334, 335, 336, 337, 339, 342, 348, 350, 354, 359, 360, 364, 365, 367, 409, 410, 411, 412, 416, 417, 419, 426, 429, 431, 444, 446, 448, 451, 469, 472, 473, 477, 478, 479, 481, 482, 485, 491, 497, 502, 510, 520, 521, 522, 524, 525, 534, 535, 536, 537, 539, 540, 557, 558, 560, 568, 569, 572, 577, 588, 609, 613, 614, 617, 618, 620, 623, 628, 631, 634, 645, 648, 649, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 667, 674, 676, 685, 686, 687, 688, 690, 691, 692, 700, 701, 702, 703, 704, 718, 719, 748, 749, 752, 753, 764, 765, 766, 767, 772, 776, 780, 782, 783, 784, 785, 787, 788, 791, 792, 795, 798, 800, 802, 803, 804, 806, 807, 808, 810, 811, 812, 816, 828, 833, 835, 839, 855, 857, 859, 861, 865, 868, 880], "subj00111092011": [1, 119], "po": [1, 19, 41, 47, 50, 79, 80, 81, 82, 84, 93, 115, 119, 137, 152, 157, 177, 184, 185, 186, 192, 208, 210, 262, 266, 267, 270, 271, 272, 275, 278, 279, 280, 304, 313, 338, 351, 352, 430, 453, 471, 472, 491, 562, 565, 622, 649, 790, 810, 865, 880], "polhemu": [1, 12, 21, 81, 82, 119, 123, 157, 171, 185, 192, 269, 312, 337, 339, 491, 502, 862, 865, 880], "hpi": [1, 12, 21, 81, 82, 119, 123, 157, 167, 170, 171, 185, 189, 192, 199, 210, 215, 256, 264, 265, 266, 267, 269, 305, 306, 312, 315, 325, 335, 337, 341, 342, 343, 346, 347, 348, 365, 429, 430, 478, 479, 485, 502, 555, 562, 700, 702, 703, 704, 771, 835, 862, 865, 869, 880], "coil": [1, 5, 12, 21, 26, 41, 45, 50, 81, 82, 109, 119, 123, 124, 151, 157, 159, 160, 177, 182, 183, 184, 185, 186, 189, 192, 199, 208, 209, 210, 256, 264, 265, 266, 267, 269, 320, 335, 341, 342, 344, 345, 346, 348, 349, 430, 453, 478, 479, 485, 502, 555, 568, 569, 588, 599, 614, 642, 700, 702, 703, 704, 742, 771, 835, 869, 880], "ad": [1, 4, 5, 11, 12, 21, 22, 27, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 68, 70, 71, 81, 82, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 119, 120, 123, 124, 127, 131, 135, 141, 142, 143, 147, 152, 157, 159, 160, 161, 162, 163, 167, 171, 176, 178, 179, 180, 182, 183, 185, 192, 196, 201, 205, 207, 208, 210, 217, 218, 221, 222, 223, 226, 227, 234, 236, 256, 258, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 312, 338, 341, 343, 347, 360, 361, 371, 410, 417, 431, 454, 477, 478, 479, 501, 514, 519, 520, 521, 523, 557, 558, 560, 572, 574, 610, 645, 649, 650, 654, 664, 692, 695, 700, 702, 703, 704, 744, 748, 751, 753, 765, 766, 772, 776, 777, 780, 782, 784, 787, 788, 791, 795, 798, 800, 802, 803, 804, 806, 808, 810, 811, 839, 856, 862, 865, 868, 880], "devic": [1, 5, 12, 21, 26, 41, 45, 50, 71, 80, 81, 82, 109, 119, 123, 151, 157, 159, 166, 167, 170, 171, 177, 182, 184, 185, 186, 192, 193, 194, 206, 208, 212, 215, 256, 265, 266, 267, 269, 305, 312, 315, 328, 330, 337, 361, 363, 373, 376, 431, 442, 469, 478, 479, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 562, 565, 588, 589, 602, 612, 613, 614, 617, 645, 748, 764, 783, 826, 835, 851, 855, 856, 865, 880], "locat": [1, 4, 5, 12, 21, 26, 27, 31, 35, 40, 41, 45, 47, 48, 49, 50, 55, 59, 60, 67, 68, 77, 80, 81, 82, 85, 90, 93, 94, 95, 100, 109, 115, 118, 119, 123, 124, 136, 137, 138, 139, 140, 142, 150, 151, 156, 157, 159, 160, 161, 162, 164, 166, 167, 172, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 192, 200, 206, 208, 209, 210, 212, 215, 221, 222, 223, 226, 227, 228, 230, 231, 236, 241, 244, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 297, 298, 306, 307, 308, 312, 313, 316, 318, 321, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338, 342, 344, 345, 346, 354, 366, 367, 377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 417, 430, 431, 440, 443, 451, 461, 466, 470, 478, 479, 484, 488, 490, 497, 502, 508, 511, 521, 524, 525, 534, 535, 536, 540, 544, 549, 555, 557, 558, 562, 572, 579, 582, 583, 584, 585, 588, 599, 613, 614, 617, 622, 623, 639, 640, 642, 649, 652, 653, 663, 666, 687, 688, 690, 691, 692, 700, 702, 704, 736, 737, 738, 740, 748, 764, 765, 769, 772, 776, 780, 782, 786, 787, 790, 791, 800, 801, 802, 803, 804, 808, 810, 813, 816, 818, 835, 840, 845, 855, 856, 859, 865, 868, 869, 880], "measur": [1, 4, 5, 12, 21, 26, 41, 45, 50, 71, 73, 76, 80, 81, 82, 83, 90, 93, 103, 109, 119, 123, 127, 142, 145, 146, 147, 157, 159, 160, 163, 166, 167, 168, 169, 170, 171, 173, 177, 183, 185, 189, 190, 191, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 231, 232, 233, 237, 238, 240, 241, 244, 257, 259, 261, 263, 264, 265, 266, 267, 268, 269, 273, 275, 277, 284, 285, 297, 298, 299, 305, 306, 310, 311, 318, 319, 320, 324, 326, 327, 340, 342, 344, 346, 349, 354, 358, 359, 360, 365, 369, 370, 371, 373, 410, 412, 414, 417, 418, 419, 429, 441, 442, 443, 453, 454, 461, 470, 473, 475, 476, 477, 478, 479, 480, 483, 491, 493, 506, 514, 517, 520, 521, 522, 524, 525, 526, 533, 534, 535, 536, 539, 554, 555, 558, 569, 584, 588, 589, 592, 593, 594, 615, 630, 635, 636, 645, 656, 657, 664, 665, 668, 672, 681, 682, 683, 684, 688, 691, 692, 700, 701, 702, 703, 704, 730, 737, 748, 761, 764, 765, 768, 773, 774, 788, 790, 799, 800, 804, 826, 835, 847, 855, 856, 862, 865, 868, 880], "compos": [1, 12, 21, 26, 41, 45, 50, 81, 82, 109, 119, 123, 138, 159, 177, 185, 189, 192, 196, 855, 865], "find": [1, 5, 7, 11, 12, 19, 21, 27, 28, 29, 30, 38, 39, 44, 47, 48, 49, 50, 52, 57, 58, 60, 68, 69, 77, 79, 81, 82, 83, 85, 104, 107, 108, 110, 119, 123, 124, 127, 128, 135, 137, 141, 142, 146, 151, 152, 156, 157, 158, 162, 167, 171, 173, 176, 177, 181, 182, 185, 192, 196, 199, 201, 202, 205, 210, 217, 223, 226, 227, 228, 236, 241, 244, 262, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 318, 355, 356, 357, 365, 444, 449, 451, 452, 478, 479, 497, 525, 555, 558, 561, 564, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 597, 613, 617, 638, 659, 663, 666, 677, 748, 785, 787, 835, 837, 839, 842, 843, 844, 845, 856, 859, 862, 863, 865, 880], "sampl": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 68, 69, 71, 72, 73, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 221, 222, 223, 226, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 244, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 296, 318, 354, 360, 362, 373, 385, 412, 413, 414, 415, 416, 420, 421, 422, 423, 424, 425, 427, 431, 434, 436, 438, 439, 445, 446, 447, 448, 449, 451, 452, 476, 477, 478, 479, 486, 493, 500, 519, 521, 528, 534, 535, 553, 555, 558, 560, 563, 574, 575, 596, 602, 606, 613, 614, 615, 628, 630, 635, 650, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 672, 680, 682, 686, 687, 688, 689, 690, 691, 692, 693, 694, 700, 701, 703, 705, 706, 707, 708, 709, 710, 711, 715, 716, 718, 719, 723, 724, 726, 727, 728, 729, 730, 746, 748, 778, 780, 781, 789, 801, 806, 811, 812, 814, 825, 835, 839, 855, 859, 860, 862, 863, 865, 870, 880], "meg4": [1, 12, 21, 81, 82, 119, 123, 185, 192], "system": [1, 5, 8, 10, 12, 19, 21, 27, 62, 70, 74, 80, 81, 82, 109, 116, 119, 122, 124, 129, 130, 137, 138, 151, 152, 156, 157, 159, 160, 161, 167, 169, 170, 171, 173, 179, 184, 185, 186, 190, 192, 195, 199, 200, 205, 206, 207, 208, 210, 212, 215, 216, 217, 226, 239, 244, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 284, 285, 300, 312, 315, 320, 323, 328, 330, 331, 333, 334, 335, 337, 339, 364, 365, 367, 373, 380, 416, 430, 445, 447, 459, 471, 472, 473, 478, 479, 485, 486, 487, 489, 490, 491, 502, 511, 522, 555, 558, 560, 586, 588, 605, 635, 652, 653, 654, 663, 664, 666, 686, 687, 688, 689, 690, 691, 699, 700, 702, 703, 704, 712, 718, 734, 764, 765, 778, 781, 786, 789, 795, 801, 809, 815, 816, 828, 835, 837, 838, 839, 840, 842, 843, 844, 851, 855, 856, 858, 865, 868, 880], "clock": [1, 12, 21, 81, 82, 119, 123, 185, 192, 478, 479, 491, 558, 602, 795, 801, 856, 880], "avail": [1, 2, 5, 7, 8, 12, 19, 21, 22, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 68, 71, 73, 76, 78, 81, 82, 83, 86, 87, 90, 92, 93, 94, 95, 101, 109, 116, 119, 120, 123, 127, 131, 135, 137, 141, 142, 143, 144, 145, 147, 150, 151, 152, 156, 157, 160, 163, 166, 167, 168, 169, 170, 173, 174, 177, 178, 179, 180, 181, 182, 185, 189, 190, 192, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 227, 239, 256, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 303, 305, 306, 312, 332, 338, 372, 374, 380, 402, 403, 409, 410, 416, 417, 422, 429, 436, 458, 475, 478, 479, 517, 534, 535, 549, 550, 551, 557, 558, 572, 618, 625, 665, 696, 700, 701, 702, 704, 717, 730, 748, 765, 772, 778, 780, 782, 784, 787, 788, 791, 795, 798, 800, 801, 802, 803, 804, 806, 808, 810, 811, 819, 820, 835, 837, 839, 840, 845, 846, 847, 850, 853, 856, 859, 862, 863, 864, 865, 868, 880], "check": [1, 5, 12, 21, 26, 41, 43, 45, 50, 61, 70, 81, 82, 109, 119, 120, 121, 123, 125, 136, 138, 141, 143, 144, 145, 158, 159, 160, 162, 167, 169, 171, 172, 173, 176, 177, 182, 183, 185, 192, 200, 202, 205, 206, 215, 216, 218, 226, 227, 240, 259, 261, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 318, 320, 385, 391, 429, 443, 446, 477, 478, 479, 486, 489, 533, 547, 558, 566, 568, 687, 688, 690, 691, 700, 702, 703, 704, 734, 748, 764, 782, 784, 785, 786, 787, 818, 837, 838, 839, 847, 855, 856, 859, 868, 880], "which": [1, 4, 5, 12, 16, 18, 19, 21, 26, 31, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 60, 70, 74, 79, 80, 81, 82, 83, 88, 94, 101, 103, 109, 112, 114, 115, 116, 119, 120, 123, 127, 128, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 183, 185, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 290, 297, 298, 305, 306, 312, 314, 321, 328, 330, 331, 332, 333, 334, 340, 341, 343, 347, 349, 353, 354, 359, 360, 363, 367, 372, 373, 380, 385, 402, 410, 412, 417, 418, 421, 427, 429, 431, 434, 436, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 461, 468, 469, 470, 475, 476, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 511, 512, 513, 517, 518, 520, 525, 526, 534, 535, 538, 539, 543, 547, 557, 558, 559, 560, 566, 568, 569, 572, 574, 575, 576, 577, 584, 586, 588, 593, 602, 605, 611, 613, 617, 618, 619, 620, 622, 623, 625, 630, 631, 634, 635, 636, 637, 639, 640, 642, 643, 645, 649, 650, 654, 657, 660, 662, 663, 666, 668, 669, 677, 679, 680, 686, 692, 695, 696, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 719, 722, 727, 728, 730, 731, 733, 735, 738, 748, 749, 751, 753, 754, 763, 764, 766, 769, 771, 772, 774, 776, 778, 779, 780, 782, 783, 786, 787, 791, 793, 795, 800, 801, 802, 806, 808, 811, 815, 816, 818, 826, 827, 828, 830, 832, 833, 834, 835, 837, 839, 840, 842, 844, 847, 851, 853, 854, 855, 856, 857, 859, 861, 862, 865, 866, 868, 878, 880], "ar": [1, 4, 5, 11, 12, 14, 15, 16, 18, 19, 21, 24, 26, 27, 31, 32, 33, 34, 38, 41, 43, 45, 46, 47, 50, 59, 67, 70, 74, 75, 76, 79, 81, 82, 83, 84, 87, 88, 94, 99, 101, 103, 104, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 128, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 284, 285, 288, 289, 291, 297, 298, 300, 302, 303, 305, 306, 307, 308, 310, 312, 313, 314, 316, 317, 320, 322, 323, 324, 325, 328, 329, 330, 332, 334, 335, 338, 341, 342, 343, 347, 353, 354, 358, 359, 360, 361, 363, 365, 369, 370, 371, 373, 385, 386, 393, 402, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 434, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 462, 463, 467, 468, 469, 470, 473, 475, 476, 477, 478, 479, 480, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 498, 500, 502, 503, 504, 505, 506, 507, 508, 511, 514, 517, 518, 520, 522, 523, 524, 533, 534, 535, 536, 537, 540, 542, 547, 549, 550, 551, 553, 554, 555, 557, 558, 559, 560, 561, 563, 565, 566, 568, 572, 573, 574, 575, 577, 578, 580, 583, 587, 588, 589, 592, 593, 594, 596, 597, 599, 603, 605, 606, 608, 611, 612, 613, 614, 615, 618, 620, 623, 626, 628, 635, 637, 638, 639, 640, 641, 642, 645, 647, 649, 650, 652, 653, 656, 657, 660, 662, 663, 665, 666, 668, 671, 672, 674, 675, 676, 681, 682, 685, 686, 687, 688, 689, 690, 691, 692, 696, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 716, 717, 718, 719, 724, 726, 727, 728, 729, 730, 731, 733, 735, 738, 743, 748, 749, 753, 763, 764, 765, 766, 769, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 818, 825, 827, 828, 829, 830, 835, 837, 839, 840, 842, 843, 844, 845, 846, 847, 851, 854, 855, 856, 857, 858, 860, 861, 862, 863, 864, 866, 867, 868, 870, 880], "valid": [1, 8, 9, 10, 11, 12, 15, 16, 21, 74, 81, 82, 111, 119, 121, 123, 138, 163, 172, 178, 185, 191, 192, 196, 202, 211, 226, 241, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 325, 338, 354, 359, 402, 410, 416, 417, 426, 427, 431, 442, 444, 451, 458, 462, 478, 479, 534, 535, 557, 558, 560, 572, 574, 575, 631, 645, 682, 687, 688, 690, 691, 700, 702, 703, 704, 725, 735, 748, 751, 764, 765, 772, 779, 780, 781, 782, 784, 786, 787, 791, 800, 803, 806, 808, 809, 810, 811, 833, 839, 845, 846, 855, 859, 862, 880], "240": [1, 35, 42, 46, 75, 81, 109, 112, 119, 170, 172, 182, 199, 203, 209, 212, 230, 231, 240], "x": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 71, 72, 73, 76, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 195, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 218, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 241, 244, 256, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 277, 278, 279, 280, 288, 302, 312, 313, 335, 344, 345, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 448, 449, 450, 478, 479, 489, 490, 524, 525, 533, 557, 558, 559, 567, 572, 597, 620, 652, 673, 676, 681, 685, 686, 687, 688, 689, 690, 691, 693, 700, 702, 704, 705, 706, 707, 712, 714, 715, 716, 718, 719, 723, 725, 726, 730, 735, 738, 739, 741, 748, 749, 752, 765, 767, 769, 772, 780, 782, 784, 786, 787, 788, 789, 790, 791, 796, 798, 800, 802, 803, 804, 806, 808, 810, 811, 812, 814, 816, 827, 835, 839, 845, 856, 862, 865, 880], "1800": [1, 119], "432000": [1, 119], "302": [1, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 75, 83, 93, 94, 96, 102, 104, 107, 108, 110, 119, 121, 153, 163, 167, 170, 173, 177, 178, 179, 180, 181, 182, 209, 222, 226, 231, 234, 236, 865], "ch": [1, 2, 8, 12, 21, 68, 81, 82, 112, 115, 119, 120, 123, 137, 138, 142, 150, 152, 167, 170, 171, 185, 192, 205, 215, 221, 223, 244, 256, 269, 319, 320, 380, 402, 403, 478, 479, 818, 835, 856, 880], "current": [1, 12, 21, 22, 27, 29, 30, 31, 34, 41, 42, 44, 59, 77, 78, 81, 82, 85, 94, 119, 123, 141, 150, 162, 163, 166, 167, 172, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 200, 202, 210, 212, 217, 223, 234, 236, 244, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 280, 284, 285, 297, 298, 318, 320, 326, 353, 360, 365, 372, 373, 376, 416, 431, 434, 443, 448, 450, 451, 453, 473, 477, 478, 479, 484, 489, 493, 520, 521, 525, 528, 558, 567, 569, 570, 571, 577, 588, 618, 625, 645, 664, 681, 683, 700, 702, 703, 704, 725, 748, 755, 757, 758, 759, 760, 761, 765, 769, 772, 778, 801, 810, 811, 818, 835, 839, 842, 845, 847, 855, 856, 859, 861, 865, 868], "compens": [1, 2, 12, 21, 27, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 78, 81, 82, 85, 86, 87, 101, 116, 119, 120, 123, 127, 141, 144, 150, 173, 177, 179, 180, 182, 185, 186, 192, 202, 209, 226, 227, 244, 256, 259, 264, 265, 266, 267, 269, 351, 365, 431, 433, 445, 446, 448, 449, 451, 477, 478, 479, 491, 498, 521, 555, 558, 569, 577, 584, 588, 618, 665, 700, 702, 703, 704, 789, 790, 880], "grade": [1, 12, 21, 24, 41, 70, 81, 82, 101, 109, 119, 123, 159, 162, 185, 189, 192, 234, 236, 259, 264, 265, 266, 267, 269, 270, 465, 466, 477, 478, 479, 558, 700, 702, 703, 704, 880], "144000": [1, 81], "sec": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 127, 129, 132, 133, 135, 136, 137, 142, 145, 147, 150, 152, 153, 157, 160, 163, 167, 168, 169, 170, 173, 178, 180, 181, 182, 183, 184, 185, 186, 191, 196, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 234, 236, 240, 269, 865, 880], "type": [1, 2, 5, 15, 16, 22, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 67, 71, 75, 77, 78, 79, 81, 82, 83, 85, 86, 90, 93, 94, 95, 103, 109, 113, 114, 115, 116, 118, 119, 120, 123, 124, 127, 128, 131, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 150, 151, 157, 158, 159, 160, 163, 167, 168, 169, 171, 172, 173, 177, 179, 180, 181, 182, 183, 184, 186, 189, 191, 196, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 216, 218, 221, 222, 223, 226, 230, 231, 239, 240, 257, 259, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 297, 298, 308, 310, 311, 313, 314, 317, 318, 319, 320, 321, 327, 329, 335, 343, 354, 355, 356, 357, 358, 359, 368, 369, 370, 371, 373, 380, 385, 402, 403, 410, 412, 417, 419, 426, 431, 434, 435, 442, 443, 445, 448, 449, 450, 451, 453, 454, 455, 460, 467, 473, 475, 476, 477, 478, 479, 486, 493, 497, 504, 508, 509, 517, 536, 548, 555, 556, 557, 558, 559, 560, 563, 567, 569, 572, 573, 574, 575, 577, 579, 580, 584, 588, 594, 596, 603, 613, 615, 617, 618, 641, 642, 645, 651, 652, 653, 665, 668, 671, 680, 686, 687, 688, 690, 691, 695, 700, 701, 702, 703, 704, 708, 709, 710, 711, 713, 731, 734, 748, 763, 767, 771, 772, 773, 774, 776, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 799, 800, 801, 802, 803, 804, 806, 808, 809, 810, 811, 812, 814, 821, 835, 837, 838, 844, 845, 846, 850, 855, 857, 859, 863, 865, 866, 880], "select": [1, 5, 7, 11, 15, 21, 24, 28, 29, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 67, 71, 74, 76, 82, 83, 88, 90, 93, 94, 95, 99, 103, 109, 112, 113, 119, 120, 121, 128, 135, 138, 142, 143, 145, 151, 152, 159, 160, 162, 163, 167, 168, 170, 171, 173, 176, 178, 179, 180, 181, 182, 183, 190, 192, 196, 200, 201, 202, 204, 207, 208, 210, 216, 217, 218, 222, 223, 227, 231, 235, 236, 239, 240, 241, 244, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 319, 324, 354, 365, 412, 418, 441, 448, 469, 475, 478, 479, 484, 511, 550, 551, 553, 554, 555, 556, 558, 559, 563, 572, 574, 575, 581, 582, 597, 623, 635, 642, 645, 663, 666, 686, 700, 701, 702, 703, 704, 711, 717, 765, 772, 778, 782, 784, 786, 787, 788, 791, 793, 795, 801, 804, 806, 810, 813, 817, 835, 839, 842, 855, 859, 862, 866, 880], "re": [1, 4, 29, 45, 67, 71, 93, 94, 101, 103, 113, 114, 120, 127, 135, 141, 142, 145, 152, 157, 159, 160, 161, 162, 163, 167, 168, 170, 171, 172, 173, 183, 190, 200, 201, 202, 204, 205, 206, 207, 208, 215, 217, 222, 228, 230, 236, 241, 244, 256, 258, 261, 264, 265, 266, 267, 269, 273, 281, 313, 317, 410, 417, 435, 478, 479, 502, 550, 551, 554, 556, 557, 558, 567, 614, 642, 645, 649, 700, 702, 703, 704, 711, 717, 734, 765, 780, 787, 791, 800, 803, 805, 808, 810, 839, 843, 844, 847, 857, 859, 860, 862, 868, 880], "referenc": [1, 27, 29, 71, 77, 85, 93, 94, 141, 151, 152, 160, 163, 168, 183, 190, 200, 204, 208, 222, 226, 258, 264, 265, 266, 267, 269, 281, 324, 478, 479, 484, 642, 645, 700, 702, 703, 704, 782, 835, 839, 862, 866, 869, 880], "item": [1, 4, 8, 11, 12, 13, 14, 15, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 157, 158, 159, 160, 161, 163, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 240, 257, 261, 262, 264, 265, 269, 273, 277, 283, 288, 302, 478, 479, 524, 702, 703, 704, 735, 748, 845, 865, 880], "deactiv": [1, 29, 42, 51, 68, 71, 92, 93, 94, 111, 143, 147, 160, 163, 183, 192, 206, 207, 208, 222, 769, 837], "wa": [1, 5, 7, 13, 18, 21, 33, 60, 65, 71, 79, 94, 115, 135, 141, 145, 150, 152, 159, 160, 161, 167, 168, 169, 171, 172, 182, 183, 184, 190, 192, 195, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 221, 229, 230, 231, 241, 257, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 297, 298, 332, 347, 389, 409, 410, 417, 432, 434, 475, 478, 479, 495, 497, 506, 511, 521, 531, 532, 534, 535, 540, 541, 542, 557, 558, 559, 570, 571, 572, 575, 577, 578, 579, 588, 595, 613, 617, 638, 649, 652, 653, 685, 695, 700, 701, 702, 703, 704, 716, 720, 726, 748, 764, 765, 780, 782, 787, 791, 800, 803, 808, 810, 813, 817, 835, 838, 839, 844, 845, 846, 856, 861, 862, 865, 868, 880], "been": [1, 9, 10, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 71, 74, 78, 80, 84, 86, 87, 94, 116, 119, 120, 127, 135, 141, 143, 146, 150, 151, 152, 160, 161, 163, 167, 168, 170, 172, 173, 176, 177, 179, 180, 182, 183, 184, 189, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 239, 246, 255, 256, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 289, 290, 291, 297, 298, 303, 354, 358, 359, 369, 370, 371, 377, 378, 379, 382, 383, 385, 390, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 417, 431, 453, 454, 473, 475, 476, 478, 479, 480, 486, 487, 498, 506, 526, 536, 557, 558, 559, 570, 588, 595, 618, 700, 701, 702, 703, 704, 716, 726, 728, 730, 731, 758, 772, 778, 782, 784, 786, 788, 802, 839, 847, 851, 856, 859, 861, 862, 865, 868, 880], "appli": [1, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 127, 128, 132, 134, 135, 136, 137, 141, 142, 143, 144, 146, 147, 150, 151, 152, 153, 157, 159, 160, 161, 162, 163, 167, 168, 170, 171, 173, 177, 178, 179, 180, 182, 183, 184, 185, 186, 190, 192, 196, 199, 200, 201, 203, 205, 207, 208, 210, 211, 212, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 244, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 312, 338, 353, 358, 367, 369, 371, 410, 412, 413, 417, 418, 419, 421, 423, 431, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 454, 468, 475, 476, 478, 479, 515, 518, 525, 526, 527, 528, 529, 534, 535, 537, 540, 541, 542, 557, 558, 559, 560, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 585, 588, 595, 603, 611, 615, 618, 619, 620, 640, 645, 656, 657, 658, 659, 660, 662, 667, 681, 682, 687, 688, 689, 700, 701, 702, 703, 704, 712, 716, 726, 729, 730, 732, 736, 737, 738, 748, 772, 773, 778, 779, 780, 782, 784, 786, 787, 791, 792, 793, 795, 801, 802, 806, 808, 809, 811, 818, 827, 830, 835, 839, 855, 857, 859, 862, 863, 865, 868, 880], "yet": [1, 71, 79, 94, 135, 160, 183, 190, 206, 208, 241, 264, 377, 378, 379, 382, 383, 385, 390, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 418, 423, 547, 572, 748, 839], "method": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 70, 71, 72, 73, 74, 76, 77, 78, 82, 83, 84, 85, 88, 93, 94, 95, 97, 99, 101, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 121, 127, 133, 137, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 160, 161, 163, 166, 167, 168, 169, 170, 171, 173, 176, 178, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 217, 219, 220, 221, 222, 223, 227, 231, 234, 236, 239, 240, 241, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 288, 297, 298, 299, 300, 302, 305, 306, 310, 311, 312, 313, 314, 318, 319, 320, 321, 324, 326, 327, 340, 342, 344, 347, 349, 354, 358, 359, 360, 365, 369, 370, 371, 373, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 431, 433, 445, 446, 448, 449, 450, 454, 461, 470, 473, 474, 475, 476, 477, 478, 479, 480, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 514, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 536, 537, 538, 540, 541, 542, 554, 555, 557, 558, 559, 566, 569, 570, 571, 573, 584, 586, 588, 591, 592, 593, 594, 595, 603, 605, 609, 612, 618, 620, 635, 636, 645, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 678, 681, 682, 684, 687, 688, 689, 690, 691, 693, 700, 701, 702, 703, 704, 707, 710, 712, 718, 719, 727, 728, 730, 731, 735, 737, 743, 744, 746, 748, 749, 761, 764, 768, 773, 774, 775, 776, 779, 787, 790, 792, 800, 804, 807, 835, 837, 839, 854, 855, 857, 859, 862, 863, 865, 866, 877, 880], "5": [1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 163, 165, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 244, 256, 258, 259, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 282, 297, 298, 300, 303, 307, 314, 326, 335, 338, 354, 360, 368, 380, 385, 409, 410, 416, 427, 430, 431, 433, 451, 452, 453, 466, 475, 478, 479, 502, 514, 515, 525, 531, 536, 540, 541, 542, 557, 558, 560, 561, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 581, 583, 586, 588, 592, 596, 597, 614, 622, 641, 649, 653, 686, 702, 704, 712, 716, 718, 726, 727, 728, 730, 731, 738, 748, 763, 767, 779, 780, 784, 785, 791, 793, 796, 801, 806, 811, 837, 838, 839, 845, 855, 856, 859, 861, 862, 865, 868], "becaus": [1, 4, 5, 11, 16, 18, 21, 26, 34, 41, 43, 44, 45, 50, 60, 70, 74, 81, 82, 83, 101, 114, 115, 119, 135, 141, 143, 144, 145, 147, 150, 151, 152, 159, 161, 162, 163, 167, 168, 169, 171, 172, 177, 181, 182, 183, 184, 185, 190, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 217, 221, 226, 227, 228, 231, 234, 241, 264, 265, 266, 267, 347, 358, 431, 453, 568, 577, 587, 687, 688, 690, 691, 703, 757, 778, 809, 835, 839, 843, 847, 855, 857, 859, 861, 862, 866, 880], "all": [1, 4, 5, 10, 13, 14, 18, 19, 21, 27, 28, 31, 33, 35, 40, 45, 59, 61, 63, 67, 70, 73, 79, 81, 82, 83, 90, 95, 97, 99, 103, 107, 111, 112, 113, 114, 116, 117, 119, 120, 121, 125, 127, 136, 141, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 177, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 231, 235, 239, 240, 241, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 291, 292, 295, 297, 298, 300, 302, 307, 308, 309, 310, 312, 313, 314, 317, 322, 323, 324, 327, 328, 329, 338, 348, 349, 353, 354, 358, 359, 360, 361, 365, 366, 368, 369, 370, 371, 373, 386, 410, 412, 413, 417, 419, 426, 427, 431, 434, 435, 437, 439, 440, 441, 442, 443, 444, 448, 449, 450, 451, 452, 453, 454, 458, 460, 466, 467, 468, 469, 473, 475, 476, 478, 479, 480, 484, 486, 490, 493, 500, 502, 505, 509, 513, 524, 525, 527, 529, 532, 534, 535, 536, 537, 541, 542, 544, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 568, 572, 573, 574, 575, 576, 577, 580, 583, 584, 588, 594, 596, 603, 608, 611, 612, 614, 615, 618, 619, 620, 623, 633, 638, 639, 645, 648, 650, 659, 665, 668, 677, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 695, 700, 701, 702, 703, 704, 708, 709, 710, 711, 713, 716, 717, 718, 722, 726, 727, 728, 730, 731, 735, 738, 746, 748, 755, 756, 764, 765, 766, 772, 776, 778, 779, 780, 782, 783, 784, 785, 787, 788, 789, 791, 792, 795, 797, 798, 799, 800, 801, 802, 803, 804, 806, 808, 809, 810, 811, 812, 835, 842, 846, 850, 854, 855, 856, 857, 861, 862, 865, 866, 868, 880], "were": [1, 4, 5, 10, 18, 21, 38, 81, 82, 119, 127, 135, 138, 141, 142, 143, 144, 145, 150, 151, 152, 162, 168, 169, 172, 173, 182, 183, 184, 185, 189, 191, 192, 200, 201, 202, 205, 206, 207, 208, 210, 211, 215, 216, 217, 218, 221, 226, 228, 230, 231, 264, 265, 266, 267, 269, 272, 274, 275, 278, 280, 281, 297, 298, 320, 348, 349, 360, 363, 402, 403, 434, 436, 478, 479, 501, 558, 568, 569, 577, 588, 695, 700, 701, 702, 703, 704, 792, 794, 801, 835, 839, 846, 856, 859, 861, 865, 880], "effect": [1, 7, 17, 19, 20, 21, 26, 27, 39, 57, 59, 70, 71, 74, 83, 84, 99, 103, 109, 112, 113, 120, 121, 129, 133, 142, 146, 150, 152, 161, 163, 167, 168, 169, 173, 184, 192, 199, 201, 202, 203, 207, 208, 209, 210, 211, 212, 218, 221, 222, 223, 227, 228, 230, 231, 236, 239, 240, 244, 264, 265, 266, 267, 269, 270, 271, 274, 275, 279, 297, 298, 320, 354, 358, 359, 369, 370, 371, 402, 403, 410, 411, 417, 426, 431, 433, 434, 449, 453, 454, 473, 475, 476, 478, 479, 494, 495, 525, 528, 536, 555, 558, 561, 566, 615, 681, 683, 686, 687, 688, 690, 691, 702, 704, 707, 718, 778, 782, 788, 791, 793, 795, 801, 802, 804, 806, 835, 845, 846, 859, 880], "window": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 59, 71, 72, 73, 74, 76, 82, 83, 84, 88, 93, 99, 100, 103, 104, 108, 109, 113, 114, 115, 121, 123, 129, 133, 137, 138, 142, 143, 144, 145, 147, 152, 167, 172, 173, 181, 184, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 217, 218, 221, 227, 231, 239, 240, 241, 256, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 290, 341, 343, 347, 410, 411, 415, 417, 421, 423, 426, 434, 436, 445, 446, 448, 449, 450, 459, 469, 470, 476, 478, 479, 531, 532, 558, 560, 568, 577, 580, 586, 588, 596, 652, 653, 686, 700, 701, 702, 704, 707, 710, 712, 715, 718, 719, 723, 724, 727, 728, 729, 730, 731, 732, 748, 778, 779, 780, 787, 795, 801, 802, 806, 811, 839, 842, 843, 844, 845, 880], "size": [1, 5, 8, 9, 10, 21, 22, 32, 35, 41, 43, 44, 45, 46, 53, 58, 64, 70, 71, 74, 83, 100, 108, 109, 114, 120, 126, 127, 129, 133, 134, 135, 136, 137, 143, 145, 147, 151, 152, 156, 157, 159, 161, 167, 173, 176, 178, 179, 180, 181, 182, 184, 185, 186, 190, 191, 199, 200, 202, 203, 206, 207, 208, 209, 211, 212, 215, 218, 221, 222, 223, 228, 231, 234, 239, 240, 241, 244, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 312, 320, 328, 330, 360, 410, 412, 417, 421, 422, 445, 446, 448, 449, 450, 475, 477, 478, 479, 518, 531, 557, 558, 572, 577, 583, 586, 666, 682, 686, 687, 688, 690, 691, 700, 702, 704, 724, 738, 748, 757, 761, 776, 778, 780, 786, 787, 791, 793, 794, 795, 798, 800, 801, 803, 804, 806, 807, 808, 809, 810, 811, 815, 862, 865, 880], "707": [1, 12, 19, 20, 196, 209], "need": [1, 4, 5, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 69, 70, 74, 75, 79, 86, 90, 94, 95, 103, 104, 107, 108, 109, 110, 112, 114, 117, 119, 127, 135, 136, 137, 141, 142, 143, 144, 145, 146, 150, 151, 152, 157, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 173, 176, 178, 179, 180, 181, 182, 183, 189, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 241, 244, 264, 265, 266, 267, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 283, 297, 318, 329, 372, 375, 385, 411, 412, 420, 426, 434, 443, 448, 468, 477, 478, 479, 486, 493, 501, 517, 522, 545, 558, 595, 649, 687, 688, 690, 691, 700, 702, 703, 704, 748, 754, 765, 771, 786, 791, 801, 837, 839, 840, 842, 843, 844, 845, 846, 847, 855, 856, 861, 862, 863, 865, 868, 880], "more": [1, 4, 18, 19, 27, 28, 34, 42, 43, 44, 49, 54, 58, 70, 71, 73, 75, 81, 82, 83, 84, 86, 94, 104, 107, 110, 113, 114, 121, 122, 130, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 181, 182, 185, 186, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 215, 216, 217, 218, 223, 226, 227, 228, 229, 231, 234, 236, 240, 241, 249, 258, 259, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 289, 297, 298, 305, 306, 329, 354, 358, 360, 365, 367, 371, 402, 403, 409, 410, 412, 414, 415, 417, 418, 422, 427, 429, 440, 441, 443, 444, 445, 446, 448, 449, 451, 452, 460, 469, 478, 479, 486, 495, 502, 513, 517, 520, 525, 531, 532, 533, 557, 558, 560, 566, 568, 577, 584, 588, 597, 608, 610, 614, 615, 618, 628, 637, 639, 640, 642, 645, 652, 677, 681, 682, 687, 688, 689, 690, 691, 700, 702, 703, 704, 707, 710, 718, 727, 728, 729, 730, 731, 732, 745, 748, 764, 765, 766, 767, 772, 776, 780, 783, 784, 786, 787, 791, 800, 803, 806, 808, 810, 811, 819, 820, 828, 835, 836, 837, 839, 843, 844, 845, 846, 855, 856, 857, 859, 861, 862, 863, 864, 868, 877, 880], "than": [1, 5, 13, 18, 24, 26, 33, 34, 41, 42, 44, 45, 46, 50, 54, 58, 59, 60, 69, 70, 78, 79, 83, 86, 87, 94, 114, 119, 124, 127, 135, 136, 137, 141, 142, 143, 144, 145, 147, 150, 151, 152, 157, 159, 162, 167, 168, 169, 170, 171, 172, 173, 177, 181, 182, 184, 185, 186, 189, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 226, 229, 239, 241, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 289, 305, 306, 353, 358, 365, 410, 412, 415, 417, 421, 427, 429, 439, 444, 446, 448, 449, 451, 454, 466, 475, 476, 478, 479, 495, 502, 513, 523, 531, 532, 542, 547, 549, 551, 557, 558, 560, 566, 568, 572, 574, 583, 586, 587, 589, 593, 596, 614, 619, 640, 649, 681, 687, 688, 689, 690, 691, 692, 695, 700, 702, 703, 704, 707, 710, 715, 718, 723, 729, 732, 748, 765, 766, 778, 780, 781, 784, 787, 791, 800, 801, 803, 806, 808, 810, 811, 837, 839, 844, 845, 846, 861, 862, 880], "one": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 32, 33, 34, 40, 41, 42, 43, 45, 46, 48, 49, 50, 58, 59, 65, 68, 70, 73, 74, 76, 79, 82, 83, 84, 86, 87, 88, 90, 94, 96, 97, 99, 103, 109, 111, 113, 114, 115, 117, 121, 127, 131, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 228, 229, 230, 231, 235, 240, 241, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 289, 297, 298, 311, 312, 314, 318, 319, 321, 353, 355, 356, 358, 360, 361, 365, 380, 388, 391, 393, 402, 403, 409, 410, 416, 417, 420, 423, 425, 429, 432, 433, 434, 441, 442, 444, 445, 451, 460, 467, 468, 469, 476, 477, 478, 479, 482, 486, 495, 510, 511, 513, 515, 520, 534, 535, 541, 542, 544, 547, 558, 559, 560, 561, 574, 578, 581, 582, 583, 585, 596, 599, 608, 610, 618, 619, 625, 637, 639, 645, 649, 652, 666, 671, 681, 682, 687, 688, 689, 690, 691, 693, 696, 700, 701, 702, 703, 704, 706, 709, 716, 726, 727, 728, 730, 731, 733, 736, 737, 738, 748, 761, 764, 766, 767, 772, 779, 780, 782, 783, 784, 785, 787, 788, 789, 791, 793, 806, 807, 809, 810, 811, 812, 826, 828, 835, 837, 838, 839, 842, 843, 847, 855, 856, 857, 859, 861, 862, 865, 880], "make": [1, 4, 9, 10, 13, 18, 19, 21, 27, 28, 31, 32, 34, 38, 42, 45, 48, 50, 54, 55, 59, 61, 67, 70, 75, 86, 90, 93, 94, 103, 109, 111, 112, 113, 114, 122, 124, 130, 133, 135, 136, 137, 141, 142, 143, 144, 145, 151, 152, 157, 159, 161, 162, 163, 167, 168, 170, 171, 172, 173, 177, 178, 179, 180, 181, 183, 184, 185, 186, 189, 190, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 215, 217, 221, 226, 228, 229, 230, 234, 235, 236, 241, 256, 263, 264, 265, 266, 267, 269, 271, 272, 275, 277, 278, 279, 280, 297, 298, 325, 337, 354, 358, 359, 360, 365, 369, 370, 371, 372, 410, 413, 414, 417, 419, 420, 429, 433, 434, 445, 446, 448, 449, 453, 454, 460, 467, 469, 473, 475, 476, 478, 479, 519, 536, 542, 551, 557, 558, 568, 583, 584, 587, 596, 606, 608, 618, 628, 637, 639, 652, 664, 695, 697, 701, 716, 726, 727, 728, 730, 735, 743, 744, 748, 766, 767, 770, 771, 772, 774, 785, 788, 794, 801, 806, 811, 812, 828, 835, 837, 838, 846, 847, 855, 856, 857, 859, 860, 862, 865, 868, 880], "topographi": [1, 13, 21, 27, 70, 71, 74, 86, 114, 120, 122, 130, 132, 143, 145, 152, 167, 171, 173, 177, 192, 205, 207, 208, 218, 229, 231, 239, 244, 264, 265, 266, 267, 269, 273, 274, 313, 410, 417, 478, 479, 555, 558, 573, 665, 700, 702, 704, 761, 780, 785, 786, 787, 791, 793, 797, 802, 804, 808, 809, 835, 880], "disabl": [1, 86, 114, 143, 150, 151, 152, 173, 199, 200, 203, 218, 229, 256, 261, 264, 265, 266, 267, 273, 274, 308, 365, 410, 416, 417, 422, 478, 479, 557, 558, 577, 588, 643, 647, 700, 702, 704, 743, 748, 765, 780, 782, 786, 787, 791, 800, 801, 803, 808, 810, 814, 837, 880], "interact": [1, 27, 33, 45, 47, 86, 114, 115, 120, 127, 135, 141, 150, 151, 152, 166, 167, 169, 173, 181, 182, 192, 200, 201, 205, 206, 207, 211, 215, 223, 226, 229, 230, 236, 240, 241, 244, 256, 261, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 290, 297, 410, 417, 469, 478, 479, 525, 557, 558, 596, 681, 683, 700, 702, 704, 748, 750, 764, 765, 769, 779, 780, 782, 783, 784, 786, 787, 791, 793, 795, 800, 801, 802, 803, 804, 806, 808, 809, 810, 811, 837, 839, 861, 862, 863, 868, 880], "filter": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 27, 32, 33, 34, 42, 45, 59, 68, 72, 73, 76, 77, 82, 83, 84, 85, 88, 92, 99, 109, 112, 113, 115, 121, 133, 137, 141, 142, 145, 146, 147, 150, 163, 166, 167, 168, 170, 173, 177, 182, 184, 185, 186, 192, 195, 199, 201, 204, 207, 211, 213, 214, 215, 217, 218, 223, 231, 241, 244, 256, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 342, 344, 347, 348, 351, 354, 358, 359, 369, 370, 371, 375, 410, 411, 412, 414, 417, 418, 421, 424, 425, 426, 428, 431, 439, 451, 453, 454, 473, 475, 476, 478, 479, 491, 519, 536, 555, 558, 559, 563, 569, 570, 571, 574, 575, 577, 578, 579, 588, 589, 592, 615, 654, 664, 700, 702, 703, 704, 712, 713, 716, 719, 788, 789, 790, 796, 801, 802, 820, 835, 837, 839, 855, 857, 859, 866, 869, 870, 880], "contigu": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 196, 203, 204, 205, 207, 210, 211, 212, 230, 231, 270], "segment": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 23, 24, 27, 33, 34, 38, 42, 63, 70, 73, 76, 81, 82, 83, 84, 88, 99, 109, 113, 114, 115, 121, 133, 135, 136, 137, 138, 142, 145, 146, 147, 152, 163, 169, 173, 185, 192, 196, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 217, 231, 240, 244, 256, 258, 262, 264, 265, 266, 267, 274, 277, 303, 354, 359, 439, 462, 463, 464, 477, 478, 479, 506, 518, 526, 528, 558, 560, 561, 562, 563, 564, 565, 568, 574, 575, 577, 578, 586, 588, 700, 719, 746, 748, 782, 784, 791, 793, 835, 855, 856, 862, 865, 880], "up": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 26, 27, 28, 33, 34, 42, 44, 45, 50, 69, 72, 73, 76, 79, 80, 82, 83, 84, 88, 90, 93, 94, 95, 99, 103, 104, 109, 111, 112, 113, 114, 115, 117, 121, 123, 132, 133, 135, 137, 141, 142, 145, 146, 147, 151, 152, 156, 157, 159, 160, 161, 163, 166, 167, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 217, 218, 222, 223, 227, 228, 231, 234, 236, 241, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 278, 279, 280, 410, 415, 416, 417, 422, 450, 478, 479, 531, 532, 557, 558, 560, 577, 643, 648, 649, 686, 695, 700, 702, 704, 718, 746, 748, 767, 776, 778, 779, 780, 784, 787, 791, 794, 800, 801, 803, 806, 808, 811, 812, 818, 835, 837, 843, 859, 862, 863, 865, 868, 880], "band": [1, 5, 8, 9, 12, 13, 14, 15, 16, 18, 21, 27, 32, 33, 34, 42, 72, 76, 82, 88, 94, 105, 106, 107, 109, 110, 112, 114, 115, 121, 126, 133, 137, 138, 142, 143, 145, 146, 147, 168, 173, 196, 199, 201, 202, 203, 204, 205, 207, 211, 212, 218, 230, 231, 239, 240, 241, 244, 264, 265, 266, 267, 287, 412, 418, 421, 445, 446, 448, 449, 451, 478, 479, 541, 563, 592, 679, 702, 704, 716, 726, 727, 730, 772, 780, 796, 835, 856, 859, 880], "stop": [1, 5, 29, 68, 82, 93, 96, 127, 137, 168, 173, 201, 202, 203, 210, 212, 215, 216, 217, 256, 257, 264, 265, 266, 267, 284, 285, 296, 357, 412, 421, 445, 446, 448, 449, 477, 478, 479, 519, 528, 531, 558, 577, 586, 602, 792, 795, 839, 861, 880], "fir": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 231, 256, 264, 265, 266, 267, 412, 421, 445, 446, 448, 449, 478, 479, 570, 571, 592, 713, 789, 801, 837, 859, 869, 880], "paramet": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 34, 40, 41, 42, 43, 44, 48, 54, 55, 59, 61, 67, 69, 71, 72, 73, 75, 76, 82, 83, 84, 88, 96, 97, 99, 100, 101, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 123, 128, 132, 133, 137, 138, 141, 142, 143, 145, 146, 147, 150, 151, 152, 157, 159, 160, 162, 163, 167, 169, 170, 171, 172, 173, 176, 179, 181, 189, 192, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 229, 239, 240, 241, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 839, 855, 857, 859, 862, 866, 880], "design": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 60, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 161, 162, 173, 181, 189, 191, 192, 199, 201, 203, 204, 205, 207, 208, 210, 211, 212, 223, 226, 231, 244, 257, 264, 265, 266, 267, 342, 386, 389, 412, 421, 445, 446, 448, 449, 478, 479, 486, 488, 490, 493, 494, 495, 500, 504, 557, 559, 588, 595, 602, 612, 681, 685, 712, 723, 801, 819, 820, 844, 856, 859, 861, 868, 880], "pass": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 43, 59, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 167, 168, 169, 170, 171, 172, 173, 181, 184, 190, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 228, 230, 231, 234, 235, 236, 239, 240, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 318, 322, 323, 324, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 426, 427, 429, 431, 434, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 460, 461, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 551, 554, 557, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 647, 648, 649, 651, 652, 653, 654, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 680, 687, 688, 689, 690, 691, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 722, 723, 727, 728, 730, 731, 732, 733, 736, 737, 738, 743, 747, 748, 749, 756, 761, 764, 765, 768, 770, 772, 773, 774, 776, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 791, 792, 793, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 839, 843, 844, 855, 857, 859, 862, 880], "zero": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 63, 70, 72, 73, 74, 76, 82, 83, 84, 88, 90, 93, 94, 95, 99, 109, 112, 113, 114, 115, 120, 121, 133, 137, 141, 142, 143, 145, 147, 150, 152, 153, 159, 161, 163, 167, 169, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 221, 222, 223, 226, 230, 231, 241, 257, 258, 259, 262, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 278, 279, 280, 281, 283, 297, 298, 354, 358, 360, 369, 412, 416, 421, 422, 423, 444, 445, 446, 448, 449, 450, 451, 473, 478, 479, 480, 491, 531, 542, 558, 559, 578, 602, 615, 651, 652, 653, 661, 665, 680, 687, 688, 690, 691, 695, 696, 700, 702, 703, 704, 716, 719, 726, 727, 728, 729, 730, 732, 748, 763, 767, 777, 778, 801, 806, 811, 812, 835, 839, 855, 862, 865, 880], "phase": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 105, 106, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 168, 173, 191, 192, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 223, 231, 241, 244, 264, 265, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 290, 341, 371, 412, 421, 423, 444, 445, 446, 448, 449, 451, 478, 479, 524, 529, 539, 542, 555, 558, 622, 727, 728, 738, 789, 835, 846, 856, 880], "non": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 34, 40, 41, 42, 46, 50, 59, 70, 72, 73, 76, 82, 83, 84, 88, 93, 99, 109, 113, 114, 115, 121, 133, 137, 142, 143, 144, 145, 147, 151, 152, 159, 166, 167, 170, 172, 173, 176, 181, 182, 186, 190, 191, 192, 196, 199, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 215, 221, 231, 232, 233, 244, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 286, 297, 298, 318, 353, 354, 358, 360, 410, 416, 417, 418, 422, 439, 445, 446, 448, 449, 451, 476, 478, 479, 494, 531, 538, 544, 555, 557, 558, 559, 572, 588, 589, 606, 612, 615, 635, 661, 679, 680, 687, 688, 690, 691, 695, 696, 700, 702, 703, 704, 730, 738, 748, 765, 776, 779, 780, 787, 791, 800, 803, 807, 808, 810, 835, 837, 839, 848, 855, 859, 861, 862, 877, 880], "causal": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 231, 264, 265, 266, 267, 416, 445, 446, 448, 449, 478, 479], "bandstop": [1, 5, 82, 137, 203, 212, 478, 479, 801], "domain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 46, 72, 73, 76, 82, 83, 84, 88, 99, 103, 113, 114, 115, 121, 133, 135, 137, 142, 145, 147, 152, 166, 167, 173, 192, 196, 199, 201, 202, 203, 204, 207, 210, 211, 212, 218, 231, 241, 242, 243, 244, 256, 264, 265, 266, 267, 412, 421, 422, 446, 448, 449, 450, 451, 478, 479, 541, 542, 649, 702, 704, 718, 719, 736, 743, 861, 880], "ham": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 192, 196, 202, 203, 204, 205, 207, 210, 211, 212, 231, 264, 265, 266, 267, 412, 421, 446, 448, 449, 478, 479, 719, 802, 880], "0194": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 192, 196, 202, 203, 204, 205, 210, 211, 212, 231], "passband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 231, 855], "rippl": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 192, 196, 203, 204, 205, 210, 211, 212, 231], "db": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 108, 109, 113, 114, 115, 121, 129, 133, 137, 138, 142, 143, 145, 147, 152, 170, 173, 192, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 215, 218, 221, 223, 231, 239, 240, 241, 264, 265, 266, 267, 269, 311, 312, 371, 373, 443, 446, 478, 479, 493, 504, 531, 555, 556, 558, 645, 695, 700, 702, 703, 704, 748, 764, 780, 789, 793, 796, 802, 804, 835, 862, 880], "stopband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 192, 196, 203, 204, 205, 210, 211, 212, 231], "attenu": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 163, 192, 196, 203, 204, 205, 210, 211, 212, 231, 264, 265, 266, 267, 412, 421, 446, 448, 449, 478, 479, 862, 880], "lower": [1, 2, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 34, 37, 40, 42, 49, 54, 55, 61, 70, 72, 73, 76, 82, 83, 88, 99, 107, 112, 113, 114, 115, 120, 121, 127, 133, 135, 137, 142, 143, 145, 147, 152, 157, 161, 173, 181, 182, 185, 196, 199, 201, 202, 203, 204, 205, 206, 207, 211, 212, 218, 228, 229, 230, 231, 234, 236, 241, 259, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 410, 412, 415, 417, 436, 446, 448, 478, 479, 518, 531, 532, 557, 558, 563, 568, 572, 592, 611, 679, 686, 687, 689, 690, 700, 701, 702, 704, 718, 719, 765, 767, 772, 779, 780, 786, 787, 791, 800, 801, 802, 803, 806, 808, 810, 811, 812, 835, 837, 880], "transit": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 231, 257, 264, 265, 266, 267, 412, 421, 446, 448, 449, 478, 479, 560, 592, 814, 862, 880], "bandwidth": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 104, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 231, 241, 264, 265, 266, 267, 415, 423, 449, 478, 479, 531, 532, 702, 704, 707, 710, 712, 718, 728, 731, 780, 880], "50": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 28, 34, 35, 41, 42, 45, 46, 47, 65, 72, 76, 81, 82, 83, 84, 88, 90, 95, 99, 103, 104, 108, 109, 112, 113, 114, 115, 120, 121, 133, 136, 137, 138, 144, 145, 147, 150, 152, 159, 161, 167, 169, 170, 171, 172, 173, 179, 181, 185, 186, 190, 192, 195, 196, 199, 201, 202, 203, 204, 205, 207, 209, 212, 215, 216, 217, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 241, 244, 256, 335, 445, 478, 479, 540, 567, 657, 662, 680, 688, 748, 796, 855, 862, 880], "hz": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 68, 71, 72, 73, 76, 81, 82, 83, 84, 88, 90, 93, 94, 95, 99, 104, 107, 108, 109, 113, 114, 115, 121, 123, 127, 133, 137, 138, 142, 143, 145, 147, 152, 167, 168, 169, 170, 173, 181, 184, 185, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 228, 229, 230, 231, 239, 240, 244, 256, 264, 265, 266, 267, 412, 415, 421, 445, 446, 448, 449, 451, 478, 479, 531, 532, 558, 563, 566, 570, 571, 577, 579, 582, 588, 592, 666, 686, 700, 702, 703, 704, 707, 710, 716, 718, 724, 726, 727, 728, 730, 731, 778, 780, 789, 796, 801, 802, 856, 865, 866], "upper": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 34, 39, 42, 61, 70, 72, 76, 82, 84, 88, 113, 114, 115, 120, 121, 127, 133, 135, 137, 142, 143, 145, 147, 160, 167, 173, 192, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 231, 240, 241, 244, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 282, 410, 412, 415, 417, 436, 446, 448, 454, 478, 479, 531, 532, 557, 558, 563, 592, 679, 686, 687, 688, 689, 690, 691, 700, 701, 702, 703, 704, 716, 718, 719, 726, 765, 767, 772, 780, 786, 787, 791, 800, 802, 803, 806, 808, 810, 811, 812, 880], "7921": 1, "601": [1, 5, 141, 150, 199, 204, 215, 231], "parallel": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 31, 32, 33, 34, 41, 42, 45, 50, 65, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 221, 223, 228, 229, 230, 231, 240, 244, 256, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 412, 413, 415, 416, 420, 421, 423, 426, 427, 448, 449, 450, 453, 455, 466, 468, 473, 475, 476, 478, 479, 517, 520, 521, 531, 532, 536, 541, 542, 563, 570, 571, 596, 640, 643, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 732, 780, 783, 802, 847, 859, 862, 868, 880], "n_job": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 96, 99, 100, 103, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 221, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 256, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 412, 413, 415, 416, 420, 421, 422, 423, 426, 427, 448, 449, 450, 453, 466, 468, 478, 479, 517, 520, 521, 531, 532, 541, 542, 563, 570, 571, 640, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 732, 780, 783, 802, 837, 859, 880], "backend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 79, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 135, 137, 142, 145, 147, 151, 152, 157, 159, 160, 161, 167, 172, 173, 177, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 221, 223, 228, 229, 230, 231, 240, 264, 265, 271, 272, 275, 278, 279, 280, 469, 478, 479, 558, 748, 755, 757, 758, 759, 760, 778, 795, 801, 806, 811, 813, 817, 818, 819, 820, 837, 838, 843, 859, 868, 880], "sequentialbackend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 221, 223, 228, 229, 230, 231, 240], "concurr": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 221, 223, 228, 229, 230, 231, 240], "worker": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 221, 223, 228, 229, 230, 231, 240, 868], "done": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 70, 72, 73, 76, 78, 79, 80, 82, 83, 84, 87, 88, 90, 92, 93, 94, 95, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 119, 121, 124, 131, 133, 134, 135, 136, 137, 141, 142, 144, 145, 147, 151, 152, 156, 157, 159, 160, 161, 162, 163, 167, 168, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 257, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 297, 298, 320, 359, 423, 473, 475, 476, 478, 479, 525, 527, 528, 529, 558, 570, 571, 573, 575, 686, 700, 701, 703, 725, 727, 728, 730, 731, 746, 748, 751, 764, 772, 802, 835, 839, 844, 845, 855, 859, 861, 862, 868, 880], "out": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 68, 70, 72, 73, 74, 76, 78, 80, 82, 83, 84, 87, 88, 90, 92, 94, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 120, 121, 123, 124, 127, 131, 133, 135, 137, 138, 141, 142, 144, 145, 147, 151, 152, 157, 159, 160, 161, 167, 168, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 218, 221, 223, 226, 228, 229, 230, 231, 240, 241, 256, 261, 264, 265, 266, 267, 269, 273, 288, 302, 338, 355, 356, 357, 410, 412, 417, 421, 446, 448, 478, 479, 486, 501, 524, 532, 557, 558, 559, 572, 596, 602, 604, 692, 700, 702, 704, 727, 728, 735, 765, 772, 780, 784, 787, 791, 792, 800, 803, 808, 810, 837, 838, 839, 845, 856, 857, 859, 862, 865, 866, 880], "elaps": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 221, 223, 228, 229, 230, 231, 240], "remain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 68, 72, 73, 75, 76, 78, 82, 83, 84, 87, 88, 90, 92, 94, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 131, 133, 137, 138, 142, 145, 147, 151, 152, 157, 159, 160, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 221, 223, 228, 229, 230, 231, 240, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 433, 453, 454, 473, 475, 476, 478, 479, 480, 536, 558, 641, 688, 700, 702, 703, 727, 728, 730, 731, 788, 847, 855, 865, 868, 880], "299": [1, 5, 34, 141, 170, 185, 196, 209, 226, 239], "finish": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 135, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 212, 217, 221, 223, 228, 229, 230, 231, 240, 857, 880], "66": [1, 12, 16, 19, 21, 35, 40, 41, 45, 79, 81, 103, 108, 112, 114, 145, 147, 159, 170, 177, 182, 185, 192, 195, 196, 205, 209, 226, 227, 230, 231, 244, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 473, 475, 476, 536, 558, 788, 880], "id": [1, 5, 12, 21, 32, 33, 34, 42, 45, 46, 49, 69, 71, 72, 73, 80, 81, 82, 90, 93, 94, 95, 99, 107, 108, 110, 112, 113, 141, 142, 143, 147, 150, 153, 163, 167, 169, 170, 172, 173, 178, 181, 183, 184, 186, 192, 196, 200, 203, 204, 205, 207, 212, 221, 222, 223, 228, 240, 256, 259, 264, 265, 266, 269, 271, 272, 275, 277, 278, 279, 280, 283, 297, 298, 313, 354, 368, 376, 426, 432, 434, 436, 438, 439, 451, 463, 478, 479, 518, 519, 523, 553, 559, 570, 571, 580, 605, 612, 614, 615, 621, 649, 702, 703, 748, 781, 801, 806, 811, 825, 839, 859, 862, 880], "Not": [1, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 69, 71, 72, 73, 74, 76, 80, 81, 82, 83, 88, 90, 93, 94, 95, 96, 97, 100, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 121, 127, 128, 132, 136, 137, 138, 141, 142, 143, 144, 146, 147, 150, 152, 153, 167, 168, 169, 170, 173, 178, 181, 183, 184, 185, 186, 192, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 234, 236, 240, 266, 267, 272, 278, 279, 280, 418, 421, 445, 454, 559, 700, 748, 784, 812, 838, 862, 868], "metadata": [1, 4, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 69, 71, 72, 73, 74, 80, 83, 88, 90, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 121, 128, 132, 136, 137, 138, 141, 142, 143, 146, 147, 148, 149, 150, 152, 153, 162, 166, 167, 173, 178, 181, 183, 184, 185, 186, 189, 190, 191, 192, 199, 200, 201, 203, 204, 205, 207, 211, 212, 215, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 259, 264, 265, 266, 267, 268, 269, 353, 434, 439, 478, 479, 484, 611, 631, 700, 702, 703, 704, 772, 835, 856, 880], "33": [1, 8, 12, 13, 19, 21, 28, 33, 34, 35, 39, 40, 41, 45, 47, 76, 79, 81, 103, 108, 112, 114, 115, 116, 130, 138, 142, 145, 152, 170, 171, 175, 183, 184, 188, 195, 196, 203, 205, 209, 226, 227, 228, 230, 231, 235, 236, 264, 265, 266, 267, 335, 451, 478, 479, 522, 802, 862, 880], "interv": [1, 10, 11, 28, 32, 33, 34, 38, 45, 46, 49, 61, 69, 70, 71, 72, 80, 83, 90, 93, 94, 95, 96, 97, 100, 103, 104, 107, 110, 112, 113, 117, 127, 128, 132, 141, 143, 145, 146, 150, 151, 152, 153, 167, 173, 177, 178, 179, 181, 183, 184, 185, 186, 192, 200, 201, 203, 204, 207, 210, 211, 222, 223, 228, 229, 230, 234, 236, 240, 256, 258, 259, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 287, 346, 359, 434, 531, 541, 542, 558, 574, 575, 580, 618, 619, 650, 652, 677, 679, 700, 702, 703, 704, 713, 772, 793, 808, 856, 866, 880], "mode": [1, 5, 11, 22, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 69, 71, 72, 73, 78, 80, 86, 87, 93, 94, 95, 96, 97, 100, 103, 104, 107, 110, 112, 113, 114, 117, 119, 120, 127, 128, 131, 132, 137, 141, 142, 143, 145, 146, 150, 152, 153, 159, 162, 167, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 196, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 217, 218, 222, 228, 229, 230, 231, 234, 236, 240, 241, 244, 256, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 287, 297, 298, 341, 354, 358, 359, 360, 364, 365, 369, 370, 371, 409, 410, 416, 417, 444, 448, 449, 450, 469, 473, 478, 479, 517, 534, 535, 557, 558, 580, 588, 641, 663, 666, 695, 700, 701, 702, 703, 704, 725, 748, 774, 776, 778, 779, 780, 784, 787, 790, 791, 795, 800, 801, 802, 803, 806, 807, 808, 811, 812, 817, 839, 847, 868, 880], "mean": [1, 4, 8, 9, 10, 11, 14, 16, 19, 21, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 78, 80, 84, 86, 87, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 110, 112, 113, 114, 117, 119, 120, 127, 128, 132, 138, 141, 142, 143, 144, 145, 146, 150, 151, 153, 157, 158, 159, 161, 167, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 215, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 258, 259, 261, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 277, 278, 279, 280, 287, 290, 297, 298, 314, 318, 354, 359, 410, 416, 417, 419, 422, 431, 443, 444, 452, 469, 473, 475, 476, 478, 479, 480, 486, 493, 500, 511, 517, 525, 531, 534, 535, 536, 541, 542, 557, 558, 562, 565, 568, 569, 572, 574, 577, 579, 586, 588, 597, 605, 618, 619, 645, 652, 653, 654, 663, 664, 666, 679, 682, 687, 688, 689, 690, 691, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 716, 719, 726, 727, 728, 730, 731, 748, 772, 774, 778, 779, 780, 782, 787, 791, 800, 801, 802, 803, 806, 808, 810, 839, 844, 859, 861, 862, 865, 880], "activ": [1, 4, 5, 8, 11, 12, 16, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 82, 83, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 130, 132, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 159, 160, 163, 167, 168, 169, 173, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 190, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 244, 257, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 297, 298, 324, 348, 436, 439, 444, 451, 453, 457, 473, 475, 476, 477, 478, 479, 483, 494, 498, 511, 514, 524, 525, 526, 527, 528, 529, 536, 539, 555, 563, 573, 592, 618, 620, 622, 623, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 665, 672, 675, 692, 695, 700, 702, 703, 704, 716, 726, 727, 730, 757, 767, 769, 776, 807, 812, 835, 837, 838, 839, 840, 842, 843, 846, 847, 855, 856, 859, 861, 862, 865, 868, 880], "projector": [1, 2, 4, 5, 8, 9, 16, 18, 21, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 68, 69, 71, 73, 76, 83, 90, 92, 93, 94, 99, 101, 103, 109, 119, 121, 127, 132, 141, 142, 147, 150, 151, 152, 153, 163, 166, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 199, 200, 203, 204, 205, 211, 212, 213, 214, 215, 222, 223, 227, 228, 229, 230, 231, 234, 236, 256, 264, 265, 266, 267, 269, 273, 274, 297, 298, 354, 355, 356, 357, 358, 359, 369, 370, 371, 410, 417, 440, 441, 442, 443, 453, 454, 473, 475, 476, 478, 479, 498, 525, 536, 558, 570, 571, 588, 618, 626, 645, 701, 705, 706, 707, 708, 709, 710, 711, 778, 788, 795, 799, 800, 801, 820, 831, 835, 855, 857, 859, 862, 880], "n_channel": [1, 16, 18, 19, 28, 31, 35, 42, 51, 58, 59, 63, 65, 67, 69, 70, 71, 74, 75, 76, 81, 83, 84, 90, 99, 103, 114, 119, 127, 132, 141, 142, 143, 144, 150, 151, 152, 160, 163, 167, 168, 169, 173, 177, 178, 181, 182, 183, 191, 196, 199, 200, 203, 204, 205, 206, 207, 208, 211, 215, 218, 221, 223, 228, 229, 230, 231, 234, 236, 241, 256, 259, 261, 263, 264, 265, 266, 267, 268, 269, 297, 298, 313, 314, 318, 329, 369, 410, 411, 412, 415, 416, 417, 418, 419, 421, 423, 424, 426, 448, 449, 478, 479, 557, 558, 559, 563, 566, 668, 685, 686, 700, 701, 702, 703, 704, 705, 706, 707, 727, 728, 729, 765, 768, 772, 778, 779, 780, 787, 801, 803, 808, 810, 818, 835, 880], "No": [1, 2, 4, 5, 8, 9, 12, 16, 18, 21, 34, 41, 46, 48, 50, 54, 55, 74, 80, 83, 88, 90, 101, 108, 109, 112, 113, 114, 116, 117, 121, 127, 128, 136, 137, 138, 141, 142, 143, 144, 147, 150, 152, 157, 167, 172, 173, 179, 185, 186, 191, 192, 196, 199, 202, 204, 205, 207, 210, 211, 212, 221, 223, 226, 227, 231, 240, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 386, 411, 426, 473, 475, 476, 478, 479, 525, 527, 528, 529, 664, 802, 838, 839, 856, 861, 865], "gradiomet": [1, 22, 32, 34, 35, 46, 59, 71, 73, 76, 80, 82, 87, 93, 100, 103, 108, 109, 110, 111, 113, 117, 119, 120, 143, 146, 147, 151, 163, 167, 168, 169, 170, 181, 184, 185, 189, 192, 199, 200, 201, 203, 205, 206, 207, 209, 210, 215, 216, 217, 218, 221, 223, 226, 228, 229, 230, 240, 256, 259, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 297, 298, 354, 355, 356, 357, 358, 359, 369, 370, 371, 410, 417, 431, 453, 454, 473, 475, 476, 478, 479, 514, 536, 555, 556, 557, 558, 568, 569, 570, 571, 572, 573, 574, 575, 577, 588, 599, 686, 700, 702, 703, 704, 765, 771, 772, 778, 779, 780, 782, 784, 786, 787, 788, 791, 800, 801, 803, 808, 809, 810, 835, 855, 859, 862, 865, 880], "forc": [1, 4, 147, 162, 167, 179, 192, 201, 256, 264, 265, 266, 267, 308, 319, 364, 375, 377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 478, 479, 502, 525, 614, 700, 702, 703, 704, 748, 837, 839, 856, 880], "n_grad": [1, 192, 207, 256, 355, 356, 357, 570, 571], "n_eeg": [1, 147, 192, 207, 256, 355, 356, 357, 570, 571], "axial": [1, 33, 47, 82, 84, 92, 109, 111, 131, 136, 143, 147, 161, 173, 181, 184, 192, 199, 206, 207, 226, 262, 279, 280, 748, 766, 776, 862], "100": [1, 2, 5, 10, 11, 13, 16, 19, 22, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 74, 75, 78, 79, 81, 83, 86, 87, 90, 92, 95, 96, 101, 103, 104, 108, 109, 111, 112, 114, 115, 116, 119, 120, 123, 125, 127, 135, 136, 137, 138, 141, 142, 144, 145, 146, 147, 150, 152, 157, 159, 170, 171, 173, 177, 178, 179, 180, 181, 182, 184, 185, 191, 192, 195, 196, 201, 202, 203, 205, 207, 209, 212, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 244, 256, 264, 265, 266, 267, 274, 360, 431, 450, 475, 476, 478, 479, 501, 569, 577, 583, 588, 666, 686, 702, 704, 729, 732, 738, 748, 778, 796, 801, 856, 861, 865, 880], "pca": [1, 5, 11, 13, 15, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 74, 76, 78, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 141, 142, 143, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 234, 236, 264, 266, 267, 269, 272, 278, 280, 297, 298, 354, 369, 373, 424, 473, 476, 478, 531, 532, 541, 542, 555, 558, 615, 792, 855, 866, 880], "01": [1, 6, 8, 11, 12, 13, 19, 21, 24, 25, 32, 33, 34, 35, 46, 56, 59, 67, 71, 73, 76, 78, 83, 84, 85, 90, 91, 92, 93, 103, 108, 109, 111, 112, 113, 120, 121, 123, 124, 127, 130, 131, 138, 140, 142, 143, 147, 151, 152, 155, 159, 160, 165, 167, 168, 169, 170, 171, 173, 175, 181, 182, 184, 186, 188, 192, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 223, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 240, 241, 243, 244, 255, 256, 258, 264, 265, 341, 343, 347, 380, 402, 403, 418, 478, 479, 489, 572, 577, 580, 586, 593, 597, 695, 856], "02": [1, 2, 5, 11, 13, 19, 20, 33, 34, 35, 56, 63, 66, 67, 82, 84, 85, 92, 103, 108, 109, 111, 114, 120, 123, 126, 130, 131, 137, 140, 143, 147, 149, 151, 158, 161, 165, 171, 173, 175, 181, 184, 195, 196, 202, 206, 207, 208, 209, 211, 212, 217, 226, 227, 228, 230, 231, 233, 236, 241, 244, 255, 256, 264, 265, 321, 473, 476, 478, 479, 489, 716, 726, 727, 729, 730, 732], "creat": [1, 2, 4, 5, 8, 9, 11, 15, 16, 18, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 73, 75, 80, 83, 86, 88, 92, 93, 95, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 123, 125, 127, 128, 132, 134, 135, 136, 137, 142, 143, 146, 147, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 196, 199, 200, 201, 202, 203, 205, 206, 215, 218, 223, 224, 225, 227, 229, 231, 234, 236, 239, 240, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 288, 297, 298, 302, 307, 308, 309, 312, 326, 354, 355, 356, 360, 365, 372, 373, 410, 417, 423, 427, 432, 434, 445, 446, 451, 478, 479, 490, 495, 501, 514, 515, 516, 521, 522, 524, 547, 557, 558, 560, 561, 563, 567, 570, 571, 574, 575, 578, 584, 612, 614, 638, 639, 640, 642, 645, 649, 650, 654, 677, 680, 686, 695, 700, 701, 702, 703, 704, 713, 719, 725, 727, 728, 730, 731, 735, 748, 751, 753, 756, 761, 764, 765, 771, 772, 774, 776, 779, 780, 783, 784, 785, 786, 787, 791, 793, 796, 798, 799, 800, 801, 802, 803, 804, 806, 808, 810, 811, 819, 820, 830, 835, 837, 843, 847, 856, 860, 865, 868, 870, 880], "an": [1, 4, 5, 7, 11, 12, 15, 18, 19, 21, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 63, 67, 68, 69, 71, 73, 74, 78, 79, 82, 83, 84, 88, 90, 92, 93, 94, 95, 101, 104, 107, 108, 109, 110, 111, 112, 114, 115, 119, 120, 121, 122, 127, 128, 129, 130, 132, 135, 136, 137, 138, 141, 142, 145, 147, 150, 151, 152, 153, 154, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 171, 172, 176, 177, 178, 179, 180, 182, 184, 187, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 242, 243, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 312, 314, 316, 317, 318, 321, 324, 325, 328, 330, 339, 347, 348, 349, 354, 358, 360, 361, 363, 365, 369, 370, 372, 373, 385, 388, 389, 393, 409, 410, 416, 417, 418, 422, 425, 427, 428, 429, 432, 434, 435, 437, 439, 444, 445, 446, 449, 450, 451, 452, 453, 457, 458, 460, 465, 469, 473, 475, 476, 477, 478, 479, 480, 483, 485, 487, 488, 493, 494, 495, 496, 498, 502, 504, 505, 510, 511, 513, 514, 517, 520, 521, 522, 524, 525, 527, 531, 532, 534, 535, 536, 538, 539, 540, 543, 545, 547, 549, 551, 554, 555, 557, 558, 559, 560, 561, 562, 566, 568, 570, 571, 572, 574, 575, 577, 579, 583, 586, 587, 588, 589, 595, 598, 601, 606, 607, 608, 609, 610, 613, 615, 617, 618, 620, 628, 630, 634, 635, 637, 639, 640, 642, 645, 648, 649, 650, 653, 656, 660, 665, 666, 672, 675, 677, 680, 681, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 700, 701, 702, 703, 704, 705, 706, 707, 708, 713, 719, 720, 730, 731, 734, 735, 738, 740, 746, 748, 749, 757, 761, 763, 764, 765, 769, 770, 772, 774, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 814, 816, 818, 826, 827, 828, 835, 837, 838, 839, 843, 844, 845, 846, 851, 856, 857, 858, 859, 861, 862, 863, 865, 866, 868, 880], "oper": [1, 5, 11, 15, 18, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 68, 69, 71, 73, 84, 88, 90, 92, 93, 95, 104, 107, 108, 109, 110, 121, 124, 132, 135, 141, 142, 143, 146, 147, 150, 152, 153, 156, 157, 163, 164, 165, 166, 167, 168, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 192, 196, 200, 201, 202, 203, 205, 206, 207, 210, 215, 222, 223, 228, 229, 231, 234, 236, 244, 257, 258, 261, 264, 265, 266, 267, 268, 269, 270, 274, 275, 277, 278, 282, 284, 285, 297, 298, 300, 302, 312, 316, 317, 328, 334, 347, 353, 373, 374, 381, 388, 411, 416, 419, 426, 431, 432, 435, 448, 449, 450, 451, 455, 456, 457, 473, 474, 475, 476, 478, 479, 480, 486, 493, 511, 520, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 551, 556, 558, 561, 563, 580, 586, 602, 605, 607, 615, 620, 630, 641, 642, 652, 653, 654, 661, 663, 664, 665, 666, 679, 687, 688, 689, 690, 691, 694, 697, 700, 701, 727, 728, 729, 730, 731, 732, 734, 764, 805, 813, 816, 817, 827, 835, 837, 839, 845, 847, 856, 859, 865, 866, 878, 880], "subspac": [1, 11, 15, 18, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 69, 71, 73, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 132, 141, 142, 143, 146, 147, 150, 152, 153, 163, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 192, 200, 201, 203, 205, 206, 207, 210, 222, 231, 234, 236, 256, 573, 588, 835], "dimens": [1, 11, 15, 18, 19, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 69, 71, 73, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 127, 132, 141, 142, 143, 146, 147, 150, 152, 153, 161, 163, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 192, 195, 196, 200, 201, 203, 205, 206, 207, 209, 222, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 261, 264, 265, 266, 267, 271, 272, 273, 274, 275, 277, 278, 279, 280, 287, 313, 360, 410, 413, 416, 417, 420, 421, 423, 425, 449, 450, 473, 475, 476, 478, 479, 531, 532, 534, 535, 541, 542, 557, 558, 572, 680, 681, 685, 687, 688, 690, 691, 700, 702, 703, 704, 718, 719, 729, 738, 748, 757, 765, 780, 787, 791, 800, 801, 803, 808, 810, 835, 855, 862, 865, 880], "fran\u00e7oi": [1, 71, 78, 109, 184, 185, 192, 200, 244, 558, 567, 862], "tadel": [1, 109, 184, 185, 192, 244], "sylvain": [1, 109, 184, 185, 192, 244], "baillet": [1, 109, 184, 185, 192, 244], "john": [1, 18, 19, 51, 68, 83, 109, 126, 179, 181, 184, 185, 192, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 387, 388, 414, 416, 428, 473, 478, 479, 525, 536, 558, 573, 592, 657, 662, 700, 703, 856, 862, 880], "c": [1, 4, 10, 11, 12, 19, 22, 44, 51, 70, 74, 96, 109, 112, 115, 121, 126, 135, 138, 162, 172, 177, 181, 184, 185, 189, 192, 195, 196, 206, 212, 228, 229, 230, 231, 241, 244, 256, 257, 270, 275, 276, 277, 300, 335, 338, 354, 360, 387, 402, 403, 416, 417, 451, 454, 473, 478, 479, 515, 521, 533, 558, 566, 597, 615, 660, 665, 729, 732, 748, 837, 838, 839, 843, 844, 846, 851, 854, 855, 856, 862, 863, 865, 868, 869, 880], "mosher": [1, 51, 109, 181, 184, 185, 192, 244, 300, 862], "dimitrio": [1, 10, 109, 184, 185, 192, 244, 856], "pantazi": [1, 10, 109, 184, 185, 192, 244, 856], "richard": [1, 51, 109, 184, 185, 192, 209, 240, 244, 388, 558, 566, 682, 856, 862, 867, 880], "leahi": [1, 51, 109, 184, 185, 192, 244, 300, 862], "user": [1, 45, 75, 79, 94, 109, 135, 143, 157, 166, 168, 172, 173, 184, 185, 190, 191, 192, 201, 202, 215, 244, 257, 259, 264, 265, 266, 267, 268, 269, 271, 272, 275, 277, 278, 279, 280, 377, 378, 379, 380, 382, 383, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 431, 439, 470, 477, 478, 479, 495, 558, 577, 595, 646, 698, 699, 700, 703, 765, 778, 785, 795, 801, 810, 837, 839, 841, 843, 844, 846, 850, 855, 856, 858, 859, 861, 863, 864, 880], "friendli": [1, 109, 184, 185, 192, 244], "applic": [1, 15, 70, 73, 88, 109, 150, 163, 171, 179, 184, 185, 192, 196, 202, 205, 206, 207, 210, 241, 244, 259, 264, 265, 266, 267, 412, 417, 421, 434, 446, 448, 449, 462, 478, 479, 502, 517, 518, 559, 585, 588, 611, 614, 702, 704, 748, 780, 801, 839, 842, 846, 851, 859, 862, 880], "analysi": [1, 3, 6, 8, 13, 15, 17, 20, 42, 43, 44, 70, 74, 83, 88, 96, 97, 101, 109, 127, 135, 141, 143, 145, 146, 154, 155, 156, 161, 162, 168, 169, 172, 173, 174, 175, 179, 184, 185, 189, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 215, 216, 218, 223, 226, 227, 228, 230, 231, 239, 243, 244, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 278, 279, 280, 297, 298, 312, 314, 328, 353, 354, 360, 363, 373, 403, 410, 418, 424, 434, 439, 451, 467, 473, 478, 479, 488, 524, 525, 539, 549, 555, 558, 559, 566, 572, 584, 586, 615, 645, 649, 653, 660, 681, 682, 685, 687, 700, 702, 703, 704, 712, 714, 716, 718, 726, 727, 728, 729, 730, 731, 732, 748, 772, 781, 810, 820, 835, 838, 840, 842, 846, 851, 854, 855, 856, 861, 862, 863, 868, 870, 877, 878, 880], "intellig": [1, 109, 184, 185, 192, 195, 244, 416, 450], "neurosci": [1, 4, 10, 16, 19, 43, 70, 74, 109, 113, 152, 184, 185, 192, 195, 196, 202, 231, 244, 276, 360, 411, 416, 426, 558, 563, 566, 660, 687, 688, 690, 691, 716, 726, 727, 729, 730, 732, 854, 856, 861], "2011": [1, 15, 21, 32, 34, 59, 88, 109, 152, 170, 184, 185, 190, 192, 202, 223, 226, 244, 297, 418, 476, 525, 559, 693, 694, 862], "13": [1, 9, 10, 11, 12, 13, 16, 19, 21, 24, 25, 26, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 67, 74, 76, 79, 80, 81, 83, 84, 85, 93, 94, 96, 97, 100, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 124, 130, 132, 133, 134, 136, 137, 140, 141, 143, 145, 146, 147, 149, 150, 151, 153, 159, 163, 167, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 194, 196, 201, 202, 204, 207, 209, 211, 215, 221, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 259, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 282, 335, 359, 380, 402, 421, 431, 445, 446, 448, 449, 451, 478, 479, 558, 574, 575, 588, 615, 631, 634, 663, 666, 700, 703, 730, 731, 782, 793, 804, 833, 835, 844, 854, 855, 862], "doi": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 70, 71, 74, 75, 78, 83, 84, 88, 94, 101, 109, 112, 113, 117, 119, 121, 126, 129, 135, 138, 142, 145, 152, 156, 158, 163, 177, 179, 181, 184, 185, 192, 195, 196, 200, 202, 204, 205, 206, 207, 208, 210, 212, 223, 226, 227, 231, 239, 244, 264, 265, 266, 267, 270, 275, 276, 290, 297, 298, 300, 354, 360, 380, 387, 388, 392, 393, 402, 403, 410, 411, 414, 416, 417, 418, 426, 428, 434, 473, 475, 476, 478, 479, 525, 526, 536, 540, 557, 558, 559, 563, 566, 567, 569, 572, 573, 588, 592, 595, 596, 603, 645, 653, 657, 660, 662, 665, 684, 686, 687, 688, 689, 690, 691, 693, 694, 702, 704, 712, 714, 716, 718, 719, 726, 727, 729, 730, 732, 765, 854, 855, 856, 859, 862], "10": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 58, 59, 60, 63, 65, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 93, 94, 95, 101, 103, 104, 108, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 126, 127, 128, 129, 130, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 152, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 241, 244, 258, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 290, 297, 298, 300, 309, 312, 324, 330, 335, 340, 344, 347, 350, 351, 352, 354, 360, 365, 380, 387, 388, 392, 393, 402, 403, 410, 411, 412, 414, 416, 417, 418, 421, 426, 428, 431, 434, 445, 446, 448, 449, 454, 473, 475, 476, 478, 479, 502, 515, 516, 525, 526, 536, 540, 545, 557, 558, 559, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 577, 578, 579, 582, 584, 588, 592, 595, 596, 603, 614, 636, 645, 653, 657, 660, 662, 664, 665, 666, 681, 683, 684, 686, 687, 688, 689, 690, 691, 693, 694, 700, 702, 703, 704, 712, 714, 716, 718, 719, 726, 727, 728, 729, 730, 731, 732, 738, 748, 753, 763, 765, 778, 780, 787, 789, 790, 795, 796, 801, 806, 811, 838, 839, 842, 845, 854, 855, 856, 859, 862, 865, 868], "1155": [1, 19, 109, 184, 185, 192, 244], "879716": [1, 109, 184, 185, 192, 244], "total": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 243, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 358, 374, 427, 478, 479, 560, 605, 695, 702, 704, 780, 806, 811, 862, 865, 880], "run": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 256, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 303, 321, 347, 354, 355, 357, 359, 375, 380, 412, 413, 416, 420, 421, 423, 426, 427, 448, 449, 450, 453, 466, 468, 478, 479, 511, 517, 520, 521, 531, 532, 541, 542, 558, 563, 570, 571, 572, 577, 578, 581, 586, 589, 605, 640, 648, 651, 652, 653, 654, 663, 664, 665, 666, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 732, 748, 771, 778, 780, 783, 787, 790, 791, 795, 801, 802, 837, 838, 842, 843, 844, 845, 847, 856, 861, 862, 863, 866, 880], "script": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 274, 478, 479, 801, 839, 840, 842, 844, 845, 846, 856, 859, 860, 862, 865, 868, 870, 880], "minut": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 264, 265, 276, 282, 433, 478, 479, 558, 652, 653, 795, 801, 843], "561": [1, 6, 118, 130], "second": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 284, 285, 287, 296, 297, 298, 322, 323, 341, 343, 359, 410, 416, 417, 422, 434, 436, 439, 444, 445, 447, 451, 452, 476, 477, 478, 479, 498, 501, 513, 518, 519, 528, 531, 557, 558, 560, 561, 562, 563, 566, 568, 570, 571, 574, 577, 578, 579, 580, 581, 588, 596, 602, 606, 615, 618, 650, 666, 686, 687, 688, 690, 691, 692, 694, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 728, 731, 748, 756, 772, 779, 780, 781, 784, 787, 791, 792, 793, 795, 800, 801, 802, 803, 806, 808, 811, 825, 835, 839, 845, 855, 856, 859, 862, 865, 880], "estim": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 245, 256, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 284, 285, 289, 290, 291, 292, 294, 295, 297, 298, 312, 320, 328, 341, 343, 347, 354, 358, 359, 360, 365, 366, 367, 369, 370, 371, 373, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 431, 444, 445, 447, 449, 450, 451, 453, 454, 457, 473, 474, 475, 476, 478, 479, 483, 511, 513, 514, 520, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 545, 558, 559, 563, 567, 568, 574, 578, 581, 586, 588, 600, 602, 603, 618, 620, 623, 628, 629, 630, 640, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 667, 681, 685, 686, 692, 693, 695, 696, 702, 704, 705, 706, 707, 708, 709, 710, 719, 727, 728, 730, 731, 748, 764, 765, 771, 772, 773, 780, 788, 795, 802, 805, 806, 807, 810, 811, 812, 835, 840, 846, 848, 856, 859, 865, 868, 870, 878, 880], "usag": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 256, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 419, 423, 478, 479, 588, 687, 688, 690, 691, 700, 702, 703, 704, 706, 709, 725, 727, 728, 729, 730, 731, 732, 835, 858, 859, 862, 865, 880], "493": [1, 6, 226, 231], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 243, 264, 265, 274, 478, 479, 778, 801, 845], "python": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 203, 204, 207, 208, 209, 211, 212, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 255, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 297, 298, 314, 317, 323, 328, 329, 332, 338, 353, 365, 373, 376, 377, 378, 379, 380, 382, 383, 385, 386, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 429, 435, 439, 443, 451, 458, 459, 460, 462, 469, 478, 479, 493, 502, 516, 524, 525, 539, 552, 558, 574, 577, 608, 637, 639, 644, 646, 647, 699, 700, 702, 703, 704, 719, 727, 728, 730, 731, 743, 744, 772, 778, 781, 795, 801, 809, 828, 830, 835, 838, 846, 850, 855, 856, 860, 861, 862, 863, 866, 867, 878, 880], "brainstorm_data": [1, 6], "py": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 243, 837, 839, 859, 880], "jupyt": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 813, 859, 861, 863, 880], "notebook": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 813, 819, 843, 859, 863, 868, 880], "ipynb": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241], "galleri": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 839], "gener": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 195, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 291, 292, 295, 308, 321, 326, 327, 328, 347, 353, 354, 380, 410, 412, 413, 416, 417, 420, 421, 427, 434, 439, 444, 446, 448, 449, 451, 468, 474, 475, 478, 479, 483, 484, 495, 498, 502, 511, 514, 521, 524, 525, 527, 529, 532, 536, 539, 555, 556, 557, 558, 559, 561, 570, 574, 575, 578, 580, 581, 586, 588, 605, 609, 615, 618, 620, 622, 623, 625, 626, 648, 649, 650, 652, 653, 654, 663, 664, 665, 666, 667, 680, 684, 685, 687, 688, 689, 690, 691, 696, 700, 702, 703, 704, 712, 713, 733, 745, 748, 749, 751, 761, 764, 768, 772, 779, 787, 791, 792, 802, 803, 806, 807, 816, 830, 835, 845, 846, 847, 851, 854, 855, 856, 857, 858, 860, 861, 863, 864, 865, 867, 868, 880], "sphinx": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 744, 839, 880], "thi": [2, 4, 5, 7, 9, 10, 13, 14, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55, 57, 58, 59, 60, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 90, 93, 94, 95, 96, 97, 99, 101, 103, 104, 109, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 288, 289, 291, 292, 295, 297, 298, 302, 303, 305, 306, 307, 308, 309, 312, 313, 316, 317, 318, 319, 320, 321, 324, 325, 326, 330, 331, 332, 337, 341, 342, 345, 347, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 367, 369, 370, 371, 372, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 459, 460, 462, 463, 466, 468, 469, 471, 472, 473, 475, 476, 477, 478, 479, 480, 484, 485, 486, 487, 489, 493, 494, 495, 497, 500, 501, 504, 506, 508, 509, 511, 513, 518, 519, 521, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 542, 544, 545, 549, 553, 555, 557, 558, 559, 560, 561, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 583, 584, 585, 586, 587, 588, 589, 592, 595, 596, 602, 605, 606, 608, 611, 612, 613, 615, 617, 618, 622, 623, 628, 631, 637, 639, 642, 643, 645, 647, 648, 649, 652, 653, 654, 661, 663, 664, 665, 666, 667, 670, 671, 674, 677, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 704, 707, 716, 718, 726, 728, 730, 731, 735, 738, 742, 743, 745, 746, 748, 750, 751, 753, 757, 758, 761, 763, 764, 765, 766, 769, 770, 774, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 813, 814, 817, 818, 828, 830, 835, 837, 838, 839, 842, 843, 844, 845, 846, 847, 855, 856, 857, 859, 861, 862, 863, 865, 866, 868, 870, 880], "look": [2, 4, 7, 8, 19, 21, 27, 32, 33, 42, 55, 58, 60, 67, 68, 70, 71, 83, 84, 93, 108, 111, 112, 113, 120, 121, 122, 127, 133, 135, 136, 142, 145, 146, 151, 152, 157, 159, 161, 162, 163, 167, 169, 173, 176, 178, 179, 180, 181, 183, 184, 189, 190, 192, 199, 202, 203, 204, 206, 207, 208, 210, 211, 212, 215, 223, 226, 231, 240, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 300, 303, 309, 377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 451, 458, 460, 478, 479, 507, 558, 560, 583, 606, 700, 748, 764, 767, 794, 804, 806, 811, 812, 837, 838, 839, 860, 861, 862, 863, 865, 880], "high": [2, 4, 7, 10, 12, 22, 38, 40, 59, 73, 74, 79, 82, 83, 84, 88, 94, 99, 119, 135, 142, 143, 144, 152, 157, 158, 161, 168, 189, 191, 192, 196, 199, 203, 205, 206, 207, 210, 211, 212, 228, 229, 230, 231, 235, 241, 244, 264, 265, 266, 267, 277, 282, 354, 355, 356, 357, 359, 392, 412, 421, 445, 446, 448, 469, 478, 479, 502, 525, 558, 563, 566, 570, 571, 574, 575, 578, 579, 581, 582, 588, 592, 653, 686, 748, 835, 846, 864, 880], "frequenc": [2, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 36, 42, 56, 68, 71, 72, 73, 76, 81, 82, 83, 84, 88, 90, 93, 94, 99, 103, 104, 106, 107, 108, 109, 110, 112, 115, 121, 123, 126, 127, 133, 138, 141, 142, 143, 144, 145, 147, 150, 152, 157, 168, 169, 170, 173, 181, 184, 192, 195, 196, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 230, 234, 236, 243, 244, 256, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 278, 279, 280, 283, 287, 288, 289, 290, 291, 292, 297, 312, 328, 341, 342, 349, 354, 363, 373, 392, 410, 412, 415, 416, 418, 421, 422, 423, 431, 434, 436, 438, 439, 445, 446, 448, 449, 450, 451, 474, 476, 478, 479, 488, 493, 524, 525, 529, 531, 532, 536, 541, 542, 555, 558, 563, 566, 570, 571, 574, 575, 577, 578, 579, 581, 582, 588, 592, 606, 609, 618, 620, 667, 679, 686, 687, 688, 690, 691, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 743, 748, 752, 771, 774, 775, 776, 780, 781, 789, 793, 796, 802, 807, 808, 810, 835, 859, 865, 866, 870, 880], "respons": [2, 4, 8, 10, 16, 17, 19, 20, 27, 35, 46, 49, 51, 59, 65, 77, 85, 88, 94, 96, 97, 107, 113, 117, 120, 121, 122, 128, 130, 136, 143, 144, 146, 150, 151, 163, 169, 181, 184, 186, 192, 196, 199, 202, 207, 230, 231, 234, 236, 241, 244, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 354, 373, 392, 416, 422, 424, 434, 436, 439, 446, 449, 478, 479, 555, 559, 603, 615, 700, 702, 703, 704, 713, 779, 786, 788, 789, 796, 835, 855, 856, 861, 862, 865, 880], "jussi": [2, 61, 244, 392, 588, 880], "nurminen": [2, 61, 244, 392, 588, 880], "jnu": [2, 61], "iki": [2, 61], "fi": [2, 10, 61, 86, 192, 477], "o": [2, 19, 44, 61, 71, 75, 83, 115, 125, 141, 160, 162, 170, 172, 173, 186, 195, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 244, 256, 261, 264, 265, 266, 267, 269, 354, 372, 380, 388, 410, 417, 458, 478, 479, 557, 558, 567, 644, 700, 702, 704, 765, 780, 787, 803, 808, 810, 839, 851, 856, 859, 870, 880], "hf_sef": [2, 856, 870, 880], "fname_evok": [2, 11, 30, 38, 39, 41, 44, 57, 58, 60, 124, 127, 180, 182, 222], "path": [2, 19, 33, 43, 44, 45, 61, 75, 79, 101, 115, 119, 120, 123, 125, 135, 136, 137, 141, 145, 156, 157, 158, 159, 160, 167, 171, 172, 173, 176, 182, 183, 186, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 222, 227, 256, 258, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 301, 303, 304, 307, 308, 309, 312, 313, 321, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 351, 352, 360, 365, 366, 367, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 429, 431, 444, 453, 458, 459, 460, 462, 463, 466, 468, 469, 470, 471, 472, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 515, 517, 521, 539, 543, 544, 545, 547, 548, 557, 558, 568, 569, 577, 583, 584, 588, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 639, 646, 648, 649, 651, 652, 653, 663, 665, 666, 668, 669, 677, 695, 696, 698, 699, 700, 701, 702, 703, 704, 720, 721, 722, 733, 735, 737, 740, 742, 747, 748, 756, 764, 766, 776, 778, 788, 795, 801, 806, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 839, 842, 844, 845, 850, 880], "join": [2, 10, 19, 44, 61, 75, 135, 136, 141, 160, 171, 172, 185, 186, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 264, 265, 266, 267, 478, 479], "subject_b": 2, "hf_sef_15min": 2, "av": [2, 11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 68, 78, 86, 87, 90, 92, 95, 116, 119, 120, 124, 127, 150, 151, 173, 177, 179, 180, 182, 222, 256, 264, 265, 266, 267, 274, 478, 479, 548, 618, 627, 703, 826, 856], "fif": [2, 5, 7, 10, 11, 13, 14, 15, 16, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 68, 69, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 192, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 251, 258, 261, 262, 263, 264, 265, 266, 267, 269, 274, 277, 304, 312, 334, 365, 366, 367, 431, 440, 441, 442, 443, 460, 470, 478, 479, 498, 502, 517, 521, 539, 543, 558, 568, 577, 584, 588, 600, 606, 608, 609, 610, 611, 615, 618, 620, 626, 630, 633, 637, 640, 665, 668, 695, 735, 737, 748, 764, 821, 823, 824, 825, 826, 827, 828, 831, 832, 834, 839, 846, 851, 855, 856, 862, 865, 868, 880], "interest": [2, 4, 9, 16, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 78, 82, 86, 87, 90, 95, 96, 97, 100, 101, 104, 107, 112, 113, 114, 116, 119, 120, 127, 128, 136, 138, 141, 143, 144, 145, 150, 151, 156, 161, 163, 171, 173, 177, 179, 180, 181, 182, 191, 195, 196, 199, 202, 203, 206, 211, 212, 216, 222, 223, 226, 227, 228, 229, 230, 240, 241, 259, 264, 265, 266, 267, 269, 289, 291, 324, 415, 418, 434, 436, 454, 462, 478, 479, 511, 531, 532, 542, 557, 558, 603, 612, 614, 649, 700, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 730, 731, 748, 802, 808, 835, 839, 855, 859, 862, 880], "t": [2, 4, 5, 9, 15, 19, 21, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 65, 70, 78, 79, 81, 83, 84, 86, 87, 93, 94, 95, 96, 98, 101, 102, 108, 114, 115, 116, 117, 119, 120, 127, 135, 141, 142, 144, 145, 146, 147, 150, 152, 157, 158, 159, 160, 161, 163, 166, 167, 169, 171, 172, 173, 177, 178, 179, 180, 181, 182, 184, 185, 189, 192, 195, 196, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 222, 223, 226, 227, 228, 229, 230, 231, 236, 237, 238, 239, 240, 241, 244, 256, 259, 260, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 287, 297, 298, 341, 344, 350, 359, 360, 372, 373, 377, 378, 379, 380, 382, 383, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 416, 431, 433, 445, 451, 454, 473, 476, 478, 479, 489, 490, 524, 525, 533, 539, 545, 547, 549, 555, 558, 561, 569, 570, 574, 575, 577, 579, 586, 588, 589, 597, 605, 608, 612, 614, 615, 618, 619, 622, 625, 628, 630, 647, 649, 665, 666, 672, 678, 680, 684, 685, 686, 687, 689, 690, 692, 693, 694, 700, 701, 702, 703, 704, 716, 720, 723, 726, 727, 728, 730, 731, 738, 748, 783, 793, 835, 838, 839, 840, 845, 847, 855, 856, 861, 862, 863, 865, 880], "250": [2, 4, 21, 46, 81, 112, 117, 123, 137, 138, 142, 144, 152, 157, 167, 170, 177, 182, 199, 201, 202, 203, 207, 231, 239, 244, 653, 707, 844, 880], "ctf": [2, 27, 30, 31, 35, 36, 38, 39, 40, 41, 44, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 78, 86, 87, 101, 116, 119, 120, 127, 141, 144, 150, 166, 171, 173, 177, 179, 180, 182, 187, 188, 193, 194, 226, 227, 258, 261, 262, 264, 265, 266, 267, 268, 269, 275, 302, 309, 338, 345, 353, 355, 359, 361, 363, 364, 451, 453, 478, 479, 491, 515, 516, 521, 522, 524, 525, 534, 535, 536, 537, 540, 555, 556, 571, 588, 609, 618, 620, 626, 633, 648, 700, 702, 703, 704, 748, 764, 856, 862, 865, 880], "matric": [2, 10, 30, 31, 34, 35, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 86, 87, 101, 103, 116, 119, 120, 127, 141, 144, 147, 150, 157, 164, 166, 167, 173, 177, 179, 180, 182, 189, 196, 226, 227, 244, 290, 297, 354, 410, 418, 478, 479, 569, 577, 588, 600, 651, 652, 653, 665, 686, 701, 711, 739, 741, 774, 855, 862, 865, 877, 880], "nave": [2, 5, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 68, 78, 86, 87, 90, 92, 94, 104, 107, 108, 109, 110, 114, 116, 119, 120, 127, 150, 167, 173, 177, 178, 179, 180, 182, 183, 192, 196, 221, 222, 223, 234, 236, 257, 263, 266, 267, 269, 353, 467, 526, 527, 528, 529, 531, 532, 538, 541, 542, 664, 700, 865, 880], "2790": 2, "aspect": [2, 16, 22, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 78, 86, 87, 107, 116, 119, 120, 127, 143, 150, 173, 177, 179, 180, 182, 203, 206, 228, 229, 230, 231, 751, 865, 880], "specifi": [2, 4, 5, 9, 19, 31, 38, 41, 43, 47, 63, 88, 94, 95, 101, 103, 109, 114, 120, 127, 128, 136, 141, 142, 143, 150, 151, 152, 156, 159, 167, 168, 169, 170, 171, 172, 173, 179, 185, 186, 189, 196, 199, 200, 202, 203, 204, 205, 207, 208, 210, 211, 212, 215, 216, 217, 218, 227, 228, 231, 234, 240, 256, 258, 259, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 288, 290, 297, 298, 302, 309, 314, 324, 330, 354, 355, 356, 357, 358, 359, 360, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 387, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 417, 421, 422, 426, 427, 431, 434, 436, 445, 446, 448, 449, 451, 453, 454, 462, 466, 469, 473, 475, 476, 477, 478, 479, 480, 488, 493, 494, 502, 506, 517, 520, 524, 526, 534, 535, 536, 547, 557, 558, 561, 563, 568, 569, 571, 572, 576, 577, 588, 603, 606, 610, 612, 614, 619, 622, 628, 637, 640, 642, 645, 649, 650, 665, 677, 680, 686, 687, 688, 690, 691, 698, 700, 702, 703, 704, 735, 748, 751, 763, 764, 765, 767, 772, 779, 780, 782, 786, 787, 788, 791, 793, 794, 795, 797, 800, 803, 806, 807, 808, 810, 811, 812, 813, 817, 830, 835, 839, 857, 859, 862, 865, 880], "pleas": [2, 4, 5, 74, 76, 83, 101, 109, 123, 135, 136, 137, 138, 147, 167, 173, 185, 186, 190, 196, 199, 204, 205, 211, 212, 227, 236, 256, 264, 265, 289, 291, 332, 338, 371, 388, 437, 449, 451, 478, 479, 489, 558, 577, 589, 620, 778, 795, 801, 827, 835, 837, 839, 843, 845, 851, 854, 855, 856, 858, 860, 862, 863, 880], "consid": [2, 4, 5, 82, 93, 101, 104, 108, 109, 112, 138, 142, 145, 153, 157, 160, 162, 163, 167, 185, 186, 196, 199, 200, 201, 202, 204, 205, 210, 211, 212, 226, 227, 228, 231, 234, 236, 241, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 278, 279, 280, 287, 297, 298, 309, 319, 337, 354, 358, 359, 370, 371, 410, 417, 418, 431, 440, 441, 442, 443, 445, 451, 458, 475, 476, 478, 479, 486, 493, 495, 500, 553, 558, 560, 561, 566, 568, 569, 572, 574, 576, 577, 580, 586, 588, 593, 612, 614, 618, 661, 670, 671, 672, 674, 675, 687, 688, 690, 691, 700, 703, 705, 706, 707, 708, 709, 710, 711, 748, 761, 770, 778, 781, 782, 794, 801, 835, 837, 858, 861, 880], "self": [2, 4, 5, 101, 109, 173, 185, 186, 196, 199, 204, 211, 212, 227, 236, 258, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 278, 279, 280, 288, 302, 365, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 477, 478, 479, 524, 557, 558, 559, 700, 702, 703, 704, 735, 749, 839, 857, 859, 880], "highpass": [2, 12, 71, 73, 76, 81, 82, 83, 90, 93, 99, 127, 142, 147, 152, 167, 168, 169, 170, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 223, 241, 256, 264, 265, 266, 267, 269, 445, 478, 479, 702, 704, 801, 802, 865, 880], "version": [2, 19, 34, 70, 84, 114, 146, 147, 151, 156, 162, 167, 172, 189, 190, 191, 195, 196, 201, 202, 218, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 288, 293, 297, 298, 300, 304, 305, 306, 307, 308, 309, 312, 313, 316, 317, 318, 320, 321, 322, 323, 328, 330, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 369, 370, 371, 385, 386, 388, 389, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 422, 426, 429, 431, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 457, 458, 460, 463, 467, 469, 472, 473, 475, 476, 477, 478, 479, 486, 487, 489, 490, 491, 493, 494, 495, 498, 501, 503, 506, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 538, 540, 541, 542, 543, 544, 545, 546, 549, 550, 551, 557, 558, 559, 560, 561, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 587, 588, 589, 596, 598, 602, 603, 608, 610, 612, 614, 615, 618, 619, 623, 631, 633, 634, 636, 637, 639, 642, 645, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 681, 682, 683, 692, 693, 694, 695, 699, 700, 701, 702, 703, 704, 712, 714, 717, 718, 719, 722, 727, 728, 730, 731, 732, 733, 736, 737, 738, 745, 748, 749, 751, 757, 758, 764, 765, 766, 767, 769, 771, 772, 773, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 810, 811, 812, 813, 814, 817, 821, 824, 826, 830, 831, 833, 838, 839, 842, 843, 844, 845, 854, 856, 859, 861, 862, 865, 868], "evoked_hp": 2, "l_freq": [2, 21, 83, 114, 145, 147, 152, 192, 202, 203, 205, 207, 241, 256, 264, 265, 266, 267, 412, 421, 446, 448, 478, 479, 558, 566, 570, 571, 574, 575, 578, 579, 581, 582, 592, 866], "300": [2, 4, 5, 21, 34, 46, 51, 74, 81, 82, 92, 96, 116, 136, 141, 150, 152, 170, 184, 192, 203, 205, 209, 212, 231, 239, 700, 865, 880], "h_freq": [2, 21, 83, 114, 145, 147, 152, 192, 202, 203, 205, 207, 210, 241, 256, 264, 265, 266, 267, 412, 421, 446, 448, 478, 479, 558, 566, 570, 571, 574, 575, 577, 578, 579, 581, 582, 592, 866], "3e": [2, 8, 9, 21, 32, 35, 45, 48, 49, 50, 51, 54, 55, 58, 94, 109, 153, 177, 179, 180, 181, 182, 196, 570, 571, 765], "edg": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 59, 70, 72, 73, 76, 82, 83, 84, 88, 99, 110, 113, 114, 115, 120, 121, 133, 137, 142, 143, 145, 147, 152, 162, 173, 192, 196, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 217, 218, 222, 226, 231, 241, 261, 264, 265, 266, 267, 273, 274, 282, 318, 410, 412, 416, 417, 439, 446, 448, 450, 476, 478, 479, 557, 558, 560, 561, 572, 577, 588, 592, 700, 702, 704, 716, 726, 730, 752, 761, 765, 766, 780, 787, 791, 800, 801, 803, 808, 810, 859, 880], "75": [2, 4, 5, 8, 12, 13, 16, 19, 21, 24, 34, 35, 41, 44, 70, 72, 76, 80, 81, 83, 103, 112, 114, 115, 127, 135, 136, 144, 145, 147, 159, 170, 172, 173, 181, 185, 192, 195, 196, 199, 201, 204, 205, 207, 208, 209, 217, 226, 227, 230, 231, 478, 479, 558, 804, 856, 862, 880], "cutoff": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 196, 199, 201, 203, 204, 205, 207, 210, 211, 212, 231, 264, 265, 266, 267, 412, 421, 446, 448, 478, 479, 558, 566, 577, 592], "262": [2, 12, 21, 67, 112, 152, 170, 209, 211, 226, 231, 244], "133": [2, 35, 39, 56, 61, 79, 135, 157, 170, 208, 226, 230, 231], "044": [2, 141, 143, 150, 170, 223], "306": [2, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 68, 76, 83, 84, 90, 92, 93, 94, 95, 109, 131, 147, 159, 170, 173, 178, 179, 180, 181, 184, 196, 209, 210, 222, 223, 231, 558, 856], "condit": [2, 10, 11, 16, 17, 20, 27, 30, 31, 35, 38, 39, 40, 41, 44, 45, 51, 58, 59, 60, 61, 78, 86, 87, 88, 94, 96, 99, 110, 112, 119, 120, 122, 124, 130, 141, 142, 143, 144, 145, 146, 150, 151, 154, 166, 167, 169, 177, 178, 179, 180, 181, 182, 185, 186, 192, 196, 202, 211, 216, 221, 226, 227, 228, 231, 232, 233, 234, 235, 236, 239, 244, 257, 264, 265, 266, 267, 269, 353, 354, 413, 420, 426, 432, 478, 523, 548, 555, 559, 569, 577, 588, 603, 615, 617, 618, 619, 681, 686, 687, 688, 690, 700, 702, 703, 704, 722, 730, 772, 786, 835, 839, 855, 856, 862, 866, 880], "kind": [2, 5, 7, 11, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 68, 83, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 127, 131, 136, 137, 143, 150, 152, 157, 161, 167, 170, 171, 173, 176, 178, 179, 180, 181, 182, 185, 191, 192, 196, 203, 206, 222, 223, 234, 235, 236, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 297, 298, 305, 306, 312, 313, 328, 338, 374, 389, 429, 430, 445, 472, 478, 479, 510, 546, 559, 618, 695, 700, 702, 703, 704, 716, 726, 748, 767, 769, 798, 804, 806, 811, 812, 839, 846, 859, 862, 865, 880], "timepoint": [2, 19, 59, 101, 120, 142, 150, 152, 180, 182, 185, 215, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 287, 348, 520, 574, 618, 619], "901": [2, 209, 231], "number": [2, 4, 5, 9, 10, 11, 31, 34, 35, 39, 40, 42, 44, 46, 49, 52, 59, 72, 74, 76, 82, 83, 88, 90, 92, 93, 100, 103, 107, 109, 113, 114, 121, 127, 135, 136, 141, 143, 144, 145, 146, 147, 150, 151, 152, 161, 162, 163, 166, 167, 169, 171, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 196, 199, 200, 201, 202, 204, 205, 206, 210, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 297, 298, 299, 300, 324, 327, 335, 342, 348, 354, 355, 356, 357, 358, 359, 360, 362, 365, 369, 370, 371, 380, 409, 410, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 426, 427, 431, 433, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 466, 467, 468, 473, 475, 476, 477, 478, 479, 480, 489, 502, 509, 511, 517, 520, 521, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 538, 540, 541, 542, 557, 558, 559, 563, 567, 568, 569, 570, 571, 572, 573, 577, 578, 579, 581, 583, 584, 586, 587, 593, 594, 605, 615, 619, 640, 648, 649, 650, 651, 652, 653, 654, 658, 659, 660, 663, 664, 665, 666, 674, 675, 676, 677, 679, 680, 681, 683, 685, 687, 688, 689, 690, 691, 692, 695, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 714, 716, 718, 719, 726, 727, 728, 729, 730, 731, 732, 738, 746, 747, 748, 756, 765, 771, 772, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 787, 788, 789, 791, 792, 794, 795, 800, 801, 802, 803, 806, 807, 808, 809, 810, 811, 814, 835, 839, 854, 856, 859, 863, 865, 880], "rang": [2, 4, 5, 9, 10, 11, 13, 14, 15, 16, 18, 19, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 82, 83, 84, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 127, 129, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 152, 153, 157, 159, 160, 161, 163, 167, 168, 169, 170, 172, 173, 177, 178, 180, 181, 182, 183, 184, 185, 186, 191, 192, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 256, 257, 261, 264, 265, 266, 267, 269, 273, 274, 297, 321, 373, 380, 394, 402, 403, 410, 413, 417, 419, 420, 443, 469, 475, 478, 479, 486, 557, 558, 563, 572, 577, 700, 701, 702, 703, 704, 716, 726, 765, 778, 779, 780, 784, 787, 791, 800, 801, 802, 803, 808, 810, 835, 855, 861, 862, 865, 880], "05": [2, 4, 5, 8, 9, 10, 13, 19, 20, 34, 35, 42, 46, 49, 51, 56, 59, 60, 66, 71, 78, 84, 85, 87, 92, 95, 96, 97, 100, 103, 112, 116, 119, 120, 124, 130, 142, 145, 151, 152, 171, 175, 178, 180, 181, 182, 184, 186, 192, 195, 199, 200, 203, 207, 209, 211, 215, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 244, 297, 298, 321, 330, 449, 453, 478, 479, 540, 567, 660, 678, 683, 684, 687, 688, 690, 691, 692, 700, 714, 716, 726, 730, 752, 807], "25": [2, 4, 5, 11, 16, 18, 19, 28, 34, 35, 41, 42, 43, 45, 47, 49, 50, 53, 56, 59, 64, 68, 70, 72, 74, 81, 82, 83, 85, 103, 104, 106, 108, 109, 112, 113, 114, 116, 124, 126, 135, 136, 137, 138, 144, 146, 147, 152, 160, 170, 171, 172, 173, 176, 177, 179, 181, 182, 184, 192, 195, 196, 199, 201, 202, 204, 205, 206, 207, 209, 210, 214, 217, 222, 223, 225, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 244, 258, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278, 279, 280, 360, 402, 410, 412, 421, 446, 448, 478, 479, 592, 660, 689, 748, 752, 772, 784, 801, 804, 806, 811, 838, 855, 862], "off": [2, 4, 10, 67, 73, 76, 93, 114, 116, 127, 135, 136, 138, 142, 144, 150, 152, 153, 157, 160, 161, 167, 168, 169, 170, 192, 195, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 215, 216, 217, 218, 221, 222, 223, 244, 256, 259, 264, 265, 266, 267, 277, 297, 298, 412, 421, 446, 448, 478, 479, 557, 570, 571, 572, 579, 582, 588, 592, 603, 728, 731, 839, 855, 856, 862, 865, 880], "compar": [2, 4, 10, 19, 21, 22, 26, 27, 28, 36, 38, 39, 56, 73, 77, 83, 85, 89, 91, 103, 113, 114, 122, 130, 135, 142, 144, 145, 146, 147, 159, 161, 163, 167, 168, 173, 177, 181, 184, 185, 192, 196, 202, 204, 206, 207, 208, 228, 229, 230, 234, 235, 241, 259, 261, 264, 265, 266, 267, 268, 269, 270, 275, 277, 358, 359, 364, 386, 451, 478, 479, 483, 511, 514, 518, 524, 525, 536, 537, 540, 556, 558, 588, 609, 611, 615, 618, 620, 623, 650, 654, 655, 656, 657, 658, 659, 660, 662, 665, 671, 748, 756, 778, 786, 795, 801, 839, 847, 859, 868, 880], "unfilt": [2, 167, 173, 202, 205], "singl": [2, 3, 6, 16, 18, 27, 33, 34, 36, 45, 56, 67, 70, 74, 83, 84, 87, 94, 101, 103, 105, 106, 113, 117, 120, 122, 130, 141, 142, 143, 145, 146, 150, 151, 152, 159, 166, 167, 169, 170, 171, 173, 177, 179, 181, 184, 185, 189, 190, 191, 196, 199, 200, 202, 205, 206, 207, 208, 210, 211, 212, 215, 216, 221, 223, 226, 231, 232, 233, 236, 240, 241, 244, 256, 258, 259, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 291, 292, 295, 297, 298, 304, 312, 314, 318, 319, 324, 353, 354, 359, 385, 410, 411, 417, 423, 426, 432, 436, 439, 451, 469, 478, 479, 494, 497, 499, 512, 515, 518, 520, 522, 524, 525, 527, 529, 531, 532, 539, 555, 557, 558, 563, 566, 572, 603, 611, 615, 622, 628, 635, 645, 649, 666, 680, 681, 683, 684, 685, 687, 688, 695, 700, 701, 702, 703, 704, 716, 726, 727, 728, 730, 731, 738, 748, 764, 765, 766, 772, 776, 779, 780, 781, 782, 784, 787, 788, 791, 798, 799, 800, 802, 803, 804, 808, 810, 823, 839, 848, 855, 856, 859, 862, 865, 866, 868, 880], "meg0443": 2, "ch_name": [2, 4, 7, 15, 18, 19, 31, 63, 67, 70, 72, 74, 86, 100, 112, 114, 115, 120, 125, 136, 137, 141, 147, 150, 152, 160, 167, 169, 170, 173, 185, 191, 192, 200, 203, 205, 207, 210, 211, 212, 215, 221, 223, 228, 229, 230, 231, 240, 256, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 297, 298, 312, 314, 318, 321, 324, 329, 337, 369, 370, 373, 477, 478, 479, 549, 552, 558, 570, 571, 574, 575, 577, 578, 579, 599, 642, 654, 700, 701, 702, 703, 704, 705, 706, 707, 769, 778, 779, 801, 865, 880], "index": [2, 4, 19, 21, 31, 47, 61, 70, 72, 75, 90, 133, 137, 144, 150, 151, 152, 161, 167, 170, 171, 173, 176, 181, 184, 185, 189, 192, 195, 199, 201, 204, 205, 206, 207, 209, 210, 211, 216, 217, 222, 227, 228, 239, 240, 244, 257, 258, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 284, 285, 296, 297, 298, 311, 321, 349, 363, 470, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518, 528, 548, 558, 574, 575, 578, 579, 581, 582, 583, 592, 618, 619, 660, 700, 701, 702, 703, 704, 748, 761, 766, 772, 776, 781, 791, 793, 795, 835, 856, 862, 880], "edi": 2, "regular": [2, 5, 28, 29, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 78, 83, 90, 94, 99, 104, 107, 108, 109, 110, 121, 167, 170, 179, 180, 181, 182, 183, 192, 196, 200, 207, 210, 221, 222, 223, 226, 234, 236, 266, 267, 270, 276, 297, 298, 354, 358, 359, 369, 370, 410, 417, 418, 422, 431, 439, 453, 454, 473, 475, 476, 486, 489, 493, 500, 525, 526, 527, 528, 529, 531, 532, 533, 536, 538, 541, 542, 552, 559, 567, 569, 577, 588, 623, 677, 680, 687, 688, 690, 691, 694, 787, 788, 805, 855, 861, 870, 880], "viz": [2, 4, 5, 7, 12, 19, 24, 27, 31, 34, 35, 38, 39, 40, 41, 42, 46, 47, 51, 52, 57, 59, 70, 79, 80, 81, 86, 88, 92, 93, 101, 109, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 130, 132, 133, 135, 136, 137, 138, 142, 143, 144, 145, 151, 152, 156, 157, 158, 159, 160, 161, 167, 171, 178, 179, 181, 182, 183, 184, 185, 186, 191, 195, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 216, 226, 231, 241, 262, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 309, 318, 329, 478, 479, 558, 610, 618, 628, 633, 700, 837, 839, 855, 857, 859, 862, 866, 870, 879, 880], "plot_compare_evok": [2, 4, 101, 127, 142, 143, 144, 145, 151, 152, 167, 211, 231, 264, 265, 779, 866, 870, 880], "451": [2, 6, 13, 41, 196, 226, 231, 277], "9": [2, 4, 5, 7, 8, 9, 11, 13, 19, 20, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 64, 66, 68, 69, 70, 71, 73, 75, 78, 80, 81, 83, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 124, 127, 128, 130, 132, 135, 136, 137, 138, 141, 142, 143, 145, 146, 151, 152, 155, 157, 159, 160, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 244, 262, 264, 265, 266, 267, 271, 276, 277, 279, 280, 297, 298, 300, 312, 321, 335, 353, 354, 360, 361, 380, 403, 453, 463, 478, 479, 498, 514, 522, 533, 541, 557, 558, 566, 586, 603, 614, 642, 645, 682, 700, 702, 703, 704, 712, 722, 731, 732, 733, 748, 749, 751, 765, 775, 776, 781, 800, 805, 837, 838, 844, 845, 855, 856, 859, 862, 865], "hf_sef_data": [2, 6], "some": [3, 4, 5, 10, 16, 21, 27, 40, 54, 55, 61, 65, 67, 70, 73, 75, 95, 98, 103, 105, 109, 113, 114, 120, 127, 135, 136, 137, 138, 141, 142, 143, 145, 146, 150, 151, 152, 153, 157, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 181, 184, 185, 190, 191, 192, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 212, 213, 215, 216, 217, 218, 221, 222, 223, 226, 230, 231, 232, 239, 241, 256, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 308, 312, 316, 320, 354, 372, 385, 424, 433, 444, 463, 469, 478, 479, 486, 493, 553, 557, 558, 560, 568, 576, 588, 596, 602, 612, 614, 641, 645, 648, 682, 688, 700, 702, 703, 704, 764, 766, 783, 785, 801, 835, 837, 838, 839, 842, 843, 846, 851, 854, 855, 856, 857, 859, 860, 861, 862, 863, 866, 868, 880], "demo": [3, 27, 835, 880], "common": [3, 17, 20, 27, 32, 33, 34, 43, 44, 67, 75, 115, 136, 150, 152, 156, 159, 161, 163, 166, 173, 190, 202, 204, 205, 206, 207, 210, 211, 215, 216, 223, 235, 241, 244, 264, 265, 266, 267, 269, 277, 312, 317, 328, 354, 363, 373, 410, 435, 439, 460, 466, 478, 479, 493, 555, 558, 573, 631, 635, 645, 700, 833, 835, 839, 856, 859, 862, 863, 866, 868, 880], "public": [3, 27, 112, 116, 120, 122, 130, 135, 145, 202, 259, 266, 269, 275, 449, 477, 478, 618, 628, 748, 767, 772, 839, 855, 861, 868, 880], "brainstorm": [3, 6, 27, 81, 82, 84, 109, 119, 166, 187, 188, 193, 194, 244, 258, 261, 262, 264, 266, 267, 269, 275, 302, 309, 353, 354, 355, 356, 359, 361, 363, 430, 451, 453, 478, 491, 515, 516, 521, 522, 524, 525, 536, 555, 571, 580, 588, 620, 626, 633, 648, 748, 764, 776, 788, 816, 862, 870, 878, 880], "raw": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 27, 28, 32, 33, 34, 36, 41, 42, 45, 46, 49, 56, 61, 63, 65, 67, 68, 69, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 84, 88, 89, 91, 92, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 127, 128, 129, 132, 133, 135, 136, 137, 142, 143, 145, 146, 147, 150, 152, 157, 159, 160, 163, 166, 167, 168, 170, 171, 172, 174, 175, 181, 183, 184, 185, 186, 189, 190, 191, 192, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 219, 220, 222, 223, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 283, 284, 285, 296, 297, 298, 312, 314, 317, 341, 343, 345, 346, 347, 348, 353, 354, 356, 357, 358, 359, 362, 363, 371, 381, 392, 393, 401, 405, 415, 418, 435, 439, 443, 445, 448, 451, 452, 469, 477, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 514, 517, 518, 519, 521, 524, 525, 526, 527, 528, 529, 531, 532, 536, 539, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 574, 575, 576, 577, 578, 579, 580, 581, 582, 586, 587, 588, 589, 590, 591, 592, 595, 596, 602, 603, 609, 613, 615, 617, 620, 622, 623, 642, 645, 650, 651, 652, 653, 654, 665, 666, 686, 700, 702, 703, 704, 713, 718, 746, 748, 778, 781, 782, 791, 792, 793, 795, 801, 802, 818, 835, 837, 839, 855, 856, 857, 865, 866, 870, 880], "median": [3, 5, 6, 27, 70, 128, 151, 158, 196, 205, 227, 239, 240, 261, 264, 265, 266, 267, 269, 273, 314, 356, 410, 417, 419, 451, 478, 479, 491, 555, 557, 558, 572, 580, 588, 679, 700, 702, 703, 704, 719, 765, 772, 779, 780, 787, 791, 800, 803, 808, 810, 880], "nerv": [3, 5, 6, 27, 264, 266, 267, 269, 356, 451, 491, 555, 580], "hf": [3, 6, 27, 96, 127, 192, 266, 392, 772], "sef": [3, 6, 27, 127, 266, 392, 772, 855], "trial": [3, 6, 13, 16, 18, 27, 28, 33, 69, 70, 72, 84, 101, 104, 107, 113, 114, 117, 122, 130, 141, 142, 143, 144, 145, 150, 152, 153, 166, 167, 169, 181, 184, 192, 195, 196, 201, 202, 205, 221, 223, 226, 231, 232, 233, 234, 236, 244, 264, 265, 266, 267, 269, 291, 292, 295, 318, 324, 353, 410, 423, 426, 432, 433, 434, 436, 439, 451, 478, 494, 497, 527, 529, 555, 558, 566, 615, 635, 680, 681, 683, 684, 685, 687, 688, 700, 703, 727, 728, 730, 731, 772, 778, 781, 835, 856, 880], "linear": [3, 5, 6, 8, 9, 13, 17, 19, 20, 26, 27, 32, 41, 45, 50, 54, 55, 60, 99, 101, 107, 109, 110, 112, 120, 135, 136, 137, 142, 159, 160, 167, 177, 178, 182, 183, 195, 196, 202, 204, 205, 206, 244, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 277, 278, 279, 280, 341, 353, 410, 414, 416, 417, 422, 425, 428, 445, 446, 448, 449, 478, 479, 516, 528, 530, 537, 540, 557, 558, 572, 580, 586, 615, 624, 651, 652, 653, 665, 685, 686, 695, 700, 702, 704, 736, 738, 748, 765, 767, 772, 780, 781, 787, 789, 791, 796, 800, 802, 803, 806, 808, 810, 811, 812, 835, 846, 848, 855, 856, 859, 880], "regress": [3, 6, 10, 11, 12, 15, 18, 19, 27, 31, 42, 77, 85, 98, 102, 148, 149, 166, 196, 213, 214, 226, 244, 264, 265, 266, 267, 269, 353, 416, 422, 451, 478, 523, 526, 555, 557, 575, 598, 603, 611, 684, 685, 686, 772, 781, 784, 803, 856, 868, 880], "limo": [3, 6, 27, 244, 265, 266, 267, 353, 685, 772, 781, 870, 880], "optic": [3, 6, 27, 75, 166, 189, 191, 213, 214, 262, 264, 266, 267, 269, 275, 302, 354, 364, 371, 439, 451, 453, 487, 499, 524, 525, 536, 552, 555, 557, 590, 591, 595, 607, 620, 704, 742, 748, 764, 816, 835, 856, 880], "pump": [3, 6, 27, 166, 189, 213, 214, 262, 264, 266, 267, 269, 275, 302, 354, 364, 451, 453, 499, 524, 525, 536, 552, 555, 557, 607, 620, 704, 742, 748, 764, 816, 835, 856, 880], "magnetomet": [3, 6, 22, 27, 32, 73, 76, 80, 81, 82, 87, 93, 109, 119, 120, 143, 146, 147, 151, 152, 163, 166, 167, 168, 169, 170, 181, 184, 185, 189, 192, 199, 200, 201, 203, 205, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 221, 226, 256, 259, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 297, 298, 302, 320, 354, 355, 356, 357, 358, 359, 364, 369, 370, 371, 410, 417, 431, 451, 453, 454, 473, 475, 476, 478, 479, 499, 514, 524, 525, 536, 552, 555, 556, 557, 558, 568, 569, 570, 571, 572, 573, 574, 575, 577, 588, 599, 607, 620, 686, 700, 702, 703, 704, 742, 748, 764, 765, 771, 778, 779, 780, 782, 784, 787, 788, 791, 800, 801, 803, 808, 809, 810, 816, 835, 855, 856, 859, 862, 880], "opm": [3, 6, 27, 105, 106, 166, 213, 214, 244, 261, 262, 264, 266, 267, 269, 275, 302, 354, 359, 364, 451, 453, 499, 516, 521, 524, 525, 531, 536, 552, 555, 557, 607, 620, 648, 704, 742, 748, 764, 816, 835, 862, 870, 880], "dspm": [3, 6, 11, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 55, 56, 59, 60, 104, 105, 106, 107, 108, 109, 166, 167, 176, 179, 180, 182, 183, 187, 188, 192, 196, 222, 223, 234, 236, 261, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 290, 294, 297, 298, 353, 354, 358, 451, 475, 476, 478, 491, 512, 517, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 536, 537, 538, 539, 541, 542, 555, 558, 575, 615, 618, 620, 622, 709, 748, 773, 781, 835, 855, 856, 865, 880], "spm": [3, 6, 27, 123, 196, 353, 354, 405, 451, 491, 517, 521, 525, 536, 555, 558, 575, 781, 868, 878, 880], "face": [3, 4, 6, 10, 27, 69, 123, 141, 143, 145, 150, 152, 162, 167, 173, 176, 196, 199, 244, 264, 265, 306, 353, 354, 451, 491, 517, 521, 525, 536, 555, 558, 575, 631, 634, 700, 761, 781, 809, 828, 833, 865, 868, 880], "explor": [4, 27, 105, 106, 109, 159, 182, 196, 200, 202, 204, 207, 218, 221, 222, 240, 241, 264, 267, 279, 280, 287, 451, 679, 812, 836, 856, 857, 859], "structur": [4, 8, 9, 10, 27, 41, 43, 59, 62, 63, 67, 70, 83, 94, 95, 112, 114, 123, 135, 136, 138, 143, 147, 148, 149, 152, 154, 155, 156, 160, 166, 167, 168, 171, 172, 174, 175, 182, 186, 187, 188, 190, 191, 195, 205, 216, 219, 220, 224, 225, 226, 227, 241, 244, 258, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 277, 278, 279, 280, 310, 311, 312, 320, 353, 372, 373, 388, 392, 393, 401, 405, 451, 467, 475, 476, 478, 479, 483, 497, 498, 538, 549, 552, 554, 555, 569, 584, 588, 611, 612, 613, 614, 615, 617, 618, 628, 660, 670, 671, 672, 673, 674, 675, 676, 680, 700, 702, 703, 704, 719, 738, 748, 804, 826, 835, 839, 840, 843, 846, 851, 853, 855, 856, 857, 868, 880], "contain": [4, 16, 18, 27, 31, 38, 41, 43, 53, 79, 80, 88, 94, 101, 108, 112, 116, 127, 128, 135, 138, 141, 144, 145, 147, 150, 152, 156, 159, 163, 166, 167, 169, 170, 171, 172, 173, 176, 182, 184, 189, 190, 191, 192, 202, 204, 205, 206, 207, 210, 211, 212, 215, 216, 221, 223, 226, 239, 240, 241, 251, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 284, 285, 289, 297, 298, 299, 303, 307, 308, 309, 312, 313, 314, 315, 318, 319, 320, 326, 335, 338, 349, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 371, 385, 389, 391, 392, 393, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 429, 431, 434, 437, 438, 439, 444, 451, 452, 453, 454, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 485, 487, 488, 489, 490, 492, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 515, 517, 519, 520, 536, 544, 547, 548, 553, 557, 558, 559, 561, 563, 572, 573, 577, 583, 584, 585, 587, 588, 592, 594, 600, 601, 605, 606, 607, 608, 609, 610, 612, 613, 614, 615, 617, 618, 619, 623, 626, 629, 631, 632, 634, 640, 642, 644, 645, 648, 649, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 668, 669, 677, 679, 685, 687, 688, 690, 691, 692, 695, 696, 700, 701, 702, 703, 704, 712, 715, 723, 727, 728, 730, 731, 740, 748, 764, 765, 766, 767, 772, 775, 776, 778, 779, 780, 781, 782, 784, 785, 787, 788, 789, 791, 797, 800, 803, 804, 805, 806, 807, 808, 810, 811, 812, 825, 828, 830, 831, 833, 835, 838, 839, 855, 856, 857, 859, 862, 865, 866, 880], "replic": [4, 16, 230, 234, 235, 236, 270, 677, 856, 859, 860, 880], "extend": [4, 76, 142, 145, 152, 167, 181, 200, 205, 207, 210, 212, 231, 244, 258, 261, 262, 264, 265, 266, 267, 273, 279, 354, 410, 417, 478, 479, 511, 519, 557, 558, 561, 569, 572, 577, 586, 588, 667, 700, 702, 704, 738, 765, 776, 780, 787, 791, 800, 803, 808, 810, 843, 846, 855, 868, 880], "main": [4, 49, 94, 101, 144, 157, 169, 172, 208, 212, 217, 230, 236, 264, 265, 326, 392, 469, 491, 681, 683, 778, 837, 839, 847, 856, 862, 863, 880], "tool": [4, 27, 54, 55, 70, 80, 89, 135, 141, 152, 156, 159, 162, 191, 199, 200, 202, 205, 207, 211, 227, 236, 241, 244, 251, 271, 272, 275, 278, 279, 280, 478, 479, 515, 540, 837, 842, 843, 844, 845, 847, 851, 855, 859, 860, 861, 862, 863, 867, 868, 870, 878, 880], "integr": [4, 156, 161, 201, 205, 226, 236, 244, 540, 558, 588, 660, 839, 843, 851, 862, 865, 880], "meeg": [4, 241], "matlab": [4, 19, 195, 244, 303, 416, 497, 597, 613, 617, 845, 846, 856, 863, 864, 868, 878, 880], "toolbox": [4, 19, 70, 152, 156, 195, 244, 303, 416, 449, 566, 846, 856], "origin": [4, 5, 8, 9, 11, 12, 13, 16, 18, 21, 22, 24, 26, 32, 33, 34, 38, 41, 42, 45, 46, 49, 50, 70, 71, 72, 75, 78, 80, 81, 87, 93, 94, 96, 97, 100, 103, 107, 110, 112, 113, 114, 117, 118, 121, 128, 135, 136, 137, 138, 141, 142, 143, 145, 146, 147, 150, 152, 153, 157, 159, 160, 161, 162, 163, 167, 168, 170, 171, 173, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 215, 217, 223, 228, 229, 230, 231, 234, 236, 239, 240, 256, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 278, 279, 280, 282, 284, 285, 297, 298, 312, 360, 369, 410, 417, 424, 425, 426, 431, 434, 444, 472, 477, 478, 479, 486, 489, 493, 497, 511, 517, 526, 557, 558, 559, 568, 569, 572, 577, 588, 595, 603, 613, 617, 620, 625, 638, 640, 642, 649, 651, 652, 653, 660, 665, 685, 692, 700, 702, 703, 704, 744, 748, 764, 765, 772, 778, 780, 782, 784, 787, 788, 791, 798, 800, 801, 802, 803, 804, 807, 808, 810, 827, 835, 839, 847, 855, 856, 862, 865, 880], "interfac": [4, 8, 15, 45, 79, 88, 135, 156, 159, 167, 190, 196, 200, 202, 205, 206, 218, 244, 266, 267, 375, 380, 469, 470, 559, 748, 787, 842, 846, 851, 856, 865, 880], "eeglab": [4, 67, 70, 128, 169, 202, 205, 244, 261, 264, 265, 266, 267, 273, 312, 330, 410, 417, 440, 443, 478, 479, 494, 557, 558, 566, 572, 601, 606, 612, 700, 702, 704, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 862, 880], "In": [4, 5, 10, 15, 16, 19, 21, 32, 40, 42, 43, 44, 45, 46, 59, 70, 74, 78, 82, 83, 87, 88, 90, 94, 101, 103, 112, 114, 115, 116, 118, 126, 127, 132, 135, 136, 138, 141, 143, 145, 150, 151, 152, 153, 156, 157, 159, 161, 162, 163, 167, 168, 169, 171, 172, 173, 176, 177, 179, 182, 189, 191, 192, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 221, 223, 226, 227, 228, 236, 239, 240, 241, 244, 256, 258, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 288, 297, 298, 302, 303, 308, 310, 320, 327, 329, 341, 354, 358, 359, 369, 370, 371, 372, 410, 412, 416, 417, 426, 427, 431, 434, 443, 445, 453, 454, 473, 475, 476, 478, 479, 486, 524, 525, 526, 527, 528, 529, 533, 536, 553, 557, 558, 559, 560, 572, 573, 574, 575, 580, 584, 586, 594, 596, 603, 605, 628, 645, 665, 668, 686, 695, 700, 702, 703, 704, 708, 709, 710, 711, 713, 716, 726, 727, 728, 729, 730, 731, 732, 735, 745, 748, 761, 772, 778, 779, 780, 781, 782, 784, 785, 787, 788, 791, 792, 799, 800, 801, 802, 803, 806, 808, 809, 812, 835, 837, 839, 840, 844, 845, 847, 850, 855, 856, 859, 861, 862, 865, 866, 880], "summari": [4, 10, 173, 201, 205, 218, 271, 272, 275, 278, 279, 280, 534, 535, 692, 839, 865], "fetch": [4, 138, 249, 380, 384, 385, 386, 387, 388, 389, 394, 402, 403, 839, 856, 880], "subject": [4, 5, 7, 8, 9, 10, 11, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 68, 71, 72, 79, 80, 81, 83, 89, 90, 91, 95, 104, 109, 112, 113, 115, 116, 118, 124, 125, 126, 127, 131, 134, 135, 136, 137, 138, 141, 144, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 196, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 237, 240, 241, 244, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 297, 298, 303, 307, 308, 309, 312, 341, 342, 343, 344, 349, 351, 352, 360, 365, 366, 367, 372, 380, 384, 386, 387, 388, 389, 394, 402, 403, 429, 444, 460, 462, 464, 466, 468, 469, 470, 471, 472, 478, 479, 480, 483, 511, 513, 515, 517, 521, 524, 525, 536, 544, 545, 558, 562, 572, 583, 584, 588, 605, 609, 615, 620, 622, 623, 625, 628, 632, 637, 638, 639, 640, 648, 649, 650, 652, 653, 654, 663, 665, 666, 677, 681, 683, 692, 695, 696, 738, 740, 747, 748, 764, 766, 771, 776, 777, 790, 804, 806, 811, 812, 829, 830, 835, 845, 853, 855, 857, 859, 862, 868, 880], "If": [4, 27, 28, 31, 43, 44, 69, 70, 82, 99, 101, 115, 117, 120, 127, 135, 136, 138, 141, 143, 145, 147, 150, 151, 152, 157, 160, 161, 162, 166, 169, 170, 171, 172, 173, 176, 182, 183, 189, 190, 191, 196, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 215, 216, 217, 218, 221, 226, 227, 228, 234, 239, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 329, 330, 332, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 431, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 743, 747, 748, 753, 756, 757, 758, 760, 761, 762, 763, 764, 765, 766, 767, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 842, 843, 844, 845, 846, 847, 850, 855, 856, 859, 860, 861, 862, 863, 865, 866, 880], "disk": [4, 29, 80, 108, 110, 143, 144, 150, 151, 159, 167, 171, 173, 178, 181, 185, 200, 206, 209, 210, 215, 216, 217, 223, 256, 258, 259, 260, 264, 265, 266, 267, 269, 270, 282, 313, 385, 429, 451, 477, 478, 479, 560, 611, 618, 620, 622, 628, 649, 702, 704, 721, 748, 778, 782, 786, 788, 801, 827, 829, 845, 855, 859, 862, 865, 880], "fetcher": [4, 138, 856, 868, 880], "automat": [4, 70, 78, 80, 83, 94, 101, 141, 142, 143, 145, 146, 150, 151, 152, 156, 157, 167, 169, 170, 171, 173, 183, 190, 191, 192, 199, 200, 201, 202, 203, 205, 206, 207, 210, 215, 217, 218, 221, 231, 244, 256, 258, 259, 261, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 282, 312, 318, 340, 360, 377, 378, 379, 380, 382, 383, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 413, 420, 423, 431, 434, 442, 458, 459, 466, 468, 478, 479, 484, 491, 495, 498, 502, 521, 557, 558, 560, 568, 569, 570, 572, 577, 578, 581, 586, 588, 603, 614, 625, 636, 639, 644, 645, 649, 660, 687, 688, 690, 691, 700, 703, 744, 748, 766, 767, 771, 772, 778, 781, 784, 785, 786, 787, 794, 795, 801, 806, 811, 812, 838, 839, 845, 846, 855, 856, 862, 868, 880], "remot": [4, 249, 386, 814, 837, 839, 845, 868], "repositori": [4, 171, 840, 846, 861], "dure": [4, 19, 33, 38, 43, 45, 70, 81, 83, 94, 100, 103, 116, 121, 127, 135, 137, 142, 145, 150, 156, 158, 161, 167, 168, 169, 172, 173, 181, 183, 192, 196, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 241, 244, 256, 262, 264, 265, 266, 267, 268, 269, 271, 274, 275, 277, 279, 280, 281, 297, 298, 304, 341, 343, 347, 354, 358, 359, 361, 366, 369, 370, 371, 410, 416, 417, 427, 433, 434, 445, 453, 454, 470, 473, 475, 476, 478, 479, 480, 491, 506, 517, 521, 536, 544, 558, 577, 584, 588, 603, 642, 645, 650, 665, 668, 674, 675, 676, 695, 700, 702, 703, 704, 706, 709, 729, 732, 736, 737, 746, 748, 764, 767, 778, 785, 788, 792, 795, 801, 806, 812, 835, 838, 844, 847, 855, 856, 857, 861, 862, 865, 880], "inform": [4, 5, 9, 11, 21, 22, 26, 28, 29, 31, 34, 35, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 68, 80, 84, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 124, 131, 134, 135, 136, 141, 142, 143, 144, 145, 147, 150, 151, 152, 157, 159, 160, 161, 163, 166, 167, 169, 171, 173, 176, 178, 180, 181, 182, 183, 189, 190, 191, 192, 195, 196, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 217, 221, 222, 223, 226, 228, 231, 234, 236, 240, 241, 244, 249, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 284, 285, 297, 298, 299, 305, 306, 310, 311, 318, 319, 320, 324, 326, 327, 329, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 358, 360, 369, 370, 371, 373, 410, 412, 417, 418, 419, 429, 430, 434, 440, 441, 442, 443, 445, 446, 448, 449, 451, 454, 461, 462, 468, 470, 473, 476, 477, 478, 479, 480, 483, 489, 497, 509, 514, 517, 520, 521, 522, 526, 536, 554, 555, 557, 558, 568, 569, 577, 584, 586, 588, 593, 594, 599, 601, 604, 613, 615, 616, 617, 635, 636, 642, 647, 648, 664, 665, 668, 687, 691, 697, 699, 700, 701, 702, 703, 704, 716, 727, 728, 729, 730, 731, 732, 737, 738, 743, 744, 748, 761, 764, 768, 772, 773, 774, 776, 779, 783, 789, 790, 796, 800, 804, 810, 826, 835, 837, 838, 839, 842, 843, 846, 851, 856, 857, 860, 861, 863, 880], "e": [4, 7, 8, 12, 28, 41, 42, 44, 46, 47, 54, 69, 70, 71, 80, 84, 101, 112, 114, 120, 135, 138, 141, 142, 144, 145, 147, 151, 152, 154, 156, 158, 161, 162, 163, 166, 167, 169, 170, 171, 179, 181, 186, 189, 190, 191, 195, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 215, 216, 221, 222, 223, 226, 227, 228, 231, 234, 236, 240, 241, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 288, 297, 298, 299, 302, 303, 306, 308, 310, 312, 313, 318, 327, 329, 338, 340, 351, 354, 358, 359, 365, 369, 370, 371, 380, 385, 386, 388, 393, 402, 403, 410, 412, 413, 416, 417, 419, 420, 421, 424, 425, 426, 429, 430, 431, 434, 437, 439, 442, 443, 444, 446, 448, 449, 451, 452, 453, 454, 460, 466, 469, 472, 473, 475, 476, 477, 478, 479, 480, 490, 491, 493, 495, 511, 513, 515, 518, 519, 520, 521, 524, 525, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 544, 557, 558, 560, 561, 566, 567, 568, 569, 572, 573, 574, 575, 577, 579, 580, 583, 584, 588, 594, 595, 596, 603, 608, 615, 618, 619, 622, 623, 628, 635, 636, 637, 638, 639, 640, 646, 649, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 668, 671, 685, 686, 687, 688, 689, 690, 691, 692, 695, 696, 699, 700, 702, 703, 704, 708, 709, 710, 711, 712, 713, 716, 726, 730, 731, 735, 738, 748, 753, 761, 764, 765, 766, 771, 772, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 792, 794, 795, 799, 800, 801, 802, 803, 806, 808, 810, 811, 814, 825, 828, 835, 837, 838, 839, 840, 843, 845, 851, 855, 856, 859, 861, 862, 865, 866, 868, 880], "rate": [4, 69, 97, 101, 103, 181, 190, 191, 195, 202, 203, 205, 230, 240, 244, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 373, 415, 445, 449, 451, 478, 479, 486, 493, 500, 579, 586, 602, 653, 665, 678, 684, 686, 689, 700, 702, 703, 704, 718, 778, 780, 789, 801, 859, 880], "per": [4, 31, 47, 90, 94, 101, 107, 110, 120, 126, 131, 143, 145, 151, 152, 159, 167, 170, 181, 201, 205, 207, 218, 226, 231, 236, 240, 256, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 314, 321, 360, 375, 387, 402, 410, 417, 420, 423, 431, 434, 443, 444, 478, 479, 534, 535, 540, 541, 542, 559, 562, 605, 645, 652, 681, 683, 696, 700, 702, 704, 706, 709, 716, 718, 719, 726, 727, 728, 730, 731, 738, 748, 778, 779, 780, 787, 809, 839, 845, 861, 862, 868, 880], "name": [4, 5, 7, 8, 10, 18, 22, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 68, 70, 79, 83, 90, 92, 93, 94, 95, 100, 101, 103, 109, 112, 126, 131, 132, 135, 136, 138, 142, 143, 144, 145, 146, 150, 151, 160, 161, 162, 167, 169, 170, 171, 172, 173, 178, 179, 180, 181, 191, 192, 196, 200, 201, 202, 205, 206, 208, 210, 211, 212, 218, 221, 222, 223, 226, 227, 239, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 303, 307, 308, 309, 310, 312, 313, 318, 321, 322, 323, 324, 325, 327, 328, 329, 334, 336, 337, 338, 340, 351, 359, 360, 363, 365, 366, 367, 369, 370, 373, 381, 385, 388, 391, 410, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 426, 428, 429, 431, 434, 437, 440, 441, 442, 443, 451, 452, 460, 462, 463, 464, 466, 468, 469, 470, 471, 472, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 510, 511, 513, 517, 518, 539, 543, 547, 548, 549, 555, 556, 557, 558, 559, 560, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 584, 589, 594, 596, 599, 600, 603, 605, 606, 608, 610, 612, 613, 614, 615, 617, 619, 620, 621, 622, 623, 625, 626, 628, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 642, 645, 648, 649, 654, 668, 677, 681, 685, 686, 692, 695, 696, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 716, 720, 722, 726, 728, 731, 733, 735, 745, 747, 748, 753, 764, 765, 766, 767, 769, 772, 776, 777, 778, 779, 780, 782, 784, 785, 786, 787, 791, 792, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 810, 811, 812, 824, 825, 826, 827, 830, 831, 832, 833, 834, 835, 837, 838, 843, 844, 845, 847, 856, 857, 862, 866, 870, 880], "etc": [4, 27, 31, 36, 47, 77, 144, 156, 161, 167, 168, 169, 172, 173, 176, 189, 190, 191, 199, 200, 201, 205, 210, 215, 218, 221, 226, 234, 241, 257, 262, 264, 265, 266, 267, 269, 270, 271, 275, 279, 334, 439, 451, 452, 478, 479, 486, 497, 501, 520, 530, 555, 558, 588, 613, 617, 642, 647, 674, 675, 676, 677, 687, 688, 690, 691, 700, 702, 703, 704, 748, 772, 776, 779, 806, 835, 839, 843, 844, 857, 859, 861, 862, 865, 866, 868, 880], "mat": [4, 19, 195, 244, 269, 497, 613, 617, 862, 880], "store": [4, 16, 29, 30, 70, 90, 93, 94, 95, 104, 109, 115, 116, 135, 136, 141, 142, 143, 144, 145, 150, 151, 152, 156, 157, 159, 161, 163, 169, 170, 171, 173, 176, 183, 190, 191, 192, 200, 201, 206, 207, 210, 211, 215, 217, 218, 222, 223, 241, 256, 257, 258, 262, 264, 265, 266, 267, 269, 274, 275, 276, 278, 282, 324, 345, 363, 380, 385, 392, 393, 402, 403, 412, 414, 425, 434, 439, 443, 448, 469, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518, 536, 545, 547, 558, 566, 572, 587, 606, 612, 613, 617, 620, 643, 652, 653, 665, 680, 700, 701, 703, 705, 706, 707, 708, 709, 710, 711, 720, 749, 756, 768, 801, 826, 827, 835, 839, 855, 856, 857, 859, 862, 865, 880], "fit": [4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 24, 40, 41, 45, 50, 59, 70, 71, 73, 74, 76, 78, 80, 81, 83, 88, 101, 111, 116, 123, 138, 142, 152, 153, 157, 159, 166, 167, 171, 173, 178, 180, 184, 185, 186, 187, 188, 190, 196, 200, 203, 204, 207, 208, 209, 210, 212, 230, 244, 250, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 279, 300, 305, 306, 312, 341, 342, 343, 344, 347, 351, 352, 353, 365, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 431, 439, 449, 453, 478, 479, 490, 517, 520, 525, 555, 557, 558, 559, 562, 565, 567, 568, 569, 572, 577, 578, 588, 618, 649, 664, 685, 700, 702, 703, 704, 713, 748, 765, 772, 776, 780, 782, 784, 787, 788, 791, 792, 793, 795, 798, 800, 802, 803, 804, 808, 810, 839, 851, 856, 859, 862, 866, 869, 880], "inferenti": [4, 226], "evalu": [4, 31, 44, 54, 55, 163, 189, 196, 210, 212, 226, 244, 276, 360, 427, 436, 475, 476, 509, 540, 567, 577, 660, 856, 859, 861, 862], "signific": [4, 72, 100, 101, 112, 152, 166, 173, 189, 199, 201, 202, 204, 205, 207, 226, 228, 229, 230, 231, 232, 233, 241, 244, 261, 264, 265, 266, 267, 269, 318, 324, 353, 410, 416, 417, 449, 478, 479, 533, 557, 558, 611, 687, 688, 690, 691, 692, 700, 702, 704, 765, 780, 784, 787, 803, 808, 810, 855, 862, 865, 868], "jose": [4, 880], "garcia": 4, "alani": [4, 880], "jcg": 4, "gmail": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 69, 72, 73, 74, 76, 78, 80, 81, 82, 84, 88, 90, 93, 94, 95, 99, 101, 103, 109, 112, 113, 114, 118, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 142, 158, 160, 162, 180, 181, 183, 184, 185, 192, 195, 209, 223, 226, 230, 231, 234, 235, 236, 240, 241], "com": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 69, 72, 73, 74, 76, 78, 80, 81, 82, 84, 88, 90, 93, 94, 95, 101, 103, 109, 112, 113, 114, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 142, 158, 160, 161, 162, 180, 181, 183, 184, 185, 192, 195, 209, 222, 223, 226, 230, 231, 234, 235, 236, 240, 241, 244, 264, 265, 266, 267, 275, 387, 478, 479, 486, 837, 839, 847, 859], "matplotlib": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 68, 69, 70, 71, 72, 73, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 135, 137, 138, 145, 146, 147, 152, 161, 171, 172, 173, 177, 178, 181, 182, 184, 185, 195, 196, 200, 202, 203, 205, 206, 207, 208, 210, 211, 212, 215, 218, 223, 226, 227, 228, 229, 230, 231, 236, 240, 241, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 278, 279, 280, 312, 313, 410, 417, 478, 479, 557, 558, 572, 622, 700, 701, 702, 704, 716, 726, 748, 749, 751, 761, 763, 765, 766, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 793, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 817, 818, 820, 837, 838, 839, 857, 880], "pyplot": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 68, 69, 70, 71, 72, 73, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 135, 137, 138, 145, 146, 147, 152, 161, 171, 173, 177, 178, 181, 182, 184, 185, 195, 196, 202, 203, 206, 207, 210, 211, 212, 215, 223, 226, 227, 228, 229, 230, 231, 236, 240, 241, 263, 264, 265, 266, 267, 700, 716, 726, 751, 772, 782, 784, 809, 880], "plt": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 68, 69, 70, 71, 72, 73, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 135, 137, 138, 145, 146, 147, 152, 161, 171, 173, 177, 178, 181, 182, 184, 185, 195, 196, 202, 203, 206, 207, 210, 211, 212, 215, 223, 226, 227, 228, 229, 230, 231, 236, 240, 241, 266, 267, 321, 716, 726, 786], "stat": [4, 96, 97, 99, 100, 101, 112, 113, 142, 195, 226, 227, 228, 229, 230, 231, 234, 235, 236, 241, 264, 265, 318, 329, 558, 566, 777, 857, 870, 877, 880], "linear_regress": [4, 101, 142, 226, 870, 880], "plot_ev": [4, 7, 138, 167, 211, 216, 264, 265, 778, 870, 880], "combine_evok": [4, 7, 99, 142, 145, 150, 152, 167, 177, 192, 211, 227, 229, 866, 870, 880], "subj": [4, 161, 205], "experi": [4, 19, 45, 65, 70, 128, 152, 166, 167, 169, 170, 181, 192, 200, 201, 207, 210, 211, 212, 215, 216, 244, 269, 835, 839, 856, 858, 862, 880], "particip": [4, 71, 73, 75, 76, 81, 82, 83, 90, 93, 127, 142, 145, 147, 152, 167, 168, 169, 170, 173, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 223, 241, 835, 856, 861, 868], "perform": [4, 8, 10, 13, 19, 31, 45, 54, 75, 82, 84, 100, 101, 103, 112, 119, 138, 141, 144, 145, 147, 150, 152, 156, 157, 158, 167, 168, 169, 170, 179, 189, 190, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 226, 228, 230, 234, 236, 257, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 287, 290, 297, 298, 353, 354, 355, 357, 359, 360, 375, 410, 413, 416, 417, 420, 422, 423, 426, 427, 431, 445, 446, 451, 453, 466, 467, 468, 469, 473, 475, 476, 478, 479, 485, 486, 493, 517, 518, 520, 521, 525, 526, 527, 528, 529, 531, 532, 536, 541, 542, 557, 558, 560, 563, 570, 571, 572, 574, 575, 577, 578, 586, 588, 603, 615, 648, 651, 652, 653, 665, 677, 682, 686, 687, 688, 689, 690, 691, 693, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 738, 764, 765, 772, 778, 779, 780, 783, 787, 791, 793, 795, 800, 801, 802, 803, 808, 810, 814, 835, 837, 845, 846, 847, 855, 856, 862, 865, 880], "two": [4, 5, 12, 16, 19, 22, 32, 37, 42, 45, 47, 54, 55, 65, 67, 69, 70, 72, 74, 75, 81, 84, 88, 90, 112, 115, 117, 132, 133, 135, 136, 138, 142, 143, 145, 147, 151, 152, 156, 157, 159, 161, 167, 169, 170, 171, 172, 173, 176, 179, 181, 191, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 215, 216, 217, 218, 223, 226, 228, 230, 234, 236, 239, 241, 244, 258, 264, 265, 266, 267, 270, 271, 272, 275, 276, 278, 279, 280, 297, 298, 312, 320, 354, 358, 359, 369, 370, 371, 402, 410, 412, 417, 421, 425, 433, 434, 444, 446, 448, 449, 450, 453, 454, 473, 475, 476, 478, 479, 501, 513, 531, 536, 553, 558, 561, 568, 572, 577, 586, 587, 602, 603, 642, 645, 653, 677, 681, 682, 683, 685, 687, 688, 689, 690, 691, 695, 700, 702, 703, 704, 718, 719, 729, 738, 748, 753, 756, 778, 779, 780, 788, 795, 801, 806, 835, 839, 845, 856, 859, 861, 862, 865, 880], "altern": [4, 114, 127, 162, 163, 170, 173, 192, 199, 201, 202, 205, 218, 226, 240, 241, 255, 257, 258, 261, 264, 265, 266, 267, 273, 354, 410, 417, 478, 479, 502, 520, 557, 558, 572, 610, 614, 689, 700, 702, 704, 748, 765, 780, 787, 791, 800, 803, 808, 810, 837, 839, 845, 856, 859, 865, 867, 880], "choic": [4, 114, 156, 161, 171, 172, 185, 202, 207, 216, 228, 277, 450, 460, 536, 693, 837, 843, 856, 862], "task": [4, 10, 32, 33, 34, 46, 70, 112, 113, 137, 138, 144, 145, 156, 157, 166, 170, 176, 196, 200, 205, 240, 244, 380, 413, 420, 716, 726, 727, 730, 856, 862, 863, 866, 868, 880], "discrimin": [4, 9, 18, 83, 196, 241, 244, 410, 414, 417, 558, 856], "between": [4, 8, 10, 16, 19, 22, 26, 27, 36, 38, 40, 45, 47, 59, 60, 69, 82, 83, 88, 96, 99, 100, 103, 108, 113, 114, 127, 128, 133, 134, 135, 137, 138, 141, 142, 145, 147, 150, 151, 152, 157, 158, 159, 161, 162, 163, 166, 167, 170, 171, 172, 173, 177, 179, 189, 190, 191, 192, 195, 196, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 215, 216, 217, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 241, 244, 256, 257, 258, 259, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 287, 308, 312, 318, 320, 321, 341, 353, 354, 360, 361, 363, 364, 365, 410, 411, 416, 422, 426, 429, 431, 433, 434, 436, 444, 451, 454, 455, 473, 475, 476, 478, 479, 501, 518, 519, 531, 533, 536, 540, 541, 542, 555, 558, 560, 561, 563, 566, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 581, 586, 587, 588, 592, 594, 615, 618, 619, 642, 650, 651, 652, 653, 655, 657, 660, 661, 664, 665, 668, 670, 671, 672, 674, 675, 679, 680, 687, 688, 690, 691, 692, 695, 700, 701, 703, 705, 707, 708, 710, 715, 716, 719, 723, 724, 726, 727, 728, 730, 731, 738, 748, 753, 764, 766, 767, 769, 772, 774, 778, 781, 782, 784, 785, 787, 801, 802, 805, 806, 808, 811, 812, 814, 826, 835, 837, 839, 845, 847, 855, 856, 859, 861, 862, 865, 868, 880], "stimuli": [4, 19, 69, 116, 128, 142, 145, 147, 150, 152, 167, 181, 192, 195, 204, 244, 416, 561, 835, 856], "The": [4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 19, 21, 27, 31, 34, 38, 41, 43, 44, 45, 46, 47, 48, 49, 52, 58, 59, 60, 63, 65, 67, 69, 74, 75, 78, 79, 80, 81, 82, 83, 84, 88, 94, 95, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 120, 126, 127, 128, 134, 135, 136, 137, 138, 142, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 172, 173, 174, 175, 178, 182, 184, 185, 187, 188, 189, 190, 191, 192, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 242, 243, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 380, 381, 384, 385, 386, 387, 388, 389, 391, 393, 394, 401, 402, 403, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 495, 497, 498, 499, 500, 501, 502, 504, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 637, 639, 640, 641, 642, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 753, 754, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 830, 831, 832, 834, 835, 837, 839, 842, 843, 845, 851, 857, 858, 859, 860, 863, 864, 866, 868, 880], "same": [4, 18, 19, 28, 44, 45, 54, 55, 58, 70, 74, 75, 79, 83, 90, 99, 103, 109, 113, 114, 127, 135, 136, 141, 142, 143, 145, 150, 151, 152, 157, 161, 162, 163, 169, 170, 171, 172, 176, 177, 179, 184, 189, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 221, 226, 227, 228, 230, 231, 234, 235, 236, 239, 256, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 284, 285, 287, 297, 300, 309, 314, 317, 328, 353, 354, 358, 359, 360, 371, 373, 389, 410, 417, 418, 423, 431, 434, 435, 444, 445, 460, 463, 467, 468, 473, 477, 478, 479, 485, 486, 493, 494, 504, 507, 544, 558, 559, 560, 569, 574, 575, 576, 577, 588, 589, 602, 606, 612, 613, 628, 646, 647, 650, 651, 652, 653, 660, 665, 666, 682, 686, 687, 688, 690, 691, 695, 700, 702, 703, 704, 718, 719, 725, 727, 728, 729, 730, 731, 732, 738, 748, 753, 764, 765, 772, 778, 779, 780, 782, 784, 787, 789, 800, 801, 804, 806, 807, 809, 833, 839, 844, 851, 856, 859, 862, 863, 866, 880], "whole": [4, 28, 54, 55, 70, 163, 200, 226, 244, 271, 272, 275, 278, 279, 280, 444, 513, 588, 605, 649, 666, 701, 748, 774, 808, 839, 847, 856, 880], "vari": [4, 19, 22, 46, 47, 59, 142, 156, 191, 195, 202, 205, 206, 209, 210, 212, 223, 226, 264, 265, 269, 271, 272, 275, 278, 279, 280, 341, 342, 343, 344, 345, 346, 433, 444, 652, 691, 771, 856, 862, 865, 868, 880], "level": [4, 8, 9, 27, 36, 44, 56, 98, 101, 102, 122, 130, 135, 142, 143, 145, 151, 152, 156, 161, 166, 167, 169, 171, 172, 181, 182, 189, 195, 199, 201, 202, 205, 206, 212, 223, 226, 228, 229, 230, 231, 232, 234, 235, 236, 241, 244, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 420, 421, 423, 426, 427, 429, 431, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 460, 461, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 554, 555, 557, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 647, 648, 649, 651, 652, 653, 654, 664, 665, 668, 670, 671, 672, 673, 674, 675, 676, 679, 681, 683, 687, 688, 689, 690, 691, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 722, 723, 727, 728, 730, 731, 732, 733, 736, 737, 738, 743, 746, 747, 748, 756, 764, 765, 773, 776, 780, 781, 782, 783, 784, 787, 788, 791, 792, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 837, 839, 846, 856, 857, 862, 864, 877, 880], "nois": [4, 5, 7, 11, 18, 21, 27, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 70, 74, 82, 84, 88, 90, 93, 94, 95, 104, 107, 108, 109, 110, 114, 120, 122, 124, 130, 145, 147, 150, 152, 153, 163, 167, 173, 177, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 195, 196, 200, 202, 204, 208, 210, 215, 218, 223, 226, 234, 236, 244, 256, 261, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 297, 298, 300, 347, 353, 354, 355, 356, 357, 358, 359, 369, 370, 371, 410, 417, 418, 433, 453, 454, 473, 475, 476, 478, 479, 483, 514, 525, 531, 532, 536, 538, 541, 542, 558, 559, 588, 596, 597, 609, 615, 652, 653, 654, 664, 702, 704, 728, 731, 773, 778, 782, 786, 788, 801, 802, 824, 835, 859, 865, 880], "less": [4, 5, 10, 18, 24, 26, 40, 41, 44, 45, 46, 49, 50, 70, 78, 87, 114, 119, 124, 135, 141, 142, 144, 151, 152, 157, 159, 160, 172, 173, 177, 182, 184, 185, 186, 189, 199, 200, 202, 203, 205, 207, 208, 210, 211, 215, 222, 226, 228, 241, 363, 451, 475, 476, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518, 525, 558, 566, 584, 586, 593, 687, 688, 689, 690, 691, 695, 748, 839, 846, 856, 859, 861, 862, 880], "discern": [4, 856], "observ": [4, 75, 101, 138, 145, 152, 157, 205, 207, 211, 226, 228, 230, 231, 234, 236, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 449, 478, 479, 558, 681, 686, 687, 688, 689, 690, 691, 700, 702, 703, 704, 705, 706, 707, 801, 835, 855, 856], "fig": [4, 5, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 39, 41, 42, 45, 47, 52, 58, 67, 68, 69, 70, 71, 72, 73, 80, 81, 82, 87, 93, 96, 99, 103, 104, 109, 112, 113, 114, 115, 116, 118, 120, 123, 124, 125, 127, 135, 136, 137, 138, 142, 145, 147, 151, 152, 157, 158, 159, 160, 161, 167, 171, 173, 177, 178, 179, 181, 182, 183, 184, 186, 192, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 223, 226, 227, 229, 230, 231, 240, 241, 261, 262, 263, 264, 265, 266, 267, 273, 274, 277, 279, 280, 312, 313, 410, 417, 478, 479, 557, 558, 700, 701, 702, 704, 751, 761, 764, 765, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 808, 809, 812, 818, 880], "similar": [4, 16, 17, 18, 19, 20, 27, 33, 58, 60, 70, 88, 103, 109, 112, 114, 131, 137, 138, 141, 142, 143, 144, 145, 151, 161, 171, 196, 199, 200, 202, 204, 205, 206, 207, 208, 211, 215, 222, 226, 228, 231, 239, 244, 257, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 354, 363, 411, 426, 444, 451, 478, 479, 509, 555, 558, 572, 577, 655, 700, 703, 704, 738, 748, 763, 782, 804, 837, 839, 844, 845, 846, 856, 857, 861, 862, 868, 880], "approach": [4, 10, 19, 21, 44, 45, 46, 59, 73, 75, 103, 127, 142, 144, 145, 150, 151, 152, 157, 161, 164, 165, 166, 167, 168, 173, 181, 195, 196, 199, 200, 202, 203, 204, 205, 208, 210, 212, 223, 226, 227, 230, 232, 241, 244, 269, 365, 388, 483, 516, 558, 574, 586, 595, 639, 764, 816, 835, 839, 847, 855, 856, 857, 861, 862, 880], "across": [4, 16, 17, 18, 19, 20, 26, 27, 28, 32, 33, 47, 54, 55, 58, 60, 80, 83, 84, 103, 109, 113, 114, 135, 136, 138, 141, 142, 143, 144, 146, 150, 151, 154, 156, 163, 166, 167, 169, 173, 181, 196, 199, 200, 202, 204, 205, 206, 207, 208, 210, 212, 218, 221, 222, 226, 234, 235, 236, 240, 244, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 317, 359, 360, 410, 413, 417, 419, 420, 422, 423, 424, 435, 444, 478, 479, 534, 535, 540, 555, 558, 560, 563, 572, 615, 625, 645, 665, 691, 695, 700, 701, 702, 703, 704, 711, 718, 727, 728, 730, 731, 763, 767, 772, 779, 780, 782, 783, 787, 800, 802, 806, 809, 812, 835, 839, 855, 856, 859, 862, 868, 880], "signal": [4, 8, 9, 10, 13, 15, 16, 19, 21, 27, 28, 42, 45, 51, 58, 59, 63, 70, 71, 73, 74, 75, 77, 82, 85, 88, 100, 103, 111, 113, 114, 121, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 163, 166, 167, 173, 176, 179, 181, 185, 190, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 208, 213, 214, 215, 216, 218, 223, 224, 225, 226, 231, 242, 244, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 280, 300, 341, 342, 343, 344, 347, 348, 351, 354, 355, 356, 357, 359, 364, 371, 380, 402, 403, 410, 412, 414, 415, 416, 417, 418, 421, 422, 431, 434, 443, 444, 445, 446, 448, 449, 450, 451, 478, 479, 493, 498, 524, 525, 526, 539, 555, 556, 557, 558, 559, 560, 567, 569, 570, 571, 573, 574, 575, 577, 579, 587, 588, 609, 618, 620, 623, 642, 645, 664, 666, 667, 686, 687, 700, 702, 703, 704, 705, 706, 707, 715, 716, 718, 719, 723, 725, 726, 729, 732, 748, 772, 778, 780, 782, 787, 788, 790, 791, 792, 793, 795, 801, 802, 835, 855, 856, 859, 880], "continuum": [4, 856, 880], "span": [4, 82, 119, 137, 141, 142, 150, 151, 152, 166, 167, 169, 179, 192, 199, 203, 213, 214, 215, 217, 218, 239, 241, 258, 264, 265, 266, 267, 269, 359, 478, 479, 555, 558, 560, 561, 574, 575, 578, 579, 615, 692, 700, 702, 704, 718, 763, 765, 802, 808, 855, 856, 857, 862, 868, 880], "85": [4, 13, 19, 35, 37, 47, 78, 79, 90, 103, 109, 112, 114, 138, 141, 146, 147, 161, 170, 177, 183, 195, 196, 203, 209, 226, 227, 230, 231, 880], "increas": [4, 11, 32, 55, 70, 112, 152, 173, 202, 205, 206, 211, 212, 223, 228, 231, 241, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 451, 478, 479, 489, 558, 577, 596, 687, 688, 690, 691, 700, 703, 716, 726, 727, 728, 729, 730, 731, 732, 748, 752, 778, 795, 801, 856, 862, 880], "step": [4, 8, 11, 15, 18, 24, 41, 46, 59, 63, 68, 94, 99, 103, 109, 112, 120, 127, 135, 141, 143, 152, 153, 159, 162, 167, 168, 169, 171, 173, 191, 192, 196, 199, 200, 201, 202, 205, 207, 208, 210, 212, 215, 226, 227, 241, 244, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 289, 291, 341, 342, 343, 347, 410, 416, 425, 428, 451, 452, 468, 469, 476, 478, 479, 495, 553, 558, 568, 572, 577, 586, 650, 667, 687, 688, 690, 691, 692, 715, 723, 738, 748, 764, 772, 801, 812, 839, 840, 845, 847, 853, 855, 856, 861, 862, 866, 868, 880], "other": [4, 43, 61, 70, 83, 84, 112, 127, 142, 144, 146, 151, 152, 156, 157, 161, 167, 169, 170, 171, 173, 176, 178, 181, 182, 189, 190, 192, 196, 199, 200, 203, 204, 205, 206, 207, 208, 209, 215, 217, 218, 222, 223, 226, 230, 239, 241, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 283, 312, 324, 325, 353, 360, 365, 416, 418, 427, 429, 431, 433, 434, 439, 443, 455, 459, 460, 473, 475, 476, 478, 479, 490, 525, 536, 547, 557, 558, 577, 583, 588, 602, 606, 608, 619, 622, 628, 631, 637, 639, 649, 660, 665, 671, 686, 700, 701, 702, 703, 704, 748, 761, 769, 776, 778, 780, 791, 795, 801, 806, 828, 833, 835, 844, 845, 846, 847, 851, 855, 856, 857, 859, 861, 865, 868, 880], "word": [4, 101, 144, 152, 156, 169, 176, 196, 202, 206, 207, 210, 226, 227, 241, 244, 393, 416, 729, 732, 748, 761, 835, 839, 856, 862, 868], "g": [4, 8, 28, 31, 37, 41, 42, 44, 68, 69, 70, 80, 81, 84, 96, 101, 112, 114, 115, 120, 126, 127, 135, 138, 141, 142, 144, 151, 152, 156, 161, 162, 163, 167, 169, 170, 171, 181, 189, 190, 191, 195, 196, 199, 201, 202, 203, 204, 205, 206, 208, 215, 216, 221, 222, 226, 227, 231, 234, 236, 240, 241, 244, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 297, 298, 299, 303, 310, 312, 313, 318, 327, 329, 338, 340, 351, 354, 358, 359, 365, 369, 370, 371, 380, 385, 388, 393, 402, 403, 410, 412, 413, 416, 417, 419, 420, 421, 424, 425, 426, 429, 430, 431, 434, 439, 442, 443, 444, 446, 448, 449, 451, 452, 453, 454, 460, 466, 469, 472, 473, 475, 476, 477, 478, 479, 480, 491, 513, 515, 519, 520, 521, 525, 531, 532, 533, 536, 540, 541, 542, 544, 557, 558, 560, 561, 568, 569, 572, 573, 574, 575, 577, 580, 583, 584, 588, 594, 595, 596, 603, 608, 615, 622, 623, 628, 635, 636, 637, 638, 639, 640, 646, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 668, 671, 685, 686, 687, 688, 689, 690, 691, 695, 696, 700, 702, 703, 704, 708, 709, 710, 711, 713, 729, 731, 732, 748, 753, 761, 764, 765, 766, 771, 772, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 792, 794, 795, 799, 800, 801, 802, 803, 806, 808, 810, 811, 814, 825, 828, 835, 837, 839, 840, 843, 845, 851, 855, 856, 859, 861, 862, 865, 866, 868, 880], "easi": [4, 133, 163, 167, 183, 189, 192, 200, 205, 208, 215, 217, 241, 274, 361, 416, 835, 837, 839, 845, 856, 857, 859, 862], "identifi": [4, 12, 13, 27, 32, 33, 34, 77, 79, 85, 135, 138, 147, 152, 170, 192, 196, 199, 205, 207, 223, 226, 244, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 312, 328, 335, 373, 413, 420, 462, 478, 479, 480, 484, 558, 562, 566, 572, 587, 597, 748, 757, 768, 806, 810, 811, 839, 855, 856, 859, 862, 865, 880], "while": [4, 10, 26, 45, 74, 76, 83, 87, 107, 127, 135, 138, 142, 143, 144, 145, 151, 152, 159, 161, 167, 173, 179, 180, 189, 199, 200, 205, 207, 208, 210, 217, 223, 226, 230, 234, 241, 244, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 410, 416, 417, 418, 427, 444, 453, 454, 473, 475, 476, 478, 479, 506, 528, 536, 558, 559, 570, 571, 574, 575, 578, 700, 703, 727, 728, 730, 731, 772, 778, 782, 786, 788, 795, 801, 804, 814, 835, 837, 839, 842, 856, 861, 862, 868, 880], "low": [4, 5, 11, 19, 45, 47, 59, 70, 74, 79, 81, 82, 83, 84, 94, 110, 114, 135, 142, 144, 152, 167, 168, 181, 184, 189, 192, 196, 200, 203, 205, 210, 211, 212, 226, 228, 230, 235, 244, 256, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 305, 354, 359, 412, 418, 421, 423, 445, 446, 448, 478, 479, 486, 489, 502, 525, 558, 563, 566, 570, 571, 574, 575, 577, 578, 579, 581, 582, 592, 653, 657, 662, 693, 694, 700, 703, 728, 731, 748, 778, 801, 835, 855, 856, 859, 861, 862, 880], "hard": [4, 114, 135, 143, 205, 223, 363, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518, 839, 856, 857, 859, 880], "extens": [4, 12, 43, 44, 137, 141, 152, 159, 161, 171, 190, 191, 196, 216, 217, 256, 264, 265, 266, 267, 297, 298, 330, 331, 337, 417, 440, 441, 443, 478, 479, 485, 492, 495, 504, 588, 606, 615, 619, 701, 720, 748, 825, 842, 843, 855, 856, 862, 868, 880], "veri": [4, 10, 44, 45, 50, 60, 63, 69, 70, 79, 80, 83, 114, 133, 135, 142, 145, 152, 158, 161, 169, 173, 182, 200, 202, 203, 204, 205, 206, 207, 210, 223, 226, 235, 241, 297, 320, 434, 478, 686, 835, 839, 842, 857, 862], "ll": [4, 7, 10, 19, 26, 34, 54, 59, 67, 70, 79, 114, 115, 116, 117, 120, 127, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 159, 161, 163, 167, 168, 169, 171, 172, 173, 180, 181, 182, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 221, 223, 227, 230, 236, 239, 240, 839, 847, 859], "begin": [4, 19, 73, 93, 135, 152, 157, 167, 169, 170, 172, 173, 176, 189, 192, 195, 199, 201, 202, 203, 204, 205, 206, 207, 212, 217, 221, 241, 258, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 283, 287, 359, 439, 452, 478, 479, 504, 518, 531, 541, 542, 558, 561, 574, 575, 577, 578, 581, 588, 618, 619, 667, 700, 703, 704, 713, 781, 792, 793, 795, 802, 808, 833, 839, 844, 862, 865, 880], "littl": [4, 161, 172, 189, 202, 203, 205, 206, 223, 241, 842, 862], "you": [4, 24, 27, 28, 32, 41, 43, 47, 50, 59, 60, 78, 79, 82, 83, 88, 103, 109, 113, 114, 115, 116, 117, 119, 120, 121, 127, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 181, 182, 183, 189, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 215, 216, 217, 218, 221, 223, 226, 228, 229, 231, 234, 236, 239, 240, 241, 244, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 283, 289, 291, 297, 298, 313, 318, 328, 329, 330, 353, 354, 358, 359, 362, 363, 369, 370, 371, 376, 388, 410, 416, 417, 427, 434, 437, 443, 445, 451, 453, 454, 462, 469, 473, 475, 476, 478, 479, 480, 490, 494, 501, 523, 525, 536, 557, 558, 574, 577, 579, 589, 606, 612, 649, 664, 680, 695, 700, 702, 703, 704, 746, 749, 751, 764, 765, 769, 771, 778, 779, 783, 788, 791, 793, 794, 795, 801, 806, 818, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 850, 854, 855, 856, 857, 858, 859, 860, 862, 863, 865, 866, 880], "first": [4, 5, 7, 10, 11, 16, 19, 21, 28, 29, 32, 38, 39, 41, 42, 43, 44, 45, 47, 63, 70, 71, 80, 83, 84, 87, 88, 90, 94, 95, 103, 104, 108, 109, 112, 113, 114, 115, 120, 127, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 150, 151, 152, 157, 158, 160, 161, 162, 163, 167, 168, 169, 170, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 191, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 241, 244, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 284, 285, 288, 296, 297, 298, 302, 317, 322, 323, 354, 362, 363, 369, 375, 385, 410, 416, 417, 425, 433, 434, 435, 438, 439, 441, 442, 444, 448, 449, 450, 451, 452, 458, 460, 468, 477, 478, 479, 498, 501, 502, 513, 519, 520, 524, 528, 534, 535, 553, 557, 558, 559, 561, 563, 566, 568, 572, 597, 602, 614, 615, 618, 622, 633, 645, 650, 652, 653, 656, 658, 659, 674, 675, 676, 681, 685, 686, 687, 688, 690, 691, 692, 694, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 735, 738, 748, 753, 756, 764, 772, 776, 778, 779, 780, 781, 784, 785, 787, 791, 792, 793, 795, 800, 801, 802, 803, 806, 808, 810, 811, 825, 826, 835, 837, 838, 847, 855, 856, 859, 862, 865, 866, 880], "limo_epoch": 4, "column": [4, 10, 31, 94, 95, 101, 112, 141, 142, 144, 146, 152, 167, 173, 176, 189, 192, 196, 207, 210, 211, 215, 226, 227, 258, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 299, 327, 369, 410, 417, 434, 438, 439, 451, 452, 468, 478, 479, 519, 537, 540, 553, 557, 558, 559, 606, 613, 614, 615, 622, 685, 686, 700, 702, 703, 704, 748, 780, 781, 787, 788, 791, 799, 800, 803, 808, 825, 835, 862, 865, 880], "1055": 4, "note": [4, 13, 16, 18, 21, 26, 47, 70, 74, 79, 83, 104, 109, 112, 114, 129, 135, 136, 137, 141, 142, 143, 144, 146, 150, 152, 157, 159, 161, 163, 167, 168, 169, 170, 171, 172, 173, 181, 182, 183, 190, 191, 195, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 212, 215, 216, 217, 221, 222, 230, 231, 234, 235, 236, 241, 244, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 288, 293, 297, 298, 300, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314, 317, 318, 319, 320, 321, 322, 324, 328, 329, 330, 332, 334, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 358, 359, 360, 361, 364, 365, 367, 369, 372, 373, 380, 385, 386, 387, 388, 389, 391, 402, 403, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 422, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 460, 461, 463, 466, 467, 468, 469, 471, 472, 477, 478, 479, 480, 486, 490, 491, 493, 494, 495, 498, 500, 501, 502, 504, 506, 507, 511, 513, 514, 515, 516, 518, 520, 521, 522, 523, 525, 526, 527, 528, 529, 531, 532, 533, 536, 538, 540, 541, 542, 544, 545, 557, 558, 559, 560, 561, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 580, 584, 588, 589, 594, 595, 596, 597, 598, 602, 603, 606, 608, 610, 611, 612, 614, 615, 618, 619, 620, 622, 623, 625, 628, 634, 636, 637, 639, 640, 642, 645, 647, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 677, 680, 681, 682, 683, 686, 687, 688, 689, 690, 691, 693, 695, 700, 701, 702, 703, 704, 708, 709, 710, 711, 712, 713, 714, 716, 718, 719, 722, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 742, 743, 746, 748, 749, 751, 763, 764, 765, 766, 767, 769, 771, 772, 773, 775, 776, 778, 779, 780, 781, 782, 784, 785, 787, 788, 789, 791, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 817, 818, 821, 825, 826, 827, 828, 829, 830, 835, 837, 839, 840, 846, 855, 859, 861, 862, 864, 880], "process": [4, 7, 27, 28, 32, 34, 45, 51, 59, 68, 69, 80, 84, 88, 101, 122, 135, 136, 143, 144, 145, 150, 152, 153, 156, 157, 161, 162, 163, 167, 173, 178, 183, 185, 189, 200, 201, 202, 203, 205, 206, 207, 208, 210, 212, 215, 217, 221, 226, 227, 228, 236, 241, 244, 256, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 287, 289, 291, 297, 298, 300, 354, 358, 359, 362, 369, 370, 371, 385, 393, 410, 412, 417, 418, 423, 427, 433, 434, 449, 453, 454, 473, 475, 476, 478, 479, 480, 489, 498, 531, 536, 558, 559, 568, 577, 588, 589, 596, 603, 605, 618, 649, 653, 673, 676, 687, 688, 690, 691, 700, 702, 703, 704, 727, 778, 782, 788, 801, 802, 837, 846, 847, 851, 854, 855, 856, 859, 861, 862, 865, 866, 868, 869, 870, 880], "epochsarrai": [4, 189, 221, 259, 264, 267, 361, 479, 613, 870, 880], "readi": [4, 5, 11, 13, 14, 15, 16, 18, 19, 27, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 129, 130, 132, 133, 135, 136, 142, 145, 147, 151, 152, 153, 157, 159, 160, 162, 163, 167, 168, 169, 170, 172, 173, 178, 181, 183, 184, 191, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 215, 218, 221, 222, 223, 228, 229, 230, 231, 234, 236, 240, 266, 269, 275, 478, 589, 618, 628, 748, 767, 772, 839, 856], "good": [4, 5, 21, 31, 49, 70, 71, 73, 76, 81, 82, 83, 90, 93, 117, 123, 127, 138, 141, 142, 144, 147, 152, 158, 167, 168, 169, 170, 172, 178, 185, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 228, 234, 236, 241, 244, 259, 262, 264, 265, 266, 267, 269, 297, 298, 300, 327, 344, 354, 358, 359, 369, 370, 371, 410, 412, 417, 418, 423, 426, 453, 454, 467, 469, 473, 475, 476, 478, 479, 518, 536, 549, 552, 555, 557, 558, 560, 563, 565, 568, 572, 573, 576, 577, 596, 603, 611, 622, 628, 668, 686, 695, 700, 702, 703, 704, 708, 709, 710, 711, 713, 728, 730, 731, 776, 778, 779, 782, 788, 802, 809, 838, 839, 846, 850, 856, 859, 860, 861, 862, 863, 880], "299944": 4, "499907": 4, "213": [4, 35, 54, 56, 100, 102, 112, 170, 196, 209, 223, 226], "7": [4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 28, 30, 32, 33, 34, 35, 40, 41, 42, 44, 45, 46, 47, 49, 50, 55, 56, 59, 60, 61, 64, 68, 70, 71, 73, 74, 76, 80, 81, 82, 83, 85, 88, 94, 96, 97, 102, 103, 104, 107, 108, 109, 112, 113, 114, 115, 120, 121, 124, 127, 128, 130, 131, 133, 135, 137, 138, 140, 141, 143, 144, 145, 146, 147, 150, 152, 157, 159, 160, 161, 167, 170, 171, 172, 173, 177, 180, 181, 182, 183, 184, 185, 186, 192, 195, 196, 199, 201, 202, 203, 205, 207, 208, 209, 210, 211, 214, 215, 216, 217, 221, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 244, 255, 262, 263, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 314, 335, 354, 380, 388, 402, 409, 421, 423, 451, 470, 475, 478, 479, 558, 563, 577, 586, 588, 592, 606, 640, 641, 666, 680, 681, 682, 700, 703, 704, 706, 709, 716, 726, 727, 728, 730, 731, 748, 779, 784, 793, 806, 807, 811, 837, 838, 845, 854, 856, 862, 865], "A": [4, 8, 9, 11, 16, 19, 21, 26, 31, 35, 42, 43, 44, 70, 75, 78, 83, 101, 103, 113, 120, 121, 126, 127, 128, 132, 133, 136, 138, 143, 144, 152, 156, 158, 161, 162, 163, 167, 169, 170, 172, 173, 176, 181, 189, 190, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 215, 217, 218, 223, 226, 227, 228, 230, 234, 235, 236, 239, 244, 255, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 290, 297, 304, 310, 312, 315, 316, 317, 320, 321, 324, 340, 354, 357, 360, 365, 366, 368, 370, 380, 387, 388, 391, 393, 402, 403, 412, 414, 418, 427, 432, 434, 435, 446, 447, 448, 449, 453, 461, 462, 463, 467, 470, 473, 478, 479, 480, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 519, 525, 526, 532, 540, 548, 550, 551, 553, 556, 557, 558, 559, 566, 572, 576, 577, 586, 589, 595, 597, 603, 605, 608, 615, 636, 642, 645, 649, 652, 653, 654, 660, 663, 664, 666, 677, 680, 681, 683, 684, 686, 687, 688, 689, 690, 691, 692, 695, 700, 701, 702, 703, 704, 705, 706, 707, 714, 716, 719, 726, 727, 728, 729, 730, 731, 732, 735, 738, 748, 751, 761, 763, 764, 766, 768, 771, 772, 774, 778, 784, 785, 786, 788, 789, 801, 802, 804, 806, 809, 810, 811, 835, 837, 854, 855, 856, 857, 861, 862, 865, 867, 868, 878, 880], "524": [4, 209, 231], "b": [4, 8, 10, 12, 22, 28, 37, 38, 44, 97, 110, 111, 127, 128, 135, 138, 202, 205, 206, 211, 216, 218, 223, 226, 227, 230, 234, 235, 236, 241, 244, 256, 259, 264, 265, 266, 267, 271, 272, 274, 275, 276, 278, 279, 280, 287, 354, 360, 380, 402, 403, 431, 445, 447, 478, 479, 541, 542, 574, 575, 618, 619, 653, 681, 683, 686, 694, 700, 703, 713, 727, 728, 730, 731, 748, 772, 778, 801, 808, 839, 856, 859, 862, 880], "531": [4, 231], "visualis": [4, 27, 29, 30, 48, 49, 50, 54, 55, 77, 85, 101, 166, 177, 211, 232, 233, 258, 264, 266, 267, 269, 318, 324, 353, 479, 506, 591, 595, 611, 691], "distribut": [4, 19, 22, 26, 46, 48, 54, 55, 59, 60, 72, 116, 146, 151, 156, 163, 166, 167, 178, 187, 188, 192, 205, 207, 226, 228, 231, 234, 235, 240, 241, 244, 261, 262, 264, 265, 266, 267, 268, 269, 273, 275, 364, 475, 478, 479, 524, 525, 536, 566, 595, 609, 618, 620, 633, 648, 652, 682, 685, 687, 688, 690, 691, 702, 704, 748, 757, 764, 776, 809, 816, 835, 844, 845, 846, 855, 856, 859, 861, 862, 880], "should": [4, 5, 16, 19, 40, 41, 63, 70, 82, 88, 90, 120, 121, 133, 135, 136, 137, 141, 142, 143, 145, 152, 157, 158, 159, 161, 162, 166, 168, 173, 181, 183, 185, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 215, 216, 217, 218, 221, 230, 231, 239, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 328, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 420, 421, 422, 423, 426, 427, 429, 431, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 460, 461, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 554, 557, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 598, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 628, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 662, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 677, 682, 687, 688, 689, 690, 691, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 722, 723, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 743, 744, 747, 748, 750, 752, 756, 764, 765, 766, 767, 771, 772, 773, 775, 776, 778, 779, 780, 781, 782, 783, 784, 787, 788, 791, 792, 793, 794, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 837, 838, 839, 842, 843, 844, 845, 850, 855, 856, 861, 862, 865, 868, 880], "appear": [4, 94, 101, 135, 141, 145, 159, 169, 173, 181, 184, 192, 199, 202, 203, 208, 217, 256, 264, 265, 266, 267, 274, 431, 478, 479, 489, 513, 766, 804, 835, 839, 856, 862, 865, 880], "clearli": [4, 21, 127, 135, 145, 153, 167, 192, 203, 205, 207, 209], "group": [4, 27, 67, 70, 109, 112, 122, 130, 135, 138, 141, 143, 144, 146, 152, 156, 161, 162, 168, 173, 179, 202, 218, 223, 226, 227, 230, 231, 235, 236, 244, 256, 264, 265, 266, 267, 269, 274, 297, 298, 314, 324, 427, 436, 437, 439, 470, 478, 479, 494, 558, 572, 649, 665, 682, 688, 691, 753, 778, 779, 784, 801, 804, 835, 839, 846, 862, 870, 880], "order": [4, 16, 18, 19, 27, 31, 34, 38, 47, 69, 70, 74, 82, 84, 88, 92, 94, 107, 111, 112, 114, 117, 121, 123, 128, 137, 144, 145, 146, 150, 157, 161, 162, 163, 166, 167, 170, 173, 178, 189, 191, 195, 199, 200, 201, 204, 205, 206, 207, 209, 210, 215, 218, 223, 231, 236, 244, 256, 257, 259, 261, 264, 265, 266, 267, 268, 269, 270, 273, 274, 288, 302, 317, 324, 341, 343, 347, 354, 361, 363, 367, 410, 412, 416, 417, 421, 431, 435, 439, 445, 446, 447, 448, 449, 454, 463, 478, 479, 485, 486, 493, 524, 531, 532, 534, 535, 549, 550, 551, 557, 558, 566, 568, 569, 570, 571, 577, 588, 602, 634, 645, 677, 682, 696, 700, 701, 702, 703, 704, 712, 713, 717, 733, 735, 738, 745, 753, 765, 778, 779, 780, 784, 787, 789, 791, 795, 796, 800, 801, 803, 804, 808, 809, 810, 837, 839, 855, 859, 862, 865, 880], "suptitl": [4, 18, 22, 37, 42, 45, 70, 73, 80, 87, 90, 103, 109, 112, 116, 120, 133, 135, 142, 145, 147, 152, 161, 177, 192, 195, 200, 202, 203, 205, 206, 207, 208, 210, 211, 226, 880], "As": [4, 38, 43, 70, 88, 94, 112, 135, 137, 141, 144, 146, 150, 151, 152, 158, 161, 167, 168, 169, 170, 171, 173, 176, 181, 189, 192, 195, 196, 199, 200, 201, 202, 204, 205, 207, 208, 210, 215, 216, 217, 218, 221, 228, 230, 236, 239, 241, 246, 418, 439, 495, 506, 572, 686, 695, 748, 772, 855, 861, 862, 865, 868, 880], "seen": [4, 12, 27, 74, 141, 144, 145, 147, 151, 152, 157, 170, 171, 196, 199, 203, 206, 207, 211, 212, 215, 218, 297, 417, 652, 653, 728, 731, 839, 862, 863, 865], "abov": [4, 21, 42, 43, 45, 49, 60, 70, 74, 75, 82, 88, 114, 116, 135, 141, 143, 145, 151, 152, 157, 161, 162, 167, 168, 169, 171, 172, 173, 176, 189, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 218, 221, 223, 230, 231, 241, 244, 258, 261, 264, 265, 266, 267, 269, 277, 353, 410, 412, 417, 421, 434, 440, 441, 443, 446, 448, 478, 479, 480, 486, 506, 557, 558, 560, 577, 587, 597, 687, 688, 690, 691, 700, 702, 704, 728, 731, 738, 748, 772, 779, 780, 787, 791, 793, 803, 804, 808, 810, 835, 838, 839, 844, 855, 859, 862, 863, 866], "These": [4, 27, 45, 54, 55, 60, 70, 94, 135, 138, 139, 145, 146, 148, 152, 154, 156, 159, 161, 163, 164, 166, 167, 168, 171, 173, 174, 179, 181, 187, 189, 190, 191, 193, 195, 196, 197, 201, 202, 205, 209, 211, 213, 218, 219, 223, 224, 226, 227, 232, 237, 241, 242, 255, 264, 265, 266, 267, 269, 281, 305, 306, 325, 354, 358, 359, 360, 429, 478, 479, 522, 558, 568, 577, 588, 619, 657, 662, 686, 700, 702, 703, 704, 835, 839, 846, 855, 856, 859, 861, 862, 863, 865, 868, 880], "easili": [4, 43, 44, 101, 141, 145, 150, 161, 169, 171, 189, 191, 199, 202, 205, 207, 208, 215, 216, 217, 218, 234, 241, 437, 478, 479, 577, 686, 839, 846, 855, 862, 880], "access": [4, 52, 101, 132, 135, 159, 167, 169, 170, 176, 206, 215, 217, 218, 239, 244, 257, 259, 264, 265, 268, 277, 478, 479, 612, 614, 702, 703, 704, 729, 732, 839, 845, 857, 861, 865, 880], "call": [4, 18, 31, 43, 44, 87, 88, 94, 117, 128, 135, 141, 143, 145, 146, 147, 150, 151, 152, 156, 157, 159, 161, 162, 167, 169, 171, 172, 173, 176, 179, 183, 191, 196, 199, 200, 202, 203, 205, 206, 210, 212, 215, 216, 217, 218, 226, 228, 230, 231, 236, 240, 241, 256, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 276, 278, 279, 280, 282, 308, 312, 354, 355, 357, 359, 360, 365, 413, 416, 420, 423, 426, 427, 431, 443, 445, 453, 466, 468, 478, 479, 486, 493, 506, 517, 520, 521, 525, 526, 527, 528, 529, 531, 532, 541, 542, 558, 563, 568, 569, 570, 571, 574, 576, 577, 588, 603, 639, 648, 651, 652, 653, 665, 670, 674, 687, 688, 689, 690, 691, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 716, 718, 719, 726, 727, 728, 729, 730, 731, 745, 746, 748, 765, 772, 778, 779, 780, 783, 786, 787, 802, 810, 835, 837, 838, 839, 843, 847, 857, 859, 861, 862, 865, 866, 870, 880], "shown": [4, 32, 52, 70, 80, 83, 94, 101, 118, 120, 127, 135, 137, 143, 150, 151, 152, 157, 159, 163, 167, 173, 181, 183, 202, 206, 211, 215, 216, 218, 231, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 312, 410, 417, 469, 478, 479, 509, 536, 557, 558, 572, 700, 702, 703, 704, 748, 764, 765, 766, 772, 773, 775, 776, 778, 780, 782, 784, 785, 786, 787, 789, 791, 798, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 818, 862, 863, 865, 880], "below": [4, 10, 19, 43, 47, 75, 112, 114, 127, 135, 141, 152, 156, 161, 162, 167, 169, 171, 173, 191, 195, 202, 203, 205, 206, 207, 208, 210, 211, 212, 217, 226, 231, 234, 236, 239, 241, 244, 259, 261, 262, 263, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278, 279, 280, 306, 312, 360, 412, 421, 429, 437, 446, 448, 469, 478, 479, 495, 525, 558, 560, 566, 568, 652, 686, 687, 688, 690, 691, 700, 703, 748, 767, 779, 784, 788, 791, 793, 806, 811, 812, 835, 839, 845, 855, 859, 861, 862, 866, 870, 880], "also": [4, 10, 19, 21, 27, 28, 29, 30, 32, 38, 39, 41, 42, 43, 45, 47, 60, 62, 69, 70, 71, 78, 79, 80, 81, 83, 84, 94, 95, 101, 104, 107, 109, 112, 114, 116, 117, 120, 126, 127, 135, 136, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 158, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 181, 182, 183, 184, 185, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 221, 223, 226, 227, 228, 230, 231, 234, 236, 239, 240, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 297, 298, 304, 305, 306, 310, 312, 314, 322, 323, 327, 329, 330, 340, 347, 354, 359, 360, 366, 369, 372, 380, 387, 410, 412, 417, 422, 426, 429, 431, 434, 445, 446, 448, 449, 450, 451, 453, 460, 463, 470, 473, 475, 476, 478, 479, 486, 490, 498, 502, 517, 520, 521, 531, 532, 533, 536, 555, 557, 558, 560, 561, 567, 568, 570, 572, 573, 574, 575, 578, 579, 580, 581, 583, 584, 594, 596, 602, 603, 610, 618, 635, 636, 639, 645, 648, 649, 656, 665, 668, 686, 687, 692, 695, 700, 702, 703, 704, 708, 709, 710, 711, 713, 728, 731, 737, 738, 746, 748, 764, 765, 771, 772, 773, 776, 778, 779, 780, 782, 784, 785, 787, 788, 790, 791, 792, 798, 799, 800, 801, 802, 803, 804, 806, 808, 810, 812, 814, 835, 837, 839, 842, 843, 844, 845, 846, 847, 854, 855, 856, 857, 859, 860, 861, 862, 863, 864, 865, 868, 870, 880], "conveni": [4, 11, 45, 70, 75, 135, 138, 143, 152, 159, 162, 167, 170, 172, 173, 182, 196, 199, 202, 206, 207, 216, 221, 226, 227, 228, 231, 234, 235, 236, 240, 244, 264, 265, 266, 267, 268, 274, 477, 478, 479, 484, 509, 531, 558, 566, 574, 575, 642, 645, 647, 690, 691, 700, 702, 703, 704, 761, 837, 839, 843, 855, 856, 862, 880], "head": [4, 5, 10, 22, 26, 41, 43, 45, 50, 70, 71, 78, 79, 80, 101, 109, 112, 115, 118, 120, 125, 127, 135, 136, 137, 144, 146, 151, 152, 158, 160, 164, 165, 166, 167, 170, 171, 173, 176, 177, 178, 179, 181, 182, 184, 185, 186, 189, 191, 192, 199, 200, 205, 207, 208, 210, 212, 213, 214, 215, 227, 241, 244, 261, 262, 264, 265, 266, 267, 268, 269, 273, 274, 277, 302, 304, 305, 306, 307, 308, 309, 312, 315, 316, 324, 325, 328, 330, 335, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 354, 360, 361, 363, 364, 365, 366, 373, 386, 389, 410, 417, 429, 431, 453, 460, 461, 469, 470, 471, 472, 478, 479, 483, 485, 489, 490, 491, 497, 502, 504, 508, 510, 515, 516, 517, 520, 521, 522, 557, 558, 562, 565, 567, 568, 569, 572, 577, 584, 588, 589, 608, 613, 614, 617, 620, 631, 641, 648, 649, 651, 652, 653, 657, 662, 665, 668, 695, 700, 702, 704, 734, 735, 737, 748, 764, 765, 766, 771, 772, 776, 780, 782, 783, 784, 785, 787, 788, 790, 791, 798, 800, 802, 803, 804, 808, 810, 816, 826, 827, 828, 833, 835, 839, 856, 865, 868, 869, 870, 880], "491210": 4, "235572": 4, "043707": 4, "642398": 4, "659978": 4, "now": [4, 19, 24, 26, 32, 41, 45, 50, 70, 72, 74, 84, 87, 88, 109, 111, 112, 113, 120, 127, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 152, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 173, 177, 179, 180, 181, 183, 184, 195, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 217, 223, 228, 230, 231, 234, 235, 236, 240, 241, 262, 264, 265, 266, 267, 320, 463, 478, 479, 645, 749, 769, 776, 839, 862, 865, 880], "let": [4, 10, 18, 21, 26, 32, 47, 55, 70, 71, 73, 87, 109, 113, 121, 127, 135, 136, 137, 141, 142, 143, 145, 147, 151, 152, 153, 157, 159, 160, 161, 163, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 196, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 212, 215, 223, 226, 230, 231, 234, 235, 236, 240, 241, 511, 716, 726, 749, 839, 842, 880], "closer": [4, 24, 41, 109, 142, 159, 210, 226, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 649, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810], "want": [4, 41, 50, 79, 83, 94, 112, 115, 120, 127, 135, 136, 137, 141, 142, 143, 144, 145, 146, 150, 151, 152, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 179, 181, 190, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 215, 216, 217, 221, 222, 226, 228, 230, 231, 234, 235, 241, 256, 257, 264, 265, 266, 267, 271, 275, 279, 318, 376, 434, 439, 478, 479, 558, 574, 771, 801, 806, 818, 838, 839, 842, 846, 847, 859, 860, 861, 862, 865, 866], "includ": [4, 7, 28, 37, 41, 69, 70, 82, 86, 96, 97, 99, 103, 104, 107, 110, 113, 114, 123, 132, 135, 136, 138, 141, 143, 144, 145, 147, 150, 152, 153, 156, 160, 161, 163, 167, 168, 169, 170, 171, 173, 177, 181, 183, 186, 189, 190, 191, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 215, 217, 218, 221, 226, 228, 229, 230, 236, 244, 250, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 296, 298, 310, 313, 314, 318, 327, 329, 354, 359, 360, 367, 369, 412, 417, 426, 431, 434, 438, 439, 448, 449, 451, 463, 464, 477, 478, 479, 486, 489, 491, 493, 494, 495, 500, 504, 519, 521, 526, 528, 536, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 565, 566, 568, 569, 573, 574, 575, 577, 580, 584, 587, 588, 594, 596, 599, 603, 612, 614, 615, 618, 619, 620, 668, 685, 686, 695, 699, 700, 702, 703, 704, 708, 709, 710, 711, 713, 717, 729, 731, 732, 738, 744, 748, 772, 778, 779, 780, 781, 782, 784, 785, 792, 793, 797, 801, 802, 808, 825, 835, 837, 839, 841, 842, 843, 844, 845, 846, 847, 851, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 868, 880], "tabl": [4, 41, 123, 135, 144, 145, 172, 173, 186, 190, 202, 215, 216, 239, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 462, 463, 478, 479, 536, 649, 748, 767, 772, 779, 806, 811, 812, 813, 817, 830, 835, 862, 865, 866, 880], "epochs_summari": 4, "describ": [4, 13, 16, 74, 99, 113, 117, 150, 152, 157, 159, 163, 166, 167, 169, 170, 171, 172, 173, 189, 195, 199, 201, 206, 207, 208, 210, 211, 216, 217, 223, 224, 227, 232, 241, 244, 266, 267, 297, 353, 354, 360, 410, 418, 431, 434, 442, 478, 479, 557, 558, 559, 588, 624, 650, 670, 671, 672, 673, 674, 675, 676, 714, 716, 719, 726, 730, 788, 794, 835, 837, 855, 859, 861, 862, 865, 868, 880], "round": [4, 37, 109, 141, 146, 150, 161, 169, 173, 195, 202, 203, 205, 206, 212, 215, 223, 241, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 439, 478, 479, 700, 703, 880], "count": [4, 22, 70, 72, 141, 172, 211, 217, 226, 230, 234, 236, 259, 264, 265, 266, 267, 297, 298, 354, 358, 359, 368, 369, 370, 371, 410, 417, 433, 453, 454, 473, 475, 476, 518, 536, 568, 611, 687, 688, 690, 691, 788, 880], "uniqu": [4, 10, 18, 101, 144, 151, 152, 167, 169, 216, 226, 231, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 321, 439, 468, 478, 479, 520, 558, 612, 673, 676, 700, 702, 703, 704, 728, 731, 772, 782, 862, 865, 880], "nan": [4, 69, 70, 135, 145, 210, 228, 229, 230, 231, 241, 478, 479, 506, 564, 577, 880], "top": [4, 73, 112, 115, 120, 127, 137, 141, 152, 159, 161, 162, 173, 177, 182, 200, 203, 205, 206, 207, 208, 211, 215, 217, 218, 226, 256, 264, 265, 266, 267, 272, 278, 280, 748, 749, 766, 778, 782, 811, 835, 839, 862, 865, 880], "freq": [4, 9, 21, 32, 33, 34, 68, 104, 107, 109, 112, 114, 133, 138, 167, 195, 199, 202, 203, 212, 221, 228, 229, 230, 231, 239, 240, 241, 243, 256, 341, 343, 423, 449, 478, 479, 542, 680, 700, 701, 702, 703, 704, 714, 716, 718, 719, 724, 726, 727, 728, 729, 730, 731, 771, 789, 796, 868, 880], "std": [4, 16, 152, 192, 223, 236, 239, 240, 241, 264, 265, 266, 267, 314, 410, 417, 478, 479, 514, 700, 772, 779, 782, 785, 802], "min": [4, 9, 21, 22, 96, 97, 112, 114, 116, 137, 138, 142, 147, 158, 173, 195, 199, 205, 207, 215, 226, 227, 228, 229, 230, 231, 234, 235, 236, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 321, 410, 412, 417, 421, 443, 446, 448, 478, 479, 557, 558, 570, 578, 579, 581, 583, 592, 596, 597, 700, 702, 704, 765, 779, 780, 787, 791, 800, 801, 802, 803, 806, 808, 809, 810, 811], "619": [4, 231], "852": [4, 231], "084": 4, "875": [4, 144, 183, 862], "max": [4, 5, 8, 9, 19, 21, 22, 31, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 81, 84, 90, 93, 94, 96, 100, 109, 112, 115, 116, 121, 135, 137, 142, 145, 151, 153, 158, 161, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 195, 196, 203, 210, 215, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 255, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 297, 298, 321, 358, 410, 412, 417, 421, 443, 444, 446, 448, 478, 479, 509, 534, 535, 540, 557, 558, 579, 583, 592, 597, 687, 688, 689, 690, 691, 693, 700, 702, 704, 716, 726, 748, 756, 765, 779, 780, 783, 787, 791, 800, 802, 803, 806, 808, 809, 810, 811, 867, 880], "642": [4, 59, 239, 244, 476], "provid": [4, 5, 18, 19, 27, 43, 44, 65, 80, 90, 93, 94, 95, 103, 138, 141, 143, 147, 150, 151, 152, 156, 157, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 176, 185, 186, 189, 190, 191, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 215, 216, 217, 218, 221, 223, 227, 228, 231, 244, 245, 256, 258, 259, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 285, 288, 297, 298, 302, 303, 310, 313, 321, 324, 329, 353, 355, 356, 357, 358, 359, 360, 365, 369, 372, 385, 386, 389, 410, 412, 417, 426, 431, 434, 437, 448, 449, 451, 453, 463, 469, 470, 477, 478, 479, 497, 498, 508, 509, 511, 520, 524, 545, 557, 558, 560, 561, 568, 573, 574, 575, 577, 580, 588, 594, 596, 603, 613, 617, 628, 639, 649, 650, 665, 668, 685, 686, 688, 690, 691, 694, 700, 701, 702, 703, 704, 708, 709, 710, 711, 713, 727, 728, 729, 730, 731, 732, 735, 736, 738, 745, 748, 764, 765, 767, 772, 774, 778, 779, 780, 782, 783, 784, 785, 787, 790, 791, 795, 797, 800, 801, 802, 803, 806, 808, 810, 811, 812, 835, 837, 839, 840, 842, 843, 845, 846, 851, 854, 855, 856, 857, 859, 861, 862, 863, 865, 868, 870, 880], "command": [4, 123, 135, 152, 156, 159, 161, 172, 186, 190, 264, 265, 269, 360, 469, 478, 479, 515, 558, 641, 778, 795, 801, 837, 838, 842, 843, 844, 845, 846, 847, 851, 855, 857, 870, 880], "ran": [4, 231, 269], "befor": [4, 5, 21, 24, 26, 41, 44, 45, 50, 61, 68, 70, 82, 86, 88, 90, 94, 119, 127, 135, 137, 138, 141, 142, 143, 144, 145, 146, 150, 152, 157, 158, 159, 161, 162, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 181, 182, 184, 185, 186, 189, 192, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 223, 239, 241, 256, 257, 259, 261, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 278, 279, 280, 297, 314, 341, 359, 362, 370, 371, 410, 416, 417, 419, 422, 434, 440, 441, 442, 443, 444, 445, 451, 452, 454, 478, 479, 518, 531, 532, 534, 535, 541, 542, 557, 558, 561, 570, 571, 574, 575, 577, 578, 603, 611, 618, 623, 656, 657, 658, 659, 660, 662, 664, 686, 687, 688, 690, 691, 695, 701, 702, 704, 765, 774, 779, 780, 782, 784, 786, 787, 792, 793, 794, 799, 802, 818, 830, 837, 847, 855, 856, 859, 861, 862, 865, 880], "There": [4, 74, 83, 120, 127, 142, 145, 152, 157, 159, 160, 167, 171, 172, 173, 178, 181, 191, 199, 201, 202, 203, 205, 206, 210, 212, 215, 217, 226, 239, 264, 402, 434, 558, 595, 649, 839, 843, 846, 856, 859, 860, 862, 864, 865], "subdivid": [4, 161, 162, 256, 271, 275, 279, 384, 648, 806, 880], "particular": [4, 27, 126, 135, 141, 142, 156, 167, 169, 173, 176, 195, 196, 202, 205, 206, 215, 228, 236, 256, 258, 264, 265, 274, 303, 427, 454, 478, 479, 486, 623, 680, 687, 688, 690, 691, 778, 801, 837, 859, 861, 862, 863, 868], "addit": [4, 34, 42, 45, 60, 61, 70, 75, 82, 112, 114, 135, 136, 141, 143, 146, 151, 153, 157, 161, 162, 163, 167, 171, 189, 190, 191, 192, 195, 196, 201, 202, 205, 206, 207, 208, 210, 215, 217, 218, 221, 231, 241, 256, 261, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278, 279, 280, 335, 353, 354, 359, 385, 410, 411, 412, 415, 417, 418, 421, 431, 434, 441, 443, 448, 478, 479, 484, 525, 526, 527, 528, 529, 531, 532, 538, 541, 542, 555, 556, 557, 558, 559, 570, 571, 589, 618, 644, 654, 686, 687, 688, 690, 691, 699, 700, 702, 703, 704, 719, 727, 728, 730, 731, 748, 761, 765, 778, 780, 782, 787, 793, 799, 801, 803, 806, 808, 810, 811, 839, 842, 843, 845, 846, 855, 856, 858, 859, 862, 865, 866, 868, 880], "valu": [4, 5, 7, 8, 9, 10, 16, 19, 21, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 69, 71, 90, 93, 94, 96, 101, 103, 104, 109, 112, 114, 120, 121, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 157, 161, 163, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 201, 202, 203, 205, 206, 207, 210, 211, 212, 215, 217, 221, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 287, 288, 297, 298, 300, 302, 306, 309, 310, 314, 321, 325, 327, 329, 330, 348, 349, 354, 355, 357, 358, 359, 360, 365, 368, 369, 370, 371, 375, 385, 402, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 431, 432, 434, 438, 439, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 458, 463, 466, 468, 469, 470, 473, 475, 476, 478, 479, 480, 486, 488, 493, 500, 502, 506, 511, 513, 514, 515, 517, 518, 520, 521, 522, 524, 525, 529, 531, 532, 533, 534, 535, 536, 539, 541, 542, 546, 557, 558, 559, 560, 561, 563, 564, 567, 570, 571, 572, 573, 574, 575, 577, 579, 580, 583, 584, 586, 594, 596, 597, 599, 603, 605, 611, 615, 618, 622, 631, 638, 642, 644, 645, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 673, 676, 678, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 727, 728, 729, 730, 731, 735, 736, 738, 748, 751, 757, 764, 765, 767, 770, 772, 773, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 792, 799, 800, 801, 802, 803, 806, 808, 809, 810, 811, 812, 813, 818, 833, 835, 839, 855, 856, 859, 862, 865, 880], "z": [4, 5, 11, 16, 18, 24, 41, 45, 50, 128, 152, 157, 159, 160, 161, 170, 171, 176, 177, 181, 182, 184, 185, 186, 190, 202, 206, 208, 244, 261, 264, 265, 266, 267, 268, 272, 273, 278, 280, 305, 306, 312, 324, 335, 344, 345, 410, 417, 429, 478, 479, 490, 525, 557, 558, 563, 567, 572, 577, 620, 652, 653, 700, 702, 704, 738, 739, 741, 748, 765, 772, 778, 780, 782, 784, 787, 788, 790, 791, 795, 798, 800, 801, 802, 803, 804, 808, 810, 816, 817, 827, 835, 845, 862, 880], "score": [4, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 74, 83, 138, 173, 195, 196, 205, 210, 274, 410, 413, 414, 416, 417, 420, 427, 558, 563, 572, 577, 656, 687, 688, 690, 691, 794, 817, 856, 859, 880], "thei": [4, 5, 26, 41, 45, 47, 50, 70, 71, 74, 79, 82, 83, 94, 107, 114, 119, 135, 141, 142, 143, 145, 150, 152, 153, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 177, 181, 182, 183, 189, 191, 192, 196, 199, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 215, 216, 217, 218, 231, 234, 244, 257, 259, 264, 265, 266, 267, 269, 274, 297, 307, 309, 324, 325, 334, 354, 361, 363, 431, 433, 439, 443, 445, 452, 478, 479, 486, 493, 498, 500, 502, 518, 534, 535, 547, 558, 569, 576, 577, 588, 603, 611, 612, 614, 645, 703, 743, 748, 765, 781, 782, 785, 830, 835, 837, 839, 842, 846, 855, 857, 861, 862, 880], "have": [4, 10, 19, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 71, 74, 78, 80, 83, 84, 86, 87, 90, 94, 95, 101, 103, 104, 112, 115, 116, 117, 119, 120, 127, 131, 134, 135, 136, 138, 141, 143, 144, 145, 146, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 182, 183, 184, 189, 190, 191, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 230, 231, 234, 236, 239, 241, 255, 256, 257, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 291, 292, 295, 297, 298, 306, 314, 317, 320, 330, 353, 354, 358, 359, 360, 365, 369, 370, 371, 402, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 429, 430, 431, 434, 435, 444, 445, 450, 453, 454, 460, 468, 470, 473, 475, 476, 477, 478, 479, 486, 489, 490, 493, 495, 498, 501, 517, 519, 527, 529, 532, 536, 544, 553, 557, 558, 559, 568, 569, 572, 574, 575, 576, 577, 579, 588, 606, 608, 618, 637, 639, 642, 645, 650, 651, 652, 653, 654, 665, 670, 674, 682, 686, 700, 701, 702, 703, 704, 719, 720, 727, 728, 738, 748, 752, 753, 765, 771, 772, 778, 779, 780, 782, 785, 787, 788, 791, 800, 802, 803, 808, 809, 810, 814, 818, 828, 830, 835, 837, 840, 844, 845, 847, 851, 856, 857, 860, 861, 862, 865, 866, 868, 880], "standard": [4, 8, 28, 34, 41, 44, 46, 70, 74, 83, 94, 109, 121, 135, 136, 142, 150, 151, 152, 156, 160, 161, 170, 171, 172, 183, 192, 195, 196, 200, 202, 205, 208, 215, 221, 227, 236, 240, 244, 256, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 287, 312, 314, 323, 328, 330, 388, 410, 417, 419, 430, 443, 444, 459, 463, 466, 478, 479, 486, 490, 493, 502, 506, 525, 541, 542, 552, 557, 558, 577, 614, 621, 645, 649, 682, 685, 700, 702, 703, 704, 712, 713, 748, 765, 766, 772, 773, 779, 780, 782, 787, 788, 791, 793, 800, 803, 806, 808, 809, 810, 812, 835, 837, 855, 856, 857, 859, 862, 865, 868, 870, 880], "deviat": [4, 54, 55, 90, 97, 100, 121, 151, 152, 179, 196, 205, 209, 226, 228, 240, 261, 264, 265, 266, 267, 287, 314, 410, 540, 541, 542, 558, 577, 662, 682, 700, 702, 703, 704, 772, 773, 779, 782, 788, 791, 793, 808, 809, 835, 862, 880], "how": [4, 5, 9, 10, 13, 18, 19, 22, 26, 27, 31, 33, 43, 44, 45, 47, 58, 62, 64, 66, 67, 68, 69, 70, 71, 75, 78, 79, 90, 94, 95, 98, 99, 105, 113, 116, 117, 120, 122, 124, 125, 127, 129, 130, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 189, 191, 195, 196, 201, 202, 203, 204, 205, 206, 208, 209, 211, 215, 216, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 236, 239, 240, 241, 244, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 277, 278, 279, 280, 297, 298, 308, 312, 313, 338, 342, 348, 360, 365, 366, 367, 373, 410, 416, 417, 422, 437, 452, 454, 468, 469, 473, 475, 476, 478, 479, 483, 491, 498, 499, 502, 509, 525, 534, 535, 536, 557, 558, 561, 569, 577, 588, 589, 630, 631, 632, 633, 641, 645, 648, 649, 687, 688, 690, 691, 698, 700, 701, 702, 703, 704, 719, 748, 749, 756, 764, 765, 766, 769, 772, 774, 778, 779, 780, 783, 787, 791, 792, 793, 794, 800, 801, 803, 806, 807, 808, 810, 811, 816, 818, 835, 837, 839, 840, 847, 855, 856, 861, 862, 863, 865, 866, 868, 880], "onli": [4, 8, 10, 11, 12, 19, 21, 22, 31, 34, 39, 41, 44, 45, 47, 49, 50, 55, 63, 70, 74, 78, 79, 82, 83, 88, 90, 93, 94, 95, 96, 97, 103, 107, 109, 112, 114, 115, 116, 117, 120, 127, 131, 133, 137, 138, 141, 142, 143, 144, 150, 151, 152, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 181, 184, 189, 190, 191, 192, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 325, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 429, 431, 434, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 458, 460, 461, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 554, 555, 556, 557, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 628, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 647, 648, 649, 651, 652, 653, 654, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 677, 686, 687, 688, 689, 690, 691, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 718, 719, 722, 723, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 743, 747, 748, 756, 764, 765, 766, 767, 769, 772, 773, 776, 778, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 795, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 839, 846, 855, 856, 859, 860, 861, 862, 863, 865, 880], "500": [4, 10, 11, 19, 22, 70, 80, 81, 85, 86, 88, 116, 136, 142, 144, 146, 182, 185, 188, 191, 195, 196, 202, 205, 209, 211, 212, 223, 226, 231, 558], "ts_arg": [4, 101, 128, 196, 211, 227, 264, 265, 266, 267, 558, 779, 785, 793, 880], "xlim": [4, 19, 37, 39, 97, 127, 161, 182, 195, 202, 203, 211, 212, 223, 226, 236, 241, 266, 267, 782, 784], "plot_joint": [4, 71, 101, 151, 152, 167, 181, 183, 196, 199, 205, 207, 211, 227, 240, 266, 267, 700, 866, 880], "15": [4, 5, 9, 11, 12, 13, 19, 21, 28, 29, 32, 33, 34, 35, 42, 43, 45, 47, 50, 51, 61, 66, 68, 69, 70, 71, 73, 75, 76, 80, 81, 83, 85, 92, 93, 94, 103, 108, 109, 112, 114, 127, 135, 136, 137, 138, 140, 142, 143, 144, 146, 150, 152, 155, 156, 158, 163, 167, 169, 170, 171, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 195, 196, 201, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 221, 226, 227, 228, 230, 231, 234, 235, 236, 238, 239, 244, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 277, 278, 279, 280, 284, 318, 369, 412, 421, 446, 448, 449, 450, 475, 478, 479, 506, 558, 561, 570, 571, 633, 664, 684, 689, 702, 704, 719, 729, 730, 732, 752, 763, 764, 778, 786, 806, 811, 835, 842, 855, 856, 862], "titl": [4, 8, 9, 15, 16, 19, 22, 30, 35, 39, 42, 43, 44, 46, 47, 48, 49, 50, 54, 55, 59, 69, 70, 71, 76, 82, 86, 90, 94, 101, 103, 107, 108, 109, 110, 114, 120, 123, 125, 127, 132, 135, 138, 142, 143, 145, 147, 152, 153, 161, 173, 176, 177, 178, 180, 181, 195, 196, 200, 202, 203, 205, 206, 207, 208, 210, 212, 223, 226, 227, 228, 231, 236, 240, 241, 244, 262, 264, 265, 266, 267, 271, 274, 275, 279, 478, 479, 557, 558, 700, 702, 704, 748, 768, 771, 772, 776, 777, 778, 779, 780, 782, 784, 785, 786, 789, 791, 792, 794, 795, 796, 801, 803, 804, 806, 809, 815, 839, 854, 880], "differ": [4, 9, 16, 21, 22, 27, 28, 33, 37, 39, 44, 45, 47, 54, 55, 63, 68, 70, 77, 80, 81, 85, 94, 96, 99, 101, 103, 107, 110, 111, 112, 114, 120, 122, 123, 127, 130, 134, 135, 136, 138, 141, 143, 144, 145, 148, 150, 151, 152, 153, 157, 159, 161, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 181, 182, 184, 185, 186, 189, 190, 191, 192, 196, 199, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 217, 221, 226, 227, 228, 229, 231, 234, 235, 236, 240, 244, 258, 259, 264, 265, 266, 267, 268, 271, 272, 275, 278, 279, 280, 281, 297, 298, 299, 303, 320, 341, 354, 358, 359, 361, 363, 364, 369, 370, 371, 389, 402, 410, 417, 419, 431, 433, 434, 444, 451, 453, 454, 468, 469, 473, 475, 476, 478, 479, 486, 493, 500, 511, 518, 531, 533, 534, 535, 536, 545, 558, 560, 568, 569, 574, 577, 586, 588, 602, 605, 611, 612, 615, 619, 642, 651, 652, 653, 654, 660, 663, 664, 665, 666, 682, 687, 688, 689, 690, 691, 700, 701, 702, 703, 704, 748, 753, 764, 774, 778, 782, 786, 787, 788, 793, 795, 801, 804, 806, 812, 826, 835, 837, 839, 843, 844, 847, 855, 856, 857, 859, 862, 865, 868, 880], "wave": [4, 46, 95, 114, 138, 145, 152, 167, 202, 207, 227, 239, 244, 264, 265, 266, 267, 402, 403, 478, 479, 508, 570, 574, 578, 702, 704, 712, 718, 856], "contrast": [4, 7, 79, 88, 96, 99, 150, 152, 167, 171, 208, 223, 226, 227, 234, 239, 240, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703, 856, 866, 868, 880], "although": [4, 21, 65, 101, 141, 144, 150, 162, 173, 201, 202, 204, 206, 215, 262, 443, 478, 479, 682, 846, 862, 880], "shouldn": [4, 152, 244, 275, 278, 545], "expect": [4, 32, 38, 94, 114, 121, 145, 157, 160, 162, 163, 166, 167, 168, 173, 181, 191, 196, 202, 205, 206, 207, 211, 215, 216, 221, 223, 226, 230, 231, 236, 241, 264, 265, 266, 267, 330, 332, 337, 358, 478, 479, 485, 494, 497, 504, 536, 558, 588, 612, 613, 617, 628, 639, 748, 778, 788, 795, 801, 835, 837, 839, 858, 859, 861, 862, 863, 880], "great": [4, 120, 145, 152, 241, 857, 868], "among": [4, 10, 27, 36, 56, 173, 202, 226, 275, 277, 364, 535, 537, 539, 558, 577, 620, 623, 680, 748, 753, 851, 861, 880], "minu": [4, 142, 145, 228, 241, 558, 642, 685, 862, 865], "difference_wav": 4, "weight": [4, 5, 7, 11, 15, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 58, 59, 60, 73, 74, 90, 94, 99, 104, 107, 108, 109, 110, 123, 138, 142, 145, 150, 152, 158, 167, 169, 177, 178, 179, 180, 181, 182, 183, 186, 189, 192, 195, 196, 200, 202, 203, 204, 206, 207, 208, 211, 222, 223, 226, 227, 229, 234, 235, 236, 244, 256, 269, 270, 275, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 353, 365, 414, 415, 416, 428, 431, 454, 455, 473, 475, 476, 489, 525, 531, 532, 536, 557, 558, 586, 656, 657, 662, 663, 666, 687, 688, 690, 691, 695, 707, 710, 718, 780, 803, 835, 855, 856, 865, 866, 880], "clear": [4, 74, 113, 117, 141, 158, 200, 204, 206, 210, 212, 223, 226, 261, 264, 265, 269, 273, 288, 302, 478, 479, 524, 735, 748, 779, 839, 868, 880], "pattern": [4, 11, 17, 19, 20, 21, 27, 46, 80, 83, 112, 113, 143, 144, 162, 167, 168, 173, 195, 199, 202, 205, 206, 207, 211, 241, 244, 264, 265, 266, 267, 269, 274, 312, 328, 363, 373, 410, 414, 416, 417, 418, 425, 428, 434, 439, 460, 493, 495, 555, 559, 615, 628, 638, 639, 653, 700, 702, 703, 839, 855, 856, 862, 865, 880], "when": [4, 21, 27, 28, 31, 44, 45, 46, 47, 60, 70, 74, 75, 79, 81, 82, 83, 84, 90, 94, 95, 103, 107, 115, 126, 127, 135, 141, 143, 144, 145, 146, 147, 150, 151, 152, 158, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 183, 185, 189, 190, 191, 192, 196, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 226, 228, 231, 239, 240, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 297, 298, 309, 312, 316, 317, 339, 347, 348, 349, 353, 354, 358, 359, 360, 361, 363, 365, 369, 370, 371, 372, 375, 410, 417, 418, 421, 427, 429, 431, 435, 437, 439, 442, 444, 445, 446, 448, 449, 451, 453, 454, 457, 460, 469, 473, 475, 476, 478, 479, 486, 491, 493, 494, 495, 498, 500, 502, 506, 525, 526, 527, 528, 529, 531, 532, 536, 541, 542, 544, 547, 557, 558, 560, 563, 568, 569, 572, 574, 577, 578, 580, 581, 588, 589, 603, 606, 608, 612, 614, 616, 618, 631, 637, 639, 640, 645, 649, 650, 661, 664, 687, 688, 689, 690, 691, 695, 699, 700, 701, 702, 703, 704, 706, 707, 709, 712, 718, 738, 745, 748, 756, 757, 765, 772, 776, 778, 780, 781, 782, 784, 785, 787, 788, 790, 791, 793, 795, 798, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 814, 826, 828, 835, 837, 842, 843, 844, 845, 854, 855, 857, 859, 860, 861, 862, 863, 865, 866, 880], "howev": [4, 16, 21, 45, 70, 74, 75, 141, 143, 147, 150, 163, 168, 170, 171, 172, 173, 190, 191, 192, 195, 196, 200, 202, 204, 205, 206, 207, 208, 212, 215, 216, 226, 228, 230, 231, 234, 236, 241, 264, 265, 269, 297, 312, 354, 402, 431, 493, 495, 508, 525, 689, 839, 859, 861, 862, 865, 868, 880], "could": [4, 28, 29, 30, 38, 39, 41, 43, 69, 79, 84, 104, 141, 145, 152, 161, 162, 167, 170, 172, 173, 176, 180, 181, 182, 192, 199, 201, 205, 206, 207, 208, 210, 215, 216, 217, 221, 226, 227, 234, 236, 241, 264, 265, 266, 267, 270, 275, 297, 380, 402, 403, 409, 431, 433, 437, 453, 478, 479, 480, 486, 558, 561, 575, 578, 579, 602, 751, 756, 821, 839, 859, 861, 868, 880], "narrow": [4, 199, 203, 241, 274, 880], "our": [4, 5, 19, 26, 27, 32, 42, 44, 62, 67, 70, 74, 80, 84, 93, 103, 109, 112, 114, 115, 120, 121, 127, 135, 136, 137, 138, 141, 142, 143, 145, 146, 147, 151, 152, 157, 161, 167, 169, 172, 173, 176, 181, 182, 184, 185, 196, 199, 200, 202, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 221, 223, 226, 228, 230, 231, 234, 235, 236, 239, 240, 241, 277, 450, 451, 533, 716, 726, 744, 838, 839, 841, 842, 843, 844, 855, 858, 859, 861, 862, 863, 867, 868, 880], "search": [4, 152, 157, 196, 244, 274, 277, 297, 413, 420, 437, 458, 561, 566, 572, 716, 726, 727, 730, 764, 839, 844, 845, 859], "bit": [4, 5, 7, 79, 109, 127, 142, 145, 161, 172, 181, 190, 202, 204, 209, 212, 226, 234, 236, 241, 264, 265, 269, 341, 478, 479, 486, 493, 499, 837, 845, 856, 862, 865, 880], "sinc": [4, 19, 32, 43, 44, 70, 79, 94, 115, 119, 135, 136, 141, 142, 143, 145, 152, 161, 167, 168, 170, 172, 173, 176, 179, 189, 190, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 215, 216, 217, 221, 226, 229, 234, 236, 241, 258, 259, 264, 265, 266, 267, 270, 274, 275, 278, 290, 312, 338, 354, 358, 359, 431, 440, 441, 442, 443, 454, 466, 478, 479, 521, 545, 558, 569, 574, 577, 588, 687, 688, 689, 690, 691, 765, 792, 839, 855, 859, 862, 865, 880], "paradigm": [4, 7, 145, 163, 167, 199, 202, 781, 856, 880], "might": [4, 5, 19, 21, 70, 120, 127, 142, 145, 152, 157, 162, 163, 168, 169, 177, 196, 202, 205, 208, 226, 231, 234, 241, 271, 275, 279, 332, 434, 544, 558, 596, 687, 806, 837, 838, 839, 855, 858, 859, 862, 880], "best": [4, 5, 10, 16, 73, 79, 83, 121, 135, 136, 143, 150, 163, 167, 177, 178, 179, 181, 195, 201, 205, 210, 223, 270, 354, 359, 418, 478, 479, 572, 656, 658, 659, 749, 839, 845, 847, 857, 858, 859, 861, 862, 865], "electrod": [4, 27, 67, 77, 78, 85, 118, 120, 122, 130, 136, 139, 140, 142, 144, 151, 160, 162, 166, 167, 171, 187, 188, 192, 195, 199, 202, 204, 208, 210, 215, 226, 244, 261, 264, 265, 266, 267, 268, 269, 273, 275, 281, 312, 313, 316, 325, 326, 328, 330, 331, 332, 333, 334, 335, 338, 354, 366, 367, 373, 410, 417, 451, 462, 469, 470, 478, 479, 484, 486, 488, 493, 498, 500, 521, 524, 525, 536, 557, 558, 566, 572, 583, 584, 585, 587, 616, 645, 700, 702, 703, 704, 736, 737, 738, 740, 748, 749, 764, 765, 768, 770, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 813, 816, 818, 835, 855, 856, 865, 868, 880], "over": [4, 5, 8, 9, 12, 21, 27, 28, 45, 46, 58, 59, 67, 70, 80, 81, 103, 104, 107, 109, 112, 113, 115, 122, 130, 136, 137, 138, 150, 151, 152, 160, 162, 163, 167, 170, 173, 176, 177, 192, 200, 202, 205, 207, 210, 212, 217, 218, 223, 226, 227, 230, 231, 239, 241, 244, 256, 258, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 291, 292, 295, 307, 321, 342, 354, 360, 410, 417, 419, 421, 449, 452, 478, 479, 512, 527, 529, 532, 558, 562, 589, 602, 615, 649, 650, 675, 687, 696, 700, 702, 703, 704, 711, 719, 732, 748, 761, 778, 779, 780, 790, 795, 835, 839, 846, 856, 857, 859, 861, 862, 868, 880], "occipit": [4, 47, 49, 170, 204, 241, 635, 862], "lobe": [4, 47, 136, 137, 181], "ani": [4, 5, 18, 24, 27, 41, 45, 50, 75, 83, 110, 112, 117, 120, 126, 127, 135, 136, 138, 141, 142, 143, 144, 150, 152, 157, 159, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 177, 182, 184, 185, 186, 190, 191, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 226, 231, 241, 244, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 277, 278, 279, 280, 287, 289, 291, 305, 306, 312, 319, 324, 326, 361, 365, 386, 416, 429, 432, 433, 434, 437, 444, 462, 467, 478, 479, 494, 547, 549, 550, 551, 555, 556, 558, 559, 560, 561, 574, 577, 578, 583, 588, 595, 606, 612, 620, 628, 638, 641, 642, 645, 650, 661, 665, 686, 695, 700, 701, 702, 703, 704, 717, 748, 749, 751, 773, 778, 779, 781, 790, 793, 801, 802, 812, 818, 827, 830, 835, 837, 839, 842, 856, 857, 859, 861, 862, 868, 880], "easier": [4, 135, 141, 143, 145, 151, 152, 157, 173, 192, 196, 200, 202, 205, 206, 207, 208, 258, 372, 837, 839, 880], "spot": [4, 200, 203, 230, 274, 880], "area": [4, 5, 54, 70, 79, 94, 116, 135, 136, 179, 192, 196, 200, 205, 217, 222, 226, 230, 241, 264, 265, 266, 267, 270, 478, 479, 583, 661, 700, 770, 772, 782, 784, 802, 839, 862, 865, 880], "dictionari": [4, 10, 27, 36, 56, 59, 94, 115, 127, 137, 141, 142, 143, 145, 146, 150, 151, 152, 167, 168, 170, 189, 205, 207, 210, 215, 216, 221, 244, 256, 258, 259, 261, 264, 265, 266, 267, 268, 269, 273, 274, 275, 277, 288, 297, 298, 299, 302, 310, 312, 324, 325, 340, 354, 358, 359, 365, 368, 369, 370, 371, 373, 410, 412, 417, 421, 434, 437, 439, 442, 445, 446, 448, 449, 451, 453, 454, 470, 473, 474, 475, 476, 477, 478, 479, 510, 520, 524, 536, 558, 568, 570, 571, 572, 574, 577, 608, 615, 620, 631, 633, 636, 642, 649, 686, 700, 735, 738, 748, 771, 772, 778, 779, 781, 788, 791, 793, 801, 807, 846, 880], "concentr": [4, 191, 206, 211, 222, 415, 531, 532, 590, 595, 707, 710, 718, 780, 880], "b11": 4, "ylim": [4, 7, 9, 19, 35, 39, 40, 46, 51, 59, 99, 112, 114, 127, 152, 161, 195, 202, 204, 211, 212, 226, 236, 241, 266, 267, 772, 782, 786, 880], "do": [4, 5, 15, 16, 18, 24, 26, 27, 31, 34, 40, 41, 45, 47, 50, 51, 54, 55, 58, 59, 60, 65, 67, 70, 74, 79, 83, 109, 112, 114, 115, 120, 127, 135, 137, 138, 141, 142, 145, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 167, 169, 172, 173, 176, 177, 178, 181, 183, 184, 185, 186, 189, 190, 192, 195, 196, 200, 202, 203, 205, 206, 207, 208, 209, 210, 212, 215, 217, 221, 222, 223, 226, 231, 234, 235, 236, 240, 241, 244, 256, 257, 258, 259, 261, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 283, 287, 303, 307, 309, 319, 326, 354, 358, 365, 369, 370, 380, 385, 402, 403, 421, 422, 423, 429, 431, 439, 444, 445, 451, 460, 468, 475, 476, 478, 479, 486, 493, 521, 525, 526, 527, 528, 529, 531, 532, 541, 542, 549, 550, 551, 555, 556, 558, 559, 560, 561, 569, 574, 575, 577, 588, 605, 608, 615, 618, 619, 637, 639, 641, 687, 688, 690, 691, 695, 700, 702, 703, 704, 717, 738, 773, 777, 789, 808, 825, 828, 830, 837, 839, 842, 844, 845, 847, 850, 855, 856, 861, 862, 865, 866, 868, 880], "pretti": [4, 142, 145, 202, 205, 207, 859], "small": [4, 5, 11, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 70, 75, 79, 90, 93, 94, 104, 107, 108, 109, 110, 121, 127, 128, 136, 142, 143, 153, 163, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 196, 202, 203, 205, 207, 217, 222, 223, 226, 228, 234, 236, 256, 261, 262, 264, 265, 266, 267, 270, 273, 320, 354, 410, 417, 478, 479, 494, 557, 558, 560, 606, 612, 687, 688, 690, 691, 693, 700, 702, 704, 776, 780, 787, 791, 800, 803, 808, 835, 839, 856, 859, 862, 865, 880], "determin": [4, 22, 79, 82, 128, 135, 142, 146, 152, 162, 167, 170, 172, 179, 191, 202, 204, 210, 215, 216, 217, 226, 229, 231, 258, 261, 262, 264, 265, 266, 267, 269, 272, 273, 278, 280, 283, 297, 298, 305, 312, 314, 341, 348, 354, 358, 359, 369, 370, 371, 385, 410, 416, 417, 418, 427, 449, 453, 454, 473, 475, 476, 478, 479, 490, 513, 517, 536, 558, 583, 586, 588, 593, 594, 616, 635, 692, 728, 731, 748, 776, 779, 784, 786, 787, 788, 789, 798, 805, 811, 821, 859, 862, 865, 880], "whether": [4, 13, 82, 142, 145, 146, 147, 172, 179, 181, 196, 200, 205, 206, 210, 241, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 297, 298, 312, 321, 322, 323, 326, 354, 359, 364, 385, 392, 410, 417, 432, 443, 451, 469, 470, 477, 478, 479, 489, 518, 525, 526, 527, 528, 529, 532, 534, 535, 536, 540, 541, 542, 557, 558, 559, 567, 572, 574, 575, 577, 578, 579, 583, 586, 589, 603, 642, 645, 664, 665, 687, 688, 690, 691, 700, 701, 702, 703, 704, 706, 709, 712, 748, 757, 765, 769, 772, 774, 776, 777, 778, 779, 780, 782, 786, 787, 791, 793, 795, 798, 800, 801, 802, 803, 804, 806, 808, 809, 810, 811, 814, 818, 839, 845, 859, 862, 865, 880], "stronger": [4, 142, 192, 228, 236, 266, 267, 782], "along": [4, 19, 46, 67, 115, 119, 137, 141, 143, 161, 167, 169, 171, 179, 195, 196, 199, 200, 204, 205, 208, 209, 215, 217, 218, 223, 234, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 287, 410, 413, 417, 420, 421, 423, 450, 468, 469, 475, 478, 479, 557, 558, 605, 679, 680, 687, 688, 690, 691, 694, 700, 702, 703, 704, 748, 764, 765, 772, 778, 779, 780, 783, 787, 791, 800, 803, 804, 806, 808, 809, 810, 811, 835, 837, 838, 839, 856, 862, 880], "phase_coh": 4, "get": [4, 5, 7, 15, 18, 19, 21, 22, 26, 27, 28, 34, 38, 39, 41, 47, 48, 50, 52, 60, 62, 63, 65, 66, 69, 70, 72, 80, 81, 83, 84, 94, 95, 96, 97, 103, 109, 113, 114, 116, 120, 123, 124, 127, 135, 136, 137, 141, 142, 143, 144, 145, 147, 150, 151, 152, 156, 157, 158, 159, 161, 163, 166, 167, 168, 170, 171, 174, 175, 176, 181, 182, 184, 185, 186, 199, 200, 201, 202, 203, 205, 207, 215, 217, 218, 226, 228, 230, 231, 236, 239, 240, 244, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 288, 302, 306, 310, 311, 312, 322, 323, 341, 342, 358, 365, 370, 371, 374, 377, 378, 379, 380, 382, 383, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 427, 430, 434, 439, 445, 451, 459, 462, 465, 469, 478, 479, 484, 507, 515, 524, 534, 535, 547, 558, 559, 565, 567, 575, 618, 649, 650, 669, 671, 679, 692, 695, 700, 701, 702, 703, 704, 735, 748, 749, 772, 779, 781, 794, 835, 837, 838, 839, 841, 843, 844, 845, 850, 856, 857, 861, 862, 863, 865, 866, 868, 880], "sort": [4, 7, 15, 21, 27, 47, 94, 121, 122, 130, 138, 144, 161, 171, 226, 264, 265, 266, 267, 269, 274, 324, 354, 359, 418, 436, 439, 463, 494, 558, 623, 701, 703, 779, 782, 784, 830, 847, 880], "label": [4, 8, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 27, 28, 29, 36, 37, 44, 45, 56, 68, 70, 90, 92, 94, 95, 96, 97, 101, 105, 106, 110, 111, 112, 113, 116, 120, 126, 127, 135, 136, 138, 141, 143, 144, 145, 150, 152, 156, 161, 167, 169, 173, 177, 181, 182, 192, 196, 201, 205, 207, 210, 215, 216, 217, 227, 236, 240, 241, 244, 260, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 297, 298, 360, 364, 384, 387, 410, 411, 412, 415, 417, 418, 419, 421, 427, 443, 444, 451, 456, 462, 463, 464, 468, 478, 479, 486, 489, 493, 512, 513, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 537, 539, 541, 542, 544, 555, 557, 558, 559, 572, 605, 618, 620, 621, 622, 623, 628, 638, 639, 649, 650, 658, 663, 666, 667, 677, 696, 700, 702, 703, 704, 716, 726, 748, 753, 766, 767, 770, 772, 778, 779, 780, 781, 782, 784, 787, 791, 794, 795, 800, 801, 803, 806, 807, 808, 809, 810, 811, 829, 830, 835, 839, 868, 870, 880], "2f": [4, 59, 158, 271, 272, 275, 278, 279, 280, 558, 748, 791, 806, 811], "format": [4, 27, 34, 43, 44, 62, 66, 70, 114, 127, 136, 138, 141, 144, 150, 151, 152, 161, 166, 167, 169, 171, 172, 173, 177, 183, 189, 192, 203, 205, 206, 207, 208, 211, 215, 216, 217, 219, 226, 227, 228, 231, 256, 258, 261, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 312, 330, 331, 335, 337, 350, 351, 352, 373, 410, 417, 439, 440, 441, 442, 443, 470, 477, 478, 479, 481, 484, 486, 490, 495, 499, 547, 553, 557, 558, 572, 574, 583, 606, 610, 615, 621, 631, 646, 647, 651, 652, 653, 665, 680, 687, 688, 690, 691, 700, 701, 702, 703, 704, 718, 719, 721, 743, 748, 763, 765, 780, 787, 791, 800, 803, 806, 808, 810, 811, 825, 833, 835, 839, 846, 851, 855, 856, 859, 865, 868, 880], "90": [4, 5, 11, 13, 19, 24, 35, 41, 42, 47, 80, 81, 90, 94, 103, 108, 109, 112, 114, 123, 136, 137, 144, 152, 157, 158, 159, 161, 170, 171, 172, 180, 185, 191, 195, 196, 201, 203, 208, 209, 211, 226, 227, 228, 230, 231, 235, 236, 241, 244, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 415, 417, 453, 454, 473, 475, 476, 522, 531, 532, 536, 558, 649, 656, 658, 659, 660, 681, 707, 710, 718, 753, 780, 788, 856, 857, 862], "each": [4, 9, 10, 11, 15, 16, 19, 24, 28, 32, 33, 38, 41, 44, 45, 67, 70, 80, 83, 93, 94, 95, 101, 103, 107, 108, 109, 112, 113, 115, 117, 120, 127, 128, 133, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 161, 162, 163, 167, 168, 169, 170, 173, 176, 177, 178, 179, 181, 182, 184, 186, 190, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 221, 223, 226, 228, 230, 231, 234, 235, 236, 239, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 289, 290, 297, 298, 303, 310, 314, 317, 321, 342, 344, 345, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 362, 365, 367, 371, 385, 402, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 426, 427, 433, 434, 435, 444, 448, 449, 450, 451, 452, 453, 454, 462, 468, 473, 475, 476, 477, 478, 479, 480, 482, 493, 501, 509, 510, 513, 515, 517, 518, 525, 529, 531, 532, 534, 535, 548, 557, 558, 559, 561, 563, 566, 572, 574, 576, 577, 583, 587, 588, 592, 608, 612, 618, 631, 634, 642, 648, 649, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 667, 669, 671, 680, 682, 683, 685, 687, 688, 689, 690, 691, 692, 695, 696, 699, 700, 701, 702, 703, 704, 705, 706, 707, 719, 730, 731, 738, 748, 749, 752, 756, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 776, 779, 780, 782, 784, 785, 786, 787, 788, 791, 799, 800, 801, 802, 803, 807, 808, 809, 810, 813, 817, 818, 826, 828, 833, 835, 837, 838, 839, 845, 855, 856, 857, 859, 862, 865, 880], "zip": [4, 9, 10, 22, 27, 47, 81, 90, 107, 113, 114, 120, 127, 138, 141, 151, 161, 166, 181, 195, 200, 202, 203, 205, 206, 208, 226, 227, 228, 229, 230, 231, 236, 240, 386, 501, 839, 847], "c22": 4, "figur": [4, 5, 8, 16, 19, 22, 27, 28, 37, 38, 45, 49, 54, 55, 92, 103, 109, 111, 115, 116, 118, 122, 123, 125, 130, 136, 137, 142, 143, 146, 151, 157, 159, 161, 167, 171, 177, 179, 180, 181, 184, 185, 192, 195, 196, 202, 204, 205, 207, 210, 211, 218, 223, 226, 228, 231, 236, 240, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 312, 313, 326, 410, 417, 469, 470, 478, 479, 557, 558, 572, 618, 628, 700, 701, 702, 703, 704, 727, 728, 730, 731, 748, 750, 751, 754, 757, 761, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 815, 816, 818, 837, 838, 839, 857, 859, 880], "ax": [4, 10, 11, 12, 13, 15, 19, 21, 22, 37, 39, 41, 45, 47, 58, 67, 68, 69, 70, 71, 72, 73, 81, 82, 86, 90, 93, 96, 99, 104, 112, 113, 114, 115, 116, 120, 127, 133, 135, 136, 137, 138, 145, 146, 147, 151, 152, 157, 161, 162, 171, 173, 177, 178, 181, 182, 184, 195, 196, 199, 202, 203, 206, 207, 210, 211, 212, 218, 223, 226, 227, 228, 229, 230, 231, 239, 240, 241, 261, 262, 264, 265, 266, 267, 273, 312, 313, 321, 326, 410, 417, 469, 478, 479, 557, 558, 700, 702, 704, 716, 726, 749, 751, 761, 764, 765, 767, 770, 771, 772, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 796, 797, 798, 800, 802, 803, 804, 805, 808, 810, 862, 880], "subplot": [4, 10, 11, 12, 13, 15, 19, 21, 22, 39, 41, 45, 47, 58, 68, 69, 70, 71, 72, 73, 82, 86, 90, 93, 96, 99, 104, 107, 112, 113, 114, 115, 116, 120, 127, 135, 137, 138, 143, 145, 147, 152, 161, 171, 173, 177, 178, 181, 182, 184, 195, 196, 202, 207, 210, 211, 212, 218, 223, 226, 227, 228, 229, 230, 231, 240, 241, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 716, 726, 748, 770, 771, 780, 781, 786, 787, 791, 796, 800, 803, 808, 810, 813, 880], "figsiz": [4, 12, 15, 19, 22, 45, 47, 70, 73, 96, 112, 113, 114, 115, 120, 127, 135, 137, 145, 161, 177, 184, 195, 202, 207, 210, 211, 223, 226, 227, 229, 230, 231, 240, 241, 558, 793, 794], "20": [4, 5, 9, 11, 12, 13, 14, 15, 19, 20, 22, 28, 33, 34, 35, 37, 45, 46, 47, 48, 54, 55, 59, 60, 61, 70, 74, 76, 81, 82, 84, 85, 88, 90, 100, 103, 104, 107, 108, 109, 112, 113, 114, 115, 116, 121, 127, 128, 133, 138, 141, 143, 144, 151, 152, 153, 158, 160, 167, 170, 171, 172, 173, 177, 178, 180, 182, 184, 185, 186, 188, 192, 195, 196, 199, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 215, 218, 221, 223, 226, 227, 228, 229, 230, 231, 235, 236, 239, 241, 244, 245, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 297, 298, 308, 312, 317, 324, 330, 341, 342, 343, 344, 345, 347, 360, 365, 409, 410, 417, 435, 445, 453, 473, 475, 476, 478, 479, 486, 514, 518, 525, 526, 527, 528, 532, 536, 540, 541, 542, 550, 557, 558, 567, 572, 577, 586, 610, 615, 645, 648, 649, 664, 666, 688, 689, 700, 701, 702, 703, 704, 717, 752, 764, 765, 766, 772, 777, 778, 780, 782, 783, 784, 786, 787, 788, 791, 798, 800, 801, 802, 803, 804, 806, 808, 810, 811, 838, 855, 856, 859, 862], "cmap": [4, 9, 10, 13, 15, 16, 19, 22, 41, 70, 100, 101, 107, 109, 112, 114, 115, 116, 120, 135, 137, 144, 161, 183, 195, 196, 210, 226, 228, 229, 230, 231, 240, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 701, 702, 704, 763, 765, 772, 774, 779, 780, 784, 787, 790, 791, 800, 803, 808, 809, 810], "magma": 4, "consider": [4, 81, 99, 152, 201, 202, 205, 212, 222, 231, 244, 274, 686, 846, 862, 868, 880], "chosen": [4, 45, 138, 146, 152, 199, 202, 204, 205, 207, 239, 258, 261, 264, 265, 266, 267, 272, 273, 277, 278, 280, 358, 410, 412, 417, 421, 423, 446, 448, 449, 468, 478, 479, 511, 533, 557, 558, 572, 586, 605, 652, 653, 687, 688, 690, 691, 700, 701, 702, 703, 704, 748, 764, 765, 774, 778, 780, 784, 787, 791, 794, 800, 801, 802, 803, 804, 808, 810, 862], "test": [4, 8, 10, 13, 15, 16, 19, 26, 27, 90, 95, 98, 102, 112, 123, 128, 136, 141, 152, 166, 169, 172, 173, 189, 195, 196, 209, 210, 215, 227, 228, 229, 232, 233, 236, 237, 238, 241, 244, 264, 265, 266, 267, 269, 275, 276, 277, 289, 291, 297, 318, 360, 385, 413, 414, 427, 431, 433, 449, 478, 479, 487, 506, 509, 524, 525, 533, 539, 549, 555, 558, 577, 588, 615, 628, 630, 672, 678, 680, 682, 684, 687, 688, 689, 690, 691, 692, 693, 694, 700, 702, 703, 704, 730, 748, 756, 769, 772, 780, 787, 794, 808, 837, 840, 843, 844, 859, 862, 868, 880], "interpol": [4, 15, 24, 27, 32, 60, 70, 77, 85, 87, 90, 93, 94, 95, 119, 135, 136, 137, 152, 178, 182, 189, 196, 205, 210, 223, 226, 239, 261, 264, 265, 266, 267, 273, 277, 279, 280, 410, 417, 444, 467, 478, 479, 557, 558, 572, 576, 580, 587, 618, 649, 651, 652, 653, 665, 700, 702, 704, 736, 748, 765, 780, 787, 791, 800, 803, 808, 810, 846, 880], "miss": [4, 44, 69, 84, 135, 136, 152, 159, 160, 181, 184, 189, 191, 202, 208, 241, 264, 265, 266, 267, 269, 277, 316, 339, 386, 402, 416, 478, 479, 486, 493, 498, 549, 588, 686, 781, 782, 835, 839, 843, 844, 846, 847, 865, 868, 880], "drop": [4, 8, 9, 11, 12, 16, 18, 21, 32, 33, 34, 42, 46, 49, 71, 72, 96, 97, 100, 103, 107, 110, 112, 113, 114, 117, 121, 128, 136, 137, 138, 142, 143, 145, 146, 147, 152, 153, 163, 167, 168, 173, 178, 181, 183, 184, 186, 192, 199, 200, 201, 204, 205, 207, 208, 211, 217, 222, 223, 228, 229, 230, 231, 234, 236, 240, 258, 259, 261, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 314, 317, 435, 436, 443, 467, 478, 479, 491, 558, 570, 571, 574, 589, 612, 614, 642, 700, 701, 702, 703, 704, 777, 778, 791, 793, 839, 842, 862, 880], "furthermor": [4, 156, 176, 179, 190, 204, 855, 862, 865], "mark": [4, 8, 11, 49, 74, 78, 79, 83, 92, 93, 111, 120, 126, 127, 136, 138, 143, 145, 151, 152, 167, 170, 171, 173, 179, 190, 191, 192, 201, 202, 205, 206, 208, 209, 210, 211, 215, 217, 218, 231, 244, 257, 259, 264, 265, 266, 267, 314, 371, 380, 387, 402, 403, 467, 469, 477, 478, 479, 557, 558, 563, 566, 572, 576, 577, 587, 588, 596, 603, 612, 614, 642, 700, 702, 703, 704, 744, 768, 778, 780, 787, 792, 794, 801, 802, 808, 835, 839, 856, 857, 880], "exg": 4, "prefix": [4, 74, 156, 171, 176, 256, 261, 264, 265, 266, 267, 273, 355, 356, 410, 417, 470, 478, 479, 486, 493, 494, 557, 558, 572, 612, 700, 702, 704, 765, 787, 791, 800, 803, 808, 835], "interpolate_bad": [4, 70, 78, 200, 264, 265, 266, 267, 467, 478, 479, 862, 880], "reset_bad": [4, 78, 200, 264, 265, 266, 267, 478, 479, 862], "drop_channel": [4, 42, 67, 70, 137, 141, 150, 215, 231, 264, 265, 266, 267, 478, 479, 700, 702, 703, 704, 866, 880], "exg1": 4, "exg2": 4, "exg3": 4, "exg4": 4, "radiu": [4, 5, 24, 26, 41, 45, 50, 70, 71, 78, 80, 93, 94, 109, 135, 152, 157, 159, 160, 171, 177, 182, 183, 184, 185, 186, 200, 207, 208, 210, 222, 261, 264, 265, 266, 267, 273, 302, 305, 312, 326, 328, 330, 410, 417, 430, 468, 478, 479, 511, 522, 540, 557, 558, 567, 572, 649, 652, 695, 700, 702, 704, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 862, 880], "95": [4, 5, 7, 13, 19, 34, 47, 50, 70, 75, 79, 80, 81, 90, 109, 112, 113, 114, 121, 135, 137, 143, 144, 146, 147, 152, 157, 159, 161, 170, 180, 185, 201, 209, 210, 211, 226, 227, 229, 230, 231, 244, 264, 265, 266, 267, 558, 572, 660, 679, 700, 772, 788, 793, 809, 862], "113": [4, 20, 35, 112, 169, 170, 175, 209, 216, 230, 231, 244], "524face": 4, "To": [4, 5, 11, 18, 19, 22, 33, 44, 45, 88, 90, 94, 95, 113, 116, 127, 133, 135, 138, 141, 143, 145, 147, 150, 151, 152, 157, 159, 160, 161, 162, 167, 169, 170, 171, 172, 173, 176, 179, 181, 185, 189, 191, 192, 195, 196, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 217, 218, 221, 223, 226, 228, 230, 231, 235, 236, 240, 256, 258, 259, 264, 265, 266, 267, 270, 274, 279, 280, 297, 298, 354, 358, 359, 416, 423, 434, 440, 441, 442, 443, 445, 451, 478, 479, 486, 491, 507, 511, 515, 521, 558, 574, 577, 579, 584, 586, 588, 603, 605, 620, 646, 649, 652, 653, 654, 660, 663, 664, 666, 687, 688, 689, 690, 691, 693, 706, 709, 725, 727, 728, 729, 730, 731, 732, 746, 748, 765, 778, 791, 793, 795, 801, 812, 813, 827, 837, 838, 839, 842, 843, 844, 845, 847, 854, 855, 856, 857, 859, 861, 862, 866, 880], "predict": [4, 10, 12, 13, 15, 16, 17, 20, 27, 42, 101, 138, 142, 177, 195, 196, 244, 269, 297, 312, 328, 373, 413, 414, 416, 420, 422, 427, 450, 479, 526, 533, 810, 856, 880], "brain": [4, 5, 7, 8, 10, 11, 15, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 54, 58, 59, 60, 70, 79, 82, 88, 94, 104, 109, 115, 122, 126, 130, 135, 136, 147, 152, 156, 157, 159, 163, 171, 176, 177, 178, 179, 180, 182, 183, 185, 189, 190, 191, 192, 196, 199, 204, 205, 207, 208, 223, 226, 234, 235, 236, 241, 244, 255, 256, 262, 264, 265, 266, 267, 269, 271, 272, 275, 276, 277, 278, 279, 280, 290, 297, 298, 303, 331, 360, 372, 380, 410, 416, 418, 444, 449, 462, 476, 478, 479, 488, 498, 513, 517, 522, 524, 525, 539, 545, 555, 556, 559, 563, 573, 584, 585, 587, 610, 618, 628, 633, 638, 649, 665, 689, 700, 702, 703, 704, 757, 759, 762, 764, 766, 767, 770, 776, 806, 807, 811, 812, 816, 818, 835, 837, 839, 840, 845, 846, 855, 856, 859, 862, 867, 868, 870, 880], "purpos": [4, 8, 11, 12, 21, 113, 141, 142, 150, 157, 169, 181, 190, 199, 200, 201, 202, 205, 206, 208, 230, 234, 236, 241, 244, 264, 265, 377, 378, 379, 380, 382, 383, 385, 390, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 421, 423, 478, 479, 764, 778, 801, 835, 846, 855, 856, 861, 864, 865, 866], "intercept": [4, 101, 685], "predictor_var": 4, "where": [4, 10, 13, 31, 45, 68, 70, 74, 79, 81, 82, 83, 90, 94, 95, 101, 112, 135, 138, 141, 142, 143, 145, 150, 152, 156, 161, 166, 167, 168, 169, 170, 171, 173, 176, 183, 184, 185, 189, 191, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 217, 221, 222, 223, 226, 228, 230, 231, 234, 235, 236, 241, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 277, 278, 279, 280, 319, 321, 322, 323, 335, 353, 372, 377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 417, 423, 425, 444, 446, 449, 451, 470, 478, 479, 511, 533, 557, 558, 560, 567, 572, 574, 575, 576, 588, 650, 656, 657, 658, 659, 660, 662, 664, 665, 680, 681, 686, 687, 688, 690, 691, 700, 702, 703, 704, 728, 731, 748, 753, 765, 766, 769, 770, 771, 778, 779, 780, 787, 791, 800, 801, 802, 803, 808, 810, 814, 835, 839, 840, 842, 843, 844, 845, 855, 856, 859, 861, 862, 865, 880], "func": [4, 210, 271, 272, 275, 278, 279, 280, 486, 493, 500, 839, 880], "reg": [4, 8, 9, 12, 21, 34, 49, 135, 181, 223, 297, 298, 410, 417, 418, 559, 862, 880], "design_matrix": [4, 142, 685], "25728": 4, "target": [4, 17, 20, 27, 49, 77, 85, 101, 128, 142, 162, 196, 203, 205, 226, 227, 241, 264, 266, 267, 269, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 427, 436, 478, 491, 519, 555, 558, 559, 615, 839, 880], "regressor": [4, 69, 101, 196, 226, 685], "within": [4, 5, 16, 24, 38, 41, 45, 47, 50, 61, 69, 94, 108, 109, 112, 120, 121, 127, 128, 136, 141, 142, 145, 152, 156, 157, 159, 161, 162, 166, 167, 169, 173, 176, 177, 179, 182, 184, 185, 186, 199, 202, 205, 206, 208, 210, 217, 222, 226, 237, 241, 244, 257, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 282, 307, 314, 373, 385, 410, 415, 417, 434, 436, 439, 444, 462, 468, 478, 479, 531, 532, 541, 557, 558, 572, 687, 688, 690, 691, 695, 700, 702, 704, 707, 710, 718, 729, 732, 745, 765, 779, 780, 787, 788, 791, 800, 803, 807, 808, 810, 835, 837, 839, 844, 845, 850, 859, 861, 862, 868, 880], "object": [4, 9, 10, 18, 19, 27, 30, 31, 32, 33, 34, 36, 47, 54, 55, 56, 60, 63, 78, 94, 99, 101, 103, 104, 109, 112, 113, 114, 127, 132, 135, 142, 145, 147, 152, 156, 158, 161, 162, 163, 166, 167, 168, 171, 173, 176, 182, 183, 189, 190, 191, 192, 196, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 216, 219, 220, 223, 227, 234, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 284, 285, 288, 290, 291, 292, 295, 297, 298, 299, 302, 303, 305, 306, 310, 311, 312, 314, 317, 318, 319, 320, 321, 324, 326, 327, 340, 342, 344, 349, 353, 354, 357, 358, 359, 360, 361, 365, 369, 370, 371, 373, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 435, 439, 444, 451, 452, 454, 456, 461, 470, 473, 475, 476, 477, 478, 479, 480, 483, 484, 485, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 511, 514, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 532, 534, 535, 536, 540, 547, 554, 555, 557, 558, 559, 560, 561, 569, 572, 573, 574, 581, 583, 584, 585, 587, 593, 594, 601, 606, 610, 611, 613, 617, 618, 619, 622, 628, 635, 636, 649, 650, 664, 665, 668, 677, 685, 686, 692, 696, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 717, 720, 721, 722, 727, 728, 729, 730, 731, 732, 733, 735, 737, 747, 748, 749, 754, 757, 759, 761, 762, 764, 765, 768, 769, 772, 773, 774, 775, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 800, 801, 802, 803, 804, 805, 808, 810, 815, 816, 826, 829, 835, 839, 855, 857, 862, 864, 866, 870, 878, 880], "multipl": [4, 16, 40, 44, 45, 51, 93, 96, 97, 101, 103, 112, 120, 141, 145, 150, 151, 160, 161, 167, 173, 176, 191, 195, 200, 202, 203, 205, 206, 208, 215, 216, 217, 227, 231, 234, 235, 236, 241, 244, 258, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 300, 317, 354, 360, 385, 412, 421, 423, 433, 435, 437, 446, 447, 448, 451, 454, 460, 475, 476, 478, 479, 491, 501, 520, 534, 535, 540, 545, 558, 575, 579, 588, 592, 610, 618, 642, 645, 649, 678, 684, 688, 689, 700, 701, 703, 712, 715, 722, 723, 728, 731, 748, 762, 772, 779, 782, 785, 788, 791, 793, 795, 801, 806, 807, 809, 811, 835, 839, 856, 862, 868, 870, 877, 880], "list": [4, 9, 10, 11, 16, 28, 41, 43, 47, 67, 69, 84, 94, 103, 104, 111, 112, 113, 115, 116, 117, 127, 132, 138, 141, 145, 146, 150, 151, 152, 162, 167, 169, 170, 171, 172, 173, 176, 178, 184, 186, 189, 192, 200, 201, 202, 205, 206, 207, 210, 211, 215, 217, 218, 221, 222, 223, 226, 227, 230, 231, 235, 236, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 287, 289, 290, 291, 292, 295, 297, 298, 300, 303, 305, 306, 310, 312, 313, 314, 317, 318, 319, 321, 322, 323, 324, 326, 327, 329, 337, 338, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 367, 369, 370, 371, 373, 380, 385, 391, 393, 402, 403, 410, 412, 416, 417, 420, 422, 425, 426, 427, 429, 431, 432, 433, 434, 435, 437, 441, 442, 444, 445, 448, 449, 451, 452, 456, 458, 460, 462, 463, 464, 465, 466, 467, 468, 473, 474, 475, 476, 477, 478, 479, 482, 486, 488, 490, 493, 494, 495, 500, 501, 502, 504, 509, 513, 515, 516, 517, 520, 523, 527, 529, 532, 534, 535, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 584, 587, 588, 589, 594, 596, 599, 603, 605, 608, 610, 612, 614, 615, 618, 619, 620, 623, 626, 633, 635, 641, 642, 645, 649, 650, 663, 666, 667, 668, 669, 677, 680, 681, 683, 685, 686, 687, 688, 690, 691, 692, 695, 696, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 716, 717, 722, 725, 726, 731, 733, 734, 745, 747, 748, 749, 752, 753, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 802, 803, 804, 806, 807, 808, 810, 811, 812, 823, 826, 830, 831, 835, 839, 842, 846, 847, 850, 854, 855, 859, 861, 862, 863, 865, 868, 880], "field": [4, 5, 7, 17, 20, 22, 26, 27, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 69, 78, 80, 81, 90, 94, 109, 113, 117, 119, 121, 124, 128, 131, 143, 145, 150, 157, 159, 160, 163, 166, 167, 170, 177, 178, 179, 180, 183, 184, 189, 190, 192, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 212, 215, 217, 218, 221, 223, 231, 244, 250, 257, 261, 264, 265, 266, 267, 269, 297, 298, 312, 319, 328, 373, 416, 422, 442, 450, 453, 478, 479, 480, 490, 497, 517, 525, 526, 572, 588, 596, 613, 617, 620, 645, 686, 729, 732, 748, 765, 772, 779, 782, 783, 785, 787, 788, 790, 809, 810, 818, 835, 840, 855, 856, 859, 868, 880], "getattr": [4, 716, 726], "_field": [4, 142], "beta": [4, 12, 19, 32, 33, 34, 94, 101, 110, 112, 113, 115, 138, 142, 226, 240, 264, 265, 266, 267, 478, 479, 603, 685, 702, 704, 780], "stderr": [4, 142, 685], "t_val": [4, 142, 227, 685], "p_val": [4, 101, 142, 228, 229, 681, 685, 880], "mlog10_p_val": [4, 142, 685, 880], "just": [4, 5, 28, 32, 33, 41, 42, 44, 48, 50, 59, 70, 74, 82, 83, 101, 103, 109, 113, 114, 115, 120, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 152, 157, 159, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 178, 180, 181, 182, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 223, 227, 228, 231, 234, 235, 236, 240, 241, 261, 264, 265, 266, 267, 271, 272, 273, 275, 277, 278, 279, 280, 312, 410, 417, 444, 445, 478, 479, 494, 533, 557, 558, 568, 572, 587, 612, 700, 702, 704, 744, 765, 772, 778, 780, 782, 784, 787, 788, 791, 795, 798, 800, 801, 802, 803, 804, 808, 810, 818, 837, 839, 847, 857, 862, 865, 880], "would": [4, 5, 19, 43, 44, 70, 79, 141, 144, 145, 151, 152, 156, 157, 161, 162, 173, 176, 182, 191, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 210, 221, 226, 227, 228, 231, 234, 236, 241, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 290, 297, 298, 354, 358, 359, 369, 370, 371, 380, 385, 402, 403, 410, 417, 431, 432, 433, 445, 453, 454, 460, 473, 475, 476, 478, 479, 493, 515, 523, 536, 558, 569, 588, 637, 700, 703, 748, 782, 787, 788, 801, 835, 845, 861, 862, 868, 880], "higher": [4, 26, 38, 44, 54, 69, 74, 79, 94, 142, 152, 185, 196, 199, 201, 203, 205, 210, 222, 228, 231, 241, 274, 588, 716, 726, 837, 839, 843, 844, 862, 880], "better": [4, 9, 19, 43, 60, 70, 79, 94, 143, 147, 152, 184, 185, 195, 202, 204, 205, 210, 226, 244, 266, 267, 271, 272, 275, 278, 279, 280, 409, 572, 584, 588, 714, 716, 726, 730, 748, 806, 811, 837, 839, 862, 880], "visibl": [4, 47, 79, 127, 173, 192, 202, 203, 209, 217, 218, 241, 264, 265, 266, 267, 478, 479, 558, 641, 700, 748, 778, 784, 795, 801, 835, 880], "neg": [4, 19, 22, 39, 71, 112, 114, 145, 151, 152, 163, 189, 192, 203, 205, 212, 226, 234, 241, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 286, 306, 410, 416, 417, 422, 429, 438, 452, 478, 479, 502, 557, 558, 579, 586, 658, 659, 684, 700, 702, 703, 704, 767, 772, 778, 780, 787, 791, 800, 801, 803, 806, 808, 812, 856, 859, 862, 865, 880], "around": [4, 49, 70, 75, 83, 94, 112, 142, 143, 145, 147, 152, 166, 167, 172, 173, 181, 184, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 215, 221, 241, 264, 265, 266, 267, 274, 358, 410, 417, 429, 434, 436, 478, 479, 511, 558, 570, 571, 574, 575, 605, 662, 700, 702, 703, 704, 772, 778, 784, 787, 788, 795, 801, 835, 837, 845], "200": [4, 9, 12, 47, 59, 75, 81, 90, 92, 95, 99, 109, 111, 112, 114, 127, 131, 136, 137, 143, 146, 147, 152, 159, 170, 173, 180, 182, 184, 192, 196, 201, 203, 206, 207, 209, 221, 226, 229, 230, 231, 236, 240, 244, 341, 343, 347, 449, 478, 479, 531, 532, 558, 586, 846, 855, 862, 865, 868, 880], "follow": [4, 24, 27, 32, 33, 34, 41, 42, 67, 69, 70, 80, 94, 103, 107, 109, 113, 116, 128, 135, 136, 138, 142, 145, 152, 156, 159, 161, 162, 163, 169, 171, 173, 179, 181, 189, 190, 191, 196, 201, 202, 203, 204, 208, 210, 212, 215, 216, 217, 221, 223, 226, 228, 230, 234, 236, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 287, 288, 297, 298, 302, 303, 354, 365, 370, 385, 402, 410, 434, 436, 437, 448, 449, 450, 454, 477, 478, 479, 480, 484, 486, 493, 521, 524, 541, 542, 558, 574, 577, 588, 589, 618, 628, 646, 681, 683, 685, 700, 702, 703, 704, 716, 726, 727, 730, 731, 735, 738, 744, 748, 761, 772, 780, 785, 808, 835, 837, 838, 841, 843, 844, 845, 855, 856, 858, 859, 862, 865, 866, 880], "onset": [4, 8, 33, 34, 117, 136, 137, 138, 141, 145, 147, 167, 169, 192, 201, 202, 204, 217, 241, 257, 258, 264, 265, 354, 439, 451, 478, 479, 561, 606, 705, 706, 707, 835, 880], "23": [4, 8, 11, 13, 19, 28, 34, 35, 38, 45, 47, 52, 56, 64, 65, 74, 81, 82, 103, 108, 109, 112, 114, 115, 118, 123, 126, 130, 138, 146, 152, 153, 155, 159, 163, 165, 170, 172, 184, 185, 186, 192, 195, 196, 205, 209, 226, 227, 228, 230, 231, 234, 236, 239, 244, 258, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 297, 346, 358, 369, 370, 380, 387, 388, 402, 403, 434, 469, 478, 479, 486, 518, 558, 569, 608, 618, 700, 702, 703, 704, 748, 777, 782, 792, 826, 856, 862], "correspond": [4, 16, 31, 48, 50, 61, 72, 76, 88, 92, 94, 103, 112, 120, 135, 138, 144, 145, 152, 156, 157, 159, 161, 169, 171, 173, 176, 181, 182, 183, 189, 192, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 215, 216, 217, 218, 228, 230, 231, 236, 241, 257, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 289, 297, 298, 300, 304, 312, 322, 323, 325, 335, 354, 358, 359, 362, 369, 370, 371, 380, 385, 402, 403, 410, 411, 413, 414, 416, 417, 420, 422, 426, 434, 439, 453, 454, 455, 463, 473, 475, 476, 478, 479, 486, 488, 490, 493, 497, 500, 502, 507, 511, 515, 517, 520, 522, 523, 534, 535, 536, 557, 558, 559, 572, 574, 577, 578, 583, 613, 614, 617, 628, 641, 645, 649, 652, 665, 680, 681, 684, 685, 686, 687, 688, 690, 691, 692, 700, 701, 702, 703, 704, 712, 713, 719, 738, 739, 741, 748, 751, 759, 761, 765, 766, 767, 772, 778, 779, 780, 782, 784, 786, 787, 788, 791, 800, 801, 803, 806, 808, 810, 811, 812, 835, 839, 845, 856, 859, 862, 865, 880], "unit": [4, 8, 14, 19, 21, 32, 83, 100, 103, 127, 136, 137, 142, 157, 161, 169, 170, 181, 190, 191, 200, 205, 207, 210, 215, 223, 228, 229, 231, 239, 240, 244, 259, 261, 262, 263, 264, 265, 266, 267, 269, 273, 275, 297, 298, 305, 313, 330, 335, 337, 339, 359, 365, 373, 410, 412, 417, 419, 421, 431, 446, 448, 449, 454, 477, 478, 479, 486, 488, 493, 494, 502, 558, 569, 574, 577, 588, 612, 650, 692, 700, 702, 704, 739, 741, 748, 772, 779, 780, 782, 784, 787, 788, 800, 802, 808, 809, 816, 835, 839, 865, 880], "scale": [4, 5, 10, 16, 19, 22, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 57, 58, 59, 60, 65, 70, 74, 77, 85, 90, 94, 100, 101, 103, 104, 107, 108, 109, 110, 114, 115, 116, 119, 127, 133, 137, 138, 142, 143, 150, 152, 157, 158, 161, 167, 178, 179, 180, 181, 182, 183, 184, 191, 192, 195, 196, 202, 204, 205, 207, 208, 218, 222, 223, 234, 236, 240, 241, 244, 256, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 297, 298, 312, 316, 325, 328, 338, 353, 354, 358, 359, 365, 369, 370, 371, 410, 417, 419, 431, 433, 444, 453, 454, 469, 470, 472, 473, 475, 476, 478, 479, 484, 488, 531, 532, 536, 538, 541, 542, 549, 557, 558, 568, 569, 577, 588, 618, 637, 638, 639, 640, 652, 653, 664, 667, 700, 702, 703, 704, 712, 737, 738, 748, 761, 763, 765, 772, 776, 778, 779, 780, 782, 784, 786, 787, 788, 789, 791, 796, 800, 801, 802, 803, 807, 808, 809, 811, 813, 835, 853, 880], "keep": [4, 11, 12, 27, 31, 60, 88, 104, 110, 111, 112, 138, 143, 146, 150, 152, 161, 162, 163, 166, 167, 170, 182, 200, 201, 202, 203, 204, 205, 215, 216, 217, 221, 228, 256, 261, 264, 265, 266, 267, 291, 292, 295, 298, 371, 416, 434, 478, 479, 489, 527, 529, 532, 558, 589, 701, 712, 839, 847, 857, 861, 880], "avoid": [4, 8, 9, 28, 40, 59, 70, 88, 114, 138, 141, 152, 162, 167, 168, 170, 173, 184, 190, 192, 199, 202, 203, 207, 215, 217, 226, 239, 244, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 354, 427, 439, 478, 479, 486, 493, 500, 538, 558, 622, 628, 660, 663, 666, 682, 693, 694, 700, 703, 748, 806, 811, 837, 843, 857, 859, 861, 862, 880], "convers": [4, 157, 169, 190, 192, 200, 202, 203, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 478, 479, 502, 597, 687, 688, 690, 691, 700, 703, 862, 865, 880], "micro": [4, 27, 77, 85, 264, 265, 266, 267, 269, 312, 316, 325, 470, 478, 479, 484, 737, 748, 813, 880], "volt": [4, 142, 205, 207, 221, 264, 265, 266, 267, 443, 478, 479, 862, 880], "topomap_arg": [4, 70, 101, 196, 211, 227, 266, 267, 558, 700, 768, 785, 793, 880], "set_ylabel": [4, 12, 13, 21, 22, 45, 70, 96, 104, 112, 113, 115, 133, 145, 173, 184, 196, 202, 206, 229, 230, 231, 241], "systemat": [4, 142, 163, 202, 244, 413, 576, 859, 880], "larg": [4, 10, 28, 70, 75, 80, 83, 84, 114, 120, 137, 143, 151, 152, 168, 173, 179, 196, 199, 200, 202, 203, 204, 206, 207, 208, 211, 212, 218, 226, 231, 234, 241, 244, 264, 265, 270, 297, 354, 358, 359, 363, 419, 449, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518, 538, 558, 560, 687, 688, 690, 691, 748, 766, 813, 843, 857, 880], "consist": [4, 10, 43, 70, 76, 112, 123, 158, 159, 162, 169, 171, 176, 184, 190, 191, 192, 196, 200, 201, 202, 204, 205, 209, 226, 228, 229, 244, 256, 264, 265, 266, 267, 277, 281, 321, 368, 478, 479, 558, 566, 572, 576, 652, 653, 685, 700, 702, 703, 704, 705, 706, 707, 835, 855, 856, 861, 862, 868, 880], "guillaum": [4, 15, 88, 152, 158, 196, 202, 226, 244, 559, 693, 694, 856, 867, 880], "rousselet": [4, 152, 202, 244, 856], "2016": [4, 19, 46, 83, 113, 126, 195, 202, 244, 387, 388, 416, 475, 476, 558, 856], "7488": [4, 244], "1556": [4, 244], "carl": [4, 126, 244, 387, 856], "gaspar": [4, 244, 856], "cyril": [4, 244, 856], "r": [4, 8, 10, 12, 19, 21, 28, 37, 39, 41, 43, 49, 70, 81, 82, 96, 97, 99, 115, 127, 137, 138, 142, 146, 157, 161, 167, 177, 181, 182, 184, 185, 186, 195, 196, 200, 202, 204, 205, 207, 211, 212, 216, 222, 226, 230, 231, 236, 241, 244, 256, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 278, 279, 280, 300, 360, 380, 410, 416, 417, 445, 478, 479, 510, 525, 533, 557, 558, 567, 570, 572, 574, 578, 660, 684, 687, 688, 693, 694, 700, 702, 703, 704, 729, 732, 748, 765, 766, 772, 776, 780, 787, 791, 796, 800, 803, 808, 810, 835, 837, 839, 856, 862, 865, 880], "pernet": [4, 244, 856], "jess": [4, 244, 856], "husk": [4, 244, 856], "patrick": [4, 244, 856, 862], "j": [4, 8, 12, 13, 18, 19, 21, 31, 35, 42, 44, 59, 65, 70, 71, 74, 75, 83, 94, 99, 101, 113, 121, 126, 138, 145, 152, 156, 161, 163, 173, 179, 181, 195, 196, 202, 204, 205, 206, 207, 212, 226, 227, 231, 239, 244, 256, 264, 265, 266, 267, 270, 274, 275, 276, 297, 300, 354, 360, 380, 388, 393, 403, 410, 414, 416, 417, 418, 428, 473, 476, 478, 479, 525, 526, 533, 536, 540, 557, 558, 566, 567, 572, 586, 592, 595, 657, 660, 662, 686, 687, 688, 690, 691, 693, 694, 702, 704, 712, 714, 716, 718, 726, 729, 730, 732, 854, 856, 859, 862, 880], "bennett": [4, 244, 856], "allison": [4, 244, 856], "sekul": [4, 244, 856], "healthi": [4, 244, 402, 403, 856, 868], "ag": [4, 113, 138, 190, 244, 264, 265, 266, 267, 388, 403, 478, 479, 480, 665, 856, 870, 880], "scalp": [4, 19, 27, 70, 71, 75, 78, 122, 130, 135, 143, 145, 150, 152, 156, 157, 159, 167, 171, 184, 185, 186, 191, 199, 200, 205, 207, 208, 210, 211, 212, 218, 221, 239, 244, 256, 264, 265, 266, 267, 269, 308, 429, 469, 478, 479, 522, 558, 567, 592, 633, 645, 702, 704, 748, 764, 780, 802, 816, 835, 840, 843, 846, 855, 856, 859, 862, 865, 880], "sensit": [4, 5, 7, 23, 25, 27, 82, 122, 130, 152, 159, 179, 203, 207, 212, 230, 236, 244, 264, 265, 266, 267, 268, 269, 274, 275, 277, 364, 454, 478, 479, 555, 558, 620, 626, 641, 668, 687, 688, 690, 691, 748, 792, 856, 861, 880], "frontier": [4, 10, 19, 135, 152, 195, 202, 244, 416, 563, 854, 856], "psychologi": [4, 10, 152, 202, 244, 682, 856], "19": [4, 9, 11, 13, 19, 28, 34, 35, 41, 42, 45, 47, 58, 64, 71, 73, 76, 81, 83, 90, 93, 94, 103, 104, 108, 109, 112, 114, 127, 141, 142, 147, 152, 158, 159, 167, 168, 169, 170, 172, 179, 180, 181, 182, 183, 184, 185, 186, 192, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 244, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 277, 278, 279, 280, 304, 306, 309, 328, 429, 473, 478, 479, 517, 521, 551, 557, 558, 645, 695, 700, 703, 719, 764, 767, 772, 773, 776, 778, 795, 801, 812, 821, 837, 838, 856, 862], "14": [4, 5, 8, 9, 11, 12, 13, 16, 19, 20, 21, 22, 28, 32, 33, 34, 35, 43, 45, 46, 47, 48, 49, 54, 55, 58, 65, 80, 81, 83, 85, 87, 93, 94, 103, 107, 108, 109, 112, 114, 120, 121, 123, 146, 151, 153, 158, 159, 163, 169, 170, 172, 173, 176, 178, 179, 180, 181, 184, 186, 192, 195, 196, 202, 207, 209, 210, 221, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 241, 244, 255, 262, 264, 265, 266, 267, 277, 306, 359, 380, 411, 412, 416, 421, 426, 445, 446, 448, 478, 479, 495, 506, 558, 574, 575, 592, 700, 718, 719, 727, 728, 748, 776, 778, 789, 796, 804, 856, 862], "2010": [4, 94, 117, 156, 202, 244, 297, 354, 410, 729, 732, 856, 880], "3389": [4, 10, 19, 135, 152, 195, 202, 244, 416, 563, 854, 856], "fpsyg": [4, 152, 202, 244, 856], "00019": [4, 244, 856], "parametr": [4, 69, 94, 113, 166, 167, 231, 232, 233, 244, 264, 266, 267, 269, 318, 353, 451, 478, 525, 555, 558, 615, 635, 679, 680, 687, 688, 690, 691, 693, 694, 703, 730, 772, 793, 835, 877, 880], "studi": [4, 33, 70, 121, 145, 152, 162, 179, 181, 202, 204, 210, 223, 228, 230, 231, 244, 290, 297, 402, 403, 434, 835, 855, 862, 880], "bmc": [4, 16, 196, 244, 411, 426], "98": [4, 13, 15, 19, 33, 35, 42, 44, 47, 81, 112, 114, 117, 123, 138, 160, 170, 178, 181, 192, 195, 196, 209, 223, 226, 227, 228, 230, 231, 235, 236, 244, 290, 297, 342, 344, 588, 687, 688, 690, 691], "2008": [4, 10, 35, 44, 152, 171, 181, 205, 223, 226, 227, 244, 276, 297, 298, 338, 360, 410, 431, 449, 473, 540, 558, 660, 687, 688, 690, 691], "1186": [4, 16, 135, 196, 209, 244, 411, 426], "1471": [4, 16, 196, 244, 411, 426], "2202": [4, 16, 196, 244, 411, 426], "37": [4, 6, 13, 19, 21, 28, 34, 35, 41, 45, 47, 56, 79, 81, 91, 94, 102, 103, 108, 112, 114, 138, 140, 146, 158, 170, 172, 196, 202, 209, 214, 226, 227, 228, 230, 231, 234, 235, 236, 239, 335, 402, 451, 569, 880], "311": [4, 6, 56, 112, 170, 226, 231], "630": [4, 6, 81, 231], "limo_data": [4, 6], "dataset": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 244, 256, 258, 261, 262, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 297, 298, 302, 309, 312, 328, 345, 353, 354, 355, 356, 358, 359, 361, 363, 369, 370, 371, 410, 413, 417, 420, 427, 430, 439, 441, 442, 451, 453, 454, 467, 473, 475, 476, 478, 479, 488, 489, 491, 515, 516, 517, 521, 522, 524, 525, 528, 531, 532, 536, 541, 542, 555, 558, 571, 575, 580, 588, 596, 617, 618, 619, 620, 626, 633, 648, 685, 687, 688, 690, 691, 700, 702, 703, 722, 733, 748, 764, 772, 776, 781, 788, 810, 816, 826, 839, 857, 862, 863, 868, 870, 880], "electr": [5, 167, 181, 199, 207, 208, 244, 297, 298, 558, 566, 768, 835, 840, 855, 865], "stimul": [5, 32, 45, 152, 181, 236, 264, 265, 266, 267, 359, 478, 479, 555, 556, 561, 580, 650, 700, 702, 703, 704, 748, 764, 856, 862, 880], "deliv": 5, "left": [5, 10, 11, 13, 15, 23, 25, 27, 30, 31, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 61, 67, 71, 73, 78, 79, 80, 83, 86, 87, 94, 112, 116, 119, 120, 124, 127, 128, 132, 134, 135, 136, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 156, 157, 159, 161, 167, 169, 173, 176, 179, 181, 182, 183, 192, 195, 196, 204, 205, 206, 207, 208, 210, 216, 217, 218, 222, 223, 227, 230, 234, 235, 236, 239, 257, 258, 260, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 312, 314, 324, 325, 335, 336, 360, 380, 385, 410, 417, 432, 434, 437, 444, 468, 476, 478, 479, 501, 511, 523, 557, 558, 635, 640, 648, 649, 652, 663, 700, 702, 703, 704, 748, 764, 772, 778, 779, 780, 782, 784, 786, 787, 788, 791, 799, 800, 801, 802, 803, 808, 812, 816, 835, 856, 862, 865, 880], "wrist": 5, "somatosensori": [5, 32, 34, 46, 113, 240, 244, 392, 880], "nine": [5, 143], "quspin": 5, "serf": 5, "place": [5, 7, 26, 67, 127, 135, 141, 150, 151, 152, 157, 162, 166, 167, 170, 174, 175, 179, 202, 204, 205, 206, 208, 210, 212, 215, 221, 234, 258, 261, 263, 264, 265, 266, 267, 268, 269, 273, 276, 281, 282, 287, 312, 317, 320, 340, 347, 363, 364, 381, 384, 385, 387, 410, 417, 432, 434, 435, 448, 449, 478, 479, 480, 489, 536, 545, 550, 557, 558, 570, 571, 572, 575, 579, 580, 584, 636, 642, 645, 650, 651, 652, 653, 665, 697, 700, 701, 702, 703, 704, 717, 734, 751, 765, 769, 780, 787, 791, 800, 803, 808, 810, 835, 839, 856, 860, 862, 863, 865, 866, 880], "side": [5, 19, 32, 45, 70, 142, 157, 167, 204, 208, 234, 241, 261, 262, 264, 265, 266, 267, 271, 273, 275, 279, 410, 417, 478, 479, 557, 558, 572, 577, 588, 685, 687, 688, 690, 691, 700, 701, 702, 704, 748, 765, 774, 776, 778, 780, 787, 791, 794, 800, 803, 806, 808, 810, 857, 862, 880], "somatomotor": 5, "custom": [5, 27, 36, 56, 67, 109, 120, 122, 126, 130, 135, 141, 143, 146, 150, 151, 152, 168, 202, 203, 204, 205, 207, 208, 221, 231, 241, 256, 261, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 278, 279, 280, 321, 325, 327, 385, 478, 479, 555, 558, 609, 618, 620, 680, 704, 742, 748, 761, 766, 767, 778, 785, 795, 801, 806, 807, 811, 812, 835, 839, 855, 856, 857, 859, 880], "opm_sampl": [5, 109], "subjects_dir": [5, 7, 11, 22, 24, 26, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 68, 79, 81, 90, 94, 95, 104, 109, 115, 116, 118, 124, 125, 126, 127, 131, 134, 135, 136, 137, 151, 156, 157, 158, 159, 160, 161, 162, 167, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 191, 192, 196, 211, 222, 223, 234, 235, 236, 256, 262, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 303, 307, 308, 309, 312, 360, 365, 366, 367, 372, 384, 386, 387, 388, 389, 429, 460, 462, 464, 466, 468, 469, 470, 471, 472, 511, 515, 517, 544, 545, 584, 605, 623, 625, 632, 637, 638, 639, 640, 648, 649, 663, 666, 677, 695, 696, 740, 747, 748, 764, 766, 776, 806, 811, 812, 830, 845, 855, 862, 880], "raw_fnam": [5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 26, 32, 33, 34, 42, 45, 46, 49, 69, 70, 72, 73, 74, 76, 82, 83, 88, 93, 96, 97, 99, 100, 107, 108, 110, 111, 113, 117, 119, 121, 132, 133, 142, 153, 157, 159, 160, 163, 178, 181, 184, 186, 196, 204, 223, 228, 229, 230, 231, 234, 236, 240, 856, 862], "opm_sef_raw": 5, "bem_fnam": [5, 45, 68, 109], "bem": [5, 7, 23, 26, 27, 40, 41, 43, 44, 45, 50, 68, 109, 125, 135, 136, 137, 151, 156, 157, 160, 161, 164, 165, 166, 177, 181, 182, 183, 184, 185, 186, 191, 192, 208, 234, 235, 236, 254, 262, 274, 277, 365, 386, 409, 429, 453, 460, 515, 516, 517, 520, 521, 584, 607, 608, 631, 637, 639, 640, 649, 665, 764, 766, 822, 823, 828, 833, 835, 845, 856, 865, 870, 880], "5120": [5, 7, 26, 41, 45, 50, 68, 109, 151, 159, 160, 177, 182, 183, 256, 409, 515, 521, 665, 855], "sol": [5, 7, 22, 26, 41, 45, 50, 68, 109, 159, 160, 177, 182, 183, 256, 268, 521, 665, 855, 865], "fwd_fname": [5, 22, 31, 35, 40, 46, 51, 59, 68, 90, 92, 93, 94, 95, 181, 192, 223], "fwd": [5, 11, 22, 26, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 48, 49, 51, 54, 55, 58, 59, 68, 90, 92, 93, 94, 95, 109, 131, 159, 160, 173, 176, 177, 178, 179, 180, 181, 183, 192, 196, 222, 223, 256, 268, 275, 284, 285, 286, 364, 444, 456, 457, 520, 521, 620, 641, 664, 665, 748, 764, 827, 855, 862], "coil_def_fnam": 5, "coil_def": [5, 109, 856, 862, 865], "dat": [5, 109, 210, 332, 492, 507, 569, 577, 588, 599, 604, 856, 862, 880], "read_raw_fif": [5, 10, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 68, 69, 71, 72, 73, 74, 76, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 115, 117, 118, 121, 123, 127, 129, 132, 133, 141, 142, 143, 146, 147, 150, 152, 153, 157, 163, 167, 168, 169, 170, 171, 178, 181, 183, 184, 189, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 222, 228, 229, 230, 231, 234, 236, 239, 240, 258, 484, 862, 866, 870, 880], "h_trans_bandwidth": [5, 21, 113, 114, 192, 202, 211, 264, 265, 266, 267, 412, 421, 446, 448, 478, 479, 592, 880], "notch_width": [5, 449, 478, 479], "threshold": [5, 30, 34, 38, 74, 82, 96, 112, 120, 146, 152, 166, 167, 173, 183, 185, 189, 192, 200, 201, 205, 207, 210, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 256, 259, 264, 265, 266, 267, 269, 308, 318, 324, 353, 358, 449, 478, 479, 502, 540, 558, 560, 563, 570, 572, 574, 575, 577, 578, 579, 581, 583, 593, 611, 656, 657, 658, 659, 660, 661, 662, 683, 684, 687, 688, 690, 691, 692, 703, 748, 772, 777, 778, 794, 855, 862, 868, 880], "larger": [5, 49, 59, 70, 151, 180, 196, 199, 202, 204, 210, 218, 228, 241, 264, 265, 274, 279, 280, 454, 478, 479, 560, 579, 597, 695, 728, 729, 731, 732, 778, 801, 809, 812, 861, 862, 880], "squid": [5, 109, 212, 244, 835, 856, 862], "2e": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 70, 74, 90, 93, 94, 109, 119, 121, 153, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 222, 223, 570, 571], "trigger": [5, 10, 93, 103, 109, 145, 167, 169, 172, 178, 183, 186, 189, 190, 191, 192, 201, 206, 211, 212, 226, 256, 257, 354, 359, 451, 452, 478, 479, 486, 493, 495, 500, 502, 575, 579, 615, 665, 835, 839, 855, 862, 865, 880], "257": [5, 112, 115, 170, 171, 209, 231, 856], "sti101": [5, 169, 257, 451, 452], "mask": [5, 28, 31, 82, 96, 100, 101, 112, 120, 143, 186, 202, 206, 222, 226, 227, 228, 229, 230, 231, 257, 261, 264, 265, 266, 267, 273, 410, 416, 417, 451, 478, 479, 486, 557, 558, 572, 615, 687, 688, 690, 691, 700, 702, 704, 765, 780, 784, 787, 791, 800, 803, 808, 810, 859, 880], "mask_typ": [5, 186, 257, 451, 486, 615, 880], "verbos": [5, 10, 11, 13, 14, 15, 34, 38, 40, 41, 42, 44, 49, 51, 58, 70, 75, 78, 80, 84, 88, 93, 94, 99, 104, 108, 109, 121, 123, 124, 126, 134, 135, 136, 137, 141, 143, 146, 147, 150, 151, 153, 158, 159, 160, 163, 171, 172, 173, 178, 180, 181, 182, 183, 184, 185, 191, 196, 200, 201, 202, 205, 208, 209, 210, 211, 212, 216, 217, 221, 226, 227, 228, 234, 239, 241, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 415, 416, 420, 421, 423, 426, 427, 429, 431, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 460, 461, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 554, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 647, 648, 649, 651, 652, 653, 654, 664, 665, 668, 670, 671, 672, 673, 674, 675, 676, 687, 688, 689, 690, 691, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 722, 723, 727, 728, 730, 731, 732, 733, 736, 737, 738, 743, 744, 747, 748, 756, 764, 773, 776, 780, 781, 782, 783, 788, 791, 792, 793, 798, 799, 801, 802, 804, 805, 806, 807, 811, 812, 813, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 837, 839, 870, 880], "error": [5, 10, 13, 38, 42, 54, 55, 79, 90, 93, 109, 114, 134, 136, 137, 141, 145, 150, 153, 158, 163, 172, 173, 182, 184, 186, 189, 195, 196, 201, 202, 205, 208, 212, 226, 227, 230, 244, 259, 264, 265, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 284, 285, 316, 339, 348, 349, 354, 358, 361, 363, 365, 369, 370, 402, 429, 444, 445, 457, 458, 460, 478, 479, 494, 498, 540, 549, 558, 569, 577, 587, 588, 606, 608, 612, 637, 639, 647, 657, 660, 662, 678, 684, 685, 689, 700, 702, 703, 704, 745, 746, 748, 779, 781, 792, 826, 828, 838, 839, 844, 845, 850, 855, 856, 859, 862, 865, 880], "suppress": [5, 13, 27, 38, 49, 77, 84, 85, 137, 146, 151, 152, 172, 181, 185, 189, 199, 200, 202, 203, 204, 207, 212, 244, 256, 261, 264, 265, 266, 267, 268, 269, 270, 275, 341, 343, 347, 364, 445, 446, 448, 449, 478, 479, 555, 556, 573, 609, 620, 623, 646, 664, 666, 785, 835, 856, 862, 880], "warn": [5, 10, 13, 38, 134, 136, 137, 141, 152, 163, 172, 173, 182, 185, 192, 203, 205, 206, 216, 217, 228, 239, 256, 258, 259, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 284, 285, 316, 339, 342, 348, 349, 354, 358, 360, 361, 363, 365, 369, 370, 402, 429, 437, 444, 457, 460, 478, 479, 498, 558, 569, 577, 588, 589, 608, 618, 637, 639, 642, 646, 647, 700, 702, 703, 704, 744, 746, 748, 781, 792, 826, 828, 845, 847, 870, 880], "about": [5, 13, 19, 27, 34, 43, 44, 70, 74, 94, 101, 114, 141, 142, 144, 145, 147, 150, 152, 156, 161, 163, 167, 169, 170, 173, 176, 179, 185, 189, 190, 191, 192, 195, 196, 200, 202, 203, 205, 206, 210, 211, 215, 216, 217, 222, 223, 226, 228, 256, 257, 259, 261, 263, 264, 265, 266, 267, 269, 273, 274, 275, 277, 282, 284, 285, 297, 298, 299, 305, 306, 310, 311, 318, 319, 320, 324, 326, 327, 340, 342, 344, 349, 358, 367, 369, 370, 371, 373, 410, 412, 417, 418, 419, 429, 434, 451, 454, 461, 470, 477, 478, 479, 480, 483, 509, 514, 521, 522, 526, 536, 554, 555, 558, 569, 584, 593, 594, 615, 635, 636, 664, 665, 668, 686, 700, 701, 702, 703, 704, 727, 728, 730, 731, 737, 748, 761, 764, 768, 773, 774, 783, 790, 800, 804, 835, 839, 843, 855, 856, 858, 859, 861, 863, 865, 868, 880], "decim": [5, 7, 11, 12, 13, 18, 19, 24, 33, 34, 41, 42, 103, 109, 112, 159, 162, 163, 167, 173, 182, 184, 196, 203, 205, 210, 227, 228, 229, 230, 231, 240, 256, 259, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 308, 409, 423, 431, 451, 478, 479, 502, 518, 541, 542, 558, 574, 575, 611, 614, 669, 686, 700, 703, 706, 709, 725, 727, 728, 729, 730, 731, 732, 748, 766, 778, 801, 855, 862, 865, 880], "caus": [5, 13, 44, 70, 143, 152, 162, 199, 200, 201, 202, 203, 206, 210, 212, 217, 261, 264, 265, 266, 267, 274, 469, 478, 479, 506, 558, 745, 782, 787, 840, 855, 880], "alias": [5, 13, 163, 182, 203, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 423, 478, 479, 574, 575, 700, 703, 725, 727, 728, 730, 731, 778, 801, 814, 859, 880], "ideal": [5, 70, 108, 133, 136, 145, 152, 171, 202, 204, 207, 208, 227, 241, 312, 789, 796, 835, 839, 859, 862], "instead": [5, 43, 67, 74, 104, 114, 120, 135, 137, 143, 144, 147, 150, 151, 152, 157, 159, 161, 162, 167, 169, 170, 171, 172, 173, 196, 200, 201, 202, 203, 205, 206, 210, 212, 215, 216, 218, 223, 226, 234, 235, 236, 239, 240, 256, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 289, 290, 291, 292, 295, 297, 307, 309, 312, 338, 353, 354, 359, 439, 440, 441, 442, 443, 444, 451, 458, 461, 466, 477, 478, 479, 527, 529, 532, 558, 559, 560, 595, 634, 645, 649, 664, 700, 703, 716, 726, 727, 728, 729, 730, 731, 732, 748, 750, 772, 778, 782, 788, 795, 801, 810, 818, 837, 838, 839, 843, 844, 847, 855, 856, 857, 862, 880], "proj": [5, 8, 9, 11, 13, 14, 15, 18, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 71, 78, 86, 87, 88, 92, 109, 111, 116, 117, 119, 120, 121, 124, 127, 131, 141, 143, 146, 150, 151, 152, 163, 167, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 192, 196, 199, 203, 206, 207, 208, 211, 215, 218, 221, 256, 259, 261, 264, 265, 266, 267, 269, 273, 274, 297, 298, 341, 342, 354, 355, 356, 357, 358, 371, 477, 478, 479, 518, 557, 558, 570, 571, 574, 603, 611, 618, 626, 641, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 773, 780, 782, 784, 786, 787, 799, 800, 801, 802, 831, 835, 855, 880], "cov": [5, 11, 21, 31, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 64, 68, 84, 90, 92, 93, 94, 95, 121, 153, 173, 177, 179, 180, 182, 183, 184, 185, 186, 192, 195, 196, 222, 223, 256, 261, 274, 275, 354, 359, 453, 514, 526, 548, 558, 609, 627, 654, 664, 746, 773, 824, 839, 855, 856, 859, 870, 880], "compute_covari": [5, 7, 34, 42, 46, 49, 84, 93, 121, 153, 163, 178, 181, 183, 184, 186, 196, 222, 261, 359, 371, 410, 417, 418, 559, 609, 746, 855, 859, 870, 880], "del": [5, 18, 33, 41, 42, 46, 47, 48, 49, 50, 54, 55, 109, 113, 135, 137, 141, 143, 146, 150, 167, 173, 178, 180, 181, 182, 184, 185, 192, 196, 202, 205], "open": [5, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 68, 69, 70, 71, 72, 73, 74, 76, 79, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 115, 117, 118, 121, 123, 127, 129, 132, 133, 135, 136, 142, 143, 145, 147, 151, 152, 153, 156, 157, 162, 163, 166, 167, 168, 169, 170, 173, 178, 181, 183, 184, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 215, 218, 222, 223, 228, 229, 230, 231, 234, 236, 240, 241, 244, 263, 264, 265, 266, 267, 274, 277, 380, 478, 479, 558, 566, 665, 786, 791, 801, 809, 835, 836, 838, 843, 845, 846, 856, 858, 859, 861, 865, 880], "isotrak": [5, 42, 101, 109, 123, 129, 144, 163, 173, 207, 209, 227, 256, 337, 862], "700999": 5, "700": [5, 81, 115, 128, 135, 196, 209, 229, 231, 716, 726, 748], "999": [5, 34, 76, 80, 84, 92, 96, 109, 111, 123, 129, 131, 143, 145, 160, 169, 173, 184, 205, 206, 208, 209, 210, 231, 570, 574, 578, 581], "lowpass": [5, 11, 71, 73, 76, 81, 82, 83, 84, 90, 93, 127, 142, 147, 152, 167, 168, 169, 170, 192, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 223, 256, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 445, 478, 479, 700, 702, 703, 704, 778, 801, 802, 865, 880], "331": [5, 34, 41, 56, 84, 106, 109, 114, 170, 202, 210, 231, 241, 243], "48": [5, 11, 12, 13, 19, 21, 28, 35, 41, 45, 46, 47, 56, 81, 94, 103, 104, 108, 109, 112, 114, 135, 138, 140, 146, 152, 158, 169, 170, 172, 175, 196, 209, 212, 217, 226, 227, 228, 230, 231, 233, 234, 235, 236, 244, 880], "6601": 5, "initi": [5, 16, 19, 21, 41, 43, 44, 70, 93, 96, 109, 112, 145, 150, 152, 157, 169, 181, 186, 192, 205, 212, 215, 221, 226, 227, 228, 229, 230, 231, 234, 235, 236, 241, 255, 256, 262, 264, 265, 270, 271, 272, 274, 275, 276, 278, 279, 280, 373, 375, 473, 478, 479, 485, 505, 511, 558, 586, 595, 597, 605, 652, 653, 654, 663, 664, 666, 679, 687, 688, 689, 690, 691, 703, 738, 748, 776, 778, 792, 795, 801, 806, 811, 812, 839, 844, 846, 861, 862, 865, 880], "256": [5, 12, 13, 21, 70, 109, 115, 124, 135, 157, 161, 170, 171, 172, 173, 184, 223, 226, 230, 231, 277, 442, 719, 763, 837, 862], "initial_ev": [5, 90, 93, 109, 186, 212, 223, 451, 880], "detect": [5, 8, 9, 12, 22, 27, 68, 70, 72, 74, 77, 82, 83, 93, 109, 112, 127, 138, 147, 152, 158, 160, 163, 166, 169, 173, 186, 191, 192, 196, 200, 202, 203, 204, 205, 206, 207, 210, 212, 213, 214, 216, 241, 244, 256, 257, 264, 265, 266, 267, 269, 274, 318, 341, 343, 347, 449, 478, 479, 484, 506, 555, 558, 560, 562, 563, 564, 566, 570, 571, 573, 574, 575, 577, 578, 579, 581, 588, 686, 700, 729, 732, 748, 778, 794, 795, 801, 846, 859, 862, 869, 880], "201": [5, 45, 112, 127, 137, 170, 177, 182, 184, 196, 209, 230, 231, 236, 865], "rank": [5, 7, 8, 9, 12, 15, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 84, 88, 90, 93, 94, 104, 107, 108, 109, 110, 113, 121, 153, 163, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 200, 204, 205, 206, 222, 223, 234, 236, 261, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 418, 453, 454, 473, 475, 476, 530, 536, 558, 773, 788, 835, 859, 880], "toler": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 90, 93, 94, 109, 121, 153, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 202, 205, 206, 222, 223, 358, 473, 475, 476, 558, 597, 862, 880], "1e": [5, 8, 9, 32, 33, 34, 40, 45, 46, 49, 59, 65, 70, 71, 74, 82, 93, 94, 114, 120, 121, 138, 159, 163, 180, 181, 184, 186, 196, 201, 202, 222, 223, 226, 264, 265, 274, 473, 478, 479, 525, 557, 567, 586, 666, 693, 700, 778, 801, 803, 808, 835, 880], "16": [5, 8, 9, 11, 12, 13, 19, 20, 21, 22, 25, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 71, 78, 79, 80, 81, 83, 85, 90, 93, 94, 96, 100, 103, 108, 109, 112, 114, 121, 123, 145, 153, 157, 161, 163, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 199, 202, 203, 205, 207, 208, 209, 210, 211, 214, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 241, 244, 257, 259, 263, 264, 265, 266, 267, 274, 277, 354, 410, 417, 451, 469, 478, 479, 486, 525, 527, 528, 531, 532, 538, 541, 558, 566, 574, 596, 680, 700, 702, 703, 704, 764, 778, 782, 784, 786, 787, 788, 790, 801, 862, 865], "ep": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 90, 93, 94, 109, 121, 153, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 222, 223, 525], "dim": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 90, 93, 94, 109, 121, 153, 161, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 221, 222, 223, 239, 261, 531, 532, 541, 542, 559, 703, 865], "singular": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 90, 93, 94, 109, 121, 153, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 206, 222, 223, 261, 271, 272, 275, 278, 279, 280, 358, 444, 533, 773, 862, 865], "reduc": [5, 8, 9, 12, 15, 16, 21, 27, 34, 40, 42, 46, 49, 55, 59, 71, 77, 84, 85, 88, 104, 107, 108, 109, 110, 114, 120, 121, 147, 150, 152, 158, 159, 163, 168, 173, 178, 181, 183, 184, 186, 192, 195, 196, 203, 204, 205, 206, 207, 208, 210, 212, 215, 222, 228, 229, 231, 234, 235, 236, 240, 244, 261, 264, 265, 266, 267, 268, 271, 272, 275, 278, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 387, 410, 411, 417, 423, 426, 427, 433, 445, 451, 453, 454, 473, 475, 476, 478, 479, 528, 531, 532, 536, 541, 542, 557, 558, 586, 596, 643, 687, 688, 690, 691, 706, 709, 725, 727, 728, 729, 730, 731, 732, 782, 787, 788, 835, 839, 859, 862, 865, 880], "covari": [5, 8, 9, 11, 12, 15, 19, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 66, 68, 81, 88, 90, 92, 93, 94, 103, 104, 107, 108, 109, 110, 113, 122, 124, 130, 150, 153, 164, 165, 166, 167, 177, 179, 180, 182, 183, 184, 185, 186, 192, 196, 200, 201, 205, 223, 234, 236, 244, 256, 264, 265, 266, 267, 268, 269, 274, 275, 294, 297, 298, 300, 317, 353, 354, 355, 357, 358, 359, 369, 370, 371, 410, 416, 417, 418, 435, 451, 453, 454, 473, 475, 476, 478, 479, 483, 514, 524, 525, 526, 527, 528, 529, 531, 532, 536, 538, 541, 542, 550, 558, 559, 609, 615, 620, 654, 664, 686, 701, 711, 748, 773, 778, 782, 786, 788, 801, 824, 835, 856, 865, 870, 880], "empir": [5, 8, 9, 15, 27, 31, 36, 46, 49, 56, 88, 93, 121, 163, 178, 181, 183, 184, 186, 196, 210, 222, 244, 261, 266, 267, 268, 269, 275, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 418, 453, 454, 473, 474, 475, 476, 536, 559, 609, 618, 620, 775, 776, 788, 807, 880], "10251": 5, "examin": [5, 34, 47, 74, 129, 137, 143, 146, 147, 152, 161, 167, 178, 179, 205, 215, 217, 839, 859], "align": [5, 7, 9, 28, 79, 80, 136, 152, 156, 158, 159, 164, 165, 166, 169, 173, 183, 184, 185, 191, 215, 226, 258, 262, 264, 265, 269, 271, 272, 275, 276, 277, 278, 279, 280, 302, 308, 312, 365, 367, 389, 429, 444, 469, 470, 478, 522, 558, 585, 630, 631, 633, 649, 736, 737, 738, 748, 764, 776, 778, 816, 835, 862, 880], "forward": [5, 7, 12, 22, 26, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 68, 72, 80, 90, 92, 93, 94, 95, 131, 136, 147, 156, 157, 161, 162, 165, 167, 171, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 192, 196, 199, 200, 201, 202, 204, 205, 207, 208, 222, 223, 244, 256, 264, 265, 266, 267, 269, 272, 274, 275, 277, 278, 280, 284, 285, 286, 297, 298, 299, 300, 302, 307, 309, 312, 316, 317, 328, 334, 360, 364, 373, 388, 410, 417, 421, 435, 437, 438, 445, 446, 448, 449, 469, 473, 474, 475, 476, 478, 479, 483, 493, 515, 516, 520, 521, 522, 534, 535, 536, 537, 540, 551, 556, 607, 620, 630, 641, 645, 648, 649, 651, 652, 653, 664, 665, 700, 742, 748, 764, 766, 785, 789, 814, 816, 827, 835, 840, 851, 856, 861, 865, 868, 870, 880], "mri": [5, 24, 26, 30, 35, 40, 41, 43, 44, 45, 50, 59, 79, 93, 94, 109, 115, 124, 125, 135, 136, 137, 151, 158, 159, 162, 164, 165, 166, 167, 171, 177, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 208, 215, 223, 244, 261, 262, 264, 266, 267, 268, 269, 274, 275, 276, 277, 279, 280, 302, 303, 304, 307, 308, 309, 312, 316, 325, 328, 330, 334, 354, 360, 365, 366, 367, 372, 373, 386, 388, 389, 429, 444, 451, 453, 461, 462, 463, 469, 470, 471, 472, 478, 479, 493, 508, 510, 517, 520, 521, 524, 525, 536, 584, 607, 630, 632, 637, 638, 639, 640, 649, 668, 695, 734, 735, 737, 738, 740, 748, 759, 764, 766, 776, 812, 816, 828, 835, 840, 843, 846, 855, 859, 865, 868, 870, 880], "ident": [5, 45, 70, 79, 99, 109, 125, 136, 151, 157, 159, 161, 167, 184, 185, 186, 195, 205, 208, 210, 212, 262, 269, 276, 277, 304, 373, 389, 434, 510, 517, 520, 521, 531, 533, 577, 586, 588, 610, 665, 695, 735, 764, 835, 855, 856, 857, 862, 865, 880], "matrix": [5, 9, 10, 11, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 68, 78, 79, 81, 87, 90, 92, 93, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 119, 121, 124, 131, 134, 135, 138, 142, 151, 152, 153, 157, 158, 159, 160, 161, 164, 165, 166, 167, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 195, 196, 200, 205, 206, 207, 222, 223, 227, 228, 229, 230, 231, 235, 236, 244, 256, 261, 262, 264, 266, 267, 269, 274, 276, 277, 294, 297, 298, 299, 304, 312, 315, 316, 318, 329, 354, 359, 360, 369, 370, 371, 416, 431, 451, 454, 478, 479, 483, 517, 521, 525, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 550, 555, 558, 559, 565, 566, 586, 589, 609, 613, 615, 649, 654, 665, 670, 671, 672, 673, 674, 675, 676, 680, 685, 686, 687, 688, 690, 691, 695, 701, 708, 709, 710, 717, 735, 764, 768, 769, 773, 774, 791, 792, 795, 824, 835, 856, 880], "co": [5, 22, 68, 158, 202, 210, 221, 244, 341, 436, 835, 856, 862], "registr": [5, 43, 44, 79, 134, 135, 158, 181, 244, 276, 360, 585, 736, 737, 738, 845, 856, 862, 880], "equat": [5, 136, 157, 195, 196, 206, 244, 431, 569, 729, 732, 862, 868], "mi": [5, 856], "defin": [5, 8, 9, 10, 12, 18, 19, 21, 27, 31, 33, 43, 44, 60, 61, 76, 77, 85, 94, 95, 104, 107, 111, 114, 120, 128, 135, 137, 141, 142, 143, 145, 152, 156, 159, 161, 163, 164, 166, 168, 169, 171, 173, 176, 179, 181, 183, 191, 192, 195, 196, 202, 206, 211, 223, 229, 230, 231, 234, 236, 240, 241, 244, 256, 257, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 285, 290, 297, 298, 312, 317, 320, 334, 335, 354, 360, 364, 385, 391, 410, 416, 417, 435, 436, 439, 445, 465, 468, 478, 479, 484, 490, 510, 511, 512, 520, 525, 526, 527, 528, 529, 532, 536, 541, 542, 544, 555, 557, 558, 559, 561, 562, 572, 586, 605, 610, 615, 649, 652, 653, 654, 657, 660, 662, 663, 664, 665, 666, 673, 676, 687, 688, 689, 690, 691, 695, 696, 700, 701, 702, 703, 704, 706, 708, 709, 710, 711, 714, 716, 726, 727, 728, 730, 731, 748, 753, 765, 769, 772, 779, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 811, 835, 839, 845, 855, 856, 861, 862, 865, 880], "base": [5, 7, 9, 11, 16, 21, 22, 27, 28, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 55, 58, 59, 61, 68, 70, 77, 83, 85, 90, 92, 94, 96, 99, 100, 103, 107, 109, 110, 112, 113, 114, 117, 119, 121, 132, 135, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 161, 162, 163, 166, 167, 170, 171, 173, 177, 178, 179, 180, 181, 182, 183, 190, 192, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 222, 223, 224, 226, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 253, 258, 259, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 312, 314, 318, 319, 324, 329, 332, 341, 342, 343, 344, 347, 353, 354, 355, 356, 359, 360, 364, 375, 403, 410, 412, 413, 416, 417, 418, 420, 421, 423, 424, 427, 431, 433, 436, 439, 441, 443, 445, 446, 448, 449, 451, 454, 461, 467, 469, 477, 478, 479, 484, 495, 511, 517, 518, 521, 523, 526, 540, 555, 557, 558, 560, 561, 565, 566, 567, 568, 569, 572, 574, 575, 577, 578, 588, 601, 602, 603, 615, 620, 622, 639, 648, 652, 653, 660, 673, 676, 685, 686, 687, 688, 689, 690, 691, 695, 696, 700, 702, 703, 704, 706, 709, 712, 719, 727, 728, 730, 731, 733, 744, 748, 757, 759, 765, 767, 772, 777, 778, 780, 786, 787, 788, 789, 791, 793, 794, 795, 800, 801, 803, 805, 806, 808, 810, 811, 812, 827, 835, 837, 838, 839, 840, 842, 843, 848, 851, 855, 856, 859, 865, 868, 871, 875, 880], "lpa": [5, 79, 135, 137, 157, 161, 306, 312, 325, 336, 345, 365, 367, 429, 485, 835, 856, 880], "nasion": [5, 79, 157, 158, 161, 171, 306, 312, 325, 335, 336, 345, 365, 367, 429, 653, 835, 856, 862, 865, 880], "rpa": [5, 79, 135, 137, 157, 161, 306, 312, 325, 336, 345, 365, 367, 429, 485, 835, 856, 880], "fine": [5, 182, 189, 210, 241, 269, 431, 568, 569, 577, 588, 599, 604, 880], "analys": [5, 11, 27, 31, 41, 69, 98, 102, 116, 136, 144, 147, 151, 152, 159, 161, 196, 200, 206, 207, 215, 227, 241, 244, 266, 267, 478, 479, 611, 684, 685, 772, 784, 846, 856, 862, 868, 880], "read_bem_solut": [5, 45, 109, 160, 516, 822, 870], "tran": [5, 7, 26, 41, 50, 51, 52, 68, 79, 81, 109, 115, 116, 118, 124, 125, 135, 136, 137, 151, 158, 159, 160, 161, 173, 177, 179, 182, 183, 184, 191, 192, 208, 211, 256, 262, 274, 277, 300, 304, 312, 365, 366, 386, 389, 429, 431, 453, 461, 469, 470, 517, 520, 521, 565, 584, 588, 633, 665, 668, 695, 734, 735, 737, 748, 764, 776, 834, 835, 855, 856, 862, 880], "solut": [5, 7, 11, 22, 23, 26, 27, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 68, 70, 71, 90, 92, 93, 94, 95, 105, 106, 107, 108, 109, 110, 124, 131, 157, 158, 160, 163, 166, 167, 171, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 192, 196, 200, 207, 222, 223, 234, 236, 244, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 284, 285, 286, 297, 298, 299, 309, 360, 364, 371, 444, 454, 455, 473, 474, 475, 476, 478, 479, 512, 516, 520, 521, 522, 524, 525, 526, 527, 528, 529, 532, 533, 536, 539, 540, 550, 551, 555, 556, 558, 600, 607, 609, 615, 618, 620, 622, 623, 630, 645, 648, 649, 651, 652, 653, 664, 665, 748, 764, 775, 776, 791, 793, 795, 806, 807, 811, 822, 827, 835, 837, 839, 840, 846, 851, 865, 870, 880], "must": [5, 18, 32, 43, 44, 47, 60, 83, 127, 128, 136, 145, 147, 157, 168, 170, 172, 173, 182, 185, 189, 191, 199, 200, 205, 207, 210, 217, 221, 226, 228, 230, 231, 234, 236, 241, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 286, 291, 297, 298, 312, 314, 315, 318, 321, 325, 329, 341, 343, 347, 354, 358, 359, 360, 365, 369, 370, 371, 385, 391, 394, 409, 410, 416, 417, 418, 422, 425, 426, 427, 429, 434, 439, 442, 444, 451, 453, 454, 470, 473, 475, 476, 477, 478, 479, 486, 493, 498, 500, 502, 510, 513, 518, 519, 520, 534, 535, 536, 557, 558, 560, 569, 571, 572, 573, 574, 577, 584, 588, 611, 614, 642, 645, 649, 650, 661, 665, 666, 668, 670, 671, 674, 682, 685, 686, 687, 688, 690, 691, 695, 700, 702, 703, 704, 715, 719, 723, 730, 748, 751, 753, 764, 765, 767, 771, 772, 776, 778, 779, 780, 782, 784, 786, 787, 788, 789, 791, 795, 796, 798, 800, 801, 802, 803, 804, 806, 809, 810, 811, 812, 843, 855, 856, 859, 861, 862, 865], "temporari": [5, 152, 173, 256, 269, 643, 756], "definit": [5, 26, 41, 45, 50, 109, 135, 159, 160, 161, 162, 163, 177, 182, 183, 184, 185, 186, 202, 208, 228, 244, 256, 269, 274, 297, 298, 320, 322, 329, 453, 478, 588, 634, 742, 748, 835, 855, 861, 863, 880], "use_coil_def": [5, 109, 870], "make_forward_solut": [5, 7, 26, 41, 50, 109, 159, 160, 183, 192, 208, 268, 620, 742, 855, 862, 870, 880], "src": [5, 7, 22, 24, 26, 28, 30, 31, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 59, 60, 68, 90, 92, 93, 94, 95, 109, 136, 137, 157, 159, 160, 161, 179, 181, 182, 183, 192, 208, 222, 234, 235, 236, 256, 268, 270, 271, 272, 275, 277, 278, 279, 280, 282, 298, 360, 444, 464, 474, 512, 513, 521, 534, 535, 538, 540, 545, 630, 640, 648, 649, 650, 657, 660, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 695, 696, 748, 764, 766, 806, 807, 811, 812, 832, 855, 865, 880], "mindist": [5, 24, 41, 45, 50, 157, 159, 160, 177, 182, 184, 185, 186, 208, 521, 649, 665], "read_forward_solut": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 68, 90, 92, 93, 94, 95, 131, 159, 178, 179, 180, 181, 192, 196, 222, 223, 268, 827, 870, 880], "orient": [5, 11, 22, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 80, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 116, 124, 131, 135, 157, 159, 160, 161, 166, 167, 173, 176, 177, 178, 181, 182, 183, 184, 187, 188, 189, 192, 196, 208, 210, 222, 223, 226, 234, 236, 244, 261, 262, 263, 266, 268, 269, 271, 272, 275, 278, 279, 280, 284, 285, 297, 298, 299, 364, 430, 444, 453, 454, 455, 469, 473, 475, 476, 497, 520, 521, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 537, 540, 541, 542, 599, 609, 610, 613, 617, 618, 620, 633, 648, 652, 664, 665, 748, 757, 764, 766, 767, 776, 816, 827, 855, 864, 865, 868, 880], "later": [5, 11, 19, 32, 38, 43, 47, 69, 101, 109, 127, 135, 137, 141, 142, 143, 145, 150, 152, 163, 173, 176, 178, 181, 182, 190, 192, 199, 200, 201, 202, 205, 206, 207, 208, 212, 215, 216, 217, 218, 221, 234, 235, 241, 244, 259, 264, 265, 266, 267, 272, 274, 276, 278, 281, 360, 452, 478, 479, 558, 612, 614, 700, 702, 703, 704, 748, 811, 839, 844, 845, 856, 857, 862, 865, 880], "convert_forward_solut": [5, 22, 47, 48, 49, 54, 55, 68, 159, 179, 222, 521, 620, 827, 862, 870, 880], "force_fix": [5, 47, 48, 49, 54, 55, 68, 159, 222, 364, 536, 880], "plot_align": [5, 24, 52, 81, 109, 115, 118, 123, 124, 125, 136, 137, 157, 158, 159, 160, 171, 179, 183, 184, 185, 186, 264, 265, 266, 267, 309, 478, 479, 766, 804, 813, 818, 855, 859, 862, 870, 880], "surfac": [5, 11, 22, 24, 26, 27, 31, 34, 35, 36, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 68, 71, 79, 81, 90, 92, 94, 109, 115, 116, 118, 120, 124, 125, 134, 135, 136, 137, 151, 156, 157, 158, 160, 164, 165, 166, 167, 173, 176, 177, 178, 179, 180, 181, 184, 185, 186, 189, 191, 192, 196, 199, 208, 210, 217, 222, 223, 226, 234, 235, 236, 244, 262, 266, 267, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 297, 298, 304, 307, 308, 309, 335, 360, 364, 365, 386, 389, 409, 429, 444, 455, 460, 461, 466, 468, 469, 472, 473, 475, 476, 502, 511, 513, 515, 516, 517, 521, 525, 526, 527, 528, 529, 532, 534, 535, 536, 541, 542, 544, 545, 567, 568, 583, 584, 605, 608, 620, 623, 628, 629, 630, 631, 634, 637, 639, 648, 649, 663, 664, 665, 666, 669, 671, 672, 675, 677, 695, 696, 728, 731, 734, 737, 748, 764, 766, 776, 783, 806, 807, 811, 823, 827, 828, 833, 835, 837, 840, 843, 845, 846, 856, 859, 868, 870, 880], "pial": [5, 115, 124, 136, 137, 156, 161, 182, 262, 277, 544, 623, 695, 748, 764, 776, 880], "set_3d_view": [5, 24, 52, 81, 109, 115, 118, 124, 125, 137, 157, 158, 159, 160, 161, 171, 179, 184, 870, 880], "azimuth": [5, 24, 79, 81, 109, 115, 116, 118, 124, 125, 135, 136, 137, 157, 158, 159, 161, 171, 179, 182, 184, 191, 211, 223, 748, 816, 880], "elev": [5, 24, 79, 81, 109, 115, 116, 118, 124, 125, 135, 136, 137, 157, 158, 159, 161, 171, 182, 184, 191, 199, 206, 211, 223, 748, 816, 880], "distanc": [5, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 80, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 116, 124, 128, 131, 135, 136, 137, 144, 157, 158, 159, 160, 161, 162, 167, 171, 173, 177, 178, 179, 180, 182, 184, 191, 192, 196, 202, 209, 211, 222, 223, 234, 236, 256, 261, 264, 265, 266, 267, 269, 270, 273, 274, 275, 277, 282, 304, 344, 365, 410, 413, 414, 417, 420, 429, 431, 453, 462, 468, 469, 478, 479, 511, 521, 540, 557, 558, 562, 566, 569, 572, 577, 588, 593, 594, 640, 648, 649, 657, 660, 663, 665, 666, 668, 670, 671, 672, 674, 675, 687, 688, 690, 691, 695, 700, 702, 704, 748, 765, 768, 780, 787, 791, 800, 803, 808, 810, 816, 835, 862, 865, 880], "focalpoint": [5, 24, 52, 109, 116, 124, 135, 136, 157, 158, 159, 160, 161, 179, 223, 748, 816, 880], "04": [5, 13, 19, 24, 31, 33, 34, 35, 41, 42, 49, 50, 56, 70, 71, 73, 84, 85, 90, 93, 95, 100, 103, 106, 108, 121, 123, 124, 127, 130, 140, 142, 159, 163, 165, 178, 181, 184, 186, 200, 201, 209, 211, 225, 226, 227, 228, 230, 231, 236, 244, 388, 431, 517, 522, 558, 588, 657, 662, 842, 862], "load": [5, 7, 11, 13, 14, 24, 26, 28, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 68, 71, 75, 79, 80, 81, 82, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 117, 119, 120, 121, 123, 125, 127, 128, 135, 136, 143, 144, 146, 151, 152, 153, 157, 159, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 177, 178, 181, 182, 183, 184, 185, 189, 190, 192, 193, 196, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 216, 217, 218, 219, 226, 227, 228, 229, 230, 234, 235, 236, 239, 241, 256, 259, 260, 264, 265, 266, 267, 274, 313, 318, 322, 329, 359, 361, 375, 460, 461, 478, 479, 485, 497, 498, 505, 517, 520, 521, 536, 547, 558, 560, 570, 601, 611, 613, 617, 618, 620, 622, 628, 629, 631, 665, 698, 721, 722, 764, 778, 782, 786, 788, 795, 801, 827, 835, 856, 857, 865, 880], "three": [5, 31, 45, 79, 94, 103, 109, 120, 143, 146, 152, 157, 159, 160, 162, 169, 179, 183, 189, 190, 199, 200, 205, 206, 207, 215, 217, 218, 221, 226, 239, 241, 256, 258, 261, 262, 264, 265, 266, 267, 272, 273, 278, 280, 297, 298, 307, 308, 309, 324, 410, 417, 468, 473, 478, 479, 515, 534, 535, 557, 558, 568, 572, 599, 631, 634, 649, 652, 681, 683, 700, 702, 704, 738, 748, 765, 776, 778, 780, 787, 789, 791, 799, 800, 801, 803, 808, 810, 828, 833, 839, 856, 859, 862, 865, 880], "layer": [5, 45, 109, 159, 160, 183, 184, 185, 186, 200, 244, 307, 386, 515, 522, 649, 657, 662, 764, 855, 862, 880], "model": [5, 7, 11, 12, 13, 18, 22, 26, 31, 32, 36, 41, 42, 50, 56, 73, 101, 105, 106, 109, 113, 116, 121, 136, 142, 152, 156, 157, 160, 161, 162, 163, 165, 171, 172, 173, 176, 177, 183, 184, 185, 186, 191, 192, 196, 204, 205, 223, 230, 244, 250, 261, 262, 264, 266, 267, 268, 269, 272, 274, 275, 277, 278, 279, 280, 297, 298, 302, 304, 307, 309, 341, 354, 360, 364, 372, 410, 414, 416, 417, 420, 422, 427, 428, 451, 453, 469, 473, 478, 483, 515, 516, 520, 521, 522, 524, 525, 526, 527, 536, 555, 557, 567, 584, 598, 607, 609, 610, 620, 626, 635, 641, 648, 649, 657, 662, 686, 713, 742, 748, 764, 766, 788, 803, 816, 822, 827, 835, 840, 843, 845, 846, 856, 859, 865, 870, 880], "colloc": [5, 26, 41, 45, 50, 109, 159, 160, 177, 183, 516, 880], "patch": [5, 11, 22, 28, 29, 31, 34, 35, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 127, 131, 157, 159, 161, 167, 173, 178, 179, 180, 182, 183, 192, 196, 222, 223, 234, 236, 256, 261, 264, 265, 266, 267, 272, 273, 277, 278, 280, 282, 284, 285, 364, 410, 417, 478, 479, 525, 526, 527, 528, 529, 532, 536, 541, 542, 557, 558, 572, 608, 630, 648, 664, 665, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 865, 880], "statist": [5, 10, 11, 22, 28, 29, 31, 35, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 87, 88, 90, 92, 93, 94, 95, 96, 97, 101, 103, 104, 107, 108, 110, 113, 124, 131, 150, 152, 156, 157, 159, 161, 163, 167, 173, 178, 179, 180, 182, 183, 192, 196, 202, 205, 206, 222, 223, 233, 244, 256, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 284, 285, 297, 298, 318, 322, 324, 329, 353, 354, 360, 364, 451, 478, 479, 525, 526, 527, 528, 529, 532, 536, 541, 542, 555, 558, 608, 611, 615, 630, 635, 660, 664, 665, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 700, 702, 703, 704, 730, 780, 784, 787, 808, 835, 846, 857, 859, 870, 880], "3523": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 68, 90, 92, 93, 94, 95, 131, 173, 178, 179, 180, 181, 192, 196, 222, 223], "8196": [5, 183, 192], "free": [5, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 68, 81, 90, 92, 93, 94, 95, 109, 131, 141, 152, 159, 160, 167, 173, 177, 178, 179, 181, 183, 192, 196, 208, 210, 222, 223, 227, 231, 244, 262, 264, 265, 268, 297, 298, 299, 374, 453, 454, 455, 473, 475, 476, 525, 526, 527, 528, 529, 532, 536, 540, 541, 542, 567, 620, 641, 645, 687, 688, 690, 691, 827, 839, 843, 845, 846, 855, 861, 862, 868, 880], "frame": [5, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 79, 80, 90, 92, 93, 94, 95, 104, 107, 108, 110, 112, 124, 131, 135, 136, 137, 141, 152, 160, 164, 165, 166, 167, 171, 173, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 196, 210, 212, 222, 223, 234, 236, 256, 262, 264, 265, 266, 267, 268, 269, 277, 302, 303, 312, 316, 325, 330, 367, 389, 429, 469, 472, 478, 479, 482, 489, 508, 510, 517, 522, 569, 577, 588, 630, 631, 633, 647, 649, 723, 735, 743, 745, 748, 764, 776, 816, 835, 856, 861, 862, 865, 880], "normal": [5, 11, 15, 16, 18, 22, 24, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 60, 68, 70, 90, 92, 94, 104, 107, 108, 109, 110, 113, 114, 115, 116, 137, 138, 143, 144, 156, 157, 158, 159, 161, 162, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 196, 206, 207, 210, 221, 222, 223, 234, 236, 240, 241, 244, 255, 257, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 278, 279, 280, 284, 285, 297, 298, 313, 321, 358, 364, 410, 412, 415, 417, 444, 453, 473, 475, 476, 478, 479, 497, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 541, 542, 557, 558, 568, 584, 613, 617, 649, 653, 664, 665, 682, 700, 702, 704, 712, 716, 718, 726, 749, 765, 780, 787, 791, 799, 800, 803, 808, 810, 835, 839, 845, 861, 865, 880], "emploi": [5, 11, 22, 26, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 68, 90, 92, 94, 109, 159, 160, 177, 178, 179, 180, 183, 189, 190, 192, 196, 223, 241, 557, 681, 855, 856, 861, 862, 865], "rotat": [5, 10, 15, 19, 22, 34, 35, 40, 41, 42, 44, 46, 47, 48, 49, 54, 55, 58, 59, 68, 80, 90, 92, 94, 109, 135, 157, 159, 173, 178, 179, 180, 181, 183, 192, 195, 196, 202, 204, 223, 256, 266, 267, 269, 297, 298, 350, 365, 369, 431, 469, 562, 568, 588, 738, 739, 741, 748, 764, 783, 837, 845, 862, 880], "convert": [5, 22, 27, 34, 35, 40, 41, 42, 46, 47, 48, 49, 54, 55, 58, 59, 67, 68, 75, 79, 90, 92, 94, 109, 112, 122, 130, 135, 137, 138, 141, 142, 143, 144, 145, 150, 151, 152, 157, 159, 161, 162, 170, 172, 178, 179, 180, 183, 189, 190, 191, 192, 196, 201, 202, 206, 215, 217, 222, 223, 227, 231, 234, 235, 236, 240, 258, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 278, 279, 280, 283, 290, 303, 312, 313, 338, 350, 364, 366, 412, 416, 421, 422, 425, 439, 446, 448, 449, 466, 471, 472, 474, 478, 479, 489, 498, 502, 513, 520, 590, 591, 700, 702, 703, 704, 716, 726, 739, 741, 747, 749, 752, 764, 816, 818, 839, 840, 843, 846, 856, 862, 880], "helmet": [5, 7, 27, 45, 80, 81, 109, 116, 122, 123, 130, 138, 151, 157, 159, 171, 173, 184, 185, 186, 189, 266, 267, 269, 461, 517, 524, 539, 618, 748, 757, 764, 783, 816, 862, 880], "unknown": [5, 46, 71, 73, 76, 83, 90, 93, 109, 127, 142, 147, 152, 168, 169, 170, 182, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 223, 269, 325, 330, 473, 478, 479, 486, 493, 508, 510, 735, 801, 821, 830, 862, 865, 880], "deriv": [5, 32, 33, 34, 46, 71, 109, 123, 126, 141, 145, 150, 157, 169, 200, 226, 227, 239, 244, 269, 365, 558, 595, 620, 827, 862, 865, 880], "subset": [5, 45, 112, 141, 143, 145, 147, 152, 159, 161, 173, 176, 207, 208, 212, 217, 226, 239, 259, 264, 265, 266, 267, 270, 274, 284, 285, 297, 298, 354, 358, 359, 369, 370, 371, 402, 410, 413, 417, 420, 434, 448, 453, 454, 467, 473, 475, 476, 478, 479, 536, 558, 673, 676, 700, 701, 702, 703, 704, 748, 778, 788, 801, 861, 862, 868, 880], "dip_opm": 5, "_": [5, 8, 9, 19, 37, 38, 45, 50, 60, 67, 112, 135, 138, 147, 152, 161, 162, 173, 179, 181, 192, 195, 202, 205, 207, 212, 215, 222, 226, 227, 230, 231, 240, 241, 303, 558, 569, 603, 716, 726, 839, 862, 880], "fit_dipol": [5, 45, 84, 177, 182, 184, 185, 186, 262, 263, 300, 610, 862, 870, 880], "040": [5, 81, 113, 121, 141, 150, 163, 170, 209, 223, 244, 266, 267, 354, 859], "080": [5, 38, 81, 90, 91, 186, 209, 227], "idx": [5, 31, 35, 40, 47, 59, 63, 67, 84, 114, 133, 151, 182, 192, 199, 203, 207, 222, 234, 258, 262, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 311, 477, 478, 479, 534, 535, 703, 776, 880], "argmax": [5, 35, 38, 40, 48, 50, 58, 59, 119, 177, 182, 195], "gof": [5, 40, 116, 170, 177, 179, 184, 185, 186, 262, 264, 265, 266, 267, 300, 311, 342, 344, 345, 346, 478, 479, 555, 700, 702, 703, 704, 776, 880], "1f": [5, 30, 40, 47, 76, 100, 109, 114, 157, 177, 184, 185, 192, 196, 202, 222, 226, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 702, 704, 780, 787, 800], "1000": [5, 40, 48, 70, 81, 84, 96, 113, 114, 128, 135, 147, 157, 158, 160, 161, 177, 182, 183, 184, 185, 192, 202, 203, 207, 215, 221, 227, 231, 234, 235, 236, 439, 445, 447, 451, 478, 479, 558, 622, 687, 688, 690, 691, 716, 726, 748, 835, 880], "n20m": 5, "plot_loc": [5, 177, 182, 262, 880], "orthoview": [5, 35, 40, 59, 135, 161, 177, 262, 776, 880], "conductormodel": [5, 45, 109, 159, 184, 185, 186, 261, 264, 265, 266, 267, 273, 304, 312, 410, 417, 453, 478, 479, 515, 516, 522, 557, 558, 572, 607, 649, 700, 702, 704, 764, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 822, 835, 870], "solver": [5, 10, 11, 13, 15, 18, 27, 36, 40, 45, 46, 56, 59, 176, 196, 261, 262, 266, 268, 269, 275, 453, 454, 475, 516, 540, 609, 618, 620, 686, 807, 843, 848, 868, 880], "instanc": [5, 15, 26, 31, 43, 44, 45, 50, 74, 83, 88, 109, 114, 159, 160, 167, 170, 172, 173, 177, 179, 183, 184, 186, 189, 190, 192, 204, 205, 206, 208, 210, 215, 221, 239, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 312, 313, 314, 316, 317, 319, 325, 328, 330, 331, 333, 334, 335, 336, 337, 338, 341, 343, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 369, 370, 371, 373, 377, 378, 379, 381, 382, 383, 385, 390, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 439, 440, 441, 442, 443, 444, 445, 451, 453, 454, 455, 456, 457, 464, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 513, 514, 516, 517, 518, 519, 520, 521, 522, 525, 526, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545, 547, 550, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 595, 596, 600, 601, 602, 603, 605, 606, 607, 610, 611, 612, 613, 614, 617, 620, 622, 629, 632, 641, 642, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 685, 686, 687, 688, 689, 690, 691, 692, 695, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 717, 720, 721, 736, 737, 738, 740, 745, 748, 749, 750, 751, 757, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 818, 822, 826, 830, 832, 839, 857, 880], "36": [5, 13, 19, 28, 34, 35, 42, 45, 47, 79, 81, 83, 103, 108, 112, 114, 145, 170, 172, 182, 188, 195, 196, 207, 209, 214, 226, 227, 228, 230, 231, 235, 236, 241, 244, 264, 265, 266, 267, 402, 478, 479, 597, 880], "rad": [5, 45, 177, 182, 184, 185, 186, 649, 835], "77": [5, 11, 13, 19, 35, 81, 82, 96, 108, 109, 112, 114, 157, 158, 169, 170, 182, 192, 195, 196, 207, 208, 209, 217, 226, 227, 230, 231, 234, 239, 335, 880], "guess": [5, 45, 123, 177, 182, 184, 185, 186, 205, 209, 256, 469, 489, 761, 880], "grid": [5, 24, 40, 41, 45, 50, 113, 115, 123, 127, 136, 156, 157, 159, 177, 179, 181, 182, 184, 185, 186, 195, 196, 208, 209, 212, 226, 228, 256, 274, 276, 277, 327, 475, 558, 584, 649, 701, 774, 791, 794, 855, 856, 862, 880], "n_sampl": [5, 45, 53, 64, 97, 138, 184, 185, 186, 196, 221, 226, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 427, 452, 559, 586, 650, 679, 686, 689, 839], "10250": 5, "65975931e": 5, "41596252e": 5, "50067005e": 5, "18042429e": 5, "93613735e": 5, "88258373e": 5, "73325418e": 5, "23906800e": 5, "47917983e": 5, "14619592e": 5, "36697422e": 5, "53163548e": 5, "08794660e": 5, "00286749e": 5, "18143308e": 5, "22829671e": 5, "93976860e": 5, "28130683e": 5, "86574659e": 5, "28436459e": 5, "91104392e": 5, "54318851e": 5, "60478446e": 5, "18114621e": 5, "42024459e": 5, "20931076e": 5, "52605668e": 5, "29661483e": 5, "53868159e": 5, "40025250e": 5, "28102479e": 5, "49204692e": 5, "41942628e": 5, "29095862e": 5, "00102289e": 5, "19639173e": 5, "09222979e": 5, "25564394e": 5, "49616938e": 5, "35015052e": 5, "94284541e": 5, "29140004e": 5, "85113742e": 5, "46141046e": 5, "97190359e": 5, "ra": [5, 24, 26, 41, 43, 45, 50, 79, 109, 135, 136, 157, 159, 160, 162, 177, 181, 182, 184, 185, 186, 208, 262, 271, 272, 275, 277, 278, 279, 280, 312, 325, 365, 444, 472, 510, 583, 620, 735, 737, 740, 748, 827, 835, 856, 862, 880], "000000": [5, 24, 26, 41, 45, 50, 109, 144, 145, 157, 159, 160, 177, 181, 182, 183, 184, 185, 186, 208, 229, 231, 235, 236, 241], "999800": [5, 109], "015800": [5, 109], "009200": [5, 109], "018100": [5, 109], "930500": [5, 109], "365900": [5, 109], "002800": [5, 109], "366000": [5, 109], "930600": [5, 109], "40": [5, 9, 10, 12, 13, 19, 21, 28, 33, 35, 40, 45, 46, 47, 58, 59, 68, 73, 75, 79, 80, 81, 84, 90, 100, 103, 104, 108, 109, 114, 121, 124, 135, 137, 141, 142, 145, 146, 152, 156, 157, 159, 161, 167, 170, 172, 182, 184, 185, 192, 195, 196, 201, 202, 204, 205, 209, 210, 211, 215, 226, 227, 228, 230, 231, 234, 235, 236, 240, 244, 264, 265, 274, 431, 445, 478, 479, 487, 558, 570, 577, 578, 581, 652, 752, 778, 796, 801, 815, 856, 862, 880], "105": [5, 24, 26, 35, 41, 45, 50, 94, 109, 114, 136, 138, 157, 159, 170, 177, 182, 184, 185, 186, 206, 208, 209, 231, 865], "decompos": [5, 8, 45, 177, 182, 184, 185, 186, 205, 410, 414, 417, 558, 559, 730, 862, 880], "eigenvalu": [5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 90, 93, 94, 104, 107, 108, 109, 110, 121, 153, 163, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 222, 223, 234, 236, 261, 410, 712, 862, 865], "without": [5, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 70, 75, 79, 90, 93, 94, 104, 107, 109, 113, 120, 121, 127, 135, 145, 150, 151, 152, 153, 160, 162, 163, 166, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 200, 201, 202, 204, 205, 206, 207, 208, 210, 217, 222, 223, 226, 241, 256, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 291, 292, 295, 297, 298, 325, 326, 354, 358, 359, 369, 370, 371, 372, 410, 417, 440, 441, 442, 443, 451, 453, 454, 473, 475, 476, 478, 479, 486, 493, 497, 498, 518, 527, 529, 532, 536, 551, 577, 595, 611, 613, 617, 618, 635, 694, 701, 738, 748, 788, 806, 811, 818, 837, 839, 843, 847, 855, 857, 859, 861, 862, 880], "whiten": [5, 7, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 90, 93, 94, 104, 105, 106, 107, 108, 109, 110, 113, 122, 130, 150, 154, 155, 163, 166, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 205, 222, 223, 234, 236, 244, 256, 261, 264, 265, 266, 267, 269, 274, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 451, 453, 454, 473, 475, 476, 478, 479, 533, 536, 555, 558, 559, 586, 615, 626, 713, 778, 782, 786, 788, 801, 805, 835, 859, 880], "omit": [5, 12, 21, 24, 26, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 78, 81, 87, 90, 93, 94, 104, 107, 108, 109, 110, 119, 121, 124, 151, 153, 157, 159, 163, 167, 169, 170, 172, 173, 177, 178, 179, 180, 182, 183, 184, 185, 186, 192, 196, 200, 208, 210, 222, 223, 234, 236, 258, 264, 265, 266, 267, 274, 416, 478, 479, 513, 558, 578, 579, 589, 606, 618, 657, 662, 704, 738, 764, 766, 782, 787, 793, 802, 839, 865, 880], "inner": [5, 26, 31, 41, 43, 45, 50, 109, 129, 156, 159, 161, 162, 177, 182, 183, 192, 244, 256, 264, 265, 268, 304, 307, 453, 469, 521, 588, 649, 665, 748, 835, 840, 843, 846, 855, 856, 859, 862, 865, 880], "skull": [5, 26, 41, 43, 45, 50, 109, 113, 135, 156, 157, 159, 161, 162, 171, 177, 182, 183, 192, 244, 256, 268, 277, 304, 307, 453, 521, 522, 584, 649, 657, 662, 665, 748, 764, 835, 840, 843, 846, 855, 856, 859, 862, 865, 880], "cm": [5, 9, 15, 24, 41, 45, 50, 90, 116, 123, 143, 146, 157, 159, 167, 171, 177, 182, 184, 185, 186, 190, 201, 207, 208, 209, 210, 211, 228, 240, 256, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 335, 337, 339, 478, 479, 486, 514, 577, 779, 782, 784, 809, 835, 880], "35": [5, 11, 12, 13, 19, 21, 28, 34, 35, 45, 47, 79, 81, 103, 104, 108, 109, 112, 114, 137, 144, 146, 147, 150, 159, 160, 161, 165, 170, 172, 185, 186, 196, 206, 207, 209, 211, 226, 227, 228, 230, 231, 235, 236, 240, 244, 256, 475, 525, 570, 571, 578, 581, 752, 862], "insid": [5, 16, 24, 26, 41, 45, 50, 109, 141, 150, 157, 159, 160, 161, 162, 177, 182, 183, 184, 185, 186, 203, 208, 210, 215, 230, 236, 270, 274, 275, 278, 279, 280, 292, 338, 393, 434, 462, 469, 478, 479, 507, 529, 585, 748, 801, 839, 855, 859, 862, 880], "sphere": [5, 24, 26, 35, 41, 43, 45, 48, 50, 59, 67, 71, 84, 93, 94, 109, 120, 123, 125, 136, 157, 159, 160, 161, 177, 179, 182, 183, 184, 185, 186, 190, 200, 208, 209, 210, 244, 256, 261, 262, 264, 265, 266, 267, 270, 273, 275, 297, 298, 302, 305, 306, 312, 360, 409, 410, 417, 453, 478, 479, 490, 517, 520, 521, 522, 557, 558, 567, 572, 649, 663, 666, 700, 702, 704, 748, 764, 765, 772, 776, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 807, 808, 810, 818, 835, 880], "102": [5, 11, 13, 14, 15, 16, 18, 22, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 68, 69, 71, 72, 73, 76, 78, 80, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 141, 142, 143, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 215, 216, 217, 218, 222, 223, 226, 228, 229, 230, 231, 234, 236, 256, 865], "extent": [5, 13, 16, 24, 41, 45, 47, 50, 55, 70, 90, 95, 107, 141, 157, 159, 177, 182, 184, 185, 186, 196, 207, 208, 228, 229, 230, 231, 234, 235, 236, 244, 264, 265, 433, 468, 511, 540, 660, 690, 691, 861, 862, 880], "73": [5, 13, 15, 19, 33, 34, 35, 40, 45, 80, 81, 91, 93, 96, 107, 108, 112, 114, 121, 128, 146, 150, 170, 177, 183, 195, 209, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 719], "y": [5, 9, 10, 11, 12, 13, 16, 18, 19, 24, 41, 45, 47, 50, 67, 70, 71, 80, 82, 90, 112, 114, 115, 120, 137, 146, 152, 157, 159, 161, 162, 171, 173, 176, 177, 181, 182, 184, 185, 186, 195, 196, 199, 202, 203, 206, 208, 215, 216, 217, 218, 226, 236, 241, 258, 261, 262, 264, 265, 266, 267, 269, 272, 273, 278, 280, 288, 302, 305, 306, 312, 313, 335, 344, 345, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 450, 478, 479, 490, 524, 525, 557, 558, 559, 567, 572, 620, 653, 686, 700, 702, 704, 735, 738, 739, 741, 748, 749, 752, 765, 772, 776, 779, 780, 781, 782, 784, 786, 787, 788, 789, 790, 791, 796, 798, 800, 802, 803, 804, 808, 809, 810, 816, 827, 835, 837, 862, 880], "42": [5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 28, 29, 35, 42, 45, 47, 49, 55, 56, 68, 69, 71, 72, 73, 76, 80, 81, 83, 88, 90, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 114, 117, 118, 121, 123, 127, 132, 133, 138, 142, 147, 152, 153, 157, 163, 167, 168, 169, 170, 173, 176, 177, 178, 181, 182, 183, 185, 188, 195, 196, 199, 202, 203, 204, 205, 206, 207, 208, 209, 215, 218, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 244, 269, 525, 540, 660], "108": [5, 16, 35, 81, 82, 113, 114, 121, 135, 163, 170, 192, 196, 226, 230, 231, 244, 266, 267, 354, 788, 859], "80": [5, 9, 13, 16, 19, 30, 31, 33, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 78, 80, 81, 86, 87, 90, 94, 104, 108, 112, 114, 115, 116, 118, 119, 120, 125, 127, 150, 152, 157, 159, 169, 170, 172, 173, 177, 179, 180, 182, 184, 185, 186, 192, 195, 196, 207, 209, 210, 211, 226, 227, 228, 230, 231, 236, 244, 409, 558, 652, 789, 796, 845, 880], "1080": [5, 10, 195, 244, 416], "543": [5, 40, 196, 209, 231], "after": [5, 8, 11, 16, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 68, 81, 88, 90, 92, 94, 101, 103, 109, 127, 131, 135, 137, 138, 141, 142, 143, 145, 146, 147, 150, 151, 152, 156, 157, 159, 162, 167, 168, 169, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 217, 222, 223, 226, 228, 229, 234, 239, 241, 256, 257, 258, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 287, 297, 298, 341, 354, 358, 359, 361, 363, 369, 370, 371, 385, 410, 412, 416, 417, 421, 423, 424, 428, 434, 451, 452, 453, 454, 473, 475, 476, 478, 479, 536, 557, 558, 561, 569, 570, 571, 574, 575, 577, 578, 579, 581, 586, 589, 618, 620, 642, 661, 700, 725, 727, 728, 730, 731, 736, 748, 764, 772, 778, 782, 784, 786, 787, 788, 791, 792, 795, 799, 801, 812, 827, 835, 839, 847, 855, 856, 859, 861, 862, 865, 868, 880], "infeas": [5, 24, 41, 45, 50, 157, 159, 177, 182, 184, 185, 186, 208], "least": [5, 41, 45, 70, 84, 114, 142, 159, 160, 177, 182, 201, 202, 203, 205, 206, 210, 226, 231, 244, 264, 265, 266, 267, 274, 412, 421, 425, 427, 446, 448, 449, 467, 478, 479, 558, 560, 561, 576, 577, 588, 685, 748, 778, 801, 845, 855, 859, 861, 862, 880], "awai": [5, 41, 45, 135, 142, 145, 159, 160, 177, 182, 184, 189, 201, 206, 208, 212, 365, 490, 558, 583, 584, 653, 695, 728, 731, 748, 842, 862, 865, 880], "few": [5, 21, 26, 41, 44, 45, 50, 70, 94, 101, 109, 136, 145, 146, 150, 156, 157, 158, 159, 160, 162, 163, 168, 172, 173, 177, 182, 183, 199, 200, 201, 202, 204, 205, 207, 208, 209, 215, 218, 227, 231, 236, 239, 241, 269, 431, 568, 569, 577, 588, 835, 839, 847, 857, 859, 862, 864, 880], "interior": [5, 26, 41, 45, 50, 109, 159, 160, 177, 182, 183, 210], "statu": [5, 26, 41, 45, 50, 109, 159, 160, 177, 182, 183, 189, 264, 265, 266, 267, 269, 341, 363, 365, 478, 479, 486, 493, 500, 555, 700, 702, 703, 704, 748, 835, 839, 862, 865, 880], "70": [5, 9, 12, 13, 15, 19, 21, 34, 41, 45, 46, 47, 58, 59, 81, 88, 90, 103, 104, 108, 109, 112, 114, 116, 135, 137, 141, 144, 145, 157, 159, 160, 167, 170, 171, 184, 185, 195, 196, 202, 205, 209, 211, 226, 227, 229, 230, 231, 234, 239, 241, 244, 264, 265, 266, 267, 335, 476, 478, 479, 558, 702, 704, 716, 719, 726, 727, 730, 880], "outsid": [5, 16, 24, 26, 41, 45, 50, 109, 135, 136, 141, 145, 157, 159, 160, 162, 177, 182, 183, 184, 185, 186, 200, 202, 207, 208, 210, 215, 217, 258, 261, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 278, 279, 280, 292, 389, 410, 417, 452, 478, 479, 511, 529, 557, 558, 572, 574, 700, 702, 704, 736, 745, 748, 765, 766, 780, 787, 791, 800, 803, 806, 808, 810, 811, 861, 862, 863, 865, 880], "exterior": [5, 26, 41, 45, 50, 109, 159, 160, 177, 182, 183, 210], "284": [5, 13, 112, 170, 244, 410, 880], "473": [5, 114, 231, 277], "qhull": [5, 26, 41, 45, 50, 109, 159, 160, 177, 182, 183, 880], "189": [5, 13, 32, 33, 34, 46, 99, 112, 113, 170, 196, 226, 230, 231, 240, 244, 862], "solid": [5, 26, 41, 45, 50, 109, 151, 159, 160, 162, 177, 182, 183, 207, 772, 799, 862], "angl": [5, 26, 41, 45, 50, 109, 118, 131, 159, 160, 162, 170, 171, 173, 177, 182, 183, 184, 256, 269, 303, 307, 586, 641, 748, 753, 816, 862, 880], "244": [5, 112, 170, 196, 209, 230, 231], "complet": [5, 7, 9, 26, 32, 33, 34, 41, 45, 50, 109, 135, 145, 151, 156, 159, 160, 162, 170, 177, 181, 182, 183, 200, 202, 205, 208, 223, 226, 244, 256, 264, 265, 277, 303, 509, 558, 587, 601, 697, 744, 748, 756, 763, 839, 846, 855, 856, 857, 859, 862, 864, 865, 880], "207": [5, 35, 112, 114, 159, 170, 196, 209, 222, 225, 230, 231, 244], "limit": [5, 31, 34, 40, 41, 42, 45, 50, 58, 59, 90, 94, 109, 113, 114, 127, 136, 138, 142, 143, 159, 166, 167, 169, 177, 178, 180, 182, 183, 190, 192, 196, 200, 202, 205, 210, 215, 223, 231, 241, 244, 258, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 278, 279, 280, 282, 410, 417, 436, 443, 454, 475, 478, 479, 497, 557, 558, 562, 577, 588, 613, 617, 622, 628, 678, 684, 686, 700, 702, 703, 704, 763, 765, 767, 772, 779, 780, 782, 784, 786, 787, 789, 791, 796, 800, 803, 806, 808, 810, 811, 812, 829, 837, 839, 861, 862, 863, 865, 868, 880], "214": [5, 50, 112, 170, 175, 226, 230, 231], "through": [5, 9, 19, 27, 37, 45, 77, 85, 113, 135, 141, 142, 143, 145, 146, 150, 156, 157, 161, 166, 167, 169, 173, 177, 181, 182, 184, 185, 186, 195, 200, 202, 205, 206, 207, 210, 212, 215, 217, 218, 223, 234, 241, 244, 257, 262, 264, 265, 266, 267, 297, 324, 373, 451, 460, 469, 478, 510, 557, 558, 650, 712, 748, 770, 772, 776, 779, 781, 785, 793, 835, 837, 839, 846, 857, 861, 862, 868, 880], "0642": [5, 170], "3779": 5, "18": [5, 9, 11, 13, 19, 28, 31, 33, 34, 35, 40, 45, 47, 50, 56, 58, 59, 64, 71, 81, 82, 83, 85, 90, 91, 93, 95, 103, 108, 109, 110, 112, 114, 127, 130, 134, 141, 146, 161, 168, 169, 170, 172, 173, 175, 177, 178, 180, 181, 182, 184, 185, 188, 192, 196, 199, 200, 203, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 223, 226, 227, 228, 230, 231, 234, 235, 236, 239, 243, 244, 264, 265, 266, 267, 277, 279, 280, 284, 285, 293, 298, 307, 309, 354, 355, 356, 357, 358, 359, 369, 370, 371, 386, 394, 402, 416, 422, 439, 454, 457, 458, 469, 473, 475, 476, 478, 479, 498, 511, 513, 519, 544, 549, 551, 558, 570, 571, 578, 648, 651, 652, 654, 665, 667, 700, 703, 765, 778, 787, 789, 801, 807, 810, 812, 837, 842, 862], "7678": [5, 19], "6600": 5, "0647": 5, "11": [5, 9, 10, 11, 13, 16, 19, 28, 33, 34, 35, 45, 47, 49, 64, 70, 73, 74, 80, 81, 83, 85, 90, 91, 96, 100, 101, 103, 108, 109, 110, 112, 114, 120, 121, 123, 127, 130, 138, 142, 146, 149, 158, 162, 163, 165, 167, 169, 170, 171, 172, 173, 175, 177, 180, 181, 182, 183, 184, 192, 195, 196, 199, 202, 204, 209, 210, 211, 215, 218, 220, 221, 222, 226, 227, 228, 230, 231, 233, 236, 241, 244, 255, 264, 265, 274, 277, 335, 368, 380, 431, 467, 478, 479, 489, 491, 494, 495, 517, 536, 558, 586, 588, 592, 612, 657, 660, 662, 686, 700, 778, 801, 838, 845, 855, 862], "99": [5, 15, 19, 26, 35, 47, 49, 69, 70, 79, 81, 82, 90, 93, 103, 104, 108, 109, 112, 114, 120, 121, 138, 152, 153, 158, 161, 163, 170, 173, 178, 180, 181, 182, 185, 192, 195, 196, 207, 209, 217, 222, 223, 226, 227, 229, 230, 231, 244, 264, 265, 274, 478, 479, 778, 801, 862, 880], "leakag": [5, 27, 36, 45, 56, 275, 277, 364, 535, 537, 539, 620, 623, 728, 731, 748, 753], "constrain": [5, 109, 145, 167, 176, 179, 180, 181, 206, 244, 259, 264, 265, 293, 294, 295, 296, 297, 298, 360, 574, 835, 840, 846, 859, 862, 865, 880], "idea": [5, 7, 21, 27, 113, 156, 172, 176, 178, 202, 204, 205, 206, 207, 234, 236, 241, 244, 264, 265, 308, 433, 858, 859, 862, 863, 868], "inverse_oper": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 47, 48, 54, 59, 90, 104, 107, 108, 109, 110, 173, 178, 234, 236, 274, 525, 526, 527, 528, 529, 531, 532, 537, 541, 542], "minimum_norm": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 90, 94, 104, 107, 108, 109, 110, 124, 167, 178, 179, 180, 182, 183, 192, 196, 206, 222, 223, 234, 236, 835, 848, 855, 862, 870, 880], "make_inverse_oper": [5, 7, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 178, 179, 180, 183, 192, 196, 223, 539, 855, 862, 870, 880], "loos": [5, 7, 31, 34, 35, 40, 41, 42, 46, 48, 54, 55, 59, 60, 90, 94, 109, 145, 178, 180, 183, 192, 196, 223, 454, 455, 473, 475, 476, 525, 526, 527, 528, 529, 531, 532, 536, 540, 541, 542, 855, 862, 865, 880], "depth": [5, 7, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 90, 94, 104, 107, 108, 109, 110, 124, 167, 173, 178, 179, 180, 182, 183, 192, 196, 218, 222, 223, 234, 236, 244, 262, 297, 298, 454, 473, 475, 476, 536, 657, 662, 668, 865, 868, 880], "snr": [5, 7, 10, 11, 19, 21, 27, 28, 29, 30, 36, 38, 39, 41, 48, 54, 55, 56, 60, 88, 90, 104, 109, 167, 178, 180, 182, 185, 192, 202, 222, 223, 234, 236, 261, 266, 268, 269, 275, 343, 454, 524, 525, 533, 536, 538, 539, 609, 618, 620, 664, 748, 771, 805, 855, 862, 868, 880], "lambda2": [5, 7, 11, 28, 29, 30, 38, 39, 40, 41, 45, 47, 48, 50, 54, 55, 58, 59, 60, 71, 90, 94, 104, 108, 109, 157, 167, 178, 180, 182, 184, 185, 186, 192, 208, 222, 234, 236, 525, 526, 527, 528, 529, 531, 532, 537, 538, 541, 542, 567, 855], "stc": [5, 7, 11, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 56, 58, 59, 60, 68, 92, 93, 94, 95, 104, 108, 109, 110, 116, 127, 134, 136, 137, 159, 166, 167, 173, 177, 178, 179, 180, 181, 183, 187, 188, 196, 223, 235, 262, 266, 271, 272, 274, 275, 276, 277, 278, 279, 280, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 360, 444, 453, 457, 463, 473, 474, 475, 476, 513, 520, 524, 525, 526, 527, 528, 529, 532, 534, 535, 539, 541, 618, 628, 641, 650, 664, 665, 666, 667, 692, 695, 696, 748, 806, 807, 811, 812, 835, 855, 875, 880], "apply_invers": [5, 7, 28, 30, 38, 39, 40, 41, 44, 45, 58, 59, 60, 90, 94, 167, 178, 179, 180, 182, 183, 192, 196, 206, 222, 223, 234, 236, 526, 527, 528, 529, 531, 532, 538, 541, 542, 835, 855, 862, 870, 880], "pick_ori": [5, 7, 11, 28, 29, 32, 33, 34, 38, 39, 41, 49, 60, 90, 108, 178, 179, 181, 182, 223, 297, 298, 473, 475, 476, 525, 526, 527, 528, 529, 531, 532, 541, 542, 880], "hemi": [5, 7, 11, 26, 32, 33, 34, 38, 41, 43, 47, 48, 49, 50, 58, 60, 67, 94, 104, 109, 116, 127, 131, 134, 137, 156, 161, 167, 176, 178, 179, 180, 181, 182, 192, 196, 222, 223, 234, 235, 236, 270, 271, 272, 275, 278, 279, 280, 282, 468, 605, 623, 747, 748, 806, 811, 830, 880], "rh": [5, 24, 26, 34, 37, 38, 41, 43, 47, 59, 68, 90, 92, 94, 95, 107, 109, 116, 131, 137, 156, 159, 160, 161, 176, 178, 222, 223, 260, 270, 271, 272, 275, 278, 279, 280, 466, 511, 605, 623, 628, 748, 806, 811, 830, 862], "view": [5, 7, 11, 26, 28, 29, 31, 32, 33, 35, 40, 43, 47, 50, 53, 58, 59, 69, 79, 94, 95, 100, 104, 107, 108, 109, 113, 115, 118, 127, 136, 137, 141, 143, 151, 152, 153, 159, 160, 161, 167, 170, 171, 173, 176, 178, 181, 182, 190, 191, 192, 196, 205, 207, 217, 218, 222, 223, 231, 234, 235, 236, 244, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 288, 302, 309, 478, 479, 524, 635, 735, 748, 776, 778, 801, 806, 809, 811, 816, 818, 835, 855, 859, 861, 862, 868, 880], "lat": [5, 11, 26, 58, 94, 104, 127, 137, 152, 161, 167, 196, 222, 236, 748], "initial_tim": [5, 7, 11, 32, 41, 43, 58, 59, 60, 94, 104, 127, 134, 167, 176, 178, 179, 180, 181, 182, 183, 192, 196, 222, 271, 272, 275, 278, 279, 280, 748, 806, 811, 812], "clim": [5, 7, 10, 22, 26, 42, 43, 47, 49, 54, 55, 58, 59, 104, 109, 127, 131, 136, 137, 147, 176, 178, 180, 181, 182, 211, 222, 234, 235, 236, 266, 267, 271, 272, 275, 278, 279, 280, 748, 767, 784, 806, 811, 812, 880], "percent": [5, 26, 42, 107, 109, 112, 180, 228, 231, 271, 272, 275, 278, 279, 280, 287, 541, 542, 558, 656, 657, 658, 659, 660, 662, 700, 703, 767, 793, 806, 808, 811, 812, 880], "lim": [5, 7, 22, 26, 42, 43, 49, 54, 55, 58, 59, 104, 109, 127, 131, 136, 137, 176, 178, 180, 181, 182, 235, 236, 271, 272, 275, 278, 279, 280, 767, 806, 811, 812], "400": [5, 7, 13, 19, 40, 44, 75, 81, 92, 111, 127, 131, 136, 142, 143, 145, 147, 152, 157, 161, 172, 173, 177, 179, 182, 206, 207, 209, 211, 228, 231, 469], "background": [5, 21, 43, 116, 126, 127, 135, 136, 143, 152, 161, 166, 167, 173, 205, 207, 211, 213, 214, 215, 217, 218, 244, 262, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 355, 356, 357, 410, 445, 446, 448, 478, 479, 498, 525, 563, 570, 571, 583, 626, 645, 700, 702, 704, 716, 748, 751, 757, 764, 776, 782, 786, 789, 796, 801, 806, 807, 809, 811, 812, 820, 831, 855, 861, 880], "w": [5, 21, 32, 33, 39, 45, 60, 61, 73, 83, 103, 127, 132, 138, 143, 153, 157, 161, 162, 179, 183, 195, 196, 202, 211, 223, 226, 239, 244, 261, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 309, 321, 369, 410, 417, 478, 479, 525, 533, 536, 557, 558, 586, 628, 657, 662, 682, 700, 702, 703, 704, 716, 725, 726, 729, 732, 765, 780, 786, 787, 801, 803, 808, 809, 810, 862, 880], "invers": [5, 7, 11, 19, 21, 32, 33, 34, 38, 43, 44, 45, 46, 48, 50, 51, 54, 55, 56, 58, 59, 60, 88, 90, 105, 106, 107, 108, 109, 110, 124, 150, 156, 157, 160, 161, 163, 171, 173, 176, 177, 179, 180, 181, 182, 183, 189, 192, 196, 200, 206, 208, 222, 223, 234, 236, 244, 256, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 297, 298, 353, 360, 366, 367, 371, 416, 424, 428, 444, 473, 474, 475, 478, 479, 512, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 555, 558, 559, 609, 615, 618, 620, 622, 623, 630, 648, 649, 715, 748, 764, 775, 776, 805, 807, 816, 835, 840, 846, 865, 868, 870, 880], "adjust": [5, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 90, 94, 109, 116, 120, 127, 150, 157, 159, 162, 171, 173, 178, 179, 180, 181, 183, 189, 192, 196, 208, 210, 217, 218, 223, 228, 256, 261, 264, 265, 266, 267, 273, 286, 342, 344, 410, 417, 470, 478, 479, 480, 489, 557, 558, 568, 579, 589, 678, 684, 689, 693, 694, 700, 702, 704, 719, 761, 771, 778, 779, 780, 784, 786, 787, 791, 800, 801, 803, 808, 809, 837, 843, 855, 859, 862, 868, 880], "svd": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 178, 179, 180, 183, 192, 196, 206, 223, 261, 272, 278, 280, 341, 533, 534, 535, 773, 855, 862, 880], "lead": [5, 22, 26, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 69, 70, 88, 90, 94, 109, 145, 152, 163, 168, 178, 179, 180, 183, 192, 195, 196, 200, 202, 210, 212, 223, 258, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 354, 444, 473, 475, 476, 478, 479, 525, 526, 527, 528, 529, 589, 620, 645, 687, 688, 690, 691, 700, 835, 837, 857, 862, 880], "largest": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 136, 152, 178, 179, 180, 183, 189, 192, 196, 223, 226, 410, 454, 502, 534, 535, 558], "38802": 5, "factor": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 58, 59, 60, 90, 94, 104, 107, 108, 109, 110, 136, 158, 178, 179, 180, 182, 183, 192, 196, 202, 203, 210, 212, 222, 223, 228, 229, 230, 234, 236, 240, 256, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 299, 354, 358, 365, 371, 418, 419, 422, 423, 431, 450, 478, 479, 488, 528, 538, 541, 542, 568, 569, 574, 575, 577, 586, 588, 590, 637, 639, 640, 652, 653, 681, 683, 700, 703, 706, 709, 712, 725, 727, 728, 729, 730, 731, 732, 738, 748, 761, 778, 786, 799, 801, 807, 809, 811, 835, 862, 865, 880], "trace": [5, 31, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 74, 80, 90, 93, 94, 109, 145, 150, 152, 167, 173, 178, 179, 180, 183, 192, 196, 200, 207, 209, 210, 215, 218, 223, 256, 262, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 410, 478, 479, 558, 745, 748, 775, 778, 782, 790, 792, 799, 801, 806, 811, 862, 880], "35945e": 5, "nchan": [5, 34, 40, 41, 42, 45, 48, 50, 52, 54, 55, 57, 58, 59, 90, 94, 109, 167, 168, 170, 178, 179, 180, 183, 192, 196, 215, 221, 223, 268, 269, 865, 880], "nzero": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 178, 179, 180, 183, 192, 196, 223], "invert": [5, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 90, 94, 104, 107, 108, 109, 110, 136, 157, 159, 162, 167, 178, 179, 180, 181, 182, 183, 192, 196, 202, 222, 223, 234, 236, 241, 283, 293, 296, 416, 419, 424, 473, 475, 476, 686, 723, 856, 865], "vector": [5, 15, 18, 19, 27, 34, 36, 41, 56, 109, 111, 131, 163, 176, 178, 179, 189, 195, 204, 205, 206, 207, 209, 210, 223, 244, 256, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 290, 297, 298, 341, 343, 347, 355, 356, 357, 360, 411, 414, 416, 421, 426, 428, 444, 448, 449, 450, 473, 475, 476, 478, 479, 512, 518, 524, 525, 527, 528, 529, 534, 535, 539, 557, 558, 569, 570, 571, 573, 577, 584, 588, 597, 603, 611, 618, 626, 628, 635, 641, 700, 701, 702, 703, 704, 748, 780, 782, 784, 786, 787, 790, 799, 802, 806, 809, 811, 812, 831, 835, 859, 862, 865, 870, 880], "eigenlead": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 90, 94, 104, 107, 108, 109, 110, 167, 178, 179, 180, 182, 183, 192, 196, 222, 223, 234, 236, 862], "residu": [5, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 58, 59, 60, 70, 75, 90, 94, 167, 178, 179, 180, 182, 183, 184, 185, 192, 196, 205, 209, 222, 223, 234, 236, 300, 453, 473, 475, 476, 525, 771, 880], "explain": [5, 18, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 90, 94, 138, 160, 161, 167, 178, 179, 180, 182, 183, 184, 192, 196, 205, 222, 223, 234, 236, 273, 300, 410, 417, 473, 475, 476, 534, 535, 558, 792, 839, 843, 862, 880], "97": [5, 11, 13, 15, 19, 34, 41, 44, 47, 71, 79, 81, 83, 103, 108, 109, 112, 114, 117, 135, 157, 161, 167, 170, 192, 195, 196, 205, 208, 209, 210, 226, 227, 230, 231, 244, 431, 522, 567, 569, 588, 681, 855, 862, 880], "varianc": [5, 8, 14, 16, 28, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 70, 90, 94, 114, 167, 178, 179, 180, 181, 182, 183, 184, 192, 196, 200, 205, 212, 222, 223, 234, 236, 244, 273, 275, 293, 294, 295, 296, 297, 298, 419, 455, 473, 475, 476, 534, 535, 536, 558, 566, 682, 693, 694, 728, 731, 771, 792, 793, 835, 862, 880], "control": [5, 11, 19, 22, 26, 32, 33, 34, 38, 41, 42, 47, 48, 50, 60, 94, 109, 114, 120, 127, 134, 141, 150, 151, 157, 167, 169, 172, 173, 179, 180, 182, 183, 189, 192, 196, 201, 202, 203, 205, 206, 207, 210, 211, 217, 222, 223, 226, 234, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 420, 421, 423, 426, 427, 429, 431, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 460, 461, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 554, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 648, 649, 651, 652, 653, 654, 664, 665, 668, 670, 671, 672, 673, 674, 675, 676, 687, 688, 689, 690, 691, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 716, 718, 719, 722, 723, 726, 727, 728, 730, 731, 732, 733, 736, 737, 738, 743, 747, 748, 756, 762, 764, 767, 773, 774, 776, 779, 780, 781, 782, 783, 788, 791, 792, 793, 794, 798, 799, 801, 802, 804, 805, 806, 807, 811, 812, 813, 814, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 845, 856, 859, 861, 862, 880], "24807258e": 5, "55793898e": 5, "13115753e": 5, "32": [5, 6, 11, 12, 13, 19, 21, 28, 34, 35, 41, 42, 45, 47, 49, 54, 56, 69, 71, 72, 73, 74, 79, 81, 82, 94, 99, 103, 104, 107, 108, 109, 110, 112, 114, 120, 129, 130, 136, 141, 142, 143, 147, 150, 152, 153, 158, 159, 163, 165, 167, 169, 170, 171, 172, 173, 177, 178, 181, 183, 184, 185, 186, 195, 196, 200, 201, 203, 204, 205, 207, 208, 209, 216, 221, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 241, 244, 257, 264, 265, 389, 409, 451, 478, 479, 499, 525, 573, 845, 856, 862, 865, 866, 880], "385": [5, 6, 13, 56, 81, 209, 226, 231], "871": [5, 214, 231], "opm_data": [5, 6], "708": [6, 19, 138, 140, 231], "executauto_examples_dataset": 6, "870": [6, 81, 244, 684], "06": [6, 10, 19, 20, 26, 35, 41, 44, 45, 46, 50, 52, 56, 59, 71, 75, 84, 85, 94, 100, 102, 103, 108, 130, 156, 159, 177, 180, 182, 184, 188, 202, 207, 209, 214, 220, 226, 227, 228, 230, 231, 233, 236, 244, 276, 360, 418, 473, 567, 835, 838], "spm_faces_dataset_sgskip": [6, 7], "pipelin": [7, 8, 9, 10, 11, 12, 13, 15, 18, 109, 135, 138, 162, 166, 167, 173, 174, 195, 196, 200, 201, 205, 410, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 463, 559, 738, 846, 856, 857, 859, 880], "reconstruct": [7, 16, 53, 135, 159, 160, 163, 164, 165, 166, 183, 187, 188, 192, 195, 199, 200, 205, 210, 236, 244, 261, 262, 264, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 293, 294, 295, 296, 298, 303, 307, 308, 309, 312, 354, 360, 365, 366, 367, 389, 392, 418, 451, 462, 466, 468, 469, 470, 471, 472, 475, 511, 515, 517, 544, 558, 559, 568, 569, 577, 584, 588, 596, 605, 620, 623, 630, 632, 648, 649, 663, 666, 677, 695, 696, 740, 748, 759, 764, 766, 776, 782, 787, 806, 811, 812, 830, 856, 859, 862, 868, 880], "scrambl": [7, 196, 856], "doe": [7, 28, 31, 55, 58, 59, 70, 71, 75, 80, 84, 112, 117, 127, 141, 142, 150, 152, 159, 161, 162, 163, 169, 179, 182, 183, 189, 190, 191, 200, 202, 203, 204, 205, 206, 208, 210, 211, 221, 223, 228, 230, 231, 234, 241, 244, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 276, 278, 279, 280, 288, 297, 298, 302, 319, 332, 358, 361, 369, 370, 386, 440, 441, 442, 443, 444, 468, 478, 479, 497, 501, 524, 544, 547, 560, 572, 574, 580, 613, 617, 642, 647, 650, 700, 702, 703, 704, 735, 738, 743, 751, 786, 809, 839, 844, 855, 859, 861, 862, 865, 880], "quit": [7, 21, 127, 145, 151, 152, 163, 202, 203, 205, 210, 211, 215, 226, 227, 235, 558, 839, 857, 859], "so": [7, 10, 28, 31, 32, 38, 40, 44, 47, 63, 67, 70, 71, 75, 79, 83, 93, 94, 95, 103, 104, 109, 114, 115, 127, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 181, 182, 183, 184, 185, 191, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 240, 241, 256, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 289, 290, 291, 298, 312, 334, 360, 367, 385, 389, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 441, 442, 444, 445, 449, 478, 479, 501, 525, 531, 544, 558, 559, 560, 568, 569, 578, 588, 589, 606, 618, 640, 647, 648, 687, 688, 690, 691, 738, 743, 748, 749, 757, 758, 782, 791, 793, 795, 801, 826, 835, 837, 839, 842, 844, 845, 846, 847, 855, 857, 859, 861, 862, 865, 880], "even": [7, 70, 74, 112, 128, 143, 156, 161, 167, 168, 169, 172, 173, 184, 191, 192, 199, 200, 202, 204, 205, 206, 207, 208, 212, 215, 217, 226, 241, 256, 264, 265, 266, 267, 308, 324, 377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 478, 479, 506, 558, 712, 809, 839, 847, 856, 862, 880], "fast": [7, 21, 44, 128, 152, 156, 192, 239, 241, 244, 264, 265, 266, 267, 363, 418, 427, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 517, 518, 558, 597, 702, 704, 719, 837, 859, 862, 880], "machin": [7, 18, 94, 95, 182, 196, 200, 201, 244, 250, 269, 282, 354, 569, 577, 588, 857, 880], "sever": [7, 70, 75, 81, 82, 114, 127, 146, 151, 152, 154, 156, 159, 160, 166, 167, 169, 170, 172, 173, 181, 182, 189, 190, 191, 192, 199, 201, 206, 207, 212, 215, 217, 218, 226, 234, 236, 259, 264, 265, 402, 445, 478, 479, 596, 703, 728, 731, 839, 842, 843, 844, 846, 851, 855, 856, 859, 860, 862, 865, 880], "alexandr": [7, 9, 10, 11, 12, 13, 15, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 88, 92, 96, 97, 100, 107, 108, 110, 111, 113, 117, 121, 125, 131, 132, 135, 138, 160, 163, 181, 186, 196, 205, 228, 229, 230, 234, 235, 236, 240, 244, 266, 267, 354, 410, 475, 476, 526, 558, 854, 859, 861, 867, 880], "gramfort": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 92, 96, 97, 100, 107, 108, 110, 111, 113, 117, 121, 125, 131, 132, 135, 138, 160, 163, 181, 186, 196, 205, 228, 229, 230, 234, 235, 236, 240, 244, 266, 267, 354, 475, 476, 526, 558, 788, 854, 859, 861, 867, 880], "inria": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 92, 96, 97, 100, 107, 108, 110, 111, 117, 121, 125, 131, 132, 138, 160, 186, 228, 229, 230, 234, 235, 236, 240], "deni": [7, 11, 13, 16, 21, 26, 33, 42, 69, 78, 101, 109, 113, 114, 120, 121, 126, 132, 133, 152, 163, 196, 230, 231, 236, 244, 266, 267, 354, 526, 854, 859, 867, 880], "engemann": [7, 11, 13, 16, 21, 26, 33, 42, 69, 78, 101, 109, 113, 114, 120, 121, 126, 132, 133, 163, 196, 230, 231, 236, 244, 266, 267, 354, 526, 788, 854, 859, 867, 880], "spm_face": [7, 123, 215, 856, 870], "ica": [7, 17, 20, 27, 74, 77, 84, 85, 88, 163, 166, 167, 199, 200, 201, 204, 207, 213, 214, 217, 244, 264, 265, 266, 267, 269, 274, 312, 327, 328, 373, 414, 424, 451, 478, 479, 493, 552, 555, 572, 574, 575, 581, 582, 586, 600, 601, 615, 778, 791, 792, 793, 794, 795, 801, 820, 846, 859, 866, 869, 870, 880], "create_eog_epoch": [7, 173, 199, 201, 204, 205, 207, 571, 579, 857, 870, 880], "spm_path": 7, "spm_ctf_meg_example_fac": 7, "d_3d": 7, "downsampl": [7, 19, 79, 109, 135, 137, 146, 167, 195, 201, 203, 229, 256, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 409, 450, 451, 478, 479, 515, 577, 686, 700, 703, 807, 859, 880], "heavili": [7, 109, 158, 196, 289, 291, 738, 865], "advis": [7, 70, 190, 202, 256, 855, 862, 880], "real": [7, 32, 50, 92, 93, 152, 156, 157, 159, 161, 162, 202, 205, 206, 207, 208, 217, 221, 223, 228, 244, 297, 453, 478, 479, 520, 597, 703, 716, 726, 727, 728, 748, 846, 851, 868, 880], "jitter": [7, 169, 203, 478, 479, 859], "resampl": [7, 19, 21, 44, 75, 81, 82, 109, 135, 137, 141, 147, 150, 152, 166, 192, 195, 199, 202, 205, 207, 213, 214, 223, 234, 235, 236, 240, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 431, 445, 446, 448, 449, 451, 478, 479, 486, 493, 500, 555, 602, 700, 703, 704, 748, 778, 789, 806, 811, 820, 837, 857, 862, 869, 870, 877, 880], "npad": [7, 19, 75, 81, 82, 192, 195, 234, 235, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 450, 478, 479, 859], "auto": [7, 10, 15, 16, 19, 22, 31, 70, 74, 75, 76, 81, 82, 83, 90, 107, 113, 120, 121, 125, 148, 149, 157, 163, 166, 192, 195, 202, 205, 208, 210, 228, 229, 230, 231, 234, 235, 256, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 305, 306, 312, 328, 341, 343, 347, 353, 354, 358, 359, 360, 365, 410, 412, 416, 417, 421, 422, 429, 431, 434, 439, 440, 441, 443, 444, 446, 448, 449, 450, 455, 473, 475, 476, 478, 479, 484, 486, 488, 490, 493, 494, 500, 504, 517, 522, 536, 555, 557, 558, 559, 567, 568, 569, 570, 572, 577, 578, 581, 588, 592, 606, 612, 631, 645, 700, 702, 703, 704, 748, 764, 765, 767, 772, 778, 780, 782, 784, 785, 787, 788, 791, 793, 795, 798, 800, 801, 802, 803, 804, 806, 808, 810, 811, 812, 833, 855, 856, 859, 880], "sfreq": [7, 8, 9, 14, 19, 21, 31, 63, 65, 68, 69, 70, 90, 92, 93, 94, 95, 109, 111, 114, 125, 127, 128, 137, 138, 145, 167, 169, 170, 173, 191, 192, 195, 201, 202, 203, 211, 212, 215, 216, 217, 221, 223, 241, 258, 259, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 283, 373, 412, 415, 416, 421, 422, 423, 434, 436, 438, 445, 446, 448, 478, 479, 592, 606, 692, 705, 706, 707, 716, 718, 719, 724, 726, 727, 728, 729, 781, 789, 865, 880], "5e": [7, 8, 9, 13, 31, 32, 34, 35, 40, 41, 45, 49, 59, 76, 109, 124, 142, 173, 184, 186, 196, 208, 215, 223, 264, 265, 274, 453, 478, 479, 778, 801], "major": [7, 320, 478, 839, 859, 861, 865, 868, 880], "n_compon": [7, 8, 9, 12, 15, 74, 76, 83, 88, 117, 167, 173, 196, 205, 410, 417, 418, 424, 558, 559, 572, 880], "max_it": [7, 74, 76, 83, 167, 205, 525, 558, 586, 665, 707, 718, 880], "random_st": [7, 8, 9, 10, 15, 40, 76, 83, 90, 92, 93, 94, 113, 117, 138, 167, 205, 222, 223, 475, 511, 558, 586, 605, 652, 653, 654, 663, 664, 666, 679, 880], "correl": [7, 12, 18, 22, 26, 44, 74, 103, 147, 163, 196, 204, 205, 210, 226, 227, 230, 244, 256, 269, 276, 342, 354, 360, 416, 417, 422, 558, 572, 588, 684, 689, 856, 859, 862, 880], "indic": [7, 13, 16, 22, 31, 47, 48, 67, 69, 70, 81, 100, 141, 142, 143, 145, 146, 147, 150, 152, 156, 157, 161, 169, 170, 171, 176, 179, 189, 192, 195, 199, 200, 201, 203, 205, 206, 209, 210, 212, 215, 217, 218, 221, 223, 228, 231, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 310, 312, 313, 314, 327, 329, 335, 354, 359, 369, 402, 410, 412, 416, 417, 418, 426, 431, 434, 439, 448, 449, 452, 478, 479, 486, 488, 490, 493, 494, 495, 500, 504, 534, 535, 549, 552, 554, 555, 557, 558, 559, 560, 561, 566, 568, 572, 573, 574, 575, 580, 584, 586, 587, 593, 594, 596, 597, 603, 612, 618, 619, 622, 631, 634, 640, 645, 668, 669, 673, 676, 680, 686, 687, 688, 690, 691, 692, 695, 700, 701, 702, 703, 704, 708, 709, 710, 711, 713, 730, 731, 748, 761, 764, 765, 766, 768, 772, 778, 779, 780, 782, 784, 785, 787, 791, 792, 793, 795, 797, 799, 800, 802, 803, 808, 810, 828, 833, 835, 844, 861, 862, 865, 880], "eog_epoch": [7, 173, 199, 204, 575], "mrt31": 7, "2908": 7, "eog_ind": [7, 205, 558], "eog_scor": [7, 173, 205, 274], "find_bads_eog": [7, 173, 205, 274, 558, 880], "plot_scor": [7, 74, 83, 205, 558, 880], "plot_compon": [7, 76, 205, 558, 866, 880], "topograph": [7, 8, 16, 18, 19, 27, 122, 130, 133, 152, 196, 244, 266, 267, 269, 273, 274, 410, 417, 491, 554, 555, 558, 618, 700, 765, 772, 782, 787, 793, 800, 808, 810, 880], "compon": [7, 8, 12, 14, 15, 21, 27, 29, 30, 31, 34, 41, 42, 44, 45, 47, 59, 70, 74, 76, 77, 78, 80, 85, 87, 88, 94, 119, 124, 138, 151, 152, 163, 167, 173, 178, 179, 180, 182, 183, 185, 192, 196, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 217, 223, 234, 236, 244, 266, 267, 268, 270, 274, 297, 298, 312, 328, 354, 358, 359, 369, 370, 371, 380, 402, 403, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 431, 449, 450, 453, 454, 455, 473, 475, 476, 478, 479, 493, 528, 531, 532, 534, 535, 536, 537, 542, 558, 559, 566, 568, 569, 572, 577, 586, 588, 703, 788, 791, 792, 793, 794, 795, 801, 846, 855, 856, 859, 862, 865, 866, 880], "saw": [7, 141, 143, 168, 169, 172, 199, 200, 201, 207, 215, 230], "2nd": [7, 152, 195, 199, 228, 231, 241, 244, 572, 642, 880], "ecg": [7, 71, 73, 76, 81, 82, 83, 90, 92, 93, 94, 109, 111, 127, 131, 141, 142, 143, 147, 150, 152, 168, 169, 170, 173, 190, 192, 200, 201, 203, 204, 206, 208, 210, 211, 212, 215, 216, 217, 218, 221, 223, 264, 265, 266, 267, 274, 311, 359, 373, 443, 478, 479, 489, 490, 493, 504, 555, 558, 570, 574, 575, 578, 581, 652, 653, 686, 700, 702, 703, 704, 778, 794, 799, 801, 835, 862, 865, 880], "too": [7, 27, 69, 77, 85, 127, 141, 143, 145, 151, 152, 158, 159, 162, 166, 173, 179, 182, 199, 200, 201, 202, 203, 204, 207, 209, 211, 217, 226, 228, 230, 241, 264, 265, 266, 267, 269, 312, 328, 342, 373, 431, 478, 479, 484, 494, 561, 566, 568, 569, 577, 587, 588, 606, 612, 748, 768, 810, 839, 859, 880], "dipolar": [7, 453, 558, 792], "plot_overlai": [7, 83, 135, 205, 558, 880], "inspect": [7, 21, 28, 70, 83, 127, 142, 152, 157, 163, 192, 199, 210, 211, 256, 264, 265, 266, 267, 307, 309, 318, 332, 478, 479, 588, 596, 652, 653, 778, 782, 801, 851, 859], "clean": [7, 73, 74, 75, 84, 142, 145, 160, 167, 168, 173, 190, 200, 202, 204, 205, 206, 207, 211, 231, 241, 259, 264, 274, 478, 479, 491, 518, 558, 596, 611, 686, 792, 839, 859, 880], "default": [7, 21, 31, 43, 44, 74, 88, 103, 112, 114, 120, 127, 135, 136, 138, 141, 143, 146, 147, 150, 151, 152, 157, 159, 163, 167, 168, 169, 170, 171, 172, 173, 179, 180, 189, 190, 192, 200, 201, 203, 205, 206, 207, 208, 210, 215, 216, 217, 218, 221, 226, 230, 231, 236, 239, 240, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 434, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460, 461, 462, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 743, 745, 747, 748, 751, 756, 757, 761, 762, 764, 765, 766, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 843, 844, 855, 856, 859, 865, 880], "k": [7, 8, 9, 10, 11, 13, 14, 18, 19, 22, 28, 31, 38, 39, 41, 59, 65, 69, 70, 83, 97, 100, 104, 143, 144, 159, 161, 177, 182, 189, 195, 196, 202, 206, 216, 218, 230, 231, 239, 240, 241, 244, 261, 262, 264, 265, 266, 267, 270, 273, 275, 283, 288, 297, 300, 302, 410, 417, 473, 475, 476, 478, 479, 524, 525, 557, 558, 577, 620, 660, 681, 687, 688, 689, 691, 700, 702, 704, 716, 726, 735, 761, 765, 780, 786, 787, 790, 801, 803, 808, 809, 810, 835, 837, 839, 862, 865, 880], "append": [7, 8, 10, 16, 43, 44, 45, 47, 61, 68, 75, 80, 113, 138, 151, 173, 184, 195, 200, 205, 207, 211, 215, 226, 230, 231, 236, 258, 264, 265, 266, 267, 270, 478, 479, 558, 572, 577, 588, 646, 677, 700, 701, 702, 703, 704, 720, 839, 880], "covarari": 7, "noise_cov": [7, 11, 31, 34, 40, 41, 42, 45, 48, 49, 50, 51, 54, 55, 58, 59, 94, 109, 121, 153, 163, 173, 178, 179, 181, 183, 192, 205, 261, 264, 265, 266, 267, 274, 298, 300, 369, 370, 454, 473, 475, 476, 478, 479, 536, 558, 778, 782, 786, 788, 801, 865, 880], "shrunk": [7, 31, 34, 40, 41, 42, 45, 59, 121, 153, 163, 178, 184, 354], "visual": [7, 8, 13, 14, 15, 16, 32, 33, 35, 36, 41, 42, 45, 56, 57, 59, 60, 61, 69, 71, 73, 80, 87, 94, 101, 104, 105, 106, 113, 115, 116, 119, 120, 128, 130, 132, 134, 135, 136, 138, 142, 144, 146, 148, 149, 152, 153, 154, 155, 156, 161, 163, 166, 167, 169, 172, 173, 176, 179, 180, 184, 187, 188, 192, 196, 199, 201, 202, 203, 208, 210, 213, 214, 215, 216, 217, 218, 227, 228, 230, 240, 241, 244, 256, 259, 262, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 307, 308, 309, 313, 341, 342, 343, 344, 349, 351, 352, 360, 363, 364, 416, 437, 439, 451, 453, 463, 478, 479, 493, 513, 517, 524, 525, 535, 537, 539, 553, 558, 562, 588, 596, 612, 614, 615, 618, 620, 623, 626, 628, 641, 649, 652, 653, 687, 692, 702, 703, 716, 726, 727, 729, 730, 731, 732, 748, 753, 765, 771, 772, 778, 779, 781, 782, 783, 786, 789, 790, 791, 792, 793, 794, 795, 798, 799, 801, 815, 819, 820, 835, 836, 837, 840, 842, 843, 846, 851, 857, 859, 862, 863, 865, 870, 880], "dig": [7, 109, 118, 125, 137, 157, 158, 159, 160, 161, 167, 170, 171, 184, 185, 215, 221, 269, 306, 312, 342, 429, 485, 522, 764, 880], "montag": [7, 8, 19, 70, 79, 83, 115, 125, 135, 136, 137, 152, 160, 190, 191, 205, 221, 241, 264, 265, 266, 267, 269, 312, 315, 316, 318, 323, 325, 328, 330, 331, 332, 333, 334, 335, 336, 337, 365, 443, 462, 478, 479, 490, 583, 585, 589, 798, 810, 818, 835, 856, 862, 880], "It": [7, 10, 13, 31, 39, 47, 55, 60, 70, 71, 74, 90, 94, 95, 103, 114, 116, 117, 121, 141, 143, 145, 146, 150, 151, 152, 157, 158, 159, 160, 161, 167, 170, 171, 172, 173, 176, 178, 181, 189, 190, 191, 196, 200, 201, 203, 204, 205, 206, 208, 209, 210, 215, 216, 218, 221, 226, 228, 229, 231, 234, 236, 240, 241, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 278, 279, 280, 282, 287, 297, 298, 303, 312, 330, 341, 354, 359, 365, 410, 418, 419, 445, 453, 470, 473, 475, 476, 478, 479, 486, 493, 497, 507, 517, 520, 525, 531, 532, 536, 541, 542, 558, 562, 568, 577, 588, 589, 596, 602, 609, 613, 617, 622, 626, 628, 666, 672, 675, 689, 694, 700, 703, 716, 723, 726, 738, 748, 786, 791, 811, 824, 827, 831, 835, 837, 839, 842, 843, 844, 846, 851, 855, 856, 859, 861, 862, 865, 868, 880], "spm_dig_montag": 7, "trans_fnam": [7, 68, 81, 157, 179, 192], "spm_ctf_meg_example_faces1_3d_raw": 7, "map": [7, 8, 10, 16, 19, 23, 24, 25, 26, 27, 36, 40, 41, 43, 56, 58, 71, 76, 78, 87, 94, 105, 106, 107, 109, 115, 119, 122, 124, 128, 130, 134, 135, 136, 137, 144, 145, 146, 147, 152, 157, 159, 161, 166, 167, 169, 176, 179, 182, 183, 195, 196, 199, 200, 201, 202, 205, 206, 207, 211, 215, 221, 222, 224, 225, 226, 231, 234, 235, 236, 244, 258, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 288, 290, 297, 310, 312, 324, 340, 360, 363, 364, 371, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 431, 434, 437, 439, 451, 455, 463, 473, 474, 475, 476, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 514, 517, 518, 524, 525, 536, 549, 554, 555, 558, 559, 567, 572, 609, 615, 618, 620, 621, 625, 626, 635, 636, 641, 649, 654, 660, 665, 668, 681, 683, 684, 687, 689, 693, 694, 700, 701, 702, 703, 704, 709, 731, 748, 765, 767, 772, 775, 776, 778, 782, 783, 787, 793, 800, 801, 806, 807, 808, 809, 810, 811, 812, 818, 835, 837, 839, 855, 865, 868, 880], "make_field_map": [7, 124, 151, 266, 267, 783, 870, 880], "plot_field": [7, 124, 151, 266, 267, 880], "170": [7, 56, 81, 84, 102, 123, 130, 138, 170, 184, 185, 186, 192, 196, 202, 205, 209, 226, 230, 231, 244], "daat": 7, "plot_whit": [7, 93, 121, 153, 163, 178, 264, 265, 266, 267, 478, 479, 778, 782, 801, 859, 880], "oct": [7, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 131, 157, 159, 160, 161, 167, 173, 178, 179, 180, 182, 183, 192, 196, 222, 223, 234, 236, 256, 271, 275, 277, 279, 409, 648, 806, 880], "spm_": 7, "s_dspm_invers": 7, "comment": [7, 46, 61, 115, 127, 150, 151, 153, 172, 173, 190, 208, 221, 240, 257, 263, 264, 265, 266, 267, 270, 274, 335, 468, 617, 622, 700, 703, 733, 772, 786, 833, 835, 837, 839, 862, 880], "3d": [7, 27, 31, 35, 38, 40, 52, 59, 60, 96, 97, 122, 127, 130, 135, 136, 137, 143, 152, 157, 159, 161, 162, 176, 177, 186, 191, 196, 206, 210, 226, 229, 231, 256, 262, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 290, 312, 313, 325, 338, 366, 418, 448, 449, 478, 479, 498, 508, 517, 569, 577, 588, 681, 687, 688, 748, 749, 750, 755, 757, 758, 759, 764, 769, 776, 783, 798, 804, 806, 807, 811, 813, 814, 816, 818, 819, 835, 838, 839, 843, 851, 856, 857, 860, 880], "both": [7, 19, 31, 32, 33, 38, 40, 41, 45, 47, 51, 58, 59, 69, 70, 71, 74, 87, 90, 94, 99, 109, 114, 132, 135, 141, 142, 150, 151, 152, 163, 167, 169, 170, 171, 172, 173, 176, 178, 179, 181, 182, 183, 184, 190, 191, 192, 196, 199, 201, 202, 203, 204, 205, 206, 207, 210, 211, 215, 223, 228, 230, 234, 235, 236, 239, 240, 241, 244, 259, 260, 263, 264, 265, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 287, 297, 298, 306, 315, 354, 358, 359, 360, 369, 370, 371, 410, 417, 429, 434, 451, 453, 454, 473, 475, 476, 478, 479, 517, 536, 558, 561, 568, 572, 574, 602, 605, 618, 619, 623, 628, 649, 650, 654, 663, 681, 683, 687, 688, 690, 691, 700, 702, 703, 745, 748, 761, 771, 772, 779, 784, 785, 788, 791, 806, 811, 830, 835, 839, 845, 859, 860, 861, 862, 865, 880], "ven": [7, 50], "save_imag": [7, 234, 236, 748], "dspm_map": 7, "png": [7, 47, 115, 173, 234, 236, 256, 274, 880], "classifi": [8, 9, 10, 11, 13, 17, 20, 27, 196, 210, 264, 266, 267, 269, 414, 425, 427, 428, 558, 577, 615, 658, 659, 880], "featur": [8, 11, 15, 18, 19, 27, 98, 102, 143, 151, 172, 173, 195, 196, 207, 210, 218, 221, 226, 231, 241, 244, 266, 267, 271, 272, 274, 275, 278, 279, 280, 410, 413, 416, 417, 419, 420, 422, 425, 443, 478, 479, 558, 577, 588, 611, 684, 685, 772, 782, 784, 806, 811, 813, 817, 839, 846, 847, 856, 858, 859, 860, 861, 862, 880], "extract": [8, 9, 18, 21, 24, 27, 36, 38, 41, 56, 61, 67, 73, 74, 80, 83, 100, 112, 113, 123, 127, 128, 136, 137, 142, 143, 145, 150, 152, 159, 160, 166, 167, 170, 172, 182, 189, 191, 192, 196, 199, 203, 205, 206, 207, 213, 214, 216, 221, 227, 228, 229, 236, 244, 256, 257, 264, 266, 269, 270, 271, 272, 275, 277, 278, 279, 280, 307, 341, 342, 343, 344, 345, 346, 349, 351, 352, 362, 371, 385, 410, 414, 417, 418, 434, 444, 451, 478, 481, 486, 493, 497, 513, 524, 525, 539, 558, 562, 588, 613, 617, 618, 622, 628, 672, 675, 747, 771, 790, 835, 839, 855, 856, 862, 865, 880], "en": [8, 19, 196, 244, 255, 867, 880], "wikipedia": [8, 196, 226, 244], "org": [8, 15, 32, 33, 70, 71, 79, 83, 88, 113, 114, 115, 116, 120, 127, 135, 136, 137, 196, 228, 230, 231, 234, 240, 244, 271, 275, 279, 300, 380, 402, 403, 418, 449, 559, 646, 684, 729, 732, 744, 806, 839, 859, 880], "wiki": [8, 156, 196, 271, 275, 279, 558, 744, 806, 835, 855], "common_spatial_pattern": [8, 196], "eegbci": [8, 9, 112, 160, 205, 870, 880], "document": [8, 15, 32, 63, 88, 127, 136, 137, 144, 150, 152, 161, 167, 169, 170, 171, 173, 178, 182, 190, 202, 203, 205, 207, 210, 215, 217, 218, 221, 240, 244, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 415, 416, 420, 421, 423, 426, 427, 429, 431, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 460, 461, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 551, 554, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 648, 649, 651, 652, 653, 654, 657, 662, 664, 665, 668, 670, 671, 672, 673, 674, 675, 676, 687, 688, 689, 690, 691, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 722, 723, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 743, 747, 748, 756, 757, 764, 773, 776, 780, 781, 782, 783, 786, 788, 791, 792, 793, 798, 799, 801, 802, 804, 805, 806, 807, 811, 812, 813, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 843, 844, 846, 854, 855, 856, 858, 859, 862, 880], "physionet": [8, 138, 205, 244, 380, 402, 403, 856, 868, 880], "martin": [8, 10, 35, 47, 104, 244, 410, 854, 856, 862, 880], "billing": [8, 880], "tugraz": 8, "sklearn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 117, 138, 172, 195, 196, 205, 226, 354, 359, 411, 413, 416, 419, 420, 424, 427, 744, 838, 839, 880], "discriminant_analysi": [8, 9], "lineardiscriminantanalysi": [8, 9], "model_select": [8, 9, 10, 12, 15, 16, 19, 354, 359, 427, 880], "shufflesplit": 8, "cross_val_scor": [8, 9], "events_from_annot": [8, 9, 112, 128, 136, 137, 138, 145, 169, 211, 241, 258, 283, 486, 493, 870, 880], "make_standard_montag": [8, 19, 70, 83, 125, 160, 171, 191, 241, 264, 265, 266, 267, 269, 323, 330, 478, 479, 490, 501, 870, 880], "concatenate_raw": [8, 9, 10, 81, 112, 192, 264, 265, 266, 267, 361, 362, 478, 479, 577, 588, 856, 870, 880], "read_raw_edf": [8, 9, 83, 112, 138, 160, 190, 205, 484, 486, 500, 856, 862, 866, 870, 880], "classif": [8, 9, 10, 11, 12, 15, 51, 139, 140, 147, 163, 166, 196, 244, 258, 264, 269, 300, 402, 411, 439, 478, 493, 606, 702, 781, 856, 880], "start": [8, 22, 29, 33, 34, 40, 61, 65, 70, 82, 93, 96, 127, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 161, 162, 166, 167, 168, 169, 171, 174, 175, 178, 179, 189, 196, 200, 201, 203, 204, 205, 206, 208, 210, 211, 215, 216, 217, 218, 221, 223, 226, 227, 228, 239, 240, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 278, 279, 280, 283, 284, 285, 296, 335, 341, 342, 343, 344, 354, 357, 359, 410, 416, 417, 422, 434, 450, 451, 452, 468, 469, 477, 478, 479, 484, 486, 493, 503, 506, 519, 528, 547, 558, 561, 565, 570, 571, 574, 575, 577, 578, 579, 580, 581, 583, 602, 618, 665, 677, 687, 688, 690, 691, 700, 701, 703, 705, 706, 707, 708, 709, 710, 711, 735, 748, 753, 772, 774, 781, 787, 792, 794, 795, 801, 835, 837, 839, 841, 842, 843, 844, 847, 850, 855, 858, 859, 862, 863, 865, 866, 880], "cue": [8, 136], "feet": [8, 9, 112, 380], "standard_1005": [8, 70, 83, 160, 171, 205], "set_montag": [8, 15, 19, 67, 70, 79, 83, 125, 128, 135, 136, 137, 152, 160, 171, 183, 190, 191, 205, 221, 241, 264, 265, 266, 267, 269, 443, 478, 479, 490, 501, 862, 880], "skip_by_annot": [8, 9, 264, 265, 266, 267, 478, 479, 577, 588, 880], "t1": [8, 9, 30, 44, 50, 79, 112, 157, 158, 159, 160, 161, 162, 177, 256, 277, 279, 280, 303, 307, 308, 309, 320, 389, 470, 478, 584, 649, 766, 812, 835, 856, 862, 880], "t2": [8, 9, 112, 320, 478, 880], "train": [8, 10, 11, 13, 15, 16, 19, 88, 138, 195, 196, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 427, 558, 559, 791, 839, 855, 856, 880], "epochs_train": [8, 138], "edf": [8, 9, 83, 112, 138, 160, 205, 443, 478, 479, 486, 493, 500, 606, 856, 862, 866, 880], "eegmmidb": [8, 9, 83, 112, 160, 205, 380, 880], "s001": [8, 9, 83, 112, 160, 205], "s001r06": [8, 9, 112, 160], "19999": [8, 112, 160, 205], "124": [8, 35, 45, 83, 85, 112, 160, 168, 170, 175, 205, 230, 231, 244, 388], "994": [8, 9, 70, 83, 112, 160, 196, 203, 205, 214, 231], "s001r10": [8, 9, 112], "s001r14": [8, 9, 112], "bandpass": [8, 9, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 76, 82, 88, 113, 115, 121, 133, 137, 142, 145, 147, 173, 196, 199, 201, 204, 205, 207, 211, 212, 231, 241, 264, 265, 266, 267, 412, 418, 421, 445, 446, 448, 478, 479, 592, 702, 704, 801, 802, 880], "265": [8, 9, 81, 82, 112, 170, 192, 231, 244, 657, 662], "656": [8, 9], "64": [8, 9, 12, 13, 19, 21, 26, 32, 33, 34, 35, 41, 45, 46, 47, 50, 58, 59, 81, 82, 83, 101, 103, 108, 112, 114, 138, 144, 159, 160, 170, 171, 172, 173, 177, 179, 182, 185, 186, 192, 195, 196, 205, 209, 223, 226, 227, 230, 231, 244, 261, 264, 265, 266, 267, 270, 273, 275, 410, 417, 476, 478, 479, 499, 531, 532, 541, 542, 557, 558, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 845, 856, 862, 866], "annot": [8, 9, 27, 38, 41, 44, 47, 68, 75, 77, 83, 85, 90, 94, 95, 112, 113, 126, 127, 128, 135, 136, 137, 145, 147, 152, 161, 166, 167, 174, 176, 182, 190, 191, 192, 195, 199, 205, 208, 218, 219, 220, 222, 259, 264, 265, 266, 267, 269, 283, 344, 345, 359, 363, 387, 439, 477, 478, 479, 480, 486, 491, 493, 498, 506, 518, 558, 560, 561, 562, 563, 564, 565, 574, 575, 577, 578, 579, 588, 589, 606, 615, 623, 639, 642, 704, 748, 764, 790, 793, 801, 802, 816, 817, 830, 835, 856, 857, 862, 870, 880], "descript": [8, 9, 112, 128, 136, 137, 138, 141, 143, 145, 152, 169, 170, 171, 189, 191, 192, 201, 211, 215, 216, 217, 221, 226, 258, 264, 265, 266, 267, 269, 273, 283, 322, 323, 355, 356, 359, 439, 478, 479, 480, 518, 558, 561, 574, 575, 578, 612, 700, 703, 704, 793, 802, 835, 839, 856, 865, 880], "801": [8, 145, 231, 240, 241, 243], "discrim": 8, "mont": [8, 244], "carlo": [8, 244, 880], "cross": [8, 9, 10, 11, 12, 15, 16, 19, 27, 32, 33, 34, 36, 44, 56, 78, 87, 105, 106, 119, 121, 122, 130, 138, 163, 167, 178, 195, 196, 200, 205, 207, 210, 222, 223, 230, 244, 261, 264, 266, 268, 269, 275, 276, 288, 290, 297, 298, 299, 354, 359, 360, 364, 371, 410, 413, 416, 422, 426, 427, 431, 451, 478, 524, 534, 535, 536, 537, 540, 555, 558, 568, 574, 577, 578, 588, 609, 615, 618, 620, 628, 701, 705, 706, 707, 708, 709, 710, 711, 717, 748, 774, 792, 835, 851, 856, 859, 868, 880], "epochs_data": [8, 412, 415, 419, 880], "get_data": [8, 9, 10, 12, 13, 14, 16, 18, 21, 70, 72, 75, 84, 96, 97, 100, 114, 115, 127, 133, 138, 141, 142, 147, 150, 167, 168, 196, 203, 206, 227, 231, 239, 240, 241, 264, 265, 266, 267, 478, 479, 701, 702, 704, 862, 880], "epochs_data_train": 8, "cv": [8, 9, 10, 11, 12, 15, 16, 19, 196, 354, 359, 426, 427, 880], "test_siz": 8, "cv_split": 8, "split": [8, 10, 11, 15, 16, 19, 58, 67, 88, 94, 127, 146, 160, 167, 195, 196, 207, 222, 227, 236, 244, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 354, 359, 427, 469, 477, 478, 479, 498, 501, 531, 532, 588, 677, 686, 701, 729, 732, 748, 774, 806, 811, 865, 880], "assembl": [8, 9, 230, 536, 692, 857, 880], "lda": [8, 9], "log": [8, 9, 12, 21, 33, 83, 121, 129, 143, 163, 178, 200, 202, 205, 207, 211, 218, 228, 240, 241, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 420, 421, 423, 426, 427, 429, 431, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 460, 461, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 554, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 646, 647, 648, 649, 651, 652, 653, 654, 664, 665, 668, 670, 671, 672, 673, 674, 675, 676, 687, 688, 689, 690, 691, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 722, 723, 727, 728, 730, 731, 732, 733, 736, 737, 738, 743, 746, 747, 748, 756, 764, 773, 776, 777, 780, 781, 782, 783, 788, 789, 791, 792, 793, 796, 798, 799, 801, 802, 804, 805, 806, 807, 808, 811, 812, 813, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 859, 870, 880], "norm_trac": [8, 9, 196, 410, 880], "scikit": [8, 9, 16, 18, 19, 117, 196, 205, 414, 416, 418, 419, 420, 421, 423, 424, 425, 428, 558, 857, 880], "learn": [8, 9, 16, 18, 19, 21, 70, 117, 144, 162, 163, 167, 196, 198, 200, 201, 205, 244, 250, 354, 414, 416, 418, 419, 420, 421, 423, 424, 425, 427, 428, 558, 586, 839, 846, 856, 857, 859, 880], "clf": [8, 9, 10, 11, 12, 13, 15, 18, 196, 425, 880], "class_bal": 8, "accuraci": [8, 10, 15, 33, 81, 135, 138, 244, 261, 264, 265, 266, 267, 273, 370, 371, 410, 416, 417, 422, 431, 453, 478, 479, 536, 557, 558, 572, 583, 657, 662, 700, 702, 704, 728, 731, 738, 765, 780, 787, 791, 800, 803, 808, 810, 865, 880], "chanc": [8, 9, 10, 11, 196, 861, 880], "fit_transform": [8, 9, 10, 14, 18, 196, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 559], "plot_pattern": [8, 12, 196, 410, 417, 880], "ch_type": [8, 14, 22, 26, 42, 63, 80, 82, 87, 100, 112, 114, 120, 124, 125, 131, 142, 143, 146, 150, 151, 152, 167, 171, 177, 178, 191, 205, 210, 211, 218, 221, 231, 239, 240, 261, 264, 265, 266, 267, 318, 319, 373, 410, 417, 478, 479, 504, 517, 557, 558, 563, 572, 577, 641, 645, 700, 702, 703, 704, 779, 780, 787, 791, 803, 804, 808, 810, 880], "au": [8, 261, 264, 265, 266, 267, 273, 373, 410, 417, 478, 479, 700, 702, 704, 780, 787, 800, 808], "7e": [8, 9, 32, 35, 48, 49, 54, 55, 58, 70, 94, 121, 151, 153, 163, 173, 179, 180, 183, 184, 186, 192, 196, 200, 222], "8e": [8, 9, 32, 35, 49, 74, 109, 121, 163, 173, 178, 181, 184, 186, 192, 196], "09": [8, 9, 21, 42, 43, 44, 45, 49, 73, 75, 81, 82, 102, 103, 106, 108, 116, 120, 121, 123, 130, 159, 160, 161, 163, 165, 176, 178, 181, 186, 195, 209, 220, 227, 230, 231, 244, 270, 275, 522, 595, 681, 729, 732], "0001": [8, 9, 32, 78, 87, 119, 124, 151, 180, 200, 475, 476], "00012": [8, 9], "6e": [8, 9, 34, 42, 46, 119, 121, 153, 173, 178, 184, 186, 196], "00011": [8, 9], "933333": 8, "533333": 8, "00025": 8, "00026": 8, "9e": [8, 9, 21, 42, 49, 87, 93, 124, 151, 153, 163, 178, 181, 183, 184, 185, 186, 196, 222], "w_length": 8, "int": [8, 11, 19, 31, 68, 72, 90, 93, 95, 109, 114, 127, 144, 150, 161, 170, 172, 192, 195, 202, 203, 212, 215, 221, 223, 236, 241, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 316, 317, 327, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 426, 427, 429, 431, 432, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 460, 461, 463, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 549, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 647, 648, 649, 650, 651, 652, 653, 654, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 683, 686, 687, 688, 689, 690, 691, 692, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 718, 719, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 743, 747, 748, 756, 757, 761, 764, 765, 766, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 788, 791, 792, 793, 794, 795, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 880], "w_step": 8, "w_start": 8, "shape": [8, 16, 19, 22, 31, 41, 47, 50, 53, 63, 65, 70, 97, 114, 115, 120, 135, 137, 138, 141, 147, 150, 158, 159, 161, 171, 176, 182, 189, 195, 196, 202, 215, 221, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 287, 297, 298, 299, 304, 305, 306, 312, 313, 314, 318, 321, 325, 329, 339, 344, 348, 349, 350, 351, 352, 363, 365, 368, 369, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 438, 439, 444, 446, 448, 451, 452, 453, 454, 455, 468, 469, 471, 472, 473, 475, 478, 479, 481, 489, 502, 513, 515, 517, 519, 523, 533, 534, 535, 537, 540, 541, 553, 557, 558, 559, 561, 562, 563, 565, 566, 567, 568, 569, 572, 577, 580, 585, 586, 588, 593, 594, 602, 603, 612, 614, 615, 631, 634, 637, 638, 639, 640, 649, 650, 655, 656, 657, 658, 659, 660, 661, 662, 667, 668, 677, 679, 680, 681, 685, 686, 687, 688, 689, 690, 691, 698, 700, 701, 702, 703, 704, 705, 706, 707, 712, 715, 716, 718, 719, 723, 725, 726, 727, 728, 729, 730, 731, 735, 736, 737, 738, 739, 741, 747, 748, 751, 752, 753, 763, 764, 765, 767, 768, 769, 772, 778, 779, 780, 781, 782, 784, 787, 788, 790, 791, 793, 794, 798, 800, 802, 803, 804, 806, 808, 809, 810, 811, 812, 816, 818, 825, 828, 833, 835, 846, 855, 862, 880], "scores_window": 8, "train_idx": 8, "test_idx": 8, "y_train": [8, 138, 195], "y_test": [8, 138, 195], "x_train": [8, 195], "x_test": [8, 195], "slide": [8, 12, 21, 135, 157, 241, 274, 727, 728, 730, 731], "score_this_window": 8, "n": [8, 10, 43, 45, 70, 83, 93, 99, 109, 114, 138, 142, 145, 150, 152, 158, 161, 171, 173, 176, 189, 202, 205, 206, 207, 208, 215, 221, 223, 226, 228, 230, 231, 241, 244, 256, 258, 259, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 276, 278, 279, 280, 282, 312, 321, 340, 350, 351, 352, 355, 356, 357, 360, 368, 380, 402, 403, 425, 431, 434, 445, 447, 468, 478, 479, 498, 540, 557, 558, 562, 565, 574, 575, 577, 588, 636, 660, 673, 674, 675, 676, 680, 685, 700, 703, 712, 713, 716, 726, 727, 728, 730, 731, 748, 751, 752, 767, 782, 789, 806, 811, 812, 818, 835, 847, 856, 859, 862, 866, 880], "w_time": [8, 9], "axvlin": [8, 10, 11, 13, 19, 45, 112, 127, 145, 161, 196, 210], "linestyl": [8, 9, 11, 21, 97, 111, 112, 113, 127, 151, 196, 202, 206, 211, 231, 716, 726, 772, 796, 880], "color": [8, 9, 10, 11, 12, 13, 19, 21, 22, 38, 39, 45, 47, 48, 49, 50, 54, 55, 59, 70, 81, 82, 96, 97, 101, 104, 112, 113, 114, 115, 116, 120, 127, 132, 133, 135, 136, 137, 138, 142, 143, 145, 150, 151, 152, 157, 161, 167, 169, 171, 173, 176, 177, 178, 179, 182, 184, 186, 195, 196, 199, 200, 202, 203, 206, 210, 211, 216, 217, 218, 223, 231, 236, 239, 240, 241, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 275, 277, 278, 279, 280, 369, 410, 417, 462, 463, 468, 469, 478, 479, 557, 558, 621, 622, 700, 702, 704, 716, 726, 748, 757, 761, 763, 764, 765, 767, 770, 772, 775, 776, 777, 778, 779, 780, 781, 782, 784, 786, 787, 789, 790, 791, 796, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 814, 829, 830, 835, 880], "axhlin": [8, 9, 10, 11, 13, 19, 21, 81, 82, 112, 113, 145, 161, 196, 241, 558, 794], "xlabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 68, 72, 82, 90, 93, 97, 107, 108, 110, 114, 127, 138, 152, 161, 178, 181, 182, 195, 202, 211, 212, 223, 226, 228, 236, 240, 241, 716, 726, 880], "ylabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 68, 69, 72, 82, 90, 93, 97, 107, 108, 110, 127, 138, 152, 161, 178, 181, 182, 195, 202, 207, 211, 212, 223, 226, 228, 236, 240, 241, 716, 726], "legend": [8, 9, 10, 11, 12, 16, 19, 21, 22, 28, 37, 38, 39, 41, 45, 68, 70, 96, 97, 110, 111, 127, 138, 145, 146, 151, 163, 167, 173, 181, 195, 196, 211, 215, 216, 236, 240, 241, 264, 265, 266, 267, 716, 726, 748, 761, 771, 772, 778, 781, 786, 880], "loc": [8, 10, 16, 37, 39, 70, 112, 123, 127, 137, 141, 144, 145, 146, 170, 177, 181, 184, 211, 240, 269, 330, 599, 716, 726, 771, 818, 862, 865], "zoltan": [8, 196, 244, 410], "kole": [8, 196, 244, 410], "quantit": [8, 163, 196, 244, 558, 859, 861], "abnorm": [8, 196, 244], "clinic": [8, 70, 71, 78, 112, 152, 196, 200, 204, 205, 244, 525, 557, 558, 566, 567, 572, 588, 603, 729, 732, 856, 862], "electroencephalographi": [8, 58, 71, 78, 112, 152, 196, 200, 204, 244, 275, 557, 567, 603, 862], "neurophysiologi": [8, 70, 71, 78, 112, 152, 196, 200, 204, 205, 244, 557, 558, 566, 567, 572, 603, 729, 732, 862], "79": [8, 13, 15, 16, 19, 35, 41, 45, 47, 81, 103, 108, 112, 114, 119, 158, 159, 170, 177, 182, 185, 195, 196, 209, 226, 227, 230, 231, 244, 402, 430], "440": [8, 13, 81, 153, 155, 196, 209, 244], "447": [8, 13, 66, 106, 130, 134, 196, 209, 244], "1991": [8, 196, 244, 410], "1016": [8, 12, 13, 18, 19, 21, 35, 42, 44, 59, 70, 71, 74, 75, 78, 94, 101, 112, 113, 119, 121, 126, 145, 152, 156, 163, 181, 196, 200, 202, 204, 205, 212, 226, 227, 231, 244, 266, 267, 270, 275, 276, 297, 354, 360, 388, 414, 416, 417, 418, 428, 473, 476, 525, 526, 536, 540, 557, 558, 566, 567, 572, 592, 595, 603, 657, 660, 662, 687, 688, 690, 691, 693, 694, 714, 716, 726, 729, 730, 732, 765, 854, 856, 859, 862], "0013": [8, 71, 78, 112, 152, 196, 200, 204, 244, 557, 567, 603, 862], "4694": [8, 71, 78, 112, 152, 196, 200, 204, 244, 557, 567, 603, 862], "91": [8, 13, 19, 26, 35, 41, 45, 47, 50, 71, 78, 80, 108, 109, 112, 114, 117, 152, 157, 159, 170, 177, 182, 183, 195, 196, 200, 207, 208, 209, 210, 211, 226, 227, 230, 231, 244, 335], "90163": [8, 196, 244], "gerwin": [8, 205, 244, 380, 856], "schalk": [8, 205, 244, 380, 856], "denni": [8, 205, 244, 380, 856], "mcfarland": [8, 205, 244, 380, 856], "thilo": [8, 205, 244, 380, 856], "hinterberg": [8, 205, 244, 380, 856], "niel": [8, 205, 244, 380, 856], "birbaum": [8, 205, 244, 380, 856], "jonathan": [8, 101, 205, 227, 244, 380, 393, 856, 880], "wolpaw": [8, 205, 244, 380, 856], "bci2000": [8, 205, 244, 380, 856], "bci": [8, 15, 88, 112, 160, 196, 205, 244, 380, 559, 856, 868, 880], "ieee": [8, 15, 40, 46, 51, 71, 83, 84, 88, 117, 138, 145, 163, 181, 196, 205, 239, 244, 264, 265, 266, 267, 297, 298, 300, 354, 380, 403, 410, 434, 475, 476, 478, 479, 558, 559, 567, 596, 702, 704, 719, 729, 732, 855, 856, 859, 862], "transact": [8, 15, 51, 71, 84, 88, 117, 138, 163, 181, 196, 205, 239, 244, 264, 265, 266, 267, 297, 298, 354, 380, 403, 410, 475, 478, 479, 525, 558, 559, 567, 596, 702, 704, 719, 855, 856, 859, 862], "biomed": [8, 15, 71, 84, 88, 117, 138, 181, 190, 196, 205, 223, 244, 255, 297, 298, 380, 403, 410, 558, 559, 567, 596, 855, 856, 862, 867], "engin": [8, 15, 71, 83, 84, 88, 117, 181, 196, 205, 206, 207, 223, 244, 297, 298, 380, 403, 410, 525, 558, 559, 567, 596, 839, 845, 855, 856, 862], "1034": [8, 18, 205, 209, 244, 380, 653, 856], "1043": [8, 170, 196, 205, 244, 380, 856], "2004": [8, 70, 205, 244, 354, 380, 566, 660, 856, 862], "1109": [8, 15, 40, 46, 51, 71, 83, 84, 88, 117, 138, 145, 163, 181, 196, 205, 239, 244, 264, 265, 266, 267, 297, 298, 300, 354, 380, 403, 410, 434, 475, 476, 478, 479, 558, 559, 567, 596, 702, 704, 719, 855, 856, 859, 862], "tbme": [8, 15, 71, 84, 88, 117, 196, 205, 244, 380, 410, 558, 559, 567, 596, 855, 856], "827072": [8, 205, 244, 380, 856], "ari": [8, 138, 205, 244, 380, 402, 403, 846, 856, 880], "l": [8, 19, 44, 49, 99, 126, 127, 135, 138, 145, 161, 173, 189, 195, 205, 208, 210, 212, 231, 234, 240, 241, 244, 255, 256, 276, 360, 380, 402, 403, 416, 525, 558, 566, 660, 729, 732, 766, 772, 793, 845, 854, 856, 862, 867, 880], "goldberg": [8, 138, 205, 244, 380, 402, 403, 856], "lui": [8, 138, 205, 244, 380, 402, 403, 856], "amar": [8, 138, 205, 244, 380, 402, 403, 856], "leon": [8, 138, 205, 244, 380, 402, 403, 856], "glass": [8, 31, 35, 40, 44, 59, 60, 138, 182, 205, 244, 272, 278, 279, 280, 380, 402, 403, 807, 811, 812, 856], "jeffrei": [8, 138, 205, 244, 380, 402, 403, 525, 856], "hausdorff": [8, 138, 205, 244, 380, 402, 403, 856], "plamen": [8, 138, 205, 244, 380, 402, 403, 856], "ivanov": [8, 138, 205, 244, 380, 402, 403, 856], "roger": [8, 10, 138, 205, 244, 380, 402, 403, 856], "joseph": [8, 138, 205, 244, 380, 402, 403, 856], "mietu": [8, 138, 205, 244, 380, 402, 403, 856], "georg": [8, 138, 205, 212, 244, 380, 402, 403, 856, 880], "moodi": [8, 138, 205, 244, 380, 402, 403, 856], "chung": [8, 138, 205, 244, 380, 402, 403, 856], "kang": [8, 138, 205, 244, 380, 402, 403, 856], "peng": [8, 138, 205, 244, 380, 402, 403, 856], "h": [8, 96, 101, 112, 127, 135, 138, 202, 204, 205, 217, 244, 256, 258, 264, 265, 321, 380, 402, 403, 446, 449, 557, 603, 660, 682, 698, 713, 778, 789, 854, 855, 856, 862, 880], "eugen": [8, 138, 205, 244, 380, 402, 403, 856], "stanlei": [8, 138, 205, 244, 380, 402, 403, 856], "physiobank": [8, 138, 205, 244, 380, 402, 403, 856], "physiotoolkit": [8, 138, 205, 244, 380, 402, 403, 856], "new": [8, 14, 19, 27, 31, 61, 69, 81, 113, 135, 138, 141, 143, 146, 150, 152, 162, 166, 173, 176, 183, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 215, 217, 218, 221, 226, 229, 230, 231, 239, 244, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 287, 288, 293, 297, 298, 300, 302, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 321, 322, 323, 328, 330, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 369, 370, 371, 372, 380, 386, 388, 389, 402, 403, 409, 410, 412, 414, 416, 417, 421, 422, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 457, 458, 460, 463, 467, 468, 469, 472, 473, 475, 476, 477, 478, 479, 486, 489, 490, 491, 493, 494, 495, 498, 501, 506, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 538, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 584, 587, 588, 589, 596, 598, 602, 603, 608, 612, 614, 615, 619, 623, 631, 633, 634, 635, 636, 637, 639, 642, 645, 649, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 677, 681, 683, 693, 694, 695, 699, 700, 701, 702, 703, 704, 712, 714, 717, 718, 719, 722, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 745, 748, 749, 751, 756, 757, 761, 764, 765, 766, 767, 769, 771, 772, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 810, 811, 812, 814, 817, 821, 824, 825, 826, 830, 831, 833, 835, 837, 838, 841, 843, 844, 845, 847, 850, 855, 856, 859, 860, 861, 862, 863, 865, 867, 868], "research": [8, 67, 70, 138, 142, 145, 152, 156, 169, 199, 205, 223, 241, 244, 255, 380, 402, 403, 526, 592, 682, 847, 854, 856, 858, 867], "resourc": [8, 123, 138, 145, 203, 205, 244, 380, 402, 403, 838, 856, 863, 868], "complex": [8, 32, 37, 114, 135, 136, 138, 205, 226, 244, 264, 265, 266, 267, 290, 380, 402, 403, 423, 478, 479, 529, 652, 703, 718, 719, 727, 728, 730, 835, 839, 856, 865, 880], "circul": [8, 138, 205, 244, 380, 402, 403, 856], "2000": [8, 10, 19, 138, 201, 202, 204, 205, 207, 215, 244, 264, 265, 266, 267, 380, 402, 403, 410, 439, 478, 479, 480, 525, 557, 679, 855, 856, 862], "1161": [8, 138, 205, 244, 380, 402, 403, 856], "cir": [8, 138, 205, 244, 380, 402, 403, 856], "101": [8, 13, 70, 114, 138, 159, 170, 191, 205, 207, 209, 230, 231, 244, 380, 402, 403, 418, 856, 865], "e215": [8, 138, 205, 244, 380, 402, 403, 856], "296": [8, 20, 170, 209, 231], "decoding_csp_eeg": [8, 20], "decomposit": [9, 11, 14, 17, 20, 27, 28, 29, 30, 32, 38, 39, 44, 47, 52, 57, 60, 74, 76, 103, 104, 107, 108, 110, 112, 113, 124, 167, 173, 182, 196, 199, 205, 206, 221, 222, 226, 228, 229, 231, 234, 236, 240, 241, 244, 264, 266, 267, 269, 271, 272, 275, 278, 279, 280, 410, 417, 418, 423, 424, 444, 491, 519, 539, 558, 572, 586, 706, 709, 719, 725, 727, 728, 730, 731, 855, 862, 865, 880], "iter": [9, 19, 27, 35, 36, 43, 44, 56, 59, 83, 90, 93, 94, 95, 104, 112, 134, 135, 138, 158, 170, 173, 180, 181, 195, 205, 217, 223, 230, 234, 235, 236, 244, 258, 259, 261, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 288, 291, 292, 295, 302, 347, 354, 360, 365, 413, 420, 427, 451, 473, 474, 475, 476, 477, 478, 479, 510, 524, 525, 527, 529, 532, 558, 561, 568, 572, 586, 620, 650, 665, 685, 686, 687, 688, 690, 691, 700, 702, 703, 704, 707, 718, 735, 738, 748, 761, 807, 862, 880], "roll": [9, 109, 124, 748, 816], "laura": [9, 196, 244, 880], "gwilliam": [9, 196, 244, 880], "nyu": [9, 37, 101, 120, 134, 172, 226, 880], "jean": [9, 10, 11, 12, 13, 14, 16, 18, 71, 78, 186, 196, 200, 205, 244, 558, 567, 660, 855, 862, 880], "remi": [9, 10, 11, 12, 13, 14, 16, 18, 880], "king": [9, 10, 11, 12, 13, 14, 16, 18, 196, 244, 880], "jeanremi": [9, 10, 11, 12, 13, 14, 16, 18], "alex": [9, 32, 38, 70, 71, 79, 83, 114, 115, 116, 120, 135, 136, 137, 186, 230, 231, 867, 880], "barach": [9, 12, 15, 88, 196, 244, 410, 880], "create_info": [9, 14, 15, 19, 63, 65, 70, 114, 125, 160, 189, 191, 221, 265, 267, 269, 410, 417, 479, 619, 870, 880], "time_frequ": [9, 21, 32, 33, 34, 92, 103, 111, 112, 114, 167, 202, 221, 223, 228, 229, 230, 231, 239, 240, 274, 415, 418, 423, 467, 870, 878, 880], "averagetfr": [9, 112, 114, 263, 266, 267, 317, 435, 467, 703, 722, 730, 731, 732, 733, 808, 870, 880], "stratifiedkfold": [9, 10, 15, 16, 427, 880], "make_pipelin": [9, 10, 11, 12, 13, 15, 18, 138, 196, 425], "labelencod": 9, "motor": [9, 17, 20, 27, 32, 75, 83, 109, 112, 145, 182, 196, 211, 264, 269, 312, 328, 363, 380, 410, 417, 439, 493, 555, 880], "imageri": [9, 17, 20, 27, 112, 196, 264, 269, 312, 328, 363, 380, 410, 439, 493, 555, 880], "n_split": [9, 10, 12, 15, 16, 19, 427], "speed": [9, 10, 11, 19, 32, 33, 41, 42, 44, 50, 74, 82, 83, 84, 94, 103, 109, 113, 135, 136, 142, 146, 152, 159, 162, 163, 166, 173, 180, 181, 184, 195, 196, 199, 205, 207, 209, 212, 227, 228, 234, 236, 264, 265, 271, 272, 275, 276, 278, 279, 280, 415, 416, 422, 466, 478, 479, 531, 532, 558, 643, 718, 748, 778, 780, 801, 806, 811, 837, 839, 859, 863, 868, 880], "shuffl": [9, 10, 12, 15, 231, 880], "n_cycl": [9, 32, 107, 110, 112, 114, 167, 202, 228, 229, 230, 231, 240, 423, 541, 542, 706, 709, 714, 716, 726, 727, 728, 730, 731], "mani": [9, 44, 70, 74, 112, 120, 121, 127, 141, 143, 147, 150, 151, 152, 153, 156, 159, 161, 162, 163, 167, 168, 172, 173, 178, 191, 195, 199, 200, 201, 202, 203, 205, 206, 207, 221, 223, 226, 239, 241, 255, 256, 257, 264, 265, 269, 274, 276, 297, 348, 354, 434, 439, 452, 469, 558, 649, 685, 695, 700, 701, 748, 764, 774, 791, 793, 794, 835, 837, 839, 842, 843, 855, 857, 859, 862, 864, 866, 868, 880], "cycl": [9, 107, 114, 185, 202, 240, 241, 264, 265, 341, 423, 478, 479, 541, 542, 558, 706, 709, 714, 716, 726, 727, 728, 730, 731, 772, 778, 781, 793, 801, 839, 880], "min_freq": 9, "max_freq": 9, "n_freq": [9, 114, 195, 230, 240, 415, 423, 680, 690, 691, 700, 701, 702, 703, 716, 718, 719, 725, 726, 727, 728, 730, 731], "bin": [9, 22, 27, 70, 98, 102, 120, 123, 143, 145, 172, 202, 210, 212, 228, 234, 239, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 290, 297, 418, 478, 479, 485, 499, 577, 611, 680, 684, 685, 687, 688, 690, 691, 701, 702, 704, 772, 780, 784, 838, 839, 842, 843, 844, 845, 850, 862, 880], "tupl": [9, 115, 151, 171, 172, 173, 195, 205, 215, 217, 230, 231, 258, 259, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 287, 288, 302, 313, 322, 323, 360, 385, 410, 417, 425, 443, 444, 447, 450, 477, 478, 479, 486, 488, 489, 490, 493, 494, 495, 500, 504, 513, 515, 524, 541, 542, 557, 558, 561, 566, 572, 574, 575, 587, 612, 618, 619, 651, 652, 653, 665, 677, 685, 687, 688, 690, 691, 692, 700, 702, 703, 704, 712, 719, 735, 738, 748, 749, 757, 762, 765, 767, 768, 770, 772, 776, 777, 779, 780, 782, 784, 786, 787, 789, 791, 794, 796, 800, 802, 803, 806, 807, 808, 810, 811, 812, 816, 880], "linspac": [9, 19, 32, 40, 42, 68, 70, 113, 117, 137, 142, 151, 173, 178, 195, 199, 206, 207, 221, 222, 241], "freq_rang": [9, 241], "infer": [9, 10, 43, 44, 113, 157, 166, 171, 202, 216, 217, 227, 231, 232, 233, 244, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 297, 298, 318, 322, 329, 354, 358, 359, 363, 369, 370, 371, 410, 417, 440, 441, 443, 453, 454, 470, 473, 475, 476, 478, 479, 486, 488, 493, 536, 558, 631, 678, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 700, 702, 704, 761, 786, 787, 788, 795, 801, 810, 833, 835, 846, 862, 880], "gap": [9, 127, 244, 475, 476, 478, 479, 801, 862, 880], "window_spac": 9, "centered_w_tim": 9, "n_window": [9, 577], "len": [9, 10, 15, 16, 18, 19, 28, 32, 39, 41, 42, 43, 45, 47, 52, 63, 67, 68, 70, 72, 74, 90, 93, 100, 114, 117, 138, 141, 144, 145, 157, 160, 169, 177, 179, 184, 186, 192, 195, 199, 200, 201, 202, 203, 205, 207, 208, 210, 211, 212, 216, 222, 223, 226, 227, 228, 230, 231, 241, 258, 259, 261, 262, 264, 265, 266, 267, 269, 273, 275, 276, 277, 288, 302, 353, 360, 412, 420, 445, 448, 478, 479, 524, 649, 680, 702, 703, 716, 726, 735, 748, 753, 779, 801, 809, 810, 880], "instanti": [9, 145, 173, 196, 205, 221, 259, 261, 262, 263, 264, 265, 269, 273, 274, 276, 312, 479, 702, 704, 750, 761, 880], "encod": [9, 19, 127, 144, 145, 151, 167, 169, 173, 189, 195, 196, 209, 210, 211, 244, 250, 269, 346, 416, 486, 493, 500, 501, 502, 612, 833, 835, 862, 868, 880], "le": 9, "59999": [9, 185], "374": [9, 81, 170, 183, 188, 209, 215, 231], "loop": [9, 32, 42, 60, 109, 120, 136, 138, 150, 178, 182, 200, 231, 236, 241, 244, 403, 431, 569, 577, 588, 748, 856, 862, 880], "init": [9, 375, 839, 844], "freq_scor": 9, "fmin": [9, 32, 103, 104, 108, 113, 114, 116, 133, 138, 221, 239, 240, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 415, 478, 479, 531, 532, 700, 701, 702, 703, 704, 705, 707, 708, 710, 718, 719, 729, 732, 748, 767, 802, 806, 808, 811, 812, 880], "fmax": [9, 32, 74, 103, 104, 108, 113, 114, 116, 133, 138, 167, 199, 203, 212, 221, 239, 240, 241, 264, 265, 266, 267, 415, 478, 479, 531, 532, 700, 701, 702, 703, 704, 705, 707, 708, 710, 718, 719, 729, 732, 748, 763, 802, 808, 880], "enumer": [9, 10, 15, 19, 28, 39, 40, 47, 71, 79, 94, 96, 104, 107, 112, 114, 135, 136, 137, 147, 150, 151, 152, 160, 195, 202, 205, 207, 211, 222, 231, 236, 241], "being": [9, 45, 79, 114, 116, 127, 137, 161, 167, 172, 173, 200, 202, 207, 208, 210, 215, 223, 226, 228, 231, 261, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 362, 365, 444, 454, 468, 478, 479, 513, 558, 577, 579, 623, 700, 702, 704, 748, 766, 779, 782, 784, 785, 802, 807, 812, 839, 861, 862, 880], "w_size": 9, "isol": [9, 45, 114, 201, 205, 207, 880], "raw_filt": [9, 114, 142, 203, 205], "pad": [9, 15, 114, 127, 226, 231, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 321, 445, 448, 449, 450, 478, 479, 719, 880], "drop_bad": [9, 16, 143, 152, 192, 201, 264, 265, 314, 467, 558, 702, 703, 862, 880], "fold": [9, 10, 12, 15, 16, 26, 138, 270, 275, 427, 663, 666], "roc_auc": [9, 11, 13, 196, 413, 420], "axi": [9, 10, 12, 14, 15, 16, 19, 21, 22, 28, 31, 35, 45, 58, 60, 68, 70, 72, 84, 90, 96, 100, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 127, 133, 135, 138, 141, 142, 143, 145, 151, 152, 157, 161, 167, 173, 182, 184, 186, 192, 195, 196, 200, 202, 212, 215, 218, 221, 226, 229, 231, 234, 236, 240, 241, 256, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 275, 278, 279, 280, 287, 314, 321, 365, 410, 417, 423, 430, 450, 469, 478, 479, 489, 557, 558, 572, 653, 677, 679, 687, 688, 690, 691, 694, 700, 702, 704, 729, 732, 748, 761, 764, 765, 772, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 791, 793, 795, 796, 800, 801, 802, 803, 808, 809, 810, 845, 862, 880], "701": [9, 136, 196, 231], "205": [9, 112, 170, 185, 230, 231], "281": [9, 170], "629": [9, 229, 231], "17": [9, 10, 11, 12, 13, 19, 26, 28, 32, 34, 35, 41, 43, 45, 47, 50, 60, 61, 71, 79, 81, 84, 90, 91, 96, 103, 106, 107, 108, 109, 112, 114, 115, 123, 130, 138, 146, 149, 152, 157, 158, 159, 161, 170, 172, 173, 177, 178, 181, 182, 183, 184, 185, 186, 189, 192, 196, 200, 208, 209, 214, 215, 220, 221, 226, 227, 228, 230, 231, 234, 235, 236, 244, 264, 265, 266, 267, 271, 274, 275, 276, 277, 279, 280, 288, 297, 354, 356, 359, 360, 371, 410, 417, 419, 477, 478, 479, 525, 531, 532, 588, 653, 665, 688, 700, 716, 726, 727, 730, 765, 806, 812, 856, 862], "165": [9, 106, 108, 147, 170, 202, 205, 211, 226, 231, 244], "031": [9, 128, 141, 150, 170, 185, 223], "581": [9, 74, 85, 209, 231], "139": [9, 20, 147, 149, 170, 223, 226, 230, 231, 277, 880], "869": [9, 35, 56, 106, 113, 231], "549": [9, 208, 209, 231, 244], "22": [9, 11, 13, 14, 15, 16, 19, 21, 28, 32, 34, 35, 39, 40, 44, 45, 47, 81, 88, 90, 103, 108, 109, 110, 112, 114, 130, 133, 138, 145, 149, 151, 170, 172, 177, 181, 184, 189, 192, 195, 196, 205, 208, 209, 211, 214, 223, 226, 227, 228, 230, 231, 235, 236, 239, 244, 264, 265, 266, 267, 276, 277, 312, 335, 339, 340, 360, 403, 449, 478, 479, 498, 513, 518, 558, 561, 602, 619, 636, 645, 695, 719, 764, 792, 802, 838, 862], "121": [9, 45, 90, 141, 146, 167, 170, 171, 209, 226, 230, 231, 264, 265, 433], "756": [9, 196, 209, 231], "523": [9, 109, 121, 130, 231], "bar": [9, 135, 144, 151, 172, 184, 217, 218, 241, 261, 264, 265, 266, 267, 273, 274, 410, 413, 417, 420, 478, 479, 557, 558, 700, 702, 704, 748, 772, 777, 778, 779, 780, 784, 787, 791, 795, 800, 801, 803, 808, 817, 862, 880], "width": [9, 114, 127, 135, 161, 173, 199, 202, 203, 218, 226, 241, 262, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 313, 321, 326, 412, 421, 446, 448, 449, 469, 478, 479, 592, 700, 714, 716, 726, 729, 730, 732, 748, 757, 776, 777, 804, 806, 807, 811, 835, 859, 862, 880], "edgecolor": [9, 10, 240], "black": [9, 21, 45, 47, 48, 50, 112, 136, 143, 152, 161, 191, 207, 211, 261, 262, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 748, 761, 764, 765, 776, 780, 782, 786, 787, 791, 799, 800, 802, 803, 806, 808, 809, 810, 811, 880], "xtick": [9, 15, 19, 90, 127, 195, 202, 212, 226], "tf_score": 9, "center": [9, 37, 45, 68, 70, 80, 90, 95, 112, 120, 121, 135, 152, 157, 159, 161, 171, 186, 199, 201, 202, 203, 207, 226, 241, 255, 256, 266, 267, 270, 275, 305, 419, 489, 511, 522, 558, 567, 649, 652, 657, 663, 666, 700, 738, 748, 752, 788, 799, 807, 856, 862, 867, 880], "w_tmin": 9, "w_tmax": 9, "av_tfr": 9, "newaxi": [9, 15, 28, 100, 117, 231, 234, 235, 236, 748], "white": [9, 24, 26, 41, 52, 109, 112, 116, 121, 126, 127, 133, 135, 136, 143, 157, 159, 160, 161, 177, 179, 191, 210, 222, 226, 231, 256, 262, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 369, 468, 478, 479, 511, 544, 545, 605, 623, 648, 700, 702, 704, 748, 764, 766, 776, 786, 788, 806, 809, 811, 835, 855, 880], "vmin": [9, 13, 19, 88, 107, 112, 114, 116, 117, 137, 142, 161, 177, 195, 196, 210, 211, 226, 228, 229, 240, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 748, 765, 779, 780, 787, 791, 800, 803, 808, 809, 810, 880], "red": [9, 54, 59, 70, 80, 81, 83, 100, 112, 132, 133, 143, 145, 151, 157, 161, 171, 179, 182, 191, 195, 199, 200, 203, 207, 210, 211, 218, 231, 234, 240, 241, 260, 261, 262, 264, 265, 266, 267, 270, 273, 410, 417, 478, 479, 557, 558, 572, 622, 700, 702, 704, 748, 763, 765, 772, 773, 776, 779, 780, 782, 787, 791, 800, 803, 808, 810, 835, 839, 880], "895": [9, 20, 50, 231], "decoding_csp_timefreq": [9, 20], "supervis": [10, 18, 88, 138, 410, 427], "class": [10, 16, 19, 60, 69, 88, 94, 95, 114, 115, 138, 141, 143, 150, 152, 158, 166, 167, 169, 172, 173, 176, 195, 201, 202, 205, 215, 218, 221, 231, 242, 243, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 302, 312, 313, 365, 394, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 451, 477, 478, 479, 509, 524, 557, 558, 559, 585, 650, 680, 700, 701, 702, 703, 704, 718, 719, 735, 736, 737, 738, 743, 744, 745, 748, 749, 750, 759, 835, 839, 847, 848, 855, 857, 862, 863, 865, 870, 871, 880], "rel": [10, 24, 32, 33, 34, 42, 61, 75, 86, 109, 112, 113, 127, 135, 138, 141, 143, 145, 157, 167, 169, 171, 190, 199, 202, 203, 207, 210, 211, 212, 217, 240, 241, 256, 257, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 309, 358, 365, 416, 431, 434, 446, 478, 479, 522, 558, 583, 586, 602, 638, 640, 656, 693, 700, 703, 705, 706, 707, 719, 748, 761, 766, 781, 786, 795, 799, 801, 809, 835, 839, 855, 862, 865, 880], "character": [10, 13, 196, 244, 558, 662, 794, 862], "confus": [10, 15, 138, 145, 660, 839], "serv": [10, 169, 216, 231, 261, 264, 265, 266, 267, 273, 281, 410, 417, 478, 479, 557, 558, 572, 700, 702, 703, 704, 746, 764, 765, 780, 787, 791, 800, 803, 808, 810, 839, 861, 862], "proxi": [10, 205, 209], "mental": [10, 13, 196, 244], "rsa": [10, 846, 856, 880], "24": [10, 11, 13, 19, 21, 26, 28, 34, 35, 44, 45, 46, 47, 56, 64, 81, 103, 108, 109, 114, 119, 123, 130, 145, 170, 172, 175, 182, 184, 190, 192, 195, 196, 198, 209, 210, 223, 226, 227, 228, 230, 231, 234, 235, 236, 241, 244, 246, 258, 262, 264, 265, 266, 267, 269, 270, 274, 277, 297, 343, 349, 361, 363, 389, 418, 440, 441, 442, 443, 453, 475, 478, 479, 486, 493, 501, 506, 518, 525, 558, 561, 695, 699, 700, 702, 703, 704, 736, 738, 745, 748, 758, 766, 771, 778, 795, 801, 802, 810, 813, 817, 826, 855, 862], "imag": [10, 16, 27, 30, 32, 33, 35, 40, 44, 46, 55, 59, 70, 79, 88, 112, 120, 122, 124, 127, 128, 130, 135, 137, 144, 147, 150, 156, 157, 160, 161, 167, 171, 177, 181, 183, 191, 192, 199, 202, 205, 206, 207, 208, 223, 226, 227, 229, 230, 231, 240, 241, 244, 255, 261, 264, 265, 266, 267, 269, 273, 274, 276, 277, 279, 280, 289, 290, 291, 292, 297, 298, 303, 307, 312, 313, 321, 338, 353, 360, 366, 388, 410, 417, 470, 473, 475, 476, 478, 479, 487, 498, 525, 557, 558, 572, 583, 585, 615, 649, 655, 656, 657, 658, 659, 660, 661, 662, 700, 702, 704, 716, 726, 736, 737, 738, 748, 749, 751, 764, 765, 766, 779, 780, 784, 786, 787, 791, 793, 800, 803, 808, 809, 810, 812, 816, 818, 835, 840, 845, 846, 856, 865, 867, 880], "92": [10, 13, 19, 34, 35, 44, 65, 66, 79, 81, 103, 112, 114, 144, 149, 163, 170, 181, 195, 196, 201, 209, 226, 227, 228, 230, 231, 235, 236, 522, 862], "human": [10, 19, 33, 58, 94, 113, 126, 145, 152, 156, 179, 181, 195, 223, 244, 264, 265, 266, 267, 275, 290, 297, 374, 387, 412, 416, 421, 446, 448, 449, 478, 479, 563, 689, 716, 726, 727, 730, 835, 836, 846, 855, 856, 868], "anim": [10, 137, 266, 267, 856, 880], "inanim": [10, 856], "bodi": [10, 207, 208, 738, 856], "part": [10, 119, 127, 135, 141, 143, 145, 152, 156, 159, 161, 162, 163, 172, 183, 199, 202, 203, 207, 212, 215, 223, 244, 255, 264, 266, 267, 269, 270, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 439, 453, 454, 473, 475, 476, 478, 480, 498, 531, 532, 536, 628, 677, 687, 688, 690, 691, 700, 703, 748, 765, 784, 788, 835, 839, 840, 861, 862, 863, 865, 868, 880], "6gb": 10, "build": [10, 12, 21, 32, 45, 156, 173, 176, 192, 199, 200, 202, 226, 234, 235, 236, 837, 843, 845, 861, 868, 880], "jaakko": [10, 192, 880], "leppakanga": [10, 192, 880], "jaeilepp": [10, 192], "student": [10, 192, 839], "jyu": [10, 192], "panda": [10, 14, 101, 112, 141, 144, 148, 149, 150, 152, 166, 172, 191, 192, 210, 215, 227, 239, 258, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 434, 478, 479, 615, 686, 700, 702, 703, 704, 838, 839, 862, 880], "read_csv": [10, 191, 192], "standardscal": [10, 11, 13, 18, 196, 419], "linear_model": [10, 11, 12, 13, 15, 18, 196, 868], "logisticregress": [10, 11, 13, 15, 196, 414, 425], "metric": [10, 15, 27, 36, 56, 90, 117, 138, 196, 212, 261, 266, 268, 269, 275, 364, 413, 416, 420, 524, 536, 537, 540, 556, 558, 609, 618, 620, 748, 794, 861, 870, 875, 880], "roc_auc_scor": [10, 413, 420, 870], "manifold": [10, 117, 119, 765], "md": [10, 244, 653], "visual_92_categori": [10, 856, 870, 880], "stimulu": [10, 13, 33, 34, 49, 69, 71, 73, 81, 82, 90, 93, 107, 120, 141, 143, 144, 145, 147, 150, 163, 167, 168, 169, 170, 181, 184, 189, 192, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 215, 216, 217, 218, 223, 230, 236, 241, 256, 258, 264, 265, 266, 267, 269, 314, 346, 354, 416, 434, 439, 478, 479, 555, 561, 665, 700, 702, 703, 704, 835, 856, 862, 880], "fname": [10, 12, 21, 53, 65, 78, 86, 87, 112, 119, 120, 128, 131, 161, 171, 205, 256, 258, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 301, 312, 313, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 351, 352, 440, 441, 442, 443, 478, 479, 481, 482, 483, 484, 487, 492, 496, 497, 498, 501, 505, 506, 507, 508, 509, 510, 539, 543, 547, 548, 557, 558, 598, 599, 600, 601, 604, 606, 607, 608, 609, 610, 611, 613, 616, 617, 618, 619, 620, 621, 624, 626, 627, 628, 629, 630, 631, 633, 635, 646, 700, 701, 702, 703, 704, 720, 721, 722, 733, 735, 742, 821, 822, 823, 824, 826, 827, 828, 831, 832, 833, 834, 866, 880], "visual_stimuli": 10, "csv": [10, 123, 192, 217, 258, 330, 336, 501, 606, 880], "cond": [10, 40, 46, 59, 61, 99, 101, 151, 231, 236, 257], "restrict": [10, 28, 29, 104, 126, 143, 152, 159, 162, 167, 179, 203, 204, 207, 208, 215, 222, 226, 229, 230, 241, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 278, 279, 280, 284, 285, 297, 298, 456, 457, 478, 479, 525, 526, 527, 528, 529, 531, 532, 541, 542, 550, 551, 554, 555, 556, 663, 700, 702, 703, 704, 711, 717, 866, 880], "max_trigg": 10, "row": [10, 73, 101, 112, 127, 142, 143, 144, 145, 146, 151, 167, 170, 173, 176, 192, 196, 211, 215, 226, 227, 259, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 299, 358, 369, 410, 416, 417, 434, 478, 479, 501, 537, 540, 558, 559, 577, 685, 686, 700, 701, 702, 703, 704, 748, 774, 779, 787, 791, 794, 862, 865, 880], "cond_tag": 10, "els": [10, 15, 28, 31, 40, 47, 94, 96, 114, 152, 161, 176, 192, 202, 207, 215, 226, 241, 261, 262, 264, 265, 266, 267, 269, 273, 288, 302, 410, 417, 478, 479, 517, 524, 558, 559, 649, 655, 656, 657, 658, 659, 660, 661, 662, 683, 702, 704, 727, 728, 735, 776, 780, 801, 838, 839, 863, 880], "str": [10, 30, 39, 41, 101, 128, 144, 146, 151, 172, 184, 195, 227, 241, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 677, 679, 681, 683, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 717, 718, 719, 722, 723, 727, 728, 730, 731, 732, 733, 735, 736, 737, 738, 740, 743, 744, 745, 747, 748, 751, 753, 756, 758, 760, 763, 764, 765, 766, 767, 768, 769, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 817, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 839, 880], "bodypart": 10, "natur": [10, 19, 126, 173, 195, 230, 244, 387, 416, 450, 592, 856, 862, 865, 880], "n_run": 10, "sample_subject_": 10, "_tsss_mc": 10, "on_split_miss": [10, 478, 498, 880], "ignor": [10, 41, 47, 69, 79, 81, 109, 136, 141, 147, 152, 163, 167, 173, 182, 185, 192, 199, 200, 201, 207, 226, 256, 259, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 282, 283, 284, 285, 297, 298, 316, 324, 339, 348, 349, 354, 358, 360, 361, 363, 365, 369, 370, 375, 377, 378, 379, 382, 383, 385, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 417, 419, 429, 437, 439, 444, 446, 451, 457, 460, 467, 473, 475, 476, 478, 479, 480, 489, 491, 495, 498, 506, 536, 553, 557, 558, 561, 569, 577, 588, 608, 612, 614, 615, 623, 637, 639, 642, 648, 649, 665, 687, 689, 700, 702, 703, 704, 745, 765, 776, 777, 778, 780, 781, 784, 787, 791, 792, 800, 801, 802, 803, 808, 810, 826, 828, 830, 835, 839, 880], "filenam": [10, 43, 44, 71, 73, 76, 81, 82, 83, 93, 127, 136, 141, 142, 147, 152, 157, 158, 168, 169, 173, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 223, 256, 258, 259, 261, 264, 265, 266, 267, 270, 274, 277, 288, 301, 309, 312, 351, 352, 440, 441, 443, 453, 463, 469, 477, 478, 479, 482, 497, 498, 503, 507, 509, 520, 521, 599, 604, 606, 611, 613, 615, 617, 618, 621, 622, 623, 624, 627, 631, 635, 639, 646, 649, 665, 701, 720, 742, 748, 756, 801, 821, 822, 823, 825, 828, 829, 830, 833, 845, 880], "min_dur": [10, 212, 451, 560], "002": [10, 13, 32, 33, 121, 128, 141, 142, 143, 146, 150, 167, 170, 189, 195, 196, 201, 202, 204, 207, 215, 218, 223, 244, 451], "specif": [10, 19, 27, 43, 44, 45, 70, 105, 106, 112, 120, 127, 136, 138, 142, 144, 145, 151, 152, 156, 161, 162, 171, 172, 173, 176, 190, 191, 192, 199, 200, 202, 203, 205, 207, 208, 210, 212, 215, 218, 223, 226, 227, 228, 231, 239, 240, 241, 244, 258, 260, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 278, 279, 280, 287, 297, 312, 410, 417, 434, 439, 441, 445, 451, 478, 479, 480, 493, 511, 534, 535, 555, 556, 557, 558, 564, 569, 572, 577, 588, 622, 628, 649, 679, 686, 700, 701, 702, 703, 704, 716, 726, 730, 748, 767, 772, 779, 780, 787, 791, 800, 801, 803, 806, 808, 809, 811, 812, 829, 835, 839, 843, 846, 854, 856, 861, 862, 863, 865, 868, 869, 880], "appel": 10, "dissimilar": 10, "rdm": 10, "cichi": [10, 244, 856], "et": [10, 16, 19, 21, 195, 202, 204, 241, 255, 264, 265, 566, 862, 867, 880], "al": [10, 16, 19, 21, 195, 202, 204, 241, 264, 265, 566, 862, 880], "multiclass": [10, 244, 410, 427, 880], "multinomi": 10, "logist": [10, 11, 15, 18, 196], "paper": [10, 16, 202, 206, 244, 297, 473, 525, 558, 660, 854, 862], "pairwis": [10, 47, 70, 117, 244, 566], "binari": [10, 99, 161, 196, 216, 262, 411, 427, 451, 494, 495, 499, 502, 610, 680, 686, 698, 825, 837, 844, 845, 862, 865, 880], "roc": [10, 13, 661], "auc": [10, 13, 196, 661], "final": [10, 16, 19, 42, 67, 69, 70, 79, 83, 84, 112, 113, 114, 127, 135, 138, 141, 142, 145, 147, 151, 152, 157, 161, 163, 167, 172, 180, 182, 183, 191, 195, 200, 201, 205, 206, 207, 210, 211, 226, 228, 230, 231, 234, 236, 241, 264, 265, 266, 267, 318, 329, 416, 453, 478, 479, 650, 818, 839, 855, 859, 861, 880], "sake": [10, 127, 201, 230, 866], "did": [10, 11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 83, 104, 107, 108, 110, 124, 161, 162, 163, 167, 171, 173, 176, 177, 182, 202, 205, 207, 208, 221, 222, 234, 236, 269, 277, 857, 865, 880], "instant": [10, 13, 42, 120, 178, 184, 196, 262, 266, 267, 287, 353, 453, 674, 675, 676, 700, 705, 706, 707, 708, 709, 710, 711, 783, 785, 787], "50m": 10, "300m": 10, "focu": [10, 12, 83, 127, 145, 201, 202, 845, 880], "liblinear": [10, 11, 13, 15, 18, 196], "multi_class": [10, 15], "y_pred": [10, 12, 19, 138, 413, 414, 416, 420, 880], "probabilist": [10, 244, 354, 413, 414, 420, 862, 868], "necessari": [10, 21, 31, 73, 94, 127, 136, 147, 152, 156, 157, 159, 161, 162, 167, 170, 172, 181, 199, 201, 202, 203, 204, 205, 206, 207, 215, 216, 221, 226, 257, 264, 265, 266, 267, 268, 271, 272, 275, 276, 278, 279, 280, 297, 298, 316, 318, 325, 358, 375, 410, 417, 419, 434, 445, 453, 477, 478, 479, 486, 493, 497, 525, 588, 596, 606, 613, 617, 645, 664, 700, 702, 703, 704, 748, 787, 806, 811, 835, 839, 855, 856, 860, 861, 862, 865, 880], "predict_proba": [10, 413, 414, 420], "ii": [10, 15, 19, 39, 93, 99, 107, 119, 136, 160, 184, 186, 191, 195, 212, 226, 236, 244, 271, 272, 275, 278, 279, 280, 320, 413, 420, 487, 558, 649, 686, 765, 880], "train_class": 10, "jj": 10, "im": [10, 13, 15, 22, 70, 115, 137, 196, 751, 810, 818, 880], "matshow": [10, 13], "rdbu_r": [10, 13, 16, 19, 22, 107, 114, 195, 196, 228, 229, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 779, 780, 784, 787, 791, 800, 803, 808, 809, 810, 839], "set_ytick": 10, "set_yticklabel": [10, 112], "set_xtick": [10, 241], "set_xticklabel": [10, 241], "colorbar": [10, 13, 15, 22, 70, 71, 107, 112, 114, 115, 116, 120, 127, 137, 143, 147, 151, 177, 183, 196, 207, 211, 218, 226, 227, 228, 230, 231, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 410, 417, 478, 479, 557, 558, 572, 700, 701, 702, 704, 748, 762, 765, 767, 772, 773, 774, 779, 780, 784, 785, 787, 791, 800, 803, 806, 808, 809, 810, 811, 812, 880], "tight_layout": [10, 12, 15, 19, 39, 41, 58, 70, 72, 86, 114, 115, 120, 135, 177, 182, 195, 202, 207, 210, 211, 223, 226, 230, 231, 880], "relat": [10, 12, 19, 27, 32, 33, 34, 70, 77, 101, 105, 106, 112, 117, 128, 132, 137, 145, 147, 154, 155, 156, 159, 161, 163, 166, 167, 173, 174, 179, 189, 190, 195, 196, 199, 201, 202, 204, 205, 206, 209, 210, 211, 217, 227, 234, 240, 241, 244, 264, 265, 266, 267, 269, 274, 287, 314, 329, 353, 393, 416, 417, 434, 446, 451, 467, 478, 479, 549, 558, 566, 615, 645, 649, 679, 700, 748, 761, 769, 772, 779, 794, 795, 801, 809, 820, 835, 837, 839, 842, 854, 856, 857, 859, 860, 861, 862, 863, 868, 880], "histor": [10, 151, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 335, 478, 479, 700, 703, 862, 868, 880], "summar": [10, 45, 113, 152, 203, 205, 215, 264, 265, 271, 272, 275, 278, 279, 280, 772, 779, 855, 861, 866, 880], "dimension": [10, 151, 176, 196, 200, 206, 207, 215, 231, 234, 235, 236, 244, 266, 267, 271, 272, 275, 278, 279, 280, 354, 418, 423, 425, 558, 680, 700, 748, 782, 835, 862, 880], "reduct": [10, 17, 20, 27, 114, 192, 203, 211, 212, 244, 264, 265, 266, 267, 269, 369, 373, 409, 418, 424, 478, 555, 558, 559, 588, 596, 615, 728, 731, 880], "multi": [10, 16, 27, 36, 46, 56, 83, 104, 126, 171, 190, 196, 202, 234, 235, 236, 244, 261, 262, 264, 265, 266, 267, 268, 269, 273, 279, 302, 387, 410, 411, 415, 417, 426, 449, 451, 453, 476, 478, 479, 520, 524, 525, 527, 531, 532, 536, 557, 558, 572, 607, 609, 610, 635, 700, 702, 704, 718, 723, 765, 780, 787, 791, 800, 803, 808, 810, 814, 846, 862, 865, 880], "cluster": [10, 27, 98, 102, 112, 166, 227, 232, 233, 237, 238, 241, 244, 264, 266, 267, 269, 275, 276, 277, 318, 353, 360, 433, 451, 478, 524, 525, 539, 555, 615, 628, 630, 635, 672, 680, 681, 683, 687, 688, 690, 691, 692, 703, 730, 748, 807, 877, 880], "togeth": [10, 43, 70, 74, 142, 150, 152, 167, 173, 176, 189, 199, 205, 207, 210, 211, 215, 221, 231, 264, 265, 266, 267, 274, 283, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 432, 453, 454, 473, 475, 476, 478, 479, 502, 536, 558, 587, 614, 631, 634, 687, 688, 690, 691, 718, 788, 828, 833, 835, 839, 880], "precomput": [10, 157, 182, 192, 264, 265, 360, 478, 479, 558, 648, 778, 795, 801, 880], "colormap": [10, 24, 58, 109, 112, 113, 116, 127, 135, 137, 143, 161, 207, 241, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 410, 417, 478, 479, 557, 558, 572, 692, 700, 701, 702, 704, 748, 763, 765, 767, 772, 774, 779, 780, 784, 787, 790, 791, 800, 803, 806, 808, 809, 810, 811, 812, 830, 839, 880], "rainbow": 10, "sel": [10, 31, 227, 549, 552, 554, 555, 635, 701], "this_nam": 10, "scatter": [10, 45, 115, 226, 766, 880], "facecolor": [10, 47, 135, 152, 226], "scatterpoint": 10, "ncol": [10, 15, 73, 112, 120, 127, 138, 147, 152, 177, 184, 211, 266, 267, 410, 417, 558, 787, 791, 865, 880], "shepard": [10, 244], "multidimension": [10, 226, 244, 413, 420, 427], "tree": [10, 244, 865], "scienc": [10, 13, 33, 40, 101, 113, 181, 196, 223, 227, 241, 244, 255, 290, 297, 393, 475, 525, 558, 856, 862, 867], "210": [10, 13, 35, 81, 87, 112, 124, 151, 170, 196, 218, 230, 231, 244], "4468": [10, 244], "390": [10, 12, 13, 21, 81, 209, 231, 244], "398": [10, 81, 231, 244], "1980": [10, 152, 244], "1126": [10, 209, 244], "aarr": [10, 244], "laakso": [10, 244], "garrison": [10, 244], "cottrel": [10, 244], "content": [10, 27, 105, 159, 167, 170, 173, 202, 203, 206, 211, 218, 240, 244, 264, 265, 268, 274, 386, 387, 442, 509, 756, 772, 779, 835, 839, 844, 880], "assess": [10, 13, 138, 157, 163, 171, 199, 244, 525, 536, 558, 657, 662, 859, 862], "neural": [10, 18, 19, 22, 27, 33, 62, 66, 70, 71, 83, 117, 138, 152, 179, 181, 196, 199, 202, 205, 208, 212, 223, 241, 242, 244, 269, 290, 297, 298, 373, 410, 414, 416, 417, 473, 479, 558, 567, 586, 835, 840, 856, 880], "philosoph": [10, 244, 525, 862], "76": [10, 13, 15, 16, 18, 19, 34, 35, 46, 47, 79, 80, 81, 103, 108, 109, 112, 114, 119, 160, 170, 177, 192, 195, 196, 209, 226, 227, 228, 230, 231, 234, 235, 236, 244, 681, 765], "09515080050002726": [10, 244], "nikolau": [10, 244], "kriegeskort": [10, 244], "mariek": [10, 244], "mur": [10, 244], "peter": [10, 181, 239, 244, 264, 265, 266, 267, 478, 479, 525, 558, 702, 704, 719, 729, 732, 862, 880], "bandettini": [10, 244], "connect": [10, 38, 47, 70, 161, 167, 172, 223, 226, 244, 270, 289, 291, 297, 298, 375, 592, 680, 687, 688, 690, 691, 696, 768, 845, 846, 851, 870, 880], "branch": [10, 244, 839], "neuro": [10, 86, 244, 880], "radoslaw": [10, 244, 856], "aud": [10, 28, 29, 37, 39, 49, 92, 99, 104, 107, 108, 151, 231, 244, 264, 772, 856], "oliva": [10, 244, 856], "resolv": [10, 181, 205, 210, 244, 711, 843, 856, 880], "recognit": [10, 46, 101, 152, 202, 244, 729, 732, 856], "455": [10, 226, 231, 244, 277, 856], "462": [10, 13, 209, 226, 231, 244, 277, 856], "2014": [10, 12, 13, 18, 19, 40, 71, 113, 121, 152, 163, 196, 202, 244, 266, 267, 354, 414, 416, 417, 418, 428, 475, 567, 592, 682, 729, 732, 854, 856, 859], "1038": [10, 126, 195, 244, 387, 416, 856], "nn": [10, 179, 244, 277, 649, 856, 865, 880], "3635": [10, 244, 856], "decoding_rsa_sgskip": [10, 20], "cortic": [11, 24, 26, 27, 31, 32, 41, 43, 58, 77, 80, 85, 90, 94, 109, 113, 122, 130, 156, 159, 164, 166, 167, 173, 176, 179, 181, 187, 192, 200, 223, 226, 235, 244, 256, 261, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 282, 284, 285, 297, 298, 360, 364, 388, 444, 455, 473, 475, 476, 478, 511, 525, 526, 527, 528, 529, 532, 536, 541, 542, 555, 556, 573, 605, 608, 609, 620, 623, 630, 657, 660, 662, 663, 664, 665, 666, 696, 748, 759, 807, 835, 837, 840, 843, 846, 856, 865, 868, 880], "univari": [11, 166, 196, 226, 227, 232, 233, 244, 264, 269, 478, 555, 615, 681, 683, 684, 688, 703, 730, 877, 880], "confin": [11, 47, 159, 230, 290, 862], "potenti": [11, 15, 47, 70, 71, 73, 78, 88, 101, 117, 127, 128, 142, 145, 154, 155, 166, 169, 173, 196, 200, 202, 204, 208, 226, 227, 230, 241, 244, 264, 265, 266, 267, 269, 270, 275, 309, 314, 353, 360, 369, 393, 449, 466, 467, 478, 479, 480, 549, 559, 566, 567, 615, 645, 663, 666, 686, 693, 763, 772, 779, 809, 820, 855, 856, 859, 861, 862, 880], "relev": [11, 12, 26, 101, 112, 126, 152, 170, 181, 196, 202, 203, 204, 211, 244, 277, 372, 417, 558, 574, 699, 791, 793, 839, 854, 855, 859, 862, 865], "eric": [11, 19, 22, 26, 34, 39, 50, 57, 65, 72, 80, 84, 93, 94, 109, 118, 120, 123, 126, 127, 129, 135, 136, 137, 156, 158, 160, 180, 181, 183, 184, 185, 192, 195, 196, 209, 226, 230, 231, 234, 235, 236, 244, 270, 275, 388, 525, 596, 665, 687, 688, 690, 691, 854, 856, 867, 880], "larson": [11, 19, 22, 26, 34, 39, 50, 57, 65, 72, 80, 84, 93, 94, 109, 118, 120, 123, 126, 127, 129, 135, 136, 137, 160, 180, 181, 183, 184, 185, 192, 195, 196, 209, 226, 230, 234, 235, 236, 244, 264, 265, 266, 267, 270, 275, 388, 478, 479, 596, 665, 854, 856, 867, 880], "feature_select": 11, "selectkbest": 11, "f_classif": 11, "apply_inverse_epoch": [11, 28, 45, 271, 272, 275, 278, 279, 280, 525, 526, 528, 529, 870, 880], "read_inverse_oper": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 104, 107, 108, 110, 124, 167, 182, 222, 234, 236, 543, 870], "cross_val_multiscor": [11, 196, 870, 880], "linearmodel": [11, 18, 196, 870, 880], "slidingestim": [11, 196, 427, 870, 880], "get_coef": [11, 18, 196, 870, 880], "meg_path": [11, 13, 14, 15, 16, 22, 28, 30, 31, 35, 37, 39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 68, 69, 71, 72, 76, 78, 86, 87, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 117, 118, 121, 131, 132, 133, 179, 180, 181, 182, 196, 223, 228, 229, 230, 231, 234, 235, 236], "fname_fwd": [11, 32, 33, 34, 41, 42, 43, 47, 48, 49, 54, 58, 178, 180, 222], "sample_audvi": [11, 22, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 68, 78, 86, 87, 90, 92, 93, 94, 95, 104, 107, 108, 110, 116, 119, 120, 124, 127, 131, 134, 150, 151, 167, 173, 176, 177, 178, 179, 180, 181, 182, 196, 222, 223, 234, 235, 236, 256, 264, 265, 266, 267, 478, 479], "sample_audvis_filt": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 88, 96, 97, 99, 100, 117, 121, 132, 133, 142, 146, 152, 153, 167, 170, 173, 178, 181, 196, 201, 205, 231, 234, 236, 862], "40_raw": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 88, 96, 97, 99, 100, 117, 121, 132, 133, 142, 146, 152, 153, 167, 170, 173, 178, 181, 196, 201, 205, 231, 234, 236, 862], "event_fnam": [11, 14, 15, 16, 18, 69, 88, 96, 97, 100, 117, 121, 132, 229, 230, 231, 234, 236], "ev": [11, 13, 14, 15, 16, 18, 28, 69, 88, 94, 96, 97, 100, 103, 104, 117, 121, 132, 141, 146, 152, 173, 201, 216, 229, 230, 231, 234, 236, 256, 615, 616, 825, 859, 880], "fname_cov": [11, 41, 48, 49, 50, 54, 55, 58, 64, 94, 177, 180, 182], "fname_inv": [11, 28, 29, 30, 38, 39, 44, 47, 57, 60, 104, 107, 108, 110, 124, 182, 222, 234, 236], "inv": [11, 28, 29, 30, 38, 39, 44, 45, 47, 52, 57, 60, 94, 104, 107, 108, 110, 124, 135, 157, 159, 161, 167, 173, 178, 179, 180, 182, 183, 192, 196, 222, 223, 234, 236, 256, 444, 530, 533, 536, 538, 539, 543, 805, 839, 855, 862, 880], "aud_r": [11, 14, 15, 42, 230], "vis_r": [11, 14, 15, 42, 88, 230], "contra": 11, "setup": [11, 15, 16, 18, 24, 43, 44, 45, 69, 70, 72, 88, 96, 97, 100, 107, 108, 110, 117, 132, 135, 156, 228, 229, 234, 236, 240, 257, 277, 324, 375, 451, 838, 839, 840, 841, 843, 845, 856, 860, 865, 880], "read_ev": [11, 13, 14, 15, 16, 18, 28, 69, 88, 94, 96, 97, 100, 103, 104, 117, 121, 132, 141, 146, 152, 201, 216, 229, 230, 231, 234, 236, 265, 451, 612, 825, 835, 870, 880], "modifi": [11, 61, 69, 117, 135, 141, 150, 151, 152, 162, 166, 169, 170, 173, 174, 175, 183, 196, 200, 206, 208, 211, 217, 221, 226, 230, 239, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 276, 277, 278, 279, 280, 281, 287, 312, 318, 340, 361, 363, 364, 365, 384, 410, 412, 414, 415, 417, 418, 419, 421, 422, 424, 425, 432, 469, 473, 478, 479, 486, 493, 508, 525, 538, 550, 554, 557, 558, 580, 584, 585, 587, 588, 589, 590, 591, 603, 636, 642, 645, 651, 652, 653, 654, 682, 693, 694, 700, 701, 702, 703, 704, 717, 719, 744, 748, 751, 764, 769, 783, 785, 801, 815, 816, 847, 855, 856, 862, 865, 880], "your": [11, 31, 47, 69, 70, 94, 95, 117, 121, 127, 135, 136, 141, 142, 143, 150, 152, 156, 158, 159, 160, 162, 163, 167, 168, 169, 173, 178, 182, 183, 191, 192, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 215, 216, 217, 226, 239, 240, 241, 256, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 281, 297, 298, 309, 318, 329, 332, 335, 338, 354, 358, 359, 369, 370, 371, 388, 410, 417, 434, 451, 453, 454, 473, 475, 476, 478, 479, 489, 494, 536, 544, 557, 558, 561, 568, 574, 588, 606, 612, 686, 700, 702, 703, 704, 748, 778, 785, 788, 794, 795, 801, 806, 818, 837, 842, 843, 844, 845, 846, 847, 854, 855, 856, 857, 858, 859, 860, 862, 865, 880], "2443": [11, 42, 73, 76, 88, 92, 93, 107, 108, 110, 111, 117, 121, 147, 167, 168, 169, 170, 178, 181, 196, 199, 200, 201, 206, 207, 210, 215, 216, 217, 218, 223, 228, 229, 230, 234, 236], "grad": [11, 16, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 61, 76, 78, 86, 87, 93, 94, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 123, 124, 127, 131, 132, 141, 143, 146, 151, 153, 157, 158, 159, 163, 167, 170, 171, 173, 177, 178, 179, 180, 181, 182, 184, 196, 200, 201, 207, 209, 210, 215, 221, 222, 223, 228, 229, 230, 234, 236, 239, 240, 256, 259, 261, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 297, 298, 311, 318, 319, 338, 354, 358, 359, 369, 370, 371, 373, 410, 417, 419, 453, 454, 473, 475, 476, 478, 479, 514, 521, 536, 555, 556, 557, 558, 563, 568, 570, 571, 572, 574, 575, 577, 641, 686, 700, 702, 703, 704, 771, 772, 778, 779, 780, 782, 784, 786, 787, 788, 791, 801, 803, 804, 808, 809, 810, 835, 855, 862, 865, 880], "4000e": [11, 16, 28, 42, 45, 46, 76, 96, 97, 100, 103, 104, 107, 110, 113, 117, 121, 132, 153, 167, 178, 181, 196, 207, 228, 229, 230, 234, 236, 240, 259, 264, 265, 359, 558, 574, 575, 686, 855], "150e": [11, 16, 28, 42, 45, 96, 97, 100, 104, 107, 110, 117, 142, 143, 153, 167, 178, 181, 196, 207, 228, 229, 230, 231, 234, 236, 264, 265, 274, 478, 479, 778, 801, 855, 862], "v1": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 78, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 141, 142, 143, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 190, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 234, 236, 338], "idl": [11, 13, 14, 15, 16, 18, 26, 28, 29, 42, 45, 49, 61, 68, 69, 71, 72, 73, 76, 83, 84, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 110, 111, 117, 118, 121, 123, 127, 129, 131, 132, 133, 142, 143, 147, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 173, 178, 181, 183, 184, 192, 196, 199, 203, 204, 205, 206, 207, 209, 210, 215, 218, 222, 223, 228, 229, 230, 231, 234, 236], "v2": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 78, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 141, 142, 143, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 190, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 234, 236, 244, 387, 588, 880], "v3": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 78, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 141, 142, 143, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 234, 236], "refer": [11, 14, 22, 27, 28, 29, 30, 31, 38, 39, 41, 45, 47, 48, 49, 50, 52, 57, 60, 61, 64, 67, 68, 69, 72, 73, 76, 77, 79, 81, 82, 85, 86, 87, 90, 92, 93, 95, 96, 97, 99, 100, 104, 107, 108, 110, 116, 120, 124, 127, 132, 133, 146, 150, 151, 153, 157, 159, 160, 166, 167, 168, 170, 171, 173, 176, 178, 180, 182, 183, 189, 201, 209, 213, 214, 215, 222, 234, 236, 240, 241, 244, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 290, 297, 298, 300, 302, 335, 354, 359, 360, 369, 380, 384, 387, 388, 391, 392, 393, 402, 403, 410, 411, 414, 416, 417, 418, 420, 426, 428, 431, 434, 436, 449, 473, 475, 476, 478, 479, 489, 502, 521, 522, 525, 526, 536, 540, 555, 556, 557, 558, 559, 563, 566, 567, 569, 570, 571, 572, 573, 577, 586, 588, 589, 592, 595, 596, 603, 640, 642, 645, 649, 653, 657, 660, 662, 665, 682, 684, 686, 687, 688, 689, 690, 691, 693, 694, 700, 702, 703, 704, 708, 709, 710, 711, 712, 714, 716, 718, 719, 726, 727, 729, 730, 732, 748, 750, 764, 765, 780, 787, 788, 791, 792, 795, 800, 802, 803, 808, 810, 820, 835, 843, 854, 861, 863, 865, 880], "6450": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 88, 96, 97, 99, 100, 117, 121, 132, 133, 142, 152, 153, 167, 170, 173, 178, 181, 196, 205, 231, 234, 236], "48149": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 88, 96, 97, 99, 100, 117, 121, 132, 133, 142, 152, 153, 167, 170, 173, 178, 181, 196, 205, 231, 234, 236], "956": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 68, 69, 71, 72, 73, 76, 80, 83, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 110, 111, 117, 118, 121, 123, 127, 132, 133, 142, 144, 147, 152, 153, 157, 163, 167, 168, 169, 170, 173, 178, 181, 183, 196, 199, 203, 204, 205, 206, 207, 208, 215, 218, 222, 223, 228, 229, 230, 231, 234, 236], "320": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 68, 69, 71, 72, 73, 76, 81, 83, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 117, 118, 121, 123, 127, 132, 133, 135, 141, 142, 147, 150, 152, 153, 157, 163, 167, 168, 169, 170, 172, 173, 178, 181, 183, 196, 199, 200, 203, 204, 205, 206, 207, 209, 215, 218, 222, 223, 228, 229, 230, 231, 234, 236, 409], "665": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 88, 90, 94, 95, 96, 97, 99, 100, 117, 121, 132, 133, 142, 152, 153, 167, 170, 173, 178, 181, 196, 205, 231, 234, 236], "41699": [11, 13, 14, 15, 16, 18, 42, 72, 73, 88, 99, 121, 133, 142, 153, 167, 196, 231], "277": [11, 13, 14, 15, 16, 18, 42, 71, 72, 73, 88, 99, 121, 133, 142, 153, 167, 168, 170, 183, 196, 201, 204, 215, 231], "709": [11, 13, 14, 15, 16, 18, 42, 72, 73, 88, 99, 121, 133, 142, 153, 167, 196, 231], "199": [11, 13, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 86, 87, 112, 116, 119, 120, 127, 150, 170, 173, 177, 178, 179, 180, 182, 184, 188, 192, 209, 210, 221, 231, 236, 244, 714, 716, 726, 730], "325": [11, 73, 170], "366": [11, 13, 14, 15, 16, 18, 20, 22, 31, 35, 40, 47, 48, 49, 50, 51, 54, 55, 58, 59, 64, 68, 81, 88, 90, 91, 92, 93, 94, 95, 121, 131, 133, 145, 150, 170, 173, 179, 180, 196, 209, 210, 222, 223, 226, 231], "143": [11, 49, 73, 74, 85, 130, 170, 201, 209, 210, 226, 231, 244, 277], "19979521315838786": [11, 28, 61, 69, 71, 72, 80, 93, 94, 96, 97, 100, 103, 104, 107, 110, 117, 132, 143, 146, 150, 151, 153, 167, 173, 178, 181, 183, 200, 201, 204, 222, 229, 230, 234, 236], "151": [11, 21, 120, 152, 170, 173, 205, 226, 231, 236, 277], "prior": [11, 12, 18, 27, 28, 29, 30, 34, 36, 38, 39, 40, 44, 47, 52, 56, 57, 58, 60, 90, 104, 107, 108, 110, 113, 124, 143, 150, 152, 163, 167, 173, 179, 180, 181, 182, 196, 205, 208, 210, 212, 218, 222, 231, 234, 236, 261, 262, 266, 268, 269, 275, 297, 298, 454, 455, 473, 474, 475, 476, 478, 479, 495, 524, 525, 536, 558, 568, 577, 588, 609, 618, 620, 748, 775, 776, 801, 807, 862, 865, 868, 880], "061": [11, 16, 28, 32, 33, 45, 46, 61, 71, 72, 73, 93, 94, 96, 100, 107, 113, 117, 128, 130, 141, 146, 152, 153, 167, 168, 169, 170, 173, 178, 181, 199, 200, 201, 204, 205, 206, 207, 210, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 234, 236, 240, 244, 687, 688, 690, 691], "read_cov": [11, 31, 35, 40, 41, 45, 48, 49, 50, 51, 54, 55, 58, 59, 64, 68, 92, 94, 163, 179, 180, 261, 824, 859, 870], "305": [11, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 76, 78, 82, 87, 88, 94, 104, 107, 108, 109, 110, 121, 124, 141, 147, 151, 153, 163, 167, 170, 173, 177, 178, 179, 180, 181, 182, 208, 209, 222, 226, 234, 236, 244, 264, 265, 266, 267, 478, 479, 645], "22494": [11, 22, 28, 29, 35, 38, 39, 52, 57, 60, 104, 107, 108, 110, 124, 167, 173, 182, 234, 236], "diagon": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 70, 104, 107, 108, 110, 124, 167, 173, 181, 182, 196, 222, 223, 234, 236, 244, 261, 297, 298, 354, 371, 514, 525, 533, 862, 865, 880], "retriev": [11, 196, 205, 209, 240, 328, 329, 349, 428, 486, 493, 618, 880], "lh_data": [11, 116, 176, 236, 275, 278], "hemispher": [11, 24, 27, 40, 43, 47, 52, 67, 122, 126, 127, 130, 142, 152, 156, 159, 176, 179, 184, 234, 235, 236, 260, 270, 271, 272, 275, 276, 277, 278, 279, 280, 360, 387, 468, 511, 605, 623, 625, 628, 648, 663, 671, 696, 747, 748, 806, 811, 830, 865, 880], "prepar": [11, 12, 19, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 78, 87, 90, 94, 104, 107, 108, 109, 110, 119, 124, 135, 151, 167, 178, 179, 180, 182, 183, 192, 196, 200, 207, 222, 223, 228, 234, 307, 318, 329, 369, 370, 525, 526, 527, 528, 529, 531, 532, 538, 541, 542, 589, 839, 865, 880], "seri": [11, 16, 27, 28, 29, 31, 36, 41, 56, 71, 81, 90, 93, 94, 95, 111, 138, 162, 169, 176, 181, 182, 189, 205, 206, 218, 223, 236, 241, 244, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 297, 298, 354, 413, 420, 423, 444, 478, 479, 524, 525, 528, 539, 558, 563, 567, 618, 622, 686, 687, 688, 700, 701, 703, 705, 706, 707, 716, 725, 726, 761, 772, 812, 835, 837, 839, 862, 880], "time_decod": [11, 196], "31": [11, 13, 19, 28, 32, 34, 35, 43, 45, 47, 56, 75, 79, 81, 82, 83, 103, 108, 109, 112, 114, 152, 155, 160, 170, 179, 181, 184, 186, 188, 192, 195, 196, 205, 209, 211, 226, 227, 228, 230, 231, 233, 234, 235, 236, 239, 244, 264, 265, 277, 335, 536, 657, 662, 862, 880], "03": [11, 13, 19, 24, 33, 34, 35, 49, 56, 59, 66, 71, 73, 75, 76, 79, 83, 84, 85, 90, 93, 94, 103, 106, 108, 109, 120, 121, 127, 142, 147, 151, 152, 159, 163, 167, 168, 169, 170, 171, 175, 181, 183, 184, 185, 195, 196, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 230, 231, 235, 236, 244, 258, 262, 354, 558, 687, 688, 690, 691, 776], "85it": [11, 13, 19, 34, 103, 108, 112, 195, 196, 209, 226, 227, 230, 231, 235], "96it": [11, 13, 19, 103, 109, 112, 195, 209, 226, 228, 231], "91it": [11, 19, 34, 103, 108, 109, 123, 195, 209, 230, 231, 234], "22it": [11, 19, 34, 103, 108, 112, 196, 209, 226, 227, 230, 231], "62it": [11, 13, 19, 34, 103, 112, 181, 196, 209, 226, 227, 230, 231], "26it": [11, 13, 19, 33, 44, 103, 104, 108, 109, 195, 196, 209, 226, 227, 230, 231, 235], "56it": [11, 19, 34, 103, 108, 109, 195, 209, 226, 228, 231], "09it": [11, 13, 19, 34, 103, 112, 195, 196, 209, 226, 228, 231], "29": [11, 13, 19, 21, 24, 25, 26, 28, 34, 35, 41, 45, 47, 50, 76, 79, 81, 85, 103, 108, 109, 112, 113, 114, 120, 123, 130, 138, 143, 144, 149, 157, 158, 159, 170, 172, 184, 185, 186, 195, 196, 203, 207, 209, 210, 211, 226, 227, 228, 230, 231, 234, 235, 236, 240, 244, 277, 880], "69it": [11, 13, 19, 103, 109, 112, 181, 196, 209, 226, 230, 231], "64it": [11, 19, 34, 96, 103, 108, 112, 196, 209, 226, 228, 229, 230, 231], "50it": [11, 19, 33, 103, 108, 112, 195, 196, 209, 226, 227, 230, 231, 235], "39": [11, 12, 19, 21, 28, 35, 45, 47, 81, 96, 103, 108, 109, 112, 114, 138, 141, 158, 159, 160, 170, 181, 185, 186, 192, 196, 200, 201, 209, 210, 214, 226, 227, 228, 230, 231, 234, 235, 236, 244, 277, 402, 855], "02it": [11, 13, 19, 34, 103, 108, 112, 195, 196, 209, 226, 231], "78it": [11, 13, 19, 33, 103, 112, 195, 196, 209, 226, 227, 228, 230, 231, 234], "47it": [11, 13, 19, 33, 34, 103, 112, 181, 195, 209, 226, 227, 230, 231, 236], "10it": [11, 13, 19, 34, 108, 109, 112, 195, 196, 209, 226, 227, 228, 231], "52": [11, 13, 19, 28, 35, 41, 45, 47, 50, 79, 81, 82, 99, 103, 106, 108, 109, 112, 114, 135, 146, 152, 169, 170, 192, 195, 196, 202, 207, 209, 214, 226, 227, 230, 231, 234, 236, 244, 402, 686, 729, 732, 880], "48it": [11, 19, 34, 103, 104, 108, 112, 195, 196, 226, 227, 230, 231], "06it": [11, 13, 19, 34, 103, 109, 112, 196, 209, 226, 227, 229, 230, 231, 234, 235], "61it": [11, 19, 103, 112, 181, 195, 196, 209, 226, 228, 230, 231, 234], "61": [11, 13, 19, 30, 35, 38, 45, 47, 51, 56, 57, 71, 81, 83, 90, 93, 103, 108, 109, 112, 114, 116, 123, 127, 137, 147, 150, 167, 168, 169, 170, 171, 173, 177, 179, 180, 185, 186, 195, 196, 199, 200, 203, 206, 207, 208, 209, 210, 215, 216, 217, 218, 226, 227, 228, 230, 231, 234, 235, 236, 244, 354], "95it": [11, 13, 19, 34, 103, 108, 109, 112, 181, 195, 196, 209, 226, 227, 228, 230, 231, 234, 235], "65": [11, 12, 13, 19, 21, 34, 35, 45, 47, 79, 81, 84, 103, 108, 109, 112, 114, 135, 137, 144, 146, 157, 170, 171, 178, 179, 185, 195, 196, 201, 208, 209, 226, 227, 228, 230, 231, 235, 236, 244, 596, 880], "68": [11, 19, 34, 35, 41, 45, 47, 79, 81, 82, 90, 101, 103, 108, 109, 112, 114, 126, 138, 141, 144, 146, 159, 170, 172, 173, 177, 182, 185, 192, 195, 196, 209, 226, 227, 230, 231, 234, 244, 266, 267, 297, 298, 335, 354, 358, 359, 369, 370, 371, 402, 410, 417, 453, 454, 473, 475, 476, 536, 788], "21": [11, 13, 19, 20, 28, 34, 35, 40, 41, 44, 45, 46, 47, 56, 64, 70, 81, 103, 106, 108, 109, 112, 114, 127, 130, 146, 151, 156, 161, 165, 169, 170, 172, 173, 184, 189, 192, 195, 196, 209, 215, 226, 227, 228, 230, 231, 234, 235, 236, 241, 243, 244, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 277, 278, 279, 280, 285, 297, 298, 358, 360, 403, 410, 417, 444, 449, 463, 478, 479, 513, 518, 538, 557, 558, 566, 568, 569, 572, 574, 575, 577, 588, 623, 631, 645, 649, 692, 700, 702, 704, 765, 766, 776, 780, 781, 782, 783, 787, 788, 789, 791, 793, 800, 801, 803, 805, 806, 808, 810, 814, 830, 833, 837, 838, 856, 862], "89it": [11, 19, 33, 103, 108, 112, 195, 196, 209, 226, 227, 230, 231], "71": [11, 12, 13, 19, 21, 35, 45, 81, 103, 108, 109, 112, 114, 138, 170, 177, 182, 183, 185, 195, 196, 209, 226, 227, 228, 230, 231, 236], "38it": [11, 13, 19, 33, 103, 108, 109, 112, 181, 195, 209, 226, 228, 230, 231, 236], "74": [11, 13, 15, 19, 26, 35, 41, 45, 50, 80, 81, 82, 103, 108, 109, 112, 114, 135, 138, 159, 169, 170, 171, 177, 182, 185, 192, 195, 196, 202, 207, 209, 223, 226, 227, 230, 231, 234, 236, 681], "81": [11, 13, 15, 16, 19, 34, 35, 79, 81, 96, 103, 107, 108, 109, 112, 114, 143, 157, 170, 181, 185, 195, 196, 208, 209, 211, 226, 227, 230, 231, 239, 244, 657, 662, 714, 716, 726, 730, 880], "87": [11, 13, 18, 19, 33, 35, 47, 80, 93, 94, 108, 109, 112, 114, 123, 124, 170, 195, 196, 207, 209, 210, 226, 227, 230, 231, 234, 244, 414, 416, 428, 862], "27": [11, 12, 13, 19, 21, 24, 28, 33, 34, 35, 39, 41, 43, 45, 46, 47, 50, 56, 68, 79, 81, 82, 85, 103, 108, 109, 112, 114, 146, 151, 159, 161, 170, 172, 179, 181, 184, 186, 192, 195, 196, 203, 209, 214, 226, 227, 228, 230, 231, 234, 235, 236, 240, 243, 244, 569, 837], "11it": [11, 13, 19, 103, 112, 195, 209, 226, 227, 231], "94": [11, 13, 19, 35, 47, 81, 96, 103, 107, 108, 109, 112, 114, 138, 170, 171, 181, 184, 192, 195, 196, 207, 209, 212, 226, 227, 228, 229, 230, 231, 234, 236, 244, 862], "55it": [11, 13, 19, 34, 103, 112, 196, 209, 226, 227, 230, 231, 235], "16it": [11, 19, 33, 34, 103, 108, 112, 196, 209, 226, 227, 230, 231, 234], "57it": [11, 19, 34, 103, 108, 112, 195, 196, 209, 226, 227, 231, 236], "83it": [11, 19, 33, 34, 103, 109, 112, 195, 196, 209, 226, 227, 228, 230, 231, 234], "92it": [11, 13, 19, 34, 103, 108, 109, 112, 195, 196, 209, 226, 227, 228, 230, 231, 234], "80it": [11, 13, 19, 33, 109, 112, 123, 195, 196, 209, 226, 227, 230, 231, 234], "93it": [11, 13, 19, 33, 34, 96, 103, 112, 195, 196, 209, 226, 227, 230, 231, 235, 236], "53it": [11, 13, 19, 33, 34, 103, 108, 109, 112, 195, 196, 209, 226, 231], "67it": [11, 13, 19, 103, 108, 109, 112, 195, 196, 209, 226, 230, 231], "19it": [11, 19, 44, 103, 104, 108, 112, 195, 196, 209, 226, 230, 231, 234, 236], "27it": [11, 13, 19, 33, 34, 103, 108, 109, 112, 195, 196, 209, 223, 226, 230, 231], "03it": [11, 19, 34, 103, 109, 112, 196, 209, 226, 228, 230, 231], "71it": [11, 19, 34, 103, 108, 195, 196, 227, 230, 231], "94it": [11, 13, 19, 34, 103, 109, 112, 181, 196, 209, 226, 230, 231, 235], "13it": [11, 13, 19, 34, 112, 195, 226, 230, 231, 236], "39it": [11, 19, 33, 103, 108, 112, 195, 196, 209, 226, 230, 231], "77it": [11, 13, 19, 34, 103, 112, 181, 195, 196, 209, 226, 227, 230, 231, 236], "08it": [11, 13, 19, 33, 34, 103, 108, 109, 112, 123, 195, 196, 209, 226, 227, 228, 231], "54it": [11, 13, 19, 34, 103, 109, 112, 195, 196, 209, 226, 227, 231, 236], "01it": [11, 19, 33, 34, 108, 109, 112, 195, 196, 209, 226, 228, 230, 231], "45it": [11, 19, 33, 34, 103, 181, 195, 209, 226, 227, 228, 230, 231], "51it": [11, 13, 19, 34, 103, 108, 112, 195, 209, 226, 230, 231, 236], "23it": [11, 13, 19, 33, 34, 103, 104, 181, 195, 196, 209, 226, 228, 230, 231, 235, 236], "73it": [11, 19, 103, 108, 109, 112, 195, 196, 209, 226, 227, 230, 231, 235, 236], "18it": [11, 19, 103, 109, 112, 196, 209, 226, 227, 228, 231, 235, 236], "31it": [11, 13, 19, 34, 96, 112, 195, 209, 226, 228, 230, 231, 235, 236], "76it": [11, 13, 19, 34, 103, 108, 109, 112, 195, 196, 209, 231], "52it": [11, 13, 19, 103, 112, 195, 209, 226, 227, 228, 230, 231], "88it": [11, 13, 19, 33, 34, 103, 109, 112, 196, 226, 228, 230, 231, 236], "00it": [11, 13, 19, 34, 103, 108, 109, 112, 195, 209, 226, 227, 231], "65it": [11, 13, 19, 34, 109, 112, 195, 196, 209, 227, 230, 231, 235], "24it": [11, 13, 19, 34, 103, 109, 112, 195, 196, 209, 226, 227, 228, 230, 231, 234, 235, 236], "63it": [11, 13, 19, 33, 103, 195, 196, 209, 226, 231, 234, 235], "12it": [11, 19, 34, 109, 112, 181, 195, 196, 209, 226, 227, 230, 231, 236], "68it": [11, 13, 19, 34, 103, 104, 108, 112, 181, 195, 196, 209, 226, 228, 230, 231, 235], "17it": [11, 19, 33, 103, 108, 112, 181, 196, 226, 227, 230, 231], "72it": [11, 19, 33, 34, 103, 108, 109, 112, 195, 196, 209, 226, 227, 230, 231], "75it": [11, 13, 19, 96, 103, 108, 112, 195, 196, 209, 226, 227, 230, 231, 234, 235], "20it": [11, 19, 34, 44, 103, 108, 109, 112, 195, 196, 209, 223, 226, 227, 228, 230, 231], "37it": [11, 13, 19, 33, 34, 96, 112, 195, 226, 228, 231, 234, 236], "79it": [11, 13, 19, 103, 109, 112, 195, 196, 209, 226, 230, 231], "86it": [11, 13, 19, 33, 34, 109, 195, 196, 209, 226, 227, 228, 230, 231, 235, 236], "82it": [11, 13, 19, 34, 103, 108, 112, 195, 196, 209, 226, 227, 228, 230, 231], "81it": [11, 19, 33, 103, 195, 196, 209, 226, 228, 230, 231], "60it": [11, 13, 19, 103, 112, 195, 196, 209, 226, 230, 231, 235], "29it": [11, 19, 103, 108, 112, 181, 195, 196, 209, 226, 227, 230, 231, 236], "58it": [11, 19, 34, 96, 103, 108, 109, 112, 195, 196, 226, 230, 231], "84it": [11, 19, 33, 34, 103, 108, 109, 112, 195, 196, 209, 226, 227, 230, 231, 235], "15it": [11, 13, 19, 33, 34, 103, 108, 109, 112, 195, 196, 209, 226, 227, 228, 230, 231], "07it": [11, 13, 19, 34, 103, 109, 195, 196, 209, 226, 227, 230, 231, 236], "44it": [11, 13, 19, 34, 103, 104, 112, 181, 195, 196, 209, 226, 227, 228, 230, 231, 235, 236], "74it": [11, 13, 19, 103, 108, 109, 112, 195, 196, 209, 226, 227, 230, 231], "40it": [11, 13, 19, 33, 34, 103, 108, 195, 196, 209, 226, 227, 230, 231, 236], "70it": [11, 19, 34, 103, 108, 112, 195, 196, 209, 226, 227, 230, 231], "30it": [11, 19, 33, 103, 108, 112, 209, 226, 227, 228, 230, 231, 236], "66it": [11, 13, 19, 103, 108, 112, 195, 196, 209, 226, 227, 228, 230, 231], "98it": [11, 13, 19, 33, 34, 103, 108, 109, 112, 195, 196, 209, 226, 228, 230, 231], "investig": [11, 21, 145, 152, 192, 202, 236, 266, 267, 558, 788, 856], "patterns_": [11, 15, 18, 19, 21, 196, 410, 414, 416, 417, 418, 428, 559, 880], "inverse_transform": [11, 18, 196, 418, 419, 424, 425, 428, 559], "lookup": [11, 41, 135, 257, 264, 265, 266, 267, 269, 277, 462, 463, 478, 479, 649, 748, 835], "vertic": [11, 22, 24, 28, 38, 39, 41, 43, 48, 52, 53, 68, 116, 127, 134, 135, 137, 141, 143, 156, 159, 160, 161, 162, 176, 179, 182, 192, 200, 203, 208, 209, 215, 218, 223, 226, 227, 234, 235, 236, 260, 264, 265, 266, 267, 270, 271, 272, 275, 276, 277, 278, 279, 280, 284, 285, 297, 298, 358, 360, 444, 457, 466, 468, 469, 478, 479, 511, 513, 534, 535, 622, 650, 663, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 687, 688, 690, 691, 692, 695, 696, 747, 748, 762, 767, 772, 778, 786, 801, 806, 811, 830, 835, 862, 865, 880], "lh_vertno": [11, 116, 176, 275, 278, 663], "empti": [11, 15, 27, 122, 130, 141, 143, 151, 162, 163, 167, 170, 172, 173, 185, 186, 192, 201, 205, 206, 208, 210, 215, 221, 236, 258, 261, 264, 265, 266, 267, 269, 273, 275, 288, 302, 310, 319, 326, 348, 349, 354, 359, 377, 378, 379, 382, 383, 385, 390, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 437, 458, 478, 479, 486, 490, 493, 494, 500, 504, 524, 549, 550, 551, 555, 556, 558, 559, 561, 568, 569, 577, 588, 589, 612, 620, 631, 641, 645, 681, 687, 696, 700, 702, 703, 704, 717, 735, 748, 757, 764, 772, 773, 778, 779, 785, 787, 795, 801, 802, 835, 839, 855, 862, 865, 880], "stc_feat": 11, "sourceestim": [11, 22, 26, 31, 35, 37, 40, 46, 59, 60, 94, 156, 159, 166, 167, 182, 187, 188, 222, 223, 234, 235, 236, 263, 266, 267, 270, 271, 272, 274, 276, 277, 278, 279, 280, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 360, 444, 457, 473, 474, 475, 476, 513, 525, 526, 527, 528, 529, 531, 534, 535, 540, 541, 622, 628, 641, 650, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 666, 667, 685, 692, 695, 696, 748, 762, 806, 807, 835, 857, 859, 870, 880], "ab": [11, 19, 35, 38, 40, 47, 59, 60, 68, 97, 119, 120, 127, 136, 152, 180, 184, 192, 195, 202, 226, 228, 229, 234, 235, 236, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 560, 716, 726, 783, 862, 880], "tstep": [11, 22, 31, 46, 59, 90, 94, 95, 182, 223, 234, 235, 236, 271, 272, 275, 278, 279, 280, 359, 476, 513, 558, 650, 667, 686, 692, 715, 723, 880], "transpar": [11, 58, 101, 135, 173, 182, 200, 241, 256, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 748, 767, 784, 801, 806, 811, 812, 813, 814, 861, 880], "90it": [11, 13, 19, 33, 34, 103, 108, 109, 112, 181, 195, 196, 209, 226, 227, 228, 230, 231], "25it": [11, 13, 19, 33, 34, 44, 103, 112, 195, 196, 226, 227, 230, 231], "97it": [11, 13, 19, 33, 96, 103, 112, 195, 196, 209, 226, 227, 231, 234, 236], "46it": [11, 13, 19, 34, 96, 103, 112, 195, 196, 209, 226, 230, 231, 236], "33it": [11, 13, 19, 34, 103, 108, 112, 195, 196, 209, 226, 228, 230, 231], "59it": [11, 19, 103, 195, 196, 209, 226, 230, 231, 235], "21it": [11, 13, 19, 33, 103, 112, 196, 226, 227, 228, 230, 231, 234, 235], "50724321": 11, "37721471": 11, "59502306": 11, "482": [11, 20, 226], "313": [11, 13, 20, 35, 170, 209, 231, 880], "decoding_spatio_temporal_sourc": [11, 20], "comodul": [12, 417], "allow": [12, 19, 40, 43, 44, 46, 60, 94, 104, 112, 115, 116, 120, 135, 138, 141, 142, 143, 144, 145, 147, 151, 152, 158, 159, 161, 167, 170, 171, 173, 179, 190, 196, 202, 207, 215, 216, 218, 226, 227, 228, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 291, 292, 295, 308, 312, 335, 340, 347, 354, 372, 410, 416, 417, 418, 443, 451, 468, 477, 478, 479, 481, 493, 494, 498, 527, 529, 532, 534, 535, 536, 540, 558, 559, 563, 577, 586, 606, 612, 618, 636, 649, 665, 667, 686, 700, 702, 703, 704, 727, 728, 730, 731, 742, 746, 769, 778, 780, 791, 793, 801, 804, 835, 837, 839, 857, 861, 862, 865, 868, 880], "composit": [12, 189, 196, 271, 272, 275, 278, 279, 280, 748, 806, 811, 862], "orthogon": [12, 114, 157, 161, 179, 196, 206, 207, 210, 297, 298, 558, 728, 731, 862, 865, 868, 880], "spatial": [12, 14, 15, 17, 18, 20, 27, 31, 32, 33, 34, 36, 47, 56, 70, 71, 80, 83, 84, 90, 113, 119, 121, 152, 153, 156, 157, 163, 176, 199, 200, 202, 206, 207, 212, 218, 221, 223, 226, 228, 231, 234, 235, 236, 240, 241, 244, 261, 264, 265, 266, 267, 268, 269, 270, 273, 275, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 312, 328, 354, 360, 363, 364, 373, 410, 411, 417, 418, 424, 426, 428, 439, 478, 479, 490, 491, 493, 519, 524, 536, 537, 540, 555, 556, 557, 558, 559, 572, 587, 588, 609, 615, 618, 620, 654, 657, 662, 670, 671, 672, 673, 677, 687, 688, 690, 691, 700, 702, 704, 719, 738, 748, 765, 780, 782, 787, 788, 791, 800, 803, 808, 810, 835, 855, 856, 859, 862, 880], "maxim": [12, 60, 88, 143, 161, 177, 178, 181, 184, 196, 202, 204, 244, 272, 278, 279, 280, 297, 298, 418, 558, 586, 670, 671, 672, 674, 675, 686, 812, 862, 880], "csp": [12, 17, 20, 27, 196, 264, 269, 312, 328, 363, 373, 414, 417, 439, 493, 555, 559, 700, 856, 870, 880], "variabl": [12, 16, 31, 43, 101, 103, 112, 117, 142, 144, 151, 156, 169, 171, 196, 199, 202, 204, 206, 215, 217, 230, 231, 236, 244, 257, 262, 264, 265, 270, 271, 272, 274, 275, 278, 279, 280, 303, 307, 308, 309, 312, 360, 365, 366, 367, 372, 375, 377, 378, 379, 380, 382, 383, 386, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 417, 427, 429, 439, 451, 452, 458, 460, 462, 466, 468, 469, 470, 471, 472, 478, 479, 497, 511, 515, 517, 544, 557, 558, 577, 584, 603, 605, 613, 617, 623, 632, 637, 638, 639, 640, 647, 648, 649, 663, 666, 677, 687, 688, 689, 690, 691, 695, 696, 740, 748, 764, 766, 776, 778, 795, 801, 806, 811, 812, 814, 830, 835, 837, 844, 845, 855, 859, 862, 866, 880], "fluctuat": [12, 142, 143, 152, 199, 201, 207, 208, 212, 223, 266, 267, 788, 835], "electromyogram": [12, 880], "cortico": 12, "muscular": [12, 199, 205], "coher": [12, 32, 33, 103, 107, 181, 223, 244, 289, 290, 291, 292, 297, 700, 701, 727, 728, 729, 730, 731, 732, 774, 835, 846, 856], "fieldtrip": [12, 157, 192, 202, 208, 226, 228, 234, 322, 329, 497, 613, 617, 727, 728, 730, 731, 862, 868, 880], "fieldtrip_cmc": [12, 21], "ridg": [12, 19, 195, 416, 422], "kfold": [12, 16, 19, 354, 359, 427, 880], "cross_val_predict": [12, 880], "subjectcmc": [12, 21], "emg": [12, 83, 138, 170, 190, 196, 215, 221, 244, 264, 265, 266, 267, 274, 311, 373, 417, 443, 478, 479, 490, 493, 504, 555, 558, 700, 702, 703, 704, 778, 801, 856, 862, 865, 880], "pick_channel": [12, 45, 70, 72, 86, 100, 115, 127, 141, 142, 150, 152, 170, 171, 215, 223, 228, 229, 230, 261, 264, 265, 266, 267, 268, 478, 479, 552, 700, 701, 702, 703, 704, 870, 880], "emglft": 12, "ref_meg": [12, 21, 74, 119, 123, 170, 212, 264, 265, 266, 267, 274, 311, 373, 478, 479, 555, 556, 700, 702, 703, 704, 778, 801, 880], "make_fixed_length_ev": [12, 21, 167, 169, 216, 221, 359, 531, 835, 870, 880], "durat": [12, 21, 49, 65, 70, 71, 73, 74, 75, 76, 81, 82, 83, 90, 93, 94, 123, 127, 138, 141, 142, 145, 147, 150, 151, 152, 167, 168, 169, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 223, 234, 235, 236, 256, 258, 264, 265, 266, 267, 274, 275, 283, 341, 343, 357, 359, 410, 412, 416, 417, 421, 422, 439, 446, 448, 449, 451, 478, 479, 495, 518, 519, 558, 560, 561, 563, 577, 588, 596, 650, 652, 692, 714, 778, 787, 795, 801, 835, 839, 880], "meg_epoch": [12, 18], "detrend": [12, 110, 136, 211, 259, 264, 266, 267, 518, 611, 880], "emg_epoch": 12, "var": [12, 47, 70, 172, 207, 375, 458, 693], "oa": [12, 21, 84, 184, 354], "validaton": 12, "first_samp": [12, 70, 75, 138, 167, 169, 185, 215, 216, 217, 258, 259, 264, 265, 269, 274, 283, 362, 438, 439, 451, 477, 478, 479, 498, 519, 553, 558, 589, 614, 615, 650, 665, 781, 795, 801, 825, 835, 865, 880], "set_xlabel": [12, 13, 19, 21, 22, 45, 70, 96, 104, 113, 133, 145, 147, 173, 184, 196, 206, 229, 230, 231], "set_titl": [12, 13, 22, 45, 70, 71, 96, 99, 112, 114, 120, 127, 135, 137, 145, 195, 196, 210, 211, 229, 230, 231, 240, 241], "78": [12, 13, 19, 21, 34, 35, 47, 51, 80, 81, 103, 112, 114, 123, 138, 158, 159, 167, 170, 177, 180, 186, 196, 209, 215, 226, 227, 228, 230, 231, 235, 236, 244, 300, 402, 862], "62": [12, 16, 19, 21, 34, 35, 45, 47, 70, 79, 81, 96, 103, 108, 112, 114, 137, 138, 170, 181, 195, 196, 209, 226, 227, 230, 231, 234, 244], "258": [12, 21, 102, 112, 123, 159, 167, 170, 231], "114": [12, 21, 28, 35, 56, 81, 152, 170, 182, 196, 209, 226, 231, 880], "12000": [12, 21], "911610": [12, 21], "191": [12, 21, 106, 112, 170, 209, 226, 231], "180000": 12, "150": [12, 35, 42, 45, 59, 73, 74, 76, 81, 82, 94, 101, 120, 123, 142, 143, 147, 152, 159, 161, 167, 170, 181, 192, 201, 205, 207, 226, 230, 231, 256, 277, 718, 880], "793": [12, 140, 145, 196, 231], "661": [12, 202, 227], "1057": 12, "881": [12, 231, 277], "183": [12, 107, 170, 196, 201, 209, 214, 226, 230], "1801": [12, 195], "contribut": [12, 19, 45, 68, 150, 152, 181, 228, 231, 255, 264, 265, 439, 573, 656, 837, 843, 856, 858, 861, 880], "sven": [12, 18, 19, 196, 244, 414, 416, 417, 418, 428], "d\u00e4hne": [12, 18, 19, 196, 244, 414, 416, 417, 428], "frank": [12, 18, 19, 75, 196, 205, 244, 414, 416, 417, 428, 558, 595], "meineck": [12, 18, 19, 196, 244, 414, 416, 417, 428], "stefan": [12, 18, 19, 33, 113, 127, 196, 205, 228, 231, 234, 240, 244, 414, 416, 417, 418, 428, 572, 867, 880], "hauf": [12, 18, 19, 196, 244, 414, 416, 417, 418, 428], "johann": [12, 196, 244, 417, 880], "h\u00f6hne": [12, 196, 244, 417], "michael": [12, 19, 101, 195, 196, 204, 205, 244, 354, 410, 416, 417, 557, 558, 592, 603, 714, 716, 726, 730, 856, 862, 880], "tangermann": [12, 196, 205, 244, 417], "klau": [12, 196, 205, 244, 410, 417, 558], "robert": [12, 75, 181, 195, 196, 205, 212, 231, 244, 410, 416, 417, 687, 688, 690, 691, 856, 867, 880], "m\u00fcller": [12, 74, 196, 205, 244, 410, 417, 558], "vadim": [12, 21, 196, 244, 417, 418], "nikulin": [12, 21, 196, 244, 417, 418], "novel": [12, 21, 196, 244, 332, 417, 418, 868], "framework": [12, 35, 196, 244, 417, 473, 851, 862], "amplitud": [12, 19, 35, 37, 39, 40, 45, 47, 53, 59, 81, 82, 93, 94, 95, 116, 123, 127, 132, 136, 141, 142, 145, 146, 163, 167, 173, 176, 181, 184, 185, 191, 195, 196, 199, 200, 202, 205, 206, 207, 209, 211, 212, 223, 244, 256, 259, 262, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 290, 298, 341, 342, 343, 347, 359, 417, 453, 475, 476, 478, 479, 520, 529, 540, 558, 560, 574, 575, 610, 652, 653, 657, 661, 662, 686, 687, 702, 703, 704, 716, 726, 748, 775, 776, 789, 802, 835, 846, 859, 862, 865, 880], "neuron": [12, 21, 138, 145, 195, 196, 199, 244, 297, 403, 416, 417, 418, 525, 835, 856, 862], "oscil": [12, 21, 68, 94, 113, 114, 196, 199, 203, 223, 244, 417, 418, 653, 714, 716, 726, 730], "behavior": [12, 145, 170, 189, 196, 199, 201, 202, 207, 244, 257, 264, 265, 274, 417, 451, 519, 523, 525, 588, 615, 649, 818, 839, 858, 859, 861, 868], "111": [12, 32, 35, 46, 113, 127, 146, 170, 196, 226, 230, 231, 244, 417], "122": [12, 16, 161, 170, 171, 177, 196, 205, 209, 226, 230, 231, 244, 335, 411, 417, 426, 862, 880], "2013": [12, 16, 18, 19, 43, 59, 81, 82, 129, 145, 170, 196, 244, 270, 275, 276, 282, 360, 411, 414, 416, 417, 426, 428, 434, 476, 563, 592, 657, 662, 854], "07": [12, 20, 35, 46, 59, 79, 81, 84, 85, 102, 103, 106, 130, 134, 161, 171, 175, 177, 180, 184, 185, 186, 192, 195, 196, 209, 226, 228, 231, 244, 321, 417, 660, 862], "079": [12, 137, 196, 244, 417], "275": [12, 20, 37, 46, 123, 167, 170, 171, 192, 209, 226, 231, 244, 338, 410, 856, 862], "decoding_spoc_cmc": [12, 20], "illustr": [13, 27, 28, 68, 69, 90, 94, 95, 125, 134, 139, 143, 147, 151, 152, 166, 167, 172, 189, 199, 200, 201, 203, 205, 207, 211, 215, 226, 230, 236, 240, 478, 479, 835, 855, 862], "discriminatori": 13, "given": [13, 16, 19, 26, 31, 70, 80, 94, 95, 112, 120, 121, 138, 144, 145, 150, 151, 152, 159, 161, 163, 166, 167, 170, 171, 172, 176, 179, 181, 187, 188, 189, 195, 196, 201, 202, 205, 206, 207, 210, 215, 216, 218, 226, 228, 230, 231, 239, 241, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 280, 288, 297, 298, 302, 310, 312, 316, 317, 318, 327, 329, 330, 354, 359, 365, 366, 367, 368, 369, 377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 414, 417, 418, 420, 425, 426, 430, 431, 435, 445, 446, 449, 451, 453, 455, 466, 473, 475, 476, 477, 478, 479, 518, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 536, 541, 542, 557, 558, 559, 560, 561, 563, 569, 572, 573, 574, 575, 577, 580, 584, 588, 594, 596, 602, 603, 608, 611, 645, 649, 654, 664, 667, 668, 680, 682, 686, 687, 688, 690, 691, 693, 695, 698, 700, 701, 702, 703, 704, 708, 709, 710, 711, 712, 713, 716, 718, 720, 724, 726, 731, 735, 736, 740, 748, 752, 754, 764, 765, 766, 772, 776, 778, 779, 780, 782, 783, 784, 785, 787, 792, 795, 799, 801, 802, 803, 804, 806, 808, 810, 811, 815, 816, 835, 837, 839, 856, 859, 861, 862, 865, 880], "subsequ": [13, 69, 84, 112, 113, 141, 143, 146, 158, 162, 167, 196, 200, 203, 205, 215, 234, 244, 264, 265, 478, 479, 558, 561, 568, 577, 692, 835, 842, 855, 859, 862, 880], "accur": [13, 26, 41, 44, 45, 50, 109, 135, 136, 159, 160, 177, 183, 189, 196, 204, 205, 207, 210, 257, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 453, 478, 479, 517, 558, 583, 738, 787, 814, 855, 880], "generalizingestim": [13, 196, 427, 870, 880], "events_fnam": 13, "auditori": [13, 15, 30, 31, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 60, 61, 65, 71, 78, 80, 86, 87, 94, 112, 116, 119, 120, 124, 127, 132, 141, 142, 143, 144, 146, 147, 150, 151, 152, 153, 166, 167, 169, 173, 176, 177, 179, 180, 181, 182, 183, 193, 194, 195, 196, 202, 207, 212, 216, 222, 230, 234, 236, 239, 241, 244, 257, 258, 259, 261, 264, 265, 266, 267, 269, 270, 275, 309, 353, 355, 359, 361, 363, 416, 437, 451, 478, 491, 515, 516, 521, 523, 524, 525, 536, 571, 592, 612, 614, 620, 626, 633, 648, 703, 748, 880], "050": [13, 81, 141, 143, 150, 170, 181, 200, 208, 209, 223, 244], "faster": [13, 18, 44, 120, 141, 184, 196, 205, 241, 244, 256, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 360, 363, 450, 466, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518, 558, 560, 687, 688, 690, 691, 837, 842, 843, 845, 868, 880], "constructor": [13, 88, 141, 143, 152, 166, 167, 173, 201, 203, 206, 217, 221, 224, 259, 271, 272, 275, 278, 279, 280, 477, 559, 574, 806, 811, 839, 859, 880], "497": [13, 14, 15, 76, 88, 99, 121, 133, 179, 205, 231, 244, 277], "310": [13, 14, 15, 35, 76, 81, 88, 99, 109, 121, 133, 170, 195, 205, 209, 231], "lbfg": [13, 18, 196], "time_gen": [13, 196], "experiment": [13, 16, 45, 70, 71, 73, 76, 81, 82, 83, 90, 93, 127, 141, 142, 147, 150, 151, 152, 154, 166, 168, 169, 170, 181, 196, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 244, 264, 265, 266, 267, 269, 411, 426, 478, 479, 480, 525, 577, 588, 589, 652, 653, 660, 700, 703, 835, 855, 862, 866, 880], "05it": [13, 19, 34, 103, 108, 109, 195, 196, 209, 226, 227, 230, 231, 235, 236], "59": [13, 15, 19, 28, 30, 31, 32, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 54, 55, 56, 58, 59, 60, 69, 71, 76, 78, 79, 81, 83, 90, 92, 93, 94, 103, 108, 111, 112, 114, 116, 118, 121, 127, 131, 142, 143, 146, 151, 152, 153, 157, 159, 163, 170, 173, 177, 179, 183, 185, 192, 194, 196, 199, 200, 205, 206, 207, 209, 222, 226, 227, 228, 230, 231, 235, 236, 239, 244, 277, 431, 569, 577, 588, 693, 694], "04it": [13, 19, 34, 103, 109, 112, 195, 196, 209, 226, 227, 230, 231, 234, 235], "57": [13, 19, 34, 35, 40, 45, 79, 81, 103, 108, 112, 114, 117, 124, 126, 137, 151, 152, 158, 170, 181, 184, 185, 192, 196, 207, 209, 217, 226, 227, 228, 230, 231, 235, 236, 239, 244, 264, 265, 266, 267, 335, 475, 478, 479, 702, 704, 712, 718, 880], "28it": [13, 19, 34, 103, 109, 112, 195, 209, 226, 227, 228, 230, 231, 235, 236], "14it": [13, 19, 33, 34, 103, 108, 195, 196, 209, 226, 227, 230, 231], "83": [13, 19, 35, 40, 47, 81, 103, 108, 112, 114, 170, 172, 196, 201, 204, 209, 210, 226, 227, 230, 231, 244, 335, 557, 603, 687, 688, 690, 691], "89": [13, 19, 34, 35, 47, 71, 78, 79, 80, 81, 82, 103, 108, 112, 114, 137, 170, 185, 192, 195, 196, 200, 209, 226, 227, 230, 231, 244, 567, 862], "34it": [13, 19, 34, 103, 112, 195, 196, 209, 226, 230, 231, 236], "34": [13, 19, 28, 34, 35, 41, 45, 47, 68, 71, 81, 103, 106, 108, 112, 113, 114, 116, 123, 146, 165, 170, 172, 177, 182, 186, 188, 195, 196, 202, 209, 210, 214, 222, 226, 227, 228, 230, 231, 235, 236, 244, 567, 681], "72": [13, 15, 19, 28, 35, 45, 47, 71, 78, 80, 81, 96, 100, 103, 104, 112, 114, 117, 123, 141, 150, 157, 163, 170, 178, 181, 183, 184, 185, 186, 195, 196, 200, 209, 210, 226, 227, 228, 229, 230, 231, 234, 244, 558, 567, 862, 880], "1225": 13, "233": [13, 56, 60, 112, 170, 209, 226, 230, 231], "279": [13, 112, 170, 203, 209, 226, 244, 558, 729, 732], "294": [13, 170, 231], "54": [13, 19, 28, 34, 35, 45, 47, 81, 103, 108, 112, 114, 145, 152, 158, 159, 170, 195, 196, 209, 210, 212, 226, 227, 230, 231, 244, 277, 880], "348": [13, 35, 163, 170, 195, 202, 226, 231, 880], "363": [13, 81, 170, 231, 234, 238], "379": [13, 81, 195, 231], "117": [13, 35, 61, 146, 170, 209, 230, 231, 244, 729, 732, 880], "391": [13, 81, 96, 157, 165, 231], "32it": [13, 19, 103, 112, 195, 196, 209, 226, 227, 231, 236], "129": [13, 14, 35, 61, 121, 128, 170, 171, 231, 244], "386": [13, 35, 81], "43it": [13, 19, 33, 103, 112, 195, 196, 209, 226, 227, 228, 230, 231, 235], "144": [13, 56, 82, 170, 172, 204, 209, 211, 230, 277, 880], "392": [13, 81, 199, 209, 214, 226, 231], "35it": [13, 19, 33, 34, 96, 103, 108, 112, 195, 209, 226, 229, 231, 235, 236], "154": [13, 35, 138, 169, 170, 226, 230, 231], "381": [13, 81, 196, 209], "166": [13, 151, 170, 202, 209, 226, 230, 231, 236, 244], "378": [13, 35, 81, 209, 226, 231], "177": [13, 35, 146, 170, 196, 226, 230, 231, 244, 687, 688, 690, 691], "372": [13, 81, 170, 195, 209, 226, 231], "371": [13, 81, 170, 196, 209, 226, 231], "364": [13, 35, 40, 48, 49, 54, 55, 58, 59, 68, 81, 92, 94, 121, 163, 167, 170, 179, 239], "211": [13, 35, 41, 59, 112, 146, 170, 209, 230, 231], "223": [13, 46, 112, 170, 209, 226, 231], "362": [13, 81, 123, 130, 170, 195, 196, 222, 226, 227, 231], "239": [13, 46, 48, 56, 68, 81, 82, 112, 159, 170, 192, 203, 209, 212, 226], "267": [13, 112, 144, 169, 170, 196, 226, 231, 244, 854], "376": [13, 73, 81, 93, 94, 95, 106, 109, 150, 167, 168, 170, 180, 215, 231], "283": [13, 41, 71, 112, 170, 226, 244, 567], "384": [13, 19, 21, 35, 81, 145, 172, 231], "297": [13, 35, 112, 170, 231], "328": [13, 113, 121, 163, 170, 209, 231, 244, 266, 267, 354, 788, 859], "395": [13, 81, 209, 226, 231], "344": [13, 130, 131, 145, 170, 195, 196, 209, 226, 231], "360": [13, 40, 48, 49, 54, 55, 58, 59, 67, 81, 82, 85, 93, 94, 121, 153, 163, 170, 173, 179, 192, 209, 226, 231, 240], "405": [13, 81, 226, 231], "375": [13, 72, 81, 94, 170, 199, 201, 207, 209, 226, 231], "408": [13, 35, 81, 186, 196, 209, 226, 231, 240], "412": [13, 195, 226, 231], "406": [13, 81, 231], "414": [13, 40, 226, 231], "422": [13, 59, 231, 244, 476], "417": [13, 35, 119, 231, 244, 558, 586, 765], "439": [13, 226, 231, 445], "423": [13, 163, 209, 231], "454": [13, 145, 226, 231, 277], "424": [13, 19, 226], "38": [13, 19, 21, 28, 34, 35, 45, 47, 71, 73, 79, 81, 82, 93, 96, 103, 108, 112, 114, 127, 141, 142, 143, 145, 159, 170, 180, 181, 185, 188, 192, 195, 196, 201, 207, 209, 226, 227, 228, 230, 231, 235, 236, 569], "470": [13, 81, 209, 231], "427": [13, 145, 149, 195, 226, 231], "487": [13, 152, 168, 175, 209, 231], "431": [13, 182, 188, 231], "503": [13, 226, 231], "434": [13, 209, 231], "519": [13, 101, 102, 209, 231, 241], "436": [13, 209, 231, 244], "536": [13, 126, 136, 231, 244, 387], "552": [13, 35, 231], "442": [13, 196, 231], "568": [13, 209, 231], "444": [13, 231, 236], "584": [13, 158, 165], "445": [13, 137, 226], "600": [13, 35, 40, 58, 59, 71, 74, 81, 83, 90, 93, 126, 127, 134, 156, 157, 161, 168, 169, 179, 180, 181, 185, 192, 199, 200, 203, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 223, 231, 244, 476, 748, 880], "616": [13, 53, 56, 231], "448": [13, 126, 172, 209, 226, 231, 277, 880], "36it": [13, 19, 103, 108, 112, 195, 196, 226, 231, 236], "633": [13, 137, 140], "650": [13, 81, 82, 147, 212, 231], "453": [13, 28, 56, 231, 277], "668": [13, 196], "458": [13, 180, 185, 188, 231], "56": [13, 15, 19, 32, 35, 45, 47, 75, 80, 81, 82, 88, 103, 108, 112, 114, 130, 152, 155, 161, 170, 172, 173, 177, 181, 192, 195, 196, 205, 209, 211, 214, 226, 227, 230, 231, 244, 258, 410, 559, 687, 688, 690, 691], "685": [13, 177, 188, 231], "460": [13, 19, 81, 185, 226, 228, 231, 233, 244, 854], "702": [13, 196], "718": [13, 231], "463": [13, 209, 231, 277], "734": [13, 196, 209, 231, 244, 716, 726, 727, 730], "751": [13, 196, 231], "466": [13, 34, 56, 195, 196], "767": [13, 196, 244, 855], "784": [13, 231], "468": [13, 204, 231, 244, 557, 603], "800": [13, 19, 33, 43, 51, 81, 83, 126, 127, 134, 136, 145, 156, 157, 161, 167, 176, 178, 196, 202, 209, 234, 271, 272, 275, 278, 279, 280, 469, 748, 806, 811], "67": [13, 19, 33, 35, 47, 57, 79, 81, 82, 103, 108, 112, 114, 116, 150, 159, 170, 173, 177, 179, 182, 192, 196, 209, 226, 227, 228, 230, 231, 235, 236, 244, 525, 880], "815": [13, 41, 209, 231], "467": [13, 67, 231], "825": [13, 21, 83, 114, 231, 244, 558], "457": [13, 175], "841": [13, 138, 231], "856": [13, 196, 231], "868": [13, 205, 231, 244, 572], "452": [13, 231, 277], "878": [13, 209, 231, 244, 684], "890": [13, 81, 136, 140, 141, 149, 209, 231, 244, 277], "902": 13, "433": [13, 30, 56, 226, 231, 240, 243], "912": 13, "425": [13, 231], "922": [13, 231], "419": [13, 226], "932": 13, "941": [13, 96], "404": [13, 81, 231], "951": [13, 231], "399": [13, 81, 209, 226, 231], "961": [13, 112, 146, 149, 161, 231], "393": [13, 81], "972": 13, "41it": [13, 19, 33, 34, 103, 112, 195, 196, 209, 226, 228, 229, 230, 231, 236], "982": [13, 196, 231], "992": [13, 211, 231], "380": [13, 42, 56, 64, 66, 81, 209, 231], "1003": [13, 19], "377": [13, 81, 162, 165, 226, 231], "1013": [13, 84, 170, 209, 244, 596], "373": [13, 81, 170], "1023": [13, 170, 195], "369": [13, 81, 170, 209, 226, 231, 244, 525, 660, 862], "1033": [13, 20, 170], "365": [13, 31, 40, 41, 45, 59, 81, 170, 207, 226, 231, 244, 270, 275, 354], "1049": 13, "370": [13, 81, 170, 194, 231, 244, 270, 275], "1065": 13, "88": [13, 19, 26, 35, 41, 45, 47, 50, 79, 80, 81, 82, 103, 109, 112, 114, 120, 159, 170, 177, 181, 182, 183, 192, 195, 196, 209, 211, 226, 227, 228, 230, 231, 235, 236, 244, 354], "1082": [13, 209], "382": [13, 81, 85, 209, 226, 231, 244, 660], "1098": [13, 209, 244, 525, 862], "387": [13, 35, 81, 231, 244, 297], "1113": [13, 170, 195, 196], "389": [13, 81, 196, 226, 231], "1130": 13, "1146": [13, 209], "1163": [13, 209], "96": [13, 15, 18, 19, 44, 47, 79, 82, 103, 107, 108, 112, 113, 114, 135, 138, 163, 170, 172, 181, 185, 195, 196, 206, 207, 209, 226, 227, 228, 229, 230, 231, 235, 236, 244, 266, 267, 414, 416, 428, 788, 859], "1177": [13, 65, 101, 227, 244, 393, 856], "1192": [13, 196], "407": [13, 81, 231, 243], "1206": 13, "1219": [13, 19], "constrained_layout": [13, 90, 184, 212, 240, 716, 726], "vmax": [13, 19, 70, 88, 107, 112, 114, 116, 117, 124, 137, 142, 161, 177, 195, 196, 210, 211, 226, 228, 229, 240, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 748, 765, 779, 780, 783, 787, 791, 800, 803, 808, 809, 810, 880], "xaxi": [13, 127], "set_ticks_posit": 13, "bottom": [13, 70, 73, 74, 112, 120, 127, 141, 147, 162, 192, 217, 218, 226, 231, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 761, 778, 788, 806, 811, 835, 880], "ntest": 13, "ntrain": 13, "fontweight": [13, 127, 145, 210], "bold": [13, 127, 145, 152, 200, 203, 206, 207, 208, 210, 211, 226], "r\u00e9mi": [13, 196, 244], "stanisla": [13, 16, 138, 196, 244, 411, 426, 880], "dehaen": [13, 16, 196, 244, 411, 426], "dynam": [13, 21, 27, 32, 33, 70, 94, 105, 106, 112, 167, 181, 196, 202, 204, 205, 212, 223, 244, 264, 267, 270, 275, 287, 289, 290, 291, 292, 297, 418, 449, 451, 478, 479, 525, 558, 559, 566, 679, 801, 835, 846, 856, 862, 865, 880], "represent": [13, 17, 20, 27, 43, 44, 94, 103, 112, 115, 141, 150, 161, 167, 169, 170, 171, 173, 176, 191, 196, 205, 215, 216, 234, 235, 236, 239, 240, 244, 264, 265, 266, 267, 274, 276, 360, 363, 445, 451, 478, 479, 509, 555, 558, 700, 702, 704, 727, 728, 730, 731, 732, 756, 792, 835, 846, 856, 865, 880], "tempor": [13, 16, 19, 27, 46, 59, 77, 85, 105, 106, 113, 114, 136, 137, 138, 141, 143, 147, 152, 166, 181, 185, 197, 198, 201, 202, 203, 204, 207, 210, 217, 226, 228, 229, 230, 231, 237, 238, 244, 259, 264, 266, 267, 269, 275, 276, 277, 354, 360, 416, 422, 430, 433, 436, 450, 451, 453, 474, 475, 476, 478, 479, 518, 522, 524, 525, 539, 541, 542, 555, 558, 560, 573, 588, 595, 596, 611, 615, 626, 628, 630, 635, 655, 656, 657, 658, 659, 660, 661, 662, 672, 674, 675, 676, 680, 681, 683, 690, 691, 692, 713, 716, 726, 727, 728, 729, 730, 731, 732, 748, 856, 857, 862, 880], "trend": [13, 65, 113, 142, 196, 244], "cognit": [13, 42, 43, 196, 202, 244, 255, 276, 360, 526, 867], "203": [13, 35, 40, 42, 49, 50, 58, 59, 80, 87, 92, 93, 94, 99, 111, 112, 116, 119, 121, 123, 124, 131, 143, 151, 153, 157, 158, 159, 163, 170, 171, 173, 178, 179, 180, 181, 196, 200, 206, 207, 209, 210, 223, 226, 230, 244], "tic": [13, 196, 244], "128": [13, 15, 19, 20, 24, 41, 50, 72, 85, 88, 120, 130, 142, 149, 159, 161, 169, 170, 171, 172, 195, 221, 223, 230, 231, 233, 264, 265, 409, 766, 856, 880], "decoding_time_generalization_condit": [13, 20], "Then": [14, 19, 45, 67, 82, 109, 113, 115, 135, 136, 137, 141, 157, 162, 182, 191, 192, 207, 231, 241, 266, 267, 317, 435, 572, 695, 784, 839, 843, 850, 859, 862], "virtual": [14, 70, 99, 152, 205, 208, 264, 265, 266, 267, 314, 431, 478, 479, 587, 642, 645, 835, 837, 847, 880], "output": [14, 19, 32, 35, 40, 44, 46, 47, 59, 113, 114, 122, 127, 135, 136, 141, 144, 150, 152, 156, 162, 164, 165, 166, 169, 172, 173, 189, 195, 196, 202, 203, 205, 206, 207, 215, 216, 218, 221, 226, 228, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 415, 416, 420, 421, 422, 423, 426, 427, 429, 431, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 460, 461, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 553, 554, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 646, 648, 649, 651, 652, 653, 654, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 687, 688, 689, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 722, 723, 727, 728, 730, 731, 732, 733, 736, 737, 738, 743, 747, 748, 752, 756, 764, 766, 773, 776, 780, 781, 782, 783, 788, 789, 791, 792, 793, 798, 799, 801, 802, 804, 805, 806, 807, 811, 812, 813, 816, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 838, 839, 843, 844, 847, 859, 862, 863, 865, 880], "asish": [14, 880], "asishrocks95": 14, "decod": [14, 16, 19, 20, 21, 153, 166, 167, 169, 195, 197, 198, 244, 261, 264, 266, 267, 269, 275, 312, 328, 354, 363, 373, 439, 451, 478, 486, 491, 493, 502, 519, 524, 525, 527, 536, 539, 555, 559, 609, 615, 620, 700, 748, 856, 870, 880], "unsupervisedspatialfilt": [14, 870, 880], "fastica": [14, 76, 205, 558], "aud_l": [14, 15, 18, 42, 178, 230, 264, 265, 778, 781], "vis_l": [14, 15, 18, 42, 230], "ie": [14, 53, 110, 261, 271, 275, 279, 605, 716, 726, 748, 773, 806, 807], "pca_data": 14, "evokedarrai": [14, 15, 16, 18, 21, 84, 100, 109, 184, 189, 196, 221, 231, 265, 266, 479, 531, 532, 617, 619, 835, 870, 880], "window_titl": [14, 192, 266, 267, 782], "ica_data": 14, "ev1": [14, 880], "426": [14, 20], "decoding_unsupervised_spatial_filt": [14, 20], "erp": [15, 99, 101, 117, 128, 154, 155, 166, 173, 196, 199, 200, 202, 205, 207, 208, 244, 264, 266, 267, 269, 314, 353, 467, 478, 549, 558, 559, 615, 645, 686, 772, 791, 793, 820, 846, 866, 868, 880], "concaten": [15, 70, 74, 81, 112, 138, 152, 169, 189, 192, 204, 206, 215, 241, 264, 265, 266, 267, 361, 362, 363, 410, 419, 475, 478, 479, 561, 576, 577, 588, 665, 790, 880], "rescal": [15, 63, 113, 114, 369, 370, 371, 575, 700, 703, 808, 870, 880], "fed": 15, "classification_report": [15, 138], "confusion_matrix": [15, 138], "minmaxscal": 15, "n_filter": 15, "penalti": [15, 40, 46, 244, 475, 476, 868], "l1": [15, 40, 475, 476], "pred": 15, "report": [15, 138, 166, 174, 175, 210, 212, 227, 241, 244, 264, 265, 266, 269, 289, 291, 434, 451, 478, 479, 484, 547, 558, 575, 577, 593, 618, 716, 726, 730, 778, 795, 801, 837, 839, 855, 858, 859, 860, 862, 868, 870, 880], "target_nam": [15, 138], "cm_normal": 15, "astyp": [15, 72, 135, 146, 161, 192, 195, 203, 215], "float": [15, 19, 31, 40, 65, 93, 115, 144, 145, 146, 150, 161, 170, 189, 195, 205, 215, 217, 226, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 290, 297, 298, 304, 305, 312, 321, 326, 328, 330, 341, 342, 343, 344, 347, 353, 354, 357, 358, 359, 360, 365, 371, 373, 410, 412, 414, 415, 416, 417, 418, 421, 422, 423, 427, 431, 434, 436, 438, 439, 445, 446, 448, 449, 450, 451, 453, 454, 455, 462, 468, 469, 473, 475, 476, 477, 478, 479, 488, 489, 502, 511, 513, 514, 518, 519, 521, 522, 525, 526, 527, 528, 529, 531, 532, 536, 537, 538, 540, 541, 542, 557, 558, 559, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 588, 590, 592, 593, 594, 596, 597, 606, 631, 637, 638, 639, 640, 649, 650, 655, 656, 657, 658, 659, 660, 661, 662, 665, 667, 670, 671, 672, 674, 675, 678, 679, 682, 683, 684, 686, 687, 688, 690, 691, 692, 693, 694, 695, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 718, 719, 724, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 748, 752, 753, 761, 765, 767, 768, 772, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 816, 833, 865, 880], "sum": [15, 28, 31, 41, 47, 60, 72, 82, 109, 113, 114, 117, 138, 145, 150, 162, 163, 169, 176, 184, 185, 202, 226, 227, 231, 241, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 286, 353, 358, 478, 479, 540, 558, 563, 652, 687, 688, 690, 691, 695, 701, 702, 704, 780, 859, 862, 865, 880], "imshow": [15, 16, 22, 70, 107, 115, 116, 127, 135, 137, 147, 161, 173, 196, 226, 228, 229, 230, 231, 264, 265, 266, 267, 321, 700, 749, 751, 786, 809, 818], "nearest": [15, 26, 80, 116, 120, 135, 137, 141, 146, 161, 169, 183, 215, 226, 261, 264, 265, 266, 267, 270, 271, 272, 273, 275, 277, 278, 279, 280, 282, 360, 365, 410, 417, 478, 479, 557, 558, 572, 695, 700, 701, 702, 703, 704, 736, 748, 765, 766, 772, 780, 787, 791, 800, 803, 808, 810, 862, 865, 880], "blue": [15, 54, 55, 80, 83, 112, 132, 136, 143, 152, 157, 173, 176, 178, 179, 182, 191, 207, 234, 235, 241, 262, 748, 763, 764, 772, 776, 835], "tick_mark": 15, "ytick": [15, 127, 195, 202, 226], "precis": [15, 47, 70, 79, 90, 135, 138, 158, 185, 202, 203, 210, 215, 223, 258, 264, 265, 270, 297, 298, 451, 478, 479, 499, 588, 656, 658, 677, 727, 728, 730, 731, 855, 859, 865, 880], "recal": [15, 90, 138, 150, 151, 157, 216, 656, 657, 659, 662], "f1": [15, 70, 90, 138, 656], "support": [15, 34, 61, 123, 135, 136, 137, 138, 141, 143, 150, 151, 152, 167, 171, 173, 182, 183, 186, 190, 191, 218, 239, 240, 241, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 297, 298, 304, 312, 318, 320, 340, 354, 359, 360, 369, 370, 371, 373, 391, 410, 417, 418, 426, 431, 440, 441, 443, 444, 448, 449, 450, 470, 477, 478, 479, 484, 489, 498, 501, 502, 503, 504, 508, 513, 517, 520, 521, 558, 569, 577, 588, 610, 613, 614, 628, 635, 636, 645, 648, 649, 665, 681, 683, 692, 695, 700, 702, 703, 704, 748, 764, 766, 769, 772, 776, 777, 778, 782, 787, 795, 801, 802, 806, 811, 812, 813, 814, 817, 835, 837, 839, 842, 844, 845, 846, 851, 857, 859, 866, 880], "288": [15, 35, 71, 72, 132, 142, 146, 161, 170, 172, 209, 231, 236, 244, 567], "macro": [15, 138], "avg": [15, 138, 145, 226, 256, 727, 728], "attribut": [15, 30, 31, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 71, 78, 83, 86, 87, 116, 119, 120, 127, 141, 142, 144, 150, 151, 152, 167, 169, 170, 171, 173, 176, 177, 179, 180, 182, 183, 184, 201, 205, 206, 210, 211, 218, 221, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 302, 353, 365, 410, 411, 413, 414, 416, 417, 418, 420, 425, 428, 467, 468, 477, 478, 479, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 517, 557, 558, 559, 612, 618, 622, 628, 650, 685, 700, 701, 702, 703, 704, 735, 748, 750, 772, 781, 794, 829, 835, 839, 857, 880], "last": [15, 70, 82, 104, 127, 138, 141, 145, 147, 152, 161, 167, 184, 189, 196, 200, 201, 202, 203, 205, 206, 215, 218, 226, 227, 234, 241, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 287, 288, 302, 320, 342, 354, 362, 413, 420, 421, 423, 434, 448, 449, 450, 451, 477, 478, 479, 502, 519, 524, 553, 558, 561, 681, 686, 687, 688, 690, 691, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 718, 729, 735, 748, 780, 785, 787, 792, 795, 802, 808, 835, 838, 856, 861, 862, 880], "nrow": [15, 45, 73, 120, 127, 147, 152, 177, 184, 211, 227, 266, 267, 410, 417, 558, 787, 791, 865, 880], "fitted_xdawn": 15, "get_channel_typ": [15, 141, 170, 264, 265, 266, 267, 269, 478, 479, 558, 700, 702, 703, 704, 880], "get_montag": [15, 115, 135, 136, 137, 264, 265, 266, 267, 269, 478, 479, 880], "cur_class": 15, "cur_pattern": 15, "pattern_evok": 15, "time_format": [15, 21, 100, 109, 112, 146, 177, 217, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 558, 700, 703, 787, 795, 801, 880], "show_nam": [15, 67, 100, 120, 152, 171, 183, 227, 261, 264, 265, 266, 267, 273, 312, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 784, 787, 791, 798, 800, 803, 804, 808, 880], "h_pad": [15, 226], "w_pad": [15, 226], "bertrand": [15, 71, 78, 88, 196, 200, 244, 559, 567, 716, 726, 727, 730, 862, 880], "rivet": [15, 88, 196, 244, 559], "antoin": [15, 88, 196, 244, 559, 880], "souloumiac": [15, 88, 196, 244, 559], "virgini": [15, 88, 196, 244, 559], "attina": [15, 88, 196, 244, 559], "gibert": [15, 88, 196, 244, 559], "algorithm": [15, 27, 31, 70, 74, 77, 83, 84, 85, 88, 113, 126, 135, 153, 157, 158, 163, 167, 196, 200, 202, 205, 210, 226, 231, 234, 235, 236, 244, 269, 270, 274, 309, 354, 409, 410, 424, 431, 475, 478, 525, 544, 558, 559, 561, 566, 568, 569, 574, 577, 579, 586, 588, 595, 596, 597, 660, 677, 682, 738, 846, 851, 855, 856, 857, 868, 880], "enhanc": [15, 88, 195, 196, 227, 231, 244, 416, 558, 559, 577, 687, 688, 690, 691, 839, 858, 865, 868], "2035": [15, 88, 181, 196, 244, 559], "2043": [15, 88, 170, 196, 244, 559], "2009": [15, 35, 58, 88, 117, 172, 196, 205, 226, 227, 244, 275, 473, 559, 572, 687, 688, 690, 691, 855, 865, 880], "2012869": [15, 88, 196, 244, 559], "hubert": [15, 88, 244, 559, 880], "cecotti": [15, 88, 244, 559], "emmanuel": [15, 88, 202, 244, 559], "mabi": [15, 88, 244, 559], "j\u00e9r\u00e9mie": [15, 88, 244, 559], "mattout": [15, 88, 244, 559], "theoret": [15, 88, 195, 196, 202, 221, 244, 410, 559, 835], "effici": [15, 42, 44, 88, 192, 202, 226, 244, 259, 264, 265, 266, 267, 422, 478, 479, 558, 559, 560, 660, 702, 704, 730, 731, 857, 880], "p300": [15, 88, 192, 196, 202, 244, 559, 729, 732], "proceed": [15, 33, 40, 46, 88, 167, 181, 204, 205, 223, 244, 290, 297, 476, 559, 729, 732, 855, 862], "eusipco": [15, 88, 244, 559, 729, 732], "1382": [15, 88, 244, 559], "1386": [15, 88, 195, 244, 559], "barcelona": [15, 88, 244, 559], "url": [15, 88, 113, 152, 196, 244, 354, 380, 385, 387, 391, 402, 403, 473, 525, 559, 682, 729, 732, 839, 862, 880], "ieeexplor": [15, 88, 244, 559, 729, 732], "7073970": [15, 88, 244, 559], "632": [15, 19, 20, 196, 231], "decoding_xdawn_eeg": [15, 20], "cours": [16, 27, 32, 36, 38, 39, 41, 50, 56, 70, 74, 83, 90, 92, 95, 101, 113, 116, 136, 137, 143, 144, 152, 166, 167, 173, 176, 177, 178, 181, 187, 188, 196, 199, 202, 206, 207, 223, 231, 236, 244, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 289, 291, 293, 296, 360, 411, 426, 444, 453, 463, 473, 475, 476, 478, 479, 513, 520, 524, 525, 539, 555, 618, 622, 628, 650, 664, 666, 667, 686, 700, 702, 703, 704, 747, 748, 772, 799, 806, 811, 835, 862, 865, 880], "techniqu": [16, 17, 20, 27, 59, 70, 73, 74, 75, 150, 152, 166, 167, 196, 199, 202, 204, 205, 207, 208, 210, 211, 212, 213, 223, 226, 244, 264, 265, 266, 267, 269, 373, 412, 421, 424, 446, 448, 449, 469, 478, 479, 555, 558, 615, 645, 835, 856, 862, 863, 868], "By": [16, 45, 70, 80, 83, 103, 104, 112, 135, 136, 143, 146, 150, 151, 152, 159, 167, 169, 170, 171, 172, 173, 179, 189, 190, 200, 202, 205, 206, 207, 208, 210, 215, 216, 218, 239, 256, 264, 265, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 309, 326, 434, 451, 478, 479, 558, 561, 642, 665, 677, 693, 700, 701, 702, 703, 704, 774, 778, 786, 794, 801, 811, 862, 868, 880], "onto": [16, 18, 40, 73, 136, 137, 143, 156, 167, 171, 176, 181, 195, 200, 206, 207, 210, 222, 270, 272, 278, 280, 418, 584, 649, 677, 748, 764, 799, 818, 856, 862, 880], "surrog": [16, 158, 184, 207, 365, 426, 472, 880], "expos": [16, 133, 195, 230, 844, 880], "exhibit": [16, 241, 266, 267, 271, 272, 275, 278, 279, 280, 862], "evolut": [16, 113, 558, 795], "compute_em": [16, 870, 880], "audl": [16, 72], "visl": [16, 72], "wai": [16, 21, 27, 34, 43, 44, 74, 114, 115, 127, 135, 141, 142, 143, 145, 150, 151, 152, 157, 161, 162, 167, 169, 170, 171, 172, 173, 178, 181, 191, 195, 200, 201, 202, 203, 205, 206, 207, 210, 212, 216, 217, 218, 221, 223, 226, 228, 229, 234, 236, 241, 244, 258, 259, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 354, 434, 444, 478, 479, 493, 518, 558, 560, 574, 580, 589, 611, 618, 649, 681, 682, 683, 689, 695, 700, 703, 714, 716, 726, 730, 748, 835, 837, 839, 842, 845, 855, 856, 857, 858, 861, 863, 880], "n_epoch": [16, 114, 141, 147, 150, 167, 195, 196, 221, 231, 240, 259, 264, 265, 314, 410, 411, 412, 415, 416, 417, 418, 419, 421, 422, 424, 425, 448, 449, 559, 566, 702, 703, 705, 706, 707, 727, 728, 729, 772, 778, 779, 880], "n_time": [16, 19, 31, 63, 65, 67, 70, 75, 83, 114, 141, 147, 150, 160, 167, 191, 192, 195, 196, 205, 208, 215, 221, 223, 226, 230, 231, 234, 235, 236, 259, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 314, 348, 410, 411, 412, 415, 416, 417, 418, 419, 421, 423, 424, 426, 444, 446, 448, 449, 477, 478, 479, 498, 533, 559, 586, 650, 655, 656, 657, 658, 659, 660, 661, 662, 667, 674, 675, 676, 680, 686, 690, 691, 700, 702, 703, 704, 705, 706, 707, 718, 719, 723, 725, 727, 728, 729, 748, 772, 779, 780, 787, 808, 880], "993": [16, 18, 113, 209, 231], "613": [16, 18, 209, 231], "145": [16, 18, 42, 45, 73, 75, 82, 112, 123, 150, 170, 196, 220, 222, 226, 230, 231], "106": [16, 35, 72, 85, 96, 97, 100, 121, 142, 146, 153, 167, 170, 173, 178, 181, 201, 205, 226, 230, 231, 865], "x_transform": 16, "leav": [16, 138, 145, 173, 192, 199, 204, 215, 596, 837, 845, 847, 880], "recommend": [16, 41, 43, 44, 45, 70, 114, 135, 156, 159, 162, 173, 189, 191, 202, 203, 205, 206, 208, 210, 244, 259, 264, 265, 266, 267, 271, 275, 279, 282, 307, 309, 318, 330, 347, 354, 359, 360, 373, 409, 412, 418, 454, 473, 478, 479, 497, 508, 518, 525, 531, 538, 558, 563, 574, 588, 595, 611, 613, 617, 642, 648, 649, 686, 690, 691, 757, 764, 806, 837, 839, 843, 844, 845, 858, 859, 862, 880], "stratifi": [16, 427], "tend": [16, 163, 179, 202, 204, 205, 226, 568, 859, 862], "overfit": [16, 88, 195], "cannot": [16, 59, 162, 170, 173, 189, 191, 202, 203, 206, 208, 217, 236, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 290, 341, 343, 432, 478, 479, 525, 558, 577, 620, 649, 700, 748, 784, 806, 811, 827, 837, 839, 861, 880], "x_scale": 16, "futur": [16, 70, 172, 205, 218, 282, 416, 422, 450, 577, 839, 843, 857, 859, 861, 880], "filters_": [16, 18, 410, 411, 414, 417, 418, 428, 559, 880], "individu": [16, 26, 32, 37, 42, 43, 44, 101, 135, 141, 143, 145, 156, 160, 167, 171, 173, 176, 200, 206, 207, 211, 217, 218, 226, 240, 241, 244, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 297, 298, 328, 349, 410, 451, 478, 479, 526, 534, 535, 574, 596, 618, 678, 684, 692, 729, 732, 766, 778, 782, 786, 799, 801, 826, 839, 855, 856, 861, 862, 880], "argsort": [16, 31, 117, 128, 144, 182], "reorder": [16, 47, 117, 264, 265, 266, 267, 478, 479, 489, 700, 702, 703, 704, 779, 809, 880], "kei": [16, 67, 94, 95, 127, 135, 138, 141, 142, 143, 150, 151, 153, 167, 170, 171, 172, 182, 190, 206, 207, 215, 216, 218, 221, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 288, 297, 298, 302, 324, 325, 354, 358, 359, 365, 368, 369, 370, 371, 385, 391, 402, 410, 417, 419, 426, 434, 437, 439, 453, 454, 455, 458, 470, 473, 475, 476, 478, 479, 510, 514, 524, 525, 536, 548, 557, 558, 560, 572, 574, 575, 577, 599, 612, 614, 631, 644, 651, 652, 653, 665, 669, 685, 686, 687, 688, 690, 691, 700, 702, 703, 704, 735, 738, 748, 765, 770, 771, 772, 776, 778, 779, 780, 781, 782, 784, 786, 787, 788, 791, 800, 801, 803, 804, 806, 808, 810, 811, 812, 833, 839, 845, 856, 868, 880], "ems_av": 16, "u": [16, 19, 21, 47, 70, 79, 104, 112, 115, 116, 138, 142, 145, 147, 150, 152, 161, 167, 172, 173, 181, 182, 184, 189, 190, 195, 201, 202, 205, 206, 207, 215, 216, 221, 226, 244, 255, 256, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 444, 478, 479, 533, 839, 842, 847, 858, 861, 862, 865, 880], "schurger": [16, 196, 244, 411, 426], "thu": [16, 18, 43, 47, 55, 70, 103, 114, 141, 142, 150, 153, 171, 172, 176, 181, 183, 189, 196, 202, 205, 207, 208, 210, 226, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 347, 412, 421, 433, 444, 446, 448, 478, 479, 525, 533, 536, 560, 728, 731, 835, 839, 855, 856, 859, 862, 880], "equalize_event_count": [16, 150, 152, 167, 230, 231, 236, 264, 265, 703, 880], "103": [16, 35, 50, 112, 114, 121, 170, 198, 231, 865], "112": [16, 70, 115, 135, 170, 172, 196, 220, 226, 244, 566, 865], "aaron": [16, 196, 244, 411, 426], "sebastien": [16, 196, 244, 411, 426, 880], "marti": [16, 196, 244, 411, 426, 880], "reveal": [16, 101, 113, 145, 171, 192, 196, 202, 241, 244, 411, 426, 729, 732], "057": [16, 20, 21, 141, 143, 150, 170, 223, 244, 418], "140": [16, 19, 34, 81, 82, 112, 123, 157, 170, 206, 207, 209, 231, 244, 563, 862], "ems_filt": [16, 20], "continu": [17, 19, 20, 21, 27, 98, 102, 141, 143, 146, 149, 152, 162, 169, 189, 196, 197, 198, 199, 201, 202, 205, 206, 210, 213, 216, 220, 221, 226, 239, 244, 256, 258, 264, 265, 266, 267, 269, 345, 353, 357, 359, 363, 393, 401, 405, 410, 416, 417, 418, 422, 450, 451, 478, 479, 491, 497, 498, 508, 518, 519, 555, 557, 558, 561, 570, 578, 579, 606, 611, 684, 685, 686, 700, 702, 703, 704, 725, 772, 784, 791, 793, 835, 839, 855, 856, 861, 865, 868, 880], "spoc": [17, 20, 27, 244, 264, 269, 410, 418, 491, 519, 559, 870, 880], "xdawn": [17, 20, 27, 77, 85, 244, 261, 264, 266, 267, 269, 359, 373, 410, 414, 417, 425, 478, 555, 615, 779, 870, 880], "em": [17, 20, 27, 196, 264, 266, 267, 269, 426, 478, 555, 615, 870, 880], "recept": [17, 20, 27, 166, 197, 198, 244, 250, 269, 312, 328, 373, 416, 422, 450, 479, 810, 856], "spectro": [17, 20, 27, 114, 166, 197, 198, 264, 266, 267, 269, 416, 418, 422, 450, 491, 519, 719], "ssd": [17, 20, 27, 264, 266, 267, 269, 491, 519, 719, 870, 880], "mvpa": [18, 166, 197, 198, 261, 264, 266, 267, 269, 275, 354, 410, 411, 412, 413, 414, 415, 417, 419, 420, 425, 427, 428, 451, 525, 536, 559, 620, 748, 880], "neurophysiolog": [18, 19, 836], "interpret": [18, 19, 103, 143, 152, 160, 161, 189, 196, 202, 203, 217, 228, 230, 231, 236, 244, 259, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 278, 279, 280, 282, 303, 310, 313, 327, 329, 354, 355, 357, 359, 369, 412, 413, 414, 416, 420, 423, 426, 427, 428, 431, 448, 449, 453, 466, 468, 469, 478, 479, 486, 493, 500, 502, 517, 520, 521, 525, 531, 532, 541, 542, 557, 558, 560, 563, 570, 571, 573, 574, 575, 577, 580, 584, 594, 596, 603, 648, 651, 652, 653, 656, 665, 668, 686, 687, 688, 689, 690, 691, 695, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 727, 728, 729, 730, 731, 748, 772, 778, 779, 780, 782, 783, 784, 785, 792, 797, 799, 802, 839, 842, 843, 850, 862, 880], "romain": [18, 880], "trachel": [18, 880], "trachelr": 18, "sample_path": [18, 124, 135, 136, 137], "meg_data": [18, 141], "reshap": [18, 138, 195, 226, 227, 230, 234, 236, 416, 425], "scaler": [18, 870, 880], "coef": [18, 19, 195, 196, 428], "revers": [18, 19, 72, 144, 147, 173, 189, 199, 201, 202, 204, 205, 207, 215, 261, 266, 267, 271, 272, 275, 277, 278, 279, 280, 782, 784, 786, 787, 806, 811, 880], "sequenti": [18, 141, 151, 221, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 335, 354, 355, 357, 359, 413, 420, 423, 426, 427, 453, 466, 468, 478, 479, 517, 520, 521, 531, 532, 541, 542, 563, 570, 571, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 738, 748, 767, 772, 780, 783, 802, 806, 811, 812, 835], "kai": [18, 19, 145, 244, 414, 416, 428, 434], "g\u00f6rgen": [18, 19, 244, 414, 416, 428], "dylan": [18, 19, 83, 244, 414, 416, 428, 558], "hayn": [18, 19, 244, 414, 416, 428], "benjamin": [18, 19, 244, 410, 414, 416, 428], "blankertz": [18, 19, 244, 410, 414, 416, 428], "felix": [18, 19, 112, 244, 414, 416, 428, 880], "bie\u00dfmann": [18, 19, 244, 414, 416, 428], "On": [18, 19, 70, 71, 167, 169, 200, 202, 205, 206, 241, 244, 256, 282, 414, 416, 428, 439, 459, 558, 567, 837, 839, 844, 845, 847, 857, 862, 880], "multivari": [18, 19, 90, 94, 138, 163, 195, 196, 244, 354, 414, 416, 428, 654, 856, 859, 880], "110": [18, 19, 21, 35, 41, 81, 82, 112, 135, 159, 170, 215, 220, 226, 230, 231, 244, 414, 416, 428, 563], "067": [18, 19, 244, 414, 416, 428], "953": [18, 20, 231], "linear_model_pattern": [18, 20], "reproduc": [19, 45, 70, 79, 93, 152, 195, 216, 297, 511, 558, 586, 605, 652, 653, 654, 663, 664, 666, 687, 688, 689, 690, 691, 839, 880], "lalor": [19, 195, 244, 416, 856], "mtrf": [19, 195, 244, 416, 870, 880], "receptivefield": [19, 195, 422, 870, 880], "speech": [19, 195, 244, 416, 592, 729, 732, 856], "envelop": [19, 82, 113, 114, 115, 137, 147, 196, 264, 265, 266, 267, 417, 478, 479, 563, 856, 880], "try": [19, 31, 70, 74, 83, 141, 142, 144, 152, 157, 159, 162, 163, 168, 172, 177, 181, 202, 203, 204, 205, 206, 207, 215, 222, 223, 241, 274, 282, 427, 447, 460, 486, 493, 558, 572, 764, 821, 837, 838, 839, 844, 857, 859, 860, 880], "known": [19, 44, 88, 112, 114, 145, 152, 157, 161, 166, 181, 224, 225, 226, 261, 264, 265, 266, 267, 268, 269, 270, 275, 354, 364, 445, 451, 478, 479, 486, 493, 508, 524, 525, 539, 596, 620, 623, 656, 664, 667, 682, 748, 835, 851, 856, 862, 880], "literatur": [19, 145, 241, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703, 835], "simpli": [19, 43, 136, 144, 145, 147, 150, 171, 172, 189, 200, 201, 205, 207, 210, 216, 217, 226, 240, 241, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 478, 479, 574, 575, 700, 703, 837, 839, 842, 847, 856, 862, 880], "chri": [19, 114, 137, 195, 196, 244, 880], "holdgraf": [19, 114, 115, 137, 195, 196, 244, 416, 880], "choldgraf": [19, 114, 115, 137, 195], "nicola": [19, 47, 244, 660, 880], "barascud": [19, 880], "sphinx_gallery_thumbnail_numb": [19, 120, 196], "scipi": [19, 31, 97, 111, 157, 172, 173, 195, 202, 206, 223, 226, 227, 228, 231, 234, 235, 241, 256, 261, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 318, 329, 358, 360, 410, 412, 417, 421, 445, 446, 448, 449, 450, 453, 478, 479, 557, 558, 566, 572, 648, 680, 682, 687, 688, 690, 691, 693, 694, 700, 702, 703, 704, 716, 719, 726, 748, 765, 780, 787, 791, 800, 802, 803, 808, 810, 838, 839, 859, 861, 864, 877, 880], "loadmat": [19, 195], "collect": [19, 70, 127, 152, 158, 169, 173, 184, 185, 191, 192, 200, 210, 241, 244, 257, 261, 264, 265, 266, 267, 321, 410, 417, 437, 478, 479, 557, 558, 685, 700, 702, 704, 762, 772, 780, 787, 791, 803, 808, 810, 835, 839, 854, 855, 862, 865, 880], "listen": [19, 856, 861, 868], "know": [19, 40, 127, 143, 157, 161, 170, 173, 190, 200, 202, 205, 206, 207, 217, 230, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 473, 475, 476, 533, 536, 641, 788, 839, 842, 845, 846, 857, 859, 862, 880], "primarili": [19, 70, 171, 199, 202, 412, 478, 479, 602, 770, 835, 846], "speech_data": [19, 195], "down": [19, 21, 70, 112, 135, 152, 162, 195, 196, 202, 206, 217, 218, 228, 230, 261, 262, 264, 265, 266, 267, 273, 274, 410, 417, 450, 478, 479, 557, 558, 586, 687, 688, 690, 691, 700, 702, 704, 748, 776, 778, 779, 780, 784, 787, 791, 800, 801, 803, 808, 837, 839, 861, 880], "biosemi128": [19, 171], "rawarrai": [19, 63, 65, 67, 70, 75, 83, 114, 160, 189, 191, 205, 208, 221, 265, 267, 497, 835, 870, 880], "ln": [19, 92, 716, 726, 730, 845, 862], "alpha": [19, 21, 28, 35, 39, 40, 44, 46, 49, 50, 59, 70, 79, 96, 97, 110, 112, 113, 116, 135, 136, 138, 147, 152, 173, 178, 182, 191, 195, 206, 212, 226, 228, 231, 236, 240, 241, 260, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 354, 416, 422, 468, 473, 475, 476, 478, 479, 541, 622, 678, 684, 687, 688, 690, 691, 700, 702, 704, 748, 764, 767, 780, 784, 796, 802, 806, 811, 880], "ln1": 19, "lw": [19, 39, 135, 145, 173, 182, 195, 210, 212, 223, 716, 726, 880], "frameon": [19, 127], "float64": [19, 63, 65, 67, 70, 75, 83, 92, 94, 114, 160, 168, 191, 205, 208, 221, 477, 680, 862], "7677": 19, "7676": 19, "119": [19, 79, 123, 135, 136, 161, 170, 209, 226, 230, 231, 880], "938": [19, 196, 231], "construct": [19, 42, 69, 103, 141, 145, 163, 169, 179, 181, 184, 185, 189, 192, 196, 202, 205, 206, 207, 210, 223, 226, 240, 241, 264, 265, 266, 267, 271, 275, 277, 279, 280, 284, 285, 297, 313, 360, 434, 445, 446, 448, 449, 478, 479, 495, 572, 612, 645, 649, 650, 686, 695, 706, 709, 761, 767, 801, 806, 812, 835, 855, 862, 880], "relationship": [19, 22, 144, 161, 204, 226, 416, 422, 454, 716, 726, 727, 728, 730, 731, 835, 856, 861, 862], "rf": [19, 195, 416], "feature_nam": [19, 195, 416, 880], "corrcoef": [19, 22, 47, 416], "extra": [19, 81, 82, 146, 161, 167, 170, 171, 192, 207, 215, 222, 261, 264, 265, 266, 267, 273, 305, 306, 312, 335, 337, 410, 411, 417, 429, 478, 479, 557, 558, 572, 700, 702, 704, 744, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 835, 843, 847, 880], "inclus": [19, 123, 141, 144, 186, 256, 264, 265, 274, 277, 380, 402, 403, 455, 473, 475, 476, 489, 536, 553, 558, 577, 692, 701, 703, 880], "n_delai": [19, 416], "held": [19, 80, 172, 195, 861], "coef_": [19, 195, 414, 416, 557], "n_output": [19, 416, 422], "n_featur": [19, 195, 196, 410, 411, 412, 414, 415, 416, 417, 418, 421, 422, 425, 559, 586, 680], "delays_": [19, 195, 416], "mean_coef": 19, "mean_scor": 19, "ix_ch": 19, "49it": [19, 34, 103, 112, 196, 209, 226, 228, 230, 231, 236], "sometim": [19, 27, 60, 79, 83, 112, 115, 117, 127, 128, 135, 141, 145, 157, 162, 169, 170, 190, 191, 200, 202, 203, 205, 207, 208, 226, 261, 264, 265, 266, 267, 269, 273, 410, 417, 478, 479, 494, 557, 558, 572, 606, 612, 700, 702, 704, 765, 772, 780, 787, 791, 800, 803, 808, 810, 835, 839, 847, 855, 859, 862, 880], "well": [19, 22, 32, 37, 47, 70, 78, 116, 120, 135, 137, 138, 141, 144, 145, 151, 153, 161, 163, 166, 167, 170, 173, 176, 183, 185, 189, 190, 192, 195, 199, 200, 202, 204, 205, 206, 207, 208, 210, 213, 215, 221, 223, 231, 239, 241, 244, 264, 265, 266, 267, 274, 275, 320, 342, 354, 369, 410, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 426, 434, 449, 450, 478, 479, 558, 559, 588, 595, 700, 716, 718, 726, 729, 730, 731, 732, 778, 780, 794, 835, 837, 839, 845, 851, 856, 857, 859, 861, 862, 864, 868, 880], "recreat": [19, 127, 141, 202, 771], "time_plot": 19, "180": [19, 24, 33, 35, 56, 81, 92, 111, 157, 170, 179, 192, 199, 201, 203, 205, 209, 226, 271, 272, 275, 278, 279, 280, 444, 753, 880], "highlight": [19, 21, 90, 95, 114, 120, 151, 152, 173, 176, 177, 203, 205, 210, 217, 261, 262, 264, 265, 266, 267, 274, 410, 417, 478, 479, 557, 700, 702, 704, 765, 776, 780, 782, 787, 803, 808, 810, 839, 880], "max_coef": 19, "pcolormesh": [19, 114, 195, 880], "shade": [19, 195, 206, 757, 772, 813, 814, 880], "gouraud": [19, 195], "ncoeffici": 19, "setp": [19, 195, 203], "get_xticklabel": [19, 195], "2c": [19, 862], "ix_plot": 19, "argmin": [19, 120, 145, 241], "vlim": [19, 70, 80, 100, 109, 142, 143, 204, 207, 211, 231, 241, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 880], "nfor": 19, "anoth": [19, 31, 45, 70, 87, 95, 126, 142, 144, 145, 146, 150, 152, 156, 157, 162, 168, 172, 181, 189, 201, 202, 205, 206, 210, 216, 217, 218, 226, 231, 264, 265, 266, 267, 270, 271, 272, 274, 275, 276, 278, 279, 280, 282, 314, 354, 355, 357, 359, 360, 413, 420, 423, 426, 427, 436, 453, 466, 468, 478, 479, 506, 517, 520, 521, 531, 532, 541, 542, 544, 563, 570, 571, 585, 648, 651, 652, 653, 665, 671, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 736, 737, 738, 769, 780, 783, 801, 802, 835, 837, 839, 847, 856, 861, 862, 865, 880], "case": [19, 44, 58, 70, 73, 79, 90, 94, 95, 103, 114, 120, 123, 127, 141, 144, 145, 150, 156, 162, 163, 166, 169, 170, 172, 173, 181, 182, 186, 189, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 217, 226, 227, 228, 234, 236, 239, 241, 244, 258, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 288, 297, 298, 302, 308, 318, 329, 353, 354, 358, 359, 369, 370, 371, 372, 410, 417, 427, 434, 439, 450, 453, 454, 461, 468, 473, 475, 476, 478, 479, 486, 493, 500, 508, 513, 518, 524, 525, 526, 527, 528, 529, 536, 547, 553, 561, 572, 586, 605, 611, 628, 642, 645, 660, 665, 686, 687, 700, 702, 703, 704, 712, 718, 728, 731, 735, 748, 766, 772, 779, 781, 784, 785, 788, 806, 835, 839, 847, 859, 861, 862, 880], "aim": [19, 138, 159, 178, 222, 223, 303, 355, 356, 357], "exploit": [19, 88, 880], "context": [19, 42, 116, 172, 173, 176, 196, 202, 226, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 410, 413, 420, 423, 426, 427, 453, 466, 468, 478, 479, 517, 520, 521, 526, 531, 532, 541, 542, 547, 558, 563, 570, 571, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 742, 743, 778, 780, 783, 795, 801, 802, 819, 820, 845, 861, 880], "treat": [19, 21, 152, 173, 196, 207, 208, 226, 230, 264, 265, 268, 274, 489, 491, 549, 551, 687, 688, 690, 691, 703, 772, 790, 880], "independ": [19, 70, 74, 83, 109, 112, 152, 159, 163, 167, 180, 181, 182, 196, 199, 201, 202, 204, 205, 206, 210, 217, 226, 244, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 358, 413, 420, 425, 478, 479, 558, 559, 566, 572, 577, 586, 588, 682, 684, 687, 688, 690, 691, 694, 727, 728, 730, 731, 791, 793, 795, 846, 855, 856, 859, 862, 880], "therefor": [19, 70, 94, 135, 137, 143, 147, 152, 159, 163, 170, 171, 190, 196, 200, 201, 202, 204, 205, 208, 210, 226, 241, 264, 265, 274, 318, 320, 434, 478, 494, 497, 558, 606, 612, 613, 617, 839, 843, 855, 861, 862], "qualiti": [19, 121, 158, 167, 173, 201, 202, 205, 207, 218, 241, 244, 259, 264, 265, 266, 267, 478, 479, 517, 558, 574, 592, 792, 839, 855, 861, 862, 868, 880], "expens": [19, 166, 167, 173, 596, 863, 868, 880], "especi": [19, 55, 70, 112, 120, 127, 144, 150, 163, 167, 170, 199, 200, 202, 204, 205, 209, 215, 241, 266, 267, 275, 478, 479, 558, 578, 596, 687, 688, 690, 691, 788, 835, 839, 842, 855, 859, 862, 880], "lag": [19, 27, 77, 85, 195, 223, 244, 264, 266, 267, 269, 416, 422, 436, 478, 555, 615, 880], "footcit": [19, 384, 839], "crosseetal2016": 19, "earlier": [19, 146, 168, 172, 192, 199, 202, 215, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 452, 453, 454, 473, 475, 476, 536, 788, 843, 880], "wherea": [19, 81, 135, 137, 144, 157, 159, 169, 176, 196, 202, 203, 204, 210, 226, 258, 264, 265, 283, 297, 298, 478, 479, 486, 778, 801, 807, 835, 862, 866, 880], "chang": [19, 31, 44, 45, 114, 127, 135, 137, 143, 146, 150, 152, 157, 159, 162, 168, 171, 172, 173, 176, 177, 179, 185, 189, 190, 192, 195, 200, 205, 206, 207, 211, 212, 216, 217, 218, 222, 226, 229, 234, 236, 241, 244, 256, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 297, 298, 304, 307, 309, 312, 320, 335, 340, 341, 343, 347, 360, 362, 386, 410, 417, 431, 439, 444, 445, 447, 449, 451, 453, 454, 463, 469, 473, 475, 476, 478, 479, 498, 501, 502, 513, 517, 520, 521, 536, 546, 547, 557, 558, 560, 572, 577, 584, 586, 588, 610, 618, 636, 645, 647, 648, 649, 665, 692, 695, 700, 702, 703, 704, 743, 748, 758, 764, 765, 766, 772, 773, 776, 777, 778, 779, 780, 782, 784, 787, 788, 789, 791, 793, 795, 798, 800, 801, 802, 803, 804, 806, 808, 810, 811, 812, 813, 818, 826, 840, 845, 847, 855, 858, 859, 862, 865, 866], "affect": [19, 49, 71, 81, 142, 143, 150, 152, 168, 191, 199, 200, 202, 203, 205, 206, 208, 210, 241, 244, 257, 259, 264, 265, 266, 267, 271, 274, 275, 279, 365, 402, 451, 452, 478, 479, 498, 574, 618, 652, 653, 728, 731, 801, 806, 839, 855, 862, 880], "obvious": [19, 159, 210, 241], "cf": [19, 146, 156, 716, 726, 730], "next": [19, 54, 55, 58, 114, 116, 121, 136, 137, 142, 146, 151, 152, 157, 158, 162, 167, 172, 176, 178, 180, 189, 191, 199, 201, 205, 207, 211, 215, 216, 217, 226, 240, 241, 261, 264, 265, 266, 267, 273, 354, 409, 410, 417, 478, 479, 557, 558, 572, 700, 702, 703, 704, 729, 732, 765, 766, 787, 791, 800, 803, 808, 837, 839, 847, 862, 865, 880], "section": [19, 74, 116, 137, 138, 141, 143, 145, 150, 151, 152, 157, 166, 167, 168, 172, 173, 176, 189, 190, 191, 199, 201, 202, 203, 205, 208, 210, 215, 216, 241, 259, 261, 262, 263, 264, 265, 266, 267, 273, 274, 276, 297, 298, 312, 391, 410, 417, 431, 437, 445, 447, 478, 479, 495, 506, 557, 558, 572, 577, 589, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 839, 843, 855, 861, 862, 863, 865, 880], "haufeetal2014": 19, "sr": 19, "1e4": 19, "mean_pattern": 19, "max_pattern": 19, "8384": [19, 880], "1193": [19, 209, 244], "130": [19, 81, 82, 83, 159, 170, 171, 209, 226, 230, 231, 244, 338, 880], "1869": 19, "198": [19, 35, 170, 185, 230, 236], "2342": [19, 170], "274": [19, 46, 81, 82, 123, 167, 170, 192, 209, 217, 220, 231], "2755": 19, "352": [19, 69, 81, 170, 172, 231], "3076": 19, "3270": 19, "3457": 19, "572": [19, 231], "3576": 19, "647": 19, "3696": [19, 35], "3701": 19, "766": [19, 196, 231], "3698": 19, "42it": [19, 103, 112, 196, 209, 226, 227, 229, 230, 231, 236], "838": [19, 231], "3769": 19, "911": [19, 196, 231], "3837": 19, "988": [19, 25, 26], "3919": 19, "1064": 19, "3986": 19, "1143": [19, 170, 209], "4059": [19, 226], "4113": 19, "1296": [19, 196, 209, 244], "4166": 19, "1369": 19, "4193": 19, "1441": [19, 34, 146, 170, 192, 201, 209, 223], "4212": 19, "1516": 19, "4244": 19, "1590": [19, 209], "4267": 19, "1661": [19, 21], "4276": 19, "1735": 19, "4297": 19, "1811": [19, 32, 34, 120, 151, 170, 215, 223], "4324": 19, "1881": 19, "1953": 19, "4335": 19, "2025": 19, "4343": 19, "2094": 19, "4341": 19, "2165": 19, "4344": 19, "2238": 19, "4355": 19, "2315": 19, "4380": 19, "2394": [19, 35], "4411": [19, 59], "2473": 19, "4441": 19, "2549": 19, "4456": 19, "2624": 19, "4467": 19, "2700": 19, "4483": [19, 177], "2776": 19, "4495": 19, "2848": 19, "4494": 19, "2924": 19, "4507": 19, "2984": 19, "4464": 19, "3036": 19, "4393": 19, "3087": 19, "4323": 19, "3152": 19, "4306": 19, "3229": 19, "4334": 19, "3305": 19, "4356": 19, "3381": 19, "4374": 19, "4392": 19, "3533": 19, "3612": 19, "4438": 19, "3690": 19, "4461": 19, "4484": 19, "3843": 19, "4490": 19, "3920": 19, "4506": 19, "99it": [19, 33, 34, 96, 103, 112, 195, 196, 209, 226, 228, 231, 234], "3995": 19, "4516": 19, "4072": 19, "4531": 19, "4141": 19, "4518": 19, "4190": 19, "4440": 19, "4241": 19, "4318": 19, "4396": 19, "4395": 19, "4416": 19, "4472": 19, "4435": 19, "4548": 19, "4449": 19, "4626": 19, "4469": 19, "4705": 19, "4492": 19, "4781": 19, "4502": 19, "4860": 19, "4522": 19, "4935": 19, "4529": 19, "5010": 19, "4536": 19, "5087": 19, "5165": 19, "4563": 19, "5229": [19, 244, 729, 732], "4532": 19, "5275": 19, "4444": 19, "5331": 19, "5409": 19, "4418": [19, 160], "5485": 19, "4433": [19, 49], "5560": 19, "5638": 19, "4465": 19, "5716": 19, "5772": 19, "4430": 19, "5818": 19, "4349": 19, "5863": 19, "4270": 19, "5910": 19, "4203": 19, "5963": 19, "4157": 19, "6038": 19, "4182": 19, "6113": 19, "4206": 19, "6187": 19, "4225": 19, "6235": 19, "4163": 19, "6281": 19, "4094": 19, "6334": 19, "4052": 19, "6409": 19, "4084": 19, "6485": 19, "4116": 19, "6563": 19, "4152": 19, "6640": 19, "6718": 19, "4215": 19, "6792": 19, "4234": 19, "6867": 19, "4255": 19, "6942": 19, "4277": 19, "7021": 19, "4307": 19, "7097": 19, "4328": 19, "7170": 19, "4337": 19, "7246": 19, "4357": 19, "7293": 19, "4285": 19, "7339": 19, "4213": 19, "7407": 19, "7470": 19, "4197": 19, "7518": 19, "4136": 19, "7567": 19, "4079": 19, "7616": 19, "4026": 19, "4018": 19, "7754": 19, "4054": 19, "93": [19, 33, 35, 40, 47, 80, 103, 108, 112, 114, 144, 170, 191, 194, 196, 209, 226, 227, 230, 231, 244, 592], "7830": 19, "4088": 19, "7908": 19, "4127": 19, "7984": 19, "4156": 19, "8060": 19, "4184": 19, "8138": 19, "4216": 19, "8216": 19, "4246": 19, "8276": 19, "4219": 19, "8326": [19, 880], "4162": 19, "8377": [19, 880], "4111": 19, "4239": 19, "1325": [19, 209], "131": [19, 170, 226, 230, 231, 335], "2242": [19, 170, 215], "188": [19, 138, 170, 185, 196, 209, 231], "2541": [19, 34, 170, 201, 223], "248": [19, 46, 73, 85, 123, 170, 211, 226, 231, 235, 238], "2774": 19, "323": [19, 170, 209, 210, 226, 231], "3092": 19, "3347": 19, "477": [19, 231], "3543": 19, "554": [19, 82, 85, 176, 188, 196, 231, 236, 238], "3702": 19, "3838": 19, "3934": 19, "781": [19, 196, 231], "3997": 19, "848": [19, 117, 130, 209], "4010": 19, "926": [19, 231], "4089": 19, "4153": 19, "1078": 19, "4199": 19, "4247": 19, "1232": [19, 170], "4292": 19, "1308": 19, "1387": 19, "4365": 19, "1464": 19, "4398": 19, "1543": [19, 170], "4436": 19, "1619": 19, "4454": 19, "1664": 19, "4338": 19, "1715": 19, "4258": 19, "1783": 19, "1859": 19, "1929": 19, "4290": 19, "1997": [19, 113, 181, 206, 207, 244, 297, 298, 653, 716, 726, 727, 730, 862], "4287": [19, 35], "2072": 19, "4312": 19, "2148": 19, "4339": 19, "2225": 19, "4366": 19, "2300": [19, 157], "4385": [19, 209], "2371": 19, "2419": 19, "4300": 19, "2467": 19, "2514": 19, "4140": 19, "2562": [19, 41, 109, 151, 159, 855], "2617": 19, "4035": 19, "2688": 19, "4055": 19, "2764": 19, "4091": 19, "2839": 19, "4122": 19, "2912": 19, "4143": 19, "2980": 19, "4147": 19, "3051": 19, "4160": 19, "3125": 19, "3201": 19, "4211": 19, "3275": 19, "4232": 19, "3350": 19, "4254": 19, "3422": 19, "3500": 19, "4299": 19, "3567": 19, "3627": 19, "4259": 19, "3677": 19, "3753": 19, "4226": 19, "3828": 19, "4248": 19, "3907": 19, "4282": 19, "3985": 19, "4311": 19, "4062": 19, "4138": 19, "4358": 19, "4281": 19, "4331": 19, "4305": 19, "4488": 19, "4362": 19, "4376": 19, "4639": 19, "4711": 19, "4786": 19, "4839": 19, "4354": 19, "4898": 19, "4320": 19, "4957": [19, 142, 152, 335], "4286": 19, "5024": 19, "5094": 19, "5163": 19, "5235": 19, "4296": 19, "5304": [19, 51], "5376": 19, "5454": 19, "4332": 19, "5531": 19, "5608": 19, "5678": 19, "5752": 19, "5824": 19, "4389": 19, "5892": 19, "4382": 19, "5967": 19, "4397": 19, "6043": 19, "4414": 19, "6117": 19, "4424": 19, "6193": 19, "4439": 19, "6268": 19, "4450": 19, "6344": 19, "4463": 19, "6421": 19, "4479": 19, "6496": 19, "4487": [19, 160], "6574": 19, "6650": 19, "6727": 19, "6803": 19, "4540": 19, "6878": 19, "4546": 19, "6954": 19, "4556": 19, "7030": 19, "7104": 19, "4566": 19, "7180": 19, "4575": 19, "7258": 19, "4586": 19, "7333": 19, "4589": 19, "7409": 19, "4594": 19, "7473": 19, "4562": 19, "7534": 19, "4525": 19, "7610": 19, "7687": 19, "7763": 19, "4557": 19, "7841": 19, "4570": 19, "7919": 19, "4584": 19, "7997": 19, "4598": 19, "8071": 19, "8148": 19, "4607": 19, "8229": 19, "4627": 19, "8311": [19, 880], "4651": 19, "4387": 19, "1989": [19, 71, 78, 200, 244, 567, 862], "155": [19, 35, 170, 196, 226, 230, 231, 241, 880], "2810": 19, "3248": 19, "309": [19, 100, 102, 170, 209, 226, 231, 244, 592, 729, 732], "3763": 19, "3911": 19, "521": [19, 231, 244, 354], "3895": 19, "569": [19, 150, 179, 188, 231], "3776": 19, "615": [19, 144, 196, 229, 231, 233], "3661": 19, "662": [19, 196, 231], "3579": 19, "712": [19, 209, 231], "3526": 19, "787": [19, 209], "3639": 19, "858": [19, 231], "3714": 19, "927": [19, 231], "3762": 19, "979": [19, 231], "1031": [19, 34, 170, 209, 223, 838], "3674": 19, "1081": 19, "3628": 19, "1131": [19, 32, 34, 170, 196, 223], "3586": 19, "1183": 19, "3556": 19, "1234": [19, 209], "3525": 19, "1302": 19, "3577": 19, "1379": [19, 209], "3663": 19, "1451": 19, "3716": 19, "1527": 19, "3785": 19, "1603": 19, "3846": 19, "1678": 19, "3900": 19, "1750": 19, "3937": 19, "1808": 19, "3914": 19, "1861": 19, "3873": [19, 335], "1926": 19, "3882": 19, "3927": 19, "2076": 19, "3975": 19, "2153": 19, "4022": 19, "2221": [19, 34, 170, 223], "4033": 19, "2268": 19, "3966": 19, "2321": [19, 34, 170, 223], "3925": 19, "2400": [19, 81, 82, 185, 192], "3981": 19, "2448": [19, 40, 244, 475], "3921": 19, "2495": 19, "3864": 19, "2566": [19, 195], "2642": [19, 100, 170], "3941": 19, "2718": 19, "2795": 19, "4030": 19, "2869": 19, "2945": 19, "4099": 19, "3021": 19, "4132": 19, "4148": 19, "3165": 19, "4168": 19, "3235": 19, "4179": 19, "3307": 19, "4192": 19, "3356": 19, "3404": 19, "4070": 19, "3456": 19, "3506": 19, "3974": 19, "3558": 19, "3935": 19, "3608": 19, "3889": 19, "3659": 19, "3849": 19, "3709": 19, "3810": 19, "3760": 19, "3774": 19, "3739": 19, "3860": 19, "3704": 19, "3676": 19, "3962": 19, "3647": 19, "4011": 19, "3613": 19, "3645": 19, "4151": 19, "3687": 19, "4220": 19, "3733": 19, "3768": [19, 244, 525, 862], "4425": 19, "3795": 19, "4493": [19, 335], "3817": 19, "3797": 19, "4620": 19, "3831": 19, "4696": 19, "3875": 19, "4767": 19, "3903": 19, "4835": 19, "4899": 19, "3924": 19, "4971": 19, "3951": 19, "5044": 19, "3980": 19, "5117": 19, "4009": 19, "5192": 19, "4041": 19, "5264": 19, "5337": 19, "4086": 19, "5407": 19, "5475": 19, "4105": [19, 205, 244], "5548": 19, "5623": 19, "4154": 19, "5700": 19, "4187": 19, "5754": 19, "4142": 19, "5823": 19, "4150": 19, "5900": 19, "4181": 19, "6030": 19, "4167": 19, "6092": 19, "6161": 19, "4155": 19, "4178": 19, "6308": 19, "6369": 19, "4175": 19, "6443": 19, "4195": 19, "6499": 19, "6559": 19, "4139": 19, "6632": 19, "4159": 19, "6702": 19, "6773": 19, "4180": 19, "6842": 19, "6918": 19, "4210": 19, "6991": 19, "7063": 19, "7132": 19, "4242": 19, "7205": 19, "7279": 19, "4272": 19, "7349": 19, "7423": 19, "4293": 19, "7500": 19, "4317": 19, "7546": 19, "4245": 19, "7595": 19, "4186": 19, "7659": 19, "4174": 19, "7735": 19, "4202": 19, "7809": [19, 160], "4221": 19, "7885": 19, "7960": 19, "8040": 19, "8119": 19, "4330": 19, "8199": 19, "8278": 19, "8357": [19, 880], "4064": 19, "sens": [19, 60, 70, 143, 161, 202, 207, 212, 241, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 473, 475, 476, 536, 770, 788, 835, 839, 861, 862], "actual": [19, 23, 27, 41, 43, 60, 63, 81, 115, 128, 135, 145, 152, 159, 161, 163, 169, 171, 173, 176, 183, 184, 185, 186, 190, 191, 195, 200, 201, 202, 203, 217, 226, 228, 231, 234, 235, 236, 241, 257, 274, 444, 538, 558, 835, 839, 856, 862, 880], "valid_samples_": [19, 416], "grei": [19, 113, 143, 241, 266, 267, 700, 784, 880], "attempt": [19, 75, 195, 199, 228, 264, 265, 266, 267, 272, 278, 280, 375, 478, 479, 485, 495, 558, 631, 645, 811, 833, 835, 861, 880], "reflect": [19, 32, 60, 70, 120, 136, 142, 150, 152, 161, 162, 178, 182, 199, 204, 205, 207, 215, 264, 265, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 448, 449, 450, 453, 454, 473, 475, 476, 478, 479, 536, 618, 680, 787, 788, 801, 835, 839, 855, 862, 880], "most": [19, 28, 45, 47, 70, 73, 82, 83, 104, 108, 109, 114, 120, 127, 135, 136, 141, 145, 150, 151, 152, 153, 156, 157, 166, 168, 170, 172, 173, 182, 189, 199, 202, 204, 206, 207, 209, 210, 211, 212, 215, 226, 230, 239, 256, 264, 265, 266, 267, 269, 270, 275, 278, 312, 330, 355, 356, 357, 377, 378, 379, 382, 383, 385, 389, 390, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 439, 445, 450, 453, 473, 511, 517, 545, 558, 568, 586, 588, 605, 652, 653, 654, 663, 664, 665, 666, 687, 688, 689, 690, 691, 738, 743, 748, 766, 787, 835, 838, 839, 843, 844, 845, 857, 859, 861, 862, 863, 866, 870, 880], "toward": [19, 43, 46, 54, 55, 70, 103, 161, 181, 201, 230, 241, 244, 452, 454, 540, 561, 862, 880], "directli": [19, 34, 43, 79, 94, 95, 144, 145, 150, 171, 172, 173, 189, 191, 196, 200, 203, 204, 205, 206, 207, 217, 234, 240, 241, 256, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 275, 276, 279, 280, 312, 313, 318, 322, 359, 371, 410, 417, 446, 475, 478, 479, 480, 481, 486, 498, 557, 558, 572, 574, 618, 645, 700, 702, 704, 750, 765, 767, 778, 780, 787, 791, 800, 803, 806, 808, 810, 812, 857, 862, 870, 880], "obtain": [19, 38, 42, 43, 60, 90, 94, 95, 135, 138, 147, 152, 156, 158, 159, 171, 173, 176, 178, 179, 185, 186, 202, 204, 210, 215, 216, 223, 226, 228, 231, 240, 262, 264, 265, 266, 267, 268, 271, 275, 279, 280, 298, 309, 342, 344, 354, 356, 360, 373, 416, 418, 460, 461, 472, 475, 476, 478, 479, 486, 493, 497, 511, 525, 533, 544, 558, 562, 569, 586, 605, 613, 617, 623, 649, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 670, 674, 687, 688, 689, 690, 691, 701, 728, 731, 748, 767, 783, 806, 807, 812, 835, 855, 856, 860, 861, 862, 880], "via": [19, 135, 136, 137, 141, 143, 145, 146, 150, 151, 158, 169, 170, 171, 172, 173, 176, 181, 199, 200, 201, 205, 206, 215, 218, 226, 227, 230, 234, 236, 239, 240, 244, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 274, 276, 277, 279, 280, 283, 297, 298, 309, 318, 322, 328, 329, 375, 421, 444, 446, 448, 449, 462, 469, 478, 479, 491, 558, 681, 687, 688, 690, 691, 702, 703, 704, 750, 764, 768, 769, 778, 782, 783, 787, 795, 801, 826, 835, 837, 839, 841, 842, 847, 859, 880], "procedur": [19, 113, 145, 162, 163, 189, 204, 205, 210, 226, 228, 229, 230, 236, 241, 244, 257, 259, 264, 265, 266, 267, 347, 354, 359, 418, 478, 479, 558, 559, 572, 574, 586, 596, 618, 687, 835, 856, 859, 862, 865, 880], "straightforward": [19, 103, 190, 202, 223, 862, 880], "sign": [19, 28, 38, 39, 47, 152, 205, 226, 229, 234, 266, 267, 271, 272, 275, 278, 279, 280, 335, 444, 452, 473, 475, 476, 512, 525, 526, 527, 528, 529, 586, 687, 688, 690, 691, 839, 862, 880], "strength": [19, 22, 35, 94, 152, 176, 205, 272, 278, 280, 572, 862], "direct": [19, 60, 80, 123, 135, 151, 157, 161, 162, 169, 179, 181, 186, 200, 206, 207, 209, 241, 244, 256, 262, 264, 265, 271, 272, 274, 275, 278, 279, 280, 290, 297, 298, 432, 444, 452, 478, 479, 489, 525, 568, 583, 652, 702, 704, 748, 778, 790, 801, 811, 835, 839, 845, 859, 861, 862, 880], "125": [19, 24, 35, 127, 138, 144, 157, 161, 170, 171, 182, 202, 226, 231, 338], "nbetween": 19, "giovanni": [19, 195, 244, 416, 856], "di": [19, 40, 144, 195, 244, 416, 856], "liberto": [19, 195, 244, 416, 856], "adam": [19, 136, 137, 195, 244, 416, 856, 867, 880], "bednar": [19, 195, 244, 416, 856], "edmund": [19, 195, 244, 416, 856], "fnhum": [19, 152, 195, 244, 416, 563, 856], "00604": [19, 195, 244, 416, 856], "667": [19, 20, 231], "receptive_field_mtrf": [19, 20], "706": [20, 145, 231], "auto_examples_decod": 20, "ssd_spatial_filt": [20, 21], "225": [20, 21, 112, 127, 145, 170, 209, 231, 244, 856], "08": [20, 34, 40, 42, 45, 50, 58, 59, 73, 84, 91, 94, 102, 103, 106, 107, 109, 112, 130, 152, 161, 167, 177, 178, 179, 180, 181, 184, 185, 195, 196, 202, 207, 209, 215, 222, 223, 226, 228, 229, 230, 231, 243, 244], "retain": [21, 112, 150, 179, 200, 201, 215, 226, 259, 264, 265, 274, 277, 434, 558, 687, 688, 690, 691, 791, 837, 868, 880], "oscillatori": [21, 113, 223, 240, 244, 297, 298, 716, 726, 727, 730], "propos": [21, 241, 572, 577, 839], "surround": [21, 82, 101, 135, 241, 418, 563, 583, 597, 695, 839], "victoria": [21, 880], "peterson": [21, 880], "victoriapeterson09": 21, "freqs_sig": 21, "freqs_nois": 21, "sort_by_spectral_ratio": [21, 418], "filt_params_sign": [21, 418], "l_trans_bandwidth": [21, 113, 114, 202, 211, 264, 265, 266, 267, 412, 421, 446, 448, 478, 479, 592, 880], "filt_params_nois": [21, 418], "72000": [21, 82, 192], "196608": 21, "262144": 21, "327680": 21, "393216": 21, "458752": 21, "67108864": 21, "67174400": 21, "134742016": 21, "136314880": 21, "268435456": 21, "086": [21, 244, 657, 662], "preserv": [21, 34, 156, 157, 161, 167, 168, 195, 200, 205, 215, 226, 230, 259, 264, 265, 266, 267, 409, 440, 441, 442, 443, 478, 479, 574, 584, 700, 702, 703, 704, 862, 880], "ratio": [21, 58, 88, 127, 145, 167, 196, 202, 205, 207, 223, 228, 229, 230, 231, 244, 271, 272, 275, 278, 279, 280, 287, 418, 540, 541, 542, 558, 559, 641, 658, 659, 700, 703, 751, 808, 855, 862, 880], "accord": [21, 157, 170, 171, 195, 215, 257, 264, 265, 266, 267, 416, 418, 439, 478, 479, 486, 489, 493, 495, 553, 589, 606, 645, 650, 856, 862, 865, 880], "either": [21, 32, 43, 143, 150, 151, 152, 167, 168, 169, 171, 173, 191, 199, 203, 208, 210, 216, 217, 222, 226, 241, 256, 259, 261, 264, 265, 266, 267, 268, 271, 272, 273, 275, 277, 278, 279, 280, 288, 302, 321, 338, 354, 410, 417, 418, 427, 437, 445, 468, 471, 478, 479, 508, 509, 511, 517, 521, 523, 524, 557, 558, 560, 569, 572, 577, 588, 618, 628, 645, 647, 651, 652, 653, 665, 685, 686, 700, 701, 702, 704, 712, 722, 727, 728, 730, 731, 735, 748, 764, 765, 769, 772, 779, 780, 787, 791, 792, 800, 801, 802, 803, 806, 808, 810, 811, 812, 816, 839, 845, 855, 856, 859, 865, 880], "multipli": [21, 189, 202, 226, 269, 271, 272, 275, 278, 279, 280, 299, 418, 444, 525, 531, 700, 862, 865], "eq": [21, 418, 716, 726, 730, 862], "c_n": [21, 862], "reli": [21, 79, 170, 201, 241, 312, 839, 855, 859, 862, 865, 868, 880], "suggest": [21, 26, 142, 145, 163, 201, 202, 203, 204, 205, 207, 264, 265, 289, 291, 748, 838, 843, 844, 859, 861, 880], "pariet": [21, 49, 635, 748], "ssd_sourc": [21, 418], "psd": [21, 27, 68, 74, 92, 105, 106, 111, 133, 138, 141, 167, 173, 196, 199, 203, 212, 218, 221, 239, 240, 261, 264, 265, 266, 267, 269, 270, 274, 275, 359, 415, 451, 478, 479, 516, 521, 524, 531, 532, 536, 539, 555, 607, 622, 648, 702, 704, 707, 710, 718, 719, 742, 748, 764, 780, 802, 816, 856, 880], "psd_array_welch": [21, 221, 239, 264, 265, 266, 267, 418, 478, 479, 702, 704, 870, 880], "n_fft": [21, 108, 109, 114, 133, 212, 221, 239, 241, 264, 265, 266, 267, 418, 478, 479, 531, 701, 702, 704, 705, 707, 708, 710, 719, 729, 732, 802, 880], "4096": [21, 183, 268], "spec_ratio": [21, 418], "alreadi": [21, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 71, 74, 78, 79, 86, 87, 94, 95, 115, 116, 119, 120, 127, 135, 136, 143, 145, 146, 150, 151, 152, 159, 160, 161, 163, 167, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 199, 201, 202, 205, 206, 207, 210, 215, 221, 241, 256, 264, 265, 266, 267, 271, 272, 274, 275, 276, 278, 279, 280, 297, 298, 307, 309, 328, 354, 358, 359, 367, 369, 370, 371, 372, 380, 402, 403, 410, 417, 444, 445, 453, 454, 473, 475, 476, 478, 479, 519, 536, 569, 570, 574, 618, 638, 639, 701, 720, 769, 772, 788, 830, 839, 840, 841, 856, 859, 862, 863, 868, 880], "sorter": 21, "get_spectral_ratio": [21, 418], "spectral": [21, 27, 32, 33, 34, 68, 71, 105, 106, 112, 113, 114, 117, 133, 138, 143, 167, 173, 196, 201, 209, 221, 223, 240, 244, 261, 264, 265, 266, 267, 269, 270, 275, 289, 290, 291, 297, 359, 415, 418, 451, 454, 478, 479, 516, 521, 524, 531, 532, 536, 539, 555, 558, 607, 615, 622, 648, 688, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 717, 718, 719, 727, 728, 730, 731, 742, 748, 764, 774, 780, 802, 816, 856, 868, 880], "orang": [21, 152, 157, 191, 211, 231, 236, 805], "frac": [21, 150, 202, 203, 210, 226, 275, 533, 660, 713, 716, 726, 727, 728, 730, 731, 862], "p_f": 21, "p_": [21, 862], "sf": [21, 226], "spectrum": [21, 74, 83, 103, 104, 108, 112, 133, 138, 141, 144, 166, 167, 173, 199, 203, 205, 207, 212, 218, 221, 223, 240, 241, 242, 243, 244, 264, 265, 266, 267, 274, 451, 478, 479, 558, 702, 718, 719, 721, 743, 791, 793, 802, 835, 865, 868, 870, 880], "lowest": [21, 241, 259, 264, 265, 266, 267, 270, 341, 574, 677, 700, 701, 703, 772, 782], "below50": 21, "bandfilt": 21, "loglog": 21, "fill_between": [21, 113, 152, 236, 240, 241], "10000": [21, 84, 111, 135, 439, 473, 586, 665, 689], "green": [21, 48, 49, 50, 81, 116, 152, 157, 182, 191, 207, 241, 266, 267, 748, 769, 782, 799, 805, 880], "enjoi": [21, 241], "situat": [21, 204, 208, 221, 223, 274, 319, 437, 558, 839, 843, 861, 880], "chunk": [21, 80, 84, 138, 141, 147, 185, 210, 357, 359, 439, 478, 479, 558, 577, 650, 855, 880], "overlap": [21, 70, 84, 99, 109, 141, 147, 152, 167, 169, 192, 201, 210, 216, 217, 239, 244, 258, 264, 265, 266, 267, 326, 359, 412, 421, 434, 446, 448, 449, 468, 478, 479, 518, 519, 531, 544, 559, 574, 575, 588, 667, 686, 719, 748, 778, 802, 835, 880], "ssd_epoch": 21, "pattern_epoch": 21, "1251": 21, "guido": [21, 244, 418], "nolt": [21, 244, 418], "gabriel": [21, 40, 204, 244, 418, 475, 557, 603], "curio": [21, 244, 418], "reliabl": [21, 103, 170, 203, 244, 418, 558], "basi": [21, 147, 163, 196, 244, 418, 431, 569, 577, 588, 859, 862, 880], "spatio": [21, 46, 59, 166, 185, 195, 196, 226, 227, 237, 238, 244, 264, 266, 267, 269, 275, 276, 277, 360, 416, 418, 433, 474, 475, 478, 524, 525, 539, 555, 588, 615, 628, 630, 655, 656, 657, 658, 659, 660, 661, 662, 672, 674, 675, 676, 680, 681, 683, 690, 691, 692, 748, 862, 880], "1528": [21, 244, 418], "1535": [21, 244, 418], "produc": [22, 38, 82, 83, 117, 119, 128, 145, 162, 173, 180, 184, 191, 202, 204, 210, 226, 241, 244, 256, 259, 262, 264, 270, 274, 277, 303, 304, 327, 330, 351, 355, 356, 357, 359, 366, 387, 468, 470, 478, 479, 511, 517, 518, 521, 531, 544, 558, 561, 567, 570, 571, 577, 584, 586, 605, 611, 615, 635, 649, 651, 652, 653, 654, 663, 664, 665, 666, 668, 687, 688, 689, 690, 691, 695, 737, 748, 764, 765, 801, 829, 855, 861, 862, 865, 880], "abl": [22, 79, 90, 135, 136, 138, 145, 160, 162, 166, 173, 204, 205, 210, 223, 234, 274, 449, 478, 479, 558, 791, 837, 839, 856, 859, 862, 868, 880], "region": [22, 38, 41, 47, 49, 94, 95, 128, 136, 138, 151, 156, 182, 191, 202, 203, 226, 227, 240, 241, 262, 264, 265, 266, 267, 277, 324, 412, 421, 446, 448, 449, 462, 463, 464, 468, 478, 479, 511, 605, 649, 660, 748, 778, 801, 804, 835, 855, 868, 880], "source_spac": [22, 277, 870, 880], "compute_distance_to_sensor": [22, 870, 880], "source_estim": [22, 27, 36, 56, 270, 275, 622, 628, 747], "surf_ori": [22, 47, 48, 49, 54, 55, 68, 159, 179, 222, 268, 364, 536, 880], "leadfield": [22, 41, 159, 164, 166, 173, 297, 298, 299, 880], "7498": [22, 31, 35, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 68, 90, 92, 93, 94, 95, 131, 173, 176, 178, 179, 180, 182, 196, 222, 223], "combin": [22, 24, 29, 30, 31, 34, 35, 37, 40, 41, 42, 44, 47, 48, 49, 51, 54, 55, 58, 59, 68, 87, 90, 92, 93, 94, 95, 101, 112, 126, 128, 131, 132, 138, 141, 142, 143, 146, 151, 152, 156, 167, 169, 171, 176, 178, 179, 180, 181, 182, 183, 189, 191, 192, 195, 196, 199, 207, 208, 210, 211, 215, 217, 223, 226, 228, 231, 234, 236, 244, 256, 259, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 290, 297, 298, 305, 306, 314, 354, 355, 356, 357, 362, 371, 387, 410, 415, 417, 429, 432, 469, 478, 479, 494, 519, 520, 525, 528, 531, 532, 534, 535, 558, 570, 571, 612, 622, 628, 635, 671, 700, 702, 703, 704, 707, 710, 718, 748, 764, 772, 779, 780, 787, 790, 808, 839, 862, 865, 868, 880], "local": [22, 26, 27, 33, 34, 35, 36, 40, 41, 42, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 68, 70, 84, 90, 92, 94, 109, 113, 116, 120, 135, 151, 152, 153, 156, 159, 167, 172, 176, 180, 181, 185, 188, 192, 196, 207, 211, 223, 244, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 275, 279, 297, 298, 300, 312, 316, 330, 342, 344, 353, 354, 358, 359, 364, 369, 370, 371, 373, 377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 417, 431, 451, 453, 454, 467, 473, 475, 476, 478, 479, 485, 520, 521, 524, 525, 526, 536, 540, 557, 558, 566, 572, 578, 583, 609, 618, 620, 633, 642, 645, 648, 657, 660, 662, 664, 700, 702, 704, 740, 748, 757, 764, 765, 773, 776, 780, 785, 787, 788, 791, 800, 803, 807, 808, 810, 816, 835, 837, 840, 845, 846, 848, 859, 862, 868, 880], "grad_map": 22, "sensitivity_map": [22, 26, 131, 159, 870], "mag_map": [22, 26], "eeg_map": 22, "204": [22, 34, 73, 76, 93, 112, 113, 131, 147, 159, 167, 168, 169, 170, 173, 184, 185, 196, 199, 200, 201, 206, 207, 210, 215, 216, 217, 218, 223, 231, 240, 880], "gain": [22, 24, 31, 41, 65, 90, 93, 94, 95, 109, 159, 181, 202, 223, 297, 298, 445, 454, 789, 796, 862, 880], "picks_meg": 22, "picks_eeg": 22, "sharex": [22, 45, 73, 90, 113, 195, 207, 241], "dipol": [22, 26, 27, 28, 31, 34, 35, 36, 39, 40, 41, 42, 46, 51, 56, 59, 60, 68, 83, 84, 92, 93, 94, 109, 119, 153, 156, 159, 166, 167, 170, 178, 180, 181, 183, 184, 185, 186, 187, 188, 192, 204, 221, 223, 244, 261, 263, 264, 265, 266, 267, 268, 269, 272, 275, 278, 279, 280, 297, 298, 299, 300, 302, 311, 342, 353, 364, 373, 389, 431, 451, 453, 455, 473, 474, 475, 476, 478, 479, 520, 524, 525, 527, 536, 545, 555, 607, 609, 610, 618, 620, 633, 635, 648, 652, 653, 657, 660, 662, 664, 666, 700, 702, 703, 704, 748, 757, 764, 765, 775, 776, 807, 811, 816, 835, 846, 848, 851, 855, 862, 865, 870, 880], "fontsiz": [22, 37, 112, 120, 127, 145, 177, 210, 807], "fig_2": [22, 173], "hist": [22, 70, 131, 145, 211], "ravel": [22, 111, 113, 117, 131, 195, 202, 227], "brain_sen": 22, "add_text": [22, 43, 47, 48, 49, 50, 54, 55, 176, 178, 180, 748], "font_siz": [22, 43, 47, 48, 49, 50, 54, 55, 176, 178, 180, 748], "02108201": 22, "32186553": 22, "minimum": [22, 31, 57, 70, 78, 83, 137, 141, 150, 152, 163, 167, 169, 178, 180, 181, 201, 202, 207, 222, 234, 244, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 293, 294, 295, 296, 297, 298, 341, 343, 344, 359, 443, 445, 446, 448, 449, 451, 453, 454, 478, 479, 521, 525, 526, 527, 528, 529, 531, 532, 536, 538, 540, 541, 542, 560, 561, 566, 574, 575, 577, 657, 660, 662, 665, 693, 700, 705, 706, 707, 708, 709, 710, 711, 729, 732, 748, 772, 786, 802, 805, 835, 846, 848, 855, 865, 880], "euclidean": [22, 270, 275, 277, 540, 660, 663, 666, 668, 671], "maxdep": 22, "vertno": [22, 43, 48, 49, 50, 159, 176, 179, 222, 234, 235, 236, 275, 277, 278, 865], "depths_map": 22, "brain_dep": 22, "like": [22, 26, 27, 31, 32, 34, 35, 36, 40, 41, 42, 47, 56, 59, 60, 70, 79, 82, 83, 101, 109, 112, 127, 135, 136, 137, 141, 142, 143, 144, 145, 150, 151, 152, 156, 157, 161, 162, 163, 167, 168, 169, 170, 172, 173, 176, 178, 182, 183, 189, 190, 191, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 217, 218, 221, 226, 230, 241, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 288, 301, 302, 303, 304, 307, 308, 309, 312, 313, 321, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 347, 351, 352, 353, 354, 360, 365, 366, 367, 368, 372, 384, 385, 387, 389, 410, 417, 431, 433, 434, 439, 445, 451, 453, 460, 462, 463, 466, 468, 469, 470, 471, 472, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 515, 517, 520, 521, 524, 525, 527, 536, 539, 543, 544, 545, 547, 548, 557, 558, 563, 572, 575, 579, 583, 584, 585, 586, 588, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 639, 646, 648, 649, 651, 652, 653, 654, 663, 664, 665, 666, 669, 677, 681, 683, 686, 687, 688, 689, 690, 691, 695, 696, 698, 699, 700, 701, 702, 703, 704, 716, 720, 721, 722, 726, 733, 735, 736, 740, 742, 745, 748, 756, 764, 765, 766, 772, 776, 778, 780, 782, 784, 786, 787, 788, 791, 795, 798, 800, 801, 802, 803, 804, 806, 808, 810, 811, 812, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 855, 857, 859, 861, 862, 865, 880], "corr": [22, 256], "gradiomt": 22, "815476": 22, "sensitivii": 22, "highest": [22, 135, 177, 205, 259, 262, 264, 265, 266, 267, 270, 454, 478, 479, 574, 677, 700, 701, 703, 776, 788, 862], "close": [22, 60, 70, 97, 107, 111, 117, 120, 127, 135, 141, 143, 145, 150, 152, 159, 161, 173, 192, 200, 201, 204, 205, 207, 208, 211, 218, 223, 226, 231, 262, 264, 265, 266, 267, 270, 342, 358, 380, 433, 453, 469, 470, 478, 479, 558, 575, 579, 671, 695, 702, 704, 748, 754, 755, 776, 778, 795, 801, 804, 839, 843, 851, 859, 862, 865, 880], "decreas": [22, 55, 112, 202, 223, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 410, 431, 478, 479, 558, 696, 700, 703, 727, 728, 730, 731, 748, 862, 880], "rapidli": 22, "inreas": 22, "confirm": [22, 47, 70, 172, 191, 201, 205, 839, 862], "826": [22, 25, 231], "134": [22, 25, 70, 170, 172, 230, 231, 244, 277, 523, 566], "forward_sensitivity_map": [22, 25], "coregistr": [23, 27, 81, 157, 161, 162, 164, 165, 166, 182, 262, 269, 274, 277, 304, 308, 366, 372, 388, 429, 470, 483, 517, 521, 584, 639, 668, 695, 737, 748, 764, 816, 853, 855, 868, 870, 880], "displai": [23, 24, 25, 27, 44, 47, 76, 112, 116, 125, 141, 144, 152, 157, 159, 161, 163, 167, 205, 208, 215, 218, 227, 231, 256, 257, 261, 264, 265, 266, 267, 268, 270, 271, 272, 275, 277, 278, 279, 280, 312, 364, 478, 479, 517, 555, 557, 558, 620, 641, 668, 700, 702, 704, 748, 749, 763, 764, 772, 777, 778, 779, 781, 782, 783, 784, 786, 787, 788, 789, 792, 793, 798, 801, 802, 803, 804, 806, 807, 809, 811, 812, 835, 837, 838, 842, 845, 851, 859, 862, 865, 868, 880], "cerebellum": [23, 25, 27, 41, 277, 648, 649, 764, 816], "volum": [23, 25, 27, 31, 36, 44, 56, 59, 71, 135, 136, 137, 156, 157, 159, 161, 167, 173, 177, 181, 210, 244, 256, 261, 262, 266, 268, 269, 271, 272, 275, 276, 277, 278, 279, 280, 303, 309, 312, 360, 444, 455, 463, 464, 473, 475, 476, 513, 521, 524, 525, 535, 536, 537, 539, 583, 585, 609, 618, 628, 631, 640, 648, 649, 672, 675, 692, 695, 736, 737, 738, 748, 764, 806, 811, 812, 816, 833, 835, 854, 855, 862, 868, 880], "morph": [23, 25, 27, 36, 40, 56, 134, 135, 137, 156, 161, 178, 182, 234, 235, 236, 256, 266, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 360, 466, 483, 521, 524, 525, 539, 544, 545, 554, 555, 585, 618, 620, 625, 628, 629, 630, 641, 649, 736, 737, 738, 748, 806, 812, 835, 855, 856, 865, 880], "its": [24, 70, 75, 94, 126, 136, 138, 141, 142, 144, 146, 151, 157, 159, 161, 167, 169, 170, 171, 172, 173, 176, 181, 184, 190, 191, 196, 199, 200, 202, 203, 205, 206, 207, 208, 210, 215, 216, 218, 226, 231, 239, 241, 244, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 312, 410, 413, 417, 424, 425, 444, 451, 475, 476, 477, 478, 479, 486, 493, 557, 558, 572, 656, 666, 686, 687, 688, 690, 691, 700, 702, 703, 704, 716, 719, 726, 738, 765, 772, 776, 779, 780, 787, 791, 799, 800, 801, 803, 806, 808, 810, 811, 835, 837, 838, 839, 843, 845, 855, 857, 859, 861, 862, 880], "freesurf": [24, 32, 33, 34, 38, 41, 43, 44, 47, 79, 116, 136, 137, 157, 159, 162, 164, 165, 166, 173, 176, 183, 192, 244, 260, 262, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 303, 307, 308, 309, 312, 360, 365, 366, 367, 372, 384, 386, 387, 389, 392, 409, 429, 444, 462, 463, 464, 466, 468, 469, 470, 471, 472, 483, 511, 513, 515, 517, 544, 583, 584, 605, 621, 622, 623, 624, 630, 631, 632, 633, 648, 649, 663, 666, 677, 695, 696, 698, 740, 747, 748, 759, 764, 766, 776, 806, 811, 812, 816, 829, 830, 833, 835, 843, 845, 846, 851, 856, 859, 880], "alan": [24, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703, 880], "leggitt": [24, 880], "ucsf": 24, "setup_source_spac": [24, 41, 109, 156, 159, 161, 179, 192, 277, 630, 649, 670, 674, 855, 862, 870, 880], "setup_volume_source_spac": [24, 41, 50, 157, 159, 161, 208, 271, 272, 275, 277, 278, 279, 280, 444, 513, 630, 648, 862, 870, 880], "aseg_fnam": 24, "aseg": [24, 41, 136, 177, 182, 262, 271, 272, 275, 278, 279, 280, 444, 462, 463, 513, 649, 748, 835, 880], "mgz": [24, 30, 41, 44, 50, 79, 135, 157, 159, 161, 162, 177, 181, 182, 183, 256, 271, 272, 275, 277, 278, 279, 280, 303, 307, 308, 309, 389, 444, 463, 513, 649, 766, 812, 835, 859, 862, 880], "surf": [24, 26, 41, 81, 109, 118, 136, 156, 157, 158, 159, 160, 161, 162, 173, 177, 182, 222, 226, 256, 262, 270, 275, 277, 279, 280, 307, 460, 461, 511, 516, 545, 608, 631, 663, 666, 697, 734, 748, 766, 776, 823, 855, 856, 862], "add_dist": [24, 41, 109, 159, 256, 648, 670, 674, 862, 880], "lh_surf": 24, "cortex": [24, 26, 31, 37, 41, 43, 52, 53, 54, 55, 58, 60, 94, 109, 116, 126, 135, 136, 146, 152, 159, 167, 179, 182, 191, 195, 205, 211, 223, 244, 271, 272, 275, 277, 278, 279, 280, 387, 416, 592, 605, 666, 748, 806, 811, 835, 855, 856, 862, 865, 880], "volume_label": [24, 41, 271, 272, 275, 277, 278, 279, 280, 444, 513, 649, 880], "lh_cereb": 24, "sphere_unit": [24, 159, 649, 880], "octahedron": [24, 41, 109, 157, 159, 161, 256, 271, 275, 279, 648, 806], "subdivis": [24, 41, 109, 159], "octahedr": [24, 41, 109, 159, 409], "vertex": [24, 26, 41, 48, 49, 50, 83, 90, 109, 157, 158, 159, 161, 162, 176, 178, 181, 182, 222, 223, 226, 236, 270, 271, 272, 275, 276, 277, 278, 279, 280, 282, 297, 298, 444, 466, 468, 511, 534, 535, 544, 558, 622, 623, 634, 635, 640, 666, 667, 668, 673, 676, 677, 692, 695, 696, 697, 747, 748, 862, 865, 880], "lh": [24, 26, 28, 29, 37, 38, 39, 41, 43, 47, 48, 49, 54, 55, 60, 68, 90, 92, 94, 95, 104, 108, 109, 116, 126, 127, 134, 136, 156, 157, 158, 159, 160, 161, 162, 173, 176, 177, 179, 180, 183, 184, 192, 222, 223, 235, 236, 256, 260, 270, 271, 272, 275, 278, 279, 280, 466, 511, 605, 623, 628, 638, 748, 806, 811, 830, 862], "triangl": [24, 26, 41, 52, 109, 157, 158, 159, 161, 162, 176, 179, 222, 270, 277, 409, 634, 669, 673, 676, 697, 862, 865], "neighbor": [24, 26, 41, 109, 143, 157, 158, 159, 162, 200, 222, 226, 228, 241, 322, 329, 341, 452, 501, 584, 670, 671, 672, 674, 675, 680, 687, 688, 690, 691, 697, 861, 862, 880], "geometri": [24, 41, 60, 70, 109, 159, 162, 184, 185, 210, 244, 256, 389, 410, 454, 631, 748, 835, 855, 880], "triangul": [24, 41, 52, 109, 159, 176, 227, 228, 256, 277, 318, 631, 634, 828, 833, 862, 865, 880], "4098": [24, 43, 160, 161, 183, 855], "155407": [24, 26, 41, 43, 52, 159, 161], "156866": [24, 26, 41, 43, 52, 159, 161], "132651": 24, "57769": 24, "50733": 24, "401": [24, 81, 209, 231], "voxel": [24, 41, 44, 50, 135, 157, 159, 161, 208, 226, 244, 274, 277, 279, 280, 360, 583, 693, 694, 738, 748, 766, 812, 862, 880], "neighborhood": [24, 41, 50, 157, 159, 208, 277], "005000": [24, 159], "001000": [24, 41, 50, 159], "556177": 24, "16777216": 24, "nonzero": [24, 211, 862], "coord_fram": [24, 79, 109, 118, 123, 124, 125, 136, 137, 157, 158, 159, 160, 170, 171, 179, 183, 184, 185, 191, 210, 262, 268, 269, 277, 312, 325, 330, 431, 482, 510, 568, 569, 577, 588, 748, 764, 776, 865], "export": [24, 30, 41, 112, 115, 135, 141, 148, 149, 150, 156, 166, 169, 173, 190, 191, 219, 258, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 337, 339, 478, 479, 493, 502, 615, 700, 702, 703, 704, 837, 839, 845, 850, 866, 870, 880], "nifti": [24, 30, 41, 156, 277, 279, 280, 880], "nii_fnam": [24, 41], "mne_sample_lh": 24, "nii": [24, 30, 41, 156, 256], "export_volum": [24, 41, 277, 880], "mri_resolut": [24, 30, 41, 44, 276, 277, 279, 280, 444, 880], "And": [24, 42, 54, 70, 109, 135, 161, 180, 182, 191, 196, 202, 207, 211, 277, 523, 533, 690, 691, 839, 855, 862], "freeview": [24, 79, 135, 183, 859, 862, 880], "util": [24, 93, 147, 181, 190, 226, 264, 265, 440, 443, 478, 479, 743, 837, 839, 845, 849, 862, 870, 874, 880], "run_subprocess": 24, "mri_fnam": 24, "lut": [24, 463, 621, 748, 835], "opac": [24, 31, 35, 40, 46, 59, 92, 135, 157, 256, 274, 469, 702, 704, 748, 807, 813, 880], "jet": 24, "colorscal": 24, "slice": [24, 35, 40, 59, 135, 141, 144, 157, 159, 161, 173, 182, 195, 217, 230, 256, 258, 259, 262, 263, 264, 265, 266, 267, 269, 274, 279, 280, 310, 313, 327, 329, 359, 369, 412, 413, 416, 420, 423, 426, 431, 448, 449, 478, 479, 557, 558, 560, 573, 574, 575, 577, 580, 584, 594, 596, 603, 668, 686, 687, 688, 690, 691, 695, 700, 702, 703, 704, 706, 708, 709, 710, 711, 713, 725, 727, 728, 730, 731, 766, 772, 776, 778, 779, 782, 784, 785, 791, 792, 793, 795, 797, 799, 802, 812, 862, 865, 868, 880], "157": [24, 123, 138, 152, 165, 170, 171, 189, 196, 209, 211, 226, 230, 231, 244, 338, 660, 880], "762": [24, 25, 231], "195": [24, 45, 85, 167, 170, 177, 182, 231, 244], "left_cerebellum_volume_sourc": [24, 25], "577": [25, 195, 209, 231, 244, 416], "auto_examples_forward": 25, "source_space_morph": [25, 26], "587": [25, 209], "194": [25, 170, 209, 226, 230, 231, 244, 862, 880], "oppos": [26, 60, 223, 347, 419, 835, 839, 865, 880], "evenli": [26, 208, 210, 266, 267, 359, 588, 785, 862], "caution": [26, 27, 143, 158, 170, 264, 265, 266, 267, 412, 478, 479, 480, 703, 757], "fname_tran": [26, 41, 50, 52, 124, 177, 182, 855], "sample_audvis_raw": [26, 29, 41, 45, 50, 52, 68, 71, 83, 92, 93, 94, 103, 104, 107, 108, 110, 111, 116, 118, 123, 124, 127, 141, 143, 147, 150, 151, 157, 159, 161, 163, 167, 168, 169, 171, 173, 177, 179, 182, 183, 199, 200, 203, 204, 206, 207, 208, 210, 215, 216, 217, 218, 222, 223, 228, 229, 230, 239, 256, 839], "fname_bem": [26, 41, 50, 160, 177, 182, 183], "fname_src_f": 26, "fsaverag": [26, 40, 43, 44, 125, 126, 135, 136, 137, 157, 158, 161, 172, 182, 191, 211, 234, 235, 236, 244, 262, 270, 271, 275, 276, 279, 280, 304, 312, 328, 360, 365, 366, 367, 372, 384, 386, 387, 466, 470, 517, 521, 544, 584, 637, 638, 668, 692, 695, 696, 737, 748, 764, 806, 812, 855, 880], "ico": [26, 40, 43, 137, 159, 160, 162, 192, 234, 235, 236, 256, 271, 275, 279, 282, 409, 515, 648, 672, 675, 806, 855, 865, 880], "read_info": [26, 64, 90, 92, 94, 95, 158, 159, 161, 170, 870], "pick_info": [26, 119, 136, 168, 170, 223, 870, 880], "src_f": [26, 44, 181], "read_source_spac": [26, 40, 43, 44, 136, 137, 157, 160, 161, 181, 234, 235, 236, 277, 832, 870], "src_morph": 26, "morph_source_spac": [26, 275, 278, 870, 880], "subject_to": [26, 40, 43, 44, 234, 236, 256, 270, 276, 279, 280, 360, 544, 545, 625, 637, 638, 639, 640, 812, 855], "return": [26, 31, 34, 68, 69, 75, 84, 92, 93, 94, 99, 103, 108, 109, 110, 113, 114, 115, 117, 121, 138, 141, 142, 145, 147, 150, 151, 152, 161, 162, 167, 168, 169, 170, 172, 179, 189, 205, 206, 207, 208, 210, 215, 217, 221, 223, 226, 227, 230, 236, 239, 240, 241, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 377, 378, 379, 380, 382, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 641, 642, 645, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746, 747, 748, 749, 750, 751, 752, 753, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 817, 818, 821, 832, 833, 834, 857, 861, 862, 865, 880], "mag_map_f": 26, "to_original_src": [26, 275, 278, 880], "track": [26, 113, 143, 150, 167, 170, 192, 200, 203, 216, 217, 221, 558, 857, 868, 880], "sulcal": [26, 161, 748], "gyral": [26, 161, 748], "outlier": [26, 70, 158, 429, 558, 794], "mai": [26, 70, 74, 76, 83, 103, 135, 136, 141, 142, 144, 145, 147, 150, 151, 152, 157, 159, 162, 167, 169, 171, 173, 189, 190, 191, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 215, 216, 217, 218, 221, 223, 228, 231, 234, 244, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 278, 279, 280, 299, 318, 329, 330, 335, 353, 365, 409, 410, 412, 417, 419, 423, 429, 434, 440, 441, 442, 443, 444, 449, 460, 462, 469, 478, 479, 486, 493, 494, 498, 520, 525, 545, 557, 558, 560, 572, 574, 575, 577, 579, 588, 589, 606, 608, 610, 612, 618, 637, 639, 682, 686, 687, 688, 690, 691, 693, 695, 700, 702, 703, 704, 725, 727, 728, 729, 730, 731, 732, 748, 764, 765, 771, 778, 780, 782, 783, 785, 787, 791, 795, 800, 801, 803, 808, 810, 828, 837, 839, 840, 842, 843, 845, 846, 847, 854, 855, 857, 859, 861, 862, 865, 868, 880], "occur": [26, 44, 47, 70, 75, 90, 94, 95, 135, 141, 144, 145, 152, 162, 169, 201, 202, 207, 215, 228, 229, 257, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 282, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 433, 434, 436, 452, 453, 454, 473, 475, 476, 478, 479, 506, 536, 574, 575, 650, 700, 703, 778, 788, 801, 839, 840, 845, 855, 861, 862, 880], "kwarg": [26, 58, 109, 112, 116, 123, 142, 180, 181, 195, 202, 222, 240, 264, 265, 266, 267, 269, 274, 277, 413, 420, 478, 479, 484, 547, 700, 748, 749, 770, 785, 804, 807, 839], "smooth": [26, 38, 43, 59, 71, 83, 114, 134, 135, 136, 143, 152, 157, 167, 182, 195, 207, 226, 227, 234, 235, 236, 244, 264, 265, 266, 267, 270, 271, 272, 275, 276, 278, 279, 280, 360, 478, 479, 558, 567, 687, 688, 690, 691, 696, 716, 718, 726, 727, 728, 730, 731, 748, 757, 779, 806, 809, 811, 813, 814, 817, 858, 880], "smoothing_step": [26, 41, 42, 43, 55, 59, 60, 104, 109, 116, 131, 137, 176, 178, 180, 182, 222, 234, 271, 272, 275, 278, 279, 280, 748, 806, 811], "almost": [26, 114, 141, 169, 839, 862], "equidist": [26, 274], "unevenli": [26, 520], "achiev": [26, 43, 44, 112, 127, 143, 145, 147, 161, 162, 181, 202, 211, 217, 223, 266, 267, 354, 363, 511, 533, 558, 586, 605, 652, 653, 654, 663, 664, 666, 687, 688, 689, 690, 691, 788, 859, 862, 866, 868, 880], "closest": [26, 145, 158, 159, 215, 241, 259, 264, 265, 266, 267, 270, 277, 478, 479, 696, 702, 704, 748, 766, 780, 862, 880], "approxim": [26, 67, 135, 171, 205, 215, 226, 244, 256, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 312, 410, 417, 431, 446, 447, 449, 461, 478, 479, 557, 558, 569, 572, 577, 588, 648, 700, 702, 704, 712, 765, 772, 773, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 835, 862, 880], "brain_subject": 26, "time_label": [26, 33, 34, 59, 60, 109, 124, 131, 223, 234, 235, 236, 266, 267, 271, 272, 275, 278, 279, 280, 748, 783, 806, 811], "brain_f": 26, "remap": [26, 27, 77, 85, 266, 267, 618, 880], "destin": [26, 43, 44, 80, 156, 161, 258, 261, 262, 264, 265, 266, 267, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 308, 309, 312, 313, 360, 372, 409, 431, 440, 441, 442, 443, 478, 479, 510, 543, 545, 557, 558, 577, 588, 637, 638, 640, 700, 701, 702, 703, 704, 733, 734, 790, 822, 823, 824, 825, 826, 827, 828, 831, 832, 833, 834, 865, 880], "sourcespac": [26, 41, 43, 45, 50, 109, 159, 160, 161, 177, 208, 268, 270, 271, 272, 275, 278, 279, 280, 282, 360, 444, 464, 474, 512, 513, 521, 534, 535, 540, 545, 630, 648, 649, 650, 657, 660, 662, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 692, 695, 696, 748, 764, 766, 806, 811, 812, 832, 835, 862, 870, 880], "n_vertic": [26, 41, 43, 53, 109, 159, 160, 161, 260, 270, 271, 272, 275, 278, 279, 280, 454, 540, 631, 634, 668, 687, 688, 690, 691, 698, 747, 748, 828, 833], "n_use": [26, 41, 43, 45, 50, 109, 159, 160, 161, 177, 208], "10242": [26, 43, 160, 234, 235, 236, 270, 282, 466, 692, 855], "coord": [26, 41, 43, 45, 50, 109, 125, 159, 160, 161, 162, 177, 208, 342, 453, 748, 749, 818, 833], "conductor": [26, 41, 45, 50, 109, 157, 159, 160, 177, 183, 304, 453, 522, 649, 764, 835, 862, 880], "20484": [26, 137, 160, 162, 234, 235, 256, 515], "999310": [26, 41, 50, 159, 177, 182, 183], "009985": [26, 41, 50, 159, 177, 182, 183], "035787": [26, 41, 50, 159, 177, 182, 183], "012759": [26, 41, 50, 159, 177, 182, 183], "812405": [26, 41, 50, 159, 177, 182], "582954": [26, 41, 50, 159, 177, 182], "034894": [26, 41, 50, 159, 177, 182, 183], "583008": [26, 41, 50, 159, 177, 182], "811716": [26, 41, 50, 159, 177, 182, 183], "991420": [26, 41, 45, 50, 159, 177, 182], "039936": [26, 41, 45, 50, 159, 177, 182], "124467": [26, 41, 45, 50, 159, 177, 182], "060661": [26, 41, 45, 50, 159, 177, 182], "984012": [26, 41, 45, 50, 159, 177, 182], "167456": [26, 41, 45, 50, 159, 177, 182], "115790": [26, 41, 45, 50, 159, 177, 182], "173570": [26, 41, 45, 50, 159, 177, 182], "977991": [26, 41, 45, 50, 159, 177, 182], "homogen": [26, 41, 50, 109, 159, 177, 208, 862, 865, 880], "2154": 26, "8088": 26, "8079": 26, "10233": [26, 880], "4984": 26, "2113": [26, 170], "8129": 26, "8125": 26, "10237": 26, "4872": 26, "20470": 26, "00205101": 26, "08784125": 26, "17433707": 26, "588": [26, 35, 231], "work": [27, 31, 68, 70, 75, 78, 83, 87, 133, 135, 138, 139, 140, 141, 145, 148, 149, 150, 151, 152, 156, 157, 161, 162, 167, 168, 169, 170, 174, 175, 176, 178, 179, 182, 185, 189, 191, 193, 194, 196, 199, 201, 203, 204, 205, 206, 207, 210, 211, 215, 217, 218, 220, 221, 223, 228, 231, 234, 236, 239, 240, 241, 244, 251, 255, 258, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 309, 312, 313, 316, 318, 323, 326, 328, 332, 338, 347, 353, 355, 359, 360, 361, 363, 366, 371, 382, 385, 388, 410, 411, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 433, 437, 439, 444, 445, 450, 451, 462, 470, 473, 475, 476, 478, 479, 484, 488, 491, 513, 515, 516, 519, 521, 523, 524, 525, 526, 527, 528, 529, 531, 532, 536, 542, 549, 553, 554, 555, 557, 558, 559, 571, 583, 588, 602, 611, 615, 620, 626, 630, 631, 632, 633, 648, 649, 677, 695, 700, 702, 703, 704, 748, 749, 751, 764, 770, 772, 778, 780, 781, 786, 787, 791, 795, 800, 801, 803, 808, 814, 816, 818, 825, 835, 838, 839, 840, 844, 845, 846, 856, 857, 861, 862, 863, 865, 868, 880], "variou": [27, 62, 101, 120, 121, 136, 142, 151, 156, 166, 170, 171, 178, 179, 187, 188, 189, 190, 193, 199, 202, 203, 205, 207, 213, 215, 217, 223, 226, 227, 261, 266, 269, 275, 330, 524, 525, 536, 558, 588, 609, 618, 620, 748, 770, 855, 859, 861, 862, 863, 865, 869, 880], "often": [27, 67, 70, 74, 75, 83, 135, 141, 143, 151, 167, 169, 170, 176, 179, 181, 189, 191, 196, 200, 202, 203, 206, 208, 210, 216, 217, 228, 241, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 473, 475, 476, 536, 589, 748, 788, 806, 811, 835, 839, 843, 844, 855, 859, 861, 862, 863, 880], "lack": [27, 70, 191, 261, 273, 288, 302, 524, 589, 735, 863], "narr": [27, 166, 835, 863], "explan": [27, 73, 143, 156, 166, 230, 702, 863, 867, 880], "discov": [27, 857, 863, 880], "ve": [27, 115, 141, 150, 152, 157, 161, 172, 199, 201, 205, 207, 215, 216, 218, 241, 818, 839, 857, 859, 863], "flag": [27, 135, 166, 168, 256, 264, 265, 269, 271, 272, 275, 278, 279, 280, 309, 478, 479, 515, 767, 801, 806, 811, 812, 839, 855, 859, 880], "tutorial_script": [27, 166], "them": [27, 47, 50, 67, 70, 74, 79, 115, 127, 134, 135, 136, 138, 141, 142, 143, 145, 146, 150, 151, 152, 157, 161, 162, 166, 167, 169, 171, 172, 173, 192, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 223, 226, 227, 234, 236, 241, 256, 258, 264, 265, 266, 267, 270, 291, 292, 295, 359, 362, 367, 413, 414, 428, 489, 490, 519, 520, 527, 529, 532, 553, 557, 558, 576, 589, 596, 610, 615, 654, 664, 677, 704, 743, 794, 835, 837, 839, 847, 855, 856, 857, 861, 862, 865, 868, 880], "shortcut": [27, 218, 738, 748, 880], "intention": [27, 209], "record": [27, 62, 65, 70, 74, 83, 84, 109, 135, 138, 141, 145, 147, 152, 157, 163, 167, 169, 170, 171, 173, 176, 185, 187, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 215, 216, 217, 221, 223, 226, 241, 244, 258, 259, 264, 265, 266, 267, 269, 274, 281, 320, 347, 354, 359, 363, 402, 433, 442, 478, 479, 487, 491, 498, 501, 506, 507, 519, 558, 560, 561, 562, 566, 568, 569, 577, 588, 589, 596, 602, 618, 645, 686, 700, 702, 703, 704, 781, 795, 801, 835, 846, 851, 855, 856, 857, 859, 862, 865, 868, 880], "past": [27, 152, 202, 422, 650, 843, 859, 861, 865], "recip": [27, 62, 839], "write": [27, 29, 41, 62, 66, 108, 110, 141, 161, 162, 171, 172, 173, 178, 190, 203, 215, 236, 239, 256, 258, 261, 262, 266, 267, 269, 270, 271, 272, 274, 277, 278, 280, 288, 307, 352, 451, 483, 510, 543, 557, 604, 609, 699, 733, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 839, 842, 843, 855, 857, 859, 862, 868, 880], "manipul": [27, 62, 141, 150, 166, 219, 363, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518, 856, 862, 869, 880], "ensembl": [27, 62, 66, 138, 269, 373, 479], "neo": [27, 62, 66, 189, 269, 373, 479, 880], "xdf": [27, 62, 66, 269, 373, 479], "anatomi": [27, 89, 91, 157, 176, 261, 264, 266, 267, 268, 269, 270, 275, 277, 308, 479, 483, 524, 525, 536, 609, 615, 620, 623, 650, 652, 653, 654, 665, 748, 835, 856, 880], "contralater": [27, 77, 85, 94, 152, 208, 269, 324, 484, 642], "css": [27, 77, 85, 173, 244, 261, 267, 268, 269, 270, 274, 275, 364, 478, 555, 556, 573, 609, 620, 623, 664, 666, 880], "bridg": [27, 77, 85, 244, 269, 312, 328, 373, 479, 484, 566, 587, 768, 810, 880], "much": [27, 44, 55, 74, 77, 83, 85, 135, 138, 141, 142, 143, 145, 150, 162, 166, 167, 171, 184, 192, 196, 202, 204, 205, 206, 207, 208, 209, 212, 215, 223, 241, 244, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 312, 328, 373, 434, 445, 449, 450, 478, 479, 484, 566, 587, 641, 768, 810, 839, 842, 843, 862, 868, 880], "gel": [27, 77, 85, 269, 312, 328, 373, 479, 484, 566, 587, 768, 810, 880], "densiti": [27, 32, 33, 34, 68, 75, 77, 78, 85, 105, 106, 119, 133, 135, 138, 143, 161, 162, 167, 173, 191, 196, 200, 201, 209, 223, 240, 244, 261, 264, 265, 266, 267, 269, 270, 275, 290, 297, 326, 359, 371, 415, 451, 478, 479, 516, 521, 524, 531, 532, 536, 539, 555, 558, 566, 567, 590, 591, 595, 607, 615, 622, 648, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 717, 718, 719, 742, 748, 764, 774, 780, 802, 816, 835, 856, 862, 865, 880], "csd": [27, 32, 33, 34, 77, 85, 105, 106, 170, 223, 264, 265, 266, 267, 269, 290, 297, 311, 326, 330, 371, 451, 478, 479, 555, 567, 615, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 717, 720, 774, 835, 880], "nir": [27, 77, 85, 172, 211, 258, 269, 479, 506, 836, 846, 862, 869, 870, 880], "intracrani": [27, 77, 85, 136, 139, 140, 166, 244, 269, 312, 316, 325, 366, 367, 462, 470, 478, 479, 484, 583, 584, 585, 736, 737, 738, 748, 813, 855, 856, 868, 869, 880], "contact": [27, 77, 85, 136, 139, 140, 166, 199, 269, 312, 316, 325, 332, 366, 367, 470, 478, 484, 583, 584, 585, 736, 737, 738, 748, 813, 839, 856, 880], "maxwel": [27, 77, 84, 85, 166, 167, 185, 199, 213, 214, 264, 266, 267, 269, 297, 298, 342, 344, 347, 348, 351, 354, 358, 359, 369, 370, 371, 410, 417, 431, 451, 453, 454, 473, 475, 476, 478, 479, 536, 569, 577, 588, 589, 788, 790, 880], "movement": [27, 74, 75, 77, 83, 85, 112, 138, 166, 199, 205, 206, 207, 213, 214, 217, 218, 244, 256, 258, 264, 266, 267, 269, 341, 342, 343, 344, 345, 347, 349, 351, 352, 363, 431, 451, 469, 478, 491, 562, 565, 577, 588, 653, 665, 764, 771, 783, 790, 816, 835, 856, 880], "reestim": [27, 77, 85, 258, 269, 344, 345, 363, 491, 562, 565, 568, 764, 790, 816, 880], "dev_head_t": [27, 77, 80, 85, 157, 167, 170, 215, 258, 269, 315, 344, 345, 363, 373, 491, 562, 565, 569, 577, 588, 651, 652, 653, 665, 764, 790, 816, 865, 880], "muscl": [27, 77, 85, 145, 205, 244, 258, 312, 328, 491, 493, 558, 563, 880], "denois": [27, 77, 85, 196, 261, 264, 266, 267, 269, 354, 359, 418, 430, 451, 453, 478, 522, 555, 559, 569, 596, 615, 779, 880], "oversampl": [27, 77, 85, 244, 264, 266, 267, 354, 430, 451, 453, 478, 522, 596], "shift": [27, 75, 77, 85, 135, 141, 167, 195, 199, 202, 203, 208, 218, 244, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 416, 438, 478, 479, 486, 493, 549, 558, 560, 584, 595, 618, 700, 703, 712, 748, 789, 801, 812, 880], "2d": [27, 31, 35, 40, 59, 96, 97, 119, 122, 130, 152, 173, 191, 196, 200, 203, 205, 206, 207, 208, 226, 231, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 312, 313, 318, 321, 329, 338, 366, 418, 421, 425, 427, 448, 449, 478, 479, 490, 498, 508, 513, 558, 685, 687, 688, 748, 749, 760, 764, 765, 769, 786, 807, 809, 810, 816, 817, 818, 820, 835, 843, 856, 880], "arrowmap": [27, 122, 130, 266, 269, 491, 554, 555, 618, 765, 880], "layout": [27, 47, 100, 115, 122, 130, 132, 133, 143, 145, 151, 152, 160, 190, 212, 228, 264, 265, 266, 267, 269, 273, 319, 321, 323, 326, 327, 328, 338, 373, 478, 479, 485, 489, 491, 501, 502, 522, 700, 702, 704, 749, 753, 761, 764, 772, 786, 797, 800, 809, 815, 816, 835, 862, 870, 880], "parcel": [27, 38, 41, 68, 90, 94, 95, 122, 130, 136, 156, 177, 182, 222, 244, 270, 384, 386, 387, 462, 605, 623, 748, 759, 830, 835, 880], "roi": [27, 38, 122, 130, 152, 156, 200, 227, 244, 262, 264, 266, 267, 269, 324, 436, 439, 494, 525, 748, 784, 835, 862, 865, 880], "rt": [27, 122, 130, 169, 264, 269, 324, 436, 439, 494], "room": [27, 122, 127, 130, 143, 152, 163, 173, 185, 192, 203, 205, 206, 208, 210, 211, 212, 216, 244, 275, 354, 359, 478, 568, 569, 577, 588, 589, 771, 835, 855, 862, 880], "lock": [27, 105, 106, 141, 157, 163, 169, 204, 207, 230, 241, 244, 259, 264, 269, 270, 434, 451, 478, 524, 539, 542, 555, 558, 622, 795, 859], "vectorview": [27, 61, 105, 106, 119, 171, 184, 257, 261, 266, 267, 269, 275, 313, 319, 320, 334, 338, 359, 389, 430, 431, 478, 516, 521, 531, 536, 569, 577, 588, 607, 648, 742, 748, 764, 816, 835, 851, 856, 862], "induc": [27, 105, 106, 107, 163, 167, 228, 229, 230, 241, 244, 264, 265, 269, 275, 451, 478, 524, 539, 541, 542, 555, 700, 703, 716, 726, 727, 730, 859, 880], "erd": [27, 105, 106, 240, 244, 261, 264, 265, 266, 267, 273, 363, 410, 417, 439, 478, 479, 493, 557, 558, 687, 700, 702, 703, 704, 731, 765, 780, 787, 791, 800, 803, 808, 810, 856, 880], "multitap": [27, 74, 83, 103, 105, 106, 109, 138, 143, 144, 167, 173, 196, 205, 231, 239, 240, 244, 264, 265, 266, 267, 269, 287, 373, 423, 449, 478, 479, 531, 700, 702, 703, 704, 707, 710, 727, 728, 729, 730, 731, 732, 752, 868, 880], "morlet": [27, 32, 103, 105, 106, 113, 167, 202, 230, 231, 244, 264, 269, 287, 373, 423, 479, 700, 703, 706, 709, 714, 725, 727, 730, 731, 732, 752, 870, 878, 880], "stockwel": [27, 105, 106, 231, 244, 264, 269, 287, 373, 479, 700, 703, 727, 729, 730, 731, 732, 752, 880], "hilbert": [27, 82, 105, 106, 113, 168, 231, 264, 265, 266, 267, 269, 287, 373, 478, 479, 700, 703, 727, 730, 731, 732, 752, 880], "permut": [27, 98, 102, 112, 166, 226, 227, 228, 229, 232, 233, 236, 237, 238, 244, 264, 266, 267, 269, 275, 276, 277, 318, 360, 433, 478, 524, 525, 539, 549, 555, 615, 628, 630, 672, 680, 687, 688, 689, 690, 691, 692, 703, 730, 748, 769, 772, 868, 880], "1d": [27, 98, 102, 117, 210, 264, 269, 283, 287, 475, 476, 478, 513, 555, 569, 577, 588, 597, 615, 687, 688, 690, 691, 752, 789], "fdr": [27, 98, 101, 102, 264, 269, 478, 555, 615, 678, 684, 880], "rer": [27, 98, 102, 264, 266, 267, 269, 353, 451, 478, 555, 686], "p": [27, 47, 51, 58, 96, 97, 98, 100, 101, 102, 112, 135, 157, 161, 173, 189, 202, 223, 226, 227, 228, 230, 231, 234, 235, 236, 241, 244, 256, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 353, 449, 451, 473, 478, 479, 536, 555, 558, 569, 657, 660, 662, 678, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 700, 703, 766, 779, 839, 855, 859, 862, 880], "sloreta": [27, 28, 30, 31, 36, 38, 39, 41, 48, 50, 56, 59, 90, 104, 166, 167, 176, 179, 180, 182, 187, 188, 222, 234, 236, 244, 261, 264, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 354, 451, 478, 524, 525, 526, 527, 528, 529, 531, 532, 536, 537, 538, 539, 541, 542, 620, 622, 748, 773, 835, 880], "timecours": [27, 33, 36, 42, 56, 261, 262, 264, 266, 267, 268, 269, 275, 279, 288, 292, 297, 302, 451, 453, 478, 520, 524, 525, 527, 536, 607, 609, 610, 620, 635, 701, 703, 711, 730, 748], "dic": [27, 31, 36, 56, 103, 166, 181, 224, 225, 244, 261, 264, 268, 269, 275, 288, 289, 290, 291, 292, 294, 297, 298, 354, 358, 451, 478, 479, 484, 514, 524, 525, 526, 536, 549, 554, 555, 620, 635, 654, 665, 701, 703, 709, 711, 730, 748, 773, 835, 846, 856, 880], "beamform": [27, 36, 51, 56, 103, 166, 167, 187, 188, 223, 244, 261, 264, 266, 267, 268, 269, 275, 276, 277, 279, 280, 354, 358, 360, 364, 371, 451, 453, 478, 526, 534, 536, 555, 609, 620, 630, 701, 703, 709, 711, 730, 748, 773, 835, 848, 856, 870, 880], "er": [27, 32, 33, 36, 56, 112, 240, 244, 261, 264, 265, 268, 269, 275, 290, 294, 297, 298, 354, 358, 451, 478, 526, 536, 555, 620, 686, 709, 748, 773, 779, 856, 880], "lcmv": [27, 31, 36, 56, 166, 176, 187, 188, 261, 264, 266, 267, 268, 269, 275, 276, 277, 279, 280, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 354, 358, 360, 364, 371, 451, 454, 478, 526, 534, 536, 555, 609, 620, 630, 709, 748, 773, 835, 880], "spars": [27, 36, 44, 46, 56, 119, 176, 226, 231, 234, 236, 244, 256, 261, 262, 266, 268, 269, 275, 276, 277, 308, 318, 329, 360, 371, 373, 454, 473, 474, 475, 476, 524, 525, 536, 609, 618, 620, 630, 666, 680, 686, 687, 688, 690, 691, 748, 775, 776, 807, 839, 846, 848, 862, 865, 880], "gamma": [27, 36, 56, 112, 113, 117, 244, 261, 264, 265, 266, 267, 268, 269, 275, 371, 473, 474, 478, 479, 533, 609, 618, 620, 702, 704, 716, 726, 727, 730, 775, 776, 780, 807, 862, 865, 880], "bayesian": [27, 36, 56, 244, 261, 266, 268, 269, 275, 354, 371, 473, 474, 609, 618, 620, 775, 776, 807, 846, 862], "mix": [27, 36, 56, 59, 103, 196, 205, 241, 244, 261, 262, 266, 268, 269, 271, 272, 275, 276, 277, 278, 279, 280, 297, 298, 360, 444, 455, 473, 474, 475, 476, 513, 521, 524, 525, 536, 558, 586, 609, 618, 620, 623, 628, 630, 648, 649, 655, 656, 657, 658, 659, 660, 661, 662, 692, 695, 748, 775, 776, 791, 806, 807, 811, 868, 880], "norm": [27, 31, 36, 47, 48, 49, 50, 56, 57, 59, 78, 84, 116, 150, 157, 163, 167, 178, 180, 186, 207, 222, 223, 244, 261, 262, 264, 265, 266, 267, 268, 269, 275, 276, 277, 360, 454, 473, 474, 475, 476, 478, 479, 524, 525, 526, 527, 528, 529, 531, 532, 534, 535, 536, 538, 540, 541, 542, 609, 618, 620, 630, 657, 660, 662, 712, 775, 776, 805, 807, 835, 846, 848, 855, 865, 880], "mxne": [27, 31, 36, 56, 176, 261, 262, 264, 266, 267, 268, 269, 275, 276, 277, 354, 360, 451, 474, 475, 476, 524, 525, 536, 609, 618, 620, 630, 748, 775, 776, 807, 835, 880], "irmxn": [27, 36, 56, 261, 262, 266, 268, 269, 275, 276, 277, 360, 474, 475, 524, 525, 536, 609, 618, 620, 630, 775, 776, 807], "volumetr": [27, 36, 50, 56, 136, 159, 161, 176, 178, 182, 266, 271, 272, 275, 276, 277, 278, 279, 280, 360, 513, 524, 525, 539, 583, 618, 629, 630, 748, 806, 811, 812, 814, 835, 868, 880], "xfit": [27, 36, 56, 261, 262, 264, 266, 267, 268, 269, 279, 302, 451, 453, 478, 520, 524, 525, 527, 536, 607, 609, 610, 635, 880], "reweight": [27, 36, 40, 56, 244, 261, 264, 266, 267, 268, 275, 354, 451, 474, 475, 476, 620, 807], "tf": [27, 31, 36, 56, 59, 202, 261, 264, 266, 267, 268, 275, 354, 451, 474, 476, 620, 807, 880], "multiscal": [27, 36, 56, 261, 264, 266, 267, 268, 275, 354, 451, 474, 476, 620, 807], "circular": [27, 36, 56, 152, 222, 275, 277, 364, 468, 535, 537, 539, 620, 623, 748, 753, 846, 862, 880], "graph": [27, 36, 56, 117, 244, 275, 277, 364, 535, 537, 539, 620, 623, 670, 671, 672, 673, 674, 675, 676, 748, 753, 880], "spread": [27, 36, 42, 54, 55, 56, 71, 81, 83, 84, 113, 166, 169, 202, 207, 208, 210, 224, 225, 244, 261, 264, 266, 267, 268, 269, 270, 275, 277, 279, 354, 364, 451, 478, 521, 524, 525, 526, 534, 535, 536, 537, 539, 540, 566, 588, 609, 618, 620, 623, 649, 662, 664, 667, 748, 839, 862, 880], "psf": [27, 36, 54, 55, 56, 261, 266, 268, 269, 275, 277, 279, 364, 521, 524, 534, 535, 536, 537, 540, 609, 618, 620, 649, 748, 880], "talk": [27, 36, 56, 161, 202, 210, 228, 261, 264, 266, 268, 269, 275, 288, 298, 299, 354, 364, 371, 431, 451, 524, 534, 535, 536, 537, 540, 555, 568, 577, 588, 609, 618, 620, 748, 835, 861, 880], "rap": [27, 36, 56, 244, 261, 266, 268, 300, 609, 618, 620, 775, 776, 880], "music": [27, 36, 56, 205, 244, 261, 266, 268, 300, 609, 618, 620, 775, 776, 880], "resolut": [27, 30, 36, 44, 47, 48, 50, 56, 79, 114, 120, 135, 147, 157, 158, 159, 177, 212, 228, 229, 244, 257, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 299, 360, 364, 410, 417, 444, 466, 469, 478, 479, 524, 525, 534, 535, 536, 537, 540, 556, 557, 558, 609, 618, 620, 700, 702, 704, 716, 726, 727, 728, 729, 730, 731, 732, 748, 765, 780, 787, 791, 800, 803, 806, 808, 810, 811, 835, 846, 855, 861, 862, 880], "auto_examples_python": 27, "auto_examples_jupyt": 27, "fname_raw": [28, 29, 61, 103, 104, 127, 158, 183, 209], "fname_ev": [28, 94, 103, 104], "label_nam": [28, 29, 47, 92, 94, 104, 107, 182, 222, 463], "fname_label": [28, 29, 104, 107, 108], "assumpt": [28, 109, 121, 141, 142, 145, 153, 163, 202, 206, 210, 226, 266, 267, 596, 682, 788, 859, 862, 880], "read_label": [28, 29, 37, 39, 92, 104, 107, 108, 275, 278, 650, 870], "add": [28, 37, 43, 44, 70, 74, 90, 94, 95, 101, 114, 120, 126, 127, 135, 137, 141, 142, 144, 145, 152, 162, 169, 172, 173, 176, 177, 182, 190, 192, 195, 199, 200, 201, 203, 205, 206, 208, 215, 217, 222, 223, 226, 231, 241, 256, 258, 260, 261, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 312, 372, 410, 412, 417, 421, 434, 446, 448, 449, 469, 478, 479, 557, 558, 568, 570, 571, 572, 608, 630, 639, 642, 647, 648, 650, 651, 652, 653, 654, 664, 697, 700, 702, 703, 704, 743, 748, 751, 765, 768, 769, 778, 780, 785, 787, 791, 800, 803, 808, 810, 817, 835, 837, 839, 842, 845, 846, 865, 880], "053": [28, 49, 69, 73, 92, 93, 104, 107, 108, 110, 111, 117, 152, 163, 167, 168, 169, 170, 178, 199, 200, 201, 206, 207, 208, 210, 215, 216, 217, 218, 223, 228, 229], "sqrt": [28, 117, 184, 185, 222, 223, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 563, 586, 716, 726, 730, 802, 862], "mean_stc": 28, "flip": [28, 38, 39, 115, 162, 205, 226, 256, 271, 272, 275, 278, 279, 280, 303, 444, 512, 687, 818, 862, 880], "cancel": [28, 81, 181, 202, 210, 271, 272, 275, 278, 279, 280, 431, 444, 558, 588, 792, 855, 862, 865], "label_sign_flip": [28, 870, 880], "label_mean": 28, "label_mean_flip": 28, "stc_evok": 28, "sub": [28, 32, 33, 34, 41, 46, 65, 67, 70, 83, 113, 147, 156, 171, 212, 240, 241, 264, 265, 266, 267, 269, 437, 478, 479, 586, 649, 701, 748, 774, 851, 859, 862, 880], "stc_evoked_label": 28, "in_label": [28, 37, 38, 39, 275, 278, 279, 280, 880], "care": [28, 34, 142, 151, 152, 161, 202, 205, 206, 215, 217, 371, 476, 686, 862, 880], "polar": [28, 47, 143, 207, 770], "label_mean_evok": 28, "1711": [28, 34, 45, 107, 121, 132, 143, 146, 147, 153, 167, 170, 178, 181, 201, 223, 231, 234, 236], "benefit": [28, 45, 46, 55, 59, 71, 126, 173, 191, 244, 540, 567, 660, 855, 861], "1e3": [28, 29, 38, 39, 41, 69, 72, 97, 113, 138, 150, 152, 157, 158, 178, 186, 222, 228, 229, 230, 236], "h0": [28, 96, 100, 226, 227, 228, 229, 230, 234, 235, 236, 687, 688, 689, 690, 691], "h1": [28, 96, 112, 226, 227, 228, 229, 230, 231, 234, 235, 236], "linewidth": [28, 39, 97, 112, 113, 137, 151, 161, 206, 226, 261, 264, 265, 266, 267, 410, 417, 478, 479, 557, 700, 702, 704, 748, 765, 772, 780, 787, 803, 804, 807, 808, 810], "h2": 28, "unflip": 28, "pool": [28, 141, 150, 152, 167, 216, 297, 298, 473, 475, 476, 525, 526, 527, 528, 529, 531, 532, 542, 868], "stc_trial": 28, "_nolegend_": 28, "compute_mne_inverse_epochs_in_label": [28, 56], "apply_inverse_raw": [29, 525, 526, 527, 529, 870, 880], "smaller": [29, 41, 75, 104, 127, 143, 150, 159, 202, 207, 210, 226, 227, 241, 259, 264, 265, 271, 272, 275, 278, 279, 280, 476, 560, 574, 577, 586, 687, 688, 690, 691, 715, 723, 748, 806, 811, 855, 862, 880], "time_as_index": [29, 40, 84, 141, 150, 176, 215, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703, 880], "mne_": [29, 30, 865], "s_raw_inverse_": 29, "overwrit": [29, 41, 104, 108, 110, 141, 162, 173, 192, 217, 256, 258, 261, 262, 264, 265, 266, 267, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 307, 308, 309, 312, 313, 440, 441, 442, 443, 478, 479, 510, 543, 557, 558, 567, 638, 639, 642, 646, 700, 701, 702, 703, 704, 733, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 880], "25800": [29, 45, 68, 71, 80, 83, 92, 93, 103, 104, 107, 110, 111, 118, 123, 127, 147, 157, 163, 168, 169, 173, 183, 199, 203, 204, 206, 207, 208, 215, 218, 222, 223, 228, 229, 230], "192599": [29, 45, 68, 71, 83, 92, 93, 103, 104, 107, 110, 111, 118, 123, 127, 147, 157, 163, 168, 169, 173, 183, 199, 203, 204, 206, 207, 215, 218, 222, 223, 228, 229, 230], "670": [29, 45, 68, 71, 81, 83, 92, 93, 103, 104, 107, 110, 111, 118, 123, 127, 147, 157, 163, 168, 169, 173, 183, 199, 203, 204, 206, 207, 209, 215, 218, 222, 223, 228, 229, 230, 231], "215": [29, 56, 112, 170, 173, 196, 226, 244, 573], "compute_mne_inverse_raw_in_label": [29, 56], "nilearn": [30, 41, 44, 135, 172, 177, 182, 183, 279, 280, 812], "plot_stat_map": 30, "index_img": 30, "read_evok": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 86, 87, 116, 119, 120, 124, 127, 150, 151, 173, 177, 179, 180, 182, 264, 265, 266, 267, 274, 478, 479, 826, 859, 870, 880], "vol": [30, 44, 50, 136, 161, 177, 181, 182, 262, 264, 265, 266, 267, 277, 300, 431, 628, 655, 656, 657, 658, 659, 660, 661, 662, 788], "4d": [30, 123, 166, 187, 188, 189, 261, 262, 264, 265, 266, 267, 269, 302, 354, 451, 453, 478, 479, 489, 522, 555, 556, 687, 688, 700, 702, 703, 704, 764, 776, 862, 865, 880], "img": [30, 116, 161, 183, 226, 279, 280], "as_volum": [30, 279, 280, 880], "nib": [30, 44, 79, 135, 157], "s_invers": 30, "gz": [30, 141, 156, 173, 206, 256, 263, 264, 265, 266, 267, 277, 312, 385, 478, 479, 498, 539, 543, 558, 600, 606, 609, 611, 618, 620, 626, 630, 665, 821, 824, 826, 827, 831, 832, 845, 880], "t1_fname": [30, 161, 177], "499": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 86, 87, 116, 119, 120, 127, 143, 144, 150, 169, 173, 177, 179, 180, 182, 196, 229, 230, 231], "11271": [30, 44, 182, 880], "511": [30, 56], "compute_mne_inverse_volum": [30, 56], "plug": [31, 839, 862], "facil": [31, 257], "implement": [31, 70, 135, 167, 170, 180, 196, 203, 205, 210, 223, 241, 257, 261, 269, 273, 288, 289, 291, 302, 332, 354, 360, 410, 417, 418, 423, 427, 450, 473, 475, 476, 478, 479, 521, 524, 525, 526, 527, 528, 529, 531, 532, 542, 558, 559, 566, 572, 577, 603, 625, 684, 725, 727, 735, 801, 839, 846, 854, 863, 868, 878, 880], "wmne": [31, 475, 476], "eloreta": [31, 166, 167, 176, 179, 180, 187, 188, 234, 236, 261, 264, 266, 267, 269, 275, 297, 298, 354, 451, 473, 475, 476, 524, 525, 526, 527, 528, 529, 531, 532, 536, 538, 541, 542, 620, 748, 773, 835, 880], "educ": [31, 861], "shall": [31, 145, 201, 266, 267, 434, 558, 668, 783, 839, 861, 868], "develop": [31, 70, 135, 172, 205, 210, 255, 256, 332, 577, 699, 757, 842, 843, 845, 846, 856, 859, 861, 865, 880], "meant": [31, 90, 95, 109, 172, 226, 273, 289, 291, 341, 412, 422, 513, 647, 742, 743, 751, 880], "practic": [31, 71, 99, 114, 152, 161, 169, 201, 202, 208, 210, 241, 244, 270, 297, 558, 567, 622, 628, 686, 835, 839, 861, 862], "apply_solv": 31, "linalg": [31, 84, 135, 157, 161, 186, 206, 358, 686, 859, 880], "plot_sparse_source_estim": [31, 35, 40, 46, 59, 92, 813, 870, 880], "ave_fnam": [31, 40, 59, 68, 92], "cov_fnam": [31, 35, 40, 45, 51, 59, 68, 92, 173, 223, 274], "handl": [31, 40, 46, 59, 127, 141, 145, 147, 152, 156, 161, 166, 167, 169, 171, 173, 174, 207, 210, 213, 214, 259, 264, 265, 266, 267, 269, 342, 437, 451, 478, 479, 552, 555, 558, 588, 645, 749, 757, 765, 768, 770, 781, 792, 796, 820, 839, 865, 880], "auxiliari": [31, 143, 372], "def": [31, 34, 68, 76, 84, 92, 93, 94, 109, 113, 117, 133, 135, 138, 151, 152, 157, 161, 202, 203, 206, 221, 223, 226, 230, 236, 241, 839], "ones": [31, 83, 88, 111, 142, 171, 179, 184, 186, 189, 206, 207, 226, 241, 257, 270, 386, 445, 471, 472, 478, 479, 517, 560, 577, 622, 628, 635, 685, 839, 859, 862, 865, 880], "account": [31, 80, 109, 123, 135, 142, 143, 157, 159, 163, 181, 186, 200, 201, 207, 208, 210, 215, 216, 226, 231, 241, 258, 261, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 473, 475, 476, 536, 558, 561, 586, 788, 839, 859, 862, 865, 880], "constraint": [31, 60, 159, 167, 179, 195, 208, 244, 264, 265, 287, 299, 453, 536, 779, 865, 880], "weigth": 31, "formul": [31, 716, 726, 727, 730, 862], "problem": [31, 40, 59, 70, 88, 96, 97, 114, 138, 145, 162, 167, 176, 177, 189, 190, 196, 200, 204, 205, 207, 208, 215, 226, 227, 231, 234, 235, 236, 241, 244, 475, 494, 558, 577, 606, 612, 687, 688, 690, 691, 693, 694, 814, 838, 839, 844, 859, 860, 862, 868, 880], "bia": [31, 40, 70, 84, 142, 152, 185, 202, 234, 236, 240, 244, 261, 266, 267, 297, 298, 360, 423, 473, 475, 476, 536, 586, 719, 782, 787, 862, 880], "callabl": [31, 151, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 283, 312, 314, 340, 365, 410, 413, 417, 420, 427, 439, 478, 479, 528, 557, 558, 572, 636, 666, 667, 679, 686, 687, 688, 690, 691, 700, 702, 703, 704, 746, 748, 761, 765, 772, 779, 780, 782, 787, 791, 800, 803, 806, 808, 809, 810, 811, 880], "boolean": [31, 101, 142, 144, 170, 172, 206, 207, 215, 217, 261, 264, 265, 266, 267, 273, 275, 410, 417, 478, 479, 557, 558, 687, 688, 690, 691, 700, 702, 704, 779, 780, 784, 787, 791, 800, 803, 808, 839, 866, 880], "what": [31, 59, 71, 83, 90, 94, 95, 117, 127, 128, 135, 137, 141, 142, 143, 144, 145, 157, 161, 170, 172, 176, 181, 182, 183, 191, 200, 202, 211, 215, 216, 217, 223, 226, 228, 231, 239, 241, 259, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 354, 358, 365, 369, 370, 385, 402, 429, 434, 439, 443, 460, 477, 478, 479, 494, 544, 593, 606, 608, 612, 637, 639, 650, 700, 703, 728, 731, 771, 806, 811, 828, 835, 839, 842, 844, 845, 847, 865, 868, 870], "tangenti": [31, 297, 298, 455, 473, 475, 476, 536, 862, 865], "discret": [31, 45, 104, 159, 177, 196, 208, 239, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 417, 455, 473, 475, 476, 478, 479, 520, 536, 649, 700, 702, 703, 704, 712, 718, 861, 880], "coeffici": [31, 101, 109, 142, 147, 159, 195, 202, 204, 414, 416, 422, 428, 445, 446, 447, 475, 476, 557, 568, 569, 577, 588, 599, 603, 654, 663, 664, 685, 686, 702, 704, 713, 715, 718, 719, 723, 789, 880], "privat": [31, 839, 880], "inverse_spars": [31, 35, 40, 46, 59, 176, 848, 870, 880], "mxne_invers": 31, "_prepare_gain": 31, "is_fixed_ori": [31, 880], "_reapply_source_weight": 31, "_make_sparse_stc": 31, "all_ch_nam": 31, "gain_info": 31, "source_weight": 31, "weights_min": [31, 40, 59, 475, 476, 880], "dot": [31, 78, 87, 112, 119, 124, 127, 145, 151, 161, 176, 179, 183, 186, 191, 195, 200, 207, 211, 234, 236, 262, 266, 267, 271, 275, 279, 686, 776, 782, 839, 862, 880], "n_orient": [31, 271, 272, 275, 278, 279, 280, 444, 540], "active_set": 31, "l2": [31, 40, 54, 55, 244, 475, 476, 540, 660, 712, 848, 865], "penal": 31, "strongest": [31, 35, 40, 47, 59, 152], "n_dipol": [31, 51, 68, 92, 93, 159, 262, 271, 272, 275, 278, 279, 280, 300, 430, 534, 535, 537, 666], "depend": [31, 70, 82, 101, 126, 136, 137, 138, 142, 150, 152, 156, 158, 159, 163, 171, 172, 173, 191, 195, 201, 202, 204, 206, 207, 210, 217, 223, 226, 227, 228, 236, 241, 244, 258, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 299, 318, 329, 342, 343, 403, 416, 422, 436, 444, 454, 478, 479, 486, 493, 495, 558, 568, 577, 583, 596, 602, 681, 687, 688, 690, 691, 693, 695, 696, 699, 700, 702, 703, 704, 722, 748, 757, 769, 771, 772, 778, 779, 782, 795, 801, 837, 838, 839, 842, 845, 846, 847, 854, 855, 856, 859, 862], "n_active_dipol": 31, "bool": [31, 120, 172, 231, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 320, 321, 322, 323, 326, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 458, 460, 461, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 593, 595, 596, 597, 600, 601, 602, 603, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 684, 687, 688, 689, 690, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 716, 717, 718, 719, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 743, 747, 748, 753, 756, 757, 761, 762, 764, 765, 766, 767, 769, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 859], "entri": [31, 109, 135, 141, 143, 145, 151, 152, 167, 171, 172, 196, 200, 215, 258, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 286, 314, 341, 342, 343, 344, 345, 346, 410, 417, 420, 432, 442, 445, 476, 477, 478, 479, 525, 533, 557, 558, 572, 646, 649, 651, 652, 653, 665, 680, 700, 702, 703, 704, 748, 765, 766, 778, 779, 780, 784, 787, 791, 800, 801, 803, 806, 807, 808, 810, 811, 839, 842, 862, 865, 880], "x_full": 31, "solv": [31, 59, 162, 176, 410, 494, 558, 606, 612, 686, 862, 868], "ey": [31, 74, 125, 135, 136, 138, 159, 173, 184, 199, 201, 204, 206, 207, 380, 494, 575, 579, 612], "dtype": [31, 92, 94, 114, 120, 145, 157, 168, 221, 223, 231, 264, 265, 266, 267, 416, 477, 478, 479, 862], "bgcolor": [31, 35, 40, 46, 59, 92, 157, 161, 179, 478, 479, 757, 767, 801, 807], "891": [31, 56, 231], "171": [31, 71, 75, 99, 126, 133, 170, 202, 226, 231, 244, 387, 536, 567, 595, 657, 662, 880], "custom_inverse_solv": [31, 56], "synchron": [32, 33, 34, 112, 147, 211, 240, 244, 257, 297, 480, 486, 493, 839, 856, 880], "marijn": [32, 33, 45, 60, 73, 103, 162, 223, 244, 297, 298, 867, 880], "van": [32, 33, 43, 45, 60, 73, 103, 126, 162, 181, 202, 223, 244, 276, 297, 298, 360, 387, 566, 862, 867, 880], "vliet": [32, 33, 45, 60, 73, 103, 162, 223, 244, 297, 298, 867, 880], "vanvliet": [32, 33, 45, 60, 73, 103, 162, 223], "rockhil": [32, 70, 71, 79, 83, 114, 115, 116, 120, 135, 136, 137, 230, 231, 244, 867, 880], "aprockhil": [32, 70, 71, 79, 83, 114, 115, 116, 120, 135, 136, 137, 230, 231], "mailbox": [32, 33, 70, 71, 79, 83, 113, 114, 115, 116, 120, 127, 135, 136, 137, 228, 230, 231, 234, 240], "tfr_morlet": [32, 114, 167, 228, 229, 230, 231, 240, 423, 725, 727, 728, 729, 731, 732, 870, 880], "csd_tfr": [32, 870, 880], "make_d": [32, 33, 34, 223, 289, 290, 291, 292, 835, 870, 880], "apply_dics_tfr_epoch": [32, 289, 290, 291, 870, 880], "organ": [32, 71, 230, 231, 244, 567, 690, 691, 856, 861, 865], "_task": [32, 33, 34, 46, 113, 240], "_meg": [32, 33, 34, 46, 113, 173, 240, 256, 478, 479, 498, 499, 880], "5000e": 32, "mostli": [32, 109, 142, 176, 179, 189, 201, 204, 377, 378, 379, 382, 383, 385, 390, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 455, 473, 475, 476, 478, 479, 536, 748, 835], "wavelet": [32, 103, 113, 167, 202, 230, 244, 423, 542, 700, 703, 706, 709, 714, 716, 725, 726, 727, 728, 730, 731, 835, 880], "tfr": [32, 112, 202, 228, 229, 240, 423, 525, 526, 527, 528, 700, 703, 706, 709, 711, 722, 727, 728, 730, 731, 732, 733, 808, 835, 868, 870, 878, 880], "wish": [32, 145, 172, 191, 208, 221, 227, 228, 234, 363, 478, 479, 577, 749, 751, 839, 847, 861], "epochs_tfr": [32, 292, 529, 711], "return_itc": [32, 112, 114, 167, 228, 229, 230, 231, 240, 729, 730, 731, 732], "buffer": [32, 114, 190, 256, 269, 477, 478, 479, 494, 577, 588, 606, 612, 865, 880], "01_task": [32, 33, 34, 46, 67, 113, 171, 240, 241], "somato_meg": [32, 33, 34, 46, 113, 240], "237600": [32, 33, 34, 46, 113, 240], "506999": [32, 33, 34, 46, 113, 240], "791": [32, 33, 34, 46, 113, 182, 231, 240], "1688": [32, 33, 34, 46, 113, 240], "266": [32, 33, 34, 46, 112, 113, 170, 202, 226, 231, 240, 244], "9989760657919393": 32, "1052": [32, 33, 34], "0121": [32, 34, 146, 167, 170, 215, 223], "0211": [32, 34, 167, 170, 223], "1331": [32, 34, 146, 170, 201, 209, 223], "2211": [32, 34, 170, 223], "2241": [32, 34, 160, 170, 223], "2521": [32, 34, 141, 150, 170, 223], "1641": [32, 34, 170, 209, 223], "1831": [32, 34, 170, 223], "1921": [32, 34, 170, 223], "1941": [32, 34, 170, 223], "1611": [32, 34, 120, 170, 195, 223], "0441": [32, 34, 170, 223], "1631": [32, 34, 120, 170, 223], "0231": [32, 34, 120, 167, 170, 223], "1411": [32, 34, 146, 147, 170, 201, 207, 223], "0341": [32, 34, 170, 223], "1621": [32, 34, 120, 170, 223], "1521": [32, 34, 167, 170, 223], "1721": [32, 34, 170, 223], "1911": [32, 34, 170, 223], "1931": [32, 34, 170, 223], "2111": [32, 34, 170, 223], "2121": [32, 34, 170, 195, 223], "2021": [32, 34, 145, 170, 181, 191, 212, 223, 244, 388, 506, 856, 861], "1341": [32, 34, 170, 209, 223], "0221": [32, 34, 167, 170, 223], "0241": [32, 34, 170, 223], "1731": [32, 34, 35, 170, 223], "2041": [32, 34, 170, 223], "0731": [32, 34, 170, 223], "1141": [32, 34, 170, 195, 223], "0131": [32, 34, 146, 167, 170, 223], "period": [32, 81, 121, 141, 142, 145, 146, 150, 151, 173, 181, 199, 201, 202, 203, 205, 212, 241, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 354, 558, 561, 562, 563, 574, 618, 619, 712, 744, 782, 835, 839, 861, 880], "baseline_csd": 32, "scalar": [32, 142, 161, 181, 223, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 290, 297, 298, 299, 410, 417, 478, 479, 558, 686, 702, 704, 748, 780, 787, 791, 800, 806, 811, 880], "beamfom": 32, "noise_csd": [32, 33, 297], "reduce_rank": [32, 33, 34, 49, 297, 298, 880], "real_filt": [32, 33, 34, 223, 297, 880], "epochs_stc": 32, "return_gener": [32, 104, 291, 292, 295, 444, 527, 529, 532], "nsourc": [32, 52, 268, 865], "epoch_stc": 32, "conj": [32, 114, 297, 298], "apply_baselin": [32, 112, 127, 142, 150, 173, 179, 199, 204, 205, 207, 228, 229, 230, 231, 240, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 700, 703, 880], "8155": [32, 33, 34, 46], "sti": [32, 33, 42, 46, 69, 72, 73, 80, 90, 93, 94, 95, 107, 108, 110, 113, 141, 143, 150, 153, 167, 169, 170, 178, 189, 196, 200, 204, 205, 207, 216, 223, 228, 239, 240, 257, 451, 452, 478, 479, 495, 835, 880], "006": [32, 33, 121, 128, 141, 143, 146, 150, 159, 167, 170, 204, 207, 223, 244, 256, 270, 275, 515, 855], "005": [32, 33, 121, 128, 141, 143, 150, 158, 160, 163, 167, 170, 204, 223, 236, 240, 262, 344, 560, 776], "014": [32, 33, 42, 46, 61, 69, 72, 73, 80, 90, 93, 94, 95, 107, 108, 110, 113, 128, 141, 143, 150, 153, 167, 169, 170, 178, 189, 196, 200, 204, 205, 207, 216, 223, 228, 239, 240, 243, 257, 451, 452, 478, 479, 495, 880], "001": [32, 33, 51, 56, 71, 80, 83, 84, 121, 128, 141, 142, 143, 145, 146, 150, 151, 152, 161, 167, 169, 170, 173, 189, 195, 199, 201, 202, 203, 204, 207, 212, 215, 223, 226, 227, 228, 230, 231, 234, 235, 240, 244, 533, 567, 650, 687, 688, 690, 691, 856, 862], "003": [32, 33, 72, 121, 128, 141, 142, 143, 146, 150, 167, 168, 170, 173, 201, 202, 204, 205, 207, 215, 223, 244], "015": [32, 33, 128, 141, 143, 150, 170, 204, 205, 223, 234, 244, 262, 572, 660, 776], "074": 32, "gyri": [32, 94, 156, 159, 222, 244], "border": [32, 38, 59, 104, 116, 126, 156, 182, 261, 264, 265, 266, 267, 273, 410, 417, 436, 478, 479, 557, 558, 572, 700, 702, 704, 748, 780, 786, 787, 791, 800, 803, 808, 809, 810, 880], "central": [32, 128, 142], "sulcu": 32, "primari": [32, 94, 150, 861, 862], "s1": [32, 501], "m1": [32, 67, 171, 208, 226, 241, 264, 265, 266, 267, 478, 479, 645, 880], "4500": 32, "dorsal": [32, 748], "brain_kwarg": [32, 41, 116, 135, 181, 182, 271, 272, 275, 278, 279, 280, 806, 811], "add_data_kwarg": [32, 136, 182, 271, 272, 275, 278, 279, 280, 806, 811], "fmid": [32, 271, 272, 275, 278, 279, 280, 748, 767, 806, 811, 812, 880], "scale_factor": [32, 35, 48, 49, 50, 59, 178, 272, 278, 280, 312, 748, 798, 807, 811], "colorbar_kwarg": [32, 136, 182, 748], "label_font_s": [32, 136, 182], "movi": [32, 60, 136, 137, 178, 182, 748, 880], "websit": [32, 136, 137, 152, 178, 182, 190, 207, 402, 403, 572, 839, 842, 861], "save_movi": [32, 60, 136, 137, 178, 182, 748, 880], "time_view": [32, 60, 109, 127, 136, 137, 178, 182, 192, 271, 272, 275, 278, 279, 280, 748, 806, 811, 880], "onc": [32, 34, 43, 44, 60, 70, 94, 120, 127, 133, 136, 143, 144, 145, 146, 151, 152, 167, 169, 170, 171, 173, 178, 182, 199, 200, 202, 204, 205, 206, 207, 215, 217, 257, 258, 264, 265, 266, 267, 276, 282, 375, 445, 446, 448, 449, 478, 479, 576, 586, 728, 731, 769, 801, 839, 855, 861, 862, 880], "688": [32, 94, 196, 209, 231], "33913449": 32, "817": [32, 209, 231], "80202112": 32, "3163": 32, "68479992": 32, "038": [32, 56, 141, 150, 170, 223], "1455": [32, 56], "dics_epoch": [32, 56, 880], "roman": [33, 244, 854, 880], "goj": [33, 244, 854, 880], "appelhoff": [33, 113, 127, 228, 231, 234, 240, 867, 880], "csd_morlet": [33, 34, 103, 223, 701, 705, 706, 707, 708, 710, 870, 880], "apply_dics_csd": [33, 34, 223, 289, 291, 292, 297, 870, 880], "shorter": [33, 114, 202, 210, 241, 271, 272, 275, 278, 279, 280, 434, 439, 478, 479, 563, 589, 595, 716, 726, 727, 728, 730, 731, 801, 880], "498464098687909": [33, 34], "logspac": [33, 34, 195, 240, 354], "log10": [33, 34, 100, 133, 202, 212, 223, 226, 240, 241, 700], "loss": [33, 70, 201, 206, 264, 265, 266, 267, 413, 420, 440, 441, 442, 443, 478, 479, 682, 862], "csd_baselin": [33, 34], "csd_er": [33, 34], "block": [33, 34, 59, 63, 103, 133, 135, 143, 144, 173, 192, 201, 223, 262, 264, 265, 266, 267, 274, 451, 469, 470, 475, 478, 479, 547, 558, 586, 619, 687, 688, 690, 691, 702, 704, 748, 776, 778, 795, 801, 802, 804, 837, 844, 862, 865, 880], "87it": [33, 34, 103, 104, 108, 112, 196, 226, 227, 230, 231, 234, 235], "rather": [33, 34, 60, 141, 142, 147, 150, 157, 167, 168, 169, 171, 172, 179, 189, 196, 201, 207, 208, 212, 215, 226, 230, 234, 239, 264, 265, 268, 271, 272, 275, 278, 279, 280, 417, 478, 479, 523, 531, 532, 542, 549, 551, 587, 692, 695, 748, 766, 801, 835, 837, 839, 855, 856, 861, 862, 880], "entir": [33, 74, 104, 145, 152, 177, 185, 201, 202, 204, 210, 212, 216, 226, 241, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 287, 411, 426, 525, 526, 527, 528, 529, 558, 574, 618, 650, 700, 839, 880], "baseline_source_pow": 33, "beta_source_pow": 33, "messag": [33, 172, 239, 256, 271, 272, 275, 278, 279, 280, 365, 444, 494, 606, 612, 646, 647, 743, 744, 745, 748, 837, 839, 845, 850, 859, 865, 880], "40188307": 33, "5102619": 33, "34636424": 33, "joachim": [33, 181, 223, 244, 290, 297], "gro\u00df": [33, 181, 223, 244, 290, 297], "jan": [33, 181, 223, 244, 290, 297, 298, 855, 880], "kujala": [33, 181, 223, 244, 290, 297, 298], "matti": [33, 40, 54, 55, 58, 59, 126, 163, 179, 181, 210, 223, 244, 275, 290, 297, 475, 476, 525, 536, 540, 569, 573, 588, 657, 662, 846, 854, 859, 862, 880], "h\u00e4m\u00e4l\u00e4inen": [33, 40, 58, 59, 126, 179, 181, 223, 244, 275, 290, 297, 431, 475, 476, 525, 536, 540, 573, 657, 660, 662, 846, 880], "lar": [33, 181, 223, 244, 290, 297], "timmermann": [33, 181, 223, 244, 290, 297], "alfon": [33, 181, 223, 244, 290, 297], "schnitzler": [33, 181, 223, 244, 290, 297], "riitta": [33, 113, 179, 181, 223, 244, 290, 297, 298], "salmelin": [33, 113, 181, 223, 244, 290, 297, 298], "nation": [33, 181, 223, 244, 255, 290, 297, 867], "academi": [33, 181, 223, 244, 290, 297], "694": [33, 169, 175, 181, 223, 231, 244, 290, 297], "699": [33, 141, 152, 181, 196, 223, 231, 244, 290, 297], "2001": [33, 41, 70, 181, 195, 208, 223, 244, 264, 265, 266, 267, 290, 297, 416, 478, 479, 566, 645, 684], "1073": [33, 181, 223, 244, 290, 297], "pna": [33, 181, 223, 244, 290, 297], "504": [33, 56, 231], "dics_source_pow": [33, 56, 880], "luke": [34, 38, 42, 75, 81, 82, 109, 867, 880], "bloi": [34, 38, 42, 81, 82, 109, 867, 880], "make_lcmv": [34, 49, 181, 289, 291, 293, 294, 295, 296, 297, 299, 835, 870, 880], "apply_lcmv_cov": [34, 181, 293, 295, 296, 870, 880], "apply_inverse_cov": [34, 42, 525, 527, 528, 529, 870, 880], "90092": 34, "maxfilt": [34, 189, 210, 269, 350, 351, 352, 431, 478, 479, 531, 532, 541, 542, 568, 569, 577, 588, 651, 652, 653, 665, 865, 880], "conserv": [34, 70, 147, 226, 566, 649, 748, 880], "advanc": [34, 73, 127, 162, 163, 204, 217, 244, 261, 264, 265, 266, 267, 273, 354, 373, 410, 417, 469, 473, 478, 479, 557, 558, 572, 665, 700, 702, 704, 757, 765, 780, 787, 791, 800, 803, 808, 810, 838, 841, 843, 859, 860, 862, 864, 868, 880], "correctli": [34, 43, 44, 151, 191, 204, 236, 264, 265, 266, 267, 332, 443, 478, 479, 763, 782, 837, 838, 845, 855, 856, 862, 865, 880], "compute_rank": [34, 261, 418, 773, 870, 880], "tol": [34, 40, 46, 59, 74, 173, 358, 453, 473, 475, 476, 880], "tol_kind": [34, 358, 880], "active_win": 34, "baseline_win": 34, "baseline_cov": 34, "active_cov": 34, "common_cov": 34, "plot_cov": [34, 42, 178, 870, 880], "3737": 34, "_gen_dic": 34, "stc_base": [34, 42], "stc_act": 34, "_gen_lcmv": 34, "_gen_mn": 34, "stc_dic": 34, "stc_lcmv": 34, "stc_dspm": [34, 40, 59], "1311": [34, 79, 135, 136, 170, 209, 223], "0621": [34, 170, 223], "0331": [34, 167, 170, 223], "1021": [34, 170, 223, 244, 264, 265, 266, 267, 478, 479], "2031": [34, 170, 223], "0941": [34, 170, 223], "1421": [34, 146, 147, 170, 201, 207, 223], "1231": [34, 170, 195, 223], "0531": [34, 170, 223], "0631": [34, 170, 223], "0421": [34, 170, 223], "1321": [34, 170, 201, 223], "2611": [34, 170, 195, 201, 223], "0611": [34, 170, 223], "2621": [34, 170, 201, 223], "0711": [34, 170, 223], "1531": [34, 167, 170, 223, 256], "0431": [34, 170, 223], "0541": [34, 170, 223], "0411": [34, 170, 223], "2411": [34, 120, 170, 223], "0741": [34, 170, 223], "1041": [34, 170, 223], "1841": [34, 170, 223], "0511": [34, 147, 170, 223], "0111": [34, 146, 167, 170, 177, 201, 207, 215, 223, 635], "1511": [34, 167, 170, 223], "0141": [34, 170, 201, 223], "2431": [34, 170, 223], "2141": [34, 170, 201, 223, 226, 244, 693, 694], "0721": [34, 170, 223], "1221": [34, 170, 201, 223], "2511": [34, 170, 223], "0311": [34, 167, 170, 223], "2631": [34, 170, 201, 223], "2531": [34, 170, 201, 223], "2131": [34, 170, 201, 223, 226, 244, 693, 694], "1011": [34, 170, 223], "1121": [34, 170, 223], "2341": [34, 170, 223], "2441": [34, 170, 223], "1111": [34, 142, 152, 170, 202, 223, 231, 244, 354, 686, 687, 688, 690, 691, 839], "2331": [34, 170, 223, 552], "1741": [34, 170, 201, 223, 244], "2231": [34, 170, 223], "1541": [34, 170, 201, 209, 223], "0521": [34, 170, 201, 223], "0821": [34, 170, 223], "1211": [34, 170, 223], "0321": [34, 167, 170, 223], "2641": [34, 170, 223], "0641": [34, 170, 223], "1241": [34, 170, 196, 223], "0921": [34, 170, 223], "0811": [34, 170, 201, 223], "0911": [34, 170, 201, 223], "1431": [34, 170, 201, 223], "2311": [34, 170, 223], "0931": [34, 170, 223], "1821": [34, 170, 223], "2421": [34, 120, 170, 201, 223], "planar": [34, 40, 42, 50, 58, 59, 71, 84, 92, 94, 109, 111, 119, 131, 143, 147, 173, 178, 179, 180, 184, 189, 196, 199, 206, 207, 210, 223, 226, 765, 862, 865, 880], "7615": [34, 126, 244, 387], "004172": 34, "17919e": 34, "exp": [34, 40, 42, 50, 58, 59, 90, 92, 94, 109, 178, 179, 180, 183, 192, 196, 207, 223, 226, 297, 298, 454, 473, 475, 476, 536], "37508": 34, "81894e": 34, "brain_dic": 34, "5205929": 34, "6585548": 34, "71744034": 34, "brain_lcmv": 34, "37202028": 34, "44229054": 34, "93188606": 34, "brain_dspm": 34, "71161502": 34, "88782419": 34, "99242158": 34, "312": [34, 35, 170, 209, 226], "evoked_ers_source_pow": [34, 56], "detail": [35, 44, 45, 80, 119, 141, 143, 150, 151, 152, 156, 157, 159, 167, 168, 169, 170, 171, 172, 173, 176, 178, 181, 189, 190, 191, 195, 196, 200, 201, 203, 205, 206, 207, 210, 215, 216, 217, 218, 236, 239, 244, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 420, 421, 423, 426, 427, 429, 431, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 460, 461, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 554, 557, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 648, 649, 651, 652, 653, 654, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 675, 676, 687, 688, 689, 690, 691, 693, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 722, 723, 727, 728, 730, 731, 732, 733, 736, 737, 738, 743, 747, 748, 756, 763, 764, 765, 772, 773, 776, 779, 780, 781, 782, 783, 786, 787, 788, 790, 791, 792, 793, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 817, 819, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 839, 855, 856, 858, 859, 863, 868, 880], "luessi": [35, 47, 104, 244, 854, 880], "mluessi": [35, 47, 104], "nmr": [35, 43, 47, 104, 114, 156, 215, 271, 275, 279, 367, 806, 862], "mgh": [35, 43, 47, 58, 104, 114, 156, 171, 215, 271, 275, 279, 328, 367, 649, 806, 850, 856, 862, 868, 880], "harvard": [35, 43, 47, 58, 104, 114, 156, 255, 271, 275, 279, 367, 806, 862, 867], "daniel": [35, 40, 46, 58, 59, 92, 127, 209, 244, 275, 475, 476, 854, 867, 880], "strohmeier": [35, 40, 46, 59, 92, 244, 475, 476, 854, 880], "tu": [35, 40, 46, 59, 92], "ilmenau": [35, 40, 46, 59, 92, 255, 867], "de": [35, 40, 46, 59, 92, 99, 112, 195, 196, 241, 244, 255, 416, 558, 572, 855, 867, 880], "gamma_map": [35, 870, 880], "make_stc_from_dipol": [35, 40, 46, 59, 870, 880], "plot_dipole_loc": [35, 40, 51, 59, 179, 184, 186, 870, 880], "plot_dipole_amplitud": [35, 40, 51, 59, 870], "evoked_fnam": [35, 51, 90, 95, 264, 265, 266, 267, 478, 479], "50e": [35, 92, 152, 204], "300e": 35, "xyz_same_gamma": [35, 473, 880], "return_residu": [35, 40, 46, 51, 59, 178, 300, 473, 475, 476, 525, 880], "return_as_dipol": [35, 40, 46, 59, 473, 475, 476, 880], "303": [35, 88, 170, 222, 235], "converg": [35, 40, 46, 59, 173, 180, 205, 473, 525, 558, 707, 718, 862, 880], "054e": 35, "22233": 35, "856e": 35, "20712": 35, "375e": 35, "17166": 35, "061e": 35, "12996": 35, "273e": 35, "10107": 35, "574e": 35, "8307": 35, "319e": 35, "7209": 35, "369e": 35, "6342": 35, "631e": 35, "5694": 35, "047e": 35, "5142": 35, "579e": 35, "4692": 35, "199e": 35, "889e": 35, "4002": [35, 862], "634e": 35, "422e": 35, "3429": 35, "246e": 35, "3153": 35, "099e": 35, "2952": [35, 163], "748e": 35, "2745": 35, "703e": 35, "2559": 35, "817e": 35, "063e": 35, "2229": [35, 195], "417e": 35, "2067": 35, "883e": 35, "1944": 35, "711e": 35, "1836": 35, "551e": 35, "400e": 35, "1617": 35, "266e": 35, "1509": 35, "166e": 35, "1440": 35, "066e": 35, "1350": [35, 85], "964e": 35, "1245": [35, 196], "861e": 35, "1200": [35, 222], "754e": 35, "1128": [35, 209], "643e": 35, "1077": [35, 58, 196, 209, 244, 275, 540, 660], "529e": 35, "1017": [35, 196, 244], "410e": 35, "975": [35, 43, 56, 73, 106, 113, 231], "288e": 35, "924": [35, 209, 231], "163e": 35, "873": [35, 218, 220, 231], "036e": 35, "837": [35, 231], "906e": 35, "798": [35, 145, 196, 226, 231, 233], "776e": 35, "744": [35, 196, 209, 231], "644e": 35, "705": [35, 196, 199, 214, 231], "513e": 35, "687": [35, 61, 91, 209], "382e": 35, "660": [35, 81, 160, 165, 196, 231], "253e": 35, "627": [35, 231], "125e": 35, "000e": 35, "877e": 35, "570": [35, 81, 231], "758e": 35, "642e": 35, "528": [35, 144, 196, 231], "495": [35, 82, 221, 231], "421e": 35, "486": [35, 144, 209, 226, 231], "316e": 35, "465": [35, 203, 226, 231], "215e": 35, "441": [35, 209, 226, 231, 244, 558, 586], "119e": 35, "026e": 35, "937e": 35, "402": [35, 81, 145, 226, 231, 865], "853e": 35, "772e": 35, "695e": 35, "622e": 35, "339": [35, 170, 231], "552e": 35, "333": [35, 75, 170, 226], "486e": 35, "330": [35, 50, 81, 82, 106, 111, 170, 184, 226, 231, 880], "423e": 35, "306e": 35, "252e": 35, "201e": 35, "152e": 35, "273": [35, 46, 112, 167, 170, 185, 209, 226, 231, 880], "106e": 35, "261": [35, 85, 112, 170, 209, 231], "062e": 35, "020e": 35, "807e": 35, "234": [35, 112, 170, 226, 230], "431e": 35, "222": [35, 46, 103, 112, 170, 192, 230, 236], "074e": 35, "219": [35, 41, 112, 170, 196, 209, 231, 880], "735e": 35, "412e": 35, "105e": 35, "813e": 35, "535e": 35, "192": [35, 112, 155, 170, 172, 196, 226, 230, 231], "271e": 35, "186": [35, 45, 145, 170, 177, 182, 196, 226, 230, 231], "018e": 35, "778e": 35, "174": [35, 126, 140, 170, 209, 226, 230, 231, 244, 277], "549e": 35, "168": [35, 45, 129, 170, 177, 182, 196, 226, 230, 231, 236], "121e": 35, "159": [35, 114, 150, 170, 226, 230, 231, 234, 238], "922e": 35, "156": [35, 45, 170, 177, 182, 196, 209, 226, 231, 236, 238, 277], "731e": 35, "138": [35, 167, 170, 172, 196, 231, 244, 277, 563, 880], "895e": 35, "132": [35, 46, 152, 170], "749e": 35, "608e": 35, "126": [35, 170, 230, 231, 233], "344e": 35, "123": [35, 123, 170, 186, 188, 205, 207, 209, 226, 231, 345], "220e": 35, "104": [35, 61, 170, 184, 188, 196, 230, 231, 244, 660, 865, 880], "100e": [35, 65, 146, 152, 201, 223], "985e": 35, "875e": 35, "107": [35, 61, 84, 113, 115, 135, 141, 170, 209, 231, 244, 865, 880], "769e": 35, "666e": 35, "473e": 35, "208e": 35, "126e": 35, "115": [35, 61, 84, 94, 170, 184, 196, 230, 244, 566], "688e": 35, "500e": 35, "441e": 35, "384e": 35, "329e": 35, "127": [35, 170, 208, 214, 226, 227, 231], "275e": 35, "137": [35, 135, 170, 209, 226, 230, 277], "247e": 35, "649e": 35, "116e": 35, "179": [35, 75, 159, 165, 170, 226, 230, 231, 244, 595, 862], "523e": 35, "307e": 35, "227": [35, 112, 152, 170, 196, 209, 231, 244, 388, 856], "214e": 35, "041e": 35, "293": [35, 112, 170, 184, 231, 244], "730e": 35, "124e": 35, "160e": 35, "783e": 35, "340": [35, 51, 81, 82, 123, 170, 192, 209, 226, 231, 244, 300, 880], "168e": 35, "343": [35, 144, 170, 171, 209, 231, 880], "949e": 35, "886e": 35, "420": [35, 70, 81, 85, 226, 231], "855e": 35, "reach": [35, 40, 46, 59, 173, 241, 257, 264, 265, 266, 267, 478, 479, 656, 700, 702, 704, 707, 718, 728, 731, 745, 780, 787, 808, 880], "dip": [35, 40, 59, 84, 116, 177, 182, 184, 185, 186, 211, 241, 262, 453, 610, 880], "mri_head_t": [35, 40, 51, 59, 182, 268, 269, 471, 472, 865], "fig_nam": [35, 40, 46, 59, 807], "david": [35, 42, 119, 126, 129, 135, 195, 202, 239, 244, 264, 265, 266, 267, 354, 387, 416, 473, 478, 479, 526, 702, 704, 712, 718, 729, 732, 765, 862, 880], "wipf": [35, 244, 473], "srikantan": [35, 223, 244, 297, 298, 473], "nagarajan": [35, 223, 244, 297, 298, 473], "unifi": [35, 138, 181, 202, 244, 473, 660, 880], "947": [35, 209, 231, 244, 473], "966": [35, 42, 129, 163, 173, 196, 207, 231, 244, 473], "059": [35, 141, 143, 150, 170, 200, 215, 223, 244, 473], "gamma_map_invers": [35, 56], "form": [37, 142, 144, 161, 169, 176, 179, 199, 202, 204, 205, 206, 210, 226, 228, 231, 234, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 335, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 445, 473, 475, 476, 478, 479, 511, 520, 525, 527, 528, 529, 557, 558, 559, 567, 572, 588, 631, 634, 649, 650, 651, 652, 653, 665, 687, 688, 690, 691, 700, 702, 703, 704, 712, 765, 780, 782, 787, 791, 800, 803, 808, 810, 828, 833, 839, 858, 859, 861, 862, 865, 880], "merg": [37, 142, 216, 217, 259, 264, 266, 267, 353, 452, 523, 642, 649, 839, 861, 880], "christian": [37, 120, 126, 134, 145, 244, 387, 388, 410, 434, 660, 854, 856, 880], "brodbeck": [37, 120, 134, 244, 854, 880], "christianbrodbeck": [37, 120, 134], "read_source_estim": [37, 43, 53, 116, 127, 134, 176, 182, 235, 870, 880], "aud_lh": 37, "aud_rh": 37, "stc_lh": [37, 47], "stc_rh": [37, 47], "stc_bh": 37, "calcul": [37, 38, 58, 81, 101, 112, 128, 145, 151, 152, 159, 163, 167, 171, 177, 181, 189, 195, 201, 202, 205, 207, 212, 215, 226, 227, 231, 240, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 297, 298, 304, 318, 354, 358, 359, 369, 370, 371, 410, 417, 418, 445, 453, 454, 467, 473, 475, 476, 478, 479, 515, 520, 521, 522, 536, 558, 565, 570, 571, 574, 577, 588, 592, 608, 618, 630, 665, 679, 687, 688, 690, 691, 693, 694, 701, 712, 719, 788, 793, 802, 835, 859, 865, 880], "mass": [37, 166, 226, 227, 232, 233, 264, 269, 270, 275, 478, 555, 615, 649, 657, 663, 666, 681, 683, 684, 688, 703, 730, 738, 877, 880], "mni": [37, 135, 136, 137, 160, 177, 182, 183, 191, 262, 279, 280, 312, 328, 367, 471, 632, 740, 747, 748, 812, 862, 880], "vtx": 37, "t_lh": 37, "center_of_mass": [37, 222, 270, 275, 663, 666, 880], "mni_lh": 37, "vertex_to_mni": [37, 270, 275, 870], "t_rh": 37, "mni_rh": 37, "625": [37, 144, 231], "hl": 37, "hr": 37, "hb": 37, "figlegend": 37, "488": [37, 50, 56, 96, 226, 231], "label_activation_from_stc": [37, 56], "typic": [38, 44, 60, 70, 83, 135, 144, 146, 150, 152, 157, 161, 168, 169, 171, 189, 192, 196, 199, 200, 202, 204, 205, 206, 207, 208, 210, 212, 217, 226, 241, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 280, 297, 298, 312, 313, 331, 342, 344, 354, 358, 359, 360, 362, 417, 428, 453, 463, 466, 478, 479, 538, 557, 558, 560, 568, 572, 589, 599, 602, 612, 649, 671, 685, 686, 687, 688, 690, 691, 700, 703, 748, 786, 795, 799, 801, 835, 838, 839, 845, 856, 857, 859, 861, 862, 880], "anatom": [38, 44, 70, 94, 135, 136, 157, 161, 177, 182, 244, 262, 279, 280, 365, 462, 748, 766, 770, 812, 835, 862, 880], "yield": [38, 141, 143, 146, 150, 152, 156, 162, 172, 181, 203, 205, 215, 216, 241, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 318, 427, 431, 558, 561, 568, 569, 577, 588, 614, 652, 653, 692, 727, 728, 730, 731, 748, 835, 857, 859, 862, 880], "peak": [38, 54, 55, 60, 70, 72, 74, 82, 90, 94, 95, 127, 132, 146, 150, 151, 167, 173, 176, 178, 179, 181, 184, 185, 186, 192, 199, 201, 204, 205, 207, 209, 211, 226, 241, 256, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 359, 540, 558, 560, 563, 570, 571, 574, 575, 577, 578, 579, 581, 582, 583, 597, 657, 686, 700, 778, 783, 785, 786, 787, 855, 862, 880], "banksst": [38, 41, 47], "aparc_label_nam": 38, "stc_mean": 38, "grow": [38, 90, 95, 241, 468, 511, 605, 846, 861], "halt": [38, 135, 143, 262, 264, 265, 266, 267, 469, 470, 478, 479, 558, 702, 704, 776, 778, 795, 801, 804, 845, 880], "read_labels_from_annot": [38, 41, 47, 68, 90, 94, 95, 126, 222, 544, 622, 830, 870, 880], "parc": [38, 41, 47, 623, 830], "aparc": [38, 41, 47, 68, 90, 94, 95, 126, 136, 156, 177, 182, 222, 262, 271, 272, 275, 278, 279, 280, 384, 444, 462, 513, 623, 638, 748, 835, 880], "regexp": [38, 90, 94, 95, 200, 205, 207, 212, 439, 552, 623, 880], "stc_mean_label": 38, "func_label": 38, "stc_to_label": [38, 870, 880], "maximum": [38, 47, 48, 50, 58, 83, 115, 119, 152, 177, 178, 182, 183, 201, 202, 205, 215, 244, 259, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 297, 298, 326, 342, 365, 418, 443, 444, 447, 468, 473, 475, 476, 478, 479, 511, 519, 525, 534, 535, 540, 558, 560, 574, 583, 586, 587, 665, 687, 688, 690, 691, 696, 700, 705, 706, 707, 708, 709, 710, 711, 712, 714, 716, 718, 726, 729, 730, 732, 748, 772, 777, 783, 786, 806, 811, 812, 835, 862, 880], "anat_label": 38, "stc_anat_label": 38, "pca_anat": 38, "extract_label_time_cours": [38, 39, 41, 182, 271, 272, 275, 278, 279, 280, 513, 870, 880], "pca_flip": [38, 39, 271, 272, 275, 278, 279, 280, 444], "stc_func_label": 38, "pca_func": 38, "show_view": [38, 48, 79, 109, 116, 135, 136, 161, 182, 191, 211, 223, 236, 271, 272, 275, 278, 279, 280, 748, 806, 811, 880], "add_label": [38, 59, 104, 116, 126, 748], "73227205": 38, "80078852": 38, "62750681": 38, "659": [38, 46, 56, 169, 209], "label_from_stc": [38, 56], "strategi": [39, 196, 199, 205, 207, 208, 244, 353, 365, 415, 427, 475, 660, 718, 780, 859], "simpl": [39, 46, 128, 145, 146, 152, 161, 162, 167, 182, 195, 196, 202, 206, 223, 226, 241, 244, 256, 324, 353, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 495, 559, 716, 726, 796, 839, 856, 862, 880], "patheffect": [39, 161], "path_effect": [39, 161], "label_fnam": 39, "stc_label": 39, "mean_flip": [39, 271, 272, 275, 278, 279, 280, 444, 880], "tc": 39, "pe": 39, "stroke": [39, 161], "foreground": [39, 143, 161, 271, 272, 275, 278, 279, 280, 748, 806, 811, 880], "possibl": [39, 43, 45, 114, 135, 138, 141, 143, 144, 146, 150, 151, 152, 157, 161, 162, 169, 170, 171, 172, 173, 179, 181, 189, 191, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 212, 215, 216, 217, 218, 221, 223, 226, 230, 231, 239, 241, 258, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 324, 326, 354, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 427, 433, 451, 461, 469, 478, 479, 486, 502, 558, 559, 595, 596, 614, 615, 645, 682, 687, 689, 700, 701, 704, 734, 764, 774, 782, 783, 786, 791, 794, 795, 802, 837, 844, 856, 857, 859, 861, 862, 865, 866, 880], "vectorsourceestim": [39, 60, 176, 271, 272, 275, 276, 279, 280, 292, 293, 473, 475, 476, 525, 526, 527, 528, 529, 534, 535, 628, 811, 812, 835, 870, 880], "stc_vec": [39, 41, 181], "stc_vec_label": 39, "ee6677": [39, 161, 716, 726], "228833": 39, "4477aa": [39, 716, 726], "xyz": [39, 157, 161, 179, 271, 272, 275, 278, 279, 280, 312, 330, 444, 473, 502, 818, 880], "zorder": [39, 161, 266, 267, 716, 726, 782, 785, 880], "644": [39, 56, 196, 209, 231], "label_source_activ": [39, 56], "ir": 40, "l0": [40, 475], "sparser": [40, 271, 275, 279, 806], "convex": [40, 46, 59, 244, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 880], "mixed_norm": [40, 176, 476, 870, 880], "sure": [40, 43, 45, 67, 70, 79, 109, 113, 135, 136, 141, 142, 145, 152, 157, 162, 163, 167, 171, 172, 173, 177, 190, 200, 203, 204, 205, 207, 210, 215, 230, 234, 235, 236, 256, 266, 267, 441, 442, 475, 490, 542, 557, 568, 695, 716, 726, 727, 728, 730, 785, 826, 837, 838, 839, 847, 880], "criterion": [40, 525, 880], "n_mxne_it": [40, 475], "use_cp": [40, 92, 159, 222, 272, 278, 280, 284, 285, 364, 525, 526, 527, 528, 529, 532, 536, 541, 542, 664, 665, 862, 880], "maxit": [40, 59, 473, 475, 476], "3000": [40, 49, 113, 138, 143, 146, 147, 201, 207, 212, 256, 475, 476], "active_set_s": [40, 475], "debia": [40, 59, 475, 476], "slower": [40, 44, 46, 202, 259, 264, 363, 409, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518, 528, 596, 839, 868], "sure_alpha_grid": [40, 475], "083": [40, 61, 66, 124], "tidx": [40, 182], "7262": [40, 58, 59, 94, 179, 196, 223], "020866": [40, 58, 196], "58122e": [40, 58, 59, 94, 179, 196, 223], "element": [40, 58, 90, 169, 173, 179, 180, 183, 192, 196, 202, 206, 207, 215, 217, 226, 228, 244, 258, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 322, 323, 410, 417, 422, 431, 432, 444, 445, 465, 478, 479, 513, 514, 515, 557, 572, 588, 649, 680, 688, 700, 702, 704, 753, 765, 767, 772, 780, 787, 800, 803, 806, 808, 810, 811, 812, 835, 839, 845, 860, 861, 865, 880], "21995": 40, "82623e": 40, "warm": 40, "33333333333333": 40, "66666666666667": 40, "66666666666666": 40, "666666666666664": 40, "60279": 40, "603691813114": 40, "59855": 40, "33381940738": 40, "60434": 40, "87086639602": 40, "60386": 40, "806544140134": 40, "60336": 40, "58240427435": 40, "60303": 40, "83155030615": 40, "60157": 40, "013430584055": 40, "59974": 40, "67524684279": 40, "59597": 40, "86913013583": 40, "59084": 40, "52687739991": 40, "compute_source_morph": [40, 43, 44, 134, 159, 161, 181, 182, 234, 235, 236, 271, 275, 276, 279, 280, 625, 806, 812, 855, 870, 880], "subject_from": [40, 43, 44, 181, 270, 276, 360, 544, 545, 625, 637, 638, 639, 640, 855], "stc_fsaverag": [40, 43, 44, 855], "src_fsaverage_fnam": 40, "src_fsaverag": 40, "matthieu": [40, 59, 244, 475, 476], "kowalski": [40, 59, 244, 475, 476], "acceler": [40, 244, 475, 845, 859, 862, 880], "gradient": [40, 119, 244, 259, 264, 265, 266, 267, 269, 475, 477, 478, 479, 521, 558, 700, 702, 703, 704, 765, 880], "physic": [40, 157, 161, 171, 177, 179, 190, 210, 244, 266, 267, 269, 431, 443, 475, 478, 479, 525, 569, 577, 588, 782, 835, 862, 865, 880], "medicin": [40, 83, 177, 210, 244, 475, 558, 588, 862], "biologi": [40, 83, 177, 210, 244, 475, 558, 588, 862], "1937": [40, 244, 475], "1961": [40, 244, 475], "2012": [40, 59, 152, 170, 202, 226, 244, 270, 275, 282, 354, 475, 476, 693, 694, 868], "1088": [40, 177, 195, 208, 210, 244, 264, 265, 266, 267, 416, 475, 478, 479, 588, 645, 862], "0031": [40, 177, 210, 244, 475, 588, 862], "9155": [40, 177, 210, 244, 475, 588, 862], "jen": [40, 46, 59, 244, 475, 476, 880], "haueisen": [40, 46, 59, 244, 475, 476], "improv": [40, 70, 145, 195, 196, 204, 207, 244, 264, 265, 266, 267, 305, 341, 343, 347, 370, 371, 412, 421, 446, 448, 449, 450, 478, 479, 536, 559, 596, 599, 657, 662, 728, 731, 839, 855, 857, 858, 859, 880], "prni": [40, 46, 244, 476], "t\u00fcbingen": [40, 244], "6858545": [40, 244], "charl": [40, 44, 244, 276, 360, 475], "alban": [40, 244, 475], "deledal": [40, 244, 475], "samuel": [40, 94, 95, 244, 475, 880], "vaiter": [40, 244, 475], "jalal": [40, 244, 475], "fadili": [40, 244, 475], "peyr\u00e9": [40, 244, 475], "stein": [40, 244, 475], "unbias": [40, 244, 475], "risk": [40, 182, 202, 205, 230, 244, 264, 265, 266, 267, 475, 478, 479, 577, 748], "sugar": [40, 244, 475], "siam": [40, 244, 475], "journal": [40, 43, 70, 71, 74, 119, 135, 158, 196, 202, 210, 231, 239, 244, 264, 265, 266, 267, 276, 354, 360, 431, 475, 478, 479, 558, 566, 567, 569, 588, 660, 687, 688, 690, 691, 702, 704, 712, 716, 718, 726, 727, 729, 730, 732, 765, 854], "2487": [40, 244, 475], "1137": [40, 209, 244, 475], "140968045": [40, 244, 475], "888": [40, 56, 231], "mixed_norm_invers": [40, 56], "annalisa": [41, 880], "pascarella": [41, 880], "iac": 41, "cnr": 41, "dir": [41, 172, 256, 748, 862, 865], "data_dir": [41, 57, 134, 145], "bem_dir": [41, 45, 109, 160, 162, 183], "fname_mixed_src": 41, "fname_aseg": [41, 182], "fname_model": 41, "_audvi": 41, "_audvis_raw": [41, 158], "substructur": 41, "labels_vol": 41, "amygdala": 41, "thalamu": 41, "proper": [41, 70, 226, 241, 265, 266, 267, 270, 297, 298, 354, 358, 359, 365, 369, 370, 371, 373, 410, 417, 453, 454, 473, 475, 476, 479, 536, 759, 788, 839, 856, 868, 880], "stem": [41, 72, 275, 279, 485, 504], "oct6": [41, 109, 159, 256, 271, 275, 279, 640, 648, 806, 855], "oct5": [41, 109, 855], "1026": [41, 109, 855], "bound": [41, 135, 159, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 410, 417, 454, 478, 479, 557, 558, 649, 700, 701, 702, 704, 718, 736, 763, 765, 767, 772, 780, 787, 791, 800, 801, 802, 803, 806, 808, 810, 811, 812, 862, 865, 880], "10mm": 41, "someth": [41, 127, 150, 162, 172, 173, 192, 202, 207, 208, 215, 271, 272, 275, 278, 279, 280, 748, 749, 806, 811, 835, 838, 839, 842, 843, 844, 846, 880], "vol_src": [41, 136, 159], "add_interpol": [41, 50, 159, 649], "usual": [41, 50, 70, 83, 112, 114, 141, 144, 146, 150, 151, 152, 156, 157, 161, 162, 167, 168, 169, 171, 173, 181, 184, 189, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 215, 216, 217, 218, 234, 236, 239, 240, 256, 262, 263, 264, 265, 266, 267, 268, 269, 277, 303, 325, 330, 335, 337, 339, 461, 478, 479, 502, 665, 687, 688, 690, 691, 835, 839, 840, 842, 845, 847, 859, 862, 865], "nuse": [41, 269, 277, 865], "node": [41, 47, 159, 674, 675, 676, 753, 865, 880], "4590": 41, "2961": 41, "346": [41, 145, 170, 209], "1275": 41, "2615": 41, "1340": 41, "1589": 41, "753": [41, 56, 196, 203, 231], "1372": 41, "1306": [41, 209], "010000": [41, 157], "2169": 41, "write_source_spac": [41, 630, 855, 870, 880], "again": [41, 135, 142, 143, 145, 151, 152, 156, 157, 162, 173, 196, 199, 200, 202, 204, 205, 206, 207, 215, 226, 231, 241, 264, 265, 266, 267, 274, 478, 479, 558, 596, 799, 826, 838, 861, 862, 880], "plot_img": 41, "nipy_spectr": 41, "exist": [41, 44, 99, 101, 127, 141, 144, 150, 151, 157, 162, 171, 172, 173, 177, 181, 201, 202, 203, 206, 207, 208, 217, 221, 226, 228, 256, 258, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 307, 308, 309, 312, 313, 372, 377, 378, 379, 380, 382, 383, 385, 386, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 432, 436, 440, 441, 442, 443, 445, 462, 478, 479, 480, 493, 510, 543, 545, 547, 557, 558, 561, 568, 589, 608, 618, 638, 639, 642, 645, 646, 647, 650, 652, 653, 670, 671, 674, 700, 701, 702, 703, 704, 733, 736, 748, 771, 787, 802, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 839, 847, 855, 856, 859, 861, 866, 868, 880], "5mm": [41, 84, 136, 430, 748], "innerskul": 41, "807": [41, 195], "443": [41, 144, 244], "6003": 41, "inv_method": [41, 90], "a2009": [41, 94, 136, 156, 177, 271, 272, 275, 278, 279, 280, 444, 513, 623], "39266": 41, "01344e": 41, "coron": [41, 136, 159, 161, 181, 262, 748, 766, 776], "silhouett": [41, 181, 182, 271, 272, 275, 278, 279, 280, 748, 806, 811, 880], "43101017": 41, "98225664": 41, "7504814": 41, "45409596": 41, "02821048": 41, "97219252": 41, "vox": [41, 135, 161, 181, 182, 183], "2045": 41, "21567156": 41, "47889133": 41, "39837939": 41, "labels_parc": 41, "label_t": 41, "allow_empti": [41, 271, 272, 275, 278, 279, 280, 444], "nam": [41, 93, 94, 95, 184, 185, 223, 666, 880], "857": [41, 56, 231], "mixed_source_space_invers": [41, 56], "computation": [42, 173, 202, 205, 206, 596, 862, 868], "sabbagh": [42, 244, 526, 880], "pierr": [42, 76, 205, 244, 526, 558, 880], "ablin": [42, 76, 205, 244, 526, 558, 880], "ga\u00ebl": [42, 244, 526], "varoquaux": [42, 244, 526], "state": [42, 90, 93, 109, 126, 141, 163, 167, 169, 176, 199, 200, 207, 208, 216, 221, 226, 241, 244, 257, 259, 264, 265, 349, 434, 475, 494, 511, 518, 526, 558, 586, 605, 606, 611, 612, 652, 653, 654, 663, 664, 666, 687, 688, 689, 690, 691, 700, 702, 703, 748, 791, 835, 837, 839, 847, 861, 862, 865, 868, 880], "2020": [42, 74, 145, 158, 244, 388, 526, 558, 856], "116893": [42, 244, 526], "alexand": [42, 135, 212, 244, 856, 880], "captur": [42, 46, 138, 145, 167, 173, 184, 185, 196, 204, 205, 206, 207, 208, 269, 274, 454, 557, 570, 571, 574, 602, 603, 835, 880], "environ": [42, 43, 44, 156, 173, 176, 262, 270, 271, 272, 274, 275, 277, 278, 279, 280, 303, 307, 308, 309, 312, 360, 365, 366, 367, 372, 377, 378, 379, 380, 382, 383, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 429, 458, 460, 462, 466, 468, 469, 470, 471, 472, 511, 515, 517, 544, 545, 584, 605, 623, 625, 632, 637, 638, 639, 640, 644, 647, 648, 649, 663, 666, 677, 695, 696, 740, 747, 748, 764, 766, 776, 806, 811, 812, 814, 830, 837, 838, 842, 843, 844, 845, 847, 855, 859, 862, 880], "raw_empty_room_fnam": [42, 163], "ernoise_raw": [42, 129, 163, 173, 207], "raw_empty_room": [42, 163], "compute_raw_covari": [42, 88, 109, 163, 185, 192, 201, 261, 354, 609, 746, 855, 870, 880], "19800": [42, 129, 163, 173, 207], "85867": [42, 129, 163, 173, 207], "142": [42, 83, 129, 163, 170, 173, 207, 226, 230, 231, 277, 880], "965": [42, 129, 163, 173, 205, 207, 231], "18000": 42, "249": [42, 46, 91, 92, 95, 112, 152, 170, 188, 196, 230, 231, 244], "658": [42, 196, 231], "319": [42, 49, 72, 73, 99, 142, 153, 167, 170, 178, 181, 196, 201, 209, 226, 231, 244, 558], "environment": [42, 167, 199, 203, 206, 208, 210, 215, 217, 218, 855], "rest": [42, 70, 73, 109, 126, 135, 138, 141, 163, 167, 169, 170, 216, 244, 264, 265, 266, 267, 275, 373, 392, 478, 479, 645, 653, 835, 839, 861, 863, 868, 880], "base_cov": 42, "data_cov": [42, 181, 294, 298], "fig_noise_cov": 42, "show_svd": [42, 64, 261, 773], "fig_base_cov": 42, "fig_data_cov": 42, "1680": 42, "_cov": 42, "_kw": 42, "7265": [42, 178, 180], "037795": [42, 178], "52065e": [42, 178, 180], "40775": 42, "63307e": 42, "stc_data": [42, 94, 667], "11847053": 42, "45687517": 42, "03282162": 42, "mne_cov_pow": [42, 56], "pre": [43, 49, 135, 141, 142, 163, 167, 181, 201, 202, 205, 215, 221, 264, 265, 266, 267, 354, 478, 479, 558, 642, 645, 839, 840, 844, 851, 880], "spheric": [43, 71, 78, 152, 157, 171, 184, 185, 186, 200, 207, 210, 244, 261, 264, 265, 266, 267, 270, 273, 275, 276, 312, 328, 330, 360, 410, 417, 431, 478, 479, 522, 557, 558, 567, 568, 569, 572, 577, 588, 649, 663, 666, 677, 681, 700, 702, 704, 748, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 862, 880], "surfer": [43, 156, 271, 275, 279, 367, 748, 806, 862], "fswiki": [43, 156, 271, 275, 279, 367, 806, 862], "surfaceregandtempl": 43, "depict": [43, 266, 267, 272, 278, 280, 788, 811, 862], "success": [43, 145, 256, 264, 265, 271, 272, 275, 276, 278, 279, 280, 360, 476, 534, 535, 586, 650, 687, 688, 690, 691, 702, 703, 715, 723, 738, 769, 839], "inflat": [43, 48, 49, 54, 55, 59, 60, 126, 136, 152, 176, 192, 244, 271, 275, 279, 409, 748, 764, 806, 845, 862, 880], "overlaid": [43, 44, 135, 137, 173, 256, 649, 862, 880], "tommi": [43, 44, 880], "clausner": [43, 44, 880], "sample_dir": [43, 44, 116, 159, 173, 176], "fname_src": [43, 136, 160, 183], "fname_fsaverage_src": 43, "fname_stc": [43, 127, 176, 182], "repres": [43, 70, 74, 81, 115, 119, 141, 142, 143, 144, 145, 150, 152, 157, 159, 162, 163, 167, 169, 170, 171, 176, 190, 195, 202, 205, 218, 244, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 277, 278, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 444, 453, 454, 473, 475, 476, 478, 479, 494, 499, 502, 511, 524, 536, 558, 572, 612, 614, 688, 700, 703, 748, 765, 788, 791, 793, 795, 806, 807, 811, 835, 839, 855, 859, 862, 865, 880], "itself": [43, 70, 144, 152, 161, 173, 189, 202, 205, 206, 207, 217, 226, 258, 264, 265, 270, 275, 278, 307, 443, 478, 479, 545, 748, 837, 839, 859, 862, 865], "proxim": [43, 136, 268, 695, 880], "src_orig": [43, 275, 278], "3732": [43, 176], "3766": 43, "src_to": [43, 44, 181, 360, 880], "argument": [43, 44, 120, 152, 156, 162, 163, 170, 171, 173, 181, 189, 190, 191, 192, 201, 202, 203, 206, 210, 215, 226, 230, 236, 240, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 319, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 415, 416, 420, 421, 423, 426, 427, 429, 431, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 460, 461, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 553, 554, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 648, 649, 651, 652, 653, 654, 664, 665, 668, 670, 671, 672, 673, 674, 675, 676, 682, 687, 688, 689, 690, 691, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 722, 723, 727, 728, 730, 731, 732, 733, 736, 737, 738, 743, 744, 745, 746, 747, 748, 749, 756, 763, 764, 768, 770, 773, 776, 779, 780, 781, 782, 783, 785, 788, 791, 792, 793, 798, 799, 800, 801, 802, 804, 805, 806, 807, 809, 811, 812, 813, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 855, 865, 868, 880], "special": [43, 161, 170, 206, 215, 241, 371, 486, 493, 843, 861, 862, 868, 880], "alwai": [43, 73, 144, 145, 150, 152, 161, 168, 169, 170, 176, 191, 199, 201, 202, 203, 204, 205, 206, 207, 208, 215, 221, 226, 241, 262, 264, 265, 269, 271, 272, 274, 275, 277, 278, 279, 280, 318, 434, 444, 509, 558, 577, 618, 620, 687, 701, 756, 766, 776, 777, 807, 809, 818, 827, 835, 839, 862, 865, 866, 880], "10239": 43, "10240": 43, "10241": 43, "give": [43, 44, 59, 70, 74, 95, 143, 153, 162, 169, 172, 181, 183, 196, 200, 202, 203, 206, 226, 256, 261, 264, 265, 266, 267, 273, 277, 312, 410, 411, 412, 417, 421, 426, 427, 431, 446, 448, 449, 453, 475, 476, 478, 479, 494, 557, 558, 572, 577, 588, 606, 612, 686, 687, 688, 690, 691, 700, 702, 704, 712, 748, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 835, 837, 839, 845, 855, 859, 861, 862, 865, 880], "surfer_kwarg": [43, 176, 178], "brain_inf": 43, "under": [43, 44, 60, 127, 144, 145, 163, 190, 196, 199, 202, 206, 222, 226, 228, 234, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 312, 324, 354, 355, 357, 359, 377, 378, 379, 380, 382, 383, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 413, 420, 423, 426, 427, 453, 466, 468, 478, 479, 490, 497, 517, 520, 521, 531, 532, 541, 542, 563, 570, 571, 572, 596, 613, 617, 648, 651, 652, 653, 661, 665, 685, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 780, 783, 802, 839, 855, 861, 862, 868, 880], "h5": [43, 44, 173, 181, 223, 271, 272, 274, 275, 276, 278, 279, 280, 288, 557, 598, 700, 701, 703, 720, 722, 733, 822, 823, 880], "respect": [43, 44, 47, 55, 68, 71, 90, 132, 141, 145, 152, 157, 160, 169, 170, 173, 176, 189, 196, 200, 202, 205, 206, 208, 209, 215, 216, 231, 259, 261, 264, 265, 266, 267, 269, 273, 274, 275, 279, 280, 297, 298, 299, 335, 354, 358, 359, 365, 369, 370, 371, 410, 412, 417, 421, 434, 446, 448, 453, 454, 473, 475, 476, 478, 479, 484, 502, 511, 514, 522, 536, 557, 558, 559, 560, 562, 572, 574, 606, 614, 649, 657, 660, 662, 668, 688, 700, 702, 704, 719, 727, 728, 730, 731, 748, 764, 765, 769, 772, 778, 780, 782, 787, 788, 791, 792, 795, 800, 801, 803, 808, 810, 812, 839, 842, 845, 855, 859, 862, 865, 880], "my": [43, 44, 173, 183, 221], "read_source_morph": [43, 44, 276, 870], "further": [43, 142, 152, 158, 167, 169, 179, 189, 196, 201, 205, 207, 210, 215, 226, 231, 236, 241, 264, 265, 289, 291, 320, 365, 558, 562, 687, 688, 690, 691, 703, 763, 779, 851, 857, 861, 862, 880], "assign": [43, 45, 101, 103, 120, 137, 141, 144, 145, 152, 162, 169, 171, 176, 179, 189, 190, 207, 210, 216, 221, 258, 264, 269, 274, 277, 468, 470, 486, 490, 493, 495, 500, 502, 511, 520, 558, 574, 575, 578, 579, 581, 582, 610, 644, 748, 770, 830, 855, 862, 865, 880], "chain": [43, 168, 196, 200, 215, 416, 857, 862], "handi": [43, 191, 205], "liner": 43, "shortest": [43, 157, 202, 264, 265, 266, 267, 412, 421, 446, 448, 449, 478, 479, 563], "dougla": [43, 244, 276, 360], "greve": [43, 244, 276, 360], "lise": [43, 244, 276, 360], "der": [43, 244, 276, 360, 862, 880], "haegen": [43, 244, 276, 360], "qing": [43, 244, 276, 360], "cai": [43, 244, 276, 360], "steven": [43, 58, 126, 145, 152, 202, 244, 275, 276, 360, 410, 536, 657, 662, 856, 880], "stufflebeam": [43, 58, 126, 244, 275, 276, 360, 536, 540, 657, 660, 662], "mert": [43, 244, 276, 360], "sabuncu": [43, 244, 276, 360], "bruce": [43, 94, 156, 244, 276, 360, 525, 862], "fischl": [43, 94, 156, 244, 276, 360, 525, 862], "marc": [43, 244, 276, 360], "brysbaert": [43, 244, 276, 360], "languag": [43, 152, 173, 202, 230, 236, 244, 261, 264, 265, 266, 267, 273, 274, 276, 360, 410, 417, 478, 479, 557, 558, 700, 702, 704, 780, 787, 791, 800, 803, 808, 843, 864, 880], "asymmetri": [43, 244, 276, 360], "1477": [43, 244, 276, 360], "1492": [43, 195, 244, 276, 360, 855], "1162": [43, 244, 276, 360, 558], "jocn_a_00405": [43, 244, 276, 360], "morph_surface_stc": [43, 56], "affin": [44, 135, 157, 181, 183, 276, 360, 367, 585, 624, 632, 736, 737, 738, 835, 862, 880], "nonlinear": [44, 244, 686], "symmetr": [44, 135, 202, 244, 264, 265, 266, 267, 271, 272, 275, 276, 278, 279, 280, 360, 445, 446, 448, 449, 478, 479, 585, 687, 688, 690, 691, 701, 712, 736, 737, 738, 748, 767, 806, 811, 812, 880], "diffeomorph": [44, 135, 244, 276, 360, 585, 736, 737, 738, 880], "sdr": [44, 135, 181, 276, 360, 585, 736, 737, 738, 880], "afterward": [44, 150, 264, 265, 266, 267, 478, 479, 645, 664, 880], "nibabel": [44, 79, 135, 157, 161, 172, 183, 277, 470, 471, 472, 583, 748, 838, 862, 880], "fetch_fsaverag": [44, 125, 135, 136, 160, 181, 191, 856, 870, 880], "plot_glass_brain": [44, 135, 183], "sample_dir_raw": [44, 176], "fname_t1_fsaverag": 44, "ensur": [44, 45, 83, 112, 145, 150, 160, 162, 163, 181, 202, 203, 206, 208, 210, 211, 223, 261, 264, 265, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 320, 341, 354, 444, 445, 478, 479, 480, 550, 561, 588, 589, 700, 701, 702, 703, 704, 717, 743, 837, 839, 861, 862, 880], "fname_src_fsaverag": 44, "root": [44, 82, 135, 136, 137, 150, 151, 152, 160, 173, 181, 191, 223, 261, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 380, 385, 402, 773, 782, 839, 862, 880], "txt": [44, 135, 136, 160, 181, 184, 216, 217, 258, 330, 339, 385, 481, 485, 502, 606, 614, 615, 825, 837, 839, 859, 880], "zoom": [44, 70, 135, 152, 161, 181, 205, 207, 276, 360, 738, 880], "reslic": [44, 135, 181, 360, 738], "isotrop": [44, 862], "niter_affin": [44, 181, 276, 360, 880], "niter_sdr": [44, 181, 276, 360, 880], "999999888241291": 44, "translat": [44, 135, 136, 157, 161, 181, 190, 210, 234, 256, 264, 265, 266, 267, 350, 365, 410, 417, 431, 489, 558, 562, 588, 700, 738, 748, 764, 779, 784, 787, 792, 795, 865, 880], "optim": [44, 59, 82, 135, 143, 158, 161, 163, 180, 181, 201, 202, 205, 210, 226, 234, 235, 236, 244, 266, 267, 270, 354, 410, 453, 475, 478, 479, 558, 568, 588, 677, 729, 732, 738, 835, 859, 880], "r\u00b2": [44, 135, 181], "rigid": [44, 135, 181, 738], "compute_vol_morph_mat": [44, 276, 360, 880], "equival": [44, 136, 142, 151, 157, 159, 161, 163, 166, 172, 187, 188, 190, 202, 205, 208, 222, 226, 239, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 278, 279, 280, 297, 298, 312, 353, 410, 416, 417, 450, 453, 454, 473, 475, 476, 478, 479, 520, 525, 536, 557, 558, 561, 563, 572, 577, 618, 647, 664, 687, 700, 702, 704, 716, 726, 730, 731, 738, 748, 764, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 806, 808, 810, 811, 835, 839, 855, 859, 862, 865, 866, 880], "reus": [44, 74, 138, 266, 267, 700, 784, 862], "exce": [44, 226, 259, 264, 265, 266, 267, 341, 343, 410, 417, 478, 479, 560, 563, 574, 687, 787, 801, 880], "thousand": [44, 101, 206, 227, 244, 360, 393, 856, 880], "nifti1": [44, 276, 279, 280], "img_fsaverag": 44, "t1_fsaverag": 44, "plot_anat": [44, 177], "draw_cross": 44, "overlai": [44, 156, 161, 173, 181, 205, 271, 272, 275, 278, 279, 280, 558, 748, 792, 806, 811, 880], "add_overlai": [44, 748], "brian": [44, 195, 244, 276, 360, 416, 862], "avant": [44, 244, 276, 360], "epstein": [44, 244, 276, 360], "murrai": [44, 152, 244, 276, 360], "grossman": [44, 244, 276, 360], "jame": [44, 202, 244, 276, 360], "gee": [44, 244, 276, 360], "autom": [44, 83, 113, 121, 135, 145, 157, 163, 164, 165, 166, 167, 199, 200, 201, 204, 205, 210, 244, 256, 266, 267, 269, 276, 354, 360, 365, 388, 483, 639, 764, 788, 816, 847, 859, 862, 868, 880], "elderli": [44, 244, 276, 360], "neurodegen": [44, 244, 276, 360], "medic": [44, 59, 206, 207, 244, 255, 276, 360, 475, 476, 525, 862, 867], "media": [44, 244, 276, 360], "2007": [44, 181, 231, 244, 276, 360, 473, 558, 687, 688, 690, 691, 729, 732], "996": [44, 56], "795": [44, 56, 145, 196, 231], "morph_volume_stc": [44, 56], "megin": [45, 157, 588, 880], "program": [45, 152, 162, 173, 256, 262, 264, 265, 266, 267, 269, 274, 307, 469, 470, 478, 479, 558, 702, 704, 776, 778, 795, 801, 804, 839, 843, 844, 845, 846, 862, 864, 865], "offer": [45, 182, 196, 202, 208, 223, 226, 227, 257, 258, 748, 837, 839, 866, 868, 880], "guid": [45, 156, 269, 837, 843, 858, 861, 863, 880], "ecd": [45, 166, 187, 188, 262, 263, 266, 267, 268, 269, 279, 353, 453, 520, 618, 664, 835, 880], "manual": [45, 83, 120, 127, 135, 138, 143, 150, 152, 157, 158, 161, 162, 163, 173, 183, 189, 191, 199, 200, 201, 203, 206, 210, 244, 257, 260, 269, 270, 318, 328, 354, 375, 431, 445, 558, 568, 569, 577, 588, 589, 641, 771, 845, 856, 859, 862, 865, 880], "advantag": [45, 113, 138, 151, 152, 168, 169, 202, 204, 205, 208, 212, 226, 241, 837, 847], "graphic": [45, 135, 156, 190, 264, 265, 274, 470, 478, 479, 558, 778, 795, 801, 839, 843, 845, 846, 856, 880], "read_dipol": [45, 116, 262, 263, 453, 870, 880], "everyth": [45, 104, 112, 127, 135, 136, 160, 161, 170, 179, 183, 192, 202, 215, 266, 267, 786, 837, 839, 841, 856, 857, 859], "read_vectorview_select": [45, 223, 228, 870, 880], "audvi": [45, 856], "evoked_left": [45, 211], "evoked_right": [45, 211], "09989760657919393": [45, 61], "80m": 45, "picks_left": 45, "evoked_fit_left": 45, "cov_fit_left": 45, "picks_right": 45, "evoked_fit_right": 45, "cov_fit_right": 45, "sss": [45, 163, 166, 199, 209, 213, 214, 264, 265, 266, 267, 269, 341, 342, 343, 344, 347, 348, 351, 371, 431, 478, 479, 498, 558, 569, 577, 588, 618, 778, 782, 790, 801, 859, 862, 880], "normalize_proj": [45, 269, 880], "dip_left": 45, "dip_right": 45, "153": [45, 170, 196, 226, 230, 402], "38720": [45, 183], "58607874e": 45, "29495097e": 45, "04486582e": 45, "78988420e": 45, "81501987e": 45, "79536167e": 45, "22800262e": 45, "50545865e": 45, "24472969e": 45, "41763741e": 45, "51116585e": 45, "49899073e": 45, "11191910e": 45, "30776654e": 45, "58725785e": 45, "82015291e": 45, "83338121e": 45, "85132759e": 45, "76790821e": 45, "26581206e": 45, "61643686e": 45, "900": [45, 81, 177, 182], "396": [45, 81, 177, 182, 226, 231, 244, 297], "354": [45, 81, 170, 177, 182, 196, 226, 231], "9828": [45, 880], "152": [45, 170, 191, 209, 226, 230, 231, 240, 277], "69262885e": 45, "19272571e": 45, "91546253e": 45, "01298483e": 45, "64516797e": 45, "19806525e": 45, "33734643e": 45, "87121666e": 45, "27849772e": 45, "17670368e": 45, "61094719e": 45, "47048282e": 45, "57358697e": 45, "03235995e": 45, "14274862e": 45, "19294391e": 45, "09342253e": 45, "00283865e": 45, "12915739e": 45, "54166863e": 45, "75855684e": 45, "149": [45, 97, 102, 170, 182, 209, 226, 231, 277], "9340": [45, 880], "prevent": [45, 70, 120, 200, 210, 256, 511, 563, 583, 588, 665, 880], "lambda": [45, 67, 100, 112, 146, 196, 211, 222, 241, 261, 264, 265, 266, 267, 273, 314, 410, 417, 478, 479, 533, 557, 558, 572, 666, 700, 702, 704, 765, 772, 779, 787, 791, 800, 803, 808, 862, 865], "fulli": [45, 74, 173, 201, 203, 226, 230, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 320, 478, 479, 480, 681, 748, 767, 806, 811, 812, 837, 880], "make_forward_dipol": [45, 177, 870, 880], "stc_left": 45, "stc_right": 45, "sharei": [45, 73, 113, 114, 195, 207, 241], "supylabel": 45, "meter": [45, 81, 93, 94, 152, 157, 158, 161, 171, 177, 183, 207, 221, 256, 261, 262, 264, 265, 266, 267, 269, 270, 273, 282, 312, 328, 337, 365, 410, 417, 431, 478, 479, 494, 502, 517, 557, 558, 562, 567, 568, 569, 572, 577, 588, 593, 594, 612, 622, 649, 695, 700, 702, 704, 748, 765, 772, 776, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 862, 880], "kb": [45, 50, 138, 144, 177, 182, 208, 221], "161": [45, 170, 205, 209, 226, 230, 231], "7006": 45, "97034e": 45, "stcs_left": 45, "stcs_right": 45, "90m": 45, "amplitudes_left": 45, "amplitudes_right": 45, "vstack": [45, 115, 137, 142, 185, 223], "ampltud": 45, "n_left": 45, "mean_left": 45, "mean_right": 45, "transition_point": 45, "c0": [45, 152, 206], "c1": [45, 70, 112, 152, 206], "text": [45, 68, 127, 135, 136, 143, 152, 161, 178, 184, 189, 190, 192, 202, 203, 206, 207, 216, 217, 226, 241, 256, 264, 265, 277, 332, 478, 479, 502, 615, 665, 748, 825, 839, 843, 855, 862, 880], "824": [45, 56, 231], "610": [45, 81, 196, 209, 212, 214, 231], "multi_dipole_model": [45, 56], "promot": [46, 59], "focal": [46, 59, 83, 181, 558, 748, 816, 880], "assum": [46, 59, 63, 93, 94, 115, 123, 136, 142, 145, 152, 159, 161, 166, 173, 183, 189, 190, 201, 202, 205, 212, 217, 226, 228, 230, 241, 256, 258, 261, 262, 264, 265, 266, 267, 270, 273, 277, 297, 298, 303, 304, 307, 312, 325, 337, 354, 358, 359, 365, 369, 370, 371, 373, 410, 417, 429, 437, 445, 451, 452, 453, 454, 460, 473, 475, 476, 478, 479, 485, 486, 493, 507, 517, 521, 528, 536, 557, 558, 572, 608, 615, 634, 637, 639, 649, 665, 687, 688, 690, 691, 694, 695, 700, 702, 703, 704, 736, 748, 764, 765, 772, 780, 782, 784, 787, 788, 789, 790, 791, 798, 800, 802, 803, 804, 808, 810, 828, 835, 839, 844, 847, 862, 865, 866, 880], "stationar": [46, 59, 449, 478, 479], "properti": [46, 59, 74, 101, 114, 127, 144, 162, 173, 190, 195, 200, 205, 206, 215, 218, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 302, 365, 409, 478, 479, 544, 558, 574, 575, 589, 650, 665, 682, 700, 701, 702, 703, 704, 735, 748, 750, 767, 776, 778, 782, 788, 789, 791, 793, 801, 806, 811, 812, 816, 866, 880], "bias": [46, 70, 152, 167, 181, 200, 202, 207, 230, 244, 454, 880], "short": [46, 59, 65, 82, 103, 112, 114, 127, 137, 138, 141, 161, 169, 173, 199, 202, 206, 207, 209, 211, 217, 227, 239, 241, 244, 264, 265, 266, 267, 478, 479, 495, 593, 596, 702, 704, 705, 708, 715, 716, 719, 723, 726, 835, 839, 862, 863, 880], "transient": [46, 82, 199, 210, 241, 563], "mathurin": [46, 244, 880], "massia": [46, 244, 880], "yousra": [46, 51, 93, 126, 244, 475, 476, 880], "bekhti": [46, 51, 93, 126, 244, 475, 476, 880], "tf_mixed_norm": [46, 59, 475, 870, 880], "350e": [46, 113, 240], "49948803289596966": 46, "301": [46, 63, 66, 114, 170, 192, 204, 209, 214, 239, 865], "16610": 46, "multidict": 46, "l1_ratio": [46, 59, 476, 880], "wsize": [46, 59, 476, 715, 723, 724], "n_tfmxne_it": [46, 476], "dgap": [46, 59], "89e": 46, "p_obj": [46, 59], "289": [46, 150, 170, 195, 226, 230, 231, 244, 416, 558], "000835": 46, "d_obj": [46, 59], "190": [46, 59, 75, 81, 112, 116, 170, 185, 196, 230, 231, 244, 687, 688, 690, 691], "083203": 46, "n_activ": [46, 59, 210, 348], "247": [46, 112, 170, 212, 226, 230, 231, 244, 856], "27e": 46, "253": [46, 112, 170, 226, 230, 231, 244], "327890": 46, "582652": 46, "53e": 46, "707285": 46, "246": [46, 112, 135, 170, 181, 209, 230, 244], "182101": 46, "18e": 46, "589468": 46, "408712": 46, "82e": 46, "243688": 46, "420556": 46, "67e": [46, 59], "094971": 46, "57e": 46, "991067": 46, "49e": [46, 59], "936498": 46, "442467": 46, "08e": 46, "906871": 46, "829870": 46, "70e": 46, "887205": 46, "017223": 46, "24e": 46, "872107": 46, "148583": 46, "11e": 46, "762424": 46, "94e": 46, "854012": 46, "259629": 46, "867870": 46, "46e": 46, "043596": 46, "270": [46, 81, 112, 170, 192, 231, 880], "587841": 46, "87e": 46, "722230": 46, "272": [46, 112, 119, 170, 172, 196, 231, 244, 657, 662], "856399": 46, "29e": 46, "678013": 46, "849283": 46, "335": [46, 109, 170, 196, 226, 231, 244, 862], "966495": 46, "73e": 46, "215341": 46, "236": [46, 112, 170, 209, 226, 230], "481796": 46, "17e": 46, "095509": 46, "238": [46, 112, 170, 209, 227, 230, 231], "178504": 46, "77e": 46, "068507": 46, "591286": 46, "298": [46, 75, 170, 175, 209, 226, 231], "546285": 46, "06e": 46, "133013": 46, "826666": 46, "295": [46, 170, 195, 206, 209, 214, 226, 231], "194637": 46, "debias": [46, 59], "551": [46, 114, 231], "d0": [46, 59], "235933e": 46, "000000e": [46, 59], "irtf": 46, "2015": [46, 71, 99, 101, 113, 121, 163, 202, 205, 227, 241, 244, 266, 267, 354, 388, 393, 567, 686, 729, 732, 788, 856, 859, 868], "intern": [46, 70, 71, 83, 127, 133, 137, 161, 169, 171, 184, 191, 200, 207, 210, 228, 244, 264, 265, 266, 267, 312, 354, 359, 365, 389, 410, 431, 478, 479, 493, 498, 555, 558, 566, 567, 568, 569, 577, 588, 618, 686, 687, 700, 701, 702, 703, 704, 748, 794, 839, 880], "workshop": [46, 244, 410], "roland": [46, 244, 476], "badeau": [46, 244, 476], "trento": [46, 244, 476], "7552337": [46, 244, 476], "724": [46, 56, 196, 231], "356": [46, 56, 81, 170, 209, 231], "multidict_reweighted_tfmxn": [46, 56], "plane": [47, 135, 157, 171, 206, 228, 231, 240, 430, 653, 728, 731, 766, 835, 862], "olaf": [47, 48, 49, 50, 54, 55, 101, 244, 540, 657, 662, 880], "hauk": [47, 48, 49, 50, 54, 55, 101, 244, 540, 657, 662, 880], "mrc": [47, 48, 49, 50, 54, 55, 862], "cbu": [47, 48, 49, 50, 54, 55, 862], "cam": [47, 48, 49, 50, 54, 55, 862], "ac": [47, 48, 49, 50, 54, 55, 135, 191, 199, 203, 244, 354, 371, 835, 862], "uk": [47, 48, 49, 50, 54, 55, 244, 354, 862], "rougier": 47, "borrow": [47, 230, 236], "hi": [47, 256], "make_inverse_resolution_matrix": [47, 48, 50, 54, 55, 870, 880], "get_point_spread": [47, 48, 50, 870, 880], "circular_layout": [47, 870], "plot_connectivity_circl": [47, 770], "rm_mne": [47, 54], "n_label": [47, 222, 271, 272, 275, 278, 279, 280, 444, 513, 667], "label_color": [47, 463], "lh_label": [47, 748], "endswith": [47, 171], "label_ypo": 47, "ypo": 47, "yp": 47, "rh_label": [47, 748], "summaris": [47, 212], "five": [47, 143, 151, 172, 184, 209, 218, 244, 341, 478, 479, 558, 748, 793, 862], "princip": [47, 205, 206, 244, 270, 354, 558, 677, 862, 880], "probabl": [47, 70, 166, 189, 199, 200, 201, 202, 205, 206, 226, 228, 231, 241, 414, 420, 439, 478, 479, 490, 748, 805, 837, 839, 844, 845, 846, 862], "n_comp": [47, 534, 535], "stcs_psf_mne": 47, "pca_vars_mn": 47, "return_pca_var": [47, 534, 535], "n_vert": 47, "printopt": 47, "caudalanteriorcingul": 47, "caudalmiddlefront": [47, 90, 95, 136], "cuneu": [47, 748], "entorhin": 47, "frontalpol": 47, "fusiform": 47, "inferiorpariet": [47, 222], "inferiortempor": 47, "insula": 47, "isthmuscingul": 47, "lateraloccipit": 47, "lateralorbitofront": 47, "lingual": 47, "medialorbitofront": 47, "middletempor": 47, "paracentr": 47, "parahippocamp": [47, 68], "parsoperculari": 47, "parsorbitali": 47, "parstriangulari": 47, "pericalcarin": 47, "postcentr": [47, 68], "posteriorcingul": 47, "precentr": [47, 136], "precuneu": 47, "rostralanteriorcingul": 47, "rostralmiddlefront": [47, 222], "superiorfront": [47, 136], "superiorpariet": 47, "superiortempor": 47, "supramargin": 47, "temporalpol": 47, "transversetempor": [47, 222], "overal": [47, 127, 207, 228, 234, 235, 476, 861, 880], "bigger": [47, 81, 127, 235, 478, 479], "leaker": 47, "psfs_mat": 47, "pearson": [47, 202, 205, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 558, 700, 703], "arbitrari": [47, 115, 161, 166, 167, 168, 172, 202, 221, 224, 228, 231, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 410, 417, 478, 479, 495, 558, 575, 579, 687, 688, 690, 691, 700, 702, 703, 704, 780, 787, 794, 800, 808, 861, 862, 880], "absolut": [47, 60, 82, 86, 123, 129, 136, 152, 180, 190, 226, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 358, 410, 478, 479, 481, 534, 535, 540, 558, 574, 600, 649, 661, 693, 700, 703, 766, 772, 792, 812, 835, 839, 845, 880], "leakage_mn": 47, "node_ord": [47, 753], "mirror": [47, 67, 70, 171, 264, 265, 266, 267, 271, 275, 279, 280, 448, 449, 450, 478, 479, 763, 767, 806, 812, 868, 880], "node_angl": [47, 753], "start_po": [47, 753], "group_boundari": [47, 753], "subplot_kw": 47, "n_line": 47, "node_color": 47, "neighbour": [47, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 780, 787, 791, 800, 803, 808, 810, 880], "deeper": [47, 54, 55, 181, 862], "versu": [47, 142, 152, 167, 216, 223, 299, 847], "fname_fig": 47, "plot_label_leakag": 47, "savefig": [47, 115], "inde": [47, 70, 142, 169, 176, 206, 207, 241, 837], "max_val": 47, "brain_lh": 47, "caudal": [47, 90, 95, 748], "pos_lim": [47, 54, 55, 181, 222, 234, 271, 272, 275, 278, 279, 280, 767, 806, 811, 812], "brain_rh": 47, "529": [47, 56, 83, 231], "611": [47, 56, 59, 244, 354, 476], "psf_ctf_label_leakag": [47, 56], "get_cross_talk": [48, 49, 870, 880], "fname_evo": [48, 49, 50, 54, 55, 64], "regularis": [48, 54, 55, 537], "rm_lor": 48, "stc_psf": 48, "stc_ctf": 48, "31738": [48, 54, 55], "68644e": [48, 54, 55], "vertno_lh": 48, "verttru": [48, 49], "maxima": [48, 146, 266, 267, 597, 785, 787, 880], "vert_max_psf": 48, "vert_max_ctf": 48, "brain_psf": 48, "ventral": [48, 748], "add_foci": [48, 49, 50, 161, 176, 178, 223, 748, 880], "coords_as_vert": [48, 49, 50, 176, 178, 223, 748], "22842778": 48, "2956258": 48, "85246681": 48, "brain_ctf": 48, "10932369": 48, "16149934": 48, "93351158": 48, "437": [48, 56, 84, 138, 184], "psf_ctf_vertic": [48, 56], "make_lcmv_resolution_matrix": [49, 870, 880], "vi": [49, 151, 231, 264, 772], "cov_pr": 49, "post": [49, 120, 135, 181, 202, 207, 210, 835, 839, 845, 846, 858, 859, 861], "cov_post": 49, "filters_pr": 49, "weight_norm": [49, 181, 223, 297, 298, 880], "filters_post": 49, "rm_pre": 49, "stc_pre": 49, "rm_post": 49, "stc_post": 49, "brain_pr": 49, "ndata": 49, "brain_post": 49, "430": [49, 56, 81, 226, 231], "438": [49, 54, 55, 226], "psf_ctf_vertices_lcmv": [49, 56], "coars": 50, "don": [50, 95, 115, 117, 120, 135, 142, 145, 146, 147, 158, 159, 160, 163, 169, 172, 200, 203, 205, 206, 207, 215, 228, 229, 230, 231, 236, 241, 256, 259, 264, 265, 372, 489, 490, 547, 589, 605, 612, 614, 649, 687, 690, 839, 840, 845, 847, 859, 861, 863, 880], "src_vol": 50, "forward_vol": 50, "3375": 50, "1045": 50, "015000": [50, 208], "860": [50, 81, 181, 209, 231], "304": [50, 109, 124, 151, 170, 172, 185, 226, 227, 231, 880], "158": [50, 161, 162, 165, 170, 226, 231, 235, 238], "403": [50, 81, 231], "492": [50, 226], "inverse_operator_vol": 50, "rm_lor_vol": 50, "sources_vol": 50, "stc_psf_vol": 50, "383": [50, 81, 226], "140193": 50, "7904e": 50, "66519": 50, "31885e": 50, "1209": 50, "verttrue_vol": 50, "max_vert_idx": 50, "unravel_index": [50, 182, 228], "vert_max_ctf_vol": 50, "brain_psf_vol": 50, "plot_3d": [50, 136, 181, 279, 280, 880], "volume_opt": [50, 271, 272, 275, 278, 279, 280, 748, 806, 811], "32501698": 50, "38884743": 50, "87974682": 50, "480": [50, 56, 74, 81, 172, 192, 231], "psf_volum": [50, 56], "recurs": [51, 161, 202, 244, 256, 271, 275, 279, 300, 648, 806], "rap_mus": [51, 56, 453, 870, 880], "n100": [51, 167, 192, 202, 207], "1834": 51, "ori": [51, 177, 181, 184, 186, 223, 262, 297, 298, 430, 453], "2470324143277338": 51, "7764326014559829": 51, "5797649538112025": 51, "5154591814700811": 51, "5345116895021849": 51, "6697753996853825": 51, "332": [51, 170, 192, 231, 244, 300], "1999": [51, 112, 241, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 300, 354, 478, 479, 558, 586, 700, 703, 862], "740118": [51, 244, 300], "inv_fnam": 52, "fmri": [52, 196, 244, 475, 476, 525, 835, 856, 862, 865], "fmri_prior": 52, "rr": [52, 161, 162, 176, 179, 277, 342, 344, 345, 346, 631, 634, 649, 669, 828, 865], "use_tri": [52, 161, 277, 865], "8192": [52, 183, 186, 409], "765": [52, 56, 196], "read_invers": [52, 56], "nb": [53, 478, 479], "read_stc": [53, 56], "localis": [54, 55, 186, 226, 227, 244, 540, 687, 688, 690, 691], "mimic": [54, 55, 411, 434, 525], "resolution_metr": [54, 55, 56, 870, 880], "ple": [54, 55, 540], "sd": [54, 55, 135, 241, 662, 702, 704], "ple_mne_psf": 54, "peak_err": [54, 55, 540], "sd_mne_psf": 54, "sd_ext": [54, 55, 540], "rm_dspm": 54, "ple_dspm_psf": 54, "sd_dspm_psf": 54, "brain_ple_mn": 54, "brain_ple_dspm": 54, "subtract": [54, 55, 65, 70, 73, 107, 113, 120, 134, 142, 152, 177, 202, 208, 210, 226, 228, 256, 259, 260, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 287, 297, 298, 353, 354, 358, 359, 369, 370, 371, 410, 417, 418, 453, 454, 473, 475, 476, 478, 479, 480, 536, 541, 542, 558, 559, 574, 588, 618, 619, 642, 645, 687, 690, 700, 703, 788, 808, 835, 862, 865, 880], "diff_pl": [54, 55], "brain_ple_diff": [54, 55], "superfici": [54, 181, 862], "brain_sd_mn": 54, "brain_sd_dspm": 54, "diff_sd": [54, 55], "brain_sd_diff": [54, 55], "wors": [54, 172, 588, 855], "distinguish": [54, 72, 152, 173, 196, 199, 200, 201, 204, 205, 207, 215, 361, 835, 880], "stenroo": [54, 55, 244, 540, 657, 662], "matthia": [54, 55, 244, 540, 880], "treder": [54, 55, 244, 540], "kit": [54, 55, 171, 172, 185, 226, 244, 269, 338, 346, 431, 502, 521, 540, 569, 577, 588, 614, 862, 870, 871, 880], "biorxiv": [54, 55, 223, 244, 297, 298, 540], "2019": [54, 55, 65, 75, 142, 208, 211, 226, 231, 244, 540, 573, 595, 687, 688, 690, 691, 714, 716, 726, 729, 730, 732, 838, 845], "1101": [54, 55, 114, 195, 223, 244, 297, 298, 540], "672956": [54, 55, 244, 540], "resolution_matrix": 55, "spatial_resolut": 55, "fname_fwd_emeg": 55, "forward_emeg": 55, "forward_meg": 55, "pick_types_forward": [55, 68, 92, 284, 285, 870], "inv_emeg": 55, "inv_meg": 55, "63485": 55, "05542e": 55, "rm_emeg": 55, "ple_psf_emeg": 55, "sd_psf_emeg": 55, "rm_meg": 55, "ple_psf_meg": 55, "sd_psf_meg": 55, "brain_ple_emeg": 55, "emeg": [55, 868], "brain_ple_meg": 55, "bring": [55, 70, 157, 182, 205, 217, 269, 279, 280, 431, 569, 577, 588, 812, 862, 865], "brain_sd_emeg": 55, "brain_sd_meg": 55, "929": [55, 56, 195, 209, 231], "resolution_metrics_eegmeg": [55, 56], "auto_examples_invers": 56, "vector_mne_solut": [56, 60], "819": [56, 60, 209, 231], "609": [56, 152, 209, 244], "time_frequency_mixed_norm_invers": [56, 59], "704": [56, 59, 145, 200, 214, 231], "220": [56, 81, 112, 138, 170, 209, 230], "413": [56, 114, 179, 215, 220, 244], "source_space_snr": [56, 58], "862": [56, 58, 173, 195, 196, 231], "268": [56, 112, 170, 186, 192, 226, 231], "snr_estim": [56, 57], "783": [56, 57, 196, 231], "plot_snr_estim": [57, 870, 880], "padma": [58, 244, 573, 880], "sundaram": [58, 244, 573, 880], "tottochan": 58, "kaisu": [58, 880], "lankinen": [58, 880], "klankinen": 58, "inv_op": [58, 222], "snr_stc": [58, 275], "estimate_snr": [58, 275, 870, 880], "maxidx": 58, "med": [58, 94, 137, 167, 196, 222], "viridi": [58, 101, 127, 137, 144, 226, 701, 790], "70263": [58, 179], "18949e": [58, 179], "evoked_eeg": [58, 150, 207], "inv_op_eeg": 58, "stc_eeg": 58, "snr_stc_eeg": 58, "7499": [58, 90], "118742": [58, 90], "155292": [58, 90], "81981": 58, "0644e": 58, "goldenholz": [58, 244, 275], "seppo": [58, 244, 275, 536, 657, 662], "ahlfor": [58, 244, 275, 431, 536, 657, 662], "dahlia": [58, 244, 275], "sharon": [58, 244, 275], "mamiko": [58, 244, 275], "ishitobi": [58, 244, 275], "lucia": [58, 126, 244, 275], "vaina": [58, 126, 244, 275], "magnetoencephalographi": [58, 158, 179, 244, 275, 660, 729, 732, 862], "1086": [58, 196, 209, 244, 275], "1002": [58, 84, 179, 239, 244, 264, 265, 266, 267, 275, 478, 479, 596, 653, 689, 702, 704, 712, 718, 855], "hbm": [58, 179, 244, 275, 689, 855], "20571": [58, 244, 275], "269": [58, 137, 170, 231], "built": [59, 141, 151, 152, 158, 160, 166, 167, 168, 176, 182, 203, 205, 211, 215, 219, 220, 226, 262, 264, 265, 266, 267, 269, 304, 328, 329, 338, 366, 439, 461, 462, 470, 478, 479, 517, 521, 584, 635, 668, 695, 704, 737, 748, 764, 839, 845, 851, 859, 860, 880], "fourier": [59, 103, 202, 239, 241, 244, 264, 265, 266, 267, 478, 479, 702, 704, 705, 708, 712, 715, 716, 718, 719, 723, 726, 727, 728, 730, 731], "stft": [59, 476, 715, 724, 835, 870, 880], "henc": [59, 114, 143, 151, 157, 163, 176, 191, 204, 207, 215, 226, 239, 241, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 478, 479, 700, 703, 761, 835, 846, 859], "trap": 59, "minima": [59, 597], "pick_channels_evok": 59, "slightli": [59, 70, 127, 161, 181, 185, 202, 207, 210, 211, 221, 230, 264, 265, 266, 267, 270, 359, 478, 479, 528, 536, 677, 748, 785, 855, 856, 862, 880], "eventu": [59, 137, 318, 329, 576, 839, 855], "020865": [59, 94, 179, 223], "96729": 59, "38524e": 59, "985": 59, "descent": [59, 244, 475, 880], "845726": 59, "4408": [59, 185, 192], "353441": 59, "4410": 59, "859492": 59, "292946": 59, "51e": 59, "670058": 59, "519426": 59, "61e": 59, "669663": 59, "668049": 59, "546629e": 59, "049948803289596964": [59, 95, 180, 182], "2996928197375818": [59, 141, 150, 152, 228], "10e": [59, 68, 90, 95], "15e": 59, "20e": [59, 264, 265, 274, 478, 479, 778, 801], "medial": [59, 236, 687, 688, 748], "yellow": [59, 207, 266, 267, 763, 782, 799], "scalar_thresh": [59, 748], "stationari": [59, 80, 205, 207, 244, 347, 476, 855], "410": [59, 71, 81, 83, 129, 199, 203, 207, 218, 231, 239, 244, 476], "051": [59, 141, 143, 150, 170, 200, 223, 244, 476], "sparsiti": [59, 244, 476, 660], "g\u00e1bor": [59, 244, 476], "sz\u00e9keli": [59, 244, 476], "horst": [59, 244, 476], "hahn": [59, 244, 476], "editor": [59, 192, 244, 332, 473, 476, 558, 729, 732, 839, 843, 857], "6801": [59, 244, 476], "page": [59, 135, 173, 202, 218, 244, 264, 265, 329, 387, 476, 478, 479, 558, 716, 726, 727, 729, 730, 732, 748, 778, 801, 837, 839, 840, 843, 845, 846, 851, 854, 855, 858, 859, 860, 861, 862, 863, 880], "springer": [59, 223, 244, 297, 298, 387, 476, 558], "berlin": [59, 223, 244, 297, 298, 476], "heidelberg": [59, 223, 244, 297, 298, 476], "1007": [59, 152, 206, 207, 208, 223, 244, 297, 298, 410, 476, 525, 558, 573, 665, 862], "978": [59, 113, 152, 202, 205, 223, 231, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 354, 476, 478, 479, 558, 682, 700, 703], "22092": [59, 244, 476], "0_49": [59, 244, 476], "221": [59, 106, 147, 170, 226, 231], "magnitud": [60, 63, 70, 112, 113, 136, 143, 146, 150, 151, 167, 169, 179, 181, 199, 200, 202, 216, 223, 234, 235, 272, 278, 280, 354, 410, 431, 454, 533, 563, 569, 577, 588, 597, 692, 789, 811, 837, 859, 880], "accomplish": [60, 135, 136, 150, 162, 172, 837, 845, 855, 856, 862], "plot_vector_source_estim": [60, 813, 870, 880], "hood": [60, 127, 144, 190, 199, 202, 206, 880], "plot_source_estim": [60, 748, 813, 870, 880], "instruct": [60, 116, 162, 190, 211, 469, 837, 838, 839, 840, 841, 843, 844, 845, 846, 850, 853, 859, 865, 880], "impos": [60, 195, 201, 880], "underli": [60, 161, 167, 202, 206, 226, 227, 239, 244, 258, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 410, 478, 479, 484, 579, 700, 703, 738, 880], "getter": [60, 178, 880], "peak_tim": [60, 176], "get_peak": [60, 127, 150, 152, 176, 178, 179, 181, 266, 267, 271, 272, 275, 278, 279, 280, 880], "time_dil": [60, 136, 137, 178, 182, 748], "framer": [60, 136, 137, 178, 182, 748], "95048065": 60, "56941314": 60, "72451438": 60, "stc_max": 60, "cosin": [60, 90, 202, 221, 655, 862], "source_nn": [60, 268, 297, 298, 865], "brain_max": 60, "975978731472672": 60, "90575168": 60, "52414196": 60, "71336747": 60, "brain_norm": 60, "83607509": 60, "44726242": 60, "57923594": 60, "lot": [60, 70, 127, 153, 159, 161, 167, 170, 200, 202, 204, 205, 206, 211, 215, 217, 359, 365, 429, 460, 608, 637, 639, 828, 839], "fname_inv_fix": 60, "inv_fix": 60, "stc_fix": 60, "brain_fix": [60, 179], "00351751": 60, "62842071": 60, "43519503": 60, "pars": [61, 141, 152, 166, 172, 174, 175, 191, 201, 216, 257, 258, 269, 283, 439, 451, 458, 478, 486, 493, 494, 500, 548, 615, 835, 880], "elekta": [61, 84, 157, 166, 187, 188, 210, 257, 261, 262, 264, 265, 266, 267, 269, 274, 302, 354, 430, 451, 453, 478, 479, 522, 764, 776, 778, 788, 801, 816, 851, 856, 862, 865, 880], "triux": [61, 184, 257, 264, 265, 266, 267, 389, 478, 479, 555, 700, 702, 703, 704, 856, 862], "dacq": [61, 257, 856], "acquisit": [61, 157, 161, 169, 189, 190, 191, 192, 207, 215, 244, 257, 258, 264, 265, 266, 267, 269, 283, 451, 478, 479, 480, 577, 588, 602, 665, 835, 851, 855, 862, 865, 880], "accordingli": [61, 135, 151, 159, 179, 190, 215, 259, 264, 265, 266, 267, 469, 478, 479, 486, 493, 498, 589, 862, 880], "multimod": [61, 138, 244, 866, 870, 880], "multimodal_raw": 61, "grad_ssp_upright": 61, "mag_ssp_upright": 61, "v4": [61, 209, 210], "v5": [61, 209, 210], "183600": 61, "576599": 61, "960": [61, 81, 101, 144, 227, 231, 856], "categori": [61, 112, 146, 257, 335, 619, 745, 862, 863, 880], "acqpars": [61, 257, 478, 880], "acqparserfif": [61, 269, 478, 870, 880], "get_condit": [61, 257], "plot_topo": [61, 151, 153, 167, 218, 239, 240, 264, 265, 266, 267, 321, 478, 479, 700, 702, 704, 880], "background_color": [61, 132, 266, 267, 786, 880], "cat": [61, 112], "flat": [61, 83, 111, 136, 141, 142, 151, 182, 200, 201, 202, 206, 207, 208, 210, 257, 259, 264, 265, 271, 275, 279, 357, 359, 558, 560, 570, 571, 574, 575, 577, 686, 748, 806, 835, 855, 880], "fiff": [61, 115, 157, 161, 264, 265, 268, 274, 277, 478, 479, 482, 495, 509, 510, 558, 570, 571, 734, 756, 856, 880], "fname_out": [61, 756], "write_evok": [61, 150, 266, 267, 441, 618, 859, 870, 880], "118": [61, 170, 244, 558, 880], "0812": [61, 170], "0123": [61, 146, 167, 170, 215], "0942": [61, 170], "2232": [61, 170, 335], "newcat": 61, "longer": [61, 114, 146, 163, 168, 169, 173, 192, 200, 201, 202, 203, 205, 226, 241, 264, 265, 266, 267, 269, 341, 434, 445, 449, 451, 478, 479, 560, 588, 703, 727, 728, 730, 731, 748, 758, 778, 781, 839, 845, 859, 862, 880], "ref": [61, 67, 123, 152, 256, 748, 764, 839, 880], "reqev": [61, 257], "requir": [61, 79, 109, 135, 136, 137, 141, 143, 145, 151, 157, 159, 162, 163, 167, 169, 171, 173, 183, 190, 191, 192, 196, 199, 202, 203, 205, 208, 210, 212, 215, 221, 223, 226, 227, 230, 234, 256, 257, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 297, 298, 303, 308, 312, 354, 355, 356, 357, 359, 360, 363, 385, 409, 410, 412, 413, 417, 419, 420, 423, 426, 427, 448, 449, 451, 453, 466, 468, 471, 472, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 513, 517, 518, 520, 521, 528, 531, 532, 541, 542, 557, 558, 560, 563, 570, 571, 572, 580, 589, 597, 606, 643, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 696, 700, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 742, 748, 765, 771, 778, 780, 783, 787, 791, 795, 800, 801, 802, 803, 806, 808, 810, 811, 817, 835, 837, 840, 843, 844, 855, 856, 861, 862, 868, 880], "reqwithin": [61, 257], "reqwhen": [61, 257], "freeli": 61, "elekta_epoch": [61, 66], "scratch": [63, 141, 150, 166, 189, 191, 192, 215, 224, 225, 241, 265, 266, 267, 269, 373, 479, 704, 719], "exampleio": 63, "fake": [63, 70, 79, 160, 183], "won": [63, 79, 152, 206, 207, 217, 230, 244, 264, 265, 266, 267, 360, 478, 479, 558, 618, 700, 702, 703, 704, 738], "consult": [63, 202, 206, 588, 839, 844, 845, 855, 859, 861, 862], "reader": [63, 167, 176, 189, 206, 215, 330, 477, 484, 486, 487, 488, 490, 493, 496, 498, 500, 501, 502, 504, 505, 506, 507, 508, 612, 614, 616, 862, 866, 880], "fakedata": 63, "nof": 63, "lazi": 63, "analogsign": 63, "multichannel": [63, 70, 112, 152, 196, 210, 244, 431, 566, 569, 588], "sampling_r": 63, "misc": [63, 65, 79, 80, 81, 82, 115, 135, 136, 138, 150, 170, 179, 183, 184, 186, 189, 190, 192, 215, 221, 264, 265, 266, 267, 274, 311, 327, 346, 373, 443, 478, 479, 486, 488, 490, 493, 495, 500, 504, 555, 700, 702, 703, 704, 772, 778, 782, 784, 786, 801, 856, 870, 880], "show_scrollbar": [63, 75, 152, 205, 211, 221, 264, 265, 478, 479, 558, 778, 795, 801, 880], "100000": [63, 447], "99999": [63, 439], "read_neo_format": [63, 66], "ev_info": 64, "15972": 64, "27235589e": 64, "79818505e": 64, "12852747e": 64, "85348042e": 64, "02846360e": 64, "26727393e": 64, "33468523e": 64, "80261790e": 64, "33583009e": 64, "93161055e": 64, "35199238e": 64, "79073915e": 64, "09498615e": 64, "16924072e": 64, "93873875e": 64, "40677185e": 64, "27444183e": 64, "08634620e": 64, "59818134e": 64, "51070563e": 64, "53708918e": 64, "read_noise_covariance_matrix": [64, 66], "analyz": [65, 71, 141, 166, 169, 181, 196, 199, 200, 202, 203, 210, 216, 217, 226, 244, 264, 265, 436, 561, 567, 683, 836, 839, 855, 862, 880], "pabr": 65, "maddox": [65, 244, 880], "lab": [65, 68, 858, 868], "clemen": [65, 112, 867, 880], "brunner": [65, 112, 867, 880], "pyxdf": [65, 190], "p001_se": 65, "s004_task": 65, "default_run": 65, "001_eeg_a2": 65, "stream": [65, 190, 200, 203, 880], "header": [65, 113, 123, 157, 161, 183, 190, 192, 266, 267, 297, 298, 339, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 473, 475, 476, 477, 485, 488, 490, 504, 506, 507, 536, 788, 880], "load_xdf": 65, "time_seri": 65, "assert": [65, 109, 141, 145, 150, 157, 172, 192, 216, 223, 226, 228, 861, 880], "four": [65, 70, 142, 145, 152, 167, 186, 202, 226, 236, 244, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 748, 765, 780, 787, 791, 800, 803, 808, 810, 855, 862, 863], "plu": [65, 167, 169, 173, 178, 183, 202, 205, 207, 209, 230, 269, 719, 846, 857, 862, 865, 880], "rerefer": 65, "bipolar": [65, 67, 192, 204, 205, 226, 264, 265, 266, 267, 478, 479, 642, 645, 880], "subselect": [65, 116, 144, 150, 151, 152, 167, 215, 228, 231, 239, 241, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 370, 478, 479, 700, 701, 702, 703, 778, 859, 880], "uv": [65, 264, 265, 266, 267, 478, 479, 880], "preamp": 65, "nominal_sr": 65, "2320128": 65, "2320127": 65, "232": [65, 112, 145, 170, 231], "013": [65, 128, 141, 142, 150, 152, 170, 223], "melissa": [65, 244], "polonenko": [65, 244], "ross": [65, 244, 880], "brainstem": [65, 244], "hear": [65, 244, 592], "2331216519871395": [65, 244], "683": [65, 66, 195, 196, 231], "read_xdf": [65, 66], "auto_examples_io": 66, "mastoid": [67, 190, 208, 264, 265, 266, 267, 478, 479, 645], "bone": [67, 271, 272, 275, 278, 279, 280, 748, 806, 811], "sleep": [67, 139, 140, 166, 169, 244, 258, 264, 269, 402, 403, 439, 478, 493, 606, 702, 781, 835, 859, 880], "ssvep_fold": [67, 171], "ssvep": [67, 166, 171, 242, 243, 264, 269, 312, 328, 439, 488, 555, 702, 810, 870, 880], "ssvep_data_raw_path": [67, 171], "se": [67, 171, 201, 212, 241, 862], "02_se": [67, 171, 241], "ssvep_eeg": [67, 171, 241], "vhdr": [67, 137, 171, 241, 443, 478, 479, 606, 856, 862, 880], "read_raw": [67, 70, 79, 135, 136, 145, 173, 223, 256, 870, 880], "easycap": [67, 171, 226, 241, 880], "467579": 67, "579": [67, 69], "tp9": 67, "tp10": 67, "rename_channel": [67, 74, 112, 128, 141, 150, 152, 160, 186, 211, 215, 264, 265, 266, 267, 312, 478, 479, 489, 501, 870, 880], "m2": [67, 208, 264, 265, 266, 267, 478, 479, 645, 865], "midlin": [67, 128, 135, 170, 171, 218, 227, 324], "ch_indic": [67, 321], "make_1020_channel_select": [67, 128, 227, 870, 880], "orig_nam": 67, "tolist": [67, 137], "rereferenc": [67, 168, 241], "rereferenced_midline_ch": 67, "alter": [67, 208, 210, 215, 258, 589, 880], "set_bipolar_refer": [67, 208, 264, 265, 266, 267, 478, 479, 645, 870, 880], "anod": [67, 208, 642, 880], "cathod": [67, 208, 642, 880], "strip": [67, 112, 244], "suffix": [67, 256, 274, 478, 479, 491, 880], "replac": [67, 78, 88, 101, 142, 144, 152, 160, 173, 189, 191, 201, 206, 207, 210, 215, 217, 244, 261, 264, 265, 266, 267, 273, 274, 410, 417, 432, 445, 478, 479, 490, 506, 523, 557, 558, 572, 700, 702, 704, 765, 787, 791, 800, 803, 808, 839, 843, 845, 847, 850, 862, 880], "unreferenc": [67, 642], "add_channel": [67, 70, 74, 264, 265, 266, 267, 478, 479, 558, 700, 702, 703, 704, 880], "467580": 67, "o1": [67, 70, 128, 160, 221, 241], "po9": [67, 241], "p7": [67, 70, 128, 160, 501], "p3": [67, 70, 128, 145, 160, 501], "cp5": [67, 128, 501], "cp1": [67, 70, 128], "t7": [67, 128, 160, 171, 261, 264, 265, 266, 267, 273, 312, 410, 417, 478, 479, 501, 557, 558, 572, 700, 702, 704, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 880], "c3": [67, 112, 128, 145, 160, 501], "fc1": [67, 70, 128, 477], "fc5": [67, 128, 501], "f3": [67, 70, 128, 145, 160, 208, 501], "f7": [67, 145, 160, 335, 501], "fp1": [67, 145, 160, 208, 221, 335, 446, 449, 486, 493, 575, 579], "o2": [67, 128, 160, 221, 241], "po10": [67, 241], "p8": [67, 70, 128, 160], "p4": [67, 70, 128, 145, 160], "cp6": [67, 128], "cp2": [67, 70, 128], "c4": [67, 70, 112, 128, 145, 160], "t8": [67, 70, 128, 160, 171, 261, 264, 265, 266, 267, 273, 312, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 880], "fc2": [67, 70, 128], "fc6": [67, 70, 128], "f4": [67, 70, 128, 145, 160, 171, 208], "f8": [67, 145, 160], "fp2": [67, 145, 160, 221, 335, 446, 449, 575, 579], "still": [67, 70, 74, 78, 115, 120, 143, 144, 145, 161, 172, 189, 190, 199, 200, 202, 203, 204, 206, 208, 210, 212, 215, 218, 226, 234, 264, 269, 277, 320, 365, 429, 460, 478, 558, 588, 608, 637, 639, 682, 703, 757, 771, 772, 813, 828, 837, 839, 845, 857, 868, 880], "plot_sensor": [67, 127, 143, 152, 171, 183, 191, 218, 264, 265, 266, 267, 478, 479, 870, 880], "fpz": [67, 128, 138, 171, 205, 261, 264, 265, 266, 267, 273, 312, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 880], "oz": [67, 70, 128, 138, 160, 171, 241, 261, 264, 265, 266, 267, 273, 312, 410, 417, 478, 479, 557, 558, 572, 649, 700, 702, 704, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 880], "contralateral_referenc": [67, 85], "facilit": [68, 112, 136, 137, 168, 191, 196, 227, 264, 265, 266, 267, 478, 479, 700, 702, 703, 704, 855, 862, 865, 880], "subcort": [68, 244, 573, 880], "simul": [68, 70, 80, 91, 105, 106, 141, 150, 162, 177, 189, 191, 201, 202, 215, 221, 231, 234, 235, 236, 241, 244, 261, 264, 265, 266, 267, 268, 269, 270, 275, 277, 287, 354, 373, 451, 478, 479, 483, 511, 514, 520, 524, 525, 536, 555, 556, 592, 609, 615, 620, 622, 623, 626, 700, 702, 703, 704, 713, 727, 730, 731, 732, 748, 752, 807, 856, 870, 880], "samuelsson": [68, 244, 573, 880], "johnsam": 68, "mit": [68, 71, 152, 244, 473, 567, 850, 856, 862], "simulate_sparse_stc": [68, 92, 93, 664, 665, 667, 870, 880], "simulate_evok": [68, 92, 177, 222, 520, 665, 666, 667, 870, 880], "all_label": 68, "select_label": 68, "hiplab": 68, "postcenlab": 68, "cortical_waveform": 68, "waveform": [68, 99, 202, 204, 207, 211, 244, 272, 278, 280, 650, 652, 666, 667, 686, 807, 846], "pi": [68, 90, 93, 94, 95, 114, 202, 207, 221, 222, 223, 533, 597, 666, 716, 724, 726, 730, 862], "subcortical_waveform": 68, "data_fun": [68, 92, 93, 94, 666], "isin": [68, 112, 145], "evoked_subcort": [68, 573], "cortical_signal_suppress": [68, 870, 880], "n_proj": [68, 573], "fft": [68, 108, 133, 202, 239, 241, 264, 265, 266, 267, 418, 422, 423, 478, 479, 531, 541, 542, 701, 705, 706, 707, 708, 709, 710, 712, 719, 725, 727, 728, 729, 730, 731, 732, 802, 880], "rfft": 68, "psd_proc": 68, "transax": 68, "footbibliographi": [68, 839], "218": [68, 85, 112, 170, 196, 202, 226, 230, 231, 244], "put": [69, 116, 123, 127, 142, 145, 156, 157, 162, 171, 173, 183, 184, 186, 195, 202, 205, 215, 221, 222, 223, 226, 266, 267, 270, 385, 748, 782, 839, 844, 880], "earli": [69, 70, 142, 173, 200, 202, 241, 244, 259, 264, 265, 266, 267, 478, 479, 518, 611], "button": [69, 71, 94, 121, 128, 135, 141, 143, 145, 153, 157, 162, 167, 169, 192, 199, 201, 206, 216, 217, 218, 261, 264, 265, 266, 267, 273, 274, 410, 417, 436, 478, 479, 557, 558, 700, 702, 704, 778, 779, 780, 782, 784, 787, 791, 800, 801, 802, 803, 808, 839, 856, 880], "press": [69, 71, 113, 121, 128, 135, 141, 143, 145, 152, 153, 157, 162, 167, 169, 173, 192, 199, 201, 216, 217, 218, 244, 264, 265, 354, 436, 449, 473, 478, 479, 558, 567, 778, 793, 795, 801, 856, 880], "590": [69, 81, 209, 211, 214, 231], "millisecond": [69, 82, 112, 141, 146, 150, 169, 215, 234, 235, 236, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 436, 478, 479, 700, 703, 748, 806, 811, 880], "late": [69, 163, 859], "quickli": [69, 166, 167, 195, 205, 206, 217, 863, 880], "slowli": 69, "define_target_ev": [69, 85, 128, 870], "quick": [69, 73, 93, 135, 184, 199, 240, 523, 839], "reference_id": [69, 128, 436], "smilei": [69, 71, 94, 153, 167, 169, 216, 856], "target_id": [69, 128, 436], "new_id": [69, 128, 436, 523], "hit": [69, 241, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 779, 780, 784, 787, 791, 800, 803, 808, 880], "fill_na": [69, 436], "fill": [69, 222, 270, 275, 277, 278, 360, 436, 466, 478, 479, 580, 667, 696, 748, 880], "events_": 69, "besid": [69, 201, 206], "tmin_": 69, "tmax_": 69, "8522": [69, 880], "10649": 69, "12859": 69, "14830": 69, "16850": 69, "18826": 69, "21224": 69, "23200": 69, "25272": 69, "27243": 69, "29525": 69, "31530": 69, "33481": 69, "35611": 69, "38007": 69, "566": [69, 196, 209, 231], "08643728": 69, "532": [69, 208], "78723509": 69, "97154325": 69, "359": [69, 81, 170, 195, 226], "63138369": 69, "446": [69, 231, 244, 854], "20930939": 69, "40611816": 69, "512": [69, 72, 231, 274, 277, 409], "80771377": 69, "ft": [69, 143, 146, 167, 201, 207, 240, 256, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 410, 417, 478, 479, 514, 557, 558, 572, 577, 700, 702, 704, 765, 779, 780, 782, 784, 787, 791, 800, 803, 808, 809, 810, 835, 862], "768": [69, 85, 173, 184, 196, 231], "conduct": [70, 71, 101, 152, 159, 192, 226, 227, 228, 230, 244, 256, 515, 522, 657, 662, 835, 839, 855, 858, 862, 865, 880], "undesir": [70, 204, 558, 880], "otherwis": [70, 83, 120, 145, 152, 163, 173, 189, 201, 202, 231, 234, 236, 258, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 288, 297, 298, 302, 312, 324, 337, 354, 358, 359, 360, 369, 370, 371, 385, 403, 410, 417, 445, 448, 449, 453, 454, 468, 473, 475, 476, 478, 479, 488, 523, 524, 525, 531, 536, 557, 558, 572, 606, 615, 637, 638, 640, 646, 649, 666, 685, 686, 700, 702, 703, 704, 712, 724, 735, 738, 748, 764, 765, 772, 776, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 791, 798, 800, 801, 802, 803, 804, 806, 807, 808, 810, 811, 825, 837, 839, 862, 880], "introduct": [70, 90, 95, 152, 231, 239, 241, 244, 274, 864], "smear": [70, 80, 81, 143, 202, 241, 587, 727, 728, 730, 731, 880], "unfortun": [70, 163, 847, 859], "brigd": 70, "far": [70, 83, 127, 141, 142, 145, 158, 172, 179, 201, 202, 203, 206, 208, 215, 216, 226, 365, 490, 561, 687, 688, 690, 691, 728, 731, 772, 862, 865], "address": [70, 96, 97, 167, 202, 226, 227, 234, 235, 236, 244, 269, 687, 688, 690, 691, 839, 845], "Or": [70, 120, 172, 199, 209, 221, 572, 839], "quantifi": [70, 211, 241, 275], "introduc": [70, 75, 141, 142, 150, 152, 166, 167, 174, 176, 199, 201, 202, 203, 205, 206, 207, 215, 234, 236, 259, 264, 265, 266, 267, 320, 478, 479, 558, 778, 782, 801, 859, 862, 868, 880], "outcom": 70, "awar": [70, 103, 141, 145, 168, 169, 217, 228, 234, 264, 265, 266, 267, 478, 479, 785, 880], "mitig": [70, 181, 202, 203, 210, 862], "confound": [70, 152, 558], "psychophysiologi": [70, 71, 99, 142, 152, 202, 231, 244, 567, 686, 687, 688, 690, 691], "cpmc": 70, "columbia": 70, "softwar": [70, 135, 159, 166, 185, 190, 191, 208, 244, 257, 269, 320, 443, 469, 478, 479, 487, 506, 588, 631, 814, 833, 835, 837, 839, 840, 845, 847, 855, 856, 859, 860, 861, 864, 868, 870, 880], "ebridg": 70, "html": [70, 144, 170, 244, 256, 274, 572, 646, 863, 880], "linearsegmentedcolormap": [70, 763], "nearli": [70, 839], "exactli": [70, 79, 127, 141, 145, 176, 185, 196, 215, 241, 560, 686, 766, 810, 880], "suffici": [70, 200, 202, 210, 228, 264, 265, 266, 267, 269, 282, 354, 478, 479, 517, 778, 801, 837, 839, 845, 855, 859, 862, 880], "portion": [70, 179, 199, 201, 215, 240, 264, 265, 321, 478, 479, 558, 778, 795, 801, 839, 859, 861], "plenti": 70, "settl": [70, 297], "ed_data": 70, "raw_data": 70, "compute_bridged_electrod": [70, 587, 768, 870, 880], "1959919512423807e": 70, "665886892347821": 70, "iz": 70, "4367320903573773": 70, "fcz": [70, 145, 241], "fc4": [70, 145], "f2": 70, "4835197413857302e": 70, "587817798758312": 70, "fc3": [70, 145, 501], "cp3": [70, 501], "af7": 70, "af3": 70, "af4": 70, "af8": 70, "f5": [70, 501], "fz": [70, 128, 145, 160, 221, 227, 443, 478, 479, 493], "ft8": 70, "tp8": 70, "p5": [70, 501], "p1": [70, 112, 211], "p6": 70, "po3": [70, 128, 241], "po4": [70, 128, 241], "po8": [70, 128, 241, 880], "746002687400983": 70, "cz": [70, 112, 128, 138, 145, 160, 171, 190, 192, 206, 208, 221, 227, 264, 265, 266, 267, 478, 479, 645, 880], "c2": [70, 112, 206], "cp4": 70, "pz": [70, 128, 138, 144, 160, 192, 221, 227], "p2": [70, 112], "590631749463316": 70, "f6": 70, "understand": [70, 136, 145, 191, 202, 241, 716, 726, 730, 839, 862, 863, 868, 880], "physiologi": 70, "clip": [70, 173, 218, 256, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 801, 803, 808, 810, 880], "bridged_idx": [70, 566, 587, 768], "ed_matrix": [70, 566, 768], "ax1": [70, 86, 90, 99, 138, 184, 195], "ax2": [70, 86, 90, 96, 99, 138, 184, 195, 228, 229], "triangular": [70, 161, 162, 270, 631, 687, 688, 690, 691, 807, 833, 855, 862, 865], "ed_plot": 70, "triu_idx": 70, "triu_indic": 70, "idx0": 70, "idx1": 70, "nanmedian": 70, "im1": 70, "cax1": 70, "set_label": [70, 147, 196, 226], "mu": [70, 202, 226, 566, 880], "im2": 70, "cax2": 70, "histogram": [70, 159, 264, 265, 778], "previou": [70, 135, 141, 145, 152, 162, 171, 172, 173, 182, 201, 202, 206, 208, 218, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 416, 417, 453, 454, 473, 475, 476, 536, 568, 577, 588, 748, 766, 788, 850, 865, 880], "pair": [70, 103, 120, 138, 145, 169, 189, 190, 191, 196, 210, 211, 226, 234, 241, 256, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 277, 278, 279, 280, 283, 288, 302, 410, 417, 478, 479, 501, 524, 557, 558, 566, 587, 599, 631, 687, 689, 690, 700, 701, 702, 704, 735, 748, 764, 768, 769, 772, 780, 786, 787, 791, 803, 806, 808, 810, 811, 833, 839, 880], "isnan": 70, "arrang": [70, 127, 152, 166, 171, 218, 244, 753], "light": [70, 138, 143, 172, 191, 200, 264, 265, 266, 267, 413, 420, 478, 479, 558, 748, 778, 782, 795, 801, 835, 880], "horizont": [70, 81, 136, 138, 141, 142, 143, 181, 192, 199, 210, 226, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 558, 748, 767, 782, 794, 795, 801, 806, 811, 880], "stand": [70, 156, 170, 176, 661, 839, 851], "insert": [70, 152, 170, 215, 261, 269, 273, 288, 302, 436, 452, 524, 735, 753], "syring": 70, "tip": [70, 205, 244, 354, 843, 844, 860, 866], "plot_bridged_electrod": [70, 870, 880], "saniti": [70, 120, 145, 183, 202, 446, 665, 868, 880], "implausibli": [70, 202, 226, 693], "interestingli": [70, 862], "though": [70, 74, 112, 152, 157, 161, 169, 173, 180, 184, 191, 199, 202, 203, 205, 206, 207, 212, 226, 269, 751, 771, 835, 856, 862, 880], "adjac": [70, 143, 147, 200, 227, 235, 236, 318, 329, 422, 451, 560, 563, 670, 671, 672, 673, 674, 675, 676, 680, 687, 688, 690, 691, 769, 868, 877, 880], "distinct": [70, 71, 196, 244, 261, 264, 265, 266, 267, 410, 417, 478, 479, 557, 700, 702, 704, 765, 780, 787, 803, 808, 810], "unlik": [70, 141, 142, 150, 151, 157, 161, 171, 182, 199, 202, 204, 215, 263, 264, 265, 266, 267, 272, 278, 280, 361, 389, 418, 589, 704, 811, 837, 855, 862, 880], "ch1": 70, "ch2": 70, "9760": [70, 83], "9759": [70, 83], "lesser": [70, 478, 479, 801, 880], "trough": [70, 145], "monoton": [70, 101, 489, 583, 752], "discrep": [70, 862], "driven": [70, 196, 226, 371, 417, 473], "blink": [70, 72, 83, 93, 94, 145, 173, 199, 201, 204, 205, 207, 208, 215, 217, 241, 244, 258, 264, 265, 557, 572, 652, 653, 880], "flatten": [70, 119, 206, 226, 230, 236, 244, 765, 880], "axvspan": [70, 96, 152], "subplots_adjust": [70, 71, 73, 107, 109, 112, 120, 127, 147, 152, 161, 200, 203, 205, 206, 207, 208, 211, 216, 226, 228, 229, 231, 771], "725": [70, 196], "wspace": [70, 73, 127, 226], "compel": 70, "evid": [70, 113, 202, 203, 244, 558, 729, 732], "judici": [70, 839], "electrolyt": [70, 244, 566], "tri": [70, 161, 162, 169, 176, 179, 264, 265, 270, 271, 275, 277, 279, 318, 365, 433, 465, 631, 634, 649, 669, 673, 676, 806, 828, 857, 862, 865, 880], "those": [70, 74, 78, 99, 127, 143, 145, 152, 158, 162, 166, 167, 169, 170, 171, 172, 173, 176, 181, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 215, 216, 217, 221, 222, 226, 256, 259, 264, 265, 266, 267, 269, 277, 297, 310, 312, 324, 327, 329, 355, 356, 357, 359, 368, 369, 412, 416, 426, 431, 433, 434, 439, 443, 462, 478, 479, 489, 506, 536, 544, 557, 558, 560, 561, 573, 574, 575, 580, 584, 594, 596, 603, 649, 652, 653, 668, 686, 695, 700, 702, 703, 704, 708, 709, 710, 711, 713, 727, 728, 730, 731, 772, 778, 779, 782, 784, 785, 792, 799, 802, 839, 855, 861, 862, 864, 880], "biolog": [70, 199, 206, 207, 244, 525, 855, 862], "interpolate_bridged_electrod": [70, 870, 880], "midwai": [70, 587], "aid": [70, 244, 587, 880], "recov": [70, 135, 167, 365, 880], "impli": [70, 163, 222, 241, 269, 330, 364, 493, 859], "unbridg": 70, "ch0": 70, "bridged_idx_simul": 70, "data_orig": 70, "rng": [70, 92, 93, 94, 114, 195, 202, 226, 511, 558, 586, 605, 652, 653, 654, 663, 664, 666, 687, 688, 689, 690, 691], "random": [70, 84, 90, 92, 93, 94, 114, 160, 191, 192, 195, 199, 202, 205, 223, 226, 227, 234, 235, 236, 475, 511, 558, 586, 605, 652, 653, 654, 663, 664, 666, 687, 688, 689, 690, 691, 880], "default_rng": 70, "seed": [70, 90, 95, 112, 114, 205, 222, 223, 227, 234, 235, 236, 468, 511, 558, 586, 605, 652, 653, 654, 663, 664, 666, 679, 687, 688, 689, 690, 691, 880], "raw_sim": [70, 93, 94], "bridged_data": 70, "tile": [70, 114], "back": [70, 74, 83, 88, 116, 141, 144, 159, 162, 163, 167, 172, 173, 181, 182, 200, 202, 205, 206, 207, 208, 239, 257, 264, 265, 266, 267, 274, 365, 369, 425, 451, 478, 479, 558, 782, 839, 859, 880], "raw_virtu": 70, "data_virtu": 70, "raw_comp": 70, "data_comp": 70, "With": [70, 114, 121, 163, 172, 173, 189, 192, 206, 207, 212, 217, 223, 264, 265, 266, 267, 282, 452, 478, 479, 502, 558, 638, 748, 796, 835, 839, 842, 847, 851, 859, 861, 862], "comp": [70, 170, 269, 880], "1086289630998356e": 70, "139834556312537e": 70, "brought": [70, 157], "impend": 70, "help": [70, 72, 79, 120, 135, 136, 141, 145, 146, 147, 152, 160, 161, 162, 163, 167, 170, 173, 182, 189, 191, 196, 199, 200, 201, 203, 204, 205, 207, 218, 230, 256, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 437, 439, 445, 469, 478, 479, 486, 493, 494, 500, 509, 558, 606, 612, 645, 649, 663, 666, 692, 700, 703, 716, 726, 730, 745, 748, 756, 778, 792, 806, 839, 844, 845, 855, 857, 861, 862, 863, 865, 868, 880], "quest": 70, "technician": [70, 855, 856], "noisi": [70, 92, 143, 151, 200, 202, 207, 210, 226, 234, 236, 241, 269, 577, 578, 581, 652, 653, 664, 855, 880], "bid": [70, 135, 137, 172, 244, 264, 265, 312, 478, 479, 846, 856, 868, 880], "tsv": [70, 330, 880], "kohm": 70, "passiv": [70, 199], "accept": [70, 94, 141, 170, 172, 173, 189, 200, 201, 202, 205, 206, 207, 215, 259, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 314, 344, 359, 377, 378, 379, 385, 387, 478, 479, 502, 560, 574, 575, 685, 687, 688, 690, 691, 702, 704, 748, 772, 779, 780, 786, 804, 833, 839, 858, 880], "from_list": 70, "impedance_cmap": 70, "cn": [70, 810], "cax": [70, 112, 116, 127, 147, 231], "omega": [70, 109], "hopefulli": [70, 199, 241, 450], "convinc": [70, 152], "tenk": [70, 71, 244, 566, 567], "kayser": [70, 71, 244, 566, 567], "electroencephalogram": [70, 244, 566], "offici": [70, 71, 191, 244, 502, 558, 566, 567, 614, 839, 847, 861, 864, 880], "feder": [70, 244, 558, 566], "545": [70, 159, 165, 244, 566], "550": [70, 81, 163, 223, 244, 431, 566], "march": [70, 244, 566, 865, 880], "s1388": [70, 112, 244, 566], "2457": [70, 112, 195, 244, 566], "00553": [70, 244, 566], "arnaud": [70, 244, 558, 566], "delorm": [70, 244, 558, 566], "scott": [70, 112, 145, 244, 434, 473, 558, 566, 855, 880], "makeig": [70, 112, 145, 244, 434, 473, 558, 566, 855], "jneumeth": [70, 74, 202, 231, 244, 558, 566, 660, 687, 688, 690, 691], "2003": [70, 195, 241, 244, 416, 566, 855], "009": [70, 73, 121, 128, 141, 150, 170, 223, 244, 566], "eeg_bridg": [70, 85], "laplacian": [71, 195, 244, 422, 567, 645, 880], "sharper": [71, 202], "impact": [71, 138, 179, 200, 241, 410, 880], "166799": [71, 168, 183, 204], "714": [71, 168, 183, 196, 204, 231], "date": [71, 73, 76, 81, 82, 83, 90, 93, 127, 142, 147, 152, 168, 169, 170, 190, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 221, 223, 256, 258, 264, 265, 266, 267, 269, 478, 479, 480, 490, 493, 589, 837, 839, 880], "decemb": [71, 73, 76, 81, 82, 83, 90, 93, 127, 142, 147, 152, 168, 169, 170, 199, 200, 201, 203, 205, 206, 207, 208, 210, 215, 216, 217, 218, 223], "2002": [71, 73, 76, 83, 90, 93, 112, 127, 142, 147, 152, 167, 168, 169, 170, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 215, 216, 217, 218, 223, 244, 258, 525, 682, 684, 689, 862], "gmt": [71, 73, 76, 81, 82, 83, 90, 93, 127, 142, 147, 152, 168, 169, 170, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 215, 216, 217, 218, 223], "146": [71, 73, 76, 83, 90, 93, 112, 127, 142, 147, 152, 159, 167, 168, 169, 170, 196, 199, 200, 201, 203, 205, 206, 207, 208, 210, 215, 216, 217, 218, 223, 231, 244], "172": [71, 83, 93, 96, 127, 168, 169, 170, 196, 199, 200, 202, 203, 206, 207, 208, 210, 215, 216, 217, 218, 226, 230, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 660, 665, 700, 703], "hh": [71, 73, 76, 81, 82, 83, 90, 93, 127, 142, 147, 152, 168, 169, 199, 200, 201, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 223], "ss": [71, 73, 76, 81, 82, 83, 90, 93, 127, 142, 147, 152, 168, 169, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 218, 223, 862], "raw_csd": 71, "compute_current_source_dens": [71, 645, 870, 880], "421": [71, 107, 110, 143, 163, 177, 183, 204, 209, 222, 226, 229, 230, 231], "evoked_csd": 71, "stiff": [71, 567], "spline": [71, 78, 200, 244, 264, 265, 266, 267, 478, 479, 567, 862, 880], "flexibl": [71, 144, 173, 190, 212, 748, 880], "hspace": [71, 73, 127, 226], "set_size_inch": [71, 204], "this_evoked_csd": 71, "contour": [71, 101, 120, 159, 173, 240, 256, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 584, 700, 702, 704, 765, 766, 780, 783, 784, 787, 791, 800, 803, 808, 810, 880], "n\u03bb\u00b2": 71, "perrin": [71, 78, 200, 244, 567, 862], "pernier": [71, 78, 200, 244, 567, 716, 726, 727, 730, 862], "bme": [71, 244, 567], "1987": [71, 177, 202, 244, 567], "326089": [71, 244, 567], "jacqu": [71, 78, 200, 244, 567, 716, 726, 727, 730, 862], "olivi": [71, 78, 200, 244, 354, 558, 567, 716, 726, 727, 730, 862], "fran\u0107oi": [71, 78, 200, 244, 567, 862], "echalli": [71, 78, 200, 244, 567, 862], "184": [71, 75, 78, 170, 200, 231, 244, 567, 595, 862], "187": [71, 75, 78, 170, 200, 209, 226, 230, 231, 244, 558, 567, 862], "90180": [71, 78, 200, 244, 567, 862], "mike": [71, 244, 567], "cohen": [71, 119, 129, 244, 567, 714, 716, 726, 730, 765, 880], "theori": [71, 166, 179, 210, 244, 567, 588], "j\u00fcrgen": [71, 205, 244, 558, 567], "craig": [71, 244, 567], "methodologi": [71, 101, 244, 354, 567], "electrophysiologi": [71, 79, 135, 244, 567], "173": [71, 146, 159, 170, 226, 231, 244, 277, 567], "ijpsycho": [71, 244, 567], "069": [71, 85, 146, 149], "308": [71, 85, 170, 196, 209, 231], "eeg_csd": [71, 85], "eog_event_id": 72, "eog_ev": [72, 201, 258, 571, 579, 582], "find_eog_ev": [72, 199, 201, 217, 258, 571, 575, 857, 870, 880], "add_ev": [72, 173, 274, 478, 479, 880], "audr": 72, "visr": 72, "pick_ch": 72, "dc": [72, 167, 169, 173, 191, 199, 201, 202, 203, 204, 205, 207, 212, 216, 259, 264, 266, 267, 269, 341, 478, 479, 558, 560, 588, 801, 835, 865, 880], "offset": [72, 93, 137, 162, 169, 173, 192, 199, 201, 202, 204, 205, 206, 207, 212, 215, 216, 217, 258, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 361, 439, 451, 478, 479, 561, 602, 615, 680, 700, 703, 748, 835, 865, 880], "saccad": [72, 173, 192, 199, 201, 204, 205, 207, 557], "firwin2": [72, 147, 173, 192, 199, 201, 202, 204, 205, 207, 264, 265, 266, 267, 412, 421, 446, 448, 449, 478, 479, 880], "hann": [72, 84, 108, 109, 147, 173, 199, 201, 202, 204, 205, 207, 264, 265, 266, 267, 421, 446, 448, 449, 478, 479, 531, 532, 651, 652, 653, 665, 880], "1502": [72, 173, 201, 205], "481": [72, 85, 231], "eog_artifact_histogram": [72, 85], "basic": [73, 83, 112, 151, 152, 159, 162, 163, 166, 167, 172, 173, 174, 177, 193, 199, 204, 205, 206, 207, 210, 215, 218, 219, 223, 242, 243, 244, 256, 264, 269, 273, 312, 328, 373, 389, 439, 445, 488, 555, 702, 810, 856, 862, 880], "thorough": [73, 166, 200, 863], "modul": [73, 135, 141, 143, 144, 146, 147, 150, 151, 152, 162, 167, 168, 169, 170, 171, 172, 173, 190, 191, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 215, 216, 217, 218, 221, 239, 241, 256, 347, 489, 552, 699, 745, 748, 838, 839, 846, 851, 859, 862, 868, 869, 870, 871, 872, 875, 878, 880], "eogregress": [73, 204, 212, 598, 803, 870, 880], "elimin": [73, 170, 204, 206, 210, 226, 234, 236, 355, 356, 357, 410, 580, 859, 862, 880], "slow": [73, 128, 138, 142, 145, 151, 202, 204, 211, 244, 264, 265, 402, 403, 415, 531, 532, 586, 718, 738, 780, 839, 856], "drift": [73, 142, 202, 204, 211, 212, 558, 602, 880], "1653": [73, 74], "offpca": [73, 76, 93, 168, 169, 170, 199, 200, 201, 203, 205, 206, 207, 210, 215, 216, 217, 218, 223], "offaverag": [73, 93, 170, 201, 205], "raw_clean": [73, 84, 204, 596], "evoked_befor": 73, "evoked_aft": 73, "epochs_aft": 73, "spatial_color": [73, 94, 99, 129, 138, 145, 151, 152, 207, 218, 221, 264, 265, 266, 267, 478, 479, 702, 704, 782, 785, 802, 880], "905": [73, 231], "334": [73, 85, 109, 170, 195, 209, 231], "eog_regress": [73, 85], "intermitt": 74, "extern": [74, 152, 181, 189, 210, 244, 264, 265, 266, 267, 341, 343, 347, 431, 440, 441, 442, 443, 478, 479, 558, 568, 569, 577, 588, 855, 856, 862, 880], "magnet": [74, 79, 81, 119, 129, 135, 151, 157, 177, 189, 203, 204, 212, 231, 244, 342, 525, 558, 765, 835, 840, 855, 856], "fail": [74, 207, 358, 365, 429, 431, 460, 494, 495, 568, 569, 577, 588, 606, 608, 612, 637, 639, 828, 839, 861, 880], "succe": [74, 162, 172, 845], "choos": [74, 82, 114, 115, 136, 142, 147, 152, 161, 163, 181, 182, 190, 195, 199, 202, 204, 205, 210, 228, 241, 257, 264, 265, 271, 272, 275, 277, 278, 279, 280, 319, 451, 525, 533, 557, 563, 570, 578, 581, 588, 615, 663, 666, 686, 748, 764, 767, 806, 811, 812, 837, 839, 859, 861, 880], "made": [74, 116, 156, 173, 199, 202, 226, 264, 265, 270, 272, 277, 278, 280, 314, 328, 486, 602, 665, 779, 781, 811, 837, 839, 856, 861, 880], "whose": [74, 95, 145, 169, 171, 189, 196, 223, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 439, 444, 453, 454, 473, 475, 476, 478, 479, 518, 536, 558, 563, 572, 574, 575, 578, 653, 703, 704, 772, 775, 788, 793, 802, 803, 861, 862, 865, 880], "particularli": [74, 162, 191, 204, 226, 264, 265, 266, 267, 437, 478, 479, 558, 577, 842, 862], "heavi": [74, 234, 236, 859, 880], "jeff": [74, 244, 558, 880], "hanna": [74, 244, 558, 880], "refmeg_nois": [74, 856, 870, 880], "sample_reference_meg_nois": 74, "refmeg": 74, "165353": 74, "530": [74, 81, 208, 231, 244], "30000": [74, 409], "select_pick": 74, "plot_kwarg": [74, 158, 204, 212], "raw_tog": 74, "ica_kwarg": 74, "picard": [74, 76, 83, 205, 558, 846, 880], "fit_param": [74, 76, 173, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 427, 558, 559, 880], "all_pick": 74, "ica_tog": 74, "allow_ref_meg": [74, 558], "bad_comp": 74, "find_bads_ref": [74, 558, 880], "plot_properti": [74, 83, 167, 205, 558, 866, 880], "147": [74, 170, 196, 226, 230, 231], "patient": [74, 76, 83, 137, 167, 173, 205, 880], "took": [74, 76, 83, 167, 173, 205, 558], "dpss": [74, 83, 103, 104, 138, 143, 144, 167, 173, 205, 239, 240, 264, 265, 266, 267, 423, 478, 479, 702, 704, 712, 718, 728, 731, 880], "raw_sep": 74, "ref_pick": 74, "ica_ref": 74, "ica_sep": 74, "think": [74, 145, 173, 196, 202, 226, 835, 858], "ekg": [74, 137], "cardiac": [74, 211], "ref_comp": 74, "get_sourc": [74, 558, 880], "ref_": 74, "recognis": 74, "cora": [74, 244, 558, 880], "kim": [74, 244, 558, 880], "nadia": [74, 244, 558], "voggel": [74, 244, 558], "magnetoencephalograph": [74, 244, 558], "108592": [74, 244, 558], "find_ref_artifact": [74, 85], "fnir": [75, 166, 170, 171, 193, 194, 213, 214, 244, 264, 265, 266, 267, 269, 312, 328, 330, 353, 371, 373, 439, 478, 479, 487, 501, 506, 508, 555, 590, 591, 592, 594, 595, 700, 702, 703, 704, 748, 764, 772, 781, 786, 835, 846, 862, 880], "mail": [75, 226, 850], "robertluk": 75, "net": [75, 171, 195, 244, 416, 682, 862, 880], "optical_dens": [75, 211, 870, 880], "temporal_derivative_distribution_repair": [75, 870, 880], "exact": [75, 103, 135, 203, 226, 234, 241, 244, 264, 265, 266, 267, 290, 427, 478, 479, 525, 687, 689, 690, 701, 705, 707, 708, 710, 835, 843, 862, 880], "fnirs_data_fold": [75, 211], "fnirs_motor": [75, 211, 856, 870, 880], "fnirs_cw_amplitude_dir": [75, 211], "raw_intens": [75, 211], "read_raw_nirx": [75, 191, 211, 484, 862, 870, 880], "raw_od": [75, 211], "new_annot": [75, 217], "317": [75, 170, 231], "set_annot": [75, 81, 82, 138, 169, 192, 201, 217, 258, 264, 265, 478, 479, 560, 589, 880], "23238": [75, 211], "2974": [75, 211], "464": [75, 145, 172, 209, 211, 277], "spike": [75, 83, 257, 595, 855], "person": [75, 152, 211, 269, 839, 855, 861], "optod": [75, 191, 211, 508, 592, 748, 764, 856, 880], "corrupted_data": 75, "450": [75, 81, 142, 161, 226, 277, 880], "750": [75, 81, 144, 196, 231, 856], "corrupted_od": 75, "245": [75, 112, 170, 186, 201, 226, 231, 244, 862], "8924": 75, "8923": 75, "suppli": [75, 101, 153, 173, 181, 207, 221, 226, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 360, 385, 434, 444, 445, 478, 479, 558, 572, 594, 595, 642, 700, 703, 771, 772, 791, 880], "corrected_tddr": 75, "said": [75, 176], "fishburn": [75, 244, 595], "ruth": [75, 244, 595], "ludlum": [75, 244, 595], "chandan": [75, 244, 595], "vaidya": [75, 244, 595], "andrei": [75, 244, 595], "medvedev": [75, 244, 595], "tddr": [75, 244, 595, 880], "motion": [75, 244, 562, 595, 880], "2018": [75, 84, 126, 138, 196, 205, 223, 244, 297, 298, 558, 595, 596], "025": [75, 128, 137, 141, 147, 150, 170, 192, 199, 202, 223, 226, 244, 595], "680": [75, 81, 85, 195, 196, 231], "fnirs_artifact_remov": [75, 85], "pierreablin": 76, "9009": [76, 173, 205], "run_ica": [76, 880], "t0": [76, 100, 186, 241, 257, 705, 706, 707], "fit_tim": 76, "infomax": [76, 205, 244, 558, 866, 870, 880], "779": [76, 85, 196, 231], "ica_comparison": [76, 85], "evoked_interp": 78, "product": [78, 87, 119, 124, 151, 171, 189, 190, 195, 200, 207, 244, 269, 331, 423, 680, 728, 729, 731, 732, 757, 861, 862, 880], "truncat": [78, 87, 119, 124, 151, 200, 207, 216, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 433, 439, 478, 479, 491, 700, 703, 772, 880], "evoked_interp_mn": 78, "\u03b1": [78, 143, 207, 218], "0e": [78, 195, 207], "672": [78, 85, 196, 231], "interpolate_bad_channel": [78, 85], "tomographi": [79, 135, 244, 525, 835, 862, 880], "ct": [79, 470, 583, 738, 880], "scan": [79, 135, 156, 167, 177, 181, 184, 210, 269, 389, 583, 584, 840, 843, 846, 851, 865, 868], "reson": [79, 135, 244, 862], "mr": [79, 470, 738, 862, 868, 880], "seeg": [79, 135, 137, 139, 140, 166, 170, 215, 221, 264, 265, 266, 267, 269, 277, 279, 311, 312, 316, 366, 371, 373, 439, 443, 462, 478, 479, 484, 493, 554, 555, 556, 558, 630, 632, 645, 695, 700, 702, 703, 704, 748, 764, 770, 804, 835, 836, 846, 862, 880], "sample_seeg_ieeg": [79, 135, 136], "1310640": [79, 135, 136], "1370605": [79, 135, 136], "411": [79, 135, 136, 244, 354], "1371": [79, 135, 136, 158, 196, 239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 712, 718], "misc_path": [79, 115, 135, 136, 183], "gui": [79, 135, 158, 159, 161, 264, 265, 271, 272, 275, 278, 279, 280, 308, 478, 479, 558, 764, 778, 795, 801, 806, 811, 837, 839, 843, 845, 846, 853, 855, 857, 859, 870, 880], "pyvista": [79, 115, 135, 172, 182, 262, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 748, 750, 758, 762, 764, 776, 804, 806, 807, 811, 813, 818, 837, 838, 857, 868, 880], "set_3d_backend": [79, 135, 819, 837, 870, 880], "pyvistaqt": [79, 135, 172, 271, 275, 279, 758, 806, 813, 819, 837, 838, 880], "thing": [79, 112, 142, 146, 152, 161, 172, 173, 182, 189, 200, 202, 215, 223, 231, 234, 236, 312, 478, 479, 839, 859, 880], "associ": [79, 135, 138, 145, 169, 173, 192, 199, 206, 207, 209, 226, 228, 244, 258, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 418, 461, 478, 479, 520, 612, 614, 650, 682, 687, 692, 700, 703, 770, 778, 779, 781, 782, 784, 799, 800, 837, 839, 862, 865, 880], "intens": [79, 135, 144, 161, 182, 183, 191, 205, 266, 267, 271, 272, 275, 278, 279, 280, 282, 534, 535, 583, 748, 783, 806, 811, 835, 880], "ct_orig": [79, 135], "sample_seeg_ct": [79, 135], "sample_seeg": [79, 135, 136], "fiduci": [79, 125, 135, 137, 157, 160, 161, 171, 189, 190, 312, 315, 316, 325, 335, 336, 365, 366, 367, 386, 482, 485, 502, 510, 614, 639, 764, 835, 855, 862, 865, 880], "tkreg": [79, 135], "scanner": [79, 161, 277, 472, 856, 862], "make_dig_montag": [79, 264, 265, 266, 267, 269, 312, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 478, 479, 501, 862, 870, 880], "on_miss": [79, 259, 264, 265, 266, 267, 269, 284, 285, 316, 348, 349, 402, 437, 457, 478, 479, 700, 702, 703, 704, 781, 880], "haven": [79, 141, 217, 839, 863, 880], "head_ct_t": 79, "invert_transform": [79, 81, 136], "compute_native_head_t": [79, 135, 136, 160, 183, 312, 870, 880], "misnorm": 79, "launch": [79, 469, 546, 837, 839, 843, 845, 880], "viewer": [79, 135, 271, 272, 275, 278, 279, 280, 748, 806, 811, 835, 868, 880], "locate_ieeg": [79, 135, 870, 880], "programmat": [79, 264], "shaft": [79, 856, 868], "set_ra": 79, "mark_channel": 79, "lent": [79, 136], "unless": [79, 168, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 410, 413, 417, 420, 423, 426, 427, 429, 434, 453, 455, 466, 468, 473, 475, 476, 478, 479, 488, 517, 520, 521, 531, 532, 536, 541, 542, 557, 558, 563, 570, 571, 588, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 738, 772, 778, 779, 780, 783, 787, 791, 795, 801, 802, 803, 839, 861, 862, 880], "recon": [79, 116, 136, 156, 161, 309, 366, 544, 880], "fortun": [79, 202, 206, 862], "apply_volume_registration_point": [79, 870, 880], "didn": [79, 141, 145, 264, 445, 703, 880], "enough": [79, 103, 159, 181, 203, 204, 205, 207, 210, 215, 226, 241, 261, 264, 265, 266, 267, 273, 305, 306, 312, 410, 417, 429, 478, 479, 557, 558, 572, 695, 700, 702, 703, 704, 757, 765, 772, 778, 780, 782, 784, 787, 788, 791, 795, 798, 800, 801, 802, 803, 804, 808, 810, 843, 861, 862, 880], "reg_affin": [79, 135, 585, 736, 737, 738], "99270756": [79, 135], "03243313": [79, 135], "11610254": [79, 135], "094156": [79, 135], "04374389": [79, 135], "99439665": [79, 135], "09623816": [79, 135], "58320673": [79, 135], "11233068": [79, 135], "10061512": [79, 135], "98856381": [79, 135], "45551601": [79, 135], "head_mri_t": [79, 136], "add_sensor": [79, 116, 135, 136, 137, 191, 211, 748, 880], "175": [79, 85, 135, 138, 143, 151, 170, 195, 226, 231, 244, 558], "1351": 79, "locate_ieeg_micro": [79, 85], "bilater": [80, 207, 648, 880], "repeat": [80, 93, 101, 113, 135, 141, 162, 166, 168, 206, 207, 215, 216, 226, 232, 233, 237, 238, 258, 264, 265, 266, 267, 269, 275, 277, 360, 434, 478, 524, 525, 539, 555, 558, 572, 597, 615, 630, 672, 681, 683, 684, 688, 691, 692, 703, 730, 748, 786, 839, 847, 859, 880], "maxwell_filt": [80, 185, 209, 210, 431, 568, 577, 589, 790, 859, 870, 880], "head_po": [80, 81, 209, 210, 431, 577, 588, 651, 652, 653, 665, 880], "chpi": [80, 81, 123, 170, 184, 209, 210, 256, 264, 265, 266, 267, 269, 274, 311, 431, 478, 479, 555, 562, 565, 588, 651, 652, 653, 665, 700, 702, 703, 704, 771, 778, 801, 835, 862, 868, 869, 870, 880], "read_head_po": [80, 209, 210, 342, 344, 350, 352, 431, 577, 588, 651, 652, 653, 665, 870], "simulated_quat": 80, "simulated_movement_raw": 80, "raw_stat": 80, "simulated_stationary_raw": 80, "34208": 80, "955": [80, 83, 144, 196, 231], "backward": [80, 202, 256, 264, 265, 266, 267, 371, 410, 416, 417, 421, 438, 445, 446, 448, 449, 478, 479, 531, 702, 704, 748, 780, 789, 813, 862, 880], "plot_head_posit": [80, 81, 209, 210, 870, 880], "quiver": [80, 262, 748, 776, 790], "306m": [80, 109, 116, 123, 124, 151, 157, 159, 171, 173, 184], "topo_kwarg": [80, 142], "evoked_stat": 80, "naiv": [80, 230], "therebi": [80, 176, 204, 206, 728, 731, 862], "third": [80, 94, 95, 152, 170, 173, 189, 207, 211, 217, 258, 259, 264, 438, 439, 451, 452, 478, 479, 519, 553, 558, 614, 615, 690, 691, 704, 781, 825, 839, 862], "restor": [80, 201, 208, 266, 267, 410, 414, 558, 559, 600, 748, 826, 880], "raw_sss": [80, 173, 210, 256, 478, 479, 498, 588], "evoked_raw_mc": 80, "harmon": [80, 93, 184, 185, 192, 199, 203, 209, 210, 241, 862], "fourth": [80, 202, 217, 468, 862], "cleanli": [80, 170], "evoked_evo_mc": 80, "average_mov": [80, 210, 588, 870, 880], "163": [80, 85, 170, 196, 209, 226, 230, 231, 233, 277], "movement_compens": [80, 85], "contamin": [81, 202, 205, 244, 558], "similarli": [81, 99, 112, 144, 150, 172, 196, 202, 208, 211, 258, 558, 772, 857, 862], "suffer": [81, 855], "adonai": [81, 82, 880], "nune": [81, 82, 244, 660, 880], "bst_auditori": [81, 82, 192, 870], "annotate_mov": [81, 209, 870, 880], "compute_average_dev_head_t": [81, 562, 870, 880], "data_path_meg": 81, "raw_fname1": [81, 192], "s01_aef_20131218_01": [81, 82, 192], "raw_fname2": [81, 192], "s01_aef_20131218_02": [81, 192], "mismatch": [81, 161, 162, 192, 354, 444, 533, 805, 880], "on_mismatch": [81, 192, 354, 361, 363, 826, 880], "350": [81, 116, 117, 135, 142, 161, 170, 226, 231], "264": [81, 82, 112, 152, 170, 192, 231, 244], "s01_20131218_01": [81, 82, 192], "864000": [81, 82, 192], "263": [81, 82, 112, 120, 130, 170, 192, 209, 210, 231], "eab": [81, 82], "s01": [81, 82], "lt": [81, 115], "br": 81, "gt": 81, "chpi_loc": [81, 209, 342, 344, 345, 346], "extract_chpi_locs_ctf": [81, 342, 344, 870, 880], "compute_head_po": [81, 209, 210, 342, 345, 588, 870, 880], "original_head_dev_t": 81, "average_head_dev_t": 81, "val": [81, 101], "val_ori": 81, "010": [81, 94, 128, 141, 150, 156, 170, 223, 244], "020": [81, 128, 141, 150, 160, 165, 170, 223, 230, 233], "090": [81, 209], "160": [81, 82, 84, 123, 159, 170, 171, 172, 189, 196, 226, 231, 244, 338, 536, 570, 578, 581, 657, 662], "260": [81, 112, 170, 209, 226, 231, 597, 856], "280": [81, 112, 170, 171, 209, 231, 338, 880], "290": [81, 112, 145, 170, 185, 209, 231, 244, 660], "490": [81, 209, 231], "510": [81, 145, 209, 226, 231, 241], "520": [81, 231], "540": [81, 223, 231, 244, 297, 298], "560": [81, 178, 208, 231], "580": [81, 127, 130, 150, 155, 209, 231], "620": [81, 231], "640": [81, 184, 209, 221], "690": [81, 195, 196, 231], "710": [81, 196, 209, 244, 566], "720": [81, 106, 110, 167, 175, 196, 209, 244, 566], "730": [81, 179, 188, 195, 196], "740": [81, 196, 231], "760": [81, 196, 209, 231], "770": [81, 196], "780": [81, 196, 239, 243], "790": [81, 209, 231], "810": [81, 209, 231], "820": [81, 147, 149], "830": [81, 196, 231], "840": [81, 209], "850": [81, 209, 880], "880": [81, 181, 209, 231, 244, 297, 298], "910": [81, 196, 231], "920": [81, 101, 144, 227, 231], "930": [81, 209, 231], "940": [81, 231], "950": [81, 209, 231, 241], "970": [81, 209, 231], "980": [81, 205, 209, 231], "990": [81, 196, 209], "351": [81, 170, 209], "353": [81, 170, 209, 226], "355": [81, 170, 231], "357": [81, 170, 195, 202, 226, 231], "358": [81, 170, 231], "182": [81, 106, 170, 192, 196, 209], "361": [81, 170, 209, 231, 235], "367": [81, 170, 200, 231], "368": [81, 170, 172, 231, 234], "388": [81, 191, 194, 226, 231, 244], "394": [81, 186, 188, 209, 226, 231, 682], "397": [81, 196, 231], "409": [81, 119, 196, 226, 244, 765], "mean_distance_limit": [81, 562], "0015": 81, "annotation_mov": 81, "hpi_disp": [81, 562], "disp": 81, "0015m": 81, "0038m": 81, "new_dev_head_t": 81, "show_ax": [81, 123, 125, 157, 158, 160, 183, 184, 313, 764, 797, 880], "outer_skin": [81, 109, 118, 157, 159, 160, 162, 173, 764, 855, 856, 862], "ctf_275": [81, 123, 185], "024": [81, 85, 128, 141, 150, 170, 223, 231, 244, 687, 688, 690, 691], "movement_detect": [81, 85], "contract": [82, 861], "clench": [82, 205], "jaw": [82, 205], "swallow": [82, 199, 205], "twitch": 82, "cranial": 82, "notic": [82, 84, 141, 142, 144, 146, 150, 151, 152, 157, 161, 163, 167, 168, 171, 176, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 215, 217, 218, 221, 222, 577, 839], "annotate_muscle_zscor": [82, 870, 880], "taken": [82, 94, 138, 143, 200, 204, 206, 207, 231, 234, 241, 257, 258, 266, 267, 269, 270, 274, 275, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 473, 475, 476, 477, 478, 479, 536, 586, 606, 701, 712, 788, 801, 856, 861, 880], "analyt": [82, 113, 244, 264, 265, 266, 267, 478, 479, 880], "divid": [82, 101, 127, 143, 144, 145, 148, 149, 163, 166, 210, 226, 228, 231, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 287, 476, 478, 479, 518, 541, 542, 563, 566, 570, 588, 622, 677, 687, 690, 700, 702, 703, 704, 715, 723, 780, 804, 808, 835, 859, 863, 880], "squar": [82, 113, 128, 141, 150, 151, 152, 163, 169, 170, 179, 190, 202, 215, 221, 223, 226, 228, 239, 244, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 297, 298, 327, 410, 417, 454, 478, 479, 533, 540, 557, 558, 572, 680, 685, 687, 688, 690, 691, 700, 701, 702, 704, 748, 765, 773, 774, 780, 782, 787, 789, 791, 794, 800, 803, 806, 808, 810, 811, 835, 859, 862, 865, 880], "hundr": [82, 205, 206, 468, 837], "bad_muscl": [82, 563], "min_length_good": [82, 563], "fraction": [82, 113, 145, 176, 199, 205, 226, 326, 531, 540, 558, 576, 695, 792, 861, 880], "notch": [82, 192, 203, 212, 347, 449, 478, 479], "1981": 82, "603": [82, 231], "scores_muscl": [82, 563], "threshold_muscl": 82, "annot_muscl": 82, "filter_freq": [82, 563], "zscore": [82, 287, 541, 542, 558, 700, 703, 808], "164": [82, 170, 202, 209, 226, 230, 231, 244, 687, 688, 690, 691], "196": [82, 170, 226, 230, 231], "muscle_detect": [82, 85], "gross": [83, 244, 410], "widespread": [83, 205], "recover": 83, "ubiquit": 83, "postur": [83, 205], "mainten": [83, 207, 839, 880], "appropri": [83, 147, 150, 163, 167, 183, 184, 191, 201, 205, 207, 210, 221, 226, 228, 230, 241, 244, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 318, 324, 360, 388, 389, 478, 479, 522, 536, 686, 748, 772, 801, 806, 811, 837, 839, 854, 859, 862, 865, 880], "wouldn": [83, 880], "pronounc": [83, 202, 859], "simultan": [83, 138, 143, 196, 203, 205, 218, 418, 468, 501, 520, 602, 610, 689, 856, 862, 868, 880], "18019": 83, "1983": [83, 204, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 557, 603, 700, 703], "18020": 83, "exclus": [83, 171, 200, 205, 495, 553, 558, 792, 794, 795, 880], "mdash": [83, 205], "plot_sourc": [83, 205, 264, 265, 478, 479, 558, 778, 795, 801, 880], "85861": 83, "103880": 83, "criteria": [83, 141, 167, 201, 206, 207, 211, 257, 264, 265, 274, 553, 558, 880], "slope": [83, 189, 202, 256, 257, 269, 341, 342, 502, 558, 880], "peripher": [83, 558], "pole": [83, 161], "foci": [83, 748, 880], "blob": [83, 234, 235], "worth": [83, 101, 150, 227, 244, 393, 486, 493, 839, 856, 857, 859], "fire": 83, "fuzzi": 83, "textbook": [83, 206, 244, 682], "temporali": 83, "ear": [83, 167, 171, 181, 856], "muscle_idx": [83, 558], "log_scal": [83, 558, 793], "blink_idx": 83, "heartbeat_idx": 83, "muscle_idx_auto": 83, "find_bads_muscl": [83, 558, 880], "s001r01": 83, "s002": [83, 205], "s002r01": 83, "dhani": [83, 244, 558], "dharmaprani": [83, 244, 558], "hoang": [83, 244, 558], "nguyen": [83, 244, 558], "trent": [83, 244, 558], "lewi": [83, 244, 558, 862], "delosangel": [83, 244, 558], "willoughbi": [83, 244, 558], "kenneth": [83, 145, 244, 434, 558], "pope": [83, 244, 558], "38th": [83, 244, 558], "annual": [83, 207, 244, 558, 864], "confer": [83, 145, 244, 434, 558, 864], "societi": [83, 191, 244, 354, 525, 558, 729, 732, 862], "embc": [83, 205, 244, 558], "828": [83, 244, 558], "orlando": [83, 244, 558], "fl": [83, 244, 558], "usa": [83, 199, 244, 558], "7590828": [83, 244, 558], "muscle_ica": [83, 85], "otp": [84, 85, 596], "flux": [84, 210, 212, 264, 265, 266, 267, 478, 479, 555, 700, 702, 703, 704, 862], "jump": [84, 112, 145, 199, 210, 687, 688, 690, 691, 880], "bst_phantom_elekta": [84, 184], "phantom": [84, 166, 187, 188, 244, 261, 262, 264, 266, 267, 269, 302, 354, 359, 389, 430, 451, 453, 478, 489, 491, 522, 588, 764, 776, 788, 816, 856, 862, 880], "rid": [84, 230], "1522": [84, 170], "dipole_numb": 84, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [84, 184], "47000": [84, 184], "437999": [84, 184], "alongsid": [84, 146, 150, 156, 200, 205, 206, 208, 216, 799, 835, 846], "oversampled_temporal_project": [84, 870, 880], "lump": [84, 588], "compute_bia": 84, "sti201": [84, 184, 269], "make_sphere_model": [84, 125, 157, 184, 185, 186, 208, 515, 862, 870, 880], "r0": [84, 125, 157, 184, 185, 186, 522], "head_radiu": [84, 125, 157, 184, 185, 186, 522, 880], "036": [84, 106, 114, 141, 150, 170, 184, 223, 244, 660], "actual_po": [84, 184, 186], "get_phantom_dipol": [84, 184, 389, 870, 880], "1fmm": 84, "worst": [84, 121, 354, 359, 656, 658, 659, 880], "bias_clean": 84, "9mm": 84, "2mm": [84, 862], "4mm": 84, "samu": [84, 163, 210, 244, 569, 588, 596, 665, 859, 880], "taulu": [84, 163, 210, 244, 431, 569, 588, 596, 665, 859, 880], "2017": [84, 135, 152, 205, 244, 392, 558, 596, 660, 665], "2734641": [84, 244, 596], "476": [84, 85, 119, 130, 209, 226, 231, 244, 410], "135": [85, 118, 125, 152, 159, 170, 196, 206, 207, 208, 209, 226, 231, 244, 277, 862], "auto_examples_preprocess": 85, "virtual_evok": [85, 87], "984": [85, 87, 231], "xdawn_denois": [85, 88], "774": [85, 88, 196, 231], "shift_evok": [85, 86], "hut": 86, "2332": [86, 170, 552], "ax3": [86, 90, 99, 184, 195], "magnomet": 87, "virt_evok": 87, "as_typ": [87, 264, 265, 266, 267, 880], "plot_epochs_imag": [88, 117, 558, 791, 793, 870, 880], "signal_cov": [88, 559], "xd": 88, "1388": 88, "41640": 88, "epochs_denois": 88, "brief": [90, 95, 167, 199, 218, 226, 839], "simplest": [90, 95, 169, 196, 212, 226, 862], "kostiantyn": [90, 94, 95, 244, 660, 880], "maksymenko": [90, 94, 95, 244, 660, 880], "functool": [90, 226, 271, 272, 275, 278, 279, 280, 839], "partial": [90, 150, 152, 167, 201, 215, 216, 226, 244, 264, 265, 271, 272, 275, 278, 279, 280, 318, 590, 729, 732, 748, 772, 813, 817, 856, 868, 880], "region_localization_error": [90, 870], "f1_score": [90, 870], "precision_scor": [90, 870], "recall_scor": [90, 870], "cosine_scor": [90, 870], "peak_position_error": [90, 870], "spatial_deviation_error": [90, 870], "determinist": [90, 205, 880], "middl": [90, 95, 112, 135, 161, 167, 202, 206, 221, 262, 269, 271, 272, 275, 278, 279, 280, 446, 767, 776, 806, 811, 812, 839, 862, 880], "frontal": [90, 95, 167, 199, 205, 207, 215, 223, 305, 635, 748], "selected_label": [90, 95], "term": [90, 103, 126, 135, 167, 169, 195, 202, 206, 226, 230, 236, 241, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 330, 341, 377, 378, 379, 387, 478, 479, 533, 545, 567, 660, 700, 703, 715, 723, 835, 839, 856, 861, 862, 863, 868, 880], "label_region": 90, "select_sourc": [90, 95, 870, 880], "1915": 90, "One": [90, 96, 97, 100, 142, 144, 150, 151, 152, 156, 158, 167, 172, 179, 192, 202, 204, 205, 212, 215, 226, 244, 264, 265, 266, 267, 274, 312, 314, 437, 443, 478, 479, 558, 682, 689, 766, 778, 779, 795, 801, 839, 855, 862, 864, 865, 880], "label_dipol": 90, "source_time_seri": [90, 94, 95], "sin": [90, 92, 93, 94, 95, 114, 202, 221, 222, 223, 341, 597, 666], "n_event": [90, 95, 259, 264, 265, 269, 274, 283, 363, 438, 439, 451, 478, 479, 495, 519, 553, 561, 580, 602, 612, 614, 615, 650, 686, 703, 778, 781, 825, 835], "sourcesimul": [90, 94, 95, 665, 870, 880], "source_simulator_region": 90, "add_data": [90, 94, 95, 116, 271, 272, 275, 278, 279, 280, 650, 748, 806, 811], "source_simulator_dipol": 90, "gaussian": [90, 94, 114, 121, 153, 162, 163, 202, 205, 222, 226, 264, 265, 266, 267, 473, 586, 654, 716, 726, 729, 730, 732, 779, 788, 809, 855, 859, 862], "raw_region": 90, "simulate_raw": [90, 93, 94, 95, 223, 652, 653, 664, 666, 667, 870, 880], "make_ad_hoc_cov": [90, 93, 95, 223, 261, 298, 870, 880], "add_nois": [90, 93, 94, 95, 223, 652, 653, 665, 870, 880], "iir_filt": [90, 92, 93, 95, 223, 654, 664], "raw_dipol": 90, "cos2": [90, 93, 94, 95, 223, 651, 652, 653, 665], "498": [90, 209, 226, 231], "evoked_region": 90, "evoked_dipol": 90, "stc_true_region": 90, "get_stc": [90, 94, 650], "start_sampl": [90, 215, 650], "stop_sampl": [90, 215, 650], "stc_true_dipol": 90, "stc_est_region": 90, "stc_est_dipol": 90, "0004": 90, "2931": 90, "34986e": 90, "scorer": [90, 416, 427, 880], "rle": [90, 660], "region_result": 90, "thx": 90, "per_sampl": [90, 655, 656, 657, 658, 659, 660, 661, 662], "ax4": 90, "col": [90, 112, 748, 880], "super": [90, 241], "ticklabel_format": 90, "style": [90, 127, 135, 151, 152, 172, 189, 211, 256, 259, 261, 264, 265, 266, 267, 274, 279, 280, 297, 410, 416, 417, 469, 478, 479, 502, 557, 558, 700, 702, 703, 704, 748, 764, 765, 772, 779, 780, 783, 785, 786, 787, 795, 796, 801, 803, 808, 809, 810, 812, 880], "sci": [90, 211, 592], "scilimit": 90, "tweak": [90, 114, 127, 241, 837, 857, 859], "dipole_result": 90, "plot_stc_metr": [90, 91], "auto_examples_simul": 91, "simulated_raw_data_using_subject_anatomi": [91, 94], "237": [91, 94, 112, 170, 230], "simulate_raw_data": [91, 93], "484": [91, 93, 144, 204, 231, 244, 557, 603], "source_simul": [91, 94, 95], "simulate_evoked_data": [91, 92], "316": [91, 92, 145, 170, 195, 226, 231, 244, 416], "fit_iir_model_raw": [92, 111, 870, 880], "templat": [92, 93, 125, 135, 136, 156, 158, 164, 165, 166, 171, 177, 231, 244, 268, 269, 277, 284, 302, 312, 316, 317, 318, 328, 329, 330, 334, 365, 373, 388, 435, 479, 493, 521, 572, 585, 607, 630, 649, 764, 816, 835, 853, 880], "read_proj": [92, 111, 131, 143, 192, 206, 264, 265, 266, 267, 274, 478, 479, 831, 870], "sample_audvis_ecg": [92, 111, 131, 143, 173, 206, 256], "randomst": [92, 93, 94, 114, 160, 195, 202, 223, 226, 511, 558, 586, 605, 652, 653, 654, 663, 664, 666, 687, 688, 689, 690, 691, 880], "randn": [92, 114, 160, 195, 202, 223, 226, 234, 235, 236], "high_resolut": [92, 807], "wronkiewicz": [93, 880], "wronk": 93, "add_ecg": [93, 94, 653, 665, 870, 880], "add_eog": [93, 94, 652, 665, 870, 880], "epoch_dur": [93, 566], "stagger": 93, "sinusoid": [93, 94, 114, 184, 185, 202, 209, 221, 223, 341, 449, 478, 479, 666, 835], "10hz": 93, "global": [93, 113, 121, 128, 143, 145, 150, 151, 156, 163, 167, 184, 207, 244, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 434, 746, 772, 779, 782, 785, 787, 788, 806, 811, 835, 839, 859, 880], "n_samp": [93, 215, 223, 880], "25e": 93, "1e9": [93, 185, 223], "plt_show": [93, 181, 226], "input": [93, 94, 114, 156, 173, 189, 195, 196, 202, 207, 210, 215, 226, 230, 231, 236, 256, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 283, 314, 330, 355, 356, 357, 361, 368, 410, 411, 413, 414, 416, 417, 418, 420, 422, 427, 434, 439, 445, 467, 469, 470, 475, 478, 479, 502, 504, 558, 559, 567, 568, 570, 571, 574, 575, 577, 578, 583, 601, 615, 666, 677, 679, 686, 687, 688, 690, 691, 698, 700, 718, 719, 748, 749, 751, 752, 764, 772, 779, 783, 787, 795, 806, 809, 811, 855, 861, 862, 865, 880], "millimet": [93, 94, 157, 161, 183, 335, 339, 453, 468, 494, 511, 612, 862, 880], "calc": 93, "orphan": [93, 212], "ivana": [94, 880], "kojcic": [94, 880], "deslauri": [94, 95, 880], "gauthier": [94, 95, 880], "sam": [94, 95, 880], "doesn": [94, 141, 157, 171, 172, 205, 207, 208, 210, 215, 228, 231, 241, 377, 378, 379, 380, 382, 383, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 547, 558, 561, 575, 579, 588, 608, 647, 701, 703, 720, 793, 839, 847, 855, 859, 880], "fname_info": 94, "g_temp_sup": 94, "g_t_transv": 94, "s_calcarin": 94, "vice": [94, 134, 161, 202, 275, 862], "versa": [94, 134, 161, 202, 275, 862], "moreov": [94, 138, 206, 207, 226], "ipsilater": [94, 152, 177], "activation_list": 94, "region_nam": 94, "latenc": [94, 144, 145, 146, 150, 231, 244, 266, 267, 271, 272, 275, 278, 279, 280, 434, 687, 688, 690, 691, 783, 880], "sigma": [94, 117, 128, 138, 143, 196, 226, 264, 265, 522, 693, 694, 716, 726, 738, 779, 809, 862, 865], "gf": 94, "rand": [94, 223], "100m": 94, "30m": 94, "15m": 94, "region_id": 94, "events_tmp": 94, "label_tmp": 94, "amplitude_tmp": 94, "latency_tmp": 94, "wf_tmp": 94, "evoked_aud_left": 94, "evoked_vis_right": 94, "mere": [94, 173, 205, 618, 861], "stc_aud": 94, "stc_vi": 94, "stc_diff": 94, "49264": [94, 179], "64e": [94, 179], "3254294": 94, "92023613": 94, "51105546": 94, "christoph": [94, 115, 152, 156, 195, 244, 354, 416, 684, 880], "destrieux": [94, 156, 244], "ander": [94, 156, 179, 244, 525, 862], "dale": [94, 156, 179, 244, 525, 862], "halgren": [94, 156, 244, 525], "sulci": [94, 156, 161, 222, 244], "nomenclatur": [94, 156, 215, 244], "sine": [95, 221, 256, 715, 723], "everi": [95, 103, 113, 127, 135, 142, 145, 152, 169, 173, 176, 196, 203, 204, 205, 218, 241, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 348, 459, 467, 475, 476, 478, 479, 511, 558, 560, 574, 575, 586, 605, 652, 653, 654, 663, 664, 666, 687, 688, 689, 690, 691, 700, 703, 839, 859, 860], "significantli": [96, 97, 100, 226, 229, 234, 235, 241, 271, 272, 275, 278, 279, 280, 687, 688, 690, 691, 861], "permutation_cluster_test": [96, 226, 229, 230, 691, 870, 880], "1332": [96, 97, 146, 167, 170, 228, 229, 230], "epochs1": [96, 234, 433], "condition1": [96, 234], "epochs2": [96, 234, 433], "condition2": [96, 234], "t_ob": [96, 227, 228, 234, 687, 689, 690, 880], "cluster_p_valu": [96, 228, 229, 230, 234, 235, 236], "n_permut": [96, 100, 112, 226, 227, 228, 229, 230, 231, 235, 236, 687, 688, 689, 690, 691], "tail": [96, 112, 152, 226, 228, 229, 230, 231, 234, 241, 262, 687, 688, 689, 690, 691, 776, 807, 880], "out_typ": [96, 112, 226, 228, 229, 230, 687, 688, 690, 691, 880], "stat_fun": [96, 112, 113, 226, 227, 228, 229, 230, 231, 234, 235, 236, 679, 687, 688, 690, 691], "000227": 96, "167093": 96, "2237": 96, "2520": 96, "2955": 96, "2882": 96, "2799": 96, "622": [96, 196, 231, 244, 354], "3001": 96, "717": [96, 196], "2969": [96, 335], "805": [96, 209, 231], "2915": 96, "3062": 96, "3057": 96, "3023": [96, 320, 478, 862], "erf": [96, 117, 128, 192, 199, 202, 231, 244, 558, 791, 793, 846, 880], "i_c": 96, "cluster_stats_evok": [96, 102], "discoveri": [97, 230, 244, 684, 880], "bonferroni_correct": [97, 226, 870, 880], "fdr_correct": [97, 101, 226, 230, 870], "pval": [97, 230, 678, 684, 687, 688, 690, 691], "ttest_1samp": [97, 226, 693], "n_test": [97, 689], "threshold_uncorrect": 97, "ppf": [97, 211, 226, 228, 231, 234, 235, 590, 687, 688, 690, 691], "reject_bonferroni": 97, "pval_bonferroni": 97, "threshold_bonferroni": 97, "reject_fdr": 97, "pval_fdr": 97, "indep": [97, 684], "threshold_fdr": 97, "xmin": 97, "xmax": 97, "hline": [97, 142, 266, 267, 782], "uncorrect": [97, 226], "bonferroni": [97, 449, 478, 479, 678, 689, 880], "fdr_stats_evok": [97, 102], "generalis": 99, "tradit": [99, 144, 208, 212, 727, 728, 730, 731, 772], "predictor": [99, 142, 226, 557, 603, 686], "inapplic": 99, "rerp": [99, 244, 686], "smith": [99, 126, 226, 227, 244, 387, 686, 687, 688, 690, 691], "kuta": [99, 244, 686], "169": [99, 170, 226, 231, 244, 686], "jona": [99, 101, 128, 196, 231, 244, 687, 688, 690, 691, 880], "sassenhagen": [99, 101, 128, 196, 231, 244, 687, 688, 690, 691, 880], "linear_regression_raw": [99, 102, 870, 880], "rerf": 99, "param": [99, 113, 410, 411, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 547, 559, 627, 880], "076": [99, 102, 238], "permutation_t_test": [100, 226, 870], "temporal_mask": 100, "logical_and": [100, 114], "50000": 100, "p_valu": [100, 226, 231, 449, 478, 479, 689], "significant_sensor": 100, "significant_sensors_nam": 100, "49999": 100, "0243": [100, 143, 170], "1323": [100, 170], "1333": [100, 170, 234, 236], "1613": [100, 170], "1643": [100, 170], "2423": [100, 170], "2522": [100, 170], "2622": [100, 170], "2632": [100, 170], "2643": [100, 170], "stats_pick": 100, "cbar_fmt": [100, 109, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 780, 787, 791, 800, 803, 808, 880], "sensor_permutation_test": [100, 102], "psycholinguist": [101, 226], "st\u00e9phane": [101, 227, 244, 393, 856], "dufau": [101, 227, 244, 393, 856], "grainger": [101, 227, 244, 393, 856], "katherin": [101, 227, 244, 393, 729, 732, 856], "midglei": [101, 227, 244, 393, 856], "phillip": [101, 142, 227, 244, 388, 393, 856, 880], "holcomb": [101, 227, 244, 393, 856], "pictur": [101, 227, 244, 274, 393, 856], "snapshot": [101, 173, 227, 244, 393, 818, 839, 856, 880], "megastudi": [101, 227, 244, 393, 856], "psycholog": [101, 227, 244, 393, 856], "1887": [101, 227, 244, 393, 856], "1897": [101, 227, 244, 393, 856], "0956797615603934": [101, 227, 244, 393, 856], "matt": [101, 244, 880], "davi": [101, 244], "ford": [101, 244], "friedmann": [101, 244], "pulverm\u00fcl": [101, 244], "william": [101, 195, 244, 416], "marslen": [101, 244], "wilson": [101, 244], "1383": [101, 244], "1400": [101, 244], "2006": [101, 179, 195, 210, 244, 264, 265, 536, 588, 657, 662, 729, 732], "2005": [101, 163, 210, 244, 431, 536, 569, 588, 657, 660, 662, 859], "048": [101, 141, 143, 150, 170, 184, 218, 223, 227, 244, 714, 716, 726, 730], "tal": [101, 120, 126, 244, 486, 493, 880], "linzen": [101, 120, 880], "pd": [101, 112, 137, 144, 152, 191, 192, 210], "kiloword": [101, 144, 215, 227, 870], "kword_metadata": [101, 144, 227], "epo": [101, 141, 144, 173, 227, 256, 264, 265, 611, 880], "read_epoch": [101, 141, 144, 227, 859, 862, 870, 880], "visualcomplex": [101, 144], "film": [101, 144, 227, 868], "783710": [101, 144], "cent": [101, 144], "141553": [101, 144], "shot": [101, 144], "600033": [101, 144], "cold": [101, 144], "657457": [101, 144], "945661": [101, 144], "characterist": [101, 152, 202, 203, 244, 264, 265, 402, 433, 445, 577, 835], "concret": [101, 144, 145], "imagin": [101, 112, 206], "df": [101, 112, 141, 146, 192, 215, 226, 227, 228, 234, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 541, 687, 690, 700, 702, 703, 704], "cut": [101, 112, 113, 181, 206, 241, 256, 264, 265, 266, 267, 412, 421, 446, 448, 478, 479, 570, 571, 579, 582, 588, 592, 847, 865, 880], "split_legend": [101, 231, 772], "percentil": [101, 135, 136, 137, 147, 264, 265, 271, 272, 274, 275, 278, 279, 280, 478, 479, 736, 767, 772, 778, 801, 806, 811, 812, 880], "gfp": [101, 113, 128, 143, 145, 151, 163, 167, 192, 231, 264, 265, 266, 267, 533, 772, 779, 782, 788, 805, 835, 859, 880], "7424": 101, "plot_evoked_imag": [101, 870, 880], "null": [101, 283, 436, 682, 880], "hypothesi": [101, 173, 227, 678, 682, 684, 689, 868], "colour": [101, 177, 880], "palett": [101, 112, 146], "dark": [101, 135, 173, 264, 265, 478, 479, 558, 748, 778, 795, 801, 880], "reject_h0": 101, "fdr_pval": 101, "plot_imag": [101, 128, 143, 144, 147, 151, 167, 199, 201, 211, 227, 264, 265, 266, 267, 880], "sensor_regress": [101, 102], "auto_examples_stat": 102, "csd_fourier": [103, 701, 705, 706, 707, 709, 710, 870, 880], "csd_multitap": [103, 701, 705, 706, 707, 708, 709, 718, 870, 880], "core": [103, 145, 167, 169, 172, 190, 221, 244, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 413, 420, 423, 426, 427, 453, 466, 468, 478, 479, 517, 520, 521, 531, 532, 541, 542, 563, 570, 571, 588, 640, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 780, 783, 802, 837, 838, 839, 846, 861, 880], "clariti": [103, 866], "722": [103, 195, 196, 244, 716, 726, 727, 730], "adapt": [103, 113, 167, 191, 208, 223, 226, 244, 264, 265, 266, 267, 297, 298, 415, 449, 450, 478, 479, 531, 532, 558, 588, 702, 704, 707, 710, 716, 718, 726, 744, 780, 839, 845, 856, 861, 880], "csd_fft": 103, "csd_mt": 103, "convolv": [103, 111, 202, 226, 241, 416, 423], "600hz": 103, "10th": 103, "greatli": 103, "minim": [103, 142, 170, 202, 221, 241, 264, 265, 360, 418, 433, 568, 686, 728, 731, 748, 837, 859, 862], "csd_wav": 103, "crossspectraldens": [103, 290, 297, 317, 435, 705, 706, 707, 708, 709, 710, 711, 717, 720, 774, 870, 880], "trick": [103, 200, 241, 244, 689, 843, 880], "comma": [103, 256, 839, 880], "plot_dict": [103, 240], "799": [103, 106, 145, 182, 188, 196, 231], "compute_csd": [103, 106], "taper": [104, 114, 264, 265, 266, 267, 415, 423, 449, 478, 479, 531, 532, 702, 704, 707, 710, 712, 716, 718, 726, 728, 730, 731, 780, 880], "prolat": [104, 239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 712, 718], "spheroid": [104, 239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 712, 718], "sequenc": [104, 138, 244, 256, 264, 265, 266, 267, 478, 479, 677, 702, 704, 712, 748, 780, 856, 862], "compute_source_psd_epoch": [104, 106, 531, 870, 880], "n_epochs_us": 104, "psd_avg": 104, "set_xlim": [104, 113, 152, 206], "721": [104, 106, 196, 231], "auto_examples_time_frequ": 106, "source_power_spectrum_opm": [106, 109], "time_frequency_erd": [106, 112, 880], "696": [106, 112, 196, 231], "time_frequency_global_field_pow": [106, 113], "time_frequency_simul": [106, 114], "source_label_time_frequ": [106, 107], "674": [106, 107, 209, 231], "source_space_time_frequ": [106, 110], "605": [106, 110, 231], "source_power_spectrum": [106, 108], "temporal_whiten": [106, 111], "former": [107, 143, 230, 354, 558, 861, 880], "latter": [107, 143, 152, 169, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 559, 862], "source_induced_pow": [107, 870, 880], "epochs_induc": 107, "subtract_evok": [107, 113, 204, 264, 265, 603, 880], "this_epoch": 107, "inter": [107, 135, 244, 261, 264, 265, 266, 267, 273, 282, 410, 417, 434, 478, 479, 557, 558, 572, 652, 700, 702, 704, 727, 728, 730, 731, 765, 780, 787, 791, 800, 803, 808, 810], "itc": [107, 727, 728, 729, 730, 731, 732], "baseline_mod": [107, 541, 542], "compute_source_psd": [108, 109, 532, 870, 880], "100hz": 108, "2048": [108, 111, 114, 133, 264, 265, 266, 267, 409, 478, 479, 531, 802], "psd_dspm": 108, "neuromag": [109, 157, 159, 161, 167, 169, 184, 186, 200, 207, 210, 215, 216, 217, 256, 257, 262, 264, 265, 266, 267, 269, 274, 320, 430, 451, 478, 479, 489, 495, 502, 508, 588, 610, 635, 702, 704, 778, 781, 786, 801, 835, 851, 856, 862, 865, 880], "welch": [109, 223, 239, 240, 241, 244, 264, 265, 266, 267, 478, 479, 702, 704, 719, 802, 880], "next_fast_len": 109, "src_fname": [109, 234, 235, 236], "vv_fname": 109, "squid_resting_st": 109, "vv_erm_fnam": 109, "squid_empty_room": 109, "vv_trans_fnam": 109, "opm_fnam": 109, "opm_resting_state_raw": 109, "opm_erm_fnam": 109, "opm_empty_room_raw": 109, "opm_tran": 109, "opm_coil_def_fnam": 109, "vv": 109, "simplifi": [109, 180, 202, 244, 256, 264, 265, 266, 267, 478, 479, 859, 860, 880], "housekeep": [109, 212], "raw_erm": [109, 129, 185, 192, 855], "new_sfreq": 109, "nyquist": [109, 202, 203, 880], "meg2233": 109, "meg1842": 109, "hold": [109, 192, 223, 226, 264, 265, 266, 267, 431, 478, 479, 577, 588, 698, 782, 802, 804, 835, 862, 868], "61999": 109, "60999": 109, "dist": [109, 157, 158, 211, 222, 256, 270, 277, 282, 365, 429, 462, 594, 670, 671, 672, 674, 675, 865], "make_bem_solut": [109, 159, 192, 365, 429, 460, 515, 521, 522, 607, 608, 637, 639, 828, 855, 862, 870, 880], "169022": 109, "169992": 109, "202": [109, 112, 170, 188, 209, 226, 227, 231, 865, 880], "2052": 109, "995623": 109, "029776": 109, "088592": 109, "062622": 109, "916188": 109, "395825": 109, "069381": 109, "399641": 109, "914042": 109, "993107": 109, "074371": 109, "090590": 109, "079171": 109, "995577": 109, "050589": 109, "086427": 109, "057412": 109, "994603": 109, "691": [109, 195, 231], "692": [109, 145, 196, 231, 241], "475": [109, 209, 226, 277], "485": [109, 231, 277], "489": [109, 226, 231, 241], "percentag": [109, 205, 264, 265, 560, 656, 657, 658, 659, 660, 662, 736, 777, 880], "freq_band": [109, 138], "topo": [109, 115, 143, 151, 211, 240, 264, 265, 751, 761, 772, 809, 868, 880], "stc_psd": [109, 531], "sensor_psd": [109, 531], "return_sensor": [109, 531, 532], "topo_norm": 109, "keepdim": [109, 138], "stc_norm": 109, "3660": 109, "1969": 109, "014611": 109, "18765e": 109, "291": [109, 170, 196], "34378": 109, "07671e": 109, "3720": 109, "1698": 109, "007069": 109, "0841e": 109, "46031": 109, "26253e": 109, "coverag": 109, "worthwhil": [109, 152, 205], "plot_band": 109, "inferno": [109, 137, 226], "cau": 109, "show_trac": [109, 127, 136, 271, 272, 275, 278, 279, 280, 748, 806, 811, 880], "fig_alpha": 109, "brain_alpha": [109, 272, 278, 280, 811], "7045685": 109, "96394224": 109, "07428314": 109, "profil": [109, 172, 212, 837, 839], "beneath": 109, "fig_beta": 109, "brain_beta": 109, "18935281": 109, "33488802": 109, "88328023": 109, "fig_beta_opm": 109, "brain_beta_opm": 109, "28867831": 109, "68102302": 109, "87342874": 109, "source_band_induced_pow": [110, 870, 880], "use_fft": [110, 112, 240, 423, 541, 542, 706, 709, 725, 727, 728, 730, 731], "induced_power_": 110, "proj_fnam": [111, 192], "20000": 111, "innov": 111, "d_": 111, "lfilter": [111, 264, 265, 266, 267, 445, 446, 448, 449, 478, 479], "regener": [111, 264, 265, 880], "r_": [111, 657, 662, 862], "dummi": [111, 125, 221, 236], "nfft": [111, 223], "written": [112, 172, 173, 176, 209, 217, 260, 303, 307, 442, 443, 477, 478, 479, 622, 628, 825, 830, 833, 846, 855, 868, 880], "desynchron": [112, 240, 244, 856], "conceptu": [112, 152, 202, 205, 244], "ersp": [112, 880], "perturb": 112, "goal": [112, 135, 138, 839, 857, 861, 868], "35hz": 112, "customari": [112, 862], "klotzsch": [112, 880], "cb": 112, "mpg": 112, "twoslopenorm": 112, "seaborn": [112, 146, 210], "sn": [112, 146, 210], "tfr_multitap": [112, 114, 240, 423, 727, 728, 729, 730, 732, 870, 880], "permutation_cluster_1samp_test": [112, 226, 228, 690, 870, 880], "pcluster_test": 112, "suitabl": [112, 147, 160, 162, 228, 230, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 306, 353, 373, 409, 434, 465, 478, 479, 501, 515, 687, 700, 702, 703, 704, 835, 855, 856, 862, 868], "cnorm": [112, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 880], "asymmetr": [112, 763], "rdbu": 112, "equal": [112, 141, 148, 149, 150, 152, 166, 169, 173, 176, 177, 181, 199, 202, 217, 218, 234, 236, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 286, 297, 298, 317, 353, 354, 358, 359, 369, 370, 371, 410, 417, 418, 423, 433, 435, 453, 454, 467, 473, 475, 476, 478, 479, 495, 518, 525, 536, 541, 542, 557, 558, 570, 575, 586, 593, 594, 619, 656, 681, 682, 687, 688, 690, 691, 692, 694, 695, 700, 702, 703, 704, 719, 765, 766, 772, 776, 779, 780, 781, 782, 784, 787, 788, 803, 804, 808, 810, 835, 861, 862, 866, 880], "promin": [112, 144, 199, 211, 241, 355, 356, 357], "extrem": [112, 143, 241, 266, 267, 297, 298, 321, 354, 358, 359, 369, 370, 371, 410, 417, 418, 453, 454, 473, 475, 476, 536, 687, 688, 690, 691, 788], "vcenter": 112, "step_down_p": [112, 687, 688, 690, 691], "buffer_s": [112, 226, 230, 231, 234, 235, 236, 528, 687, 688, 690, 691], "tfr_ev": 112, "gridspec_kw": [112, 127, 177, 211], "width_ratio": [112, 177, 211], "stack": [112, 142, 223, 234, 647, 743, 745, 843, 844, 847], "mask_styl": [112, 266, 267, 700, 784], "set_yscal": 112, "724718": 112, "552076": 112, "183231": 112, "226": [112, 145, 170, 185, 230, 231, 880], "229": [112, 170, 195, 226], "241": [112, 123, 170, 196, 203, 209, 226, 231, 449, 478, 479], "242": [112, 170, 209, 230, 231, 880], "251": [112, 170, 173, 175, 209, 212, 226, 230, 478, 479], "254": [112, 170, 196, 209], "528367": 112, "706422": 112, "176": [112, 143, 170, 172, 196, 230, 231, 244, 558], "228": [112, 170, 209, 226, 230, 231, 244, 573], "224": [112, 170, 172, 189, 195, 226, 230], "282": [112, 170, 196, 209, 231], "276": [112, 170, 226, 231], "285": [112, 170, 209, 226, 231], "259": [112, 130, 132, 151, 155, 170, 231, 244, 862], "278": [112, 170, 209, 231], "271": [112, 167, 170, 209, 226, 231], "581589": 112, "346448": 112, "713872": 112, "754759": 112, "360704": 112, "217": [112, 169, 170, 196, 209], "197": [112, 170, 196, 209, 226, 231, 856], "209": [112, 170, 185, 202, 220, 223, 226, 230, 231, 244], "212": [112, 170, 202, 230, 244], "992503": 112, "416450": 112, "206": [112, 170, 184, 188, 196, 226, 230, 231], "044340": 112, "070444": 112, "216": [112, 151, 155, 170, 209, 217, 220, 230, 231], "231": [112, 170, 209, 226, 230, 231], "235": [112, 159, 170, 182, 231], "epochstfr": [112, 114, 292, 529, 700, 711, 722, 730, 731, 733, 870, 880], "datafram": [112, 141, 148, 149, 150, 152, 166, 191, 192, 210, 215, 227, 239, 258, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 434, 478, 479, 615, 686, 700, 702, 703, 704, 862, 880], "to_data_fram": [112, 137, 141, 146, 150, 215, 227, 258, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 702, 703, 704, 862, 880], "0000": [112, 839], "473093": 112, "474571": 112, "764021": 112, "9875": 112, "491659": 112, "480088": 112, "762445": 112, "9750": [112, 880], "500872": 112, "469376": 112, "749421": 112, "9625": 112, "500605": 112, "449373": 112, "728686": 112, "9500": 112, "515911": 112, "443439": 112, "719536": 112, "lineplot": [112, 146], "confid": [112, 113, 143, 146, 152, 167, 177, 207, 262, 269, 558, 679, 702, 704, 772, 793, 860, 880], "long_format": [112, 146, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 702, 703, 704, 880], "freq_bound": 112, "delta": [112, 138, 202, 264, 265, 266, 267, 475, 478, 479, 541, 702, 704, 780], "theta": [112, 113, 138, 264, 265, 266, 267, 478, 479, 702, 704, 780], "freq_bands_of_interest": 112, "remove_unused_categori": 112, "reorder_categori": 112, "facetgrid": 112, "margin_titl": 112, "n_boot": 112, "axline_kw": 112, "dash": [112, 141, 151, 173, 203, 206, 210, 211, 218, 261, 264, 265, 266, 267, 478, 479, 702, 704, 772, 773, 799, 802, 880], "set_axis_label": 112, "col_templ": 112, "col_nam": [112, 269, 865], "row_templ": 112, "row_nam": [112, 268, 865], "add_legend": [112, 748], "df_mean": 112, "queri": [112, 141, 146, 150, 166, 219, 227, 239, 259, 264, 265, 437, 703], "groupbi": [112, 146, 152, 227], "reset_index": [112, 146], "col_ord": 112, "violinplot": [112, 146], "deep": [112, 138, 146, 159, 182, 202, 244, 264, 265, 266, 267, 288, 410, 411, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 478, 479, 555, 556, 559, 700, 702, 703, 704, 745, 748, 764, 862, 880], "hue_ord": 112, "gert": [112, 244], "pfurtschel": [112, 244], "fernando": [112, 244, 855], "lope": [112, 244, 855], "da": [112, 244, 855], "silva": [112, 244, 855], "principl": [112, 203, 226, 231, 244, 857, 862], "1842": [112, 170, 244], "1857": [112, 244], "00141": [112, 244], "bernhard": [112, 244, 473], "graimann": [112, 244], "jane": [112, 244], "huggin": [112, 244], "simon": [112, 244, 880], "levin": [112, 244], "ecog": [112, 115, 135, 136, 139, 140, 166, 170, 215, 221, 226, 244, 264, 265, 266, 267, 269, 275, 277, 311, 312, 321, 371, 373, 382, 439, 443, 478, 479, 493, 555, 556, 584, 630, 645, 695, 700, 702, 703, 704, 748, 764, 804, 816, 818, 835, 836, 846, 862, 880], "00697": [112, 244], "exposur": [112, 205, 244, 839], "tone": [112, 167, 244, 856], "1993": [112, 179, 244], "90110": [112, 244], "rectifi": 113, "uncertainti": [113, 239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 712, 718, 846], "importantli": [113, 114, 201, 855], "hari": [113, 114, 126, 179, 244, 880], "neuromagnet": [113, 205, 244, 558], "s0166": [113, 244], "2236": [113, 244], "10065": [113, 244], "342": [113, 121, 163, 170, 209, 231, 244, 266, 267, 354, 788, 859], "bradlei": [113, 244], "efron": [113, 244], "trevor": [113, 244], "hasti": [113, 244], "institut": [113, 244, 729, 732], "mathemat": [113, 152, 177, 200, 202, 210, 226, 244, 506, 525, 687, 729, 732, 839, 855, 862, 880], "monograph": [113, 244], "cambridg": [113, 152, 244, 354], "univers": [113, 244, 255, 354, 449, 856, 861, 867, 880], "york": [113, 202, 244, 255, 449, 867, 880], "isbn": [113, 152, 202, 223, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 354, 478, 479, 682, 700, 703], "14989": [113, 244], "web": [113, 147, 205, 241, 244, 274, 546, 756, 868, 880], "stanford": [113, 244], "casi": [113, 244], "bootstrap_confidence_interv": [113, 870], "iter_freq": 113, "frequency_map": 113, "job": [113, 203, 205, 256, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 412, 413, 415, 416, 420, 421, 422, 423, 426, 427, 448, 449, 450, 453, 466, 468, 478, 479, 517, 520, 521, 531, 532, 541, 542, 563, 570, 571, 640, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 732, 780, 783, 802, 880], "skip": [113, 135, 145, 150, 166, 167, 171, 173, 191, 202, 241, 256, 342, 498, 531, 574, 638, 839, 855, 865, 880], "option": [113, 125, 135, 136, 141, 143, 151, 152, 157, 162, 163, 166, 167, 168, 169, 172, 173, 174, 179, 189, 196, 199, 202, 205, 210, 211, 215, 217, 218, 221, 226, 227, 230, 236, 239, 241, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 277, 278, 279, 280, 284, 285, 303, 309, 312, 354, 364, 369, 372, 385, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 431, 441, 442, 443, 448, 449, 450, 452, 454, 473, 475, 476, 478, 479, 491, 493, 499, 517, 521, 525, 526, 527, 528, 529, 531, 532, 536, 538, 540, 541, 542, 550, 555, 557, 558, 559, 568, 569, 570, 571, 572, 577, 588, 608, 618, 620, 630, 665, 670, 674, 685, 687, 688, 690, 691, 694, 695, 700, 702, 703, 704, 738, 748, 764, 765, 766, 772, 776, 778, 780, 782, 784, 787, 788, 791, 795, 798, 800, 801, 802, 803, 804, 806, 808, 810, 811, 812, 814, 845, 847, 861, 862, 865, 877, 880], "apply_hilbert": [113, 114, 115, 137, 168, 264, 265, 266, 267, 478, 479, 880], "269399": 113, "897": [113, 231], "077": [113, 233], "307": [113, 126, 130, 170, 221, 225, 231], "1202": 113, "emerg": 113, "bootstrap": [113, 143, 173, 679, 702, 704, 772, 880], "domin": [113, 204, 210, 241, 271, 272, 275, 278, 279, 280, 444, 558], "helper": [113, 135, 226, 312, 330, 869], "winter_r": 113, "freq_nam": 113, "ci_low": 113, "ci_up": 113, "dhz": 113, "xy": [113, 115, 137, 182, 321, 430, 749, 818, 862], "horizontalalign": [113, 135, 202, 206], "xycoord": 113, "trade": [114, 202, 728, 731], "bharadwaj": [114, 126, 244, 880], "berkelei": [114, 115, 255, 867], "tfr_stockwel": [114, 240, 727, 728, 729, 730, 731, 870, 880], "tfr_array_morlet": [114, 728, 729, 730, 731, 732, 870, 880], "centers_to_edg": [114, 870, 880], "sim0001": 114, "sim0002": 114, "1024": [114, 135, 687, 688, 690, 691], "burst": [114, 184, 199, 856], "ramp": [114, 202], "logical_or": 114, "on_tim": 114, "han": [114, 580, 652, 653, 727, 728, 730, 731, 880], "sin50hz": 114, "4000": [114, 167, 207, 256, 501], "41160": 114, "41159": 114, "time_bandwidth": [114, 423, 728, 731], "sim": [114, 533, 862], "nmore": 114, "1025": [114, 145, 239], "balanc": [114, 201, 202, 226, 230, 656, 681, 880], "strictli": [114, 152, 162, 169, 170, 179, 202, 204, 290, 748, 880], "regard": [114, 208, 223, 231, 240, 862, 880], "recoverd": 114, "lossless": 114, "disregard": 114, "numer": [114, 157, 163, 172, 202, 205, 215, 226, 231, 270, 277, 353, 376, 445, 470, 478, 479, 558, 677, 687, 688, 690, 691, 713, 859, 861, 862, 868, 880], "all_n_cycl": 114, "isinst": [114, 141, 259, 477], "exagger": 114, "wise": [114, 163, 199, 203, 266, 267, 419, 689, 835, 880], "epochs_hilb": 114, "tfr_data": 114, "3301": 114, "255": [114, 127, 161, 170, 209, 226, 230, 231, 241, 271, 272, 275, 278, 279, 280, 748, 767, 806, 811, 812], "avgpow": 114, "avg_pow": [114, 727, 728], "mesh": [114, 157, 161, 162, 176, 270, 272, 278, 280, 308, 309, 360, 409, 465, 466, 631, 748, 807, 811, 833, 845, 880], "electrocorticographi": [115, 135, 137, 244, 264, 265, 266, 267, 478, 479, 555, 556, 700, 702, 703, 704, 856, 862, 880], "scatterplot": 115, "clickableimag": [115, 870], "own": [115, 127, 152, 178, 184, 207, 218, 228, 231, 264, 265, 266, 267, 271, 274, 275, 279, 321, 476, 478, 479, 588, 748, 779, 806, 839, 842, 843, 859, 861, 865], "dirnam": [115, 125, 160, 172], "pathlib": [115, 123, 145, 158, 171, 173, 274, 377, 378, 379, 382, 383, 385, 390, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 521, 835, 880], "noqa": [115, 117, 171, 206, 226], "f401": 115, "snapshot_brain_montag": [115, 137, 813, 870, 880], "ecog_data_fnam": 115, "sample_ecog_ieeg": [115, 135], "click": [115, 133, 135, 143, 151, 152, 157, 162, 182, 192, 200, 205, 217, 218, 240, 261, 264, 265, 266, 267, 273, 279, 280, 410, 417, 478, 479, 557, 558, 700, 702, 704, 749, 761, 769, 778, 779, 780, 782, 784, 786, 787, 791, 795, 800, 801, 802, 803, 804, 808, 809, 810, 812, 837, 839, 845, 857, 868, 880], "layout_path": 115, "__file__": [115, 123, 171, 172, 173], "layout_nam": 115, "custom_layout": 115, "lout": [115, 171, 313, 326, 327, 338, 880], "coreg": [115, 135, 136, 158, 159, 160, 161, 312, 469, 472, 764, 855, 862, 870, 880], "estimate_head_mri_t": [115, 135, 136, 870, 880], "sample_ecog": [115, 135], "apply_tran": [115, 135, 136, 157, 161, 183, 312, 880], "conjunct": [115, 226, 259, 264, 412, 868], "xy_pt": [115, 137], "beta_pow": 115, "fig2": [115, 152, 171], "coolwarm": 115, "cbar": [115, 127, 147, 196, 226, 767], "set_axis_off": [115, 137, 173], "bbox_inch": [115, 880], "tight": [115, 152, 162, 195, 266, 267, 723, 782, 784, 880], "669": [115, 195], "mous": [115, 192, 217, 261, 262, 264, 265, 266, 267, 273, 410, 417, 469, 478, 479, 557, 558, 700, 702, 704, 749, 762, 764, 776, 778, 779, 780, 782, 783, 784, 787, 791, 800, 802, 803, 808, 857, 880], "imread": [115, 173], "plot_click": [115, 749], "to_layout": [115, 749], "got": [115, 145, 172, 200, 205, 223, 842, 880], "read_layout": [115, 171, 313, 870, 880], "968": [115, 130, 231], "3d_to_2d": [115, 130], "scalarmapp": 116, "low_contrast": [116, 126, 135, 136, 182, 191, 271, 272, 275, 278, 279, 280, 748, 806, 811], "rh_data": [116, 176, 275, 278], "rh_vertno": [116, 176, 275, 278, 663], "brodmann": 116, "ba44": 116, "add_head": [116, 136, 157, 191, 748, 880], "seghead": [116, 157, 158, 159, 162, 173, 177, 183, 184, 256, 262, 748, 764, 776], "read_tran": [116, 118, 157, 161, 179, 192, 277, 461, 665, 834, 870, 880], "role": [116, 166, 171, 178, 187, 188, 261, 262, 266, 268, 269, 275, 364, 524, 525, 536, 609, 618, 620, 633, 648, 748, 757, 764, 776, 816, 839, 861], "sample_audvis_set1": 116, "ylorrd": 116, "add_dipol": [116, 748, 880], "1e8": 116, "static": [116, 135, 181, 210, 215, 244, 256, 263, 387, 585, 736, 737, 738, 837, 865, 880], "add_ax": [116, 127, 147], "624": [116, 130, 231], "embed": [117, 157, 173, 201, 202, 274, 839, 846, 880], "simplic": [117, 178, 196, 202, 226, 230, 859, 880], "instal": [117, 135, 136, 137, 147, 156, 162, 172, 182, 256, 264, 265, 266, 267, 282, 303, 307, 338, 384, 387, 409, 412, 416, 421, 448, 449, 450, 478, 479, 703, 839, 847, 859, 860, 863, 880], "order_func": 117, "spectral_embed": 117, "rbf_kernel": 117, "this_data": 117, "good_pick": 117, "bad_pick": [117, 212], "plt_time": 117, "overlay_tim": [117, 128, 264, 265, 779, 880], "renaud": [117, 244], "keriven": [117, 244], "maureen": [117, 244], "clerc": [117, 244], "1051": [117, 209, 244], "1061": [117, 244], "2037139": [117, 244], "channel_epochs_imag": [117, 130], "eeg_on_scalp": [118, 130], "upon": [119, 145, 158, 171, 173, 264, 265, 274, 416, 478, 479, 749, 765, 818, 839, 845, 861, 880], "hosaka": [119, 244, 765, 880], "flow": [119, 179, 244, 765, 880], "underneath": [119, 765, 880], "poor": [119, 199, 202, 211, 765, 880], "man": [119, 152, 173, 244, 765], "hidehiro": [119, 244, 765], "electrocardiologi": [119, 244, 765], "1976": [119, 244, 765], "s0022": [119, 244, 765], "0736": [119, 244, 765], "80041": [119, 244, 765], "sheraz": [119, 126, 129, 244, 573, 878, 880], "khan": [119, 126, 129, 244, 573, 878, 880], "khansheraz": 119, "plot_arrowmap": [119, 151, 870, 880], "evoked_mag": 119, "evoked_grad": 119, "topoplot": [119, 145, 171, 205, 241, 765, 768, 880], "max_time_idx": 119, "latitud": [119, 765], "longitud": [119, 161, 765], "radial": [119, 159, 531, 532, 542, 641, 765], "cartesian": [119, 176, 179, 765, 862, 865], "info_from": [119, 765, 880], "info_to": [119, 765], "raw_ctf": 119, "raw_ctf_info": 119, "evoked_arrowmap": [119, 130], "engeman": 120, "miko\u0142aj": [120, 867, 880], "magnuski": [120, 867, 880], "mmagnuski": [120, 880], "swp": [120, 255, 867], "pl": 120, "20m": 120, "regularli": [120, 167, 169], "multilin": [120, 880], "all_tim": 120, "rm": [120, 151, 152, 189, 223, 261, 264, 265, 266, 267, 275, 410, 417, 478, 479, 533, 557, 558, 700, 782, 786, 787, 791, 803, 810, 862, 880], "drawn": [120, 151, 218, 226, 261, 264, 265, 266, 267, 272, 273, 278, 280, 410, 417, 478, 479, 557, 558, 572, 652, 653, 700, 702, 704, 765, 766, 771, 772, 780, 781, 784, 786, 787, 791, 800, 802, 803, 804, 808, 810, 811, 880], "spectral_r": 120, "circl": [120, 135, 162, 171, 222, 261, 264, 265, 266, 267, 273, 312, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 753, 765, 770, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 835, 839, 880], "extrapol": [120, 151, 211, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 880], "box": [120, 135, 162, 190, 261, 264, 265, 266, 267, 273, 313, 321, 338, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 744, 765, 780, 782, 784, 786, 787, 791, 800, 803, 808, 810, 845, 880], "stretch": [120, 201, 748], "beyond": [120, 145, 167, 191, 236, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 511, 557, 558, 572, 695, 700, 702, 704, 744, 765, 780, 787, 791, 800, 801, 803, 808, 810], "axes_row": 120, "extr": 120, "margin": [120, 127, 703, 771, 772], "exceed": [120, 185, 207, 210, 228, 264, 558, 586, 703], "mask_param": [120, 231, 261, 264, 265, 266, 267, 410, 417, 478, 479, 557, 700, 702, 704, 765, 780, 787, 803, 808, 810], "markers": [120, 231, 261, 264, 265, 266, 267, 410, 417, 478, 479, 557, 700, 702, 704, 765, 780, 787, 803, 808, 810], "markerfacecolor": [120, 261, 264, 265, 266, 267, 410, 417, 478, 479, 557, 700, 702, 704, 765, 780, 787, 803, 808, 810], "_time": 120, "significant_channel": 120, "_channel": 120, "in1d": 120, "_ch": 120, "perhap": [120, 202, 207, 215, 226], "imped": [120, 202, 244, 880], "image_interp": [120, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 880], "cubic": [120, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 748, 765, 780, 787, 791, 800, 803, 808, 810, 880], "smoothest": 120, "voronoi": [120, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 880], "debug": [120, 163, 172, 256, 377, 378, 379, 382, 383, 390, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 647, 743, 746, 839, 859], "unalt": [120, 361], "properli": [120, 135, 137, 156, 157, 162, 169, 184, 190, 200, 206, 207, 215, 216, 234, 236, 244, 256, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 303, 307, 347, 360, 412, 416, 421, 448, 449, 450, 478, 479, 574, 575, 645, 665, 700, 703, 744, 788, 814, 837, 839, 842, 844, 855, 880], "animate_topomap": [120, 266, 267, 880], "frame_r": [120, 266, 267], "blit": [120, 266, 267], "evoked_topomap": [120, 130], "excel": [121, 151, 161, 202, 223], "diagnost": [121, 166, 173, 205, 210, 213], "rare": [121, 274, 861, 880], "80e": [121, 211, 862], "uncom": 121, "fewer": [121, 145, 152, 162, 171, 173, 199, 202, 216, 226, 236, 264, 265, 266, 267, 274, 412, 416, 421, 422, 446, 448, 449, 478, 479, 579, 584, 728, 731, 748, 784, 880], "007": [121, 128, 141, 142, 143, 146, 150, 167, 170, 201, 207, 223, 227, 244, 282, 592], "008": [121, 128, 141, 146, 150, 152, 167, 170, 210, 223, 244, 588], "method_param": [121, 180, 354, 359, 525, 526, 527, 528, 529, 531, 532, 538, 541, 542], "diagonal_fix": [121, 163, 354, 880], "return_estim": [121, 163, 354, 359, 859], "likelihood": [121, 152, 163, 178, 244, 261, 266, 267, 354, 359, 558, 788, 859, 862], "loglik": [121, 261], "1891": 121, "unseen": [121, 163, 178, 354, 859], "descend": [121, 163, 178, 880], "1629": 121, "666": 121, "1659": 121, "813": [121, 231], "1802": [121, 181, 200, 244], "6663146376516": 121, "8130475750986": 121, "10315358209": 121, "evoked_whiten": [121, 130], "read_raw_artemis123": [123, 189, 484, 862, 870, 880], "read_raw_bti": [123, 186, 189, 862, 870, 880], "read_raw_kit": [123, 172, 189, 484, 862, 870, 880], "set_3d_titl": [123, 125, 151, 870, 880], "root_path": 123, "parent": [123, 151, 162, 171, 172, 173, 880], "spm_ctf_meg_example_faces1_3d": 123, "324474": 123, "bti_path": 123, "test_pdf_linux": 123, "test_config_linux": 123, "test_hs_linux": 123, "magn": [123, 189, 862], "3600wh": 123, "pdf": [123, 186, 195, 244, 256, 387, 473, 489, 863], "critic": [123, 152, 161, 172, 179, 186, 202, 210, 226, 228, 231, 588, 647, 746, 856, 866], "mne_create_comp_data": [123, 186, 256, 489], "print_tabl": [123, 186], "routin": [123, 186, 203, 453, 558, 588, 868, 879, 880], "magnes_3600wh": [123, 186], "kit_path": 123, "sqd": [123, 172, 256, 481, 502, 614, 862], "artemis_data_2017": 123, "10h": 123, "38m": 123, "59s_phantom_1k_hpi_1": 123, "artemis123_mneloc": 123, "1863": 123, "hpifit": [123, 209, 256], "ok": [123, 189, 209, 260, 270], "997": [123, 202, 210, 231, 244], "cardin": [123, 167, 170, 215, 221, 305, 306, 335, 429, 835, 865, 880], "meg_sensor": [123, 130, 880], "create_3d_figur": [124, 157, 161, 179, 750, 870], "064": [124, 130, 227, 244, 346, 540, 660], "mne_helmet": [124, 130], "ship": [125, 171, 226, 264, 265, 266, 267, 269, 322, 323, 328, 329, 462, 478, 479, 851, 862, 880], "joan": [125, 138, 160, 880], "massich": [125, 138, 160, 880], "mailsik": [125, 138, 160], "op": [125, 135, 160, 185, 186, 209, 264, 265, 266, 267, 478, 479], "get_builtin_montag": [125, 171, 264, 265, 266, 267, 269, 328, 462, 478, 479, 870, 880], "against": [125, 141, 142, 150, 205, 215, 244, 657, 662, 839, 880], "current_montag": 125, "mri_fiduci": [125, 157, 160, 184, 764, 880], "montage_sgskip": [125, 130], "hcp": [126, 244, 387, 846, 868, 880], "mmp1": [126, 244, 387, 880], "mmp": [126, 387], "Of": [126, 143, 199, 206, 207, 223, 593, 594], "acknowledg": [126, 202], "wu": 126, "minn": 126, "publicli": [126, 167, 402, 403, 856, 861], "get_brain_class": [126, 156, 870], "fetch_hcp_mmp_parcel": [126, 182, 870, 880], "fetch_aparc_sub_parcel": [126, 870], "hcpmmp1": 126, "add_annot": [126, 136, 156, 182, 748], "aud_label": 126, "l_a1_roi": 126, "hcpmmp1_combin": [126, 182, 387], "aparc_sub": 126, "matthew": [126, 181, 244, 387], "glasser": [126, 244, 387], "timothi": [126, 244, 387, 880], "coalson": [126, 244, 387], "emma": [126, 244, 387, 558], "robinson": [126, 181, 244, 387], "hacker": [126, 244, 387], "harwel": [126, 244, 387], "essa": [126, 244, 387], "yacoub": [126, 244, 387], "kamil": [126, 244, 387], "ugurbil": [126, 244, 387], "jesper": [126, 244, 387, 880], "andersson": [126, 244, 387], "beckmann": [126, 244, 387], "jenkinson": [126, 244, 387], "stephen": [126, 181, 195, 226, 227, 244, 387, 416, 558, 687, 688, 690, 691, 729, 732, 880], "essen": [126, 244, 387], "modal": [126, 190, 230, 236, 244, 387], "cerebr": [126, 244, 387], "178": [126, 170, 184, 185, 186, 196, 201, 209, 231, 244, 387], "nature18933": [126, 244, 387], "javeria": [126, 244], "hashmi": [126, 244], "fahimeh": [126, 244, 880], "mamashli": [126, 244, 880], "konstantino": [126, 244], "michmizo": [126, 244], "manfr": [126, 244, 880], "kitzbichl": [126, 244, 880], "santosh": [126, 244], "ganesan": [126, 244], "keri": [126, 244], "lee": [126, 135, 244, 270, 275, 558, 586, 880], "garel": [126, 244], "susan": [126, 244, 653], "whitfield": [126, 244], "gabri": [126, 244], "randi": [126, 244, 525], "gollub": [126, 244], "jian": [126, 244], "kong": [126, 244], "kunjan": [126, 244], "rana": [126, 244], "kenet": [126, 244], "matur": [126, 244], "trajectori": [126, 244], "network": [126, 195, 244, 297, 416, 558, 850], "mediat": [126, 244, 729, 732], "018": [126, 128, 141, 150, 170, 223, 244, 573], "mccloi": [127, 209, 867, 880], "dan": [127, 209, 880], "mpl_toolkit": [127, 171, 206, 226, 231, 772], "axes_grid1": [127, 231, 772], "make_axes_locat": [127, 231], "imagegrid": 127, "inset_loc": [127, 772], "suppos": [127, 169, 206, 761, 862], "max_t": 127, "17909658": 127, "18448887": 127, "83197989": 127, "screenshot": [127, 173, 748, 818, 880], "pixel": [127, 143, 173, 226, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 410, 417, 469, 478, 479, 557, 558, 700, 702, 704, 748, 764, 765, 776, 780, 787, 791, 800, 803, 806, 808, 810, 811, 835, 880], "integ": [127, 141, 143, 144, 146, 150, 151, 152, 161, 167, 169, 170, 172, 176, 190, 203, 205, 215, 216, 221, 231, 256, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 297, 298, 310, 313, 314, 321, 324, 327, 329, 354, 358, 359, 369, 370, 371, 410, 412, 417, 426, 427, 431, 432, 439, 448, 449, 452, 453, 454, 468, 473, 475, 476, 478, 479, 510, 534, 535, 536, 557, 558, 560, 572, 573, 574, 575, 580, 584, 594, 596, 603, 612, 614, 618, 648, 650, 668, 686, 695, 700, 702, 703, 704, 708, 709, 710, 711, 713, 731, 734, 765, 772, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 791, 792, 793, 795, 797, 799, 800, 801, 802, 803, 808, 810, 835, 862, 865, 880], "nonwhite_pix": 127, "nonwhite_row": 127, "nonwhite_col": 127, "cropped_screenshot": 127, "nrows_ncol": 127, "axes_pad": 127, "updat": [127, 147, 171, 173, 180, 190, 200, 202, 207, 210, 212, 215, 218, 241, 256, 261, 264, 265, 266, 267, 269, 273, 288, 302, 365, 370, 372, 377, 378, 379, 380, 382, 383, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 445, 462, 473, 478, 479, 498, 524, 559, 640, 644, 735, 748, 837, 839, 856, 861, 865, 880], "rcparam": [127, 138, 202, 880], "labels": 127, "titles": 127, "medium": [127, 157, 184, 256, 308, 868, 880], "height": [127, 256, 269, 271, 272, 275, 278, 279, 280, 309, 313, 321, 326, 469, 748, 757, 806, 811, 835, 880], "gridspec": [127, 266, 267, 787], "keyword": [127, 150, 156, 170, 173, 192, 202, 210, 240, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 415, 416, 420, 421, 423, 426, 427, 429, 431, 435, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 460, 461, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 520, 521, 522, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 554, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 585, 586, 588, 589, 591, 592, 595, 596, 597, 600, 601, 602, 603, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 645, 648, 649, 651, 652, 653, 654, 664, 665, 668, 670, 671, 672, 673, 674, 675, 676, 686, 687, 688, 689, 690, 691, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 718, 719, 722, 723, 727, 728, 730, 731, 732, 733, 736, 737, 738, 743, 746, 747, 748, 749, 756, 764, 765, 770, 773, 776, 780, 781, 782, 783, 788, 791, 792, 793, 798, 799, 801, 802, 804, 805, 806, 807, 811, 812, 813, 817, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 839, 855, 880], "subplot2grid": [127, 195], "inch": [127, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 780, 787, 791, 800, 803, 808, 810], "height_ratio": 127, "rowspan": 127, "775": 127, "bot": 127, "evoked_idx": 127, "brain_idx": 127, "peak_lin": 127, "66ccee": [127, 161, 716, 726], "columnspac": 127, "labelspac": 127, "fancybox": 127, "handlelength": 127, "n_ave": 127, "spine": [127, 182, 761, 772], "set_axisbelow": 127, "tick": [127, 241, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 772, 780, 784, 787, 791, 800, 803, 808, 809, 810, 880], "append_ax": [127, 231], "plot_brain_colorbar": [127, 870, 880], "get_posit": [127, 137, 312, 880], "ymax": [127, 203, 231, 236], "transfigur": 127, "va": [127, 161], "panel": [127, 135, 152, 157, 163, 171, 181, 241, 256, 266, 267, 469, 558, 748, 788, 792, 859], "outlin": [127, 161, 173, 177, 202, 241, 261, 262, 264, 265, 266, 267, 273, 312, 410, 417, 478, 479, 557, 558, 572, 603, 700, 702, 704, 765, 772, 776, 780, 782, 784, 785, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 880], "familiar": [127, 145, 199, 841, 856], "to_plot": 127, "return_tim": [127, 215, 478, 479], "\u00b5v": [127, 143, 145, 146, 150, 152, 167, 201, 207, 227, 256, 261, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 410, 417, 478, 479, 514, 557, 558, 572, 700, 702, 704, 765, 778, 779, 780, 782, 784, 787, 791, 800, 801, 803, 808, 809, 810, 835, 862, 880], "1e6": [127, 142, 150, 152, 261, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 354, 358, 359, 410, 417, 419, 478, 479, 779, 782, 784, 786, 787, 809], "inset_ax": [127, 772], "server": [127, 147, 167, 173, 203, 205, 215, 814, 843], "axin": 127, "edit": [127, 152, 170, 172, 200, 202, 205, 217, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 682, 700, 703, 769, 817, 839, 843, 859, 880], "stai": [127, 145, 202, 203, 221, 223, 264, 265, 266, 267, 478, 479, 480, 649, 835, 839], "intact": [127, 199, 215], "That": [127, 143, 145, 162, 163, 202, 231, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 473, 475, 476, 536, 788, 862], "nice": [127, 145, 151, 170, 172, 215, 226, 241, 839, 862, 880], "But": [127, 144, 145, 173, 185, 202, 210, 221, 226, 234, 241, 558, 857], "big": [127, 189, 205, 419, 689, 857, 880], "tast": 127, "luckili": 127, "facet": [127, 161], "set_": 127, "get_children": 127, "line2d": 127, "0x7faf7c697940": 127, "0x7faf7c695750": 127, "0x7faea89a6620": 127, "0x7faea89a54e0": 127, "pathcollect": 127, "0x7faea89a4460": 127, "0x7faf4b3b91e0": 127, "0x7faf4b3b8370": 127, "0x7faf4b3b96f0": 127, "0x7faf4b3ba140": 127, "0x7faf4b3ba680": 127, "yaxi": [127, 207], "0x7faf4b3bb280": 127, "rectangl": [127, 217, 700, 765], "0x7faee9b9ceb0": 127, "certainli": 127, "artistlist": 127, "sensor_dot": 127, "shrink": [127, 135, 200, 226, 227, 584, 859], "set_siz": 127, "publication_figur": [127, 130], "notat": [128, 206, 230, 236, 862], "odd": [128, 202, 324, 409, 862], "test_raw": [128, 169, 256], "read_raw_eeglab": [128, 169, 190, 484, 843, 862, 866, 870, 880], "eog1": 128, "eog2": 128, "011": [128, 141, 150, 170, 202, 223, 244], "012": [128, 141, 150, 170, 218, 223], "017": [128, 141, 150, 170, 215, 223], "019": [128, 141, 150, 170, 208, 223, 244], "021": [128, 141, 142, 150, 167, 170, 198, 223], "022": [128, 141, 150, 170, 185, 223], "023": [128, 141, 143, 150, 170, 223, 244], "po7": [128, 241], "026": [128, 141, 150, 170, 223, 244], "poz": [128, 241], "027": [128, 141, 150, 170, 178, 188, 223, 226, 244, 297, 558, 693, 694, 854], "028": [128, 141, 150, 170, 223, 244, 566, 729, 732], "029": [128, 141, 150, 170, 223, 244], "standard_1020": [128, 152, 160, 171, 221, 501], "fdt": [128, 169, 494, 612], "msec": [128, 152, 700], "new_ev": [128, 216, 436, 438, 523], "203125": 128, "12z": [128, 227], "group_bi": [128, 143, 227, 256, 264, 265, 266, 267, 478, 479, 778, 779, 784, 801, 880], "vline": [128, 266, 267, 772, 786, 880], "roi_erpimage_by_rt": [128, 130], "plot_psd": [129, 141, 143, 167, 199, 218, 239, 240, 264, 265, 266, 267, 274, 478, 479, 839, 862, 880], "66067": 129, "109": [129, 138, 163, 165, 170, 205, 231, 380, 856], "xscale": [129, 207, 264, 265, 266, 267, 478, 479, 702, 704, 802, 880], "wall": [129, 202, 203, 244, 687, 688], "shield": [129, 203, 212, 244, 264, 265, 266, 267, 269, 478, 479, 555, 588, 700, 702, 703, 704, 862], "review": [129, 152, 179, 204, 205, 244, 557, 563, 839, 861], "scientif": [129, 244, 843, 844, 864], "instrument": [129, 179, 199, 205, 244], "056101": [129, 244], "1063": [129, 209, 210, 244, 569, 588], "4802845": [129, 244], "995": [129, 130, 221, 231], "sensor_noise_level": [129, 130], "auto_examples_visu": 130, "topo_custom": [130, 133], "459": [130, 133, 226, 231], "ssp_projs_sensitivity_map": [130, 131], "topo_compare_condit": [130, 132], "xhemi": [130, 134, 276, 360, 625], "167": [130, 170, 196, 226, 231], "ecg_fnam": 131, "ssp_ecg_map": 131, "arg": [131, 230, 236, 256, 269, 277, 682, 839], "plot_evoked_topo": [132, 151, 211, 870, 880], "audio": [132, 176, 192, 196, 239, 244, 264, 265, 266, 267, 417, 478, 479, 702, 703, 704, 719], "nleft": 132, "iter_topographi": [133, 870, 880], "20hz": 133, "return_freq": [133, 138, 239, 240, 241, 702, 704, 880], "my_callback": 133, "ch_idx": [133, 209, 228, 240], "fig_facecolor": [133, 143, 239, 264, 265, 266, 267, 478, 479, 700, 702, 704, 761, 809], "axis_facecolor": [133, 239, 264, 265, 266, 267, 478, 479, 702, 704, 761], "axis_spinecolor": [133, 761], "on_pick": [133, 761], "gcf": 133, "639": [133, 167, 173, 231], "stc_path": [134, 173], "fsaverage_sym": [134, 360], "left_right": [134, 360], "stc_xhemi": 134, "70314401": 134, "48867635": 134, "29876034": 134, "involv": [135, 136, 137, 157, 159, 161, 199, 202, 203, 206, 217, 367, 560, 861, 862], "implant": [135, 244, 592], "greater": [135, 145, 167, 200, 205, 226, 229, 264, 265, 276, 358, 451, 558, 583, 584, 689, 703, 729, 732, 748, 880], "dipi": [135, 172, 276, 585, 736, 737, 738, 838, 880], "pip": [135, 136, 137, 147, 162, 837, 839, 841, 844, 847], "conda": [135, 136, 137, 162, 837, 838, 839, 841, 844, 847, 880], "cite": [135, 138, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 388, 449, 478, 479, 700, 703, 839, 856], "anterior": [135, 161, 270, 324, 677, 835, 862, 880], "commissur": [135, 137, 312], "posterior": [135, 137, 157, 161, 270, 312, 324, 473, 677, 835, 880], "aka": [135, 164, 166, 191], "sample_seeg_t1": 135, "cursor": [135, 749, 880], "long": [135, 138, 141, 142, 147, 199, 202, 203, 205, 209, 216, 217, 221, 227, 234, 235, 262, 264, 265, 266, 267, 271, 272, 275, 276, 278, 279, 280, 354, 360, 478, 479, 528, 561, 566, 588, 700, 702, 703, 704, 748, 839, 842, 843, 855, 861, 868, 880], "menu": [135, 173, 217, 842, 845, 863], "prefer": [135, 143, 152, 171, 172, 190, 191, 202, 205, 206, 259, 264, 265, 266, 267, 360, 417, 439, 458, 478, 479, 558, 644, 702, 704, 802, 837, 839, 843, 845, 846, 858, 861, 862, 865], "pull": [135, 152, 206, 818, 835, 846, 861], "popup": 135, "Be": [135, 162, 215, 217, 266, 267, 785], "until": [135, 143, 200, 201, 208, 211, 259, 262, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 469, 470, 477, 478, 479, 558, 561, 702, 704, 745, 748, 776, 778, 795, 801, 804, 839, 862], "crosshair": 135, "meet": [135, 202, 861], "pc": [135, 205], "transect": 135, "set_posit": [135, 266, 267, 787], "xytext": [135, 182], "arrowprop": [135, 182, 195], "headwidth": 135, "consum": [135, 203, 274, 568, 693, 880], "deform": [135, 161, 171, 244], "hour": [135, 156, 478, 479, 558, 795, 801], "plan": [135, 199, 200, 203, 208, 434, 837, 843, 861], "proce": [135, 152, 259, 264, 402, 558, 561, 568, 757, 859], "my_data_directori": 135, "subjid": 135, "defac": 135, "cw256": 135, "anonym": [135, 157, 264, 265, 266, 267, 478, 479, 480, 859, 880], "orig_defac": 135, "publish": [135, 206, 244, 558, 857], "mne_bid": [135, 137], "write_anat": 135, "hardli": [135, 862], "misalign": [135, 147, 179, 489, 880], "stereotact": [135, 264, 265, 266, 267, 478, 479, 555, 556, 700, 702, 703, 704, 862, 880], "anteriolater": 135, "thresh": [135, 575, 579, 583, 597, 687, 688, 690, 691, 748], "apply_orient": 135, "asarrai": [135, 161, 230], "dataobj": [135, 157, 161, 183], "axcodes2ornt": 135, "aff2axcod": [135, 161], "float32": 135, "quantil": [135, 419], "squeez": [135, 142, 230, 231, 236], "grai": [135, 145, 157, 161, 173, 200, 210, 216, 228, 229, 230, 231, 236, 270, 468, 558, 605, 748, 763, 764, 772, 791], "gist_heat": 135, "invert_yaxi": 135, "world": [135, 157, 161, 173, 183, 202, 217, 228, 276, 453], "ct_resampl": 135, "moving_affin": 135, "static_affin": 135, "unalign": [135, 880], "shear": [135, 738], "compute_volume_registr": [135, 736, 737, 870, 880], "4x4": [135, 277, 501, 651, 652, 653, 665], "cval": [135, 736, 880], "ct_align": 135, "apply_volume_registr": [135, 870, 880], "failur": [135, 839, 880], "heat": 135, "navig": [135, 162, 215, 264, 265, 274, 279, 280, 478, 479, 778, 801, 812, 837, 843, 863], "toolbar": [135, 162, 813], "lta": [135, 624, 880], "realli": [135, 176], "rerun": 135, "manual_reg_affine_vox": 135, "read_lta": [135, 870, 880], "sample_seeg_ct_aligned_manu": 135, "manual_reg_affin": 135, "starting_affin": [135, 738, 880], "hyperintens": [135, 583], "hypointens": [135, 583], "brighter": [135, 236], "subcutan": 135, "fat": 135, "ct_data": 135, "get_fdata": 135, "t1_data": 135, "bright": 135, "halfwai": [135, 766], "talairach": [135, 136, 161, 181, 182, 279, 280, 366, 367, 632, 812, 859, 862, 880], "get_mni_fiduci": [135, 161, 312, 366, 764, 870, 880], "subj_tran": 135, "nearbi": [135, 136, 137, 195, 199, 207, 210, 222, 244, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 583, 588, 695, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810], "video": [135, 136, 157, 161, 162, 864, 880], "sidebar": 135, "scroll": [135, 143, 167, 217, 218, 262, 264, 265, 478, 479, 558, 776, 778, 795, 801, 817, 880], "arrow": [135, 157, 161, 162, 179, 184, 199, 203, 206, 218, 261, 262, 264, 265, 266, 267, 272, 273, 278, 279, 280, 410, 417, 478, 479, 557, 558, 700, 702, 704, 748, 765, 776, 778, 779, 780, 784, 787, 790, 791, 800, 801, 803, 808, 811, 812, 862, 880], "snap": [135, 162, 880], "t1_ecog": 135, "ct_orig_ecog": 135, "sample_ecog_ct": 135, "99982382": 135, "00414586": 135, "01830679": 135, "15413965": 135, "00549597": 135, "99721885": 135, "07432601": 135, "54316131": 135, "01794773": 135, "07441352": 135, "99706595": 135, "84162514": 135, "ct_aligned_ecog": 135, "raw_ecog": 135, "previous": [135, 145, 150, 171, 204, 205, 256, 290, 297, 298, 638, 748, 880], "subj_trans_ecog": 135, "3024": [135, 320, 478, 862], "dura": [135, 859], "pressur": [135, 584], "craniotomi": [135, 584], "watershed_bem": [135, 159, 584, 846, 859, 862, 880], "flash_bem": [135, 159, 584, 846, 862, 880], "modif": [135, 191, 236, 330, 373, 846, 880], "view_kwarg": [135, 136, 158, 161], "ieeg": [135, 137, 868, 869, 870, 880], "project_sensors_onto_brain": [135, 870, 880], "cvs_avg35_inmni152": 135, "subject_brain": 135, "template_brain": 135, "regist": [135, 256, 307, 585, 736, 737, 738, 835, 861, 862], "sdr_morph": [135, 276, 585, 736, 737, 738], "subject_brain_sdr": 135, "appl": [135, 842], "had": [135, 143, 152, 168, 169, 176, 182, 201, 202, 203, 206, 207, 218, 239, 241, 264, 265, 403, 433, 577, 618, 703, 862, 880], "montage_warp": [135, 585], "warp_montag": [135, 870, 880], "elec_imag": [135, 583], "make_montage_volum": [135, 870, 880], "warped_elec_imag": 135, "dark2": 135, "degrad": 135, "inaccur": [135, 163, 215, 261, 264, 265, 266, 267, 273, 354, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 855, 862], "add_estimated_fiduci": [135, 312, 880], "template_tran": 135, "recomput": [135, 205, 208, 231, 451, 558, 586, 640, 880], "behind": [135, 157, 172, 195, 200, 205, 469, 767, 857], "scene": [135, 157, 161, 172, 195, 244, 256, 266, 267, 271, 272, 275, 278, 279, 280, 416, 469, 748, 754, 755, 757, 764, 783, 806, 811, 815, 816, 818, 837, 857, 880], "brittani": [135, 244], "stedelin": [135, 244], "alessandra": [135, 244], "mantovani": [135, 244], "ahm": [135, 244], "raslan": [135, 244], "nicol": [135, 244, 684, 880], "swann": [135, 244], "3897": [135, 244], "2022": [135, 170, 181, 212, 244, 245, 856], "21105": [135, 244], "joss": [135, 244], "03897": [135, 244], "liberti": [135, 137, 244, 880], "hamilton": [135, 137, 244, 880], "morgan": [135, 202, 244], "edward": [135, 244], "semi": [135, 205, 244, 572, 880], "neuroinformat": [135, 244], "octob": [135, 244, 660], "fninf": [135, 244], "00062": [135, 244], "542": [135, 140], "10_ieeg_loc": [135, 140], "stereoelectroencephalographi": [136, 856], "xfm": [136, 279, 280, 367, 632, 812, 862, 880], "li": [136, 137, 161, 173, 208, 244, 862, 867, 880], "adam2392": [136, 137], "fixat": 136, "isi": [136, 192], "mni_tal": [136, 137, 312, 325], "this_subject_dir": 136, "mri_mni_t": [136, 632], "read_talxfm": [136, 161, 870], "taliarach": 136, "fro": [136, 454, 735], "rostral": [136, 748], "warp": [136, 157, 160, 244, 585, 856, 880], "combine_transform": 136, "tan": [136, 880], "dens": [136, 157, 158, 159, 161, 183, 184, 191, 244, 256, 277, 308, 566, 748, 764, 880], "atla": [136, 182, 244, 256, 262, 271, 272, 275, 277, 278, 279, 280, 309, 444, 513, 649, 835, 856, 859, 862, 868, 880], "get_montage_volume_label": [136, 748, 870, 880], "lami": [136, 470], "lttr": 136, "isdigit": 136, "lpm": 136, "lsma": 136, "elec": [136, 227], "plot_channel_labels_circl": [136, 870, 880], "lbri": 136, "lstg": 136, "lpit": 136, "ltpo": 136, "rphp": 136, "rahp": 136, "lphg": 136, "lpcn": 136, "lofc": 136, "lpli": 136, "lacn": 136, "ctx": 136, "putamen": 136, "add_volume_label": [136, 182, 748, 880], "heatmap": [136, 210], "lfp": 136, "stc_near_sensor": [136, 137, 870, 880], "Its": [136, 209, 862], "view_layout": [136, 181, 271, 272, 275, 278, 279, 280, 748, 806, 811], "sagitt": [136, 161, 181, 262, 748, 766, 776], "m4": 136, "sai": [136, 137, 202, 203, 206, 208, 215, 221, 228, 231, 744, 839, 845, 855, 865], "20_seeg": [136, 140], "epilepsi": [137, 880], "seizur": [137, 880], "complementari": [137, 201, 868], "libertyhamilton": 137, "bidspath": 137, "read_raw_bid": 137, "bids_root": 137, "epilepsy_ecog": [137, 870, 880], "bids_path": 137, "pt1": 137, "session": [137, 141, 143, 150, 151, 167, 172, 173, 200, 210, 212, 217, 264, 265, 375, 376, 478, 479, 558, 778, 795, 801, 809, 837, 855, 859, 863, 880], "presurgeri": 137, "ictal": 137, "datatyp": [137, 880], "trans_bandwidth": [137, 202, 446, 449, 478, 479], "add_mni_fiduci": [137, 312, 880], "epoch_length": 137, "269079": 137, "2201": [137, 195], "ad1": 137, "att1": 137, "ast1": 137, "g16": 137, "slt1": 137, "sensor_color": [137, 764], "gamma_power_t": 137, "gamma_info": 137, "gamma_power_at_15": 137, "rgba": [137, 270, 271, 272, 275, 278, 279, 280, 748, 763, 767, 806, 811, 812, 880], "get_cmap": 137, "funcanim": [137, 266, 267], "gamma_pow": 137, "x_line": 137, "epileptiform": 137, "progress": [137, 152, 166, 201, 244, 413, 420, 839, 880], "posteriorli": 137, "becom": [137, 142, 183, 201, 202, 204, 205, 210, 212, 234, 235, 236, 264, 265, 266, 267, 602, 769, 784, 839, 847, 861, 862, 880], "xyz_pt": 137, "vmid": 137, "intra": [137, 671], "4932": 137, "653": [137, 140, 231], "30_ecog": [137, 140], "toi": [138, 226, 868], "answer": [138, 207, 231, 241, 839, 859], "question": [138, 142, 210, 241, 839, 842, 858, 860], "alic": 138, "tackl": 138, "chambon": [138, 244, 880], "stan": 138, "sleep_physionet": [138, 856, 870, 880], "fetch_data": [138, 856, 870, 880], "randomforestclassifi": 138, "accuracy_scor": 138, "functiontransform": 138, "ground": [138, 167, 207, 558, 799, 868], "truth": [138, 207, 558, 799], "expert": [138, 163, 839, 859, 861], "alice_fil": 138, "bob_fil": 138, "raw_train": 138, "marker": [138, 152, 169, 178, 189, 190, 195, 201, 206, 256, 261, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 410, 413, 417, 420, 423, 426, 427, 453, 466, 468, 478, 479, 481, 502, 517, 520, 521, 531, 532, 541, 542, 557, 558, 563, 570, 571, 572, 614, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 700, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 765, 780, 783, 787, 791, 800, 801, 802, 803, 807, 808, 810, 856, 880], "infer_typ": [138, 486, 493, 880], "annot_train": 138, "read_annot": [138, 217, 748, 870, 880], "emit_warn": [138, 258, 478, 479, 589], "resp": [138, 170, 215, 264, 265, 266, 267, 274, 311, 478, 479, 493, 555, 700, 702, 703, 704, 778, 801, 862, 880], "physionet_sleep": 138, "sc4001e0": 138, "recogn": [138, 172, 207, 493, 861, 880], "renam": [138, 152, 190, 211, 215, 258, 264, 265, 266, 267, 312, 340, 478, 479, 486, 493, 636, 748, 758, 813, 839, 847, 880], "oro": 138, "nasal": 138, "subment": 138, "temp": [138, 269], "rectal": 138, "wake": 138, "rem": [138, 169], "abbrevi": [138, 176, 206, 748, 862, 880], "rapid": [138, 145, 195, 202, 244, 416], "awak": 138, "night": [138, 402, 856], "imbal": [138, 230, 568, 569, 577, 588, 599], "trim": [138, 264, 265], "occurr": [138, 145, 199, 434, 436], "annotation_desc_2_event_id": 138, "redefin": 138, "events_train": 138, "chunk_dur": [138, 169, 439, 880], "stage_color": 138, "prop_cycl": 138, "by_kei": 138, "raw_test": 138, "annot_test": 138, "events_test": 138, "epochs_test": 138, "sc4011e0": 138, "1103": [138, 179, 244], "562": [138, 185, 188], "signatur": [138, 200, 230, 413, 420, 427, 839, 857, 880], "ci": [138, 147, 202, 211, 226, 239, 558, 679, 702, 704, 772, 793, 839, 880], "\u00b5v\u00b2": 138, "eeg_power_band": 138, "compat": [138, 145, 172, 177, 257, 264, 265, 266, 267, 320, 362, 371, 385, 393, 416, 418, 421, 423, 424, 425, 450, 469, 478, 479, 531, 558, 702, 704, 778, 780, 801, 802, 813, 837, 845, 847, 859, 862, 865, 880], "psds_band": 138, "boilerpl": 138, "sckit": 138, "manner": [138, 152, 179, 226, 227, 259, 264, 880], "thank": [138, 141, 839, 868], "pipe": [138, 839, 856], "n_estim": [138, 413, 420], "acc": 138, "6854034451495921": 138, "ye": [138, 209, 210, 226, 266, 478, 498, 618, 859, 880], "databas": [138, 244, 388, 402, 403], "mathieu": [138, 244, 880], "galtier": [138, 244], "pierrick": [138, 244], "arnal": [138, 244], "gill": [138, 244], "wainrib": [138, 244], "architectur": [138, 244, 880], "rehabilit": [138, 244], "758": [138, 196, 231, 244], "769": [138, 231, 244], "tnsre": [138, 244], "2813138": [138, 244], "kemp": [138, 244, 402, 403, 856], "zwinderman": [138, 244, 402, 403, 856], "tuk": [138, 244, 403, 856], "kamphuisen": [138, 244, 402, 403, 856], "obery\u00e9": [138, 244, 403, 856], "feedback": [138, 244, 403, 856, 880], "microcontinu": [138, 244, 403, 856], "1185": [138, 140, 244, 403, 856], "1194": [138, 244, 403, 856], "867928": [138, 244, 403, 856], "60_sleep": [138, 140], "stage": [139, 140, 145, 156, 157, 166, 173, 192, 200, 202, 205, 206, 211, 217, 244, 258, 259, 264, 265, 266, 267, 269, 276, 360, 402, 439, 478, 479, 493, 518, 572, 606, 611, 702, 738, 781, 835, 839, 846, 855, 856, 870, 880], "polysomnographi": [139, 140, 166, 258, 264, 269, 402, 403, 439, 478, 493, 606, 702, 781, 856, 880], "psg": [139, 140, 166, 258, 264, 269, 402, 439, 478, 493, 606, 702, 781, 856, 880], "auto_tutorials_clin": 140, "535": 140, "cover": [141, 148, 150, 152, 154, 156, 163, 164, 166, 167, 169, 172, 173, 174, 187, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 215, 218, 219, 226, 237, 241, 242, 270, 274, 588, 596, 605, 684, 830, 839, 862, 863, 880], "possibli": [141, 150, 167, 173, 202, 228, 229, 266, 267, 276, 297, 298, 310, 354, 358, 359, 369, 370, 371, 385, 410, 417, 453, 454, 473, 475, 476, 536, 558, 576, 577, 682, 748, 788, 855, 880], "del_proj": [141, 150, 199, 206, 207, 208, 264, 265, 266, 267, 478, 479, 880], "plot_projs_topomap": [141, 143, 150, 207, 218, 264, 265, 266, 267, 478, 479, 799, 870, 880], "legaci": [141, 143, 218, 264, 265, 266, 267, 478, 479, 780, 802, 880], "plot_psd_topomap": [141, 143, 239, 264, 265, 266, 267, 478, 479, 880], "sample_data_fold": [141, 143, 146, 147, 156, 167, 168, 169, 170, 171, 199, 200, 201, 203, 205, 206, 207, 208, 210, 215, 216, 217, 218, 239], "sample_data_raw_fil": [141, 143, 146, 147, 167, 168, 169, 170, 199, 200, 201, 203, 205, 206, 207, 208, 210, 215, 216, 217, 218, 239], "sample_data_events_fil": [141, 146, 216], "events_from_fil": [141, 216], "bare": [141, 167], "299693": [141, 152], "699283": 141, "quot": [141, 195, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703, 839, 862], "string": [141, 144, 145, 146, 150, 151, 169, 170, 172, 173, 201, 215, 216, 217, 239, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 310, 312, 321, 327, 329, 340, 353, 354, 358, 359, 363, 369, 374, 377, 378, 379, 382, 383, 385, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 410, 412, 413, 417, 420, 426, 427, 431, 434, 439, 444, 445, 458, 460, 462, 470, 477, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 513, 518, 525, 531, 532, 555, 556, 557, 558, 560, 561, 572, 573, 574, 575, 577, 579, 580, 584, 588, 594, 596, 603, 612, 614, 618, 636, 656, 657, 658, 659, 660, 662, 665, 668, 677, 681, 683, 686, 695, 696, 700, 701, 702, 703, 704, 708, 709, 710, 711, 713, 731, 735, 736, 738, 748, 756, 764, 765, 772, 778, 779, 780, 782, 784, 785, 786, 787, 788, 791, 792, 799, 800, 801, 802, 803, 806, 808, 810, 811, 812, 837, 838, 839, 854, 859, 865, 880], "event_dict": [141, 143, 146, 150, 152, 167, 169, 211, 216, 221, 239], "buttonpress": [141, 150, 152, 167, 169, 173, 216], "mention": [141, 145, 152, 167, 169, 170, 171, 176, 202, 206, 207, 208, 215, 231, 353, 839], "turn": [141, 150, 151, 153, 176, 192, 200, 205, 206, 207, 208, 241, 257, 259, 264, 451, 515, 649, 749, 769, 856, 861, 862, 880], "accommod": [141, 880], "request": [141, 162, 167, 172, 173, 205, 207, 210, 215, 216, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 409, 478, 479, 558, 570, 571, 608, 645, 681, 683, 701, 702, 704, 757, 780, 789, 791, 806, 811, 835, 845, 846, 859, 860, 861, 865, 880], "drop_log": [141, 143, 201, 259, 264, 265, 274, 570, 571, 703, 777, 880], "too_short": [141, 152, 264, 703], "forget": [141, 158, 159, 169, 839], "brows": [141, 173, 182, 200, 217, 262, 264, 265, 478, 479, 558, 776, 778, 795, 801, 851, 857, 880], "scrollbar": [141, 264, 265, 478, 479, 558, 778, 795, 801, 880], "focus": [141, 142, 182, 217, 264, 265, 478, 479, 558, 657, 662, 778, 795, 801, 839, 843, 846, 864], "screen": [141, 244, 256, 264, 265, 478, 479, 778, 801, 814, 880], "bracket": [141, 150, 152, 170, 190, 215, 221, 239, 880], "catch": [141, 143, 167, 182, 230, 236, 839], "charact": [141, 167, 170, 200, 215, 216, 324, 494, 509, 606, 612, 656, 657, 658, 659, 660, 662, 756, 839, 880], "tag": [141, 145, 152, 166, 242, 243, 244, 256, 264, 265, 269, 274, 312, 328, 434, 439, 488, 509, 555, 702, 703, 756, 810, 835, 839, 856, 868, 880], "complain": 141, "ask": [141, 145, 161, 839, 854, 856, 860, 861], "except": [141, 144, 172, 176, 177, 210, 215, 264, 265, 266, 267, 284, 285, 328, 348, 349, 354, 402, 451, 478, 479, 480, 547, 559, 577, 628, 691, 695, 738, 839, 862, 865, 880], "keyerror": [141, 261, 264, 265, 269, 273, 288, 302, 524, 703, 735], "rais": [141, 145, 208, 259, 261, 264, 265, 266, 267, 269, 270, 273, 274, 275, 278, 284, 285, 288, 302, 316, 339, 342, 348, 349, 354, 358, 361, 363, 365, 369, 370, 402, 429, 437, 451, 457, 458, 460, 478, 479, 498, 524, 547, 549, 558, 587, 608, 619, 637, 639, 642, 646, 650, 687, 688, 690, 691, 700, 702, 703, 704, 735, 781, 792, 826, 828, 839, 861, 880], "reorder_channel": [141, 150, 215, 264, 265, 266, 267, 478, 479, 700, 702, 703, 704, 880], "exploratori": [141, 150, 168, 206, 215, 227, 857], "epochs_eeg": 141, "new_ord": [141, 150], "epochs_subset": 141, "032": [141, 150, 170, 223, 227, 244], "033": [141, 150, 170, 223], "034": [141, 150, 170, 223], "035": [141, 150, 170, 223], "037": [141, 150, 170, 215, 223], "039": [141, 143, 150, 170, 223], "041": [141, 142, 143, 149, 150, 170, 223], "042": [141, 150, 170, 223, 862], "043": [141, 150, 170, 223], "045": [141, 143, 150, 170, 223], "046": [141, 143, 150, 170, 223, 244, 660, 862], "047": [141, 143, 150, 170, 223], "049": [141, 143, 150, 170, 223], "052": [141, 143, 149, 150, 163, 170, 186, 200, 223, 244, 729, 732], "054": [141, 143, 150, 170, 208, 223, 244, 536, 657, 662], "055": [141, 143, 150, 170, 208, 223, 244, 388], "056": [141, 143, 150, 170, 223], "058": [141, 143, 150, 170, 218, 223], "unchang": [141, 150, 206, 264, 265, 266, 267, 478, 479, 589, 640], "blinkchannel": 141, "20auditori": 141, "20buttonpress": 141, "4face": [141, 152], "4visual": 141, "19visual": 141, "shorter_epoch": 141, "include_tmax": [141, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703, 880], "obj": [141, 162, 631, 833, 880], "0998976": 141, "expand": [141, 145, 161, 201, 206, 264, 265, 266, 267, 270, 275, 278, 354, 440, 443, 468, 478, 479, 702, 704, 780, 859, 880], "later_epoch": 141, "tshift": [141, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 438, 478, 479, 700, 703], "amount": [141, 142, 163, 168, 179, 200, 207, 208, 222, 241, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 363, 374, 410, 417, 450, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518, 533, 557, 558, 597, 613, 700, 702, 703, 704, 716, 726, 730, 778, 780, 787, 791, 800, 801, 803, 806, 808, 811, 859, 862, 880], "00166496": 141, "00332992": 141, "99833504": 141, "99667008": 141, "enforc": [141, 583, 880], "eog_data": 141, "channel_4_6_8": 141, "arr": [141, 215, 241, 679], "repeatedli": [141, 205, 207, 478, 479, 845, 880], "hierarch": [141, 144, 145, 239, 244, 434, 473, 523, 835, 880], "multiindex": [141, 264, 265, 700, 702, 703, 704], "aggreg": [141, 144, 146, 240, 264, 265, 266, 267, 314, 434, 478, 479, 700, 702, 704, 779, 780, 880], "endpoint": [141, 144, 169, 221, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 287, 574, 618, 619], "sort_index": 141, "inplac": [141, 146, 258, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 317, 435, 445, 478, 479, 554, 602, 654, 839], "read_epochs_eeglab": [141, 190, 862, 866, 870, 880], "read_epochs_kit": [141, 189, 862, 870, 880], "audiovisu": [141, 167, 215], "epochs_from_fil": 141, "convent": [141, 161, 171, 173, 189, 191, 206, 207, 216, 244, 256, 269, 303, 324, 334, 495, 596, 619, 635, 716, 725, 726, 748, 862, 865, 880], "basenam": [141, 216], "_epo": 141, "issu": [141, 142, 145, 152, 162, 195, 202, 203, 206, 216, 217, 264, 265, 270, 275, 289, 291, 421, 478, 479, 558, 595, 663, 666, 778, 795, 801, 835, 837, 839, 858, 860, 861, 868, 880], "adher": [141, 144, 358, 442], "epochsfif": [141, 144], "anyth": [141, 189, 205, 386, 748, 839], "baseepoch": [141, 558, 839, 870, 880], "ndarrai": [141, 215, 221, 223, 241, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 297, 298, 305, 321, 344, 350, 363, 365, 368, 369, 409, 410, 411, 414, 417, 422, 426, 430, 436, 438, 446, 447, 448, 450, 453, 454, 455, 477, 478, 479, 481, 513, 533, 557, 558, 559, 566, 569, 570, 571, 572, 577, 581, 582, 585, 586, 603, 624, 649, 650, 665, 679, 680, 681, 685, 686, 687, 688, 690, 691, 700, 701, 702, 703, 704, 713, 716, 718, 719, 726, 729, 736, 737, 738, 748, 749, 752, 762, 765, 767, 780, 784, 786, 787, 789, 790, 803, 806, 807, 808, 810, 811, 812, 828, 878, 880], "565": [141, 149, 231], "10_epochs_overview": [141, 149], "aldai": [142, 244, 880], "reason": [142, 150, 151, 163, 167, 172, 173, 185, 200, 201, 202, 203, 204, 206, 207, 208, 215, 217, 226, 235, 236, 244, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 298, 354, 371, 422, 478, 479, 558, 570, 578, 581, 588, 687, 688, 690, 691, 693, 700, 703, 777, 814, 839, 855, 859, 861, 862, 880], "safer": [142, 271, 272, 275, 278, 279, 280, 490], "distort": [142, 190, 202, 218, 241, 490, 738], "spuriou": [142, 147, 163, 451, 859], "carina": [142, 880], "forster": [142, 880], "email": [142, 839, 845], "carinaforster0611": 142, "merge_ev": [142, 216, 354, 870, 880], "baseline_tmin": 142, "baseline_tmax": 142, "trad_aud": 142, "trad_vi": 142, "heterogen": [142, 201, 880], "aud_predictor": 142, "vis_predictor": 142, "trickier": 142, "seaprat": 142, "baseline_predictor": 142, "singleton": [142, 748, 880], "\u03bcv": 142, "microvolt": [142, 189, 488, 862], "unstabl": [142, 163, 204, 354, 859, 880], "transpos": [142, 215, 226, 227, 231, 234, 235, 236, 865, 880], "reg_model": 142, "6254": 142, "lm": [142, 566], "namedtupl": [142, 685], "dict_kei": [142, 170, 206], "1998": [142, 150, 244, 862], "49949": [142, 150], "tell": [142, 151, 156, 163, 167, 172, 201, 205, 207, 215, 228, 230, 236, 277, 839, 842, 843, 858, 862], "strongli": [142, 173, 199, 200, 208, 478, 479, 508, 837, 839, 855, 859, 862], "\u03b2": [142, 143, 218], "constant": [142, 157, 161, 171, 196, 199, 202, 241, 259, 264, 265, 266, 267, 269, 371, 478, 479, 482, 510, 736, 835, 856, 862, 880], "effect_of_baselin": 142, "unsurprisingli": 142, "farther": [142, 859], "weaker": [142, 264, 265, 266, 267, 445, 446, 448, 449, 478, 479, 862], "pure": [142, 275, 839], "influenc": [142, 202, 204, 205, 244, 861], "reg_aud": 142, "reg_vi": 142, "show_sensor": [142, 145, 167, 772, 880], "truncate_yaxi": [142, 231, 772, 880], "subtl": 142, "apart": [142, 151, 169, 221], "diff_tradit": 142, "diff_regress": 142, "themselv": [142, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 473, 475, 476, 536, 788, 861], "ought": 142, "persist": [142, 143, 199, 203, 859, 880], "interaction_effect": 142, "seem": [142, 145, 152, 163, 192, 202, 205, 207, 241, 558, 839], "randomli": [142, 167, 226, 511, 586, 605, 666], "glm": [142, 244, 846], "lift": [142, 179, 196, 234, 236, 244], "psyp": [142, 152, 202, 231, 244, 686, 687, 688, 690, 691], "13451": [142, 244], "15_baseline_regress": [142, 149], "imagemap": 143, "discontinu": [143, 147, 148, 149, 152, 166, 169, 202, 205, 215, 216, 221, 239, 264, 451, 478, 611, 612, 614, 615, 702, 704, 835], "enabl": [143, 173, 218, 241, 256, 257, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 373, 469, 478, 479, 572, 595, 647, 687, 688, 690, 691, 702, 703, 743, 748, 757, 761, 764, 783, 801, 806, 811, 814, 837, 845, 855, 861, 862, 880], "unappli": [143, 151, 206, 208, 264, 265, 266, 267, 440, 441, 442, 443, 478, 479, 880], "purg": 143, "catch_trials_and_buttonpress": 143, "pick_ev": [143, 216, 870], "event_color": [143, 216, 264, 265, 478, 479, 778, 801, 880], "butterfli": [143, 150, 152, 153, 173, 200, 206, 210, 218, 264, 265, 266, 267, 274, 478, 479, 558, 778, 782, 785, 792, 801, 817, 866, 880], "ecg_proj_fil": [143, 206], "ecg_proj": [143, 147, 206, 207], "41auditori": 143, "40button": 143, "8face": 143, "8visual": 143, "40visual": 143, "inherit": [143, 239, 354, 880], "joint": [143, 183, 207, 244, 264, 265, 266, 267, 273, 410, 417, 478, 479, 645, 702, 704, 780, 787, 800, 868, 880], "epochsspectrum": [143, 166, 242, 243, 264, 265, 266, 267, 451, 478, 704, 718, 719, 743, 870, 880], "\u03b4": [143, 218], "\u03b8": [143, 218], "\u03b3": [143, 218], "api": [143, 170, 196, 218, 221, 226, 239, 411, 546, 748, 757, 761, 847, 851, 863], "jointli": [143, 163, 205, 207, 264, 265, 266, 267, 273, 297, 298, 355, 356, 357, 410, 417, 478, 479, 558, 570, 571, 702, 704, 780, 787, 799, 800, 859, 880], "untransform": 143, "docstr": [143, 152, 181, 202, 203, 210, 215, 218, 239, 265, 283, 297, 298, 473, 475, 476, 536, 702, 744, 746, 763, 880], "plot_topo_imag": [143, 264, 265, 880], "accompani": [143, 665, 861], "scalebar": [143, 880], "highli": [143, 189, 207, 222, 230, 497, 613, 617, 686, 843], "customiz": [143, 266, 267, 700, 785], "respond": [143, 145, 195, 861], "opposit": [143, 169, 513, 862], "0242": [143, 170], "pop": [143, 151, 200, 261, 264, 265, 269, 273, 288, 302, 524, 735, 809, 837, 880], "At": [143, 192, 204, 205, 211, 320, 478, 839, 845, 855, 880], "fullscreen": [143, 469, 880], "unusu": [143, 185, 200, 204], "reject_criteria": [143, 146, 152, 167, 201, 211], "3000e": [143, 146, 201], "find_layout": [143, 171, 870, 880], "font_color": [143, 264, 265, 700, 809], "reinforc": 143, "disguis": 143, "mayb": [143, 263, 264, 265, 266, 267, 478, 479, 555, 700, 702, 703, 704], "732": [143, 196], "20_visualize_epoch": [143, 149], "who": [144, 256, 269, 558, 839, 843, 856, 861, 880], "lexic": [144, 856], "decis": [144, 192, 202, 241, 259, 264, 414, 518, 611, 856], "kiloword_data_fold": 144, "kiloword_data_fil": 144, "capabl": [144, 156, 167, 169, 376, 748, 813, 817, 819, 820, 837, 839, 843, 846, 856, 880], "surviv": [144, 269], "reload": 144, "attach": [144, 170, 200, 215, 227, 239, 434, 835], "numberoflett": [144, 227], "english": [144, 856], "lexicon": 144, "wordfrequ": 144, "render": [144, 157, 161, 173, 256, 264, 265, 271, 272, 274, 275, 278, 279, 280, 469, 478, 479, 558, 700, 748, 757, 778, 795, 801, 806, 807, 811, 814, 816, 839, 845, 862, 863, 880], "orthographicdist": 144, "bigramfrequ": 144, "consonantvowelproport": 144, "450000": 144, "189490": 144, "900000": 144, "700704": 144, "546": [144, 231], "600000": 144, "858537": 144, "700000": 144, "454540": 144, "1095": 144, "539076": 144, "686": [144, 196, 231], "drudgeri": 144, "473684": 144, "556303": 144, "732357": 144, "991226": 144, "859": [144, 188, 231], "545879": 144, "957": [144, 231], "billiard": 144, "500000": [144, 145, 195], "672098": 144, "838597": 144, "958": [144, 227, 231], "698970": 144, "088112": 144, "959": [144, 231], "solenoid": 144, "111111": 144, "301030": 144, "544507": 144, "iloc": [144, 146], "iat": 144, "nindex": 144, "arbitrarili": [144, 159, 231, 862], "highcomplex": 144, "startswith": [144, 880], "district": 144, "disarrai": 144, "disast": 144, "diseas": 144, "discord": 144, "dispos": 144, "lasso": [144, 244, 264, 265, 266, 267, 478, 479, 778, 801, 804, 880], "tentacl": 144, "banjo": 144, "corsag": 144, "fall": [144, 152, 169, 172, 210, 217, 257, 274, 365, 403, 434, 451, 560, 835, 862, 880], "rich": [144, 837, 843], "typhoon": 144, "bungalow": 144, "colossu": 144, "linguist": 144, "dozen": [144, 200, 205, 207, 857], "share": [144, 191, 202, 217, 258, 297, 602, 687, 688, 690, 691, 839, 857, 862, 865, 868, 880], "letter": [144, 171, 189, 227, 244, 748, 880], "n_letter": 144, "sort_ord": 144, "obviou": [144, 172, 200, 205, 218, 234], "reaction": [144, 226, 264, 265, 779, 880], "new_metadata": 144, "foo": [144, 151, 172, 264, 265, 385, 703, 839], "971": [144, 149, 231], "30_epochs_metadata": [144, 149], "eriksen": 145, "flanker": [145, 856], "introductori": [145, 151, 163, 169, 170, 199, 215, 216, 226, 859], "straight": [145, 264, 265, 266, 267, 478, 479, 804], "creation": [145, 150, 156, 169, 201, 217, 256, 258, 261, 264, 265, 274, 277, 308, 409, 570, 571, 862, 880], "ourselv": [145, 176, 204, 205, 207], "incorrect": [145, 177, 201, 202, 212, 244, 837, 862, 880], "sophist": [145, 190, 452], "erp_cor": [145, 856, 870], "infil": 145, "core_subject": 145, "001_task": [145, 212], "flankers_eeg": 145, "all_ev": 145, "all_event_id": 145, "935935": 145, "913": [145, 231], "33793": 145, "target_left": 145, "target_right": 145, "incompat": [145, 622, 628, 837, 880], "decid": [145, 211, 241, 259, 264, 265, 450, 518, 611, 777, 861], "1500": 145, "invalid": [145, 228, 880], "metadata_tmin": 145, "metadata_tmax": 145, "why": [145, 152, 159, 161, 201, 202, 206, 215, 223, 226, 230, 244, 729, 732, 861], "event_nam": [145, 231, 434, 437], "551758": 145, "997070": 145, "434570": 145, "797": [145, 192, 196, 231], "343750": 145, "917969": 145, "425781": 145, "416016": 145, "392578": 145, "990234": 145, "402344": 145, "802": [145, 231], "eleg": 145, "row_ev": [145, 434], "pertain": 145, "sync": [145, 258, 269, 439, 495, 602], "508789": 145, "00000": 145, "503906": 145, "449219": 145, "542969": 145, "792": [145, 196, 209, 231], "496094": 145, "794": [145, 196, 209, 231], "437500": 145, "465820": 145, "796": [145, 194, 196, 231], "547852": 145, "46582": 145, "descriptor": [145, 167, 239, 244, 434, 478, 479, 835], "hed": [145, 152, 239, 244, 434, 835], "inspir": [145, 434, 449, 738, 839, 878], "keep_first": [145, 434], "regardless": [145, 152, 172, 191, 204, 207, 451, 799, 835], "first_respons": [145, 434], "notna": 145, "411133": 145, "454102": 145, "443359": 145, "466797": 145, "400391": 145, "499023": 145, "584961": 145, "421875": 145, "450195": 145, "399414": 145, "316406": 145, "416992": 145, "386719": 145, "410156": 145, "467773": 145, "416": [145, 172, 196, 231], "377930": 145, "483398": 145, "457031": 145, "456": [145, 226, 231, 277], "566406": 145, "395508": 145, "354492": 145, "516": [145, 159, 165, 231], "326172": 145, "432617": 145, "538": [145, 231], "322266": 145, "482422": 145, "606": [145, 231], "484375": 145, "652": [145, 231], "371094": 145, "342773": 145, "307617": 145, "442383": 145, "728": [145, 156, 165, 196, 231], "376953": 145, "first_stimulu": 145, "perfect": [145, 159, 202, 210], "stimulus_sid": 145, "response_correct": 145, "correct_response_count": 145, "rememb": [145, 151, 162, 172, 177, 200, 205, 206, 215, 231, 862], "epochs_tmin": 145, "epochs_tmax": 145, "strong": [145, 184, 200, 205, 230, 558, 657, 662, 855], "099609375": 145, "513": [145, 196, 231], "lastli": [145, 173, 209, 211, 240, 241, 839], "vis_erp": 145, "vis_erp_slow": 145, "asid": [145, 173, 199, 236], "fact": [145, 150, 152, 182, 183, 199, 205, 206, 210, 216, 416, 422, 558, 618, 835, 855, 862], "noisier": [145, 192], "deal": [145, 163, 172, 181, 202, 205, 206, 208, 216, 226, 230, 234, 236, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 454, 558, 569, 577, 588, 602, 868, 880], "keep_last": [145, 434], "last_": [145, 434], "last_stimulu": 145, "last_respons": 145, "431641": 145, "576172": 145, "puls": [145, 147, 167, 169, 199, 205, 207, 216, 578, 581, 862], "c5": [145, 501], "cpz": 145, "isna": 145, "bummer": 145, "impress": 145, "resp_erp_correct": 145, "resp_erp_incorrect": 145, "deflect": [145, 199, 206, 207, 880], "immedi": [145, 157, 169, 200, 205, 208, 241, 257, 427, 478, 479, 561, 611, 672, 675, 757, 801, 835, 839, 861, 862, 880], "doubt": 145, "resp_erp_diff": 145, "bolder": 145, "set_linewidth": 145, "trough_time_idx": 145, "trough_tim": 145, "emili": [145, 202, 244, 856, 880], "kappenman": [145, 202, 244, 856], "jaclyn": [145, 244, 856], "farren": [145, 244, 856], "wendi": [145, 195, 244, 416, 856], "zhang": [145, 244, 856, 862, 880], "andrew": [145, 181, 244, 558, 689, 856, 880], "stewart": [145, 244, 856], "luck": [145, 152, 202, 244, 856], "117465": [145, 244, 856], "nima": [145, 244, 434], "bigd": [145, 244, 434], "shamlo": [145, 244, 434], "kreutz": [145, 244, 434], "delgado": [145, 244, 434], "robbin": [145, 244, 434], "makoto": [145, 244, 434], "miyakoshi": [145, 244, 434], "marissa": [145, 244, 434], "westerfield": [145, 244, 434], "tarik": [145, 244, 434], "bel": [145, 244, 434], "bahar": [145, 244, 434], "koth": [145, 244, 434], "jessica": [145, 244, 434], "hsi": [145, 244, 434], "globalsip": [145, 244, 434], "6736796": [145, 244, 434], "892": [145, 149, 209, 231], "40_autogenerate_metadata": [145, 149], "workflow": [146, 156, 201, 856, 858, 880], "200e": [146, 152, 201], "0113": [146, 167, 170, 215], "0112": [146, 167, 170, 215], "0122": [146, 167, 170, 215, 240], "0132": [146, 170], "199795": 146, "320252": 146, "567619": 146, "248584": 146, "609895": 146, "700540": 146, "352746": 146, "908667": 146, "193135": 146, "049675": 146, "702938": 146, "168267": 146, "480975": 146, "182237": 146, "225684": 146, "072452": 146, "186476": 146, "283711": 146, "006895": 146, "912317": 146, "130290": 146, "157198": 146, "842466": 146, "986073": 146, "179816": 146, "040471": 146, "643716": 146, "835772": 146, "517952": 146, "214631": 146, "043144": 146, "672744": 146, "173156": 146, "688943": 146, "974112": 146, "561683": 146, "450115": 146, "778315": 146, "795987": 146, "277138": 146, "timedelta": [146, 217, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "132025e": 146, "156762e": 146, "324858e": 146, "060990e": 146, "870054e": 146, "835275e": 146, "790867e": 146, "049675e": 146, "702938e": 146, "416827e": 146, "748098e": 146, "018224e": 146, "212257e": 146, "072452e": 146, "283711e": 146, "300690e": 146, "691232e": 146, "213029e": 146, "515720e": 146, "178425e": 146, "986073e": 146, "304047e": 146, "643716e": 146, "783577e": 146, "851795e": 146, "521463e": 146, "204314e": 146, "672744e": 146, "568894e": 146, "974112e": 146, "556168e": 146, "450115e": 146, "377831e": 146, "117960e": 146, "727714e": 146, "0133": [146, 170], "dai": [146, 207, 256, 264, 265, 266, 267, 269, 478, 479, 480], "800204787": 146, "379736": 146, "123525": 146, "806864627": 146, "734826": 146, "339465": 146, "813524468": 146, "996158": 146, "627037": 146, "820184308": 146, "748030": 146, "024973": 146, "826844149": 146, "123811": 146, "917677": 146, "pivot": [146, 262, 776, 807], "long_df": [146, 227], "coupl": [146, 211, 215, 236, 413, 592, 846, 864, 880], "1342": [146, 170, 209, 234, 236], "categorydtyp": 146, "nicer": [146, 206, 880], "hue": 146, "peak_lat": 146, "regex": [146, 880], "2123": [146, 170], "idxmax": 146, "melt": 146, "id_var": 146, "var_nam": 146, "value_nam": 146, "satur": [146, 506], "50_epochs_to_data_fram": [146, 149], "equidistantli": 147, "consecut": [147, 169, 234, 271, 272, 275, 278, 279, 280, 451, 518, 560, 561, 880], "briefli": [147, 152, 202, 218, 226], "hous": 147, "compute_proj_ecg": [147, 206, 207, 574, 578, 855, 870, 880], "envelope_correl": [147, 880], "manag": [147, 167, 172, 173, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 413, 420, 423, 426, 427, 453, 466, 468, 478, 479, 517, 520, 521, 531, 532, 541, 542, 547, 558, 563, 570, 571, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 742, 743, 778, 780, 783, 795, 801, 802, 837, 839, 844, 846, 861, 868, 880], "chan": [147, 255, 680], "heart": [147, 199, 204, 244, 729, 732, 880], "beat": [147, 211, 570, 578, 581, 652], "onpca": 147, "onecg": 147, "make_fixed_length_epoch": [147, 259, 870, 880], "unsuit": [147, 880], "event_related_plot": 147, "1142": [147, 170, 209], "n_sensor": [147, 240, 271, 275, 279, 764], "alpha_data": 147, "1530": [147, 209], "epochconnect": 147, "corr_matrix": 147, "first_30": 147, "last_30": 147, "corr_matric": 147, "color_lim": 147, "mpbl": 147, "60_make_fixed_length_epoch": [147, 149], "736": [149, 196, 231], "auto_tutorials_epoch": 149, "731": [149, 196, 231], "raw_fil": [150, 152], "happen": [150, 152, 157, 161, 162, 168, 169, 172, 196, 201, 203, 205, 226, 257, 264, 265, 317, 433, 435, 835, 839, 856, 859, 861, 865, 880], "discuss": [150, 152, 157, 166, 167, 169, 174, 181, 192, 196, 199, 202, 203, 215, 218, 226, 231, 241, 244, 703, 838, 839, 856, 858, 859, 861, 862, 880], "transfer": [150, 196, 200, 202, 589, 835, 855], "maintain": [150, 200, 226, 264, 265, 266, 267, 478, 479, 480, 549, 839, 858, 861, 862, 880], "proven": [150, 880], "never": [150, 264, 265, 318, 576, 766, 839, 862, 880], "72160572e": 150, "57859354e": 150, "98040833e": 150, "75128428e": 150, "15309907e": 150, "83186429e": 150, "bewar": [150, 161, 862], "evoked_subset": 150, "repair": [150, 166, 167, 199, 200, 201, 206, 210, 213, 214, 218, 244, 264, 266, 267, 269, 357, 451, 478, 493, 552, 555, 557, 558, 570, 571, 572, 574, 575, 595, 596, 704, 799, 800, 820, 855, 880], "evk_fil": 150, "evokeds_list": [150, 151], "right_vi": 150, "remedi": 150, "left_right_aud": 150, "6992832460543575": [150, 152], "fairli": [150, 167, 199, 201, 202, 203, 205, 207, 208], "left_aud": 150, "right_aud": 150, "proport": [150, 226, 271, 272, 273, 275, 278, 279, 280, 353, 365, 476, 558, 566, 806, 811, 862, 880], "grand_averag": [150, 152, 870, 880], "intend": [150, 172, 210, 216, 257, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 434, 478, 479, 558, 589, 595, 846], "standard_error": [150, 264, 265, 266, 267, 618, 880], "iter_evok": [150, 152, 264, 265, 880], "ix": [150, 152], "return_amplitud": [150, 152, 266, 267], "648": [150, 231], "749": [150, 155, 196, 231], "10_evoked_overview": [150, 155], "evoked_fil": 151, "life": [151, 861], "evk": [151, 152], "superimpos": [151, 173, 199, 218, 558, 749, 792], "timeseri": [151, 223, 264, 265, 266, 267, 478, 479, 667, 701], "resembl": [151, 163, 176, 525, 581, 582], "wing": 151, "behav": [151, 202, 215, 268, 269, 439, 880], "time_ranges_of_interest": 151, "drag": [151, 152, 162, 217, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 779, 780, 784, 787, 791, 800, 802, 803, 808, 810, 837, 857], "averaging_dur": 151, "augment": [151, 865], "custom_func": 151, "0x7faf54f491b0": 151, "substr": [151, 623, 635, 880], "action": [151, 172, 839, 865, 868], "ambigu": [151, 272, 278, 280, 880], "temp_list": 151, "_comment": 151, "_evk": 151, "overhead": [151, 647, 743, 880], "trans_fil": 151, "00097": 151, "meg_surf": [151, 517], "_map": 151, "20_visualize_evok": [151, 155], "materi": [152, 163, 835, 839, 859], "link": [152, 190, 244, 271, 275, 279, 445, 762, 806, 839, 845, 859, 862, 868, 880], "events_fil": [152, 201], "discard": [152, 200, 205, 206, 207, 210, 236, 587, 588, 615, 880], "last_samp": [152, 269, 362, 477, 478, 479, 835, 880], "13514": 152, "mislabel": 152, "lowercas": 152, "channel_renaming_dict": [152, 215], "schemat": 152, "diagram": [152, 205, 835], "addition": [152, 172, 191, 199, 206, 217, 239, 255, 272, 278, 280, 318, 329, 646, 728, 731, 811, 839, 854, 864], "realist": [152, 244, 855, 862], "dedic": [152, 199, 205, 207, 215, 478, 479, 801, 839, 843, 861, 869, 880], "use_browser_backend": [152, 200, 203, 205, 206, 207, 208, 264, 265, 478, 479, 558, 778, 795, 801, 870, 880], "xx": [152, 200, 203, 206, 207, 208, 258, 839], "qt": [152, 172, 173, 200, 203, 205, 206, 207, 208, 264, 265, 478, 479, 558, 748, 778, 795, 801, 817, 820, 837, 859, 880], "scheme": [152, 189, 221, 230, 261, 264, 265, 266, 267, 273, 410, 417, 426, 478, 479, 557, 558, 572, 642, 645, 681, 700, 702, 704, 765, 778, 780, 787, 791, 800, 803, 804, 808, 810, 839, 862, 880], "eeg53": 152, "eog61": 152, "chose": 152, "consol": [152, 843, 880], "duplic": [152, 162, 259, 264, 265, 266, 267, 270, 274, 312, 340, 478, 479, 636, 880], "eeg03": 152, "eeg01": 152, "eeg02": 152, "eeg04": 152, "eeg06": 152, "eeg07": 152, "eeg25": 152, "25auditori": 152, "27buttonpress": 152, "5visual": 152, "28visual": 152, "barplot": [152, 205], "lose": [152, 190, 217, 859], "plot_drop_log": [152, 201, 211, 264, 265, 870, 880], "break": [152, 166, 213, 214, 217, 258, 264, 266, 269, 359, 478, 555, 558, 561, 574, 575, 578, 579, 615, 833, 839, 855, 880], "l_aud": [152, 236], "l_vi": [152, 236], "fig1": [152, 171], "speak": [152, 168, 169, 204, 847], "agreement": [152, 861], "warrant": 152, "popul": [152, 156, 166, 221, 224, 229, 244, 265, 267, 373, 410, 442, 479, 589, 682, 744, 835, 880], "leverag": [152, 861], "verifi": [152, 183, 241, 844, 845, 862], "plain": [152, 204, 241, 332, 825], "ddof": [152, 163, 859], "lime": 152, "revisit": [152, 244, 410], "eeg17": 152, "eeg18": 152, "eeg26": 152, "eeg23": 152, "eeg24": 152, "eeg34": 152, "eeg35": 152, "left_ix": 152, "right_ix": 152, "roi_dict": 152, "left_roi": [152, 264, 265, 266, 267, 779, 784], "right_roi": [152, 264, 265, 266, 267, 779, 784], "roi_evok": 152, "combine_channel": [152, 870, 880], "aud_minus_vi": 152, "29969": 152, "69928": 152, "weak": [152, 205], "chapter": 152, "erplab": [152, 244], "consequ": [152, 163, 170, 210, 355, 356, 357, 439, 450, 495, 545, 859, 862, 880], "voltag": [152, 167, 169, 189, 190, 208, 216, 502, 835, 880], "p100": 152, "submit": [152, 227, 839, 861], "amp": [152, 179, 184, 186, 256, 880], "throughout": [152, 172, 211, 558, 856, 880], "remaind": 152, "print_peak_measur": 152, "3f": [152, 210, 227, 231, 241, 264, 265, 266, 267, 478, 479, 702, 704, 780, 787], "good_tmin": 152, "good_tmax": 152, "eeg55": 152, "578": [152, 229, 231], "508": [152, 226, 227, 231], "priori": [152, 241, 862], "believ": [152, 241, 839, 862], "eeg59": 152, "fist": 152, "l_vis_roi": 152, "ch_roi": 152, "lat_roi": 152, "amp_roi": 152, "FOR": 152, "ONE": [152, 158, 196, 244], "713": [152, 196, 231], "suscept": [152, 203, 577], "challeng": [152, 212, 244, 856, 859, 868], "meth": [152, 173, 839, 880], "guarante": [152, 189, 200, 205, 208, 210, 226, 264, 265, 266, 267, 440, 441, 442, 443, 478, 479, 508, 880], "rise": [152, 494, 606, 612, 835], "crucial": [152, 157, 199, 234], "095": [152, 171, 261, 264, 265, 266, 267, 273, 312, 330, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 772, 780, 782, 784, 787, 788, 791, 798, 800, 802, 803, 804, 808, 810, 880], "bad_tmin": 152, "bad_tmax": 152, "bad_lat_roi": 152, "bad_amp_roi": 152, "898": [152, 209, 231], "unclear": [152, 839], "truli": [152, 202, 687], "pink": [152, 157, 764, 835], "star": 152, "yourself": [152, 157, 170, 199, 203, 215, 256, 266, 267, 489, 787, 839], "c6": 152, "act": [152, 170, 203, 204, 206, 210, 264, 265, 266, 267, 277, 297, 298, 347, 473, 475, 476, 478, 479, 536, 588, 645, 703, 835, 857, 859, 861, 880], "eeg54": 152, "eeg57": 152, "l_vis_mean_roi": 152, "mean_amp_roi": 152, "mean_amp_roi_df": 152, "mean_amp": 152, "numeric_onli": 152, "279764": 152, "685840": 152, "reiter": 152, "hypothes": [152, 226, 227, 868], "l_vis_crop": 152, "mean_amp_al": 152, "mean_amp_all_df": 152, "option_context": 152, "max_column": 152, "689513": 152, "078492": 152, "381191": 152, "609264": 152, "eeg05": 152, "113717": 152, "eeg56": 152, "064174": 152, "259681": 152, "eeg58": 152, "156472": 152, "802306": 152, "eeg60": 152, "878811": 152, "dietrich": [152, 244, 525, 862], "lehmann": [152, 244, 525, 862], "wolfgang": [152, 244, 729, 732], "skrandi": [152, 244], "identif": [152, 205, 244, 572], "checkerboard": [152, 167, 241, 244, 856], "621": [152, 209, 231, 244], "90419": [152, 244], "neurobiologi": [152, 244], "1984": [152, 244], "0301": [152, 244], "0082": [152, 244], "90003": [152, 244], "micah": [152, 244], "brunet": [152, 244], "michel": [152, 186, 244, 388, 558, 660], "s10548": [152, 208, 244, 573, 665], "0054": [152, 244], "ma": [152, 244, 880], "52585": [152, 244], "mitpress": [152, 244], "book": [152, 244, 449, 839], "javier": [152, 244], "lopez": [152, 244], "calderon": [152, 244], "00213": [152, 244], "preclud": [152, 202, 210, 244, 588], "00131": [152, 202, 244], "rufin": [152, 202, 244], "vanrullen": [152, 202, 244], "fallaci": [152, 202, 244], "00365": [152, 202, 244], "nichola": [152, 212, 244, 856], "gaspelin": [152, 244], "12639": [152, 244], "602": [152, 155, 169, 203, 865], "30_eeg_erp": [152, 155], "perspect": [153, 206, 748], "satisfi": [153, 162, 226, 297, 298, 682, 702, 704, 862], "193": [153, 170, 226, 880], "40_whiten": [153, 155], "repetit": [154, 166, 665], "839": [155, 231, 862], "auto_tutorials_evok": 155, "outer": [156, 159, 161, 162, 184, 256, 307, 558, 588, 748, 794, 835, 840, 843, 846, 855, 856, 859, 862, 865], "tissu": [156, 159, 835], "boundari": [156, 159, 173, 183, 192, 218, 261, 264, 265, 266, 267, 270, 273, 274, 363, 410, 417, 468, 478, 479, 557, 558, 577, 605, 665, 679, 700, 702, 704, 748, 753, 765, 766, 780, 787, 791, 800, 802, 803, 808, 810, 835, 845, 865, 880], "analog": [156, 189, 191, 196, 206, 210, 264, 265, 266, 267, 445, 478, 479, 486, 493, 500, 555, 700, 702, 703, 704, 835, 865, 880], "freesurfer_hom": [156, 372, 845], "setupfreesurf": 156, "sh": [156, 842, 845], "folder": [156, 157, 159, 162, 171, 189, 215, 274, 277, 303, 307, 338, 377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 458, 459, 464, 494, 506, 612, 644, 764, 766, 839, 842, 845, 880], "my_subject": 156, "my_nifti": 156, "subfold": [156, 385], "beforehand": [156, 264, 265, 778, 816], "set_config": [156, 172, 264, 265, 375, 385, 458, 478, 479, 558, 746, 778, 795, 801, 837, 839, 855, 870, 880], "overview": [156, 157, 166, 171, 174, 175, 181, 201, 205, 207, 213, 214, 226, 240, 249, 264, 265, 266, 267, 269, 275, 353, 451, 478, 479, 524, 525, 539, 555, 558, 574, 575, 578, 579, 700, 730, 772, 778, 781, 795, 801, 817, 835, 859], "buckner40not": 156, "standalon": [156, 841, 872, 880], "10_background_freesurf": [156, 165], "landmark": [157, 221, 335, 365, 835, 855, 862, 865, 880], "t1w": [157, 312], "nifti1imag": [157, 183, 276, 279, 280, 307], "xyzt_unit": 157, "uint8": 157, "t1_mgh": 157, "mghimag": [157, 862], "draw": [157, 171, 177, 178, 202, 228, 261, 264, 265, 266, 267, 273, 312, 410, 417, 478, 479, 557, 558, 572, 581, 700, 702, 704, 765, 771, 772, 779, 780, 782, 787, 791, 794, 798, 800, 803, 804, 808, 810, 862, 865, 880], "ight": 157, "nterior": 157, "longest": 157, "uperior": 157, "camera": [157, 161, 266, 267, 469, 748, 762, 764, 783, 816, 880], "dig_mri_dist": [157, 365, 870, 880], "na": [157, 241, 485, 835], "preauricular": [157, 312, 336, 835, 862], "manufactur": [157, 171, 189, 190, 191, 835, 862, 868, 880], "faq": [157, 190, 202, 208, 309, 371, 486, 588, 860], "intersect": [157, 161, 162, 185, 588, 605, 855, 880], "purpl": [157, 159, 236], "perpendicular": [157, 179, 862], "goe": [157, 161, 202, 217, 862], "upward": [157, 161, 205, 209, 748, 772], "compani": [157, 244, 682, 861], "acquir": [157, 200, 284, 285, 307, 501, 851, 856, 861, 862, 865, 880], "emit": [157, 209, 258, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 284, 285, 316, 339, 348, 349, 354, 358, 361, 363, 365, 369, 370, 429, 444, 457, 460, 478, 479, 498, 558, 589, 608, 637, 639, 700, 702, 703, 704, 745, 781, 792, 826, 828, 835, 880], "coregist": [157, 307, 469], "front": [157, 266, 267, 306, 429, 748, 782, 835, 862], "magenta": 157, "1mm": 157, "anisotrop": [157, 244, 862], "incorrectli": [157, 470, 859, 880], "identity_tran": 157, "mri_voxel": [157, 325, 510, 735], "corner": [157, 192, 202, 203, 206, 218, 256, 264, 265, 266, 267, 269, 478, 479, 761, 772, 778, 786, 801, 865, 880], "inferior": [157, 161, 835], "seghead_rr": 157, "seghead_tri": 157, "read_surfac": [157, 161, 162, 270, 634, 649, 833, 855, 870, 880], "mri_to_head": 157, "scalp_pts_in_head_coord": 157, "head_to_meg": 157, "scalp_pts_in_meg_coord": 157, "vox_to_mri": 157, "get_vox2ras_tkr": [157, 161, 183], "mri_to_vox": 157, "scalp_points_in_vox": 157, "nose": [157, 208, 306], "roughli": [157, 354, 577, 837, 880], "blur": [157, 862], "fiffv_point_cardin": [157, 161, 269, 865], "fiffv_point_nas": [157, 161, 269, 865], "fiffv_coord_head": [157, 268, 269, 865], "nasion_mri": [157, 161], "nasion_vox": [157, 161], "toggl": [157, 167, 173, 192, 200, 205, 218, 264, 265, 478, 479, 558, 748, 778, 793, 795, 801, 817, 880], "radio": [157, 868], "icon": [157, 173], "fid": [157, 699], "icp": [157, 880], "finetun": 157, "inner_skul": [157, 159, 160, 162, 173, 184, 277, 637, 764, 855, 856], "outer_skul": [157, 159, 160, 162, 171, 173, 277, 764, 855, 856], "equiv": [157, 184, 185, 186, 208], "rv": [157, 184, 185, 186, 208, 856], "00349057": [157, 208], "mu1": [157, 184, 185, 186, 208], "944702": [157, 208], "lambda1": [157, 184, 185, 186, 208], "137194": [157, 208], "mu2": [157, 184, 185, 186, 208], "667435": [157, 208], "683781": [157, 208], "mu3": [157, 184, 185, 186, 208], "26548": [157, 208], "lambda3": [157, 184, 185, 186, 208], "0106058": [157, 208], "6156": 157, "1904": 157, "517": [157, 196, 231], "20_source_align": [157, 165], "hsp": [158, 189, 256, 312, 325, 337, 365, 502, 614, 862, 880], "preprat": 158, "jon": [158, 244, 880], "houck": [158, 244, 880], "faveli": [158, 867, 880], "skin": [158, 159, 162, 256, 264, 265, 266, 267, 307, 365, 478, 479, 555, 700, 702, 703, 704, 835, 856, 859, 862, 880], "fit_fiduci": [158, 365], "fit_icp": [158, 365], "n_iter": [158, 365, 586], "nasion_weight": [158, 365], "omit_head_shape_point": [158, 365], "compute_dig_mri_dist": [158, 365], "write_tran": [158, 633, 870], "abil": [158, 179, 181, 196, 658, 659, 728, 731, 857, 861, 868, 880], "set_scale_mod": [158, 365], "fetch_infant_templ": [158, 160, 856, 870, 880], "scale_mri": [158, 365, 640, 870, 880], "clau": [158, 244], "plo": [158, 196, 244], "e0232100": [158, 244], "pone": [158, 196, 244], "0232100": [158, 244], "25_automated_coreg": [158, 165], "concept": [159, 177, 226, 244, 835, 863, 866], "make_watershed_bem": [159, 192, 835, 859, 870, 880], "make_flash_bem": [159, 303, 835, 870, 880], "plot_bem": [159, 161, 309, 764, 859, 862, 870, 880], "plot_bem_kwarg": 159, "brain_surfac": [159, 766], "mrilab": [159, 865], "isn": [159, 167, 223, 241, 260, 264, 380, 402, 403, 622, 625, 628, 703, 839, 859], "candid": [159, 200, 835, 861], "oct4": 159, "90mm": 159, "57798": 159, "24365": 159, "20377": 159, "32480": 159, "22941": 159, "2787": 159, "9357": 159, "20154": 159, "846": [159, 183, 231], "10797": 159, "12738": 159, "14232": 159, "10203": 159, "2362": [159, 205, 244, 558], "10376": 159, "midpoint": [159, 191, 266, 267, 766, 862, 880], "make_bem_model": [159, 162, 192, 277, 365, 429, 460, 516, 522, 608, 637, 639, 828, 855, 870, 880], "4th": [159, 199, 264, 265, 266, 267, 412, 421, 445, 446, 448, 449, 478, 479, 570, 571], "icosahedron": [159, 161, 162, 256, 271, 275, 279, 648, 806], "n_tri": [159, 161, 270, 828], "topologi": [159, 202, 545, 880], "commonli": [159, 169, 171, 176, 202, 241, 269, 468, 558, 835, 880], "474": [159, 231, 277], "gone": 159, "adequ": [159, 207, 269], "1422": [159, 170], "fwd_fix": 159, "explicitli": [159, 173, 189, 196, 201, 203, 204, 205, 234, 259, 264, 265, 266, 267, 269, 274, 297, 298, 303, 310, 313, 329, 354, 358, 359, 369, 370, 371, 410, 412, 417, 426, 431, 448, 449, 453, 454, 473, 475, 476, 478, 479, 511, 536, 557, 558, 560, 573, 574, 575, 580, 586, 594, 596, 603, 605, 645, 652, 653, 654, 663, 664, 666, 668, 686, 687, 688, 689, 690, 691, 700, 702, 703, 704, 708, 709, 710, 711, 713, 731, 772, 778, 779, 782, 784, 785, 788, 797, 802, 837, 839, 855, 861, 868, 880], "src_hemi": 159, "apply_forward": [159, 285, 870, 880], "write_forward_solut": [159, 620, 870, 880], "justifi": [159, 449, 478, 479, 880], "claim": 159, "30_forward": [159, 165], "centimet": 160, "fs_dir": [160, 386], "live": [160, 202, 839, 880], "1005": [160, 209], "new_nam": 160, "rstrip": 160, "fp": [160, 446, 658], "999994": 160, "003552": 160, "000202": 160, "003558": 160, "998389": 160, "056626": 160, "000001": [160, 227, 230], "998395": 160, "2433": [160, 170], "8001": 160, "6mo": [160, 388], "ants6": 160, "0months3t": 160, "come": [160, 176, 182, 189, 190, 202, 203, 205, 207, 217, 227, 241, 270, 275, 372, 501, 519, 615, 835, 837, 839, 843, 844, 856, 862, 880], "fname_1020": 160, "mon": [160, 501], "read_dig_fif": [160, 312, 325, 328, 331, 332, 333, 335, 336, 337, 862, 870, 880], "03d": [160, 495], "99975431": 160, "01839625": 160, "01236795": 160, "00087239": 160, "0143472": 160, "96230429": 160, "27159646": 160, "01252444": 160, "01689809": 160, "27135229": 160, "96233177": 160, "03137219": 160, "48640": 160, "48214": 160, "35_eeg_no_mri": [160, 165], "readabl": [161, 264, 265, 266, 267, 374, 412, 421, 446, 448, 449, 478, 479, 583, 839], "superior": [161, 272, 278, 280, 623, 748, 835, 862], "wide": [161, 167, 215, 839, 861], "unfamiliar": [161, 843], "unsign": [161, 271, 272, 275, 278, 279, 280, 880], "triplet": [161, 269, 454, 525, 650], "geograph": 161, "earth": 161, "north": 161, "prime": [161, 171], "meridian": 161, "degre": [161, 163, 206, 226, 228, 231, 234, 256, 261, 266, 267, 269, 303, 307, 489, 586, 653, 687, 688, 690, 691, 700, 748, 753, 784, 816, 835, 845, 859, 862, 880], "nonetheless": [161, 202], "nativ": [161, 183, 189, 190, 264, 265, 266, 267, 316, 325, 330, 440, 441, 442, 443, 478, 479, 495, 502, 614, 748, 750, 856, 859, 868, 880], "mind": [161, 163, 176, 202, 255, 839], "si": [161, 191, 226, 240, 264, 265, 266, 267, 298, 454, 478, 479, 782, 784], "xyz_ra": 161, "00000000e": 161, "15484021e": 161, "91852465e": 161, "22726395e": 161, "56816911e": 161, "57160827e": 161, "18960930e": 161, "49011647e": 161, "40284092e": 161, "00712036e": 161, "726": [161, 196, 231], "ras_coords_mm": 161, "inv_affin": 161, "i_": [161, 189], "j_": 161, "k_": 161, "imshow_mri": 161, "ori_slic": 161, "saggit": 161, "ori_nam": 161, "set_path_effect": 161, "reorient": 161, "rightward": 161, "x_order": 161, "lip": 161, "y_order": 161, "torig": 161, "vox2ras_tkr": [161, 183], "conform": [161, 191, 258, 862, 880], "matter": [161, 171, 264, 265, 266, 267, 270, 468, 478, 479, 511, 558, 605, 700, 702, 703, 704, 782, 855, 861, 880], "freeurfer": 161, "whenev": [161, 202, 839, 857], "everywher": 161, "xyz_mri": 161, "digpoint": [161, 365, 880], "nasion_head": 161, "nasion_dig_mri": 161, "nasion_dig_vox": 161, "convention": 161, "rr_mm": 161, "313728": 161, "80481719970703": 161, "rr_vox": 161, "tricontour": 161, "renderer_kwarg": 161, "curv": [161, 196, 264, 265, 266, 267, 269, 478, 479, 661, 698, 702, 704, 862, 865], "read_curvatur": [161, 870], "y_shift": 161, "z_shift": 161, "this_rr": 161, "this_tri": 161, "copper_r": 161, "quiver3d": [161, 206, 880], "1050": [161, 196], "wirefram": 161, "cyan": [161, 478, 479, 801], "line_width": 161, "cull": 161, "render_lines_as_tub": 161, "uniformli": [161, 192, 207, 475], "uniform": [161, 365, 431, 525, 652, 667, 690, 691, 835, 880], "subsampl": [161, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 478, 479, 515, 574, 575, 648, 686, 700, 703, 712, 748, 855, 880], "rr_sph": 161, "mri_mni_tran": 161, "xyz_mni": 161, "02248488": 161, "00844919": 161, "03621711": 161, "00111715": 161, "07107091": 161, "91486582": 161, "40609791": 161, "02300193": 161, "00875602": 161, "43369992": 161, "02811882": 161, "03356932": 161, "land": [161, 221], "difficult": [161, 190, 201, 231, 558, 862], "gist": [161, 177, 190, 264, 265, 266, 267, 478, 479, 859], "github": [161, 264, 265, 266, 267, 478, 479, 837, 847, 851, 858, 859, 860, 861], "alexrockhil": 161, "b5a1ce6c6ba363cf3f277cd321a763bf": 161, "50_background_freesurfer_mn": [161, 165], "aris": [162, 199, 577], "ezemikulan": 162, "blender_freesurf": 162, "ezequiel": [162, 880], "mikulan": [162, 880], "manorama": [162, 880], "kadwani": [162, 880], "shutil": 162, "flash": [162, 277, 303, 307, 584, 764, 880], "surf_dir": 162, "problemat": [162, 190, 202, 205, 206, 210, 226, 264, 265, 274, 308, 330], "skill": [162, 839], "conv": 162, "conv_dir": 162, "makedir": 162, "exist_ok": 162, "read_metadata": [162, 631], "write_surfac": [162, 631, 634, 870, 880], "wavefront": [162, 631, 833, 880], "vert": [162, 179, 223, 241, 277], "preset": [162, 271, 272, 275, 278, 279, 280, 748, 806, 811], "beginn": [162, 841, 864], "teach": [162, 178, 244, 880], "_fix": 162, "inner_skull_fix": 162, "backup": 162, "mistak": [162, 839, 859], "inner_skull_orig": 162, "volume_info": [162, 631, 833], "vol_info": 162, "faulti": 162, "write_head_bem": [162, 870, 880], "head_dir": 162, "read_bem_surfac": [162, 515, 516, 607, 870, 880], "make_scalp_surfac": [162, 846, 870, 880], "shrinkwrap": 162, "\u2460": 162, "\u2461": 162, "\u2462": 162, "\u2464": 162, "tab": [162, 256, 469, 546, 756, 839, 857], "\u2465": 162, "\u2467": 162, "noth": [162, 185, 186, 201, 261, 264, 265, 266, 267, 273, 276, 354, 365, 410, 417, 421, 423, 478, 479, 557, 558, 572, 642, 700, 702, 704, 751, 761, 765, 780, 787, 791, 800, 803, 808, 810, 856, 865, 880], "\u2468": 162, "extrus": 162, "extrud": 162, "rough": [162, 859], "ahead": [162, 839], "kernel": [162, 191, 195, 226, 241, 244, 271, 272, 275, 278, 279, 280, 416, 653, 837, 843, 845, 859, 880], "mri_convert": [162, 862], "fwhm": [162, 716, 726, 730, 870, 880], "t1_smoothed_3": 162, "delet": [162, 172, 200, 201, 211, 258, 261, 264, 265, 266, 267, 273, 363, 410, 417, 478, 479, 557, 558, 572, 644, 700, 702, 704, 765, 787, 791, 800, 803, 808, 839, 847, 862, 880], "cleaner": [162, 202], "encount": [162, 166, 190, 202, 444, 837, 845, 859], "runtimeerror": 162, "20516": 162, "isomorph": 162, "defect": [162, 256, 308, 365, 429, 460, 608, 637, 639, 828, 859, 880], "733": [162, 196, 209, 231], "1014": 162, "2068": [162, 226], "7732": 162, "8435": [162, 880], "8489": 162, "10181": 162, "11120": [162, 880], "11121": 162, "11122": [162, 880], "11304": 162, "11788": 162, "disrupt": 162, "999668": 162, "wrong": [162, 838, 880], "easiest": [162, 199, 201, 203, 221, 839, 842], "unedit": 162, "gpl": 162, "water": 162, "clean_from_arrai": 162, "80_fix_bem_in_blend": [162, 165], "bb": [163, 439], "pp": [163, 264, 265, 300, 431, 682], "desc": [163, 206, 273], "66000": 163, "write_cov": [163, 609, 870, 880], "noise_cov_baselin": 163, "noise_cov_reg": 163, "1769": [163, 195], "1785": 163, "1797": 163, "freedom": [163, 206, 226, 228, 231, 234, 261, 266, 267, 469, 687, 688, 690, 691, 764, 783, 859, 880], "violat": [163, 839, 859], "hack": [163, 241], "evoked_meg": 163, "empty_room": 163, "improp": [163, 880], "overestim": [163, 204], "juha": [163, 210, 244, 588, 859], "simola": [163, 210, 244, 588, 859], "kajola": [163, 210, 244, 431, 569, 588, 859, 862], "3359": [163, 244, 859], "3372": [163, 244, 859], "tsp": [163, 205, 244, 354, 558, 859], "853302": [163, 244, 859], "90_compute_covari": [163, 165], "914": 165, "auto_tutorials_forward": 165, "emphasi": [166, 266, 267, 782, 863], "topic": [166, 167, 190, 199, 202, 204, 244, 297, 854, 863, 864], "knowledg": [166, 241, 855, 861], "unexplain": 166, "experienc": [166, 560, 861], "troubl": [166, 880], "configur": [166, 169, 174, 175, 191, 207, 215, 231, 264, 265, 269, 357, 385, 458, 459, 469, 478, 479, 502, 536, 546, 558, 570, 571, 644, 647, 699, 743, 748, 778, 795, 801, 814, 815, 816, 837, 844, 856, 858, 859, 862, 865, 868, 870, 880], "infrar": [166, 191, 213, 214, 244, 264, 265, 266, 267, 269, 353, 439, 478, 479, 506, 555, 590, 591, 592, 594, 700, 702, 703, 704, 748, 772, 781, 786, 846, 856, 862, 880], "spectroscopi": [166, 191, 213, 214, 244, 264, 265, 266, 267, 269, 353, 439, 478, 479, 506, 555, 590, 591, 592, 594, 700, 702, 703, 704, 748, 772, 781, 786, 846, 856, 862, 880], "vssr": [166, 242, 243, 264, 269, 312, 328, 439, 488, 555, 702, 810, 856], "bti": [166, 187, 188, 226, 261, 262, 264, 266, 267, 269, 302, 354, 451, 453, 489, 522, 764, 776, 862, 880], "twowai": [166, 232, 233, 264, 269, 478, 555, 615, 681, 683, 684, 688, 703, 730, 880], "anova": [166, 196, 226, 229, 232, 233, 237, 238, 264, 266, 267, 269, 275, 277, 360, 478, 524, 525, 539, 555, 615, 630, 672, 681, 682, 683, 684, 688, 691, 692, 703, 730, 748, 880], "spatiotempor": [166, 228, 232, 233, 244, 264, 266, 267, 269, 318, 478, 555, 588, 615, 680, 687, 691, 692, 703, 730, 769, 772, 880], "strf": [166, 197, 198, 416, 422, 450], "submodul": [166, 167, 199, 205, 207, 215, 221, 224, 839, 880], "corrupt": [166, 199, 200, 224, 225, 261, 264, 267, 268, 269, 270, 275, 354, 364, 451, 478, 524, 525, 539, 620, 623, 664, 667, 748, 859, 880], "auto_tutorials_python": 166, "auto_tutorials_jupyt": 166, "varieti": [167, 189, 191, 199, 215, 862], "smoothli": [167, 201, 215, 261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 780, 787, 791, 800, 803, 808], "substitut": [167, 372, 837, 861, 862], "glimps": [167, 215], "41700": 167, "custom_ref_appli": [167, 170, 215, 221, 269, 880], "file_id": [167, 170, 215, 264, 265, 266, 267, 269, 478, 479, 480, 865, 880], "hpi_mea": [167, 170, 215, 269, 880], "hpi_result": [167, 170, 215, 269, 880], "meas_dat": [167, 169, 170, 201, 215, 217, 221, 258, 264, 265, 266, 267, 269, 477, 478, 479, 480, 558, 589, 795, 801, 880], "utc": [167, 170, 215, 217, 264, 265, 266, 267, 269, 478, 479, 880], "meas_id": [167, 170, 215, 264, 265, 266, 267, 269, 478, 479, 480, 865, 880], "breviti": 167, "walk": [167, 205, 207], "orig_raw": 167, "chan_idx": 167, "sent": [167, 169, 191, 192, 205, 216, 274], "deliveri": 167, "squarewav": 167, "unambigu": [167, 169], "older": [167, 169, 171, 320, 430, 478, 865, 880], "summat": [167, 169, 202, 692], "6994": 167, "7086": 167, "7192": 167, "7304": 167, "7413": 167, "ordinari": [167, 169, 200, 206, 226, 575, 579, 685, 861], "autoreject": [167, 200, 201, 846], "aren": [167, 208, 454], "fewest": 167, "conds_we_care_about": 167, "aud_epoch": 167, "vis_epoch": 167, "136": [167, 170, 172, 209, 226, 230, 231, 277], "richer": 167, "aud_evok": 167, "vis_evok": 167, "classic": [167, 241, 271, 272, 275, 278, 279, 280, 729, 732, 748, 806, 811], "p200": [167, 192], "dorso": 167, "evoked_diff": [167, 211], "underdetermin": 167, "akin": 167, "inverse_operator_fil": 167, "inv_oper": 167, "\u03bb\u00b2": 167, "61922423e": 167, "06837855e": 167, "49139511e": 167, "885": [167, 175, 209, 231], "10_overview": [167, 175], "obligatorili": 168, "unexpect": [168, 196, 244, 264, 265, 266, 267, 318, 354, 506, 859], "apply_funct": [168, 264, 265, 266, 267, 478, 479, 880], "unprocess": [168, 865], "original_raw": 168, "complex128": [168, 264, 265, 266, 267, 478, 479], "certain": [168, 169, 192, 199, 203, 205, 210, 221, 240, 262, 266, 267, 385, 436, 465, 478, 479, 536, 558, 576, 589, 687, 688, 782, 814, 837, 839, 861, 862, 880], "unaffect": [168, 203, 416], "rereferenced_raw": 168, "ref_data": [168, 645], "fig_orig": 168, "fig_reref": 168, "15_inplac": [168, 175], "broadli": 169, "ram": [169, 199, 201, 215, 216, 217, 218, 264, 265, 478, 479, 558, 778, 795, 801, 880], "36037": [169, 199, 203, 206, 207, 208, 210, 216, 217, 218], "necessarili": [169, 171, 190, 199, 201, 204, 257, 264, 265, 297, 716, 726, 730, 757, 862], "instantan": [169, 223], "receiv": [169, 191, 431, 495, 661, 837, 862, 880], "rectangular": [169, 202, 226, 271, 272, 275, 278, 279, 280, 806, 811], "ttl": [169, 602], "upcom": 169, "newer": [169, 171, 205, 837, 842, 845, 847, 880], "27977": 169, "28345": 169, "28771": 169, "29219": 169, "29652": 169, "preced": [169, 264, 265, 360, 470, 748, 778, 835, 839, 880], "config": [169, 172, 189, 256, 257, 264, 265, 375, 377, 378, 379, 380, 382, 383, 385, 386, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 451, 452, 458, 459, 469, 478, 479, 489, 548, 558, 627, 637, 640, 644, 748, 757, 778, 795, 801, 839, 880], "mne_stim_channel": [169, 172, 257, 451, 452, 478, 479], "mne_stim_channel_1": [169, 257, 451, 452], "saver": [169, 201, 203, 857, 859], "testing_data_fold": 169, "eeglab_raw_fil": 169, "eeglab_raw": 169, "began": 169, "000068": 169, "unmodifi": [169, 208, 506], "custom_map": 169, "annotations_from_ev": [169, 258, 439, 870, 880], "orig_tim": [169, 201, 217, 258, 283, 880], "annot_from_ev": 169, "event_desc": [169, 283], "rem_annot": 169, "rem_ev": 169, "rem_event_dict": 169, "modulo": 169, "501": [169, 183, 203, 209, 231], "onlin": [169, 200, 205, 218, 257, 851, 864, 880], "20_events_from_raw": [169, 175], "alon": [170, 851], "gantri": [170, 269, 880], "blank": [170, 215, 700, 845, 880], "subject_info": [170, 264, 265, 266, 267, 269, 478, 479, 480, 880], "device_info": [170, 264, 265, 266, 267, 269, 442, 478, 479, 480, 880], "helium_info": [170, 264, 265, 266, 267, 269, 478, 479, 480, 880], "hpi_subsystem": [170, 269], "proc_histori": [170, 264, 265, 266, 267, 269, 478, 479, 480], "proj_id": [170, 215, 264, 265, 266, 267, 269, 478, 479, 480], "proj_nam": [170, 215, 264, 265, 266, 267, 269, 478, 479, 480], "utc_offset": [170, 264, 265, 266, 267, 269, 478, 479, 480, 880], "line_freq": [170, 241, 269], "gantry_angl": [170, 269], "ctf_head_t": [170, 269, 865], "dev_ctf_t": [170, 269, 865], "acq_par": [170, 215, 257, 269], "acq_stim": [170, 269], "xplotter_layout": [170, 269], "kit_system_id": [170, 269], "0143": 170, "0142": 170, "0213": 170, "0212": [170, 335], "0222": 170, "0223": 170, "0232": 170, "0233": 170, "0313": 170, "0312": 170, "0322": 170, "0323": 170, "0333": 170, "0332": 170, "0343": 170, "0342": 170, "0413": 170, "0412": 170, "0422": 170, "0423": 170, "0432": 170, "0433": 170, "0443": 170, "0442": 170, "0513": 170, "0512": 170, "0523": [170, 244, 665], "0522": 170, "0532": 170, "0533": 170, "0542": 170, "0543": 170, "0613": 170, "0612": 170, "0622": 170, "0623": 170, "0633": 170, "0632": 170, "0643": 170, "0713": 170, "0712": 170, "0723": 170, "0722": 170, "0733": 170, "0732": 170, "0743": 170, "0742": 170, "0813": 170, "0822": 170, "0823": 170, "0913": 170, "0912": 170, "0923": 170, "0922": 170, "0932": 170, "0933": 170, "0943": 170, "1012": 170, "1022": [170, 196], "1032": [170, 196], "1042": [170, 335], "1112": 170, "1123": 170, "1122": [170, 195, 196, 203, 209], "1133": 170, "1132": 170, "1213": [170, 209], "1212": 170, "1223": [170, 196], "1222": 170, "1233": 170, "1243": 170, "1242": [170, 196], "1312": 170, "1313": 170, "1322": 170, "1343": 170, "1412": 170, "1413": 170, "1423": 170, "1433": 170, "1432": 170, "1442": 170, "1443": 170, "1512": [170, 244, 473], "1513": 170, "1523": [170, 244, 716, 726, 727, 729, 730, 732], "1533": 170, "1532": 170, "1542": 170, "1612": 170, "1622": 170, "1623": 170, "1632": 170, "1633": 170, "1642": 170, "1713": 170, "1712": 170, "1722": 170, "1723": 170, "1732": [170, 195], "1733": 170, "1743": 170, "1742": 170, "1813": 170, "1812": 170, "1822": 170, "1823": 170, "1832": 170, "1833": [170, 195], "1843": 170, "1912": 170, "1913": 170, "1923": 170, "1922": 170, "1932": 170, "1933": 170, "1943": 170, "1942": 170, "2023": [170, 172], "2032": 170, "2033": 170, "2042": 170, "2112": 170, "2122": 170, "2133": 170, "2132": 170, "2143": [170, 244, 729, 732], "2142": 170, "2212": 170, "2213": 170, "2223": 170, "2222": 170, "2233": 170, "2243": 170, "2312": 170, "2313": [170, 210], "2323": 170, "2322": 170, "2333": [170, 552], "2343": 170, "2412": 170, "2413": 170, "2422": [170, 195], "2432": 170, "2442": 170, "2512": 170, "2513": 170, "2523": 170, "2533": 170, "2532": 170, "2543": 170, "2542": 170, "2612": 170, "2613": 170, "2623": 170, "2633": [170, 195], "bear": [170, 839, 859, 880], "scanno": [170, 269, 865], "logno": [170, 269, 865], "cal": [170, 269, 320, 477, 865], "coil_typ": [170, 269, 856], "unit_mul": [170, 269, 865], "116": [170, 196, 226, 231], "141": [170, 196, 230, 277], "148": [170, 226, 230, 231], "162": [170, 226, 230, 231, 244, 277], "185": [170, 201, 226, 230, 277], "208": [170, 172, 189, 209, 225, 226, 244], "286": [170, 226], "287": [170, 195, 209, 231], "292": [170, 209, 226, 231], "314": [170, 231], "315": [170, 209, 231, 880], "318": [170, 196, 226, 231], "321": [170, 202, 231], "322": [170, 226, 231], "324": [170, 231], "326": [170, 226, 231], "327": [170, 196, 209, 231], "329": [170, 209, 223, 225, 226, 231], "336": [170, 172, 195, 209, 231, 880], "337": [170, 209, 226], "338": [170, 195, 209, 231], "341": [170, 226, 231, 523], "345": [170, 195, 231], "347": [170, 209, 226, 231, 880], "349": [170, 209, 244, 862], "oxyhemoglobin": [170, 264, 265, 266, 267, 478, 479, 555, 700, 702, 703, 704, 835, 862], "deoxyhemoglobin": [170, 191, 264, 265, 266, 267, 478, 479, 555, 700, 702, 703, 704, 835, 862], "hbo": [170, 191, 211, 215, 221, 264, 265, 266, 267, 311, 371, 373, 478, 479, 555, 700, 702, 703, 704, 835, 862], "hbr": [170, 191, 211, 215, 221, 264, 265, 266, 267, 311, 371, 373, 478, 479, 555, 700, 702, 703, 704, 835, 862], "express": [170, 200, 427, 439, 486, 493, 500, 533, 552, 577, 606, 623, 714, 861, 862, 865, 880], "pick_channels_regexp": [170, 200, 205, 207, 212, 549, 870], "unawar": 170, "accident": [170, 217, 665, 880], "channel_typ": [170, 205, 264, 265, 266, 267, 269, 478, 479, 558, 700, 702, 703, 704, 870], "emb": 170, "comprehens": [170, 196, 215, 226, 228, 410, 839, 861], "channel_indices_by_typ": [170, 870], "ch_idx_by_typ": 170, "exci": [170, 215, 264, 265, 266, 267, 311, 478, 479, 555, 700, 702, 703, 704, 862], "ia": [170, 215, 264, 265, 266, 267, 269, 311, 478, 479, 555, 700, 702, 703, 704, 862, 880], "syst": [170, 215, 264, 265, 266, 267, 311, 478, 479, 555, 700, 702, 703, 704, 862], "bio": [170, 221, 264, 265, 266, 267, 311, 373, 443, 478, 479, 493, 555, 700, 702, 703, 704, 862], "temperatur": [170, 264, 265, 266, 267, 311, 478, 479, 555, 700, 702, 703, 704, 835, 856, 862, 880], "gsr": [170, 264, 265, 266, 267, 311, 478, 479, 555, 700, 702, 703, 704, 862, 880], "fnirs_cw_amplitud": [170, 191, 211, 264, 265, 266, 267, 371, 478, 479, 835], "fnirs_fd_ac_amplitud": [170, 191, 264, 265, 266, 267, 371, 478, 479, 835], "fnirs_fd_phas": [170, 191, 264, 265, 266, 267, 371, 478, 479, 835], "fnirs_od": [170, 264, 265, 266, 267, 371, 478, 479, 835], "eeg_indic": 170, "ipython": [170, 264, 265, 478, 479, 558, 778, 795, 801, 837, 850, 859, 861, 863], "30_info": [170, 175], "mplot3d": [171, 206, 226], "axes3d": [171, 206, 226, 262, 264, 265, 266, 267, 312, 478, 479, 776, 798, 804, 880], "plai": [171, 205, 223, 241, 728, 731, 861, 862], "eeg_posit": 171, "builtin_montag": 171, "montage_nam": 171, "montage_descript": 171, "standard_alphabet": 171, "a1": [171, 208], "b2": 171, "standard_postfix": 171, "postfix": 171, "intermedi": [171, 200, 270, 289, 291, 686, 748, 862, 880], "standard_prefix": 171, "standard_prim": 171, "biosemi16": [171, 226], "biosemi": [171, 226, 338, 486, 862], "cap": [171, 196, 226, 835, 856, 880], "biosemi32": [171, 226], "biosemi64": [171, 226], "biosemi160": 171, "biosemi256": 171, "m10": [171, 880], "egi_256": 171, "geodes": [171, 468, 511, 670, 671, 672, 674, 675, 880], "gsn": [171, 442], "hydrocel": [171, 442], "64_1": 171, "65_1": 171, "mgh60": [171, 880], "mgh70": [171, 880], "brainvis": [171, 330, 331, 439, 443, 478, 479, 488, 606, 856, 862, 880], "artini": [171, 191, 328, 880], "octamon": [171, 191, 880], "detector": [171, 191, 211, 215, 501, 593, 594, 748, 764, 862, 880], "brite23": [171, 880], "brainproduct": 171, "rnp": 171, "ba": [171, 445, 862, 880], "easycap_montag": 171, "digmontag": [171, 183, 264, 265, 266, 267, 269, 315, 316, 325, 328, 330, 331, 332, 333, 334, 335, 336, 337, 365, 462, 478, 479, 490, 583, 585, 798, 818, 835, 870, 880], "headshap": [171, 256, 305, 312, 325, 337, 502, 880], "gca": 171, "view_init": [171, 206, 226], "azim": [171, 206], "ssvep_raw": 171, "read_raw_brainvis": [171, 190, 241, 484, 862, 870, 880], "circumfer": 171, "t4": 171, "t3": [171, 320, 478, 880], "075": 171, "sample_data_raw_path": 171, "sample_raw": 171, "ax2d": 171, "add_subplot": [171, 226], "ax3d": 171, "irregular": [171, 859, 880], "fastrak": 171, "predefin": [171, 835], "layout_dir": 171, "iterdir": 171, "IN": 171, "ctf151": [171, 226, 338], "lai": [171, 338, 507, 862, 880], "ctf275": [171, 226, 338], "eeg1005": [171, 338], "egi256": [171, 338], "geodesicheadweb": [171, 338], "AS": [171, 338], "umd": [171, 226, 338], "neuromag_122": [171, 338], "grad_norm": [171, 338], "magneswh3600": [171, 338, 489], "biosemi_layout": 171, "make_eeg_layout": [171, 321, 327, 870], "layout_from_raw": 171, "make_meg_layout": 171, "snugli": 171, "415": [171, 175, 196, 209, 226, 231], "40_sensor_loc": [171, 175], "suit": [172, 851], "get_config": [172, 385, 644, 870, 880], "unnam": 172, "mne_use_cuda": [172, 375, 837], "json": [172, 459], "unset": [172, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 413, 420, 423, 426, 427, 453, 466, 468, 478, 479, 517, 520, 521, 531, 532, 541, 542, 563, 570, 571, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 780, 783, 802, 837, 880], "typeerror": [172, 177, 772, 880], "err": [172, 204, 344], "nonetyp": 172, "unsur": [172, 203, 839], "fallback": [172, 264, 265, 478, 479, 778, 801, 861, 880], "missing_config_kei": 172, "mne_browse_raw_s": 172, "979166666666666": 172, "mne_datasets_brainstorm_path": 172, "mne_datasets_eegbci_path": [172, 380, 385], "mne_datasets_epilepsy_ecog_path": [172, 382], "mne_datasets_erp_core_path": [172, 383], "mne_datasets_fieldtrip_cmc_path": 172, "mne_datasets_fnirs_motor_path": [172, 390], "mne_datasets_hf_sef_path": [172, 392], "mne_datasets_kiloword_path": [172, 393], "mne_datasets_limo_path": [172, 394], "mne_datasets_misc_path": [172, 395], "mne_datasets_mtrf_path": [172, 396], "mne_datasets_multimodal_path": [172, 397], "mne_datasets_opm_path": 172, "mne_datasets_phantom_4dbti_path": [172, 399], "mne_datasets_refmeg_noise_path": [172, 400], "mne_datasets_sample_path": [172, 385, 401], "mne_datasets_somato_path": [172, 404], "mne_datasets_spm_face_path": 172, "mne_datasets_ssvep_path": [172, 406], "mne_datasets_testing_path": 172, "mne_datasets_ucl_opm_auditory_path": [172, 407], "mne_logging_level": [172, 647], "mne_3d_option_them": [172, 748, 880], "mne_browser_them": [172, 264, 265, 478, 479, 558, 778, 795, 801, 880], "mne_browser_overview_mod": [172, 264, 265, 478, 479, 558, 778, 795, 801], "hidden": [172, 173, 264, 265, 478, 479, 558, 748, 778, 795, 801, 880], "mne_browser_backend": [172, 264, 265, 478, 479, 558, 778, 795, 801, 880], "mne_3d_option_multi_sampl": [172, 837, 880], "mne_browser_precomput": [172, 264, 265, 478, 479, 558, 778, 795, 801], "mne_3d_option_antialia": [172, 814, 837, 880], "mne_3d_option_depth_peel": [172, 814], "mne_3d_option_smooth_shad": [172, 757, 814], "mne_browser_use_opengl": [172, 264, 265, 478, 479, 558, 778, 795, 801, 880], "mne_cache_dir": 172, "mne_coreg_advanced_rend": 172, "mne_coreg_copy_annot": 172, "mne_coreg_fullscreen": [172, 469], "mne_coreg_guess_mri_subject": 172, "mne_coreg_head_high_r": [172, 469], "mne_coreg_head_opac": [172, 469], "mne_coreg_head_insid": 172, "mne_coreg_interact": 172, "mne_coreg_mark_insid": 172, "mne_coreg_prepare_bem": 172, "mne_coreg_orient_to_surfac": 172, "mne_coreg_scale_label": 172, "mne_coreg_scale_by_dist": 172, "mne_coreg_scene_scal": 172, "mne_coreg_window_height": 172, "mne_coreg_window_width": [172, 469], "mne_coreg_subjects_dir": 172, "mne_cuda_devic": [172, 880], "mne_cuda_ignore_precis": 172, "mne_datasets_megsim_path": 172, "mne_datasets_spm_face_datasets_test": 172, "mne_datasets_visual_92_categories_path": [172, 408], "mne_force_seri": 172, "mne_kit2fiff_stim_channel": 172, "mne_kit2fiff_stim_channel_cod": 172, "mne_kit2fiff_stim_channel_slop": 172, "mne_kit2fiff_stim_channel_threshold": 172, "mne_memmap_min_s": 172, "mne_repr_html": [172, 880], "mne_skip_ftp_test": 172, "mne_skip_network_test": 172, "mne_skip_testing_dataset_test": 172, "mne_tqdm": [172, 880], "mne_use_numba": 172, "misspel": 172, "mnee_use_cuudaa": 172, "intro": [172, 173, 241], "50_configure_mn": [172, 175], "runtimewarn": [172, 745], "unrecogn": [172, 264, 265, 266, 267, 269, 478, 479, 880], "concern": [172, 204, 226, 497, 577, 613, 617], "userprofil": [172, 459], "linux": [172, 838, 839, 840, 842, 844, 845, 847, 880], "maco": [172, 839, 840, 842, 843, 844, 880], "get_config_path": [172, 870, 880], "home_dir": [172, 458, 459, 644], "use_env": [172, 458], "set_env": [172, 644, 880], "python_env": [172, 205], "minimal_cmd": 172, "usr": [172, 845, 850], "sbin": 172, "statement": [172, 173, 226, 646, 845], "fresh": 172, "me": [172, 695], "worrisom": 172, "set_log_level": [172, 646, 746, 870], "temporarili": [172, 206, 207, 264, 265, 266, 267, 376, 412, 448, 478, 479, 558, 778, 795, 801], "kit_data_path": 172, "abspath": 172, "use_log_level": [172, 239, 870], "432": [172, 209, 226, 231], "496": [172, 196, 198, 209, 226, 227, 231, 233, 277], "meg160": 172, "v2r004": 172, "160ch": 172, "jan24": 172, "eq1160c": 172, "dewar": 172, "fll": 172, "board": 172, "adc": [172, 190], "alloc": [172, 687, 688, 690, 691], "shorthand": 172, "whatev": [172, 208, 478, 479, 703, 839], "recent": [172, 202, 410, 838, 839, 855, 880], "hasn": [172, 570, 880], "sys_info": [172, 274, 837, 838, 859, 870, 880], "stdout": [172, 646, 699, 880], "platform": [172, 264, 265, 266, 267, 478, 479, 702, 704, 801, 838, 842, 847, 851, 868], "1030": [172, 195], "aw": [172, 255], "x86_64": [172, 838, 845], "glibc2": [172, 838], "mar": 172, "gcc": [172, 838], "cpu": [172, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 413, 420, 422, 423, 426, 427, 453, 466, 468, 478, 479, 517, 520, 521, 531, 532, 541, 542, 558, 563, 570, 571, 588, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 778, 780, 783, 795, 801, 802, 837, 838], "gb": [172, 837, 838, 845], "dev97": 172, "g4b419e03": 172, "openbla": [172, 838, 859], "thread": [172, 236, 264, 265, 478, 479, 558, 778, 795, 801, 862], "agg": 172, "pooch": [172, 385, 880], "jinja2": [172, 880], "numba": [172, 838, 880], "openmeeg": [172, 516, 521, 880], "unavail": [172, 880], "cupi": [172, 264, 265, 266, 267, 412, 416, 421, 448, 449, 450, 478, 479, 837, 838, 880], "opengl": [172, 256, 264, 265, 469, 478, 479, 558, 778, 795, 801, 837, 845, 851], "mesa": [172, 469, 814, 880], "llvmpipe": [172, 837], "llvm": [172, 837], "ipyvtklink": [172, 868], "vtk": [172, 409, 748, 763, 837, 838, 880], "qtpy": [172, 838], "pyqt6": 172, "ipympl": 172, "pyqtgraph": [172, 264, 265, 478, 479, 558, 778, 795, 801, 880], "browser": [172, 173, 192, 215, 256, 264, 265, 274, 478, 479, 546, 558, 756, 760, 778, 795, 801, 817, 820, 839, 880], "dev0": [172, 838], "ecosystem": [172, 840, 843, 846], "0dev0": 172, "icalabel": [172, 880], "789": [172, 175, 209], "shell": [173, 184, 210, 244, 256, 515, 522, 838, 839, 844, 845, 846, 859, 862], "deploi": [173, 859], "tempfil": 173, "ndimag": 173, "raw_tsss": [173, 256, 478, 479, 498], "_eeg": [173, 256, 478, 479, 880], "_ieeg": [173, 256, 478, 479, 880], "underscor": [173, 201, 205, 215, 558], "parse_fold": [173, 274, 880], "add_raw": [173, 274, 880], "slider": [173, 266, 267, 274, 787, 837, 880], "scrub": 173, "report_raw": 173, "jqueri": 173, "bundl": [173, 842, 844, 880], "tableexport": 173, "highlightj": 173, "atom": 173, "meaning": [173, 216, 273, 642, 839], "events_path": 173, "report_ev": 173, "add_epoch": [173, 274, 880], "fly": [173, 228, 264, 265, 478, 479, 733, 746, 778, 801, 880], "make_metadata": [173, 870, 880], "report_epoch": 173, "add_evok": [173, 274], "n_time_point": [173, 274], "evoked_path": 173, "cov_path": 173, "evokeds_subset": 173, "report_evok": 173, "add_covari": [173, 274], "report_cov": 173, "ecg_proj_path": 173, "eog_proj_path": 173, "sample_audvis_eog": [173, 859], "report_proj": 173, "998": [173, 185, 192, 210, 231, 571, 575, 579, 582], "add_ica": [173, 274, 880], "inst": [173, 205, 256, 258, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 281, 312, 314, 358, 410, 411, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 469, 478, 479, 557, 558, 559, 566, 567, 576, 580, 587, 603, 642, 645, 654, 685, 700, 702, 703, 704, 730, 731, 732, 791, 792, 793, 795, 802, 880], "ecg_evok": [173, 205, 207, 274], "eog_evok": [173, 204, 205, 207, 274], "artifactu": [173, 199, 202, 205, 244, 558], "find_bads_ecg": [173, 205, 274, 558, 880], "ecg_scor": [173, 205, 274], "liber": 173, "eog_compon": 173, "report_ica": 173, "add_bem": [173, 274, 880], "th": [173, 264, 558, 657, 660, 662, 703, 859, 862], "report_mri_and_bem": 173, "add_tran": [173, 274, 880], "opaqu": [173, 274, 469, 880], "trans_path": 173, "report_coregistr": 173, "add_forward": [173, 274, 748, 880], "fwd_path": 173, "report_forward_sol": 173, "add_inverse_oper": [173, 274], "inverse_op_path": 173, "report_inverse_op": 173, "add_stc": [173, 274, 880], "report_inverse_sol": 173, "01632618": 173, "06303297": 173, "63565434": 173, "add_cod": [173, 274], "syntax": [173, 274, 839, 862], "snippet": [173, 234, 274, 859], "liter": [173, 274, 862], "mne_init_py_path": 173, "__init__": [173, 547], "mne_init_py_cont": 173, "read_text": 173, "utf": [173, 494, 606, 612, 880], "report_cod": 173, "add_figur": [173, 274, 880], "caption": [173, 274, 880], "num": [173, 240], "sky": 173, "image_format": [173, 256, 274, 880], "report_custom_figur": 173, "fig_1": 173, "ax_1": 173, "ax_2": 173, "report_custom_figure_sect": 173, "intuit": [173, 196, 241, 411, 426, 658, 659], "logo": [173, 880], "mne_logo_path": 173, "mne_icon": 173, "fig_arrai": 173, "rotation_angl": 173, "fig_array_rot": 173, "mneqtbrows": [173, 264, 265, 478, 479, 558, 778, 795, 801], "fun": [173, 264, 265, 266, 267, 478, 479], "9176882624364033": 173, "photo": 173, "sketch": 173, "add_imag": [173, 274, 880], "jpeg": [173, 274], "gif": [173, 274, 748, 880], "svg": [173, 256, 274, 880], "report_custom_imag": 173, "add_": 173, "dropdown": [173, 880], "hide": [173, 217, 239, 880], "checkbox": [173, 880], "report_tag": 173, "hdf5": [173, 271, 272, 274, 278, 280, 288, 301, 547, 557, 598, 628, 700, 701, 702, 703, 704, 720, 721, 722, 733, 822, 823, 843, 859, 880], "report_parti": 173, "amend": [173, 332], "report_from_disk": 173, "open_report": [173, 274, 870, 880], "report_fin": 173, "invok": [173, 256, 761, 845, 880], "barebon": [173, 256], "render_bem": [173, 274, 880], "raw_butterfli": [173, 274], "report_parse_folder_bas": 173, "raw_psd": [173, 274, 880], "refin": [173, 276, 320, 360], "report_parse_folder_raw_psd_proj": 173, "mri_decim": [173, 256, 274], "report_parse_folder_mri_bem": 173, "temporarydirectori": 173, "n_time_points_evok": [173, 274], "report_parse_folder_evok": 173, "tmp": 173, "tmp88fcqq7l": 173, "info_fnam": [173, 274], "report_parse_folder_cov": 173, "add_html": [173, 274, 880], "remind": [173, 558, 839], "my_html": 173, "ol": [173, 685, 868, 880], "manifest": [173, 203, 204, 205, 207, 835], "n1": 173, "report_add_html": 173, "70_report": [173, 175], "auto_tutorials_intro": 175, "volsourceestim": [176, 181, 182, 271, 272, 275, 276, 278, 280, 289, 291, 292, 293, 294, 295, 296, 513, 520, 525, 526, 527, 528, 529, 531, 541, 628, 641, 835, 870, 880], "mixedsourceestim": [176, 272, 275, 278, 279, 280, 628, 835, 870, 880], "carri": [176, 199, 205, 241, 486, 681], "belong": [176, 269, 270, 274, 622, 677, 747, 748, 865], "shape_lh": 176, "is_equ": 176, "suspect": 176, "nth": [176, 205, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 574, 575, 700, 703], "peak_vertex": 176, "vert_as_index": [176, 181, 271, 272, 275, 278, 279, 280], "peak_vertex_surf": 176, "peak_valu": 176, "logic": [176, 221, 228, 231, 264, 265, 266, 267, 269, 469, 478, 479, 480, 558, 577, 865, 880], "lh_coordin": 176, "rh_coordin": 176, "10_stc_class": [176, 188], "load_mni152_templ": 177, "fname_av": 177, "fname_surf_lh": 177, "n100m": 177, "evoked_ful": 177, "posixpath": [177, 182], "7283": 177, "6941": 177, "5323": 177, "2659": 177, "0605": 177, "7276": 177, "mni_po": 177, "to_mni": [177, 262, 880], "mri_po": 177, "to_mri": [177, 262, 880], "best_dip_idx": 177, "to_volume_label": [177, 262, 880], "fig_t1": 177, "cut_coord": 177, "fig_templ": 177, "pred_evok": 177, "inf": [177, 192, 199, 222, 264, 265, 266, 267, 282, 415, 475, 476, 478, 479, 509, 571, 700, 702, 704, 705, 707, 708, 710, 718, 719, 756, 802, 808, 880], "best_idx": 177, "best_tim": 177, "conf": [177, 262, 839], "plot_param": 177, "0f": [177, 266, 267, 783], "20_dipole_fit": [177, 188], "userwarn": 177, "dip_fix": 177, "7509": 177, "6603": 177, "jukka": [177, 179, 244, 880], "sarva": [177, 244], "electromagnet": [177, 179, 199, 207, 210, 223, 244, 297, 298, 431, 525, 569, 588, 835, 862], "biomagnet": [177, 244], "200m": 178, "500m": 178, "fig_cov": [178, 261, 773], "fig_spectra": 178, "1705": [178, 181], "1468": 178, "1574": 178, "608": [178, 231], "write_inverse_oper": [178, 539, 870, 880], "6837": 178, "16026e": 178, "set_color": [178, 184], "98df81": [178, 184], "vertno_max": 178, "time_max": [178, 179], "30_mne_dspm_loreta": [178, 188], "left_auditori": 179, "dip_po": 179, "dip_ori": 179, "dip_len": 179, "dip_tim": 179, "rgb": [179, 271, 272, 275, 278, 279, 280, 463, 468, 748, 764, 767, 806, 811, 812], "actual_amp": [179, 184, 186], "actual_gof": [179, 184, 186], "outward": [179, 262, 272, 278, 280, 365, 776, 859], "moment": [179, 181, 221, 269, 272, 278, 280, 318, 342, 344, 345, 346, 431, 568, 569, 577, 588, 811], "06165525": 179, "70033915": 179, "34794621": 179, "inward": [179, 859], "curvatur": [179, 271, 272, 275, 278, 279, 280, 698, 748, 806, 811, 865, 880], "collaps": [179, 274, 432], "brain_mag": 179, "overlay_alpha": [179, 272, 278, 280, 811], "2188": [179, 195], "44205e": 179, "79973942": 179, "38378769": 179, "8347911": 179, "somewhat": [179, 199], "strai": 179, "unrestrict": 179, "brain_loos": 179, "03844879": 179, "68532258": 179, "12541436": 179, "risto": [179, 206, 207, 244, 525, 862], "ilmoniemi": [179, 206, 207, 244, 525, 862], "knuutila": [179, 244], "olli": [179, 244], "lounasmaa": [179, 244], "noninvas": [179, 244], "modern": [179, 189, 244, 386, 837, 862, 864, 880], "revmodphi": [179, 244], "fa": [179, 244, 536, 657, 662], "hsuan": [179, 244, 536, 657, 662], "lin": [179, 195, 244, 416, 536, 657, 662], "belliveau": [179, 244, 525, 536, 657, 662], "20155": [179, 244], "35_dipole_orient": [179, 188], "variant": [180, 190, 463, 569, 837, 880], "1498464098687909": [180, 182], "037797": 180, "65922": 180, "72259e": 180, "28047949e": 180, "72734061e": 180, "97200565e": 180, "56295843": 180, "27742998": 180, "00597191": 180, "65359441": 180, "22223215": 180, "63030546": 180, "eigen": [180, 270, 677], "34003429e": 180, "79067976e": 180, "93243713e": 180, "61893": 180, "8713e": 180, "81398589e": 180, "00293217e": 180, "59049572e": 180, "79225614": 180, "45181117": 180, "88420763": 180, "65906465": 180, "114468": 180, "42240231": 180, "41240751e": 180, "15338772e": 180, "80101709e": 180, "40_mne_fixed_fre": [180, 188], "britta": [181, 244, 867, 880], "westner": [181, 244, 867, 880], "wstnr": 181, "apply_lcmv": [181, 289, 291, 294, 295, 296, 870, 880], "linearli": [181, 206, 210, 244, 293, 294, 295, 296, 297, 298, 835, 859], "ingredi": 181, "valuabl": [181, 862], "gaug": 181, "incorpor": [181, 226, 231, 320, 434, 443, 478, 479, 563, 839, 862, 868, 880], "stabl": [181, 202, 204, 244, 259, 297, 298, 341, 449, 477, 478, 479, 546, 558, 568, 757, 839, 845, 859], "rule": [181, 199, 203, 244, 558, 862], "thumb": [181, 199, 203, 558, 856], "advic": [181, 839], "defici": [181, 369, 558, 862, 880], "misrepres": 181, "3757": [181, 182], "inher": [181, 190, 231, 427], "somehow": [181, 183, 205], "nai": [181, 297, 298, 880], "switch": [181, 184, 185, 202, 209, 223, 244, 256, 270, 275, 349, 478, 479, 837, 839, 845, 865, 880], "invari": [181, 297, 298], "filters_vec": 181, "apply_lcmv_raw": [181, 293, 294, 295, 870, 880], "apply_lcmv_epoch": [181, 271, 272, 275, 278, 279, 280, 293, 294, 296, 870, 880], "087": 181, "stat_map": [181, 279, 280, 812], "5184": 181, "glass_brain": [181, 182, 279, 280, 812, 880], "022485": [181, 182], "008449": [181, 182], "036217": [181, 182], "071071": [181, 182], "914866": [181, 182], "406098": [181, 182], "008756": [181, 182], "433700": [181, 182], "028119": [181, 182], "plotter": [181, 264, 265, 558, 748, 750, 778, 795, 857, 880], "peak_vox": 181, "ori_label": 181, "sourcemorph": [181, 279, 280, 360, 629, 812, 843, 870, 880], "fname_fs_src": 181, "stc_f": [181, 182], "085": 181, "17352": 181, "barri": [181, 202, 204, 205, 244, 297, 298, 557, 572], "veen": [181, 244, 297, 298], "wim": [181, 244, 297, 298], "drongelen": [181, 244, 297, 298], "mosh": [181, 244, 297, 298], "yuchtman": [181, 244, 297, 298], "akifumi": [181, 244, 297, 298], "suzuki": [181, 244, 297, 298], "867": [181, 231, 244, 297, 298], "623056": [181, 244, 297, 298], "brook": [181, 244, 854, 880], "jiri": [181, 244], "vrba": [181, 244], "clair": [181, 244, 880], "stevenson": [181, 244], "gareth": [181, 212, 244, 856], "barn": [181, 212, 244, 856], "arjan": [181, 244], "hillebrand": [181, 244], "morri": [181, 244], "optimis": [181, 244], "1788": [181, 244], "sarang": [181, 244, 868], "dalal": [181, 244, 868], "vladimir": [181, 226, 244, 693, 694], "litvak": [181, 226, 244, 693, 694], "oostenveld": [181, 231, 244, 687, 688, 690, 691, 880], "mathij": [181, 244], "schoffelen": [181, 244], "118789": [181, 244], "558": [181, 188, 222, 231], "50_beamformer_lcmv": [181, 188], "flatmap": [182, 271, 275, 279, 748, 806, 880], "mpl_fig": 182, "94880328959697": 182, "84640986879091": 182, "649601096532322": 182, "5653": 182, "67635542": 182, "11717401": 182, "19136023": 182, "atlas": [182, 649, 880], "get_volume_labels_from_aseg": [182, 870, 880], "label_tc": [182, 271, 272, 275, 278, 279, 280, 444], "lidx": 182, "arrowstyl": [182, 195], "set_vis": 182, "grain": [182, 880], "loci": 182, "stc_back": 182, "labels_to_stc": [182, 870, 880], "6210": 182, "69834054": 182, "98871778": 182, "62206532": 182, "70708526": 182, "36619556": 182, "64056812": 182, "6864": 182, "60_visualize_stc": [182, 188], "read_custom_montag": [183, 191, 264, 265, 266, 267, 269, 328, 478, 479, 870, 880], "reconstrct": 183, "elc": [183, 330, 880], "synthes": [183, 189, 303, 307, 502, 578, 880], "fname_t1_electrod": 183, "sample_eeg_mri": 183, "t1_electrod": 183, "fname_mon": 183, "sample_mri_montag": 183, "ras_mni_t": [183, 740], "read_ras_mni_t": [183, 870], "mni_affin": 183, "img_mni": 183, "hot_black_bon": 183, "black_bg": 183, "resampling_interpol": 183, "pos_vox": 183, "fname_t1": 183, "vox2mri_t": 183, "pos_mri": [183, 262], "tkmedit": [183, 845, 862], "dig_montag": 183, "head_siz": [183, 328, 330], "99930957": 183, "00998471": 183, "03578661": 183, "00316747": 183, "01275917": 183, "81240435": 183, "58295487": 183, "00685511": 183, "03489383": 183, "58300899": 183, "81171605": 183, "02888406": 183, "812404": 183, "582955": 183, "583009": 183, "3252": 183, "3250": 183, "1734": [183, 195], "3223": 183, "4097": [183, 202], "1710": 183, "8193": 183, "040598": 183, "157084": 183, "86184": 183, "24877e": 183, "17591891": 183, "939572": 183, "86348066": 183, "70_eeg_mri_coord": [183, 188], "fetch_phantom": [184, 430, 870, 880], "planor": 184, "meg1933": 184, "meg2421": 184, "645": [184, 231], "1792": 184, "3840": 184, "7936": 184, "bmax": [184, 256], "ring": [184, 202, 445, 447, 880], "otaniemi": [184, 389, 430, 856, 880], "phantom_otaniemi": 184, "00365867": [184, 185, 186], "944092": [184, 185, 186], "138723": [184, 185, 186], "665896": [184, 185, 186], "684544": [184, 185, 186], "132233": [184, 185, 186], "0128974": [184, 185, 186], "plot_evoked_whit": [184, 266, 267, 782, 870, 880], "t_peak": 184, "32640": 184, "32639": 184, "55367811e": 184, "90213143e": 184, "55347147e": 184, "28605719e": 184, "96728167e": 184, "86739464e": 184, "38610872e": 184, "82304534e": 184, "48308374e": 184, "31818228e": 184, "16854987e": 184, "00130181e": 184, "01608756e": 184, "05724640e": 184, "66791928e": 184, "36603176e": 184, "50599819e": 184, "82644670e": 184, "99846050e": 184, "93593540e": 184, "60183041e": 184, "976295": 184, "211976": 184, "043756": 184, "206488": 184, "972764": 184, "105326": 184, "064891": 184, "093794": 184, "993475": 184, "729": [184, 185, 186, 196, 231], "actual_ori": 184, "rad2deg": 184, "arcco": 184, "dip_tru": [184, 186], "80_brainstorm_phantom_elekta": [184, 188], "phantomctf": 185, "bst_phantom_ctf": 185, "phantom_200ua_20150709_01": 185, "dip_freq": 185, "phantom_20ua_20150603_03": 185, "erm_path": 185, "emptyroom_20150709_01": 185, "24000": 185, "23999": 185, "hdac006": 185, "zeros_lik": [185, 195], "ones_lik": [185, 228, 229], "tsss": [185, 266, 269, 478, 498, 588, 596, 618, 880], "apply_gradient_compens": [185, 189, 478, 479, 862, 880], "un": [185, 203, 206, 210, 218, 478, 479, 534, 535, 801, 862], "mf_kwarg": 185, "st_durat": [185, 210, 577, 588], "021666666666666667": 185, "catch_warn": 185, "simplefilt": 185, "60000": 185, "99596855e": 185, "57828787e": 185, "09548814e": 185, "44821628e": 185, "22550465e": 185, "07831245e": 185, "16519699e": 185, "85599860e": 185, "24819011e": 185, "19149506e": 185, "49201625e": 185, "90435099e": 185, "37114004e": 185, "52368814e": 185, "95491435e": 185, "09260032e": 185, "84849095e": 185, "02461913e": 185, "40860739e": 185, "15627312e": 185, "58591259e": 185, "999939": 185, "002039": 185, "010868": 185, "001115": 185, "959234": 185, "282612": 185, "011001": 185, "282607": 185, "959173": 185, "expected_po": 185, "array_str": 185, "506": [185, 188], "85_brainstorm_phantom_ctf": [185, 188], "4dbti": 186, "badier": [186, 244, 660], "marseil": [186, 856], "franc": 186, "phantom_4dbti": [186, 856, 870, 880], "rfhp1": 186, "0hz": 186, "a173": 186, "a213": 186, "a232": 186, "4350": 186, "not_and": [186, 257, 451, 615, 880], "hs_file": [186, 189, 489], "13599": 186, "20053968578577042": 186, "6576": 186, "6575": 186, "50691838e": 186, "61763336e": 186, "91409625e": 186, "91576159e": 186, "16898444e": 186, "75585208e": 186, "47442194e": 186, "45272203e": 186, "55529894e": 186, "46448717e": 186, "88484744e": 186, "05130802e": 186, "14443569e": 186, "70955369e": 186, "39503671e": 186, "16681391e": 186, "65491197e": 186, "24338008e": 186, "53281664e": 186, "47448228e": 186, "78257781e": 186, "975564": 186, "033891": 186, "217085": 186, "044586": 186, "998011": 186, "044560": 186, "215143": 186, "053150": 186, "975135": 186, "43530566e": 186, "00499851e": 186, "47056513e": 186, "49717001e": 186, "01651220e": 186, "39837298e": 186, "09320996e": 186, "53068976e": 186, "44272962e": 186, "07218608e": 186, "57916869e": 186, "24522939e": 186, "45459681e": 186, "19250060e": 186, "30544307e": 186, "26518629e": 186, "97497347e": 186, "82472005e": 186, "37787240e": 186, "96791371e": 186, "70423989e": 186, "975554": 186, "034041": 186, "217109": 186, "044503": 186, "998063": 186, "043482": 186, "215208": 186, "052081": 186, "975178": 186, "58999814e": 186, "84421337e": 186, "28166457e": 186, "67818745e": 186, "17428979e": 186, "76211498e": 186, "09542089e": 186, "22401648e": 186, "04141267e": 186, "15865669e": 186, "76599754e": 186, "17446488e": 186, "49708010e": 186, "60822410e": 186, "73060305e": 186, "05814038e": 186, "01071067e": 186, "20173942e": 186, "25861185e": 186, "85502070e": 186, "47521229e": 186, "975577": 186, "033678": 186, "217061": 186, "044611": 186, "997960": 186, "045666": 186, "215080": 186, "054233": 186, "975089": 186, "40101009e": 186, "10513936e": 186, "52303974e": 186, "27457778e": 186, "38233857e": 186, "06793751e": 186, "00477278e": 186, "15792686e": 186, "30206685e": 186, "40306943e": 186, "32057779e": 186, "22353020e": 186, "11884928e": 186, "17314181e": 186, "64256593e": 186, "23243102e": 186, "97110034e": 186, "94566869e": 186, "63267153e": 186, "08360546e": 186, "98210291e": 186, "975557": 186, "033946": 186, "217110": 186, "044391": 186, "998071": 186, "043409": 186, "215218": 186, "051986": 186, "975181": 186, "44409481": 186, "37628851": 186, "1860296": 186, "17616473": 186, "90_phantom_4dbti": [186, 188], "821": [188, 231], "auto_tutorials_invers": 188, "maxshield": [189, 256, 266, 269, 478, 498, 588, 618, 865, 880], "allow_maxshield": [189, 209, 210, 266, 478, 498, 618], "ucl": [189, 212, 244, 354, 880], "read_raw_fil": [189, 212, 484, 862, 870, 880], "mandatori": [189, 297, 298, 320, 478, 558, 862], "rfdc": [189, 256], "realiz": [189, 202], "carefulli": [189, 200, 202, 856], "read_dig_polhemus_isotrak": [189, 312, 325, 328, 331, 332, 333, 334, 335, 336, 339, 862, 870, 880], "technic": [189, 239, 244, 264, 265, 266, 267, 478, 479, 525, 702, 704, 712, 718, 855, 861, 862], "disturb": [189, 855, 862], "mainli": [189, 241, 839, 862], "nicknam": 189, "n_1": 189, "n_2": 189, "n_3": 189, "x_1": [189, 862], "x_2": [189, 862], "x_3": 189, "denot": [189, 196, 217, 272, 278, 280, 586, 657, 660, 662, 681, 683, 701, 835, 862], "x_": [189, 196, 862], "m_": 189, "bmatrix": [189, 862], "c_": [189, 226, 862], "standardize_nam": [189, 502, 614, 880], "nx3": [189, 465], "mrk": [189, 256, 481, 502, 614, 880], "elp": [189, 256, 330, 337, 502, 614, 616, 862, 880], "onward": [189, 650], "miscellan": [189, 215, 264, 265, 266, 267, 478, 479, 555, 700, 702, 703, 704, 862, 865], "eight": [189, 862, 880], "endian": [189, 880], "stimthresh": [189, 256, 502], "sum_": [189, 202, 660, 862], "t_p": 189, "d_p": 189, "bigg": 189, "leq": [189, 226], "read_raw_fieldtrip": [189, 484, 862, 870, 880], "read_epochs_fieldtrip": [189, 862, 870, 880], "read_evoked_fieldtrip": [189, 862, 870, 880], "intent": [189, 857], "original_data": 189, "read_raw_fiff": 189, "original_info": 189, "data_from_ft": 189, "evoked_data": [189, 228], "untest": 189, "cnt": [189, 439, 490, 606, 862, 880], "egi": [189, 330, 333, 495, 862, 880], "calibr": [189, 210, 269, 431, 568, 569, 577, 588, 599, 604, 865, 880], "eximia": [189, 496, 862, 880], "3rd": [189, 199, 271, 272, 275, 278, 279, 280, 686], "parti": 189, "librari": [189, 750, 837, 839, 845, 846, 851, 857, 859, 880], "abund": 189, "electrophysiolog": [189, 202, 244, 835], "10_reading_meg_data": [189, 194], "meta": [190, 221, 264, 265, 266, 267, 478, 479, 480, 868], "ini": 190, "host": [190, 861, 880], "pybv": [190, 443, 478, 479], "mnelab": [190, 846], "pyedflib": 190, "read_raw_bdf": [190, 484, 493, 500, 862, 870, 880], "amplifi": [190, 204, 208, 506, 851, 880], "byte": [190, 264, 265, 478, 479, 509, 756, 865, 880], "read_raw_gdf": [190, 484, 486, 493, 862, 870, 880], "overcom": 190, "releas": [190, 839, 847, 859, 861, 880], "gender": [190, 244, 402], "read_raw_cnt": [190, 484, 862, 870, 880], "danger": [190, 269], "x_coord": 190, "y_coord": 190, "electloc": 190, "encourag": [190, 223, 850, 861, 880], "read_raw_egi": [190, 484, 862, 870, 880], "netstat": [190, 495, 880], "read_raw_nicolet": [190, 484, 862, 870, 880], "nexstim": 190, "read_raw_eximia": [190, 484, 862, 870], "read_raw_persyst": [190, 862, 870, 880], "nk": 190, "read_raw_nihon": [190, 870, 880], "11d": 190, "cmt": 190, "cn2": 190, "histori": [190, 269, 442, 835, 865, 880], "successfulli": [190, 216, 839, 865], "neither": [190, 467, 478, 479, 847], "nor": [190, 208, 467, 478, 479, 847, 861], "20_reading_eeg_data": [190, 194], "emitt": 191, "transmitt": 191, "oxyhaemoglobin": [191, 211], "Near": 191, "commun": [191, 195, 196, 223, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 416, 478, 479, 700, 703, 729, 732, 839, 843, 858, 868], "effort": [191, 486, 839, 860, 868], "sfnir": 191, "gowerlab": [191, 880], "cortivis": 191, "read_raw_snirf": [191, 870, 880], "provis": 191, "haemoglobin": [191, 590, 880], "optode_fram": [191, 508], "vendor": [191, 862], "icbm": 191, "2009b": 191, "nirstar": [191, 506], "aurora": [191, 506, 880], "nirscout": [191, 506], "nirsport": [191, 506, 880], "read_raw_hitachi": [191, 870, 880], "read_raw_boxi": [191, 484, 862, 870, 880], "iss": [191, 487, 880], "paren": 191, "unmodul": 191, "unpars": 191, "organis": 191, "digaux": 191, "port": [191, 845, 851], "discourag": [191, 264, 265, 266, 267, 478, 479, 702, 704, 780, 859, 880], "standardis": [191, 880], "to_csv": [191, 215], "_d": 191, "wavelength": [191, 199], "s1_d1": [191, 211], "s2_d1": 191, "s3_d1": 191, "s4_d1": 191, "s5_d2": 191, "s6_d2": 191, "s7_d2": 191, "s8_d2": 191, "assist": [191, 250, 837, 845, 862], "ficidu": 191, "30_reading_fnirs_data": [191, 194], "site": [192, 204, 205, 210, 244, 269, 320, 478, 569, 577, 588, 839], "beep": 192, "deviant": [192, 202], "finger": [192, 856], "bug": [192, 257, 451, 469, 699, 748, 839, 858, 860, 861], "tracker": [192, 839, 859], "consumpt": [192, 266, 267, 427, 782, 880], "use_precomput": 192, "erm_fnam": 192, "s01_noise_20131218_01": 192, "demand": [192, 215, 427, 431, 477, 611, 862, 880], "n_times_run1": 192, "4800": 192, "unus": [192, 269, 277, 577, 880], "heog": [192, 490], "veog": [192, 490, 880], "favorit": [192, 839], "annotations_df": 192, "csv_fname": 192, "events_bad_0": 192, "concat": [192, 410], "saccades_ev": 192, "7625": 192, "142459": 192, "216954": 192, "345135": 192, "357687": 192, "409101": 192, "461110": 192, "479866": 192, "764914": 192, "798174": 192, "846880": 192, "858863": 192, "9256": 192, "14287": 192, "116432": 192, "134489": 192, "464527": 192, "494136": 192, "749288": 192, "788623": 192, "21179": 192, "72993": 192, "134527": 192, "196555": 192, "249894": 192, "343357": 192, "400771": 192, "450256": 192, "593101": 192, "733942": 192, "765939": 192, "789476": 192, "792852": 192, "833208": 192, "859869": 192, "862888": 192, "saccade_epoch": 192, "reject_by_annot": [192, 211, 217, 221, 264, 359, 478, 479, 518, 558, 574, 575, 578, 579, 704, 793, 802, 880], "projs_saccad": 192, "compute_proj_epoch": [192, 206, 207, 356, 357, 870, 880], "n_mag": [192, 207, 256, 355, 356, 357, 570, 571], "desc_prefix": [192, 355, 356], "projs_eog": 192, "compute_proj_eog": [192, 206, 207, 575, 579, 855, 870, 880], "1201": [192, 196, 300], "spectra": [192, 221, 239, 244, 261, 264, 265, 266, 267, 415, 478, 479, 531, 532, 687, 702, 704, 707, 710, 718, 719, 773, 780, 802, 835], "doubl": [192, 202, 205, 241, 264, 265, 266, 267, 412, 421, 443, 445, 446, 448, 449, 477, 478, 479, 499, 588, 839, 845, 862, 865, 880], "filter_length": [192, 202, 203, 207, 256, 264, 265, 266, 267, 412, 421, 446, 448, 449, 478, 479, 570, 571, 578, 579, 880], "sound": [192, 195, 196, 205, 244, 417, 729, 732], "uadc001": 192, "sound_data": 192, "min_diff": 192, "\u03bc": [192, 210, 419], "\u03c3": [192, 210, 419, 522], "mlo52": 192, "mrt51": 192, "mlo42": 192, "mlo43": 192, "epochs_standard": 192, "concatenate_epoch": [192, 870, 880], "epochs_devi": 192, "mlp52": 192, "evoked_std": 192, "evoked_dev": 192, "p50": 192, "paint": [192, 264, 265, 266, 267, 478, 479, 782, 802], "mmn": [192, 868], "emphasis": 192, "evoked_differ": 192, "ico4": [192, 640, 855], "8033": 192, "015871": 192, "10585e": 192, "09843": 192, "11765e": 192, "stc_standard": 192, "80289064": 192, "69025561": 192, "89954824": 192, "stc_deviant": 192, "12814542": 192, "29154719": 192, "6203076": 192, "stc_differ": 192, "96162575": 192, "78319301": 192, "94351171": 192, "981": [192, 194], "60_ctf_bst_auditori": [192, 194], "auto_tutorials_io": 194, "timedelayingridg": [195, 416, 870, 880], "multivariate_norm": 195, "1337": 195, "path_audio": 195, "spectrogram": [195, 231, 241, 835, 868, 880], "n_decim": 195, "explicit": [195, 263, 358, 369, 370, 839, 865, 880], "delays_samp": 195, "delays_sec": 195, "5000": [195, 228], "meshgrid": [195, 206, 231], "swap": [195, 230, 236, 634, 862, 880], "swapax": [195, 230, 236], "gabor": 195, "means_high": 195, "means_low": 195, "2500": [195, 880], "gauss_high": 195, "gauss_low": 195, "autoscal": 195, "artifici": [195, 244, 495, 558, 856], "convolut": [195, 202, 241, 423, 541, 542, 706, 709, 725, 727, 728, 730, 731, 846, 880], "n_second": 195, "x_del": 195, "ix_delai": 195, "ndim": [195, 241], "elif": 195, "rollaxi": 195, "weights_sim": 195, "iep": 195, "noise_amp": 195, "x_plt": 195, "hstack": [195, 206], "y_plt": 195, "autocorrel": [195, 416, 422], "ix_best_alpha": 195, "best_mod": 195, "best_pr": 195, "iax": 195, "time_pr": 195, "3450": 195, "1573": [195, 209], "1918": 195, "2265": 195, "2610": 195, "2959": 195, "479": [195, 196, 226, 231], "3304": 195, "548": [195, 231], "21502": 195, "21559": 195, "1036": 195, "21549": 195, "21629": 195, "21647": 195, "2082": 195, "21659": 195, "21584": 195, "2768": 195, "21585": 195, "3113": 195, "21576": 195, "21571": 195, "19339": 195, "494": [195, 196], "15318": 195, "678": [195, 196], "13972": 195, "13302": 195, "1048": 195, "12929": 195, "1235": 195, "12683": 195, "1420": 195, "12488": 195, "1606": 195, "12358": 195, "1796": 195, "12290": 195, "13286": 195, "14175": 195, "2793": 195, "14916": 195, "3136": 195, "15583": 195, "15467": 195, "20976": 195, "21238": 195, "21293": 195, "1381": 195, "21513": 195, "21598": 195, "2069": 195, "21489": 195, "2388": 195, "21227": 195, "2734": 195, "21279": 195, "3078": 195, "21306": 195, "3426": 195, "21354": 195, "21323": 195, "18381": 195, "527": [195, 231], "16383": 195, "847": [195, 231], "17631": 195, "1152": [195, 244], "18003": 195, "18711": 195, "19191": 195, "2110": 195, "18880": 195, "2347": 195, "18270": 195, "2645": 195, "18312": 195, "2991": 195, "18697": 195, "3328": 195, "18970": 195, "18922": 195, "20863": 195, "20876": 195, "991": [195, 231], "20600": 195, "1299": 195, "20221": 195, "20050": 195, "1946": 195, "20209": 195, "2290": 195, "20419": 195, "2636": 195, "20597": 195, "2987": 195, "20771": 195, "3333": 195, "20874": 195, "20807": 195, "21466": 195, "21537": 195, "21432": 195, "1380": 195, "21548": 195, "1720": 195, "21475": 195, "2071": 195, "21518": 195, "2418": 195, "21545": 195, "2765": 195, "21561": 195, "3107": 195, "21531": 195, "21564": 195, "i_alpha": 195, "ddot": 195, "tikhonov": 195, "trf": [195, 230], "insensit": [195, 264, 265, 439, 486, 493, 500, 561, 703, 880], "whilst": [195, 212], "mse": 195, "scores_lap": 195, "models_lap": 195, "reg_typ": [195, 422], "ix_best_alpha_lap": 195, "703": [195, 196, 231], "21916": 195, "1058": [195, 244, 689], "21994": 195, "1415": 195, "22063": 195, "22069": 195, "2127": 195, "22126": 195, "2477": 195, "22077": 195, "2831": 195, "22076": 195, "3188": 195, "22102": 195, "22049": 195, "22413": 195, "719": [195, 196], "22427": 195, "22467": 195, "1436": 195, "22397": 195, "22475": 195, "2164": 195, "22505": 195, "2527": 195, "22534": 195, "2832": 195, "22010": 195, "3034": 195, "20735": 195, "3243": 195, "19778": 195, "3440": 195, "18909": 195, "19456": 195, "13997": 195, "14563": 195, "16915": 195, "17977": 195, "1494": 195, "18877": 195, "1864": 195, "19674": 195, "2235": 195, "20254": 195, "20731": 195, "21117": 195, "3357": 195, "21333": 195, "20980": 195, "22607": 195, "22546": 195, "1069": [195, 244, 540, 660], "22241": 195, "1434": 195, "22390": 195, "1806": 195, "22568": 195, "22796": 195, "2574": 195, "23008": 195, "2933": 195, "22914": 195, "3313": 195, "23026": 195, "22999": 195, "22281": 195, "22801": 195, "22927": 195, "1474": 195, "23018": 195, "1858": 195, "23230": 195, "23220": 195, "2604": 195, "23251": 195, "23372": 195, "3374": 195, "23448": 195, "23380": 195, "23680": 195, "759": [195, 196, 231], "23715": 195, "23349": 195, "23305": 195, "1871": 195, "23350": 195, "2252": 195, "23436": 195, "23498": 195, "3022": [195, 320, 478, 862], "23617": 195, "3394": 195, "23563": 195, "23522": 195, "23217": 195, "739": [195, 196, 231], "23062": 195, "23162": 195, "1487": [195, 244, 855], "23218": 195, "1868": 195, "23342": 195, "22856": 195, "22844": 195, "2930": 195, "22827": 195, "3297": 195, "22840": 195, "22826": 195, "rf_lap": 195, "fr\u00e9d\u00e9ric": [195, 244, 416], "theunissen": [195, 244, 416], "nandini": [195, 244, 416], "singh": [195, 244, 416, 880], "ann": [195, 217, 244, 416, 880], "hsu": [195, 244, 416], "vinj": [195, 244, 416], "jack": [195, 244, 416, 880], "gallant": [195, 244, 416], "ben": [195, 244, 416, 880], "willmor": [195, 244, 416], "darragh": [195, 244, 416], "smyth": [195, 244, 416], "cell": [195, 199, 244, 416, 865, 880], "553": [195, 231, 244, 416], "0954": [195, 244, 416], "898x_14_3_309": [195, 244, 416], "heer": [195, 244, 416], "paslei": [195, 244, 416], "jochem": [195, 244, 416], "rieger": [195, 244, 416], "nathan": [195, 244, 416], "crone": [195, 244, 416], "knight": [195, 244, 416], "tune": [195, 207, 244, 416], "ncomms13654": [195, 244, 416], "525": [195, 198, 231], "30_strf": [195, 198], "visit": [196, 244, 851], "insight": [196, 862], "eas": 196, "camel": 196, "n_meg_channel": 196, "standand": 196, "interquartil": 196, "robustscal": [196, 419], "n_frequenc": [196, 297, 701], "popular": [196, 835, 843], "win": [196, 241], "grasp": 196, "competit": 196, "kaggl": 196, "week": [196, 861], "clf_csp": 196, "ssnr": [196, 559], "rewrit": [196, 880], "plot_filt": [196, 202, 203, 410, 417, 796, 870, 880], "boil": [196, 837], "evoked_time_gen": 196, "joint_kwarg": 196, "diag": [196, 680, 865], "654": [196, 231], "715": [196, 231], "675": [196, 231], "737": [196, 231], "491": [196, 226, 231], "738": 196, "571": 196, "743": [196, 205, 214, 231], "597": [196, 244, 418], "623": [196, 231], "746": 196, "723": [196, 231], "741": [196, 231], "818": 196, "836": [196, 231], "889": [196, 231, 277], "916": [196, 231, 241], "1009": [196, 202, 244], "1059": 196, "1139": 196, "1165": 196, "735": [196, 231], "1218": 196, "1271": 196, "745": [196, 231], "747": [196, 231], "435": [196, 226, 231], "711": [196, 208, 231, 244, 264, 265, 266, 267, 478, 479, 645], "461": [196, 231], "682": [196, 227], "539": 196, "592": 196, "618": [196, 244, 682], "671": [196, 231], "697": [196, 231], "777": 196, "803": [196, 209], "883": [196, 209, 231], "937": [196, 231], "742": [196, 231], "963": [196, 231], "748": [196, 231], "1070": 196, "752": [196, 209, 214, 231], "1097": [196, 244], "754": [196, 231, 244, 855], "1149": 196, "1174": 196, "755": [196, 231], "757": [196, 231], "1267": 196, "1293": 196, "429": [196, 209, 231], "472": [196, 226, 231, 244, 410], "526": [196, 231], "763": [196, 231], "582": [196, 244], "771": [196, 209, 231], "651": [196, 231], "676": 196, "786": [196, 231], "814": [196, 231], "835": [196, 231], "939": 196, "1104": 196, "773": [196, 231], "1160": 196, "1187": 196, "778": [196, 209, 231], "1214": 196, "1270": 196, "776": [196, 231], "lanczo": 196, "1353": 196, "91709": 196, "26373e": 196, "98776221": 196, "41838256": 196, "06628582": 196, "methodolog": [196, 244], "uncov": [196, 244], "hal": [196, 244], "01848442": [196, 244], "archiv": [196, 244, 385, 839, 845, 847, 859, 868], "ouvert": [196, 244], "lionel": [196, 244], "naccach": [196, 244], "subtend": [196, 244, 862], "e85791": [196, 244], "0085791": [196, 244], "50_decod": [196, 198], "auto_tutorials_machin": 198, "vibrat": 199, "door": [199, 201], "slam": [199, 201], "phone": 199, "geomagnet": 199, "unshield": 199, "headphon": 199, "malfunct": [199, 200, 855], "qr": [199, 256, 570, 578, 581, 880], "sensori": 199, "genesi": 199, "ssp_projector": 199, "readili": [199, 203, 868], "mag_channel": 199, "remove_dc": [199, 203, 478, 479, 801, 880], "get_xdata": [199, 203], "get_ydata": [199, 203], "searchsort": [199, 203], "dx": [199, 203], "dy": [199, 203], "head_width": [199, 203], "length_includes_head": [199, 203], "find_ecg_ev": [199, 201, 207, 217, 570, 574, 870, 880], "create_ecg_epoch": [199, 201, 205, 207, 570, 578, 870, 880], "ecg_epoch": [199, 205, 574], "6007": [199, 204], "streak": 199, "avg_ecg_epoch": 199, "blocki": 199, "efficaci": 199, "pro": [199, 202, 839], "con": [199, 202], "10_preprocessing_overview": [199, 214], "deepcopi": 200, "usabl": [200, 425, 568, 596, 880], "wildcard": 200, "original_bad": 200, "bad_chan": 200, "paus": [200, 266, 267, 748, 880], "codebas": [200, 839, 854, 863, 868], "good_eeg": 200, "all_eeg": 200, "setdiff1d": 200, "excess": [200, 202, 478, 479, 801, 880], "protocol": [200, 855], "sheet": [200, 855], "offlin": [200, 847], "raw2": [200, 217], "invest": [200, 861], "presenc": [200, 211, 223, 241, 244, 269, 391, 434, 839, 855, 880], "unrealist": [200, 855], "dramat": 200, "robust": [200, 204, 205, 240, 244, 264, 265, 410, 558, 657, 662, 880], "uninform": 200, "deweight": 200, "fair": [200, 208], "eeg_data": [200, 215], "eeg_data_interp": 200, "interp": [200, 651, 652, 653, 665, 880], "00000022": 200, "bad_color": [200, 478, 479, 801], "grad_data": 200, "grad_data_interp": 200, "00000009": 200, "propag": [200, 203, 258, 840], "15_handling_bad_channel": [200, 214], "fake_keypress": [201, 217], "keyboard": [201, 218, 748, 856, 880], "push": [201, 202, 839, 880], "enter": [201, 207, 217, 218, 838, 839, 842], "bad_cough": 201, "wrapper": [201, 268, 441, 445, 484, 690, 691, 880], "bad_blink": 201, "blink_annot": 201, "eeg_pick": 201, "albeit": 201, "annotate_break": [201, 870, 880], "first_tim": [201, 477, 478, 479, 498, 589, 880], "block_1": 201, "block_2": 201, "block_annot": 201, "break_annot": [201, 561], "min_break_dur": [201, 561], "t_start_after_previ": [201, 561], "t_stop_before_next": [201, 561], "bad_break": [201, 561], "events_subset": 201, "flat_criteria": 201, "stringent": 201, "reject_tmin": [201, 259, 264, 265, 574, 880], "reject_tmax": [201, 259, 264, 265, 574, 880], "disappear": [201, 241, 880], "subsum": 201, "stronger_reject_criteria": 201, "2000e": 201, "628": [201, 214, 231], "20_rejecting_bad_data": [201, 214], "park": [202, 244], "burru": [202, 244], "ifeachor": [202, 244], "jervi": [202, 244], "widmann": [202, 244], "somedai": 202, "conclud": [202, 230], "lightli": [202, 839], "cautious": 202, "hope": [202, 203, 205, 241], "math": [202, 206, 859], "b_0": 202, "b_1": [202, 862], "b_2": 202, "ldot": 202, "b_m": [202, 862], "a_1": 202, "a_2": 202, "a_n": 202, "mb_kz": 202, "na_kz": 202, "b_k": [202, 275, 862], "denomin": [202, 231, 297, 298, 654, 664, 688, 691, 713, 880], "a_k": 202, "autoregress": 202, "broken": [202, 269, 450, 839, 880], "finit": [202, 222, 231, 244, 454, 855, 862, 880], "impuls": [202, 859], "infinit": [202, 862, 880], "qquad": 202, "foral": [202, 862], "steeper": [202, 203], "accumul": [202, 264, 265], "despit": [202, 230], "throughput": 202, "sharp": [202, 226, 880], "steep": 202, "broader": [202, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "fundament": 202, "fftfreq": 202, "plot_ideal_filt": [202, 789, 870, 880], "f_p": [202, 862], "flim": [202, 203, 789, 796], "dlim": [202, 789], "f_": 202, "nyq": [202, 446, 449], "third_height": 202, "hypothet": [202, 558], "na\u00efv": 202, "brick": [202, 203], "correspondingli": [202, 264, 265, 862], "tighter": [202, 880], "remez": 202, "firl": 202, "ifft": 202, "relax": [202, 236, 880], "shallow": [202, 273], "gradual": 202, "shorten": [202, 218, 241, 772, 843, 862, 880], "benefici": [202, 276], "wherebi": 202, "came": [202, 845], "minimum_phas": 202, "falloff": 202, "h_min": 202, "uncompens": 202, "imaginari": [202, 244, 727, 728, 880], "dur": 202, "morlet_freq": 202, "tlim": 202, "ttick": 202, "blip": 202, "n_onset": 202, "x_orig": 202, "transition_band": 202, "create_filt": [202, 203, 264, 265, 266, 267, 448, 449, 478, 479, 789, 870, 880], "x_v16": 202, "twice": [202, 264, 265, 266, 267, 445, 446, 448, 449, 478, 479, 801], "filter_dur": 202, "x_v14": 202, "x_v13": 202, "h_eff": 202, "10001": [202, 880], "design_mne_c_filt": 202, "x_mne_c": 202, "hpw": 202, "lpw": 202, "x_min": [202, 313], "cost": [202, 271, 272, 275, 278, 279, 280, 416, 422, 558, 687, 688, 690, 691, 748, 806, 811, 862], "plot_sign": 202, "yscale": [202, 700, 880], "yticklabel": 202, "get_yticklabel": 202, "iirfilt": [202, 445], "iirdesign": [202, 445], "butterworth": [202, 264, 265, 266, 267, 412, 421, 445, 446, 448, 449, 478, 479, 570, 571, 880], "worsen": 202, "filtfilt": [202, 264, 265, 266, 267, 421, 445, 446, 448, 449, 478, 479, 801], "btype": [202, 445], "ftype": [202, 271, 272, 275, 278, 279, 280, 445], "butter": [202, 445], "x_shallow": 202, "sosfiltfilt": 202, "sosfilt": 202, "zpk2so": 202, "polynomi": [202, 264, 265, 266, 267, 478, 479, 517, 862, 880], "iir_param": [202, 207, 264, 265, 266, 267, 412, 421, 445, 446, 448, 449, 478, 479, 570, 571, 880], "filt": [202, 446], "x_steep": 202, "chebychev": [202, 445], "cheby1": [202, 445], "rp": [202, 445], "chebyshev": [202, 445, 880], "substanti": [202, 210, 264, 265, 270, 373, 466, 861, 862, 868], "adjust_ax": 202, "errant": 202, "misappl": 202, "deleteri": 202, "schr\u00f6ger": [202, 244], "uncontrol": 202, "acunzo": [202, 244], "misinterpret": 202, "tanner": [202, 244], "semant": 202, "syntact": 202, "n400": 202, "p600": 202, "5\u00b5v": 202, "sic": 202, "poststimulu": 202, "octav": 202, "energi": [202, 255, 859, 880], "understood": [202, 748], "cos_t": 202, "sig": [202, 230, 235, 236], "iir_lp_30": 202, "iir_hp_p1": 202, "iir_lp_2": 202, "iir_hp_2": 202, "x_lp_30": 202, "padlen": [202, 445], "x_hp_p1": 202, "x_lp_2": 202, "x_hp_2": 202, "x_f": 202, "lp": 202, "_2": [202, 862], "hp": [202, 210, 256], "evolv": 202, "maess": [202, 244, 880], "rebut": 202, "old": [202, 215, 217, 239, 244, 258, 261, 264, 265, 266, 267, 275, 278, 312, 320, 340, 402, 478, 479, 502, 523, 592, 614, 635, 636, 647, 748, 813, 817, 839, 847, 880], "baseline_plot": 202, "all_ax": 202, "ri": [202, 226, 244, 729, 732], "iir_hp": 202, "x_hp": 202, "leak": [202, 222, 861, 862], "n_pre": 202, "sig_pr": 202, "filter_data": [202, 264, 265, 266, 267, 421, 445, 446, 449, 478, 479, 870, 880], "adopt": [202, 837, 839], "reciproc": [202, 264, 265, 266, 267, 341, 412, 421, 431, 446, 448, 449, 478, 479, 569, 577, 588], "decent": 202, "blackman": [202, 264, 265, 266, 267, 421, 446, 448, 449, 478, 479], "fir_window": [202, 264, 265, 266, 267, 412, 421, 446, 448, 449, 478, 479], "fir_desgin": 202, "8197": 202, "outdat": 202, "construct_iir_filt": [202, 264, 265, 266, 267, 412, 421, 446, 448, 449, 478, 479, 570, 571, 870, 880], "transition_bandwidth": 202, "fir_coef": 202, "0545": 202, "0017": 202, "wider": [202, 203], "thoma": [202, 226, 227, 244, 536, 657, 662, 684, 687, 688, 689, 690, 691, 880], "sidnei": [202, 244], "wilei": [202, 244], "471": [202, 226, 244], "82896": [202, 244], "andrea": [202, 244, 297, 880], "erich": [202, 244], "burkhard": [202, 244, 880], "00233": [202, 244], "graham": [202, 244], "mackenzi": [202, 244], "rossum": [202, 244], "darren": [202, 244], "kara": [202, 244], "inappropri": [202, 244, 271, 272, 275, 278, 279, 280], "conclus": [202, 228, 244], "12437": [202, 244], "1469": [202, 244], "8986": [202, 244], "01009": [202, 244], "commentari": [202, 244], "artefact": [202, 212, 244], "norton": [202, 244], "ermf": [202, 244], "808": [202, 214, 231], "25_background_filt": [202, 214], "mathrm": [203, 210, 226, 716, 726, 728, 730, 731], "raw_highpass": 203, "19821": 203, "9911": [203, 880], "filter_param": 203, "add_arrow": 203, "meg_pick": 203, "raw_notch": 203, "3965": 203, "raw_notch_fit": 203, "spectrum_fit": [203, 449, 478, 479, 880], "notabl": [203, 240, 880], "raw_downsampl": 203, "pitfal": 203, "safe": [203, 215, 244, 264, 265, 320, 377, 378, 379, 382, 383, 385, 390, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 478, 845, 847], "614990234375": [203, 215], "current_sfreq": 203, "desired_sfreq": 203, "obtained_sfreq": 203, "lowpass_freq": 203, "19813025304873463": 203, "80214146205357": 203, "synch": 203, "30_filtering_resampl": [203, 214], "gratton": [204, 244, 557, 603], "croft": [204, 244, 557], "articl": [204, 854], "6607": 204, "bleed": [204, 282, 583], "250m": 204, "model_plain": 204, "picks_artifact": [204, 212, 557, 603], "epochs_clean_plain": 204, "redo": 204, "partli": 204, "variat": [204, 223, 410, 855, 880], "prone": 204, "allevi": [204, 862], "epochs_sub": 204, "model_sub": 204, "epochs_clean_sub": 204, "piec": [204, 217, 264, 265, 478, 479, 862], "ongo": [204, 561, 855, 868], "alik": 204, "model_evok": 204, "epochs_clean_evok": 204, "eog_evoked_clean": 204, "raw_kwarg": 204, "cole": [204, 244, 557, 603], "emanuel": [204, 244, 557, 603, 653, 880], "donchin": [204, 244, 557, 603], "ocular": [204, 205, 207, 244, 557, 603], "90135": [204, 244, 557, 603], "s0987": [204, 244, 557], "7053": [204, 244, 557], "00055": [204, 244, 557], "35_artifact_correction_regress": [204, 214], "corrmap": [205, 870, 880], "guidanc": [205, 207, 861], "blind": [205, 244, 558, 586], "microphon": 205, "unmix": [205, 558, 559, 586, 792, 795, 880], "analogi": 205, "unwant": [205, 207, 211, 318, 880], "ic": [205, 274, 558, 572, 791, 793, 795, 880], "n_pca_compon": [205, 558, 792, 880], "smallest": [205, 231, 341, 410, 558, 859, 862], "runica": [205, 558], "mixing_matrix_": [205, 558], "unmixing_matrix_": [205, 558], "tesla": [205, 207, 221, 862], "artifact_pick": [205, 207], "harder": [205, 839], "filt_raw": 205, "huge": [205, 686], "9010": 205, "get_explained_variance_ratio": [205, 558, 880], "explained_var_ratio": 205, "9358001342790973": 205, "7717091491114122": 205, "ratio_perc": 205, "trackpad": [205, 266, 267, 469, 764, 783], "15459": 205, "954": [205, 231], "ica000": [205, 880], "ica001": [205, 274, 558, 791, 793, 795], "anywai": [205, 216, 839, 845, 880], "read_ica": [205, 558, 870], "reconst_raw": 205, "tediou": 205, "reset": [205, 261, 264, 265, 266, 267, 273, 365, 410, 417, 478, 479, 557, 558, 700, 702, 703, 704, 748, 779, 780, 784, 787, 791, 800, 803, 808, 816, 865, 880], "eog_indic": 205, "prefront": 205, "ctp": [205, 558, 880], "ecg_indic": 205, "caught": 205, "ica014": 205, "refit": [205, 880], "new_ica": 205, "neck": [205, 308], "trail": [205, 558, 588, 744], "s001r03": 205, "s002r03": 205, "19679": 205, "s003": 205, "s003r03": 205, "lib": [205, 837, 845], "python3": [205, 838, 880], "_fastica": 205, "convergencewarn": 205, "s004": 205, "s004r03": 205, "6250": 205, "6249": 205, "6150": 205, "6149": 205, "ica002": 205, "labels_": [205, 558, 572, 794], "get_compon": [205, 558, 880], "subject_index": 205, "component_index": 205, "template_eog_compon": 205, "33638605": 205, "32708878": 205, "32846765": 205, "32807248": 205, "35916344": 205, "37615216": 205, "42464993": 205, "21789139": 205, "22387812": 205, "22237922": 205, "21342143": 205, "2425263": 205, "26757238": 205, "27806995": 205, "15470616": 205, "1693302": 205, "17711037": 205, "17373137": 205, "19651749": 205, "21091786": 205, "22459439": 205, "68783519": 205, "46717407": 205, "64182737": 205, "34165002": 205, "28991817": 205, "76938995": 205, "0057612": 205, "54311043": 205, "54567127": 205, "63806031": 205, "57058636": 205, "52637437": 205, "51788659": 205, "55774431": 205, "56188149": 205, "69340923": 205, "73333856": 205, "2829121": 205, "39253171": 205, "16120286": 205, "25431324": 205, "06352167": 205, "1647002": 205, "11930156": 205, "1811579": 205, "10112171": 205, "12638332": 205, "13623739": 205, "1301851": 205, "14380943": 205, "15329772": 205, "1715539": 205, "16560352": 205, "13293812": 205, "08175318": 205, "10173655": 205, "10764581": 205, "12707317": 205, "09785876": 205, "07433338": 205, "08470678": 205, "07373196": 205, "03379354": 205, "ecg_ind": 205, "francoi": [205, 244, 558], "cardoso": [205, 244, 558], "precondit": [205, 210, 244, 558, 589, 880], "hessian": [205, 244, 558], "4040": [205, 244, 558], "4049": [205, 244, 558], "2844203": [205, 244, 558], "iren": [205, 244], "winkler": [205, 244], "deben": [205, 244, 572], "4101": [205, 244], "milan": [205, 244, 880], "7319296": [205, 244], "dammer": [205, 244, 558, 880], "schiek": [205, 244, 558], "boer": [205, 244, 558], "carmen": [205, 244, 388, 558], "silex": [205, 244, 558], "mikhail": [205, 244, 558], "zvyagintsev": [205, 244, 558], "uw": [205, 244, 558], "pietrzyk": [205, 244, 558], "mathiak": [205, 244, 558], "2353": [205, 244, 558], "926677": [205, 244, 558], "filipa": [205, 244, 572], "campo": [205, 244, 572], "viola": [205, 244, 572, 880], "jeremi": [205, 244, 572], "thorn": [205, 244, 572], "edmond": [205, 244, 572], "till": [205, 244, 572], "schneider": [205, 244, 572], "tom": [205, 244, 572, 880], "eichel": [205, 244, 572], "877": [205, 231, 244, 572], "clinph": [205, 244, 558, 566, 572, 729, 732], "40_artifact_correction_ica": [205, 214], "setup_3d_ax": 206, "set_zlabel": 206, "set_ylim": [206, 241], "set_zlim": 206, "geometr": [206, 271, 272, 275, 278, 279, 280, 444, 813, 855, 862], "shadow": [206, 641], "cast": [206, 257, 451, 752, 880], "sun": 206, "xy_projection_matrix": 206, "projected_point": 206, "projected_vector": 206, "arrow_coord": 206, "arrow_length_ratio": 206, "symbol": [206, 256, 699, 860, 862, 880], "expans": [206, 210, 264, 265, 266, 267, 431, 478, 479, 517, 568, 569, 577, 588, 862], "unpack": [206, 231, 761, 845], "lucki": 206, "bother": [206, 215], "trigger_effect": 206, "internet": [206, 861], "algebra": [206, 859, 880], "full_matric": 206, "trigger_projection_matrix": 206, "plot_trisurf": 206, "interchang": [206, 297, 835], "ten": [206, 241, 468, 843, 856], "hyperplan": [206, 413, 420], "synonym": [206, 865], "incident": [206, 266, 267, 469, 764, 783], "phrase": 206, "first_projector": 206, "explained_var": [206, 273, 880], "inact": [206, 210, 264, 265, 266, 267, 478, 479, 861], "compute_proj_raw": [206, 207, 355, 356, 862, 870, 880], "ortho": [206, 558], "write_proj": [206, 626, 870, 880], "forgo": 206, "offecg": 206, "remove_exist": [206, 207, 264, 265, 266, 267, 478, 479, 748], "perman": [206, 837, 855, 880], "mags_ecg": 206, "_projector": 206, "cheaper": 206, "consequenti": 206, "mikko": [206, 207, 244, 862], "uusitalo": [206, 207, 244, 862], "bf02534144": [206, 207, 244, 862], "45_projectors_background": [206, 214], "equip": [207, 862], "system_proj": 207, "empty_room_fil": 207, "empty_room_raw": 207, "empty_room_proj": 207, "distant": [207, 859], "_proj": [207, 880], "no_proj": [207, 570, 571], "picks_trac": [207, 799], "plot_projs_joint": [207, 870, 880], "ecg_l_freq": [207, 256, 570], "ecg_h_freq": [207, 256, 570], "filter_method": [207, 570, 571], "presum": 207, "clutter": 207, "eog_proj": 207, "okai": 207, "eog_projs_bad": 207, "perfectli": [207, 241, 723, 862], "get_titl": [207, 211], "get_ylabel": 207, "set_tick_param": 207, "labelbottom": 207, "977": [207, 214, 231], "50_artifact_correction_ssp": [207, 214], "earlob": 208, "collarbon": 208, "disadvantag": [208, 226], "add_reference_channel": [208, 264, 265, 266, 267, 478, 479, 700, 702, 703, 704, 870, 880], "ref_channel": [208, 264, 265, 266, 267, 281, 478, 479, 645, 700, 702, 703, 704], "raw_new_ref": 208, "raw_avg_ref": 208, "wasn": [208, 880], "infin": [208, 244, 264, 265, 266, 267, 478, 479, 645, 880], "raw_rest": 208, "_raw": [208, 211], "2197": 208, "655": [208, 231], "00413199": 208, "0159844": 208, "05174612": 208, "eeg_bipolar": [208, 642], "transvers": [208, 262], "raw_bip_ref": 208, "36038": [208, 215], "61837": 208, "valueerror": [208, 275, 278, 444, 619, 642, 650, 772], "yao": [208, 244, 264, 265, 266, 267, 478, 479, 645, 660], "693": [208, 231, 244, 264, 265, 266, 267, 478, 479, 645], "0967": [208, 244, 264, 265, 266, 267, 478, 479, 645], "3334": [208, 244, 264, 265, 266, 267, 478, 479, 645], "dezhong": [208, 244], "yun": [208, 244], "qin": [208, 244], "shiang": [208, 244], "hu": [208, 244], "dong": [208, 244, 880], "maria": [208, 244], "bringa": [208, 244], "vega": [208, 244], "pedro": [208, 244], "vald": [208, 244], "\u00e9": [208, 244], "sosa": [208, 244], "00707": [208, 244], "55_setting_eeg_refer": [208, 214], "h\u00f6chenberg": [209, 240, 867, 880], "hoechenberg": [209, 240], "test_move_anon_raw": [209, 210], "v6": [209, 210], "v7": [209, 210, 880], "10800": [209, 210, 880], "31199": [209, 210], "20399": 209, "get_chpi_info": [209, 870, 880], "chpi_freq": 209, "chpi_cod": 209, "chpi_amplitud": [209, 341, 342], "compute_chpi_amplitud": [209, 342, 343, 870, 880], "1696": 209, "418": [209, 226, 231, 880], "541": [209, 228, 231, 244, 431], "564": [209, 231, 244, 402], "586": [209, 216, 220, 231], "641": [209, 231, 243], "664": 209, "533": [209, 231], "636": [209, 231], "863": [209, 231], "882": [209, 231], "689": [209, 231, 233], "1053": 209, "822": [209, 231], "1076": 209, "843": [209, 231], "1099": 209, "1153": 209, "1167": 209, "1180": 209, "908": [209, 231], "1249": 209, "909": [209, 231], "1272": 209, "1295": 209, "948": 209, "1319": 209, "969": [209, 231], "987": [209, 231], "1365": 209, "1401": 209, "1015": 209, "1424": 209, "1447": 209, "1046": 209, "1470": 209, "1493": 209, "1507": 209, "1067": 209, "1554": 209, "1578": 209, "1114": 209, "1601": 209, "1624": 209, "1663": 209, "1685": 209, "1156": 209, "compute_chpi_loc": [209, 210, 341, 343, 344, 870, 880], "559": [209, 231], "573": [209, 231], "823": [209, 231], "827": [209, 231], "833": [209, 231], "933": [209, 231], "1040": 209, "1062": 209, "1072": 209, "1250": 209, "1286": 209, "1301": 209, "1315": 209, "1385": 209, "1429": 209, "1479": 209, "1565": [209, 244], "1580": [209, 264, 265], "1586": 209, "1594": 209, "1599": 209, "1609": 209, "1646": 209, "1652": 209, "1691": 209, "write_head_po": [209, 342, 344, 350, 351, 870], "compute_chpi_snr": [209, 341, 771, 870, 880], "plot_chpi_snr": [209, 870, 880], "snr_dict": [209, 771], "576": [209, 214, 231], "59_head_posit": [209, 214], "find_bad_channels_maxwel": [210, 588, 870, 880], "obliqu": 210, "filter_chpi": [210, 588, 870, 880], "crosstalk": 210, "fine_cal_fil": 210, "sss_cal_mgh": 210, "crosstalk_fil": 210, "ct_sparse_mgh": 210, "raw_check": 210, "auto_noisy_ch": 210, "auto_flat_ch": 210, "auto_scor": 210, "cross_talk": [210, 568, 577, 588], "return_scor": [210, 577], "ex": [210, 839, 843, 844], "ei": 210, "ch_subset": 210, "scores_noisi": [210, 577], "limits_noisi": [210, 577], "bin_label": 210, "data_to_plot": 210, "cbar_kw": 210, "nanmin": 210, "rect": 210, "nanmax": [210, 229], "appar": [210, 855], "fashion": [210, 371, 880], "min_count": [210, 577], "qualifi": 210, "int_ord": [210, 431, 569, 577, 588, 880], "ext_ord": [210, 341, 343, 347, 431, 568, 569, 577, 588], "thick": [210, 862], "mathtt": [210, 716, 726, 727, 728, 730, 731], "st": [210, 256], "_durat": 210, "penultim": 210, "st_correl": [210, 577, 588, 596], "st_onli": [210, 577, 588, 880], "doublecheck": 210, "get_active_chpi": [210, 870, 880], "chpi_fif_fil": 210, "head_pos_fil": 210, "headpo": [210, 256, 351], "patent": [210, 588, 596], "legal": [210, 772, 861], "commerci": [210, 588], "124905": [210, 244, 431, 569, 588], "1935742": [210, 244, 569, 588], "1759": [210, 244, 588], "1768": [210, 244, 588], "772": [210, 214], "60_maxwell_filtering_sss": [210, 214], "deoxyhaemoglobin": [211, 880], "itertool": 211, "compress": [211, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 385, 478, 479, 574, 575, 700, 703, 845, 880], "novemb": [211, 244, 657, 662], "cw": [211, 371, 835], "set_dur": [211, 258, 880], "mid": [211, 226], "source_detector_dist": [211, 870, 880], "photodetect": 211, "scalp_coupling_index": [211, 870, 880], "beer": 211, "lambert": 211, "law": [211, 861, 880], "raw_haemo": 211, "beer_lambert_law": [211, 870, 880], "haemodynam": 211, "predominantli": 211, "raw_haemo_unfilt": 211, "1291": 211, "s4_d4": 211, "s8_d8": 211, "s3_d3": 211, "s7_d6": 211, "s7_d7": 211, "s6_d8": 211, "oxi": [211, 880], "morphologi": 211, "evoked_dict": 211, "color_dict": 211, "aa3377": [211, 716, 726], "styles_dict": 211, "chroma": 211, "drive": [211, 363, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 518], "tidi": 211, "leg_lin": 211, "get_c": 211, "70_fnirs_process": [211, 214], "technologi": [212, 244, 255, 867], "placement": [212, 266, 267, 785, 835, 880], "opm_data_fold": 212, "ucl_opm_auditori": [212, 856, 870], "opm_fil": 212, "001_se": 212, "aef_run": 212, "001_meg": 212, "720000": 212, "6000": [212, 586], "pt": [212, 482, 510], "amp_scal": 212, "1e12": [212, 370], "data_d": 212, "time_d": 212, "set_kwarg": 212, "ambient": 212, "knowldg": 212, "evironment": 212, "psd_kwarg": 212, "psd_pre": 212, "9901": [212, 880], "psd_post": 212, "remnant": 212, "motiv": [212, 241], "minimis": 212, "interfec": 212, "39601": 212, "19801": 212, "seymour": [212, 244, 856, 880], "stephani": [212, 244, 856], "mellor": [212, 244, 856], "neill": [212, 244, 856, 880], "tim": [212, 244, 856], "tiernei": [212, 244, 856], "eleanor": [212, 244, 856], "maguir": [212, 244, 856], "opportun": [212, 244, 856], "118834": [212, 244, 856], "februari": [212, 244, 300, 856], "872": 212, "80_opm_process": [212, 214], "831": [214, 231], "auto_tutorials_preprocess": 214, "166800": 215, "read_raw_": [215, 477, 862, 880], "famili": [215, 689], "seriou": [215, 861], "parenthes": [215, 862], "estimate_rank": [215, 880], "n_time_samp": 215, "time_sec": 215, "n_chan": [215, 680, 727, 728, 810], "000167471573526": 215, "megacq": 215, "acqch001": 215, "110113": 215, "acqch002": 215, "110112": 215, "acqch003": 215, "110111": 215, "acqch004": 215, "110122": 215, "frequent": [215, 837, 839, 857, 860, 880], "12012": 215, "18018": 215, "24024": 215, "underlyingli": [215, 857], "n_timepoint": [215, 685], "pose": [215, 839], "undo": [215, 618, 880], "eeg_and_eog": 215, "raw_temp": 215, "channel_nam": [215, 495, 619, 880], "eog_and_frontal_eeg": 215, "frivol": 215, "eeg_059": 215, "eeg_060": 215, "blink_detector": 215, "makeshift": 215, "eeg_001": 215, "raw_select": 215, "1503": 215, "unspecifi": [215, 221, 772], "500770084699155": 215, "5001290587975622": 215, "raw_selection1": 215, "raw_selection2": 215, "raw_selection3": 215, "5041000049184614": 215, "sampling_freq": [215, 221], "start_stop_second": 215, "channel_index": [215, 761], "85742192e": 215, "64355481e": 215, "89306644e": 215, "99872648": 215, "00039144": 215, "0020564": 215, "9933487": 215, "99501366": 215, "99667862": 215, "data_arrai": 215, "times_arrai": 215, "meg_0712": 215, "meg_1022": 215, "two_meg_chan": 215, "y_offset": 215, "safest": [215, 855], "eeg_channel_indic": 215, "planar1": [215, 261, 264, 265, 266, 267, 410, 417, 478, 479, 555, 556, 557, 558, 572, 700, 702, 703, 704, 780, 787, 791, 803, 808, 810], "planar2": [215, 261, 264, 265, 266, 267, 410, 417, 478, 479, 555, 556, 557, 558, 572, 700, 702, 703, 704, 780, 787, 791, 803, 808, 810], "first_channel_data": [215, 862], "eeg_and_eog_data": 215, "two_meg_chans_data": 215, "my_data": 215, "npy": [215, 216], "afford": 215, "scaling_tim": 215, "start_end_sec": 215, "to_hdf": 215, "999750": 215, "952283e": 215, "001415": 215, "069226e": 215, "003080": 215, "080921e": 215, "004745": 215, "010755e": 215, "006410": 215, "10_raw_overview": [215, 220], "write_ev": [216, 451, 615, 870, 880], "lst": [216, 615, 825], "array_equ": 216, "_eve": 216, "my_experi": 216, "told": 216, "events_no_button": 216, "merged_ev": 216, "ultim": [216, 839], "send": [216, 745], "cumbersom": 216, "20_event_arrai": [216, 220], "datetim": [217, 258, 264, 265, 266, 267, 269, 283, 478, 479, 880], "compris": [217, 221, 264, 265, 688, 702, 703, 704, 862, 868], "posix": [217, 258], "timestamp": [217, 258, 271, 272, 275, 278, 279, 280, 478, 479, 495, 606, 880], "my_annot": 217, "aaa": 217, "bbb": 217, "ccc": 217, "microsecond": [217, 258, 264, 265, 266, 267, 269, 478, 479, 865], "time_of_first_sampl": 217, "95597083": 217, "iso": 217, "8601": 217, "new_orig_tim": 217, "strftime": 217, "later_annot": 217, "ddd": 217, "eee": 217, "fff": 217, "720100": 217, "darker": 217, "spinbox": 217, "safeguard": [217, 269, 880], "interactive_annot": 217, "bad_": [217, 880], "ordereddict": 217, "95597082905339": [217, 258], "tzinfo": 217, "timezon": [217, 264, 265, 266, 267, 478, 479], "descr": 217, "70597082905339": 217, "45597082905339": 217, "20597082905339": 217, "WILL": 217, "NOT": 217, "annot_from_fil": 217, "30_annotate_raw": [217, 220], "versatil": 218, "lengthen": 218, "unmark": 218, "newli": [218, 769], "hover": 218, "thumbnail": 218, "plot_psd_topo": [218, 239, 264, 265, 266, 267, 478, 479], "40_visualize_raw": [218, 220], "auto_tutorials_raw": 220, "synthet": [221, 495, 574, 578, 862, 880], "hertz": [221, 223, 269, 701, 705, 706, 707, 708, 709, 710], "eog001": 221, "meg001": 221, "meg002": 221, "meg003": 221, "meg004": 221, "meg005": 221, "meg006": 221, "meg007": 221, "meg008": 221, "seven": [221, 862, 880], "molar": [221, 862], "amper": [221, 862], "simulated_raw": 221, "show_scalebar": [221, 264, 265, 478, 479, 778, 801, 880], "simulated_epoch": 221, "column_stack": 221, "condition_a": 221, "condition_b": 221, "evoked_arrai": 221, "n_per_seg": [221, 241, 264, 265, 266, 267, 478, 479, 702, 704, 719, 880], "psd_ave": 221, "spectrum_from_arrai": 221, "inst_info": 221, "my_welch": 221, "inst_type_str": 221, "data_typ": 221, "10_array_obj": [221, 225], "simulate_stc": [222, 664, 665, 666, 870, 880], "dt": [222, 431, 712], "17545": 222, "hemi_to_ind": 222, "elig": [222, 861], "surf_vertic": 222, "restrict_vert": 222, "intersect1d": 222, "restrict_vertic": [222, 270, 275], "cent_idx": 222, "elsewher": 222, "distances_to_outsid": [222, 270, 880], "compute_area": [222, 270, 880], "stc_gen": 222, "value_fun": [222, 667], "brain_gen": 222, "evoked_gen": 222, "stc_inv": 222, "brain_inv": 222, "45968308": 222, "57021267": 222, "69354621": 222, "evoked_snr": 222, "70_point_spread": [222, 225], "unit_impuls": 223, "coh_signal_gen": 223, "t_rand": 223, "dev": [223, 546, 646], "base_freq": 223, "cumsum": 223, "signal1": 223, "signal2": 223, "am": [223, 262, 265, 267, 373, 479, 865, 880], "nperseg": 223, "coh": [223, 701, 774], "noverlap": 223, "146374": 223, "33830": 223, "stc_signal": 223, "stc_nois": 223, "pretend": [223, 226], "s_rm": 223, "59828": 223, "89697e": 223, "40489756": 223, "65479053": 223, "61269642": 223, "dampen": [223, 641, 716, 726, 730], "consensu": [223, 861], "csd_signal": 223, "filters_approach1": 223, "filters_approach2": 223, "filters_1": 223, "power_approach1": 223, "power_approach2": 223, "plot_approach": 223, "brain1": 223, "42918831e": 223, "04345299e": 223, "40589757e": 223, "brain2": 223, "mia": [223, 244, 297, 298], "liljestr\u00f6m": [223, 244, 297, 298], "susanna": [223, 244, 297, 298, 880], "aro": [223, 244, 297, 298, 880], "245530": [223, 244, 297, 298], "kensuk": [223, 244, 297, 298], "sekihara": [223, 244, 297, 298], "79369": [223, 244, 297, 298], "79370": [223, 244, 297, 298], "80_dic": [223, 225], "844": [225, 231], "auto_tutorials_simul": 225, "557": [225, 231, 244, 402], "ttest_1samp_no_p": [226, 687, 690, 694, 870, 880], "phenomena": 226, "n_subject": [226, 234, 236, 683], "signal_mean": 226, "signal_sd": 226, "noise_sd": 226, "gaussian_sd": 226, "n_src": [226, 272, 277], "h_0": 226, "colon": [226, 256, 385, 865], "h_1": 226, "neq": [226, 862], "geq": 226, "cdot": [226, 660, 862], "1600": 226, "mcc": 226, "plot_t_p": 226, "p_lim": 226, "t_lim": 226, "mgrid": 226, "plot_surfac": [226, 880], "rstride": 226, "cstride": 226, "ztick": 226, "mappabl": 226, "set_tick": 226, "set_ticklabel": 226, "get_xaxi": 226, "set_label_coord": 226, "set_weight": 226, "use_p": 226, "log_": 226, "t_": [226, 862], "exchang": [226, 880], "verid": 226, "n_": [226, 862], "samp": 226, "gymnast": 226, "declar": [226, 861], "p_type_i": 226, "combat": 226, "familywis": 226, "fwer": 226, "benjamini": [226, 684], "hochberg": [226, 684], "strict": [226, 453, 843], "indistinguish": 226, "mathbf": [226, 569], "perm_": 226, "aforement": 226, "rethink": 226, "thought": [226, 681, 835], "refram": 226, "drawback": 226, "touch": [226, 321], "feature_extract": 226, "grid_to_graph": 226, "e402": 226, "mini_adjac": 226, "toarrai": 226, "find_ch_adjac": [226, 227, 228, 231, 329, 680, 687, 688, 690, 691, 769, 870, 880], "combine_adjac": [226, 228, 231, 234, 318, 329, 687, 688, 690, 691, 870, 880], "get_builtin_ch_adjac": [226, 318, 329, 769, 870], "builtin_ch_adj": 226, "adj_nam": 226, "adj_descript": 226, "bti148": 226, "bti248": 226, "bti248grad": 226, "ctf64": 226, "easycap128ch": 226, "easycap32ch": 226, "easycap64ch": 226, "easycapm1": [226, 880], "easycapm11": 226, "m11": 226, "easycapm14": 226, "m14": 226, "easycapm15": 226, "m15": 226, "ecog256": 226, "256channel": 226, "ecog256bipolar": 226, "eeg1010_neighb": 226, "elec1005": 226, "elec1010": 226, "elec1020": 226, "itab153": 226, "itab": 226, "itab28": 226, "language29ch": 226, "mpi": 226, "mpi_59_channel": 226, "neuromag122cmb": 226, "neuromag122": [226, 880], "neuromag306cmb": 226, "neuromag306": 226, "neuromag306mag": [226, 231], "neuromag306planar": [226, 228], "yokogawa160": 226, "yokogawa440": 226, "read_ch_adjac": [226, 318, 322, 680, 769, 870, 880], "n_space": 226, "t_thresh": [226, 228], "t_clust": 226, "viewabl": 226, "p_clust": 226, "cl": 226, "195527": 226, "120434": 226, "1903": 226, "1971": 226, "2034": 226, "2083": 226, "2087": 226, "2055": 226, "2053": 226, "stat_fun_hat": 226, "t_hat": 226, "p_hat": 226, "043603": 226, "127369": 226, "3205": 226, "3254": 226, "3880": 226, "4118": 226, "riemann": 226, "threshold_tfc": 226, "t_tfce": 226, "p_tfce": 226, "h_power": [226, 227], "e_pow": [226, 227], "469": [226, 231], "507": [226, 231], "t_tfce_hat": 226, "p_tfce_hat": 226, "jag": 226, "peaki": 226, "broad": [226, 241], "tighten": 226, "broaden": 226, "exhaust": [226, 297], "unbalanc": 226, "statsmodel": [226, 868, 877], "anova_lm": 226, "wrap": [226, 268, 531, 880], "q": [226, 256, 660, 687, 688, 690, 691, 862], "f_onewai": [226, 681, 683, 688, 691, 870], "f_mway_rm": [226, 230, 236, 683, 870, 880], "f_threshold_mway_rm": [226, 230, 236, 681, 870], "unpair": 226, "spatio_temporal_cluster_test": [226, 227, 231, 235, 236, 870, 880], "spatio_temporal_cluster_1samp_test": [226, 234, 687, 870, 880], "gerard": [226, 244, 693, 694], "ridgwai": [226, 244, 693, 694], "flandin": [226, 244, 693, 694], "karl": [226, 244, 255, 693, 694, 867], "friston": [226, 244, 693, 694], "Will": [226, 244, 256, 268, 311, 446, 477, 558, 693, 694, 699, 712, 719, 744, 821, 844], "penni": [226, 244, 693, 694], "haircut": [226, 244, 693, 694], "nichol": [226, 227, 244, 684, 687, 688, 689, 690, 691], "10_background_stat": [226, 233], "confirmatori": 227, "tfce": [227, 687, 688, 690, 691, 868, 880], "ttest_ind": [227, 694], "unsaf": [227, 703], "median_valu": 227, "long_word": 227, "short_word": 227, "time_window": [227, 700], "ntarget": 227, "short_df": 227, "format_dict": 227, "096": 227, "453939": 227, "222424": 227, "518939": 227, "371515": 227, "811667": 227, "250152": 227, "039697": 227, "318030": 227, "163030": 227, "425152": 227, "509": [227, 231], "684": [227, 231], "absent": [227, 365, 865, 880], "amongst": [227, 241], "temor": 227, "cluster_pv": [227, 687, 688, 690, 691], "significant_point": 227, "delaunai": [227, 228, 318, 880], "917298": 227, "1856": 227, "20_erp_stat": [227, 233], "whom": [228, 231, 839], "downstream": [228, 229], "nonparametr": [228, 229, 231, 244, 687, 688, 689, 690, 691], "spectrotempor": [228, 229, 727, 728, 730, 731], "tfr_epoch": 228, "logratio": [228, 240, 287, 541, 542, 700, 703, 808], "epochs_pow": [228, 230, 231], "lattic": [228, 231, 680, 687, 688, 690, 691], "sensor_adjac": 228, "use_idx": 228, "n_ch": 228, "unrol": 228, "degrees_of_freedom": 228, "455144": 228, "265125": 228, "caveat": [228, 231, 244, 558, 862], "anywher": [228, 880], "t_obs_plot": 228, "f_idx": 228, "t_idx": [228, 478, 479], "nanargmax": 228, "40_cluster_1samp_time_freq": [228, 233], "epochs_condition_1": 229, "epochs_condition_2": 229, "comptuat": 229, "tfr_epochs_1": 229, "tfr_epochs_2": 229, "epochs_power_1": 229, "epochs_power_2": 229, "f_ob": [229, 230, 231, 235, 236, 688, 691], "566824": 229, "677": [229, 231], "695": [229, 231], "evoked_power_1": 229, "evoked_power_2": 229, "evoked_power_contrast": 229, "f_obs_plot": [229, 230, 231], "max_f": 229, "evoked_condition_1": 229, "evoked_condition_2": 229, "evoked_contrast": 229, "50_cluster_between_time_freq": [229, 233], "interplai": 230, "perceptu": 230, "56aud_r": 230, "60vis_l": 230, "64vis_r": 230, "forgiv": 230, "zero_mean": [230, 542, 716, 726, 727, 728, 730], "this_tfr": [230, 231], "this_pow": 230, "n_condit": [230, 231, 236, 688, 691], "n_replic": 230, "factor_level": [230, 236, 681, 683], "formula": [230, 236, 297, 298, 354, 656, 660, 713, 714, 862, 880], "a1b1": [230, 681], "a1b2": [230, 681], "a2b1": [230, 681], "b2b2": 230, "fval": 230, "effect_label": 230, "autumn": [230, 231], "overrid": [230, 274, 370, 372, 478, 479, 495, 637, 638, 639, 640, 746, 772, 843, 845, 861], "necessit": [230, 236, 880], "return_pv": [230, 236, 681], "pthresh": [230, 236], "f_thresh": [230, 231, 236], "419588": 230, "good_clust": [230, 234], "f_imag": [230, 231], "f_obs_plot2": 230, "70_cluster_rmanova_time_freq": [230, 233], "differenti": [231, 244, 264, 265, 266, 267, 434, 478, 479, 729, 732, 868], "plot_ch_adjac": [231, 318, 329, 870, 880], "_csr": 231, "csr_matrix": [231, 276, 277, 318, 329, 625], "bind": [231, 236], "stackexchang": 231, "73993": 231, "alpha_cluster_form": 231, "n_observ": [231, 685, 687, 688, 690, 691, 772], "dfn": [231, 688, 691], "dfd": [231, 688, 691], "cluster_stat": 231, "004107": 231, "094418": 231, "505": 231, "515": [231, 880], "518": 231, "555": 231, "563": 231, "575": 231, "583": [231, 244, 418], "585": [231, 244], "591": 231, "593": 231, "595": [231, 244], "598": 231, "617": 231, "626": [231, 244, 558], "634": [231, 244, 558], "646": 231, "679": 231, "681": 231, "716": 231, "761": 231, "764": 231, "788": 231, "804": 231, "806": 231, "832": 231, "834": 231, "845": 231, "849": 231, "854": 231, "864": [231, 277], "874": 231, "876": [231, 277], "887": 231, "899": [231, 241], "904": [231, 277], "906": 231, "915": 231, "917": 231, "919": 231, "921": 231, "928": 231, "931": 231, "935": 231, "942": 231, "944": 231, "946": 231, "949": 231, "962": 231, "964": 231, "973": 231, "989": 231, "p_accept": 231, "good_cluster_ind": [231, 235, 236], "crimson": [231, 748], "steelblu": [231, 478, 479, 801], "i_clu": 231, "clu_idx": 231, "time_ind": 231, "space_ind": 231, "ch_ind": 231, "f_map": 231, "sig_tim": 231, "ax_topo": 231, "f_evok": 231, "ax_colorbar": 231, "ax_sign": 231, "ymin": [231, 236], "get_ylim": 231, "fill_betweenx": [231, 236], "tfr_adjac": 231, "tfr_threshold": 231, "333033": 231, "478": 231, "483": 231, "502": [231, 523, 865], "514": 231, "534": 231, "544": 231, "556": 231, "596": 231, "599": 231, "607": 231, "614": 231, "631": 231, "635": 231, "637": 231, "638": 231, "657": 231, "673": 231, "698": 231, "809": 231, "811": 231, "812": 231, "816": 231, "829": 231, "842": 231, "853": 231, "861": 231, "865": 231, "866": 231, "879": 231, "884": [231, 244], "886": 231, "893": 231, "896": 231, "903": 231, "907": 231, "918": 231, "925": 231, "936": 231, "943": 231, "945": [231, 266, 267, 700, 786], "952": 231, "967": 231, "974": 231, "986": 231, "difficulti": [231, 403, 837, 859], "freq_ind": 231, "ax_spec": 231, "f_obs_plot_sig": 231, "ax_colorbar2": 231, "mari": [231, 244, 687, 688, 690, 691, 880], "dejan": [231, 244, 687, 688, 690, 691], "draschkow": [231, 244, 687, 688, 690, 691], "e13335": [231, 244, 687, 688, 690, 691], "13335": [231, 244, 687, 688, 690, 691], "75_cluster_ftest_spatiotempor": [231, 233], "auto_tutorials_stat": [233, 238], "equalize_epoch_count": [234, 870], "summarize_clusters_stc": [234, 235, 236, 870, 880], "1000e": [234, 236], "sample_vertic": [234, 236], "evoked1": [234, 866], "evoked2": [234, 866], "n_vertices_sampl": [234, 236], "morph_data": [234, 880], "fsave_vertic": [234, 235, 236], "morph_mat": [234, 236, 276], "n_vertices_fsav": [234, 235, 236], "govern": 234, "member": [234, 685, 861, 865, 868], "max_step": [234, 687, 688, 690, 691], "spatial_src_adjac": [234, 235, 236, 870, 880], "p_threshold": [234, 235], "t_threshold": 234, "clu": [234, 235, 236, 692], "563537": 234, "791547": 234, "permutationt": 234, "good_clusters_idx": 234, "stc_all_cluster_vi": [234, 235, 236], "20_cluster_1samp_spatiotempor": [234, 238], "stc_fname": 235, "n_subjects1": 235, "n_subjects2": 235, "x1": [235, 685, 688], "x2": [235, 685, 688], "subjects_k": 235, "f_threshold": [235, 683], "632172": 235, "30_cluster_ftest_spatiotempor": [235, 238], "engemannn": 236, "r_aud": 236, "r_vi": 236, "tini": [236, 298], "1782": 236, "851281": 236, "inds_t": 236, "inds_v": 236, "cluster_ind": 236, "eve_id": 236, "mean_tc": 236, "std_tc": 236, "60_cluster_rmanova_spatiotempor": [236, 238], "v\u00b2": 239, "\u00b2": [239, 240], "t\u00b2": [239, 241], "overridden": [239, 476, 880], "esp": 239, "method_kw": [239, 264, 265, 266, 267, 478, 479, 702, 704], "psd_array_multitap": [239, 264, 265, 266, 267, 415, 478, 479, 702, 704, 728, 731, 870, 880], "irrelev": [239, 256, 839, 862], "epo_spectrum": 239, "npsd": 239, "__getitem__": [239, 257, 258, 259, 261, 262, 264, 265, 269, 273, 277, 288, 302, 478, 479, 524, 701, 702, 703, 704, 735, 880], "evk_spectrum": 239, "61863537e": 239, "13487136e": 239, "88010499e": 239, "89065956e": 239, "24056397e": 239, "91160668e": 239, "56762015e": 239, "65842303e": 239, "39426775e": 239, "38758770e": 239, "03771739e": 239, "98519756e": 239, "agg_fun": [239, 264, 265, 266, 267, 478, 479, 702, 704, 780], "psd_welch": [239, 880], "psd_multitap": [239, 880], "area_mod": [239, 264, 265, 266, 267, 478, 479, 802], "kept": [239, 259, 264, 270, 371, 434, 473, 475, 476, 518, 525, 526, 527, 528, 529, 531, 532, 542, 558, 559, 569, 611, 792, 839, 880], "periodogram": [239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 719], "electroacoust": [239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 719], "1967": [239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 719], "tau": [239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 719], "1161901": [239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 719], "slepian": [239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 712, 718], "bell": [239, 244, 264, 265, 266, 267, 478, 479, 558, 586, 702, 704, 712, 718], "1430": [239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 712, 718], "1978": [239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 712, 718], "1538": [239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 712, 718], "7305": [239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 712, 718], "tb02104": [239, 244, 264, 265, 266, 267, 478, 479, 702, 704, 712, 718], "10_spectrum_class": [239, 243], "72074": 240, "mean_spectrum": 240, "psds_mean": [240, 241], "psds_std": [240, 241], "arithmet": [240, 558, 719, 880], "psds_welch_mean": 240, "freqs_mean": 240, "psds_welch_median": 240, "freqs_median": 240, "epo_idx": 240, "unaggreg": [240, 719, 880], "n_segment": [240, 719], "welch_unagg": 240, "topomap_kw": 240, "fmin_fmax": 240, "timefreq": [240, 700], "20_sensors_time_frequ": [240, 243], "fpv": 241, "steadi": 241, "assr": 241, "norcia": 241, "picton": 241, "wet": [241, 856], "dominik": [241, 880], "welk": [241, 880], "evgenii": [241, 880], "kalenkovich": [241, 880], "ttest_rel": 241, "bids_fnam": 241, "12hz": 241, "15hz": 241, "decai": 241, "stabil": [241, 445, 558, 569, 880], "bach": 241, "meigen": 241, "boxcar": [241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 450, 478, 479, 859, 880], "n_overlap": [241, 264, 265, 266, 267, 478, 479, 702, 704, 719, 802], "snr_spectrum": 241, "noise_n_neighbor_freq": 241, "noise_skip_neighbor_freq": 241, "n_trial": [241, 426], "n_frequency_bin": 241, "increment": [241, 475, 558], "ON": 241, "averaging_kernel": 241, "mean_nois": 241, "apply_along_axi": 241, "psd_": 241, "edge_width": 241, "pad_width": 241, "constant_valu": 241, "drastic": [241, 276, 880], "reappear": 241, "grand": [241, 467, 862, 880], "floor": [241, 423, 586, 728, 731], "ceil": [241, 723], "psds_plot": 241, "snr_mean": 241, "snr_std": 241, "stim_freq": 241, "i_bin_12hz": 241, "1st": [241, 642], "i_bin_24hz": 241, "i_bin_36hz": 241, "i_bin_15hz": 241, "i_bin_30hz": 241, "i_bin_45hz": 241, "i_trial_12hz": 241, "i_trial_15hz": 241, "roi_vi": 241, "o9": 241, "o10": 241, "picks_roi_vi": 241, "hotel": 241, "snrs_target": 241, "69365541718619": 241, "wait": [241, 259, 264, 839, 847, 880], "snrs_12hz": 241, "snrs_12hz_chaverag": 241, "tstat_roi_vs_scalp": 241, "985902": 241, "693655": 241, "000067": 241, "Such": [241, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 478, 479, 641, 700, 703, 835, 861, 862], "somewher": [241, 478, 479, 801, 844, 863], "unintend": 241, "preregist": 241, "peopl": [241, 839, 850, 861, 880], "detour": 241, "snrs_roi": 241, "freq_plot": 241, "color_plot": 241, "darkblu": [241, 478, 479, 801], "darkgreen": 241, "mediumblu": 241, "seagreen": 241, "xpos_plot": 241, "stim_12hz_tmp": 241, "stim_15hz_tmp": 241, "snr_tmp": 241, "yerr": 241, "stim_12hz_snrs_": 241, "ihz": 241, "stim_15hz_snrs_": 241, "strike": 241, "tstat_12hz_trial_stim": 241, "stim_12hz_snrs_12hz": 241, "stim_12hz_snrs_15hz": 241, "tstat_12hz_trial_1st_harmon": 241, "stim_12hz_snrs_24hz": 241, "stim_12hz_snrs_30hz": 241, "tstat_12hz_trial_2nd_harmon": 241, "stim_12hz_snrs_36hz": 241, "stim_12hz_snrs_45hz": 241, "tstat_15hz_trial_stim": 241, "stim_15hz_snrs_12hz": 241, "stim_15hz_snrs_15hz": 241, "tstat_15hz_trial_1st_harmon": 241, "stim_15hz_snrs_24hz": 241, "stim_15hz_snrs_30hz": 241, "tstat_15hz_trial_2nd_harmon": 241, "stim_15hz_snrs_36hz": 241, "stim_15hz_snrs_45hz": 241, "000037": 241, "000014": 241, "000297": 241, "000024": 241, "006525": 241, "tour": [241, 880], "overli": 241, "stim_bandwidth": 241, "window_length": 241, "window_snr": 241, "i_win": 241, "this_spectrum": 241, "windowed_psd": 241, "windowed_freq": 241, "stimfreq": 241, "bin_width": 241, "skip_neighbor_freq": 241, "n_neighbor_freq": 241, "windowed_snr": 241, "boxplot": 241, "stochast": [241, 244, 558], "window_start": 241, "greyscal": 241, "optimist": 241, "serious": [241, 862], "50_ssvep": [241, 243], "auto_tutorials_tim": 243, "alphabet": [244, 839, 880], "fiorenzo": [244, 558], "artoni": [244, 558], "magazin": [244, 410], "962275": 244, "stephan": [244, 410], "bonnet": [244, 410], "marco": [244, 410], "congedo": [244, 410], "jutten": [244, 410], "riemannian": [244, 410], "multimedia": [244, 410], "mmsp": [244, 410], "5662067": [244, 410], "barber": [244, 354], "51814": [244, 354], "www": [244, 354, 449, 486, 572, 839, 859], "staff": [244, 354, 845], "brml": [244, 354], "becker": [244, 660], "albera": [244, 660], "comon": [244, 660], "gribonv": [244, 660], "fleureau": [244, 660], "guillotel": [244, 660], "merlet": [244, 660], "sissi": [244, 660], "august": [244, 660], "anthoni": [244, 558], "terrenc": [244, 558], "sejnowski": [244, 558, 586], "deconvolut": [244, 558, 586], "1129": [244, 558, 586], "1159": [244, 558, 586], "1995": [244, 402, 558, 586, 862], "neco": [244, 558], "anna": [244, 653, 880], "rita": [244, 653], "bentivoglio": [244, 653], "bressman": [244, 653], "cassetta": [244, 653], "donatella": [244, 653], "carretta": [244, 653], "pietro": [244, 653], "tonali": [244, 653], "alberto": [244, 653], "albanes": [244, 653], "disord": [244, 653], "1028": [244, 653], "870120629": [244, 653], "berg": [244, 862], "scherg": [244, 862], "1994": [244, 525, 862], "90113": [244, 862], "quentin": [244, 880], "anderson": [244, 880], "arindam": 244, "banerje": 244, "kenji": 244, "fukumizu": 244, "24th": 244, "1288": 244, "pmlr": 244, "apr": 244, "mlr": 244, "v130": 244, "bertrand21a": 244, "ryota": [244, 410], "tomioka": [244, 410], "lemm": [244, 410], "motoaki": [244, 410], "kawanab": [244, 410], "msp": [244, 410], "4408441": [244, 410], "fred": 244, "bookstein": 244, "thin": 244, "plate": 244, "567": 244, "24792": 244, "oleg": 244, "burdakov": 244, "bori": 244, "merkulov": 244, "lith": 244, "\u00f6": 244, "ping": 244, "yilun": [244, 354], "chen": [244, 354], "ami": [244, 354], "wiesel": [244, 354], "yonina": [244, 354], "eldar": [244, 354], "alfr": [244, 354, 855], "hero": [244, 354], "shrinkag": [244, 354, 410, 417, 418, 559, 880], "mmse": [244, 354], "5016": [244, 354], "5029": [244, 354], "2053029": [244, 354], "contributor": [244, 843, 846, 858, 859, 861, 868, 880], "readthedoc": 244, "ronald": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "crochier": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "lawrenc": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 566, 700, 703], "rabin": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "multir": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "englewood": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "cliff": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "nj": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "605162": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "adrian": [244, 270, 275], "guggisberg": 244, "erik": [244, 880], "findlai": 244, "ryan": [244, 880], "canolti": 244, "mitchel": 244, "berger": 244, "barbaro": 244, "heidi": 244, "kirsch": 244, "1686": 244, "1700": 244, "sereno": [244, 862], "1006": [244, 684, 862], "nimg": [244, 684, 862], "0395": [244, 862], "arthur": [244, 525, 729, 732], "liu": [244, 525], "buckner": [244, 525], "lewin": [244, 525], "s0896": [244, 525], "6273": [244, 525], "81138": [244, 525], "jocn": 244, "darva": 244, "ermer": 244, "20171": 244, "salat": [244, 862], "andr\u00e9": [244, 862], "kouw": [244, 862], "niko": [244, 862], "makri": [244, 862], "florent": [244, 862], "s\u00e9gonn": [244, 862], "quinn": [244, 862, 880], "s69": [244, 862], "s84": [244, 862], "0396": 244, "tootel": 244, "intersubject": 244, "sici": 244, "0193": 244, "hbm10": 244, "genoves": [244, 684], "lazar": [244, 410, 684], "1037": [244, 684], "supplementari": [244, 387], "neuroanatom": [244, 387], "esm": [244, 387], "art": [244, 387, 868], "3a10": [244, 387], "2fnature18933": [244, 387], "mediaobject": [244, 387], "41586_2016_bfnature18933_moesm330_esm": [244, 387], "s\u00f3nia": [244, 855], "gon\u00e7alv": [244, 855], "casper": [244, 855], "munck": [244, 855], "jeroen": [244, 855, 880], "verbunt": [244, 855], "fetsj": [244, 855], "bijma": [244, 855], "rob": [244, 855, 880], "heethaar": [244, 855], "vivo": [244, 855], "resist": [244, 855], "eit": [244, 855], "812164": [244, 855], "teon": [244, 854, 880], "lauri": [244, 854], "parkkonen": [244, 854], "\u00e4": [244, 418, 854], "inen": [244, 854], "fnin": [244, 854], "00267": [244, 854], "greischar": [244, 566], "cori": [244, 566], "burghi": [244, 566], "carien": [244, 566], "reekum": [244, 566], "daren": [244, 566], "jackson": [244, 566], "diego": [244, 566], "pizzag": [244, 566], "corrina": [244, 566], "mueller": [244, 566], "davidson": [244, 566], "electroencephalograph": [244, 566], "hne": [244, 418], "073": [244, 418], "gari": [244, 682], "heiman": [244, 682], "houghton": [244, 682], "mifflin": [244, 682], "boston": [244, 255, 682, 867], "17028": [244, 682], "joerg": [244, 297], "hipp": [244, 297], "hawellek": 244, "maurizio": 244, "corbetta": 244, "marku": [244, 297], "siegel": [244, 297], "engel": [244, 297], "spontan": [244, 855], "3101": 244, "percept": [244, 297, 835, 856, 880], "aapo": [244, 558], "hyv\u00e4rinen": [244, 558], "761722": [244, 558], "toga": 244, "mazziotta": 244, "academ": 244, "san": 244, "b978": 244, "012693019": 244, "50012": 244, "bf02512476": [244, 525], "tkk": 244, "a559": 244, "helsinki": 244, "16463": 244, "kevin": [244, 729, 732], "jone": [244, 729, 732], "bernic": [244, 729, 732], "porjesz": [244, 729, 732], "chorlian": [244, 729, 732], "madhavi": [244, 729, 732], "rangaswami": [244, 729, 732], "chella": [244, 729, 732], "kamarajan": [244, 729, 732], "ajayan": [244, 729, 732], "padmanabhapillai": [244, 729, 732], "stimu": [244, 729, 732], "henri": [244, 729, 732], "begleit": [244, 729, 732], "deficit": [244, 729, 732], "diagnos": [244, 729, 732, 880], "alcohol": [244, 729, 732], "2128": [244, 729, 732], "jorg": 244, "jovicich": 244, "silvest": 244, "czanner": 244, "elizabeth": 244, "halei": 244, "andr": [244, 880], "kennedi": 244, "franz": 244, "schmitt": 244, "gregori": 244, "brown": [244, 540, 660], "macfal": 244, "antti": [244, 880], "ahonen": 244, "lain": 244, "claudia": [244, 862], "tesch": [244, 862], "3315": 244, "3320": 244, "281163": 244, "zhou": [244, 410], "1990": [244, 410], "bf01129656": [244, 410], "philipp": 244, "lachaux": 244, "eugenio": 244, "rodriguez": [244, 880], "martineri": 244, "francisco": 244, "varela": 244, "synchroni": 244, "hbm4": 244, "attent": [244, 270, 275, 865], "ledoit": [244, 354], "wolf": [244, 354], "s0047": [244, 354], "259x": [244, 354], "00096": [244, 354], "te": [244, 558, 880], "girolami": [244, 558, 586], "subgaussian": [244, 558, 586, 880], "supergaussian": [244, 558, 586], "089976699300016719": [244, 558], "seok": [244, 855], "lew": [244, 855], "carsten": [244, 855], "wolter": [244, 855], "anwand": [244, 855], "macleod": [244, 855], "compart": [244, 256, 522, 835, 855, 865], "2862": [244, 855], "2878": [244, 855], "20714": [244, 855], "witzel": [244, 536, 657, 662], "8945": 244, "8950": 244, "10024": [244, 880], "lowri": [244, 682], "vassarstat": [244, 682], "bernard": [244, 660], "giusiano": [244, 660], "roehri": [244, 660], "b\u00e9nar": [244, 660], "kathryn": [244, 387], "mill": [244, 387], "6084": [244, 387], "m9": [244, 387], "figshar": [244, 387], "3498446": [244, 387], "molin": [244, 540, 660], "quantif": [244, 431, 540, 660, 846], "paul": [244, 862, 880], "748978": [244, 862], "ali": [244, 729, 732], "moukadem": [244, 729, 732], "zi": [244, 729, 732], "bouguila": [244, 729, 732], "djaffar": [244, 729, 732], "ould": [244, 729, 732], "abdeslam": [244, 729, 732], "alain": [244, 729, 732], "dieterlen": [244, 729, 732], "lisbon": [244, 729, 732], "6952743": [244, 729, 732], "mourtazaev": [244, 402], "1093": [244, 402], "suresh": [244, 563], "muthukumaraswami": [244, 563], "00138": [244, 563], "ndiay": 244, "fercoq": 244, "salmon": 244, "sugiyama": 244, "luxburg": 244, "guyon": 244, "garnett": 244, "curran": 244, "inc": [244, 839, 844], "nip": [244, 473], "cc": [244, 473, 861], "6405": 244, "holm": [244, 689], "primer": [244, 689], "ou": 244, "bai": 244, "wheaton": 244, "sherri": 244, "vorbach": 244, "hallett": 244, "2292": 244, "2307": 244, "zieh": 244, "aloi": 244, "schl\u00f6gl": 244, "kr\u00e4mer": 244, "brismar": 244, "robustli": 244, "physrevlett": 244, "234101": 244, "hilla": [244, 392], "paananen": [244, 392], "jyrki": [244, 392], "m\u00e4kel\u00e4": [244, 392], "5281": [244, 392], "zenodo": [244, 392, 854], "889234": [244, 392], "reilli": [244, 388, 856, 880], "mayada": [244, 388, 856], "elsabbagh": [244, 388, 856], "infant": [244, 388, 880], "117682": [244, 388, 856], "thom": [244, 855], "oostendorp": [244, 855], "delbek": [244, 855], "dick": [244, 855], "stegeman": [244, 855], "vitro": [244, 855], "880100": [244, 855], "oppenheim": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "schafer": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "buck": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "prentic": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "hall": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "saddl": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "river": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "754920": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "roberto": [244, 525, 862], "pascual": [244, 525, 862], "marqui": [244, 525, 862], "martha": [244, 525, 862], "koukkou": [244, 525, 862], "kieko": [244, 525, 862], "kochi": [244, 525, 862], "bernd": [244, 525, 862], "saletu": [244, 525, 862], "hideaki": [244, 525, 862], "tanaka": [244, 525, 862], "koichi": [244, 525, 862], "hirata": [244, 525, 862], "lesli": [244, 525, 862], "prichep": [244, 525, 862], "rolando": [244, 525, 862], "biscai": [244, 525, 862], "lirio": [244, 525, 862], "toshihiko": [244, 525, 862], "kinoshita": [244, 525, 862], "royal": [244, 354, 525, 862], "1952": [244, 525, 862], "3784": [244, 525, 862], "rsta": [244, 525, 862], "0081": [244, 525, 862], "donald": 244, "perciv": 244, "walden": 244, "35532": 244, "cbo9780511622762": 244, "dinh": [244, 880], "tuan": 244, "pham": 244, "hermitian": 244, "1136": 244, "s089547980035689x": 244, "luca": [244, 592], "pollonini": [244, 592], "cristen": [244, 592], "homer": [244, 592], "abaya": [244, 592], "heather": [244, 592], "bortfeld": [244, 592], "beauchamp": [244, 271, 275, 279, 592, 806], "oghalai": [244, 592], "cochlear": [244, 592], "ernesto": 244, "pereda": 244, "ricardo": 244, "bru": 244, "\u00f1": 244, "maest": 244, "\u00fa": 244, "dog": 244, "056011": 244, "2552": 244, "aacfe4": 244, "sanchez": [244, 388], "meek": [244, 388], "wanz": [244, 388], "xie": [244, 388], "1254": [244, 388], "1259": [244, 388], "hat": [244, 533, 569, 660, 693, 694, 862, 880], "noam": [244, 573], "pele": [244, 573], "00694": [244, 573], "abraham": [244, 264, 265, 266, 267, 478, 479], "savitzki": [244, 264, 265, 266, 267, 478, 479], "marcel": [244, 264, 265, 266, 267, 478, 479], "golai": [244, 264, 265, 266, 267, 478, 479, 880], "chemistri": [244, 264, 265, 266, 267, 478, 479], "1627": [244, 264, 265, 266, 267, 478, 479], "1639": [244, 264, 265, 266, 267, 478, 479], "1964": [244, 264, 265, 266, 267, 478, 479], "ac60214a047": [244, 264, 265, 266, 267, 478, 479], "nathaniel": [244, 686], "marta": [244, 686], "12320": [244, 686], "corn": 244, "stam": 244, "daffertshof": 244, "diminish": 244, "1178": 244, "20346": 244, "luigi": [244, 729, 732], "rodino": [244, 729, 732], "bert": [244, 729, 732], "schulz": [244, 729, 732, 880], "wong": [244, 729, 732, 880], "pseudo": [244, 297, 298, 314, 729, 732], "american": [244, 729, 732], "1090": [244, 729, 732], "fic": [244, 729, 732], "2218": [244, 475], "2228": [244, 475], "tmi": [244, 475], "2553445": [244, 475], "evelina": 244, "busa": 244, "glessner": 244, "hybrid": 244, "1060": 244, "1075": 244, "catherin": [244, 716, 726, 727, 730], "tallon": [244, 716, 726, 727, 730], "baudri": [244, 716, 726, 727, 730], "claud": [244, 716, 726, 727, 730], "delpuech": [244, 716, 726, 727, 730], "jneurosci": [244, 716, 726, 727, 729, 730, 732], "00722": [244, 716, 726, 727, 730], "minna": [244, 862], "huotilainen": [244, 862], "oili": [244, 862], "salonen": [244, 862], "00064": [244, 862], "bishop": [244, 354], "1467": [244, 354], "9868": [244, 354], "00196": [244, 354], "vinck": 244, "wingerden": 244, "franscesco": 244, "battaglia": 244, "cyriel": 244, "pennartz": 244, "1548": 244, "womelsdorf": 244, "pascal": 244, "fri": 244, "rhythmic": 244, "wehner": [244, 431], "modi": [244, 431], "children": [244, 255, 431, 865, 867], "wheat": [244, 729, 732], "pier": [244, 729, 732], "cornelissen": [244, 729, 732], "frost": [244, 729, 732], "hansen": [244, 729, 732], "phonologi": [244, 729, 732], "5233": [244, 729, 732], "4448": [244, 729, 732], "whitham": [244, 558], "sean": [244, 558], "fitzgibbon": [244, 558], "clark": [244, 558, 880], "loveless": [244, 558], "marita": [244, 558], "broberg": [244, 558], "angu": [244, 558], "wallac": [244, 558], "lilli": [244, 558], "hardi": [244, 558], "rik": [244, 558], "fronsko": [244, 558], "alyson": [244, 558], "pulbrook": [244, 558], "paralysi": [244, 558], "1877": [244, 558], "1888": [244, 558], "rei": [244, 473], "ram\u00edrez": [244, 473], "jason": [244, 473], "palmer": [244, 473], "bhaskar": [244, 473], "rao": [244, 473], "neuroelectromagnet": [244, 473], "sch\u00f6lkopf": [244, 473], "platt": [244, 473], "hoffman": [244, 473], "1505": [244, 473], "3089": [244, 473], "jun": [244, 660], "juliu": [244, 660, 880], "dewald": [244, 660], "april": [244, 660], "zhi": [244, 862, 880], "multilay": [244, 862], "moritz": [244, 410, 880], "wentrup": [244, 410], "buss": [244, 410], "921154": [244, 410], "jair": [244, 558, 880], "montoya": [244, 558, 880], "mart\u00ednez": [244, 558], "petr": [244, 558], "tichavsk\u00fd": [244, 558], "massoud": [244, 558], "babai": [244, 558], "zadeh": [244, 558], "nad\u00e8g": [244, 558], "thirion": [244, 558], "moreau": [244, 558], "latent": [244, 558, 795], "10169": [244, 558], "lectur": [244, 558, 864], "cham": [244, 558], "53547": [244, 558], "0_27": [244, 558], "pharmacologi": [244, 525, 862], "pubm": [244, 525, 862], "ncbi": [244, 525, 862], "nlm": [244, 525, 862], "nih": [244, 525, 862], "gov": [244, 525, 862], "12575463": [244, 525, 862], "encyclopedia": 244, "php": 244, "international_system_of_unit": 244, "oldid": 244, "982683558": 244, "googl": [245, 255, 813, 868, 880], "scholar": 245, "dec": [245, 746, 838], "1370": 245, "1640": 245, "health": 255, "r01": 255, "eb009048": 255, "eb006385": 255, "hd040712": 255, "ns044319": 255, "ns037462": 255, "ns104585": 255, "p41": 255, "eb015896": 255, "rr014075": 255, "foundat": [255, 861], "0958669": 255, "1042134": 255, "european": [255, 862], "council": 255, "ystg": 255, "263584": 255, "676943": 255, "depart": 255, "fg02": 255, "99er62764": 255, "agenc": 255, "national": 255, "la": [255, 856, 867, 880], "recherch": [255, 867], "neuc": 255, "0002": 255, "idex": 255, "pari": [255, 880], "saclai": 255, "0003": 255, "summer": [255, 868, 880], "year": [255, 269, 402, 854, 861, 868], "amazon": 255, "grant": [255, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 473, 475, 476, 536, 788, 839, 861, 880], "zuckerberg": 255, "eoss2": [255, 868], "eoss4": 255, "employe": [255, 861], "duti": [255, 861], "aalto": [255, 856, 867], "yliopiston": [255, 867], "perustieteiden": [255, 867], "korkeakoulu": [255, 867], "athinoula": [255, 856, 867], "martino": [255, 856, 867], "hospit": [255, 856, 867], "philadelphia": [255, 867], "donder": [255, 867], "behaviour": [255, 258, 506, 508, 867], "radboud": [255, 867], "school": [255, 867], "informatiqu": [255, 867], "automatiqu": [255, 867], "franzen": [255, 867], "universit\u00e4t": [255, 867], "graz": [255, 867], "macquari": [255, 856, 867], "massachusett": [255, 867], "planck": [255, 867], "f\u00fcr": [255, 867], "bildungsforschung": [255, 867], "uniwersytet": [255, 867], "humanistycznospo\u0142eczni": [255, 867], "washington": [255, 867], "aarhu": [255, 867], "universitet": [255, 867], "commissariat": [255, 867], "\u00e0": [255, 867], "\u00e9nergi": [255, 867], "atomiqu": [255, 867], "aux": [255, 867], "forschungszentrum": [255, 867], "j\u00fclich": [255, 867], "du": [255, 867], "cerveau": [255, 867], "moell": [255, 867], "\u00e9pini\u00e8r": [255, 867], "sant\u00e9": [255, 867], "m\u00e9dical": [255, 867], "technisch": [255, 867], "t\u00e9l\u00e9com": [255, 867], "exit": [256, 270, 469, 547, 839], "outfil": 256, "anon": 256, "keep_hi": [256, 264, 265, 266, 267, 478, 479, 480, 880], "n_dai": 256, "daysback": [256, 264, 265, 266, 267, 478, 479, 480], "anonymize_info": [256, 264, 265, 266, 267, 478, 479, 870, 880], "resav": 256, "projoff": [256, 880], "navigaton": 256, "show_opt": [256, 478, 479, 801], "dialog": [256, 264, 265, 266, 267, 478, 479, 801, 804, 845, 880], "allowmaxshield": 256, "filtord": [256, 478, 479, 801, 880], "iir": [256, 264, 265, 266, 267, 412, 421, 445, 446, 448, 449, 478, 479, 570, 571, 592, 654, 664, 713, 789, 801, 869, 880], "clamp": [256, 478, 479, 748, 801], "filterchpi": [256, 880], "head_shap": 256, "out_fnam": 256, "rotation_x": [256, 489], "compensatori": 256, "deg": 256, "ecg_ch": [256, 489], "eog_ch": [256, 489, 880], "e31": [256, 489], "e63": [256, 489], "my_raw": 256, "quiet": [256, 264, 265, 703], "mne_process_raw": [256, 865], "in_raw": 256, "clean_raw": 256, "file_a": 256, "file_b": 256, "test_raw_sss": 256, "filters": 256, "tap": [256, 570, 571, 578, 579, 856], "rej": 256, "rej_grad": 256, "rej_mag": 256, "rej_eeg": 256, "rej_eog": 256, "bad_fnam": 256, "raw_event_fnam": 256, "tstart": [256, 271, 272, 275, 278, 279, 280, 570, 571, 578, 579, 581, 880], "qrsthr": 256, "qrs_threshold": [256, 570, 578, 581], "eog_l_freq": [256, 571], "eog_h_freq": [256, 571], "head_opac": [256, 469], "trackbal": [256, 266, 267, 469, 748, 764, 783], "terrain": [256, 266, 267, 469, 748, 764, 783, 880], "flash30": [256, 303, 862, 880], "noflash30": [256, 862], "flash5": [256, 303, 307, 862, 880], "multiecho": [256, 303, 307], "echo": [256, 303, 838, 844, 845, 862], "noconvert": 256, "deprec": [256, 338, 800, 870, 880], "unwarp": [256, 303, 862], "grad_unwarp": [256, 303, 862], "symlink": [256, 307, 309, 880], "flash_path": 256, "parameter_map": [256, 307, 862], "mef05": 256, "mef30": 256, "mef05_": [256, 303, 880], "mef30_": [256, 303, 880], "spin": [256, 307], "termin": [256, 837, 838, 839, 842, 843, 845, 850, 859, 870, 880], "kt2fiff": 256, "mkheadsurf": [256, 308], "topolog": [256, 308, 365, 409, 429, 460, 608, 637, 639, 828, 855, 880], "_sss": 256, "origin_out": 256, "autobad": 256, "maxst": 256, "buflen": 256, "st_buflen": 256, "st_corr": 256, "mv_tran": 256, "in_fnam": 256, "movecomp": 256, "mv_hp": 256, "ascii": [256, 494, 606, 612, 634, 880], "hpistep": 256, "mv_hpistep": 256, "hpisubt": 256, "mv_hpisubt": 256, "nohpicon": 256, "linefreq": 256, "nooverwrit": 256, "mx_arg": 256, "sof": 256, "bmin": 256, "bash": [256, 838, 839, 844, 845, 850], "TO": 256, "1280": [256, 409, 515], "brainc": 256, "skullc": 256, "scalpc": 256, "homog": [256, 515, 855], "7mm": 256, "joblib": [256, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 413, 420, 423, 426, 427, 453, 466, 468, 478, 479, 517, 520, 521, 531, 532, 541, 542, 563, 570, 571, 643, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 780, 783, 802, 868, 880], "cp": [256, 845, 862, 880], "unicod": [256, 699, 880], "mri_watersh": [256, 309, 859, 862], "gcaatla": [256, 309, 859], "brain_atla": [256, 309], "preflood": [256, 309, 859], "brainmask": [256, 309, 859, 880], "fname2": 256, "parser": [257, 439, 880], "reaverag": 257, "category_nam": 257, "acq_dict": 257, "subav": 257, "subaverag": [257, 865], "__len__": [257, 258, 260, 261, 262, 264, 265, 269, 270, 273, 274, 288, 302, 478, 479, 524, 701, 702, 703, 735], "n_cat": 257, "uint_cast": [257, 451], "delayed_lookup": 257, "acqp": 257, "mne_stim_channel_2": [257, 451, 452], "uint16": [257, 451], "sti014": [257, 451, 880], "sti016": [257, 451], "32768": [257, 409, 451], "mne_fix_stim14": [257, 451], "slight": [257, 880], "asynchroni": 257, "conds_data": 257, "n_epochs_out": 257, "n_annot": 258, "iso8601": 258, "delimit": 258, "bad_flux": 258, "bad_nois": 258, "meg0111": [258, 259, 264, 265, 266, 267, 269, 310, 327, 329, 359, 369, 412, 426, 431, 478, 479, 557, 558, 560, 573, 574, 575, 580, 584, 594, 596, 603, 635, 668, 686, 695, 700, 702, 703, 704, 708, 709, 710, 711, 713, 731, 772, 778, 779, 782, 784, 785, 792, 799, 802], "meg2563": 258, "meg1443": 258, "n_blink": 258, "yy": [258, 490], "______________": 258, "_________": 258, "anot": 258, "___________________": 258, "o_________": 258, "________________________": 258, "o______________": 258, "crash": [258, 880], "o________________________": 258, "bad_acq_skip": [258, 264, 265, 266, 267, 478, 479, 498, 577, 588, 880], "__add__": [258, 260, 261, 270, 271, 272, 275, 277, 278, 279, 280, 312, 700], "concatenc": 258, "__iter__": [258, 261, 264, 265, 269, 273, 288, 302, 524, 650, 702, 703, 735], "array_lik": [258, 259, 261, 262, 264, 265, 266, 267, 269, 273, 274, 283, 310, 312, 327, 329, 359, 368, 369, 410, 412, 417, 420, 423, 425, 426, 427, 431, 437, 476, 478, 479, 489, 502, 517, 522, 557, 558, 559, 560, 563, 567, 568, 569, 572, 573, 574, 575, 577, 580, 584, 588, 594, 596, 602, 603, 638, 639, 654, 668, 678, 679, 682, 684, 685, 686, 694, 695, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 713, 716, 726, 730, 731, 748, 753, 764, 765, 772, 778, 779, 780, 782, 784, 785, 787, 788, 789, 790, 791, 792, 793, 794, 796, 798, 799, 800, 802, 803, 804, 808, 810], "use_orig_tim": [258, 880], "676071": 258, "shortstimulu": 258, "longstimulu": 258, "tabular": [258, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 702, 703, 704], "preload_at_end": 259, "event_rep": [259, 264, 880], "raw_sfreq": [259, 265], "abstract": [259, 868], "meg2623": [259, 264, 265, 266, 267, 269, 310, 327, 329, 359, 369, 412, 426, 431, 478, 479, 557, 558, 560, 573, 574, 575, 580, 584, 594, 596, 603, 668, 686, 695, 700, 702, 703, 704, 708, 709, 710, 711, 713, 731, 772, 778, 779, 782, 784, 785, 792, 799, 802], "ptp": [259, 264, 265, 558, 560, 574], "40e": [259, 264, 265, 359, 558, 574, 575, 686], "zeroth": [259, 264, 880], "unproject": [259, 264, 518, 611], "postpon": [259, 264, 518, 611], "silent": [259, 264, 402, 589, 857, 880], "irrespect": [259, 264, 365, 429, 460, 608, 637, 639, 828, 862], "coincid": [259, 264], "my_epoch": 259, "compensation_grad": [259, 264, 265, 266, 267, 269, 477, 478, 479, 558, 700, 702, 703, 704], "__sub__": [260, 270, 271, 272, 275, 278, 279, 280, 700], "nfree": [261, 262, 865, 880], "eig": [261, 865], "eigvec": [261, 865], "eigenvector": [261, 862, 865], "__contains__": [261, 264, 265, 266, 267, 269, 273, 288, 302, 478, 479, 524, 558, 700, 702, 703, 704, 735], "as_diag": 261, "diagnois": 261, "fromkei": [261, 269, 273, 288, 302, 524, 735], "fig_svd": [261, 773], "1e13": [261, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 354, 358, 359, 410, 417, 419, 478, 479, 779, 782, 784, 786, 787, 809], "1e15": [261, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 354, 358, 359, 410, 417, 419, 478, 479, 779, 782, 784, 786, 787, 809], "pluss": [261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810], "markeredgecolor": [261, 264, 265, 266, 267, 410, 417, 478, 479, 557, 700, 702, 704, 765, 780, 787, 803, 808, 810], "mask_po": [261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810], "cloughtocher2dinterpol": [261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810], "linearndinterpol": [261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810], "encompass": [261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810], "polygon": [261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 814, 880], "hull": [261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 572, 700, 702, 704, 765, 780, 787, 791, 800, 803, 808, 810, 880], "doc": [261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 646, 700, 702, 704, 716, 726, 765, 780, 787, 791, 800, 803, 808, 810, 839, 859, 868, 880], "rightmost": [261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 780, 787, 791, 800, 803, 808], "mini": [261, 264, 265, 266, 267, 273, 410, 417, 478, 479, 557, 558, 700, 702, 704, 780, 787, 791, 800, 803, 808], "unrepresent": [261, 269, 273, 288, 302, 524, 735], "popitem": [261, 269, 273, 288, 302, 524, 735], "lifo": [261, 269, 273, 288, 302, 524, 735], "setdefault": [261, 269, 273, 288, 302, 524, 735], "khi2": 262, "mne_dipole_fit": [262, 880], "longitudin": 262, "qlong": 262, "qtran": 262, "\u03c7": 262, "dipolefix": [262, 453, 610, 870], "plot_amplitud": 262, "show_al": [262, 776], "highlight_color": [262, 776], "head_sourc": [262, 517, 776, 880], "glyph": [262, 272, 278, 280, 748, 764, 776, 807, 811, 813, 880], "cube": [262, 776, 880], "mri_rot": [262, 776], "figure3d": [262, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 757, 764, 776, 783, 806, 807, 811, 818, 839, 857, 870], "600x600": [262, 764, 776], "get_head_surf": [262, 517, 776, 870, 880], "bdip": [262, 610, 880], "use_round": [262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 439, 478, 479, 700, 703], "pos_mni": 262, "n_po": [262, 342, 344, 471, 472, 790], "subdirectori": [262, 462, 748], "aspect_kind": 263, "combine_event_id": [264, 870], "id_numb": 264, "event_id_1": 264, "event_id_2": 264, "new_id_numb": 264, "lost": [264, 265, 266, 267, 440, 441, 442, 443, 478, 479, 837], "no_data": [264, 703], "equalized_count": [264, 703], "membership": [264, 265, 266, 267, 478, 479, 558, 700, 702, 703, 704, 880], "audio_left": [264, 265, 703], "name_1": [264, 265, 703], "name_2": [264, 265, 703], "likewis": [264, 265, 703, 861, 862], "eval": [264, 265, 703], "col_a": [264, 265, 703], "col_b": [264, 265, 703], "add_annotations_to_metadata": [264, 265], "annot_onset": [264, 265], "annot_dur": [264, 265], "annot_descript": [264, 265], "add_list": [264, 265, 266, 267, 478, 479, 700, 702, 703, 704], "force_update_info": [264, 265, 266, 267, 478, 479, 700, 702, 703, 704], "overwritten": [264, 265, 266, 267, 386, 478, 479, 480, 572, 589, 700, 702, 703, 704, 880], "memmap": [264, 265, 266, 267, 478, 479, 643, 700, 702, 703, 704, 880], "resiz": [264, 265, 266, 267, 478, 479, 700, 702, 703, 704, 787, 880], "januari": [264, 265, 266, 267, 478, 479, 480, 865], "1\u02e2\u1d57": [264, 265, 266, 267, 478, 479, 480], "his_id": [264, 265, 266, 267, 269, 478, 479, 480], "birthdai": [264, 265, 266, 267, 269, 478, 479, 480, 880], "revert": [264, 265, 620, 827, 880], "channel_wis": [264, 265, 266, 267, 478, 479, 880], "parallel_backend": [264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 413, 420, 423, 426, 427, 453, 466, 468, 478, 479, 517, 520, 521, 531, 532, 541, 542, 563, 570, 571, 648, 651, 652, 653, 665, 687, 688, 689, 690, 691, 702, 704, 705, 706, 707, 708, 709, 710, 718, 719, 727, 728, 729, 730, 731, 780, 783, 802, 880], "workload": [264, 265, 266, 267, 478, 479], "x_a": [264, 265, 266, 267, 478, 479], "2u": [264, 265, 266, 267, 478, 479], "enevlop": [264, 265, 266, 267, 478, 479], "hint": [264, 265, 266, 267, 478, 479, 779], "projs_a": [264, 265, 266, 267, 478, 479], "proj_a": [264, 265, 266, 267, 478, 479], "projs_b": [264, 265, 266, 267, 478, 479], "proj_b": [264, 265, 266, 267, 478, 479], "_v": [264, 265, 266, 267, 880], "emphas": [264, 265, 266, 267], "legendr": [264, 265, 266, 267, 478, 479, 517, 567, 862], "by_event_typ": [264, 265, 880], "trim_mean": [264, 265], "low_bia": [264, 265, 266, 267, 415, 478, 479, 531, 532, 702, 704, 707, 710, 712, 718, 780], "undrop": [264, 265], "timeout": [264, 265], "forev": [264, 265, 880], "lenient": [264, 265], "drop_log_stat": [264, 265], "perc": [264, 265], "mintim": [264, 265, 433], "seek": [264, 265, 418, 433], "nonspati": [264, 265], "fmt": [264, 265, 266, 267, 440, 441, 443, 478, 479, 862, 880], "eeglabio": [264, 265, 440, 443, 478, 479, 880], "cart_to_eeglab": [264, 265, 440, 443, 478, 479], "5500m": [264, 265, 266, 267, 412, 421, 446, 448, 449, 478, 479], "cuda": [264, 265, 266, 267, 412, 416, 421, 422, 448, 449, 450, 478, 479, 843, 849, 859, 870, 880], "reflect_limit": [264, 265, 266, 267, 448, 449, 450, 478, 479], "savgol_filt": [264, 265, 266, 267, 478, 479], "get_annotations_per_epoch": [264, 265], "epoch_annot": [264, 265], "only_data_ch": [264, 265, 266, 267, 269, 478, 479, 558, 700, 702, 703, 704], "alia": [264, 265, 266, 267, 277, 478, 479, 595, 746, 764, 801, 839, 880], "unitless": [264, 265, 266, 267, 478, 479, 862], "return_event_id": [264, 265, 615, 702, 703, 880], "respiratori": [264, 265, 266, 267, 478, 479, 555, 700, 702, 703, 704, 880], "excit": [264, 265, 266, 267, 269, 478, 479, 555, 700, 702, 703, 704, 862], "galvan": [264, 265, 266, 267, 478, 479, 555, 700, 702, 703, 704, 862, 880], "epoch_color": [264, 265, 778], "use_opengl": [264, 265, 478, 479, 558, 778, 795, 801, 880], "theme": [264, 265, 478, 479, 558, 748, 778, 795, 801, 880], "overview_mod": [264, 265, 478, 479, 558, 778, 795, 801, 880], "5th": [264, 265, 266, 267, 274, 478, 479, 778, 801], "1e2": [264, 265, 274, 478, 479, 778, 801], "20\u00b5v": [264, 265, 274, 478, 479, 778, 801], "ital": [264, 265, 266, 267, 478, 479, 778, 782, 786, 801, 865], "zen": [264, 265, 478, 479, 558, 778, 795, 801, 880], "selector": [264, 265, 266, 267, 478, 479, 778, 801, 804, 865, 880], "processor": [264, 265, 385, 478, 479, 558, 778, 795, 801], "pyopengl": [264, 265, 478, 479, 558, 778, 795, 801], "stylesheet": [264, 265, 478, 479, 558, 748, 778, 795, 801], "qdarkstyl": [264, 265, 478, 479, 558, 748, 778, 795, 801], "darkdetect": [264, 265, 478, 479, 558, 748, 778, 795, 801], "mne_qt_brows": [264, 265, 478, 479, 558, 778, 795, 801, 880], "mpl": [264, 265, 271, 272, 275, 278, 279, 280, 478, 479, 748, 778, 801, 806, 811], "tkagg": [264, 265, 478, 479, 778, 801], "f11": [264, 265, 478, 479, 778, 801], "set_browser_backend": [264, 265, 478, 479, 558, 778, 795, 801, 820, 870, 880], "magic": [264, 265, 478, 479, 558, 778, 795, 801, 837, 859], "qt5": [264, 265, 478, 479, 558, 778, 795, 801, 843], "n_max_plot": [264, 265, 777], "good_epoch": [264, 265, 779], "area_alpha": [264, 265, 266, 267, 478, 479, 802], "line_alpha": [264, 265, 266, 267, 478, 479, 802], "asd": [264, 265, 266, 267, 478, 479, 802], "idiom": [264, 265, 266, 267, 478, 479, 802, 839], "decibel": [264, 265, 266, 267, 275, 478, 479, 531, 702, 704, 780], "log\u2081\u2080": [264, 265, 266, 267, 478, 479, 685, 702, 704, 780], "ch_group": [264, 265, 266, 267, 478, 479, 804, 880], "to_spher": [264, 265, 266, 267, 478, 479, 804, 880], "n_ch_group": [264, 265, 266, 267, 478, 479], "n_pick": [264, 265, 266, 267, 478, 479, 603], "plot_raw": [264, 265, 266, 267, 478, 479, 804, 817, 870, 880], "downward": [264, 265, 266, 267, 478, 479, 804], "plot_layout": [264, 265, 266, 267, 478, 479, 804, 870, 880], "layout_scal": [264, 265, 266, 267, 700, 761, 786, 809], "fig_background": [264, 265, 266, 267, 700, 786, 809], "canva": [264, 265, 266, 267, 700, 761, 786, 809, 862], "allow_dupl": [264, 265, 266, 267, 312, 340, 478, 479, 636, 880], "eeg061": [264, 265, 266, 267, 312, 340, 478, 479, 636], "eeg161": [264, 265, 266, 267, 312, 340, 478, 479, 636], "anti": [264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 814, 880], "reset_drop_log_select": [264, 265, 880], "meaningless": [264, 265], "split_siz": [264, 265, 478, 479], "2gb": [264, 265, 478, 479, 880], "split_nam": [264, 265, 478, 479, 880], "100mb": [264, 265, 478, 479], "partit": [264, 265, 359, 478, 479, 688, 862, 880], "schema": [264, 265, 478, 479], "fname_split": [264, 265, 478, 479], "bbac101d50176611136b": [264, 265, 266, 267, 478, 479], "setter": [264, 265, 478, 479], "set_meas_d": [264, 265, 266, 267, 478, 479, 880], "match_cas": [264, 265, 266, 267, 269, 478, 479, 880], "match_alia": [264, 265, 266, 267, 269, 478, 479, 880], "channel_loc_alias": [264, 265, 266, 267, 269, 478, 479], "std_err": [264, 265], "mechan": [264, 265, 861], "1591": [264, 265], "juli": [264, 265], "rangeindex": [264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 702, 703, 704], "float64index": [264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 702, 703, 704], "int64index": [264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 702, 703, 704], "timedeltaindex": [264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 478, 479, 700, 703], "elicit": [266, 478, 498, 618, 856], "__neg__": [266, 267, 271, 272, 275, 278, 279, 280], "negat": [266, 267, 271, 272, 275, 278, 279, 280], "evoked_neg": [266, 267], "prepend": [266, 267], "resum": [266, 267, 861], "mff": [266, 267, 333, 441, 442, 495, 619, 862, 880], "export_evokeds_mff": [266, 267, 441, 870, 880], "merge_grad": [266, 267, 786, 880], "unsort": [266, 267, 782], "weakest": [266, 267, 782, 880], "obscur": [266, 267, 782], "multiax": [266, 267, 782], "t_start": [266, 267, 782], "t_end": [266, 267, 782], "surf_map": [266, 267, 517, 783], "n_contour": [266, 267, 783], "turntabl": [266, 267, 469, 748, 764, 783], "unintent": [266, 267, 469, 764, 783], "mask_cmap": [266, 267, 700, 784], "mask_alpha": [266, 267, 700, 784], "do_mask": [266, 267, 784], "illeg": [266, 267, 785], "01d": [266, 267, 410, 417, 787], "amplif": [266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 473, 475, 476, 536, 788], "improperli": [266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 410, 417, 453, 454, 470, 473, 475, 476, 536, 788, 880], "logger": [266, 267, 743, 745, 788], "_ave": [266, 267], "source_ori": [268, 865], "fiffv_mne_fixed_ori": [268, 865], "fiffv_mne_free_ori": [268, 865], "n_ori": 268, "source_rr": [268, 865], "n_sourc": [268, 297, 298, 410, 417, 455, 473, 475, 476], "nest": [269, 410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 559, 745, 839], "fiffv_coil_meg": 269, "fiffv_eeg_ch": 269, "3x3": [269, 501, 525], "fiff_unit_t_m": 269, "fiff_unitm_non": 269, "ctfkind": [269, 865], "colcal": 269, "rowcal": 269, "save_calibr": [269, 865], "serial": 269, "fiffv_point_eeg": [269, 865], "fiffc_vers": 269, "machid": [269, 865], "mac": 269, "usec": [269, 865], "he_level_raw": 269, "helium": 269, "helium_level": 269, "orig_file_guid": 269, "mea": 269, "creator": 269, "ncoil": 269, "hpi_coil": 269, "corr_coeff": 269, "coil_freq": 269, "dig_point": 269, "good_limit": 269, "dist_limit": [269, 277, 282, 344, 865, 880], "coord_tran": 269, "event_channel": 269, "mri_id": 269, "block_id": 269, "max_info": 269, "sss_info": 269, "max_st": 269, "sss_ctc": 269, "sss_cal": 269, "smartshield": [269, 880], "last_nam": 269, "first_nam": 269, "middle_nam": 269, "month": 269, "sex": [269, 880], "male": [269, 402], "femal": [269, 402], "handed": 269, "ambidextr": 269, "kilogram": 269, "command_lin": [269, 277], "tilt": [269, 489, 748, 862, 880], "subsystem": [269, 839], "meas_fil": 269, "mri_fil": 269, "roundtrip": [269, 880], "shh": 269, "working_dir": [269, 277], "xplotter": 269, "__setitem__": 269, "conflict": [270, 837, 839, 843, 880], "accuru": [270, 275], "m\u00b2": [270, 835], "versionad": [270, 703, 764], "outside_vertic": 270, "lie": [270, 862], "get_tri": 270, "label_tri": 270, "get_vertices_us": 270, "label_vert": 270, "n_label_vertic": 270, "icosahedr": [270, 360, 409, 465, 466], "morph_label": [270, 623, 870, 880], "div1": [270, 677], "div2": [270, 677], "split_label": [270, 870, 880], "mris_divide_parcel": [270, 677], "n_part": [270, 677], "fring": 270, "sens_data": [271, 272, 275, 278, 279, 280], "volvectorsourceestim": [271, 272, 275, 276, 279, 870, 880], "__div__": [271, 272, 275, 278, 279, 280], "__mul__": [271, 272, 275, 278, 279, 280, 700], "tstop": [271, 272, 275, 278, 279, 280], "bihemilabel": [271, 272, 275, 278, 279, 280, 444, 512, 513, 870], "pane": [271, 275, 279, 748, 806, 845], "n_color": [271, 272, 275, 278, 279, 280, 767, 806, 811, 812], "hot": [271, 272, 275, 278, 279, 280, 806, 811], "diverg": [271, 272, 275, 278, 279, 280, 748, 767, 806, 811, 812, 839], "binar": [271, 272, 275, 278, 279, 280, 656, 658, 659, 748, 806, 811], "colorschem": [271, 272, 275, 278, 279, 280, 806, 811], "high_contrast": [271, 272, 275, 278, 279, 280, 748, 806, 811], "resort": [271, 275, 279, 806, 859], "devot": [271, 272, 275, 278, 279, 280, 806, 811], "occupi": [271, 272, 275, 278, 279, 280, 468, 649, 806, 811], "blend": [271, 272, 275, 278, 279, 280, 748, 767, 806, 811], "mip": [271, 272, 275, 278, 279, 280, 748, 806, 811], "surface_alpha": [271, 272, 275, 278, 279, 280, 748, 806, 811], "enclos": [271, 272, 275, 278, 279, 280, 748, 806, 811, 862, 880], "silhouette_alpha": [271, 272, 275, 278, 279, 280, 748, 806, 811], "silhouette_linewidth": [271, 272, 275, 278, 279, 280, 748, 806, 811], "time_label_s": [271, 272, 275, 278, 279, 280, 748, 806, 811], "freesurferoccipitalflattenedpatch": [271, 275, 279, 806], "openwetwar": [271, 275, 279, 806], "transform_data": [271, 272, 275, 278, 279, 280], "tmin_idx": [271, 272, 275, 278, 279, 280], "tmax_idx": [271, 272, 275, 278, 279, 280], "indicic": [271, 272, 275, 278, 279, 280], "data_t": [271, 272, 275, 278, 279, 280], "direction": [272, 278, 280], "vector_alpha": [272, 278, 280, 748, 811], "sane": [272, 278, 280, 811], "fiffv_proj_item_field": [273, 865], "compute_proj_": 273, "webp": [274, 880], "fidel": 274, "lang": [274, 880], "n_file": 274, "clearer": [274, 880], "add_custom_css": [274, 880], "add_custom_j": [274, 880], "javascript": [274, 880], "topomap_kwarg": [274, 799], "drop_log_ignor": [274, 880], "declutt": 274, "inverseoper": [274, 525, 526, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 805, 870, 880], "inverse_op": 274, "altogeth": 274, "stc_plot_kwarg": 274, "add_sys_info": 274, "sysinfo": 274, "sort_cont": [274, 880], "on_error": 274, "n_time_points_stc": 274, "remove_al": 274, "removed_index": 274, "open_brows": 274, "nanoamper": 275, "log_10": 275, "sum_k": [275, 862], "s_k": [275, 862], "subject_orig": [275, 278], "vertices_to": [276, 360], "pre_affin": 276, "src_data": 276, "vol_morph_mat": 276, "affinemap": 276, "diffeomorphicmap": [276, 585, 736, 737, 738, 880], "stc_from": 276, "mri_spac": [276, 880], "nifti2": [276, 279, 280], "stc_to": 276, "nifti2imag": 276, "src_from": [276, 545], "monolith": 277, "fiffv_mne_surf_left_hemi": [277, 865], "fiffv_mne_surf_right_hemi": [277, 865], "fiffv_mne_surf_unknown": 277, "fiffv_coord_mri": [277, 865], "inus": [277, 865], "subject_his_id": [277, 360], "ntri": [277, 865], "nuse_tri": [277, 865], "pinfo": 277, "155295": 277, "155323": 277, "155330": 277, "449": 277, "patch_ind": 277, "n_src_remain": 277, "essenti": [277, 386, 855, 862, 865], "115407": 277, "nearest_dist": [277, 865], "mri_width": 277, "mri_height": 277, "mri_depth": 277, "neighbor_vert": 277, "mri_ras_t": 277, "fiffv_mne_coord_ra": 277, "src_mri_t": [277, 880], "vox_mri_t": 277, "fiffv_mne_coord_mri_voxel": 277, "mri_volume_nam": 277, "seg_nam": 277, "include_surfac": 277, "include_discret": 277, "dest": [277, 279, 280, 734], "use_lut": [277, 880], "mne_analyz": [277, 665, 763, 845, 856, 868, 880], "subvolum": [279, 280, 880], "upsampl": [279, 280, 444, 450], "trilinear": [279, 280, 444], "ensnur": [279, 280, 444], "bg_img": [279, 280, 812, 880], "initial_po": [279, 280, 812], "nutmeg": [279, 280, 812], "spatialimag": [279, 280, 303, 470, 583, 585, 736, 737, 738, 812], "src_sampl": [279, 280, 812], "stc_vol_sampl": [279, 280, 812], "vl": [279, 628], "save_as_volum": [279, 280, 880], "pick_channels_forward": [284, 285, 870], "evoked_templ": 284, "apply_forward_raw": [284, 870, 880], "zlogratio": [287, 541, 542, 700, 703, 808], "data_sc": 287, "apply_dics_epoch": [289, 290, 292, 870, 880], "meaningfulli": 290, "quadrant": 290, "apply_d": [290, 291, 292, 870, 880], "borgiotti": [297, 298], "kaplan": [297, 298], "\u03b8i": [297, 298], "arguabl": [297, 298], "max_pow": [297, 298], "expon": [297, 298, 454, 473, 475, 476, 536], "compute_depth_prior": [297, 298, 455, 473, 475, 476, 536, 870, 880], "n_weight": 297, "src_type": [297, 298], "is_free_ori": [297, 298], "supplement": 297, "is_ssp": 298, "vec_stc": 298, "rework": [298, 880], "resmat": [299, 534, 535, 537, 540], "n_dipoles_lcmv": 299, "n_dipoles_fwd": 299, "1996": 300, "1207": 300, "nov": 300, "acssc": 300, "599135": 300, "mef": [303, 862], "mef05_001": 303, "mef30_001": 303, "flash5_img": [303, 307], "dig_kind": [305, 306, 429, 880], "origin_head": 305, "origin_devic": 305, "exclude_front": [306, 429], "n_pt": 306, "convert_flash_mri": [307, 862, 870, 880], "no_decim": 308, "watersh": [309, 856, 880], "autorecon1": [309, 859, 880], "idx_by_typ": 310, "read_dig_captrak": [312, 325, 328, 332, 333, 334, 335, 336, 337, 862, 870, 880], "read_dig_dat": [312, 328, 331, 333, 334, 335, 336, 337, 490, 862, 870, 880], "read_dig_egi": [312, 325, 328, 331, 332, 334, 335, 336, 337, 862, 870, 880], "read_dig_hpt": [312, 328, 331, 332, 333, 334, 336, 862, 870, 880], "read_dig_localit": [312, 325, 331, 332, 333, 334, 335, 337, 870, 880], "acpc": 312, "ch_po": [312, 325], "remove_fiduci": [312, 880], "circumst": [312, 439, 880], "x_max": 313, "y_min": 313, "y_max": 313, "my_layout": 313, "keep_stim": 314, "combined_inst": 314, "native_head_t": 316, "equalized_inst": [317, 435], "ch_adjac": [318, 329], "use_c": 320, "sq20483n": [320, 478], "sq20483": [320, 478], "sq20950n": [320, 478], "upgrad": [320, 478, 880], "bg_imag": 321, "reserv": [321, 839, 861, 880], "make_grid_layout": [321, 326, 870], "neighbor_nam": 322, "builtin": [322, 323, 748, 839, 880], "heurist": 324, "capit": [324, 880], "periauricular": [325, 862], "n_point": [325, 339, 365, 429, 481, 502, 614], "n_hpi": 325, "compute_dev_head_t": [325, 870, 880], "fs_tal": [325, 510, 735], "ctf_head": [325, 510, 735], "ctf_meg": [325, 510, 735], "viewport": [326, 478, 479, 801], "generate_2d_layout": [326, 327, 749, 870], "n_col": [327, 558, 701, 703, 774, 794, 880], "95mm": 328, "eloc": 330, "sfp": [330, 880], "besa": [330, 616, 880], "bvef": [330, 880], "095m": 330, "weakli": 330, "eg": [330, 880], "captrak": [331, 880], "xml": [331, 333, 442, 619, 862, 880], "bvct": [331, 862, 880], "compumed": [332, 490, 862], "eeg001": 334, "eeg002": 334, "hpt": [335, 862], "filepath": [335, 337, 698, 748], "digitz": 335, "pound": [335, 862], "auricular": [335, 862, 865], "signifi": [335, 558], "6729": 335, "3671": 335, "6782": 335, "5228": 335, "3127": 335, "3976": 335, "2363": 335, "8450": 335, "3601": 335, "5353": 335, "6828": 335, "8518": 335, "0697": 335, "0829": 335, "3744": 335, "6297": 335, "1376": 335, "4264": 335, "7352": 335, "7756": 335, "8676": 335, "0439": 335, "9297": 335, "6852": 335, "4881": 335, "4939": 335, "localit": [336, 880], "read_polhemus_fastscan": [337, 870, 880], "on_header_miss": [339, 880], "fastscan": [339, 502, 862], "t_step_min": [341, 342, 343], "t_window": [341, 343, 347, 568], "interf": [341, 343, 347], "_setup_hpi_amplitude_fit": 341, "disambigu": 341, "t_step_max": 342, "too_clos": 342, "adjust_dig": [342, 344], "\u03b4t": 342, "veloc": [342, 562], "chpi_snr": 343, "snr_mag": 343, "power_mag": 343, "resid_mag": 343, "snr_grad": 343, "power_grad": 343, "resid_grad": 343, "gof_limit": 344, "quat": [344, 350, 739, 741], "q1": [344, 478, 479, 739, 741], "q2": [344, 739, 741], "q3": [344, 478, 479, 739, 741], "monitor": [345, 862, 865], "hlc001": 345, "hlc002": 345, "hlc003": 345, "rawkit": [346, 502], "include_lin": 347, "t_step": 347, "allow_line_onli": [347, 880], "hpi_freq": 349, "n_coil": 349, "hpi_pick": 349, "hpi_on": 349, "head_pos_to_trans_rot_t": [351, 352, 651, 652, 653, 665, 870], "all_evok": 353, "keep_sample_mean": 354, "ledoit_wolf": [354, 880], "factor_analysi": 354, "store_precis": 354, "assume_cent": 354, "shrikag": 354, "iter_n_compon": 354, "emprici": 354, "redund": [354, 862, 880], "on_rank_mismatch": [358, 369, 370], "orth": [358, 880], "implicitli": [358, 422, 588, 855, 862], "resultingmorph": 360, "vertices_from": 360, "vert_rh": 360, "vert_lh": 360, "mris_left_right_regist": 360, "epochs_list": [361, 433], "add_offset": 361, "events_list": [363, 880], "event_list": [363, 880], "on_defect": [365, 429, 460, 608, 637, 639, 828, 880], "read_fiduci": [365, 870, 880], "canon": [365, 485, 748, 764, 854, 880], "quantiti": [365, 586, 861, 862], "radian": [365, 562], "lpa_weight": 365, "rpa_weight": 365, "hsp_weight": 365, "eeg_weight": 365, "hpi_weight": 365, "callback": [365, 748, 761, 880], "set_fid_match": 365, "set_grow_hair": 365, "hair": 365, "set_rot": 365, "rot": [365, 739, 741], "set_scal": 365, "sca": 365, "scale_mod": 365, "set_transl": 365, "tra": 365, "fids_mri": 367, "coordinatesystem": [367, 862], "return_rank": 369, "return_color": [369, 463], "prepare_noise_cov": [369, 870, 880], "n_nonzero": 369, "1e11": 370, "1e5": 370, "fd": [371, 835], "reg_cov": 371, "fs_home": 372, "create_raw": 373, "ignore_config": 375, "env": [375, 458, 837, 839, 843, 847], "device_id": 376, "force_upd": [377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408], "update_path": [377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408], "mne_datasets_brainstorm_data_path": [377, 378, 379], "prompt": [377, 378, 379, 380, 382, 383, 385, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 838, 842, 844, 850, 859], "base_url": [380, 402, 403], "getenv": 380, "foot": 380, "khanetal2018": 384, "dataset_param": 385, "check_vers": 385, "return_vers": 385, "auth": 385, "token": 385, "archive_nam": [385, 391], "folder_nam": [385, 391], "hash": [385, 391, 880], "config_kei": 385, "unzip": [385, 839], "untar": [385, 837], "decompress": 385, "authent": [385, 839], "usernam": [385, 839], "password": [385, 839], "httpdownload": 385, "012345": 385, "has_dataset": [385, 870, 880], "uncompress": 385, "cryptograph": 385, "sha256": 385, "19uheid": 385, "md5": 385, "upodh2io": 385, "dataset_nam": [385, 391, 880], "tar": [385, 837, 845], "12b75d1cb7df9dfb4ad73ed82f61094f": 385, "osf": 385, "86qa2": 385, "webpag": 387, "2wk": 388, "1mo": 388, "2mo": 388, "3mo": 388, "5mo": 388, "9mo": 388, "12mo": 388, "15mo": 388, "18mo": 388, "2yr": 388, "ants4": 388, "5month3t": 388, "subject_dir": 389, "fetch_dataset": [391, 870, 880], "\u00ecnt": 394, "mne_datasets_opml_path": 398, "edfx": [402, 403], "cassett": 402, "physionet_sleep_path": [402, 403], "temazepam": [402, 856, 870, 880], "telemetri": 403, "mild": 403, "asleep": 403, "mne_datasets_spm_data_path": 405, "n_triangl": 409, "quadric": 409, "30001": 409, "20480": 409, "cov_est": 410, "transform_into": [410, 417, 880], "average_pow": [410, 417], "cov_method_param": [410, 417, 418], "component_ord": [410, 880], "mutual_info": [410, 880], "csp_space": [410, 417], "mutual": [410, 495, 738], "simplif": 410, "mean_": [410, 417], "std_": [410, 417], "x_new": [410, 411, 412, 415, 417, 418, 421, 559], "n_features_new": [410, 411, 412, 415, 417, 418, 421, 559], "get_param": [410, 411, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 559], "subobject": [410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 559], "name_format": [410, 417], "n_pattern": [410, 417], "set_param": [410, 411, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 559], "__": [410, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 559], "classes_": [411, 413], "n_class": [411, 413, 414, 420, 426], "rtepoch": [412, 880], "temporalfilt": [412, 870, 880], "mne_realtim": [412, 872, 880], "base_estim": [413, 420, 880], "score_func": [413, 420, 558], "decision_funct": [413, 414, 420], "nd_featur": [413, 420], "n_slice": 413, "n_features_1": [413, 420], "n_features_2": [413, 420], "n_task": [413, 420], "clone": [413, 420, 837, 839, 847, 880], "n_target": [413, 414, 420, 427], "xt": [413, 420, 423], "283185307179586": 415, "nitim": [415, 712, 718, 780, 880], "n_signal": [415, 723, 725], "fit_intercept": [416, 422], "r2": 416, "edge_correct": [416, 422], "baseestim": [416, 424, 427], "return_filt": 418, "flank": 418, "spectal": 418, "sprectal": 418, "sorter_spec": 418, "x_ssd": 418, "with_mean": 419, "with_std": 419, "estimators_": 420, "filterestim": [421, 870, 880], "unsupervis": 424, "spatialfilt": 425, "_xdawntransform": 425, "features_shape_": 425, "objective_funct": 426, "leaveoneout": 426, "surrogate_tri": 426, "mean_spatial_filt": 426, "pre_dispatch": 427, "n_dimensional_featur": 427, "dispatch": 427, "explos": 427, "spawn": [427, 880], "lightweight": [427, 837], "n_score": 427, "attr": [428, 839], "get_fitting_dig": [429, 870], "extrema": [430, 583, 597], "orig_sfreq": 431, "weight_al": 431, "ignore_ref": [431, 521, 569, 577, 588], "return_map": 431, "mag_scal": [431, 569, 577, 588], "multipolar": [431, 568, 569, 577, 588], "fit_sphere_to_headshap": [431, 568, 569, 577, 588, 870, 880], "magenetomet": [431, 569, 577, 588], "pickup": [431, 569, 577, 588, 862], "0168": [431, 569, 577, 588], "sp": 431, "old_event_id": 432, "new_event_id": 432, "safeti": [432, 847], "collat": 434, "absenc": 434, "ancillari": 434, "union": [434, 451, 558, 589], "myevent": 434, "last_myev": 434, "first_": 434, "event_typ": 434, "respet": 434, "slash": [437, 835, 880], "n_new_ev": 438, "aa": 439, "dd": [439, 490, 880], "ee": 439, "gg": 439, "syncstatu": 439, "99998": 439, "neuroscan": [439, 862, 880], "mffpy": [442, 880], "xml_file": 442, "physical_rang": [443, 478, 479], "add_ch_typ": [443, 478, 479], "vmrk": [443, 478, 479, 606, 856, 880], "edflib": [443, 478, 479, 880], "f_pass": 445, "f_stop": 445, "return_copi": 445, "ellipt": 445, "gpass": 445, "gstop": 445, "weren": 445, "triag": [445, 699], "fs1": 446, "fs2": [446, 449], "fstop": 446, "max_tri": 447, "mt_bandwidth": [449, 478, 479], "centr": [449, 478, 479, 540], "xf": 449, "chronux": 449, "partha": 449, "mitra": 449, "hemant": 449, "bokil": 449, "oxford": [449, 839], "upfirdn": 450, "shortest_ev": 451, "find_stim_step": [451, 870, 880], "00000101": 451, "0000111": 451, "0100101": 451, "0000101": 451, "0000010": 451, "pad_start": 452, "pad_stop": 452, "whichev": [452, 454, 766], "v_from": 452, "v_to": 452, "min_dist": 453, "rhoend": 453, "fmin_cobyla": 453, "limit_depth_ch": [454, 880], "combine_xyz": 454, "gk": 454, "frobeniu": 454, "depth_prior": 454, "compute_orient_prior": [454, 870], "orient_prior": 455, "fwd_out": [456, 457], "restrict_forward_to_stc": [456, 870, 880], "restrict_forward_to_label": [457, 870, 880], "raise_error": 458, "config_path": 459, "mnemn": 459, "mgz_fname": 463, "atlas_id": [463, 621], "read_freesurfer_lut": [463, 870, 880], "labels_aseg": 464, "spatio_temporal_tris_adjac": [465, 870, 880], "all_inst": 467, "grown": 468, "territori": 468, "invad": 468, "broadcast": 468, "guess_mri_subject": 469, "head_high_r": 469, "scrollabl": 469, "orient_to_surfac": 469, "scale_by_dist": 469, "mark_insid": 469, "advanced_rend": 469, "head_insid": 469, "movabl": 469, "splitter": 469, "qt4": 469, "unnecessari": [469, 486, 493, 500, 855, 857], "wx": 469, "occlud": 469, "coregistrationui": 469, "base_imag": [470, 583, 880], "intracranialelectrodeloc": 470, "unscal": [472, 880], "update_mod": 473, "bay": 473, "mackai": 473, "time_pca": 475, "dgap_freq": [475, 476, 880], "cd": [475, 839, 845, 859, 862, 880], "bcd": [475, 880], "dualiti": [475, 476, 880], "alpha_max": [475, 476], "epsilon": [475, 525], "alpha_spac": [476, 880], "alpha_tim": [476, 880], "raw_extra": 477, "orig_format": [477, 478, 479, 880], "buffer_size_sec": [477, 478, 479, 880], "orig_unit": 477, "unsplit": 477, "orig_nchan": 477, "nv": 477, "my_raw_object": 477, "subclass": 477, "_read_segment_fil": 477, "mult": 477, "time_slic": [478, 479], "rawfif": [478, 479], "crop_by_annot": [478, 479, 880], "data_fram": [478, 479], "quartil": [478, 479], "fix_mag_coil_typ": [478, 870, 880], "mne_fix_mag_coil_typ": 478, "load_bad_channel": [478, 479, 880], "bad_fil": [478, 479], "mne_mark_bad_channel": [478, 479], "europ": [478, 479], "lightgrai": [478, 479, 777, 801], "show_first_samp": [478, 479, 558, 795, 801], "eventloop": [478, 479, 801], "prj": [478, 479, 801], "secondari": [478, 479, 801], "stim_pick": [478, 479, 880], "supersampl": [478, 479], "optimum": [478, 479], "drop_small_buff": [478, 479], "gzip": [478, 479, 880], "projecton": [478, 479], "datetimeindex": [478, 479], "pickl": 481, "mrk_point": 481, "fiffv_coord_": [482, 510], "input_fnam": [485, 486, 490, 493, 494, 495, 500, 502, 504, 612, 614], "pos_fnam": 485, "add_head_tran": 485, "artemis123": [485, 862, 880], "utf8": [486, 493, 880], "bdf": [486, 493, 500, 862, 880], "rawedf": [486, 493, 880], "gdf": [486, 493, 500, 862, 880], "batteri": 486, "trigger_sign": 486, "htm": 486, "cms_bit": 486, "cms_high": 486, "boxi": [487, 862, 880], "rawboxi": 487, "vhdr_fname": 488, "heogl": 488, "heogr": 488, "veogb": 488, "vision": [488, 861, 880], "rawbrainvis": [488, 880], "pdf_fname": 489, "config_fnam": 489, "head_shape_fnam": 489, "sort_by_ch_nam": 489, "e64": 489, "rawbti": 489, "data_format": 490, "date_format": 490, "int16": 490, "int32": [490, 865], "numsampl": 490, "rawcnt": 490, "system_clock": 491, "clean_nam": [491, 880], "rawctf": 491, "curri": [492, 606, 880], "dap": [492, 606], "rs3": 492, "cdt": [492, 606, 880], "dpa": [492, 606], "cef": [492, 606], "rawcurri": 492, "export_raw": [493, 870, 880], "storag": [493, 643], "sao2": 493, "subsecond": 493, "uint16_codec": [494, 606, 612, 880], "montage_unit": [494, 612, 880], "codec": [494, 606, 612, 748], "latin1": [494, 606, 612], "raweeglab": [494, 880], "trev": 495, "e1": [495, 619], "e2": [495, 619], "e3": [495, 619], "rawegi": 495, "nxe": [496, 862], "raweximia": 496, "data_nam": [497, 613, 617], "ft_datatype_raw": 497, "binfil": 499, "fil": [499, 856, 862, 880], "opmeg": 499, "rawfil": 499, "rawgdf": 500, "hitachi": [501, 880], "probe": [501, 880], "rawhitachi": 501, "3x5": 501, "etg": 501, "7000": 501, "d1": 501, "s2": 501, "d2": 501, "s3": 501, "d3": 501, "s4": 501, "d4": 501, "s5": 501, "d5": 501, "s6": 501, "d6": 501, "s7": 501, "d7": 501, "s8": 501, "ft7": 501, "tp7": 501, "laid": 501, "d8": 501, "s9": 501, "d9": 501, "s10": 501, "3x11": 501, "d10": 501, "s11": 501, "d11": 501, "s12": 501, "d12": 501, "s13": 501, "d13": 501, "s14": 501, "d14": 501, "s16": 501, "d16": 501, "s17": 501, "d17": 501, "s18": 501, "stim_cod": 502, "allow_unknown_format": [502, 614], "ricoh": [502, 614, 880], "laboratori": [502, 614], "neuroelectr": 503, "nedf": [503, 880], "rawnedf": 503, "nicolet": [504, 862, 880], "nihon": 505, "kohden": 505, "rawnihon": 505, "nirx": [506, 862, 880], "nosatflag": 506, "rawnirx": 506, "wlx": 506, "nosatflags_wlx": 506, "persyst": [507, 862, 880], "rawpersyst": 507, "snirf": [508, 880], "jnir": 508, "rawsnirf": 508, "indent": [509, 756], "read_limit": [509, 756], "max_str": [509, 756], "mne_show_fiff": 509, "mri_tal": [510, 735], "grow_outsid": 511, "hoc": [514, 846, 880], "standard_devi": 514, "write_bem_surfac": [515, 516, 607, 608, 855, 870, 880], "write_bem_solut": [516, 607, 608, 855, 870, 880], "relative_radii": 522, "radii": [522, 652], "csf": [522, 862], "replace_ev": [523, 880], "n_events_in": 523, "n_events_out": 523, "1111111111111111": [525, 526, 531, 532, 537, 541, 542], "prepare_inverse_oper": [525, 526, 527, 528, 529, 531, 532, 541, 542, 870, 880], "apply_inverse_tfr_epoch": [525, 526, 527, 528, 870, 880], "force_equ": [525, 880], "time_func": 528, "approx": [528, 862], "inv_split": [531, 532], "snr_est": 533, "unregular": 533, "tild": [533, 862, 880], "lambda_k": [533, 862], "gamma_k": [533, 862], "biggest": 533, "chi": 533, "normalis": [534, 535], "willb": [534, 535], "n_orient_inv": [534, 535, 537], "n_orient_fwd": [534, 535, 537], "pca_var": [534, 535], "mantl": [536, 862], "cog_err": 540, "graviti": 540, "cog": 540, "maxrad_ext": 540, "peak_amp": 540, "sum_amp": 540, "surf_nam": [544, 623], "mne_docs_kind": 546, "mne_docs_vers": 546, "grad_reject": 548, "mag_reject": 548, "eeg_reject": 548, "eog_reject": 548, "explanatori": [557, 603], "info_": 557, "intercept_": 557, "cumul": 558, "999999": [558, 880], "n_components_": [558, 880], "n_iter_": [558, 880], "pseudoinvers": [558, 569, 862, 880], "instabl": 558, "migrat": [558, 880], "debat": 558, "zca": 558, "tol_fastica": 558, "tol_picard": 558, "current_fit": 558, "unfit": 558, "pre_whitener_": 558, "pca_components_": 558, "pca_mean_": 558, "pca_explained_variance_": 558, "scrap": 558, "n_samples_": 558, "on_baselin": [558, 792, 880], "ummix": [558, 559], "reappli": [558, 792, 827, 880], "anymor": [558, 847, 880], "supra": [558, 560], "ecg_idx": 558, "kuiper": 558, "eog_idx": 558, "paralyz": 558, "threefold": 558, "farthest": 558, "msucl": 558, "ref_ica": 558, "ref_idx": 558, "baseraw": [558, 566, 870, 880], "unclean": 558, "pvaf": 558, "usecas": [558, 795], "plot_std": [558, 791, 793], "image_arg": [558, 700, 791, 793], "psd_arg": [558, 791, 793], "plot_ica_compon": [558, 870, 880], "topomap_axi": [558, 793], "image_axi": [558, 793], "erp_axi": [558, 793], "spectrum_axi": [558, 793], "variance_axi": [558, 793], "logarithm": [558, 793], "ass": [558, 794], "n_ica_compon": [558, 794], "sublabel": [558, 794], "score_sourc": [558, 880], "pearsonr": 558, "skew": 558, "correct_overlap": 559, "overlapp_correct": 559, "evokeds_": 559, "event_id_": 559, "correct_overlap_": 559, "n_event_typ": 559, "bad_perc": 560, "bad_peak": 560, "bad_flat": 560, "uncommon": 560, "sole": [561, 856, 861], "rotation_velocity_limit": 562, "translation_velocity_limit": 562, "use_dev_head_tran": [562, 880], "lm_cutoff": 566, "epoch_threshold": 566, "bw_method": 566, "intrins": 566, "hjorth": 566, "gaussian_kd": 566, "n_legendre_term": 567, "lap": [567, 645], "inst_csd": 567, "n_imbal": 568, "multipol": [568, 588], "bad_condit": [569, 577, 588], "extended_proj": [569, 577, 588], "ill": [569, 577, 588], "esss": [569, 577, 588, 868, 880], "n_meg": [569, 577], "n_moment": 569, "n_good_meg": 569, "reg_moment": 569, "n_use_in": 569, "dagger": 569, "phi": 569, "phi_in": 569, "data_meg_good": 569, "raw_ev": [570, 571], "avg_ref": [570, 571], "return_drop_log": [570, 571, 880], "ecg_ev": [570, 578, 581], "0005": [571, 859], "e0g": 571, "feed": [572, 862], "corrmapplugin1": 572, "categoris": 572, "preexist": 572, "dry": 572, "template_fig": 572, "labelled_": 572, "mag_pick": 573, "grad_pick": 573, "keep_ecg": [574, 880], "r_peak_events_arrai": 574, "doctest": 574, "interp_thresh": 576, "insts_bad": 576, "formerli": [576, 880], "noisy_ch": 577, "flat_ch": 577, "Their": [577, 839], "scores_flat": 577, "limits_flat": 577, "annotate_amplitud": [577, 588, 870, 880], "st_fix": [577, 588], "d_k": 577, "mu_d": 577, "sigma_d": [577, 862], "textrm": 577, "return_ecg": 578, "ch_ecg": [578, 581], "average_puls": [578, 581], "ecg_sourc": 581, "eog_sourc": 582, "max_peak_dist": 583, "voxels_max": 583, "use_min": 583, "n_neighbor": 584, "l_rate": 586, "w_chang": 586, "anneal_deg": 586, "anneal_step": 586, "n_subgauss": 586, "kurt_siz": 586, "ext_block": 586, "blowup": [586, 665], "blowup_fac": 586, "n_small_angl": 586, "use_bia": 586, "return_n_it": [586, 880], "kurtosi": 586, "unmixing_matrix": 586, "return_max_it": 586, "bad_limit": 587, "forth": 588, "relicens": 588, "permiss": 588, "certifi": 588, "seamless": 588, "vet": [588, 868], "abramowitz": 588, "stegun": 588, "us2006031038": 588, "us6876196": 588, "wo2005067789": 588, "wo2005078467": 588, "wo2006114473": 588, "lawyer": 588, "raw_er": 589, "from_raw": 589, "inject": 589, "raw_er_prepar": 589, "compil": 589, "pathlength": [590, 880], "hemoglobin": [595, 880], "wherev": 595, "realtim": [596, 870, 880], "provision": 596, "x0": [597, 685], "peak_loc": 597, "peak_mag": 597, "nathanael": 597, "yoder": 597, "ncyoder": 597, "purdu": 597, "36900026": 597, "76007351": 597, "imb_cal": 599, "t_raw": 602, "t_other": 602, "realign": [602, 835, 880], "first_ev": 602, "n_picks_ref": 603, "epochs_no_av": 603, "epochs_clean": 603, "n_parcel": 605, "amrk": 606, "ahdr": [606, 880], "patch_stat": [608, 630], "s_id": 608, "eventtyp": 612, "trialinfo_column": 613, "trialinfo": [613, 880], "mne_browse_raw": [615, 865], "avr": [616, 880], "mul": [616, 880], "sidecar": 616, "timelock": 617, "write_labels_to_annot": [622, 623, 829, 870, 880], "annot_fnam": [623, 830], "ascend": [623, 789, 796, 859, 880], "mne_make_morph_map": [625, 865], "morph_map": 625, "left_map": 625, "right_map": 625, "asterisk": 628, "source_morph": 629, "return_dict": 631, "file_format": [631, 833], "voxels": [631, 833], "xra": [631, 833], "yra": [631, 833], "zra": [631, 833], "cra": [631, 833], "n_face": [631, 634, 833], "read_tri": [631, 833, 870], "return_al": 633, "fname_in": 634, "clockwis": [634, 753], "counterclockwis": [634, 865], "spcecifi": 635, "bem_nam": 637, "subjects_from": [637, 640], "ba3a": 638, "cfg": 638, "skip_fiduci": 639, "ioerror": 639, "scale_bem": [639, 870, 880], "scale_label": [639, 870], "scale_source_spac": [639, 870], "src_name": 640, "my_source_spac": 640, "mne_sensitivity_map": 641, "ch_info": [642, 880], "drop_ref": [642, 880], "on_bad": 642, "cache_dir": 643, "output_format": 646, "howto": 646, "asctim": 646, "levelnam": 646, "notifi": [646, 839], "return_old_level": 647, "add_fram": [647, 743], "old_level": 647, "single_volum": [649, 880], "ox": 649, "oi": 649, "iii": 649, "get_stim_channel": 650, "stim_data": 650, "add_chpi": [652, 653, 665, 870, 880], "inhomogen": 653, "poisson": 653, "stc_true": [655, 656, 657, 658, 659, 660, 661, 662], "stc_est": [655, 656, 657, 658, 659, 660, 661, 662], "ppe": 657, "dfrac": [657, 662], "sum_i": [657, 662], "s_i": [657, 662], "r_i": [657, 662, 862], "tp": [658, 659], "fn": 659, "2q": 660, "min_": [660, 862], "r_k": 660, "r_l": 660, "mathbb": 660, "dle": 660, "ed": [660, 880], "terminologi": 660, "actual_snr": 664, "sti001": 665, "allow_overlap": 667, "coo_matrix": [670, 671, 672, 673, 674, 675, 676, 680], "additit": 671, "remap_vertic": [673, 676], "reassign": [673, 676], "2n": [674, 675, 676, 862], "pval_correct": [678, 684], "n_bootstrap": 679, "spmatrix": [680, 687, 688, 690, 691], "n_ob": 680, "chan_adj": 680, "5600x5600": 680, "27076": 680, "compliant": [681, 868], "slowest": 681, "a2b2": 681, "greenhous": 681, "geisser": 681, "f_val": 681, "homoscedast": 682, "kruskal": 682, "walli": 682, "pvalu": 683, "yekuti": 684, "negcorr": 684, "n_regressor": 685, "choleski": [686, 862, 880], "n_cond": 686, "bx": 686, "enorm": 686, "overload": 686, "subepoch": 686, "n_predictor": 686, "time_window_length": 686, "t_power": [687, 688, 690, 691], "check_disjoint": [687, 688, 690, 691], "subarrai": 687, "kth": 687, "unconnect": [687, 688, 690, 691], "disjoint": [687, 688, 690, 691], "set_cache_dir": [687, 688, 690, 691, 870], "rv_continu": [687, 688, 690, 691], "untract": 689, "spatial_exclud": [690, 691], "p_thresh": 692, "equal_var": 694, "ball": 695, "volu": 695, "do_neighbor_vert": 697, "do_neighbor_tri": 697, "show_path": 699, "sy": [699, 843, 880], "power_baselin": 700, "frequency_window": 700, "read_tfr": [700, 703, 733, 870, 880], "write_tfr": [700, 703, 722, 870], "csd_array_fouri": [701, 706, 707, 708, 709, 710, 870, 880], "csd_array_multitap": [701, 705, 706, 708, 709, 710, 870, 880], "csd_array_morlet": [701, 705, 707, 708, 709, 710, 870, 880], "as_cov": 701, "pack": 701, "pick_frequ": 701, "read_csd": [701, 870, 880], "getitem_epochspectrum_return": 702, "ci_alpha": [702, 704], "read_spectrum": [702, 704, 870], "latex": [702, 704], "pertin": 703, "12676": 703, "getitem_spectrum_return": 704, "sixth": 704, "subscript": 704, "freq_indic": 704, "half_nbw": 712, "kmax": 712, "sym": [712, 880], "nw": 712, "half_bw": 712, "bw": 712, "f0": 712, "tridiagon": 712, "jw": 713, "jnw": 713, "tx": 715, "n_step": [715, 723, 748], "_cycl": [716, 726, 727, 728, 730, 731], "morlet2": [716, 726], "sp_morlet": [716, 726], "this_fwhm": [716, 726], "wavelet_sp": [716, 726], "half_max": [716, 726], "n_taper": [718, 728], "get_window": [719, 802], "istft": [723, 724, 870, 880], "stftfreq": [723, 870], "epoch_data": [727, 728], "avg_power_itc": [727, 728], "power_": [727, 728], "tfr_array_multitap": [727, 729, 730, 731, 732, 870, 880], "tfr_array_stockwel": [727, 728, 730, 731, 732, 870, 880], "interrel": [727, 728, 730, 731, 846], "strive": [728, 731, 861], "finer": [728, 731, 880], "undermin": [728, 731], "intertri": [729, 732], "st_power": 729, "from_str": 735, "to_str": 735, "reg_img": 736, "trans2": 737, "niter": [738, 880], "affine_registr": 738, "rot_to_quat": [739, 870], "quat_to_rot": [741, 870], "contextlib": 742, "contextmanag": 742, "my_fnam": 742, "decor": [744, 746], "moin": 744, "pythondecoratorlibrari": 744, "sentenc": 744, "futurewarn": [744, 839, 880], "ignore_namespac": 745, "namespac": [745, 839, 870, 880], "travers": 745, "_funct": 746, "filler": 746, "5880": 746, "offscreen": 748, "subject_id": [748, 880], "buggi": 748, "soon": [748, 856, 861, 862], "add_skul": 748, "remove_data": 748, "remove_dipol": [748, 880], "remove_forward": [748, 880], "remove_head": 748, "remove_label": 748, "remove_annot": 748, "remove_sensor": 748, "remove_skul": 748, "remove_text": 748, "remove_volume_label": 748, "timeview": 748, "get_picked_point": 748, "geo": 748, "ctab": 748, "lh_ctab": 748, "rh_ctab": 748, "rbga": 748, "icefir": 748, "rocket": 748, "nvtx": 748, "thrown": [748, 880], "font": [748, 807], "add_scalar_bar": 748, "title_font_s": 748, "hex": [748, 772], "map_surfac": [748, 880], "n_coord": 748, "stereotax": 748, "coord_as_vert": 748, "1cm": 748, "subdir": 748, "reset_camera": [748, 816], "max_dist": 748, "justif": 748, "update_text": 748, "fill_hole_s": [748, 880], "hole": [748, 880], "dilat": 748, "apply_auto_sc": 748, "clear_glyph": 748, "cleanup": [748, 868], "widget": [748, 750, 880], "get_view": [748, 880], "zenith": [748, 816], "plot_time_cours": 748, "vertex_id": 748, "plot_time_lin": 748, "reset_view": 748, "restore_user_sc": 748, "bitrat": 748, "imageio": 748, "mov": 748, "interp1d": 748, "slinear": 748, "quadrat": 748, "n_frame": 748, "separate_canva": 748, "set_data_smooth": 748, "set_playback_spe": 748, "playback": 748, "set_tim": [748, 880], "set_time_interpol": 748, "set_time_point": 748, "time_idx": 748, "setup_time_view": 748, "rear": [748, 835], "time_interpol": 748, "toggle_interfac": 748, "toggle_playback": 748, "update_lut": 748, "imdata": 749, "onclick": 749, "backend_bas": 749, "bg": [749, 751], "set_ratio": 751, "ax_im": 751, "node_nam": 753, "start_between": 753, "group_sep": 753, "n_node_nam": 753, "fname_1": 756, "fname_2": 756, "show_fiff": [756, 870, 880], "smooth_shad": [757, 814], "_render": 757, "undocu": 757, "backend_us": [758, 760], "gen": 761, "ch_dx": 761, "teal": 763, "onselect": [765, 810], "rectangleselector": [765, 810], "show_indic": 766, "show_orient": [766, 880], "colorbarbas": 767, "polarax": 770, "type_snr": 771, "type_pow": 771, "type_resid": 771, "truncate_xaxi": [772, 880], "invert_i": 772, "unweight": 772, "inset": [772, 880], "n_evok": 772, "hexadecim": 772, "equal_spac": 781, "1f77b4": 789, "fscale": [789, 796], "alim": [789, 796], "pointsiz": 804, "bet": 804, "bluish": 805, "brain_color": [807, 880], "fig_numb": 807, "cone": 807, "axesimag": 810, "contourset": 810, "fieldlin": 810, "mixedvectorsourceestim": [811, 870, 880], "backend_nam": [813, 817, 819, 820], "old_backend_nam": [813, 817], "plot_evoked_field": [813, 870, 880], "link_brain": [813, 870, 880], "inlin": [813, 837, 843], "jupyterlab": 813, "colab": 813, "antialia": [814, 837], "depth_peel": 814, "multi_sampl": 814, "plot_epoch": [817, 839, 870, 880], "plot_ica_sourc": [817, 870, 880], "hide_sensor": 818, "dn": 818, "hsv": 830, "table_nam": 830, "colort": 830, "create_stamp": 833, "vocabulari": [835, 863], "textual": [835, 880], "spindl": 835, "acronym": [835, 863], "definion": 835, "mv": [835, 880], "\u00b5m": 835, "od": 835, "dealt": 835, "synapt": 835, "intracellular": 835, "pyramid": [835, 862], "perpendicularli": 835, "erron": [835, 880], "peculiar": 835, "encapsul": [835, 862], "hcpmmp": [835, 880], "gave": [835, 880], "cartoon": 835, "pependicular": 835, "laser": 835, "ga": 835, "rubidium": 835, "superconduct": 835, "quantum": 835, "scaleogram": 835, "uncorrel": 835, "nb_conda_kernel": 837, "anaconda": [837, 839, 843, 844, 850, 880], "forum": [837, 838, 839, 842, 845, 846, 856, 858, 859, 860], "osmesa": 837, "xvfb": 837, "forg": [837, 839, 843, 847], "mesalib": 837, "latest": [837, 839, 847, 859, 880], "git": [837, 846], "miniconda": [837, 839], "miniforg": 837, "pythonpath": 837, "pythonhom": 837, "curl": [837, 839], "githubusercont": [837, 839], "unabl": [837, 861, 880], "nvidia": [837, 859], "proprietari": [837, 861], "driver": 837, "init_cuda": [837, 870], "pytest": [837, 839], "test_filt": 837, "multithread": [837, 859], "swr": 837, "cento": 837, "spyder": [837, 839, 842, 843, 859], "mesa_gl_version_overrid": 837, "rend": 837, "msaa": 837, "antialias": [837, 880], "set_3d_opt": [837, 870, 880], "incomplet": [837, 868, 880], "prebuilt": 837, "xzvf": 837, "mesa_18": 837, "6_centos_lib": 837, "tgz": 837, "libgl_drivers_path": 837, "pwd": 837, "ld_library_path": 837, "went": [837, 838], "glxinfo": 837, "grep": [837, 839, 847], "uninstal": [837, 847], "cach": [837, 847], "gcp": 838, "travi": [838, 880], "virtualenv": 838, "8dfaa4a": 838, "bla": 838, "lapack": 838, "f614064": 838, "qtagg": 838, "post1": 838, "pyside6": 838, "traceback": 838, "modulenotfounderror": 838, "bashrc": [838, 844, 845], "zprofil": [838, 844], "zsh": [838, 844, 845], "troubleshoot": [838, 858, 860], "sustain": [839, 861], "volunt": 839, "welcom": 839, "anyon": [839, 861], "abid": 839, "fastest": [839, 845], "feel": [839, 846, 861, 880], "upstream": 839, "desktop": 839, "appreci": 839, "sudo": [839, 840, 845], "apt": [839, 840], "dmg": [839, 845], "atlassian": 839, "macport": [839, 845], "homebrew": [839, 845], "yourdomain": 839, "sooner": 839, "commit": [839, 861, 868, 880], "emac": 839, "vim": 839, "nano": 839, "subl": 839, "makefil": 839, "newest": 839, "guil": 839, "w32": 839, "ezwinport": 839, "path_to_git": 839, "mingw64": 839, "mnedev": 839, "path_to_anaconda": 839, "team": [839, 861], "yml": 839, "github_usernam": 839, "insert_your_actual_github_username_her": 839, "install_loc": 839, "opt": [839, 843, 844, 845], "site_packag": 839, "requirements_test": 839, "requirements_doc": 839, "graphviz": 839, "graphviz_dot": 839, "conda_prefix": 839, "optipng": 839, "linter": 839, "restructuredtext": 839, "autobuild": 839, "doc8": 839, "url_of_remote_repo": 839, "nickname_of_remot": 839, "repo": [839, 861], "undoubtedli": 839, "checkout": 839, "colleagu": 839, "unstag": 839, "some_fil": 839, "some_new_fil": 839, "entireti": 839, "some_other_fil": 839, "bypass": [839, 880], "enh": 839, "some_testing_fil": 839, "new_tutorial_fil": 839, "stuck": 839, "secur": [839, 845], "secret": 839, "client": [839, 880], "test_evok": 839, "python_refer": 839, "rst": 839, "my_funct": 839, "my_new_funct": 839, "old_param": 839, "new_param": 839, "my_other_funct": 839, "depr_messag": 839, "changeset": 839, "minor": [839, 865, 868, 880], "typo": [839, 858, 880], "subsect": 839, "bugfix": [839, 847], "happi": 839, "credit": 839, "gh": [839, 880], "newcontrib": [839, 880], "firstnam": 839, "lastnam": 839, "_your": 839, "test_topo": 839, "pep": 839, "pep8": 839, "pyflak": 839, "flake8": 839, "flake": 839, "ins": 839, "camelcas": [839, 870], "snake_cas": 839, "nsampl": 839, "complic": [839, 880], "sphinxcontrib": 839, "bibtex": [839, 854], "citat": [839, 880], "bibliograph": 839, "bib": 839, "singleauthor2019": 839, "authoroneauthortwo2020": 839, "firstauthoretal2021a": 839, "firstauthoretal2021b": 839, "param_nam": 839, "test_docstring_paramet": 839, "docstyl": 839, "glossari": [839, 863], "mod": 839, "intersphinx": 839, "inventori": 839, "sphobjinv": 839, "dump": 839, "ext": 839, "backtick": [839, 859], "pdb": 839, "debugg": [839, 880], "test_io_evok": 839, "imit": 839, "html_dev": 839, "noplot": 839, "regex_to_select_my_tutori": 839, "unrel": 839, "browse_raw": [839, 880], "mortem": 839, "pm": 839, "everyon": 839, "scientist": [839, 843, 858], "spare": 839, "streamlin": 839, "collabor": [839, 846, 861], "fruit": 839, "road": 839, "someon": 839, "occasion": [839, 856], "cosmet": 839, "backport": [839, 880], "whats_new": 839, "draft": 839, "wip": 839, "mrg": 839, "sty": 839, "azp": 839, "azur": 839, "exemplifi": 839, "tcsh": [840, 844, 845], "ubuntu": [840, 842, 845, 868], "bionic": 842, "beaver": 842, "1_0": 842, "intel": [842, 859], "catalina": [842, 844, 880], "silicon": 842, "studio": [842, 843], "python_1": 842, "0_1": 842, "mamba": 843, "prioriti": 843, "h5io": [843, 859], "h5py": [843, 859], "pymatread": [843, 880], "vscode": 843, "microsoft": 843, "anaconda3": [843, 844], "pyqt5": 843, "pyqt": [843, 880], "pycharm": [843, 859], "paid": 843, "profession": 843, "cmd": 844, "bash_profil": 844, "__conda_setup": 844, "overflow": [844, 880], "leopard": 845, "powerpc": 845, "runtim": 845, "mne_convert_mne_data": 845, "mne_epochs2mat": [845, 865], "mne_raw2mat": 845, "mne_simu": 845, "xcode": 845, "xquartz": 845, "x11": 845, "libxt": 845, "dylib": 845, "bak": 845, "flat_namespac": 845, "netpbm": 845, "brew": 845, "app": 845, "nightli": [845, 880], "path_to_desired_install_loc": 845, "zxvf": 845, "path_to_archive_fil": 845, "pkg": 845, "untrust": 845, "privaci": [845, 861], "mne_root": [845, 862, 865, 880], "matlab_root": 845, "r2018b": 845, "undefin": 845, "mne_setup_sh": 845, "csh": 845, "mne_setup": [845, 865], "path_to_mn": 845, "path_to_matlab": 845, "emul": 845, "zshrc": 845, "cshrc": 845, "tcshrc": 845, "setenv": [845, 850], "mne_opengl_test": 845, "redraw": 845, "spent": 845, "revolut": 845, "interrupt": 845, "glx": 845, "nondirect": 845, "IT": 845, "vnc": 845, "card": [845, 880], "libxp": 845, "libxp6": 845, "debian": [845, 868, 880], "dpkg": 845, "libxp6_1": 845, "1ubuntu1_amd64": 845, "deb": 845, "libgfortran": 845, "libfortran": 845, "gnu": 845, "maxdepth": 845, "interoper": 846, "reimplement": 846, "cpp": [846, 880], "connectom": [846, 868], "compli": [846, 880], "alphacsc": 846, "pactool": 846, "microst": 846, "conpi": 846, "eelbrain": 846, "posthoc": 846, "prep": 846, "pyprep": 846, "sesam": 846, "sesameeg": 846, "invertmeeg": 846, "unix": [846, 880], "name_of_environ": 847, "fool": 847, "proof": 847, "old_mn": 847, "dep": 847, "hm": [850, 856], "pubsw": 850, "subscrib": 850, "modular": 851, "qt3d": 851, "babymeg": 851, "tmsi": 851, "refa": 851, "brainamp": 851, "ant": 851, "eegosport": 851, "gusbamp": 851, "gramfortetal2013a": 854, "gramfortetal2014": 854, "bibliographi": 854, "meg2443": 855, "vanish": 855, "advers": 855, "preliminari": 855, "stamp": 855, "mm2": 855, "ico5": 855, "tessel": [855, 865], "prerequisit": 855, "bulletproof": 855, "feasibl": 855, "sep": 855, "bem_sol": 855, "reestablish": 855, "corregistr": 855, "charg": 855, "photograph": 855, "uninterest": 855, "epilept": 855, "infrequ": 855, "hesit": [856, 859], "siemen": [856, 862], "sonata": 856, "mprage": [856, 859, 862], "interspers": 856, "lv": 856, "audvis_raw": 856, "auvi": 856, "agre": 856, "bst_rest": [856, 870], "khz": 856, "dicom": [856, 865, 880], "richli": 856, "timon": [856, 880], "9999": 856, "msr": 856, "retrospect": 856, "satisfactori": 856, "chin": 856, "respir": [856, 862, 865], "hypnogram": 856, "rechtschaffen": 856, "kale": 856, "erlangen": 856, "germani": 856, "pend": 856, "craft": 856, "lrp": 856, "ern": 856, "neuroscientist": 857, "keystrok": 857, "peak_find": [857, 870, 880], "appnop": 859, "nope": 859, "nsappsleepdis": 859, "tempt": 859, "benfrederickson": 859, "dont": 859, "stackoverflow": 859, "21752259": 859, "write_": 859, "resid": 859, "plot_find_ecg_artifact": 859, "ordinarili": 859, "mkl": 859, "openmp": 859, "omp_num_thread": 859, "openblas_num_thread": 859, "num_cpu": 859, "implic": 859, "simplist": 859, "gpu": [859, 880], "epochs_path": 859, "protrud": 859, "shrunken": 859, "mri_norm": 859, "xopt": 859, "gentl": 859, "listserv": 859, "recon_al": 859, "autorecon2": 859, "autorecon3": 859, "formal": 861, "extraordinari": 861, "clarifi": [861, 880], "profit": 861, "entiti": [861, 865], "openli": 861, "affili": 861, "discours": 861, "behalf": 861, "barrier": 861, "leadership": 861, "neutral": 861, "tradition": [861, 862], "reward": 861, "benevol": 861, "dictat": 861, "defer": 861, "vote": 861, "deadlock": 861, "fork": 861, "disagre": 861, "deleg": 861, "appoint": 861, "successor": 861, "faith": 861, "director": 861, "ceo": [861, 880], "everydai": 861, "peer": 861, "privileg": 861, "servic": [861, 880], "scope": 861, "strateg": 861, "polici": [861, 880], "nomin": 861, "willing": 861, "capac": 861, "infrastructur": [861, 880], "outreach": 861, "deliber": 861, "divers": 861, "viewpoint": 861, "talent": 861, "grace": 861, "retir": 861, "eject": 861, "deem": 861, "harm": 861, "financi": 861, "employ": 861, "disclos": 861, "recus": 861, "themself": 861, "sparingli": 861, "apach": 861, "veto": 861, "rational": 861, "opinion": 861, "anticip": [861, 880], "suffic": 861, "usurp": 861, "countri": 861, "gift": 861, "partnership": 861, "approv": 861, "commenc": 861, "laps": 861, "pursu": 861, "monei": 861, "donor": 861, "umbrella": 861, "trademark": 861, "invit": 861, "waiv": 861, "copyright": 861, "mole": 862, "sensibl": 862, "femtotesla": 862, "typecast": 862, "unread": [862, 880], "electrocardiographi": 862, "electromyographi": 862, "celsiu": 862, "channels_3_and_4": 862, "boldsymbol": 862, "c_0": 862, "g_": 862, "infti": 862, "r_j": 862, "t_d": 862, "underbrac": 862, "b_": 862, "b_n": 862, "dotso": 862, "uc_n": 862, "constitut": 862, "orthonorm": 862, "c_e": 862, "complement": 862, "perp": 862, "uu": 862, "segonn": 862, "_brain_surfac": 862, "_inner_skull_surfac": 862, "_outer_skull_surfac": 862, "_outer_skin_surfac": 862, "availablili": 862, "fov": 862, "dcm2niix": 862, "mne_organize_dicom": 862, "flash05": 862, "fat32": 862, "mri_ms_fitparm": 862, "mri_synthes": 862, "fsl_rigid_regist": 862, "flash5_reg": 862, "cor": 862, "mri_make_bem_surfac": 862, "tringul": 862, "t_x": 862, "ti": 862, "mm3": 862, "mnitalairach": 862, "mni305": 862, "y_2": 862, "z_2": 862, "y_1": 862, "z_1": 862, "x_0": 862, "y_0": 862, "z_0": 862, "x_k": 862, "y_k": 862, "z_k": 862, "jk": 862, "9688": [862, 880], "0485": 862, "9189": 862, "t_1": 862, "s_1": 862, "s_n": 862, "t_2": 862, "filessepar": 862, "t_3": 862, "mghformat": 862, "t_4": 862, "hardcod": 862, "idiosyncrasi": 862, "conceiv": 862, "s_p": 862, "50mm": 862, "r_0": 862, "e_x": 862, "e_i": 862, "e_z": 862, "r_c": 862, "r_d": 862, "0d": 862, "n_k": 862, "w_": 862, "kp": 862, "sixteen": 862, "tm": [862, 865, 880], "centerpoint": 862, "mne_list_coil_def": 862, "3012": 862, "8mm": 862, "3013": 862, "4001": 862, "wh": 862, "3600": 862, "4003": 862, "4004": 862, "4005": 862, "5001": 862, "5002": 862, "5003": 862, "5004": 862, "6001": 862, "diamet": 862, "nx": 862, "ny": 862, "nz": [862, 880], "r_1": 862, "dotsc": 862, "r_m": 862, "mu_1": 862, "mu_m": 862, "int_": 862, "v_": 862, "ly": 862, "average_forward_solut": [862, 870], "ensu": 862, "posteriori": 862, "viabl": 862, "3p": 862, "unconstrain": 862, "mx": 862, "smoother": [862, 880], "arriv": 862, "bigl": 862, "bigr": 862, "u_c": 862, "lambda_c": 862, "grg": 862, "possess": 862, "varepsilon_k": 862, "sigma_k": 862, "rout": 862, "superscript": 862, "v_k": 862, "w_k": 862, "propto": 862, "dimensionless": 862, "tendenc": 862, "divis": [862, 880], "2_k": 862, "g_i": 862, "u_": 862, "lambda_": 862, "_i": 862, "noiseless": 862, "misfit": 862, "pi_k": 862, "recolor": 862, "eigenfield": 862, "n_d": 862, "a_d": 862, "postsynapt": 862, "microscop": 862, "rigidli": 862, "floc": 862, "thereaft": 862, "vloc": 862, "favor": [862, 880], "1p": 862, "2p": 862, "l_": 862, "eff": 862, "w_i": 862, "x_i": 862, "c_y": 862, "l_i": 862, "w_1": 862, "w_2": 862, "l_1": 862, "l_2": 862, "supposedli": 862, "x_j": 862, "t_j": 862, "biject": 862, "smudg": 862, "n_j": 862, "prod_": 862, "kindli": 863, "function_nam": 863, "w3school": 864, "carpentri": 864, "lesson": 864, "fiff_": 865, "startup": 865, "mne_ex": 865, "fiff_setup_read_raw": 865, "fiff_read_raw_seg": 865, "fiff_find_evok": 865, "fiff_read_bad_channel": 865, "fiff_read_ctf_comp": 865, "fiff_read_evok": 865, "fiff_read_evoked_al": 865, "fiff_read_meas_info": 865, "fiff_read_mri": 865, "fiff_read_proj": 865, "fiff_read_raw_segment_tim": 865, "fiff_pick_channel": 865, "fiff_pick_channels_evok": 865, "fiff_pick_info": 865, "fiff_pick_typ": 865, "fiff_pick_types_evok": 865, "fiff_invert_transform": 865, "fiff_reset_ch_po": 865, "fiff_transform_eeg_ch": 865, "fiff_transform_meg_ch": 865, "fiff_define_const": 865, "fiff_dir_tree_find": 865, "fiff_list_dir_tre": 865, "fiff_make_dir_tre": 865, "fiff_open": 865, "fiff_read_named_matrix": 865, "fiff_read_tag": 865, "fiff_read_tag_info": 865, "fiff_split_name_list": 865, "fiff_end_block": 865, "fiff_end_fil": 865, "fiff_start_block": 865, "fiff_start_fil": 865, "fiff_write_ch_info": 865, "fiff_write_coord_tran": 865, "fiff_write_ctf_comp": 865, "fiff_write_dig_point": 865, "fiff_write_complex": 865, "fiff_write_complex_matrix": 865, "fiff_write_doubl": 865, "fiff_write_double_complex": 865, "fiff_write_double_complex_matrix": 865, "fiff_write_double_matrix": 865, "fiff_write_evok": 865, "repons": 865, "fiff_write_float": 865, "fiff_write_float_matrix": 865, "fiff_write_id": 865, "fiff_write_int": 865, "fiff_write_int_matrix": 865, "fiff_write_name_list": 865, "fiff_write_named_matrix": 865, "fiff_write_proj": 865, "fiff_write_short": 865, "fiff_write_str": 865, "fiff_finish_writing_raw": 865, "fiff_start_writing_raw": 865, "fiff_write_dig_fil": 865, "fiff_write_raw_buff": 865, "mne_add_coil_def": 865, "mne_load_coil_def": 865, "mne_compensate_to": 865, "mne_get_current_comp": 865, "mne_make_compens": 865, "mne_make_projector_info": 865, "mne_make_projector": 865, "mne_set_current_comp": 865, "mne_pick_channels_cov": 865, "mne_pick_channels_forward": 865, "mne_read_bem_surfac": 865, "mne_read_cov": 865, "mne_read_epoch": 865, "mne_read_ev": 865, "mne_read_forward_solut": 865, "mne_read_inverse_oper": 865, "mne_read_morph_map": 865, "mne_read_noise_cov": 865, "mne_read_source_spac": 865, "mne_write_cov": 865, "mne_write_cov_fil": 865, "mne_write_ev": 865, "mne_write_inverse_sol_stc": 865, "mne_write_inverse_sol_w": 865, "mne_read_stc_fil": 865, "mne_read_stc_file1": 865, "mne_read_w_fil": 865, "mne_read_w_file1": 865, "mne_write_stc_fil": 865, "mne_write_stc_file1": 865, "mne_write_w_fil": 865, "mne_write_w_file1": 865, "mne_read_label_fil": 865, "mne_write_label_fil": 865, "mne_label_time_cours": 865, "mne_read_curvatur": 865, "mne_read_surfac": 865, "mne_reduce_surfac": 865, "reducepatch": 865, "mne_write_surfac": 865, "mne_block_diag": 865, "mne_combine_xyz": 865, "mne_file_nam": 865, "mne_find_channel": 865, "mne_find_source_space_hemi": 865, "mne_fread3": 865, "mne_fwrite3": 865, "mne_make_combined_event_fil": 865, "mne_omit_first_lin": 865, "mne_setup_toolbox": 865, "mne_transform_coordin": 865, "mne_collect_transform": 865, "mne_transpose_named_matrix": 865, "mne_transform_source_space_to": 865, "mne_ex_average_epoch": 865, "mne_ex_cancel_nois": 865, "mne_ex_compute_invers": 865, "mne_ex_data_set": 865, "mne_ex_evoked_grad_amp": 865, "mne_ex_read_epoch": 865, "mne_ex_read_evok": 865, "mne_ex_read_raw": 865, "mne_ex_read_write_raw": 865, "mne_copy_processing_histori": 865, "revis": 865, "coil_geometry_inform": 865, "fiffb_meas_info": 865, "mne_compute_raw_invers": 865, "fiffv_meg_ch": 865, "fiffv_ref_meg_ch": 865, "fiffv_eef_ch": 865, "fiffv_mcg_ch": 865, "mcg": 865, "fiffv_stim_ch": 865, "fiffv_eog_ch": 865, "fiffv_emg_ch": 865, "fiffv_ecg_ch": 865, "fiffv_misc_ch": 865, "fiffv_resp_ch": 865, "fiffv_coord_unknown": 865, "fiffv_coord_devic": 865, "fiffv_coord_isotrak": 865, "fiffv_coord_hpi": 865, "fiffv_coord_mri_slic": 865, "fiffv_coord_mri_displai": 865, "fiffv_coord_dicom_devic": 865, "fiffv_coord_imaging_devic": 865, "fiffv_mne_coord_tufts_eeg": 865, "tuft": 865, "fiffv_mne_coord_ctf_devic": 865, "1001": 865, "fiffv_mne_coord_ctf_head": 865, "1004": 865, "fiffv_aspect_averag": 865, "fiffv_aspect_std_err": 865, "fiffv_aspect_singl": 865, "fiffv_aspect_subaverag": 865, "fiffv_aspect_altaverag": 865, "fiffv_aspect_sampl": 865, "fiffv_aspect_power_dens": 865, "fiffv_aspect_dipole_wav": 865, "fiffv_bem_surf_id_unknown": 865, "fiffv_bem_surf_id_brain": 865, "fiffv_bem_surf_id_skul": 865, "fiffv_bem_surf_id_head": 865, "fiffv_point_hpi": 865, "fiffv_point_ecg": 865, "fiffv_point_extra": 865, "fiffv_point_lpa": 865, "fiffv_point_rpa": 865, "fiffv_mne_meg": 865, "fiffv_mne_eeg": 865, "fiffv_mne_meg_eeg": 865, "fiffv_mne_unknown_cov": 865, "fiffv_mne_noise_cov": 865, "fiffv_mne_sensor_cov": 865, "fiffv_mne_source_cov": 865, "fiffv_mne_fmri_prior_cov": 865, "fiffv_mne_signal_cov": 865, "fiffv_mne_depth_prior_cov": 865, "fiffv_mne_orient_prior_cov": 865, "fiffv_proj_item_non": 865, "fiffv_proj_item_dip_fix": 865, "fiffv_proj_item_dip_rot": 865, "fiffv_proj_item_homog_grad": 865, "fiffv_proj_item_homog_field": 865, "fiffv_proj_item_eeg_avref": 865, "uint32": 865, "parent_id": 865, "nent": 865, "nchild": 865, "1970": [865, 880], "fiffv_coord": 865, "fiffv_mne_coord": 865, "fiff_point": 865, "num_point": 865, "char": [865, 880], "fv": 865, "struct": 865, "fiff_eeg_ch": 865, "coil_tran": 865, "eeg_loc": 865, "six": 865, "10unit_mul": 865, "fiffv_proj_item": 865, "fiffv_mne_proj_item": 865, "decalibr": 865, "row_cal": 865, "col_cal": 865, "tri_area": 865, "tri_cent": 865, "centroid": 865, "tri_nn": 865, "mne_add_patch_info": 865, "sol_grad": 865, "sing": 865, "eigen_lead": 865, "eigen_field": 865, "source_cov": 865, "cond1": 866, "cond2": 866, "addpath": 866, "pop_fileio": 866, "pop_eegfiltnew": 866, "pop_averef": 866, "pop_select": 866, "pop_runica": 866, "pop_binica": 866, "pop_compprop": 866, "comp_num": 866, "winhandl": 866, "comphead": 866, "pop_selectcomp": 866, "list_of_components_to_exclud": 866, "pop_epoch": 866, "eeg_epoch": 866, "pop_timtopo": 866, "pop_compareerp": 866, "eeg_epochs1": 866, "eeg_epochs2": 866, "pop_saveset": 866, "lfreq": 866, "hfreq": 866, "filtered_raw": 866, "bdfl": 867, "nutmegtrip": 868, "youtub": [868, 880], "cluster_based_statist": 868, "patsi": 868, "dmatric": 868, "4859": 868, "2852": 868, "3585": 868, "openneuro": 868, "6687": 868, "adult": 868, "dcm": 868, "kymata": 868, "watch": 868, "bnci": 868, "horizon": 868, "pde": 868, "swig": 868, "ambit": 868, "useless": 868, "recruit": 868, "8221": 868, "rudimentari": 868, "crossspectrum": 868, "multitaperspectrum": 868, "6290": 868, "7671": 868, "8026": 868, "8724": 868, "9045": 868, "pr": 868, "6609": 868, "6629": 868, "6672": 868, "6673": 868, "8397": 868, "8892": 868, "mnefun": 868, "ptfce": 868, "mayavi": [868, 880], "7162": 868, "cloud": 868, "dask": 868, "czi": 868, "7751": 868, "docker": 868, "underscore_cas": 870, "themat": 870, "read_raw_curri": [870, 880], "read_raw_nedf": [870, 880], "read_mrk": 870, "get_meg_helmet_surf": 870, "get_volume_labels_from_src": [870, 880], "parse_config": 870, "read_evoked_besa": [870, 880], "read_evokeds_mff": [870, 880], "read_morph_map": [870, 880], "read_reject_paramet": 870, "write_label": 870, "export_epoch": [870, 880], "export_evok": [870, 880], "add_background_imag": 870, "compare_fiff": 870, "mne_analyze_colormap": 870, "plot_csd": 870, "plot_epochs_psd_topomap": [870, 880], "plot_evok": [870, 880], "plot_evoked_topomap": [870, 880], "plot_evoked_joint": [870, 880], "plot_ica_properti": [870, 880], "plot_ica_scor": [870, 880], "plot_ica_overlai": [870, 880], "plot_montag": [870, 880], "plot_raw_psd": [870, 880], "plot_regression_weight": [870, 880], "plot_volume_source_estim": [870, 880], "plot_tfr_topomap": [870, 880], "plot_topo_image_epoch": [870, 880], "get_3d_backend": [870, 880], "use_3d_backend": [870, 880], "close_3d_figur": 870, "close_all_3d_figur": 870, "get_browser_backend": [870, 880], "equalize_channel": [870, 880], "annotate_nan": [870, 880], "compute_fine_calibr": [870, 880], "compute_maxwell_basi": [870, 880], "ica_find_ecg_ev": 870, "ica_find_eog_ev": 870, "equalize_bad": [870, 880], "maxwell_filter_prepare_emptyroom": [870, 880], "read_eog_regress": 870, "realign_raw": [870, 880], "regress_artifact": [870, 880], "read_ica_eeglab": [870, 880], "read_fine_calibr": 870, "write_fine_calibr": 870, "short_channel": [870, 880], "estimate_ringing_sampl": 870, "extract_chpi_locs_kit": [870, 880], "concatenate_ev": 870, "count_ev": [870, 880], "match_event_nam": [870, 880], "shift_time_ev": [870, 880], "pick_channels_cov": 870, "compute_whiten": [870, 880], "write_fiduci": 870, "create_default_subject": [870, 880], "head_to_mni": 870, "head_to_mri": [870, 880], "add_source_space_dist": [870, 880], "decimate_surfac": [870, 880], "complete_surface_info": 870, "distance_to_bem": [870, 880], "compute_rank_invers": 870, "read_beamform": [870, 880], "grade_to_tri": 870, "grade_to_vertic": 870, "grow_label": [870, 880], "random_parcel": 870, "transform_surface_to": [870, 880], "get_decimated_surfac": [870, 880], "pick_channels_csd": 870, "dpss_window": [870, 880], "cwt": 870, "ttest_ind_no_p": [870, 880], "spatial_dist_adjac": [870, 880], "spatial_tris_adjac": [870, 880], "spatial_inter_hemi_adjac": [870, 880], "spatio_temporal_src_adjac": [870, 880], "spatio_temporal_dist_adjac": [870, 880], "select_source_in_label": 870, "psdestim": 870, "timefrequ": [870, 880], "open_doc": [870, 880], "set_log_fil": 870, "get_cuda_memori": 870, "set_cuda_devic": [870, 880], "11469": 880, "sawradip": 880, "saha": 880, "11458": 880, "binn": 880, "11465": 880, "hyonyoung": 880, "shin": 880, "11366": 880, "11470": 880, "ebert": 880, "scheltienn": 880, "11078": 880, "barth\u00e9lemi": 880, "11397": 880, "11401": 880, "11407": 880, "11388": 880, "11556": 880, "11419": 880, "11430": 880, "11440": 880, "11436": 880, "microelectrod": 880, "11567": 880, "transform_point": 880, "11572": 880, "11479": 880, "stone": 880, "setuptool": 880, "11454": 880, "arn": 880, "pelzer": 880, "sanit": 880, "11399": 880, "splash": 880, "11398": 880, "11402": 880, "11421": 880, "11427": 880, "11441": 880, "11450": 880, "11489": 880, "inconsist": 880, "11473": 880, "11499": 880, "11409": 880, "11537": 880, "11562": 880, "11563": 880, "11521": 880, "11569": 880, "11502": 880, "gerster": 880, "11500": 880, "aligned_ct": 880, "warp_montage_volum": 880, "11333": 880, "tooma": 880, "anij\u00e4rv": 880, "11237": 880, "11236": 880, "11241": 880, "jevri": 880, "repr": 880, "11357": 880, "11359": 880, "11096": 880, "11353": 880, "11283": 880, "11329": 880, "11375": 880, "hennei": 880, "11310": 880, "santeri": 880, "ruuskanen": 880, "11289": 880, "mauricio": 880, "cesped": 880, "tenorio": 880, "11235": 880, "hasegan": 880, "11245": 880, "dinara": 880, "issagaliyeva": 880, "jennif": 880, "behnk": 880, "hakimeh": 880, "aslsardroud": 880, "pavel": 880, "navratil": 880, "ear_left": 880, "ear_right": 880, "11255": 880, "11263": 880, "torr": 880, "ortiz": 880, "11351": 880, "enzo": 880, "altamiranda": 880, "reject_": 880, "11244": 880, "11303": 880, "11290": 880, "wrongli": 880, "11248": 880, "11258": 880, "erkka": 880, "heinila": 880, "outli": 880, "11298": 880, "11345": 880, "11311": 880, "11300": 880, "11340": 880, "11318": 880, "11346": 880, "11344": 880, "errantli": 880, "11347": 880, "11293": 880, "11322": 880, "11369": 880, "11361": 880, "nowadai": 880, "interp_from": 880, "interp_kind": 880, "11371": 880, "brayet": 880, "luka": 880, "hecker": 880, "omer": 880, "shubi": 880, "merk": 880, "11073": 880, "10656": 880, "10784": 880, "11011": 880, "11006": 880, "6233": 880, "10986": 880, "11048": 880, "8639": 880, "11083": 880, "11051": 880, "11020": 880, "11075": 880, "valerii": 880, "chirkov": 880, "electroderm": 880, "11090": 880, "11108": 880, "19080": 880, "11099": 880, "11077": 880, "11094": 880, "11095": 880, "11186": 880, "eduard": 880, "ort": 880, "11116": 880, "11147": 880, "11150": 880, "11185": 880, "11154": 880, "11141": 880, "11232": 880, "11159": 880, "11196": 880, "gemein": 880, "unlabel": 880, "11074": 880, "sebastiaan": 880, "mathot": 880, "11072": 880, "chetan": 880, "gohil": 880, "11004": 880, "carlstr\u00f6m": 880, "schad": 880, "11190": 880, "wetzel": 880, "11019": 880, "sena": 880, "11049": 880, "11084": 880, "11145": 880, "11182": 880, "11040": 880, "marian": 880, "dovgialo": 880, "11171": 880, "11181": 880, "11193": 880, "11102": 880, "11081": 880, "11191": 880, "6870": 880, "simeon": 880, "11197": 880, "11212": 880, "11203": 880, "11201": 880, "h\u00fcseyin": 880, "orkun": 880, "elma": 880, "deprecationwarn": 880, "11123": 880, "11050": 880, "show_toolbar": 880, "10184": 880, "skirt": 880, "add_channels_epoch": 880, "11180": 880, "11046": 880, "welzel": 880, "luzpaz": 880, "10974": 880, "ilia": 880, "machaira": 880, "10942": 880, "tziona": 880, "nessaiv": 880, "10922": 880, "mingjian": 880, "he": 880, "10736": 880, "jordan": 880, "drew": 880, "10632": 880, "courtemanch": 880, "10515": 880, "alessandro": 880, "tonin": 880, "10555": 880, "powel": 880, "10627": 880, "evan": 880, "hathawai": 880, "10615": 880, "10501": 880, "10460": 880, "10544": 880, "10720": 880, "10464": 880, "10699": 880, "10534": 880, "10568": 880, "10567": 880, "10533": 880, "10557": 880, "10591": 880, "10571": 880, "10587": 880, "10125": 880, "benerradi": 880, "10606": 880, "10610": 880, "10614": 880, "10611": 880, "10633": 880, "10661": 880, "10668": 880, "10681": 880, "timeformat": 880, "yyyi": 880, "_convert_tim": 880, "10674": 880, "kern": 880, "10694": 880, "10572": 880, "10373": 880, "10734": 880, "michiru": 880, "kaneda": 880, "10284": 880, "10749": 880, "10788": 880, "10892": 880, "10940": 880, "vref": 880, "10823": 880, "huberti": 880, "10979": 880, "_project_onto_surfac": 880, "return_nn": 880, "10930": 880, "10927": 880, "reza": 880, "nasri": 880, "hypnodyn": 880, "zmax": 880, "10754": 880, "frederik": 880, "weber": 880, "10718": 880, "t1t2": 880, "10639": 880, "toivonen": 880, "10217": 880, "wang": 880, "10517": 880, "10470": 880, "dold": 880, "10485": 880, "10487": 880, "10500": 880, "10491": 880, "10662": 880, "10866": 880, "10957": 880, "10513": 880, "10493": 880, "10504": 880, "10705": 880, "10521": 880, "10547": 880, "10543": 880, "10912": 880, "10560": 880, "10619": 880, "10618": 880, "shoorangiz": 880, "10638": 880, "10664": 880, "honor": 880, "10686": 880, "10685": 880, "10688": 880, "8754": 880, "10703": 880, "10730": 880, "10753": 880, "10765": 880, "po6": 880, "blender": 880, "10778": 880, "10802": 880, "10471": 880, "10851": 880, "10898": 880, "10990": 880, "10968": 880, "10936": 880, "10963": 880, "10978": 880, "10531": 880, "bilinear": 880, "set_interpol": 880, "10617": 880, "10715": 880, "10950": 880, "10925": 880, "10945": 880, "adelin": 880, "fecker": 880, "ciok": 880, "archit": 880, "singhal": 880, "ashlei": 880, "beaslei": 880, "dominiqu": 880, "makowski": 880, "hamid": 880, "maymandi": 880, "naveen": 880, "srinivasan": 880, "sondr": 880, "foslien": 880, "10396": 880, "10089": 880, "senwen": 880, "deng": 880, "10076": 880, "zerfowski": 880, "10054": 880, "etienn": 880, "montalivet": 880, "10174": 880, "veillett": 880, "10307": 880, "10281": 880, "9952": 880, "10379": 880, "9922": 880, "9978": 880, "9994": 880, "9929": 880, "concis": 880, "__repr__": 880, "10042": 880, "sosulski": 880, "10056": 880, "10077": 880, "10102": 880, "10058": 880, "10109": 880, "10115": 880, "10119": 880, "10114": 880, "10116": 880, "dpi": 880, "10126": 880, "10129": 880, "10135": 880, "10142": 880, "10166": 880, "10175": 880, "10182": 880, "10186": 880, "10185": 880, "9969": 880, "10019": 880, "10200": 880, "10255": 880, "10202": 880, "9972": 880, "10206": 880, "10220": 880, "10230": 880, "10249": 880, "10243": 880, "10212": 880, "ui": 880, "10222": 880, "10183": 880, "10247": 880, "10297": 880, "10299": 880, "10330": 880, "10384": 880, "10417": 880, "10418": 880, "10408": 880, "subsurfac": 880, "10421": 880, "joshua": 880, "teve": 880, "latin": 880, "10429": 880, "eberlein": 880, "10431": 880, "rawmff": 880, "10304": 880, "10361": 880, "shift_jist": 880, "10356": 880, "10093": 880, "adina": 880, "wagner": 880, "loadtxt": 880, "10189": 880, "federico": 880, "zamberlan": 880, "nikolai": 880, "chapochnikov": 880, "9957": 880, "led": 880, "9966": 880, "9998": 880, "9968": 880, "alphanumer": 880, "10002": 880, "9975": 880, "9980": 880, "9990": 880, "suboptim": 880, "9991": 880, "10004": 880, "9970": 880, "10021": 880, "10040": 880, "10358": 880, "10047": 880, "10399": 880, "10073": 880, "10087": 880, "annotate_": 880, "meas_tim": 880, "10067": 880, "10118": 880, "10074": 880, "10082": 880, "10112": 880, "trip": 880, "10177": 880, "10127": 880, "10132": 880, "10095": 880, "10176": 880, "stout": 880, "10210": 880, "10235": 880, "10267": 880, "german": 880, "de_d": 880, "french": 880, "fr_fr": 880, "italian": 880, "it_it": 880, "10277": 880, "10292": 880, "10309": 880, "10265": 880, "10415": 880, "initial_valu": 880, "10289": 880, "10324": 880, "10342": 880, "10347": 880, "10313": 880, "10400": 880, "10335": 880, "mislead": 880, "10393": 880, "10392": 880, "10401": 880, "9960": 880, "10039": 880, "10348": 880, "annotate_flat": 880, "10143": 880, "max_ori_out": 880, "10366": 880, "10323": 880, "tempita": 880, "10211": 880, "julia": 880, "guiomar": 880, "niso": 880, "gal\u00e1n": 880, "steve": 880, "matindi": 880, "hartmann": 880, "julien": 880, "derollepot": 880, "xiaokai": 880, "xia": 880, "bannier": 880, "darin": 880, "erat": 880, "sleiter": 880, "gate": 880, "evgeni": 880, "goldstein": 880, "riessariu": 880, "stargardski": 880, "9801": 880, "9575": 880, "nirsport2": 880, "9348": 880, "9401": 880, "9376": 880, "9430": 880, "9481": 880, "9637": 880, "9872": 880, "9782": 880, "9858": 880, "9640": 880, "6888": 880, "9892": 880, "9725": 880, "ckdtree": 880, "9568": 880, "9643": 880, "9369": 880, "9427": 880, "9391": 880, "9396": 880, "9424": 880, "9403": 880, "9463": 880, "9431": 880, "9443": 880, "9406": 880, "9438": 880, "datablock": 880, "acquist": 880, "9437": 880, "raimondo": 880, "9445": 880, "9419": 880, "9458": 880, "9444": 880, "9503": 880, "9484": 880, "9697": 880, "9468": 880, "9514": 880, "erica": 880, "9541": 880, "9519": 880, "9525": 880, "9529": 880, "9558": 880, "9555": 880, "9553": 880, "insens": 880, "9544": 880, "9556": 880, "9578": 880, "9570": 880, "9545": 880, "9540": 880, "9601": 880, "9605": 880, "abort": 880, "9614": 880, "9516": 880, "9618": 880, "9658": 880, "9585": 880, "9682": 880, "9684": 880, "9789": 880, "9694": 880, "9586": 880, "9742": 880, "9796": 880, "9763": 880, "9784": 880, "9810": 880, "revamp": 880, "9754": 880, "9847": 880, "9860": 880, "9861": 880, "9862": 880, "9863": 880, "9871": 880, "9881": 880, "9891": 880, "9795": 880, "9800": 880, "9613": 880, "9845": 880, "9851": 880, "9869": 880, "9859": 880, "9687": 880, "9708": 880, "9706": 880, "9378": 880, "9381": 880, "9712": 880, "9719": 880, "chronolog": 880, "9765": 880, "9849": 880, "9897": 880, "9920": 880, "9384": 880, "9404": 880, "9435": 880, "9531": 880, "9447": 880, "assertionerror": 880, "9612": 880, "9831": 880, "protect": 880, "9522": 880, "9485": 880, "9513": 880, "9489": 880, "9524": 880, "9603": 880, "9528": 880, "imposs": 880, "9893": 880, "9535": 880, "9564": 880, "9565": 880, "9629": 880, "9771": 880, "9607": 880, "9663": 880, "9630": 880, "9580": 880, "9758": 880, "dollar": 880, "9695": 880, "9746": 880, "9799": 880, "9804": 880, "9777": 880, "9780": 880, "9933": 880, "9864": 880, "9873": 880, "9940": 880, "9867": 880, "9904": 880, "pysurf": 880, "kit2fiff": 880, "mne_kit_gui": 880, "9505": 880, "9596": 880, "prox": 880, "outperform": 880, "9608": 880, "9493": 880, "9685": 880, "has_": 880, "_data": 880, "9781": 880, "add_figs_to_sect": 880, "add_slider_to_sect": 880, "add_images_to_sect": 880, "add_bem_to_sect": 880, "add_htmls_to_sect": 880, "sort_sect": 880, "9815": 880, "center_cmap": 880, "9843": 880, "detect_artifact": 880, "9909": 880, "fede": 880, "gansheng": 880, "banvil": 880, "josh": 880, "koen": 880, "sumalyo": 880, "datta": 880, "pade": 880, "koehler": 880, "rotem": 880, "falach": 880, "sanderson": 880, "enrico": 880, "varano": 880, "judi": 880, "zhu": 880, "matteo": 880, "anelli": 880, "apoorva": 880, "karek": 880, "silvia": 880, "cotroneo": 880, "maggi": 880, "9192": 880, "9285": 880, "9278": 880, "9124": 880, "9203": 880, "9174": 880, "refactor": 880, "9088": 880, "9156": 880, "9043": 880, "9096": 880, "8867": 880, "8739": 880, "9169": 880, "yokogawa": 880, "8813": 880, "8799": 880, "ipyvtk_simpl": 880, "8503": 880, "8346": 880, "8896": 880, "8723": 880, "8738": 880, "8789": 880, "9268": 880, "8790": 880, "8697": 880, "8801": 880, "8829": 880, "8744": 880, "8762": 880, "9037": 880, "8793": 880, "9262": 880, "keypress": 880, "8806": 880, "starstim": 880, "enobio": 880, "8734": 880, "tristan": 880, "stenner": 880, "8760": 880, "8783": 880, "8822": 880, "8771": 880, "8805": 880, "8794": 880, "auto_clos": 880, "8730": 880, "8841": 880, "yu": 880, "luo": 880, "8858": 880, "checker": 880, "pylanc": 880, "8862": 880, "8874": 880, "interobail": 880, "8868": 880, "qt_mac_wants_lay": 880, "8959": 880, "8879": 880, "8834": 880, "9023": 880, "9015": 880, "9087": 880, "9113": 880, "9118": 880, "9103": 880, "9175": 880, "9149": 880, "9166": 880, "bierer": 880, "9210": 880, "9136": 880, "9241": 880, "9261": 880, "9269": 880, "9270": 880, "9141": 880, "9347": 880, "misbehav": 880, "8013": 880, "9207": 880, "9187": 880, "9151": 880, "9162": 880, "9152": 880, "x_label": 880, "9115": 880, "9062": 880, "8989": 880, "spectral_connect": 880, "8839": 880, "8844": 880, "macosx": 880, "8688": 880, "8983": 880, "superset": 880, "8675": 880, "8713": 880, "8689": 880, "8954": 880, "8884": 880, "num_sampl": 880, "duration_in_sec": 880, "8712": 880, "8780": 880, "8804": 880, "8842": 880, "8857": 880, "9315": 880, "8956": 880, "9284": 880, "9317": 880, "8845": 880, "8811": 880, "bailei": 880, "8736": 880, "8831": 880, "8728": 880, "8731": 880, "8996": 880, "8752": 880, "8759": 880, "8775": 880, "8800": 880, "8817": 880, "8821": 880, "8856": 880, "8965": 880, "8985": 880, "8891": 880, "8963": 880, "9109": 880, "9178": 880, "9252": 880, "9027": 880, "9236": 880, "9246": 880, "9305": 880, "9277": 880, "9099": 880, "plot_sensors_connect": 880, "cbar_label": 880, "9248": 880, "read_select": 880, "8870": 880, "tf_dic": 880, "9122": 880, "9033": 880, "ana": 880, "radanov": 880, "magalvan": 880, "mista": 880, "christina": 880, "zhao": 880, "giorgio": 880, "marinato": 880, "jori": 880, "den": 880, "bossch": 880, "gensollen": 880, "treguer": 880, "austin": 880, "hurst": 880, "aniket": 880, "pradhan": 880, "hongjiang": 880, "kuziek": 880, "qianliang": 880, "tod": 880, "flak": 880, "8354": 880, "7070": 880, "imgag": 880, "7717": 880, "kyle": 880, "mathewson": 880, "8275": 880, "8445": 880, "keith": 880, "doell": 880, "8553": 880, "8351": 880, "8190": 880, "8539": 880, "8379": 880, "8366": 880, "8642": 880, "8447": 880, "8323": 880, "8449": 880, "8402": 880, "8460": 880, "8532": 880, "8482": 880, "8608": 880, "8502": 880, "tqdm": 880, "8515": 880, "8622": 880, "8381": 880, "8584": 880, "8442": 880, "8534": 880, "8624": 880, "8519": 880, "8452": 880, "8415": 880, "8395": 880, "8658": 880, "cascad": 880, "8633": 880, "8580": 880, "8400": 880, "test_egi": 880, "mandatorili": 880, "8474": 880, "8339": 880, "8558": 880, "s390x": 880, "8618": 880, "8594": 880, "8610": 880, "8285": 880, "8344": 880, "8318": 880, "8637": 880, "8306": 880, "8448": 880, "8283": 880, "name_split": 880, "01_meg": 880, "name_meg": 880, "8464": 880, "8343": 880, "8425": 880, "8317": 880, "8663": 880, "8320": 880, "8303": 880, "8484": 880, "8349": 880, "max_pca_compon": 880, "max_pca_components_": 880, "8321": 880, "8341": 880, "everyhwer": 880, "8368": 880, "8393": 880, "8416": 880, "8434": 880, "8486": 880, "8491": 880, "8492": 880, "8545": 880, "8590": 880, "tukei": 880, "8542": 880, "8520": 880, "8589": 880, "8564": 880, "8605": 880, "8374": 880, "8356": 880, "8389": 880, "justu": 880, "schwabed": 880, "mad": 880, "jensen": 880, "mikolaj": 880, "rahul": 880, "nadkarni": 880, "lau": 880, "m\u00f8ller": 880, "andersen": 880, "sedivi": 880, "donckt": 880, "svea": 880, "meyer": 880, "lx37": 880, "rai": 880, "n_iter_sdr": 880, "immut": 880, "fxaa": 880, "_split": 880, "_part": 880, "read_raw_xxx": 880, "simpler": 880, "permit": 880, "outermost": 880, "setup_forward_model": 880, "conjug": 880, "throw": 880, "spatio_temporal_src_connect": 880, "find_ch_connect": 880, "read_ch_connect": 880, "spatial_dist_connect": 880, "spatial_inter_hemi_connect": 880, "spatial_src_connect": 880, "spatial_tris_connect": 880, "spatio_temporal_dist_connect": 880, "spatio_temporal_tris_connect": 880, "normalize_fwd": 880, "stc_mix": 880, "read_dig_captrack": 880, "spell": 880, "captrack": 880, "mark_flat": 880, "alejandro": 880, "weinstein": 880, "anton": 880, "nikola": 880, "waniek": 880, "harmelen": 880, "sara": 880, "sommariva": 880, "chapochn": 880, "mshader": 880, "sophi": 880, "herbst": 880, "victor": 880, "ferat": 880, "mohammad": 880, "daneshzand": 880, "reppling": 880, "plv": 880, "dmitrii": 880, "altukhov": 880, "epochs_color": 880, "prepare_bem_model": 880, "compromis": 880, "roc_auc_ovo": 880, "roc_auc_ovo_weight": 880, "sebastian": 880, "old_tim": 880, "subprocess": 880, "htp": 880, "insuffici": 880, "demetr": 880, "kosta": 880, "gridsearchcv": 880, "chun": 880, "hui": 880, "henrich": 880, "kolkhorst": 880, "fu": 880, "geoff": 880, "brookshir": 880, "eegmi_url": 880, "ramiro": 880, "gatti": 880, "get_channel_type_const": 880, "bump": 880, "tandem": 880, "point_spread_funct": 880, "cross_talk_funct": 880, "ariel": 880, "rokem": 880, "jos\u00e9": 880, "garc\u00eda": 880, "moham": 880, "sherif": 880, "nataliia": 880, "kozhemiako": 880, "legrand": 880, "f\u00e9rat": 880, "theodor": 880, "papadopoulo": 880, "markerfil": 880, "dirk": 880, "g\u00fctlin": 880, "10x": 880, "jit": 880, "ryb\u00e1\u0159": 880, "abram": 880, "hindl": 880, "eberhard": 880, "eich": 880, "radman": 880, "hidpi": 880, "pycord": 880, "read_montag": 880, "read_dig_montag": 880, "set_dig": 880, "update_ch_nam": 880, "raise_if_subset": 880, "_smsh_": 880, "_smartshield": 880, "max_tick": 880, "show_legend": 880, "biosig": 880, "nathali": 880, "gayraud": 880, "crist\u00f3bal": 880, "mo\u00ebnn": 880, "loccoz": 880, "mixin": 880, "lslclient": 880, "lsl": 880, "chala": 880, "mocklslstream": 880, "roujanski": 880, "fault": 880, "kovrig": 880, "n_pad": 880, "bruno": 880, "nicenboim": 880, "32bit": 880, "edge_": 880, "v0": 880, "retina": 880, "larri": 880, "eisenman": 880, "mishandl": 880, "haslach": 880, "clean_eog_ecg": 880, "jeythekei": 880, "_criterion": 880, "katarina": 880, "slama": 880, "synthesi": 880, "find_edf_ev": 880, "patch_info": 880, "castano": 880, "finder": 880, "rasmu": 880, "zetter": 880, "orgin": 880, "gsoc": 880, "molfes": 880, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 880, "gutstein": 880, "trig_shift_by_typ": 880, "read_annotations_brainvis": 880, "get_blas_func": 880, "_compute_covariance_auto": 880, "onewai": 880, "marcin": 880, "koculak": 880, "buildup": 880, "incom": 880, "bethard": 880, "dateutil": 880, "jasper": 880, "bosch": 880, "_current": 880, "unit_noise_gain": 880, "buildqa": 880, "read_annotations_eeglab": 880, "annotmap": 880, "runtimeexcept": 880, "morph_precomput": 880, "compute_morph_matrix": 880, "morph_data_precomput": 880, "pycuda": 880, "warn_explicit": 880, "save_stc_as_volum": 880, "stop_receive_thread": 880, "johan": 880, "meer": 880, "kambiz": 880, "tavabi": 880, "lorenz": 880, "esch": 880, "manu": 880, "sutela": 880, "perri": 880, "sergei": 880, "antopolskii": 880, "teekuninga": 880, "jochmann": 880, "dupr\u00e9": 880, "workaround": 880, "trainsform": 880, "dubarri": 880, "tf_mxne_optim": 880, "mxne_optim": 880, "multidictionari": 880, "image_mask": 880, "csd_epoch": 880, "csd_arrai": 880, "oleh": 880, "kozynet": 880, "lcmv_epoch": 880, "lcmv_raw": 880, "braboszcz": 880, "desislava": 880, "petkova": 880, "krzemi\u0144ski": 880, "hornberg": 880, "juergen": 880, "katrin": 880, "leinweb": 880, "yaroslav": 880, "halchenko": 880, "baptist": 880, "schiratti": 880, "utilis": 880, "dgap_l21l1": 880, "ramonapariciog": 880, "get_pos2d": 880, "\u03c7\u00b2": 880, "writabl": 880, "plot_roi_erpimage_by_rt": 880, "ansi": 880, "codepag": 880, "okba": 880, "bekhelifi": 880, "boggess": 880, "duemos": 880, "nielsen": 880, "luk\u00e1\u0161": 880, "hejtm\u00e1nek": 880, "_virtual": 880, "treatment": 880, "megsim": 880, "mrn": 880, "reformat": 880, "timedecod": 880, "generalizationacrosstim": 880, "plot_gat_tim": 880, "plot_gat_matrix": 880, "read_events_eeglab": 880, "plot_tran": 880, "tf_lcmv": 880, "scale_tim": 880, "scalings_tim": 880, "akshay0724": 880, "rudiuk": 880, "dykstra": 880, "laetitia": 880, "grabot": 880, "proulx": 880, "apariciogarcia": 880, "robin": 880, "tibor": 880, "schirrmeist": 880, "rodrigo": 880, "h\u00fcbner": 880, "toddler": 880, "fasttrack": 880, "brovelli": 880, "_plot_topo_onpick": 880, "nikla": 880, "wilm": 880, "rantala": 880, "_bad_drop": 880, "_filenam": 880, "pasler": 880, "predict_mod": 880, "chanloc": 880, "dgap_l21": 880, "band_pass_filt": 880, "band_stop_filt": 880, "low_pass_filt": 880, "high_pass_filt": 880, "eeg_sensor": 880, "typecheck": 880, "leonardo": 880, "barbosa": 880, "superflu": 880, "hermann": 880, "sonntag": 880, "jakub": 880, "kaczmarzyk": 880, "lorenzo": 880, "alfin": 880, "visconti": 880, "nick": 880, "foti": 880, "pop_prop": 880, "maryland": 880, "preview": 880, "raimundo": 880, "hid": 880, "martinez": 880, "pablo": 880, "aria": 880, "duma": 880, "fieldtripcli": 880, "get_data_as_epoch": 880, "unitsposit": 880, "mullin": 880, "bva": 880, "strictest": 880, "hojlund": 880, "niediek": 880, "add_eeg_ref": 880, "csd_compute_epoch": 880, "ev2": 880, "\u00b5": 880, "aru": 880, "unsupport": 880, "config_opt": 880, "epochsvector": 880, "favour": 880, "cwt_morlet": 880, "single_trial_pow": 880, "committ": 880, "camilo": 880, "lamu": 880, "f\u00e9lix": 880, "kraus": 880, "shlomo": 880, "poil": 880, "show_info": 880, "compute_raw_psd": 880, "compute_epochs_psd": 880, "614990234": 880, "00064103": 880, "99897607": 880, "train_tim": 880, "ecg_criterion": 880, "eog_criterion": 880, "natali": 880, "klein": 880, "coordinan": 880, "ware": 880, "score_mod": 880, "stimserv": 880, "ip": 880, "mesh_color": 880, "multitaper_psd": 880, "vertor": 880, "renorm": 880, "drop_bad_epoch": 880, "drop_epoch": 880, "do_forward_solut": 880, "kaichogami": 880, "cl\u00e9ment": 880, "moutard": 880, "martinbab": 880, "sagun": 880, "pai": 880, "sourav": 880, "kambyses": 880, "pbnsilva": 880, "sviter": 880, "zuxfoucault": 880, "nenonen": 880, "add_eeg_average_proj": 880, "n_samp_tot": 880, "emilyps14": 880, "lennyvarghes": 880, "freeview_bem_surfac": 880, "desanti": 880, "_setup_vmin_vmax": 880, "concatenatechannel": 880, "redesign": 880, "rewrot": 880, "plot_image_epoch": 880, "preload_data": 880, "santi": 880, "roan": 880, "laplant": 880, "wakeman": 880, "add_sect": 880, "marmaduk": 880, "woodman": 880, "whiten_evok": 880, "oddbal": 880, "label_1": 880, "label_2": 880, "savitski": 880, "_baseraw": 880, "prof": 880, "decoupl": 880, "read_hsp": 880, "read_elp": 880, "write_hsp": 880, "write_mrk": 880, "label_time_cours": 880, "as_data_fram": 880, "pick_types_evok": 880, "textbox": 880, "iir_filter_raw": 880, "ingoo": 880, "kj": 880, "basil": 880, "pinsard": 880, "hafeza": 880, "anevar": 880, "manoj": 880, "kumar": 880, "tucker": 880, "ward": 880, "radic": 880, "tack": 880, "equalize_channnel": 880, "s\u00e9bastien": 880, "connector": 880, "cathi": 880, "nangini": 880, "succintli": 880, "breuer": 880, "aesthet": 880, "qunxi": 880, "drop_pick": 880, "labels_from_parc": 880, "parc_from_label": 880, "setno": 880, "plot_": 880, "praveen": 880, "sripad": 880, "tanai": 880, "saket": 880, "choudhari": 880, "brad": 880, "buran": 880, "stimclient": 880, "rtclient": 880, "mockrtclient": 880, "trelli": 880, "ki2fiff": 880, "pick_norm": 880, "write_stc": 880, "olivetti": 880, "kornblith": 880, "smarter": 880, "sources_as_epoch": 880, "psi": 880, "mne_compute_proj_eog": 880, "applicationon": 880, "proj_act": 880, "keep_comp": 880, "dest_comp": 880, "speedup": 880, "clike": 880, "l21": 880, "bessel": 880, "time_to_index": 880, "mne_compute_proj_ecg": 880, "mne_maxfilt": 880, "loui": 880, "thibault": 880, "ellen": 880, "ruzich": 880}, "objects": {"": [[870, 0, 0, "-", "mne"]], "mne": [[257, 1, 1, "", "AcqParserFIF"], [258, 1, 1, "", "Annotations"], [259, 1, 1, "", "BaseEpochs"], [260, 1, 1, "", "BiHemiLabel"], [261, 1, 1, "", "Covariance"], [262, 1, 1, "", "Dipole"], [263, 1, 1, "", "DipoleFixed"], [264, 1, 1, "", "Epochs"], [265, 1, 1, "", "EpochsArray"], [266, 1, 1, "", "Evoked"], [267, 1, 1, "", "EvokedArray"], [268, 1, 1, "", "Forward"], [269, 1, 1, "", "Info"], [270, 1, 1, "", "Label"], [271, 1, 1, "", "MixedSourceEstimate"], [272, 1, 1, "", "MixedVectorSourceEstimate"], [273, 1, 1, "", "Projection"], [274, 1, 1, "", "Report"], [275, 1, 1, "", "SourceEstimate"], [276, 1, 1, "", "SourceMorph"], [277, 1, 1, "", "SourceSpaces"], [278, 1, 1, "", "VectorSourceEstimate"], [279, 1, 1, "", "VolSourceEstimate"], [280, 1, 1, "", "VolVectorSourceEstimate"], [281, 4, 1, "", "add_reference_channels"], [282, 4, 1, "", "add_source_space_distances"], [283, 4, 1, "", "annotations_from_events"], [284, 4, 1, "", "apply_forward"], [285, 4, 1, "", "apply_forward_raw"], [286, 4, 1, "", "average_forward_solutions"], [874, 0, 0, "-", "baseline"], [848, 0, 0, "-", "beamformer"], [254, 0, 0, "-", "bem"], [310, 4, 1, "", "channel_indices_by_type"], [311, 4, 1, "", "channel_type"], [869, 0, 0, "-", "channels"], [869, 0, 0, "-", "chpi"], [353, 4, 1, "", "combine_evoked"], [354, 4, 1, "", "compute_covariance"], [355, 4, 1, "", "compute_proj_epochs"], [356, 4, 1, "", "compute_proj_evoked"], [357, 4, 1, "", "compute_proj_raw"], [358, 4, 1, "", "compute_rank"], [359, 4, 1, "", "compute_raw_covariance"], [360, 4, 1, "", "compute_source_morph"], [361, 4, 1, "", "concatenate_epochs"], [362, 4, 1, "", "concatenate_events"], [363, 4, 1, "", "concatenate_raws"], [364, 4, 1, "", "convert_forward_solution"], [368, 4, 1, "", "count_events"], [372, 4, 1, "", "create_default_subject"], [373, 4, 1, "", "create_info"], [849, 0, 0, "-", "cuda"], [249, 0, 0, "-", "datasets"], [409, 4, 1, "", "decimate_surface"], [250, 0, 0, "-", "decoding"], [429, 4, 1, "", "dig_mri_distances"], [848, 0, 0, "-", "dipole"], [251, 0, 0, "-", "epochs"], [435, 4, 1, "", "equalize_channels"], [251, 0, 0, "-", "event"], [439, 4, 1, "", "events_from_annotations"], [252, 0, 0, "-", "export"], [444, 4, 1, "", "extract_label_time_course"], [869, 0, 0, "-", "filter"], [451, 4, 1, "", "find_events"], [452, 4, 1, "", "find_stim_steps"], [453, 4, 1, "", "fit_dipole"], [458, 4, 1, "", "get_config"], [459, 4, 1, "", "get_config_path"], [460, 4, 1, "", "get_head_surf"], [461, 4, 1, "", "get_meg_helmet_surf"], [462, 4, 1, "", "get_montage_volume_labels"], [463, 4, 1, "", "get_volume_labels_from_aseg"], [464, 4, 1, "", "get_volume_labels_from_src"], [465, 4, 1, "", "grade_to_tris"], [466, 4, 1, "", "grade_to_vertices"], [467, 4, 1, "", "grand_average"], [468, 4, 1, "", "grow_labels"], [471, 4, 1, "", "head_to_mni"], [472, 4, 1, "", "head_to_mri"], [848, 0, 0, "-", "inverse_sparse"], [871, 0, 0, "-", "io"], [512, 4, 1, "", "label_sign_flip"], [513, 4, 1, "", "labels_to_stc"], [514, 4, 1, "", "make_ad_hoc_cov"], [515, 4, 1, "", "make_bem_model"], [516, 4, 1, "", "make_bem_solution"], [517, 4, 1, "", "make_field_map"], [518, 4, 1, "", "make_fixed_length_epochs"], [519, 4, 1, "", "make_fixed_length_events"], [520, 4, 1, "", "make_forward_dipole"], [521, 4, 1, "", "make_forward_solution"], [522, 4, 1, "", "make_sphere_model"], [523, 4, 1, "", "merge_events"], [848, 0, 0, "-", "minimum_norm"], [544, 4, 1, "", "morph_labels"], [545, 4, 1, "", "morph_source_spaces"], [546, 4, 1, "", "open_docs"], [547, 4, 1, "", "open_report"], [548, 4, 1, "", "parse_config"], [549, 4, 1, "", "pick_channels"], [550, 4, 1, "", "pick_channels_cov"], [551, 4, 1, "", "pick_channels_forward"], [552, 4, 1, "", "pick_channels_regexp"], [553, 4, 1, "", "pick_events"], [554, 4, 1, "", "pick_info"], [555, 4, 1, "", "pick_types"], [556, 4, 1, "", "pick_types_forward"], [869, 0, 0, "-", "preprocessing"], [605, 4, 1, "", "random_parcellation"], [606, 4, 1, "", "read_annotations"], [607, 4, 1, "", "read_bem_solution"], [608, 4, 1, "", "read_bem_surfaces"], [609, 4, 1, "", "read_cov"], [610, 4, 1, "", "read_dipole"], [611, 4, 1, "", "read_epochs"], [612, 4, 1, "", "read_epochs_eeglab"], [613, 4, 1, "", "read_epochs_fieldtrip"], [614, 4, 1, "", "read_epochs_kit"], [615, 4, 1, "", "read_events"], [616, 4, 1, "", "read_evoked_besa"], [617, 4, 1, "", "read_evoked_fieldtrip"], [618, 4, 1, "", "read_evokeds"], [619, 4, 1, "", "read_evokeds_mff"], [620, 4, 1, "", "read_forward_solution"], [621, 4, 1, "", "read_freesurfer_lut"], [622, 4, 1, "", "read_label"], [623, 4, 1, "", "read_labels_from_annot"], [624, 4, 1, "", "read_lta"], [625, 4, 1, "", "read_morph_map"], [626, 4, 1, "", "read_proj"], [627, 4, 1, "", "read_reject_parameters"], [628, 4, 1, "", "read_source_estimate"], [629, 4, 1, "", "read_source_morph"], [630, 4, 1, "", "read_source_spaces"], [631, 4, 1, "", "read_surface"], [632, 4, 1, "", "read_talxfm"], [633, 4, 1, "", "read_trans"], [634, 4, 1, "", "read_tri"], [635, 4, 1, "", "read_vectorview_selection"], [636, 4, 1, "", "rename_channels"], [637, 4, 1, "", "scale_bem"], [638, 4, 1, "", "scale_labels"], [639, 4, 1, "", "scale_mri"], [640, 4, 1, "", "scale_source_space"], [641, 4, 1, "", "sensitivity_map"], [642, 4, 1, "", "set_bipolar_reference"], [643, 4, 1, "", "set_cache_dir"], [644, 4, 1, "", "set_config"], [645, 4, 1, "", "set_eeg_reference"], [646, 4, 1, "", "set_log_file"], [647, 4, 1, "", "set_log_level"], [648, 4, 1, "", "setup_source_space"], [649, 4, 1, "", "setup_volume_source_space"], [875, 0, 0, "-", "simulation"], [670, 4, 1, "", "spatial_dist_adjacency"], [671, 4, 1, "", "spatial_inter_hemi_adjacency"], [672, 4, 1, "", "spatial_src_adjacency"], [673, 4, 1, "", "spatial_tris_adjacency"], [674, 4, 1, "", "spatio_temporal_dist_adjacency"], [675, 4, 1, "", "spatio_temporal_src_adjacency"], [676, 4, 1, "", "spatio_temporal_tris_adjacency"], [677, 4, 1, "", "split_label"], [877, 0, 0, "-", "stats"], [695, 4, 1, "", "stc_near_sensors"], [696, 4, 1, "", "stc_to_label"], [699, 4, 1, "", "sys_info"], [878, 0, 0, "-", "time_frequency"], [734, 4, 1, "", "transform_surface_to"], [869, 0, 0, "-", "transforms"], [742, 4, 1, "", "use_coil_def"], [743, 1, 1, "", "use_log_level"], [849, 0, 0, "-", "utils"], [746, 4, 1, "", "verbose"], [747, 4, 1, "", "vertex_to_mni"], [879, 0, 0, "-", "viz"], [821, 4, 1, "", "what"], [822, 4, 1, "", "write_bem_solution"], [823, 4, 1, "", "write_bem_surfaces"], [824, 4, 1, "", "write_cov"], [825, 4, 1, "", "write_events"], [826, 4, 1, "", "write_evokeds"], [827, 4, 1, "", "write_forward_solution"], [828, 4, 1, "", "write_head_bem"], [829, 4, 1, "", "write_label"], [830, 4, 1, "", "write_labels_to_annot"], [831, 4, 1, "", "write_proj"], [832, 4, 1, "", "write_source_spaces"], [833, 4, 1, "", "write_surface"], [834, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[257, 2, 1, "", "__getitem__"], [257, 2, 1, "", "__len__"], [257, 3, 1, "", "categories"], [257, 3, 1, "", "events"], [257, 2, 1, "", "get_condition"]], "mne.Annotations": [[258, 2, 1, "", "__add__"], [258, 2, 1, "", "__getitem__"], [258, 2, 1, "", "__iter__"], [258, 2, 1, "", "__len__"], [258, 2, 1, "", "append"], [258, 2, 1, "", "copy"], [258, 2, 1, "", "crop"], [258, 2, 1, "", "delete"], [258, 3, 1, "", "orig_time"], [258, 2, 1, "", "rename"], [258, 2, 1, "", "save"], [258, 2, 1, "", "set_durations"], [258, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[260, 2, 1, "", "__add__"], [260, 2, 1, "", "__len__"], [260, 2, 1, "", "__sub__"]], "mne.Covariance": [[261, 2, 1, "", "__add__"], [261, 2, 1, "", "__contains__"], [261, 2, 1, "", "__getitem__"], [261, 2, 1, "", "__iter__"], [261, 2, 1, "", "__len__"], [261, 2, 1, "", "as_diag"], [261, 3, 1, "", "ch_names"], [261, 2, 1, "", "clear"], [261, 2, 1, "", "copy"], [261, 3, 1, "", "data"], [261, 2, 1, "", "fromkeys"], [261, 2, 1, "", "get"], [261, 2, 1, "", "items"], [261, 2, 1, "", "keys"], [261, 3, 1, "", "nfree"], [261, 2, 1, "", "pick_channels"], [261, 2, 1, "", "plot"], [261, 2, 1, "", "plot_topomap"], [261, 2, 1, "", "pop"], [261, 2, 1, "", "popitem"], [261, 2, 1, "", "save"], [261, 2, 1, "", "setdefault"], [261, 2, 1, "", "update"], [261, 2, 1, "", "values"]], "mne.Dipole": [[262, 2, 1, "", "__getitem__"], [262, 2, 1, "", "__len__"], [262, 2, 1, "", "copy"], [262, 2, 1, "", "crop"], [262, 2, 1, "", "decimate"], [262, 2, 1, "", "plot_amplitudes"], [262, 2, 1, "", "plot_locations"], [262, 2, 1, "", "save"], [262, 2, 1, "", "shift_time"], [262, 2, 1, "", "time_as_index"], [262, 3, 1, "", "times"], [262, 3, 1, "", "tmax"], [262, 3, 1, "", "tmin"], [262, 2, 1, "", "to_mni"], [262, 2, 1, "", "to_mri"], [262, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[263, 3, 1, "", "ch_names"], [263, 2, 1, "", "copy"], [263, 2, 1, "", "crop"], [263, 2, 1, "", "decimate"], [263, 2, 1, "", "plot"], [263, 2, 1, "", "save"], [263, 2, 1, "", "shift_time"], [263, 2, 1, "", "time_as_index"], [263, 3, 1, "", "times"], [263, 3, 1, "", "tmax"], [263, 3, 1, "", "tmin"]], "mne.Epochs": [[264, 2, 1, "", "__contains__"], [264, 2, 1, "", "__getitem__"], [264, 2, 1, "", "__iter__"], [264, 2, 1, "", "__len__"], [264, 2, 1, "", "add_annotations_to_metadata"], [264, 2, 1, "", "add_channels"], [264, 2, 1, "", "add_proj"], [264, 2, 1, "", "add_reference_channels"], [264, 2, 1, "", "anonymize"], [264, 2, 1, "", "apply_baseline"], [264, 2, 1, "", "apply_function"], [264, 2, 1, "", "apply_hilbert"], [264, 2, 1, "", "apply_proj"], [264, 2, 1, "", "as_type"], [264, 2, 1, "", "average"], [264, 3, 1, "", "ch_names"], [264, 3, 1, "", "compensation_grade"], [264, 2, 1, "", "compute_psd"], [264, 2, 1, "", "copy"], [264, 2, 1, "", "crop"], [264, 2, 1, "", "decimate"], [264, 2, 1, "", "del_proj"], [264, 2, 1, "", "drop"], [264, 2, 1, "", "drop_bad"], [264, 2, 1, "", "drop_channels"], [264, 2, 1, "", "drop_log_stats"], [264, 2, 1, "", "equalize_event_counts"], [264, 2, 1, "", "export"], [264, 3, 1, "", "filename"], [264, 2, 1, "", "filter"], [264, 2, 1, "", "get_annotations_per_epoch"], [264, 2, 1, "", "get_channel_types"], [264, 2, 1, "", "get_data"], [264, 2, 1, "", "get_montage"], [264, 2, 1, "", "interpolate_bads"], [264, 2, 1, "", "iter_evoked"], [264, 2, 1, "", "load_data"], [264, 3, 1, "", "metadata"], [264, 2, 1, "", "next"], [264, 2, 1, "", "pick"], [264, 2, 1, "", "pick_channels"], [264, 2, 1, "", "pick_types"], [264, 2, 1, "", "plot"], [264, 2, 1, "", "plot_drop_log"], [264, 2, 1, "", "plot_image"], [264, 2, 1, "", "plot_projs_topomap"], [264, 2, 1, "", "plot_psd"], [264, 2, 1, "", "plot_psd_topo"], [264, 2, 1, "", "plot_psd_topomap"], [264, 2, 1, "", "plot_sensors"], [264, 2, 1, "", "plot_topo_image"], [264, 3, 1, "", "proj"], [264, 2, 1, "", "rename_channels"], [264, 2, 1, "", "reorder_channels"], [264, 2, 1, "", "resample"], [264, 2, 1, "", "reset_drop_log_selection"], [264, 2, 1, "", "save"], [264, 2, 1, "", "savgol_filter"], [264, 2, 1, "", "set_annotations"], [264, 2, 1, "", "set_channel_types"], [264, 2, 1, "", "set_eeg_reference"], [264, 2, 1, "", "set_meas_date"], [264, 2, 1, "", "set_montage"], [264, 2, 1, "", "shift_time"], [264, 2, 1, "", "standard_error"], [264, 2, 1, "", "subtract_evoked"], [264, 2, 1, "", "time_as_index"], [264, 3, 1, "", "times"], [264, 3, 1, "", "tmax"], [264, 3, 1, "", "tmin"], [264, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[265, 2, 1, "", "__contains__"], [265, 2, 1, "", "__getitem__"], [265, 2, 1, "", "__iter__"], [265, 2, 1, "", "__len__"], [265, 2, 1, "", "add_annotations_to_metadata"], [265, 2, 1, "", "add_channels"], [265, 2, 1, "", "add_proj"], [265, 2, 1, "", "add_reference_channels"], [265, 2, 1, "", "anonymize"], [265, 2, 1, "", "apply_baseline"], [265, 2, 1, "", "apply_function"], [265, 2, 1, "", "apply_hilbert"], [265, 2, 1, "", "apply_proj"], [265, 2, 1, "", "as_type"], [265, 2, 1, "", "average"], [265, 3, 1, "", "ch_names"], [265, 3, 1, "", "compensation_grade"], [265, 2, 1, "", "compute_psd"], [265, 2, 1, "", "copy"], [265, 2, 1, "", "crop"], [265, 2, 1, "", "decimate"], [265, 2, 1, "", "del_proj"], [265, 2, 1, "", "drop"], [265, 2, 1, "", "drop_bad"], [265, 2, 1, "", "drop_channels"], [265, 2, 1, "", "drop_log_stats"], [265, 2, 1, "", "equalize_event_counts"], [265, 2, 1, "", "export"], [265, 3, 1, "", "filename"], [265, 2, 1, "", "filter"], [265, 2, 1, "", "get_annotations_per_epoch"], [265, 2, 1, "", "get_channel_types"], [265, 2, 1, "", "get_data"], [265, 2, 1, "", "get_montage"], [265, 2, 1, "", "interpolate_bads"], [265, 2, 1, "", "iter_evoked"], [265, 2, 1, "", "load_data"], [265, 3, 1, "", "metadata"], [265, 2, 1, "", "next"], [265, 2, 1, "", "pick"], [265, 2, 1, "", "pick_channels"], [265, 2, 1, "", "pick_types"], [265, 2, 1, "", "plot"], [265, 2, 1, "", "plot_drop_log"], [265, 2, 1, "", "plot_image"], [265, 2, 1, "", "plot_projs_topomap"], [265, 2, 1, "", "plot_psd"], [265, 2, 1, "", "plot_psd_topo"], [265, 2, 1, "", "plot_psd_topomap"], [265, 2, 1, "", "plot_sensors"], [265, 2, 1, "", "plot_topo_image"], [265, 3, 1, "", "proj"], [265, 2, 1, "", "rename_channels"], [265, 2, 1, "", "reorder_channels"], [265, 2, 1, "", "resample"], [265, 2, 1, "", "reset_drop_log_selection"], [265, 2, 1, "", "save"], [265, 2, 1, "", "savgol_filter"], [265, 2, 1, "", "set_annotations"], [265, 2, 1, "", "set_channel_types"], [265, 2, 1, "", "set_eeg_reference"], [265, 2, 1, "", "set_meas_date"], [265, 2, 1, "", "set_montage"], [265, 2, 1, "", "shift_time"], [265, 2, 1, "", "standard_error"], [265, 2, 1, "", "subtract_evoked"], [265, 2, 1, "", "time_as_index"], [265, 3, 1, "", "times"], [265, 3, 1, "", "tmax"], [265, 3, 1, "", "tmin"], [265, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[266, 2, 1, "", "__contains__"], [266, 2, 1, "", "__neg__"], [266, 2, 1, "", "add_channels"], [266, 2, 1, "", "add_proj"], [266, 2, 1, "", "add_reference_channels"], [266, 2, 1, "", "animate_topomap"], [266, 2, 1, "", "anonymize"], [266, 2, 1, "", "apply_baseline"], [266, 2, 1, "", "apply_function"], [266, 2, 1, "", "apply_hilbert"], [266, 2, 1, "", "apply_proj"], [266, 2, 1, "", "as_type"], [266, 3, 1, "", "ch_names"], [266, 3, 1, "", "compensation_grade"], [266, 2, 1, "", "compute_psd"], [266, 2, 1, "", "copy"], [266, 2, 1, "", "crop"], [266, 3, 1, "", "data"], [266, 2, 1, "", "decimate"], [266, 2, 1, "", "del_proj"], [266, 2, 1, "", "detrend"], [266, 2, 1, "", "drop_channels"], [266, 2, 1, "", "export"], [266, 2, 1, "", "filter"], [266, 2, 1, "", "get_channel_types"], [266, 2, 1, "", "get_data"], [266, 2, 1, "", "get_montage"], [266, 2, 1, "", "get_peak"], [266, 2, 1, "", "interpolate_bads"], [266, 3, 1, "", "kind"], [266, 2, 1, "", "pick"], [266, 2, 1, "", "pick_channels"], [266, 2, 1, "", "pick_types"], [266, 2, 1, "", "plot"], [266, 2, 1, "", "plot_field"], [266, 2, 1, "", "plot_image"], [266, 2, 1, "", "plot_joint"], [266, 2, 1, "", "plot_projs_topomap"], [266, 2, 1, "", "plot_psd"], [266, 2, 1, "", "plot_psd_topo"], [266, 2, 1, "", "plot_psd_topomap"], [266, 2, 1, "", "plot_sensors"], [266, 2, 1, "", "plot_topo"], [266, 2, 1, "", "plot_topomap"], [266, 2, 1, "", "plot_white"], [266, 3, 1, "", "proj"], [266, 2, 1, "", "rename_channels"], [266, 2, 1, "", "reorder_channels"], [266, 2, 1, "", "resample"], [266, 2, 1, "", "save"], [266, 2, 1, "", "savgol_filter"], [266, 2, 1, "", "set_channel_types"], [266, 2, 1, "", "set_eeg_reference"], [266, 2, 1, "", "set_meas_date"], [266, 2, 1, "", "set_montage"], [266, 2, 1, "", "shift_time"], [266, 2, 1, "", "time_as_index"], [266, 3, 1, "", "times"], [266, 3, 1, "", "tmax"], [266, 3, 1, "", "tmin"], [266, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[267, 2, 1, "", "__contains__"], [267, 2, 1, "", "__neg__"], [267, 2, 1, "", "add_channels"], [267, 2, 1, "", "add_proj"], [267, 2, 1, "", "add_reference_channels"], [267, 2, 1, "", "animate_topomap"], [267, 2, 1, "", "anonymize"], [267, 2, 1, "", "apply_baseline"], [267, 2, 1, "", "apply_function"], [267, 2, 1, "", "apply_hilbert"], [267, 2, 1, "", "apply_proj"], [267, 2, 1, "", "as_type"], [267, 3, 1, "", "ch_names"], [267, 3, 1, "", "compensation_grade"], [267, 2, 1, "", "compute_psd"], [267, 2, 1, "", "copy"], [267, 2, 1, "", "crop"], [267, 3, 1, "", "data"], [267, 2, 1, "", "decimate"], [267, 2, 1, "", "del_proj"], [267, 2, 1, "", "detrend"], [267, 2, 1, "", "drop_channels"], [267, 2, 1, "", "export"], [267, 2, 1, "", "filter"], [267, 2, 1, "", "get_channel_types"], [267, 2, 1, "", "get_data"], [267, 2, 1, "", "get_montage"], [267, 2, 1, "", "get_peak"], [267, 2, 1, "", "interpolate_bads"], [267, 3, 1, "", "kind"], [267, 2, 1, "", "pick"], [267, 2, 1, "", "pick_channels"], [267, 2, 1, "", "pick_types"], [267, 2, 1, "", "plot"], [267, 2, 1, "", "plot_field"], [267, 2, 1, "", "plot_image"], [267, 2, 1, "", "plot_joint"], [267, 2, 1, "", "plot_projs_topomap"], [267, 2, 1, "", "plot_psd"], [267, 2, 1, "", "plot_psd_topo"], [267, 2, 1, "", "plot_psd_topomap"], [267, 2, 1, "", "plot_sensors"], [267, 2, 1, "", "plot_topo"], [267, 2, 1, "", "plot_topomap"], [267, 2, 1, "", "plot_white"], [267, 3, 1, "", "proj"], [267, 2, 1, "", "rename_channels"], [267, 2, 1, "", "reorder_channels"], [267, 2, 1, "", "resample"], [267, 2, 1, "", "save"], [267, 2, 1, "", "savgol_filter"], [267, 2, 1, "", "set_channel_types"], [267, 2, 1, "", "set_eeg_reference"], [267, 2, 1, "", "set_meas_date"], [267, 2, 1, "", "set_montage"], [267, 2, 1, "", "shift_time"], [267, 2, 1, "", "time_as_index"], [267, 3, 1, "", "times"], [267, 3, 1, "", "tmax"], [267, 3, 1, "", "tmin"], [267, 2, 1, "", "to_data_frame"]], "mne.Forward": [[268, 2, 1, "", "copy"], [268, 2, 1, "", "pick_channels"]], "mne.Info": [[269, 2, 1, "", "__contains__"], [269, 2, 1, "", "__getitem__"], [269, 2, 1, "", "__iter__"], [269, 2, 1, "", "__len__"], [269, 2, 1, "", "clear"], [269, 3, 1, "", "compensation_grade"], [269, 2, 1, "", "copy"], [269, 2, 1, "", "fromkeys"], [269, 2, 1, "", "get"], [269, 2, 1, "", "get_channel_types"], [269, 2, 1, "", "get_montage"], [269, 2, 1, "", "items"], [269, 2, 1, "", "keys"], [269, 2, 1, "", "normalize_proj"], [269, 2, 1, "", "pop"], [269, 2, 1, "", "popitem"], [269, 2, 1, "", "save"], [269, 2, 1, "", "set_montage"], [269, 2, 1, "", "setdefault"], [269, 2, 1, "", "update"], [269, 2, 1, "", "values"]], "mne.Label": [[270, 2, 1, "", "__add__"], [270, 2, 1, "", "__len__"], [270, 2, 1, "", "__sub__"], [270, 2, 1, "", "center_of_mass"], [270, 2, 1, "", "compute_area"], [270, 2, 1, "", "copy"], [270, 2, 1, "", "distances_to_outside"], [270, 2, 1, "", "fill"], [270, 2, 1, "", "get_tris"], [270, 2, 1, "", "get_vertices_used"], [270, 2, 1, "", "morph"], [270, 2, 1, "", "restrict"], [270, 2, 1, "", "save"], [270, 2, 1, "", "smooth"], [270, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[271, 2, 1, "", "__add__"], [271, 2, 1, "", "__div__"], [271, 2, 1, "", "__mul__"], [271, 2, 1, "", "__neg__"], [271, 2, 1, "", "__sub__"], [271, 2, 1, "", "apply_baseline"], [271, 2, 1, "", "bin"], [271, 2, 1, "", "copy"], [271, 2, 1, "", "crop"], [271, 3, 1, "", "data"], [271, 2, 1, "", "decimate"], [271, 2, 1, "", "extract_label_time_course"], [271, 2, 1, "", "get_peak"], [271, 2, 1, "", "mean"], [271, 2, 1, "", "plot"], [271, 2, 1, "", "resample"], [271, 2, 1, "", "save"], [271, 3, 1, "", "sfreq"], [271, 3, 1, "", "shape"], [271, 2, 1, "", "shift_time"], [271, 2, 1, "", "sqrt"], [271, 2, 1, "", "sum"], [271, 2, 1, "", "surface"], [271, 2, 1, "", "time_as_index"], [271, 3, 1, "", "times"], [271, 3, 1, "", "tmax"], [271, 3, 1, "", "tmin"], [271, 2, 1, "", "to_data_frame"], [271, 2, 1, "", "transform"], [271, 2, 1, "", "transform_data"], [271, 3, 1, "", "tstep"], [271, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[272, 2, 1, "", "__add__"], [272, 2, 1, "", "__div__"], [272, 2, 1, "", "__mul__"], [272, 2, 1, "", "__neg__"], [272, 2, 1, "", "__sub__"], [272, 2, 1, "", "apply_baseline"], [272, 2, 1, "", "bin"], [272, 2, 1, "", "copy"], [272, 2, 1, "", "crop"], [272, 3, 1, "", "data"], [272, 2, 1, "", "decimate"], [272, 2, 1, "", "extract_label_time_course"], [272, 2, 1, "", "get_peak"], [272, 2, 1, "", "magnitude"], [272, 2, 1, "", "mean"], [272, 2, 1, "", "plot"], [272, 2, 1, "", "project"], [272, 2, 1, "", "resample"], [272, 2, 1, "", "save"], [272, 3, 1, "", "sfreq"], [272, 3, 1, "", "shape"], [272, 2, 1, "", "shift_time"], [272, 2, 1, "", "sqrt"], [272, 2, 1, "", "sum"], [272, 2, 1, "", "surface"], [272, 2, 1, "", "time_as_index"], [272, 3, 1, "", "times"], [272, 3, 1, "", "tmax"], [272, 3, 1, "", "tmin"], [272, 2, 1, "", "to_data_frame"], [272, 2, 1, "", "transform"], [272, 2, 1, "", "transform_data"], [272, 3, 1, "", "tstep"], [272, 2, 1, "", "volume"]], "mne.Projection": [[273, 2, 1, "", "__contains__"], [273, 2, 1, "", "__getitem__"], [273, 2, 1, "", "__iter__"], [273, 2, 1, "", "__len__"], [273, 2, 1, "", "clear"], [273, 2, 1, "", "copy"], [273, 2, 1, "", "fromkeys"], [273, 2, 1, "", "get"], [273, 2, 1, "", "items"], [273, 2, 1, "", "keys"], [273, 2, 1, "", "plot_topomap"], [273, 2, 1, "", "pop"], [273, 2, 1, "", "popitem"], [273, 2, 1, "", "setdefault"], [273, 2, 1, "", "update"], [273, 2, 1, "", "values"]], "mne.Report": [[274, 2, 1, "", "__len__"], [274, 2, 1, "", "add_bem"], [274, 2, 1, "", "add_code"], [274, 2, 1, "", "add_covariance"], [274, 2, 1, "", "add_custom_css"], [274, 2, 1, "", "add_custom_js"], [274, 2, 1, "", "add_epochs"], [274, 2, 1, "", "add_events"], [274, 2, 1, "", "add_evokeds"], [274, 2, 1, "", "add_figure"], [274, 2, 1, "", "add_forward"], [274, 2, 1, "", "add_html"], [274, 2, 1, "", "add_ica"], [274, 2, 1, "", "add_image"], [274, 2, 1, "", "add_inverse_operator"], [274, 2, 1, "", "add_projs"], [274, 2, 1, "", "add_raw"], [274, 2, 1, "", "add_stc"], [274, 2, 1, "", "add_sys_info"], [274, 2, 1, "", "add_trans"], [274, 3, 1, "", "html"], [274, 2, 1, "", "parse_folder"], [274, 2, 1, "", "remove"], [274, 2, 1, "", "save"], [274, 3, 1, "", "tags"]], "mne.SourceEstimate": [[275, 2, 1, "", "__add__"], [275, 2, 1, "", "__div__"], [275, 2, 1, "", "__mul__"], [275, 2, 1, "", "__neg__"], [275, 2, 1, "", "__sub__"], [275, 2, 1, "", "apply_baseline"], [275, 2, 1, "", "bin"], [275, 2, 1, "", "center_of_mass"], [275, 2, 1, "", "copy"], [275, 2, 1, "", "crop"], [275, 3, 1, "", "data"], [275, 2, 1, "", "decimate"], [275, 2, 1, "", "estimate_snr"], [275, 2, 1, "", "expand"], [275, 2, 1, "", "extract_label_time_course"], [275, 2, 1, "", "get_peak"], [275, 2, 1, "", "in_label"], [275, 3, 1, "", "lh_data"], [275, 3, 1, "", "lh_vertno"], [275, 2, 1, "", "mean"], [275, 2, 1, "", "plot"], [275, 2, 1, "", "resample"], [275, 3, 1, "", "rh_data"], [275, 3, 1, "", "rh_vertno"], [275, 2, 1, "", "save"], [275, 3, 1, "", "sfreq"], [275, 3, 1, "", "shape"], [275, 2, 1, "", "shift_time"], [275, 2, 1, "", "sqrt"], [275, 2, 1, "", "sum"], [275, 2, 1, "", "time_as_index"], [275, 3, 1, "", "times"], [275, 3, 1, "", "tmax"], [275, 3, 1, "", "tmin"], [275, 2, 1, "", "to_data_frame"], [275, 2, 1, "", "to_original_src"], [275, 2, 1, "", "transform"], [275, 2, 1, "", "transform_data"], [275, 3, 1, "", "tstep"]], "mne.SourceMorph": [[276, 2, 1, "", "apply"], [276, 2, 1, "", "compute_vol_morph_mat"], [276, 2, 1, "", "save"]], "mne.SourceSpaces": [[277, 2, 1, "", "__add__"], [277, 2, 1, "", "__getitem__"], [277, 2, 1, "", "copy"], [277, 2, 1, "", "export_volume"], [277, 2, 1, "", "plot"], [277, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[278, 2, 1, "", "__add__"], [278, 2, 1, "", "__div__"], [278, 2, 1, "", "__mul__"], [278, 2, 1, "", "__neg__"], [278, 2, 1, "", "__sub__"], [278, 2, 1, "", "apply_baseline"], [278, 2, 1, "", "bin"], [278, 2, 1, "", "copy"], [278, 2, 1, "", "crop"], [278, 3, 1, "", "data"], [278, 2, 1, "", "decimate"], [278, 2, 1, "", "expand"], [278, 2, 1, "", "extract_label_time_course"], [278, 2, 1, "", "get_peak"], [278, 2, 1, "", "in_label"], [278, 3, 1, "", "lh_data"], [278, 3, 1, "", "lh_vertno"], [278, 2, 1, "", "magnitude"], [278, 2, 1, "", "mean"], [278, 2, 1, "", "plot"], [278, 2, 1, "", "project"], [278, 2, 1, "", "resample"], [278, 3, 1, "", "rh_data"], [278, 3, 1, "", "rh_vertno"], [278, 2, 1, "", "save"], [278, 3, 1, "", "sfreq"], [278, 3, 1, "", "shape"], [278, 2, 1, "", "shift_time"], [278, 2, 1, "", "sqrt"], [278, 2, 1, "", "sum"], [278, 2, 1, "", "time_as_index"], [278, 3, 1, "", "times"], [278, 3, 1, "", "tmax"], [278, 3, 1, "", "tmin"], [278, 2, 1, "", "to_data_frame"], [278, 2, 1, "", "to_original_src"], [278, 2, 1, "", "transform"], [278, 2, 1, "", "transform_data"], [278, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[279, 2, 1, "", "__add__"], [279, 2, 1, "", "__div__"], [279, 2, 1, "", "__mul__"], [279, 2, 1, "", "__neg__"], [279, 2, 1, "", "__sub__"], [279, 2, 1, "", "apply_baseline"], [279, 2, 1, "", "as_volume"], [279, 2, 1, "", "bin"], [279, 2, 1, "", "copy"], [279, 2, 1, "", "crop"], [279, 3, 1, "", "data"], [279, 2, 1, "", "decimate"], [279, 2, 1, "", "extract_label_time_course"], [279, 2, 1, "", "get_peak"], [279, 2, 1, "", "in_label"], [279, 2, 1, "", "mean"], [279, 2, 1, "", "plot"], [279, 2, 1, "", "plot_3d"], [279, 2, 1, "", "resample"], [279, 2, 1, "", "save"], [279, 2, 1, "", "save_as_volume"], [279, 3, 1, "", "sfreq"], [279, 3, 1, "", "shape"], [279, 2, 1, "", "shift_time"], [279, 2, 1, "", "sqrt"], [279, 2, 1, "", "sum"], [279, 2, 1, "", "time_as_index"], [279, 3, 1, "", "times"], [279, 3, 1, "", "tmax"], [279, 3, 1, "", "tmin"], [279, 2, 1, "", "to_data_frame"], [279, 2, 1, "", "transform"], [279, 2, 1, "", "transform_data"], [279, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[280, 2, 1, "", "__add__"], [280, 2, 1, "", "__div__"], [280, 2, 1, "", "__mul__"], [280, 2, 1, "", "__neg__"], [280, 2, 1, "", "__sub__"], [280, 2, 1, "", "apply_baseline"], [280, 2, 1, "", "as_volume"], [280, 2, 1, "", "bin"], [280, 2, 1, "", "copy"], [280, 2, 1, "", "crop"], [280, 3, 1, "", "data"], [280, 2, 1, "", "decimate"], [280, 2, 1, "", "extract_label_time_course"], [280, 2, 1, "", "get_peak"], [280, 2, 1, "", "in_label"], [280, 2, 1, "", "magnitude"], [280, 2, 1, "", "mean"], [280, 2, 1, "", "plot"], [280, 2, 1, "", "plot_3d"], [280, 2, 1, "", "project"], [280, 2, 1, "", "resample"], [280, 2, 1, "", "save"], [280, 2, 1, "", "save_as_volume"], [280, 3, 1, "", "sfreq"], [280, 3, 1, "", "shape"], [280, 2, 1, "", "shift_time"], [280, 2, 1, "", "sqrt"], [280, 2, 1, "", "sum"], [280, 2, 1, "", "time_as_index"], [280, 3, 1, "", "times"], [280, 3, 1, "", "tmax"], [280, 3, 1, "", "tmin"], [280, 2, 1, "", "to_data_frame"], [280, 2, 1, "", "transform"], [280, 2, 1, "", "transform_data"], [280, 3, 1, "", "tstep"]], "mne.baseline": [[287, 4, 1, "", "rescale"]], "mne.beamformer": [[288, 1, 1, "", "Beamformer"], [289, 4, 1, "", "apply_dics"], [290, 4, 1, "", "apply_dics_csd"], [291, 4, 1, "", "apply_dics_epochs"], [292, 4, 1, "", "apply_dics_tfr_epochs"], [293, 4, 1, "", "apply_lcmv"], [294, 4, 1, "", "apply_lcmv_cov"], [295, 4, 1, "", "apply_lcmv_epochs"], [296, 4, 1, "", "apply_lcmv_raw"], [297, 4, 1, "", "make_dics"], [298, 4, 1, "", "make_lcmv"], [299, 4, 1, "", "make_lcmv_resolution_matrix"], [300, 4, 1, "", "rap_music"], [301, 4, 1, "", "read_beamformer"]], "mne.beamformer.Beamformer": [[288, 2, 1, "", "__contains__"], [288, 2, 1, "", "__getitem__"], [288, 2, 1, "", "__iter__"], [288, 2, 1, "", "__len__"], [288, 2, 1, "", "clear"], [288, 2, 1, "", "copy"], [288, 2, 1, "", "fromkeys"], [288, 2, 1, "", "get"], [288, 2, 1, "", "items"], [288, 2, 1, "", "keys"], [288, 2, 1, "", "pop"], [288, 2, 1, "", "popitem"], [288, 2, 1, "", "save"], [288, 2, 1, "", "setdefault"], [288, 2, 1, "", "update"], [288, 2, 1, "", "values"]], "mne.bem": [[302, 1, 1, "", "ConductorModel"], [303, 4, 1, "", "convert_flash_mris"], [304, 4, 1, "", "distance_to_bem"], [305, 4, 1, "", "fit_sphere_to_headshape"], [306, 4, 1, "", "get_fitting_dig"], [307, 4, 1, "", "make_flash_bem"], [308, 4, 1, "", "make_scalp_surfaces"], [309, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[302, 2, 1, "", "__contains__"], [302, 2, 1, "", "__getitem__"], [302, 2, 1, "", "__iter__"], [302, 2, 1, "", "__len__"], [302, 2, 1, "", "clear"], [302, 2, 1, "", "copy"], [302, 2, 1, "", "fromkeys"], [302, 2, 1, "", "get"], [302, 2, 1, "", "items"], [302, 2, 1, "", "keys"], [302, 2, 1, "", "pop"], [302, 2, 1, "", "popitem"], [302, 3, 1, "", "radius"], [302, 2, 1, "", "setdefault"], [302, 2, 1, "", "update"], [302, 2, 1, "", "values"]], "mne.channels": [[312, 1, 1, "", "DigMontage"], [313, 1, 1, "", "Layout"], [314, 4, 1, "", "combine_channels"], [315, 4, 1, "", "compute_dev_head_t"], [316, 4, 1, "", "compute_native_head_t"], [317, 4, 1, "", "equalize_channels"], [318, 4, 1, "", "find_ch_adjacency"], [319, 4, 1, "", "find_layout"], [320, 4, 1, "", "fix_mag_coil_types"], [321, 4, 1, "", "generate_2d_layout"], [322, 4, 1, "", "get_builtin_ch_adjacencies"], [323, 4, 1, "", "get_builtin_montages"], [324, 4, 1, "", "make_1020_channel_selections"], [325, 4, 1, "", "make_dig_montage"], [326, 4, 1, "", "make_eeg_layout"], [327, 4, 1, "", "make_grid_layout"], [328, 4, 1, "", "make_standard_montage"], [329, 4, 1, "", "read_ch_adjacency"], [330, 4, 1, "", "read_custom_montage"], [331, 4, 1, "", "read_dig_captrak"], [332, 4, 1, "", "read_dig_dat"], [333, 4, 1, "", "read_dig_egi"], [334, 4, 1, "", "read_dig_fif"], [335, 4, 1, "", "read_dig_hpts"], [336, 4, 1, "", "read_dig_localite"], [337, 4, 1, "", "read_dig_polhemus_isotrak"], [338, 4, 1, "", "read_layout"], [339, 4, 1, "", "read_polhemus_fastscan"], [340, 4, 1, "", "rename_channels"]], "mne.channels.DigMontage": [[312, 2, 1, "", "__add__"], [312, 2, 1, "", "add_estimated_fiducials"], [312, 2, 1, "", "add_mni_fiducials"], [312, 2, 1, "", "apply_trans"], [312, 2, 1, "", "copy"], [312, 2, 1, "", "get_positions"], [312, 2, 1, "", "plot"], [312, 2, 1, "", "remove_fiducials"], [312, 2, 1, "", "rename_channels"], [312, 2, 1, "", "save"]], "mne.channels.Layout": [[313, 2, 1, "", "plot"], [313, 2, 1, "", "save"]], "mne.chpi": [[341, 4, 1, "", "compute_chpi_amplitudes"], [342, 4, 1, "", "compute_chpi_locs"], [343, 4, 1, "", "compute_chpi_snr"], [344, 4, 1, "", "compute_head_pos"], [345, 4, 1, "", "extract_chpi_locs_ctf"], [346, 4, 1, "", "extract_chpi_locs_kit"], [347, 4, 1, "", "filter_chpi"], [348, 4, 1, "", "get_active_chpi"], [349, 4, 1, "", "get_chpi_info"], [350, 4, 1, "", "head_pos_to_trans_rot_t"], [351, 4, 1, "", "read_head_pos"], [352, 4, 1, "", "write_head_pos"]], "mne.coreg": [[365, 1, 1, "", "Coregistration"], [366, 4, 1, "", "estimate_head_mri_t"], [367, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[365, 2, 1, "", "compute_dig_mri_distances"], [365, 2, 1, "", "fit_fiducials"], [365, 2, 1, "", "fit_icp"], [365, 2, 1, "", "omit_head_shape_points"], [365, 2, 1, "", "reset"], [365, 3, 1, "", "scale"], [365, 2, 1, "", "set_fid_match"], [365, 2, 1, "", "set_grow_hair"], [365, 2, 1, "", "set_rotation"], [365, 2, 1, "", "set_scale"], [365, 2, 1, "", "set_scale_mode"], [365, 2, 1, "", "set_translation"], [365, 3, 1, "", "trans"]], "mne.cov": [[369, 4, 1, "", "compute_whitener"], [370, 4, 1, "", "prepare_noise_cov"], [371, 4, 1, "", "regularize"]], "mne.cuda": [[374, 4, 1, "", "get_cuda_memory"], [375, 4, 1, "", "init_cuda"], [376, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[377, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[378, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[379, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[380, 4, 1, "", "load_data"], [381, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[382, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[383, 4, 1, "", "data_path"]], "mne.datasets": [[384, 4, 1, "", "fetch_aparc_sub_parcellation"], [385, 4, 1, "", "fetch_dataset"], [386, 4, 1, "", "fetch_fsaverage"], [387, 4, 1, "", "fetch_hcp_mmp_parcellation"], [388, 4, 1, "", "fetch_infant_template"], [389, 4, 1, "", "fetch_phantom"], [391, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[390, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[392, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[393, 4, 1, "", "data_path"]], "mne.datasets.limo": [[394, 4, 1, "", "load_data"]], "mne.datasets.misc": [[395, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[396, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[397, 4, 1, "", "data_path"]], "mne.datasets.opm": [[398, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[399, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[400, 4, 1, "", "data_path"]], "mne.datasets.sample": [[401, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[402, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[403, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[404, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[405, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[406, 4, 1, "", "data_path"]], "mne.datasets.ucl_opm_auditory": [[407, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[408, 4, 1, "", "data_path"]], "mne.decoding": [[410, 1, 1, "", "CSP"], [411, 1, 1, "", "EMS"], [412, 1, 1, "", "FilterEstimator"], [413, 1, 1, "", "GeneralizingEstimator"], [414, 1, 1, "", "LinearModel"], [415, 1, 1, "", "PSDEstimator"], [416, 1, 1, "", "ReceptiveField"], [417, 1, 1, "", "SPoC"], [418, 1, 1, "", "SSD"], [419, 1, 1, "", "Scaler"], [420, 1, 1, "", "SlidingEstimator"], [421, 1, 1, "", "TemporalFilter"], [422, 1, 1, "", "TimeDelayingRidge"], [423, 1, 1, "", "TimeFrequency"], [424, 1, 1, "", "UnsupervisedSpatialFilter"], [425, 1, 1, "", "Vectorizer"], [426, 4, 1, "", "compute_ems"], [427, 4, 1, "", "cross_val_multiscore"], [428, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[410, 2, 1, "", "fit"], [410, 2, 1, "", "fit_transform"], [410, 2, 1, "", "get_params"], [410, 2, 1, "", "plot_filters"], [410, 2, 1, "", "plot_patterns"], [410, 2, 1, "", "set_params"], [410, 2, 1, "", "transform"]], "mne.decoding.EMS": [[411, 2, 1, "", "fit"], [411, 2, 1, "", "fit_transform"], [411, 2, 1, "", "get_params"], [411, 2, 1, "", "set_params"], [411, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[412, 2, 1, "", "fit"], [412, 2, 1, "", "fit_transform"], [412, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[413, 2, 1, "", "decision_function"], [413, 2, 1, "", "fit"], [413, 2, 1, "", "fit_transform"], [413, 2, 1, "", "get_params"], [413, 2, 1, "", "predict"], [413, 2, 1, "", "predict_proba"], [413, 2, 1, "", "score"], [413, 2, 1, "", "set_params"], [413, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[414, 2, 1, "", "decision_function"], [414, 2, 1, "", "fit"], [414, 2, 1, "", "fit_transform"], [414, 2, 1, "", "get_params"], [414, 2, 1, "", "predict"], [414, 2, 1, "", "predict_proba"], [414, 2, 1, "", "score"], [414, 2, 1, "", "set_params"], [414, 2, 1, "", "transform"]], "mne.decoding.PSDEstimator": [[415, 2, 1, "", "fit"], [415, 2, 1, "", "fit_transform"], [415, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[416, 2, 1, "", "fit"], [416, 2, 1, "", "get_params"], [416, 2, 1, "", "predict"], [416, 2, 1, "", "score"], [416, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[417, 2, 1, "", "fit"], [417, 2, 1, "", "fit_transform"], [417, 2, 1, "", "get_params"], [417, 2, 1, "", "plot_filters"], [417, 2, 1, "", "plot_patterns"], [417, 2, 1, "", "set_params"], [417, 2, 1, "", "transform"]], "mne.decoding.SSD": [[418, 2, 1, "", "apply"], [418, 2, 1, "", "fit"], [418, 2, 1, "", "fit_transform"], [418, 2, 1, "", "get_params"], [418, 2, 1, "", "get_spectral_ratio"], [418, 2, 1, "", "inverse_transform"], [418, 2, 1, "", "set_params"], [418, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[419, 2, 1, "", "fit"], [419, 2, 1, "", "fit_transform"], [419, 2, 1, "", "get_params"], [419, 2, 1, "", "inverse_transform"], [419, 2, 1, "", "set_params"], [419, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[420, 2, 1, "", "decision_function"], [420, 2, 1, "", "fit"], [420, 2, 1, "", "fit_transform"], [420, 2, 1, "", "get_params"], [420, 2, 1, "", "predict"], [420, 2, 1, "", "predict_proba"], [420, 2, 1, "", "score"], [420, 2, 1, "", "set_params"], [420, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[421, 2, 1, "", "fit"], [421, 2, 1, "", "fit_transform"], [421, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[422, 2, 1, "", "fit"], [422, 2, 1, "", "get_params"], [422, 2, 1, "", "predict"], [422, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[423, 2, 1, "", "fit"], [423, 2, 1, "", "fit_transform"], [423, 2, 1, "", "get_params"], [423, 2, 1, "", "set_params"], [423, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[424, 2, 1, "", "fit"], [424, 2, 1, "", "fit_transform"], [424, 2, 1, "", "get_params"], [424, 2, 1, "", "inverse_transform"], [424, 2, 1, "", "set_params"], [424, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[425, 2, 1, "", "fit"], [425, 2, 1, "", "fit_transform"], [425, 2, 1, "", "inverse_transform"], [425, 2, 1, "", "transform"]], "mne.dipole": [[430, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[431, 4, 1, "", "average_movements"], [432, 4, 1, "", "combine_event_ids"], [433, 4, 1, "", "equalize_epoch_counts"], [434, 4, 1, "", "make_metadata"]], "mne.event": [[436, 4, 1, "", "define_target_events"], [437, 4, 1, "", "match_event_names"], [438, 4, 1, "", "shift_time_events"]], "mne.export": [[440, 4, 1, "", "export_epochs"], [441, 4, 1, "", "export_evokeds"], [442, 4, 1, "", "export_evokeds_mff"], [443, 4, 1, "", "export_raw"]], "mne.filter": [[445, 4, 1, "", "construct_iir_filter"], [446, 4, 1, "", "create_filter"], [447, 4, 1, "", "estimate_ringing_samples"], [448, 4, 1, "", "filter_data"], [449, 4, 1, "", "notch_filter"], [450, 4, 1, "", "resample"]], "mne.forward": [[454, 4, 1, "", "compute_depth_prior"], [455, 4, 1, "", "compute_orient_prior"], [456, 4, 1, "", "restrict_forward_to_label"], [457, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[469, 4, 1, "", "coregistration"], [470, 4, 1, "", "locate_ieeg"]], "mne.inverse_sparse": [[473, 4, 1, "", "gamma_map"], [474, 4, 1, "", "make_stc_from_dipoles"], [475, 4, 1, "", "mixed_norm"], [476, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[477, 1, 1, "", "BaseRaw"], [478, 1, 1, "", "Raw"], [479, 1, 1, "", "RawArray"], [480, 4, 1, "", "anonymize_info"], [871, 0, 0, "-", "kit"], [482, 4, 1, "", "read_fiducials"], [483, 4, 1, "", "read_info"], [484, 4, 1, "", "read_raw"], [485, 4, 1, "", "read_raw_artemis123"], [486, 4, 1, "", "read_raw_bdf"], [487, 4, 1, "", "read_raw_boxy"], [488, 4, 1, "", "read_raw_brainvision"], [489, 4, 1, "", "read_raw_bti"], [490, 4, 1, "", "read_raw_cnt"], [491, 4, 1, "", "read_raw_ctf"], [492, 4, 1, "", "read_raw_curry"], [493, 4, 1, "", "read_raw_edf"], [494, 4, 1, "", "read_raw_eeglab"], [495, 4, 1, "", "read_raw_egi"], [496, 4, 1, "", "read_raw_eximia"], [497, 4, 1, "", "read_raw_fieldtrip"], [498, 4, 1, "", "read_raw_fif"], [499, 4, 1, "", "read_raw_fil"], [500, 4, 1, "", "read_raw_gdf"], [501, 4, 1, "", "read_raw_hitachi"], [502, 4, 1, "", "read_raw_kit"], [503, 4, 1, "", "read_raw_nedf"], [504, 4, 1, "", "read_raw_nicolet"], [505, 4, 1, "", "read_raw_nihon"], [506, 4, 1, "", "read_raw_nirx"], [507, 4, 1, "", "read_raw_persyst"], [508, 4, 1, "", "read_raw_snirf"], [509, 4, 1, "", "show_fiff"], [510, 4, 1, "", "write_fiducials"]], "mne.io.Raw": [[478, 2, 1, "", "__contains__"], [478, 2, 1, "", "__getitem__"], [478, 2, 1, "", "__len__"], [478, 3, 1, "", "acqparser"], [478, 2, 1, "", "add_channels"], [478, 2, 1, "", "add_events"], [478, 2, 1, "", "add_proj"], [478, 2, 1, "", "add_reference_channels"], [478, 3, 1, "", "annotations"], [478, 2, 1, "", "anonymize"], [478, 2, 1, "", "append"], [478, 2, 1, "", "apply_function"], [478, 2, 1, "", "apply_gradient_compensation"], [478, 2, 1, "", "apply_hilbert"], [478, 2, 1, "", "apply_proj"], [478, 3, 1, "", "ch_names"], [478, 2, 1, "", "close"], [478, 3, 1, "", "compensation_grade"], [478, 2, 1, "", "compute_psd"], [478, 2, 1, "", "copy"], [478, 2, 1, "", "crop"], [478, 2, 1, "", "crop_by_annotations"], [478, 2, 1, "", "decimate"], [478, 2, 1, "", "del_proj"], [478, 2, 1, "", "describe"], [478, 2, 1, "", "drop_channels"], [478, 2, 1, "", "export"], [478, 3, 1, "", "filenames"], [478, 2, 1, "", "filter"], [478, 3, 1, "", "first_samp"], [478, 3, 1, "", "first_time"], [478, 2, 1, "", "fix_mag_coil_types"], [478, 2, 1, "", "get_channel_types"], [478, 2, 1, "", "get_data"], [478, 2, 1, "", "get_montage"], [478, 2, 1, "", "interpolate_bads"], [478, 3, 1, "", "last_samp"], [478, 2, 1, "", "load_bad_channels"], [478, 2, 1, "", "load_data"], [478, 3, 1, "", "n_times"], [478, 2, 1, "", "notch_filter"], [478, 2, 1, "", "pick"], [478, 2, 1, "", "pick_channels"], [478, 2, 1, "", "pick_types"], [478, 2, 1, "", "plot"], [478, 2, 1, "", "plot_projs_topomap"], [478, 2, 1, "", "plot_psd"], [478, 2, 1, "", "plot_psd_topo"], [478, 2, 1, "", "plot_psd_topomap"], [478, 2, 1, "", "plot_sensors"], [478, 3, 1, "", "proj"], [478, 2, 1, "", "rename_channels"], [478, 2, 1, "", "reorder_channels"], [478, 2, 1, "", "resample"], [478, 2, 1, "", "save"], [478, 2, 1, "", "savgol_filter"], [478, 2, 1, "", "set_annotations"], [478, 2, 1, "", "set_channel_types"], [478, 2, 1, "", "set_eeg_reference"], [478, 2, 1, "", "set_meas_date"], [478, 2, 1, "", "set_montage"], [478, 2, 1, "", "shift_time"], [478, 2, 1, "", "time_as_index"], [478, 3, 1, "", "times"], [478, 3, 1, "", "tmax"], [478, 3, 1, "", "tmin"], [478, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[479, 2, 1, "", "__contains__"], [479, 2, 1, "", "__getitem__"], [479, 2, 1, "", "__len__"], [479, 2, 1, "", "add_channels"], [479, 2, 1, "", "add_events"], [479, 2, 1, "", "add_proj"], [479, 2, 1, "", "add_reference_channels"], [479, 3, 1, "", "annotations"], [479, 2, 1, "", "anonymize"], [479, 2, 1, "", "append"], [479, 2, 1, "", "apply_function"], [479, 2, 1, "", "apply_gradient_compensation"], [479, 2, 1, "", "apply_hilbert"], [479, 2, 1, "", "apply_proj"], [479, 3, 1, "", "ch_names"], [479, 2, 1, "", "close"], [479, 3, 1, "", "compensation_grade"], [479, 2, 1, "", "compute_psd"], [479, 2, 1, "", "copy"], [479, 2, 1, "", "crop"], [479, 2, 1, "", "crop_by_annotations"], [479, 2, 1, "", "decimate"], [479, 2, 1, "", "del_proj"], [479, 2, 1, "", "describe"], [479, 2, 1, "", "drop_channels"], [479, 2, 1, "", "export"], [479, 3, 1, "", "filenames"], [479, 2, 1, "", "filter"], [479, 3, 1, "", "first_samp"], [479, 3, 1, "", "first_time"], [479, 2, 1, "", "get_channel_types"], [479, 2, 1, "", "get_data"], [479, 2, 1, "", "get_montage"], [479, 2, 1, "", "interpolate_bads"], [479, 3, 1, "", "last_samp"], [479, 2, 1, "", "load_bad_channels"], [479, 2, 1, "", "load_data"], [479, 3, 1, "", "n_times"], [479, 2, 1, "", "notch_filter"], [479, 2, 1, "", "pick"], [479, 2, 1, "", "pick_channels"], [479, 2, 1, "", "pick_types"], [479, 2, 1, "", "plot"], [479, 2, 1, "", "plot_projs_topomap"], [479, 2, 1, "", "plot_psd"], [479, 2, 1, "", "plot_psd_topo"], [479, 2, 1, "", "plot_psd_topomap"], [479, 2, 1, "", "plot_sensors"], [479, 3, 1, "", "proj"], [479, 2, 1, "", "rename_channels"], [479, 2, 1, "", "reorder_channels"], [479, 2, 1, "", "resample"], [479, 2, 1, "", "save"], [479, 2, 1, "", "savgol_filter"], [479, 2, 1, "", "set_annotations"], [479, 2, 1, "", "set_channel_types"], [479, 2, 1, "", "set_eeg_reference"], [479, 2, 1, "", "set_meas_date"], [479, 2, 1, "", "set_montage"], [479, 2, 1, "", "shift_time"], [479, 2, 1, "", "time_as_index"], [479, 3, 1, "", "times"], [479, 3, 1, "", "tmax"], [479, 3, 1, "", "tmin"], [479, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[481, 4, 1, "", "read_mrk"]], "mne.label": [[511, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[524, 1, 1, "", "InverseOperator"], [525, 4, 1, "", "apply_inverse"], [526, 4, 1, "", "apply_inverse_cov"], [527, 4, 1, "", "apply_inverse_epochs"], [528, 4, 1, "", "apply_inverse_raw"], [529, 4, 1, "", "apply_inverse_tfr_epochs"], [530, 4, 1, "", "compute_rank_inverse"], [531, 4, 1, "", "compute_source_psd"], [532, 4, 1, "", "compute_source_psd_epochs"], [533, 4, 1, "", "estimate_snr"], [534, 4, 1, "", "get_cross_talk"], [535, 4, 1, "", "get_point_spread"], [536, 4, 1, "", "make_inverse_operator"], [537, 4, 1, "", "make_inverse_resolution_matrix"], [538, 4, 1, "", "prepare_inverse_operator"], [539, 4, 1, "", "read_inverse_operator"], [540, 4, 1, "", "resolution_metrics"], [541, 4, 1, "", "source_band_induced_power"], [542, 4, 1, "", "source_induced_power"], [543, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[524, 2, 1, "", "__contains__"], [524, 2, 1, "", "__getitem__"], [524, 2, 1, "", "__iter__"], [524, 2, 1, "", "__len__"], [524, 2, 1, "", "clear"], [524, 2, 1, "", "copy"], [524, 2, 1, "", "fromkeys"], [524, 2, 1, "", "get"], [524, 2, 1, "", "items"], [524, 2, 1, "", "keys"], [524, 2, 1, "", "pop"], [524, 2, 1, "", "popitem"], [524, 2, 1, "", "setdefault"], [524, 2, 1, "", "update"], [524, 2, 1, "", "values"]], "mne.preprocessing": [[557, 1, 1, "", "EOGRegression"], [558, 1, 1, "", "ICA"], [559, 1, 1, "", "Xdawn"], [560, 4, 1, "", "annotate_amplitude"], [561, 4, 1, "", "annotate_break"], [562, 4, 1, "", "annotate_movement"], [563, 4, 1, "", "annotate_muscle_zscore"], [564, 4, 1, "", "annotate_nan"], [565, 4, 1, "", "compute_average_dev_head_t"], [566, 4, 1, "", "compute_bridged_electrodes"], [567, 4, 1, "", "compute_current_source_density"], [568, 4, 1, "", "compute_fine_calibration"], [569, 4, 1, "", "compute_maxwell_basis"], [570, 4, 1, "", "compute_proj_ecg"], [571, 4, 1, "", "compute_proj_eog"], [572, 4, 1, "", "corrmap"], [573, 4, 1, "", "cortical_signal_suppression"], [574, 4, 1, "", "create_ecg_epochs"], [575, 4, 1, "", "create_eog_epochs"], [576, 4, 1, "", "equalize_bads"], [577, 4, 1, "", "find_bad_channels_maxwell"], [578, 4, 1, "", "find_ecg_events"], [579, 4, 1, "", "find_eog_events"], [580, 4, 1, "", "fix_stim_artifact"], [581, 4, 1, "", "ica_find_ecg_events"], [582, 4, 1, "", "ica_find_eog_events"], [869, 0, 0, "-", "ieeg"], [586, 4, 1, "", "infomax"], [587, 4, 1, "", "interpolate_bridged_electrodes"], [588, 4, 1, "", "maxwell_filter"], [589, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [869, 0, 0, "-", "nirs"], [596, 4, 1, "", "oversampled_temporal_projection"], [597, 4, 1, "", "peak_finder"], [598, 4, 1, "", "read_eog_regression"], [599, 4, 1, "", "read_fine_calibration"], [600, 4, 1, "", "read_ica"], [601, 4, 1, "", "read_ica_eeglab"], [602, 4, 1, "", "realign_raw"], [603, 4, 1, "", "regress_artifact"], [604, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[557, 2, 1, "", "apply"], [557, 2, 1, "", "fit"], [557, 2, 1, "", "plot"], [557, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[558, 2, 1, "", "__contains__"], [558, 2, 1, "", "apply"], [558, 3, 1, "", "compensation_grade"], [558, 2, 1, "", "copy"], [558, 2, 1, "", "find_bads_ecg"], [558, 2, 1, "", "find_bads_eog"], [558, 2, 1, "", "find_bads_muscle"], [558, 2, 1, "", "find_bads_ref"], [558, 2, 1, "", "fit"], [558, 2, 1, "", "get_channel_types"], [558, 2, 1, "", "get_components"], [558, 2, 1, "", "get_explained_variance_ratio"], [558, 2, 1, "", "get_sources"], [558, 2, 1, "", "plot_components"], [558, 2, 1, "", "plot_overlay"], [558, 2, 1, "", "plot_properties"], [558, 2, 1, "", "plot_scores"], [558, 2, 1, "", "plot_sources"], [558, 2, 1, "", "save"], [558, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[559, 2, 1, "", "apply"], [559, 2, 1, "", "fit"], [559, 2, 1, "", "fit_transform"], [559, 2, 1, "", "get_params"], [559, 2, 1, "", "inverse_transform"], [559, 2, 1, "", "set_params"], [559, 2, 1, "", "transform"]], "mne.preprocessing.ieeg": [[583, 4, 1, "", "make_montage_volume"], [584, 4, 1, "", "project_sensors_onto_brain"], [585, 4, 1, "", "warp_montage"]], "mne.preprocessing.nirs": [[590, 4, 1, "", "beer_lambert_law"], [591, 4, 1, "", "optical_density"], [592, 4, 1, "", "scalp_coupling_index"], [593, 4, 1, "", "short_channels"], [594, 4, 1, "", "source_detector_distances"], [595, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[650, 1, 1, "", "SourceSimulator"], [651, 4, 1, "", "add_chpi"], [652, 4, 1, "", "add_ecg"], [653, 4, 1, "", "add_eog"], [654, 4, 1, "", "add_noise"], [875, 0, 0, "-", "metrics"], [663, 4, 1, "", "select_source_in_label"], [664, 4, 1, "", "simulate_evoked"], [665, 4, 1, "", "simulate_raw"], [666, 4, 1, "", "simulate_sparse_stc"], [667, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[650, 2, 1, "", "__iter__"], [650, 2, 1, "", "add_data"], [650, 3, 1, "", "duration"], [650, 2, 1, "", "get_stc"], [650, 2, 1, "", "get_stim_channel"], [650, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[655, 4, 1, "", "cosine_score"], [656, 4, 1, "", "f1_score"], [657, 4, 1, "", "peak_position_error"], [658, 4, 1, "", "precision_score"], [659, 4, 1, "", "recall_score"], [660, 4, 1, "", "region_localization_error"], [661, 4, 1, "", "roc_auc_score"], [662, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[668, 4, 1, "", "compute_distance_to_sensors"], [669, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[678, 4, 1, "", "bonferroni_correction"], [679, 4, 1, "", "bootstrap_confidence_interval"], [680, 4, 1, "", "combine_adjacency"], [681, 4, 1, "", "f_mway_rm"], [682, 4, 1, "", "f_oneway"], [683, 4, 1, "", "f_threshold_mway_rm"], [684, 4, 1, "", "fdr_correction"], [685, 4, 1, "", "linear_regression"], [686, 4, 1, "", "linear_regression_raw"], [687, 4, 1, "", "permutation_cluster_1samp_test"], [688, 4, 1, "", "permutation_cluster_test"], [689, 4, 1, "", "permutation_t_test"], [690, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [691, 4, 1, "", "spatio_temporal_cluster_test"], [692, 4, 1, "", "summarize_clusters_stc"], [693, 4, 1, "", "ttest_1samp_no_p"], [694, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[697, 4, 1, "", "complete_surface_info"], [698, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[700, 1, 1, "", "AverageTFR"], [701, 1, 1, "", "CrossSpectralDensity"], [702, 1, 1, "", "EpochsSpectrum"], [703, 1, 1, "", "EpochsTFR"], [704, 1, 1, "", "Spectrum"], [705, 4, 1, "", "csd_array_fourier"], [706, 4, 1, "", "csd_array_morlet"], [707, 4, 1, "", "csd_array_multitaper"], [708, 4, 1, "", "csd_fourier"], [709, 4, 1, "", "csd_morlet"], [710, 4, 1, "", "csd_multitaper"], [711, 4, 1, "", "csd_tfr"], [712, 4, 1, "", "dpss_windows"], [713, 4, 1, "", "fit_iir_model_raw"], [714, 4, 1, "", "fwhm"], [715, 4, 1, "", "istft"], [716, 4, 1, "", "morlet"], [717, 4, 1, "", "pick_channels_csd"], [718, 4, 1, "", "psd_array_multitaper"], [719, 4, 1, "", "psd_array_welch"], [720, 4, 1, "", "read_csd"], [721, 4, 1, "", "read_spectrum"], [722, 4, 1, "", "read_tfrs"], [723, 4, 1, "", "stft"], [724, 4, 1, "", "stftfreq"], [878, 0, 0, "-", "tfr"], [727, 4, 1, "", "tfr_array_morlet"], [728, 4, 1, "", "tfr_array_multitaper"], [729, 4, 1, "", "tfr_array_stockwell"], [730, 4, 1, "", "tfr_morlet"], [731, 4, 1, "", "tfr_multitaper"], [732, 4, 1, "", "tfr_stockwell"], [733, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[700, 2, 1, "", "__add__"], [700, 2, 1, "", "__contains__"], [700, 2, 1, "", "__mul__"], [700, 2, 1, "", "__sub__"], [700, 2, 1, "", "add_channels"], [700, 2, 1, "", "add_reference_channels"], [700, 2, 1, "", "apply_baseline"], [700, 3, 1, "", "ch_names"], [700, 3, 1, "", "compensation_grade"], [700, 2, 1, "", "copy"], [700, 2, 1, "", "crop"], [700, 2, 1, "", "decimate"], [700, 2, 1, "", "drop_channels"], [700, 2, 1, "", "get_channel_types"], [700, 2, 1, "", "pick"], [700, 2, 1, "", "pick_channels"], [700, 2, 1, "", "pick_types"], [700, 2, 1, "", "plot"], [700, 2, 1, "", "plot_joint"], [700, 2, 1, "", "plot_topo"], [700, 2, 1, "", "plot_topomap"], [700, 2, 1, "", "reorder_channels"], [700, 2, 1, "", "save"], [700, 2, 1, "", "shift_time"], [700, 2, 1, "", "time_as_index"], [700, 3, 1, "", "times"], [700, 3, 1, "", "tmax"], [700, 3, 1, "", "tmin"], [700, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[701, 2, 1, "", "__getitem__"], [701, 2, 1, "", "__len__"], [701, 2, 1, "", "copy"], [701, 2, 1, "", "get_data"], [701, 2, 1, "", "mean"], [701, 3, 1, "", "n_channels"], [701, 2, 1, "", "pick_channels"], [701, 2, 1, "", "pick_frequency"], [701, 2, 1, "", "plot"], [701, 2, 1, "", "save"], [701, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[702, 2, 1, "", "__contains__"], [702, 2, 1, "", "__getitem__"], [702, 2, 1, "", "__iter__"], [702, 2, 1, "", "__len__"], [702, 2, 1, "", "add_channels"], [702, 2, 1, "", "add_reference_channels"], [702, 2, 1, "", "average"], [702, 3, 1, "", "compensation_grade"], [702, 2, 1, "", "copy"], [702, 2, 1, "", "drop_channels"], [702, 2, 1, "", "get_channel_types"], [702, 2, 1, "", "get_data"], [702, 3, 1, "", "metadata"], [702, 2, 1, "", "next"], [702, 2, 1, "", "pick"], [702, 2, 1, "", "pick_channels"], [702, 2, 1, "", "pick_types"], [702, 2, 1, "", "plot"], [702, 2, 1, "", "plot_topo"], [702, 2, 1, "", "plot_topomap"], [702, 2, 1, "", "reorder_channels"], [702, 2, 1, "", "save"], [702, 2, 1, "", "to_data_frame"], [702, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[703, 2, 1, "", "__contains__"], [703, 2, 1, "", "__getitem__"], [703, 2, 1, "", "__iter__"], [703, 2, 1, "", "__len__"], [703, 2, 1, "", "add_channels"], [703, 2, 1, "", "add_reference_channels"], [703, 2, 1, "", "apply_baseline"], [703, 2, 1, "", "average"], [703, 3, 1, "", "ch_names"], [703, 3, 1, "", "compensation_grade"], [703, 2, 1, "", "copy"], [703, 2, 1, "", "crop"], [703, 2, 1, "", "decimate"], [703, 2, 1, "", "drop_channels"], [703, 2, 1, "", "get_channel_types"], [703, 3, 1, "", "metadata"], [703, 2, 1, "", "next"], [703, 2, 1, "", "pick"], [703, 2, 1, "", "pick_channels"], [703, 2, 1, "", "pick_types"], [703, 2, 1, "", "reorder_channels"], [703, 2, 1, "", "save"], [703, 2, 1, "", "shift_time"], [703, 2, 1, "", "time_as_index"], [703, 3, 1, "", "times"], [703, 3, 1, "", "tmax"], [703, 3, 1, "", "tmin"], [703, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[704, 2, 1, "", "__contains__"], [704, 2, 1, "", "__getitem__"], [704, 2, 1, "", "add_channels"], [704, 2, 1, "", "add_reference_channels"], [704, 3, 1, "", "compensation_grade"], [704, 2, 1, "", "copy"], [704, 2, 1, "", "drop_channels"], [704, 2, 1, "", "get_channel_types"], [704, 2, 1, "", "get_data"], [704, 2, 1, "", "pick"], [704, 2, 1, "", "pick_channels"], [704, 2, 1, "", "pick_types"], [704, 2, 1, "", "plot"], [704, 2, 1, "", "plot_topo"], [704, 2, 1, "", "plot_topomap"], [704, 2, 1, "", "reorder_channels"], [704, 2, 1, "", "save"], [704, 2, 1, "", "to_data_frame"], [704, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[725, 4, 1, "", "cwt"], [726, 4, 1, "", "morlet"]], "mne.transforms": [[735, 1, 1, "", "Transform"], [736, 4, 1, "", "apply_volume_registration"], [737, 4, 1, "", "apply_volume_registration_points"], [738, 4, 1, "", "compute_volume_registration"], [739, 4, 1, "", "quat_to_rot"], [740, 4, 1, "", "read_ras_mni_t"], [741, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[735, 2, 1, "", "__contains__"], [735, 2, 1, "", "__getitem__"], [735, 2, 1, "", "__iter__"], [735, 2, 1, "", "__len__"], [735, 2, 1, "", "clear"], [735, 2, 1, "", "copy"], [735, 3, 1, "", "from_str"], [735, 2, 1, "", "fromkeys"], [735, 2, 1, "", "get"], [735, 2, 1, "", "items"], [735, 2, 1, "", "keys"], [735, 2, 1, "", "pop"], [735, 2, 1, "", "popitem"], [735, 2, 1, "", "save"], [735, 2, 1, "", "setdefault"], [735, 3, 1, "", "to_str"], [735, 2, 1, "", "update"], [735, 2, 1, "", "values"]], "mne.utils": [[744, 1, 1, "", "deprecated"], [745, 4, 1, "", "warn"]], "mne.viz": [[748, 1, 1, "", "Brain"], [749, 1, 1, "", "ClickableImage"], [750, 1, 1, "", "Figure3D"], [751, 4, 1, "", "add_background_image"], [752, 4, 1, "", "centers_to_edges"], [753, 4, 1, "", "circular_layout"], [754, 4, 1, "", "close_3d_figure"], [755, 4, 1, "", "close_all_3d_figures"], [756, 4, 1, "", "compare_fiff"], [757, 4, 1, "", "create_3d_figure"], [758, 4, 1, "", "get_3d_backend"], [759, 4, 1, "", "get_brain_class"], [760, 4, 1, "", "get_browser_backend"], [761, 4, 1, "", "iter_topography"], [762, 4, 1, "", "link_brains"], [763, 4, 1, "", "mne_analyze_colormap"], [764, 4, 1, "", "plot_alignment"], [765, 4, 1, "", "plot_arrowmap"], [766, 4, 1, "", "plot_bem"], [767, 4, 1, "", "plot_brain_colorbar"], [768, 4, 1, "", "plot_bridged_electrodes"], [769, 4, 1, "", "plot_ch_adjacency"], [770, 4, 1, "", "plot_channel_labels_circle"], [771, 4, 1, "", "plot_chpi_snr"], [772, 4, 1, "", "plot_compare_evokeds"], [773, 4, 1, "", "plot_cov"], [774, 4, 1, "", "plot_csd"], [775, 4, 1, "", "plot_dipole_amplitudes"], [776, 4, 1, "", "plot_dipole_locations"], [777, 4, 1, "", "plot_drop_log"], [778, 4, 1, "", "plot_epochs"], [779, 4, 1, "", "plot_epochs_image"], [780, 4, 1, "", "plot_epochs_psd_topomap"], [781, 4, 1, "", "plot_events"], [782, 4, 1, "", "plot_evoked"], [783, 4, 1, "", "plot_evoked_field"], [784, 4, 1, "", "plot_evoked_image"], [785, 4, 1, "", "plot_evoked_joint"], [786, 4, 1, "", "plot_evoked_topo"], [787, 4, 1, "", "plot_evoked_topomap"], [788, 4, 1, "", "plot_evoked_white"], [789, 4, 1, "", "plot_filter"], [790, 4, 1, "", "plot_head_positions"], [791, 4, 1, "", "plot_ica_components"], [792, 4, 1, "", "plot_ica_overlay"], [793, 4, 1, "", "plot_ica_properties"], [794, 4, 1, "", "plot_ica_scores"], [795, 4, 1, "", "plot_ica_sources"], [796, 4, 1, "", "plot_ideal_filter"], [797, 4, 1, "", "plot_layout"], [798, 4, 1, "", "plot_montage"], [799, 4, 1, "", "plot_projs_joint"], [800, 4, 1, "", "plot_projs_topomap"], [801, 4, 1, "", "plot_raw"], [802, 4, 1, "", "plot_raw_psd"], [803, 4, 1, "", "plot_regression_weights"], [804, 4, 1, "", "plot_sensors"], [805, 4, 1, "", "plot_snr_estimate"], [806, 4, 1, "", "plot_source_estimates"], [807, 4, 1, "", "plot_sparse_source_estimates"], [808, 4, 1, "", "plot_tfr_topomap"], [809, 4, 1, "", "plot_topo_image_epochs"], [810, 4, 1, "", "plot_topomap"], [811, 4, 1, "", "plot_vector_source_estimates"], [812, 4, 1, "", "plot_volume_source_estimates"], [813, 4, 1, "", "set_3d_backend"], [814, 4, 1, "", "set_3d_options"], [815, 4, 1, "", "set_3d_title"], [816, 4, 1, "", "set_3d_view"], [817, 4, 1, "", "set_browser_backend"], [818, 4, 1, "", "snapshot_brain_montage"], [819, 4, 1, "", "use_3d_backend"], [820, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[748, 2, 1, "", "add_annotation"], [748, 2, 1, "", "add_data"], [748, 2, 1, "", "add_dipole"], [748, 2, 1, "", "add_foci"], [748, 2, 1, "", "add_forward"], [748, 2, 1, "", "add_head"], [748, 2, 1, "", "add_label"], [748, 2, 1, "", "add_sensors"], [748, 2, 1, "", "add_skull"], [748, 2, 1, "", "add_text"], [748, 2, 1, "", "add_volume_labels"], [748, 2, 1, "", "apply_auto_scaling"], [748, 2, 1, "", "clear_glyphs"], [748, 2, 1, "", "close"], [748, 3, 1, "", "data"], [748, 2, 1, "", "get_picked_points"], [748, 2, 1, "", "get_view"], [748, 2, 1, "", "help"], [748, 3, 1, "", "interaction"], [748, 2, 1, "", "plot_time_course"], [748, 2, 1, "", "plot_time_line"], [748, 2, 1, "", "remove_annotations"], [748, 2, 1, "", "remove_data"], [748, 2, 1, "", "remove_dipole"], [748, 2, 1, "", "remove_forward"], [748, 2, 1, "", "remove_head"], [748, 2, 1, "", "remove_labels"], [748, 2, 1, "", "remove_sensors"], [748, 2, 1, "", "remove_skull"], [748, 2, 1, "", "remove_text"], [748, 2, 1, "", "remove_volume_labels"], [748, 2, 1, "", "reset"], [748, 2, 1, "", "reset_view"], [748, 2, 1, "", "restore_user_scaling"], [748, 2, 1, "", "save_image"], [748, 2, 1, "", "save_movie"], [748, 2, 1, "", "screenshot"], [748, 2, 1, "", "set_data_smoothing"], [748, 2, 1, "", "set_playback_speed"], [748, 2, 1, "", "set_time"], [748, 2, 1, "", "set_time_interpolation"], [748, 2, 1, "", "set_time_point"], [748, 2, 1, "", "setup_time_viewer"], [748, 2, 1, "", "show"], [748, 2, 1, "", "show_view"], [748, 3, 1, "", "time_interpolation"], [748, 2, 1, "", "toggle_interface"], [748, 2, 1, "", "toggle_playback"], [748, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[749, 2, 1, "", "onclick"], [749, 2, 1, "", "plot_clicks"], [749, 2, 1, "", "to_layout"]], "mne.viz.Figure3D": [[750, 3, 1, "", "plotter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 27, 147, 246, 839], "analysi": [0, 4, 10, 14, 27, 36, 138, 147, 152, 166, 167, 217, 232, 237, 240, 241, 242, 857, 859, 866], "exampl": [0, 3, 27, 98, 105, 147, 157, 176, 196, 205, 206, 207, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 307, 309, 310, 311, 312, 313, 314, 316, 318, 322, 323, 324, 325, 326, 328, 329, 330, 334, 337, 338, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 371, 373, 382, 388, 393, 401, 402, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 439, 444, 445, 446, 448, 450, 451, 453, 458, 459, 462, 463, 467, 469, 470, 473, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 545, 547, 549, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 565, 566, 567, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 583, 584, 585, 587, 588, 590, 591, 592, 594, 595, 596, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 635, 639, 641, 642, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 664, 665, 666, 667, 668, 672, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 708, 709, 710, 711, 713, 716, 718, 719, 727, 730, 731, 732, 736, 737, 738, 740, 742, 743, 747, 748, 749, 752, 753, 757, 759, 761, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 779, 781, 784, 786, 788, 789, 790, 796, 799, 800, 805, 806, 807, 810, 811, 813, 815, 816, 818, 820, 824, 825, 826, 827, 828, 831, 833, 856, 865, 868], "brainstorm": [1, 184, 185, 192, 377, 378, 379, 856], "raw": [1, 7, 29, 70, 81, 90, 93, 94, 138, 141, 153, 169, 173, 178, 204, 211, 212, 215, 216, 217, 218, 221, 256, 478, 859, 862, 871], "median": [1, 856], "nerv": [1, 856], "dataset": [1, 2, 3, 4, 7, 27, 70, 83, 184, 185, 186, 192, 215, 241, 249, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 856, 859], "refer": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 70, 71, 74, 75, 78, 83, 84, 88, 94, 101, 109, 112, 113, 117, 119, 121, 126, 129, 135, 138, 142, 145, 152, 156, 158, 163, 177, 179, 181, 184, 185, 190, 192, 195, 196, 200, 202, 204, 205, 206, 207, 208, 210, 212, 223, 226, 227, 231, 239, 839, 855, 856, 859, 862, 870], "hf": 2, "sef": [2, 856], "open": [3, 27, 256, 839, 868], "singl": [4, 28, 104, 128, 228, 229, 230], "trial": [4, 128, 211, 216, 228, 229, 230, 240, 241], "linear": [4, 18, 256, 862], "regress": [4, 73, 99, 101, 142, 204, 212], "limo": [4, 394, 856], "about": [4, 171, 172, 199, 862], "data": [4, 5, 7, 8, 11, 13, 15, 18, 19, 21, 27, 29, 30, 41, 42, 49, 51, 57, 63, 65, 71, 73, 75, 80, 81, 86, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 109, 114, 115, 116, 119, 120, 121, 129, 136, 137, 138, 141, 142, 143, 147, 148, 150, 151, 153, 160, 166, 167, 168, 169, 170, 173, 176, 178, 179, 181, 189, 190, 191, 192, 193, 195, 201, 203, 204, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 227, 230, 231, 232, 234, 235, 236, 239, 241, 248, 256, 665, 855, 856, 859, 862, 865, 871, 874, 876], "load": [4, 19, 47, 73, 115, 116, 137, 138, 141, 142, 150, 160, 167, 176, 179, 191, 195, 206, 215, 222, 862], "visual": [4, 19, 27, 47, 48, 49, 50, 54, 55, 112, 117, 122, 137, 141, 143, 145, 150, 151, 157, 159, 171, 178, 181, 182, 183, 195, 204, 205, 206, 207, 209, 226, 231, 234, 235, 236, 239, 839, 856, 868, 879], "event": [4, 69, 113, 138, 145, 152, 167, 169, 173, 216, 251, 436, 437, 438], "condit": [4, 13, 132, 152, 229, 230], "erp": [4, 142, 145, 152, 856], "effect": [4, 16, 195, 196, 204, 206, 226, 241, 862], "stimulu": [4, 19], "phase": [4, 107], "coher": [4, 240], "prepar": [4, 5, 145, 204, 236], "defin": [4, 69, 90, 157, 226, 228], "predictor": 4, "variabl": [4, 172, 839], "design": [4, 138, 196, 202, 857], "matrix": [4, 41, 64, 70, 103, 163, 226, 234, 855, 859, 862, 865], "extract": [4, 37, 39, 94, 138, 141, 209, 211, 215, 241], "coeffici": [4, 19], "plot": [4, 18, 34, 41, 42, 43, 44, 47, 48, 50, 60, 69, 70, 81, 82, 84, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 133, 137, 142, 143, 151, 153, 163, 171, 211, 216, 218, 222, 228, 229, 240, 241, 837, 859], "model": [4, 19, 23, 27, 45, 111, 158, 159, 164, 166, 167, 178, 181, 195, 197, 208, 254, 256, 855, 861, 862, 868], "result": [4, 43, 44, 54, 241], "optic": [5, 211, 212], "pump": [5, 212], "magnetomet": [5, 212], "opm": [5, 109, 189, 212, 398, 856, 868], "local": [5, 31, 166, 177, 178, 179, 183, 187, 839, 855], "perform": [5, 73, 90, 137, 195], "dipol": [5, 45, 90, 116, 177, 179, 182, 262, 430], "fit": [5, 19, 158, 177, 182, 195, 205], "minimum": [5, 862], "norm": [5, 40, 862], "comput": [6, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 45, 46, 47, 49, 51, 54, 55, 56, 58, 59, 66, 70, 85, 90, 91, 94, 102, 103, 104, 106, 107, 108, 109, 110, 112, 130, 137, 140, 149, 155, 159, 160, 163, 165, 171, 175, 178, 180, 181, 188, 194, 198, 202, 204, 205, 206, 209, 214, 220, 225, 228, 229, 231, 233, 234, 235, 236, 238, 243, 247, 256, 855, 862, 868], "time": [6, 9, 13, 20, 25, 27, 32, 37, 39, 46, 56, 59, 66, 69, 70, 72, 85, 86, 91, 94, 102, 105, 106, 114, 130, 137, 140, 141, 143, 145, 146, 149, 155, 165, 166, 167, 175, 182, 188, 194, 196, 198, 205, 214, 215, 220, 225, 228, 229, 231, 233, 238, 240, 241, 242, 243, 839, 868, 878], "from": [7, 8, 15, 19, 37, 38, 43, 44, 61, 90, 104, 129, 138, 141, 143, 145, 150, 169, 170, 189, 190, 191, 204, 207, 211, 215, 216, 217, 218, 221, 222, 248, 256, 866], "dspm": [7, 28, 30, 34, 54, 94, 110, 178, 862], "spm": [7, 856], "face": [7, 856], "motor": [8, 856], "imageri": [8, 856], "decod": [8, 9, 11, 12, 13, 15, 17, 18, 27, 196, 250, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "eeg": [8, 15, 22, 55, 58, 65, 67, 70, 71, 78, 118, 125, 152, 160, 167, 183, 189, 190, 208, 227, 241, 855, 862, 868], "us": [8, 9, 14, 18, 26, 32, 33, 34, 35, 39, 47, 57, 63, 67, 71, 84, 94, 138, 144, 147, 150, 156, 157, 158, 161, 162, 172, 181, 195, 205, 208, 210, 230, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 307, 309, 310, 311, 312, 313, 314, 316, 318, 322, 323, 324, 325, 326, 328, 329, 330, 334, 337, 338, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 371, 373, 382, 388, 393, 401, 402, 405, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 436, 439, 444, 445, 446, 448, 450, 451, 453, 458, 459, 462, 463, 467, 469, 470, 473, 474, 475, 476, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 534, 535, 536, 537, 539, 540, 541, 542, 545, 547, 549, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 565, 566, 567, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 583, 584, 585, 587, 588, 590, 591, 592, 594, 595, 596, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 620, 622, 623, 626, 628, 629, 630, 631, 632, 633, 635, 639, 641, 642, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 664, 665, 666, 667, 668, 672, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 708, 709, 710, 711, 713, 716, 718, 719, 727, 730, 731, 732, 736, 737, 738, 740, 742, 743, 747, 748, 749, 752, 753, 757, 759, 761, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 779, 781, 784, 786, 788, 789, 790, 796, 799, 800, 805, 806, 807, 810, 811, 813, 815, 816, 818, 820, 824, 825, 826, 827, 828, 831, 833, 837, 839, 852, 855, 859, 862, 865], "common": [8, 9, 135, 196, 234, 236, 239], "spatial": [8, 9, 16, 21, 54, 55, 181, 196, 222], "pattern": [8, 9, 18, 196], "csp": [8, 9, 410], "frequenc": [9, 27, 32, 46, 59, 105, 113, 114, 137, 166, 167, 191, 199, 202, 209, 228, 229, 231, 239, 240, 241, 242, 856, 868, 878], "space": [9, 11, 13, 18, 24, 26, 30, 41, 54, 58, 101, 104, 107, 110, 147, 159, 160, 164, 166, 179, 196, 206, 207, 210, 216, 222, 234, 236, 256, 855, 862, 865, 874, 876], "represent": [10, 114, 211, 230, 862], "similar": [10, 150], "sourc": [11, 24, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 58, 71, 90, 94, 95, 104, 107, 108, 109, 110, 116, 157, 159, 160, 164, 166, 173, 177, 178, 179, 181, 182, 183, 187, 196, 208, 222, 234, 235, 236, 237, 256, 855, 862, 868, 876], "continu": [12, 81, 99, 101, 147, 148, 166, 167, 191, 195, 209, 215, 217, 218, 219, 862], "target": [12, 69], "spoc": [12, 196, 417], "sensor": [13, 18, 22, 84, 96, 97, 100, 101, 116, 118, 123, 125, 133, 137, 143, 166, 171, 191, 196, 207, 211, 212, 218, 222, 231, 232, 240, 862, 874], "gener": [13, 24, 38, 92, 93, 95, 145, 190, 196, 201, 212, 222, 244, 839, 859, 862], "across": [13, 70, 82, 152, 211], "evok": [14, 30, 34, 41, 51, 69, 86, 90, 92, 94, 119, 120, 121, 127, 132, 150, 151, 152, 153, 154, 166, 167, 173, 178, 204, 212, 221, 266, 855], "respons": [14, 69, 132, 145, 152, 154, 166, 167, 178, 195, 204, 211, 212, 867], "ica": [14, 76, 83, 173, 205, 558, 855], "pca": [14, 47, 256], "reduct": [14, 205, 206, 207], "techniqu": 14, "xdawn": [15, 88, 196, 559], "match": [16, 196, 205], "filter": [16, 18, 21, 49, 80, 114, 152, 181, 196, 202, 203, 205, 210, 212, 445, 446, 447, 448, 449, 450, 862], "em": [16, 411], "machin": [17, 27, 166, 197], "learn": [17, 27, 138, 166, 197], "encod": [17, 27, 665], "mvpa": [17, 27, 196], "classifi": 18, "logisticregress": 18, "recept": [19, 195], "field": [19, 151, 152, 195, 862, 865], "estim": [19, 34, 38, 41, 42, 43, 44, 57, 90, 154, 166, 167, 182, 183, 195, 209, 222, 237, 246, 855, 862], "predict": [19, 862], "public": [19, 127], "creat": [19, 90, 94, 115, 116, 138, 141, 145, 150, 189, 195, 204, 207, 208, 217, 221, 222, 230, 248, 256, 839, 855, 862], "investig": 19, "reconstruct": [19, 90, 94, 156, 161, 181, 207, 855], "spectro": [21, 195], "decomposit": 21, "ssd": [21, 418], "epoch": [21, 28, 42, 94, 104, 114, 117, 138, 141, 143, 144, 145, 146, 147, 148, 150, 152, 153, 166, 167, 173, 201, 204, 205, 211, 221, 231, 234, 236, 264, 431, 432, 433, 434, 855, 862], "displai": 22, "sensit": [22, 131], "map": [22, 35, 112, 120, 131, 143, 150, 151, 216, 223, 862], "meg": [22, 55, 74, 78, 87, 123, 133, 167, 189, 212, 222, 856, 862, 868], "forward": [23, 27, 47, 109, 159, 160, 164, 166, 173, 181, 254, 268, 454, 455, 456, 457, 855, 859, 862], "left": [24, 211], "cerebellum": 24, "volum": [24, 30, 41, 50, 182], "morph": [26, 43, 44, 181, 862], "galleri": 27, "input": [27, 62], "output": [27, 62, 161, 181], "simul": [27, 89, 90, 92, 93, 94, 95, 114, 166, 195, 205, 222, 223, 224, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 875], "preprocess": [27, 77, 109, 137, 142, 166, 167, 211, 212, 213, 217, 241, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 855, 869], "statist": [27, 98, 166, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 241, 862, 868, 877], "invers": [27, 28, 29, 30, 31, 35, 36, 39, 40, 41, 42, 47, 52, 57, 94, 104, 166, 167, 178, 187, 848, 854, 855, 859, 862], "problem": [27, 36, 202], "mne": [28, 30, 41, 42, 54, 60, 76, 116, 124, 156, 161, 162, 167, 172, 173, 178, 180, 189, 200, 202, 205, 206, 210, 215, 221, 226, 245, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 836, 839, 841, 842, 843, 845, 846, 847, 851, 854, 858, 859, 862, 865, 873], "solut": [28, 29, 30, 35, 39, 40, 41, 47, 60, 104, 159, 173, 178, 180, 202, 205, 256, 848, 855, 859, 862], "sloreta": [29, 178, 862], "custom": [31, 127, 133, 173, 191], "solver": 31, "level": [32, 96, 129, 865], "timecours": [32, 45, 127], "dic": [32, 33, 34, 223], "beamform": [32, 33, 34, 49, 181, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "power": [33, 34, 42, 104, 107, 108, 109, 110, 137, 143, 152, 196, 199, 203, 223, 228, 229, 230, 240, 241], "er": 34, "lcmv": [34, 49, 181], "covari": [34, 42, 49, 64, 121, 163, 173, 178, 181, 222, 247, 261, 855, 859, 862], "some": [34, 202, 865], "spars": [35, 40, 59], "gamma": [35, 137], "empir": 35, "bayesian": 35, "method": [35, 75, 212, 215, 218, 226], "cours": [37, 94, 182], "source_estim": 37, "object": [37, 44, 138, 141, 143, 144, 146, 150, 151, 169, 170, 215, 217, 218, 221, 239, 248, 856, 859], "function": [38, 47, 48, 49, 50, 138, 211, 226, 236, 839, 843, 859, 865], "label": [38, 39, 41, 47, 104, 107, 108, 222, 270, 511, 865], "seri": [39, 70, 143], "activ": [39, 90, 94, 127, 128, 166, 181, 197, 211], "view": [39, 41, 82, 116, 144, 211, 228, 229, 256], "vector": [39, 43, 60, 173, 181, 182, 196, 425], "mix": [40, 41], "mxne": [40, 46, 59], "irmxn": 40, "set": [41, 43, 146, 152, 158, 172, 190, 208, 228, 230, 231, 234, 235, 236, 256, 839, 855, 856], "up": [41, 43, 158, 162, 256, 839, 855], "our": [41, 183], "fwd": [41, 865], "surfac": [41, 43, 159, 161, 162, 171, 182, 183, 211, 256, 697, 698, 855, 862, 865], "process": [41, 168, 181, 839, 853], "project": [42, 84, 115, 131, 171, 173, 196, 206, 256, 273, 861, 862, 865], "empti": [42, 129, 207], "room": [42, 129, 207], "appli": [42, 43, 44, 75, 138, 145, 181, 189, 191, 202, 204, 206, 241, 256], "oper": [42, 47, 52, 94, 114, 159, 160, 162, 217, 855, 857, 862], "sourcemorph": [43, 44, 276], "sourceestim": [43, 173, 176, 275], "read": [43, 44, 47, 52, 53, 64, 65, 138, 166, 169, 171, 190, 193, 216, 217, 231, 234, 236, 859, 865, 871], "write": [43, 44, 64, 216, 217, 865], "disk": [43, 44, 141], "volumetr": [44, 181, 862], "get": [44, 61, 160, 162, 172, 173, 183, 241, 846, 859, 860, 864], "volsourceestim": [44, 279], "convert": [44, 115, 146, 169, 211, 256], "nifti": 44, "an": [45, 52, 53, 57, 70, 117, 143, 144, 146, 158, 160, 162, 169, 170, 173, 181, 183, 205, 208, 212, 241, 855], "xfit": 45, "like": [45, 171], "multi": 45, "iter": [46, 141], "reweight": 46, "tf": 46, "multiscal": 46, "dictionari": 46, "leakag": 47, "among": [47, 150], "circular": 47, "graph": 47, "organis": 47, "cortic": [47, 68, 126, 137, 161, 234, 236, 855, 862], "parcel": [47, 126], "point": [47, 48, 50, 158, 222, 862], "spread": [47, 48, 50, 222], "summari": [47, 70, 168, 176, 199, 200, 202, 215, 880], "all": [47, 135, 181, 200, 230, 234, 236, 839, 843, 847, 859], "evalu": [47, 211], "base": [47, 69, 138, 142, 201, 256, 857, 862], "psf": [47, 48, 50], "correl": 47, "save": [47, 141, 150, 173, 206, 215], "figur": [47, 127, 173], "option": [47, 120, 256, 839, 859], "individu": [47, 865], "cross": [48, 49, 103, 134, 839], "talk": [48, 49], "ctf": [48, 123, 185, 189, 192], "differ": [49, 76, 90, 132, 142, 166, 193, 195, 241], "matric": [49, 163, 181], "resolut": [49, 54, 55, 162, 256], "two": [49, 222], "rap": 51, "music": 51, "stc": [53, 90, 176, 182, 865], "file": [53, 61, 171, 173, 190, 216, 217, 253, 256, 855, 859, 862, 865], "metric": [54, 55, 70, 655, 656, 657, 658, 659, 660, 661, 662], "compar": [55, 70, 76, 90, 132, 151, 152, 195, 211, 212, 226, 256], "eegmeg": 55, "snr": [57, 58, 209, 241], "prior": 59, "full": [60, 231], "valu": [60, 146, 241], "averag": [61, 114, 150, 152, 208, 862], "info": [61, 170, 215, 221, 256, 269, 865], "fif": [61, 189, 256, 859], "how": [63, 115, 161, 163, 200, 207, 217, 854, 859], "neural": [63, 166, 195, 197, 211], "ensembl": 63, "neo": 63, "format": [63, 146, 190, 191, 862], "nois": [64, 121, 129, 178, 199, 203, 206, 207, 222, 241, 855, 856, 862], "xdf": [65, 190], "contralater": 67, "referenc": 67, "signal": [68, 151, 168, 169, 206, 207, 209, 210, 211, 212, 222, 241, 862, 865], "suppress": [68, 855], "css": 68, "remov": [68, 73, 83, 205, 206, 211, 234, 236], "lag": 69, "identifi": 70, "electrod": [70, 79, 115, 135, 137, 183, 190, 862], "bridg": 70, "too": 70, "much": 70, "gel": 70, "electr": 70, "distanc": 70, "examin": [70, 142, 212], "distribut": [70, 75, 179, 837, 868], "topomap": [70, 120], "voltag": 70, "subject": [70, 94, 209, 256, 856], "eegbci": [70, 83, 380, 381, 856], "The": [70, 141, 145, 150, 168, 169, 170, 171, 176, 179, 181, 201, 215, 239, 855, 856, 861, 862, 865], "relationship": [70, 176], "between": [70, 169, 229], "imped": 70, "transform": [71, 114, 138, 157, 161, 196, 234, 236, 735, 736, 737, 738, 739, 740, 741, 862, 865], "current": [71, 116, 177, 255, 862, 867, 880], "densiti": [71, 103, 104, 108, 109, 211, 218, 241], "csd": [71, 103], "show": [72, 129, 256], "eog": [72, 73, 199, 204, 205, 207, 256], "artifact": [72, 73, 74, 75, 81, 82, 199, 203, 204, 205, 207, 256, 855], "reduc": 73, "through": 73, "import": [73, 75, 127, 189, 190, 191, 256, 839], "packag": [73, 847, 862], "befor": [73, 204, 839], "after": [73, 837], "comparison": [73, 134, 226, 230], "find": [74, 222, 231, 234], "channel": [74, 78, 87, 117, 141, 146, 150, 152, 168, 169, 170, 171, 189, 200, 201, 205, 208, 211, 215, 231, 234, 236, 241, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 665, 855, 856, 862, 865], "visualis": [75, 227], "nir": [75, 590, 591, 592, 593, 594, 595], "correct": [75, 97, 142, 145, 226], "add": [75, 116], "artifici": 75, "tempor": [75, 84, 111, 195, 196, 234, 235, 236], "deriv": 75, "repair": [75, 203, 204, 205, 207, 862], "algorithm": [76, 256, 854, 862], "interpol": [78, 120, 200, 862], "bad": [78, 157, 158, 162, 200, 201, 234, 236, 855, 862], "locat": [79, 135, 143, 152, 171, 183, 190, 191, 211, 218, 862], "micro": 79, "scale": [79, 86, 146, 153, 862], "intracrani": [79, 135], "contact": [79, 135], "maxwel": [80, 210, 862], "movement": [80, 81, 209, 210], "compens": [80, 189, 210, 862, 865], "annot": [81, 82, 138, 169, 201, 211, 217, 258, 855], "reestim": 81, "dev_head_t": 81, "head": [81, 116, 157, 159, 161, 162, 183, 190, 209, 256, 855, 862], "posit": [81, 115, 116, 209], "respect": 81, "mean": [81, 152], "record": [81, 82, 166, 190, 193, 207], "muscl": [82, 83], "z": 82, "score": [82, 90], "compon": [83, 145, 181, 205], "let": 83, "": [83, 114, 161, 880], "now": 83, "replic": 83, "thi": [83, 195], "denois": [84, 88, 212], "oversampl": 84, "shift": 86, "remap": 87, "type": [87, 141, 152, 170, 195, 202, 215, 241, 256, 839, 862], "main": 90, "paramet": [90, 168, 201, 228, 230, 231, 234, 235, 236], "true": 90, "correspond": [90, 855], "amplitud": [90, 152, 201], "threshold": [90, 226, 227], "For": [90, 865], "region": [90, 116, 152], "anatomi": 94, "responss": 94, "permut": [96, 100, 230, 231, 234, 235], "f": [96, 99, 231], "test": [96, 97, 100, 138, 226, 230, 231, 234, 235, 838, 839, 845], "1d": 96, "cluster": [96, 226, 228, 229, 230, 231, 234, 235, 236, 868], "fdr": [97, 226, 230], "t": [97, 100, 234, 859], "rer": 99, "p": 99, "analys": [101, 855], "featur": [101, 137, 138], "bin": [101, 189, 859], "spectral": [103, 104, 108, 109, 218, 239, 241], "psd": [104, 108, 109, 241], "lock": [107, 145], "vectorview": [109, 189, 215], "align": [109, 135, 157, 161, 256, 665, 855], "alpha": 109, "beta": 109, "induc": 110, "whiten": [111, 121, 153, 862, 865], "ar": [111, 150, 172, 199, 206, 859, 865], "erd": 112, "explor": [113, 137], "relat": [113, 152, 846, 865], "dynam": 113, "specif": 113, "band": 113, "multitap": 114, "v": [114, 196, 215, 842], "morlet": [114, 716, 726], "stockwel": 114, "hilbert": 114, "calcul": [114, 241, 855, 862], "tfr": [114, 230, 725, 726], "wavelet": 114, "narrow": 114, "bandpass": 114, "without": [114, 157], "over": [114, 117, 141, 196, 211], "arrai": [114, 169, 216, 248, 862], "3d": [115, 151, 171, 181, 837, 859, 862, 868], "2d": [115, 171, 181, 868], "imag": [115, 116, 117, 143, 151, 173, 211, 256, 854, 862, 868], "snapshot": 115, "manual": [115, 171, 205], "viz": [116, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820], "brain": [116, 124, 127, 137, 161, 181, 211, 748], "inform": [116, 170, 172, 179, 202, 211, 256, 855, 862, 865], "modifi": [116, 144, 168, 215, 839], "highlight": 116, "includ": [116, 216, 256], "screenshot": 116, "export": [116, 146, 162, 215, 252, 440, 441, 442, 443], "scalp": [118, 142, 151], "topograph": [119, 120, 151, 153, 211], "arrowmap": 119, "basic": [120, 137, 141, 145, 150, 202, 241, 839, 865], "plot_topomap": [120, 810], "addit": 120, "more": [120, 127, 211, 865], "advanc": [120, 837], "usag": 120, "anim": 120, "layout": [123, 125, 171, 230, 313], "system": [123, 125, 166, 172, 189, 191, 193, 256, 845, 862], "neuromag": [123, 189], "bti": [123, 186, 189, 256, 856], "kit": [123, 189, 256, 481], "artemis123": [123, 189], "helmet": 124, "make": [127, 169, 216, 839, 861], "readi": 127, "montag": [127, 171], "inset": 127, "group": [128, 145, 855], "roi": [128, 241], "sort": 128, "rt": 128, "ssp": [131, 206, 207, 256, 855, 862], "topographi": [133, 142, 151, 241], "hemispher": [134, 256, 855], "t1": 135, "acpc": 135, "freesurf": [135, 156, 161, 256, 840, 855, 862, 865], "recon": 135, "ct": 135, "mr": 135, "mark": [135, 200, 855], "each": [135, 222], "warp": 135, "atla": 135, "work": [136, 137, 144, 166, 171, 173, 192, 200, 216, 219, 837, 859], "seeg": [136, 856, 868], "ecog": [137, 856, 868], "templat": [137, 160, 205, 856], "evolut": 137, "sleep": [138, 856], "stage": 138, "classif": 138, "polysomnographi": 138, "psg": 138, "hypnogram": 138, "30": 138, "found": [138, 859], "same": 138, "step": [138, 156, 842, 859], "bob": 138, "engin": 138, "scikit": 138, "python": [138, 156, 161, 162, 167, 172, 173, 200, 202, 205, 206, 210, 215, 221, 245, 256, 836, 837, 839, 841, 842, 843, 844, 847, 854, 857, 858, 859, 864, 868, 870], "multiclass": 138, "workflow": [138, 839, 855], "further": 138, "exercis": [138, 159, 196, 222, 231, 240, 241], "clinic": [139, 166, 868], "applic": [139, 166], "structur": [141, 150, 169, 170, 176, 189, 215, 221, 862, 865], "discontinu": 141, "subselect": [141, 216], "select": [141, 144, 150, 205, 211, 215, 234, 865], "index": [141, 146, 215, 241], "drop": [141, 150, 170, 215], "reorder": [141, 150, 215], "chang": [141, 208, 215, 839, 880], "name": [141, 152, 189, 215, 839, 865], "domain": [141, 191, 205, 215, 239], "other": [141, 150, 202, 255, 837, 839, 843, 854, 862, 866], "form": [141, 241], "baselin": [142, 202, 222, 287], "tradit": 142, "regressor": 142, "wave": [142, 191], "interact": [142, 143, 217, 218, 857], "term": 142, "pipelin": [143, 868], "script": [143, 173, 857], "projector": [143, 206, 207, 208, 218], "spectrum": [143, 239, 704], "metadata": [144, 145], "restrict": 144, "datafram": [144, 146], "queri": [144, 170, 215], "ad": [144, 145, 173, 206], "auto": 145, "make_metadata": [145, 434], "specifi": [145, 191], "keep": 145, "onli": [145, 843, 847], "first": [145, 156, 839, 842, 868], "new": [145, 839, 880], "column": [145, 169], "describ": [145, 839], "stimul": [145, 241], "side": 145, "knowledg": 145, "ern": 145, "panda": 146, "wide": 146, "versu": [146, 230, 857], "long": [146, 215], "divid": 147, "equal": [147, 216], "characterist": 147, "fix": [147, 162, 179, 180], "length": [147, 202], "case": 147, "segment": [148, 166], "subset": [150, 170, 241], "memori": [150, 189, 862], "core": [150, 843, 856, 859], "combin": [150, 216], "trace": 151, "butterfli": 151, "arrow": 151, "joint": [151, 240], "subplot": 151, "potenti": [152, 866], "global": 152, "gfp": 152, "interest": [152, 231, 861], "grand": 152, "latenc": 152, "measur": [152, 230, 236, 256], "peak": 152, "mri": [156, 157, 160, 161, 173, 181, 183, 256, 853, 856, 862], "anatom": [156, 855], "fsaverag": [156, 160, 181, 856], "coordin": [157, 161, 191, 256, 855, 862, 865], "frame": [157, 161, 855], "understand": [157, 161], "definit": [157, 231, 862, 865], "A": [157, 859], "good": 157, "defac": 157, "tran": [157, 865], "gui": [157, 256, 469, 470], "autom": 158, "approach": [158, 256], "coregistr": [158, 159, 173, 256, 365, 469], "initi": 158, "fiduci": 158, "refin": 158, "icp": 158, "omit": 158, "final": 158, "bem": [159, 162, 173, 256, 302, 303, 304, 305, 306, 307, 308, 309, 855, 859, 862], "adult": 160, "setup": [160, 223, 230, 231, 837, 842, 850], "infant": [160, 856], "surrog": 160, "under": [161, 859], "hood": 161, "ra": [161, 183], "spheric": 161, "decim": [161, 859], "mni": [161, 181], "affin": 161, "inflat": 161, "blender": 162, "edit": [162, 173], "low": [162, 199, 202], "high": [162, 202, 256, 856, 865], "tip": 162, "what": [162, 169, 199, 205, 206, 207, 256, 821, 846, 859, 880], "you": 162, "still": [162, 859], "error": 162, "clean": [162, 256], "dens": 162, "smooth": [162, 862], "topolog": 162, "deal": 162, "topologi": [162, 862], "pymeshfix": 162, "should": [163, 846, 859], "i": [163, 169, 171, 205, 206, 207, 253, 837, 843, 845, 846, 859, 862], "regular": [163, 178, 195, 371, 859, 862], "tutori": [166, 174, 184, 185, 186, 868], "introductori": [166, 174], "overview": [167, 199, 839, 846, 855, 856, 863, 865], "detect": [167, 199, 201, 211], "experiment": 167, "place": [168, 171, 857], "pick": 168, "copi": 168, "pars": 169, "stim": [169, 665], "middl": 169, "embed": 169, "multipl": [169, 226, 230, 859], "per": [169, 855], "obtain": 170, "built": [171, 218], "eeglab": [171, 190, 843, 866], "sphere": [171, 862], "keyword": 171, "avail": 171, "mani": 171, "control": 171, "digit": [171, 862], "render": [171, 181, 837], "configur": [172, 839, 845, 849], "where": 172, "store": 172, "environ": [172, 839], "log": [172, 190, 849], "your": [172, 838, 839], "start": [173, 864], "report": [173, 202, 256, 274, 873], "inverseoper": [173, 524], "code": [173, 239, 839, 842, 856], "e": 173, "g": 173, "tag": [173, 241, 865], "entir": 173, "folder": [173, 256], "html": 173, "descript": [173, 862], "text": 173, "inspect": [176, 240, 862], "sourcespac": [176, 277], "src": 176, "equival": 177, "ecd": 177, "eloreta": [178, 862], "role": 179, "orient": [179, 180, 862], "loos": 179, "limit": 179, "them": 179, "discard": 179, "variou": 180, "free": [180, 226], "introduct": 181, "handl": [181, 200], "depth": [181, 862], "bia": [181, 207], "On": [181, 865], "slice": 181, "orthoview": 181, "glass": 181, "maximum": [181, 226], "voxel": [181, 183], "three": 181, "given": 183, "prerequisit": 183, "coord": 183, "elekta": [184, 189], "phantom": [184, 185, 186], "4d": [186, 256, 856], "neuroimag": [186, 189, 856], "devic": [189, 190, 191, 862], "megin": 189, "triux": 189, "fil": 189, "4": [189, 880], "d": 189, "dir": 189, "polhemu": 189, "softwar": [189, 202, 846, 854, 862, 865, 866], "gradient": [189, 862, 865], "ricoh": 189, "con": 189, "sqd": 189, "fieldtrip": [189, 231], "mat": 189, "arbitrari": [189, 236], "brainvis": 190, "vhdr": 190, "vmrk": 190, "european": 190, "edf": 190, "biosemi": 190, "bdf": 190, "gdf": 190, "neuroscan": 190, "cnt": 190, "egi": 190, "simpl": [190, 859], "binari": 190, "mff": 190, "fdt": 190, "nicolet": 190, "eximia": 190, "nxe": 190, "persyst": 190, "lai": 190, "dat": 190, "nihon": 190, "kohden": 190, "21e": 190, "pnt": 190, "xdfz": 190, "shape": 190, "fnir": [191, 211, 856], "standard": [191, 211, 226, 381, 839], "snirf": 191, "nirx": 191, "directori": [191, 856, 862, 865], "hdr": 191, "hitachi": 191, "csv": 191, "boxi": 191, "txt": 191, "legaci": [191, 239], "tsv": 191, "auditori": [192, 856], "strf": 195, "audio": 195, "recov": 195, "philosophi": [196, 857], "class": [196, 239, 837, 845, 852, 868], "scaler": [196, 419], "psdestim": [196, 415], "filterestim": [196, 412], "comodul": 196, "do": [199, 859], "drift": [199, 203, 205], "line": [199, 203, 256, 839, 865], "heartbeat": 199, "ecg": [199, 205, 207, 256], "ocular": 199, "block": 200, "execut": 200, "when": [200, 206, 839], "look": [200, 205, 859], "why": [200, 859, 862], "reject": [201, 855], "span": 201, "break": 201, "reject_by_annot": 201, "programmat": [201, 217], "background": [202, 203, 206, 208, 210, 222], "statement": 202, "fir": 202, "iir": 202, "pitfal": [202, 866], "pass": 202, "default": [202, 862], "c": [202, 845], "cutoff": 202, "order": 202, "transit": 202, "bandwidth": 202, "roll": 202, "off": [202, 837], "passband": 202, "rippl": 202, "stopband": 202, "attenu": 202, "delai": 202, "direct": 202, "resampl": [203, 226, 450, 859], "slow": [203, 205, 859], "best": [203, 206], "practic": [203, 206], "origin": [204, 222], "subtract": 204, "dimension": 205, "ignor": 205, "terminologi": 206, "environment": 207, "affect": [207, 217], "choos": 207, "number": [207, 215, 862], "via": [207, 212, 843, 862, 868], "infinit": 208, "rest": [208, 856], "bipolar": 208, "hpi": 209, "separ": [210, 241], "sss": 210, "spatiotempor": [210, 231], "tsss": 210, "caveat": 210, "infrar": 211, "spectroscopi": 211, "provid": [211, 226], "meaning": 211, "appropri": 211, "intens": 211, "qualiti": 211, "haemoglobin": 211, "heart": 211, "rate": [211, 226], "consist": [211, 221, 839], "tap": 211, "right": 211, "hand": 211, "nuisanc": 212, "attribut": 215, "sampl": [215, 228, 230, 235, 401, 856], "len": 215, "get_data": 215, "wai": 215, "exclud": 216, "id": [216, 843, 865], "descriptor": 216, "togeth": 216, "brows": [218, 256], "scratch": 221, "unit": [221, 862], "corrupt": 222, "known": 222, "period": 222, "sinusoid": 222, "distant": 222, "center": [222, 850], "vertic": 222, "infer": 226, "hypothesi": 226, "null": 226, "parametr": [226, 228, 229], "hat": 226, "varianc": 226, "adjust": 226, "non": [226, 228, 229], "bonferroni": 226, "fals": 226, "discoveri": 226, "size": 226, "adjac": [226, 228, 231, 234], "enhanc": [226, 880], "tfce": 226, "signific": [227, 234], "1": [228, 880], "mass": 230, "univari": 230, "twowai": 230, "repeat": [230, 236], "anova": [230, 236], "account": 230, "neighbor": 231, "spatio": [234, 235, 236], "one": [234, 236], "2": [235, 880], "contrast": 236, "epochsspectrum": [239, 702], "migrat": [239, 866], "quick": 239, "action": 239, "inter": 240, "itc": 240, "ssvep": [241, 406, 856], "vssr": 241, "ratio": 241, "spectra": 241, "12": [241, 880], "hz": 241, "indic": 241, "check": [241, 256, 862], "15": [241, 880], "debrief": 241, "bonu": 241, "durat": 241, "resolv": 241, "bibliographi": 244, "paper": 245, "cite": [245, 854, 859], "o": [253, 843, 862], "fund": [255, 861], "support": [255, 843, 862, 868], "institut": [255, 861, 867], "partner": [255, 861, 867], "former": [255, 867], "command": [256, 839, 859], "tool": [256, 839, 846], "anonym": 256, "browse_raw": 256, "bti2fiff": 256, "magneswh3600": 256, "note": [256, 865], "clean_eog_ecg": 256, "ie": 256, "compare_fiff": [256, 756], "fiff": [256, 865], "compute_proj_ecg": [256, 570], "compute_proj_eog": [256, 571], "coreg": [256, 365, 366, 367], "flash_bem": 256, "3": [256, 880], "layer": 256, "flash": [256, 862], "freeview_bem_surfac": 256, "freeview": 256, "kit2fiff": 256, "nyu": 256, "make_scalp_surfac": [256, 308], "maxfilt": 256, "prepare_bem_model": 256, "colloc": 256, "setup_forward_model": 256, "setup_source_spac": [256, 648], "bilater": 256, "subsampl": 256, "show_fiff": [256, 509], "content": [256, 856, 868], "show_info": 256, "surf2bem": 256, "sys_info": [256, 699], "watershed_bem": 256, "watersh": [256, 859, 862], "acqparserfif": 257, "baseepoch": 259, "bihemilabel": 260, "dipolefix": 263, "epochsarrai": 265, "evokedarrai": 267, "mixedsourceestim": 271, "mixedvectorsourceestim": 272, "vectorsourceestim": 278, "volvectorsourceestim": 280, "add_reference_channel": 281, "add_source_space_dist": 282, "annotations_from_ev": 283, "apply_forward": 284, "apply_forward_raw": 285, "average_forward_solut": 286, "rescal": 287, "apply_d": 289, "apply_dics_csd": 290, "apply_dics_epoch": 291, "apply_dics_tfr_epoch": 292, "apply_lcmv": 293, "apply_lcmv_cov": 294, "apply_lcmv_epoch": 295, "apply_lcmv_raw": 296, "make_d": 297, "make_lcmv": 298, "make_lcmv_resolution_matrix": 299, "rap_mus": 300, "read_beamform": 301, "conductormodel": 302, "convert_flash_mri": 303, "distance_to_bem": 304, "fit_sphere_to_headshap": 305, "get_fitting_dig": 306, "make_flash_bem": 307, "make_watershed_bem": 309, "channel_indices_by_typ": 310, "channel_typ": 311, "digmontag": 312, "combine_channel": 314, "compute_dev_head_t": 315, "compute_native_head_t": 316, "equalize_channel": [317, 435], "find_ch_adjac": 318, "find_layout": 319, "fix_mag_coil_typ": 320, "generate_2d_layout": 321, "get_builtin_ch_adjac": 322, "get_builtin_montag": 323, "make_1020_channel_select": 324, "make_dig_montag": 325, "make_eeg_layout": 326, "make_grid_layout": 327, "make_standard_montag": 328, "read_ch_adjac": 329, "read_custom_montag": 330, "read_dig_captrak": 331, "read_dig_dat": 332, "read_dig_egi": 333, "read_dig_fif": 334, "read_dig_hpt": 335, "read_dig_localit": 336, "read_dig_polhemus_isotrak": 337, "read_layout": 338, "read_polhemus_fastscan": 339, "rename_channel": [340, 636], "chpi": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "compute_chpi_amplitud": 341, "compute_chpi_loc": 342, "compute_chpi_snr": 343, "compute_head_po": 344, "extract_chpi_locs_ctf": 345, "extract_chpi_locs_kit": 346, "filter_chpi": 347, "get_active_chpi": 348, "get_chpi_info": 349, "head_pos_to_trans_rot_t": 350, "read_head_po": 351, "write_head_po": 352, "combine_evok": 353, "compute_covari": 354, "compute_proj_epoch": 355, "compute_proj_evok": 356, "compute_proj_raw": 357, "compute_rank": 358, "compute_raw_covari": 359, "compute_source_morph": 360, "concatenate_epoch": 361, "concatenate_ev": 362, "concatenate_raw": 363, "convert_forward_solut": 364, "estimate_head_mri_t": 366, "get_mni_fiduci": 367, "count_ev": 368, "cov": [369, 370, 371, 865], "compute_whiten": 369, "prepare_noise_cov": 370, "create_default_subject": 372, "create_info": 373, "cuda": [374, 375, 376, 837], "get_cuda_memori": 374, "init_cuda": 375, "set_cuda_devic": 376, "bst_auditori": 377, "data_path": [377, 378, 379, 382, 383, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408], "bst_raw": 378, "bst_rest": 379, "load_data": [380, 394], "epilepsy_ecog": 382, "erp_cor": 383, "fetch_aparc_sub_parcel": 384, "fetch_dataset": 385, "fetch_fsaverag": 386, "fetch_hcp_mmp_parcel": 387, "fetch_infant_templ": 388, "fetch_phantom": 389, "fnirs_motor": 390, "has_dataset": 391, "hf_sef": 392, "kiloword": [393, 856], "misc": 395, "mtrf": [396, 856], "multimod": [397, 856], "phantom_4dbti": 399, "refmeg_nois": 400, "sleep_physionet": [402, 403], "ag": 402, "fetch_data": [402, 403], "temazepam": 403, "somato": 404, "spm_face": 405, "ucl_opm_auditori": 407, "visual_92_categori": 408, "decimate_surfac": 409, "generalizingestim": 413, "linearmodel": 414, "receptivefield": 416, "slidingestim": 420, "temporalfilt": 421, "timedelayingridg": 422, "timefrequ": 423, "unsupervisedspatialfilt": 424, "compute_em": 426, "cross_val_multiscor": 427, "get_coef": 428, "dig_mri_dist": 429, "get_phantom_dipol": 430, "average_mov": 431, "combine_event_id": 432, "equalize_epoch_count": 433, "define_target_ev": 436, "match_event_nam": 437, "shift_time_ev": 438, "events_from_annot": 439, "export_epoch": 440, "export_evok": 441, "export_evokeds_mff": 442, "export_raw": 443, "extract_label_time_cours": 444, "construct_iir_filt": 445, "create_filt": 446, "estimate_ringing_sampl": 447, "filter_data": 448, "notch_filt": 449, "find_ev": 451, "find_stim_step": 452, "fit_dipol": 453, "compute_depth_prior": 454, "compute_orient_prior": 455, "restrict_forward_to_label": 456, "restrict_forward_to_stc": 457, "get_config": 458, "get_config_path": 459, "get_head_surf": 460, "get_meg_helmet_surf": 461, "get_montage_volume_label": 462, "get_volume_labels_from_aseg": 463, "get_volume_labels_from_src": 464, "grade_to_tri": 465, "grade_to_vertic": 466, "grand_averag": 467, "grow_label": 468, "locate_ieeg": 470, "head_to_mni": 471, "head_to_mri": 472, "inverse_spars": [473, 474, 475, 476], "gamma_map": 473, "make_stc_from_dipol": 474, "mixed_norm": 475, "tf_mixed_norm": 476, "io": [477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], "baseraw": 477, "rawarrai": 479, "anonymize_info": 480, "read_mrk": 481, "read_fiduci": 482, "read_info": 483, "read_raw": 484, "read_raw_artemis123": 485, "read_raw_bdf": 486, "read_raw_boxi": 487, "read_raw_brainvis": 488, "read_raw_bti": 489, "read_raw_cnt": 490, "read_raw_ctf": 491, "read_raw_curri": 492, "read_raw_edf": 493, "read_raw_eeglab": 494, "read_raw_egi": 495, "read_raw_eximia": 496, "read_raw_fieldtrip": 497, "read_raw_fif": 498, "read_raw_fil": 499, "read_raw_gdf": 500, "read_raw_hitachi": 501, "read_raw_kit": 502, "read_raw_nedf": 503, "read_raw_nicolet": 504, "read_raw_nihon": 505, "read_raw_nirx": 506, "read_raw_persyst": 507, "read_raw_snirf": 508, "write_fiduci": 510, "select_sourc": 511, "label_sign_flip": 512, "labels_to_stc": 513, "make_ad_hoc_cov": 514, "make_bem_model": 515, "make_bem_solut": 516, "make_field_map": 517, "make_fixed_length_epoch": 518, "make_fixed_length_ev": 519, "make_forward_dipol": 520, "make_forward_solut": 521, "make_sphere_model": 522, "merge_ev": 523, "minimum_norm": [524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "apply_invers": 525, "apply_inverse_cov": 526, "apply_inverse_epoch": 527, "apply_inverse_raw": 528, "apply_inverse_tfr_epoch": 529, "compute_rank_invers": 530, "compute_source_psd": 531, "compute_source_psd_epoch": 532, "estimate_snr": 533, "get_cross_talk": 534, "get_point_spread": 535, "make_inverse_oper": 536, "make_inverse_resolution_matrix": 537, "prepare_inverse_oper": 538, "read_inverse_oper": 539, "resolution_metr": 540, "source_band_induced_pow": 541, "source_induced_pow": 542, "write_inverse_oper": 543, "morph_label": 544, "morph_source_spac": 545, "open_doc": 546, "open_report": 547, "parse_config": 548, "pick_channel": 549, "pick_channels_cov": 550, "pick_channels_forward": 551, "pick_channels_regexp": 552, "pick_ev": 553, "pick_info": 554, "pick_typ": 555, "pick_types_forward": 556, "eogregress": 557, "annotate_amplitud": 560, "annotate_break": 561, "annotate_mov": 562, "annotate_muscle_zscor": 563, "annotate_nan": 564, "compute_average_dev_head_t": 565, "compute_bridged_electrod": 566, "compute_current_source_dens": 567, "compute_fine_calibr": 568, "compute_maxwell_basi": 569, "corrmap": 572, "cortical_signal_suppress": 573, "create_ecg_epoch": 574, "create_eog_epoch": 575, "equalize_bad": 576, "find_bad_channels_maxwel": 577, "find_ecg_ev": 578, "find_eog_ev": 579, "fix_stim_artifact": 580, "ica_find_ecg_ev": 581, "ica_find_eog_ev": 582, "ieeg": [583, 584, 585], "make_montage_volum": 583, "project_sensors_onto_brain": 584, "warp_montag": 585, "infomax": 586, "interpolate_bridged_electrod": 587, "maxwell_filt": 588, "maxwell_filter_prepare_emptyroom": 589, "beer_lambert_law": 590, "optical_dens": 591, "scalp_coupling_index": 592, "short_channel": 593, "source_detector_dist": 594, "temporal_derivative_distribution_repair": 595, "oversampled_temporal_project": 596, "peak_find": 597, "read_eog_regress": 598, "read_fine_calibr": 599, "read_ica": 600, "read_ica_eeglab": 601, "realign_raw": 602, "regress_artifact": 603, "write_fine_calibr": 604, "random_parcel": 605, "read_annot": 606, "read_bem_solut": 607, "read_bem_surfac": 608, "read_cov": 609, "read_dipol": 610, "read_epoch": 611, "read_epochs_eeglab": 612, "read_epochs_fieldtrip": 613, "read_epochs_kit": 614, "read_ev": 615, "read_evoked_besa": 616, "read_evoked_fieldtrip": 617, "read_evok": 618, "read_evokeds_mff": 619, "read_forward_solut": 620, "read_freesurfer_lut": 621, "read_label": 622, "read_labels_from_annot": 623, "read_lta": 624, "read_morph_map": 625, "read_proj": 626, "read_reject_paramet": 627, "read_source_estim": 628, "read_source_morph": 629, "read_source_spac": 630, "read_surfac": 631, "read_talxfm": 632, "read_tran": 633, "read_tri": 634, "read_vectorview_select": 635, "scale_bem": 637, "scale_label": 638, "scale_mri": 639, "scale_source_spac": 640, "sensitivity_map": 641, "set_bipolar_refer": 642, "set_cache_dir": 643, "set_config": 644, "set_eeg_refer": 645, "set_log_fil": 646, "set_log_level": 647, "setup_volume_source_spac": 649, "sourcesimul": 650, "add_chpi": 651, "add_ecg": 652, "add_eog": 653, "add_nois": 654, "cosine_scor": 655, "f1_score": 656, "peak_position_error": 657, "precision_scor": 658, "recall_scor": 659, "region_localization_error": 660, "roc_auc_scor": 661, "spatial_deviation_error": 662, "select_source_in_label": 663, "simulate_evok": 664, "simulate_raw": 665, "simulate_sparse_stc": 666, "simulate_stc": 667, "source_spac": [668, 669], "compute_distance_to_sensor": 668, "get_decimated_surfac": 669, "spatial_dist_adjac": 670, "spatial_inter_hemi_adjac": 671, "spatial_src_adjac": 672, "spatial_tris_adjac": 673, "spatio_temporal_dist_adjac": 674, "spatio_temporal_src_adjac": 675, "spatio_temporal_tris_adjac": 676, "split_label": 677, "stat": [678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694], "bonferroni_correct": 678, "bootstrap_confidence_interv": 679, "combine_adjac": 680, "f_mway_rm": 681, "f_onewai": 682, "f_threshold_mway_rm": 683, "fdr_correct": 684, "linear_regress": 685, "linear_regression_raw": 686, "permutation_cluster_1samp_test": 687, "permutation_cluster_test": 688, "permutation_t_test": 689, "spatio_temporal_cluster_1samp_test": 690, "spatio_temporal_cluster_test": 691, "summarize_clusters_stc": 692, "ttest_1samp_no_p": 693, "ttest_ind_no_p": 694, "stc_near_sensor": 695, "stc_to_label": 696, "complete_surface_info": 697, "read_curvatur": 698, "time_frequ": [700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733], "averagetfr": 700, "crossspectraldens": 701, "epochstfr": 703, "csd_array_fouri": 705, "csd_array_morlet": 706, "csd_array_multitap": 707, "csd_fourier": 708, "csd_morlet": 709, "csd_multitap": 710, "csd_tfr": 711, "dpss_window": 712, "fit_iir_model_raw": 713, "fwhm": 714, "istft": 715, "pick_channels_csd": 717, "psd_array_multitap": 718, "psd_array_welch": 719, "read_csd": 720, "read_spectrum": 721, "read_tfr": 722, "stft": 723, "stftfreq": 724, "cwt": 725, "tfr_array_morlet": 727, "tfr_array_multitap": 728, "tfr_array_stockwel": 729, "tfr_morlet": 730, "tfr_multitap": 731, "tfr_stockwel": 732, "write_tfr": 733, "transform_surface_to": 734, "apply_volume_registr": 736, "apply_volume_registration_point": 737, "compute_volume_registr": 738, "quat_to_rot": 739, "read_ras_mni_t": 740, "rot_to_quat": 741, "use_coil_def": 742, "use_log_level": 743, "util": [744, 745, 865], "deprec": [744, 839], "warn": [745, 839], "verbos": 746, "vertex_to_mni": 747, "clickableimag": 749, "figure3d": 750, "add_background_imag": 751, "centers_to_edg": 752, "circular_layout": 753, "close_3d_figur": 754, "close_all_3d_figur": 755, "create_3d_figur": 757, "get_3d_backend": 758, "get_brain_class": 759, "get_browser_backend": 760, "iter_topographi": 761, "link_brain": 762, "mne_analyze_colormap": 763, "plot_align": 764, "plot_arrowmap": 765, "plot_bem": 766, "plot_brain_colorbar": 767, "plot_bridged_electrod": 768, "plot_ch_adjac": 769, "plot_channel_labels_circl": 770, "plot_chpi_snr": 771, "plot_compare_evok": 772, "plot_cov": 773, "plot_csd": 774, "plot_dipole_amplitud": 775, "plot_dipole_loc": 776, "plot_drop_log": 777, "plot_epoch": 778, "plot_epochs_imag": 779, "plot_epochs_psd_topomap": 780, "plot_ev": 781, "plot_evok": 782, "plot_evoked_field": 783, "plot_evoked_imag": 784, "plot_evoked_joint": 785, "plot_evoked_topo": 786, "plot_evoked_topomap": 787, "plot_evoked_whit": 788, "plot_filt": 789, "plot_head_posit": 790, "plot_ica_compon": 791, "plot_ica_overlai": 792, "plot_ica_properti": 793, "plot_ica_scor": 794, "plot_ica_sourc": 795, "plot_ideal_filt": 796, "plot_layout": 797, "plot_montag": 798, "plot_projs_joint": 799, "plot_projs_topomap": 800, "plot_raw": 801, "plot_raw_psd": 802, "plot_regression_weight": 803, "plot_sensor": 804, "plot_snr_estim": 805, "plot_source_estim": 806, "plot_sparse_source_estim": 807, "plot_tfr_topomap": 808, "plot_topo_image_epoch": 809, "plot_vector_source_estim": 811, "plot_volume_source_estim": 812, "set_3d_backend": 813, "set_3d_opt": 814, "set_3d_titl": 815, "set_3d_view": 816, "set_browser_backend": 817, "snapshot_brain_montag": 818, "use_3d_backend": 819, "use_browser_backend": 820, "write_bem_solut": 822, "write_bem_surfac": 823, "write_cov": 824, "write_ev": 825, "write_evok": 826, "write_forward_solut": 827, "write_head_bem": 828, "write_label": 829, "write_labels_to_annot": 830, "write_proj": 831, "write_source_spac": 832, "write_surfac": 833, "write_tran": 834, "glossari": 835, "homepag": 836, "jupyt": 837, "notebook": 837, "jupyterlab": 837, "fa": [837, 845], "brand": [837, 845], "window": [837, 859], "instal": [837, 838, 840, 841, 842, 843, 844, 845, 846], "headless": 837, "linux": 837, "server": 837, "develop": [837, 839, 847, 858], "version": [837, 847, 880], "gpu": 837, "acceler": 837, "screen": 837, "mesa": 837, "troubleshoot": [837, 845], "troubl": 837, "upgrad": [837, 847], "maco": [837, 845, 859], "contribut": 839, "guid": 839, "git": 839, "gnu": 839, "fork": 839, "repositori": 839, "virtual": 839, "github": 839, "ssh": 839, "convent": 839, "requir": [839, 845], "must": 839, "have": [839, 855, 859], "coverag": 839, "document": [839, 861, 863, 865, 867, 868], "avoid": 839, "api": [839, 857, 868, 870, 880], "possibl": 839, "decor": 839, "changelog": [839, 880], "contributor": 839, "recur": 839, "pull": 839, "request": 839, "pr": 839, "fast": 839, "thorough": 839, "style": 839, "adher": 839, "guidelin": [839, 867], "we": 839, "mostli": [839, 857], "follow": 839, "numpi": [839, 862], "docstr": 839, "everywher": 839, "guidanc": 839, "organ": [839, 857, 862], "return": 839, "run": [839, 859], "suit": [839, 846], "build": 839, "pip": 843, "conda": 843, "depend": [843, 880], "minim": 843, "scenario": 843, "appl": 845, "download": [845, 859], "help": [846, 859, 860], "updat": [847, 868], "martino": 850, "cpp": 851, "most": 852, "typic": 855, "m": [855, 859], "recommend": 855, "subdivis": 855, "icosahedron": 855, "octahedron": 855, "creation": 855, "approxim": 855, "area": 855, "been": 855, "assum": 855, "1000": 855, "cm2": 855, "mesh": [855, 859, 862], "triangul": 855, "boundari": [855, 862], "element": [855, 862], "trigger": 856, "ucl": 856, "state": 856, "somatosensori": 856, "92": 856, "categori": 856, "polysomnograph": 856, "databas": [856, 868], "miscellan": 856, "integr": [857, 868], "scientif": 857, "stack": 857, "submodul": 857, "unifi": 857, "In": [857, 868], "frequent": 859, "ask": 859, "question": 859, "faq": 859, "issu": 859, "can": 859, "pyvista": 859, "extrem": 859, "even": 859, "sure": 859, "x": 859, "my": 859, "y": 859, "think": 859, "bug": [859, 880], "danger": 859, "pickl": 859, "later": 859, "onc": 859, "again": 859, "cpu": 859, "though": 859, "didn": 859, "tell": 859, "mysteri": 859, "take": 859, "forev": 859, "incorrect": 859, "govern": 861, "bdfl": 861, "steer": [861, 867], "council": [861, 867], "membership": 861, "conflict": 861, "privat": 861, "commun": [861, 867], "decis": 861, "histori": [861, 867], "acknowledg": 861, "licens": 861, "implement": 862, "detail": [862, 865], "intern": 862, "float": 862, "precis": 862, "effici": [862, 868], "preload": 862, "explicitli": 862, "access": [862, 868], "concept": 862, "subspac": 862, "tessel": 862, "discret": 862, "geometri": [862, 865], "coil": [862, 865], "magnet": 862, "normal": 862, "accur": 862, "accuraci": 862, "purpos": 862, "patch": 862, "constraint": 862, "weight": 862, "matlab": 865, "routin": 865, "w": 865, "demonstr": 865, "toolbox": 865, "constant": 865, "taginfo": 865, "dig": 865, "coildef": 865, "see": 865, "ch": 865, "proj": 865, "comp": 865, "mea": 865, "surf": 865, "inv": 865, "reginv": 865, "noisenorm": 865, "fill": 865, "mne_prepare_inverse_oper": 865, "benevol": 867, "dictat": 867, "life": 867, "particip": 867, "lead": 867, "roadmap": 868, "page": 868, "openmeeg": 868, "improv": 868, "bind": 868, "progress": 868, "divers": 868, "equiti": 868, "inclus": 868, "dei": 868, "deep": 868, "better": 868, "db": 868, "pediatr": 868, "complet": 868, "overhaul": 868, "realtim": 872, "dev0": 880, "2023": 880, "02": 880, "23": 880, "0": 880, "2022": 880, "21": 880, "author": 880, "10": 880, "11": 880, "08": 880, "03": 880, "behavior": 880, "24": 880, "2021": 880, "04": 880, "27": 880, "22": 880, "2020": 880, "17": 880, "09": 880, "20": 880, "19": 880, "2019": 880, "18": 880, "05": 880, "2018": 880, "16": 880, "01": 880, "2017": 880, "14": 880, "13": 880, "2016": 880, "2015": 880, "26": 880, "9": 880, "8": 880, "2014": 880, "06": 880, "25": 880, "7": 880, "2013": 880, "6": 880, "5": 880, "2012": 880, "2011": 880}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Connectivity Analysis Examples": [[0, "connectivity-analysis-examples"], [27, "connectivity-analysis-examples"]], "Brainstorm raw (median nerve) dataset": [[1, "brainstorm-raw-median-nerve-dataset"]], "References": [[1, "references"], [4, "references"], [8, "references"], [10, "references"], [12, "references"], [13, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [21, "references"], [33, "references"], [35, "references"], [40, "references"], [42, "references"], [43, "references"], [44, "references"], [46, "references"], [51, "references"], [54, "references"], [55, "references"], [58, "references"], [59, "references"], [65, "references"], [70, "references"], [71, "references"], [74, "references"], [75, "references"], [78, "references"], [83, "references"], [84, "references"], [88, "references"], [94, "references"], [101, "references"], [109, "references"], [112, "references"], [113, "references"], [117, "references"], [119, "references"], [121, "references"], [126, "references"], [129, "references"], [135, "references"], [138, "references"], [142, "references"], [145, "references"], [152, "references"], [156, "references"], [158, "references"], [163, "references"], [177, "references"], [179, "references"], [181, "references"], [184, "references"], [185, "references"], [192, "references"], [195, "references"], [196, "references"], [200, "references"], [202, "references"], [204, "references"], [205, "references"], [206, "references"], [207, "references"], [208, "references"], [210, "references"], [212, "references"], [223, "references"], [226, "references"], [227, "references"], [231, "references"], [239, "references"], [855, "references"], [856, "references"], [859, "references"], [862, "references"]], "HF-SEF dataset": [[2, "hf-sef-dataset"]], "Examples on open datasets": [[3, "examples-on-open-datasets"], [27, "examples-on-open-datasets"]], "Single trial linear regression analysis with the LIMO dataset": [[4, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[4, "about-the-data"]], "Load the data": [[4, "load-the-data"], [138, "load-the-data"], [142, "load-the-data"], [160, "load-the-data"]], "Visualize events": [[4, "visualize-events"]], "Visualize condition ERPs": [[4, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[4, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[4, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[4, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[4, "extract-regression-coefficients"]], "Plot model results": [[4, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[5, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[5, "prepare-data-for-localization"]], "Perform dipole fitting": [[5, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[5, "perform-minimum-norm-localization"]], "Computation times": [[6, "computation-times"], [20, "computation-times"], [25, "computation-times"], [56, "computation-times"], [66, "computation-times"], [85, "computation-times"], [91, "computation-times"], [102, "computation-times"], [106, "computation-times"], [130, "computation-times"], [140, "computation-times"], [149, "computation-times"], [155, "computation-times"], [165, "computation-times"], [175, "computation-times"], [188, "computation-times"], [194, "computation-times"], [198, "computation-times"], [214, "computation-times"], [220, "computation-times"], [225, "computation-times"], [233, "computation-times"], [238, "computation-times"], [243, "computation-times"]], "From raw data to dSPM on SPM Faces dataset": [[7, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[8, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[9, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[10, "representational-similarity-analysis"]], "Decoding source space data": [[11, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[12, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[13, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[14, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[15, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[16, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[17, "machine-learning-decoding-encoding-and-mvpa"], [27, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[18, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[18, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[19, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[19, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[19, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[19, "investigate-model-coefficients"], [19, "id5"]], "Create and fit a stimulus reconstruction model": [[19, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[19, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[21, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[21, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[22, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[23, "forward-modeling"], [27, "forward-modeling"]], "Generate a left cerebellum volume source space": [[24, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[26, "use-source-space-morphing"]], "Examples Gallery": [[27, "examples-gallery"]], "Input/Output": [[27, "input-output"], [62, "input-output"]], "Data Simulation": [[27, "data-simulation"], [89, "data-simulation"]], "Preprocessing": [[27, "preprocessing"], [77, "preprocessing"], [109, "preprocessing"], [142, "preprocessing"], [166, "preprocessing"], [167, "preprocessing"], [213, "preprocessing"], [855, "preprocessing"], [869, "preprocessing"]], "Visualization": [[27, "visualization"], [55, "visualization"], [122, "visualization"], [178, "visualization"], [839, "visualization"], [879, "visualization"]], "Time-Frequency Examples": [[27, "time-frequency-examples"], [105, "time-frequency-examples"]], "Statistics Examples": [[27, "statistics-examples"], [98, "statistics-examples"]], "Inverse problem and source analysis": [[27, "inverse-problem-and-source-analysis"], [36, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[28, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[29, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[30, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[31, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[32, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[33, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[34, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[34, "compute-covariances"]], "Compute some source estimates": [[34, "compute-some-source-estimates"]], "Plot source estimates": [[34, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[35, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[37, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[38, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[39, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[39, "compute-inverse-solution"], [41, "compute-inverse-solution"], [178, "compute-inverse-solution"]], "View source activations": [[39, "view-source-activations"]], "Using vector solutions": [[39, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[40, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[41, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[41, "set-up-our-source-space"]], "View the source space": [[41, "view-the-source-space"]], "Compute the fwd matrix": [[41, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[41, "plot-the-mixed-source-estimate"]], "Plot the surface": [[41, "plot-the-surface"]], "Plot the volume": [[41, "plot-the-volume"]], "Process labels": [[41, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[42, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[42, "compute-empty-room-covariance"]], "Epoch the data": [[42, "epoch-the-data"]], "Compute and plot covariances": [[42, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[42, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[43, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[43, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[43, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[43, "plot-results"], [44, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[43, "reading-and-writing-sourcemorph-from-and-to-disk"], [44, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[44, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[44, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[44, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[44, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[45, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[46, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[47, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[47, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[47, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[47, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[47, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[47, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[47, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[48, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[48, "visualize"], [49, "visualize"], [50, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[49, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[49, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[49, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[50, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[51, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[52, "reading-an-inverse-operator"]], "Reading an STC file": [[53, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[54, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[54, "mne"]], "dSPM": [[54, "dspm"], [862, "dspm"]], "Visualize results": [[54, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[55, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[55, "eegmeg"]], "MEG": [[55, "meg"]], "Estimate data SNR using an inverse": [[57, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[58, "computing-source-space-snr"]], "EEG": [[58, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[59, "compute-mxne-with-time-frequency-sparse-prior"]], "Plotting the full vector-valued MNE solution": [[60, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[61, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[63, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[64, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[65, "reading-xdf-eeg-data"]], "Using contralateral referencing for EEG": [[67, "using-contralateral-referencing-for-eeg"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[68, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[69, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[70, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[70, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[70, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[70, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[70, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[70, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[70, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[70, "the-relationship-between-bridging-and-impedances"]], "Summary": [[70, "summary"], [168, "summary"], [176, "summary"], [199, "summary"], [200, "summary"], [202, "summary"]], "Transform EEG data using current source density (CSD)": [[71, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[72, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[73, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[73, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[73, "perform-regression-and-remove-eog"]], "Before/after comparison": [[73, "before-after-comparison"]], "Find MEG reference channel artifacts": [[74, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[75, "visualise-nirs-artifact-correction-methods"]], "Import data": [[75, "import-data"]], "Add artificial artifacts to data": [[75, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[75, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[76, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[78, "interpolate-bad-channels-for-meg-eeg-channels"]], "Locating micro-scale intracranial electrode contacts": [[79, "locating-micro-scale-intracranial-electrode-contacts"]], "Maxwell filter data with movement compensation": [[80, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[81, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[81, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[81, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[82, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[82, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[82, "view-the-annotations"]], "Removing muscle ICA components": [[83, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[83, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[84, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[86, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[87, "remap-meg-channel-types"]], "XDAWN Denoising": [[88, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[90, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[90, "define-main-parameters-of-sources"]], "Create simulated source activity": [[90, "create-simulated-source-activity"], [94, "create-simulated-source-activity"]], "Simulate raw data": [[90, "simulate-raw-data"], [94, "simulate-raw-data"]], "Compute evoked from raw data": [[90, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[90, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[90, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[90, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[90, "for-region"]], "For Dipoles": [[90, "for-dipoles"]], "Generate simulated evoked data": [[92, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[93, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[94, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[94, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[94, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[95, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[96, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[97, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[99, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[100, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[101, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[103, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[104, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[104, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[107, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[108, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[109, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[109, "alignment-and-forward"]], "Alpha": [[109, "alpha"]], "Beta": [[109, "beta"]], "Compute induced power in the source space with dSPM": [[110, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[111, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[112, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[113, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[114, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[114, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[114, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[114, "multitaper-transform"]], "Stockwell (S) transform": [[114, "stockwell-s-transform"]], "Morlet Wavelets": [[114, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[114, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[114, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[114, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[115, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[115, "load-data"], [116, "load-data"], [179, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[115, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[115, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[116, "plotting-with-mne-viz-brain"]], "Add source information": [[116, "add-source-information"]], "Modify the view of the brain": [[116, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[116, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[116, "include-the-head-in-the-image"]], "Add sensors positions": [[116, "add-sensors-positions"]], "Add current dipoles": [[116, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[116, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[117, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[118, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[119, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[120, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[120, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[120, "additional-plot-topomap-options"]], "More advanced usage": [[120, "more-advanced-usage"]], "Interpolating topomaps": [[120, "interpolating-topomaps"]], "Animating the topomap": [[120, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[121, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting sensor layouts of MEG systems": [[123, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[123, "neuromag"]], "CTF": [[123, "ctf"]], "BTi": [[123, "bti"]], "KIT": [[123, "kit"]], "Artemis123": [[123, "artemis123"]], "Plot the MNE brain and helmet": [[124, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[125, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[126, "plot-a-cortical-parcellation"]], "Make figures more publication ready": [[127, "make-figures-more-publication-ready"]], "Imports": [[127, "imports"]], "Evoked plot with brain activation": [[127, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[127, "custom-timecourse-with-montage-inset"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[128, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Show noise levels from empty room data": [[129, "show-noise-levels-from-empty-room-data"]], "Sensitivity map of SSP projections": [[131, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[132, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[133, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[134, "cross-hemisphere-comparison"]], "Locating intracranial electrode contacts": [[135, "locating-intracranial-electrode-contacts"]], "Aligning the T1 to ACPC": [[135, "aligning-the-t1-to-acpc"]], "Freesurfer recon-all": [[135, "freesurfer-recon-all"]], "Aligning the CT to the MR": [[135, "aligning-the-ct-to-the-mr"]], "Marking the Location of Each Electrode Contact": [[135, "marking-the-location-of-each-electrode-contact"]], "Warping to a Common Atlas": [[135, "warping-to-a-common-atlas"]], "Working with sEEG data": [[136, "working-with-seeg-data"]], "Working with ECoG data": [[137, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[137, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[137, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[137, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[137, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[137, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[138, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[138, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[138, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[138, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[138, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[138, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[138, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[138, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[138, "further-analysis-of-the-data"]], "Exercise": [[138, "exercise"], [159, "exercise"], [196, "exercise"], [240, "exercise"]], "Clinical applications": [[139, "clinical-applications"], [166, "clinical-applications"]], "The Epochs data structure: discontinuous data": [[141, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[141, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[141, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[141, "subselecting-epochs"]], "Selecting epochs by index": [[141, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[141, "selecting-dropping-and-reordering-channels"], [150, "selecting-dropping-and-reordering-channels"], [215, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[141, "changing-channel-name-and-type"], [215, "changing-channel-name-and-type"]], "Selection in the time domain": [[141, "selection-in-the-time-domain"], [215, "selection-in-the-time-domain"]], "Extracting data in other forms": [[141, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[141, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[141, "iterating-over-epochs"]], "Regression-based baseline correction": [[142, "regression-based-baseline-correction"]], "Traditional baselining": [[142, "traditional-baselining"]], "Regression-based baselining": [[142, "regression-based-baselining"]], "Plot the baseline regressor": [[142, "plot-the-baseline-regressor"]], "Plot the ERPs": [[142, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[142, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[142, "examine-the-interaction-term"]], "Visualizing epoched data": [[143, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[143, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[143, null]], "Plotting projectors from an Epochs object": [[143, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[143, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[143, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[143, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[144, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[144, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[144, null]], "Modifying the metadata": [[144, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[144, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[144, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[145, "auto-generating-epochs-metadata"]], "Preparation": [[145, "preparation"]], "Creating metadata from events": [[145, "creating-metadata-from-events"]], "The basics of make_metadata": [[145, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[145, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[145, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[145, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[145, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[145, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[146, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[146, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[146, "scaling-time-and-channel-values"]], "Setting the index": [[146, "setting-the-index"]], "Wide- versus long-format DataFrames": [[146, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[147, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[147, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[147, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[148, "segmenting-continuous-data-into-epochs"], [166, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[150, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[150, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[150, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[150, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[150, null]], "Similarities among the core data structures": [[150, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[150, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[150, "combining-evoked-objects"]], "Other uses of Evoked objects": [[150, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[151, "visualizing-evoked-data"]], "Plotting signal traces": [[151, "plotting-signal-traces"]], "Butterfly plots": [[151, null]], "Plotting scalp topographies": [[151, "plotting-scalp-topographies"]], "Arrow maps": [[151, "arrow-maps"]], "Joint plots": [[151, "joint-plots"]], "Comparing Evoked objects": [[151, "comparing-evoked-objects"]], "Image plots": [[151, "image-plots"]], "Topographical subplots": [[151, "topographical-subplots"]], "3D Field Maps": [[151, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[152, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[152, "channel-names-and-types"]], "Channel locations": [[152, "channel-locations"]], "Setting the EEG reference": [[152, "setting-the-eeg-reference"], [208, "setting-the-eeg-reference"]], "Filtering": [[152, "filtering"]], "Evoked responses: epoching and averaging": [[152, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[152, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[152, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[152, "comparing-conditions"]], "Grand averages": [[152, "grand-averages"]], "Amplitude and latency measures": [[152, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[152, "peak-latency-and-amplitude"]], "Mean Amplitude": [[152, "mean-amplitude"]], "Plotting whitened data": [[153, "plotting-whitened-data"]], "Raw data with whitening": [[153, "raw-data-with-whitening"]], "Epochs with whitening": [[153, "epochs-with-whitening"]], "Evoked data with whitening": [[153, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[153, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[153, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[154, "estimating-evoked-responses"], [166, "estimating-evoked-responses"], [167, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[156, "freesurfer-mri-reconstruction"]], "First steps": [[156, "first-steps"], [842, "first-steps"]], "Anatomical reconstruction": [[156, "anatomical-reconstruction"]], "Use with MNE-Python": [[156, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[156, "fsaverage"]], "Source alignment and coordinate frames": [[157, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[157, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[157, "coordinate-frame-definitions"]], "A bad example": [[157, "a-bad-example"]], "A good example": [[157, "a-good-example"]], "Visualizing the transformations": [[157, "visualizing-the-transformations"]], "Example: MRI defacing": [[157, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[157, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[157, "alignment-without-mri"]], "Using an automated approach to coregistration": [[158, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[158, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[158, "initial-fit-with-fiducials"]], "Refining with ICP": [[158, "refining-with-icp"]], "Omitting bad points": [[158, "omitting-bad-points"]], "Final coregistration fit": [[158, "final-coregistration-fit"]], "Head model and forward computation": [[159, "head-model-and-forward-computation"]], "Computing the forward operator": [[159, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[159, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[159, "visualizing-the-coregistration"]], "Compute Source Space": [[159, "compute-source-space"]], "Compute forward solution": [[159, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[160, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[160, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[160, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[160, "infant-mri-surrogates"]], "Get an infant MRI template": [[160, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[161, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[161, "mri-coordinate-frames"]], "Under the hood": [[161, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[161, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[161, null]], "Using FreeSurfer\u2019s surface reconstructions": [[161, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[161, "cortical-alignment-spherical"]], "Surface decimation": [[161, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[161, "freesurfer-s-mni-affine-transformation"]], "Understanding the inflated brain": [[161, "understanding-the-inflated-brain"]], "Fixing BEM and head surfaces": [[162, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[162, "exporting-surfaces-to-blender"]], "Editing in Blender": [[162, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[162, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[162, "editing-the-head-surfaces"]], "Low-resolution head": [[162, "low-resolution-head"]], "High-resolution head": [[162, "high-resolution-head"]], "Blender editing tips": [[162, "blender-editing-tips"]], "What if you still get an error?": [[162, "what-if-you-still-get-an-error"]], "Blender operations": [[162, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[162, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[162, "topological-errors"]], "Dealing with topology in blender": [[162, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[162, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[163, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[163, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[163, "how-should-i-regularize-the-covariance-matrix"], [859, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[164, "forward-models-and-source-spaces"], [166, "forward-models-and-source-spaces"]], "Tutorials": [[166, "tutorials"]], "Introductory tutorials": [[166, "introductory-tutorials"], [174, "introductory-tutorials"]], "Reading data for different recording systems": [[166, "reading-data-for-different-recording-systems"], [193, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[166, "working-with-continuous-data"], [219, "working-with-continuous-data"]], "Time-frequency analysis": [[166, "time-frequency-analysis"], [167, "time-frequency-analysis"], [242, "time-frequency-analysis"]], "Source localization and inverses": [[166, "source-localization-and-inverses"], [187, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[166, "statistical-analysis-of-sensor-data"], [232, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[166, "statistical-analysis-of-source-estimates"], [237, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[166, "machine-learning-models-of-neural-activity"], [197, "machine-learning-models-of-neural-activity"]], "Simulation": [[166, "simulation"], [224, "simulation"], [875, "simulation"]], "Overview of MEG/EEG analysis with MNE-Python": [[167, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[167, "loading-data"]], "Detecting experimental events": [[167, "detecting-experimental-events"]], "Epoching continuous data": [[167, "epoching-continuous-data"]], "Inverse modeling": [[167, "inverse-modeling"]], "Modifying data in-place": [[168, "modifying-data-in-place"]], "Signal processing": [[168, "signal-processing"]], "Channel picking": [[168, "channel-picking"]], "The copy parameter": [[168, "the-copy-parameter"]], "Parsing events from raw data": [[169, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[169, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[169, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[169, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[169, null]], "Reading embedded events as Annotations": [[169, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[169, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[169, "making-multiple-events-per-annotation"]], "The Info data structure": [[170, "the-info-data-structure"]], "Querying the Info object": [[170, "querying-the-info-object"]], "Obtaining subsets of channels": [[170, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[170, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[170, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[171, "working-with-sensor-locations"]], "About montages and layouts": [[171, "about-montages-and-layouts"]], "Working with built-in montages": [[171, "working-with-built-in-montages"]], "Computing sensor locations": [[171, null]], "Plotting 2D sensor locations like EEGLAB": [[171, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[171, null]], "Manually controlling 2D channel projection": [[171, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[171, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[171, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[171, "working-with-layout-files"]], "Configuring MNE-Python": [[172, "configuring-mne-python"]], "Getting and setting configuration variables": [[172, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[172, "where-configurations-are-stored"]], "Using environment variables": [[172, "using-environment-variables"]], "Logging": [[172, "logging"]], "Getting information about your system": [[172, "getting-information-about-your-system"]], "Getting started with mne.Report": [[173, "getting-started-with-mne-report"]], "Adding Raw data": [[173, "adding-raw-data"]], "Adding events": [[173, "adding-events"]], "Adding Epochs": [[173, "adding-epochs"]], "Adding Evoked": [[173, "adding-evoked"]], "Adding Covariance": [[173, "adding-covariance"]], "Adding Projection vectors": [[173, "adding-projection-vectors"]], "Adding ICA": [[173, "adding-ica"]], "Adding MRI with BEM": [[173, "adding-mri-with-bem"]], "Adding coregistration": [[173, "adding-coregistration"]], "Adding a Forward solution": [[173, "adding-a-forward-solution"]], "Adding an InverseOperator": [[173, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[173, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[173, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[173, "adding-custom-figures"]], "Adding image files": [[173, "adding-image-files"]], "Working with tags": [[173, "working-with-tags"]], "Editing a saved report": [[173, "editing-a-saved-report"]], "Adding an entire folder of files": [[173, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[173, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[176, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[176, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[176, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[176, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[177, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[178, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[178, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[178, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[178, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[179, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[179, "the-source-space"]], "Fixed dipole orientations": [[179, "fixed-dipole-orientations"]], "Loose dipole orientations": [[179, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[179, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[179, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[180, "computing-various-mne-solutions"]], "Fixed orientation": [[180, "fixed-orientation"]], "Free orientation": [[180, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[181, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[181, "introduction-to-beamformers"]], "Data processing": [[181, "data-processing"]], "Computing the covariance matrices": [[181, "computing-the-covariance-matrices"]], "The forward model": [[181, "the-forward-model"]], "Handling depth bias": [[181, "handling-depth-bias"]], "Compute the spatial filter": [[181, "compute-the-spatial-filter"]], "Apply the spatial filter": [[181, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[181, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[181, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[181, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[181, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[181, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[181, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[182, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[182, "surface-source-estimates"]], "Volume Source Estimates": [[182, "volume-source-estimates"]], "Vector Source Estimates": [[182, "vector-source-estimates"]], "Dipole fits": [[182, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[183, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[183, "prerequisites"]], "Visualizing the MRI": [[183, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[183, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[183, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[184, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[185, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[186, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[189, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[189, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "FIL OPM (.bin)": [[189, "fil-opm-bin"]], "Artemis123 (.bin)": [[189, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[189, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[189, "ctf-data-dir"]], "CTF Polhemus data": [[189, "ctf-polhemus-data"]], "Applying software gradient compensation": [[189, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[189, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[189, null]], "FieldTrip MEG/EEG data (.mat)": [[189, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[189, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[190, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[190, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[190, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[190, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[190, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[190, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[190, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[190, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[190, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[190, "nicolet-data"]], "eXimia EEG data (.nxe)": [[190, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[190, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[190, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[190, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[190, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[190, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[191, "importing-data-from-fnirs-devices"]], "Standardized data": [[191, "standardized-data"]], "SNIRF (.snirf)": [[191, "snirf-snirf"]], "Specifying the coordinate system": [[191, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[191, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[191, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[191, "hitachi-csv"]], "Frequency Domain Devices": [[191, "frequency-domain-devices"]], "BOXY (.txt)": [[191, "boxy-txt"]], "Custom Data Import": [[191, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[191, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[191, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[192, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[195, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[195, "load-audio-data"]], "Create a receptive field": [[195, "create-a-receptive-field"]], "Simulate a neural response": [[195, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[195, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[195, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[195, "using-different-regularization-types"]], "Compare model performance": [[195, "compare-model-performance"]], "Decoding (MVPA)": [[196, "decoding-mvpa"]], "Design philosophy": [[196, "design-philosophy"], [857, "design-philosophy"]], "Transformation classes": [[196, "transformation-classes"]], "Scaler": [[196, "scaler"]], "Vectorizer": [[196, "vectorizer"]], "PSDEstimator": [[196, "psdestimator"]], "FilterEstimator": [[196, "filterestimator"]], "Spatial filters": [[196, "spatial-filters"]], "Common spatial pattern": [[196, "common-spatial-pattern"]], "Examples": [[196, null], [196, null], [196, null], [196, null], [196, null], [256, "examples"], [256, "id4"], [256, "id7"], [256, "id10"], [256, "id13"], [256, "id16"], [256, "id19"], [256, "id22"], [256, "id25"], [256, "id29"], [256, "id32"], [256, "id35"], [256, "id38"], [256, "id41"], [256, "id44"], [256, "id47"], [256, "id50"], [256, "id53"], [256, "id56"], [256, "id59"], [256, "id62"], [256, "id65"], [256, "id68"], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null], [856, null]], "Source power comodulation (SPoC)": [[196, "source-power-comodulation-spoc"]], "xDAWN": [[196, "xdawn"]], "Effect-matched spatial filtering": [[196, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[196, "patterns-vs-filters"]], "Decoding over time": [[196, "decoding-over-time"]], "Temporal decoding": [[196, "temporal-decoding"]], "Temporal generalization": [[196, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[196, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[196, "source-space-decoding"]], "Overview of artifact detection": [[199, "overview-of-artifact-detection"]], "What are artifacts?": [[199, "what-are-artifacts"]], "What to do about artifacts": [[199, "what-to-do-about-artifacts"]], "Artifact detection": [[199, "artifact-detection"]], "Low-frequency drifts": [[199, "low-frequency-drifts"]], "Power line noise": [[199, "power-line-noise"], [203, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[199, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[199, "ocular-artifacts-eog"]], "Handling bad channels": [[200, "handling-bad-channels"]], "Marking bad channels": [[200, "marking-bad-channels"], [855, "marking-bad-channels"]], "Blocking execution": [[200, null]], "When to look for bad channels": [[200, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[200, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[200, "interpolating-bad-channels"]], "How interpolation works": [[200, "how-interpolation-works"]], "Interpolation in MNE-Python": [[200, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[201, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[201, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[201, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[201, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[201, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[201, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[202, "background-information-on-filtering"]], "Problem statement": [[202, "problem-statement"]], "Filtering basics": [[202, "filtering-basics"]], "FIR Filters": [[202, "fir-filters"]], "Designing FIR filters": [[202, "designing-fir-filters"]], "Applying FIR filters": [[202, "applying-fir-filters"]], "IIR filters": [[202, "iir-filters"]], "Designing IIR filters": [[202, "designing-iir-filters"]], "Applying IIR filters": [[202, "applying-iir-filters"]], "Some pitfalls of filtering": [[202, "some-pitfalls-of-filtering"]], "Low-pass problems": [[202, "low-pass-problems"]], "High-pass problems": [[202, "high-pass-problems"]], "Baseline problems (or solutions?)": [[202, "baseline-problems-or-solutions"]], "Filtering defaults": [[202, "filtering-defaults"]], "Defaults in MNE-Python": [[202, "defaults-in-mne-python"]], "Defaults in MNE-C": [[202, "defaults-in-mne-c"]], "Defaults in other software": [[202, "defaults-in-other-software"]], "Reporting Filters": [[202, "reporting-filters"]], "Filter type": [[202, "filter-type"]], "Cutoff frequency": [[202, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[202, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[202, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[202, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[203, "filtering-and-resampling-data"]], "Background on filtering": [[203, "background-on-filtering"]], "Repairing artifacts by filtering": [[203, "repairing-artifacts-by-filtering"]], "Slow drifts": [[203, "slow-drifts"]], "Resampling": [[203, "resampling"]], "Best practices": [[203, "best-practices"], [206, "best-practices"]], "Repairing artifacts with regression": [[204, "repairing-artifacts-with-regression"]], "Prepare the data": [[204, "prepare-the-data"]], "Visualize the original data": [[204, "visualize-the-original-data"]], "Compute and apply EOG regression": [[204, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[204, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[204, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[204, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[205, "repairing-artifacts-with-ica"]], "What is ICA?": [[205, "what-is-ica"]], "ICA in MNE-Python": [[205, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[205, null]], "Example: EOG and ECG artifact repair": [[205, "example-eog-and-ecg-artifact-repair"], [207, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[205, "visualizing-the-artifacts"], [207, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[205, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[205, "fitting-ica"]], "Ignoring the time domain": [[205, null]], "Looking at the ICA solution": [[205, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[205, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[205, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[205, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[205, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[205, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[206, "background-on-projectors-and-projections"]], "What is a projection?": [[206, "what-is-a-projection"]], "Example: projection as noise reduction": [[206, "example-projection-as-noise-reduction"]], "Terminology": [[206, null]], "Signal-space projection (SSP)": [[206, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[206, "projectors-in-mne-python"]], "Computing projectors": [[206, "computing-projectors"]], "Visualizing the effect of projectors": [[206, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[206, "loading-and-saving-projectors"]], "Adding and removing projectors": [[206, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[206, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[207, "repairing-artifacts-with-ssp"]], "What is SSP?": [[207, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[207, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[207, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[207, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[207, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[207, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[207, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[207, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[207, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[207, null]], "Background": [[208, "background"]], "Setting or changing the reference channel": [[208, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[208, "setting-average-reference"]], "Creating the average reference as a projector": [[208, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[208, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[208, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[208, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[209, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[209, "hpi-frequencies"]], "Estimating continuous head position": [[209, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[209, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[209, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[210, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[210, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[210, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[210, "spatiotemporal-sss-tsss"]], "Movement compensation": [[210, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[210, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[211, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[211, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[211, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[211, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[211, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[211, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[211, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[211, "removing-heart-rate-from-signal"]], "Extract epochs": [[211, "extract-epochs"]], "View consistency of responses across trials": [[211, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[211, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[211, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[211, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[211, "compare-tapping-of-left-and-right-hands"]], "Preprocessing optically pumped magnetometer (OPM) MEG data": [[212, "preprocessing-optically-pumped-magnetometer-opm-meg-data"]], "Examining raw data": [[212, "examining-raw-data"]], "Denoising: Regressing via reference sensors": [[212, "denoising-regressing-via-reference-sensors"]], "Comparing denoising methods": [[212, "comparing-denoising-methods"]], "Filtering nuisance signals": [[212, "filtering-nuisance-signals"]], "Generating an evoked response": [[212, "generating-an-evoked-response"]], "The Raw data structure: continuous data": [[215, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[215, "loading-continuous-data"]], "Datasets in MNE-Python": [[215, null]], "Querying the Raw object": [[215, "querying-the-raw-object"]], "Attributes vs. Methods": [[215, null]], "The Raw.info attribute": [[215, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[215, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[215, null]], "Modifying Raw objects": [[215, "modifying-raw-objects"]], "len(raw)": [[215, null]], "Long channel names": [[215, null]], "Extracting data from Raw objects": [[215, "extracting-data-from-raw-objects"]], "Extracting data by index": [[215, "extracting-data-by-index"]], "Extracting channels by name": [[215, "extracting-channels-by-name"]], "Extracting channels by type": [[215, "extracting-channels-by-type"]], "The Raw.get_data() method": [[215, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[215, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[215, "exporting-and-saving-raw-objects"]], "Working with events": [[216, "working-with-events"]], "Reading and writing events from/to a file": [[216, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[216, "subselecting-and-combining-events"]], "Including/excluding events": [[216, null]], "Mapping Event IDs to trial descriptors": [[216, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[216, "plotting-events"]], "Plotting events and raw data together": [[216, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[216, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[217, "annotating-continuous-data"]], "Creating annotations programmatically": [[217, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[217, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[217, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[217, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[217, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[218, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[218, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[218, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[218, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[218, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[221, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[221, "creating-info-objects"]], "Info objects": [[221, null]], "Info consistency": [[221, null]], "Creating Raw objects": [[221, "creating-raw-objects"]], "Units": [[221, null]], "Creating Epochs objects": [[221, "creating-epochs-objects"]], "Creating Evoked Objects": [[221, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[222, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[222, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[222, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[222, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[222, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[222, "create-source-space-data-with-known-signals"]], "Plot original signals": [[222, "plot-original-signals"]], "Simulate sensor-space signals": [[222, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[222, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[222, "exercises"], [231, "exercises"]], "DICS for power mapping": [[223, "dics-for-power-mapping"]], "Setup": [[223, "setup"]], "Data simulation": [[223, "data-simulation"]], "Power mapping": [[223, "power-mapping"]], "Statistical inference": [[226, "statistical-inference"]], "Hypothesis testing": [[226, "hypothesis-testing"]], "Null hypothesis": [[226, "null-hypothesis"]], "Parametric tests": [[226, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[226, "hat-variance-adjustment"], [226, "id3"]], "Non-parametric tests": [[226, "non-parametric-tests"]], "Multiple comparisons": [[226, "multiple-comparisons"]], "Bonferroni correction": [[226, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[226, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[226, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[226, "clustering"]], "Effect size": [[226, null]], "Defining the adjacency matrix": [[226, "defining-the-adjacency-matrix"]], "Standard clustering": [[226, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[226, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[226, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[226, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[226, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[226, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[227, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[228, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[228, "set-parameters"], [230, "set-parameters"], [231, "set-parameters"], [234, "set-parameters"], [235, "set-parameters"], [236, "set-parameters"]], "Define adjacency for statistics": [[228, "define-adjacency-for-statistics"]], "Compute statistic": [[228, "compute-statistic"], [229, "compute-statistic"], [234, "compute-statistic"], [235, "compute-statistic"]], "View time-frequency plots": [[228, "view-time-frequency-plots"], [229, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[229, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[230, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[230, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[230, "setup-repeated-measures-anova"]], "Sample data layout": [[230, "id1"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[230, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[231, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[231, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[231, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[231, "compute-permutation-statistic"]], "Visualize clusters": [[231, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[231, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[234, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[234, "read-epochs-for-all-channels-removing-a-bad-one"], [236, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[234, "transform-to-source-space"], [236, "transform-to-source-space"]], "Transform to common cortical space": [[234, "transform-to-common-cortical-space"], [236, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[234, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[234, "selecting-significant-clusters"]], "Visualize the clusters": [[234, "visualize-the-clusters"], [235, "visualize-the-clusters"], [236, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[235, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[236, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[236, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[236, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[239, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[239, "visualizing-spectrum-objects"]], "Migrating legacy code": [[239, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[239, "id4"]], "Frequency and time-frequency sensor analysis": [[240, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[240, "frequency-analysis"], [241, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[240, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[240, "inspect-power"]], "Joint Plot": [[240, "joint-plot"]], "Inspect ITC": [[240, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[241, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[241, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[241, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[241, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[241, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[241, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[241, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[241, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[241, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[241, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[241, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[241, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[241, "debriefing"]], "Bonus exercises": [[241, "bonus-exercises"]], "Effect of trial duration on SNR": [[241, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[241, "time-resolved-snr"]], "General bibliography": [[244, "general-bibliography"]], "Papers citing MNE-Python": [[245, "papers-citing-mne-python"]], "Connectivity Estimation": [[246, "connectivity-estimation"]], "Covariance computation": [[247, "covariance-computation"]], "Creating data objects from arrays": [[248, "creating-data-objects-from-arrays"]], "Datasets": [[249, "datasets"]], "Decoding": [[250, "decoding"]], "Events": [[251, "events"]], "Exporting": [[252, "exporting"]], "File I/O": [[253, "file-i-o"]], "Forward Modeling": [[254, "forward-modeling"]], "Funding and other support": [[255, "funding-and-other-support"]], "Institutional partners": [[255, "institutional-partners"]], "Current partners": [[255, "current-partners"], [867, "current-partners"]], "Former partners": [[255, "former-partners"], [867, "former-partners"]], "Command line tools using Python": [[256, "command-line-tools-using-python"]], "mne anonymize": [[256, "mne-anonymize"]], "Anonymize raw fif file.": [[256, "anonymize-raw-fif-file"]], "Options": [[256, "options"], [256, "id3"], [256, "id6"], [256, "id9"], [256, "id12"], [256, "id15"], [256, "id18"], [256, "id21"], [256, "id24"], [256, "id28"], [256, "id31"], [256, "id34"], [256, "id37"], [256, "id40"], [256, "id43"], [256, "id46"], [256, "id49"], [256, "id52"], [256, "id55"], [256, "id58"], [256, "id61"], [256, "id64"], [256, "id67"]], "mne browse_raw": [[256, "mne-browse-raw"]], "Browse raw data.": [[256, "browse-raw-data"]], "mne bti2fiff": [[256, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[256, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[256, "notes"], [256, "id26"]], "mne clean_eog_ecg": [[256, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[256, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[256, "mne-compare-fiff"]], "Compare FIFF files.": [[256, "compare-fiff-files"]], "mne compute_proj_ecg": [[256, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[256, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[256, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[256, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[256, "mne-coreg"]], "Open the coregistration GUI.": [[256, "open-the-coregistration-gui"]], "mne flash_bem": [[256, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[256, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[256, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[256, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[256, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[256, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[256, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[256, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[256, "mne-maxfilter"]], "Apply MaxFilter.": [[256, "apply-maxfilter"]], "mne prepare_bem_model": [[256, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[256, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[256, "mne-report"]], "Create mne report for a folder.": [[256, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[256, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[256, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[256, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[256, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[256, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[256, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[256, "mne-show-info"]], "Show measurement info from .fif file.": [[256, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[256, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[256, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[256, "mne-sys-info"]], "Show system information.": [[256, "show-system-information"]], "mne watershed_bem": [[256, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[256, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[256, "mne-what"]], "Check type of FIF file.": [[256, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[257, "mne-acqparserfif"]], "mne.Annotations": [[258, "mne-annotations"]], "Examples using mne.Annotations": [[258, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[259, "mne-baseepochs"]], "mne.BiHemiLabel": [[260, "mne-bihemilabel"]], "mne.Covariance": [[261, "mne-covariance"]], "Examples using mne.Covariance": [[261, "examples-using-mne-covariance"]], "mne.Dipole": [[262, "mne-dipole"]], "Examples using mne.Dipole": [[262, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[263, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[263, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[264, "mne-epochs"]], "Examples using mne.Epochs": [[264, "examples-using-mne-epochs"]], "mne.EpochsArray": [[265, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[265, "examples-using-mne-epochsarray"]], "mne.Evoked": [[266, "mne-evoked"]], "Examples using mne.Evoked": [[266, "examples-using-mne-evoked"]], "mne.EvokedArray": [[267, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[267, "examples-using-mne-evokedarray"]], "mne.Forward": [[268, "mne-forward"]], "Examples using mne.Forward": [[268, "examples-using-mne-forward"]], "mne.Info": [[269, "mne-info"]], "Examples using mne.Info": [[269, "examples-using-mne-info"]], "mne.Label": [[270, "mne-label"]], "Examples using mne.Label": [[270, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[271, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[271, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[272, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[272, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[273, "mne-projection"]], "Examples using mne.Projection": [[273, "examples-using-mne-projection"]], "mne.Report": [[274, "mne-report"]], "Examples using mne.Report": [[274, "examples-using-mne-report"]], "mne.SourceEstimate": [[275, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[275, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[276, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[276, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[277, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[277, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[278, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[278, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[279, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[279, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[280, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[281, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[281, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[282, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[283, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[283, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[284, "mne-apply-forward"]], "mne.apply_forward_raw": [[285, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[286, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[287, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[287, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[288, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[288, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[289, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[290, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[290, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[291, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[292, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[292, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[293, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[293, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[294, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[294, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[295, "mne-beamformer-apply-lcmv-epochs"]], "Examples using mne.beamformer.apply_lcmv_epochs": [[295, "examples-using-mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[296, "mne-beamformer-apply-lcmv-raw"]], "Examples using mne.beamformer.apply_lcmv_raw": [[296, "examples-using-mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[297, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[297, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[298, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[298, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[299, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[299, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[300, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[300, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[301, "mne-beamformer-read-beamformer"]], "mne.bem.ConductorModel": [[302, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[302, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[303, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[304, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[305, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[306, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[307, "mne-bem-make-flash-bem"]], "Examples using mne.bem.make_flash_bem": [[307, "examples-using-mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[308, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[309, "mne-bem-make-watershed-bem"]], "Examples using mne.bem.make_watershed_bem": [[309, "examples-using-mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[310, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[310, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[311, "mne-channel-type"]], "Examples using mne.channel_type": [[311, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[312, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[312, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[313, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[313, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[314, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[314, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[315, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[316, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[316, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[317, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[318, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[318, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[319, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[320, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[321, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[322, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[322, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[323, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[323, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[324, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[324, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[325, "mne-channels-make-dig-montage"]], "Examples using mne.channels.make_dig_montage": [[325, "examples-using-mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[326, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[326, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[327, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[328, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[328, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[329, "mne-channels-read-ch-adjacency"]], "Examples using mne.channels.read_ch_adjacency": [[329, "examples-using-mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[330, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[330, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[331, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[332, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[333, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[334, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[334, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[335, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[336, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[337, "mne-channels-read-dig-polhemus-isotrak"]], "Examples using mne.channels.read_dig_polhemus_isotrak": [[337, "examples-using-mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[338, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[338, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[339, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[340, "mne-channels-rename-channels"]], "mne.chpi.compute_chpi_amplitudes": [[341, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[341, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[342, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[342, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[343, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[343, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[344, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[344, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[345, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[345, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[346, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[347, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[347, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[348, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[348, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[349, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[349, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[350, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[351, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[351, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[352, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[352, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[353, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[353, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[354, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[354, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[355, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[355, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[356, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[356, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[357, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[357, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[358, "mne-compute-rank"]], "Examples using mne.compute_rank": [[358, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[359, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[359, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[360, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[360, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[361, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[361, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[362, "mne-concatenate-events"]], "mne.concatenate_raws": [[363, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[363, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[364, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[364, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[365, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[365, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[366, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[366, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[367, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[367, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.count_events": [[368, "mne-count-events"]], "mne.cov.compute_whitener": [[369, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[370, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[371, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[371, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[372, "mne-create-default-subject"]], "mne.create_info": [[373, "mne-create-info"]], "Examples using mne.create_info": [[373, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[374, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[375, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[376, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[377, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[378, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[379, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[380, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[381, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[382, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[382, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[383, "mne-datasets-erp-core-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[384, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[385, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[386, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[387, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[388, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[388, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[389, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[390, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[391, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[392, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[393, "mne-datasets-kiloword-data-path"]], "Examples using mne.datasets.kiloword.data_path": [[393, "examples-using-mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[394, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[395, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[396, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[397, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[398, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[399, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.refmeg_noise.data_path": [[400, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[401, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[401, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[402, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[402, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[403, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[404, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[405, "mne-datasets-spm-face-data-path"]], "Examples using mne.datasets.spm_face.data_path": [[405, "examples-using-mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[406, "mne-datasets-ssvep-data-path"]], "mne.datasets.ucl_opm_auditory.data_path": [[407, "mne-datasets-ucl-opm-auditory-data-path"]], "mne.datasets.visual_92_categories.data_path": [[408, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[409, "mne-decimate-surface"]], "mne.decoding.CSP": [[410, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[410, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[411, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[411, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[412, "mne-decoding-filterestimator"]], "Examples using mne.decoding.FilterEstimator": [[412, "examples-using-mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[413, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[413, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[414, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[414, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[415, "mne-decoding-psdestimator"]], "Examples using mne.decoding.PSDEstimator": [[415, "examples-using-mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[416, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[416, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[417, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[417, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[418, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[418, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[419, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[419, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[420, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[420, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[421, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[422, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[422, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[423, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[424, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[424, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[425, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[425, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[426, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[426, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[427, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[427, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[428, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[428, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[429, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[429, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[430, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[430, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[431, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[431, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[432, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[433, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[433, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[434, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[434, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[435, "mne-equalize-channels"]], "mne.event.define_target_events": [[436, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[436, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[437, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[438, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[439, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[439, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[440, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[441, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[442, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[443, "mne-export-export-raw"]], "mne.extract_label_time_course": [[444, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[444, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[445, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[445, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[446, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[446, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[447, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[448, "mne-filter-filter-data"]], "Examples using mne.filter.filter_data": [[448, "examples-using-mne-filter-filter-data"]], "mne.filter.notch_filter": [[449, "mne-filter-notch-filter"]], "mne.filter.resample": [[450, "mne-filter-resample"]], "Examples using mne.filter.resample": [[450, "examples-using-mne-filter-resample"]], "mne.find_events": [[451, "mne-find-events"]], "Examples using mne.find_events": [[451, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[452, "mne-find-stim-steps"]], "mne.fit_dipole": [[453, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[453, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[454, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[455, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[456, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[457, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[458, "mne-get-config"]], "Examples using mne.get_config": [[458, "examples-using-mne-get-config"]], "mne.get_config_path": [[459, "mne-get-config-path"]], "Examples using mne.get_config_path": [[459, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[460, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[461, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[462, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[462, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[463, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[463, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[464, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[465, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[466, "mne-grade-to-vertices"]], "mne.grand_average": [[467, "mne-grand-average"]], "Examples using mne.grand_average": [[467, "examples-using-mne-grand-average"]], "mne.grow_labels": [[468, "mne-grow-labels"]], "mne.gui.coregistration": [[469, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[469, "examples-using-mne-gui-coregistration"]], "mne.gui.locate_ieeg": [[470, "mne-gui-locate-ieeg"]], "Examples using mne.gui.locate_ieeg": [[470, "examples-using-mne-gui-locate-ieeg"]], "mne.head_to_mni": [[471, "mne-head-to-mni"]], "mne.head_to_mri": [[472, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[473, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[473, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[474, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[474, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[475, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[475, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[476, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[476, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[477, "mne-io-baseraw"]], "mne.io.Raw": [[478, "mne-io-raw"]], "Examples using mne.io.Raw": [[478, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[479, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[479, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[480, "mne-io-anonymize-info"]], "mne.io.kit.read_mrk": [[481, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[482, "mne-io-read-fiducials"]], "mne.io.read_info": [[483, "mne-io-read-info"]], "Examples using mne.io.read_info": [[483, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[484, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[484, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[485, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[485, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[486, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[486, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[487, "mne-io-read-raw-boxy"]], "Examples using mne.io.read_raw_boxy": [[487, "examples-using-mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[488, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[488, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[489, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[489, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[490, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[490, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[491, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[491, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[492, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[493, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[493, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[494, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[494, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[495, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[495, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[496, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[496, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_fieldtrip": [[497, "mne-io-read-raw-fieldtrip"]], "Examples using mne.io.read_raw_fieldtrip": [[497, "examples-using-mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[498, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[498, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_fil": [[499, "mne-io-read-raw-fil"]], "Examples using mne.io.read_raw_fil": [[499, "examples-using-mne-io-read-raw-fil"]], "mne.io.read_raw_gdf": [[500, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[500, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[501, "mne-io-read-raw-hitachi"]], "Examples using mne.io.read_raw_hitachi": [[501, "examples-using-mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[502, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[502, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[503, "mne-io-read-raw-nedf"]], "mne.io.read_raw_nicolet": [[504, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[504, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[505, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[505, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[506, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[506, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_persyst": [[507, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[507, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[508, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[508, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[509, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[510, "mne-io-write-fiducials"]], "mne.label.select_sources": [[511, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[511, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[512, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[512, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[513, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[513, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[514, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[514, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[515, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[515, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[516, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[516, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[517, "mne-make-field-map"]], "Examples using mne.make_field_map": [[517, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[518, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[518, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[519, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[519, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[520, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[520, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[521, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[521, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[522, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[522, "examples-using-mne-make-sphere-model"]], "mne.merge_events": [[523, "mne-merge-events"]], "Examples using mne.merge_events": [[523, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[524, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[524, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[525, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[525, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[526, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[526, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[527, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[527, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[528, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[528, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[529, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[530, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[531, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[531, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[532, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[532, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[533, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[534, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[534, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[535, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[535, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[536, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[536, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[537, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[537, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[538, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[539, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[539, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[540, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[540, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[541, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[541, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[542, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[542, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[543, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[544, "mne-morph-labels"]], "mne.morph_source_spaces": [[545, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[545, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[546, "mne-open-docs"]], "mne.open_report": [[547, "mne-open-report"]], "Examples using mne.open_report": [[547, "examples-using-mne-open-report"]], "mne.parse_config": [[548, "mne-parse-config"]], "mne.pick_channels": [[549, "mne-pick-channels"]], "Examples using mne.pick_channels": [[549, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[550, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[551, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[552, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[552, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[553, "mne-pick-events"]], "Examples using mne.pick_events": [[553, "examples-using-mne-pick-events"]], "mne.pick_info": [[554, "mne-pick-info"]], "Examples using mne.pick_info": [[554, "examples-using-mne-pick-info"]], "mne.pick_types": [[555, "mne-pick-types"]], "Examples using mne.pick_types": [[555, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[556, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[556, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[557, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[557, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[558, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[558, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[559, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[559, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[560, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[561, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[561, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[562, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[562, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[563, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[563, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[564, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[565, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[565, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[566, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[566, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[567, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[567, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[568, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[569, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[570, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[570, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[571, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[571, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.corrmap": [[572, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[572, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[573, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[573, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[574, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[574, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[575, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[575, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[576, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.find_bad_channels_maxwell": [[577, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[577, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[578, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[578, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[579, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[579, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[580, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[580, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[581, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[582, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.make_montage_volume": [[583, "mne-preprocessing-ieeg-make-montage-volume"]], "Examples using mne.preprocessing.ieeg.make_montage_volume": [[583, "examples-using-mne-preprocessing-ieeg-make-montage-volume"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[584, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "Examples using mne.preprocessing.ieeg.project_sensors_onto_brain": [[584, "examples-using-mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.ieeg.warp_montage": [[585, "mne-preprocessing-ieeg-warp-montage"]], "Examples using mne.preprocessing.ieeg.warp_montage": [[585, "examples-using-mne-preprocessing-ieeg-warp-montage"]], "mne.preprocessing.infomax": [[586, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[587, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[587, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[588, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[588, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[589, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[590, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[590, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[591, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[591, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[592, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[592, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[593, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[594, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[594, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[595, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[595, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[596, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[596, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[597, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[598, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[599, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[600, "mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[601, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[602, "mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[603, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[604, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[605, "mne-random-parcellation"]], "mne.read_annotations": [[606, "mne-read-annotations"]], "Examples using mne.read_annotations": [[606, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[607, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[607, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[608, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[608, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[609, "mne-read-cov"]], "Examples using mne.read_cov": [[609, "examples-using-mne-read-cov"]], "mne.read_dipole": [[610, "mne-read-dipole"]], "Examples using mne.read_dipole": [[610, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[611, "mne-read-epochs"]], "Examples using mne.read_epochs": [[611, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[612, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[612, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[613, "mne-read-epochs-fieldtrip"]], "Examples using mne.read_epochs_fieldtrip": [[613, "examples-using-mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[614, "mne-read-epochs-kit"]], "Examples using mne.read_epochs_kit": [[614, "examples-using-mne-read-epochs-kit"]], "mne.read_events": [[615, "mne-read-events"]], "Examples using mne.read_events": [[615, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[616, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[617, "mne-read-evoked-fieldtrip"]], "Examples using mne.read_evoked_fieldtrip": [[617, "examples-using-mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[618, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[618, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[619, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[620, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[620, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[621, "mne-read-freesurfer-lut"]], "mne.read_label": [[622, "mne-read-label"]], "Examples using mne.read_label": [[622, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[623, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[623, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[624, "mne-read-lta"]], "mne.read_morph_map": [[625, "mne-read-morph-map"]], "mne.read_proj": [[626, "mne-read-proj"]], "Examples using mne.read_proj": [[626, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[627, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[628, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[628, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[629, "mne-read-source-morph"]], "Examples using mne.read_source_morph": [[629, "examples-using-mne-read-source-morph"]], "mne.read_source_spaces": [[630, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[630, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[631, "mne-read-surface"]], "Examples using mne.read_surface": [[631, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[632, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[632, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[633, "mne-read-trans"]], "Examples using mne.read_trans": [[633, "examples-using-mne-read-trans"]], "mne.read_tri": [[634, "mne-read-tri"]], "mne.read_vectorview_selection": [[635, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[635, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[636, "mne-rename-channels"]], "mne.scale_bem": [[637, "mne-scale-bem"]], "mne.scale_labels": [[638, "mne-scale-labels"]], "mne.scale_mri": [[639, "mne-scale-mri"]], "Examples using mne.scale_mri": [[639, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[640, "mne-scale-source-space"]], "mne.sensitivity_map": [[641, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[641, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[642, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[642, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[643, "mne-set-cache-dir"]], "mne.set_config": [[644, "mne-set-config"]], "Examples using mne.set_config": [[644, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[645, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[645, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[646, "mne-set-log-file"]], "mne.set_log_level": [[647, "mne-set-log-level"]], "Examples using mne.set_log_level": [[647, "examples-using-mne-set-log-level"]], "mne.setup_source_space": [[648, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[648, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[649, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[649, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[650, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[650, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[651, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[652, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[652, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[653, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[653, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[654, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[654, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[655, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[655, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[656, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[656, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[657, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[657, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[658, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[658, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[659, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[659, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[660, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[660, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[661, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[662, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[662, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[663, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[664, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[664, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[665, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[665, "id3"]], "Examples using mne.simulation.simulate_raw": [[665, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[666, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[666, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[667, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[667, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[668, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[668, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[669, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[670, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[671, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[672, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[672, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[673, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[674, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[675, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[676, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[677, "mne-split-label"]], "mne.stats.bonferroni_correction": [[678, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[678, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[679, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[679, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[680, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[680, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[681, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[681, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[682, "mne-stats-f-oneway"]], "Examples using mne.stats.f_oneway": [[682, "examples-using-mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[683, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[683, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[684, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[684, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[685, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[685, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[686, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[686, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[687, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[687, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[688, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[688, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[689, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[689, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[690, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[690, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[691, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[691, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[692, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[692, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[693, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[693, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[694, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[695, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[695, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[696, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[696, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[697, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[698, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[698, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[699, "mne-sys-info"]], "Examples using mne.sys_info": [[699, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[700, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[700, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[701, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[701, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[702, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[702, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsTFR": [[703, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[703, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[704, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[704, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.csd_array_fourier": [[705, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[706, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[707, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[708, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[708, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[709, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[709, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[710, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[710, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[711, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[711, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[712, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[713, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[713, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[714, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[715, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[716, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[716, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[717, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[718, "mne-time-frequency-psd-array-multitaper"]], "Examples using mne.time_frequency.psd_array_multitaper": [[718, "examples-using-mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[719, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[719, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[720, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[721, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[722, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[723, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[724, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[725, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[726, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[727, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[727, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[728, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[729, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[730, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[730, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[731, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[731, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[732, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[732, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[733, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[734, "mne-transform-surface-to"]], "mne.transforms.Transform": [[735, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[736, "mne-transforms-apply-volume-registration"]], "Examples using mne.transforms.apply_volume_registration": [[736, "examples-using-mne-transforms-apply-volume-registration"]], "mne.transforms.apply_volume_registration_points": [[737, "mne-transforms-apply-volume-registration-points"]], "Examples using mne.transforms.apply_volume_registration_points": [[737, "examples-using-mne-transforms-apply-volume-registration-points"]], "mne.transforms.compute_volume_registration": [[738, "mne-transforms-compute-volume-registration"]], "Examples using mne.transforms.compute_volume_registration": [[738, "examples-using-mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[739, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[740, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[740, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[741, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[742, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[742, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[743, "mne-use-log-level"]], "Examples using mne.use_log_level": [[743, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[744, "mne-utils-deprecated"]], "mne.utils.warn": [[745, "mne-utils-warn"]], "mne.verbose": [[746, "mne-verbose"]], "mne.vertex_to_mni": [[747, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[747, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[748, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[748, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[749, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[749, "examples-using-mne-viz-clickableimage"]], "mne.viz.Figure3D": [[750, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[751, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[752, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[752, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[753, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[753, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[754, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[755, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[756, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[757, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[757, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.get_3d_backend": [[758, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[759, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[759, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[760, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[761, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[761, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[762, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[763, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[764, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[764, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[765, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[765, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[766, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[766, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[767, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[767, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[768, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[768, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[769, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[769, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[770, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[770, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[771, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[771, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[772, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[772, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[773, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[773, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[774, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[775, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[775, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[776, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[776, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[777, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[778, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[779, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[779, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[780, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[781, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[781, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[782, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[783, "mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[784, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[784, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[785, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[786, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[786, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[787, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[788, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[788, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[789, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[789, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[790, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[790, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[791, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[792, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[793, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[794, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[795, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[796, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[796, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[797, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[798, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[799, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[799, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[800, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[800, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[801, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[802, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[803, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[804, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[805, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[805, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[806, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[806, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[807, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[807, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[808, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[809, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[810, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[810, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[811, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[811, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[812, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[813, "mne-viz-set-3d-backend"]], "Examples using mne.viz.set_3d_backend": [[813, "examples-using-mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[814, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[815, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[815, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[816, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[816, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[817, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[818, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[818, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.use_3d_backend": [[819, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[820, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[820, "examples-using-mne-viz-use-browser-backend"]], "mne.what": [[821, "mne-what"]], "mne.write_bem_solution": [[822, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[823, "mne-write-bem-surfaces"]], "mne.write_cov": [[824, "mne-write-cov"]], "Examples using mne.write_cov": [[824, "examples-using-mne-write-cov"]], "mne.write_events": [[825, "mne-write-events"]], "Examples using mne.write_events": [[825, "examples-using-mne-write-events"]], "mne.write_evokeds": [[826, "mne-write-evokeds"]], "Examples using mne.write_evokeds": [[826, "examples-using-mne-write-evokeds"]], "mne.write_forward_solution": [[827, "mne-write-forward-solution"]], "Examples using mne.write_forward_solution": [[827, "examples-using-mne-write-forward-solution"]], "mne.write_head_bem": [[828, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[828, "examples-using-mne-write-head-bem"]], "mne.write_label": [[829, "mne-write-label"]], "mne.write_labels_to_annot": [[830, "mne-write-labels-to-annot"]], "mne.write_proj": [[831, "mne-write-proj"]], "Examples using mne.write_proj": [[831, "examples-using-mne-write-proj"]], "mne.write_source_spaces": [[832, "mne-write-source-spaces"]], "mne.write_surface": [[833, "mne-write-surface"]], "Examples using mne.write_surface": [[833, "examples-using-mne-write-surface"]], "mne.write_trans": [[834, "mne-write-trans"]], "Glossary": [[835, "glossary"]], "MNE-Python Homepage": [[836, "mne-python-homepage"]], "Advanced setup": [[837, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[837, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[837, null]], "Installing to a headless Linux server": [[837, "installing-to-a-headless-linux-server"]], "Using the development version": [[837, "using-the-development-version"]], "Other Python distributions": [[837, "other-python-distributions"]], "GPU acceleration with CUDA": [[837, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[837, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[837, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[837, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[838, "testing-your-installation"]], "Contributing guide": [[839, "contributing-guide"]], "Overview of contribution process": [[839, "overview-of-contribution-process"]], "Setting up your local development environment": [[839, "setting-up-your-local-development-environment"]], "Configuring git": [[839, "configuring-git"]], "GNU Make": [[839, "gnu-make"]], "Forking the MNE-Python repository": [[839, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[839, "creating-the-virtual-environment"]], "Basic git commands": [[839, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[839, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[839, "mne-python-coding-conventions"]], "General requirements": [[839, "general-requirements"]], "All new functionality must have test coverage": [[839, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[839, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[839, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[839, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[839, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[839, "first-time-contributors"]], "Recurring contributors": [[839, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[839, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[839, "make-tests-fast-and-thorough"]], "Code style": [[839, "code-style"]], "Adhere to standard Python style guidelines": [[839, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[839, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[839, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[839, "cross-reference-everywhere"]], "Other style guidance": [[839, "other-style-guidance"]], "Code organization": [[839, "code-organization"]], "Importing": [[839, "importing"]], "Return types": [[839, "return-types"]], "Running the test suite": [[839, "running-the-test-suite"]], "Building the documentation": [[839, "building-the-documentation"]], "Modifying command-line tools": [[839, "modifying-command-line-tools"]], "GitHub workflow": [[839, "github-workflow"]], "Installing FreeSurfer": [[840, "installing-freesurfer"]], "Installing MNE-Python": [[841, "installing-mne-python"]], "MNE-Python installers": [[842, "mne-python-installers"]], "VS Code Setup": [[842, "vs-code-setup"]], "Install via pip or conda": [[843, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[843, "installing-mne-python-with-all-dependencies"]], "Installing a minimal MNE-Python with core functionality only": [[843, "installing-a-minimal-mne-python-with-core-functionality-only"]], "Installing a minimal MNE-Python with EEGLAB I/O support": [[843, "installing-a-minimal-mne-python-with-eeglab-i-o-support"]], "Installing MNE-Python for other scenarios": [[843, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[843, "python-ides"]], "Installing Python": [[844, "installing-python"]], "Installing MNE-C": [[845, "installing-mne-c"]], "System requirements": [[845, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[845, null]], "Downloading and Installing MNE-C": [[845, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[845, "configuring-mne-c"]], "Testing MNE-C installation": [[845, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[845, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[846, "overview-of-the-mne-tools-suite"]], "Related software": [[846, "related-software"]], "What should I install?": [[846, "what-should-i-install"]], "Getting help": [[846, "getting-help"], [860, "getting-help"]], "Updating MNE-Python": [[847, "updating-mne-python"]], "Upgrading MNE-Python only": [[847, "upgrading-mne-python-only"]], "Upgrading all packages": [[847, "upgrading-all-packages"]], "Upgrading to the development version": [[847, "upgrading-to-the-development-version"]], "Inverse Solutions": [[848, "inverse-solutions"]], "Logging and Configuration": [[849, "logging-and-configuration"]], "Martinos Center setup": [[850, "martinos-center-setup"]], "MNE with CPP": [[851, "mne-with-cpp"]], "Most-used classes": [[852, "most-used-classes"]], "MRI Processing": [[853, "mri-processing"]], "How to cite MNE-Python": [[854, "how-to-cite-mne-python"]], "Citing the software": [[854, "citing-the-software"]], "Citing the inverse imaging algorithms": [[854, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[854, "citing-other-algorithms"]], "The typical M/EEG workflow": [[855, "the-typical-m-eeg-workflow"]], "Overview": [[855, "overview"], [865, "overview"]], "Artifact suppression": [[855, "artifact-suppression"]], "SSP": [[855, "ssp"]], "ICA": [[855, "ica"]], "Epoching and evoked data": [[855, "epoching-and-evoked-data"]], "Rejection using annotations": [[855, "rejection-using-annotations"]], "Source localization": [[855, "source-localization"]], "Anatomical information": [[855, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[855, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[855, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[855, "id9"]], "Creating the BEM model meshes": [[855, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[855, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[855, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[855, "aligning-coordinate-frames"]], "Computing the forward solution": [[855, "computing-the-forward-solution"], [862, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[855, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[855, "calculating-the-inverse-operator"]], "Creating source estimates": [[855, "creating-source-estimates"]], "Group analyses": [[855, "group-analyses"]], "Datasets Overview": [[856, "datasets-overview"]], "Sample": [[856, "sample"]], "Trigger codes for the sample data set.": [[856, "id20"]], "Contents of the data set": [[856, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[856, "id21"]], "Overview of the contents of the subjects/sample directory.": [[856, "id22"]], "UCL OPM Auditory": [[856, "ucl-opm-auditory"]], "Brainstorm": [[856, "brainstorm"]], "Auditory": [[856, "auditory"]], "Resting state": [[856, "resting-state"]], "Median nerve": [[856, "median-nerve"]], "SPM faces": [[856, "spm-faces"]], "EEGBCI motor imagery": [[856, "eegbci-motor-imagery"]], "Somatosensory": [[856, "somatosensory"]], "Multimodal": [[856, "multimodal"]], "fNIRS motor": [[856, "fnirs-motor"]], "High frequency SEF": [[856, "high-frequency-sef"]], "Visual 92 object categories": [[856, "visual-92-object-categories"]], "mTRF Dataset": [[856, "mtrf-dataset"]], "Kiloword dataset": [[856, "kiloword-dataset"]], "4D Neuroimaging / BTi dataset": [[856, "d-neuroimaging-bti-dataset"]], "OPM": [[856, "opm"]], "The Sleep PolySomnoGraphic Database": [[856, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[856, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[856, "miscellaneous-datasets"]], "fsaverage": [[856, "fsaverage"]], "Infant template MRIs": [[856, "infant-template-mris"]], "ECoG Dataset": [[856, "ecog-dataset"]], "sEEG Dataset": [[856, "seeg-dataset"]], "LIMO Dataset": [[856, "limo-dataset"]], "ERP CORE Dataset": [[856, "erp-core-dataset"]], "SSVEP": [[856, "ssvep"]], "Interactive versus scripted analysis": [[857, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[857, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[857, "submodule-based-organization"]], "(Mostly) unified API": [[857, "mostly-unified-api"]], "In-place operation": [[857, "in-place-operation"]], "MNE-Python Development": [[858, "mne-python-development"]], "Frequently Asked Questions (FAQ)": [[859, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[859, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[859, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[859, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[859, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[859, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[859, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[859, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[859, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[859, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[859, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[859, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[859, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[859, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[859, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[859, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[859, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[859, "my-watershed-bem-meshes-look-incorrect"]], "Project Governance": [[861, "project-governance"]], "The Project": [[861, "the-project"]], "Governance model": [[861, "governance-model"]], "BDFL": [[861, "bdfl"]], "Steering Council": [[861, "steering-council"], [867, "steering-council"]], "Council membership": [[861, "council-membership"]], "Conflict of interest": [[861, "conflict-of-interest"]], "Private communications of the Council": [[861, "private-communications-of-the-council"]], "Council decision making": [[861, "council-decision-making"]], "Institutional Partners and funding": [[861, "institutional-partners-and-funding"]], "Document history": [[861, "document-history"], [867, "document-history"]], "Acknowledgements": [[861, "acknowledgements"]], "License": [[861, "license"]], "Algorithms and other implementation details": [[862, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[862, "internal-representation-units"]], "Floating-point precision": [[862, "floating-point-precision"]], "Supported channel types": [[862, "supported-channel-types"]], "Supported data formats": [[862, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[862, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[862, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[862, "preloading-continuous-raw-data"]], "Preloading epoched data": [[862, "preloading-epoched-data"]], "Loading data explicitly": [[862, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[862, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[862, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[862, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[862, "signal-space-projection-ssp"]], "General concepts": [[862, "general-concepts"]], "Estimation of the noise subspace": [[862, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[862, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[862, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[862, "using-the-watershed-algorithm"]], "Using FLASH images": [[862, "using-flash-images"]], "Organizing MRI data into directories": [[862, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[862, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[862, "inspecting-the-meshes"]], "The forward solution": [[862, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[862, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[862, "id18"]], "The head and device coordinate systems": [[862, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[862, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[862, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[862, "creating-the-bem-meshes"]], "Topology checks": [[862, "topology-checks"]], "Computing the BEM geometry data": [[862, "computing-the-bem-geometry-data"]], "Coil geometry information": [[862, "coil-geometry-information"]], "The sensor coordinate system": [[862, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[862, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[862, "implemented-coil-geometries"]], "Normal coil descriptions.": [[862, "id20"]], "Accurate coil descriptions": [[862, "id21"]], "The coil definition file": [[862, "the-coil-definition-file"]], "Coil representation accuracies.": [[862, "id22"]], "Purpose": [[862, "purpose"]], "Implementation of software gradient compensation": [[862, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[862, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[862, "id23"]], "EEG forward solution in the sphere model": [[862, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[862, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[862, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[862, "the-linear-inverse-operator"]], "Regularization": [[862, "regularization"]], "Whitening and scaling": [[862, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[862, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[862, "computation-of-the-solution"]], "Noise normalization": [[862, "noise-normalization"]], "sLORETA": [[862, "sloreta"]], "eLORETA": [[862, "eloreta"]], "Predicted data": [[862, "predicted-data"]], "Cortical patch statistics": [[862, "cortical-patch-statistics"]], "Orientation constraints": [[862, "orientation-constraints"]], "Depth weighting": [[862, "depth-weighting"]], "Effective number of averages": [[862, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[862, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[862, "why-morphing"]], "The morphing maps": [[862, "the-morphing-maps"]], "About smoothing": [[862, "about-smoothing"]], "Documentation overview": [[863, "documentation-overview"]], "Getting started with Python": [[864, "getting-started-with-python"]], "MNE-MATLAB documentation": [[865, "mne-matlab-documentation"]], "High-level reading routines.": [[865, "id2"]], "Channel selection utilities.": [[865, "id3"]], "Coordinate transformation utilities.": [[865, "id4"]], "Basic reading routines.": [[865, "id5"]], "Writing routines.": [[865, "id6"]], "High-level data writing routines.": [[865, "id7"]], "Coil definition utilities.": [[865, "id8"]], "Routines for software gradient compensation and signal-space projection.": [[865, "id9"]], "High-level routines for reading MNE data files.": [[865, "id10"]], "High-level routines for writing MNE data files.": [[865, "id11"]], "Routines related to stc, w, and label files.": [[865, "id12"]], "Routines for reading FreeSurfer surfaces.": [[865, "id13"]], "Utility functions.": [[865, "id14"]], "Examples demonstrating the use of the toolbox.": [[865, "id15"]], "Some data structures": [[865, "some-data-structures"]], "FIFF constants.": [[865, "id16"]], "The tag structure.": [[865, "id17"]], "The taginfo structure.": [[865, "id18"]], "The directory structure.": [[865, "id19"]], "The id structure.": [[865, "id20"]], "The named matrix structure.": [[865, "id21"]], "The trans structure.": [[865, "id22"]], "The dig structure.": [[865, "id23"]], "The coildef structure. For more detailed information, see Coil geometry information.": [[865, "id24"]], "The ch structure.": [[865, "id25"]], "The proj structure.": [[865, "id26"]], "The comp structure.": [[865, "id27"]], "The meas info structure.": [[865, "id28"]], "The surf structure.": [[865, "id29"]], "The cov structure.": [[865, "id30"]], "The fwd structure.": [[865, "id31"]], "The inv structure. Note: The fields proj, whitener, reginv, and noisenorm are filled in by the routine mne_prepare_inverse_operator.": [[865, "id32"]], "On-line documentation for individual routines": [[865, "on-line-documentation-for-individual-routines"]], "Migrating from other analysis software": [[866, "migrating-from-other-analysis-software"]], "EEGLAB": [[866, "eeglab"]], "Potential pitfalls": [[866, "potential-pitfalls"]], "Current steering council and institutional partners": [[867, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[867, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[867, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[867, "institutional-partners"]], "Roadmap": [[868, "roadmap"]], "Page contents": [[868, "page-contents"]], "Open": [[868, "open"]], "Time-frequency visualization": [[868, "time-frequency-visualization"]], "Clustering statistics API": [[868, "clustering-statistics-api"]], "Access to open EEG/MEG databases": [[868, "access-to-open-eeg-meg-databases"]], "Integrate OpenMEEG via improved Python bindings": [[868, "integrate-openmeeg-via-improved-python-bindings"]], "In progress": [[868, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[868, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[868, "first-class-opm-support"]], "Deep source modeling": [[868, "deep-source-modeling"]], "Better sEEG/ECoG/DBS support": [[868, "better-seeg-ecog-dbs-support"]], "Time-frequency classes": [[868, "time-frequency-classes"]], "Pediatric and clinical MEG pipelines": [[868, "pediatric-and-clinical-meg-pipelines"]], "Statistics efficiency": [[868, "statistics-efficiency"]], "3D visualization": [[868, "d-visualization"]], "Documentation updates": [[868, "documentation-updates"]], "Completed": [[868, "completed"]], "Distributed computing support": [[868, "distributed-computing-support"]], "2D visualization": [[868, "id3"]], "Tutorial / example overhaul": [[868, "tutorial-example-overhaul"]], "Cluster computing images": [[868, "cluster-computing-images"]], "Python API Reference": [[870, "python-api-reference"]], "Reading raw data": [[871, "reading-raw-data"]], "Realtime": [[872, "realtime"]], "MNE-Report": [[873, "mne-report"]], "Sensor Space Data": [[874, "sensor-space-data"]], "Source Space Data": [[876, "source-space-data"]], "Statistics": [[877, "statistics"]], "Time-Frequency": [[878, "time-frequency"]], "What\u2019s new": [[880, "what-s-new"]], "Current (1.4.dev0)": [[880, "current-1-4-dev0"]], "Enhancements": [[880, "enhancements"], [880, "id3"], [880, "id6"], [880, "id10"], [880, "id13"], [880, "id17"], [880, "id21"], [880, "id25"], [880, "id29"]], "Bugs": [[880, "bugs"], [880, "id2"], [880, "id4"], [880, "id7"], [880, "id11"], [880, "id14"], [880, "id18"], [880, "id22"], [880, "id26"], [880, "id30"]], "API changes": [[880, "api-changes"], [880, "id5"], [880, "id8"], [880, "id15"], [880, "id19"], [880, "id23"], [880, "id27"], [880, "id31"]], "Version 1.3.1 (2023-02-23)": [[880, "version-1-3-1-2023-02-23"]], "Version 1.3.0 (2022-12-21)": [[880, "version-1-3-0-2022-12-21"]], "Authors": [[880, "authors"], [880, "id9"], [880, "id12"], [880, "id16"], [880, "id20"], [880, "id24"], [880, "id28"], [880, "id32"], [880, "id33"], [880, "id43"], [880, "id47"], [880, "id51"], [880, "id55"], [880, "id59"], [880, "id63"], [880, "id67"], [880, "id71"], [880, "id75"], [880, "id79"], [880, "id82"], [880, "id85"], [880, "id88"], [880, "id90"], [880, "id92"], [880, "id94"], [880, "id95"]], "Version 1.2.0 (2022-10-11)": [[880, "version-1-2-0-2022-10-11"]], "Version 1.1.0 (2022-08-03)": [[880, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[880, "api-and-behavior-changes"]], "Version 1.0.0 (2022-03-21)": [[880, "version-1-0-0-2022-03-21"]], "Dependencies": [[880, "dependencies"]], "Version 0.24.0 (2021-11-03)": [[880, "version-0-24-0-2021-11-03"]], "Version 0.23.0 (2021-04-27)": [[880, "version-0-23-0-2021-04-27"]], "Version 0.22.0 (2020-12-17)": [[880, "version-0-22-0-2020-12-17"]], "Version 0.21 (2020-09-21)": [[880, "version-0-21-2020-09-21"]], "Version 0.20 (2020-03-27)": [[880, "version-0-20-2020-03-27"]], "Changelog": [[880, "changelog"], [880, "id34"], [880, "id37"], [880, "id40"], [880, "id44"], [880, "id48"], [880, "id52"], [880, "id56"], [880, "id60"], [880, "id64"], [880, "id68"], [880, "id72"], [880, "id76"], [880, "id80"], [880, "id83"], [880, "id86"], [880, "id89"], [880, "id91"], [880, "id93"]], "Bug": [[880, "bug"], [880, "id35"], [880, "id38"], [880, "id41"], [880, "id45"]], "API": [[880, "api"], [880, "id36"], [880, "id39"], [880, "id42"], [880, "id46"], [880, "id50"], [880, "id54"], [880, "id58"], [880, "id62"], [880, "id66"], [880, "id70"], [880, "id74"], [880, "id78"], [880, "id81"], [880, "id84"], [880, "id87"]], "Version 0.19 (2019-09-24)": [[880, "version-0-19-2019-09-24"]], "Version 0.18 (2019-05-19)": [[880, "version-0-18-2019-05-19"]], "Version 0.17 (2018-11-19)": [[880, "version-0-17-2018-11-19"]], "Version 0.16 (2018-05-01)": [[880, "version-0-16-2018-05-01"]], "Version 0.15 (2017-10-20)": [[880, "version-0-15-2017-10-20"]], "BUG": [[880, "id49"], [880, "id53"], [880, "id57"], [880, "id61"], [880, "id65"], [880, "id69"], [880, "id73"], [880, "id77"]], "Version 0.14 (2017-03-24)": [[880, "version-0-14-2017-03-24"]], "Version 0.13 (2016-09-27)": [[880, "version-0-13-2016-09-27"]], "Version 0.12 (2016-05-10)": [[880, "version-0-12-2016-05-10"]], "Version 0.11 (2015-12-24)": [[880, "version-0-11-2015-12-24"]], "Version 0.10 (2015-10-26)": [[880, "version-0-10-2015-10-26"]], "Version 0.9 (2015-05-22)": [[880, "version-0-9-2015-05-22"]], "Version 0.8 (2014-06-25)": [[880, "version-0-8-2014-06-25"]], "Version 0.7 (2013-11-26)": [[880, "version-0-7-2013-11-26"]], "Version 0.6 (2013-06-15)": [[880, "version-0-6-2013-06-15"]], "Version 0.5 (2012-12-27)": [[880, "version-0-5-2012-12-27"]], "Version 0.4 (2012-08-24)": [[880, "version-0-4-2012-08-24"]], "Version 0.3 (2012-03-23)": [[880, "version-0-3-2012-03-23"]], "Version 0.2 (2011-11-08)": [[880, "version-0-2-2011-11-08"]], "API changes summary": [[880, "api-changes-summary"]], "Version 0.1 (2011-09-23)": [[880, "version-0-1-2011-09-23"]]}, "indexentries": {"mne.datasets": [[249, "module-mne.datasets"]], "module": [[249, "module-mne.datasets"], [250, "module-mne.decoding"], [251, "module-mne.epochs"], [251, "module-mne.event"], [252, "module-mne.export"], [254, "module-mne.bem"], [848, "module-mne.beamformer"], [848, "module-mne.dipole"], [848, "module-mne.inverse_sparse"], [848, "module-mne.minimum_norm"], [849, "module-mne.cuda"], [849, "module-mne.utils"], [869, "module-mne.channels"], [869, "module-mne.chpi"], [869, "module-mne.filter"], [869, "module-mne.preprocessing"], [869, "module-mne.preprocessing.ieeg"], [869, "module-mne.preprocessing.nirs"], [869, "module-mne.transforms"], [870, "module-mne"], [871, "module-mne.io"], [871, "module-mne.io.kit"], [874, "module-mne.baseline"], [875, "module-mne.simulation"], [875, "module-mne.simulation.metrics"], [877, "module-mne.stats"], [878, "module-mne.time_frequency"], [878, "module-mne.time_frequency.tfr"], [879, "module-mne.viz"]], "mne.decoding": [[250, "module-mne.decoding"]], "mne.epochs": [[251, "module-mne.epochs"]], "mne.event": [[251, "module-mne.event"]], "mne.export": [[252, "module-mne.export"]], "mne.bem": [[254, "module-mne.bem"]], "acqparserfif (class in mne)": [[257, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[257, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[257, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[257, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[257, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[257, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[258, "mne.Annotations"]], "__add__() (mne.annotations method)": [[258, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[258, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[258, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[258, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[258, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[258, "mne.Annotations.copy"]], "crop() (mne.annotations method)": [[258, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[258, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[258, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[258, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[258, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[258, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[258, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[259, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[260, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[260, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[260, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[260, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[261, "mne.Covariance"]], "__add__() (mne.covariance method)": [[261, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[261, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[261, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[261, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[261, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[261, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[261, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[261, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[261, "mne.Covariance.copy"]], "data (mne.covariance property)": [[261, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[261, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[261, "mne.Covariance.get"]], "items() (mne.covariance method)": [[261, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[261, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[261, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[261, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[261, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[261, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[261, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[261, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[261, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[261, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[261, "mne.Covariance.update"]], "values() (mne.covariance method)": [[261, "mne.Covariance.values"]], "dipole (class in mne)": [[262, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[262, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[262, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[262, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[262, "mne.Dipole.crop"]], "decimate() (mne.dipole method)": [[262, "mne.Dipole.decimate"]], "plot_amplitudes() (mne.dipole method)": [[262, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[262, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[262, "mne.Dipole.save"]], "shift_time() (mne.dipole method)": [[262, "mne.Dipole.shift_time"]], "time_as_index() (mne.dipole method)": [[262, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[262, "mne.Dipole.times"]], "tmax (mne.dipole property)": [[262, "mne.Dipole.tmax"]], "tmin (mne.dipole property)": [[262, "mne.Dipole.tmin"]], "to_mni() (mne.dipole method)": [[262, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[262, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[262, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[263, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[263, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[263, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[263, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[263, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[264, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[264, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[264, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[264, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[264, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[264, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[264, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[264, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[264, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[264, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[264, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[264, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[264, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[264, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[264, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[264, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[264, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[264, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[264, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[264, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[264, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[264, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[264, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[264, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[264, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[264, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[264, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[264, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[264, "mne.Epochs.export"]], "filename (mne.epochs property)": [[264, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[264, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[264, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[264, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[264, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[264, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[264, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[264, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[264, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[264, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[264, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[264, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[264, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[264, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[264, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[264, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[264, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[264, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[264, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[264, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[264, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[264, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[264, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[264, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[264, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[264, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[264, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[264, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[264, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[264, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[264, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[264, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[264, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[264, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[264, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[264, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[264, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[264, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[264, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[264, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[264, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[264, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[264, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[265, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[265, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[265, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[265, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[265, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[265, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[265, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[265, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[265, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[265, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[265, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[265, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[265, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[265, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[265, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[265, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[265, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[265, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[265, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[265, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[265, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[265, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[265, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[265, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[265, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[265, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[265, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[265, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[265, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[265, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[265, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[265, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[265, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[265, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[265, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[265, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[265, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[265, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[265, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[265, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[265, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[265, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[265, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[265, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[265, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[265, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[265, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[265, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[265, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[265, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[265, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[265, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[265, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[265, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[265, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[265, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[265, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[266, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[266, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[266, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[266, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[266, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[266, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[266, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[266, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[266, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[266, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[266, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[266, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[266, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[266, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[266, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[266, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[266, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[266, "mne.Evoked.crop"]], "data (mne.evoked property)": [[266, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[266, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[266, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[266, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[266, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[266, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[266, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[266, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[266, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[266, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[266, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[266, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[266, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[266, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[266, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[266, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[266, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[266, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[266, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[266, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[266, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[266, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[266, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[266, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[266, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[266, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[266, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[266, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[266, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[266, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[266, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[266, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[266, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[266, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[266, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[266, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[266, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[266, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[266, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[266, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[266, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[266, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[266, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[266, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[267, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[267, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[267, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[267, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[267, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[267, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[267, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[267, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[267, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[267, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[267, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[267, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[267, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[267, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[267, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[267, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[267, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[267, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[267, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[267, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[267, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[267, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[267, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[267, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[267, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[267, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[267, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[267, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[267, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[267, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[267, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[267, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[267, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[267, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[267, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[267, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[267, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[267, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[267, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[267, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[267, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[267, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[267, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[267, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[268, "mne.Forward"]], "copy() (mne.forward method)": [[268, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[268, "mne.Forward.pick_channels"]], "info (class in mne)": [[269, "mne.Info"]], "__contains__() (mne.info method)": [[269, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[269, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[269, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[269, "mne.Info.__len__"]], "clear() (mne.info method)": [[269, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[269, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[269, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[269, "mne.Info.fromkeys"]], "get() (mne.info method)": [[269, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[269, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[269, "mne.Info.get_montage"]], "items() (mne.info method)": [[269, "mne.Info.items"]], "keys() (mne.info method)": [[269, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[269, "mne.Info.normalize_proj"]], "pop() (mne.info method)": [[269, "mne.Info.pop"]], "popitem() (mne.info method)": [[269, "mne.Info.popitem"]], "save() (mne.info method)": [[269, "mne.Info.save"]], "set_montage() (mne.info method)": [[269, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[269, "mne.Info.setdefault"]], "update() (mne.info method)": [[269, "mne.Info.update"]], "values() (mne.info method)": [[269, "mne.Info.values"]], "label (class in mne)": [[270, "mne.Label"]], "__add__() (mne.label method)": [[270, "mne.Label.__add__"]], "__len__() (mne.label method)": [[270, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[270, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[270, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[270, "mne.Label.compute_area"]], "copy() (mne.label method)": [[270, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[270, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[270, "mne.Label.fill"]], "get_tris() (mne.label method)": [[270, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[270, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[270, "mne.Label.morph"]], "restrict() (mne.label method)": [[270, "mne.Label.restrict"]], "save() (mne.label method)": [[270, "mne.Label.save"]], "smooth() (mne.label method)": [[270, "mne.Label.smooth"]], "split() (mne.label method)": [[270, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[271, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.data"]], "decimate() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.shape"]], "shift_time() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.shift_time"]], "sqrt() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.times"]], "tmax (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.tmax"]], "tmin (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[272, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.data"]], "decimate() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.shape"]], "shift_time() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.shift_time"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.times"]], "tmax (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.tmax"]], "tmin (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[273, "mne.Projection"]], "__contains__() (mne.projection method)": [[273, "mne.Projection.__contains__"]], "__getitem__() (mne.projection method)": [[273, "mne.Projection.__getitem__"]], "__iter__() (mne.projection method)": [[273, "mne.Projection.__iter__"]], "__len__() (mne.projection method)": [[273, "mne.Projection.__len__"]], "clear() (mne.projection method)": [[273, "mne.Projection.clear"]], "copy() (mne.projection method)": [[273, "mne.Projection.copy"]], "fromkeys() (mne.projection method)": [[273, "mne.Projection.fromkeys"]], "get() (mne.projection method)": [[273, "mne.Projection.get"]], "items() (mne.projection method)": [[273, "mne.Projection.items"]], "keys() (mne.projection method)": [[273, "mne.Projection.keys"]], "plot_topomap() (mne.projection method)": [[273, "mne.Projection.plot_topomap"]], "pop() (mne.projection method)": [[273, "mne.Projection.pop"]], "popitem() (mne.projection method)": [[273, "mne.Projection.popitem"]], "setdefault() (mne.projection method)": [[273, "mne.Projection.setdefault"]], "update() (mne.projection method)": [[273, "mne.Projection.update"]], "values() (mne.projection method)": [[273, "mne.Projection.values"]], "report (class in mne)": [[274, "mne.Report"]], "__len__() (mne.report method)": [[274, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[274, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[274, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[274, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[274, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[274, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[274, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[274, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[274, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[274, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[274, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[274, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[274, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[274, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[274, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[274, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[274, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[274, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[274, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[274, "mne.Report.add_trans"]], "html (mne.report property)": [[274, "mne.Report.html"]], "parse_folder() (mne.report method)": [[274, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[274, "mne.Report.remove"]], "save() (mne.report method)": [[274, "mne.Report.save"]], "tags (mne.report property)": [[274, "mne.Report.tags"]], "sourceestimate (class in mne)": [[275, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[275, "mne.SourceEstimate.data"]], "decimate() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.decimate"]], "estimate_snr() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[275, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[275, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[275, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[275, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[275, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[275, "mne.SourceEstimate.shape"]], "shift_time() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.shift_time"]], "sqrt() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[275, "mne.SourceEstimate.times"]], "tmax (mne.sourceestimate property)": [[275, "mne.SourceEstimate.tmax"]], "tmin (mne.sourceestimate property)": [[275, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[275, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[276, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[276, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[276, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[276, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[277, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[278, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.data"]], "decimate() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.decimate"]], "expand() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.shape"]], "shift_time() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.shift_time"]], "sqrt() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.times"]], "tmax (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.tmax"]], "tmin (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[279, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.data"]], "decimate() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.decimate"]], "extract_label_time_course() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.shape"]], "shift_time() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.shift_time"]], "sqrt() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.times"]], "tmax (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.tmax"]], "tmin (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[280, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.data"]], "decimate() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.shape"]], "shift_time() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.shift_time"]], "sqrt() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.times"]], "tmax (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.tmax"]], "tmin (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[281, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[282, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[283, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[284, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[285, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[286, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[287, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[288, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[289, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[290, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[291, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[292, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[293, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[294, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[295, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[296, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[297, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[298, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[299, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[300, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[301, "mne.beamformer.read_beamformer"]], "conductormodel (class in mne.bem)": [[302, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[302, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[303, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[304, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[305, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[306, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[307, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[308, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[309, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[310, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[311, "mne.channel_type"]], "digmontage (class in mne.channels)": [[312, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[313, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[313, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[313, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[314, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[315, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[316, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[317, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[318, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[319, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[320, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[321, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[322, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[323, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[324, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[325, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[326, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[327, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[328, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[329, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[330, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[331, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[332, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[333, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[334, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[335, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[336, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[337, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[338, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[339, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[340, "mne.channels.rename_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[341, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[342, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[343, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[344, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[345, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[346, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[347, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[348, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[349, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[350, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[351, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[352, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[353, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[354, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[355, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[356, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[357, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[358, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[359, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[360, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[361, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[362, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[363, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[364, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[365, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[365, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[365, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[366, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[367, "mne.coreg.get_mni_fiducials"]], "count_events() (in module mne)": [[368, "mne.count_events"]], "compute_whitener() (in module mne.cov)": [[369, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[370, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[371, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[372, "mne.create_default_subject"]], "create_info() (in module mne)": [[373, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[374, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[375, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[376, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[377, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[378, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[379, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[380, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[381, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[382, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[383, "mne.datasets.erp_core.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[384, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[385, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[386, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[387, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[388, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[389, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[390, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[391, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[392, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[393, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[394, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[395, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[396, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[397, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[398, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[399, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[400, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[401, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[402, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[403, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[404, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[405, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[406, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.ucl_opm_auditory)": [[407, "mne.datasets.ucl_opm_auditory.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[408, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[409, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[410, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[410, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[410, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[410, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[410, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[410, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[410, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[410, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[411, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[411, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[411, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[411, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[411, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[411, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[412, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[412, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[412, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[412, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[413, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[413, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[413, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[413, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[413, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[413, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[413, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[413, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[413, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[413, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[414, "mne.decoding.LinearModel"]], "decision_function() (mne.decoding.linearmodel method)": [[414, "mne.decoding.LinearModel.decision_function"]], "fit() (mne.decoding.linearmodel method)": [[414, "mne.decoding.LinearModel.fit"]], "fit_transform() (mne.decoding.linearmodel method)": [[414, "mne.decoding.LinearModel.fit_transform"]], "get_params() (mne.decoding.linearmodel method)": [[414, "mne.decoding.LinearModel.get_params"]], "predict() (mne.decoding.linearmodel method)": [[414, "mne.decoding.LinearModel.predict"]], "predict_proba() (mne.decoding.linearmodel method)": [[414, "mne.decoding.LinearModel.predict_proba"]], "score() (mne.decoding.linearmodel method)": [[414, "mne.decoding.LinearModel.score"]], "set_params() (mne.decoding.linearmodel method)": [[414, "mne.decoding.LinearModel.set_params"]], "transform() (mne.decoding.linearmodel method)": [[414, "mne.decoding.LinearModel.transform"]], "psdestimator (class in mne.decoding)": [[415, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[415, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[415, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[415, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[416, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[416, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[416, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[416, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[416, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[416, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[417, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[417, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[417, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[417, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[417, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[417, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[417, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[417, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[418, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[418, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[418, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[418, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[418, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[418, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[418, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[418, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[418, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[419, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[419, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[419, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[419, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[419, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[419, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[419, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[420, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[420, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[420, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[420, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[420, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[420, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[420, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[420, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[420, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[420, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[421, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[421, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[421, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[421, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[422, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[422, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[422, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[422, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[422, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[423, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[423, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[423, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[423, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[423, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[423, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[424, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[424, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[424, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[424, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[424, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[424, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[424, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[425, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[425, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[425, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[425, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[425, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[426, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[427, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[428, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[429, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[430, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[431, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[432, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[433, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[434, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[435, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[436, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[437, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[438, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[439, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[440, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[441, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[442, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[443, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[444, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[445, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[446, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[447, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[448, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[449, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[450, "mne.filter.resample"]], "find_events() (in module mne)": [[451, "mne.find_events"]], "find_stim_steps() (in module mne)": [[452, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[453, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[454, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[455, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[456, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[457, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[458, "mne.get_config"]], "get_config_path() (in module mne)": [[459, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[460, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[461, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[462, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[463, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[464, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[465, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[466, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[467, "mne.grand_average"]], "grow_labels() (in module mne)": [[468, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[469, "mne.gui.coregistration"]], "locate_ieeg() (in module mne.gui)": [[470, "mne.gui.locate_ieeg"]], "head_to_mni() (in module mne)": [[471, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[472, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[473, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[474, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[475, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[476, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[477, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[478, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[478, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[478, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[478, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[478, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[478, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[478, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[478, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[478, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[478, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[478, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[478, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[478, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[478, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[478, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[478, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[478, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[478, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[478, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[478, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[478, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[478, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[478, "mne.io.Raw.crop_by_annotations"]], "decimate() (mne.io.raw method)": [[478, "mne.io.Raw.decimate"]], "del_proj() (mne.io.raw method)": [[478, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[478, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[478, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[478, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[478, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[478, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[478, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[478, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[478, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[478, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[478, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[478, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[478, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[478, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[478, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[478, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[478, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[478, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[478, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[478, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[478, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[478, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[478, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[478, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[478, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[478, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[478, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[478, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[478, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[478, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[478, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[478, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[478, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[478, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[478, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[478, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[478, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[478, "mne.io.Raw.set_montage"]], "shift_time() (mne.io.raw method)": [[478, "mne.io.Raw.shift_time"]], "time_as_index() (mne.io.raw method)": [[478, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[478, "mne.io.Raw.times"]], "tmax (mne.io.raw property)": [[478, "mne.io.Raw.tmax"]], "tmin (mne.io.raw property)": [[478, "mne.io.Raw.tmin"]], "to_data_frame() (mne.io.raw method)": [[478, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[479, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[479, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[479, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[479, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[479, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[479, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[479, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[479, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[479, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[479, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[479, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[479, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[479, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[479, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[479, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[479, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[479, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[479, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[479, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[479, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[479, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[479, "mne.io.RawArray.crop_by_annotations"]], "decimate() (mne.io.rawarray method)": [[479, "mne.io.RawArray.decimate"]], "del_proj() (mne.io.rawarray method)": [[479, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[479, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[479, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[479, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[479, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[479, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[479, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[479, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[479, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[479, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[479, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[479, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[479, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[479, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[479, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[479, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[479, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[479, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[479, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[479, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[479, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[479, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[479, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[479, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[479, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[479, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[479, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[479, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[479, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[479, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[479, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[479, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[479, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[479, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[479, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[479, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[479, "mne.io.RawArray.set_montage"]], "shift_time() (mne.io.rawarray method)": [[479, "mne.io.RawArray.shift_time"]], "time_as_index() (mne.io.rawarray method)": [[479, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[479, "mne.io.RawArray.times"]], "tmax (mne.io.rawarray property)": [[479, "mne.io.RawArray.tmax"]], "tmin (mne.io.rawarray property)": [[479, "mne.io.RawArray.tmin"]], "to_data_frame() (mne.io.rawarray method)": [[479, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[480, "mne.io.anonymize_info"]], "read_mrk() (in module mne.io.kit)": [[481, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[482, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[483, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[484, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[485, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[486, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[487, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[488, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[489, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[490, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[491, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[492, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[493, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[494, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[495, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[496, "mne.io.read_raw_eximia"]], "read_raw_fieldtrip() (in module mne.io)": [[497, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[498, "mne.io.read_raw_fif"]], "read_raw_fil() (in module mne.io)": [[499, "mne.io.read_raw_fil"]], "read_raw_gdf() (in module mne.io)": [[500, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[501, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[502, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[503, "mne.io.read_raw_nedf"]], "read_raw_nicolet() (in module mne.io)": [[504, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[505, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[506, "mne.io.read_raw_nirx"]], "read_raw_persyst() (in module mne.io)": [[507, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[508, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[509, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[510, "mne.io.write_fiducials"]], "select_sources() (in module mne.label)": [[511, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[512, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[513, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[514, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[515, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[516, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[517, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[518, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[519, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[520, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[521, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[522, "mne.make_sphere_model"]], "merge_events() (in module mne)": [[523, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[524, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.__len__"]], "clear() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.get"]], "items() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[524, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[525, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[526, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[527, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[528, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[529, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[530, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[531, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[532, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[533, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[534, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[535, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[536, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[537, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[538, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[539, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[540, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[541, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[542, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[543, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[544, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[545, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[546, "mne.open_docs"]], "open_report() (in module mne)": [[547, "mne.open_report"]], "parse_config() (in module mne)": [[548, "mne.parse_config"]], "pick_channels() (in module mne)": [[549, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[550, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[551, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[552, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[553, "mne.pick_events"]], "pick_info() (in module mne)": [[554, "mne.pick_info"]], "pick_types() (in module mne)": [[555, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[556, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[557, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[557, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[557, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[557, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[557, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[558, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[558, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[558, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[559, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[559, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[559, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[559, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[559, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[559, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[559, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[559, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[560, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[561, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[562, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[563, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[564, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[565, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[566, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[567, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[568, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[569, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[570, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[571, "mne.preprocessing.compute_proj_eog"]], "corrmap() (in module mne.preprocessing)": [[572, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[573, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[574, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[575, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[576, "mne.preprocessing.equalize_bads"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[577, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[578, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[579, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[580, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[581, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[582, "mne.preprocessing.ica_find_eog_events"]], "make_montage_volume() (in module mne.preprocessing.ieeg)": [[583, "mne.preprocessing.ieeg.make_montage_volume"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[584, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "warp_montage() (in module mne.preprocessing.ieeg)": [[585, "mne.preprocessing.ieeg.warp_montage"]], "infomax() (in module mne.preprocessing)": [[586, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[587, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[588, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[589, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[590, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[591, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[592, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[593, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[594, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[595, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[596, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[597, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[598, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[599, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[600, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[601, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[602, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[603, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[604, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[605, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[606, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[607, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[608, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[609, "mne.read_cov"]], "read_dipole() (in module mne)": [[610, "mne.read_dipole"]], "read_epochs() (in module mne)": [[611, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[612, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[613, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[614, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[615, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[616, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[617, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[618, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[619, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[620, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[621, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[622, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[623, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[624, "mne.read_lta"]], "read_morph_map() (in module mne)": [[625, "mne.read_morph_map"]], "read_proj() (in module mne)": [[626, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[627, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[628, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[629, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[630, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[631, "mne.read_surface"]], "read_talxfm() (in module mne)": [[632, "mne.read_talxfm"]], "read_trans() (in module mne)": [[633, "mne.read_trans"]], "read_tri() (in module mne)": [[634, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[635, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[636, "mne.rename_channels"]], "scale_bem() (in module mne)": [[637, "mne.scale_bem"]], "scale_labels() (in module mne)": [[638, "mne.scale_labels"]], "scale_mri() (in module mne)": [[639, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[640, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[641, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[642, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[643, "mne.set_cache_dir"]], "set_config() (in module mne)": [[644, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[645, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[646, "mne.set_log_file"]], "set_log_level() (in module mne)": [[647, "mne.set_log_level"]], "setup_source_space() (in module mne)": [[648, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[649, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[650, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[650, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[650, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[650, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[650, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[650, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[650, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[651, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[652, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[653, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[654, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[655, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[656, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[657, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[658, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[659, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[660, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[661, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[662, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[663, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[664, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[665, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[666, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[667, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[668, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[669, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[670, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[671, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[672, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[673, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[674, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[675, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[676, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[677, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[678, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[679, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[680, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[681, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[682, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[683, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[684, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[685, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[686, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[687, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[688, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[689, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[690, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[691, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[692, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[693, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[694, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[695, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[696, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[697, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[698, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[699, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[700, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[700, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[700, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[700, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[700, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[700, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[700, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[701, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[701, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[701, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[701, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[701, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[701, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[701, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[701, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[701, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[701, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[701, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[701, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[702, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[702, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[702, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[702, "mne.time_frequency.EpochsSpectrum.units"]], "epochstfr (class in mne.time_frequency)": [[703, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[703, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[703, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[703, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[703, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[703, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[703, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[703, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[704, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[704, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[704, "mne.time_frequency.Spectrum.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[705, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[706, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[707, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[708, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[709, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[710, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[711, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[712, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[713, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[714, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[715, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[716, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[717, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[718, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[719, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[720, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[721, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[722, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[723, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[724, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[725, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[726, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[727, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[728, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[729, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[730, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[731, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[732, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[733, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[734, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[735, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[735, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[735, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[735, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[736, "mne.transforms.apply_volume_registration"]], "apply_volume_registration_points() (in module mne.transforms)": [[737, "mne.transforms.apply_volume_registration_points"]], "compute_volume_registration() (in module mne.transforms)": [[738, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[739, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[740, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[741, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[742, "mne.use_coil_def"]], "use_log_level (class in mne)": [[743, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[744, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[745, "mne.utils.warn"]], "verbose() (in module mne)": [[746, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[747, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[748, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[748, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[748, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[748, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[748, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[748, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[748, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[748, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[748, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[748, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[748, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[748, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[748, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[748, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[748, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[748, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[748, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[748, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[748, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[748, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[748, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[748, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[748, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[748, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[748, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[748, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[748, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[748, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[748, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[748, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[748, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[748, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[748, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[748, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[748, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[748, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[748, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[748, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[748, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[748, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[748, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[748, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[748, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[748, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[748, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[748, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[748, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[748, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[748, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[748, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[749, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[749, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[749, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[749, "mne.viz.ClickableImage.to_layout"]], "figure3d (class in mne.viz)": [[750, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[750, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[751, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[752, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[753, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[754, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[755, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[756, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[757, "mne.viz.create_3d_figure"]], "get_3d_backend() (in module mne.viz)": [[758, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[759, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[760, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[761, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[762, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[763, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[764, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[765, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[766, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[767, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[768, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[769, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[770, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[771, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[772, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[773, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[774, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[775, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[776, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[777, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[778, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[779, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[780, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[781, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[782, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[783, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[784, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[785, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[786, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[787, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[788, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[789, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[790, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[791, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[792, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[793, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[794, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[795, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[796, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[797, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[798, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[799, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[800, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[801, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[802, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[803, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[804, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[805, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[806, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[807, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[808, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[809, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[810, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[811, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[812, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[813, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[814, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[815, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[816, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[817, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[818, "mne.viz.snapshot_brain_montage"]], "use_3d_backend() (in module mne.viz)": [[819, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[820, "mne.viz.use_browser_backend"]], "what() (in module mne)": [[821, "mne.what"]], "write_bem_solution() (in module mne)": [[822, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[823, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[824, "mne.write_cov"]], "write_events() (in module mne)": [[825, "mne.write_events"]], "write_evokeds() (in module mne)": [[826, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[827, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[828, "mne.write_head_bem"]], "write_label() (in module mne)": [[829, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[830, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[831, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[832, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[833, "mne.write_surface"]], "write_trans() (in module mne)": [[834, "mne.write_trans"]], "bem": [[835, "term-BEM"]], "dc": [[835, "term-DC"]], "dics": [[835, "term-DICS"]], "ecd": [[835, "term-ECD"]], "freesurfer lut": [[835, "term-FreeSurfer-LUT"]], "gfp": [[835, "term-GFP"]], "hed": [[835, "term-HED"]], "hpi": [[835, "term-HPI"]], "lcmv": [[835, "term-LCMV"]], "lcmv beamformer": [[835, "term-LCMV-beamformer"]], "lut": [[835, "term-LUT"]], "mne": [[835, "term-MNE"], [870, "module-mne"]], "opm": [[835, "term-OPM"]], "ras": [[835, "term-RAS"]], "roi": [[835, "term-ROI"]], "squid": [[835, "term-SQUID"]], "ssp": [[835, "term-SSP"]], "stc": [[835, "term-STC"]], "anatomical landmark": [[835, "term-anatomical-landmark"]], "annotations": [[835, "term-annotations"]], "beamformer": [[835, "term-beamformer"]], "boundary element method": [[835, "term-boundary-element-method"]], "boundary element model": [[835, "term-boundary-element-model"]], "chpi": [[835, "term-cHPI"]], "channels": [[835, "term-channels"]], "dspm": [[835, "term-dSPM"]], "data channels": [[835, "term-data-channels"]], "digitization": [[835, "term-digitization"]], "dipole": [[835, "term-dipole"]], "direct current": [[835, "term-direct-current"]], "dynamic imaging of coherent sources": [[835, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[835, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[835, "term-eLORETA"]], "epochs": [[835, "term-epochs"]], "equivalent current dipole": [[835, "term-equivalent-current-dipole"]], "events": [[835, "term-events"]], "evoked": [[835, "term-evoked"]], "fiducial": [[835, "term-fiducial"]], "fiducial point": [[835, "term-fiducial-point"]], "first_samp": [[835, "term-first_samp"]], "forward": [[835, "term-forward"]], "forward solution": [[835, "term-forward-solution"]], "global field power": [[835, "term-global-field-power"]], "head position indicator": [[835, "term-head-position-indicator"]], "hierarchical event descriptors": [[835, "term-hierarchical-event-descriptors"]], "info": [[835, "term-info"]], "inverse": [[835, "term-inverse"]], "inverse operator": [[835, "term-inverse-operator"]], "label": [[835, "term-label"]], "last_samp": [[835, "term-last_samp"]], "layout": [[835, "term-layout"]], "maximum intensity projection": [[835, "term-maximum-intensity-projection"]], "measurement info": [[835, "term-measurement-info"]], "minimum-norm estimate": [[835, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[835, "term-minimum-norm-estimation"]], "montage": [[835, "term-montage"]], "morphing": [[835, "term-morphing"]], "noise covariance": [[835, "term-noise-covariance"]], "optically pumped magnetometer": [[835, "term-optically-pumped-magnetometer"]], "path-like": [[835, "term-path-like"]], "pick": [[835, "term-pick"]], "projector": [[835, "term-projector"]], "raw": [[835, "term-raw"]], "region of interest": [[835, "term-region-of-interest"]], "sloreta": [[835, "term-sLORETA"]], "selection": [[835, "term-selection"]], "source estimate": [[835, "term-source-estimate"]], "source space": [[835, "term-source-space"]], "source time course": [[835, "term-source-time-course"]], "stim channel": [[835, "term-stim-channel"]], "superconducting quantum interference device": [[835, "term-superconducting-quantum-interference-device"]], "template montage": [[835, "term-template-montage"]], "tfr": [[835, "term-tfr"]], "trans": [[835, "term-trans"]], "trigger channel": [[835, "term-trigger-channel"]], "whitening": [[835, "term-whitening"]], "mne.beamformer": [[848, "module-mne.beamformer"]], "mne.dipole": [[848, "module-mne.dipole"]], "mne.inverse_sparse": [[848, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[848, "module-mne.minimum_norm"]], "mne.cuda": [[849, "module-mne.cuda"]], "mne.utils": [[849, "module-mne.utils"]], "mne.channels": [[869, "module-mne.channels"]], "mne.chpi": [[869, "module-mne.chpi"]], "mne.filter": [[869, "module-mne.filter"]], "mne.preprocessing": [[869, "module-mne.preprocessing"]], "mne.preprocessing.ieeg": [[869, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[869, "module-mne.preprocessing.nirs"]], "mne.transforms": [[869, "module-mne.transforms"]], "mne.io": [[871, "module-mne.io"]], "mne.io.kit": [[871, "module-mne.io.kit"]], "mne.baseline": [[874, "module-mne.baseline"]], "mne.simulation": [[875, "module-mne.simulation"]], "mne.simulation.metrics": [[875, "module-mne.simulation.metrics"]], "mne.stats": [[877, "module-mne.stats"]], "mne.time_frequency": [[878, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[878, "module-mne.time_frequency.tfr"]], "mne.viz": [[879, "module-mne.viz"]]}})