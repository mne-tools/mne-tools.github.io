Search.setIndex({"docnames": ["auto_examples/connectivity/index", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/publication_figure", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sensor_noise_level", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/10_ieeg_localize", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "bibliography", "cited", "connectivity", "covariance", "creating_from_arrays", "datasets", "decoding", "events", "export", "file_io", "forward", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.gui.locate_ieeg", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.warp_montage_volume", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "glossary", "index", "install/advanced", "install/check_installation", "install/contributing", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "inverse", "logging", "martinos", "mne_cpp", "most_used_classes", "mri", "overview/cite", "overview/cookbook", "overview/datasets_index", "overview/design_philosophy", "overview/development", "overview/faq", "overview/get_help", "overview/governance", "overview/implementation", "overview/index", "overview/learn_python", "overview/matlab", "overview/migrating", "overview/people", "overview/roadmap", "preprocessing", "python_reference", "reading_raw_data", "realtime", "report", "sensor_space", "simulation", "source_space", "statistics", "time_frequency", "visualization", "whats_new"], "filenames": ["auto_examples/connectivity/index.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/publication_figure.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sensor_noise_level.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/10_ieeg_localize.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "bibliography.rst", "cited.rst", "connectivity.rst", "covariance.rst", "creating_from_arrays.rst", "datasets.rst", "decoding.rst", "events.rst", "export.rst", "file_io.rst", "forward.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.gui.locate_ieeg.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.warp_montage_volume.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "glossary.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/contributing.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "inverse.rst", "logging.rst", "martinos.rst", "mne_cpp.rst", "most_used_classes.rst", "mri.rst", "overview/cite.rst", "overview/cookbook.rst", "overview/datasets_index.rst", "overview/design_philosophy.rst", "overview/development.rst", "overview/faq.rst", "overview/get_help.rst", "overview/governance.rst", "overview/implementation.rst", "overview/index.rst", "overview/learn_python.rst", "overview/matlab.rst", "overview/migrating.rst", "overview/people.rst", "overview/roadmap.rst", "preprocessing.rst", "python_reference.rst", "reading_raw_data.rst", "realtime.rst", "report.rst", "sensor_space.rst", "simulation.rst", "source_space.rst", "statistics.rst", "time_frequency.rst", "visualization.rst", "whats_new.rst"], "titles": ["Connectivity Analysis Examples", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Make figures more publication ready", "Plot single trial activity, grouped by ROI and sorted by RT", "Show noise levels from empty room data", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Locating intracranial electrode contacts", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "General bibliography", "Papers citing MNE-Python", "Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.gui.locate_ieeg", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.warp_montage_volume", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Glossary", "MNE", "Advanced setup", "Testing your installation", "Contributing guide", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Inverse Solutions", "Logging and Configuration", "Martinos Center setup", "MNE with CPP", "Most-used classes", "MRI Processing", "How to cite MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "MNE-Python Development", "Frequently Asked Questions (FAQ)", "Getting help", "Project Governance", "Algorithms and other implementation details", "Documentation overview", "Getting started with Python", "MNE-MATLAB documentation", "Migrating from other analysis software", "Current steering council and institutional partners", "Roadmap", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "What\u2019s new"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871], "7": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871], "demonstr": [0, 5, 19, 27, 33, 41, 43, 44, 45, 63, 69, 70, 72, 78, 82, 97, 101, 112, 115, 144, 145, 150, 151, 160, 167, 169, 170, 171, 189, 193, 197, 199, 200, 202, 203, 206, 208, 212, 219, 220, 223, 231, 236, 568, 839, 848, 851, 854, 855, 872], "sensor": [0, 4, 5, 11, 15, 16, 17, 20, 23, 25, 27, 28, 32, 34, 41, 42, 45, 49, 67, 69, 70, 76, 77, 78, 83, 86, 88, 90, 92, 93, 96, 100, 101, 107, 117, 118, 120, 122, 125, 128, 130, 133, 143, 145, 149, 150, 155, 156, 157, 158, 161, 165, 167, 168, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 187, 190, 197, 198, 200, 202, 203, 204, 206, 207, 208, 212, 220, 223, 224, 225, 230, 236, 239, 240, 241, 254, 256, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 281, 282, 294, 295, 296, 302, 303, 307, 308, 309, 310, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 335, 337, 339, 341, 346, 351, 352, 353, 354, 355, 361, 365, 366, 367, 369, 405, 406, 407, 408, 409, 412, 413, 414, 415, 420, 421, 423, 424, 425, 446, 448, 449, 456, 465, 472, 473, 474, 475, 478, 480, 483, 484, 486, 496, 508, 514, 515, 516, 520, 522, 525, 526, 530, 543, 548, 549, 551, 552, 553, 557, 563, 566, 577, 580, 585, 586, 588, 591, 603, 606, 607, 612, 625, 627, 628, 633, 644, 645, 656, 657, 660, 670, 672, 676, 677, 679, 680, 681, 682, 683, 687, 692, 693, 694, 695, 696, 722, 723, 724, 739, 752, 755, 756, 759, 760, 762, 763, 764, 765, 769, 771, 773, 774, 775, 777, 778, 779, 781, 782, 788, 791, 792, 794, 795, 799, 800, 801, 806, 807, 809, 812, 827, 832, 838, 847, 848, 849, 851, 857, 860, 861, 862, 872], "sourc": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 35, 37, 40, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 94, 95, 97, 98, 99, 101, 103, 104, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 156, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 174, 178, 182, 183, 184, 186, 187, 188, 189, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 215, 218, 220, 223, 224, 225, 226, 227, 228, 235, 236, 237, 238, 241, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 837, 838, 840, 843, 848, 851, 852, 853, 857, 862, 872], "space": [0, 5, 10, 17, 20, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 67, 73, 81, 86, 88, 90, 91, 92, 93, 96, 100, 103, 104, 106, 107, 111, 113, 117, 118, 122, 125, 129, 132, 133, 134, 135, 139, 146, 147, 150, 154, 155, 159, 161, 165, 167, 169, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 190, 193, 197, 203, 206, 210, 211, 212, 215, 218, 220, 223, 224, 228, 230, 232, 235, 236, 237, 241, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 294, 295, 309, 313, 322, 327, 339, 341, 344, 345, 348, 352, 353, 354, 356, 357, 360, 361, 364, 365, 369, 405, 408, 409, 412, 413, 415, 419, 422, 423, 426, 434, 439, 446, 450, 459, 461, 463, 467, 468, 469, 470, 471, 473, 474, 476, 478, 481, 488, 506, 507, 512, 514, 515, 518, 519, 520, 521, 522, 523, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 548, 549, 551, 552, 562, 563, 564, 565, 571, 580, 601, 603, 607, 610, 612, 614, 615, 622, 624, 627, 629, 631, 632, 633, 640, 641, 642, 649, 652, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 676, 677, 679, 680, 682, 683, 684, 687, 688, 692, 694, 696, 704, 726, 739, 755, 757, 763, 769, 770, 771, 772, 775, 776, 778, 781, 782, 786, 791, 792, 794, 797, 798, 799, 802, 803, 807, 812, 824, 827, 837, 848, 851, 860, 862, 872], "function": [0, 1, 4, 8, 16, 19, 27, 31, 36, 44, 45, 54, 55, 56, 57, 59, 70, 73, 75, 90, 92, 93, 99, 101, 107, 110, 111, 112, 113, 114, 127, 131, 133, 134, 135, 139, 140, 142, 143, 145, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 164, 165, 166, 167, 168, 169, 170, 171, 177, 179, 181, 182, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 218, 219, 220, 225, 227, 228, 236, 237, 238, 241, 243, 246, 247, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 288, 294, 295, 296, 300, 302, 304, 309, 314, 315, 317, 318, 326, 327, 329, 337, 338, 339, 344, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 367, 369, 371, 382, 385, 405, 408, 409, 410, 411, 412, 413, 414, 415, 422, 424, 426, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 444, 445, 446, 448, 462, 463, 466, 467, 471, 472, 473, 474, 479, 481, 482, 484, 485, 488, 490, 492, 493, 494, 496, 500, 502, 503, 505, 507, 515, 518, 519, 522, 525, 526, 527, 528, 529, 530, 531, 533, 534, 541, 547, 549, 551, 552, 554, 555, 556, 561, 562, 563, 564, 565, 566, 568, 569, 571, 574, 578, 580, 581, 582, 583, 584, 586, 587, 594, 597, 598, 601, 604, 605, 606, 607, 608, 609, 610, 612, 615, 620, 628, 631, 634, 637, 641, 642, 644, 645, 646, 655, 656, 658, 659, 676, 678, 679, 680, 681, 682, 683, 687, 688, 691, 692, 693, 694, 695, 696, 699, 702, 704, 710, 711, 720, 722, 723, 729, 733, 734, 735, 736, 737, 739, 749, 752, 754, 755, 756, 763, 765, 769, 771, 772, 777, 778, 779, 782, 785, 790, 791, 793, 794, 795, 797, 799, 801, 802, 803, 804, 808, 827, 829, 838, 839, 840, 846, 847, 848, 849, 854, 855, 858, 860, 861, 862, 864, 866, 869, 870, 872], "ha": [0, 1, 5, 9, 10, 27, 32, 42, 45, 49, 54, 69, 70, 73, 77, 81, 82, 91, 92, 101, 107, 112, 124, 125, 133, 135, 139, 141, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 184, 187, 188, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 215, 218, 220, 223, 224, 228, 236, 238, 243, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 285, 286, 287, 288, 294, 295, 299, 300, 305, 351, 355, 356, 357, 365, 366, 367, 373, 374, 375, 378, 379, 381, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 405, 411, 412, 426, 441, 443, 444, 446, 448, 449, 452, 465, 468, 470, 471, 473, 474, 475, 481, 482, 493, 500, 516, 518, 519, 520, 522, 530, 551, 552, 553, 555, 566, 577, 580, 587, 610, 611, 629, 632, 673, 674, 679, 680, 682, 683, 692, 693, 694, 695, 696, 699, 708, 710, 718, 719, 720, 722, 723, 727, 749, 763, 771, 773, 775, 776, 777, 778, 779, 782, 784, 786, 791, 792, 793, 794, 795, 797, 799, 801, 827, 829, 831, 835, 837, 838, 839, 847, 848, 849, 850, 851, 852, 853, 854, 857, 860, 864, 872], "move": [0, 27, 60, 74, 78, 79, 114, 133, 139, 144, 155, 160, 176, 200, 203, 204, 207, 231, 238, 243, 253, 258, 261, 262, 263, 264, 270, 276, 277, 362, 405, 412, 440, 473, 474, 551, 552, 556, 692, 694, 696, 728, 729, 770, 771, 775, 778, 782, 791, 794, 799, 803, 851, 853, 854, 864, 872], "mne_connect": [0, 27, 47, 145, 170, 243, 761], "packag": [0, 27, 145, 159, 165, 188, 194, 198, 199, 200, 203, 220, 223, 243, 253, 255, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 368, 369, 408, 415, 418, 421, 422, 448, 461, 463, 473, 474, 510, 511, 514, 515, 525, 526, 535, 536, 557, 564, 565, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 771, 774, 793, 827, 828, 829, 831, 832, 834, 835, 836, 837, 838, 842, 846, 848, 849, 860, 872], "can": [0, 4, 5, 7, 12, 13, 15, 16, 19, 21, 22, 24, 26, 27, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 69, 70, 73, 74, 77, 78, 80, 81, 82, 86, 92, 93, 97, 99, 101, 107, 110, 111, 112, 113, 114, 117, 118, 119, 124, 125, 127, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 220, 223, 224, 225, 226, 228, 231, 232, 233, 236, 237, 238, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 287, 294, 295, 300, 301, 302, 303, 306, 307, 309, 311, 313, 314, 317, 318, 319, 320, 324, 325, 326, 327, 329, 332, 336, 337, 338, 339, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 381, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 424, 426, 429, 430, 431, 432, 434, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 452, 455, 456, 457, 458, 461, 463, 464, 465, 467, 468, 470, 471, 473, 474, 481, 485, 488, 489, 492, 493, 494, 496, 500, 502, 503, 505, 507, 510, 511, 512, 514, 515, 517, 519, 525, 526, 528, 529, 530, 532, 536, 538, 539, 540, 541, 549, 550, 551, 552, 554, 555, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 581, 584, 586, 587, 588, 594, 595, 598, 600, 603, 604, 605, 606, 609, 610, 611, 613, 615, 617, 623, 627, 628, 629, 631, 632, 634, 637, 639, 640, 641, 648, 655, 656, 657, 658, 660, 662, 664, 666, 667, 671, 672, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 691, 692, 693, 694, 695, 696, 700, 701, 702, 703, 704, 705, 708, 715, 718, 720, 722, 723, 726, 728, 729, 734, 736, 737, 739, 740, 744, 747, 752, 755, 756, 757, 758, 759, 760, 761, 762, 763, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 799, 801, 802, 803, 805, 812, 814, 815, 818, 820, 825, 827, 829, 830, 831, 835, 836, 837, 838, 839, 843, 846, 847, 848, 849, 853, 854, 855, 857, 860, 861, 862, 872], "found": [0, 1, 2, 4, 5, 8, 9, 11, 12, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 125, 126, 127, 130, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 157, 158, 160, 161, 165, 167, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 213, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 253, 254, 256, 258, 261, 262, 263, 264, 266, 270, 285, 299, 315, 316, 326, 345, 346, 362, 373, 374, 375, 376, 378, 379, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 424, 432, 446, 447, 453, 454, 455, 464, 473, 474, 480, 498, 518, 552, 555, 564, 568, 569, 572, 573, 575, 576, 589, 600, 623, 629, 631, 636, 637, 641, 679, 691, 727, 739, 749, 751, 755, 769, 786, 792, 820, 830, 831, 836, 848, 852, 854, 860, 862, 872], "go": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 274, 354, 455, 473, 474, 552, 641, 831, 842, 851, 852, 853, 854], "end": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 284, 285, 309, 314, 321, 337, 338, 340, 351, 354, 356, 405, 411, 412, 417, 423, 428, 429, 430, 445, 446, 473, 474, 486, 493, 498, 513, 525, 533, 535, 536, 537, 551, 552, 555, 568, 569, 574, 590, 592, 594, 601, 603, 610, 611, 612, 618, 622, 626, 628, 648, 649, 650, 651, 652, 654, 657, 669, 692, 693, 695, 697, 698, 699, 700, 701, 702, 703, 705, 714, 725, 727, 739, 769, 778, 783, 786, 792, 799, 813, 814, 815, 816, 818, 819, 823, 824, 825, 826, 827, 829, 831, 851, 853, 854, 857, 872], "download": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 829, 831, 832, 833, 834, 838, 839, 848, 872], "full": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 236, 237, 238, 261, 262, 263, 264, 266, 268, 269, 272, 274, 275, 277, 294, 295, 297, 315, 316, 351, 355, 356, 357, 365, 366, 367, 405, 410, 412, 413, 418, 435, 438, 448, 449, 468, 470, 471, 473, 474, 518, 519, 530, 533, 549, 552, 607, 610, 621, 672, 678, 679, 681, 683, 695, 706, 708, 710, 717, 718, 720, 722, 723, 729, 739, 755, 757, 760, 763, 769, 771, 779, 786, 792, 797, 802, 804, 805, 808, 829, 831, 837, 843, 847, 848, 853, 872], "exampl": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 256, 277, 332, 359, 365, 366, 376, 381, 399, 404, 427, 432, 449, 472, 540, 562, 570, 589, 629, 638, 718, 720, 737, 769, 771, 778, 782, 784, 792, 794, 799, 803, 827, 829, 831, 834, 838, 847, 849, 851, 852, 854, 855, 872], "code": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 238, 241, 252, 256, 261, 262, 263, 264, 271, 280, 346, 432, 434, 444, 446, 449, 472, 473, 474, 481, 490, 496, 520, 580, 589, 605, 678, 694, 696, 721, 724, 739, 771, 773, 793, 827, 835, 847, 850, 851, 853, 854, 855, 858, 860, 867, 870, 872], "here": [1, 4, 5, 7, 9, 10, 11, 12, 15, 18, 19, 21, 28, 31, 33, 34, 38, 41, 42, 43, 45, 65, 69, 70, 73, 74, 80, 81, 82, 88, 92, 93, 98, 99, 102, 107, 109, 110, 112, 114, 115, 118, 119, 125, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 220, 223, 224, 225, 227, 228, 231, 232, 233, 237, 238, 267, 271, 272, 274, 276, 277, 331, 357, 381, 387, 411, 422, 429, 445, 472, 505, 515, 517, 527, 552, 568, 578, 581, 595, 597, 610, 641, 644, 645, 646, 655, 656, 658, 679, 680, 681, 682, 683, 687, 704, 772, 803, 829, 831, 838, 839, 848, 851, 854, 855, 856, 858, 872], "we": [1, 4, 5, 7, 9, 10, 11, 13, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 58, 59, 65, 67, 68, 69, 70, 72, 73, 74, 81, 82, 85, 86, 88, 92, 93, 99, 101, 107, 109, 110, 111, 112, 113, 114, 115, 118, 119, 124, 125, 127, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 258, 261, 262, 263, 264, 268, 271, 272, 274, 276, 279, 304, 327, 413, 415, 435, 436, 437, 438, 445, 455, 473, 474, 475, 502, 527, 552, 568, 579, 587, 652, 695, 739, 740, 755, 764, 779, 797, 829, 835, 836, 839, 842, 846, 847, 848, 849, 851, 853, 854, 858, 860, 872], "comput": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 31, 36, 38, 43, 44, 48, 50, 52, 57, 60, 67, 70, 71, 75, 77, 79, 85, 86, 90, 91, 93, 94, 95, 96, 98, 103, 111, 112, 113, 117, 118, 119, 121, 122, 129, 132, 133, 134, 140, 141, 144, 145, 148, 149, 150, 151, 154, 155, 156, 159, 162, 164, 165, 166, 167, 171, 174, 175, 177, 180, 181, 182, 183, 184, 185, 188, 190, 193, 194, 198, 199, 201, 205, 206, 208, 212, 215, 219, 220, 223, 224, 227, 236, 237, 238, 241, 254, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 281, 282, 285, 286, 287, 288, 289, 291, 294, 295, 296, 297, 299, 301, 304, 306, 312, 313, 315, 317, 322, 326, 338, 339, 340, 341, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 365, 366, 367, 376, 405, 406, 409, 410, 411, 412, 413, 417, 421, 424, 434, 439, 444, 446, 448, 449, 450, 455, 461, 463, 464, 468, 469, 470, 471, 473, 474, 478, 480, 485, 486, 488, 506, 509, 510, 511, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 549, 550, 552, 553, 556, 559, 560, 562, 563, 564, 565, 568, 571, 577, 578, 597, 599, 600, 601, 602, 607, 610, 611, 612, 614, 615, 622, 624, 627, 629, 631, 633, 635, 637, 640, 641, 642, 647, 648, 649, 650, 651, 652, 653, 654, 657, 660, 662, 663, 664, 665, 666, 667, 668, 673, 674, 675, 678, 679, 680, 682, 683, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 710, 711, 716, 717, 718, 719, 720, 721, 722, 723, 724, 728, 733, 739, 755, 756, 757, 763, 764, 766, 767, 769, 770, 771, 778, 779, 786, 791, 792, 798, 807, 816, 819, 820, 827, 831, 832, 834, 837, 838, 843, 848, 851, 857, 862, 867, 869, 872], "evok": [1, 2, 4, 5, 7, 8, 15, 16, 17, 18, 20, 27, 28, 31, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 67, 70, 72, 76, 77, 78, 82, 83, 85, 86, 87, 89, 91, 93, 94, 95, 97, 98, 99, 105, 111, 114, 115, 120, 122, 128, 134, 135, 140, 142, 143, 153, 161, 166, 168, 169, 175, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 208, 219, 220, 224, 225, 226, 227, 228, 231, 233, 236, 238, 241, 253, 256, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 271, 272, 274, 275, 276, 277, 278, 281, 282, 286, 287, 290, 291, 294, 295, 297, 311, 314, 350, 351, 353, 355, 369, 388, 410, 419, 426, 430, 431, 436, 437, 439, 446, 448, 462, 464, 468, 470, 471, 473, 474, 478, 486, 511, 512, 515, 518, 519, 520, 521, 522, 523, 527, 530, 533, 543, 548, 549, 550, 551, 552, 553, 560, 561, 564, 565, 567, 570, 574, 579, 580, 595, 601, 603, 607, 608, 609, 610, 611, 612, 614, 615, 618, 634, 637, 640, 641, 646, 656, 658, 678, 687, 692, 694, 695, 696, 701, 705, 710, 720, 722, 723, 724, 739, 756, 763, 764, 766, 767, 769, 770, 773, 774, 775, 776, 777, 778, 779, 783, 786, 790, 792, 793, 796, 798, 801, 806, 818, 827, 831, 848, 849, 851, 854, 857, 858, 862, 872], "from": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 142, 144, 145, 146, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 304, 306, 309, 310, 312, 315, 318, 321, 322, 323, 325, 327, 328, 329, 330, 331, 334, 335, 336, 339, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 365, 366, 367, 368, 369, 376, 381, 389, 390, 398, 399, 405, 409, 411, 412, 413, 414, 420, 423, 427, 428, 429, 431, 434, 435, 436, 437, 438, 439, 444, 446, 447, 448, 449, 450, 453, 455, 457, 458, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 525, 526, 527, 528, 529, 530, 532, 533, 534, 538, 539, 543, 544, 545, 549, 550, 551, 552, 553, 554, 555, 556, 559, 561, 562, 563, 566, 567, 568, 569, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 589, 590, 591, 592, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 632, 634, 637, 641, 642, 643, 644, 645, 646, 652, 655, 656, 657, 658, 659, 661, 662, 664, 665, 666, 667, 668, 669, 671, 672, 674, 678, 679, 680, 681, 682, 683, 684, 687, 688, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 718, 720, 721, 723, 724, 727, 728, 729, 731, 734, 735, 738, 739, 747, 752, 755, 756, 763, 767, 768, 769, 771, 772, 773, 775, 776, 777, 778, 779, 780, 782, 783, 784, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 799, 801, 807, 809, 812, 818, 819, 822, 825, 827, 829, 831, 834, 835, 836, 837, 838, 839, 843, 847, 848, 849, 851, 853, 854, 856, 857, 860, 862, 870, 872], "tutori": [1, 27, 32, 62, 69, 72, 82, 107, 122, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 179, 180, 181, 185, 186, 189, 190, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 225, 228, 229, 231, 233, 234, 236, 238, 239, 241, 258, 259, 261, 262, 263, 264, 266, 294, 299, 351, 356, 405, 425, 440, 443, 446, 448, 473, 474, 484, 486, 516, 540, 580, 719, 720, 722, 723, 755, 767, 779, 807, 827, 831, 848, 851, 854, 855, 856, 872], "For": [1, 4, 15, 19, 43, 44, 47, 50, 55, 63, 68, 69, 78, 93, 99, 101, 107, 111, 113, 118, 119, 121, 125, 132, 133, 134, 135, 139, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 212, 213, 215, 218, 223, 225, 227, 228, 231, 233, 236, 237, 238, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 280, 294, 295, 311, 322, 332, 351, 355, 356, 357, 364, 365, 366, 367, 376, 381, 398, 399, 404, 405, 407, 408, 411, 412, 413, 415, 417, 418, 422, 426, 427, 428, 429, 431, 434, 435, 436, 438, 440, 441, 443, 444, 446, 447, 448, 449, 462, 463, 464, 467, 468, 470, 471, 472, 473, 474, 479, 481, 488, 493, 495, 496, 517, 525, 530, 534, 539, 551, 552, 553, 554, 563, 567, 570, 571, 580, 584, 591, 598, 607, 623, 627, 629, 634, 637, 639, 641, 672, 677, 678, 679, 680, 682, 683, 687, 692, 693, 694, 695, 696, 710, 712, 719, 720, 722, 723, 729, 739, 754, 755, 757, 763, 764, 769, 770, 771, 773, 775, 778, 779, 780, 782, 783, 784, 786, 792, 794, 795, 799, 801, 803, 827, 829, 831, 833, 837, 842, 843, 847, 848, 849, 850, 851, 854, 858, 872], "comparison": [1, 27, 31, 38, 81, 94, 95, 99, 110, 120, 128, 133, 150, 154, 156, 166, 175, 182, 183, 190, 200, 205, 209, 228, 231, 232, 233, 237, 238, 241, 272, 273, 357, 552, 555, 581, 620, 676, 680, 681, 839, 847, 854, 869, 872], "see": [1, 4, 7, 8, 10, 19, 21, 22, 26, 27, 32, 34, 35, 39, 43, 44, 62, 63, 69, 70, 72, 74, 78, 80, 81, 82, 99, 111, 113, 117, 118, 119, 125, 127, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 225, 226, 228, 231, 236, 238, 246, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 418, 421, 422, 424, 426, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 455, 456, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 546, 548, 551, 552, 553, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 597, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 638, 640, 641, 643, 644, 645, 646, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 708, 710, 711, 714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 734, 738, 739, 744, 747, 754, 755, 756, 763, 764, 767, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 781, 782, 783, 784, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 808, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 835, 836, 837, 838, 847, 848, 849, 851, 853, 854, 855, 858, 859, 860, 862, 869, 872], "1": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 241, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 287, 294, 295, 296, 301, 304, 305, 306, 309, 311, 313, 315, 318, 319, 320, 332, 338, 339, 340, 344, 345, 350, 351, 352, 354, 356, 357, 362, 367, 376, 382, 383, 384, 388, 389, 390, 398, 399, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 432, 434, 435, 436, 437, 438, 440, 441, 443, 444, 445, 446, 448, 449, 450, 455, 461, 463, 464, 467, 468, 470, 471, 472, 473, 474, 481, 483, 488, 489, 490, 495, 496, 497, 504, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 546, 549, 551, 552, 553, 554, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 584, 587, 588, 589, 590, 595, 602, 604, 606, 614, 627, 629, 631, 633, 637, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 661, 666, 667, 668, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 710, 711, 715, 717, 718, 719, 720, 721, 722, 723, 724, 728, 729, 734, 739, 743, 748, 752, 755, 756, 760, 763, 767, 768, 769, 770, 771, 773, 774, 775, 778, 779, 780, 782, 783, 784, 786, 787, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 805, 812, 816, 818, 823, 827, 829, 830, 831, 834, 836, 837, 839, 846, 847, 848, 851, 853, 854, 857, 860], "http": [1, 8, 15, 43, 69, 86, 111, 150, 154, 183, 194, 228, 241, 261, 262, 263, 264, 268, 272, 276, 297, 351, 364, 376, 381, 383, 398, 399, 413, 468, 473, 474, 481, 519, 553, 638, 674, 676, 721, 724, 735, 797, 829, 831, 839, 851, 854, 872], "neuroimag": [1, 10, 12, 18, 19, 21, 35, 42, 46, 59, 74, 92, 99, 111, 119, 124, 143, 154, 161, 164, 179, 183, 185, 186, 194, 223, 224, 241, 258, 259, 261, 262, 263, 264, 266, 267, 272, 299, 351, 384, 409, 411, 412, 413, 423, 426, 446, 448, 468, 471, 484, 516, 520, 530, 534, 552, 587, 649, 652, 654, 676, 679, 680, 681, 682, 683, 685, 686, 706, 708, 718, 722, 755, 767, 779, 827, 838, 846, 849, 851, 854, 855, 860], "usc": [1, 183], "edu": [1, 9, 24, 35, 37, 43, 47, 58, 67, 69, 99, 102, 111, 112, 113, 118, 132, 150, 154, 183, 241, 268, 272, 276, 364, 589, 797, 854], "mediannervectf": 1, "author": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 200, 207, 220, 223, 225, 226, 227, 228, 231, 232, 233, 237, 238, 241, 587, 831, 846, 853], "mainak": [1, 46, 77, 84, 85, 190, 241, 471, 846, 859, 872], "ja": [1, 46, 77, 84, 85, 190, 241, 471, 846, 859, 872], "telecom": [1, 77, 85, 190], "paristech": [1, 77, 85, 190, 252, 859], "fr": [1, 7, 9, 10, 11, 13, 18, 19, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 77, 85, 90, 94, 95, 98, 105, 106, 108, 109, 115, 119, 123, 129, 130, 136, 158, 184, 190, 194, 225, 226, 227, 231, 232, 233, 237, 241, 872], "licens": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 207, 220, 223, 225, 226, 227, 228, 231, 232, 233, 237, 238, 373, 374, 375, 381, 383, 848, 872], "bsd": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 207, 220, 223, 225, 226, 227, 228, 231, 232, 233, 237, 238, 580, 853], "claus": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 193, 207, 220, 223, 225, 226, 227, 228, 231, 232, 233, 237, 238], "import": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 261, 262, 263, 264, 266, 309, 325, 327, 334, 369, 376, 398, 399, 445, 473, 474, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 552, 589, 604, 605, 606, 609, 623, 637, 657, 672, 674, 691, 692, 694, 695, 696, 708, 718, 734, 737, 739, 787, 825, 829, 830, 835, 838, 839, 842, 847, 848, 849, 851, 853, 854, 858, 860, 872], "numpi": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 47, 50, 58, 59, 60, 63, 67, 69, 70, 71, 73, 80, 82, 88, 90, 91, 92, 93, 95, 98, 105, 109, 110, 111, 112, 113, 115, 117, 118, 123, 125, 131, 133, 134, 135, 136, 139, 140, 142, 145, 148, 149, 150, 155, 156, 157, 158, 159, 165, 167, 169, 170, 171, 175, 176, 177, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 212, 213, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 255, 258, 261, 262, 263, 264, 268, 269, 270, 271, 272, 275, 276, 277, 405, 411, 412, 413, 443, 444, 445, 470, 471, 472, 473, 474, 505, 552, 566, 578, 589, 597, 644, 645, 646, 655, 656, 658, 672, 677, 679, 680, 681, 682, 683, 691, 692, 693, 694, 695, 696, 697, 699, 700, 702, 708, 718, 719, 720, 721, 722, 723, 724, 739, 771, 773, 778, 782, 791, 827, 830, 849, 853, 856, 872], "np": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 45, 47, 50, 58, 59, 60, 67, 69, 70, 71, 73, 80, 82, 88, 90, 91, 92, 93, 95, 98, 105, 109, 110, 111, 112, 113, 115, 117, 118, 123, 125, 131, 133, 134, 135, 136, 140, 142, 145, 149, 150, 155, 156, 157, 158, 159, 165, 167, 169, 171, 175, 176, 177, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 200, 201, 202, 204, 205, 208, 209, 212, 213, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 255, 261, 262, 263, 264, 267, 268, 269, 272, 274, 275, 276, 277, 279, 311, 351, 439, 440, 444, 461, 473, 474, 490, 503, 552, 566, 571, 578, 589, 658, 672, 684, 692, 694, 695, 696, 708, 710, 718, 719, 720, 722, 723, 739, 747, 753, 758, 763, 770, 793, 797, 799, 802, 803, 831, 854, 857, 870, 872], "mne": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 197, 199, 201, 202, 205, 206, 207, 209, 213, 214, 215, 216, 219, 220, 221, 222, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 246, 247, 248, 249, 251, 252, 827, 829, 830, 832, 836, 840, 841, 842, 847, 848, 849, 852, 853, 855, 858, 859, 860, 861, 862, 863, 866, 867, 869, 870, 871, 872], "bst_raw": [1, 117, 848, 862], "io": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 121, 125, 126, 127, 130, 131, 133, 134, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 169, 170, 171, 176, 179, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 225, 226, 227, 228, 231, 233, 236, 237, 238, 241, 248, 253, 254, 255, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 280, 293, 362, 381, 410, 438, 440, 443, 515, 552, 560, 564, 565, 571, 580, 692, 694, 695, 696, 710, 739, 783, 784, 786, 829, 831, 835, 847, 848, 849, 851, 854, 858, 862, 863, 872], "read_raw_ctf": [1, 7, 12, 21, 79, 80, 117, 121, 183, 187, 190, 479, 854, 862, 872], "print": [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 73, 75, 77, 78, 81, 82, 84, 85, 86, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 125, 126, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 174, 175, 178, 180, 181, 182, 183, 184, 190, 194, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 218, 219, 220, 223, 224, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 253, 261, 262, 263, 264, 270, 351, 389, 440, 446, 473, 474, 503, 638, 639, 691, 694, 695, 734, 747, 763, 774, 776, 779, 835, 837, 848, 851, 872], "__doc__": [1, 2, 4, 7, 8, 10, 11, 13, 14, 15, 16, 18, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 75, 77, 78, 82, 84, 85, 86, 90, 91, 92, 93, 94, 95, 98, 101, 102, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 121, 126, 129, 130, 131, 135, 174, 178, 182, 183, 190, 226, 227, 232, 233], "tmin": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 68, 70, 71, 72, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 110, 111, 112, 115, 119, 126, 130, 131, 135, 136, 139, 140, 141, 143, 144, 148, 150, 161, 165, 171, 176, 179, 180, 182, 183, 184, 190, 193, 194, 198, 199, 203, 207, 209, 212, 218, 219, 220, 224, 225, 226, 227, 228, 231, 233, 236, 237, 238, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 338, 340, 351, 352, 353, 356, 411, 417, 429, 431, 472, 473, 474, 507, 525, 542, 564, 565, 568, 569, 574, 659, 678, 684, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 739, 771, 793, 799, 847, 854, 858, 872], "tmax": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 68, 70, 71, 72, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 110, 111, 112, 115, 119, 126, 127, 130, 131, 135, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 161, 165, 166, 167, 171, 176, 179, 180, 181, 182, 183, 184, 190, 193, 194, 197, 198, 199, 203, 204, 206, 207, 208, 209, 212, 213, 214, 215, 219, 220, 224, 225, 226, 227, 228, 231, 233, 236, 237, 238, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 338, 340, 351, 352, 353, 356, 411, 417, 429, 431, 472, 473, 474, 525, 542, 564, 565, 568, 569, 574, 678, 681, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 739, 771, 780, 793, 799, 847, 851, 854, 858, 872], "event_id": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 28, 32, 33, 34, 42, 45, 46, 49, 68, 70, 71, 72, 86, 92, 94, 95, 97, 98, 101, 102, 105, 108, 110, 111, 115, 119, 126, 130, 134, 135, 136, 139, 140, 141, 143, 148, 150, 151, 161, 165, 167, 171, 176, 179, 182, 183, 184, 190, 194, 202, 203, 205, 209, 213, 218, 219, 220, 225, 226, 227, 228, 231, 233, 236, 237, 238, 253, 254, 255, 256, 261, 262, 271, 280, 352, 421, 427, 429, 432, 434, 473, 474, 490, 517, 553, 564, 565, 568, 569, 572, 573, 574, 575, 576, 604, 606, 607, 678, 694, 695, 769, 772, 792, 847, 854, 858, 872], "0": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 243, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 290, 294, 295, 297, 301, 302, 303, 304, 306, 309, 310, 311, 314, 315, 318, 323, 325, 327, 332, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 365, 366, 367, 376, 382, 383, 384, 385, 398, 399, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 424, 425, 426, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 458, 461, 462, 463, 464, 468, 470, 471, 472, 473, 474, 481, 482, 483, 484, 485, 486, 488, 489, 490, 493, 495, 500, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 525, 526, 527, 530, 531, 532, 534, 535, 536, 537, 538, 539, 543, 544, 545, 546, 551, 552, 553, 554, 555, 557, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 578, 580, 582, 584, 585, 588, 589, 594, 600, 602, 604, 605, 606, 607, 610, 611, 614, 615, 623, 625, 626, 628, 629, 631, 634, 637, 639, 640, 641, 642, 643, 644, 645, 646, 648, 650, 651, 655, 656, 657, 658, 659, 661, 670, 671, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 704, 705, 708, 709, 710, 711, 714, 716, 718, 719, 720, 721, 722, 723, 724, 725, 728, 729, 734, 736, 739, 740, 742, 743, 744, 748, 749, 755, 756, 757, 758, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 808, 812, 813, 816, 818, 822, 823, 825, 827, 829, 830, 831, 834, 837, 847, 848, 851, 853, 854, 857], "2": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 233, 234, 235, 236, 237, 238, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 285, 287, 294, 295, 297, 299, 311, 313, 318, 332, 338, 340, 344, 345, 351, 352, 353, 354, 356, 357, 376, 383, 384, 398, 399, 405, 407, 408, 411, 412, 413, 415, 416, 417, 421, 422, 424, 426, 427, 428, 434, 438, 440, 441, 443, 444, 446, 450, 457, 460, 467, 468, 470, 471, 473, 474, 481, 488, 495, 500, 508, 510, 515, 517, 518, 519, 525, 527, 528, 529, 530, 532, 534, 535, 536, 546, 551, 552, 553, 557, 560, 561, 562, 564, 565, 566, 568, 569, 571, 577, 578, 579, 580, 584, 590, 595, 597, 610, 611, 614, 617, 620, 622, 633, 637, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 664, 666, 667, 668, 669, 671, 673, 674, 675, 678, 679, 680, 681, 682, 683, 684, 691, 692, 693, 694, 695, 696, 704, 705, 707, 708, 711, 715, 718, 719, 720, 721, 722, 723, 724, 727, 729, 739, 740, 743, 744, 756, 763, 770, 771, 773, 775, 778, 779, 780, 781, 782, 783, 784, 791, 793, 794, 795, 797, 798, 799, 801, 802, 809, 829, 830, 831, 836, 837, 839, 846, 847, 848, 849, 851, 854, 857], "take": [1, 4, 5, 7, 10, 16, 19, 26, 31, 38, 41, 43, 44, 45, 47, 50, 69, 70, 73, 75, 78, 81, 92, 94, 95, 99, 107, 108, 111, 113, 117, 121, 125, 129, 131, 133, 134, 136, 139, 140, 141, 143, 144, 148, 149, 151, 154, 157, 158, 159, 161, 165, 166, 167, 168, 170, 171, 175, 178, 180, 181, 182, 184, 188, 193, 194, 199, 200, 203, 204, 205, 206, 208, 212, 218, 220, 223, 231, 232, 233, 237, 238, 253, 255, 258, 261, 262, 263, 264, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 280, 284, 294, 295, 306, 309, 327, 337, 339, 351, 355, 356, 357, 364, 365, 366, 367, 405, 412, 429, 434, 438, 446, 448, 449, 462, 464, 468, 470, 471, 473, 474, 498, 519, 520, 521, 522, 523, 525, 526, 530, 535, 536, 552, 555, 557, 560, 628, 634, 640, 642, 653, 658, 678, 687, 692, 694, 695, 696, 736, 739, 740, 756, 763, 769, 771, 773, 778, 779, 782, 791, 799, 809, 827, 831, 834, 835, 839, 853, 854, 855, 857, 872], "right": [1, 5, 8, 10, 11, 13, 15, 39, 40, 41, 43, 45, 47, 51, 52, 57, 61, 69, 70, 72, 78, 81, 92, 107, 110, 111, 112, 114, 118, 125, 126, 130, 132, 133, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 157, 159, 160, 165, 167, 171, 174, 175, 177, 178, 179, 180, 190, 193, 199, 200, 202, 203, 204, 205, 208, 212, 213, 214, 215, 219, 220, 225, 227, 228, 231, 232, 233, 236, 237, 257, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 275, 276, 277, 309, 311, 321, 322, 332, 333, 357, 376, 405, 412, 427, 429, 432, 439, 463, 471, 473, 474, 495, 505, 517, 551, 552, 627, 655, 692, 694, 695, 696, 708, 718, 739, 752, 762, 763, 769, 770, 771, 775, 777, 778, 782, 790, 791, 792, 794, 799, 803, 827, 829, 831, 834, 848, 851, 853, 854, 857, 872], "hand": [1, 5, 8, 9, 110, 155, 159, 198, 203, 204, 205, 238, 266, 376, 552, 854, 872], "somato": [1, 32, 33, 34, 46, 61, 111, 237, 848, 862, 872], "reject": [1, 5, 7, 11, 13, 16, 27, 28, 32, 42, 45, 46, 61, 68, 75, 76, 81, 94, 95, 97, 98, 99, 101, 102, 105, 108, 111, 112, 115, 119, 130, 139, 140, 141, 143, 144, 145, 150, 151, 164, 165, 171, 176, 179, 188, 190, 194, 198, 203, 204, 205, 208, 209, 210, 211, 214, 223, 225, 226, 227, 228, 231, 233, 237, 241, 253, 254, 255, 256, 261, 262, 263, 266, 271, 354, 356, 473, 474, 512, 549, 552, 554, 555, 564, 565, 568, 569, 572, 573, 580, 603, 607, 619, 670, 676, 678, 769, 782, 783, 784, 785, 854, 872], "dict": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 21, 22, 26, 28, 32, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 61, 65, 68, 69, 73, 75, 77, 78, 84, 86, 91, 92, 94, 95, 97, 98, 99, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 115, 118, 119, 121, 125, 126, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 144, 149, 150, 151, 156, 157, 158, 159, 165, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 183, 190, 193, 194, 199, 200, 202, 203, 204, 205, 206, 208, 209, 212, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 238, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 283, 285, 294, 295, 299, 301, 307, 309, 311, 321, 322, 337, 338, 339, 340, 341, 342, 343, 351, 354, 355, 356, 362, 363, 364, 365, 366, 367, 381, 387, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 427, 429, 432, 434, 437, 439, 440, 441, 443, 444, 448, 449, 450, 451, 453, 455, 456, 457, 458, 465, 468, 470, 471, 472, 473, 474, 477, 481, 488, 492, 495, 504, 507, 508, 509, 510, 511, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 530, 532, 535, 536, 537, 542, 544, 545, 548, 550, 551, 552, 553, 554, 562, 564, 565, 566, 568, 569, 571, 577, 591, 596, 600, 604, 605, 606, 607, 609, 613, 619, 623, 625, 628, 634, 641, 643, 644, 645, 655, 657, 660, 661, 677, 678, 679, 680, 682, 683, 687, 689, 692, 694, 695, 696, 708, 718, 726, 727, 729, 739, 740, 755, 756, 758, 759, 761, 762, 763, 767, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 782, 784, 790, 791, 792, 794, 797, 798, 799, 800, 801, 802, 803, 809, 815, 825, 826, 831, 847, 854, 858, 872], "mag": [1, 5, 7, 8, 9, 12, 13, 21, 22, 26, 28, 31, 32, 33, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 68, 73, 75, 78, 79, 80, 85, 91, 92, 102, 105, 107, 114, 117, 118, 119, 121, 122, 130, 139, 141, 144, 145, 149, 151, 155, 156, 157, 161, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 183, 184, 190, 194, 197, 199, 201, 203, 204, 205, 207, 208, 212, 218, 219, 228, 231, 233, 236, 253, 256, 258, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 294, 295, 308, 315, 316, 335, 351, 355, 356, 365, 366, 367, 369, 405, 412, 414, 448, 449, 468, 470, 471, 473, 474, 508, 530, 549, 550, 551, 552, 557, 562, 564, 565, 566, 568, 569, 571, 633, 678, 692, 694, 695, 696, 762, 763, 769, 770, 771, 773, 775, 777, 778, 779, 782, 792, 794, 795, 799, 800, 801, 827, 847, 854, 872], "4e": [1, 9, 21, 28, 31, 42, 45, 68, 77, 80, 102, 105, 119, 130, 151, 161, 176, 179, 184, 190, 194, 203, 219, 220, 228, 256, 261, 262, 271, 356, 473, 474, 552, 568, 569, 678, 769, 792, 847], "12": [1, 7, 8, 9, 11, 12, 13, 18, 19, 21, 24, 28, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 59, 61, 64, 66, 68, 69, 71, 75, 78, 79, 81, 83, 85, 99, 101, 102, 105, 106, 107, 110, 111, 112, 119, 125, 128, 130, 131, 133, 136, 142, 144, 145, 147, 150, 151, 153, 158, 160, 161, 165, 167, 168, 169, 170, 171, 173, 174, 176, 178, 179, 182, 186, 189, 190, 193, 194, 197, 199, 200, 201, 202, 203, 205, 207, 208, 211, 212, 214, 218, 220, 223, 224, 225, 226, 227, 228, 232, 233, 237, 241, 255, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277, 294, 302, 306, 310, 332, 344, 348, 349, 351, 356, 357, 376, 389, 411, 427, 446, 448, 471, 473, 474, 485, 514, 517, 519, 552, 563, 564, 565, 568, 569, 578, 580, 645, 678, 691, 692, 694, 695, 696, 720, 723, 757, 769, 771, 776, 788, 792, 795, 847, 848, 851, 854, 857], "eog": [1, 4, 8, 9, 11, 12, 14, 15, 16, 27, 28, 32, 33, 42, 45, 46, 61, 68, 70, 73, 75, 76, 79, 80, 81, 83, 86, 88, 91, 92, 94, 95, 98, 102, 105, 106, 107, 108, 111, 115, 125, 126, 136, 139, 140, 144, 145, 148, 150, 151, 165, 166, 167, 168, 171, 176, 179, 188, 190, 194, 198, 199, 201, 204, 206, 208, 209, 212, 213, 214, 215, 218, 220, 225, 226, 227, 228, 231, 233, 237, 256, 261, 262, 263, 264, 266, 271, 308, 356, 369, 438, 446, 473, 474, 481, 483, 484, 485, 488, 489, 490, 494, 498, 543, 549, 551, 552, 565, 568, 569, 573, 576, 590, 595, 604, 644, 645, 678, 692, 694, 695, 696, 769, 770, 785, 790, 792, 827, 847, 848, 849, 854, 857, 858, 872], "250e": [1, 32, 143, 165, 190, 202, 205, 256, 261, 262, 356, 552, 568, 569, 678], "6": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 122, 125, 128, 129, 131, 133, 135, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 155, 156, 157, 158, 159, 161, 163, 165, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 218, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 237, 238, 241, 253, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 297, 311, 332, 356, 376, 382, 405, 407, 410, 412, 440, 441, 443, 444, 473, 474, 519, 551, 552, 561, 566, 567, 568, 569, 578, 582, 633, 645, 679, 680, 682, 683, 691, 692, 694, 695, 696, 708, 718, 719, 720, 722, 723, 754, 755, 756, 769, 770, 771, 775, 778, 782, 784, 791, 792, 794, 798, 799, 801, 829, 830, 837, 847, 848, 854, 857], "data_path": [1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 219, 220, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 261, 262, 263, 264, 271, 381, 473, 474, 831, 848, 854, 862, 872], "raw_path": [1, 171, 183], "meg": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 122, 125, 127, 128, 129, 130, 132, 134, 135, 139, 140, 141, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 191, 192, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 218, 220, 225, 226, 227, 228, 231, 232, 233, 236, 237, 241, 253, 256, 258, 261, 262, 263, 264, 265, 266, 270, 272, 274, 281, 282, 294, 295, 297, 307, 312, 315, 316, 317, 322, 324, 326, 334, 338, 350, 351, 352, 353, 354, 355, 356, 361, 365, 366, 367, 369, 388, 405, 407, 412, 413, 421, 426, 446, 448, 449, 456, 462, 468, 470, 471, 473, 474, 476, 480, 484, 486, 492, 493, 496, 502, 504, 511, 515, 518, 519, 520, 530, 531, 533, 534, 546, 549, 550, 551, 552, 554, 557, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 577, 580, 581, 586, 588, 595, 601, 605, 606, 609, 610, 612, 627, 633, 644, 645, 649, 652, 654, 657, 660, 678, 679, 680, 682, 683, 687, 692, 694, 695, 696, 700, 701, 702, 703, 705, 722, 723, 726, 727, 739, 752, 755, 756, 762, 763, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 781, 782, 783, 790, 791, 793, 794, 799, 801, 806, 827, 828, 831, 838, 843, 846, 847, 851, 857, 858, 862, 872], "subj001_somatosensory_20111109_01_aux": [1, 117], "f": [1, 5, 8, 9, 10, 18, 19, 21, 22, 27, 28, 29, 32, 33, 39, 40, 41, 46, 47, 60, 63, 69, 70, 81, 84, 88, 90, 92, 96, 100, 102, 105, 107, 109, 110, 111, 112, 113, 117, 124, 125, 133, 134, 140, 143, 148, 149, 150, 156, 157, 158, 159, 164, 166, 169, 171, 175, 181, 190, 193, 194, 197, 198, 200, 203, 205, 207, 208, 214, 218, 219, 220, 223, 225, 226, 227, 229, 230, 231, 232, 233, 236, 237, 238, 241, 253, 255, 258, 261, 262, 263, 264, 266, 270, 285, 294, 299, 315, 350, 383, 444, 446, 473, 474, 518, 549, 561, 607, 648, 672, 673, 674, 675, 678, 680, 683, 695, 708, 718, 722, 727, 760, 763, 770, 827, 837, 839, 847, 848, 854, 872], "d": [1, 4, 7, 11, 12, 15, 19, 21, 22, 26, 34, 39, 41, 46, 50, 52, 57, 59, 65, 71, 78, 79, 80, 82, 91, 92, 98, 99, 107, 109, 111, 116, 117, 118, 121, 124, 125, 127, 133, 134, 135, 140, 156, 157, 158, 159, 170, 178, 179, 181, 182, 183, 184, 190, 193, 200, 206, 207, 214, 220, 223, 227, 231, 232, 233, 236, 238, 241, 253, 255, 258, 261, 262, 263, 264, 266, 270, 285, 294, 295, 299, 318, 351, 383, 413, 468, 473, 474, 486, 490, 518, 519, 611, 637, 685, 686, 694, 696, 711, 727, 740, 779, 792, 839, 848, 849, 854, 860, 872], "crop": [1, 5, 8, 9, 10, 12, 21, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 45, 46, 51, 59, 73, 75, 79, 80, 81, 82, 107, 110, 114, 125, 136, 139, 140, 141, 145, 148, 150, 166, 167, 171, 175, 178, 179, 180, 182, 183, 184, 197, 198, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 220, 224, 225, 231, 233, 236, 237, 255, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 562, 581, 594, 692, 695, 849, 872], "half": [1, 69, 200, 201, 233, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 338, 407, 441, 443, 444, 473, 474, 570, 679, 680, 682, 683, 687, 704, 706, 708, 710, 718, 720, 722, 723, 739, 763, 769, 771, 792, 797, 802, 831, 854, 872], "length": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 109, 110, 111, 112, 113, 119, 131, 135, 140, 142, 143, 148, 150, 171, 174, 190, 194, 197, 199, 201, 202, 203, 204, 205, 208, 209, 212, 215, 218, 224, 228, 236, 253, 256, 258, 259, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 284, 310, 356, 389, 405, 407, 410, 411, 412, 413, 416, 417, 420, 441, 443, 444, 463, 471, 472, 473, 474, 522, 534, 536, 551, 552, 554, 560, 568, 569, 580, 587, 610, 611, 632, 642, 658, 672, 673, 677, 678, 692, 694, 695, 696, 697, 698, 699, 700, 702, 704, 707, 710, 711, 715, 719, 720, 721, 722, 723, 724, 729, 739, 754, 755, 756, 763, 770, 771, 773, 775, 778, 780, 782, 791, 794, 797, 798, 799, 800, 801, 802, 827, 847, 848, 854, 872], "save": [1, 5, 7, 9, 11, 29, 30, 32, 34, 41, 43, 44, 60, 61, 69, 73, 106, 107, 108, 111, 113, 133, 134, 135, 141, 142, 149, 150, 155, 156, 157, 159, 160, 161, 167, 169, 176, 179, 180, 182, 187, 189, 190, 198, 199, 201, 203, 205, 206, 208, 213, 214, 215, 220, 227, 231, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 285, 309, 310, 335, 376, 381, 409, 435, 436, 437, 438, 464, 472, 473, 474, 490, 492, 496, 525, 526, 541, 551, 552, 593, 605, 606, 609, 610, 614, 617, 620, 631, 682, 683, 692, 693, 694, 695, 696, 712, 713, 725, 727, 739, 814, 818, 819, 821, 829, 831, 835, 849, 851, 854, 857, 858, 872], "memori": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 253, 256, 261, 262, 263, 264, 279, 288, 289, 292, 327, 356, 358, 360, 370, 407, 414, 417, 418, 422, 443, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 512, 521, 522, 523, 525, 526, 532, 554, 580, 635, 641, 679, 680, 682, 683, 691, 698, 701, 717, 719, 720, 721, 722, 723, 724, 739, 773, 829, 830, 837, 849, 858, 860, 872], "120": [1, 5, 7, 24, 33, 35, 38, 42, 45, 59, 79, 80, 106, 131, 133, 134, 141, 150, 159, 168, 175, 180, 190, 197, 199, 201, 203, 207, 211, 228, 237, 241, 253, 261, 262, 428, 473, 474, 562, 566, 769, 792], "load_data": [1, 4, 8, 9, 12, 21, 34, 42, 69, 70, 73, 74, 75, 79, 80, 81, 82, 97, 107, 110, 111, 113, 135, 145, 150, 158, 165, 167, 171, 181, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 215, 237, 261, 262, 263, 264, 473, 474, 848, 854, 862, 872], "plot": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 49, 51, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 120, 127, 128, 129, 130, 132, 133, 134, 136, 139, 142, 143, 144, 145, 148, 150, 152, 153, 155, 157, 158, 159, 164, 165, 166, 167, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 214, 216, 217, 218, 220, 223, 224, 228, 231, 232, 233, 236, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 309, 310, 318, 320, 321, 325, 335, 351, 361, 369, 405, 409, 412, 420, 423, 425, 431, 434, 446, 448, 465, 473, 474, 480, 484, 486, 489, 496, 511, 515, 516, 518, 519, 528, 529, 530, 531, 533, 548, 549, 551, 552, 566, 588, 601, 602, 607, 610, 612, 615, 620, 625, 632, 641, 678, 692, 693, 694, 695, 696, 708, 718, 739, 740, 741, 742, 744, 748, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 809, 827, 830, 831, 835, 847, 848, 849, 852, 854, 855, 858, 860, 861, 872], "set": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 151, 154, 155, 157, 158, 159, 160, 161, 164, 165, 167, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 214, 218, 219, 220, 223, 226, 237, 238, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 284, 285, 294, 295, 297, 299, 300, 314, 322, 327, 338, 351, 352, 354, 356, 357, 358, 362, 365, 371, 372, 373, 374, 375, 376, 378, 379, 381, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 428, 429, 430, 433, 434, 435, 438, 439, 440, 444, 446, 448, 461, 462, 463, 464, 470, 473, 474, 475, 481, 488, 489, 492, 494, 505, 507, 509, 511, 513, 514, 515, 516, 517, 518, 521, 522, 523, 525, 526, 530, 535, 536, 538, 539, 540, 543, 545, 551, 552, 553, 554, 555, 557, 564, 565, 566, 568, 569, 571, 581, 593, 598, 604, 605, 609, 610, 611, 614, 617, 620, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 657, 669, 670, 674, 676, 678, 679, 680, 681, 682, 683, 687, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 708, 710, 711, 718, 719, 720, 721, 722, 723, 727, 729, 730, 732, 737, 738, 739, 742, 756, 758, 763, 766, 767, 769, 771, 774, 775, 776, 777, 778, 782, 784, 785, 786, 791, 792, 793, 794, 795, 797, 799, 801, 802, 803, 804, 805, 808, 811, 827, 829, 830, 835, 836, 838, 849, 851, 853, 854, 857, 858, 861, 872], "channel": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 65, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 92, 93, 94, 95, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 140, 141, 143, 145, 149, 151, 155, 156, 157, 158, 161, 164, 165, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 193, 194, 197, 201, 202, 204, 205, 207, 208, 210, 211, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 236, 237, 241, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 275, 276, 277, 278, 281, 282, 294, 295, 305, 307, 308, 338, 340, 342, 343, 346, 350, 351, 352, 353, 354, 355, 356, 365, 366, 367, 369, 377, 405, 407, 412, 413, 414, 416, 418, 421, 426, 430, 435, 437, 438, 443, 444, 446, 447, 448, 449, 457, 462, 465, 468, 470, 471, 472, 473, 474, 481, 483, 484, 485, 486, 488, 489, 490, 492, 494, 495, 496, 498, 508, 511, 515, 520, 530, 543, 544, 545, 546, 548, 549, 550, 551, 552, 554, 557, 558, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 581, 584, 585, 586, 588, 591, 594, 595, 604, 605, 606, 607, 609, 610, 611, 612, 627, 628, 633, 634, 637, 642, 644, 645, 646, 660, 672, 678, 679, 680, 682, 683, 687, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 709, 715, 719, 722, 723, 724, 739, 752, 755, 756, 759, 760, 761, 763, 764, 765, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 799, 800, 801, 809, 811, 812, 827, 829, 831, 835, 838, 839, 849, 851, 853, 858, 861, 862, 872], "set_channel_typ": [1, 126, 139, 148, 150, 190, 212, 261, 262, 263, 264, 438, 473, 474, 872], "eeg058": 1, "set_eeg_refer": [1, 29, 70, 91, 92, 150, 158, 161, 166, 181, 188, 202, 204, 206, 219, 238, 261, 262, 263, 264, 473, 474, 551, 634, 656, 858, 862, 872], "averag": [1, 2, 4, 5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 67, 68, 70, 71, 72, 75, 77, 78, 79, 80, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 105, 106, 108, 110, 111, 114, 115, 117, 118, 119, 122, 125, 127, 130, 131, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 157, 158, 161, 164, 165, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 233, 236, 237, 238, 241, 253, 254, 258, 260, 261, 262, 263, 264, 266, 268, 269, 270, 272, 275, 276, 277, 283, 350, 351, 353, 368, 384, 405, 412, 419, 424, 426, 439, 446, 462, 473, 474, 496, 506, 507, 520, 521, 522, 523, 525, 526, 532, 535, 536, 551, 552, 556, 557, 559, 564, 565, 566, 568, 571, 572, 575, 577, 606, 610, 611, 634, 637, 648, 656, 692, 693, 694, 695, 696, 710, 711, 719, 720, 721, 722, 723, 724, 739, 763, 771, 773, 774, 778, 782, 783, 790, 791, 793, 794, 799, 801, 818, 827, 847, 848, 851, 857, 858, 860, 872], "project": [1, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 233, 237, 238, 241, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 276, 277, 281, 282, 294, 295, 297, 338, 340, 344, 351, 352, 353, 354, 356, 365, 367, 383, 413, 425, 446, 448, 449, 472, 473, 474, 493, 512, 514, 516, 518, 519, 520, 530, 551, 552, 563, 564, 565, 567, 571, 577, 580, 588, 595, 603, 612, 618, 633, 634, 637, 656, 669, 687, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 739, 755, 756, 761, 764, 771, 773, 775, 777, 778, 782, 790, 791, 792, 793, 795, 797, 802, 808, 809, 811, 823, 827, 831, 836, 838, 843, 847, 848, 850, 860, 861, 862, 872], "true": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 84, 85, 86, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 219, 220, 223, 225, 226, 227, 228, 231, 233, 236, 237, 238, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 284, 285, 294, 295, 297, 299, 300, 303, 304, 305, 306, 309, 310, 311, 314, 317, 318, 319, 320, 322, 335, 337, 338, 339, 340, 341, 344, 351, 355, 356, 357, 358, 360, 361, 365, 366, 367, 371, 373, 374, 375, 376, 378, 379, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 423, 424, 426, 427, 430, 434, 435, 436, 437, 438, 439, 440, 443, 444, 446, 448, 449, 450, 453, 458, 462, 463, 464, 465, 467, 468, 470, 471, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 512, 513, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 528, 529, 530, 532, 534, 535, 536, 537, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 561, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 577, 578, 580, 595, 603, 606, 607, 610, 615, 623, 625, 628, 631, 634, 636, 637, 639, 640, 641, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 662, 666, 669, 670, 673, 674, 676, 679, 680, 682, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 701, 702, 704, 708, 709, 710, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 734, 737, 739, 744, 747, 748, 752, 753, 755, 756, 757, 758, 760, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 807, 809, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 829, 831, 847, 848, 851, 854, 872], "show": [1, 4, 7, 8, 10, 12, 13, 14, 15, 16, 19, 22, 26, 27, 28, 29, 31, 32, 35, 37, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 58, 59, 60, 63, 67, 68, 70, 72, 73, 76, 77, 83, 95, 97, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 158, 159, 165, 167, 168, 169, 171, 175, 177, 178, 179, 180, 181, 182, 189, 190, 197, 199, 200, 201, 202, 203, 204, 205, 207, 209, 212, 214, 215, 218, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 274, 275, 276, 277, 304, 306, 309, 310, 405, 412, 446, 464, 465, 473, 474, 503, 543, 549, 551, 552, 566, 571, 573, 691, 692, 693, 694, 696, 708, 718, 739, 747, 748, 755, 756, 757, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 808, 827, 829, 831, 836, 839, 847, 854, 860, 872], "power": [1, 12, 21, 27, 32, 36, 38, 56, 60, 67, 70, 80, 81, 103, 104, 110, 111, 112, 113, 119, 126, 131, 136, 144, 145, 148, 149, 161, 164, 165, 171, 179, 182, 190, 193, 199, 200, 204, 207, 215, 221, 222, 224, 228, 229, 230, 236, 241, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 275, 276, 277, 285, 286, 287, 288, 291, 294, 295, 315, 350, 351, 355, 356, 405, 407, 410, 412, 413, 416, 418, 439, 441, 443, 444, 445, 446, 473, 474, 479, 508, 510, 515, 518, 519, 520, 525, 526, 530, 533, 535, 536, 543, 548, 549, 552, 599, 607, 612, 614, 627, 640, 646, 657, 672, 673, 674, 675, 676, 679, 680, 681, 682, 683, 692, 693, 694, 695, 696, 701, 710, 711, 719, 720, 721, 722, 723, 724, 733, 739, 755, 762, 763, 764, 770, 771, 773, 776, 778, 779, 784, 790, 793, 799, 807, 827, 831, 848, 851, 853, 857, 872], "line": [1, 8, 9, 69, 79, 80, 81, 99, 107, 110, 118, 119, 121, 125, 135, 136, 139, 140, 143, 150, 154, 155, 157, 158, 159, 161, 168, 170, 171, 176, 182, 189, 190, 200, 202, 203, 205, 206, 207, 208, 209, 212, 215, 225, 226, 237, 238, 241, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 332, 338, 344, 405, 412, 464, 473, 474, 503, 509, 551, 552, 566, 587, 595, 607, 614, 623, 626, 692, 694, 696, 739, 747, 752, 755, 756, 763, 764, 769, 770, 771, 773, 775, 777, 778, 779, 781, 782, 785, 786, 787, 790, 791, 792, 793, 794, 796, 797, 798, 799, 801, 802, 820, 825, 829, 830, 834, 836, 838, 843, 847, 848, 849, 851, 854, 862, 872], "interfer": [1, 121, 135, 197, 198, 201, 206, 207, 208, 214, 241, 253, 580, 851], "remov": [1, 7, 16, 18, 21, 27, 28, 31, 32, 35, 42, 51, 58, 59, 68, 69, 70, 71, 73, 74, 75, 76, 79, 80, 83, 88, 91, 97, 101, 107, 110, 111, 117, 125, 130, 133, 135, 139, 140, 141, 142, 145, 148, 149, 150, 156, 157, 159, 160, 161, 165, 166, 167, 169, 171, 175, 176, 179, 180, 181, 182, 183, 190, 194, 197, 198, 199, 200, 201, 202, 205, 206, 208, 212, 214, 215, 220, 225, 226, 227, 228, 236, 238, 241, 253, 255, 258, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 285, 299, 309, 325, 344, 351, 360, 361, 405, 411, 412, 413, 417, 428, 444, 448, 457, 470, 471, 473, 474, 475, 488, 493, 518, 549, 550, 551, 552, 553, 567, 571, 587, 588, 595, 601, 610, 612, 615, 634, 637, 656, 658, 692, 694, 695, 696, 704, 727, 739, 760, 776, 782, 792, 808, 809, 827, 831, 839, 848, 853, 854, 857, 858, 860, 872], "plot_psd": [1, 70, 73, 107, 127, 139, 141, 142, 165, 166, 171, 182, 190, 197, 201, 205, 207, 209, 215, 236, 237, 261, 262, 263, 264, 271, 473, 474, 831, 854, 872], "60": [1, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 29, 30, 31, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 68, 69, 71, 72, 73, 75, 77, 79, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 121, 122, 125, 129, 130, 131, 133, 135, 136, 139, 140, 142, 143, 148, 149, 150, 151, 158, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 219, 220, 223, 224, 226, 227, 228, 231, 233, 236, 253, 444, 473, 474, 578, 780, 848, 872], "fals": [1, 4, 5, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 40, 41, 42, 44, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 81, 82, 84, 86, 88, 92, 94, 95, 97, 98, 99, 102, 105, 106, 107, 108, 110, 112, 113, 116, 117, 118, 121, 122, 124, 125, 127, 132, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 175, 177, 179, 180, 181, 182, 184, 187, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 219, 220, 224, 225, 226, 227, 228, 233, 236, 237, 238, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 285, 288, 289, 292, 294, 295, 297, 299, 300, 304, 305, 306, 309, 310, 311, 314, 317, 319, 320, 323, 337, 339, 341, 344, 351, 356, 357, 358, 360, 361, 365, 368, 371, 373, 374, 375, 376, 378, 379, 381, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 410, 411, 412, 413, 419, 423, 424, 426, 430, 435, 436, 437, 438, 439, 440, 446, 449, 453, 458, 463, 464, 465, 467, 468, 470, 471, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 512, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 528, 529, 530, 532, 535, 536, 537, 543, 544, 545, 547, 548, 549, 550, 551, 552, 557, 564, 565, 566, 568, 569, 571, 572, 573, 577, 578, 580, 581, 584, 600, 603, 606, 607, 610, 617, 622, 623, 625, 626, 628, 630, 631, 634, 637, 638, 639, 641, 647, 648, 649, 650, 651, 652, 653, 654, 659, 665, 668, 669, 670, 673, 676, 679, 680, 682, 683, 688, 689, 691, 692, 693, 694, 695, 696, 699, 702, 704, 708, 709, 710, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 734, 737, 739, 748, 752, 753, 755, 756, 757, 760, 763, 764, 767, 769, 770, 771, 773, 775, 777, 778, 780, 782, 784, 786, 788, 791, 792, 793, 794, 795, 797, 798, 799, 801, 802, 805, 812, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 829, 854, 857, 872], "notch_filt": [1, 5, 80, 135, 166, 190, 201, 208, 261, 262, 263, 264, 443, 473, 474, 862, 872], "arang": [1, 4, 8, 9, 15, 19, 43, 45, 67, 80, 88, 90, 92, 93, 105, 110, 112, 118, 125, 165, 190, 193, 194, 200, 209, 218, 220, 223, 225, 226, 227, 228, 232, 233, 238, 267, 274, 444, 461, 473, 474, 490, 589, 684, 708, 718, 719, 720, 722, 723], "181": [1, 35, 124, 168, 190, 199, 207, 211, 223, 228, 241, 657, 678], "fir_design": [1, 7, 8, 9, 11, 13, 14, 15, 16, 18, 75, 86, 97, 119, 131, 190, 200, 203, 238, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474, 872], "firwin": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 200, 201, 202, 203, 208, 209, 228, 238, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474, 872], "event": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 32, 33, 34, 42, 45, 46, 49, 61, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 86, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 115, 119, 126, 130, 134, 135, 139, 140, 141, 142, 144, 145, 148, 151, 152, 153, 161, 164, 168, 172, 173, 176, 179, 181, 182, 183, 184, 187, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 212, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 231, 233, 236, 237, 238, 241, 253, 254, 255, 256, 261, 262, 263, 264, 266, 271, 280, 284, 311, 350, 351, 358, 359, 360, 389, 406, 421, 426, 428, 429, 434, 446, 447, 462, 473, 474, 481, 488, 489, 490, 494, 496, 513, 517, 542, 543, 547, 549, 552, 553, 554, 555, 560, 564, 565, 568, 569, 572, 573, 574, 575, 576, 594, 604, 605, 606, 607, 637, 642, 671, 678, 692, 694, 695, 739, 740, 763, 769, 770, 772, 786, 792, 800, 808, 811, 817, 827, 847, 848, 851, 854, 857, 858, 862, 872], "find_ev": [1, 5, 7, 10, 32, 33, 34, 42, 45, 46, 49, 70, 71, 72, 78, 82, 88, 91, 93, 97, 105, 106, 108, 111, 139, 140, 141, 148, 151, 161, 165, 167, 171, 176, 179, 181, 182, 184, 190, 194, 198, 201, 202, 203, 205, 213, 219, 220, 225, 236, 237, 266, 431, 447, 481, 488, 494, 513, 547, 594, 607, 827, 847, 854, 858, 862, 872], "stim_channel": [1, 5, 7, 42, 46, 78, 105, 106, 108, 111, 136, 139, 141, 148, 151, 165, 167, 176, 190, 198, 203, 205, 213, 225, 236, 237, 254, 343, 446, 447, 473, 474, 481, 488, 494, 574, 872], "uppt001": [1, 7, 190], "pick": [1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 71, 72, 73, 75, 77, 79, 80, 81, 84, 86, 88, 90, 92, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 113, 115, 117, 118, 119, 125, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 156, 157, 159, 161, 165, 168, 169, 171, 176, 177, 178, 179, 180, 181, 183, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 212, 215, 218, 219, 220, 225, 226, 227, 228, 231, 233, 236, 237, 256, 258, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 275, 276, 277, 284, 294, 295, 307, 310, 311, 314, 321, 324, 326, 356, 365, 407, 413, 421, 426, 430, 443, 444, 473, 474, 543, 544, 545, 546, 549, 550, 551, 552, 554, 567, 568, 569, 574, 577, 586, 588, 595, 660, 678, 687, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 709, 722, 723, 739, 753, 757, 761, 763, 769, 770, 773, 775, 776, 782, 783, 784, 786, 788, 790, 793, 795, 797, 802, 827, 831, 847, 854, 857, 858, 872], "pick_typ": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 28, 31, 34, 35, 40, 45, 46, 49, 51, 58, 59, 67, 68, 70, 71, 73, 81, 86, 88, 90, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 111, 117, 125, 131, 135, 139, 140, 148, 149, 165, 167, 168, 169, 171, 175, 180, 181, 194, 197, 198, 199, 201, 202, 203, 204, 205, 209, 212, 220, 225, 226, 227, 228, 231, 233, 237, 238, 261, 262, 263, 264, 473, 474, 543, 692, 694, 695, 696, 831, 854, 858, 862, 872], "info": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 78, 79, 80, 81, 82, 84, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 131, 133, 134, 135, 136, 139, 141, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 219, 220, 224, 225, 226, 227, 228, 231, 233, 236, 237, 238, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 270, 271, 272, 274, 279, 281, 282, 294, 295, 296, 302, 303, 307, 308, 310, 314, 315, 316, 317, 321, 323, 324, 326, 337, 339, 341, 346, 351, 355, 356, 362, 365, 366, 367, 369, 405, 407, 412, 413, 414, 416, 421, 424, 426, 430, 435, 436, 437, 438, 441, 443, 444, 448, 449, 456, 457, 465, 468, 470, 471, 472, 473, 474, 475, 478, 480, 492, 508, 511, 514, 515, 516, 518, 520, 530, 543, 546, 548, 549, 550, 551, 552, 554, 556, 563, 567, 568, 569, 571, 574, 577, 580, 584, 585, 586, 588, 595, 598, 605, 609, 627, 628, 633, 634, 637, 639, 643, 644, 645, 646, 656, 657, 660, 678, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 723, 734, 737, 739, 752, 755, 756, 759, 760, 763, 764, 765, 769, 770, 773, 774, 775, 776, 779, 781, 786, 788, 791, 792, 793, 795, 801, 809, 818, 827, 829, 831, 834, 836, 847, 848, 849, 851, 854, 860, 862, 872], "eeg": [1, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 62, 63, 64, 66, 67, 68, 71, 72, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 241, 253, 256, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 294, 295, 297, 299, 302, 303, 307, 308, 309, 311, 313, 315, 316, 320, 321, 323, 324, 325, 326, 327, 328, 331, 332, 334, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 365, 366, 367, 369, 384, 398, 399, 405, 407, 409, 412, 413, 414, 420, 421, 424, 426, 429, 434, 437, 438, 446, 448, 449, 462, 464, 468, 470, 471, 473, 474, 479, 481, 483, 484, 485, 488, 489, 490, 491, 494, 496, 498, 499, 501, 508, 511, 515, 516, 518, 519, 520, 530, 531, 533, 534, 543, 549, 550, 551, 552, 553, 554, 557, 560, 561, 564, 565, 566, 567, 568, 569, 573, 574, 577, 579, 586, 588, 595, 599, 601, 603, 604, 606, 607, 610, 611, 612, 622, 625, 633, 634, 637, 641, 645, 652, 657, 660, 678, 679, 680, 682, 683, 687, 692, 694, 695, 696, 700, 701, 702, 703, 705, 722, 723, 731, 739, 755, 756, 759, 763, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 782, 783, 789, 790, 791, 792, 793, 794, 795, 799, 800, 801, 806, 807, 811, 827, 828, 838, 843, 846, 848, 851, 857, 858, 861, 862, 872], "stim": [1, 8, 9, 11, 14, 15, 16, 28, 42, 45, 46, 65, 68, 70, 71, 86, 88, 97, 98, 102, 105, 106, 108, 139, 140, 141, 148, 150, 165, 168, 171, 181, 187, 190, 194, 201, 202, 203, 212, 213, 220, 225, 226, 227, 237, 238, 253, 254, 261, 262, 263, 264, 266, 271, 308, 346, 369, 438, 446, 447, 473, 474, 481, 488, 494, 496, 549, 552, 574, 607, 642, 692, 694, 695, 696, 769, 792, 827, 854, 857, 858, 872], "exclud": [1, 5, 7, 8, 9, 11, 13, 14, 15, 16, 24, 26, 28, 31, 34, 35, 40, 41, 43, 45, 49, 50, 51, 58, 59, 64, 67, 68, 69, 70, 73, 77, 81, 84, 86, 90, 94, 95, 98, 102, 105, 106, 107, 108, 109, 110, 131, 141, 143, 149, 155, 156, 157, 165, 168, 171, 175, 176, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 203, 204, 206, 215, 220, 225, 226, 227, 231, 233, 238, 253, 258, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 274, 275, 276, 277, 302, 303, 316, 323, 356, 362, 365, 367, 413, 424, 473, 474, 481, 488, 490, 494, 516, 543, 544, 545, 547, 549, 550, 551, 552, 553, 564, 565, 566, 571, 580, 595, 607, 612, 633, 637, 641, 679, 680, 682, 683, 692, 694, 695, 696, 700, 701, 702, 703, 709, 764, 773, 775, 776, 777, 783, 785, 786, 793, 847, 857, 858, 872], "bad": [1, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 49, 51, 58, 59, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 83, 86, 88, 90, 91, 94, 95, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 115, 119, 125, 126, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 161, 164, 165, 166, 167, 168, 169, 171, 175, 176, 179, 180, 181, 182, 183, 184, 190, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 225, 226, 227, 228, 237, 238, 253, 255, 256, 258, 261, 262, 263, 264, 266, 295, 307, 310, 311, 316, 323, 326, 356, 360, 365, 366, 367, 407, 421, 426, 434, 443, 444, 446, 462, 473, 474, 512, 530, 544, 545, 546, 549, 550, 551, 552, 554, 555, 556, 559, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 580, 581, 586, 588, 595, 607, 610, 633, 634, 637, 660, 678, 692, 694, 695, 696, 700, 701, 702, 703, 705, 723, 763, 764, 769, 770, 773, 775, 776, 777, 784, 788, 792, 793, 811, 827, 838, 849, 851, 857, 872], "epoch": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 27, 32, 33, 34, 36, 45, 46, 49, 56, 59, 61, 68, 69, 70, 71, 72, 77, 78, 81, 82, 86, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 110, 111, 119, 120, 126, 128, 130, 134, 135, 140, 147, 149, 161, 166, 167, 168, 169, 176, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 197, 198, 201, 204, 205, 208, 213, 214, 219, 220, 224, 225, 226, 227, 236, 237, 238, 248, 253, 254, 255, 256, 259, 260, 262, 263, 264, 266, 267, 268, 269, 271, 272, 275, 276, 277, 278, 288, 289, 292, 310, 311, 314, 350, 351, 352, 354, 355, 356, 358, 390, 405, 407, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 430, 431, 434, 435, 446, 464, 470, 473, 474, 479, 506, 511, 512, 517, 518, 519, 520, 521, 522, 523, 525, 526, 533, 535, 536, 547, 549, 551, 552, 553, 554, 560, 561, 564, 565, 568, 569, 570, 574, 579, 580, 595, 603, 604, 605, 606, 607, 614, 618, 634, 637, 646, 656, 677, 678, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 710, 719, 720, 721, 722, 723, 724, 739, 763, 768, 769, 770, 771, 782, 783, 784, 786, 790, 792, 793, 800, 827, 831, 848, 849, 851, 857, 858, 860, 862, 872], "baselin": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 70, 71, 72, 73, 74, 77, 78, 81, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 125, 126, 130, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 209, 218, 220, 224, 225, 226, 227, 228, 231, 233, 237, 238, 241, 253, 256, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 350, 351, 356, 376, 446, 473, 474, 512, 517, 535, 536, 552, 568, 569, 587, 603, 610, 611, 677, 692, 695, 763, 779, 783, 796, 799, 818, 827, 847, 851, 854, 857, 862, 866, 872], "none": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 68, 69, 70, 72, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 91, 92, 94, 95, 97, 98, 101, 102, 105, 107, 108, 110, 111, 112, 115, 117, 118, 119, 122, 125, 130, 133, 134, 135, 136, 140, 141, 142, 143, 144, 148, 149, 150, 151, 157, 158, 159, 160, 161, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 200, 201, 202, 203, 205, 206, 208, 209, 214, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 238, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 318, 322, 323, 324, 325, 326, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 545, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 583, 584, 586, 587, 588, 589, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 671, 677, 678, 679, 680, 681, 682, 683, 684, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 710, 711, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 731, 734, 738, 739, 742, 744, 747, 748, 749, 751, 752, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 831, 847, 853, 854, 872], "preload": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 49, 69, 70, 71, 72, 79, 80, 81, 82, 86, 97, 101, 105, 108, 110, 111, 112, 115, 119, 127, 131, 139, 140, 141, 143, 144, 145, 148, 150, 151, 158, 165, 166, 169, 171, 179, 181, 182, 183, 184, 187, 190, 194, 197, 199, 202, 203, 204, 205, 209, 212, 219, 220, 225, 226, 227, 228, 231, 233, 236, 237, 238, 253, 261, 262, 263, 264, 271, 344, 360, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 512, 564, 565, 568, 569, 603, 605, 609, 634, 637, 692, 694, 695, 696, 769, 792, 847, 848, 872], "physiolog": [1, 8, 42, 136, 201, 203, 206, 241, 261, 262, 263, 264, 376, 398, 399, 473, 474, 637, 848, 872], "artifact": [1, 7, 27, 32, 42, 69, 76, 81, 82, 83, 107, 108, 141, 143, 145, 148, 164, 165, 171, 182, 190, 199, 200, 204, 206, 208, 209, 210, 211, 214, 215, 241, 255, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 341, 342, 352, 353, 354, 355, 356, 360, 407, 411, 418, 446, 471, 473, 474, 486, 488, 500, 543, 546, 549, 551, 552, 556, 557, 559, 564, 565, 566, 568, 569, 572, 573, 574, 576, 580, 583, 587, 595, 644, 645, 692, 695, 717, 719, 720, 722, 723, 755, 781, 783, 790, 791, 792, 807, 811, 848, 851, 854, 860, 861, 872], "eyeblink": [1, 565, 569], "heartbeat": [1, 81, 141, 145, 199, 203, 204, 205, 206, 208, 214, 564, 568, 572, 575], "usssp": [1, 11, 15, 18, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 82, 86, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 119, 120, 128, 130, 139, 140, 141, 144, 145, 148, 150, 151, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 197, 198, 199, 201, 202, 203, 206, 208, 210, 211, 212, 215, 219, 228, 231, 233, 256, 258, 261, 262, 263, 264, 265, 266, 270, 271, 272, 352, 353, 354, 446, 473, 474, 512, 546, 549, 551, 564, 565, 568, 569, 595, 603, 612, 618, 633, 694, 696, 771, 773, 775, 777, 778, 790, 791, 793, 811, 827, 851, 857, 860, 861, 872], "add_proj": [1, 2, 4, 5, 42, 90, 99, 107, 109, 139, 141, 145, 148, 161, 171, 183, 184, 190, 194, 197, 202, 204, 205, 209, 212, 224, 261, 262, 263, 264, 271, 473, 474, 656], "compute_proj_evok": [1, 204, 352, 354, 862], "copi": [1, 2, 4, 5, 8, 9, 10, 12, 18, 19, 22, 27, 38, 45, 46, 47, 48, 49, 54, 58, 61, 69, 72, 73, 77, 82, 105, 107, 112, 117, 125, 133, 135, 139, 140, 143, 148, 149, 150, 154, 160, 161, 165, 167, 168, 171, 175, 177, 184, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 212, 214, 220, 224, 227, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 284, 285, 299, 304, 306, 309, 314, 361, 366, 368, 373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 414, 427, 430, 443, 444, 473, 474, 518, 532, 544, 545, 548, 551, 552, 561, 564, 565, 570, 574, 577, 581, 595, 604, 631, 634, 637, 689, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 704, 709, 726, 727, 831, 839, 849, 851, 854, 857, 858, 872], "apply_proj": [1, 70, 92, 141, 145, 148, 158, 166, 181, 204, 205, 206, 261, 262, 263, 264, 435, 436, 437, 438, 473, 474, 637, 792, 872], "fix": [1, 5, 22, 31, 40, 41, 45, 47, 48, 49, 54, 55, 58, 60, 78, 88, 98, 133, 139, 141, 157, 162, 163, 164, 167, 169, 175, 179, 194, 209, 219, 241, 254, 259, 260, 263, 264, 265, 272, 294, 295, 305, 317, 351, 358, 361, 418, 446, 448, 450, 464, 468, 470, 471, 473, 509, 513, 515, 519, 520, 521, 522, 523, 530, 531, 534, 535, 536, 552, 556, 560, 578, 600, 612, 623, 633, 698, 701, 708, 718, 719, 720, 722, 723, 755, 774, 819, 820, 825, 829, 831, 836, 850, 851, 854, 857, 872], "preprocess": [1, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 67, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 97, 110, 133, 136, 143, 145, 171, 183, 190, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 211, 215, 255, 261, 262, 263, 264, 266, 271, 350, 405, 409, 412, 414, 426, 434, 473, 474, 492, 500, 549, 605, 739, 759, 763, 769, 772, 777, 781, 782, 783, 784, 785, 786, 792, 827, 838, 848, 849, 851, 854, 858, 860, 862, 872], "fix_stim_artifact": [1, 862, 872], "correct": [1, 4, 8, 9, 11, 12, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 70, 71, 72, 73, 76, 77, 78, 81, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 125, 126, 129, 130, 134, 135, 136, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 164, 165, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 218, 219, 220, 224, 225, 226, 227, 228, 231, 232, 233, 237, 238, 241, 253, 255, 256, 258, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 284, 306, 317, 350, 351, 356, 362, 405, 411, 412, 417, 424, 426, 444, 446, 455, 473, 474, 479, 481, 485, 488, 500, 501, 517, 520, 535, 536, 549, 551, 552, 553, 562, 563, 568, 569, 571, 580, 583, 587, 594, 600, 607, 610, 611, 629, 631, 647, 648, 649, 650, 651, 652, 653, 654, 670, 673, 676, 677, 678, 679, 680, 681, 692, 694, 695, 696, 704, 711, 763, 770, 771, 777, 778, 782, 783, 791, 793, 794, 796, 799, 818, 820, 827, 829, 831, 836, 847, 850, 851, 854, 866, 869, 872], "delai": [1, 4, 19, 190, 193, 204, 205, 209, 241, 254, 256, 261, 262, 263, 264, 411, 417, 422, 441, 443, 444, 473, 474, 512, 603, 780, 848, 872], "due": [1, 5, 40, 43, 47, 79, 133, 167, 188, 189, 197, 199, 200, 204, 208, 209, 212, 215, 219, 238, 257, 261, 262, 263, 264, 265, 267, 398, 404, 411, 422, 426, 439, 470, 471, 473, 474, 562, 563, 571, 577, 580, 594, 614, 620, 695, 739, 821, 827, 847, 851, 854, 872], "hardwar": [1, 165, 189, 199, 206, 254, 261, 262, 266, 371, 398, 473, 474, 552, 769, 786, 792, 827, 837, 854, 857, 872], "i": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 26, 27, 28, 31, 32, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 59, 60, 63, 65, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 85, 86, 88, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 168, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 236, 237, 238, 241, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 293, 294, 295, 297, 299, 301, 303, 304, 305, 309, 311, 314, 315, 317, 319, 320, 321, 322, 324, 326, 327, 328, 334, 336, 338, 339, 340, 344, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 461, 462, 463, 464, 465, 468, 470, 471, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 541, 542, 543, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 584, 585, 587, 588, 589, 594, 595, 597, 598, 600, 603, 604, 605, 606, 607, 608, 609, 610, 611, 614, 615, 617, 620, 623, 626, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 662, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 708, 710, 711, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 729, 733, 734, 735, 737, 738, 739, 740, 742, 744, 747, 748, 749, 751, 752, 755, 756, 757, 760, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 812, 817, 818, 820, 822, 825, 827, 830, 831, 832, 834, 836, 839, 842, 843, 845, 847, 848, 849, 850, 852, 853, 855, 856, 857, 858, 859, 860, 862, 872], "4": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 190, 193, 194, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 214, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 253, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 294, 295, 302, 303, 309, 310, 311, 332, 351, 376, 384, 405, 411, 412, 413, 418, 424, 428, 429, 440, 446, 448, 463, 470, 471, 473, 474, 509, 519, 526, 551, 552, 557, 559, 561, 564, 566, 573, 579, 589, 595, 614, 633, 637, 641, 645, 652, 672, 673, 676, 680, 691, 692, 694, 695, 696, 704, 708, 710, 715, 718, 719, 720, 721, 722, 723, 724, 727, 728, 729, 739, 742, 754, 755, 756, 758, 763, 769, 770, 771, 773, 775, 778, 779, 782, 789, 791, 792, 793, 794, 795, 797, 799, 801, 802, 803, 812, 829, 830, 836, 837, 847, 848, 851, 854, 857], "m": [1, 2, 4, 5, 8, 16, 18, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 68, 70, 71, 72, 77, 84, 85, 94, 95, 96, 97, 98, 99, 101, 103, 107, 108, 111, 112, 114, 117, 118, 121, 124, 125, 133, 134, 136, 139, 140, 142, 143, 144, 148, 149, 150, 155, 156, 157, 158, 160, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 198, 199, 200, 203, 205, 207, 208, 213, 214, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 241, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 272, 275, 276, 277, 297, 301, 302, 322, 327, 332, 334, 336, 338, 340, 341, 342, 344, 351, 356, 362, 369, 376, 383, 398, 399, 405, 407, 409, 411, 412, 413, 416, 426, 429, 441, 443, 444, 448, 466, 467, 470, 471, 473, 474, 476, 489, 508, 516, 519, 527, 530, 534, 551, 552, 554, 560, 561, 563, 566, 568, 569, 571, 578, 580, 585, 588, 604, 641, 645, 649, 652, 654, 657, 662, 663, 664, 666, 667, 673, 678, 679, 680, 682, 683, 687, 692, 694, 695, 696, 708, 718, 721, 724, 739, 742, 756, 763, 771, 773, 774, 775, 778, 779, 782, 791, 792, 794, 797, 799, 801, 802, 803, 807, 809, 827, 831, 838, 846, 848, 854, 857, 858, 872], "shift_tim": [1, 84, 139, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695, 872], "004": [1, 10, 32, 33, 44, 119, 126, 139, 141, 144, 148, 165, 168, 175, 202, 220, 241, 273, 357, 516], "result": [1, 8, 9, 26, 29, 30, 45, 46, 55, 58, 60, 69, 78, 81, 88, 97, 99, 101, 105, 112, 124, 125, 132, 133, 135, 136, 143, 145, 148, 150, 154, 155, 156, 158, 159, 161, 165, 166, 169, 171, 175, 177, 187, 193, 194, 197, 200, 202, 203, 204, 205, 207, 212, 213, 215, 218, 220, 223, 224, 227, 228, 231, 232, 233, 241, 253, 255, 256, 261, 262, 263, 264, 266, 268, 269, 272, 273, 275, 276, 277, 286, 288, 295, 311, 314, 315, 350, 351, 356, 358, 360, 383, 385, 404, 406, 407, 421, 430, 439, 445, 463, 468, 470, 471, 473, 474, 490, 505, 512, 516, 519, 521, 522, 523, 525, 530, 531, 538, 552, 557, 563, 568, 569, 571, 578, 580, 597, 603, 611, 634, 644, 645, 646, 655, 656, 658, 677, 678, 679, 680, 681, 682, 683, 684, 692, 694, 695, 696, 739, 747, 763, 769, 770, 792, 831, 836, 847, 848, 851, 854, 857, 872], "time_unit": [1, 11, 14, 35, 40, 42, 43, 51, 59, 61, 68, 70, 84, 90, 91, 97, 98, 99, 119, 149, 150, 151, 161, 174, 176, 177, 182, 183, 184, 190, 194, 219, 224, 225, 226, 260, 263, 264, 268, 269, 272, 275, 276, 277, 763, 773, 775, 778, 779, 797, 802, 872], "": [1, 4, 7, 8, 10, 11, 12, 13, 14, 16, 18, 19, 21, 24, 26, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 55, 58, 59, 61, 63, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 84, 85, 90, 91, 94, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 113, 114, 117, 118, 119, 121, 123, 124, 125, 127, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 252, 253, 255, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 285, 287, 294, 295, 299, 300, 301, 318, 325, 350, 351, 355, 357, 363, 364, 380, 381, 383, 398, 399, 405, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 426, 429, 435, 436, 437, 438, 439, 441, 443, 444, 445, 464, 467, 470, 471, 473, 474, 478, 481, 488, 490, 494, 495, 503, 507, 511, 514, 516, 518, 519, 530, 534, 535, 536, 551, 552, 553, 563, 569, 570, 573, 574, 579, 580, 584, 587, 610, 611, 620, 622, 623, 624, 625, 629, 630, 632, 634, 637, 638, 640, 641, 642, 649, 652, 654, 669, 678, 679, 680, 681, 682, 683, 687, 688, 690, 692, 693, 694, 695, 696, 704, 708, 710, 711, 716, 718, 720, 721, 723, 724, 727, 731, 738, 739, 747, 748, 756, 757, 763, 765, 767, 769, 770, 773, 775, 776, 778, 779, 782, 786, 792, 794, 795, 797, 799, 800, 801, 802, 803, 807, 821, 822, 827, 829, 831, 835, 837, 843, 846, 847, 848, 849, 851, 853, 854, 856, 857, 858, 859, 860], "topomap": [1, 19, 42, 72, 81, 85, 117, 141, 150, 169, 202, 205, 228, 237, 258, 261, 262, 263, 264, 270, 271, 309, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 769, 771, 773, 776, 778, 782, 789, 790, 791, 792, 793, 794, 795, 799, 801, 827, 872], "plot_topomap": [1, 15, 16, 18, 19, 21, 42, 69, 70, 78, 85, 98, 107, 140, 141, 143, 149, 150, 165, 169, 175, 176, 190, 197, 205, 209, 215, 228, 236, 237, 238, 258, 261, 262, 263, 264, 270, 473, 474, 552, 692, 694, 696, 759, 771, 776, 782, 784, 862, 872], "time": [1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 65, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 140, 142, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 189, 190, 193, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 213, 214, 215, 218, 219, 220, 223, 224, 227, 231, 232, 233, 236, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 293, 294, 338, 339, 340, 341, 342, 343, 344, 345, 347, 350, 351, 354, 356, 357, 358, 360, 369, 398, 405, 406, 407, 408, 411, 412, 414, 415, 416, 417, 418, 419, 421, 428, 429, 431, 433, 434, 439, 441, 443, 444, 446, 447, 448, 458, 463, 468, 469, 470, 471, 472, 473, 474, 486, 488, 493, 500, 505, 507, 513, 514, 518, 519, 520, 522, 523, 525, 526, 527, 530, 531, 533, 535, 536, 543, 547, 549, 551, 552, 554, 555, 556, 557, 560, 561, 562, 564, 565, 566, 568, 569, 570, 571, 573, 574, 578, 588, 594, 597, 601, 602, 606, 607, 610, 611, 612, 614, 620, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 666, 667, 668, 672, 677, 678, 679, 680, 681, 682, 683, 684, 685, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 708, 711, 717, 718, 719, 720, 721, 722, 723, 724, 738, 739, 743, 753, 756, 762, 763, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 786, 790, 791, 792, 793, 794, 797, 798, 799, 800, 801, 802, 803, 817, 827, 829, 830, 835, 837, 838, 843, 847, 848, 849, 851, 853, 854, 857, 858, 862, 872], "arraidirectori": [1, 12, 21, 33, 34, 79, 80, 92, 93, 114, 117, 121, 154, 155, 160, 165, 170, 171, 183, 190, 253, 259, 266, 267, 268, 271, 272, 275, 276, 277, 300, 304, 305, 306, 309, 357, 362, 363, 364, 368, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 424, 455, 457, 461, 463, 464, 465, 466, 467, 480, 486, 498, 501, 505, 509, 511, 538, 577, 597, 611, 615, 617, 624, 630, 631, 632, 635, 640, 641, 655, 658, 669, 687, 688, 731, 739, 755, 757, 767, 797, 803, 812, 822, 831, 834, 837, 847, 851, 872], "home": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 139, 140, 142, 143, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 209, 212, 215, 219, 220, 224, 225, 226, 227, 228, 231, 233, 237, 261, 262, 368, 376, 473, 474, 769, 792, 830, 836, 872], "circleci": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 139, 140, 142, 143, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 209, 212, 215, 219, 220, 224, 225, 226, 227, 228, 231, 233, 237, 831], "mne_data": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 136, 140, 142, 143, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 209, 212, 215, 219, 220, 224, 225, 226, 227, 228, 231, 233, 237, 373, 374, 375, 376, 378, 379, 381, 382, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 831, 851, 872], "data": [1, 2, 3, 6, 9, 10, 12, 14, 16, 17, 20, 22, 24, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 73, 75, 76, 77, 80, 81, 82, 83, 85, 86, 89, 96, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 115, 116, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 137, 138, 142, 143, 144, 147, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 169, 170, 172, 173, 175, 178, 180, 181, 182, 183, 184, 185, 186, 192, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 210, 211, 217, 221, 222, 223, 225, 226, 230, 234, 235, 237, 239, 240, 241, 248, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 306, 307, 308, 309, 310, 311, 313, 315, 317, 321, 323, 324, 325, 326, 327, 332, 334, 335, 336, 338, 340, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 365, 366, 367, 369, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 431, 432, 433, 434, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 457, 462, 464, 468, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 525, 526, 527, 530, 533, 534, 535, 536, 543, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 595, 598, 599, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 618, 620, 622, 624, 625, 634, 637, 640, 641, 642, 643, 644, 645, 646, 648, 650, 651, 652, 656, 658, 660, 664, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 711, 719, 720, 721, 722, 723, 724, 728, 733, 734, 739, 743, 747, 752, 754, 755, 756, 757, 758, 760, 761, 763, 764, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 809, 811, 818, 825, 826, 827, 828, 831, 832, 838, 843, 846, 849, 852, 853, 858, 859, 860, 862, 867, 872], "res4": [1, 12, 21, 79, 80, 117, 121, 183, 190], "read": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 145, 148, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 215, 218, 219, 220, 224, 225, 226, 227, 232, 237, 253, 254, 255, 256, 258, 261, 262, 263, 264, 266, 272, 274, 294, 295, 298, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 348, 351, 355, 356, 365, 366, 367, 369, 405, 412, 413, 437, 446, 447, 448, 449, 453, 455, 458, 464, 468, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 502, 503, 518, 530, 532, 533, 541, 554, 574, 590, 591, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 625, 626, 627, 629, 630, 632, 639, 645, 693, 712, 714, 731, 747, 755, 779, 807, 818, 819, 827, 831, 834, 839, 847, 849, 854, 855, 858, 860, 862, 872], "hc": [1, 12, 21, 79, 80, 117, 121, 183, 190], "separ": [1, 10, 12, 16, 21, 32, 33, 45, 47, 69, 73, 79, 80, 81, 92, 117, 121, 134, 139, 140, 141, 144, 145, 148, 149, 150, 154, 155, 159, 160, 161, 164, 167, 174, 183, 188, 190, 194, 197, 200, 202, 203, 204, 205, 207, 210, 211, 212, 213, 214, 231, 233, 236, 241, 243, 253, 255, 256, 261, 262, 263, 264, 266, 270, 271, 294, 295, 321, 339, 341, 342, 344, 345, 348, 352, 353, 354, 359, 367, 381, 388, 405, 412, 426, 438, 468, 473, 474, 489, 495, 511, 513, 552, 562, 563, 564, 565, 568, 571, 578, 580, 594, 604, 611, 641, 647, 648, 649, 650, 651, 652, 653, 654, 679, 680, 682, 683, 694, 695, 696, 697, 698, 699, 722, 723, 729, 739, 744, 762, 763, 769, 770, 771, 778, 779, 781, 786, 791, 792, 793, 827, 829, 831, 835, 847, 848, 849, 851, 854, 857, 860, 872], "posit": [1, 4, 12, 19, 21, 24, 27, 38, 39, 41, 45, 69, 74, 77, 78, 80, 81, 88, 91, 92, 93, 99, 110, 117, 120, 121, 125, 128, 133, 134, 135, 149, 150, 155, 157, 158, 159, 169, 174, 175, 177, 182, 183, 184, 187, 189, 190, 197, 198, 202, 204, 208, 220, 223, 227, 231, 238, 241, 253, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 287, 301, 303, 309, 310, 311, 322, 325, 327, 329, 332, 335, 339, 341, 342, 347, 348, 349, 351, 363, 377, 385, 405, 408, 411, 412, 415, 417, 424, 425, 426, 433, 447, 448, 457, 464, 473, 474, 486, 489, 493, 495, 496, 502, 514, 551, 552, 556, 557, 559, 566, 571, 573, 578, 580, 602, 604, 641, 643, 644, 645, 649, 650, 651, 652, 653, 654, 655, 657, 660, 661, 676, 692, 694, 695, 696, 707, 715, 716, 739, 740, 744, 752, 755, 756, 758, 763, 769, 770, 771, 774, 776, 777, 778, 781, 782, 788, 791, 792, 794, 795, 797, 799, 800, 801, 803, 807, 809, 827, 831, 847, 848, 854, 857, 861, 872], "file": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 56, 59, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 121, 125, 126, 127, 128, 130, 131, 133, 134, 136, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 170, 173, 176, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 192, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 215, 217, 219, 220, 222, 225, 226, 227, 228, 230, 231, 233, 235, 237, 240, 248, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 285, 298, 300, 301, 304, 305, 306, 309, 310, 315, 317, 318, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 341, 354, 359, 360, 362, 363, 364, 368, 376, 380, 381, 382, 383, 389, 398, 399, 424, 426, 434, 435, 436, 437, 438, 446, 447, 453, 454, 455, 457, 458, 462, 464, 465, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 511, 512, 514, 515, 525, 532, 533, 537, 541, 542, 551, 552, 562, 563, 564, 565, 571, 577, 580, 590, 591, 592, 593, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 635, 636, 638, 641, 643, 644, 645, 657, 660, 669, 687, 690, 691, 692, 693, 694, 695, 696, 712, 713, 714, 725, 727, 733, 739, 747, 755, 757, 792, 803, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 836, 837, 838, 843, 848, 858, 862, 872], "present": [1, 4, 10, 12, 13, 16, 21, 31, 40, 43, 44, 68, 80, 114, 117, 121, 124, 132, 139, 141, 143, 148, 149, 157, 165, 167, 168, 169, 179, 187, 188, 190, 197, 198, 202, 204, 205, 206, 208, 213, 215, 223, 227, 231, 232, 233, 241, 253, 254, 256, 258, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 285, 294, 295, 299, 304, 309, 315, 317, 326, 331, 340, 344, 351, 355, 356, 357, 365, 366, 367, 387, 405, 412, 424, 426, 429, 434, 446, 447, 448, 449, 453, 468, 470, 471, 473, 474, 481, 484, 488, 494, 511, 518, 530, 549, 551, 552, 554, 555, 562, 563, 566, 568, 572, 580, 588, 607, 608, 656, 661, 677, 692, 694, 695, 696, 710, 727, 739, 755, 756, 762, 763, 769, 771, 773, 775, 778, 779, 782, 789, 791, 792, 793, 794, 795, 798, 799, 801, 827, 837, 847, 848, 854, 857, 872], "quaternion": [1, 12, 21, 79, 80, 117, 121, 183, 190, 347, 348, 349, 556, 559, 730, 732, 781, 872], "match": [1, 4, 8, 9, 11, 12, 17, 18, 20, 21, 27, 28, 31, 32, 33, 34, 40, 41, 45, 46, 47, 49, 51, 58, 59, 61, 68, 70, 71, 72, 73, 78, 79, 80, 81, 86, 88, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 117, 119, 121, 126, 130, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 156, 160, 161, 165, 168, 171, 176, 179, 181, 182, 183, 184, 190, 193, 197, 198, 199, 201, 202, 205, 209, 212, 213, 214, 218, 219, 220, 224, 225, 226, 227, 228, 231, 233, 237, 254, 256, 258, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 314, 326, 351, 355, 362, 365, 366, 405, 406, 411, 412, 413, 415, 421, 426, 429, 430, 432, 434, 436, 437, 439, 455, 472, 473, 474, 481, 488, 494, 538, 541, 544, 549, 551, 552, 561, 562, 566, 571, 581, 594, 604, 606, 607, 627, 630, 642, 657, 678, 683, 687, 692, 693, 694, 695, 696, 708, 709, 718, 729, 763, 769, 770, 771, 775, 778, 779, 782, 785, 791, 792, 793, 794, 818, 831, 835, 854, 872], "desir": [1, 5, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 79, 80, 88, 90, 91, 92, 93, 99, 102, 105, 106, 108, 110, 117, 121, 122, 125, 129, 141, 145, 150, 156, 160, 165, 167, 169, 171, 176, 177, 178, 179, 180, 183, 187, 188, 190, 193, 194, 198, 199, 200, 201, 204, 213, 219, 220, 231, 233, 254, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 357, 404, 429, 440, 473, 474, 513, 530, 551, 574, 589, 637, 692, 694, 695, 696, 726, 739, 802, 837, 847, 849, 851, 857, 872], "v": [1, 4, 8, 9, 12, 13, 21, 24, 27, 28, 32, 43, 54, 55, 63, 65, 69, 74, 79, 80, 103, 104, 117, 121, 125, 130, 136, 140, 170, 171, 177, 183, 190, 193, 197, 200, 204, 224, 227, 228, 233, 236, 241, 253, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 272, 275, 276, 277, 280, 284, 285, 295, 299, 317, 341, 356, 369, 376, 411, 412, 413, 426, 473, 474, 518, 527, 552, 560, 563, 568, 569, 571, 580, 587, 678, 692, 694, 695, 696, 704, 710, 719, 722, 723, 724, 727, 743, 827, 831, 835, 847, 854, 857, 872], "transform": [1, 5, 7, 8, 11, 12, 14, 16, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 73, 76, 79, 80, 81, 83, 86, 88, 90, 91, 92, 93, 101, 102, 105, 106, 107, 108, 110, 111, 113, 117, 121, 122, 123, 125, 129, 133, 134, 144, 149, 154, 156, 157, 158, 165, 166, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 203, 206, 212, 219, 220, 236, 238, 241, 253, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 301, 309, 312, 313, 323, 351, 357, 358, 360, 362, 363, 364, 369, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 423, 424, 426, 446, 448, 456, 464, 465, 466, 467, 473, 474, 480, 502, 511, 514, 515, 525, 526, 535, 536, 552, 553, 556, 559, 561, 563, 571, 577, 580, 581, 612, 616, 624, 625, 632, 637, 657, 660, 677, 687, 689, 694, 696, 698, 701, 707, 708, 711, 715, 716, 717, 718, 719, 720, 721, 724, 726, 739, 755, 756, 803, 809, 818, 819, 827, 838, 847, 848, 851, 861, 862, 872], "84": [1, 11, 13, 19, 34, 35, 41, 47, 58, 79, 106, 107, 110, 112, 117, 127, 133, 135, 136, 150, 168, 193, 194, 198, 207, 223, 224, 225, 227, 228, 231, 233, 241, 482, 584], "69": [1, 13, 15, 19, 35, 40, 47, 49, 79, 80, 101, 106, 110, 112, 117, 139, 142, 168, 170, 175, 179, 183, 184, 190, 202, 207, 223, 224, 225, 227, 228, 231, 233, 241, 261, 262, 294, 398], "49": [1, 5, 13, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 79, 84, 85, 101, 106, 110, 111, 112, 114, 117, 118, 121, 125, 148, 168, 171, 175, 177, 178, 180, 183, 184, 190, 193, 194, 196, 207, 208, 209, 214, 220, 223, 224, 225, 227, 228, 232, 233, 235, 237, 241, 737, 830, 872], "00": [1, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 33, 34, 41, 42, 44, 45, 46, 50, 56, 59, 66, 69, 70, 71, 72, 75, 79, 80, 81, 82, 83, 86, 88, 89, 91, 94, 97, 99, 100, 101, 102, 104, 106, 107, 110, 111, 112, 113, 117, 119, 121, 125, 128, 131, 135, 138, 140, 142, 143, 145, 147, 150, 153, 155, 156, 157, 158, 159, 163, 166, 167, 168, 171, 173, 175, 179, 180, 181, 182, 183, 184, 186, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 240, 241, 519, 551, 560], "mm": [1, 4, 5, 12, 21, 24, 26, 41, 44, 45, 50, 69, 70, 72, 75, 77, 78, 79, 80, 81, 88, 91, 92, 93, 107, 117, 121, 125, 133, 135, 140, 145, 150, 155, 156, 157, 158, 159, 160, 166, 167, 175, 177, 179, 180, 181, 182, 183, 184, 190, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 219, 220, 253, 259, 266, 268, 269, 272, 275, 276, 277, 302, 332, 334, 336, 357, 362, 424, 448, 457, 463, 466, 467, 485, 489, 505, 515, 604, 640, 641, 729, 731, 738, 739, 797, 802, 807, 847, 854, 872], "orig": [1, 12, 21, 79, 80, 117, 121, 159, 183, 190, 198, 532, 544, 545, 550], "44": [1, 13, 19, 28, 35, 41, 45, 46, 47, 79, 101, 106, 111, 112, 114, 117, 157, 165, 167, 168, 173, 175, 179, 180, 183, 194, 200, 207, 208, 223, 224, 225, 227, 228, 232, 233, 241, 294, 295, 426, 468, 679, 680, 682, 683, 872], "30": [1, 5, 7, 8, 9, 11, 12, 13, 14, 19, 24, 28, 33, 34, 35, 41, 42, 45, 46, 47, 50, 58, 69, 72, 73, 75, 79, 80, 81, 88, 90, 92, 95, 99, 101, 104, 105, 106, 107, 110, 111, 112, 113, 117, 121, 125, 133, 135, 143, 145, 149, 155, 157, 158, 159, 163, 165, 168, 170, 171, 182, 183, 193, 194, 197, 199, 200, 202, 203, 205, 206, 207, 209, 212, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 240, 241, 253, 261, 262, 263, 264, 272, 274, 300, 304, 332, 351, 473, 474, 503, 551, 555, 560, 571, 645, 656, 657, 694, 696, 708, 718, 719, 721, 722, 724, 743, 747, 771, 829, 847, 848, 854, 857, 872], "51": [1, 5, 8, 13, 19, 28, 34, 35, 45, 47, 69, 70, 78, 79, 80, 101, 106, 107, 110, 112, 117, 125, 151, 155, 156, 157, 168, 171, 173, 183, 184, 190, 193, 194, 199, 203, 206, 207, 208, 212, 223, 224, 225, 227, 228, 232, 233, 241, 271, 376, 580, 848, 872], "45": [1, 5, 8, 9, 11, 15, 16, 19, 28, 35, 45, 50, 79, 82, 83, 101, 106, 107, 110, 111, 112, 117, 119, 121, 140, 142, 143, 144, 148, 155, 156, 157, 167, 168, 175, 179, 180, 182, 186, 190, 193, 194, 200, 202, 203, 205, 206, 207, 208, 214, 223, 224, 225, 227, 228, 231, 232, 233, 238, 255, 261, 262, 263, 264, 294, 295, 332, 351, 355, 356, 365, 366, 367, 405, 412, 440, 448, 449, 468, 470, 471, 473, 474, 530, 552, 673, 694, 696, 743, 771, 779, 854, 872], "252": [1, 35, 117, 121, 168, 207, 223, 227], "43": [1, 9, 13, 19, 26, 28, 34, 35, 41, 45, 46, 47, 48, 50, 54, 55, 79, 80, 93, 101, 105, 106, 110, 112, 117, 121, 144, 156, 157, 168, 175, 180, 181, 194, 207, 223, 224, 225, 226, 227, 228, 231, 232, 233, 241, 261, 262, 332, 694, 695], "diff": [1, 9, 12, 21, 69, 79, 80, 117, 121, 132, 175, 182, 183, 190, 212, 231, 747, 839], "000": [1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 34, 42, 59, 63, 65, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 88, 91, 92, 93, 97, 107, 110, 111, 112, 113, 117, 119, 121, 126, 127, 128, 131, 133, 135, 139, 140, 141, 142, 143, 145, 148, 150, 151, 158, 165, 166, 167, 171, 178, 180, 181, 182, 183, 184, 189, 190, 192, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 218, 220, 224, 226, 227, 228, 237, 496, 606], "46": [1, 12, 13, 19, 21, 28, 33, 34, 35, 40, 41, 45, 47, 51, 55, 56, 71, 79, 101, 106, 110, 112, 117, 121, 145, 147, 148, 149, 153, 168, 193, 194, 199, 200, 202, 207, 214, 217, 223, 224, 225, 227, 228, 232, 233, 241, 854, 872], "28": [1, 4, 6, 11, 13, 18, 19, 26, 28, 34, 35, 41, 45, 47, 50, 79, 81, 83, 94, 101, 102, 106, 107, 112, 117, 139, 157, 163, 168, 170, 175, 180, 181, 182, 183, 184, 193, 194, 199, 201, 207, 223, 224, 225, 227, 228, 230, 231, 232, 233, 237, 241, 332, 872], "53": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 32, 33, 34, 35, 40, 42, 45, 46, 47, 72, 75, 79, 80, 81, 82, 86, 92, 97, 101, 106, 111, 112, 113, 117, 119, 121, 131, 135, 136, 140, 143, 144, 145, 147, 150, 154, 161, 168, 183, 190, 193, 194, 200, 201, 202, 203, 207, 208, 209, 214, 223, 224, 225, 227, 228, 232, 233, 241, 673, 851], "58": [1, 11, 13, 19, 20, 35, 40, 45, 47, 48, 49, 54, 55, 57, 58, 59, 77, 79, 88, 91, 92, 94, 101, 102, 106, 107, 110, 112, 114, 117, 119, 125, 135, 136, 148, 150, 151, 161, 168, 171, 177, 181, 190, 193, 194, 197, 203, 205, 207, 212, 223, 224, 227, 228, 231, 241, 351, 854, 872], "243": [1, 79, 117, 168, 190, 207, 227, 228], "47": [1, 10, 16, 19, 28, 33, 35, 45, 51, 79, 82, 101, 102, 106, 110, 112, 117, 136, 158, 167, 168, 180, 182, 194, 207, 214, 223, 224, 225, 227, 228, 232, 233, 241, 297, 332, 399, 847, 848, 854], "86": [1, 5, 12, 15, 19, 26, 34, 35, 40, 41, 47, 50, 79, 101, 106, 110, 112, 117, 136, 139, 150, 155, 156, 157, 167, 168, 171, 175, 180, 181, 183, 194, 201, 203, 205, 206, 207, 213, 223, 224, 225, 227, 228, 232, 233, 241, 412, 706, 708, 718, 722, 846], "41": [1, 13, 19, 28, 34, 35, 44, 45, 47, 79, 80, 101, 106, 112, 117, 136, 138, 167, 168, 182, 183, 190, 193, 203, 205, 206, 207, 212, 223, 224, 225, 227, 228, 231, 232, 233, 238, 241, 273, 357, 398, 405, 872], "63": [1, 13, 19, 35, 45, 47, 69, 79, 80, 99, 100, 101, 106, 110, 112, 115, 117, 142, 168, 183, 184, 190, 193, 194, 207, 223, 224, 225, 226, 227, 228, 231, 233, 872], "55": [1, 11, 13, 19, 21, 28, 30, 31, 32, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 54, 55, 57, 58, 60, 77, 79, 84, 85, 99, 101, 106, 107, 112, 114, 117, 118, 122, 125, 142, 148, 150, 159, 168, 171, 175, 176, 177, 179, 180, 194, 202, 203, 205, 207, 209, 214, 223, 224, 225, 227, 228, 231, 233, 241, 405, 413, 519, 551, 552, 595, 829, 872], "82": [1, 13, 19, 35, 46, 79, 101, 110, 112, 117, 144, 168, 179, 180, 183, 186, 190, 193, 194, 207, 223, 224, 225, 227, 228, 232, 233, 237, 398, 440], "230": [1, 79, 86, 117, 168, 194, 227, 228], "26": [1, 5, 6, 11, 13, 16, 19, 25, 26, 28, 32, 34, 35, 41, 44, 45, 47, 56, 64, 79, 80, 91, 99, 100, 101, 102, 104, 106, 107, 110, 112, 117, 135, 136, 144, 157, 168, 170, 175, 182, 183, 184, 190, 194, 196, 207, 223, 224, 225, 227, 228, 231, 232, 233, 241, 273, 274, 357, 389, 519, 848], "coordin": [1, 5, 11, 12, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 70, 79, 80, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 113, 117, 121, 122, 125, 129, 133, 134, 135, 149, 157, 158, 162, 163, 164, 165, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 194, 206, 208, 219, 220, 231, 233, 241, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 274, 276, 277, 299, 301, 302, 303, 309, 312, 313, 318, 322, 325, 327, 328, 330, 332, 336, 361, 362, 364, 385, 405, 412, 424, 426, 448, 456, 464, 466, 467, 470, 473, 474, 477, 480, 484, 485, 496, 502, 504, 511, 516, 551, 552, 563, 566, 571, 580, 612, 622, 623, 625, 626, 641, 645, 669, 672, 692, 694, 696, 726, 727, 738, 739, 740, 755, 756, 757, 763, 767, 771, 773, 775, 777, 778, 779, 781, 782, 789, 791, 793, 794, 795, 799, 801, 807, 809, 819, 820, 825, 827, 848, 872], "establish": [1, 12, 21, 79, 80, 117, 121, 183, 187, 190, 200, 228, 241, 679, 680, 682, 683], "digit": [1, 70, 72, 75, 79, 80, 81, 88, 91, 116, 117, 121, 125, 133, 140, 145, 150, 155, 156, 158, 159, 166, 167, 168, 181, 184, 187, 188, 190, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 220, 241, 253, 254, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 272, 275, 276, 277, 302, 303, 309, 322, 323, 325, 327, 330, 331, 334, 336, 338, 339, 341, 362, 405, 412, 424, 426, 446, 464, 473, 474, 477, 480, 486, 496, 504, 511, 516, 551, 552, 561, 562, 563, 566, 571, 580, 606, 607, 641, 692, 694, 695, 696, 739, 755, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 809, 827, 847, 848, 857, 872], "point": [1, 5, 8, 9, 11, 12, 16, 18, 21, 22, 26, 27, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 49, 54, 55, 56, 58, 60, 70, 71, 72, 75, 79, 80, 81, 88, 91, 92, 94, 95, 98, 99, 101, 105, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 121, 125, 126, 132, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 238, 241, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 294, 295, 302, 303, 309, 312, 313, 318, 322, 327, 331, 332, 333, 334, 336, 339, 345, 347, 351, 356, 357, 361, 362, 364, 404, 405, 406, 407, 411, 412, 414, 421, 424, 426, 439, 441, 443, 446, 464, 467, 468, 472, 473, 474, 476, 477, 480, 486, 492, 496, 504, 514, 515, 516, 518, 519, 528, 529, 530, 531, 533, 534, 551, 552, 554, 562, 563, 566, 571, 580, 601, 605, 606, 609, 610, 612, 615, 620, 623, 626, 637, 640, 641, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 666, 668, 677, 678, 679, 680, 682, 683, 684, 692, 693, 694, 695, 696, 710, 711, 739, 740, 743, 744, 755, 756, 757, 758, 763, 767, 771, 773, 774, 775, 776, 778, 779, 782, 783, 786, 789, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 807, 820, 825, 827, 831, 847, 849, 851, 853, 857, 860, 872], "subj00111092011": [1, 117], "po": [1, 19, 41, 47, 50, 78, 79, 80, 82, 91, 113, 117, 135, 150, 155, 175, 182, 183, 184, 190, 206, 208, 259, 263, 264, 267, 268, 269, 272, 275, 276, 277, 301, 310, 335, 348, 349, 425, 448, 466, 467, 486, 556, 559, 614, 641, 781, 801, 857, 872], "polhemu": [1, 12, 21, 79, 80, 117, 121, 155, 169, 183, 190, 266, 309, 334, 336, 486, 854, 857, 872], "hpi": [1, 12, 21, 79, 80, 117, 121, 155, 165, 168, 169, 183, 187, 190, 197, 208, 212, 253, 261, 262, 263, 264, 266, 302, 303, 309, 312, 322, 332, 334, 338, 339, 340, 343, 344, 345, 362, 424, 425, 473, 474, 480, 549, 556, 692, 694, 695, 696, 762, 827, 854, 857, 861, 872], "coil": [1, 5, 12, 21, 26, 41, 45, 50, 79, 80, 107, 117, 121, 122, 149, 155, 157, 158, 175, 180, 181, 182, 183, 184, 187, 190, 197, 206, 207, 208, 253, 261, 262, 263, 264, 266, 317, 332, 338, 339, 341, 342, 343, 345, 346, 425, 448, 473, 474, 480, 496, 549, 562, 563, 580, 591, 606, 634, 692, 694, 695, 696, 733, 762, 827, 861, 872], "ad": [1, 4, 5, 11, 12, 21, 22, 27, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 70, 79, 80, 88, 90, 91, 92, 93, 99, 102, 105, 106, 108, 117, 118, 121, 122, 125, 129, 133, 139, 140, 141, 145, 150, 155, 157, 158, 159, 160, 161, 165, 169, 174, 176, 177, 178, 180, 181, 183, 190, 194, 199, 203, 205, 206, 208, 214, 215, 218, 219, 220, 223, 224, 231, 233, 253, 255, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 309, 335, 338, 340, 344, 357, 358, 367, 405, 412, 426, 449, 472, 473, 474, 495, 508, 513, 514, 515, 517, 551, 552, 554, 566, 568, 602, 637, 641, 642, 646, 656, 684, 687, 692, 694, 695, 696, 735, 739, 742, 744, 756, 757, 763, 767, 768, 771, 773, 775, 778, 779, 782, 786, 789, 791, 793, 794, 795, 797, 799, 801, 802, 831, 848, 854, 857, 860, 872], "devic": [1, 5, 12, 21, 26, 41, 45, 50, 70, 78, 79, 80, 107, 117, 121, 149, 155, 157, 164, 165, 168, 169, 175, 180, 182, 183, 184, 190, 191, 192, 204, 206, 212, 253, 262, 263, 264, 266, 302, 309, 312, 325, 327, 334, 358, 360, 369, 372, 426, 437, 464, 473, 474, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 556, 559, 580, 581, 594, 604, 605, 606, 609, 637, 739, 755, 774, 818, 843, 847, 848, 857, 872], "locat": [1, 4, 5, 12, 21, 26, 31, 35, 40, 41, 45, 47, 48, 49, 50, 55, 59, 60, 67, 78, 79, 80, 88, 91, 92, 93, 98, 107, 113, 116, 117, 121, 122, 134, 135, 136, 137, 138, 140, 148, 149, 154, 155, 157, 158, 159, 160, 162, 164, 165, 170, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 190, 198, 204, 206, 207, 208, 212, 218, 219, 220, 223, 224, 225, 227, 228, 233, 238, 241, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 294, 295, 303, 304, 305, 309, 310, 313, 315, 318, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 335, 339, 341, 342, 343, 351, 363, 364, 373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 412, 425, 426, 435, 438, 446, 456, 461, 465, 473, 474, 479, 483, 485, 492, 496, 502, 505, 515, 518, 519, 528, 529, 530, 534, 538, 543, 549, 551, 552, 556, 566, 573, 576, 577, 580, 591, 605, 606, 609, 614, 615, 631, 632, 634, 641, 644, 645, 655, 658, 679, 680, 682, 683, 684, 692, 694, 696, 728, 729, 731, 739, 755, 756, 760, 763, 767, 771, 773, 777, 778, 781, 782, 791, 792, 793, 794, 795, 799, 801, 804, 807, 809, 812, 827, 832, 837, 847, 848, 851, 857, 860, 861, 872], "measur": [1, 4, 5, 12, 21, 26, 41, 45, 50, 70, 72, 75, 78, 79, 80, 81, 88, 91, 101, 107, 117, 121, 125, 140, 143, 144, 145, 155, 157, 158, 161, 164, 165, 166, 167, 168, 169, 171, 175, 181, 183, 187, 188, 189, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 220, 223, 228, 229, 230, 234, 235, 237, 238, 241, 254, 256, 258, 260, 261, 262, 263, 264, 265, 266, 270, 272, 274, 281, 282, 294, 295, 296, 302, 303, 307, 308, 315, 316, 317, 321, 323, 324, 337, 339, 341, 343, 346, 351, 355, 356, 357, 362, 365, 366, 367, 369, 405, 407, 409, 412, 413, 414, 424, 436, 437, 438, 448, 449, 456, 465, 468, 470, 471, 472, 473, 474, 475, 478, 486, 488, 500, 508, 511, 514, 515, 516, 518, 519, 520, 527, 528, 529, 530, 533, 548, 549, 552, 563, 577, 580, 581, 584, 585, 586, 607, 622, 627, 628, 637, 648, 649, 656, 657, 660, 664, 673, 674, 675, 676, 680, 683, 684, 692, 693, 694, 695, 696, 722, 739, 752, 755, 756, 759, 764, 765, 779, 781, 790, 791, 795, 818, 827, 839, 847, 848, 854, 857, 860, 872], "compos": [1, 12, 21, 26, 41, 45, 50, 79, 80, 107, 117, 121, 136, 157, 175, 183, 187, 190, 194, 847, 857], "find": [1, 5, 7, 11, 12, 19, 21, 27, 28, 29, 30, 38, 39, 44, 47, 48, 49, 50, 52, 57, 58, 60, 67, 68, 76, 79, 80, 81, 83, 102, 105, 106, 108, 117, 121, 122, 125, 126, 133, 135, 139, 140, 144, 149, 150, 154, 155, 156, 160, 165, 169, 171, 174, 175, 179, 180, 183, 190, 194, 197, 199, 200, 203, 208, 214, 220, 223, 224, 225, 233, 238, 241, 259, 263, 264, 266, 267, 268, 269, 272, 275, 276, 277, 315, 352, 353, 354, 362, 439, 444, 446, 447, 473, 474, 492, 519, 549, 552, 555, 558, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 589, 605, 609, 630, 651, 655, 658, 669, 739, 776, 778, 812, 827, 829, 831, 834, 835, 836, 837, 848, 851, 854, 855, 857, 872], "sampl": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 67, 68, 70, 71, 72, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 213, 214, 215, 218, 219, 220, 223, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 241, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 293, 315, 351, 357, 359, 369, 381, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 422, 426, 429, 431, 433, 434, 440, 441, 442, 443, 444, 446, 447, 471, 472, 473, 474, 481, 488, 494, 513, 515, 522, 528, 529, 547, 549, 552, 554, 557, 568, 569, 588, 594, 598, 605, 606, 607, 620, 622, 627, 642, 647, 648, 649, 650, 651, 652, 653, 654, 657, 658, 659, 664, 672, 674, 678, 679, 680, 681, 682, 683, 684, 685, 686, 692, 693, 695, 697, 698, 699, 700, 701, 702, 703, 707, 708, 710, 711, 715, 716, 718, 719, 720, 721, 722, 737, 739, 769, 771, 772, 780, 792, 797, 802, 803, 805, 817, 827, 831, 847, 851, 852, 854, 855, 857, 862, 872], "meg4": [1, 12, 21, 79, 80, 117, 121, 183, 190], "system": [1, 5, 8, 10, 12, 19, 21, 27, 62, 69, 73, 78, 79, 80, 107, 114, 117, 120, 122, 127, 128, 135, 136, 149, 150, 154, 155, 157, 158, 159, 165, 167, 168, 169, 171, 177, 182, 183, 184, 188, 190, 193, 197, 198, 203, 204, 205, 206, 208, 212, 213, 214, 223, 236, 241, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 274, 275, 276, 277, 281, 282, 297, 309, 312, 317, 320, 325, 327, 328, 330, 331, 332, 334, 336, 361, 362, 364, 369, 376, 411, 425, 440, 442, 454, 466, 467, 468, 473, 474, 480, 481, 482, 484, 485, 486, 496, 505, 516, 549, 552, 554, 578, 580, 597, 627, 644, 645, 646, 655, 656, 658, 678, 679, 680, 681, 682, 683, 691, 692, 694, 695, 696, 704, 710, 726, 755, 756, 769, 772, 777, 780, 786, 792, 800, 806, 807, 820, 827, 829, 830, 831, 832, 834, 835, 836, 843, 847, 848, 850, 857, 860, 872], "clock": [1, 12, 21, 79, 80, 117, 121, 183, 190, 473, 474, 486, 552, 594, 786, 792, 848, 872], "avail": [1, 2, 5, 7, 8, 12, 19, 21, 22, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 70, 72, 75, 77, 79, 80, 81, 84, 85, 88, 90, 91, 92, 93, 99, 107, 114, 117, 118, 121, 125, 129, 133, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 158, 161, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 183, 187, 188, 190, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 219, 220, 224, 236, 253, 258, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 300, 302, 303, 309, 329, 368, 370, 376, 398, 399, 404, 405, 411, 412, 417, 424, 431, 453, 470, 473, 474, 511, 528, 529, 543, 544, 545, 551, 552, 566, 610, 617, 657, 688, 692, 693, 694, 696, 709, 722, 739, 756, 763, 769, 771, 773, 775, 778, 779, 782, 786, 789, 791, 792, 793, 794, 795, 797, 799, 801, 802, 810, 811, 827, 829, 831, 832, 837, 838, 839, 842, 845, 848, 851, 854, 855, 856, 857, 860, 872], "check": [1, 5, 12, 21, 26, 41, 43, 45, 50, 61, 69, 79, 80, 107, 117, 118, 119, 121, 123, 134, 136, 139, 141, 142, 143, 156, 157, 158, 160, 165, 167, 169, 170, 171, 174, 175, 180, 181, 183, 190, 198, 200, 203, 204, 212, 213, 215, 223, 224, 237, 256, 258, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 315, 317, 381, 387, 424, 438, 441, 472, 473, 474, 481, 484, 527, 541, 552, 560, 562, 679, 680, 682, 683, 692, 694, 695, 696, 726, 739, 755, 773, 775, 776, 777, 778, 809, 829, 830, 831, 839, 847, 848, 851, 860, 872], "which": [1, 4, 5, 12, 16, 18, 19, 21, 26, 31, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 60, 69, 73, 78, 79, 80, 81, 86, 92, 99, 101, 107, 110, 112, 113, 114, 117, 118, 121, 125, 126, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 177, 179, 181, 183, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 238, 241, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 287, 294, 295, 302, 303, 309, 311, 318, 325, 327, 328, 329, 330, 331, 337, 338, 340, 344, 346, 350, 351, 356, 357, 360, 364, 368, 369, 376, 381, 398, 405, 407, 412, 413, 416, 422, 424, 426, 429, 431, 434, 435, 436, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 456, 463, 464, 470, 471, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 505, 506, 507, 511, 512, 514, 519, 520, 528, 529, 532, 533, 537, 541, 551, 552, 553, 554, 560, 562, 563, 566, 568, 569, 570, 571, 577, 578, 580, 585, 594, 597, 603, 605, 609, 610, 611, 612, 614, 615, 617, 622, 623, 626, 627, 628, 629, 631, 632, 634, 635, 637, 641, 642, 646, 649, 652, 654, 655, 658, 660, 661, 669, 671, 672, 678, 684, 687, 688, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 711, 714, 719, 720, 722, 723, 725, 727, 729, 739, 740, 742, 744, 745, 754, 755, 757, 760, 762, 763, 765, 767, 769, 770, 771, 773, 774, 777, 778, 782, 784, 786, 791, 792, 793, 797, 799, 802, 806, 807, 809, 818, 819, 820, 822, 824, 825, 826, 827, 829, 831, 832, 834, 836, 839, 843, 845, 846, 847, 848, 849, 851, 853, 854, 857, 858, 860, 870, 872], "ar": [1, 4, 5, 11, 12, 14, 15, 16, 18, 19, 21, 24, 26, 27, 31, 32, 33, 34, 38, 41, 43, 45, 46, 47, 50, 59, 69, 73, 74, 75, 79, 80, 81, 82, 85, 86, 92, 97, 99, 101, 102, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 125, 126, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 281, 282, 285, 286, 288, 294, 295, 297, 299, 300, 302, 303, 304, 305, 307, 309, 310, 311, 313, 314, 317, 319, 320, 321, 322, 325, 326, 327, 329, 331, 332, 335, 338, 339, 340, 344, 350, 351, 355, 356, 357, 358, 360, 362, 365, 366, 367, 369, 381, 382, 389, 398, 405, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 457, 458, 462, 463, 464, 465, 468, 470, 471, 472, 473, 474, 475, 479, 480, 481, 483, 484, 485, 486, 488, 489, 490, 493, 494, 496, 497, 498, 499, 500, 501, 502, 505, 508, 511, 512, 514, 516, 517, 518, 527, 528, 529, 530, 531, 534, 536, 541, 543, 544, 545, 547, 548, 549, 551, 552, 553, 554, 555, 557, 559, 560, 562, 566, 567, 568, 569, 571, 572, 574, 579, 580, 581, 584, 585, 586, 588, 589, 591, 595, 597, 598, 600, 603, 604, 605, 606, 607, 610, 612, 615, 618, 620, 627, 629, 630, 631, 632, 633, 634, 637, 639, 641, 642, 644, 645, 648, 649, 652, 654, 655, 657, 658, 660, 663, 664, 666, 667, 668, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 688, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 708, 709, 710, 716, 718, 719, 720, 721, 722, 723, 725, 727, 729, 734, 739, 740, 744, 754, 755, 756, 757, 760, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 809, 812, 817, 819, 820, 821, 822, 827, 829, 831, 832, 834, 835, 836, 837, 838, 839, 843, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 858, 859, 860, 862, 872], "valid": [1, 8, 9, 10, 11, 12, 15, 16, 21, 73, 79, 80, 109, 117, 119, 121, 136, 161, 170, 176, 183, 189, 190, 194, 200, 209, 223, 238, 256, 258, 261, 262, 263, 264, 266, 268, 269, 270, 272, 275, 276, 277, 322, 335, 351, 356, 398, 405, 411, 412, 421, 422, 426, 437, 439, 446, 453, 457, 473, 474, 528, 529, 551, 552, 554, 566, 568, 569, 623, 637, 674, 679, 680, 682, 683, 692, 694, 695, 696, 717, 727, 739, 742, 755, 756, 763, 770, 771, 772, 773, 775, 777, 778, 782, 791, 794, 797, 799, 800, 801, 802, 825, 831, 837, 838, 847, 851, 854, 872], "240": [1, 13, 35, 42, 46, 56, 74, 79, 107, 117, 168, 170, 180, 197, 201, 207, 223, 228, 237], "x": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 215, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 238, 241, 253, 258, 261, 262, 263, 264, 266, 268, 269, 270, 272, 274, 275, 276, 277, 285, 299, 309, 310, 332, 341, 342, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 443, 444, 445, 473, 474, 484, 485, 518, 519, 527, 551, 552, 553, 561, 566, 589, 612, 644, 665, 668, 673, 677, 678, 679, 680, 681, 682, 683, 685, 692, 694, 696, 697, 698, 699, 704, 706, 707, 708, 710, 711, 715, 717, 718, 722, 727, 729, 730, 732, 739, 740, 743, 756, 758, 760, 763, 771, 773, 775, 777, 778, 779, 780, 781, 782, 787, 789, 791, 793, 794, 795, 797, 799, 801, 802, 803, 805, 807, 819, 827, 831, 837, 848, 854, 857, 872], "1800": [1, 117], "432000": [1, 117], "302": [1, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 74, 81, 83, 91, 92, 102, 105, 106, 108, 117, 119, 151, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 193, 207, 219, 228, 231, 233, 857], "ch": [1, 2, 8, 12, 21, 67, 79, 80, 110, 113, 117, 118, 121, 135, 136, 140, 148, 150, 165, 168, 169, 183, 190, 203, 212, 218, 220, 241, 253, 266, 316, 317, 376, 398, 399, 473, 474, 809, 827, 848, 872], "current": [1, 12, 21, 22, 27, 29, 30, 31, 34, 41, 42, 44, 59, 76, 77, 79, 80, 83, 92, 117, 121, 139, 148, 160, 161, 164, 165, 170, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 198, 200, 208, 214, 220, 231, 233, 241, 253, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 276, 277, 281, 282, 294, 295, 315, 317, 323, 350, 357, 362, 368, 369, 372, 411, 426, 429, 438, 443, 445, 446, 448, 468, 472, 473, 474, 479, 484, 488, 514, 515, 519, 522, 552, 561, 563, 564, 565, 571, 580, 610, 617, 637, 656, 673, 675, 692, 694, 695, 696, 717, 739, 746, 748, 749, 750, 751, 752, 756, 760, 763, 769, 792, 801, 802, 809, 827, 831, 834, 837, 839, 847, 848, 851, 853, 857, 860], "compens": [1, 2, 12, 21, 27, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 76, 77, 79, 80, 83, 84, 85, 99, 114, 117, 118, 121, 125, 139, 142, 148, 171, 175, 177, 178, 180, 183, 184, 190, 200, 207, 223, 224, 241, 253, 256, 261, 262, 263, 264, 266, 348, 362, 426, 428, 441, 443, 444, 446, 472, 473, 474, 486, 493, 515, 549, 552, 563, 571, 577, 580, 610, 657, 692, 694, 695, 696, 780, 781, 872], "grade": [1, 12, 21, 24, 41, 69, 79, 80, 99, 107, 117, 121, 157, 160, 183, 187, 190, 231, 233, 256, 261, 262, 263, 264, 266, 267, 460, 461, 472, 473, 474, 552, 692, 694, 695, 696, 872], "144000": [1, 79], "sec": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 29, 32, 33, 34, 41, 42, 45, 46, 49, 58, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 121, 125, 126, 127, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 155, 158, 161, 165, 166, 167, 168, 171, 176, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 225, 226, 227, 228, 231, 233, 237, 253, 259, 266, 354, 554, 642, 780, 857, 872], "type": [1, 2, 5, 15, 16, 22, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 70, 74, 76, 77, 79, 80, 81, 83, 84, 88, 91, 92, 93, 101, 107, 111, 112, 113, 114, 116, 117, 118, 121, 122, 125, 126, 129, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 148, 149, 155, 156, 157, 158, 161, 165, 166, 167, 169, 170, 171, 175, 177, 178, 179, 180, 181, 182, 184, 187, 189, 194, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 213, 215, 218, 219, 220, 223, 227, 228, 236, 237, 254, 256, 258, 259, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 294, 295, 305, 307, 308, 310, 311, 314, 315, 316, 317, 318, 324, 326, 332, 340, 351, 352, 353, 354, 355, 356, 365, 366, 367, 369, 376, 381, 398, 399, 405, 407, 412, 414, 421, 426, 429, 430, 437, 438, 440, 443, 444, 445, 446, 448, 449, 450, 455, 462, 468, 470, 471, 472, 473, 474, 481, 488, 492, 498, 502, 503, 511, 530, 542, 549, 550, 551, 552, 553, 554, 557, 561, 563, 566, 567, 568, 569, 571, 573, 574, 577, 580, 586, 588, 595, 605, 607, 609, 610, 633, 634, 637, 643, 644, 645, 657, 660, 663, 672, 678, 679, 680, 682, 683, 687, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 723, 726, 739, 754, 758, 762, 763, 764, 765, 767, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 790, 791, 792, 793, 794, 795, 797, 799, 800, 801, 802, 803, 805, 813, 827, 829, 830, 836, 837, 838, 842, 847, 849, 851, 855, 857, 858, 872], "select": [1, 5, 7, 11, 15, 21, 24, 28, 29, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 70, 73, 75, 80, 81, 86, 88, 91, 92, 93, 97, 101, 107, 110, 111, 117, 118, 119, 126, 133, 136, 140, 141, 143, 149, 150, 157, 158, 160, 161, 165, 166, 168, 169, 171, 174, 176, 177, 178, 179, 180, 181, 188, 190, 194, 198, 199, 200, 202, 205, 206, 208, 213, 214, 215, 219, 220, 224, 228, 232, 233, 236, 237, 238, 241, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 316, 321, 351, 362, 407, 413, 436, 443, 464, 470, 473, 474, 479, 505, 544, 545, 547, 548, 549, 550, 552, 553, 557, 566, 568, 569, 575, 576, 589, 615, 627, 634, 637, 655, 658, 678, 692, 693, 694, 695, 696, 703, 709, 756, 763, 769, 773, 775, 777, 778, 779, 782, 784, 786, 792, 795, 797, 801, 804, 808, 827, 831, 834, 847, 851, 854, 858, 872], "re": [1, 4, 29, 45, 70, 91, 92, 99, 101, 111, 112, 118, 125, 133, 139, 140, 143, 150, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 170, 171, 181, 188, 198, 199, 200, 202, 203, 204, 205, 206, 212, 214, 219, 225, 227, 233, 238, 241, 253, 255, 258, 261, 262, 263, 264, 266, 270, 278, 310, 314, 405, 412, 430, 473, 474, 496, 544, 545, 548, 550, 551, 552, 561, 606, 634, 637, 641, 692, 694, 695, 696, 703, 709, 726, 756, 771, 778, 782, 791, 794, 796, 799, 801, 831, 835, 836, 839, 849, 851, 852, 854, 860, 872], "referenc": [1, 29, 70, 91, 92, 139, 149, 150, 158, 161, 166, 181, 188, 198, 202, 206, 219, 223, 255, 261, 262, 263, 264, 278, 473, 474, 634, 637, 692, 694, 695, 696, 773, 827, 831, 854, 858, 861, 872], "item": [1, 4, 8, 11, 12, 13, 14, 15, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 125, 126, 127, 129, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 215, 218, 219, 220, 224, 225, 226, 227, 228, 231, 233, 237, 254, 258, 259, 261, 262, 266, 270, 274, 280, 285, 299, 473, 474, 518, 694, 695, 696, 727, 739, 837, 857, 872], "deactiv": [1, 29, 42, 51, 67, 70, 90, 91, 92, 109, 141, 145, 158, 161, 181, 190, 204, 205, 206, 219, 760, 829], "wa": [1, 5, 7, 13, 18, 21, 33, 60, 65, 70, 92, 113, 133, 139, 143, 148, 150, 157, 158, 165, 166, 167, 169, 170, 180, 181, 182, 188, 190, 193, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 218, 226, 227, 228, 238, 254, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 294, 295, 329, 344, 385, 404, 405, 412, 427, 429, 470, 473, 474, 490, 492, 500, 505, 515, 525, 526, 528, 529, 534, 535, 536, 551, 552, 553, 564, 565, 566, 569, 571, 572, 573, 580, 587, 605, 609, 630, 641, 644, 645, 677, 687, 692, 693, 694, 695, 696, 708, 712, 718, 739, 755, 756, 771, 773, 778, 782, 791, 794, 799, 801, 804, 808, 827, 830, 831, 836, 837, 838, 848, 853, 854, 857, 860, 872], "been": [1, 9, 10, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 78, 82, 84, 85, 92, 114, 117, 118, 125, 133, 139, 141, 144, 148, 149, 150, 158, 159, 161, 165, 166, 168, 170, 171, 174, 175, 177, 178, 180, 181, 182, 187, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 236, 243, 252, 253, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 286, 287, 288, 294, 295, 300, 351, 355, 356, 365, 366, 367, 373, 374, 375, 378, 379, 381, 386, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 405, 412, 426, 448, 449, 465, 468, 470, 471, 473, 474, 475, 481, 482, 493, 500, 520, 530, 551, 552, 553, 564, 580, 587, 610, 692, 693, 694, 695, 696, 708, 718, 720, 722, 723, 749, 763, 769, 773, 775, 777, 779, 793, 831, 839, 843, 848, 851, 853, 854, 857, 860, 872], "appli": [1, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 77, 78, 80, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 125, 126, 130, 132, 133, 134, 135, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 171, 175, 176, 177, 178, 180, 181, 182, 183, 184, 188, 190, 194, 197, 198, 199, 201, 203, 205, 206, 208, 209, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 241, 254, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 309, 335, 350, 355, 364, 365, 367, 405, 407, 408, 412, 413, 414, 416, 418, 426, 435, 436, 437, 438, 439, 441, 443, 444, 446, 449, 463, 470, 471, 473, 474, 509, 512, 519, 520, 521, 522, 523, 528, 529, 531, 534, 535, 536, 551, 552, 553, 554, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 580, 587, 595, 603, 607, 610, 611, 612, 632, 637, 648, 649, 650, 651, 652, 654, 659, 673, 674, 679, 680, 681, 692, 693, 694, 695, 696, 704, 708, 718, 721, 722, 724, 728, 729, 739, 763, 764, 769, 770, 771, 773, 775, 777, 778, 782, 783, 784, 786, 792, 793, 797, 799, 800, 802, 809, 812, 819, 822, 827, 831, 847, 849, 851, 854, 855, 857, 860, 872], "yet": [1, 70, 92, 133, 158, 181, 188, 204, 206, 238, 261, 373, 374, 375, 378, 379, 381, 386, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 413, 418, 541, 566, 739, 831, 872], "method": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 69, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 86, 91, 92, 93, 95, 97, 99, 101, 102, 105, 106, 107, 108, 111, 112, 113, 114, 119, 125, 131, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 158, 159, 161, 164, 165, 166, 167, 168, 169, 171, 174, 176, 179, 180, 181, 182, 183, 184, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 214, 216, 217, 218, 219, 220, 224, 228, 231, 233, 236, 237, 238, 241, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 285, 294, 295, 296, 297, 299, 302, 303, 307, 308, 309, 310, 311, 315, 316, 317, 318, 321, 323, 324, 337, 339, 341, 344, 346, 351, 355, 356, 357, 362, 365, 366, 367, 369, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 426, 428, 440, 441, 443, 444, 445, 449, 456, 465, 468, 469, 470, 471, 472, 473, 474, 475, 478, 480, 482, 483, 484, 485, 486, 489, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 505, 508, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 530, 531, 532, 534, 535, 536, 548, 549, 551, 552, 553, 560, 563, 564, 565, 567, 577, 578, 580, 583, 584, 585, 586, 587, 595, 597, 601, 604, 610, 612, 627, 628, 637, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 670, 673, 674, 676, 679, 680, 681, 682, 683, 685, 692, 693, 694, 695, 696, 699, 702, 704, 710, 711, 719, 720, 722, 723, 727, 734, 735, 737, 739, 740, 752, 755, 759, 764, 765, 766, 767, 770, 778, 781, 783, 791, 795, 798, 827, 829, 831, 846, 847, 849, 851, 854, 855, 857, 858, 869, 872], "note": [1, 4, 13, 16, 18, 21, 26, 47, 69, 70, 73, 81, 102, 107, 110, 112, 127, 133, 134, 135, 139, 140, 141, 142, 144, 148, 150, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 179, 180, 181, 182, 188, 189, 193, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 212, 213, 214, 218, 219, 227, 228, 231, 232, 233, 237, 238, 241, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 285, 290, 294, 295, 297, 300, 301, 302, 303, 304, 306, 307, 309, 310, 311, 314, 315, 316, 317, 318, 319, 321, 325, 326, 327, 329, 331, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 355, 356, 357, 358, 361, 362, 364, 365, 368, 369, 376, 381, 382, 383, 384, 385, 387, 398, 399, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 417, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 455, 456, 458, 461, 462, 463, 464, 466, 467, 472, 473, 474, 475, 481, 485, 486, 488, 489, 490, 493, 494, 495, 496, 498, 500, 501, 505, 507, 508, 509, 510, 512, 514, 515, 516, 517, 519, 520, 521, 522, 523, 525, 526, 527, 530, 532, 534, 535, 536, 538, 539, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 574, 577, 580, 581, 586, 587, 588, 589, 590, 594, 595, 598, 600, 602, 603, 604, 606, 607, 610, 611, 612, 614, 615, 617, 620, 626, 628, 629, 631, 632, 634, 637, 639, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 669, 672, 673, 674, 675, 678, 679, 680, 681, 682, 683, 685, 687, 692, 693, 694, 695, 696, 700, 701, 702, 703, 704, 705, 706, 708, 710, 711, 714, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 733, 734, 737, 739, 740, 742, 754, 755, 756, 757, 758, 760, 762, 763, 764, 766, 767, 769, 770, 771, 772, 773, 775, 776, 778, 779, 780, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 808, 809, 813, 817, 818, 819, 820, 821, 822, 827, 829, 831, 832, 838, 847, 851, 853, 854, 856, 872], "legaci": [1, 70, 73, 107, 127, 141, 142, 165, 171, 182, 197, 201, 205, 207, 209, 215, 237, 261, 262, 263, 264, 473, 474, 771, 793, 872], "new": [1, 8, 14, 19, 27, 31, 61, 68, 70, 73, 79, 107, 111, 127, 133, 136, 139, 141, 142, 144, 148, 150, 160, 164, 165, 171, 174, 181, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 214, 215, 218, 223, 226, 227, 228, 236, 237, 241, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 284, 285, 290, 294, 295, 297, 299, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 315, 318, 319, 320, 325, 327, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 365, 366, 367, 368, 376, 382, 384, 385, 398, 399, 404, 405, 407, 409, 411, 412, 416, 417, 424, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 452, 453, 455, 458, 462, 463, 464, 467, 468, 470, 471, 472, 473, 474, 481, 484, 485, 486, 488, 489, 490, 493, 495, 500, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 532, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 571, 572, 577, 579, 580, 581, 588, 590, 594, 595, 600, 604, 606, 607, 611, 615, 623, 625, 626, 627, 628, 629, 631, 634, 637, 641, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 669, 673, 675, 685, 686, 687, 691, 692, 693, 694, 695, 696, 704, 706, 709, 710, 711, 714, 719, 720, 722, 723, 724, 725, 727, 728, 729, 736, 739, 740, 742, 747, 748, 752, 755, 756, 757, 758, 760, 762, 763, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 803, 805, 808, 813, 816, 817, 818, 822, 823, 825, 827, 829, 830, 833, 835, 836, 837, 839, 842, 847, 848, 851, 852, 853, 854, 855, 857, 859, 860], "should": [1, 4, 5, 16, 19, 40, 41, 63, 69, 70, 73, 80, 86, 88, 107, 118, 119, 127, 131, 133, 134, 135, 139, 140, 141, 142, 143, 150, 155, 156, 157, 159, 160, 164, 165, 166, 171, 179, 181, 182, 183, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 227, 228, 236, 237, 238, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 325, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 415, 416, 417, 418, 421, 422, 424, 426, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 455, 456, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 548, 551, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 590, 592, 593, 594, 595, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 669, 674, 679, 680, 681, 682, 683, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 711, 714, 715, 719, 720, 722, 723, 724, 725, 727, 728, 729, 734, 735, 738, 739, 741, 743, 747, 755, 756, 757, 758, 762, 763, 764, 766, 767, 769, 770, 771, 772, 773, 774, 775, 778, 779, 782, 783, 784, 785, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 808, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 830, 831, 834, 835, 836, 837, 842, 847, 848, 853, 854, 857, 860, 872], "compute_psd": [1, 70, 73, 107, 127, 131, 136, 141, 142, 165, 171, 182, 197, 199, 201, 205, 207, 209, 215, 236, 237, 238, 261, 262, 263, 264, 410, 473, 474, 552, 694, 696, 710, 771, 782, 784, 793, 872], "5": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 161, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 241, 253, 255, 256, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 277, 279, 294, 295, 297, 300, 304, 311, 323, 332, 351, 357, 376, 381, 404, 405, 411, 422, 425, 426, 428, 446, 447, 448, 461, 470, 473, 474, 496, 508, 509, 519, 525, 530, 534, 535, 536, 551, 552, 554, 555, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 575, 578, 580, 584, 588, 589, 606, 614, 633, 641, 645, 678, 691, 694, 696, 704, 708, 710, 718, 719, 720, 722, 723, 729, 739, 754, 758, 770, 771, 775, 776, 782, 784, 787, 792, 797, 802, 812, 829, 830, 831, 837, 847, 848, 851, 853, 854, 857, 860], "becaus": [1, 4, 5, 11, 16, 18, 21, 26, 34, 41, 43, 44, 45, 50, 60, 69, 73, 79, 80, 81, 99, 112, 113, 117, 133, 139, 141, 142, 143, 145, 148, 149, 150, 157, 159, 160, 161, 165, 166, 167, 169, 170, 175, 179, 180, 181, 182, 183, 188, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 214, 218, 223, 224, 225, 228, 231, 238, 261, 262, 263, 264, 344, 355, 426, 448, 562, 571, 579, 679, 680, 682, 683, 695, 748, 769, 800, 827, 831, 835, 839, 847, 849, 851, 853, 854, 858, 872], "all": [1, 4, 5, 10, 13, 14, 18, 19, 21, 27, 28, 31, 33, 35, 40, 45, 59, 61, 63, 69, 72, 79, 80, 81, 88, 93, 95, 97, 101, 105, 109, 110, 111, 112, 114, 115, 117, 118, 119, 123, 125, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 175, 178, 180, 181, 182, 183, 184, 187, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 228, 232, 236, 237, 238, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 288, 289, 292, 294, 295, 297, 299, 304, 305, 306, 307, 309, 310, 311, 314, 319, 320, 321, 324, 325, 326, 335, 345, 346, 350, 351, 355, 356, 357, 358, 362, 363, 365, 366, 367, 369, 382, 405, 407, 408, 412, 414, 421, 422, 426, 429, 430, 432, 434, 435, 436, 437, 438, 439, 443, 444, 445, 446, 447, 448, 449, 453, 455, 461, 462, 463, 464, 468, 470, 471, 473, 474, 475, 479, 481, 485, 488, 494, 496, 499, 503, 507, 518, 519, 521, 523, 526, 528, 529, 530, 531, 535, 536, 538, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 562, 566, 567, 568, 569, 570, 571, 574, 577, 580, 586, 588, 595, 600, 603, 604, 606, 607, 610, 611, 612, 615, 625, 630, 631, 637, 640, 642, 651, 657, 660, 669, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 687, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 708, 709, 710, 714, 718, 719, 720, 722, 723, 727, 729, 737, 739, 746, 747, 755, 756, 757, 763, 767, 769, 770, 771, 773, 774, 775, 776, 778, 779, 780, 782, 783, 786, 788, 789, 790, 791, 792, 793, 794, 795, 797, 799, 800, 801, 802, 803, 812, 827, 834, 838, 842, 846, 847, 848, 849, 853, 854, 857, 858, 860, 872], "were": [1, 4, 5, 10, 18, 21, 38, 79, 80, 117, 125, 133, 136, 139, 140, 141, 142, 143, 148, 149, 150, 160, 166, 167, 170, 171, 180, 181, 182, 183, 187, 189, 190, 198, 199, 200, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 223, 225, 227, 228, 261, 262, 263, 264, 266, 269, 271, 272, 275, 277, 278, 294, 295, 317, 345, 346, 357, 360, 398, 399, 429, 431, 473, 474, 495, 552, 562, 563, 571, 580, 687, 692, 693, 694, 695, 696, 783, 785, 792, 827, 831, 838, 848, 851, 853, 857, 872], "effect": [1, 7, 17, 19, 20, 21, 26, 27, 39, 57, 59, 69, 70, 73, 81, 82, 97, 101, 107, 110, 111, 118, 119, 127, 131, 140, 144, 148, 150, 159, 161, 165, 166, 167, 171, 182, 190, 197, 199, 200, 201, 205, 206, 207, 208, 209, 215, 219, 220, 224, 225, 227, 228, 233, 236, 237, 241, 261, 262, 263, 264, 266, 267, 268, 271, 272, 276, 294, 295, 317, 351, 355, 356, 365, 366, 367, 398, 399, 405, 406, 412, 421, 426, 428, 429, 444, 448, 449, 468, 470, 471, 473, 474, 489, 490, 519, 522, 530, 549, 552, 555, 560, 607, 673, 675, 678, 679, 680, 682, 683, 694, 696, 699, 710, 769, 773, 779, 782, 784, 786, 792, 793, 795, 797, 827, 837, 838, 851, 872], "window": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 59, 70, 71, 72, 73, 75, 80, 81, 82, 86, 91, 97, 98, 101, 102, 106, 107, 111, 112, 113, 119, 121, 127, 131, 135, 136, 140, 141, 142, 143, 145, 150, 165, 170, 171, 179, 182, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 214, 215, 224, 228, 236, 237, 238, 253, 256, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 287, 338, 340, 344, 405, 406, 410, 412, 416, 418, 421, 429, 431, 440, 441, 443, 444, 445, 454, 464, 465, 471, 473, 474, 525, 526, 552, 554, 562, 571, 574, 578, 580, 588, 644, 645, 678, 692, 693, 694, 696, 699, 702, 704, 707, 710, 711, 715, 716, 719, 720, 721, 722, 723, 724, 739, 769, 770, 771, 778, 786, 792, 793, 797, 802, 831, 834, 835, 836, 837, 872], "size": [1, 5, 8, 9, 10, 21, 22, 32, 35, 41, 43, 44, 45, 46, 53, 58, 64, 69, 70, 73, 81, 98, 106, 107, 112, 118, 124, 125, 127, 131, 132, 133, 134, 135, 141, 143, 145, 149, 150, 154, 155, 157, 159, 165, 171, 174, 176, 177, 178, 179, 180, 182, 183, 184, 188, 189, 197, 198, 200, 201, 204, 205, 206, 207, 209, 212, 215, 219, 220, 225, 228, 231, 236, 237, 238, 241, 258, 259, 261, 262, 263, 264, 268, 269, 270, 271, 272, 275, 276, 277, 309, 317, 325, 327, 357, 405, 407, 412, 416, 417, 440, 441, 443, 444, 445, 470, 472, 473, 474, 512, 525, 551, 552, 566, 571, 578, 658, 674, 678, 679, 680, 682, 683, 692, 694, 696, 716, 729, 739, 748, 752, 767, 769, 771, 777, 778, 782, 784, 785, 786, 789, 791, 792, 794, 795, 797, 798, 799, 800, 801, 802, 806, 812, 854, 857, 872], "707": [1, 194, 207, 228], "need": [1, 4, 5, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 68, 69, 73, 74, 84, 88, 92, 93, 101, 102, 105, 106, 107, 108, 110, 112, 115, 117, 125, 133, 134, 135, 139, 140, 141, 142, 143, 144, 148, 149, 150, 155, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 171, 174, 176, 177, 178, 179, 180, 181, 187, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 238, 241, 261, 262, 263, 264, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 294, 315, 326, 368, 371, 381, 406, 407, 415, 421, 429, 438, 443, 463, 472, 473, 474, 481, 488, 495, 511, 516, 539, 552, 587, 641, 679, 680, 682, 683, 692, 694, 695, 696, 739, 745, 756, 762, 777, 782, 792, 829, 831, 832, 834, 835, 836, 837, 838, 839, 847, 848, 853, 854, 855, 857, 860, 872], "more": [1, 4, 18, 19, 27, 28, 34, 42, 43, 44, 49, 54, 58, 69, 70, 72, 74, 79, 80, 81, 82, 84, 92, 102, 105, 108, 111, 112, 119, 120, 128, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 183, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 215, 220, 223, 224, 225, 226, 228, 231, 233, 237, 238, 246, 255, 256, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 286, 294, 295, 302, 303, 326, 351, 355, 357, 362, 364, 367, 398, 399, 404, 405, 407, 409, 410, 412, 413, 417, 422, 424, 435, 436, 438, 439, 440, 441, 443, 444, 446, 447, 455, 464, 473, 474, 481, 490, 496, 507, 511, 514, 519, 525, 526, 527, 551, 552, 554, 560, 562, 571, 577, 580, 589, 600, 602, 606, 607, 610, 620, 629, 631, 632, 634, 637, 644, 669, 673, 674, 679, 680, 681, 682, 683, 692, 694, 695, 696, 699, 702, 710, 719, 720, 721, 722, 723, 724, 736, 739, 755, 756, 757, 758, 763, 767, 771, 774, 775, 777, 778, 782, 791, 794, 797, 799, 801, 802, 810, 811, 820, 827, 828, 829, 831, 835, 836, 837, 838, 847, 848, 849, 851, 853, 854, 855, 856, 860, 869, 872], "than": [1, 5, 13, 18, 24, 26, 33, 34, 41, 42, 44, 45, 46, 50, 54, 58, 59, 60, 68, 69, 77, 81, 84, 85, 92, 112, 117, 122, 125, 133, 134, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 157, 160, 165, 166, 167, 168, 169, 170, 171, 175, 179, 180, 182, 183, 184, 187, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 223, 226, 236, 238, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 286, 302, 303, 350, 355, 362, 405, 407, 410, 412, 416, 422, 424, 434, 439, 441, 443, 444, 446, 449, 461, 470, 471, 473, 474, 490, 496, 507, 517, 525, 526, 536, 541, 543, 545, 551, 552, 554, 560, 562, 566, 568, 578, 579, 581, 585, 588, 606, 611, 632, 641, 673, 679, 680, 681, 682, 683, 684, 687, 692, 694, 695, 696, 699, 702, 707, 710, 715, 721, 724, 739, 756, 757, 769, 771, 772, 775, 778, 782, 791, 792, 794, 797, 799, 801, 802, 812, 829, 831, 836, 837, 838, 853, 854, 872], "one": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 32, 33, 34, 40, 41, 42, 43, 45, 46, 48, 49, 50, 58, 59, 65, 67, 69, 72, 73, 75, 80, 81, 82, 84, 85, 86, 88, 92, 94, 95, 97, 101, 107, 109, 111, 112, 113, 115, 119, 125, 129, 131, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 183, 187, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 223, 225, 226, 227, 228, 232, 237, 238, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 286, 294, 295, 308, 309, 311, 315, 316, 318, 350, 352, 353, 355, 357, 358, 362, 376, 384, 387, 389, 398, 399, 404, 405, 411, 412, 415, 418, 420, 424, 427, 428, 429, 436, 437, 439, 440, 446, 455, 462, 463, 464, 471, 472, 473, 474, 477, 481, 490, 504, 505, 507, 509, 514, 528, 529, 535, 536, 538, 541, 552, 553, 554, 555, 568, 572, 575, 576, 588, 591, 600, 602, 610, 611, 617, 629, 631, 637, 641, 644, 658, 663, 673, 674, 679, 680, 681, 682, 683, 685, 688, 692, 693, 694, 695, 696, 698, 701, 708, 718, 719, 720, 722, 723, 725, 728, 729, 739, 752, 755, 757, 758, 763, 770, 771, 773, 774, 775, 776, 778, 779, 780, 782, 784, 797, 798, 800, 801, 802, 803, 812, 818, 820, 827, 829, 830, 831, 834, 835, 839, 847, 848, 849, 851, 853, 854, 857, 872], "make": [1, 4, 9, 10, 13, 18, 19, 21, 27, 28, 31, 32, 34, 38, 42, 45, 48, 50, 54, 55, 59, 61, 69, 74, 84, 88, 91, 92, 101, 107, 109, 110, 111, 112, 120, 122, 128, 131, 133, 134, 135, 139, 140, 141, 142, 143, 149, 150, 155, 157, 159, 160, 161, 165, 166, 168, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 183, 184, 187, 188, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 212, 214, 218, 223, 225, 226, 227, 231, 232, 233, 238, 253, 260, 261, 262, 263, 264, 266, 268, 269, 272, 274, 275, 276, 277, 294, 295, 322, 334, 351, 355, 356, 357, 362, 365, 366, 367, 368, 405, 408, 409, 412, 414, 415, 424, 428, 429, 440, 441, 443, 444, 448, 449, 455, 462, 464, 468, 470, 471, 473, 474, 513, 530, 536, 545, 551, 552, 562, 577, 579, 588, 598, 600, 610, 620, 629, 631, 644, 656, 687, 689, 693, 708, 718, 719, 720, 722, 727, 734, 735, 739, 757, 758, 761, 762, 763, 765, 776, 779, 785, 792, 797, 802, 803, 820, 827, 829, 830, 838, 839, 847, 848, 849, 851, 852, 854, 857, 860, 872], "topographi": [1, 13, 21, 27, 69, 70, 73, 84, 112, 118, 120, 128, 130, 141, 143, 150, 165, 169, 171, 175, 190, 203, 205, 206, 215, 226, 228, 236, 241, 261, 262, 263, 264, 266, 270, 271, 310, 405, 412, 473, 474, 549, 552, 567, 657, 692, 694, 696, 752, 771, 776, 777, 778, 782, 784, 788, 793, 795, 799, 800, 827, 872], "disabl": [1, 84, 112, 141, 148, 149, 150, 171, 197, 198, 201, 215, 226, 253, 258, 261, 262, 263, 264, 270, 271, 305, 362, 405, 411, 412, 417, 473, 474, 551, 552, 571, 580, 635, 639, 692, 694, 696, 734, 739, 756, 771, 773, 777, 778, 782, 791, 792, 794, 799, 801, 805, 829, 872], "interact": [1, 27, 33, 45, 47, 84, 112, 113, 118, 125, 133, 139, 148, 149, 150, 164, 165, 167, 171, 179, 180, 190, 198, 199, 203, 204, 205, 209, 212, 220, 223, 226, 227, 233, 237, 238, 241, 253, 258, 261, 262, 263, 264, 268, 269, 270, 271, 272, 275, 276, 277, 287, 294, 405, 412, 464, 473, 474, 519, 551, 552, 588, 673, 675, 692, 694, 696, 739, 741, 755, 756, 760, 770, 771, 773, 774, 775, 777, 778, 782, 784, 786, 791, 792, 793, 794, 795, 797, 799, 800, 801, 802, 829, 831, 853, 854, 855, 860, 872], "up": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 26, 27, 28, 33, 34, 42, 44, 45, 50, 68, 71, 72, 75, 78, 80, 81, 82, 86, 88, 91, 92, 93, 97, 101, 102, 107, 109, 110, 111, 112, 113, 115, 119, 121, 130, 131, 133, 135, 139, 140, 143, 144, 145, 149, 150, 154, 155, 157, 158, 159, 161, 164, 165, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 214, 215, 219, 220, 224, 225, 228, 231, 233, 238, 258, 259, 261, 262, 263, 264, 268, 269, 270, 271, 272, 273, 275, 276, 277, 405, 410, 411, 412, 417, 445, 473, 474, 525, 526, 551, 552, 554, 571, 635, 640, 641, 678, 687, 692, 694, 696, 710, 737, 739, 758, 767, 769, 770, 771, 775, 778, 782, 785, 791, 792, 794, 797, 799, 802, 803, 809, 827, 829, 835, 851, 854, 855, 857, 860, 872], "band": [1, 5, 8, 9, 12, 13, 14, 15, 16, 18, 21, 27, 32, 33, 34, 42, 71, 75, 80, 86, 92, 103, 104, 105, 107, 108, 110, 112, 113, 119, 124, 131, 135, 136, 140, 141, 143, 144, 145, 166, 171, 194, 197, 199, 200, 201, 202, 203, 205, 209, 215, 227, 228, 236, 237, 238, 241, 261, 262, 263, 264, 284, 407, 413, 416, 440, 441, 443, 444, 446, 473, 474, 535, 557, 584, 671, 694, 696, 708, 718, 719, 722, 763, 771, 787, 827, 848, 851, 872], "stop": [1, 5, 29, 67, 80, 91, 94, 125, 135, 166, 171, 199, 200, 201, 208, 212, 213, 214, 253, 254, 261, 262, 263, 264, 281, 282, 293, 354, 407, 416, 440, 441, 443, 444, 472, 473, 474, 513, 522, 525, 552, 571, 578, 594, 783, 786, 831, 853, 872], "filter": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 27, 32, 33, 34, 42, 45, 59, 67, 71, 72, 75, 76, 80, 81, 82, 83, 86, 90, 97, 107, 110, 111, 113, 119, 131, 135, 139, 140, 143, 144, 145, 148, 161, 164, 165, 166, 168, 171, 175, 180, 182, 183, 184, 190, 193, 197, 199, 202, 205, 209, 210, 211, 212, 214, 215, 220, 228, 238, 241, 253, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 339, 341, 344, 345, 348, 351, 355, 356, 365, 366, 367, 371, 405, 406, 407, 409, 412, 413, 416, 419, 420, 421, 423, 426, 434, 446, 448, 449, 468, 470, 471, 473, 474, 486, 513, 530, 549, 552, 553, 557, 563, 564, 565, 568, 569, 571, 572, 573, 580, 581, 584, 607, 646, 656, 692, 694, 695, 696, 704, 705, 708, 711, 779, 780, 781, 787, 792, 793, 811, 827, 829, 831, 847, 849, 851, 858, 861, 862, 872], "fir": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 228, 253, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474, 564, 565, 584, 705, 780, 792, 829, 851, 861, 872], "paramet": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 34, 40, 41, 42, 43, 44, 48, 54, 55, 59, 61, 68, 70, 71, 72, 74, 75, 80, 81, 82, 86, 94, 95, 97, 98, 99, 105, 106, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 121, 126, 130, 131, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 155, 157, 158, 160, 161, 165, 167, 168, 169, 170, 171, 174, 177, 179, 187, 190, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 226, 236, 237, 238, 241, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 745, 747, 748, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 831, 847, 849, 851, 854, 858, 872], "design": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 60, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 159, 160, 171, 179, 187, 189, 190, 197, 199, 201, 202, 203, 205, 206, 208, 209, 220, 223, 228, 241, 254, 261, 262, 263, 264, 339, 382, 385, 407, 416, 440, 441, 443, 444, 473, 474, 481, 483, 485, 488, 489, 490, 494, 498, 551, 553, 580, 587, 594, 604, 673, 677, 704, 715, 792, 810, 811, 836, 848, 851, 853, 860, 872], "pass": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 43, 59, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 133, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 165, 166, 167, 168, 169, 170, 171, 179, 182, 188, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 212, 213, 214, 215, 218, 220, 223, 225, 227, 228, 231, 232, 233, 236, 237, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 315, 319, 320, 321, 326, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 421, 422, 424, 426, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 455, 456, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 545, 548, 551, 552, 553, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 597, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 639, 640, 641, 643, 644, 645, 646, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 672, 679, 680, 681, 682, 683, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 710, 711, 714, 715, 719, 720, 722, 723, 724, 725, 728, 729, 734, 738, 739, 740, 747, 752, 755, 756, 759, 761, 763, 764, 765, 767, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 782, 783, 784, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 831, 835, 836, 847, 849, 851, 854, 872], "zero": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 63, 69, 71, 72, 73, 75, 80, 81, 82, 86, 88, 91, 92, 93, 97, 107, 110, 111, 112, 113, 118, 119, 131, 135, 139, 140, 141, 143, 145, 148, 150, 151, 157, 159, 161, 165, 167, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 218, 219, 220, 223, 227, 228, 238, 254, 255, 256, 259, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 275, 276, 277, 278, 280, 294, 295, 351, 355, 357, 365, 407, 411, 416, 417, 418, 439, 441, 443, 444, 445, 446, 468, 473, 474, 475, 486, 525, 536, 552, 553, 572, 594, 607, 643, 644, 645, 653, 657, 672, 679, 680, 682, 683, 687, 688, 692, 694, 695, 696, 704, 708, 711, 718, 719, 720, 721, 722, 724, 739, 754, 758, 768, 769, 792, 797, 802, 803, 827, 831, 847, 854, 857, 872], "phase": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 103, 104, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 166, 171, 189, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 220, 228, 238, 241, 261, 262, 263, 264, 266, 267, 268, 269, 272, 275, 276, 277, 287, 338, 367, 407, 416, 418, 439, 441, 443, 444, 446, 473, 474, 518, 523, 533, 536, 549, 552, 614, 719, 720, 729, 780, 827, 838, 848, 872], "non": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 34, 40, 41, 42, 46, 50, 59, 69, 71, 72, 75, 80, 81, 82, 86, 91, 97, 107, 111, 112, 113, 119, 131, 135, 140, 141, 142, 143, 145, 149, 150, 157, 164, 165, 168, 170, 171, 174, 179, 180, 184, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 205, 206, 208, 209, 212, 218, 228, 229, 230, 241, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 283, 294, 295, 315, 350, 351, 355, 357, 405, 411, 412, 413, 417, 434, 441, 443, 444, 446, 471, 473, 474, 489, 525, 532, 538, 549, 551, 552, 553, 566, 580, 581, 598, 604, 607, 627, 653, 671, 672, 679, 680, 682, 683, 687, 688, 692, 694, 695, 696, 722, 729, 739, 756, 767, 770, 771, 778, 782, 791, 794, 798, 799, 801, 827, 829, 831, 840, 847, 851, 853, 854, 869, 872], "causal": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 228, 261, 262, 263, 264, 411, 441, 443, 444, 473, 474], "bandstop": [1, 5, 80, 135, 201, 473, 474, 792], "domain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 46, 71, 72, 75, 80, 81, 82, 86, 97, 101, 111, 112, 113, 119, 131, 133, 135, 140, 143, 145, 150, 164, 165, 171, 190, 194, 197, 199, 200, 201, 202, 205, 208, 209, 215, 228, 238, 239, 240, 241, 253, 261, 262, 263, 264, 407, 416, 417, 441, 443, 444, 445, 446, 473, 474, 535, 536, 641, 694, 696, 710, 711, 728, 734, 853, 872], "ham": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 200, 201, 202, 203, 205, 208, 209, 228, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474, 711, 793, 872], "0194": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 200, 201, 202, 203, 208, 209, 228], "passband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 228, 847], "rippl": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 201, 202, 203, 208, 209, 228], "db": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 106, 107, 111, 112, 113, 119, 127, 131, 135, 136, 140, 141, 143, 145, 150, 168, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 212, 215, 218, 220, 228, 236, 237, 238, 261, 262, 263, 264, 266, 308, 309, 367, 369, 438, 441, 473, 474, 488, 498, 525, 549, 550, 552, 637, 687, 692, 694, 695, 696, 739, 755, 771, 780, 784, 787, 793, 795, 827, 854, 872], "stopband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 190, 194, 201, 202, 203, 208, 209, 228], "attenu": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 161, 190, 194, 201, 202, 203, 208, 209, 228, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474, 854, 872], "lower": [1, 2, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 34, 37, 40, 42, 49, 54, 55, 61, 69, 71, 72, 75, 80, 81, 86, 97, 105, 110, 111, 112, 113, 118, 119, 125, 131, 133, 135, 140, 141, 143, 145, 150, 155, 159, 171, 179, 180, 183, 194, 197, 199, 200, 201, 202, 203, 204, 205, 209, 215, 225, 226, 227, 228, 231, 233, 238, 256, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 405, 407, 410, 412, 431, 441, 443, 473, 474, 512, 525, 526, 551, 552, 557, 562, 566, 584, 603, 671, 678, 679, 681, 682, 692, 693, 694, 696, 710, 711, 756, 758, 763, 770, 771, 777, 778, 782, 791, 792, 793, 794, 797, 799, 801, 802, 803, 827, 829, 872], "transit": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 228, 254, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474, 554, 584, 805, 854, 872], "bandwidth": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 102, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 228, 238, 261, 262, 263, 264, 410, 418, 444, 473, 474, 525, 526, 694, 696, 699, 702, 704, 710, 720, 723, 771], "50": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 25, 26, 28, 34, 35, 41, 42, 45, 46, 47, 65, 71, 75, 79, 80, 81, 82, 86, 88, 93, 97, 101, 106, 107, 110, 111, 112, 113, 118, 119, 131, 134, 135, 136, 142, 143, 145, 148, 150, 157, 159, 163, 165, 167, 168, 169, 170, 171, 177, 179, 183, 184, 188, 190, 193, 194, 197, 199, 200, 201, 202, 203, 205, 207, 212, 213, 214, 220, 223, 224, 225, 227, 228, 231, 232, 233, 238, 241, 253, 332, 440, 473, 474, 534, 561, 649, 654, 672, 680, 691, 739, 787, 847, 854, 872], "hz": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 67, 70, 71, 72, 75, 79, 80, 81, 82, 86, 88, 91, 92, 93, 97, 102, 105, 106, 107, 111, 112, 113, 119, 121, 125, 131, 135, 136, 140, 141, 143, 145, 150, 165, 166, 167, 168, 171, 179, 182, 183, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 220, 225, 226, 227, 228, 236, 237, 241, 253, 261, 262, 263, 264, 407, 410, 416, 440, 441, 443, 444, 446, 473, 474, 525, 526, 552, 557, 560, 564, 565, 571, 573, 576, 580, 584, 658, 678, 692, 694, 695, 696, 699, 702, 708, 710, 716, 718, 719, 720, 722, 723, 769, 771, 780, 787, 792, 793, 848, 857, 858], "upper": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 34, 39, 42, 61, 69, 71, 75, 80, 82, 86, 111, 112, 113, 118, 119, 125, 131, 133, 135, 140, 141, 143, 145, 158, 165, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 228, 237, 238, 241, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 279, 405, 407, 410, 412, 431, 441, 443, 449, 473, 474, 525, 526, 551, 552, 557, 584, 671, 678, 679, 680, 681, 682, 683, 692, 693, 694, 695, 696, 708, 710, 711, 718, 756, 758, 763, 771, 777, 778, 782, 791, 793, 794, 797, 799, 801, 802, 803, 872], "7921": 1, "601": [1, 5, 139, 148, 193, 197, 202, 212, 228], "parallel": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 31, 32, 33, 34, 41, 42, 45, 50, 65, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 220, 225, 226, 227, 228, 237, 241, 253, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 407, 408, 410, 411, 415, 416, 418, 421, 422, 443, 444, 445, 448, 450, 461, 463, 468, 470, 471, 473, 474, 511, 514, 515, 525, 526, 530, 535, 536, 557, 564, 565, 588, 632, 635, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 724, 771, 774, 793, 839, 851, 854, 860, 872], "n_job": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 94, 97, 98, 101, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 220, 223, 225, 226, 227, 228, 231, 232, 233, 237, 253, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 407, 408, 410, 411, 415, 416, 417, 418, 421, 422, 443, 444, 445, 448, 461, 463, 473, 474, 511, 514, 515, 525, 526, 535, 536, 557, 564, 565, 632, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 724, 771, 774, 793, 829, 851, 872], "backend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 133, 135, 140, 143, 145, 149, 150, 155, 157, 158, 159, 165, 170, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 220, 225, 226, 227, 228, 237, 261, 262, 268, 269, 272, 275, 276, 277, 464, 473, 474, 552, 691, 739, 746, 748, 749, 750, 751, 769, 786, 792, 797, 802, 804, 808, 809, 810, 811, 829, 830, 835, 851, 860, 872], "sequentialbackend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 220, 225, 226, 227, 228, 237], "concurr": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 220, 225, 226, 227, 228, 237], "worker": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 220, 225, 226, 227, 228, 237, 860], "done": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 69, 71, 72, 75, 77, 78, 80, 81, 82, 85, 86, 88, 90, 91, 92, 93, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 117, 119, 122, 129, 131, 132, 133, 134, 135, 139, 140, 142, 143, 145, 149, 150, 154, 155, 157, 158, 159, 160, 161, 165, 166, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 238, 254, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 294, 295, 317, 356, 418, 468, 470, 471, 473, 474, 519, 521, 522, 523, 552, 564, 565, 567, 569, 678, 692, 693, 695, 717, 719, 720, 722, 723, 737, 739, 742, 755, 763, 793, 827, 831, 836, 837, 847, 851, 853, 854, 860, 872], "out": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 69, 71, 72, 73, 75, 77, 78, 80, 81, 82, 85, 86, 88, 90, 92, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 118, 119, 121, 122, 125, 129, 131, 133, 135, 136, 139, 140, 142, 143, 145, 149, 150, 155, 157, 158, 159, 165, 166, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 215, 220, 223, 225, 226, 227, 228, 237, 238, 253, 258, 261, 262, 263, 264, 266, 270, 285, 299, 335, 352, 353, 354, 405, 407, 412, 416, 441, 443, 473, 474, 481, 495, 518, 526, 551, 552, 553, 566, 588, 594, 596, 684, 692, 694, 696, 719, 720, 727, 756, 763, 771, 775, 778, 782, 783, 791, 794, 799, 801, 829, 830, 831, 837, 848, 849, 851, 854, 857, 858, 872], "elaps": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 220, 225, 226, 227, 228, 237], "remain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 71, 72, 74, 75, 77, 80, 81, 82, 85, 86, 88, 90, 92, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 129, 131, 135, 136, 140, 143, 145, 149, 150, 155, 157, 158, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 220, 225, 226, 227, 228, 237, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 428, 448, 449, 468, 470, 471, 473, 474, 475, 530, 552, 633, 680, 692, 694, 695, 719, 720, 722, 723, 779, 839, 847, 857, 860, 872], "299": [1, 5, 34, 100, 107, 139, 168, 183, 223, 228, 236], "finish": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 71, 72, 75, 77, 80, 81, 82, 85, 86, 88, 93, 97, 98, 105, 107, 108, 110, 111, 112, 113, 117, 119, 122, 131, 133, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 205, 206, 208, 209, 214, 220, 225, 226, 227, 228, 237, 849, 872], "66": [1, 12, 16, 19, 21, 33, 35, 40, 41, 45, 56, 79, 101, 104, 106, 112, 143, 145, 157, 168, 175, 180, 183, 190, 194, 203, 207, 223, 224, 227, 228, 241, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 468, 470, 471, 530, 552, 779, 872], "id": [1, 5, 12, 21, 32, 33, 34, 42, 45, 46, 49, 68, 70, 71, 72, 78, 79, 80, 88, 91, 92, 93, 97, 105, 106, 108, 110, 111, 139, 140, 141, 145, 148, 151, 161, 165, 167, 168, 170, 171, 176, 179, 181, 182, 184, 190, 194, 198, 201, 202, 203, 205, 218, 219, 220, 225, 237, 253, 256, 261, 262, 263, 266, 268, 269, 272, 274, 275, 276, 277, 280, 294, 295, 310, 351, 372, 421, 427, 429, 431, 433, 434, 446, 458, 473, 474, 512, 513, 517, 547, 553, 564, 565, 574, 597, 604, 606, 607, 613, 641, 694, 695, 739, 772, 792, 797, 802, 817, 831, 851, 854, 872], "Not": [1, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 68, 70, 71, 72, 73, 75, 78, 79, 80, 81, 86, 88, 91, 92, 93, 94, 95, 98, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 119, 125, 126, 130, 134, 135, 136, 139, 140, 141, 142, 144, 145, 148, 150, 151, 165, 166, 167, 168, 170, 171, 176, 179, 181, 182, 183, 184, 190, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 219, 220, 225, 226, 227, 228, 231, 233, 237, 263, 264, 269, 275, 276, 277, 413, 416, 440, 449, 553, 691, 692, 739, 775, 803, 830, 854, 860], "metadata": [1, 4, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 68, 70, 71, 72, 73, 78, 81, 86, 88, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 119, 126, 130, 134, 135, 136, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 160, 164, 165, 171, 176, 179, 181, 182, 183, 184, 187, 188, 189, 190, 197, 198, 199, 201, 202, 203, 205, 209, 212, 218, 219, 220, 224, 225, 226, 227, 228, 231, 233, 236, 237, 256, 261, 262, 263, 264, 265, 266, 350, 429, 434, 473, 474, 479, 603, 623, 692, 694, 695, 696, 763, 827, 848, 872], "33": [1, 8, 12, 13, 19, 21, 28, 33, 34, 35, 39, 40, 41, 45, 47, 55, 56, 75, 79, 101, 106, 107, 112, 113, 140, 143, 150, 168, 169, 176, 182, 186, 194, 201, 203, 207, 223, 224, 225, 227, 228, 232, 233, 261, 262, 263, 264, 332, 446, 473, 474, 516, 793, 854, 872], "interv": [1, 10, 11, 28, 32, 33, 34, 38, 45, 46, 49, 61, 68, 69, 70, 71, 78, 81, 88, 91, 92, 93, 94, 95, 98, 101, 102, 105, 108, 110, 111, 115, 125, 126, 130, 139, 141, 143, 144, 148, 149, 150, 151, 165, 171, 175, 176, 177, 179, 181, 182, 183, 184, 190, 198, 199, 201, 202, 205, 208, 209, 219, 220, 225, 226, 227, 231, 233, 237, 253, 255, 256, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 284, 343, 356, 429, 525, 535, 536, 552, 568, 569, 574, 610, 611, 642, 644, 669, 671, 692, 694, 695, 696, 705, 763, 784, 799, 848, 858, 872], "mode": [1, 5, 8, 9, 11, 22, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 77, 78, 81, 84, 85, 91, 92, 93, 94, 95, 98, 101, 102, 105, 108, 110, 111, 112, 115, 117, 118, 125, 126, 129, 130, 135, 139, 140, 141, 143, 144, 148, 150, 151, 157, 158, 160, 165, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 214, 215, 219, 225, 226, 227, 228, 231, 233, 237, 238, 241, 253, 258, 259, 261, 262, 263, 264, 268, 269, 270, 271, 272, 275, 276, 277, 284, 294, 295, 338, 351, 355, 356, 357, 361, 362, 365, 366, 367, 404, 405, 411, 412, 439, 443, 444, 445, 464, 468, 473, 474, 511, 528, 529, 551, 552, 574, 580, 633, 655, 658, 687, 692, 693, 694, 695, 696, 717, 739, 765, 767, 769, 770, 771, 775, 778, 781, 782, 786, 791, 792, 793, 794, 797, 798, 799, 802, 803, 808, 831, 839, 860, 872], "mean": [1, 4, 8, 9, 10, 11, 14, 16, 19, 21, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 77, 78, 82, 84, 85, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 108, 110, 111, 112, 115, 117, 118, 125, 126, 130, 136, 139, 140, 141, 142, 143, 144, 148, 149, 151, 155, 156, 157, 159, 165, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 212, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 233, 236, 237, 238, 255, 256, 258, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 274, 275, 276, 277, 284, 287, 294, 295, 311, 315, 351, 356, 405, 411, 412, 414, 417, 426, 438, 439, 447, 464, 468, 470, 471, 473, 474, 475, 481, 488, 494, 505, 511, 519, 525, 528, 529, 530, 535, 536, 551, 552, 556, 559, 562, 563, 566, 568, 571, 573, 578, 580, 589, 597, 610, 611, 637, 644, 645, 646, 655, 656, 658, 671, 674, 679, 680, 681, 682, 683, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 708, 711, 718, 719, 720, 722, 723, 739, 763, 765, 769, 770, 771, 773, 778, 782, 791, 792, 793, 794, 797, 799, 801, 831, 836, 851, 853, 854, 857, 872], "activ": [1, 4, 5, 8, 11, 12, 16, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 80, 81, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 122, 128, 130, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 157, 158, 161, 165, 166, 167, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 241, 254, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 294, 295, 321, 345, 431, 434, 439, 446, 448, 452, 468, 470, 471, 472, 473, 474, 478, 489, 493, 505, 508, 518, 519, 520, 521, 522, 523, 530, 533, 549, 557, 567, 584, 610, 612, 614, 615, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 657, 664, 667, 684, 687, 692, 694, 695, 696, 708, 718, 719, 722, 748, 758, 760, 767, 798, 803, 827, 829, 830, 831, 832, 834, 835, 838, 839, 847, 848, 851, 853, 854, 857, 860, 872], "projector": [1, 2, 4, 5, 8, 9, 16, 18, 21, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 67, 68, 70, 72, 75, 81, 88, 90, 91, 92, 97, 99, 101, 107, 117, 119, 125, 130, 139, 140, 145, 148, 149, 150, 151, 161, 164, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 201, 202, 203, 209, 210, 211, 212, 219, 220, 224, 225, 226, 227, 228, 231, 233, 253, 261, 262, 263, 264, 266, 270, 271, 294, 295, 351, 352, 353, 354, 355, 356, 365, 366, 367, 405, 412, 435, 436, 437, 438, 448, 449, 468, 470, 471, 473, 474, 493, 519, 530, 552, 564, 565, 580, 610, 618, 637, 693, 697, 698, 699, 700, 701, 702, 703, 769, 779, 786, 790, 791, 792, 811, 823, 827, 847, 849, 851, 854, 872], "n_channel": [1, 16, 18, 19, 28, 31, 35, 42, 51, 58, 59, 63, 65, 68, 69, 70, 73, 74, 75, 79, 81, 82, 88, 97, 101, 112, 117, 125, 130, 139, 140, 141, 142, 148, 149, 150, 158, 161, 165, 166, 167, 171, 175, 176, 179, 180, 181, 189, 194, 197, 198, 201, 202, 203, 204, 205, 206, 209, 212, 215, 218, 220, 225, 226, 227, 228, 231, 233, 238, 253, 256, 258, 260, 261, 262, 263, 264, 265, 266, 294, 295, 310, 311, 315, 326, 365, 405, 406, 407, 410, 411, 412, 413, 414, 416, 418, 419, 421, 443, 444, 473, 474, 551, 552, 553, 557, 560, 660, 677, 678, 692, 693, 694, 695, 696, 697, 698, 699, 719, 720, 721, 756, 759, 763, 769, 770, 771, 778, 792, 794, 799, 801, 809, 827, 872], "No": [1, 2, 4, 5, 8, 9, 12, 16, 18, 21, 34, 41, 46, 48, 50, 54, 55, 73, 78, 81, 86, 88, 99, 106, 107, 110, 111, 112, 114, 115, 119, 125, 126, 134, 135, 136, 139, 140, 141, 142, 145, 148, 150, 155, 165, 170, 171, 177, 183, 184, 189, 190, 194, 197, 200, 202, 203, 205, 208, 209, 218, 220, 223, 224, 228, 237, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 382, 406, 421, 468, 470, 471, 473, 474, 519, 521, 522, 523, 656, 793, 830, 831, 848, 853, 857], "gradiomet": [1, 22, 32, 34, 35, 46, 59, 70, 72, 75, 78, 80, 85, 91, 98, 101, 106, 107, 108, 109, 111, 115, 117, 118, 141, 144, 145, 149, 161, 165, 166, 167, 168, 179, 182, 183, 187, 190, 197, 198, 199, 201, 203, 204, 205, 207, 208, 212, 213, 214, 215, 218, 220, 223, 225, 226, 227, 237, 253, 256, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 294, 295, 351, 352, 353, 354, 355, 356, 365, 366, 367, 405, 412, 426, 448, 449, 468, 470, 471, 473, 474, 508, 530, 549, 550, 551, 552, 562, 563, 564, 565, 566, 567, 568, 569, 571, 580, 591, 678, 692, 694, 695, 696, 756, 762, 763, 769, 770, 771, 773, 775, 777, 778, 779, 782, 791, 792, 794, 799, 800, 801, 827, 847, 851, 854, 857, 872], "forc": [1, 4, 145, 160, 165, 177, 190, 199, 253, 261, 262, 263, 264, 305, 316, 361, 371, 373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 473, 474, 496, 519, 606, 692, 694, 695, 696, 739, 829, 831, 848, 872], "n_grad": [1, 190, 205, 253, 352, 353, 354, 564, 565], "n_eeg": [1, 145, 190, 205, 253, 352, 353, 354, 564, 565], "axial": [1, 33, 47, 80, 82, 90, 107, 109, 129, 134, 141, 145, 159, 171, 179, 182, 190, 197, 204, 205, 223, 259, 276, 277, 739, 757, 767, 854], "100": [1, 2, 5, 10, 11, 13, 16, 19, 22, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 73, 74, 77, 79, 81, 84, 85, 88, 90, 93, 94, 99, 101, 102, 106, 107, 109, 110, 112, 113, 114, 117, 118, 121, 123, 125, 133, 135, 136, 139, 140, 142, 143, 144, 145, 148, 150, 155, 157, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 183, 189, 190, 193, 194, 199, 200, 201, 203, 205, 207, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 241, 253, 261, 262, 263, 264, 271, 357, 426, 445, 470, 471, 473, 474, 495, 563, 571, 580, 658, 678, 694, 696, 721, 724, 729, 739, 769, 787, 792, 812, 848, 853, 857, 872], "pca": [1, 5, 11, 13, 15, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 73, 75, 77, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 219, 220, 225, 226, 227, 228, 231, 233, 261, 263, 264, 266, 269, 275, 277, 294, 295, 351, 365, 369, 419, 468, 471, 473, 525, 526, 535, 536, 549, 552, 607, 783, 847, 858, 872], "01": [1, 6, 8, 11, 12, 13, 19, 20, 21, 24, 32, 33, 34, 35, 46, 59, 66, 70, 72, 75, 77, 81, 82, 83, 88, 89, 90, 91, 101, 106, 107, 109, 110, 111, 118, 119, 121, 122, 125, 128, 129, 136, 138, 140, 141, 145, 149, 150, 157, 158, 163, 165, 166, 167, 168, 169, 171, 173, 179, 180, 182, 184, 186, 190, 192, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 237, 238, 240, 241, 252, 253, 255, 261, 262, 338, 340, 344, 376, 398, 399, 413, 473, 474, 484, 566, 571, 574, 578, 585, 589, 687, 848], "02": [1, 2, 5, 11, 13, 19, 33, 34, 35, 56, 63, 66, 80, 82, 83, 90, 101, 104, 106, 107, 109, 112, 118, 121, 124, 128, 129, 135, 138, 141, 145, 147, 149, 153, 156, 159, 163, 169, 171, 173, 179, 182, 193, 194, 200, 204, 205, 206, 207, 209, 214, 223, 224, 225, 227, 228, 230, 233, 238, 241, 252, 253, 261, 262, 318, 468, 471, 473, 474, 484, 708, 718, 719, 721, 722, 724], "creat": [1, 2, 4, 5, 8, 9, 11, 15, 16, 18, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 72, 74, 78, 81, 84, 86, 90, 91, 93, 101, 102, 105, 106, 107, 108, 110, 111, 112, 115, 118, 119, 121, 123, 125, 126, 130, 132, 133, 134, 135, 140, 141, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 198, 199, 200, 201, 203, 204, 212, 215, 220, 221, 222, 224, 226, 228, 231, 233, 236, 237, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 285, 294, 295, 299, 304, 305, 306, 309, 323, 351, 352, 353, 357, 362, 368, 369, 405, 412, 418, 422, 427, 429, 440, 441, 446, 473, 474, 485, 490, 495, 508, 509, 510, 515, 516, 518, 541, 551, 552, 554, 555, 557, 561, 564, 565, 568, 569, 572, 577, 604, 606, 630, 631, 632, 634, 637, 641, 642, 646, 669, 672, 678, 687, 692, 693, 694, 695, 696, 705, 717, 719, 720, 722, 723, 727, 739, 742, 744, 747, 752, 755, 756, 762, 763, 765, 767, 770, 771, 774, 775, 776, 777, 778, 782, 784, 787, 790, 791, 792, 793, 794, 795, 797, 799, 801, 802, 810, 811, 822, 827, 829, 835, 839, 848, 852, 857, 860, 862, 872], "an": [1, 4, 5, 7, 11, 12, 15, 18, 19, 21, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 63, 67, 68, 70, 72, 73, 77, 80, 81, 82, 86, 88, 90, 91, 92, 93, 99, 102, 105, 106, 107, 108, 109, 110, 112, 113, 117, 118, 119, 120, 125, 126, 127, 128, 130, 133, 134, 135, 136, 139, 140, 143, 145, 148, 149, 150, 151, 152, 154, 155, 157, 159, 161, 162, 163, 164, 165, 166, 169, 170, 174, 175, 176, 177, 178, 180, 182, 185, 186, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 236, 237, 239, 240, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 288, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 309, 311, 313, 314, 315, 318, 321, 322, 325, 327, 336, 344, 345, 346, 351, 355, 357, 358, 360, 362, 365, 366, 368, 369, 381, 384, 385, 389, 404, 405, 411, 412, 413, 417, 420, 422, 423, 424, 427, 429, 430, 432, 434, 439, 440, 441, 444, 445, 446, 447, 448, 452, 453, 455, 460, 464, 468, 470, 471, 472, 473, 474, 475, 478, 480, 482, 483, 488, 489, 490, 491, 493, 496, 498, 499, 504, 505, 507, 508, 511, 514, 515, 516, 518, 519, 521, 525, 526, 528, 529, 530, 532, 533, 534, 537, 539, 541, 543, 545, 548, 549, 551, 552, 553, 554, 555, 556, 560, 562, 564, 565, 566, 568, 569, 571, 573, 578, 579, 580, 581, 587, 590, 593, 598, 599, 600, 601, 602, 605, 607, 609, 610, 612, 620, 622, 626, 627, 629, 631, 632, 634, 637, 640, 641, 642, 645, 648, 652, 657, 658, 664, 667, 669, 672, 673, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 704, 705, 711, 712, 722, 723, 726, 727, 729, 731, 737, 739, 740, 748, 752, 754, 755, 756, 760, 761, 763, 765, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 805, 807, 809, 812, 818, 819, 820, 827, 829, 830, 831, 835, 836, 837, 838, 843, 848, 849, 850, 851, 853, 854, 855, 857, 858, 860, 872], "oper": [1, 5, 11, 15, 18, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 70, 72, 82, 86, 88, 90, 91, 93, 102, 105, 106, 107, 108, 119, 122, 130, 133, 139, 140, 141, 144, 145, 148, 150, 151, 154, 155, 161, 162, 163, 164, 165, 166, 168, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 190, 194, 198, 199, 200, 201, 203, 204, 205, 208, 212, 219, 220, 225, 226, 228, 231, 233, 241, 254, 255, 258, 261, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 279, 281, 282, 294, 295, 297, 299, 309, 313, 314, 325, 331, 344, 350, 369, 370, 377, 384, 406, 411, 414, 421, 426, 427, 430, 443, 444, 445, 446, 450, 451, 452, 468, 469, 470, 471, 473, 474, 475, 481, 488, 505, 514, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 545, 550, 552, 555, 557, 574, 578, 594, 597, 599, 607, 612, 622, 633, 634, 644, 645, 646, 653, 655, 656, 657, 658, 671, 679, 680, 681, 682, 683, 686, 689, 692, 693, 719, 720, 721, 722, 723, 724, 726, 755, 796, 804, 807, 808, 819, 827, 829, 831, 837, 839, 848, 851, 857, 858, 870, 872], "subspac": [1, 11, 15, 18, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 86, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 119, 130, 139, 140, 141, 144, 145, 148, 150, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 198, 199, 201, 203, 204, 205, 208, 219, 228, 231, 233, 253, 567, 580, 827], "dimens": [1, 11, 15, 18, 19, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 70, 72, 86, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 119, 125, 130, 139, 140, 141, 144, 145, 148, 150, 151, 159, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 193, 194, 198, 199, 201, 203, 204, 205, 207, 219, 220, 223, 225, 226, 227, 228, 231, 232, 233, 237, 238, 241, 258, 261, 262, 263, 264, 268, 269, 270, 271, 272, 274, 275, 276, 277, 284, 310, 357, 405, 408, 411, 412, 415, 416, 418, 420, 444, 445, 468, 470, 471, 473, 474, 525, 526, 528, 529, 535, 536, 551, 552, 566, 672, 673, 677, 679, 680, 682, 683, 692, 694, 695, 696, 710, 711, 721, 729, 739, 748, 756, 771, 778, 782, 791, 792, 794, 799, 801, 827, 847, 854, 857, 872], "fran\u00e7oi": [1, 70, 77, 107, 182, 183, 190, 198, 241, 552, 561, 854], "tadel": [1, 107, 182, 183, 190, 241], "sylvain": [1, 107, 182, 183, 190, 241], "baillet": [1, 107, 182, 183, 190, 241], "john": [1, 18, 19, 51, 67, 81, 107, 124, 177, 179, 182, 183, 190, 241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 383, 384, 409, 411, 423, 468, 473, 474, 519, 530, 552, 567, 584, 649, 654, 692, 695, 848, 854, 872], "c": [1, 4, 10, 11, 12, 19, 22, 44, 51, 69, 73, 94, 107, 110, 113, 119, 124, 133, 136, 160, 170, 175, 179, 182, 183, 187, 190, 193, 194, 204, 225, 226, 227, 228, 238, 241, 253, 254, 267, 272, 273, 274, 297, 332, 351, 357, 383, 398, 399, 411, 412, 446, 449, 468, 473, 474, 509, 515, 527, 552, 560, 589, 607, 652, 657, 721, 724, 739, 829, 830, 831, 835, 836, 838, 843, 846, 847, 848, 854, 855, 857, 860, 861, 872], "mosher": [1, 51, 107, 179, 182, 183, 190, 241, 297, 854], "dimitrio": [1, 10, 107, 182, 183, 190, 241, 848], "pantazi": [1, 10, 107, 182, 183, 190, 241, 848], "richard": [1, 51, 107, 182, 183, 190, 207, 237, 241, 384, 552, 560, 674, 848, 854, 859, 872], "leahi": [1, 51, 107, 182, 183, 190, 241, 297, 854], "user": [1, 45, 74, 92, 107, 133, 141, 155, 164, 166, 170, 171, 182, 183, 188, 189, 190, 199, 200, 212, 241, 254, 256, 261, 262, 263, 264, 265, 266, 268, 269, 272, 274, 275, 276, 277, 373, 374, 375, 376, 378, 379, 381, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 426, 434, 465, 472, 473, 474, 490, 552, 571, 587, 638, 690, 691, 692, 695, 756, 769, 776, 786, 792, 801, 829, 831, 833, 835, 836, 838, 842, 847, 848, 850, 851, 853, 855, 856, 872], "friendli": [1, 107, 182, 183, 190, 241], "applic": [1, 15, 69, 72, 86, 107, 148, 161, 169, 177, 182, 183, 190, 194, 200, 203, 204, 205, 208, 238, 241, 256, 261, 262, 263, 264, 407, 412, 416, 429, 441, 443, 444, 457, 473, 474, 496, 511, 512, 553, 580, 603, 606, 694, 696, 739, 771, 792, 812, 831, 834, 838, 843, 851, 854, 872], "analysi": [1, 3, 6, 8, 13, 15, 17, 20, 42, 43, 44, 69, 73, 81, 86, 94, 95, 99, 107, 125, 133, 139, 141, 143, 144, 152, 153, 154, 159, 160, 166, 167, 170, 171, 172, 173, 177, 182, 183, 187, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 212, 213, 215, 220, 223, 224, 225, 227, 228, 236, 240, 241, 261, 262, 263, 264, 266, 268, 269, 271, 272, 273, 275, 276, 277, 294, 295, 309, 311, 325, 350, 351, 357, 360, 369, 399, 405, 413, 419, 429, 434, 446, 462, 468, 473, 474, 483, 518, 519, 533, 543, 549, 552, 553, 560, 566, 577, 578, 607, 637, 641, 645, 652, 673, 674, 677, 679, 692, 694, 695, 696, 704, 706, 708, 710, 718, 719, 720, 721, 722, 723, 724, 739, 763, 772, 801, 811, 827, 830, 832, 834, 838, 843, 846, 847, 848, 853, 854, 855, 860, 862, 869, 870, 872], "intellig": [1, 107, 182, 183, 190, 193, 241, 411, 445], "neurosci": [1, 4, 10, 16, 19, 43, 69, 73, 107, 111, 150, 182, 183, 190, 193, 194, 200, 228, 241, 273, 357, 406, 411, 421, 552, 557, 560, 652, 679, 680, 682, 683, 708, 718, 719, 721, 722, 724, 846, 848, 853], "2011": [1, 15, 21, 32, 34, 59, 86, 107, 150, 168, 182, 183, 188, 190, 193, 200, 220, 223, 241, 294, 413, 471, 519, 553, 685, 686, 854], "13": [1, 9, 10, 11, 12, 13, 16, 19, 21, 22, 25, 26, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 69, 73, 75, 78, 79, 81, 82, 91, 92, 94, 95, 98, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 115, 118, 119, 122, 130, 132, 135, 141, 143, 144, 145, 148, 149, 151, 157, 161, 165, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 199, 200, 202, 205, 207, 208, 209, 211, 212, 218, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 237, 238, 240, 241, 256, 259, 260, 261, 262, 263, 264, 267, 268, 269, 272, 274, 275, 276, 277, 279, 332, 356, 376, 398, 416, 426, 440, 441, 443, 444, 446, 473, 474, 552, 568, 569, 580, 607, 623, 626, 655, 658, 692, 695, 722, 723, 773, 784, 795, 825, 827, 846, 847, 854], "doi": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 69, 70, 73, 74, 77, 81, 82, 86, 92, 99, 107, 110, 111, 115, 117, 119, 124, 127, 133, 136, 140, 143, 150, 154, 156, 161, 175, 177, 179, 182, 183, 190, 193, 194, 198, 200, 202, 203, 204, 205, 206, 208, 220, 223, 224, 228, 236, 241, 261, 262, 263, 264, 267, 272, 273, 287, 294, 295, 297, 351, 357, 376, 383, 384, 388, 389, 398, 399, 405, 406, 409, 411, 412, 413, 421, 423, 429, 468, 470, 471, 473, 474, 519, 520, 530, 534, 551, 552, 553, 557, 560, 561, 563, 566, 567, 580, 584, 587, 588, 595, 637, 645, 649, 652, 654, 657, 676, 678, 679, 680, 681, 682, 683, 685, 686, 694, 696, 704, 706, 708, 710, 711, 718, 719, 721, 722, 724, 756, 846, 847, 848, 851, 854], "10": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 28, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55, 58, 59, 60, 63, 65, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 88, 89, 91, 92, 93, 99, 101, 102, 106, 107, 108, 110, 111, 112, 113, 115, 117, 118, 119, 124, 125, 126, 127, 128, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 150, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 230, 231, 232, 233, 236, 237, 238, 241, 255, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 287, 294, 295, 297, 306, 309, 321, 327, 332, 337, 341, 344, 347, 348, 349, 351, 357, 362, 376, 383, 384, 388, 389, 398, 399, 405, 406, 407, 409, 411, 412, 413, 416, 421, 423, 426, 429, 440, 441, 443, 444, 449, 468, 470, 471, 473, 474, 496, 509, 510, 519, 520, 530, 534, 539, 551, 552, 553, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 573, 576, 577, 580, 584, 587, 588, 595, 606, 628, 637, 645, 649, 652, 654, 656, 657, 658, 673, 675, 676, 678, 679, 680, 681, 682, 683, 685, 686, 692, 694, 695, 696, 704, 706, 708, 710, 711, 718, 719, 720, 721, 722, 723, 724, 729, 739, 744, 754, 756, 769, 771, 778, 780, 781, 786, 787, 792, 797, 802, 830, 831, 834, 837, 846, 847, 848, 851, 854, 857, 860], "1155": [1, 107, 182, 183, 190, 241], "879716": [1, 107, 182, 183, 190, 241], "total": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 240, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 355, 370, 422, 473, 474, 554, 597, 687, 694, 696, 771, 797, 802, 854, 857, 872], "run": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 253, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 300, 318, 344, 351, 352, 354, 356, 371, 376, 407, 408, 411, 415, 416, 418, 421, 422, 443, 444, 445, 448, 461, 463, 473, 474, 505, 511, 514, 515, 525, 526, 535, 536, 552, 557, 564, 565, 566, 571, 572, 575, 578, 581, 597, 632, 640, 643, 644, 645, 646, 655, 656, 657, 658, 679, 680, 681, 682, 683, 691, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 724, 739, 762, 769, 771, 774, 778, 781, 782, 786, 792, 793, 829, 830, 834, 835, 836, 837, 839, 848, 853, 854, 855, 858, 872], "script": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 271, 473, 474, 792, 831, 832, 834, 836, 837, 838, 848, 851, 852, 854, 857, 860, 862, 872], "minut": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 261, 262, 273, 279, 428, 473, 474, 552, 644, 645, 786, 792, 835], "9": [1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 19, 20, 21, 22, 24, 26, 28, 29, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 68, 69, 70, 72, 75, 77, 78, 79, 81, 83, 84, 85, 88, 90, 91, 92, 93, 94, 95, 99, 101, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 122, 125, 126, 128, 130, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 147, 149, 150, 153, 155, 157, 158, 161, 163, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 241, 259, 261, 262, 263, 264, 268, 273, 274, 276, 277, 294, 295, 297, 309, 318, 332, 350, 351, 357, 358, 376, 399, 448, 458, 473, 474, 493, 508, 516, 527, 535, 551, 552, 560, 578, 595, 606, 634, 637, 674, 691, 692, 694, 695, 696, 704, 714, 723, 724, 725, 739, 740, 742, 756, 766, 767, 772, 791, 796, 829, 830, 836, 837, 847, 848, 851, 854, 857], "085": [1, 6, 179], "second": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 281, 282, 284, 293, 294, 295, 319, 320, 338, 340, 356, 405, 411, 412, 417, 429, 431, 434, 439, 440, 442, 446, 447, 471, 472, 473, 474, 493, 495, 507, 512, 513, 522, 525, 551, 552, 554, 555, 556, 557, 560, 562, 564, 565, 568, 571, 572, 573, 574, 575, 580, 588, 594, 598, 607, 610, 642, 658, 678, 679, 680, 682, 683, 684, 686, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 720, 723, 739, 747, 763, 770, 771, 772, 775, 778, 782, 783, 784, 786, 791, 792, 793, 794, 797, 799, 802, 817, 827, 831, 837, 847, 848, 851, 854, 857, 872], "estim": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 242, 253, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 281, 282, 286, 287, 288, 289, 291, 292, 294, 295, 309, 317, 325, 338, 340, 344, 351, 355, 356, 357, 362, 363, 364, 365, 366, 367, 369, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 426, 439, 440, 442, 444, 445, 446, 448, 449, 452, 468, 469, 470, 471, 473, 474, 478, 505, 507, 508, 514, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 539, 552, 553, 557, 561, 562, 568, 572, 575, 578, 580, 592, 594, 595, 610, 612, 615, 620, 621, 622, 632, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 657, 659, 673, 677, 678, 684, 685, 687, 688, 694, 696, 697, 698, 699, 700, 701, 702, 711, 719, 720, 722, 723, 739, 755, 756, 762, 763, 764, 771, 779, 786, 793, 796, 797, 798, 801, 802, 803, 827, 832, 838, 840, 848, 851, 857, 860, 862, 870, 872], "usag": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 253, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 414, 418, 473, 474, 580, 679, 680, 682, 683, 692, 694, 695, 696, 698, 701, 717, 719, 720, 721, 722, 723, 724, 827, 850, 851, 854, 857, 872], "491": [1, 6, 223, 228], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 240, 261, 262, 271, 473, 474, 769, 792, 837], "python": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 164, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 193, 194, 195, 197, 199, 201, 202, 205, 206, 207, 209, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 252, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 274, 275, 276, 277, 294, 295, 311, 314, 320, 325, 326, 329, 335, 350, 362, 369, 372, 373, 374, 375, 376, 378, 379, 381, 382, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 424, 430, 434, 438, 446, 453, 454, 455, 457, 464, 473, 474, 488, 496, 510, 518, 519, 533, 546, 552, 568, 571, 600, 629, 631, 636, 638, 639, 691, 692, 694, 695, 719, 720, 722, 723, 734, 735, 763, 769, 772, 786, 792, 800, 820, 822, 827, 830, 838, 842, 847, 848, 852, 853, 854, 855, 858, 859, 870, 872], "brainstorm_data": [1, 6], "py": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 240, 829, 831, 851, 872], "jupyt": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 804, 851, 853, 855, 872], "notebook": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 804, 810, 835, 851, 855, 860, 872], "ipynb": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238], "galleri": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 831], "gener": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 193, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 288, 289, 292, 305, 318, 323, 324, 325, 344, 350, 351, 376, 405, 407, 408, 411, 412, 415, 416, 422, 429, 434, 439, 441, 443, 444, 446, 463, 469, 470, 473, 474, 478, 479, 490, 493, 505, 508, 515, 518, 519, 521, 523, 526, 530, 533, 549, 550, 551, 552, 553, 555, 564, 568, 569, 572, 574, 575, 578, 580, 597, 601, 607, 610, 612, 614, 615, 617, 618, 640, 641, 642, 644, 645, 646, 655, 656, 657, 658, 659, 672, 676, 677, 679, 680, 681, 682, 683, 688, 692, 694, 695, 696, 704, 705, 725, 736, 739, 740, 742, 752, 755, 759, 763, 770, 778, 782, 783, 793, 794, 797, 798, 807, 822, 827, 837, 838, 839, 843, 846, 847, 848, 849, 850, 852, 853, 855, 856, 857, 859, 860, 872], "sphinx": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 735, 831], "thi": [2, 4, 5, 7, 9, 10, 13, 14, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55, 57, 58, 59, 60, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 85, 86, 88, 91, 92, 93, 94, 95, 97, 99, 101, 102, 107, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 285, 286, 288, 289, 292, 294, 295, 299, 300, 302, 303, 304, 305, 306, 309, 310, 313, 314, 315, 316, 317, 318, 321, 322, 323, 327, 328, 329, 334, 338, 339, 342, 344, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 364, 365, 366, 367, 368, 371, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 454, 455, 457, 458, 461, 463, 464, 466, 467, 468, 470, 471, 472, 473, 474, 475, 479, 480, 481, 482, 484, 488, 489, 490, 492, 494, 495, 498, 500, 502, 503, 505, 507, 512, 513, 515, 518, 519, 520, 521, 522, 523, 525, 526, 528, 529, 530, 536, 538, 539, 543, 547, 549, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 577, 578, 579, 580, 581, 584, 587, 588, 594, 597, 598, 600, 603, 604, 605, 607, 609, 610, 614, 615, 620, 623, 629, 631, 634, 635, 637, 639, 640, 641, 644, 645, 646, 653, 655, 656, 657, 658, 659, 662, 663, 666, 669, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 691, 692, 693, 694, 695, 696, 699, 704, 708, 710, 718, 720, 722, 723, 727, 729, 733, 734, 736, 737, 739, 741, 742, 744, 748, 749, 752, 754, 755, 756, 757, 760, 761, 765, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 804, 805, 808, 809, 812, 820, 822, 827, 829, 830, 831, 834, 835, 836, 837, 838, 839, 847, 848, 849, 851, 853, 854, 855, 857, 858, 860, 862, 872], "look": [2, 4, 7, 8, 19, 21, 27, 32, 33, 42, 55, 58, 60, 67, 69, 70, 81, 82, 91, 106, 109, 110, 111, 118, 119, 120, 125, 131, 133, 134, 140, 143, 144, 149, 150, 155, 157, 159, 160, 161, 165, 167, 171, 174, 176, 177, 178, 179, 181, 182, 187, 188, 190, 197, 200, 201, 202, 204, 205, 206, 208, 209, 212, 220, 223, 228, 237, 238, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 297, 300, 306, 373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 446, 453, 455, 473, 474, 501, 552, 554, 598, 692, 739, 755, 758, 785, 795, 797, 802, 803, 812, 829, 830, 831, 852, 853, 854, 855, 857, 872], "high": [2, 4, 7, 10, 12, 22, 38, 40, 59, 72, 73, 80, 81, 82, 86, 92, 97, 117, 133, 140, 141, 142, 150, 155, 156, 159, 166, 187, 189, 190, 194, 197, 201, 203, 204, 205, 208, 209, 225, 226, 227, 228, 232, 238, 241, 261, 262, 263, 264, 274, 279, 351, 352, 353, 354, 356, 388, 407, 416, 440, 441, 443, 464, 473, 474, 496, 519, 552, 557, 560, 564, 565, 568, 569, 572, 573, 575, 576, 580, 584, 645, 678, 739, 838, 856, 872], "frequenc": [2, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 36, 42, 56, 67, 70, 71, 72, 75, 79, 80, 81, 82, 86, 88, 91, 92, 97, 101, 102, 104, 105, 106, 107, 108, 110, 113, 119, 121, 124, 125, 131, 136, 139, 140, 141, 142, 143, 145, 148, 150, 155, 166, 167, 168, 171, 179, 182, 190, 193, 194, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 223, 227, 231, 233, 240, 241, 253, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 275, 276, 277, 280, 284, 285, 286, 287, 288, 289, 294, 309, 325, 338, 339, 346, 351, 360, 369, 388, 405, 407, 410, 411, 413, 416, 417, 418, 426, 429, 431, 433, 434, 440, 441, 443, 444, 445, 446, 469, 471, 473, 474, 483, 488, 518, 519, 523, 525, 526, 530, 535, 536, 549, 552, 557, 560, 564, 565, 568, 569, 571, 572, 573, 575, 576, 580, 584, 598, 601, 610, 612, 659, 671, 678, 679, 680, 682, 683, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 734, 739, 743, 762, 765, 766, 767, 771, 772, 780, 784, 787, 793, 798, 799, 801, 827, 851, 857, 858, 862, 872], "respons": [2, 4, 8, 10, 16, 17, 19, 20, 27, 35, 46, 49, 51, 59, 65, 76, 83, 86, 92, 94, 95, 105, 111, 115, 118, 119, 120, 126, 128, 134, 141, 142, 144, 148, 149, 161, 167, 179, 182, 184, 190, 194, 197, 200, 205, 227, 228, 231, 233, 238, 241, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 351, 369, 388, 411, 417, 419, 429, 431, 434, 441, 444, 473, 474, 549, 553, 595, 607, 692, 694, 695, 696, 705, 770, 777, 779, 780, 787, 827, 847, 848, 853, 854, 857, 872], "jussi": [2, 61, 241, 388, 580, 872], "nurminen": [2, 61, 241, 388, 580, 872], "jnu": [2, 61], "iki": [2, 61], "fi": [2, 10, 61, 84, 190, 472], "o": [2, 19, 44, 61, 70, 74, 81, 113, 123, 139, 158, 160, 168, 170, 171, 184, 193, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 241, 253, 258, 261, 262, 263, 264, 266, 351, 368, 376, 384, 405, 412, 453, 473, 474, 551, 552, 561, 636, 692, 694, 696, 756, 771, 778, 794, 799, 801, 831, 843, 848, 851, 862, 872], "hf_sef": [2, 848, 862, 872], "fname_evok": [2, 11, 30, 38, 39, 41, 44, 57, 58, 60, 122, 125, 178, 180, 219], "path": [2, 19, 33, 43, 44, 45, 61, 74, 99, 113, 117, 118, 121, 123, 133, 134, 135, 139, 143, 154, 155, 156, 157, 158, 165, 169, 170, 171, 174, 180, 181, 184, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 219, 224, 253, 259, 261, 262, 263, 264, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 300, 301, 304, 305, 306, 309, 318, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 357, 362, 363, 364, 373, 374, 375, 376, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 424, 426, 439, 453, 454, 455, 457, 461, 463, 464, 465, 466, 467, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 509, 511, 515, 538, 539, 552, 562, 563, 571, 577, 580, 592, 593, 597, 603, 604, 605, 606, 608, 609, 610, 611, 614, 615, 617, 620, 621, 624, 625, 626, 640, 641, 655, 658, 660, 661, 669, 687, 688, 690, 691, 694, 696, 713, 731, 738, 739, 755, 757, 767, 769, 779, 786, 792, 797, 802, 803, 812, 821, 822, 826, 827, 829, 831, 834, 836, 837, 842, 872], "join": [2, 10, 19, 44, 61, 74, 133, 134, 139, 158, 169, 170, 183, 184, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 261, 262, 263, 264, 473, 474], "subject_b": 2, "hf_sef_15min": 2, "av": [2, 11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 67, 77, 84, 85, 88, 90, 93, 114, 117, 118, 122, 125, 148, 149, 171, 175, 177, 178, 180, 219, 253, 261, 262, 263, 264, 271, 473, 474, 542, 610, 619, 695, 818, 848], "fif": [2, 5, 7, 10, 11, 13, 14, 15, 16, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 219, 220, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 248, 255, 258, 259, 260, 261, 262, 263, 264, 266, 271, 274, 301, 309, 331, 362, 363, 364, 426, 435, 436, 437, 438, 455, 465, 473, 474, 493, 496, 511, 515, 533, 537, 552, 562, 571, 577, 580, 592, 598, 600, 601, 602, 603, 607, 610, 612, 618, 622, 625, 629, 632, 657, 660, 687, 727, 739, 755, 813, 816, 817, 818, 819, 823, 824, 826, 831, 838, 843, 847, 848, 854, 857, 860, 872], "interest": [2, 4, 9, 16, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 77, 80, 84, 85, 88, 93, 94, 95, 98, 99, 102, 105, 110, 111, 112, 114, 117, 118, 125, 126, 134, 136, 139, 141, 142, 143, 148, 149, 154, 161, 169, 171, 175, 177, 178, 179, 180, 189, 193, 194, 197, 200, 201, 204, 209, 213, 219, 220, 223, 224, 225, 226, 227, 237, 238, 256, 261, 262, 263, 264, 266, 286, 288, 321, 410, 413, 429, 431, 449, 457, 473, 474, 505, 525, 526, 536, 551, 552, 595, 604, 606, 641, 692, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 722, 723, 739, 793, 799, 827, 831, 847, 851, 854, 872], "t": [2, 4, 5, 9, 15, 19, 21, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 77, 79, 81, 82, 84, 85, 91, 92, 93, 94, 96, 99, 100, 106, 112, 113, 114, 115, 117, 118, 125, 133, 139, 140, 142, 143, 144, 145, 148, 150, 155, 156, 157, 158, 159, 161, 164, 165, 167, 169, 170, 171, 175, 176, 177, 178, 179, 180, 182, 183, 187, 190, 193, 194, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 214, 219, 220, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 238, 241, 253, 256, 257, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 274, 275, 276, 277, 284, 294, 295, 338, 341, 347, 356, 357, 368, 369, 373, 374, 375, 376, 378, 379, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 411, 426, 428, 440, 446, 449, 468, 471, 473, 474, 484, 485, 518, 519, 527, 533, 539, 541, 543, 549, 552, 555, 563, 564, 568, 569, 571, 573, 578, 580, 581, 589, 597, 600, 604, 606, 607, 610, 611, 614, 617, 620, 622, 639, 641, 657, 658, 664, 670, 672, 676, 677, 678, 679, 681, 682, 684, 685, 686, 692, 693, 694, 695, 696, 708, 712, 715, 718, 719, 720, 722, 723, 729, 739, 774, 782, 784, 827, 830, 831, 832, 837, 839, 847, 848, 853, 854, 855, 857, 872], "250": [2, 4, 19, 21, 46, 79, 115, 121, 135, 136, 140, 142, 150, 155, 165, 168, 180, 197, 199, 200, 201, 205, 227, 228, 236, 241, 645, 699, 836, 872], "ctf": [2, 27, 30, 31, 35, 36, 38, 39, 40, 41, 44, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 77, 84, 85, 99, 114, 117, 118, 125, 139, 142, 148, 164, 169, 171, 175, 177, 178, 180, 185, 186, 191, 192, 223, 224, 255, 258, 259, 261, 262, 263, 264, 265, 266, 272, 299, 306, 335, 342, 350, 352, 356, 358, 360, 361, 446, 448, 473, 474, 486, 509, 510, 515, 516, 518, 519, 528, 529, 530, 531, 534, 549, 550, 565, 580, 601, 610, 612, 618, 625, 640, 692, 694, 695, 696, 739, 755, 848, 854, 857, 872], "matric": [2, 10, 30, 31, 34, 35, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 84, 85, 99, 101, 114, 117, 118, 125, 139, 142, 145, 148, 155, 162, 164, 165, 171, 175, 177, 178, 180, 187, 194, 223, 224, 241, 287, 294, 351, 405, 413, 473, 474, 563, 571, 580, 592, 643, 644, 645, 657, 678, 693, 703, 730, 732, 765, 847, 854, 857, 869, 872], "nave": [2, 5, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 67, 77, 84, 85, 88, 90, 92, 102, 105, 106, 107, 108, 112, 114, 117, 118, 125, 148, 165, 171, 175, 176, 177, 178, 180, 181, 190, 194, 218, 219, 220, 231, 233, 254, 260, 263, 264, 266, 350, 462, 520, 521, 522, 523, 525, 526, 532, 535, 536, 656, 692, 857, 872], "2790": 2, "aspect": [2, 16, 22, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 77, 84, 85, 105, 114, 117, 118, 125, 141, 148, 171, 175, 177, 178, 180, 201, 204, 225, 226, 227, 228, 742, 857, 872], "specifi": [2, 4, 5, 9, 19, 31, 38, 41, 43, 47, 63, 86, 92, 93, 99, 101, 107, 112, 118, 125, 126, 134, 139, 140, 141, 148, 149, 150, 154, 157, 165, 166, 167, 168, 169, 170, 171, 177, 183, 184, 187, 194, 197, 198, 200, 201, 202, 203, 205, 206, 208, 209, 212, 213, 214, 215, 224, 225, 228, 231, 237, 253, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 285, 287, 294, 295, 299, 306, 311, 321, 327, 351, 352, 353, 354, 355, 356, 357, 365, 366, 367, 368, 373, 374, 375, 376, 378, 379, 380, 383, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 412, 416, 417, 421, 422, 426, 429, 431, 440, 441, 443, 444, 446, 448, 449, 457, 461, 464, 468, 470, 471, 472, 473, 474, 475, 483, 488, 489, 496, 500, 511, 514, 518, 520, 528, 529, 530, 541, 551, 552, 555, 557, 562, 563, 565, 566, 570, 571, 580, 595, 598, 602, 604, 606, 611, 614, 620, 629, 632, 634, 637, 641, 642, 657, 669, 672, 678, 679, 680, 682, 683, 690, 692, 694, 695, 696, 704, 727, 739, 742, 754, 755, 756, 758, 763, 770, 771, 773, 777, 778, 779, 782, 784, 785, 786, 788, 791, 794, 797, 798, 799, 801, 802, 803, 804, 808, 822, 827, 831, 849, 851, 854, 857, 872], "pleas": [2, 4, 5, 73, 75, 81, 99, 107, 121, 133, 134, 135, 136, 145, 165, 171, 183, 184, 188, 194, 197, 202, 203, 209, 224, 233, 253, 261, 262, 286, 288, 329, 367, 384, 405, 412, 432, 444, 446, 473, 474, 484, 552, 571, 581, 612, 769, 782, 786, 792, 819, 827, 829, 831, 835, 837, 843, 846, 847, 848, 850, 852, 854, 855, 872], "consid": [2, 4, 5, 80, 91, 99, 102, 106, 107, 110, 136, 140, 143, 151, 155, 158, 160, 161, 165, 183, 184, 194, 197, 198, 199, 200, 202, 203, 208, 209, 223, 224, 225, 228, 231, 233, 238, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 275, 276, 277, 284, 294, 295, 306, 316, 334, 351, 355, 356, 366, 367, 405, 412, 413, 426, 435, 436, 437, 438, 440, 446, 453, 470, 471, 473, 474, 481, 488, 490, 494, 547, 552, 554, 555, 560, 562, 563, 566, 568, 570, 571, 574, 578, 580, 585, 604, 606, 610, 653, 662, 663, 664, 666, 667, 679, 680, 682, 683, 692, 695, 697, 698, 699, 700, 701, 702, 703, 739, 752, 761, 769, 772, 773, 785, 792, 827, 829, 850, 853, 872], "self": [2, 4, 5, 99, 107, 171, 183, 184, 194, 197, 202, 209, 224, 233, 255, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 275, 276, 277, 285, 299, 362, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 472, 473, 474, 518, 551, 552, 553, 692, 694, 695, 696, 727, 740, 831, 849, 851, 872], "highpass": [2, 12, 70, 72, 75, 79, 80, 81, 88, 91, 97, 125, 140, 145, 150, 165, 166, 167, 168, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 238, 253, 261, 262, 263, 264, 266, 440, 473, 474, 694, 696, 792, 793, 857, 872], "version": [2, 19, 34, 69, 82, 112, 144, 145, 149, 154, 160, 165, 170, 187, 188, 189, 193, 194, 199, 200, 215, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 285, 290, 294, 295, 297, 301, 302, 303, 304, 305, 306, 309, 310, 313, 314, 315, 317, 318, 319, 320, 325, 327, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 365, 366, 367, 381, 382, 384, 385, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 421, 424, 426, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 452, 453, 455, 458, 462, 464, 467, 468, 470, 471, 472, 473, 474, 481, 482, 484, 485, 486, 488, 489, 490, 493, 495, 497, 500, 502, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 532, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 551, 552, 553, 554, 555, 560, 561, 562, 563, 564, 565, 566, 568, 569, 571, 572, 579, 580, 581, 588, 590, 594, 595, 600, 602, 604, 606, 607, 610, 611, 615, 623, 625, 626, 628, 629, 631, 634, 637, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 673, 674, 675, 684, 685, 686, 687, 691, 692, 693, 694, 695, 696, 704, 706, 709, 710, 711, 714, 719, 720, 722, 723, 724, 725, 728, 729, 736, 739, 740, 742, 748, 749, 755, 756, 757, 758, 760, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 803, 804, 805, 808, 813, 816, 818, 822, 823, 825, 830, 831, 834, 835, 836, 837, 846, 848, 851, 853, 854, 857, 860], "evoked_hp": 2, "l_freq": [2, 21, 81, 112, 143, 145, 150, 190, 200, 201, 203, 205, 238, 253, 261, 262, 263, 264, 407, 416, 441, 443, 473, 474, 552, 560, 564, 565, 568, 569, 572, 573, 575, 576, 584, 858], "300": [2, 4, 5, 13, 21, 34, 46, 51, 73, 79, 80, 90, 114, 134, 139, 148, 150, 168, 182, 190, 201, 203, 207, 223, 228, 236, 692, 857, 872], "h_freq": [2, 21, 81, 112, 143, 145, 150, 190, 200, 201, 203, 205, 208, 238, 253, 261, 262, 263, 264, 407, 416, 441, 443, 473, 474, 552, 560, 564, 565, 568, 569, 571, 572, 573, 575, 576, 584, 858], "3e": [2, 8, 9, 32, 35, 45, 48, 49, 50, 51, 54, 55, 58, 92, 107, 151, 175, 177, 178, 179, 180, 194, 564, 565, 756], "edg": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 59, 69, 71, 72, 75, 80, 81, 82, 86, 97, 108, 111, 112, 113, 118, 119, 131, 135, 140, 141, 143, 145, 150, 160, 171, 190, 194, 197, 199, 200, 201, 202, 203, 205, 208, 209, 214, 215, 219, 223, 228, 238, 258, 261, 262, 263, 264, 270, 271, 279, 315, 405, 407, 411, 412, 434, 441, 443, 445, 471, 473, 474, 551, 552, 554, 555, 566, 571, 580, 584, 692, 694, 696, 708, 718, 722, 743, 752, 756, 757, 771, 778, 782, 791, 792, 794, 799, 801, 851, 872], "75": [2, 4, 5, 8, 12, 13, 16, 19, 21, 24, 34, 35, 41, 44, 69, 71, 75, 78, 79, 81, 101, 110, 112, 113, 125, 133, 134, 142, 143, 145, 157, 168, 170, 171, 179, 183, 190, 194, 197, 199, 202, 203, 205, 206, 207, 214, 223, 224, 227, 228, 473, 474, 552, 795, 848, 854, 872], "cutoff": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 34, 42, 71, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 135, 140, 143, 145, 150, 171, 190, 194, 197, 199, 201, 202, 203, 205, 208, 209, 228, 261, 262, 263, 264, 407, 416, 441, 443, 473, 474, 552, 560, 571, 584], "262": [2, 12, 21, 150, 168, 209, 228, 241], "133": [2, 35, 61, 133, 155, 168, 175, 186, 206, 227], "044": [2, 139, 141, 148, 168, 220], "306": [2, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 67, 75, 81, 82, 88, 90, 91, 92, 93, 107, 129, 145, 157, 168, 171, 176, 177, 178, 179, 182, 194, 207, 208, 219, 220, 223, 228, 552, 848], "condit": [2, 10, 11, 16, 17, 20, 27, 30, 31, 35, 38, 39, 40, 41, 44, 45, 51, 58, 59, 60, 61, 77, 84, 85, 86, 92, 94, 97, 108, 110, 117, 118, 120, 122, 128, 139, 140, 141, 142, 143, 144, 148, 149, 152, 164, 165, 167, 175, 176, 177, 178, 179, 180, 183, 184, 190, 194, 200, 209, 213, 218, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 241, 254, 261, 262, 263, 264, 266, 350, 351, 408, 415, 421, 427, 473, 517, 542, 549, 553, 563, 571, 580, 595, 607, 609, 610, 611, 673, 678, 679, 680, 682, 692, 694, 695, 696, 714, 722, 763, 777, 827, 831, 847, 848, 854, 858, 872], "kind": [2, 5, 7, 11, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 81, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 122, 125, 129, 134, 135, 141, 148, 150, 155, 159, 165, 168, 169, 171, 174, 176, 177, 178, 179, 180, 183, 189, 190, 194, 201, 204, 219, 220, 231, 232, 233, 260, 261, 262, 263, 264, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 294, 295, 302, 303, 309, 310, 325, 335, 370, 385, 424, 425, 440, 467, 473, 474, 504, 540, 553, 610, 687, 692, 694, 695, 696, 704, 708, 718, 739, 758, 760, 789, 795, 797, 802, 803, 831, 838, 851, 854, 857, 872], "timepoint": [2, 19, 59, 99, 118, 140, 148, 150, 178, 180, 183, 212, 256, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 284, 345, 514, 568, 610, 611], "901": [2, 228], "number": [2, 4, 5, 9, 10, 11, 31, 34, 35, 39, 40, 42, 44, 46, 49, 52, 59, 71, 73, 75, 80, 81, 86, 88, 90, 91, 98, 101, 105, 107, 111, 112, 119, 125, 133, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 159, 160, 161, 164, 165, 167, 169, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 194, 197, 198, 199, 200, 202, 203, 204, 208, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 241, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 294, 295, 296, 297, 321, 324, 332, 339, 345, 351, 352, 353, 354, 355, 356, 357, 359, 362, 365, 366, 367, 376, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 421, 422, 426, 428, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 461, 462, 463, 468, 470, 471, 472, 473, 474, 475, 484, 496, 503, 505, 511, 514, 515, 519, 520, 521, 522, 523, 525, 526, 528, 529, 530, 532, 534, 535, 536, 551, 552, 553, 557, 561, 562, 563, 564, 565, 566, 567, 571, 572, 573, 575, 577, 578, 579, 585, 586, 597, 607, 611, 632, 640, 641, 642, 643, 644, 645, 646, 650, 651, 652, 655, 656, 657, 658, 666, 667, 668, 669, 671, 672, 673, 675, 677, 679, 680, 681, 682, 683, 684, 687, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 706, 708, 710, 711, 718, 719, 720, 721, 722, 723, 724, 729, 737, 738, 739, 747, 756, 762, 763, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 782, 783, 785, 786, 791, 792, 793, 794, 797, 798, 799, 800, 801, 802, 805, 812, 827, 831, 846, 848, 851, 855, 857, 872], "rang": [2, 4, 5, 9, 10, 11, 13, 14, 15, 16, 18, 19, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 80, 81, 82, 86, 90, 91, 92, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 121, 125, 127, 130, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 150, 151, 155, 157, 158, 159, 161, 165, 166, 167, 168, 170, 171, 175, 176, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 233, 236, 237, 238, 253, 254, 258, 261, 262, 263, 264, 266, 270, 271, 294, 318, 369, 376, 390, 398, 399, 405, 408, 412, 414, 415, 438, 464, 470, 473, 474, 481, 551, 552, 557, 566, 571, 692, 693, 694, 695, 696, 708, 718, 756, 769, 770, 771, 775, 778, 782, 791, 792, 793, 794, 799, 801, 827, 847, 853, 854, 857, 872], "05": [2, 4, 5, 6, 8, 9, 10, 20, 34, 35, 42, 46, 49, 51, 56, 59, 60, 66, 70, 77, 82, 85, 90, 93, 94, 95, 98, 100, 101, 106, 110, 114, 117, 118, 122, 128, 140, 143, 149, 150, 169, 176, 178, 179, 180, 182, 184, 190, 193, 197, 198, 201, 205, 207, 209, 211, 212, 219, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 241, 294, 295, 318, 327, 444, 448, 473, 474, 534, 561, 652, 670, 675, 676, 679, 680, 682, 683, 684, 692, 706, 708, 718, 722, 743, 798], "25": [2, 4, 5, 11, 13, 16, 18, 19, 28, 34, 35, 38, 41, 43, 45, 46, 47, 49, 50, 53, 56, 64, 67, 69, 71, 75, 79, 80, 81, 83, 101, 104, 106, 107, 110, 111, 112, 114, 118, 122, 128, 129, 133, 134, 135, 136, 142, 143, 144, 145, 147, 150, 158, 168, 169, 170, 171, 173, 174, 177, 179, 180, 182, 190, 194, 197, 199, 200, 202, 203, 204, 205, 207, 208, 214, 220, 222, 223, 224, 225, 227, 228, 231, 232, 233, 236, 237, 241, 255, 261, 262, 263, 264, 268, 269, 272, 273, 274, 275, 276, 277, 357, 398, 405, 407, 416, 441, 443, 473, 474, 584, 652, 681, 691, 739, 743, 763, 775, 792, 795, 797, 802, 830, 847, 854], "off": [2, 4, 10, 72, 75, 91, 112, 114, 125, 133, 134, 136, 140, 142, 148, 150, 151, 155, 158, 159, 165, 166, 167, 168, 190, 193, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 215, 218, 219, 220, 241, 253, 256, 261, 262, 263, 264, 274, 294, 295, 407, 416, 441, 443, 473, 474, 551, 564, 565, 566, 573, 576, 580, 584, 595, 720, 723, 831, 847, 848, 854, 857, 872], "compar": [2, 4, 10, 19, 21, 22, 26, 27, 28, 36, 38, 39, 56, 72, 76, 81, 83, 87, 89, 101, 111, 112, 120, 128, 133, 140, 142, 143, 144, 145, 157, 159, 161, 165, 166, 171, 175, 179, 182, 183, 190, 194, 200, 202, 204, 205, 206, 225, 226, 227, 231, 232, 238, 256, 258, 261, 262, 263, 264, 265, 266, 267, 272, 274, 355, 356, 361, 382, 446, 473, 474, 478, 505, 508, 512, 518, 519, 530, 531, 534, 550, 552, 580, 601, 603, 607, 610, 612, 615, 642, 646, 647, 648, 649, 650, 651, 652, 654, 657, 663, 739, 747, 769, 777, 786, 792, 831, 839, 851, 860, 872], "unfilt": [2, 165, 171, 200, 203], "singl": [2, 3, 6, 16, 18, 27, 33, 34, 36, 45, 56, 69, 73, 81, 82, 85, 92, 99, 101, 103, 104, 111, 115, 118, 120, 128, 139, 140, 141, 143, 144, 148, 149, 150, 157, 164, 165, 167, 168, 169, 171, 175, 177, 179, 182, 183, 187, 188, 189, 194, 197, 198, 200, 203, 204, 205, 206, 208, 209, 212, 213, 218, 220, 223, 228, 229, 230, 233, 237, 238, 241, 253, 255, 256, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 288, 289, 292, 294, 295, 301, 309, 311, 315, 316, 321, 350, 351, 356, 381, 405, 406, 412, 418, 421, 427, 431, 434, 446, 464, 473, 474, 489, 492, 506, 509, 512, 514, 516, 518, 519, 521, 523, 525, 526, 533, 549, 551, 552, 557, 560, 566, 595, 603, 607, 614, 620, 627, 637, 641, 658, 672, 673, 675, 676, 677, 679, 680, 687, 692, 693, 694, 695, 696, 708, 718, 719, 720, 722, 723, 729, 739, 755, 756, 757, 763, 767, 770, 771, 772, 773, 775, 778, 779, 782, 789, 790, 791, 793, 794, 795, 799, 801, 815, 831, 840, 847, 848, 851, 854, 857, 858, 860, 872], "meg0443": 2, "ch_name": [2, 4, 7, 15, 18, 19, 31, 63, 69, 71, 73, 84, 98, 110, 112, 113, 118, 123, 134, 135, 139, 145, 148, 150, 158, 165, 167, 168, 171, 183, 189, 190, 198, 201, 203, 205, 208, 209, 212, 218, 220, 225, 226, 227, 228, 237, 253, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 294, 295, 309, 311, 315, 318, 321, 326, 334, 365, 366, 369, 472, 473, 474, 543, 546, 552, 564, 565, 568, 569, 571, 572, 573, 591, 634, 646, 692, 693, 694, 695, 696, 697, 698, 699, 760, 769, 770, 792, 857, 872], "index": [2, 4, 19, 21, 31, 47, 61, 69, 71, 74, 88, 131, 135, 142, 148, 149, 150, 159, 165, 168, 169, 171, 174, 179, 182, 183, 187, 190, 193, 197, 199, 202, 203, 204, 205, 207, 208, 209, 213, 214, 219, 224, 225, 236, 237, 241, 254, 255, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 274, 275, 276, 277, 281, 282, 293, 294, 295, 308, 318, 346, 360, 465, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 512, 522, 542, 552, 568, 569, 572, 573, 575, 576, 584, 610, 611, 652, 692, 693, 694, 695, 696, 739, 752, 757, 763, 767, 772, 782, 784, 786, 812, 827, 848, 854, 872], "edi": 2, "regular": [2, 5, 28, 29, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 77, 81, 88, 92, 97, 102, 105, 106, 107, 108, 119, 165, 168, 177, 178, 179, 180, 181, 190, 194, 198, 205, 208, 218, 219, 220, 223, 231, 233, 263, 264, 267, 273, 294, 295, 351, 355, 356, 365, 366, 405, 412, 413, 417, 426, 434, 448, 449, 468, 470, 471, 481, 484, 488, 494, 519, 520, 521, 522, 523, 525, 526, 527, 530, 532, 535, 536, 546, 553, 561, 563, 571, 580, 615, 669, 672, 679, 680, 682, 683, 686, 778, 779, 796, 847, 853, 862, 872], "viz": [2, 4, 5, 7, 12, 19, 24, 27, 31, 34, 35, 38, 39, 40, 41, 42, 46, 47, 51, 52, 57, 59, 69, 78, 79, 84, 86, 90, 91, 99, 107, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 128, 130, 131, 133, 134, 135, 136, 140, 141, 142, 143, 149, 150, 154, 155, 156, 157, 158, 159, 165, 169, 176, 177, 179, 180, 181, 182, 183, 184, 189, 193, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 213, 223, 228, 238, 259, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 306, 315, 326, 473, 474, 552, 602, 610, 620, 625, 692, 829, 831, 847, 849, 851, 854, 858, 862, 871, 872], "plot_compare_evok": [2, 4, 99, 125, 140, 141, 142, 143, 149, 150, 165, 209, 228, 261, 262, 770, 858, 862, 872], "791": [2, 6, 32, 33, 34, 46, 111, 180, 194, 228, 237], "hf_sef_data": [2, 6], "some": [3, 4, 5, 10, 16, 21, 27, 40, 54, 55, 61, 65, 69, 72, 74, 93, 96, 101, 103, 107, 111, 112, 118, 125, 133, 134, 135, 136, 139, 140, 141, 143, 144, 148, 149, 150, 151, 155, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 179, 182, 183, 188, 189, 190, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 210, 212, 213, 214, 215, 218, 219, 220, 223, 227, 228, 229, 236, 238, 253, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 274, 275, 276, 277, 305, 309, 313, 317, 351, 368, 381, 419, 428, 439, 458, 464, 473, 474, 481, 488, 547, 551, 552, 554, 562, 570, 580, 588, 594, 604, 606, 633, 637, 640, 674, 680, 692, 694, 695, 696, 755, 757, 774, 776, 792, 827, 829, 830, 831, 834, 835, 838, 843, 846, 847, 848, 849, 851, 852, 853, 854, 855, 858, 860, 872], "demo": [3, 27, 827, 872], "common": [3, 17, 20, 27, 32, 33, 34, 43, 44, 74, 113, 134, 148, 150, 154, 157, 159, 161, 164, 171, 188, 200, 202, 203, 204, 205, 208, 209, 212, 213, 220, 232, 238, 241, 261, 262, 263, 264, 266, 274, 309, 314, 325, 351, 360, 369, 405, 430, 434, 455, 461, 473, 474, 488, 549, 552, 567, 623, 627, 637, 692, 825, 827, 831, 848, 851, 854, 855, 858, 860, 872], "public": [3, 27, 110, 114, 118, 120, 128, 133, 143, 200, 256, 263, 266, 272, 444, 472, 473, 610, 620, 739, 758, 763, 831, 847, 853, 860, 872], "brainstorm": [3, 6, 27, 79, 80, 82, 107, 117, 164, 185, 186, 191, 192, 241, 255, 258, 259, 261, 263, 264, 266, 272, 299, 306, 350, 351, 352, 353, 356, 358, 360, 425, 446, 448, 473, 486, 509, 510, 515, 516, 518, 519, 530, 549, 565, 574, 580, 612, 618, 625, 640, 739, 755, 767, 779, 807, 854, 862, 870, 872], "raw": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 27, 28, 32, 33, 34, 36, 41, 42, 45, 46, 49, 56, 61, 63, 65, 67, 68, 70, 71, 72, 73, 75, 77, 78, 80, 81, 82, 86, 87, 89, 90, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 121, 125, 126, 127, 130, 131, 133, 134, 135, 140, 141, 143, 144, 145, 148, 150, 155, 157, 158, 161, 164, 165, 166, 168, 169, 170, 172, 173, 179, 181, 182, 183, 184, 187, 188, 189, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 216, 217, 219, 220, 225, 226, 227, 228, 231, 233, 236, 237, 238, 241, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 293, 294, 295, 309, 311, 314, 338, 340, 342, 343, 344, 345, 350, 351, 353, 354, 355, 356, 359, 360, 367, 377, 388, 389, 397, 401, 410, 413, 430, 434, 438, 440, 443, 446, 447, 464, 472, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 511, 512, 513, 515, 518, 519, 520, 521, 522, 523, 525, 526, 530, 533, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 587, 588, 594, 595, 601, 605, 607, 609, 612, 614, 615, 634, 637, 642, 643, 644, 645, 646, 657, 658, 678, 692, 694, 695, 696, 705, 710, 737, 739, 769, 772, 773, 782, 783, 784, 786, 792, 793, 809, 827, 829, 831, 847, 848, 849, 857, 858, 862, 872], "median": [3, 5, 6, 27, 69, 126, 149, 156, 194, 203, 224, 236, 237, 258, 261, 262, 263, 264, 266, 270, 311, 353, 405, 412, 414, 446, 473, 474, 486, 549, 551, 552, 566, 574, 580, 671, 692, 694, 695, 696, 711, 756, 763, 770, 771, 778, 782, 791, 794, 799, 801, 872], "nerv": [3, 5, 6, 27, 261, 263, 264, 266, 353, 446, 486, 549, 574], "hf": [3, 6, 27, 94, 125, 190, 263, 388, 763], "sef": [3, 6, 27, 125, 263, 388, 763, 847], "trial": [3, 6, 13, 16, 18, 27, 28, 33, 68, 69, 71, 82, 99, 102, 105, 111, 112, 115, 120, 128, 139, 140, 141, 142, 143, 148, 150, 151, 164, 165, 167, 179, 182, 190, 193, 194, 199, 200, 203, 218, 220, 223, 228, 229, 230, 231, 233, 241, 261, 262, 263, 264, 266, 288, 289, 292, 315, 321, 350, 405, 418, 421, 427, 428, 429, 431, 434, 446, 473, 489, 492, 521, 523, 549, 552, 560, 607, 627, 672, 673, 675, 676, 677, 679, 680, 692, 695, 719, 720, 722, 723, 763, 769, 772, 827, 848, 872], "linear": [3, 5, 6, 8, 9, 13, 17, 19, 20, 26, 27, 32, 41, 45, 50, 54, 55, 60, 97, 99, 105, 107, 108, 110, 118, 133, 134, 135, 140, 157, 158, 165, 175, 176, 180, 181, 193, 194, 200, 202, 203, 204, 241, 256, 258, 261, 262, 263, 264, 266, 268, 269, 270, 272, 274, 275, 276, 277, 338, 350, 405, 409, 411, 412, 417, 420, 423, 441, 443, 444, 473, 474, 510, 522, 524, 531, 534, 551, 552, 566, 574, 578, 607, 616, 643, 644, 645, 657, 677, 678, 687, 692, 694, 696, 704, 728, 729, 739, 756, 758, 763, 771, 772, 778, 780, 782, 787, 791, 793, 794, 797, 799, 801, 802, 803, 827, 838, 840, 847, 848, 851, 872], "regress": [3, 6, 10, 11, 12, 15, 18, 19, 27, 31, 42, 76, 83, 96, 100, 146, 147, 164, 194, 210, 211, 223, 241, 261, 262, 263, 264, 266, 350, 411, 417, 446, 473, 517, 520, 549, 551, 569, 590, 595, 603, 676, 677, 678, 763, 772, 775, 794, 848, 860, 872], "limo": [3, 6, 27, 241, 262, 263, 264, 350, 677, 763, 772, 862, 872], "optic": [3, 6, 27, 74, 189, 259, 261, 263, 264, 266, 272, 299, 351, 361, 367, 434, 446, 448, 482, 518, 519, 530, 549, 582, 583, 587, 599, 612, 733, 739, 755, 807, 848, 872], "pump": [3, 6, 27, 259, 261, 263, 264, 266, 272, 299, 351, 361, 446, 448, 518, 519, 530, 549, 599, 612, 733, 739, 755, 807, 848, 872], "magnetomet": [3, 6, 22, 27, 32, 72, 75, 78, 79, 80, 85, 91, 107, 117, 118, 141, 144, 145, 149, 150, 161, 165, 166, 167, 168, 179, 182, 183, 190, 197, 198, 199, 201, 203, 204, 205, 206, 208, 212, 213, 214, 215, 218, 223, 253, 256, 258, 259, 261, 262, 263, 264, 266, 268, 269, 270, 272, 275, 276, 277, 294, 295, 299, 317, 351, 352, 353, 354, 355, 356, 361, 365, 366, 367, 405, 412, 426, 446, 448, 449, 468, 470, 471, 473, 474, 508, 518, 519, 530, 549, 550, 551, 552, 562, 563, 564, 565, 566, 567, 568, 569, 571, 580, 591, 599, 612, 678, 692, 694, 695, 696, 733, 739, 755, 756, 762, 769, 770, 771, 773, 775, 778, 779, 782, 791, 792, 794, 799, 800, 801, 807, 827, 847, 848, 851, 854, 872], "opm": [3, 6, 27, 103, 104, 258, 259, 261, 263, 264, 266, 272, 299, 351, 356, 361, 446, 448, 510, 515, 518, 519, 525, 530, 549, 599, 612, 640, 733, 739, 755, 807, 862, 872], "dspm": [3, 6, 11, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 55, 56, 59, 60, 102, 103, 104, 105, 106, 107, 164, 165, 174, 177, 178, 180, 181, 185, 186, 190, 194, 219, 220, 231, 233, 258, 261, 263, 264, 265, 266, 267, 268, 269, 272, 274, 275, 276, 277, 287, 291, 294, 295, 350, 351, 355, 446, 470, 471, 473, 486, 506, 511, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 530, 531, 532, 533, 535, 536, 549, 552, 569, 607, 610, 612, 614, 701, 739, 764, 772, 827, 847, 848, 857, 872], "spm": [3, 6, 27, 121, 194, 350, 351, 401, 446, 486, 511, 515, 519, 530, 549, 552, 569, 772, 860, 870, 872], "face": [3, 4, 6, 10, 27, 68, 121, 139, 141, 143, 148, 150, 160, 165, 171, 174, 194, 197, 241, 261, 262, 303, 350, 351, 446, 486, 511, 515, 519, 530, 549, 552, 569, 623, 626, 692, 752, 772, 800, 820, 825, 857, 860, 872], "explor": [4, 27, 103, 104, 107, 157, 180, 194, 198, 200, 202, 205, 215, 219, 237, 238, 261, 264, 276, 277, 284, 446, 671, 803, 828, 848, 849, 851], "structur": [4, 8, 9, 10, 27, 41, 43, 59, 62, 63, 69, 81, 92, 93, 110, 112, 121, 133, 134, 136, 141, 145, 146, 147, 150, 152, 153, 154, 158, 164, 165, 166, 169, 170, 172, 173, 180, 184, 185, 186, 188, 189, 193, 203, 213, 216, 217, 221, 222, 223, 224, 238, 241, 255, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 274, 275, 276, 277, 307, 308, 309, 317, 350, 368, 369, 384, 388, 389, 397, 401, 446, 462, 470, 471, 473, 474, 478, 492, 493, 532, 543, 546, 548, 549, 563, 577, 580, 603, 604, 605, 606, 607, 609, 610, 620, 652, 662, 663, 664, 665, 666, 667, 668, 672, 692, 694, 695, 696, 729, 739, 795, 818, 827, 831, 832, 835, 838, 843, 845, 847, 848, 849, 860, 872], "contain": [4, 16, 18, 27, 31, 38, 41, 43, 53, 78, 86, 92, 99, 106, 110, 114, 125, 126, 133, 136, 139, 142, 143, 145, 148, 150, 154, 157, 161, 164, 165, 167, 168, 169, 170, 171, 174, 180, 182, 187, 188, 189, 190, 200, 202, 203, 204, 205, 208, 209, 212, 213, 218, 220, 223, 236, 237, 238, 248, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 281, 282, 286, 294, 295, 296, 300, 304, 305, 306, 309, 310, 311, 312, 315, 316, 317, 323, 332, 335, 346, 351, 352, 353, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 381, 385, 387, 388, 389, 405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 424, 426, 429, 432, 433, 434, 439, 446, 447, 448, 449, 453, 454, 455, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 480, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 509, 511, 513, 514, 530, 538, 541, 542, 547, 551, 552, 553, 555, 557, 566, 567, 571, 577, 579, 580, 584, 586, 592, 593, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 615, 618, 623, 624, 626, 632, 634, 636, 637, 640, 641, 647, 648, 649, 650, 651, 652, 653, 654, 655, 658, 660, 661, 669, 671, 677, 679, 680, 682, 683, 684, 687, 688, 692, 693, 694, 695, 696, 704, 707, 715, 719, 720, 722, 723, 731, 739, 755, 756, 757, 758, 763, 766, 767, 769, 770, 771, 772, 773, 775, 776, 778, 779, 780, 782, 788, 791, 794, 795, 796, 797, 798, 799, 801, 802, 803, 812, 817, 820, 822, 823, 825, 827, 830, 831, 847, 848, 849, 851, 854, 857, 858, 872], "replic": [4, 16, 227, 231, 232, 233, 267, 669, 848, 851, 852, 872], "extend": [4, 75, 140, 143, 150, 165, 179, 198, 203, 205, 208, 228, 241, 255, 258, 259, 261, 262, 263, 264, 270, 276, 351, 405, 412, 473, 474, 505, 513, 551, 552, 555, 563, 566, 571, 578, 580, 659, 692, 694, 696, 729, 756, 767, 771, 778, 782, 791, 794, 799, 801, 835, 838, 847, 860, 872], "main": [4, 49, 92, 99, 142, 155, 167, 170, 206, 214, 227, 233, 261, 262, 323, 388, 464, 486, 673, 675, 769, 829, 831, 839, 848, 854, 855, 872], "tool": [4, 27, 54, 55, 69, 78, 87, 133, 139, 150, 154, 157, 160, 189, 197, 198, 200, 203, 205, 209, 224, 233, 238, 241, 248, 268, 269, 272, 275, 276, 277, 473, 474, 509, 534, 829, 834, 835, 836, 837, 839, 843, 847, 851, 852, 853, 854, 855, 859, 860, 862, 870, 872], "integr": [4, 154, 159, 199, 203, 223, 233, 241, 534, 552, 580, 652, 831, 835, 843, 854, 857, 872], "meeg": [4, 238], "matlab": [4, 19, 193, 241, 300, 411, 492, 589, 605, 609, 837, 838, 848, 855, 856, 860, 870, 872], "toolbox": [4, 19, 69, 150, 154, 193, 241, 300, 411, 444, 560, 838, 848], "origin": [4, 5, 8, 9, 11, 12, 13, 16, 18, 21, 22, 24, 26, 32, 33, 34, 38, 41, 42, 45, 46, 49, 50, 69, 70, 71, 74, 77, 78, 79, 85, 91, 92, 94, 95, 98, 101, 105, 108, 110, 111, 112, 115, 116, 119, 126, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 212, 214, 220, 225, 226, 227, 228, 231, 233, 236, 237, 253, 254, 255, 256, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 274, 275, 276, 277, 279, 281, 282, 294, 295, 309, 357, 365, 405, 412, 419, 420, 421, 426, 429, 439, 467, 472, 473, 474, 481, 484, 488, 492, 505, 511, 520, 551, 552, 553, 562, 563, 566, 571, 580, 587, 595, 605, 609, 612, 617, 630, 632, 634, 641, 643, 644, 645, 652, 657, 677, 684, 692, 694, 695, 696, 735, 739, 755, 756, 763, 769, 771, 773, 775, 778, 779, 782, 789, 791, 792, 793, 794, 795, 798, 799, 801, 819, 827, 831, 839, 847, 848, 854, 857, 872], "interfac": [4, 8, 15, 45, 86, 133, 154, 157, 165, 188, 194, 198, 200, 203, 204, 215, 241, 263, 264, 371, 376, 464, 465, 553, 739, 778, 834, 838, 843, 848, 857, 872], "eeglab": [4, 69, 126, 167, 200, 203, 241, 258, 261, 262, 263, 264, 270, 309, 327, 405, 412, 435, 438, 473, 474, 489, 551, 552, 560, 566, 593, 598, 604, 692, 694, 696, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 854, 872], "In": [4, 5, 10, 15, 16, 19, 21, 32, 40, 42, 43, 44, 45, 46, 59, 69, 73, 77, 80, 81, 85, 86, 88, 92, 99, 101, 110, 112, 113, 114, 116, 124, 125, 130, 133, 134, 136, 139, 141, 143, 148, 149, 150, 151, 154, 155, 157, 159, 160, 161, 165, 166, 167, 169, 170, 171, 174, 175, 177, 180, 187, 189, 190, 193, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 220, 223, 224, 225, 233, 236, 237, 238, 241, 253, 255, 256, 258, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 285, 294, 295, 299, 300, 305, 307, 317, 324, 326, 338, 351, 355, 356, 365, 366, 367, 368, 405, 407, 411, 412, 421, 422, 426, 429, 438, 440, 448, 449, 468, 470, 471, 473, 474, 481, 518, 519, 520, 521, 522, 523, 527, 530, 547, 551, 552, 553, 554, 566, 567, 568, 569, 574, 577, 578, 586, 588, 595, 597, 620, 637, 657, 660, 678, 687, 692, 694, 695, 696, 700, 701, 702, 703, 705, 708, 718, 719, 720, 721, 722, 723, 724, 727, 736, 739, 752, 763, 769, 770, 771, 772, 773, 775, 776, 778, 779, 782, 783, 790, 791, 792, 793, 794, 797, 799, 800, 803, 827, 829, 831, 832, 836, 837, 839, 842, 847, 848, 851, 853, 854, 857, 858, 872], "summari": [4, 10, 171, 199, 203, 215, 268, 269, 272, 275, 276, 277, 528, 529, 684, 831, 857], "fetch": [4, 136, 246, 376, 380, 381, 382, 383, 384, 385, 390, 398, 399, 831, 848, 872], "subject": [4, 5, 7, 8, 9, 10, 11, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 67, 70, 71, 78, 79, 81, 87, 88, 89, 93, 102, 107, 110, 111, 113, 114, 116, 122, 123, 124, 125, 129, 132, 133, 134, 135, 136, 139, 142, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 194, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 234, 237, 238, 241, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 294, 295, 300, 304, 305, 306, 309, 338, 339, 340, 341, 346, 348, 349, 357, 362, 363, 364, 368, 376, 380, 382, 383, 384, 385, 390, 398, 399, 424, 439, 455, 457, 459, 461, 463, 464, 465, 466, 467, 473, 474, 475, 478, 505, 507, 509, 511, 515, 518, 519, 530, 538, 539, 552, 556, 566, 577, 580, 597, 601, 607, 612, 614, 615, 617, 620, 624, 629, 630, 631, 632, 640, 641, 642, 644, 645, 646, 655, 657, 658, 669, 673, 675, 684, 687, 688, 729, 731, 738, 739, 755, 757, 762, 767, 768, 781, 795, 797, 802, 803, 812, 821, 822, 827, 837, 845, 847, 849, 851, 854, 860, 872], "If": [4, 27, 28, 31, 43, 44, 68, 69, 80, 97, 99, 113, 115, 118, 125, 133, 134, 136, 139, 141, 143, 145, 148, 149, 150, 155, 158, 159, 160, 164, 167, 168, 169, 170, 171, 174, 180, 181, 187, 188, 189, 194, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 223, 224, 225, 231, 236, 238, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 326, 327, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 711, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 734, 738, 739, 744, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 834, 835, 836, 837, 838, 839, 842, 847, 848, 851, 852, 853, 854, 855, 857, 858, 872], "disk": [4, 29, 78, 106, 108, 141, 142, 148, 149, 157, 165, 169, 171, 176, 179, 183, 198, 204, 207, 208, 212, 213, 214, 220, 253, 255, 256, 257, 261, 262, 263, 264, 266, 267, 279, 310, 381, 424, 446, 472, 473, 474, 554, 603, 610, 612, 614, 620, 641, 694, 696, 713, 739, 769, 773, 777, 779, 792, 819, 821, 837, 847, 851, 854, 857, 872], "fetcher": [4, 136, 848, 860, 872], "automat": [4, 69, 77, 78, 81, 92, 99, 139, 140, 141, 143, 144, 148, 149, 150, 154, 155, 165, 167, 168, 169, 171, 181, 188, 189, 190, 197, 198, 199, 200, 201, 203, 204, 205, 208, 212, 214, 215, 218, 228, 241, 253, 255, 256, 258, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 279, 309, 315, 337, 357, 373, 374, 375, 376, 378, 379, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 408, 415, 418, 426, 429, 437, 453, 454, 461, 463, 473, 474, 479, 486, 490, 493, 496, 515, 551, 552, 554, 562, 563, 564, 566, 571, 572, 575, 578, 580, 595, 606, 617, 628, 631, 636, 637, 641, 652, 679, 680, 682, 683, 692, 695, 735, 739, 757, 758, 762, 763, 769, 772, 775, 776, 777, 778, 785, 786, 792, 797, 802, 803, 830, 831, 837, 838, 847, 848, 854, 860, 872], "remot": [4, 189, 246, 382, 805, 829, 831, 837, 860], "repositori": [4, 169, 832, 838, 853], "dure": [4, 19, 33, 38, 43, 45, 69, 79, 81, 92, 98, 101, 114, 119, 125, 133, 135, 140, 143, 148, 154, 156, 159, 165, 166, 167, 170, 171, 179, 181, 190, 194, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 238, 241, 253, 259, 261, 262, 263, 264, 265, 266, 268, 271, 272, 274, 276, 277, 278, 294, 295, 301, 338, 340, 344, 351, 355, 356, 358, 363, 365, 366, 367, 405, 411, 412, 422, 428, 429, 440, 448, 449, 465, 468, 470, 471, 473, 474, 475, 486, 500, 511, 515, 530, 538, 552, 571, 577, 580, 595, 634, 637, 642, 657, 660, 666, 667, 668, 687, 692, 694, 695, 696, 698, 701, 721, 724, 728, 737, 739, 755, 758, 769, 776, 779, 783, 786, 792, 797, 803, 827, 830, 836, 839, 847, 848, 849, 853, 854, 857, 872], "inform": [4, 5, 9, 11, 21, 22, 26, 28, 29, 31, 34, 35, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 67, 78, 82, 88, 90, 91, 92, 93, 99, 102, 105, 106, 108, 122, 129, 132, 133, 134, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 157, 158, 159, 161, 164, 165, 167, 169, 171, 174, 176, 178, 179, 180, 181, 187, 188, 189, 190, 193, 194, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 218, 219, 220, 223, 225, 228, 231, 233, 237, 238, 241, 246, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 281, 282, 294, 295, 296, 302, 303, 307, 308, 315, 316, 317, 321, 323, 324, 326, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 355, 357, 365, 366, 367, 369, 405, 407, 412, 413, 414, 424, 425, 429, 435, 436, 437, 438, 440, 441, 443, 444, 446, 449, 456, 457, 463, 465, 468, 471, 472, 473, 474, 475, 478, 484, 492, 503, 508, 511, 514, 515, 516, 520, 530, 548, 549, 551, 552, 562, 563, 571, 577, 578, 580, 585, 586, 591, 593, 596, 605, 607, 608, 609, 627, 628, 634, 639, 640, 656, 657, 660, 679, 683, 689, 691, 692, 693, 694, 695, 696, 708, 719, 720, 721, 722, 723, 724, 729, 734, 735, 739, 752, 755, 759, 763, 764, 765, 767, 770, 774, 780, 781, 787, 791, 795, 801, 818, 827, 829, 830, 831, 834, 835, 838, 843, 848, 849, 852, 853, 855, 872], "e": [4, 7, 8, 12, 28, 41, 42, 44, 46, 47, 54, 68, 69, 70, 78, 82, 99, 110, 112, 118, 133, 136, 139, 140, 142, 143, 145, 149, 150, 152, 154, 156, 159, 160, 161, 164, 165, 167, 168, 169, 177, 179, 184, 187, 188, 189, 193, 194, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 212, 213, 218, 219, 220, 223, 224, 225, 228, 231, 233, 237, 238, 241, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 284, 285, 294, 295, 296, 299, 300, 303, 305, 307, 309, 310, 315, 324, 326, 335, 337, 348, 351, 355, 356, 362, 365, 366, 367, 376, 381, 382, 384, 389, 398, 399, 405, 407, 408, 411, 412, 414, 415, 416, 419, 420, 421, 424, 425, 426, 429, 432, 434, 437, 438, 439, 441, 443, 444, 446, 447, 448, 449, 455, 461, 464, 467, 468, 470, 471, 472, 473, 474, 475, 485, 486, 488, 490, 505, 507, 509, 512, 513, 514, 515, 518, 519, 525, 526, 527, 528, 529, 530, 531, 534, 535, 536, 538, 551, 552, 554, 555, 560, 561, 562, 563, 566, 567, 568, 569, 571, 573, 574, 577, 580, 586, 587, 588, 595, 600, 607, 610, 611, 614, 615, 620, 627, 628, 629, 630, 631, 632, 638, 641, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 660, 663, 677, 678, 679, 680, 681, 682, 683, 684, 687, 688, 691, 692, 694, 695, 696, 700, 701, 702, 703, 704, 705, 708, 718, 722, 723, 727, 729, 739, 744, 752, 755, 756, 757, 762, 763, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 782, 783, 785, 786, 790, 791, 792, 793, 794, 797, 799, 801, 802, 805, 812, 817, 820, 827, 829, 830, 831, 832, 835, 837, 843, 847, 848, 851, 853, 854, 857, 858, 860, 872], "rate": [4, 68, 95, 99, 101, 179, 188, 189, 193, 200, 201, 203, 227, 237, 241, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 369, 410, 440, 444, 446, 473, 474, 481, 488, 494, 573, 578, 594, 645, 657, 670, 676, 678, 681, 692, 694, 695, 696, 710, 769, 771, 780, 792, 851, 872], "per": [4, 31, 47, 88, 92, 99, 105, 108, 118, 124, 129, 141, 143, 149, 150, 157, 165, 168, 179, 199, 203, 205, 215, 223, 228, 233, 237, 253, 261, 262, 263, 264, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 311, 318, 357, 371, 383, 398, 405, 412, 415, 418, 426, 429, 438, 439, 473, 474, 528, 529, 534, 535, 536, 553, 556, 597, 637, 644, 673, 675, 688, 692, 694, 696, 698, 701, 708, 710, 718, 719, 720, 722, 723, 729, 739, 769, 770, 771, 778, 800, 831, 837, 853, 854, 860, 872], "name": [4, 5, 7, 8, 9, 10, 18, 22, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 69, 81, 88, 90, 91, 92, 93, 98, 99, 101, 107, 110, 124, 129, 130, 133, 134, 136, 140, 141, 142, 143, 144, 148, 149, 158, 159, 160, 165, 167, 168, 169, 170, 171, 176, 177, 178, 179, 189, 190, 194, 198, 199, 200, 203, 204, 206, 208, 209, 215, 218, 219, 220, 223, 224, 236, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 300, 304, 305, 306, 307, 309, 310, 315, 318, 319, 320, 321, 322, 324, 325, 326, 331, 333, 334, 335, 337, 348, 356, 357, 360, 362, 363, 364, 365, 366, 369, 377, 381, 384, 387, 405, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 421, 423, 424, 426, 429, 432, 435, 436, 437, 438, 446, 447, 455, 457, 458, 459, 461, 463, 464, 465, 466, 467, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 507, 511, 512, 533, 537, 541, 542, 543, 549, 550, 551, 552, 553, 554, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 577, 581, 586, 588, 591, 592, 595, 597, 598, 600, 601, 602, 604, 605, 606, 607, 609, 611, 612, 613, 614, 615, 617, 618, 620, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 634, 637, 640, 641, 643, 644, 645, 646, 657, 660, 669, 673, 677, 678, 684, 687, 688, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 708, 712, 714, 718, 720, 723, 725, 727, 736, 738, 739, 744, 755, 756, 757, 758, 760, 763, 767, 768, 769, 770, 771, 773, 775, 776, 777, 778, 782, 783, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 801, 802, 803, 812, 816, 817, 818, 819, 822, 823, 824, 825, 826, 827, 829, 830, 835, 836, 837, 839, 848, 849, 854, 858, 862, 872], "etc": [4, 27, 31, 36, 47, 76, 142, 154, 159, 165, 166, 167, 170, 171, 174, 187, 188, 189, 197, 198, 199, 203, 208, 212, 215, 218, 223, 231, 238, 254, 259, 261, 262, 263, 264, 266, 267, 268, 272, 276, 331, 434, 446, 447, 473, 474, 481, 492, 495, 514, 524, 549, 552, 580, 605, 609, 634, 639, 666, 667, 668, 669, 679, 680, 682, 683, 692, 694, 695, 696, 739, 763, 767, 770, 782, 797, 827, 831, 835, 836, 849, 851, 853, 854, 857, 858, 860, 872], "mat": [4, 19, 193, 241, 266, 492, 605, 609, 854, 872], "store": [4, 16, 29, 30, 69, 88, 91, 92, 93, 102, 107, 113, 114, 133, 134, 139, 140, 141, 142, 143, 148, 149, 150, 154, 155, 157, 159, 161, 167, 168, 169, 171, 174, 181, 188, 189, 190, 198, 199, 204, 205, 208, 209, 212, 214, 215, 219, 220, 238, 253, 254, 255, 259, 261, 262, 263, 264, 266, 271, 272, 273, 275, 279, 321, 342, 360, 376, 381, 388, 389, 398, 399, 407, 409, 420, 429, 434, 438, 443, 464, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 512, 530, 539, 541, 552, 560, 566, 579, 598, 604, 605, 609, 612, 635, 644, 645, 657, 672, 692, 693, 695, 697, 698, 699, 700, 701, 702, 703, 712, 740, 747, 759, 792, 818, 819, 827, 831, 847, 848, 849, 851, 854, 857, 872], "fit": [4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 24, 40, 41, 45, 50, 59, 69, 70, 72, 73, 75, 77, 78, 79, 81, 86, 99, 109, 114, 121, 136, 140, 150, 151, 155, 157, 164, 165, 169, 171, 176, 178, 182, 183, 184, 185, 186, 188, 194, 198, 201, 202, 205, 206, 207, 208, 227, 241, 247, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 276, 297, 302, 303, 309, 338, 339, 340, 341, 344, 348, 349, 350, 362, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 426, 434, 444, 448, 473, 474, 485, 511, 514, 519, 549, 551, 552, 553, 556, 559, 561, 562, 563, 566, 571, 572, 580, 610, 641, 656, 677, 692, 694, 695, 696, 705, 739, 756, 763, 767, 771, 773, 775, 778, 779, 782, 783, 784, 786, 789, 791, 793, 794, 795, 799, 801, 831, 843, 848, 851, 854, 858, 861, 872], "inferenti": [4, 223], "evalu": [4, 31, 44, 54, 55, 161, 187, 194, 208, 223, 241, 273, 357, 422, 431, 470, 471, 503, 534, 561, 571, 652, 848, 851, 853, 854], "signific": [4, 71, 98, 99, 110, 150, 164, 171, 187, 197, 199, 200, 202, 203, 205, 223, 225, 226, 227, 228, 229, 230, 238, 241, 258, 261, 262, 263, 264, 266, 315, 321, 350, 405, 411, 412, 444, 473, 474, 527, 551, 552, 603, 679, 680, 682, 683, 684, 692, 694, 696, 756, 771, 775, 778, 794, 799, 801, 847, 854, 857, 860], "jose": [4, 872], "garcia": 4, "alani": [4, 872], "jcg": 4, "gmail": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 68, 71, 72, 73, 75, 77, 78, 79, 80, 82, 86, 88, 91, 92, 93, 97, 99, 101, 107, 110, 111, 112, 116, 118, 119, 121, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 190, 193, 207, 220, 223, 227, 228, 231, 232, 233, 237, 238], "com": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 68, 71, 72, 73, 75, 77, 78, 79, 80, 82, 86, 88, 91, 92, 93, 99, 101, 107, 110, 111, 112, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 190, 193, 207, 219, 220, 223, 227, 228, 231, 232, 233, 237, 238, 241, 261, 262, 263, 264, 272, 383, 473, 474, 481, 829, 831, 839, 851], "matplotlib": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 90, 91, 94, 95, 97, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 125, 129, 130, 131, 133, 135, 136, 143, 144, 145, 150, 159, 169, 170, 171, 175, 176, 179, 180, 182, 183, 193, 194, 198, 200, 201, 203, 204, 205, 206, 208, 209, 212, 215, 220, 223, 224, 225, 226, 227, 228, 233, 237, 238, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 275, 276, 277, 309, 310, 405, 412, 473, 474, 551, 552, 566, 614, 691, 692, 693, 694, 696, 708, 718, 739, 740, 742, 752, 754, 756, 757, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 784, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 808, 809, 811, 829, 830, 831, 849, 872], "pyplot": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 90, 91, 94, 95, 97, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 125, 129, 130, 131, 133, 135, 136, 143, 144, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 183, 193, 194, 200, 201, 204, 205, 208, 209, 212, 220, 223, 224, 225, 226, 227, 228, 233, 237, 238, 260, 261, 262, 263, 264, 692, 708, 718, 742, 763, 773, 775, 800, 872], "plt": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 90, 91, 94, 95, 97, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 125, 129, 130, 131, 133, 135, 136, 143, 144, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 183, 193, 194, 200, 201, 204, 205, 208, 209, 212, 220, 223, 224, 225, 226, 227, 228, 233, 237, 238, 263, 264, 318, 708, 718, 777], "stat": [4, 94, 95, 97, 98, 99, 110, 111, 140, 193, 223, 224, 225, 226, 227, 228, 231, 232, 233, 238, 261, 262, 315, 326, 552, 560, 768, 849, 862, 869, 872], "linear_regress": [4, 99, 140, 223, 862, 872], "plot_ev": [4, 7, 136, 165, 209, 213, 261, 262, 769, 862, 872], "combine_evok": [4, 7, 97, 140, 143, 148, 150, 165, 175, 190, 209, 224, 226, 858, 862, 872], "subj": [4, 159, 203], "experi": [4, 19, 45, 65, 69, 126, 150, 164, 165, 167, 168, 179, 190, 198, 199, 205, 208, 209, 212, 213, 241, 266, 827, 831, 848, 850, 854, 872], "particip": [4, 70, 72, 74, 75, 79, 80, 81, 88, 91, 125, 140, 143, 145, 150, 165, 166, 167, 168, 171, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 238, 827, 848, 853, 860], "perform": [4, 8, 10, 19, 31, 45, 54, 74, 80, 82, 98, 99, 101, 110, 117, 136, 139, 142, 143, 145, 148, 150, 154, 155, 156, 165, 166, 167, 168, 177, 187, 188, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 223, 225, 227, 231, 233, 254, 256, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 284, 287, 294, 295, 350, 351, 352, 354, 356, 357, 371, 405, 408, 411, 412, 415, 417, 418, 421, 422, 426, 440, 441, 446, 448, 461, 462, 463, 464, 468, 470, 471, 473, 474, 480, 481, 488, 511, 512, 514, 515, 519, 520, 521, 522, 523, 525, 526, 530, 535, 536, 551, 552, 554, 557, 564, 565, 566, 568, 569, 571, 572, 578, 580, 595, 607, 640, 643, 644, 645, 657, 669, 674, 678, 679, 680, 681, 682, 683, 685, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 729, 755, 756, 763, 769, 770, 771, 774, 778, 782, 784, 786, 791, 792, 793, 794, 799, 801, 805, 827, 829, 837, 838, 839, 847, 848, 854, 857, 872], "two": [4, 5, 12, 16, 19, 22, 32, 37, 42, 45, 47, 54, 55, 65, 68, 69, 71, 73, 74, 79, 82, 86, 88, 110, 113, 115, 130, 131, 133, 134, 136, 140, 141, 143, 145, 149, 150, 154, 155, 157, 159, 165, 167, 168, 169, 170, 171, 174, 177, 179, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 209, 212, 213, 214, 215, 220, 223, 225, 227, 231, 233, 236, 238, 241, 255, 261, 262, 263, 264, 267, 268, 269, 272, 273, 275, 276, 277, 294, 295, 309, 317, 351, 355, 356, 365, 366, 367, 398, 405, 407, 412, 416, 420, 428, 429, 439, 441, 443, 444, 445, 448, 449, 468, 470, 471, 473, 474, 495, 507, 525, 530, 547, 552, 555, 562, 566, 571, 578, 579, 594, 595, 634, 637, 645, 669, 673, 674, 675, 677, 679, 680, 681, 682, 683, 687, 692, 694, 695, 696, 710, 711, 721, 729, 739, 744, 747, 769, 770, 771, 779, 786, 792, 797, 827, 831, 837, 848, 851, 853, 854, 857, 872], "altern": [4, 112, 125, 160, 161, 168, 171, 190, 197, 199, 200, 203, 215, 223, 237, 238, 252, 254, 255, 258, 261, 262, 263, 264, 270, 351, 405, 412, 473, 474, 496, 514, 551, 552, 566, 602, 606, 681, 692, 694, 696, 739, 756, 771, 778, 782, 791, 794, 799, 801, 829, 831, 837, 848, 851, 857, 859, 872], "choic": [4, 112, 154, 159, 169, 170, 183, 200, 205, 213, 225, 274, 445, 455, 530, 685, 829, 835, 848, 854], "task": [4, 10, 32, 33, 34, 46, 69, 110, 111, 135, 136, 142, 143, 154, 155, 164, 168, 174, 194, 198, 203, 237, 241, 376, 408, 415, 708, 718, 719, 722, 848, 854, 855, 858, 860, 872], "discrimin": [4, 9, 18, 81, 194, 238, 241, 405, 409, 412, 552, 848], "between": [4, 8, 10, 16, 19, 22, 26, 27, 36, 38, 40, 45, 47, 59, 60, 68, 80, 81, 86, 94, 97, 98, 101, 106, 111, 112, 125, 126, 131, 132, 133, 135, 136, 139, 140, 143, 145, 148, 149, 150, 155, 156, 157, 159, 160, 161, 164, 165, 168, 169, 170, 171, 175, 177, 187, 188, 189, 190, 193, 194, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 238, 241, 253, 254, 255, 256, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 274, 275, 276, 277, 284, 305, 309, 315, 317, 318, 338, 350, 351, 357, 358, 360, 361, 362, 405, 406, 411, 417, 421, 424, 426, 428, 429, 431, 439, 446, 449, 450, 468, 470, 471, 473, 474, 495, 512, 513, 525, 527, 530, 534, 535, 536, 549, 552, 554, 555, 557, 560, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 575, 578, 579, 580, 584, 586, 607, 610, 611, 634, 642, 643, 644, 645, 647, 649, 652, 653, 656, 657, 660, 662, 663, 664, 666, 667, 671, 672, 679, 680, 682, 683, 684, 687, 692, 693, 695, 697, 699, 700, 702, 707, 708, 711, 715, 716, 718, 719, 720, 722, 723, 729, 739, 744, 755, 757, 758, 760, 763, 765, 769, 772, 773, 775, 776, 778, 792, 793, 796, 797, 799, 802, 803, 805, 818, 827, 829, 831, 837, 839, 847, 848, 851, 853, 854, 857, 860, 872], "stimuli": [4, 19, 68, 114, 126, 140, 143, 145, 148, 150, 165, 179, 190, 193, 202, 241, 411, 555, 827, 848], "The": [4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 19, 21, 27, 31, 34, 38, 41, 43, 44, 45, 46, 47, 48, 49, 52, 58, 59, 60, 63, 65, 68, 73, 74, 77, 78, 79, 80, 81, 82, 86, 92, 93, 99, 101, 102, 105, 107, 108, 110, 111, 112, 113, 114, 118, 124, 125, 126, 132, 133, 134, 135, 136, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 170, 171, 172, 173, 176, 180, 182, 183, 185, 186, 187, 188, 189, 190, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 237, 238, 239, 240, 241, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 376, 377, 380, 381, 382, 383, 384, 385, 387, 389, 390, 397, 398, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 488, 490, 492, 493, 494, 495, 496, 498, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 631, 632, 633, 634, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 744, 745, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 822, 823, 824, 826, 827, 829, 831, 834, 835, 837, 843, 849, 850, 851, 852, 855, 856, 858, 860, 872], "same": [4, 18, 19, 28, 44, 45, 54, 55, 58, 69, 73, 74, 81, 88, 97, 101, 107, 111, 112, 125, 133, 134, 139, 140, 141, 143, 148, 149, 150, 155, 159, 160, 161, 167, 168, 169, 170, 174, 175, 177, 182, 187, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 213, 214, 215, 218, 223, 224, 225, 227, 228, 231, 232, 233, 236, 253, 255, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 281, 282, 284, 294, 297, 306, 311, 314, 325, 350, 351, 355, 356, 357, 367, 369, 385, 405, 412, 413, 418, 426, 429, 430, 439, 440, 455, 458, 462, 463, 468, 472, 473, 474, 480, 481, 488, 489, 498, 501, 538, 552, 553, 554, 563, 568, 569, 570, 571, 580, 581, 594, 598, 604, 605, 620, 638, 639, 642, 643, 644, 645, 652, 657, 658, 674, 678, 679, 680, 682, 683, 687, 692, 694, 695, 696, 704, 710, 711, 717, 719, 720, 721, 722, 723, 724, 729, 739, 744, 755, 756, 763, 769, 770, 771, 773, 775, 778, 780, 782, 791, 792, 797, 798, 800, 825, 831, 836, 843, 848, 851, 854, 855, 858, 872], "whole": [4, 28, 54, 55, 69, 161, 198, 223, 241, 268, 269, 272, 275, 276, 277, 439, 507, 580, 597, 641, 658, 693, 739, 765, 799, 831, 839, 848, 872], "vari": [4, 19, 22, 46, 47, 59, 140, 154, 189, 193, 200, 203, 204, 207, 208, 220, 223, 261, 262, 266, 268, 269, 272, 275, 276, 277, 338, 339, 340, 341, 342, 343, 428, 439, 644, 683, 762, 848, 854, 857, 860, 872], "level": [4, 8, 9, 27, 36, 44, 56, 96, 99, 100, 120, 128, 133, 140, 141, 143, 149, 150, 154, 159, 164, 165, 167, 169, 170, 179, 180, 187, 193, 197, 199, 200, 203, 204, 220, 223, 225, 226, 227, 228, 229, 231, 232, 233, 238, 241, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 415, 416, 418, 421, 422, 424, 426, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 455, 456, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 548, 549, 551, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 639, 640, 641, 643, 644, 645, 646, 656, 657, 660, 662, 663, 664, 665, 666, 667, 668, 671, 673, 675, 679, 680, 681, 682, 683, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 711, 714, 715, 719, 720, 722, 723, 724, 725, 728, 729, 734, 737, 738, 739, 747, 755, 756, 764, 767, 771, 772, 773, 774, 775, 778, 779, 782, 783, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 831, 838, 848, 849, 854, 856, 869, 872], "nois": [4, 5, 7, 11, 18, 21, 27, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 69, 73, 80, 82, 86, 88, 91, 92, 93, 102, 105, 106, 107, 108, 112, 118, 120, 122, 128, 143, 145, 148, 150, 151, 161, 165, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 193, 194, 198, 200, 202, 206, 208, 212, 215, 220, 223, 231, 233, 241, 253, 258, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 294, 295, 297, 344, 350, 351, 352, 353, 354, 355, 356, 365, 366, 367, 405, 412, 413, 428, 448, 449, 468, 470, 471, 473, 474, 478, 508, 519, 525, 526, 530, 532, 535, 536, 552, 553, 580, 588, 589, 601, 607, 644, 645, 646, 656, 694, 696, 720, 723, 764, 769, 773, 777, 779, 792, 793, 816, 827, 851, 857, 872], "less": [4, 5, 10, 18, 24, 26, 40, 41, 44, 45, 46, 49, 50, 69, 77, 85, 112, 117, 122, 133, 139, 140, 142, 149, 150, 155, 157, 158, 170, 171, 175, 180, 182, 183, 184, 187, 197, 198, 200, 201, 203, 205, 206, 208, 209, 212, 219, 223, 225, 238, 360, 446, 470, 471, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 512, 519, 552, 560, 577, 578, 585, 679, 680, 681, 682, 683, 687, 739, 831, 838, 848, 851, 853, 854, 872], "discern": [4, 848], "observ": [4, 74, 99, 136, 143, 150, 155, 203, 205, 209, 223, 225, 227, 228, 231, 233, 238, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 444, 473, 474, 552, 673, 678, 679, 680, 681, 682, 683, 692, 694, 695, 696, 697, 698, 699, 792, 827, 847, 848], "fig": [4, 5, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 39, 41, 42, 45, 47, 52, 58, 67, 68, 69, 70, 71, 72, 78, 79, 80, 85, 91, 94, 97, 101, 102, 107, 110, 111, 112, 113, 114, 116, 118, 121, 122, 123, 125, 133, 134, 135, 136, 140, 143, 145, 149, 150, 155, 156, 157, 158, 159, 165, 169, 171, 175, 176, 177, 179, 180, 181, 182, 184, 190, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 220, 223, 224, 226, 227, 228, 237, 238, 258, 259, 260, 261, 262, 263, 264, 270, 271, 274, 276, 277, 309, 310, 405, 412, 473, 474, 551, 552, 692, 693, 694, 696, 742, 752, 755, 756, 757, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 803, 809, 872], "similar": [4, 16, 17, 18, 19, 20, 27, 33, 58, 60, 69, 86, 101, 107, 110, 112, 129, 135, 136, 139, 140, 141, 142, 143, 149, 159, 169, 194, 197, 198, 200, 202, 203, 204, 205, 206, 209, 212, 219, 223, 225, 228, 236, 241, 254, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 294, 351, 360, 406, 421, 439, 446, 473, 474, 503, 549, 552, 566, 571, 647, 692, 695, 696, 729, 739, 754, 773, 795, 829, 831, 836, 837, 838, 848, 849, 853, 854, 860, 872], "approach": [4, 10, 19, 21, 44, 45, 46, 59, 72, 74, 101, 125, 140, 142, 143, 148, 149, 150, 155, 159, 162, 163, 164, 165, 166, 171, 179, 193, 194, 197, 198, 200, 201, 202, 203, 206, 208, 220, 223, 224, 227, 229, 238, 241, 266, 362, 384, 478, 510, 552, 568, 578, 587, 631, 755, 807, 827, 831, 839, 847, 848, 849, 853, 854, 872], "across": [4, 16, 17, 18, 19, 20, 26, 27, 28, 32, 33, 47, 54, 55, 58, 60, 78, 81, 82, 101, 107, 111, 112, 133, 134, 136, 139, 140, 141, 142, 144, 148, 149, 152, 154, 161, 164, 165, 167, 171, 179, 194, 197, 198, 200, 202, 203, 204, 205, 206, 208, 215, 218, 219, 223, 231, 232, 233, 237, 241, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 314, 356, 357, 405, 408, 412, 414, 415, 417, 418, 419, 430, 439, 473, 474, 528, 529, 534, 549, 552, 554, 557, 566, 607, 617, 637, 657, 683, 687, 692, 693, 694, 695, 696, 703, 710, 719, 720, 722, 723, 754, 758, 763, 770, 771, 773, 774, 778, 791, 793, 797, 800, 803, 827, 831, 847, 848, 851, 854, 860, 872], "signal": [4, 8, 9, 10, 13, 15, 16, 19, 21, 27, 28, 42, 45, 51, 58, 59, 63, 69, 70, 72, 73, 74, 76, 80, 83, 86, 98, 101, 109, 111, 112, 119, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 161, 164, 165, 171, 174, 177, 179, 183, 188, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 206, 210, 211, 212, 213, 215, 220, 221, 222, 223, 228, 239, 241, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 276, 277, 297, 338, 339, 340, 341, 344, 345, 348, 351, 352, 353, 354, 356, 361, 367, 376, 398, 399, 405, 407, 409, 410, 411, 412, 413, 416, 417, 426, 429, 438, 439, 440, 441, 443, 444, 445, 446, 473, 474, 488, 493, 518, 519, 520, 533, 549, 550, 551, 552, 553, 554, 561, 563, 564, 565, 567, 568, 569, 571, 573, 579, 580, 601, 610, 612, 615, 634, 637, 656, 658, 659, 678, 679, 692, 694, 695, 696, 697, 698, 699, 707, 708, 710, 711, 715, 717, 718, 721, 724, 739, 763, 769, 771, 773, 778, 779, 781, 782, 783, 784, 786, 792, 793, 827, 847, 848, 851, 872], "continuum": [4, 848, 872], "span": [4, 80, 117, 135, 139, 140, 148, 149, 150, 164, 165, 167, 177, 190, 197, 201, 210, 211, 212, 214, 215, 236, 238, 255, 261, 262, 263, 264, 266, 356, 473, 474, 549, 552, 554, 555, 568, 569, 572, 573, 607, 684, 692, 694, 696, 710, 754, 756, 793, 799, 847, 848, 849, 854, 860, 872], "85": [4, 13, 19, 35, 37, 47, 77, 88, 94, 101, 107, 112, 139, 144, 145, 159, 168, 175, 181, 194, 201, 207, 223, 224, 227, 228, 872], "increas": [4, 11, 32, 55, 69, 110, 150, 171, 200, 203, 204, 209, 220, 225, 228, 238, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 446, 473, 474, 484, 552, 571, 588, 679, 680, 682, 683, 692, 695, 708, 718, 719, 720, 721, 722, 723, 724, 739, 743, 769, 786, 792, 848, 854, 872], "step": [4, 8, 11, 15, 18, 24, 41, 46, 59, 63, 67, 92, 97, 101, 107, 110, 118, 125, 133, 139, 141, 150, 151, 157, 160, 165, 166, 167, 169, 171, 189, 190, 194, 197, 198, 199, 200, 203, 205, 206, 208, 212, 223, 224, 238, 241, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 286, 288, 338, 339, 340, 344, 405, 411, 420, 423, 446, 447, 463, 464, 471, 473, 474, 490, 547, 552, 562, 566, 571, 578, 642, 659, 679, 680, 682, 683, 684, 707, 715, 729, 739, 755, 763, 792, 803, 831, 832, 837, 839, 845, 847, 848, 853, 854, 858, 860, 872], "other": [4, 43, 61, 69, 81, 82, 110, 125, 140, 142, 144, 149, 150, 154, 155, 159, 165, 167, 168, 169, 171, 174, 176, 179, 180, 187, 188, 190, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 212, 214, 215, 219, 220, 223, 227, 236, 238, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 274, 275, 276, 277, 280, 309, 321, 322, 350, 357, 362, 411, 413, 422, 424, 426, 428, 429, 434, 438, 450, 454, 455, 468, 470, 471, 473, 474, 485, 519, 530, 541, 551, 552, 571, 580, 594, 598, 600, 611, 614, 620, 623, 629, 631, 641, 652, 657, 663, 678, 692, 693, 694, 695, 696, 739, 752, 760, 767, 769, 771, 782, 786, 792, 797, 812, 820, 825, 827, 836, 837, 838, 839, 843, 847, 848, 849, 851, 853, 857, 860, 872], "word": [4, 99, 142, 150, 154, 167, 174, 194, 200, 204, 205, 208, 223, 224, 238, 241, 389, 411, 721, 724, 739, 752, 827, 831, 848, 854, 860], "g": [4, 8, 28, 31, 37, 41, 42, 44, 67, 68, 69, 78, 79, 82, 94, 99, 110, 112, 113, 118, 124, 125, 133, 136, 139, 140, 142, 149, 150, 154, 159, 160, 161, 165, 167, 168, 169, 179, 187, 188, 189, 193, 194, 197, 199, 200, 201, 202, 203, 204, 206, 212, 213, 218, 219, 223, 224, 228, 231, 233, 237, 238, 241, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 294, 295, 296, 300, 307, 309, 310, 315, 324, 326, 335, 337, 348, 351, 355, 356, 362, 365, 366, 367, 376, 381, 384, 389, 398, 399, 405, 407, 408, 411, 412, 414, 415, 416, 419, 420, 421, 424, 425, 426, 429, 434, 437, 438, 439, 441, 443, 444, 446, 447, 448, 449, 455, 461, 464, 467, 468, 470, 471, 472, 473, 474, 475, 486, 507, 509, 513, 514, 515, 519, 525, 526, 527, 530, 534, 535, 536, 538, 551, 552, 554, 555, 562, 563, 566, 567, 568, 569, 571, 574, 577, 580, 586, 587, 588, 595, 600, 607, 614, 615, 620, 627, 628, 629, 630, 631, 632, 638, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 660, 663, 677, 678, 679, 680, 681, 682, 683, 687, 688, 692, 694, 695, 696, 700, 701, 702, 703, 705, 721, 723, 724, 739, 744, 752, 755, 756, 757, 762, 763, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 782, 783, 785, 786, 790, 791, 792, 793, 794, 797, 799, 801, 802, 805, 812, 817, 820, 827, 829, 831, 832, 835, 837, 843, 847, 848, 851, 853, 854, 857, 858, 860, 872], "easi": [4, 131, 161, 165, 181, 187, 190, 198, 203, 206, 212, 214, 238, 271, 358, 411, 827, 829, 831, 837, 848, 849, 851, 854], "identifi": [4, 12, 13, 27, 32, 33, 34, 76, 83, 133, 136, 145, 150, 168, 190, 194, 197, 203, 205, 220, 223, 241, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 309, 325, 332, 369, 408, 415, 457, 473, 474, 475, 479, 552, 556, 560, 566, 579, 589, 739, 748, 759, 797, 801, 802, 831, 847, 848, 851, 854, 857, 872], "while": [4, 10, 26, 45, 73, 75, 81, 85, 105, 125, 133, 136, 140, 141, 142, 143, 149, 150, 157, 159, 165, 171, 177, 178, 187, 197, 198, 203, 205, 206, 208, 214, 220, 223, 227, 231, 238, 241, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 294, 295, 351, 355, 356, 365, 366, 367, 405, 411, 412, 413, 422, 439, 448, 449, 468, 470, 471, 473, 474, 500, 522, 530, 552, 553, 564, 565, 568, 569, 572, 692, 695, 719, 720, 722, 723, 763, 769, 773, 777, 779, 786, 792, 795, 805, 827, 829, 831, 834, 848, 853, 854, 860, 872], "low": [4, 5, 11, 19, 45, 47, 59, 69, 73, 79, 80, 81, 82, 92, 108, 112, 133, 140, 142, 150, 165, 166, 179, 182, 187, 190, 194, 198, 201, 203, 208, 209, 223, 225, 227, 232, 241, 253, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 302, 351, 356, 407, 413, 416, 418, 440, 441, 443, 473, 474, 481, 484, 496, 519, 552, 557, 560, 564, 565, 568, 569, 571, 572, 573, 575, 576, 584, 645, 649, 654, 685, 686, 692, 695, 720, 723, 739, 769, 792, 827, 847, 848, 851, 853, 854, 872], "hard": [4, 112, 133, 141, 203, 220, 360, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 512, 831, 848, 849, 851, 872], "extens": [4, 12, 43, 44, 135, 139, 150, 157, 159, 169, 188, 189, 194, 213, 214, 253, 261, 262, 263, 264, 294, 295, 327, 328, 334, 412, 435, 436, 438, 473, 474, 480, 487, 490, 498, 580, 598, 607, 611, 693, 712, 739, 817, 834, 835, 847, 848, 854, 860, 872], "veri": [4, 10, 44, 45, 50, 60, 63, 68, 69, 78, 81, 112, 131, 133, 140, 143, 150, 156, 159, 167, 171, 180, 198, 200, 201, 202, 203, 204, 205, 208, 220, 223, 232, 238, 294, 317, 429, 473, 678, 827, 831, 834, 849, 854], "ll": [4, 7, 10, 19, 26, 34, 54, 59, 69, 112, 113, 114, 115, 118, 125, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 157, 159, 161, 165, 166, 167, 169, 170, 171, 178, 179, 180, 189, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 218, 220, 224, 227, 233, 236, 237, 831, 839, 851], "begin": [4, 19, 72, 91, 133, 150, 155, 165, 167, 168, 170, 171, 174, 187, 190, 193, 197, 199, 200, 201, 202, 203, 204, 205, 214, 218, 238, 255, 256, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 280, 284, 356, 434, 447, 473, 474, 498, 512, 525, 535, 536, 552, 555, 568, 569, 571, 572, 575, 580, 610, 611, 659, 692, 695, 696, 705, 772, 783, 784, 786, 793, 799, 825, 831, 836, 854, 857, 872], "littl": [4, 159, 170, 187, 200, 201, 203, 204, 220, 238, 834, 854], "you": [4, 24, 27, 28, 32, 41, 43, 47, 50, 59, 60, 77, 80, 81, 86, 101, 107, 111, 112, 113, 114, 115, 117, 118, 119, 125, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 181, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 223, 225, 226, 228, 231, 233, 236, 237, 238, 241, 253, 254, 255, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 286, 288, 294, 295, 310, 315, 325, 326, 327, 350, 351, 355, 356, 359, 360, 365, 366, 367, 372, 384, 405, 411, 412, 422, 429, 432, 438, 440, 446, 448, 449, 457, 464, 468, 470, 471, 473, 474, 475, 485, 489, 495, 517, 519, 530, 551, 552, 568, 571, 573, 581, 598, 604, 641, 656, 672, 687, 692, 694, 695, 696, 737, 740, 742, 755, 756, 760, 762, 769, 770, 774, 779, 782, 784, 785, 786, 792, 797, 809, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 842, 846, 847, 848, 849, 850, 851, 852, 854, 855, 857, 858, 872], "first": [4, 5, 7, 10, 11, 16, 19, 21, 28, 29, 32, 38, 39, 41, 42, 43, 44, 45, 47, 63, 69, 70, 78, 81, 82, 85, 86, 88, 92, 93, 101, 102, 106, 107, 110, 111, 112, 113, 118, 125, 129, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 144, 145, 148, 149, 150, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 187, 189, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 236, 237, 238, 241, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 285, 293, 294, 295, 299, 314, 319, 320, 351, 359, 360, 365, 371, 381, 405, 411, 412, 420, 428, 429, 430, 433, 434, 436, 437, 439, 443, 444, 445, 446, 447, 453, 455, 463, 472, 473, 474, 493, 495, 496, 507, 513, 514, 518, 522, 528, 529, 547, 551, 552, 553, 555, 557, 560, 562, 566, 589, 594, 606, 607, 610, 614, 625, 637, 642, 644, 645, 648, 650, 651, 666, 667, 668, 673, 677, 678, 679, 680, 682, 683, 684, 686, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 727, 729, 739, 744, 747, 755, 763, 767, 769, 770, 771, 772, 775, 776, 778, 782, 783, 784, 786, 791, 792, 793, 794, 797, 799, 801, 802, 817, 818, 827, 829, 830, 839, 847, 848, 851, 854, 857, 858, 872], "limo_epoch": 4, "column": [4, 10, 31, 92, 93, 99, 110, 139, 140, 142, 144, 150, 165, 171, 174, 187, 190, 194, 205, 208, 209, 212, 223, 224, 255, 256, 258, 261, 262, 263, 264, 266, 268, 269, 270, 272, 275, 276, 277, 296, 324, 365, 405, 412, 429, 433, 434, 446, 447, 463, 473, 474, 513, 531, 534, 547, 551, 552, 553, 598, 605, 606, 607, 614, 677, 678, 692, 694, 695, 696, 739, 771, 772, 778, 779, 782, 790, 791, 794, 799, 817, 827, 854, 857, 872], "1055": 4, "process": [4, 7, 27, 28, 32, 34, 45, 51, 59, 67, 68, 78, 82, 86, 99, 120, 133, 134, 141, 142, 143, 148, 150, 151, 154, 155, 159, 160, 161, 165, 171, 176, 181, 183, 187, 198, 199, 200, 201, 203, 204, 205, 206, 208, 212, 214, 223, 224, 225, 233, 238, 241, 253, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 284, 286, 288, 294, 295, 297, 351, 355, 356, 359, 365, 366, 367, 381, 389, 405, 407, 412, 413, 418, 422, 428, 429, 444, 448, 449, 468, 470, 471, 473, 474, 475, 484, 493, 525, 530, 552, 553, 562, 571, 580, 581, 588, 595, 597, 610, 641, 645, 665, 668, 679, 680, 682, 683, 692, 694, 695, 696, 719, 769, 773, 779, 792, 793, 829, 838, 839, 843, 846, 847, 848, 851, 853, 854, 857, 858, 860, 861, 862, 872], "epochsarrai": [4, 187, 218, 256, 261, 264, 358, 474, 605, 862, 872], "readi": [4, 5, 11, 13, 14, 15, 16, 18, 19, 27, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 81, 82, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 111, 112, 113, 115, 116, 119, 120, 121, 122, 127, 128, 130, 131, 133, 134, 140, 143, 145, 149, 150, 151, 155, 157, 158, 160, 161, 165, 166, 167, 168, 170, 171, 176, 179, 181, 182, 189, 194, 197, 201, 202, 203, 204, 205, 206, 207, 208, 212, 215, 218, 219, 220, 225, 226, 227, 228, 231, 233, 237, 263, 266, 272, 473, 581, 610, 620, 739, 758, 763, 831, 848], "goodb": [4, 8, 10, 12, 22, 28, 37, 38, 44, 95, 108, 109, 125, 126, 133, 136, 200, 203, 204, 209, 213, 215, 220, 223, 224, 227, 231, 232, 233, 238, 241, 253, 256, 261, 262, 263, 264, 268, 269, 271, 272, 273, 275, 276, 277, 284, 351, 357, 376, 398, 399, 426, 440, 442, 473, 474, 535, 536, 568, 569, 610, 611, 645, 673, 675, 678, 686, 692, 695, 705, 719, 720, 722, 723, 739, 763, 769, 792, 799, 831, 848, 851, 854, 872], "531": [4, 228], "visualis": [4, 27, 29, 30, 48, 49, 50, 54, 55, 76, 83, 99, 164, 175, 209, 229, 230, 255, 261, 263, 264, 266, 315, 321, 350, 474, 500, 583, 587, 603, 683], "distribut": [4, 19, 22, 26, 46, 48, 54, 55, 59, 60, 71, 114, 144, 149, 154, 161, 164, 165, 176, 185, 186, 190, 203, 205, 223, 225, 228, 231, 232, 237, 238, 241, 258, 259, 261, 262, 263, 264, 265, 266, 270, 272, 361, 470, 473, 474, 518, 519, 530, 560, 587, 601, 610, 612, 625, 640, 644, 674, 677, 679, 680, 682, 683, 694, 696, 739, 748, 755, 767, 800, 807, 827, 836, 837, 838, 847, 848, 851, 853, 854, 872], "appear": [4, 92, 99, 133, 139, 143, 157, 167, 171, 179, 182, 190, 197, 200, 201, 206, 214, 253, 261, 262, 263, 264, 271, 426, 473, 474, 484, 507, 757, 795, 827, 831, 848, 854, 857, 872], "clearli": [4, 21, 125, 133, 143, 151, 165, 190, 201, 203, 205, 207], "group": [4, 27, 69, 107, 110, 120, 128, 133, 136, 139, 141, 142, 144, 150, 154, 159, 160, 166, 171, 177, 200, 215, 220, 223, 224, 227, 228, 232, 233, 241, 253, 261, 262, 263, 264, 266, 271, 294, 295, 311, 321, 422, 431, 432, 434, 465, 473, 474, 489, 552, 566, 641, 657, 674, 680, 683, 744, 769, 770, 775, 792, 795, 827, 831, 838, 854, 862, 872], "order": [4, 16, 18, 19, 27, 31, 34, 38, 47, 68, 69, 73, 80, 82, 86, 90, 92, 105, 109, 110, 112, 115, 119, 121, 126, 135, 142, 143, 144, 148, 155, 159, 160, 161, 164, 165, 168, 171, 176, 187, 189, 193, 197, 198, 199, 202, 203, 204, 205, 207, 208, 212, 215, 220, 228, 233, 241, 253, 254, 256, 258, 261, 262, 263, 264, 265, 266, 267, 270, 271, 285, 299, 314, 321, 338, 340, 344, 351, 358, 360, 364, 405, 407, 411, 412, 416, 426, 430, 434, 440, 441, 442, 443, 444, 449, 458, 473, 474, 480, 481, 488, 518, 525, 526, 528, 529, 543, 544, 545, 551, 552, 560, 562, 563, 564, 565, 571, 580, 594, 626, 637, 669, 674, 688, 692, 693, 694, 695, 696, 704, 705, 709, 725, 727, 729, 736, 744, 756, 769, 770, 771, 775, 778, 780, 782, 786, 787, 791, 792, 794, 795, 799, 800, 801, 829, 831, 847, 851, 854, 857, 872], "suptitl": [4, 18, 22, 37, 42, 45, 69, 72, 78, 85, 88, 101, 107, 110, 114, 118, 131, 133, 140, 143, 145, 150, 159, 175, 190, 193, 198, 200, 201, 203, 204, 205, 206, 208, 209, 223, 405, 412, 872], "As": [4, 38, 43, 69, 86, 92, 110, 133, 135, 139, 142, 144, 148, 149, 150, 156, 159, 165, 166, 167, 168, 169, 171, 174, 179, 187, 190, 193, 194, 197, 198, 199, 200, 202, 203, 205, 206, 208, 212, 213, 214, 215, 218, 225, 227, 233, 236, 238, 243, 413, 434, 490, 500, 566, 678, 687, 739, 763, 847, 853, 854, 857, 860, 872], "seen": [4, 12, 27, 73, 139, 142, 143, 145, 149, 150, 155, 168, 169, 194, 197, 201, 204, 205, 209, 212, 215, 294, 412, 644, 645, 720, 723, 831, 854, 855, 857], "abov": [4, 21, 42, 43, 45, 49, 60, 69, 73, 74, 80, 86, 112, 114, 133, 139, 141, 143, 149, 150, 155, 159, 160, 165, 166, 167, 169, 170, 171, 174, 187, 189, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 215, 218, 220, 227, 228, 238, 241, 255, 258, 261, 262, 263, 264, 266, 274, 350, 405, 407, 412, 416, 429, 435, 436, 438, 441, 443, 473, 474, 475, 481, 500, 551, 552, 554, 571, 579, 589, 679, 680, 682, 683, 692, 694, 696, 720, 723, 729, 739, 763, 770, 771, 778, 782, 784, 794, 795, 799, 801, 827, 830, 831, 836, 847, 851, 854, 855, 858], "These": [4, 27, 45, 54, 55, 60, 69, 92, 133, 136, 137, 143, 144, 146, 150, 152, 154, 157, 159, 161, 162, 164, 165, 166, 169, 171, 172, 177, 179, 185, 187, 188, 189, 191, 193, 194, 195, 199, 200, 203, 207, 209, 210, 215, 216, 220, 221, 223, 224, 229, 234, 238, 239, 252, 261, 262, 263, 264, 266, 278, 302, 303, 322, 351, 355, 356, 357, 424, 473, 474, 516, 552, 562, 571, 580, 611, 649, 654, 678, 692, 694, 695, 696, 827, 831, 838, 847, 848, 851, 853, 854, 855, 857, 860, 872], "easili": [4, 43, 44, 99, 139, 143, 148, 159, 167, 169, 187, 189, 197, 200, 203, 205, 206, 212, 213, 214, 215, 231, 238, 432, 473, 474, 571, 678, 831, 838, 847, 854, 872], "access": [4, 52, 99, 130, 133, 157, 165, 167, 168, 174, 204, 212, 214, 215, 236, 241, 254, 256, 261, 262, 265, 274, 473, 474, 604, 606, 694, 695, 696, 721, 724, 831, 837, 849, 853, 857, 872], "call": [4, 8, 9, 18, 31, 43, 44, 69, 81, 85, 86, 92, 110, 115, 126, 133, 139, 141, 143, 144, 145, 148, 149, 150, 154, 155, 157, 158, 159, 160, 165, 167, 169, 170, 171, 174, 177, 181, 189, 194, 197, 198, 200, 201, 203, 204, 208, 212, 213, 214, 215, 223, 225, 227, 228, 233, 237, 238, 253, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 272, 273, 275, 276, 277, 279, 305, 309, 351, 352, 354, 356, 357, 362, 408, 411, 415, 418, 421, 422, 426, 438, 440, 448, 461, 463, 473, 474, 481, 488, 500, 511, 514, 515, 519, 520, 521, 522, 523, 525, 526, 535, 536, 552, 557, 562, 563, 564, 565, 568, 570, 571, 580, 595, 631, 640, 643, 644, 645, 657, 662, 666, 679, 680, 681, 682, 683, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 708, 710, 711, 718, 719, 720, 721, 722, 723, 736, 737, 739, 756, 763, 769, 770, 771, 774, 777, 778, 793, 801, 827, 829, 830, 831, 835, 839, 849, 851, 853, 854, 857, 858, 862, 872], "shown": [4, 32, 52, 69, 78, 81, 92, 99, 116, 118, 125, 133, 135, 141, 148, 149, 150, 155, 157, 161, 165, 171, 179, 181, 200, 204, 209, 212, 213, 215, 228, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 309, 405, 412, 464, 473, 474, 503, 530, 551, 552, 566, 692, 694, 695, 696, 739, 755, 756, 757, 763, 764, 766, 767, 769, 771, 773, 775, 776, 777, 778, 780, 782, 789, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 809, 854, 855, 857, 872], "below": [4, 10, 19, 43, 47, 74, 110, 112, 125, 133, 139, 150, 154, 160, 165, 167, 169, 171, 189, 193, 200, 201, 203, 204, 205, 206, 208, 209, 214, 223, 228, 231, 233, 236, 238, 241, 256, 258, 259, 260, 261, 262, 263, 264, 268, 269, 272, 273, 274, 275, 276, 277, 303, 309, 357, 407, 416, 424, 432, 441, 443, 464, 473, 474, 490, 519, 552, 554, 560, 562, 644, 678, 679, 680, 682, 683, 692, 695, 739, 758, 770, 775, 779, 782, 784, 797, 802, 803, 831, 837, 847, 851, 853, 854, 858, 862, 872], "also": [4, 10, 19, 21, 27, 28, 29, 30, 32, 38, 39, 41, 42, 43, 45, 47, 60, 62, 68, 69, 70, 77, 78, 79, 81, 82, 92, 93, 99, 102, 105, 107, 110, 112, 114, 115, 118, 124, 125, 133, 134, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 220, 223, 224, 225, 227, 228, 231, 233, 236, 237, 238, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 294, 295, 301, 302, 303, 307, 309, 311, 319, 320, 324, 326, 327, 337, 344, 351, 356, 357, 363, 365, 368, 376, 383, 405, 407, 412, 417, 421, 424, 426, 429, 440, 441, 443, 444, 445, 446, 448, 455, 458, 465, 468, 470, 471, 473, 474, 481, 485, 493, 496, 511, 514, 515, 525, 526, 527, 530, 549, 551, 552, 554, 555, 561, 562, 564, 566, 567, 568, 569, 572, 573, 574, 575, 577, 586, 588, 594, 595, 602, 610, 627, 628, 631, 637, 640, 641, 648, 657, 660, 678, 679, 684, 687, 692, 694, 695, 696, 700, 701, 702, 703, 705, 720, 723, 729, 737, 739, 755, 756, 762, 763, 764, 767, 769, 770, 771, 773, 775, 776, 778, 779, 781, 782, 783, 789, 790, 791, 792, 793, 794, 795, 797, 799, 801, 803, 805, 812, 827, 829, 831, 834, 835, 836, 837, 838, 839, 846, 847, 848, 849, 851, 852, 853, 854, 855, 856, 857, 860, 862, 872], "conveni": [4, 11, 45, 69, 74, 133, 136, 141, 150, 157, 160, 165, 168, 170, 171, 180, 194, 197, 200, 204, 205, 213, 218, 223, 224, 225, 228, 231, 232, 233, 237, 241, 261, 262, 263, 264, 265, 271, 472, 473, 474, 479, 503, 525, 552, 560, 568, 569, 634, 637, 639, 682, 683, 692, 694, 695, 696, 752, 829, 831, 835, 847, 848, 854, 872], "head": [4, 5, 10, 22, 26, 41, 43, 45, 50, 69, 70, 77, 78, 99, 107, 110, 113, 116, 118, 123, 125, 133, 134, 135, 142, 144, 149, 150, 156, 158, 162, 163, 164, 165, 168, 169, 171, 174, 175, 176, 177, 179, 180, 182, 183, 184, 187, 189, 190, 197, 198, 203, 205, 206, 208, 210, 211, 212, 224, 238, 241, 258, 259, 261, 262, 263, 264, 265, 266, 270, 271, 274, 299, 301, 302, 303, 304, 305, 306, 309, 312, 313, 321, 322, 325, 327, 332, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 351, 357, 358, 360, 361, 362, 363, 369, 382, 385, 405, 412, 424, 426, 448, 455, 456, 464, 465, 466, 467, 473, 474, 478, 480, 484, 485, 486, 492, 496, 498, 502, 504, 509, 510, 511, 514, 515, 516, 551, 552, 556, 559, 561, 562, 563, 566, 571, 577, 580, 581, 600, 605, 606, 609, 612, 623, 633, 640, 641, 643, 644, 645, 649, 654, 657, 660, 687, 692, 694, 696, 726, 727, 739, 755, 756, 757, 762, 763, 767, 771, 773, 774, 775, 776, 778, 779, 781, 782, 789, 791, 793, 794, 795, 799, 801, 807, 818, 819, 820, 825, 827, 831, 848, 857, 860, 861, 862, 872], "491210": 4, "235572": 4, "043707": 4, "642398": 4, "659978": 4, "now": [4, 19, 24, 26, 32, 41, 45, 50, 69, 71, 73, 82, 85, 86, 107, 109, 110, 111, 118, 125, 132, 133, 134, 135, 136, 139, 140, 143, 144, 145, 150, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 171, 175, 177, 178, 179, 181, 182, 193, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 214, 220, 225, 227, 228, 231, 232, 233, 237, 238, 259, 261, 262, 263, 264, 317, 458, 473, 474, 552, 637, 740, 760, 767, 782, 831, 854, 857, 872], "let": [4, 10, 18, 21, 26, 32, 47, 55, 69, 70, 72, 85, 107, 111, 119, 125, 133, 134, 135, 139, 140, 141, 143, 145, 149, 150, 151, 155, 157, 158, 159, 161, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 194, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 212, 220, 223, 227, 228, 231, 232, 233, 237, 238, 505, 708, 718, 740, 831, 834, 872], "closer": [4, 24, 41, 107, 140, 157, 208, 223, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 641, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801], "want": [4, 41, 50, 81, 92, 110, 113, 118, 125, 133, 134, 135, 139, 140, 141, 142, 143, 144, 148, 149, 150, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 177, 179, 188, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 218, 219, 223, 225, 227, 228, 231, 232, 238, 253, 254, 261, 262, 263, 264, 268, 272, 276, 315, 372, 429, 434, 473, 474, 552, 568, 762, 792, 797, 809, 830, 831, 834, 838, 839, 851, 852, 853, 854, 857, 858], "includ": [4, 7, 28, 37, 41, 68, 69, 80, 84, 94, 95, 97, 101, 102, 105, 108, 111, 112, 121, 130, 133, 134, 136, 139, 141, 142, 143, 145, 148, 150, 151, 154, 158, 159, 161, 165, 166, 167, 168, 169, 171, 175, 179, 181, 184, 187, 188, 189, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 212, 214, 215, 218, 223, 225, 226, 227, 233, 241, 247, 252, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 293, 295, 307, 310, 311, 315, 324, 326, 351, 356, 357, 364, 365, 407, 412, 421, 426, 429, 433, 434, 443, 444, 446, 458, 459, 472, 473, 474, 481, 484, 486, 488, 489, 490, 494, 498, 513, 515, 520, 522, 530, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 559, 560, 562, 563, 567, 568, 569, 571, 574, 577, 579, 580, 586, 588, 591, 595, 604, 606, 607, 610, 611, 612, 621, 660, 677, 678, 687, 691, 692, 694, 695, 696, 700, 701, 702, 703, 705, 709, 721, 723, 724, 729, 735, 739, 763, 769, 770, 771, 772, 773, 775, 776, 783, 784, 788, 792, 793, 799, 817, 827, 829, 831, 833, 834, 835, 836, 837, 838, 839, 843, 847, 848, 849, 850, 851, 853, 854, 855, 856, 857, 858, 860, 872], "tabl": [4, 41, 121, 133, 142, 143, 170, 171, 184, 188, 200, 212, 213, 236, 261, 262, 263, 264, 266, 268, 269, 271, 272, 274, 275, 276, 277, 457, 458, 473, 474, 530, 641, 739, 758, 763, 770, 797, 802, 803, 804, 808, 822, 827, 854, 857, 858, 872], "epochs_summari": 4, "describ": [4, 13, 16, 73, 97, 111, 115, 148, 150, 155, 157, 161, 164, 165, 167, 168, 169, 170, 171, 187, 193, 197, 199, 204, 205, 206, 208, 209, 213, 214, 220, 221, 224, 229, 238, 241, 263, 264, 294, 350, 351, 357, 405, 413, 426, 429, 437, 473, 474, 551, 552, 553, 580, 616, 642, 662, 663, 664, 665, 666, 667, 668, 706, 708, 711, 718, 722, 779, 785, 827, 829, 847, 851, 853, 854, 857, 860, 872], "round": [4, 37, 107, 139, 144, 148, 159, 167, 171, 193, 200, 201, 203, 204, 212, 220, 238, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 434, 473, 474, 692, 695, 872], "count": [4, 22, 69, 71, 139, 170, 209, 214, 223, 227, 231, 233, 256, 261, 262, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 428, 448, 449, 468, 470, 471, 512, 530, 562, 603, 679, 680, 682, 683, 779, 872], "uniqu": [4, 10, 18, 99, 142, 149, 150, 165, 167, 213, 223, 228, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 318, 434, 463, 473, 474, 514, 552, 604, 665, 668, 692, 694, 695, 696, 720, 723, 763, 773, 854, 857, 872], "nan": [4, 68, 69, 133, 143, 208, 225, 226, 227, 228, 238, 473, 474, 500, 558, 571, 872], "top": [4, 72, 110, 113, 118, 125, 135, 139, 150, 157, 159, 160, 171, 175, 180, 198, 201, 203, 204, 205, 206, 209, 212, 214, 215, 223, 253, 261, 262, 263, 264, 269, 275, 277, 739, 740, 757, 769, 773, 802, 827, 831, 854, 857, 872], "freq": [4, 9, 21, 32, 33, 34, 67, 102, 105, 107, 110, 112, 131, 136, 165, 193, 197, 200, 201, 225, 226, 227, 228, 236, 237, 238, 240, 253, 338, 340, 418, 444, 473, 474, 536, 672, 692, 693, 694, 695, 696, 706, 708, 710, 711, 716, 718, 719, 720, 721, 722, 723, 762, 780, 787, 860, 872], "std": [4, 16, 150, 190, 220, 233, 236, 237, 238, 261, 262, 263, 264, 311, 405, 412, 473, 474, 508, 692, 763, 770, 773, 776, 793], "min": [4, 9, 21, 22, 94, 95, 110, 112, 114, 135, 136, 140, 145, 156, 171, 193, 197, 203, 205, 212, 223, 224, 225, 226, 227, 228, 231, 232, 233, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 318, 405, 407, 412, 416, 438, 441, 443, 473, 474, 551, 552, 564, 572, 573, 575, 584, 588, 589, 692, 694, 696, 756, 770, 771, 778, 782, 791, 792, 793, 794, 797, 799, 800, 801, 802, 812], "619": [4, 6, 207, 228], "852": [4, 194, 228], "084": 4, "875": [4, 142, 181, 228, 854], "max": [4, 5, 8, 9, 19, 21, 22, 31, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 79, 82, 88, 91, 92, 94, 98, 107, 110, 113, 114, 119, 133, 135, 140, 143, 149, 151, 156, 159, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 201, 208, 212, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 252, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 294, 295, 318, 355, 405, 407, 412, 416, 438, 439, 441, 443, 473, 474, 503, 528, 529, 534, 551, 552, 573, 584, 589, 679, 680, 681, 682, 683, 685, 692, 694, 696, 708, 718, 739, 747, 756, 770, 771, 774, 778, 782, 791, 793, 794, 797, 799, 800, 801, 802, 812, 859, 872], "642": [4, 59, 194, 207, 241, 471], "provid": [4, 5, 18, 19, 27, 43, 44, 65, 78, 88, 91, 92, 93, 101, 136, 139, 141, 145, 148, 149, 150, 154, 155, 159, 160, 164, 165, 166, 167, 168, 169, 170, 171, 174, 183, 184, 187, 188, 189, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 212, 213, 214, 215, 218, 220, 224, 225, 228, 241, 242, 253, 255, 256, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 282, 285, 294, 295, 299, 300, 307, 310, 318, 321, 326, 350, 352, 353, 354, 355, 356, 357, 362, 365, 368, 381, 382, 385, 405, 407, 412, 421, 426, 429, 432, 443, 444, 446, 448, 458, 464, 472, 473, 474, 492, 493, 502, 503, 505, 514, 518, 539, 551, 552, 554, 555, 562, 567, 568, 569, 571, 574, 580, 586, 588, 595, 605, 609, 620, 631, 641, 642, 657, 660, 677, 678, 680, 682, 683, 686, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 719, 720, 721, 722, 723, 724, 727, 728, 729, 736, 739, 755, 756, 758, 763, 765, 769, 770, 771, 773, 774, 775, 776, 778, 781, 782, 786, 788, 791, 792, 793, 794, 797, 799, 801, 802, 803, 827, 829, 831, 832, 834, 835, 837, 838, 843, 846, 847, 848, 849, 851, 853, 854, 855, 857, 860, 862, 872], "command": [4, 121, 133, 150, 154, 157, 159, 170, 184, 188, 261, 262, 266, 357, 464, 473, 474, 509, 552, 633, 769, 786, 792, 829, 830, 834, 835, 836, 837, 838, 839, 843, 847, 849, 862, 872], "ran": [4, 228, 266], "befor": [4, 5, 21, 24, 26, 41, 44, 45, 50, 61, 67, 69, 80, 84, 86, 88, 92, 117, 125, 133, 135, 136, 139, 140, 141, 142, 143, 144, 148, 150, 155, 156, 157, 159, 160, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 182, 183, 184, 187, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 220, 236, 238, 253, 254, 256, 258, 261, 262, 263, 264, 266, 268, 269, 271, 272, 273, 275, 276, 277, 294, 311, 338, 356, 359, 366, 367, 405, 411, 412, 414, 417, 429, 435, 436, 437, 438, 439, 440, 446, 447, 449, 473, 474, 512, 525, 526, 528, 529, 535, 536, 551, 552, 555, 564, 565, 568, 569, 571, 572, 595, 603, 610, 615, 648, 649, 650, 651, 652, 654, 656, 678, 679, 680, 682, 683, 687, 693, 694, 696, 756, 765, 770, 771, 773, 775, 777, 778, 783, 784, 785, 790, 793, 809, 822, 829, 839, 847, 848, 851, 853, 854, 857, 872], "There": [4, 73, 81, 118, 125, 140, 143, 150, 155, 157, 158, 165, 169, 170, 171, 176, 179, 189, 197, 199, 200, 201, 203, 204, 208, 212, 214, 223, 236, 261, 398, 429, 552, 587, 641, 831, 835, 838, 848, 851, 852, 854, 856, 857], "subdivid": [4, 159, 160, 253, 268, 272, 276, 380, 640, 797, 872], "particular": [4, 27, 124, 133, 139, 140, 154, 165, 167, 171, 174, 193, 194, 200, 203, 204, 212, 225, 233, 253, 255, 261, 262, 271, 300, 422, 449, 473, 474, 481, 615, 672, 679, 680, 682, 683, 769, 792, 829, 851, 853, 854, 855, 860], "addit": [4, 34, 42, 45, 60, 61, 69, 74, 80, 110, 112, 133, 134, 139, 141, 144, 149, 151, 155, 159, 160, 161, 165, 169, 187, 188, 189, 190, 193, 194, 199, 200, 203, 204, 205, 206, 208, 212, 214, 215, 218, 228, 238, 253, 258, 261, 262, 263, 264, 268, 269, 272, 273, 274, 275, 276, 277, 332, 350, 351, 356, 381, 405, 406, 407, 410, 412, 413, 416, 426, 429, 436, 438, 443, 473, 474, 479, 519, 520, 521, 522, 523, 525, 526, 532, 535, 536, 549, 550, 551, 552, 553, 564, 565, 581, 610, 636, 646, 678, 679, 680, 682, 683, 691, 692, 694, 695, 696, 711, 719, 720, 722, 723, 739, 752, 756, 769, 771, 773, 778, 782, 784, 790, 792, 794, 797, 799, 801, 802, 831, 834, 835, 837, 838, 847, 848, 850, 851, 854, 857, 858, 860, 872], "valu": [4, 5, 7, 8, 9, 10, 16, 19, 21, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 68, 70, 88, 91, 92, 94, 99, 101, 102, 107, 110, 112, 118, 119, 125, 129, 130, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 155, 159, 161, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 199, 200, 201, 203, 204, 205, 208, 209, 212, 214, 218, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 236, 237, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 280, 284, 285, 294, 295, 297, 299, 303, 306, 307, 311, 318, 322, 324, 326, 327, 345, 346, 351, 352, 354, 355, 356, 357, 362, 365, 366, 367, 371, 381, 398, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 426, 427, 429, 433, 434, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 453, 458, 461, 463, 464, 465, 468, 470, 471, 473, 474, 475, 481, 483, 488, 494, 496, 500, 505, 507, 508, 509, 511, 512, 514, 515, 516, 518, 519, 523, 525, 526, 527, 528, 529, 530, 533, 535, 536, 540, 551, 552, 553, 554, 555, 557, 558, 561, 564, 565, 566, 567, 568, 569, 571, 573, 574, 577, 578, 586, 588, 589, 591, 595, 597, 603, 607, 610, 614, 623, 630, 634, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 665, 668, 670, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 690, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 710, 711, 719, 720, 721, 722, 723, 727, 728, 729, 739, 742, 748, 755, 756, 758, 761, 763, 764, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 782, 783, 790, 791, 792, 793, 794, 797, 799, 800, 801, 802, 803, 804, 809, 812, 825, 827, 831, 847, 848, 851, 854, 857, 872], "z": [4, 5, 11, 16, 18, 24, 41, 45, 50, 126, 150, 155, 157, 158, 159, 168, 169, 174, 175, 179, 180, 182, 183, 184, 188, 200, 204, 206, 241, 258, 261, 262, 263, 264, 265, 269, 270, 275, 277, 302, 303, 309, 321, 332, 341, 342, 405, 412, 424, 473, 474, 485, 519, 551, 552, 557, 561, 566, 571, 612, 644, 645, 692, 694, 696, 729, 730, 732, 739, 756, 763, 769, 771, 773, 775, 778, 779, 781, 782, 786, 789, 791, 792, 793, 794, 795, 799, 801, 807, 808, 819, 827, 837, 854, 872], "score": [4, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 73, 81, 136, 171, 193, 194, 203, 208, 271, 405, 408, 409, 411, 412, 415, 422, 552, 557, 566, 571, 648, 679, 680, 682, 683, 785, 808, 848, 851, 872], "thei": [4, 5, 26, 41, 45, 47, 50, 69, 70, 73, 80, 81, 92, 105, 112, 117, 133, 139, 140, 141, 143, 148, 150, 151, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 175, 179, 180, 181, 187, 189, 190, 194, 197, 198, 199, 200, 201, 203, 204, 205, 208, 209, 212, 213, 214, 215, 228, 231, 241, 254, 256, 261, 262, 263, 264, 266, 271, 294, 304, 306, 321, 322, 331, 351, 358, 360, 405, 412, 426, 428, 434, 438, 440, 447, 473, 474, 481, 488, 493, 494, 496, 512, 528, 529, 541, 552, 563, 570, 571, 580, 595, 603, 604, 606, 637, 695, 734, 739, 756, 772, 773, 776, 782, 822, 827, 829, 831, 834, 838, 847, 849, 853, 854, 872], "have": [4, 10, 19, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 78, 81, 82, 84, 85, 88, 92, 93, 99, 101, 102, 110, 113, 114, 115, 117, 118, 125, 129, 132, 133, 134, 136, 139, 141, 142, 143, 144, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 178, 180, 181, 182, 187, 188, 189, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 227, 228, 231, 233, 236, 238, 252, 253, 254, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 288, 289, 292, 294, 295, 303, 311, 314, 317, 327, 350, 351, 355, 356, 357, 362, 365, 366, 367, 398, 405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 424, 425, 426, 429, 430, 439, 440, 445, 448, 449, 455, 463, 465, 468, 470, 471, 472, 473, 474, 481, 484, 485, 488, 490, 493, 495, 511, 513, 521, 523, 526, 530, 538, 547, 551, 552, 553, 562, 563, 566, 568, 569, 570, 571, 573, 580, 598, 600, 610, 629, 631, 634, 637, 642, 643, 644, 645, 646, 657, 662, 666, 674, 678, 692, 693, 694, 695, 696, 711, 712, 719, 720, 729, 739, 743, 744, 756, 762, 763, 769, 770, 771, 773, 776, 778, 779, 782, 791, 793, 794, 799, 800, 801, 805, 809, 820, 822, 827, 829, 832, 836, 837, 839, 843, 848, 849, 852, 853, 854, 857, 858, 860, 872], "standard": [4, 8, 28, 34, 41, 44, 46, 69, 73, 81, 92, 107, 119, 133, 134, 140, 148, 149, 150, 154, 158, 159, 168, 169, 170, 181, 190, 193, 194, 198, 200, 203, 206, 212, 218, 224, 233, 237, 241, 253, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 284, 309, 311, 320, 325, 327, 384, 405, 412, 414, 425, 438, 439, 454, 458, 461, 473, 474, 481, 485, 488, 496, 500, 519, 535, 536, 546, 551, 552, 571, 606, 613, 637, 641, 674, 677, 692, 694, 695, 696, 704, 705, 739, 756, 757, 763, 764, 770, 771, 773, 778, 779, 782, 784, 791, 794, 797, 799, 800, 801, 803, 827, 829, 847, 848, 849, 851, 854, 857, 860, 862, 872], "deviat": [4, 54, 55, 88, 95, 98, 119, 149, 150, 177, 194, 203, 207, 223, 225, 237, 258, 261, 262, 263, 264, 284, 311, 405, 534, 535, 536, 552, 571, 654, 674, 692, 694, 695, 696, 763, 764, 770, 773, 779, 782, 784, 799, 800, 827, 854, 872], "how": [4, 5, 9, 10, 13, 18, 19, 22, 26, 27, 31, 33, 43, 44, 45, 47, 58, 62, 64, 66, 67, 68, 69, 70, 74, 77, 88, 92, 93, 96, 97, 103, 111, 114, 115, 118, 120, 122, 123, 125, 127, 128, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 187, 189, 193, 194, 199, 200, 201, 202, 203, 204, 206, 207, 209, 212, 213, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 233, 236, 237, 238, 241, 254, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 272, 274, 275, 276, 277, 294, 295, 305, 309, 310, 335, 339, 345, 357, 362, 363, 364, 369, 405, 411, 412, 417, 432, 447, 449, 463, 464, 468, 470, 471, 473, 474, 478, 486, 493, 496, 503, 519, 528, 529, 530, 551, 552, 555, 563, 571, 580, 581, 622, 623, 624, 625, 633, 637, 640, 641, 679, 680, 682, 683, 690, 692, 693, 694, 695, 696, 711, 739, 740, 747, 755, 756, 757, 760, 763, 765, 769, 770, 771, 774, 778, 782, 783, 784, 785, 791, 792, 794, 797, 798, 799, 801, 802, 807, 809, 827, 829, 831, 832, 839, 847, 848, 853, 854, 855, 857, 858, 860, 872], "onli": [4, 8, 10, 11, 12, 19, 21, 22, 31, 34, 39, 41, 44, 45, 47, 49, 50, 55, 63, 69, 73, 77, 80, 81, 86, 88, 91, 92, 93, 94, 95, 101, 105, 107, 110, 112, 113, 114, 115, 118, 125, 129, 131, 135, 136, 139, 140, 141, 142, 148, 149, 150, 156, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 179, 182, 187, 188, 189, 190, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 215, 218, 219, 220, 223, 225, 226, 227, 228, 231, 232, 233, 237, 238, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 322, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 424, 426, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 453, 455, 456, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 548, 549, 550, 551, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 639, 640, 641, 643, 644, 645, 646, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 669, 678, 679, 680, 681, 682, 683, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 710, 711, 714, 715, 719, 720, 721, 722, 723, 724, 725, 728, 729, 734, 738, 739, 747, 755, 756, 757, 758, 760, 763, 764, 767, 769, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 831, 838, 847, 848, 851, 852, 853, 854, 855, 857, 872], "500": [4, 10, 11, 22, 69, 78, 79, 84, 86, 114, 134, 140, 142, 144, 180, 183, 189, 193, 194, 200, 203, 207, 209, 220, 228, 552], "ts_arg": [4, 99, 126, 194, 209, 224, 261, 262, 263, 264, 552, 770, 776, 784, 872], "xlim": [4, 19, 37, 39, 95, 125, 159, 180, 193, 200, 201, 209, 220, 223, 233, 238, 263, 264, 773, 775], "plot_joint": [4, 70, 99, 149, 150, 165, 179, 181, 194, 197, 203, 205, 209, 224, 237, 263, 264, 692, 858, 872], "15": [4, 5, 9, 11, 12, 19, 20, 21, 28, 29, 32, 33, 34, 35, 42, 43, 45, 47, 50, 51, 56, 58, 67, 68, 69, 70, 72, 74, 75, 78, 79, 81, 83, 90, 91, 92, 101, 106, 107, 112, 125, 128, 133, 135, 136, 140, 141, 142, 144, 148, 150, 153, 154, 156, 161, 163, 165, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 194, 199, 201, 202, 203, 205, 206, 207, 208, 209, 212, 218, 223, 224, 225, 227, 228, 231, 232, 233, 236, 241, 259, 261, 262, 263, 264, 268, 269, 270, 271, 272, 274, 275, 276, 277, 281, 315, 365, 407, 416, 441, 443, 444, 445, 470, 473, 474, 500, 552, 555, 564, 565, 625, 656, 676, 681, 691, 694, 696, 711, 721, 722, 724, 743, 754, 755, 769, 777, 797, 802, 827, 834, 847, 848, 854], "titl": [4, 8, 9, 15, 16, 19, 22, 30, 35, 39, 42, 43, 44, 46, 47, 48, 49, 50, 54, 55, 59, 68, 69, 70, 75, 80, 84, 88, 92, 99, 101, 105, 106, 107, 108, 112, 118, 121, 123, 125, 130, 133, 136, 140, 141, 143, 145, 150, 151, 159, 171, 174, 175, 176, 178, 179, 193, 194, 198, 200, 201, 203, 204, 205, 206, 208, 220, 223, 224, 225, 228, 233, 237, 238, 241, 259, 261, 262, 263, 264, 268, 271, 272, 276, 405, 412, 473, 474, 551, 552, 692, 694, 696, 739, 759, 762, 763, 767, 768, 769, 770, 771, 773, 775, 776, 777, 780, 782, 783, 785, 786, 787, 792, 794, 795, 797, 800, 806, 831, 846, 872], "differ": [4, 9, 16, 21, 22, 27, 28, 33, 37, 39, 44, 45, 47, 54, 55, 63, 67, 69, 76, 78, 79, 83, 92, 94, 97, 99, 101, 105, 108, 109, 110, 112, 118, 120, 121, 125, 128, 132, 133, 134, 136, 139, 141, 142, 143, 146, 148, 149, 150, 151, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 182, 183, 184, 187, 188, 189, 190, 194, 197, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 218, 223, 224, 225, 226, 228, 231, 232, 233, 237, 241, 255, 256, 261, 262, 263, 264, 265, 268, 269, 272, 275, 276, 277, 278, 294, 295, 296, 300, 317, 338, 351, 355, 356, 358, 360, 361, 365, 366, 367, 385, 398, 405, 412, 414, 426, 428, 429, 439, 446, 448, 449, 463, 464, 468, 470, 471, 473, 474, 481, 488, 494, 505, 512, 525, 527, 528, 529, 530, 539, 552, 554, 562, 563, 568, 571, 578, 580, 594, 597, 603, 604, 607, 611, 634, 643, 644, 645, 646, 652, 655, 656, 657, 658, 674, 679, 680, 681, 682, 683, 692, 693, 694, 695, 696, 739, 744, 755, 765, 769, 773, 777, 778, 779, 784, 786, 792, 797, 803, 818, 827, 829, 831, 835, 836, 839, 847, 848, 849, 851, 854, 857, 860, 872], "wave": [4, 46, 93, 112, 136, 143, 150, 165, 200, 205, 224, 236, 241, 261, 262, 263, 264, 398, 399, 473, 474, 502, 564, 568, 572, 694, 696, 704, 710, 848], "contrast": [4, 7, 86, 94, 97, 148, 150, 165, 169, 206, 220, 223, 224, 231, 236, 237, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695, 848, 858, 860, 872], "although": [4, 21, 65, 99, 139, 142, 148, 160, 171, 199, 200, 202, 204, 212, 259, 438, 473, 474, 674, 838, 854, 872], "shouldn": [4, 150, 241, 272, 275, 539], "expect": [4, 32, 38, 92, 112, 119, 143, 155, 158, 160, 161, 164, 165, 166, 171, 179, 189, 194, 200, 203, 204, 205, 209, 212, 213, 218, 220, 223, 227, 228, 233, 238, 261, 262, 263, 264, 327, 329, 334, 355, 473, 474, 480, 489, 492, 498, 530, 552, 580, 604, 605, 609, 620, 631, 739, 769, 779, 786, 792, 827, 829, 831, 850, 851, 853, 854, 855, 872], "great": [4, 118, 143, 150, 238, 849, 860], "among": [4, 10, 27, 36, 56, 171, 200, 223, 272, 274, 361, 529, 531, 533, 552, 571, 612, 615, 672, 739, 744, 843, 853, 872], "minu": [4, 140, 143, 225, 238, 552, 634, 677, 854, 857], "difference_wav": 4, "weight": [4, 5, 7, 11, 15, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 58, 59, 60, 72, 73, 88, 92, 97, 102, 105, 106, 107, 108, 121, 136, 140, 143, 148, 150, 156, 165, 167, 175, 176, 177, 178, 179, 180, 181, 184, 187, 190, 193, 194, 198, 200, 201, 202, 204, 205, 206, 209, 219, 220, 223, 224, 226, 231, 232, 233, 241, 253, 266, 267, 272, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 350, 362, 409, 410, 411, 423, 426, 449, 450, 468, 470, 471, 484, 519, 525, 526, 530, 551, 552, 578, 648, 649, 654, 655, 658, 679, 680, 682, 683, 687, 699, 702, 710, 771, 794, 827, 847, 848, 857, 858, 872], "clear": [4, 73, 111, 115, 139, 156, 198, 202, 204, 208, 220, 223, 258, 261, 262, 266, 270, 285, 299, 473, 474, 518, 727, 739, 770, 831, 860, 872], "pattern": [4, 11, 17, 19, 20, 21, 27, 46, 78, 81, 110, 111, 141, 142, 160, 165, 166, 171, 193, 197, 200, 203, 204, 205, 209, 238, 241, 261, 262, 263, 264, 266, 271, 309, 325, 360, 369, 405, 409, 411, 412, 413, 420, 423, 429, 434, 455, 488, 490, 549, 553, 607, 620, 630, 631, 645, 692, 694, 695, 831, 847, 848, 854, 857, 872], "when": [4, 21, 27, 28, 31, 44, 45, 46, 47, 60, 69, 73, 74, 79, 80, 81, 82, 88, 92, 93, 101, 105, 113, 124, 125, 133, 139, 141, 142, 143, 144, 145, 148, 149, 150, 156, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 177, 179, 181, 183, 187, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 212, 213, 214, 215, 218, 219, 223, 225, 228, 236, 237, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 284, 294, 295, 306, 309, 313, 314, 336, 344, 345, 346, 350, 351, 355, 356, 357, 358, 360, 362, 365, 366, 367, 368, 371, 405, 412, 413, 416, 422, 424, 426, 430, 432, 434, 437, 439, 440, 441, 444, 446, 448, 449, 452, 455, 464, 468, 470, 471, 473, 474, 481, 486, 488, 489, 490, 493, 494, 496, 500, 519, 520, 521, 522, 523, 525, 526, 530, 535, 536, 538, 541, 551, 552, 554, 557, 562, 563, 566, 568, 571, 572, 574, 575, 580, 581, 595, 598, 600, 604, 606, 608, 610, 623, 629, 631, 632, 637, 641, 642, 653, 656, 679, 680, 681, 682, 683, 687, 691, 692, 693, 694, 695, 696, 698, 699, 701, 704, 710, 729, 736, 739, 747, 748, 756, 763, 767, 769, 771, 772, 773, 775, 776, 778, 779, 781, 782, 784, 786, 789, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 805, 812, 818, 820, 827, 829, 834, 835, 836, 837, 846, 847, 849, 851, 852, 853, 854, 855, 857, 858, 872], "howev": [4, 16, 21, 45, 69, 73, 74, 139, 141, 145, 148, 161, 166, 168, 169, 170, 171, 188, 189, 190, 193, 194, 198, 200, 202, 203, 204, 205, 206, 212, 213, 223, 225, 227, 228, 231, 233, 238, 261, 262, 266, 294, 309, 351, 398, 426, 488, 490, 502, 519, 681, 831, 851, 853, 854, 857, 860, 872], "could": [4, 28, 29, 30, 38, 39, 41, 43, 68, 82, 102, 139, 143, 150, 159, 160, 165, 168, 170, 171, 174, 178, 179, 180, 190, 197, 199, 203, 204, 205, 206, 208, 212, 213, 214, 218, 223, 224, 231, 233, 238, 261, 262, 263, 264, 267, 272, 294, 376, 398, 399, 404, 426, 428, 432, 448, 473, 474, 475, 481, 552, 555, 569, 572, 573, 594, 742, 747, 813, 831, 851, 853, 860, 872], "narrow": [4, 197, 201, 238, 271, 872], "our": [4, 5, 19, 26, 27, 32, 42, 44, 62, 69, 73, 78, 82, 91, 101, 107, 110, 112, 113, 118, 119, 125, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 149, 150, 155, 159, 165, 167, 170, 171, 174, 179, 180, 182, 183, 194, 197, 198, 200, 201, 203, 204, 205, 206, 208, 209, 212, 213, 218, 220, 223, 225, 227, 228, 231, 232, 233, 236, 237, 238, 274, 445, 446, 527, 708, 718, 735, 830, 831, 833, 834, 835, 836, 847, 850, 851, 853, 854, 855, 859, 860, 872], "search": [4, 150, 155, 194, 241, 271, 274, 294, 408, 415, 432, 453, 555, 560, 566, 708, 718, 719, 722, 755, 831, 836, 837, 851], "bit": [4, 5, 7, 107, 125, 140, 143, 159, 170, 179, 188, 200, 202, 207, 223, 231, 233, 238, 261, 262, 266, 338, 473, 474, 481, 488, 691, 829, 837, 848, 854, 857, 872], "sinc": [4, 19, 32, 43, 44, 69, 92, 113, 117, 133, 134, 139, 140, 141, 143, 150, 159, 165, 166, 168, 170, 171, 174, 177, 187, 188, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 213, 214, 218, 223, 226, 231, 233, 238, 255, 256, 261, 262, 263, 264, 267, 271, 272, 275, 287, 309, 351, 355, 356, 405, 412, 426, 435, 436, 437, 438, 449, 461, 473, 474, 515, 539, 552, 563, 568, 571, 580, 679, 680, 681, 682, 683, 704, 756, 782, 783, 831, 847, 851, 854, 857, 872], "paradigm": [4, 7, 143, 161, 165, 197, 200, 772, 848, 872], "might": [4, 5, 19, 21, 69, 118, 125, 140, 143, 150, 155, 160, 161, 166, 167, 175, 194, 200, 203, 206, 223, 228, 231, 238, 268, 272, 276, 329, 429, 538, 552, 588, 679, 797, 829, 830, 831, 847, 850, 851, 854, 872], "best": [4, 5, 10, 16, 72, 81, 119, 133, 134, 141, 148, 161, 165, 175, 176, 177, 179, 193, 199, 203, 208, 220, 267, 351, 356, 413, 473, 474, 566, 648, 650, 651, 740, 831, 837, 839, 849, 850, 851, 853, 854, 857], "electrod": [4, 27, 76, 77, 83, 116, 118, 120, 128, 134, 137, 138, 140, 142, 149, 158, 160, 164, 165, 169, 185, 186, 190, 193, 197, 200, 202, 206, 208, 212, 223, 241, 258, 261, 262, 263, 264, 265, 266, 270, 272, 278, 309, 310, 313, 323, 325, 327, 328, 329, 330, 331, 332, 335, 351, 363, 364, 369, 405, 412, 446, 457, 464, 465, 473, 474, 479, 481, 483, 488, 493, 494, 515, 518, 519, 530, 551, 552, 560, 566, 577, 579, 608, 637, 692, 694, 695, 696, 728, 729, 731, 739, 740, 755, 756, 759, 761, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 804, 807, 809, 812, 827, 847, 848, 857, 860, 872], "over": [4, 5, 8, 9, 12, 21, 27, 28, 45, 46, 58, 59, 69, 78, 79, 101, 102, 105, 107, 110, 111, 113, 120, 128, 134, 135, 136, 148, 149, 150, 158, 160, 161, 165, 168, 171, 174, 175, 190, 198, 200, 203, 205, 208, 214, 215, 220, 223, 224, 227, 228, 236, 238, 241, 253, 255, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 288, 289, 292, 304, 318, 339, 351, 357, 405, 412, 414, 416, 444, 447, 473, 474, 506, 521, 523, 526, 552, 556, 581, 594, 607, 641, 642, 667, 679, 688, 692, 694, 695, 696, 703, 711, 724, 739, 752, 769, 770, 771, 781, 786, 827, 831, 838, 848, 849, 851, 853, 854, 860, 872], "occipit": [4, 47, 49, 168, 202, 238, 627, 854], "lobe": [4, 47, 134, 135, 179], "ani": [4, 5, 18, 24, 27, 41, 45, 50, 74, 81, 108, 110, 115, 118, 124, 125, 133, 134, 136, 139, 140, 141, 142, 148, 150, 155, 157, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 175, 180, 182, 183, 184, 188, 189, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 223, 228, 238, 241, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 272, 274, 275, 276, 277, 284, 286, 288, 302, 303, 309, 316, 321, 323, 358, 362, 382, 411, 424, 427, 428, 429, 432, 439, 457, 462, 473, 474, 489, 541, 543, 544, 545, 549, 550, 552, 553, 554, 555, 568, 571, 572, 580, 587, 598, 604, 612, 620, 630, 633, 634, 637, 642, 653, 657, 678, 687, 692, 693, 694, 695, 696, 704, 709, 739, 740, 742, 764, 769, 770, 772, 781, 782, 784, 792, 793, 803, 809, 812, 819, 822, 827, 829, 831, 834, 848, 849, 851, 853, 854, 860, 872], "easier": [4, 133, 139, 141, 143, 149, 150, 155, 171, 190, 194, 198, 200, 203, 204, 205, 206, 255, 368, 829, 831, 872], "spot": [4, 198, 201, 227, 271, 872], "area": [4, 5, 54, 69, 92, 114, 133, 134, 177, 190, 194, 198, 203, 214, 219, 223, 227, 238, 261, 262, 263, 264, 267, 473, 474, 653, 692, 761, 763, 773, 775, 793, 812, 831, 854, 857, 872], "dictionari": [4, 10, 27, 36, 56, 59, 92, 113, 125, 135, 139, 140, 141, 143, 144, 148, 149, 150, 165, 166, 168, 187, 203, 205, 208, 212, 213, 218, 241, 253, 255, 256, 258, 261, 262, 263, 264, 265, 266, 270, 271, 272, 274, 285, 294, 295, 296, 299, 307, 309, 321, 322, 337, 351, 355, 356, 362, 365, 366, 367, 369, 405, 407, 412, 416, 429, 432, 434, 437, 440, 441, 443, 444, 446, 448, 449, 465, 468, 469, 470, 471, 472, 473, 474, 504, 514, 518, 530, 552, 562, 564, 565, 566, 568, 571, 600, 607, 612, 623, 625, 628, 634, 641, 678, 692, 727, 729, 739, 762, 763, 769, 770, 772, 779, 782, 784, 792, 798, 838, 872], "concentr": [4, 189, 204, 209, 219, 410, 525, 526, 582, 587, 699, 702, 710, 771, 872], "b11": 4, "ylim": [4, 7, 9, 19, 35, 39, 40, 46, 51, 59, 97, 110, 112, 125, 150, 159, 193, 200, 202, 209, 223, 233, 238, 263, 264, 763, 773, 777, 872], "do": [4, 5, 15, 16, 18, 24, 26, 27, 31, 34, 40, 41, 45, 47, 50, 51, 54, 55, 58, 59, 60, 65, 69, 73, 81, 107, 110, 112, 113, 118, 125, 133, 135, 136, 139, 140, 143, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 165, 167, 170, 171, 174, 175, 176, 179, 181, 182, 183, 184, 187, 188, 190, 193, 194, 198, 200, 201, 203, 204, 205, 206, 207, 208, 212, 214, 218, 219, 220, 223, 228, 231, 232, 233, 237, 238, 241, 253, 254, 255, 256, 258, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 280, 284, 300, 304, 306, 316, 323, 351, 355, 362, 365, 366, 376, 381, 398, 399, 416, 417, 418, 424, 426, 434, 439, 440, 446, 455, 463, 470, 471, 473, 474, 481, 488, 515, 519, 520, 521, 522, 523, 525, 526, 535, 536, 543, 544, 545, 549, 550, 552, 553, 554, 555, 563, 568, 569, 571, 580, 597, 600, 607, 610, 611, 629, 631, 633, 679, 680, 682, 683, 687, 692, 694, 695, 696, 709, 729, 764, 768, 780, 799, 817, 820, 822, 829, 831, 834, 836, 837, 839, 842, 847, 848, 853, 854, 857, 858, 860, 872], "pretti": [4, 140, 143, 200, 203, 205, 851], "small": [4, 5, 11, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 69, 74, 88, 91, 92, 102, 105, 106, 107, 108, 119, 125, 126, 134, 140, 141, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 194, 200, 201, 203, 205, 214, 219, 220, 223, 225, 231, 233, 253, 258, 259, 261, 262, 263, 264, 267, 270, 317, 351, 405, 412, 473, 474, 489, 551, 552, 554, 598, 604, 679, 680, 682, 683, 685, 692, 694, 696, 767, 771, 778, 782, 791, 794, 799, 827, 831, 848, 851, 854, 857, 872], "determin": [4, 22, 80, 126, 133, 140, 144, 150, 160, 165, 168, 170, 177, 189, 200, 202, 208, 212, 213, 214, 223, 226, 228, 255, 258, 259, 261, 262, 263, 264, 266, 269, 270, 275, 277, 280, 294, 295, 302, 309, 311, 338, 345, 351, 355, 356, 365, 366, 367, 381, 405, 411, 412, 422, 444, 448, 449, 468, 470, 471, 473, 474, 485, 507, 511, 530, 552, 578, 580, 585, 586, 608, 627, 684, 720, 723, 739, 767, 770, 775, 777, 778, 779, 780, 789, 796, 802, 812, 813, 851, 854, 857, 872], "whether": [4, 13, 80, 140, 143, 144, 145, 170, 177, 179, 194, 198, 203, 204, 208, 238, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 284, 294, 295, 309, 318, 319, 320, 323, 351, 356, 361, 381, 388, 405, 412, 427, 438, 446, 464, 465, 472, 473, 474, 484, 512, 519, 520, 521, 522, 523, 526, 528, 529, 530, 534, 535, 536, 551, 552, 553, 561, 566, 568, 569, 571, 572, 573, 578, 581, 595, 634, 637, 656, 657, 679, 680, 682, 683, 692, 693, 694, 695, 696, 698, 701, 704, 739, 748, 756, 760, 763, 765, 767, 768, 769, 770, 771, 773, 777, 778, 782, 784, 786, 789, 791, 792, 793, 794, 795, 797, 799, 800, 801, 802, 805, 809, 812, 831, 837, 851, 854, 857, 872], "stronger": [4, 140, 190, 225, 233, 263, 264, 773], "along": [4, 19, 46, 113, 117, 135, 139, 141, 159, 165, 167, 169, 177, 193, 194, 197, 198, 202, 203, 206, 207, 212, 214, 215, 220, 231, 258, 259, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 284, 405, 408, 412, 415, 416, 418, 445, 463, 464, 470, 473, 474, 551, 552, 597, 671, 672, 679, 680, 682, 683, 686, 692, 694, 695, 696, 739, 755, 756, 763, 769, 770, 771, 774, 778, 782, 791, 794, 795, 797, 799, 800, 801, 802, 827, 829, 830, 831, 848, 854, 872], "phase_coh": 4, "get": [4, 5, 7, 15, 18, 19, 21, 22, 26, 27, 28, 34, 38, 39, 41, 47, 48, 50, 52, 60, 62, 63, 65, 66, 68, 69, 71, 78, 79, 81, 82, 92, 93, 94, 95, 101, 107, 111, 112, 114, 118, 121, 122, 125, 133, 134, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 159, 161, 164, 165, 166, 168, 169, 172, 173, 174, 179, 180, 182, 183, 184, 197, 198, 199, 200, 201, 203, 205, 212, 214, 215, 223, 225, 227, 228, 233, 236, 237, 241, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 285, 299, 303, 307, 308, 309, 319, 320, 338, 339, 355, 362, 366, 367, 370, 373, 374, 375, 376, 378, 379, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 422, 425, 429, 434, 440, 446, 454, 457, 460, 464, 473, 474, 479, 501, 509, 518, 528, 529, 541, 552, 553, 559, 561, 569, 610, 641, 642, 661, 663, 671, 684, 687, 692, 693, 694, 695, 696, 727, 739, 740, 763, 770, 772, 785, 827, 829, 830, 831, 833, 835, 836, 837, 842, 848, 849, 853, 854, 855, 857, 858, 860, 872], "sort": [4, 7, 15, 21, 27, 47, 92, 119, 120, 128, 136, 142, 159, 169, 223, 261, 262, 263, 264, 266, 271, 321, 351, 356, 413, 431, 434, 458, 489, 552, 615, 693, 695, 770, 773, 775, 822, 839, 872], "label": [4, 8, 9, 10, 11, 12, 15, 16, 18, 21, 22, 27, 28, 29, 36, 37, 44, 45, 56, 67, 69, 88, 90, 92, 93, 94, 95, 99, 103, 104, 108, 109, 110, 111, 114, 118, 124, 125, 133, 134, 136, 139, 141, 142, 143, 148, 150, 154, 159, 165, 167, 171, 175, 179, 180, 190, 194, 199, 203, 205, 208, 212, 213, 214, 224, 233, 237, 238, 241, 257, 258, 259, 261, 262, 263, 264, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 294, 295, 357, 361, 380, 383, 405, 406, 407, 410, 412, 413, 414, 416, 422, 438, 439, 446, 451, 457, 458, 459, 463, 473, 474, 481, 484, 488, 506, 507, 518, 519, 520, 521, 522, 523, 525, 526, 528, 529, 531, 533, 535, 536, 538, 549, 551, 552, 553, 566, 597, 610, 612, 613, 614, 615, 620, 630, 631, 641, 642, 650, 655, 658, 659, 669, 688, 692, 694, 695, 696, 708, 718, 739, 744, 757, 758, 761, 763, 769, 770, 771, 772, 773, 775, 778, 782, 785, 786, 791, 792, 794, 797, 798, 799, 800, 801, 802, 821, 822, 827, 831, 860, 862, 872], "2f": [4, 59, 156, 268, 269, 272, 275, 276, 277, 552, 739, 782, 797, 802], "format": [4, 27, 34, 43, 44, 62, 66, 69, 112, 125, 134, 136, 139, 142, 148, 149, 150, 159, 164, 165, 167, 169, 170, 171, 175, 181, 187, 190, 201, 203, 204, 205, 206, 209, 212, 213, 214, 216, 223, 224, 225, 228, 253, 255, 258, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 309, 327, 328, 332, 334, 347, 348, 349, 369, 405, 412, 434, 435, 436, 437, 438, 465, 472, 473, 474, 476, 479, 481, 485, 490, 541, 547, 551, 552, 566, 568, 598, 602, 607, 613, 623, 638, 639, 643, 644, 645, 657, 672, 679, 680, 682, 683, 692, 693, 694, 695, 696, 710, 713, 734, 739, 754, 756, 771, 778, 782, 791, 794, 797, 799, 801, 802, 812, 817, 825, 827, 831, 838, 843, 847, 848, 851, 857, 860, 872], "90": [4, 5, 11, 19, 24, 35, 41, 42, 47, 78, 79, 88, 92, 101, 106, 107, 110, 112, 121, 134, 135, 136, 142, 150, 155, 156, 157, 159, 168, 169, 170, 178, 183, 189, 193, 194, 199, 201, 206, 207, 209, 223, 224, 225, 227, 228, 231, 232, 233, 238, 241, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 410, 412, 448, 449, 468, 470, 471, 516, 525, 526, 530, 552, 641, 648, 650, 651, 652, 673, 699, 702, 710, 744, 771, 779, 848, 849, 854], "each": [4, 9, 10, 11, 15, 16, 19, 24, 28, 32, 33, 38, 41, 44, 45, 69, 78, 81, 91, 92, 93, 99, 101, 105, 106, 107, 110, 111, 113, 115, 118, 125, 126, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 160, 161, 165, 166, 167, 168, 171, 174, 175, 176, 177, 179, 180, 182, 184, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 220, 223, 225, 227, 228, 231, 232, 233, 236, 238, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 286, 287, 294, 295, 300, 307, 311, 314, 318, 339, 341, 342, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 359, 362, 364, 367, 381, 398, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 428, 429, 430, 439, 443, 444, 445, 446, 447, 448, 449, 457, 463, 468, 470, 471, 472, 473, 474, 475, 477, 488, 495, 503, 504, 507, 509, 511, 512, 519, 523, 525, 526, 528, 529, 542, 551, 552, 553, 555, 557, 560, 566, 568, 570, 571, 579, 580, 584, 600, 604, 610, 623, 626, 634, 640, 641, 647, 648, 649, 650, 651, 652, 653, 654, 657, 658, 659, 661, 663, 672, 674, 675, 677, 679, 680, 681, 682, 683, 684, 687, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 711, 722, 723, 729, 739, 740, 743, 747, 755, 756, 757, 759, 760, 761, 763, 764, 765, 766, 767, 770, 771, 773, 775, 776, 777, 778, 779, 782, 790, 791, 792, 793, 794, 798, 799, 800, 801, 804, 808, 809, 812, 818, 820, 825, 827, 829, 830, 831, 837, 847, 848, 849, 851, 854, 857, 872], "zip": [4, 9, 10, 22, 27, 47, 79, 88, 105, 111, 112, 118, 125, 136, 139, 149, 159, 164, 179, 193, 198, 200, 201, 203, 204, 206, 223, 224, 225, 226, 227, 228, 233, 237, 382, 495, 831, 839], "c22": 4, "figur": [4, 5, 8, 16, 19, 22, 27, 28, 37, 38, 45, 49, 54, 55, 90, 101, 107, 109, 113, 114, 116, 120, 121, 123, 128, 134, 135, 140, 141, 143, 144, 149, 155, 157, 159, 165, 169, 175, 177, 178, 179, 182, 183, 190, 193, 194, 200, 202, 203, 205, 208, 209, 215, 220, 223, 225, 228, 233, 237, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 309, 310, 323, 405, 412, 464, 465, 473, 474, 551, 552, 566, 610, 620, 692, 693, 694, 695, 696, 719, 720, 722, 723, 739, 741, 742, 745, 748, 752, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 806, 807, 809, 829, 830, 831, 849, 851, 872], "ax": [4, 10, 11, 12, 13, 15, 19, 21, 22, 37, 39, 41, 45, 47, 58, 67, 68, 69, 70, 71, 72, 79, 80, 84, 88, 91, 94, 97, 102, 110, 111, 112, 113, 114, 118, 125, 131, 133, 134, 135, 136, 143, 144, 145, 149, 150, 155, 159, 160, 169, 171, 175, 176, 179, 180, 182, 193, 194, 197, 200, 201, 204, 205, 208, 209, 215, 220, 223, 224, 225, 226, 227, 228, 236, 237, 238, 258, 259, 261, 262, 263, 264, 270, 310, 318, 323, 405, 412, 464, 473, 474, 551, 552, 692, 694, 696, 708, 718, 740, 742, 752, 755, 756, 758, 761, 762, 763, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 787, 788, 791, 793, 794, 795, 796, 799, 801, 854, 872], "subplot": [4, 10, 11, 12, 13, 15, 19, 21, 22, 39, 41, 45, 47, 58, 67, 68, 69, 70, 71, 72, 80, 84, 88, 91, 94, 97, 102, 105, 110, 111, 112, 113, 114, 118, 125, 133, 135, 136, 141, 143, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 193, 194, 200, 205, 208, 209, 215, 220, 223, 224, 225, 226, 227, 228, 237, 238, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 708, 718, 739, 761, 762, 771, 772, 777, 778, 782, 787, 791, 794, 799, 801, 804, 872], "figsiz": [4, 12, 15, 19, 22, 45, 47, 69, 72, 94, 110, 111, 112, 113, 118, 125, 133, 135, 143, 159, 175, 182, 193, 200, 205, 208, 209, 220, 223, 224, 226, 227, 228, 237, 238, 552, 784, 785], "8": [4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 19, 20, 21, 22, 26, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 61, 63, 64, 66, 67, 69, 70, 74, 78, 79, 81, 83, 86, 88, 89, 90, 92, 94, 99, 100, 101, 102, 104, 106, 107, 110, 111, 112, 114, 118, 119, 121, 122, 124, 125, 126, 128, 133, 134, 136, 139, 141, 142, 143, 144, 145, 147, 149, 150, 151, 155, 157, 159, 161, 163, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 193, 194, 197, 199, 200, 203, 205, 206, 207, 208, 209, 211, 218, 219, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 237, 238, 240, 241, 261, 262, 263, 264, 271, 274, 294, 295, 311, 376, 404, 405, 426, 449, 468, 470, 471, 473, 474, 481, 488, 489, 496, 530, 535, 552, 553, 560, 563, 568, 571, 580, 598, 604, 606, 691, 694, 696, 720, 723, 739, 762, 768, 770, 771, 775, 795, 829, 830, 831, 847, 848, 854, 857], "20": [4, 5, 9, 11, 12, 13, 14, 15, 19, 20, 22, 28, 33, 34, 35, 37, 40, 45, 46, 47, 48, 54, 55, 56, 59, 60, 61, 69, 73, 75, 79, 80, 86, 88, 98, 101, 102, 104, 105, 106, 107, 111, 112, 113, 114, 117, 119, 125, 126, 128, 131, 136, 139, 141, 142, 149, 150, 151, 156, 158, 165, 168, 169, 170, 171, 175, 176, 178, 180, 182, 183, 184, 186, 190, 193, 194, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 212, 215, 218, 220, 223, 224, 225, 227, 228, 232, 233, 236, 238, 240, 241, 242, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 294, 295, 305, 309, 314, 321, 327, 338, 339, 340, 341, 342, 344, 357, 362, 404, 405, 412, 430, 440, 448, 468, 470, 471, 473, 474, 481, 508, 512, 519, 520, 521, 522, 526, 530, 534, 535, 536, 544, 551, 552, 561, 566, 571, 578, 602, 607, 637, 640, 641, 656, 658, 680, 681, 692, 693, 694, 695, 696, 709, 743, 755, 756, 757, 763, 768, 769, 771, 773, 774, 775, 777, 778, 779, 782, 789, 791, 792, 793, 794, 795, 797, 799, 801, 802, 830, 847, 848, 851, 854], "cmap": [4, 9, 10, 13, 15, 16, 19, 22, 41, 69, 98, 99, 105, 107, 110, 112, 113, 114, 118, 133, 135, 142, 159, 181, 193, 194, 208, 223, 225, 226, 227, 228, 237, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 693, 694, 696, 754, 756, 763, 765, 770, 771, 775, 778, 781, 782, 791, 794, 799, 800, 801], "magma": 4, "consider": [4, 79, 97, 150, 199, 200, 203, 219, 228, 241, 271, 678, 838, 854, 860, 872], "chosen": [4, 45, 136, 144, 150, 197, 200, 202, 203, 205, 236, 255, 258, 261, 262, 263, 264, 269, 270, 274, 275, 277, 355, 405, 407, 412, 416, 418, 441, 443, 444, 463, 473, 474, 505, 527, 551, 552, 566, 578, 597, 644, 645, 679, 680, 682, 683, 692, 693, 694, 695, 696, 739, 755, 756, 765, 769, 771, 775, 778, 782, 785, 791, 792, 793, 794, 795, 799, 801, 854], "test": [4, 8, 10, 13, 15, 16, 19, 26, 27, 88, 93, 96, 100, 110, 121, 126, 134, 139, 150, 164, 167, 170, 171, 187, 193, 194, 207, 208, 212, 224, 225, 226, 229, 230, 233, 234, 235, 238, 241, 261, 262, 263, 264, 266, 272, 273, 274, 286, 288, 294, 315, 357, 381, 408, 409, 422, 426, 428, 444, 473, 474, 482, 500, 503, 518, 519, 527, 533, 543, 549, 552, 571, 580, 607, 620, 622, 664, 670, 672, 674, 676, 679, 680, 681, 682, 683, 684, 685, 686, 692, 694, 695, 696, 722, 739, 747, 760, 763, 771, 778, 785, 799, 829, 832, 835, 836, 851, 854, 860, 872], "interpol": [4, 15, 24, 27, 32, 60, 69, 76, 83, 85, 88, 91, 92, 93, 117, 133, 134, 135, 150, 176, 180, 187, 194, 203, 208, 220, 223, 236, 258, 261, 262, 263, 264, 270, 274, 276, 277, 405, 412, 439, 462, 473, 474, 551, 552, 566, 570, 574, 579, 610, 641, 643, 644, 645, 657, 692, 694, 696, 704, 728, 739, 756, 771, 778, 782, 791, 794, 799, 801, 838, 872], "miss": [4, 44, 68, 82, 133, 134, 150, 157, 158, 179, 182, 187, 189, 200, 206, 238, 261, 262, 263, 264, 266, 274, 313, 336, 382, 398, 411, 473, 474, 481, 488, 493, 543, 580, 678, 772, 773, 827, 831, 835, 836, 838, 839, 857, 860, 872], "drop": [4, 8, 9, 11, 12, 16, 18, 21, 32, 33, 34, 42, 46, 49, 70, 71, 94, 95, 98, 101, 105, 108, 110, 111, 112, 115, 119, 126, 134, 135, 136, 140, 141, 143, 144, 145, 150, 151, 161, 165, 166, 171, 176, 179, 181, 182, 184, 190, 197, 198, 199, 202, 203, 205, 206, 209, 214, 219, 220, 225, 226, 227, 228, 231, 233, 237, 255, 256, 258, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 311, 314, 430, 431, 438, 462, 473, 474, 486, 552, 564, 565, 568, 581, 604, 606, 634, 692, 693, 694, 695, 696, 768, 769, 782, 784, 831, 834, 854, 872], "furthermor": [4, 154, 174, 177, 188, 202, 847, 854, 857], "mark": [4, 8, 11, 49, 73, 77, 81, 90, 91, 109, 118, 124, 125, 134, 136, 141, 143, 149, 150, 165, 168, 169, 171, 177, 188, 189, 190, 199, 200, 203, 204, 206, 207, 208, 209, 212, 214, 215, 228, 241, 254, 256, 261, 262, 263, 264, 311, 367, 376, 383, 398, 399, 462, 464, 472, 473, 474, 551, 552, 557, 560, 566, 570, 571, 579, 580, 588, 595, 604, 606, 634, 692, 694, 695, 696, 735, 759, 769, 771, 778, 783, 785, 792, 793, 799, 827, 831, 848, 849, 872], "exg": 4, "prefix": [4, 73, 154, 169, 174, 253, 258, 261, 262, 263, 264, 270, 352, 353, 405, 412, 465, 473, 474, 481, 488, 489, 551, 552, 566, 604, 692, 694, 696, 756, 778, 782, 791, 794, 799, 827], "interpolate_bad": [4, 69, 77, 198, 261, 262, 263, 264, 462, 473, 474, 854, 872], "reset_bad": [4, 77, 198, 261, 262, 263, 264, 473, 474, 854], "drop_channel": [4, 42, 69, 135, 139, 148, 212, 228, 261, 262, 263, 264, 473, 474, 692, 694, 695, 696, 858, 872], "exg1": 4, "exg2": 4, "exg3": 4, "exg4": 4, "radiu": [4, 5, 24, 26, 41, 45, 50, 69, 70, 77, 78, 91, 92, 107, 133, 150, 155, 157, 158, 169, 175, 180, 181, 182, 183, 184, 198, 205, 206, 208, 219, 258, 261, 262, 263, 264, 270, 299, 302, 309, 323, 325, 327, 405, 412, 425, 463, 473, 474, 505, 516, 534, 551, 552, 561, 566, 641, 644, 687, 692, 694, 696, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 854, 872], "95": [4, 5, 7, 19, 34, 47, 50, 69, 74, 78, 79, 88, 107, 110, 111, 112, 119, 133, 135, 141, 142, 144, 145, 150, 155, 157, 159, 168, 178, 183, 193, 194, 199, 207, 208, 209, 223, 224, 226, 227, 228, 241, 261, 262, 263, 264, 552, 566, 652, 671, 692, 763, 779, 784, 800, 854], "113": [4, 20, 35, 110, 168, 222, 227, 228, 241], "524face": 4, "To": [4, 5, 11, 18, 19, 22, 33, 44, 45, 86, 88, 92, 93, 111, 114, 125, 131, 133, 136, 139, 141, 143, 145, 148, 149, 150, 155, 157, 158, 159, 160, 165, 167, 168, 169, 170, 171, 174, 177, 179, 183, 187, 189, 190, 193, 194, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 214, 215, 218, 220, 223, 225, 227, 228, 232, 233, 237, 253, 255, 256, 261, 262, 263, 264, 267, 271, 276, 277, 294, 295, 351, 355, 356, 411, 418, 429, 435, 436, 437, 438, 440, 446, 473, 474, 481, 486, 501, 505, 509, 515, 552, 568, 571, 573, 577, 578, 580, 595, 597, 612, 638, 641, 644, 645, 646, 652, 655, 656, 658, 679, 680, 681, 682, 683, 685, 698, 701, 717, 719, 720, 721, 722, 723, 724, 737, 739, 756, 769, 782, 784, 786, 792, 803, 804, 819, 829, 830, 831, 834, 835, 836, 837, 839, 846, 847, 848, 849, 851, 853, 854, 858, 872], "predict": [4, 10, 12, 13, 15, 16, 17, 20, 27, 42, 99, 136, 140, 175, 193, 194, 241, 266, 294, 309, 325, 369, 408, 409, 411, 415, 417, 422, 445, 474, 520, 527, 801, 848, 872], "brain": [4, 5, 7, 8, 10, 11, 15, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 54, 58, 59, 60, 69, 80, 86, 92, 102, 107, 113, 120, 124, 128, 133, 134, 145, 150, 154, 155, 157, 159, 161, 169, 174, 175, 176, 177, 178, 180, 181, 183, 187, 188, 189, 190, 194, 197, 202, 203, 205, 206, 220, 223, 231, 232, 233, 238, 241, 252, 253, 259, 261, 262, 263, 264, 266, 268, 269, 272, 273, 274, 275, 276, 277, 287, 294, 295, 300, 328, 357, 368, 376, 405, 411, 413, 439, 444, 457, 471, 473, 474, 483, 493, 507, 511, 516, 518, 519, 533, 539, 549, 550, 553, 557, 567, 577, 579, 602, 610, 620, 625, 630, 641, 657, 681, 692, 694, 695, 696, 748, 750, 753, 755, 757, 758, 761, 767, 797, 798, 802, 803, 807, 809, 812, 827, 829, 831, 832, 837, 838, 847, 848, 851, 854, 859, 860, 862, 872], "purpos": [4, 8, 11, 12, 21, 111, 139, 140, 148, 155, 167, 179, 188, 197, 198, 199, 200, 203, 204, 206, 227, 231, 233, 238, 241, 261, 262, 373, 374, 375, 376, 378, 379, 381, 386, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 416, 418, 473, 474, 755, 769, 792, 827, 838, 847, 848, 853, 856, 857, 858], "intercept": [4, 99, 677], "predictor_var": 4, "where": [4, 10, 13, 31, 45, 67, 69, 73, 79, 80, 81, 88, 92, 93, 99, 110, 133, 136, 139, 140, 141, 143, 148, 150, 154, 159, 164, 165, 166, 167, 168, 169, 171, 174, 181, 182, 183, 187, 189, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 218, 219, 220, 223, 225, 227, 228, 231, 232, 233, 238, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 271, 272, 274, 275, 276, 277, 316, 318, 319, 320, 332, 350, 368, 373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 412, 418, 420, 439, 441, 444, 446, 465, 473, 474, 505, 527, 551, 552, 554, 561, 566, 568, 569, 570, 580, 642, 648, 649, 650, 651, 652, 654, 656, 657, 672, 673, 678, 679, 680, 682, 683, 692, 694, 695, 696, 720, 723, 739, 744, 756, 757, 760, 761, 762, 769, 770, 771, 778, 782, 791, 792, 793, 794, 799, 801, 805, 827, 831, 832, 834, 835, 836, 837, 847, 848, 851, 853, 854, 857, 872], "func": [4, 208, 268, 269, 272, 275, 276, 277, 481, 488, 494, 831, 872], "reg": [4, 8, 9, 12, 21, 34, 49, 133, 179, 220, 294, 295, 405, 412, 413, 553, 854, 872], "design_matrix": [4, 140, 677], "25728": 4, "target": [4, 17, 20, 27, 49, 76, 83, 99, 126, 140, 160, 194, 201, 203, 223, 224, 238, 261, 263, 264, 266, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 422, 431, 473, 486, 513, 549, 552, 553, 607, 831, 872], "regressor": [4, 68, 99, 194, 223, 677], "within": [4, 5, 16, 24, 38, 41, 45, 47, 50, 61, 68, 92, 106, 107, 110, 118, 119, 125, 126, 134, 139, 140, 143, 150, 154, 155, 157, 159, 160, 164, 165, 167, 171, 174, 175, 177, 180, 182, 183, 184, 197, 200, 203, 204, 206, 208, 214, 219, 223, 234, 238, 241, 254, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 279, 304, 311, 369, 381, 405, 410, 412, 429, 431, 434, 439, 457, 463, 473, 474, 525, 526, 535, 551, 552, 566, 679, 680, 682, 683, 687, 692, 694, 696, 699, 702, 710, 721, 724, 736, 756, 770, 771, 778, 779, 782, 791, 794, 798, 799, 801, 827, 829, 831, 836, 837, 842, 851, 853, 854, 860, 872], "object": [4, 9, 10, 18, 19, 27, 30, 31, 32, 33, 34, 36, 47, 54, 55, 56, 60, 63, 77, 92, 97, 99, 101, 102, 107, 110, 111, 112, 125, 130, 133, 140, 143, 145, 150, 154, 156, 159, 160, 161, 164, 165, 166, 169, 171, 174, 180, 181, 187, 188, 189, 190, 194, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 213, 216, 217, 220, 224, 231, 237, 238, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 285, 287, 288, 289, 292, 294, 295, 296, 299, 300, 302, 303, 307, 308, 309, 311, 314, 315, 316, 317, 318, 321, 323, 324, 337, 339, 341, 346, 350, 351, 354, 355, 356, 357, 358, 362, 365, 366, 367, 369, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 430, 434, 439, 446, 447, 449, 451, 456, 465, 468, 470, 471, 472, 473, 474, 475, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 505, 508, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 526, 528, 529, 530, 534, 541, 548, 549, 551, 552, 553, 554, 555, 563, 566, 567, 568, 575, 577, 579, 585, 586, 593, 598, 602, 603, 605, 609, 610, 611, 614, 620, 627, 628, 641, 642, 656, 657, 660, 669, 677, 678, 684, 688, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 709, 712, 713, 714, 719, 720, 721, 722, 723, 724, 725, 727, 738, 739, 740, 745, 748, 750, 752, 753, 755, 756, 759, 760, 763, 764, 765, 766, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 791, 792, 793, 794, 795, 796, 799, 801, 806, 807, 812, 818, 821, 827, 831, 847, 849, 854, 856, 858, 862, 870, 872], "multipl": [4, 16, 40, 44, 45, 51, 91, 94, 95, 99, 101, 110, 118, 139, 143, 148, 149, 158, 159, 165, 171, 174, 189, 193, 198, 200, 201, 203, 204, 206, 212, 213, 214, 224, 228, 231, 232, 233, 238, 241, 255, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 274, 275, 276, 277, 297, 314, 351, 357, 381, 407, 416, 418, 428, 430, 432, 441, 442, 443, 446, 449, 455, 470, 471, 473, 474, 486, 495, 514, 528, 529, 534, 539, 552, 569, 573, 580, 584, 602, 610, 634, 637, 641, 670, 676, 680, 681, 692, 693, 695, 704, 707, 714, 715, 720, 723, 739, 753, 763, 770, 773, 776, 779, 782, 784, 786, 792, 797, 798, 800, 802, 827, 831, 848, 854, 860, 862, 869, 872], "list": [4, 9, 10, 11, 16, 28, 41, 43, 47, 68, 82, 92, 101, 102, 109, 110, 111, 113, 114, 115, 125, 130, 136, 139, 143, 144, 148, 149, 150, 160, 165, 167, 168, 169, 170, 171, 174, 176, 182, 184, 187, 190, 198, 199, 200, 203, 204, 205, 208, 209, 212, 214, 215, 218, 219, 220, 223, 224, 227, 228, 232, 233, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 286, 287, 288, 289, 292, 294, 295, 297, 300, 302, 303, 307, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 326, 334, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 364, 365, 366, 367, 369, 376, 381, 387, 389, 398, 399, 405, 407, 411, 412, 415, 417, 420, 421, 422, 424, 426, 427, 428, 429, 430, 432, 436, 437, 439, 440, 443, 444, 446, 447, 451, 453, 455, 457, 458, 459, 460, 461, 462, 463, 468, 469, 470, 471, 472, 473, 474, 477, 481, 483, 485, 488, 489, 490, 494, 495, 496, 498, 503, 507, 509, 510, 511, 514, 517, 521, 523, 526, 528, 529, 538, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 560, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 577, 579, 580, 581, 586, 588, 591, 595, 597, 600, 602, 604, 606, 607, 610, 611, 612, 615, 618, 625, 627, 633, 634, 637, 641, 642, 655, 658, 659, 660, 661, 669, 672, 673, 675, 677, 678, 679, 680, 682, 683, 684, 687, 688, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 708, 709, 714, 717, 718, 723, 725, 726, 736, 738, 739, 740, 743, 744, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 797, 798, 799, 801, 802, 803, 815, 818, 822, 823, 827, 831, 834, 838, 839, 842, 846, 847, 851, 853, 854, 855, 857, 860, 872], "field": [4, 5, 7, 17, 20, 22, 26, 27, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 68, 77, 78, 79, 88, 92, 107, 111, 115, 117, 119, 122, 126, 129, 141, 143, 148, 155, 157, 158, 161, 164, 165, 168, 175, 176, 177, 178, 181, 182, 187, 188, 190, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 212, 214, 215, 218, 220, 228, 241, 247, 254, 258, 261, 262, 263, 264, 266, 294, 295, 309, 316, 325, 369, 411, 417, 437, 445, 448, 473, 474, 475, 485, 492, 511, 519, 520, 566, 580, 588, 605, 609, 612, 637, 678, 721, 724, 739, 756, 763, 770, 773, 774, 776, 778, 779, 781, 800, 801, 809, 827, 832, 847, 848, 851, 860, 872], "getattr": [4, 708, 718], "_field": [4, 140], "beta": [4, 12, 19, 32, 33, 34, 92, 99, 108, 110, 111, 113, 136, 140, 223, 237, 261, 262, 263, 264, 473, 474, 595, 677, 694, 696, 771], "stderr": [4, 140, 677], "t_val": [4, 140, 224, 677], "p_val": [4, 99, 140, 225, 226, 673, 677, 872], "mlog10_p_val": [4, 140, 677, 872], "just": [4, 5, 28, 32, 33, 41, 42, 44, 48, 50, 59, 69, 73, 80, 81, 99, 101, 107, 111, 112, 113, 118, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 155, 157, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 176, 178, 179, 180, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 220, 224, 225, 228, 231, 232, 233, 237, 238, 258, 261, 262, 263, 264, 268, 269, 270, 272, 274, 275, 276, 277, 309, 405, 412, 439, 440, 473, 474, 489, 527, 551, 552, 562, 566, 579, 604, 692, 694, 696, 735, 756, 763, 769, 771, 773, 775, 778, 779, 782, 786, 789, 791, 792, 793, 794, 795, 799, 801, 809, 829, 831, 839, 849, 854, 857, 872], "would": [4, 5, 19, 43, 44, 69, 139, 142, 143, 149, 150, 154, 155, 159, 160, 171, 174, 180, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 208, 218, 223, 224, 225, 228, 231, 233, 238, 261, 262, 263, 264, 268, 269, 272, 274, 275, 276, 277, 287, 294, 295, 351, 355, 356, 365, 366, 367, 376, 381, 398, 399, 405, 412, 426, 427, 428, 440, 448, 449, 455, 468, 470, 471, 473, 474, 488, 509, 517, 530, 552, 563, 580, 629, 692, 695, 739, 773, 778, 779, 792, 827, 837, 853, 854, 860, 872], "higher": [4, 26, 38, 44, 54, 68, 73, 92, 140, 150, 183, 194, 197, 199, 201, 203, 208, 219, 225, 228, 238, 271, 580, 708, 718, 829, 831, 835, 836, 854, 872], "better": [4, 9, 19, 43, 60, 69, 92, 141, 145, 150, 182, 183, 193, 200, 202, 203, 208, 223, 241, 263, 264, 268, 269, 272, 275, 276, 277, 404, 566, 577, 580, 706, 708, 718, 722, 739, 797, 802, 829, 831, 854, 872], "visibl": [4, 47, 125, 171, 190, 200, 201, 207, 214, 215, 238, 261, 262, 263, 264, 473, 474, 552, 633, 692, 739, 769, 775, 786, 792, 827, 872], "neg": [4, 19, 22, 39, 70, 110, 112, 143, 149, 150, 161, 187, 190, 201, 203, 223, 231, 238, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 271, 272, 275, 276, 277, 283, 303, 405, 411, 412, 417, 424, 433, 447, 473, 474, 496, 551, 552, 573, 578, 650, 651, 676, 692, 694, 695, 696, 758, 763, 769, 771, 778, 782, 791, 792, 794, 797, 799, 803, 848, 851, 854, 857, 872], "around": [4, 49, 69, 74, 81, 92, 110, 140, 141, 143, 145, 150, 164, 165, 170, 171, 179, 182, 190, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 212, 218, 238, 261, 262, 263, 264, 271, 355, 405, 412, 424, 429, 431, 473, 474, 505, 552, 564, 565, 568, 569, 597, 654, 692, 694, 695, 696, 763, 769, 775, 778, 779, 786, 792, 827, 829, 837], "200": [4, 9, 12, 47, 59, 74, 79, 88, 90, 93, 97, 107, 109, 112, 125, 129, 134, 135, 141, 144, 145, 150, 157, 168, 171, 178, 180, 182, 190, 194, 199, 201, 204, 205, 218, 223, 226, 227, 228, 233, 237, 241, 338, 340, 344, 444, 473, 474, 525, 526, 552, 578, 838, 847, 854, 857, 860, 872], "follow": [4, 24, 27, 32, 33, 34, 41, 42, 68, 69, 78, 92, 101, 105, 107, 111, 114, 126, 133, 134, 136, 140, 143, 150, 154, 157, 159, 160, 161, 167, 169, 171, 177, 179, 187, 188, 189, 194, 199, 200, 201, 202, 206, 208, 212, 213, 214, 218, 220, 223, 225, 227, 231, 233, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 284, 285, 294, 295, 299, 300, 351, 362, 366, 381, 398, 405, 429, 431, 432, 443, 444, 445, 449, 472, 473, 474, 475, 479, 481, 488, 515, 518, 535, 536, 552, 568, 571, 580, 581, 610, 620, 638, 673, 675, 677, 692, 694, 695, 696, 708, 718, 719, 722, 723, 727, 729, 735, 739, 752, 763, 771, 776, 799, 827, 829, 830, 833, 835, 836, 837, 847, 848, 850, 851, 854, 857, 858, 872], "onset": [4, 8, 33, 34, 115, 134, 135, 136, 139, 143, 145, 165, 167, 190, 199, 200, 202, 214, 238, 254, 255, 261, 262, 351, 434, 446, 473, 474, 555, 598, 697, 698, 699, 827, 872], "23": [4, 8, 11, 13, 19, 28, 34, 35, 38, 45, 47, 56, 64, 65, 66, 69, 73, 79, 80, 83, 101, 106, 107, 110, 112, 121, 124, 128, 136, 144, 150, 157, 161, 163, 168, 170, 182, 183, 184, 186, 190, 194, 203, 207, 223, 224, 225, 227, 228, 231, 232, 233, 236, 241, 255, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 274, 275, 276, 277, 294, 343, 355, 365, 366, 376, 383, 384, 398, 399, 429, 464, 473, 474, 481, 512, 552, 563, 600, 610, 691, 692, 694, 695, 696, 739, 768, 773, 783, 818, 848, 854], "correspond": [4, 16, 31, 48, 50, 61, 71, 75, 86, 90, 92, 101, 110, 118, 133, 136, 142, 143, 150, 154, 155, 157, 159, 167, 169, 171, 174, 179, 180, 181, 187, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 212, 213, 214, 215, 225, 227, 228, 233, 238, 254, 256, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 286, 294, 295, 297, 301, 309, 319, 320, 322, 332, 351, 355, 356, 359, 365, 366, 367, 376, 381, 398, 399, 405, 406, 408, 409, 411, 412, 415, 417, 421, 429, 434, 448, 449, 450, 458, 468, 470, 471, 473, 474, 481, 483, 485, 488, 492, 494, 496, 501, 505, 509, 511, 514, 516, 517, 528, 529, 530, 551, 552, 553, 566, 568, 571, 572, 605, 606, 609, 620, 633, 637, 641, 644, 657, 672, 673, 676, 677, 678, 679, 680, 682, 683, 684, 692, 693, 694, 695, 696, 704, 705, 711, 729, 730, 732, 739, 742, 750, 752, 756, 757, 758, 763, 769, 770, 771, 773, 775, 777, 778, 779, 782, 791, 792, 794, 797, 799, 801, 802, 803, 812, 827, 831, 837, 848, 851, 854, 857, 872], "unit": [4, 8, 14, 19, 21, 32, 81, 98, 101, 125, 134, 135, 140, 155, 159, 167, 168, 179, 188, 189, 198, 203, 205, 208, 212, 220, 225, 226, 228, 236, 237, 241, 256, 258, 259, 260, 261, 262, 263, 264, 266, 270, 272, 294, 295, 302, 310, 327, 332, 334, 336, 356, 362, 369, 405, 407, 412, 414, 416, 426, 441, 443, 444, 449, 472, 473, 474, 481, 483, 488, 489, 496, 552, 563, 568, 571, 580, 604, 642, 684, 692, 694, 696, 730, 732, 739, 763, 770, 771, 773, 775, 778, 779, 782, 791, 793, 799, 800, 807, 827, 831, 857, 872], "scale": [4, 5, 10, 16, 19, 22, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 57, 58, 59, 60, 65, 69, 73, 76, 83, 88, 92, 98, 99, 101, 102, 105, 106, 107, 108, 112, 113, 114, 117, 125, 131, 135, 136, 140, 141, 148, 150, 155, 156, 159, 165, 176, 177, 178, 179, 180, 181, 182, 189, 190, 193, 194, 200, 202, 203, 205, 206, 215, 219, 220, 231, 233, 237, 238, 241, 253, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 294, 295, 325, 335, 350, 351, 355, 356, 362, 365, 366, 367, 405, 412, 414, 426, 428, 439, 448, 449, 464, 467, 468, 470, 471, 473, 474, 483, 525, 526, 530, 532, 535, 536, 543, 551, 552, 562, 563, 571, 580, 610, 629, 630, 631, 632, 644, 645, 656, 659, 692, 694, 695, 696, 704, 729, 739, 752, 754, 756, 763, 767, 769, 770, 771, 773, 775, 777, 778, 779, 780, 782, 787, 791, 792, 793, 794, 798, 799, 800, 802, 827, 845, 872], "keep": [4, 11, 12, 27, 31, 60, 86, 102, 108, 109, 110, 136, 141, 144, 148, 150, 159, 160, 161, 164, 165, 168, 180, 198, 199, 200, 201, 202, 203, 212, 213, 214, 218, 225, 253, 258, 261, 262, 263, 264, 288, 289, 292, 295, 367, 411, 429, 473, 474, 484, 521, 523, 526, 552, 581, 693, 704, 831, 839, 849, 853, 872], "avoid": [4, 8, 9, 28, 40, 59, 69, 86, 112, 136, 139, 150, 160, 165, 166, 168, 171, 182, 188, 190, 197, 200, 201, 205, 212, 214, 223, 236, 241, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 275, 276, 277, 351, 422, 434, 473, 474, 481, 488, 494, 532, 552, 614, 620, 652, 655, 658, 674, 685, 686, 692, 695, 739, 797, 802, 829, 835, 849, 851, 853, 854, 872], "convers": [4, 155, 167, 188, 190, 198, 200, 201, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 473, 474, 496, 589, 679, 680, 682, 683, 692, 695, 854, 857, 872], "micro": [4, 261, 262, 263, 264, 473, 474], "volt": [4, 140, 203, 205, 218, 261, 262, 263, 264, 438, 473, 474, 854, 872], "topomap_arg": [4, 69, 99, 194, 209, 224, 263, 264, 552, 692, 759, 776, 782, 784, 872], "set_ylabel": [4, 12, 13, 21, 22, 45, 69, 94, 102, 110, 111, 113, 131, 143, 171, 182, 194, 200, 204, 226, 227, 228, 238], "systemat": [4, 140, 161, 200, 241, 408, 570, 851, 872], "larg": [4, 10, 28, 69, 74, 78, 81, 82, 112, 118, 135, 141, 149, 150, 166, 171, 177, 194, 197, 198, 200, 201, 202, 204, 205, 206, 209, 215, 223, 228, 231, 238, 241, 261, 262, 267, 294, 351, 355, 356, 360, 414, 444, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 512, 532, 552, 554, 679, 680, 682, 683, 704, 739, 757, 804, 835, 849, 872], "consist": [4, 10, 43, 69, 75, 110, 121, 156, 157, 160, 167, 169, 174, 182, 188, 189, 190, 194, 198, 199, 200, 202, 203, 207, 223, 225, 226, 241, 253, 261, 262, 263, 264, 274, 278, 318, 473, 474, 552, 560, 566, 570, 644, 645, 677, 692, 694, 695, 696, 697, 698, 699, 827, 847, 848, 853, 854, 860, 872], "guillaum": [4, 15, 86, 150, 156, 194, 200, 223, 241, 553, 685, 686, 848, 859, 872], "rousselet": [4, 150, 200, 241, 848], "2016": [4, 19, 46, 81, 111, 124, 193, 200, 241, 383, 384, 411, 470, 471, 552, 848], "7488": [4, 241], "1556": [4, 241], "carl": [4, 124, 241, 383, 848], "gaspar": [4, 241, 848], "cyril": [4, 241, 848], "r": [4, 8, 10, 12, 19, 21, 28, 37, 39, 41, 43, 49, 69, 79, 80, 94, 95, 97, 113, 125, 135, 136, 140, 144, 155, 159, 165, 175, 179, 180, 182, 183, 184, 193, 194, 198, 200, 202, 203, 205, 209, 213, 219, 223, 227, 228, 233, 238, 241, 253, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 272, 273, 275, 276, 277, 297, 357, 376, 405, 411, 412, 440, 473, 474, 504, 519, 527, 551, 552, 561, 564, 566, 568, 572, 652, 676, 679, 680, 685, 686, 692, 694, 695, 696, 721, 724, 739, 756, 757, 763, 767, 771, 778, 782, 787, 791, 794, 799, 801, 827, 829, 831, 848, 854, 857, 872], "pernet": [4, 241, 848], "jess": [4, 241, 848], "husk": [4, 241, 848], "patrick": [4, 241, 848, 854], "j": [4, 8, 12, 13, 18, 19, 21, 31, 35, 42, 44, 59, 65, 69, 70, 73, 74, 81, 92, 97, 99, 111, 119, 124, 136, 143, 150, 154, 159, 161, 171, 177, 179, 193, 194, 200, 202, 203, 204, 205, 223, 224, 228, 236, 241, 253, 261, 262, 263, 264, 267, 271, 272, 273, 294, 297, 351, 357, 376, 384, 389, 399, 405, 409, 411, 412, 413, 423, 468, 471, 473, 474, 519, 520, 527, 530, 534, 551, 552, 560, 561, 566, 578, 584, 587, 649, 652, 654, 678, 679, 680, 682, 683, 685, 686, 694, 696, 704, 706, 708, 710, 718, 721, 722, 724, 846, 848, 851, 854, 872], "bennett": [4, 241, 848], "allison": [4, 241, 848], "sekul": [4, 241, 848], "healthi": [4, 241, 398, 399, 848, 860], "ag": [4, 111, 136, 188, 241, 261, 262, 263, 264, 384, 399, 473, 474, 475, 657, 848, 862, 872], "scalp": [4, 19, 27, 69, 70, 74, 77, 120, 128, 133, 141, 143, 148, 150, 154, 155, 157, 165, 169, 182, 183, 184, 189, 197, 198, 203, 205, 206, 208, 209, 215, 218, 236, 241, 253, 261, 262, 263, 264, 266, 305, 424, 464, 473, 474, 516, 552, 561, 584, 625, 637, 694, 696, 739, 755, 771, 793, 807, 827, 832, 835, 838, 847, 848, 851, 854, 857, 872], "sensit": [4, 5, 7, 23, 25, 27, 80, 120, 128, 150, 157, 177, 201, 205, 227, 233, 241, 261, 262, 263, 264, 265, 266, 271, 272, 274, 361, 449, 473, 474, 549, 552, 612, 618, 633, 660, 679, 680, 682, 683, 739, 783, 848, 853, 872], "frontier": [4, 10, 19, 133, 150, 193, 200, 241, 411, 557, 846, 848], "psychologi": [4, 10, 150, 200, 241, 674, 848], "19": [4, 9, 11, 13, 19, 28, 34, 35, 41, 42, 44, 45, 47, 56, 58, 64, 70, 72, 75, 79, 81, 82, 83, 88, 89, 91, 92, 101, 104, 106, 107, 110, 112, 125, 136, 139, 140, 145, 150, 156, 157, 165, 166, 167, 168, 170, 177, 178, 179, 180, 181, 182, 183, 184, 190, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 220, 223, 224, 225, 227, 228, 231, 232, 233, 235, 241, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 274, 275, 276, 277, 301, 303, 306, 325, 424, 468, 473, 474, 511, 515, 545, 551, 552, 637, 687, 691, 692, 695, 711, 755, 758, 763, 764, 767, 769, 786, 792, 803, 813, 829, 830, 848, 854], "14": [4, 5, 8, 9, 11, 13, 16, 19, 22, 28, 32, 33, 34, 35, 43, 45, 46, 47, 48, 49, 54, 55, 58, 65, 77, 78, 79, 81, 83, 91, 92, 101, 105, 106, 107, 110, 112, 118, 119, 121, 136, 140, 144, 147, 149, 151, 156, 157, 161, 167, 168, 170, 171, 174, 176, 177, 178, 179, 182, 184, 190, 193, 194, 200, 205, 207, 208, 218, 220, 223, 224, 225, 227, 228, 231, 232, 233, 238, 241, 252, 259, 261, 262, 263, 264, 274, 303, 356, 376, 406, 407, 411, 416, 421, 440, 441, 443, 473, 474, 490, 500, 552, 568, 569, 584, 692, 710, 711, 719, 720, 739, 767, 769, 780, 787, 795, 848, 854], "2010": [4, 92, 115, 154, 200, 241, 294, 351, 405, 721, 724, 848, 872], "3389": [4, 10, 19, 133, 150, 193, 200, 241, 411, 557, 846, 848], "fpsyg": [4, 150, 200, 241, 848], "00019": [4, 241, 848], "parametr": [4, 68, 92, 111, 164, 165, 228, 229, 230, 241, 261, 263, 264, 266, 315, 350, 446, 473, 519, 549, 552, 607, 627, 671, 672, 679, 680, 682, 683, 685, 686, 695, 722, 763, 784, 827, 869, 872], "studi": [4, 33, 69, 119, 143, 150, 160, 177, 179, 200, 202, 208, 220, 225, 227, 228, 241, 287, 294, 398, 399, 429, 827, 847, 854, 872], "bmc": [4, 16, 194, 241, 406, 421], "98": [4, 15, 19, 33, 35, 42, 44, 47, 79, 112, 115, 121, 136, 158, 168, 176, 179, 190, 193, 194, 207, 220, 223, 224, 225, 227, 228, 233, 241, 287, 294, 339, 341, 580, 679, 680, 682, 683], "2008": [4, 10, 35, 44, 150, 169, 179, 203, 220, 223, 224, 241, 273, 294, 295, 335, 357, 405, 426, 444, 468, 534, 552, 652, 679, 680, 682, 683], "1186": [4, 16, 194, 207, 241, 406, 421], "1471": [4, 16, 194, 241, 406, 421], "2202": [4, 16, 194, 241, 406, 421], "943": [4, 6, 228], "620": [4, 79, 104, 108, 228], "limo_data": [4, 6], "dataset": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 189, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 239, 240, 241, 253, 255, 258, 259, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 294, 295, 299, 306, 309, 325, 342, 350, 351, 352, 353, 355, 356, 358, 360, 365, 366, 367, 405, 408, 412, 415, 422, 425, 434, 436, 437, 446, 448, 449, 462, 468, 470, 471, 473, 474, 483, 484, 486, 509, 510, 511, 515, 516, 518, 519, 522, 525, 526, 530, 535, 536, 549, 552, 565, 569, 574, 580, 588, 609, 610, 611, 612, 618, 625, 640, 677, 679, 680, 682, 683, 692, 694, 695, 714, 725, 739, 755, 763, 767, 772, 779, 801, 807, 818, 831, 849, 854, 855, 860, 862, 872], "electr": [5, 165, 179, 197, 205, 206, 241, 294, 295, 552, 560, 759, 827, 832, 847, 857], "stimul": [5, 32, 45, 150, 179, 233, 261, 262, 263, 264, 356, 473, 474, 549, 550, 555, 574, 642, 692, 694, 695, 696, 739, 755, 848, 854, 872], "deliv": 5, "left": [5, 10, 11, 13, 15, 23, 25, 27, 30, 31, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 61, 70, 72, 77, 78, 81, 84, 85, 92, 110, 114, 117, 118, 122, 125, 126, 130, 132, 133, 134, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 154, 155, 157, 159, 165, 167, 171, 174, 177, 179, 180, 181, 190, 193, 194, 202, 203, 204, 205, 206, 208, 213, 214, 215, 219, 220, 224, 227, 231, 232, 233, 236, 254, 255, 257, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 309, 311, 321, 322, 332, 333, 357, 376, 381, 405, 412, 427, 429, 432, 439, 463, 471, 473, 474, 495, 505, 517, 551, 552, 627, 632, 640, 641, 644, 655, 692, 694, 695, 696, 739, 755, 763, 769, 770, 771, 773, 775, 777, 778, 779, 782, 790, 791, 792, 793, 794, 799, 803, 807, 827, 848, 854, 857, 872], "wrist": 5, "somatosensori": [5, 32, 34, 46, 111, 237, 241, 388, 872], "nine": [5, 141], "quspin": 5, "serf": 5, "place": [5, 7, 26, 125, 133, 139, 148, 149, 150, 155, 160, 164, 165, 168, 172, 173, 177, 200, 202, 203, 204, 206, 208, 212, 218, 231, 255, 258, 260, 261, 262, 263, 264, 265, 266, 270, 273, 278, 279, 284, 309, 314, 317, 337, 344, 360, 361, 377, 380, 381, 383, 405, 412, 427, 429, 430, 443, 444, 473, 474, 475, 484, 530, 539, 544, 551, 552, 564, 565, 566, 569, 573, 574, 577, 628, 634, 637, 642, 643, 644, 645, 657, 689, 692, 693, 694, 695, 696, 709, 726, 742, 756, 760, 771, 778, 782, 791, 794, 799, 801, 827, 831, 848, 852, 854, 855, 857, 858, 872], "side": [5, 19, 32, 45, 69, 140, 155, 165, 202, 206, 231, 238, 258, 259, 261, 262, 263, 264, 268, 270, 272, 276, 405, 412, 473, 474, 551, 552, 566, 571, 580, 677, 679, 680, 682, 683, 692, 693, 694, 696, 739, 756, 765, 767, 769, 771, 778, 782, 785, 791, 794, 797, 799, 801, 849, 854, 872], "somatomotor": 5, "custom": [5, 27, 36, 56, 107, 118, 120, 124, 128, 133, 139, 141, 144, 148, 149, 150, 166, 200, 201, 202, 203, 205, 206, 218, 228, 238, 253, 258, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 275, 276, 277, 318, 322, 324, 381, 473, 474, 549, 552, 601, 610, 612, 672, 696, 733, 739, 752, 757, 758, 769, 776, 786, 792, 797, 798, 802, 803, 827, 831, 847, 848, 849, 851, 872], "opm_sampl": [5, 107], "subjects_dir": [5, 7, 11, 22, 24, 26, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 67, 79, 88, 92, 93, 102, 107, 113, 114, 116, 122, 123, 124, 125, 129, 132, 133, 134, 135, 149, 154, 155, 156, 157, 158, 159, 160, 165, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 194, 209, 219, 220, 231, 232, 233, 253, 259, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 300, 304, 305, 306, 309, 357, 362, 363, 364, 368, 380, 382, 383, 384, 385, 424, 455, 457, 459, 461, 463, 464, 465, 466, 467, 505, 509, 511, 538, 539, 577, 597, 615, 617, 624, 629, 630, 631, 632, 640, 641, 655, 658, 669, 687, 688, 731, 738, 739, 755, 757, 767, 797, 802, 803, 812, 822, 837, 847, 854, 872], "raw_fnam": [5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 26, 32, 33, 34, 42, 45, 46, 49, 68, 69, 71, 72, 73, 75, 80, 81, 86, 91, 94, 95, 97, 98, 105, 106, 108, 109, 111, 115, 117, 119, 130, 131, 140, 151, 155, 157, 158, 161, 176, 179, 182, 184, 194, 202, 220, 225, 226, 227, 228, 231, 233, 237, 848, 854], "opm_sef_raw": 5, "bem_fnam": [5, 45, 67, 107], "bem": [5, 7, 23, 26, 27, 40, 41, 43, 44, 45, 50, 67, 107, 123, 133, 134, 135, 149, 154, 155, 158, 159, 162, 163, 164, 175, 179, 180, 181, 182, 183, 184, 189, 190, 206, 231, 232, 233, 251, 259, 271, 274, 362, 382, 404, 424, 448, 455, 509, 510, 511, 514, 515, 577, 599, 600, 623, 629, 631, 632, 641, 657, 755, 757, 814, 815, 820, 825, 827, 837, 848, 857, 862, 872], "5120": [5, 7, 26, 41, 45, 50, 67, 107, 149, 157, 158, 175, 180, 181, 253, 404, 509, 515, 657, 847], "sol": [5, 7, 22, 26, 41, 45, 50, 67, 107, 157, 158, 175, 180, 181, 253, 265, 515, 657, 847, 857], "fwd_fname": [5, 22, 31, 35, 40, 46, 51, 59, 67, 88, 90, 91, 92, 93, 179, 190, 220], "fwd": [5, 11, 22, 26, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 88, 90, 91, 92, 93, 107, 129, 157, 158, 171, 174, 175, 176, 177, 178, 179, 181, 190, 194, 219, 220, 253, 265, 272, 281, 282, 283, 361, 439, 451, 452, 514, 515, 612, 633, 656, 657, 739, 755, 819, 847, 854], "coil_def_fnam": 5, "coil_def": [5, 107, 848, 854, 857], "dat": [5, 107, 208, 329, 487, 501, 563, 571, 580, 591, 596, 848, 854, 872], "read_raw_fif": [5, 10, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 67, 68, 70, 71, 72, 73, 75, 78, 81, 82, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 111, 113, 115, 116, 119, 121, 125, 127, 130, 131, 139, 140, 141, 144, 145, 148, 150, 151, 155, 161, 165, 166, 167, 168, 169, 176, 179, 181, 182, 187, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 219, 225, 226, 227, 228, 231, 233, 236, 237, 255, 479, 854, 858, 862, 872], "h_trans_bandwidth": [5, 21, 111, 112, 190, 200, 209, 261, 262, 263, 264, 407, 416, 441, 443, 473, 474, 584, 872], "notch_width": [5, 444, 473, 474], "threshold": [5, 30, 34, 38, 73, 80, 94, 110, 118, 144, 150, 164, 165, 171, 181, 183, 187, 190, 198, 199, 203, 205, 208, 225, 226, 227, 228, 229, 230, 231, 232, 233, 241, 253, 256, 261, 262, 263, 264, 266, 305, 315, 321, 350, 355, 444, 473, 474, 496, 534, 552, 554, 557, 564, 566, 568, 569, 571, 572, 573, 575, 585, 603, 648, 649, 650, 651, 652, 653, 654, 675, 676, 679, 680, 682, 683, 684, 695, 739, 763, 768, 769, 785, 812, 847, 854, 860, 872], "larger": [5, 49, 59, 69, 149, 178, 194, 197, 200, 202, 208, 215, 225, 238, 261, 262, 271, 276, 277, 449, 473, 474, 554, 573, 589, 687, 720, 721, 723, 724, 769, 792, 800, 803, 853, 854, 872], "squid": [5, 107, 241, 848, 854], "2e": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 69, 73, 88, 91, 92, 107, 117, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 219, 220, 564, 565], "trigger": [5, 10, 91, 101, 107, 143, 165, 167, 170, 176, 181, 184, 187, 188, 189, 190, 199, 204, 209, 223, 253, 254, 351, 356, 446, 447, 473, 474, 481, 488, 490, 494, 496, 569, 573, 607, 657, 827, 831, 847, 854, 857, 872], "257": [5, 113, 168, 169, 228, 848], "sti101": [5, 167, 254, 446, 447], "mask": [5, 28, 31, 80, 94, 98, 99, 110, 118, 141, 184, 200, 204, 219, 223, 224, 225, 226, 227, 228, 254, 258, 261, 262, 263, 264, 270, 405, 411, 412, 446, 473, 474, 481, 551, 552, 566, 607, 679, 680, 682, 683, 692, 694, 696, 756, 771, 775, 778, 782, 791, 794, 799, 801, 851, 872], "mask_typ": [5, 184, 254, 446, 481, 607, 872], "verbos": [5, 10, 11, 13, 14, 15, 34, 38, 40, 41, 42, 44, 49, 51, 58, 69, 74, 77, 78, 82, 86, 91, 92, 97, 102, 106, 107, 119, 121, 122, 124, 132, 133, 134, 135, 139, 141, 144, 145, 148, 149, 151, 156, 157, 158, 161, 169, 170, 171, 176, 178, 179, 180, 181, 182, 183, 189, 194, 198, 199, 200, 203, 206, 207, 208, 209, 213, 214, 223, 224, 225, 231, 236, 238, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 411, 415, 416, 418, 421, 422, 424, 426, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 455, 456, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 548, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 639, 640, 641, 643, 644, 645, 646, 656, 657, 660, 662, 663, 664, 665, 666, 667, 668, 679, 680, 681, 682, 683, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 711, 714, 715, 719, 720, 722, 723, 724, 725, 728, 729, 734, 735, 738, 739, 747, 755, 764, 767, 771, 772, 773, 774, 779, 782, 783, 784, 789, 790, 792, 793, 795, 796, 797, 798, 802, 803, 804, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 829, 831, 862, 872], "errorsuppress": [5, 13, 27, 38, 49, 76, 82, 83, 135, 144, 149, 150, 170, 179, 183, 187, 197, 198, 200, 201, 202, 205, 241, 253, 258, 261, 262, 263, 264, 265, 266, 267, 272, 338, 340, 344, 361, 441, 443, 444, 473, 474, 549, 550, 567, 601, 612, 615, 638, 656, 658, 776, 827, 854, 872], "warn": [5, 10, 13, 38, 132, 134, 135, 139, 150, 161, 170, 171, 180, 183, 190, 201, 203, 204, 213, 214, 225, 236, 253, 255, 256, 261, 262, 263, 264, 266, 268, 269, 271, 272, 273, 275, 276, 277, 281, 282, 313, 336, 339, 345, 346, 351, 355, 357, 358, 360, 362, 365, 366, 398, 424, 432, 439, 452, 455, 473, 474, 493, 552, 563, 571, 580, 581, 600, 610, 629, 631, 634, 638, 639, 692, 694, 695, 696, 735, 737, 739, 772, 783, 818, 820, 837, 839, 862, 872], "about": [5, 13, 19, 27, 34, 43, 44, 69, 73, 92, 99, 112, 139, 140, 142, 143, 145, 148, 150, 154, 159, 161, 165, 167, 168, 171, 174, 177, 183, 187, 188, 189, 190, 193, 194, 198, 200, 201, 203, 204, 208, 209, 212, 213, 214, 219, 220, 223, 225, 253, 254, 256, 258, 260, 261, 262, 263, 264, 266, 270, 271, 272, 274, 279, 281, 282, 294, 295, 296, 302, 303, 307, 308, 315, 316, 317, 321, 323, 324, 337, 339, 341, 346, 355, 364, 365, 366, 367, 369, 405, 407, 412, 413, 414, 424, 429, 446, 449, 456, 465, 472, 473, 474, 475, 478, 503, 508, 515, 516, 520, 530, 548, 549, 552, 563, 577, 585, 586, 607, 627, 628, 656, 657, 660, 678, 692, 693, 694, 695, 696, 719, 720, 722, 723, 739, 752, 755, 759, 764, 765, 774, 781, 791, 795, 827, 831, 835, 847, 848, 850, 851, 853, 855, 857, 860, 872], "decim": [5, 7, 11, 12, 13, 18, 19, 24, 33, 34, 41, 42, 101, 107, 110, 157, 160, 161, 165, 171, 180, 182, 194, 201, 203, 208, 224, 225, 226, 227, 228, 237, 253, 256, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 305, 404, 418, 426, 446, 473, 474, 496, 512, 535, 536, 552, 568, 569, 603, 606, 661, 678, 692, 695, 698, 701, 717, 719, 720, 721, 722, 723, 724, 739, 757, 769, 792, 847, 854, 857, 872], "caus": [5, 13, 44, 69, 141, 150, 160, 197, 198, 199, 200, 201, 204, 208, 214, 258, 261, 262, 263, 264, 271, 464, 473, 474, 500, 552, 736, 773, 778, 832, 847, 872], "alias": [5, 13, 161, 180, 201, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 418, 473, 474, 568, 569, 692, 695, 717, 719, 720, 722, 723, 769, 792, 805, 851, 872], "ideal": [5, 69, 106, 131, 134, 143, 150, 169, 200, 202, 205, 206, 224, 238, 309, 780, 787, 827, 831, 851, 854], "instead": [5, 43, 73, 102, 112, 118, 133, 135, 141, 142, 145, 148, 149, 150, 155, 157, 159, 160, 165, 167, 168, 169, 170, 171, 194, 198, 199, 200, 201, 203, 204, 208, 212, 213, 215, 220, 223, 231, 232, 233, 236, 237, 253, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 272, 273, 275, 276, 277, 286, 287, 288, 289, 292, 294, 304, 306, 309, 350, 351, 356, 405, 412, 434, 435, 436, 437, 438, 439, 446, 453, 456, 461, 472, 473, 474, 521, 523, 526, 552, 553, 554, 587, 626, 637, 641, 656, 692, 695, 708, 718, 719, 720, 721, 722, 723, 724, 739, 741, 763, 769, 773, 779, 782, 786, 792, 801, 809, 829, 830, 831, 835, 836, 839, 847, 848, 849, 854, 872], "proj": [5, 8, 9, 11, 13, 14, 15, 18, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 77, 84, 85, 86, 90, 107, 109, 114, 115, 117, 118, 119, 122, 125, 129, 139, 141, 144, 148, 149, 150, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 194, 197, 201, 204, 205, 206, 209, 212, 215, 218, 253, 256, 258, 261, 262, 263, 264, 266, 270, 271, 294, 295, 338, 339, 351, 352, 353, 354, 355, 367, 472, 473, 474, 512, 551, 552, 564, 565, 568, 595, 603, 610, 618, 633, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 764, 771, 773, 775, 777, 778, 790, 791, 792, 793, 823, 827, 847, 872], "cov": [5, 11, 21, 31, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 82, 88, 90, 91, 92, 93, 119, 151, 171, 175, 177, 178, 180, 181, 182, 183, 184, 190, 193, 194, 219, 220, 253, 258, 271, 272, 351, 356, 448, 508, 520, 542, 552, 601, 619, 646, 656, 737, 764, 816, 831, 847, 848, 851, 862, 872], "compute_covari": [5, 7, 34, 42, 46, 49, 82, 91, 119, 151, 161, 176, 179, 181, 182, 184, 194, 219, 258, 356, 367, 405, 412, 413, 553, 601, 737, 847, 851, 862, 872], "del": [5, 18, 33, 41, 42, 46, 47, 48, 49, 50, 54, 55, 107, 111, 133, 135, 139, 141, 144, 148, 165, 171, 176, 178, 179, 180, 182, 183, 190, 194, 200, 203], "open": [5, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 67, 68, 69, 70, 71, 72, 73, 75, 78, 81, 82, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 111, 113, 115, 116, 119, 121, 125, 127, 130, 131, 133, 134, 140, 141, 143, 145, 149, 150, 151, 154, 155, 160, 161, 164, 165, 166, 167, 168, 171, 176, 179, 181, 182, 194, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 212, 215, 219, 220, 225, 226, 227, 228, 231, 233, 237, 238, 241, 260, 261, 262, 263, 264, 271, 274, 376, 473, 474, 552, 560, 657, 777, 782, 792, 800, 827, 828, 830, 835, 837, 838, 848, 850, 851, 853, 857, 872], "isotrak": [5, 42, 99, 107, 121, 127, 142, 161, 171, 205, 207, 224, 253, 334, 854], "700999": 5, "700": [5, 79, 113, 126, 133, 193, 207, 228, 708, 718, 739], "999": [5, 19, 34, 75, 78, 82, 90, 94, 107, 109, 121, 127, 129, 141, 143, 158, 167, 171, 182, 203, 204, 206, 207, 208, 228, 564, 568, 572, 575], "contigu": [5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 34, 42, 72, 75, 80, 81, 82, 86, 97, 111, 112, 113, 119, 131, 140, 143, 145, 150, 194, 201, 202, 203, 205, 208, 209, 227, 228, 267], "segment": [5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 23, 24, 27, 33, 34, 38, 42, 63, 69, 72, 75, 79, 80, 81, 82, 86, 97, 107, 111, 112, 113, 119, 131, 133, 134, 136, 140, 143, 144, 145, 150, 161, 167, 171, 183, 190, 194, 199, 201, 202, 203, 204, 205, 207, 208, 209, 214, 228, 237, 241, 253, 255, 259, 261, 262, 263, 264, 271, 274, 300, 351, 356, 434, 457, 458, 459, 472, 473, 474, 500, 512, 520, 522, 552, 554, 555, 556, 557, 558, 559, 562, 568, 569, 571, 572, 578, 580, 692, 711, 737, 739, 773, 775, 782, 784, 827, 847, 848, 854, 857, 872], "lowpass": [5, 11, 70, 72, 75, 79, 80, 81, 82, 88, 91, 125, 140, 145, 150, 165, 166, 167, 168, 190, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 253, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 440, 473, 474, 692, 694, 695, 696, 769, 792, 793, 857, 872], "331": [5, 19, 34, 82, 112, 168, 200, 207, 208, 228], "48": [5, 11, 12, 13, 19, 21, 28, 35, 45, 46, 47, 79, 92, 101, 106, 107, 110, 112, 144, 150, 156, 167, 168, 170, 193, 194, 207, 214, 223, 224, 225, 227, 228, 231, 233, 241, 872], "6601": 5, "initi": [5, 16, 19, 21, 41, 43, 44, 69, 91, 94, 107, 110, 143, 148, 150, 155, 167, 179, 184, 190, 203, 212, 218, 223, 224, 225, 226, 227, 228, 231, 232, 233, 238, 252, 253, 259, 261, 262, 267, 268, 269, 271, 272, 273, 275, 276, 277, 369, 371, 468, 473, 474, 480, 499, 505, 552, 578, 587, 589, 597, 644, 645, 646, 655, 656, 658, 671, 679, 680, 681, 682, 683, 695, 729, 739, 767, 769, 783, 786, 792, 797, 802, 803, 831, 836, 838, 853, 854, 857, 872], "256": [5, 6, 12, 21, 69, 107, 113, 122, 133, 155, 159, 168, 169, 170, 171, 182, 220, 227, 228, 274, 437, 691, 711, 754, 829, 854], "initial_ev": [5, 88, 91, 107, 184, 220, 446, 872], "detect": [5, 8, 9, 12, 22, 27, 67, 69, 71, 73, 76, 80, 81, 91, 107, 110, 125, 136, 145, 150, 156, 158, 161, 164, 167, 171, 184, 189, 190, 194, 198, 200, 201, 202, 203, 204, 205, 208, 210, 211, 213, 238, 241, 253, 254, 261, 262, 263, 264, 266, 271, 315, 338, 340, 344, 444, 473, 474, 479, 500, 549, 552, 554, 556, 557, 558, 560, 564, 565, 567, 568, 569, 571, 572, 573, 575, 580, 678, 692, 721, 724, 739, 769, 785, 786, 792, 838, 851, 854, 861, 872], "201": [5, 45, 125, 135, 167, 168, 173, 175, 180, 182, 207, 223, 227, 228, 233, 857], "rank": [5, 7, 8, 9, 12, 15, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 82, 86, 88, 91, 92, 102, 105, 106, 107, 108, 111, 119, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 198, 202, 203, 204, 219, 220, 231, 233, 258, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 413, 448, 449, 468, 470, 471, 524, 530, 552, 764, 779, 827, 851, 872], "toler": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 200, 203, 204, 219, 220, 355, 468, 470, 471, 552, 589, 854, 872], "1e": [5, 8, 9, 32, 33, 34, 40, 45, 46, 49, 59, 65, 69, 70, 73, 80, 91, 92, 112, 118, 119, 136, 157, 161, 178, 179, 182, 184, 194, 199, 200, 219, 220, 223, 261, 262, 271, 468, 473, 474, 519, 551, 561, 578, 658, 685, 692, 769, 792, 794, 799, 827, 872], "16": [5, 8, 9, 11, 12, 13, 19, 20, 21, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 70, 78, 79, 81, 88, 91, 92, 94, 98, 101, 106, 107, 112, 117, 119, 121, 125, 128, 143, 151, 155, 159, 161, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 197, 200, 201, 203, 205, 206, 207, 208, 209, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 235, 238, 241, 254, 256, 260, 261, 262, 263, 264, 271, 274, 351, 405, 412, 446, 464, 473, 474, 481, 519, 521, 522, 525, 526, 532, 535, 552, 560, 568, 588, 672, 692, 694, 695, 696, 755, 769, 773, 775, 777, 778, 779, 781, 792, 854, 857], "ep": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 219, 220, 519], "dim": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 159, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 219, 220, 236, 258, 525, 526, 535, 536, 553, 695, 857], "singular": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 88, 91, 92, 107, 119, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 204, 219, 220, 258, 268, 269, 272, 275, 276, 277, 355, 439, 527, 764, 854, 857], "reduc": [5, 8, 9, 12, 15, 16, 21, 27, 34, 40, 42, 46, 49, 55, 59, 70, 76, 82, 83, 86, 102, 105, 106, 107, 108, 112, 118, 119, 145, 148, 150, 156, 157, 161, 166, 171, 176, 179, 181, 182, 184, 190, 193, 194, 201, 202, 203, 204, 205, 206, 208, 212, 219, 225, 226, 228, 231, 232, 233, 237, 241, 258, 261, 262, 263, 264, 265, 268, 269, 272, 275, 276, 277, 294, 295, 351, 355, 356, 365, 366, 367, 383, 405, 406, 412, 418, 421, 422, 428, 440, 446, 448, 449, 468, 470, 471, 473, 474, 522, 525, 526, 530, 535, 536, 551, 552, 578, 588, 635, 679, 680, 682, 683, 698, 701, 717, 719, 720, 721, 722, 723, 724, 773, 778, 779, 827, 831, 851, 854, 857, 872], "covari": [5, 8, 9, 11, 12, 15, 19, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 66, 67, 79, 86, 88, 90, 91, 92, 101, 102, 105, 106, 107, 108, 111, 120, 122, 128, 148, 151, 162, 163, 164, 165, 175, 177, 178, 180, 181, 182, 183, 184, 190, 194, 198, 199, 203, 220, 231, 233, 241, 253, 261, 262, 263, 264, 265, 266, 271, 272, 291, 294, 295, 297, 314, 350, 351, 352, 354, 355, 356, 365, 366, 367, 405, 411, 412, 413, 430, 446, 448, 449, 468, 470, 471, 473, 474, 478, 508, 518, 519, 520, 521, 522, 523, 525, 526, 530, 532, 535, 536, 544, 552, 553, 601, 607, 612, 646, 656, 678, 693, 703, 739, 764, 769, 773, 777, 779, 792, 816, 827, 848, 857, 862, 872], "empir": [5, 8, 9, 15, 27, 31, 36, 46, 49, 56, 86, 91, 119, 161, 176, 179, 181, 182, 184, 194, 208, 219, 241, 258, 263, 264, 265, 266, 272, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 413, 448, 449, 468, 469, 470, 471, 530, 553, 601, 610, 612, 766, 767, 779, 798, 872], "10251": 5, "examin": [5, 34, 47, 73, 127, 135, 141, 144, 145, 150, 159, 165, 176, 177, 203, 212, 214, 831, 851], "align": [5, 7, 9, 28, 78, 134, 150, 154, 156, 157, 162, 163, 164, 167, 171, 181, 182, 183, 189, 212, 223, 255, 259, 261, 262, 266, 268, 269, 272, 273, 274, 275, 276, 277, 299, 305, 309, 362, 364, 385, 424, 439, 464, 465, 473, 516, 552, 622, 623, 625, 641, 728, 729, 739, 755, 767, 769, 807, 812, 827, 854, 872], "forward": [5, 7, 12, 22, 26, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 67, 71, 78, 88, 90, 91, 92, 93, 129, 134, 145, 154, 155, 159, 160, 163, 165, 169, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 190, 194, 197, 198, 199, 200, 202, 203, 205, 206, 219, 220, 241, 253, 261, 262, 263, 264, 266, 269, 271, 272, 274, 275, 277, 281, 282, 283, 294, 295, 296, 297, 299, 304, 306, 309, 313, 314, 325, 331, 357, 361, 369, 384, 405, 407, 412, 416, 430, 432, 433, 441, 443, 444, 464, 468, 469, 470, 471, 473, 474, 478, 488, 509, 510, 514, 515, 516, 528, 529, 530, 531, 534, 545, 550, 599, 612, 622, 633, 637, 640, 641, 643, 644, 645, 656, 657, 692, 733, 739, 755, 757, 776, 780, 805, 807, 819, 827, 832, 843, 848, 853, 857, 860, 862, 872], "mri": [5, 24, 26, 30, 35, 40, 41, 43, 44, 45, 50, 59, 91, 92, 107, 113, 122, 123, 133, 134, 135, 149, 156, 157, 160, 162, 163, 164, 165, 169, 175, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 206, 212, 220, 241, 258, 259, 261, 263, 264, 265, 266, 271, 272, 273, 274, 276, 277, 299, 300, 301, 304, 305, 306, 309, 313, 322, 325, 327, 331, 351, 357, 362, 363, 364, 368, 369, 382, 384, 385, 424, 439, 446, 448, 456, 457, 458, 464, 465, 466, 467, 473, 474, 488, 502, 504, 511, 514, 515, 518, 519, 530, 577, 599, 622, 624, 629, 630, 631, 632, 641, 660, 687, 726, 727, 729, 731, 739, 750, 755, 757, 767, 803, 807, 820, 827, 832, 835, 838, 847, 851, 857, 860, 862, 872], "ident": [5, 45, 69, 97, 107, 123, 134, 149, 155, 157, 159, 165, 182, 183, 184, 193, 203, 206, 208, 259, 266, 273, 274, 301, 369, 385, 429, 504, 511, 514, 515, 525, 527, 571, 578, 580, 602, 657, 687, 727, 755, 827, 847, 848, 849, 854, 857, 872], "matrix": [5, 9, 10, 11, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 67, 77, 79, 85, 88, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 117, 119, 122, 129, 132, 133, 136, 140, 149, 150, 151, 155, 156, 157, 158, 159, 162, 163, 164, 165, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 193, 194, 198, 203, 204, 205, 219, 220, 224, 225, 226, 227, 228, 232, 233, 241, 253, 258, 259, 261, 263, 264, 266, 271, 273, 274, 291, 294, 295, 296, 301, 309, 312, 313, 315, 326, 351, 356, 357, 365, 366, 367, 411, 426, 446, 449, 473, 474, 478, 511, 515, 519, 525, 526, 527, 528, 529, 530, 531, 534, 535, 536, 544, 549, 552, 553, 559, 560, 578, 581, 601, 605, 607, 641, 646, 657, 662, 663, 664, 665, 666, 667, 668, 672, 677, 678, 679, 680, 682, 683, 687, 693, 700, 701, 702, 709, 727, 755, 759, 760, 764, 765, 782, 783, 786, 816, 827, 848, 872], "co": [5, 22, 67, 156, 200, 208, 218, 241, 338, 431, 827, 848, 854], "registr": [5, 43, 44, 132, 133, 156, 179, 241, 273, 357, 728, 729, 812, 837, 848, 854, 872], "equat": [5, 134, 155, 193, 194, 204, 241, 426, 563, 721, 724, 854, 860], "mi": [5, 848], "defin": [5, 8, 9, 10, 12, 18, 19, 21, 27, 31, 33, 43, 44, 60, 61, 75, 76, 83, 92, 93, 102, 105, 109, 112, 118, 126, 133, 135, 139, 140, 141, 143, 150, 154, 157, 159, 161, 162, 164, 166, 167, 169, 171, 174, 177, 179, 181, 189, 190, 193, 194, 200, 204, 209, 220, 226, 227, 228, 231, 233, 237, 238, 241, 253, 254, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 281, 282, 287, 294, 295, 309, 314, 317, 331, 332, 351, 357, 361, 381, 387, 405, 411, 412, 430, 431, 434, 440, 460, 463, 473, 474, 479, 485, 504, 505, 506, 514, 519, 520, 521, 522, 523, 526, 530, 535, 536, 538, 549, 551, 552, 553, 555, 556, 566, 578, 597, 602, 607, 641, 644, 645, 646, 649, 652, 654, 655, 656, 657, 658, 665, 668, 679, 680, 681, 682, 683, 687, 688, 692, 693, 694, 695, 696, 698, 700, 701, 702, 703, 706, 708, 718, 719, 720, 722, 723, 739, 744, 756, 760, 763, 770, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 802, 827, 831, 837, 847, 848, 853, 854, 857, 872], "base": [5, 7, 9, 11, 16, 21, 22, 27, 28, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 55, 58, 59, 61, 67, 69, 76, 81, 83, 88, 90, 92, 94, 97, 98, 101, 105, 107, 108, 110, 111, 112, 115, 117, 119, 130, 133, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 159, 160, 161, 164, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 188, 190, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 233, 236, 237, 238, 241, 250, 255, 256, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 309, 311, 315, 316, 321, 326, 329, 338, 339, 340, 341, 344, 350, 351, 352, 353, 356, 357, 361, 371, 399, 405, 407, 408, 411, 412, 413, 415, 416, 418, 419, 422, 426, 428, 431, 434, 436, 438, 440, 441, 443, 444, 446, 449, 456, 462, 464, 472, 473, 474, 479, 490, 505, 511, 512, 515, 517, 520, 534, 549, 551, 552, 554, 555, 559, 560, 561, 562, 563, 566, 568, 569, 571, 572, 580, 593, 594, 595, 607, 612, 614, 631, 640, 644, 645, 652, 665, 668, 677, 678, 679, 680, 681, 682, 683, 687, 688, 692, 694, 695, 696, 698, 701, 704, 711, 719, 720, 722, 723, 725, 735, 739, 748, 750, 756, 758, 763, 768, 769, 771, 777, 778, 779, 780, 782, 784, 785, 786, 791, 792, 794, 796, 797, 799, 801, 802, 803, 819, 827, 829, 830, 831, 832, 834, 835, 840, 843, 847, 848, 851, 857, 860, 863, 867, 872], "lpa": [5, 133, 135, 155, 159, 303, 309, 322, 333, 342, 362, 364, 424, 480, 827, 848, 872], "nasion": [5, 155, 156, 159, 169, 303, 309, 322, 332, 333, 342, 362, 364, 424, 645, 827, 848, 854, 857, 872], "rpa": [5, 133, 135, 155, 159, 303, 309, 322, 333, 342, 362, 364, 424, 480, 827, 848, 872], "fine": [5, 180, 187, 208, 238, 266, 426, 562, 563, 571, 580, 591, 596, 872], "analys": [5, 11, 27, 31, 41, 68, 96, 100, 114, 134, 142, 145, 149, 150, 157, 159, 194, 198, 204, 205, 212, 224, 238, 241, 263, 264, 473, 474, 603, 676, 677, 763, 775, 838, 848, 854, 860, 872], "read_bem_solut": [5, 45, 107, 158, 510, 814, 862], "tran": [5, 7, 26, 41, 50, 51, 52, 67, 79, 107, 113, 114, 116, 122, 123, 133, 134, 135, 149, 156, 157, 158, 159, 171, 175, 177, 180, 181, 182, 189, 190, 206, 209, 253, 259, 271, 274, 297, 301, 309, 362, 363, 382, 385, 424, 426, 448, 456, 464, 465, 511, 514, 515, 559, 577, 580, 625, 657, 660, 687, 726, 727, 739, 755, 767, 826, 827, 847, 848, 854, 872], "solut": [5, 7, 11, 22, 23, 26, 27, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 67, 69, 70, 88, 90, 91, 92, 93, 103, 104, 105, 106, 107, 108, 122, 129, 155, 156, 158, 161, 164, 165, 169, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 198, 205, 219, 220, 231, 233, 241, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 281, 282, 283, 294, 295, 296, 306, 357, 361, 367, 439, 449, 450, 468, 469, 470, 471, 473, 474, 506, 510, 514, 515, 516, 518, 519, 520, 521, 522, 523, 526, 527, 530, 533, 534, 544, 545, 549, 550, 552, 592, 599, 601, 607, 610, 612, 614, 615, 622, 637, 640, 641, 643, 644, 645, 656, 657, 739, 755, 766, 767, 782, 784, 786, 797, 798, 802, 814, 819, 827, 829, 831, 832, 838, 843, 857, 862, 872], "must": [5, 18, 32, 43, 44, 47, 60, 81, 125, 126, 134, 143, 145, 155, 166, 168, 170, 171, 180, 183, 187, 189, 197, 198, 203, 205, 208, 214, 218, 223, 225, 227, 228, 231, 233, 238, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 280, 283, 288, 294, 295, 311, 312, 315, 318, 322, 326, 338, 340, 344, 351, 355, 356, 357, 362, 365, 366, 367, 381, 387, 390, 404, 405, 411, 412, 413, 417, 420, 421, 422, 424, 429, 434, 437, 439, 446, 448, 449, 465, 468, 470, 471, 472, 473, 474, 481, 488, 493, 494, 504, 507, 512, 513, 514, 528, 529, 530, 551, 552, 554, 563, 565, 566, 567, 568, 571, 577, 580, 603, 634, 637, 641, 642, 653, 657, 658, 660, 662, 663, 666, 674, 677, 678, 679, 680, 682, 683, 687, 692, 694, 695, 696, 707, 711, 715, 722, 739, 742, 744, 755, 756, 758, 762, 763, 767, 769, 770, 771, 773, 775, 777, 778, 779, 780, 782, 786, 787, 791, 792, 793, 794, 795, 797, 800, 801, 802, 803, 835, 847, 848, 851, 853, 854, 857], "temporari": [5, 150, 171, 253, 266, 635, 747], "definit": [5, 26, 41, 45, 50, 107, 133, 157, 158, 159, 160, 161, 175, 180, 181, 182, 183, 184, 200, 206, 225, 241, 253, 266, 271, 294, 295, 317, 319, 326, 448, 473, 580, 626, 733, 739, 827, 847, 853, 855, 872], "use_coil_def": [5, 107, 862], "make_forward_solut": [5, 7, 26, 41, 50, 107, 157, 158, 181, 190, 206, 265, 612, 733, 847, 854, 862, 872], "src": [5, 7, 22, 24, 26, 28, 30, 31, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 59, 60, 67, 88, 90, 91, 92, 93, 107, 134, 135, 155, 157, 158, 159, 177, 179, 180, 181, 190, 206, 219, 231, 232, 233, 253, 265, 267, 268, 269, 272, 274, 275, 276, 277, 279, 295, 357, 439, 459, 469, 506, 507, 515, 528, 529, 532, 534, 539, 622, 632, 640, 641, 642, 649, 652, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 687, 688, 739, 755, 757, 797, 798, 802, 803, 824, 847, 857, 872], "mindist": [5, 24, 41, 45, 50, 155, 157, 158, 175, 180, 182, 183, 184, 206, 515, 641, 657], "read_forward_solut": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 88, 90, 91, 92, 93, 129, 157, 176, 177, 178, 179, 190, 194, 219, 220, 265, 819, 862, 872], "orient": [5, 11, 22, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 67, 78, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 114, 122, 129, 133, 155, 157, 158, 159, 164, 165, 171, 174, 175, 176, 179, 180, 181, 182, 185, 186, 187, 190, 194, 206, 208, 219, 220, 223, 231, 233, 241, 258, 259, 260, 263, 265, 266, 268, 269, 272, 275, 276, 277, 281, 282, 294, 295, 296, 361, 425, 439, 448, 449, 450, 464, 468, 470, 471, 492, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 528, 529, 530, 531, 534, 535, 536, 591, 601, 602, 605, 609, 610, 612, 625, 640, 644, 656, 657, 739, 748, 755, 757, 758, 767, 807, 819, 847, 856, 857, 860, 872], "later": [5, 11, 19, 32, 38, 43, 47, 68, 99, 107, 125, 133, 135, 139, 140, 141, 143, 148, 150, 161, 171, 174, 176, 179, 180, 188, 190, 197, 198, 199, 200, 203, 204, 205, 206, 212, 213, 214, 215, 218, 231, 232, 238, 241, 256, 261, 262, 263, 264, 269, 271, 273, 275, 278, 357, 447, 473, 474, 552, 604, 606, 692, 694, 695, 696, 739, 802, 831, 836, 837, 848, 849, 854, 857, 872], "convert_forward_solut": [5, 22, 47, 48, 49, 54, 55, 67, 157, 177, 219, 515, 612, 819, 854, 862, 872], "force_fix": [5, 47, 48, 49, 54, 55, 67, 157, 219, 361, 530, 872], "plot_align": [5, 24, 52, 79, 107, 113, 116, 121, 122, 123, 134, 135, 155, 156, 157, 158, 169, 177, 181, 182, 183, 184, 261, 262, 263, 264, 306, 473, 474, 757, 795, 804, 809, 847, 851, 854, 862, 872], "surfac": [5, 11, 22, 24, 26, 27, 31, 34, 35, 36, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 67, 70, 79, 88, 90, 92, 107, 113, 114, 116, 118, 122, 123, 132, 133, 134, 135, 149, 154, 155, 156, 158, 162, 163, 164, 165, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 187, 189, 190, 194, 197, 206, 208, 214, 219, 220, 223, 231, 232, 233, 241, 259, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 294, 295, 301, 304, 305, 306, 332, 357, 361, 362, 382, 385, 404, 424, 439, 450, 455, 456, 461, 463, 464, 467, 468, 470, 471, 505, 507, 509, 510, 511, 515, 519, 520, 521, 522, 523, 526, 528, 529, 530, 535, 536, 538, 539, 561, 562, 577, 597, 600, 612, 615, 620, 621, 622, 623, 626, 629, 631, 640, 641, 655, 656, 657, 658, 661, 663, 664, 667, 669, 687, 688, 720, 723, 726, 739, 755, 757, 767, 774, 797, 798, 802, 812, 815, 819, 820, 825, 827, 829, 832, 835, 837, 838, 848, 851, 860, 862, 872], "pial": [5, 113, 122, 134, 135, 154, 180, 259, 274, 538, 615, 687, 739, 755, 767, 872], "set_3d_view": [5, 24, 52, 79, 107, 113, 116, 122, 123, 135, 155, 156, 157, 158, 159, 169, 177, 182, 862, 872], "azimuth": [5, 24, 79, 107, 113, 114, 116, 122, 123, 133, 134, 135, 155, 156, 157, 159, 169, 177, 180, 182, 189, 209, 220, 739, 807, 872], "elev": [5, 24, 79, 107, 113, 114, 116, 122, 123, 133, 134, 135, 155, 156, 157, 159, 169, 180, 182, 189, 197, 204, 209, 220, 739, 807, 872], "distanc": [5, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 78, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 114, 122, 126, 129, 133, 134, 135, 142, 155, 156, 157, 158, 159, 160, 165, 169, 171, 175, 176, 177, 178, 180, 182, 189, 190, 194, 200, 207, 209, 219, 220, 231, 233, 253, 258, 261, 262, 263, 264, 266, 267, 270, 271, 272, 274, 279, 301, 341, 362, 405, 408, 409, 412, 415, 424, 426, 448, 457, 463, 464, 473, 474, 505, 515, 534, 551, 552, 556, 560, 563, 566, 571, 580, 585, 586, 632, 640, 641, 649, 652, 655, 657, 658, 660, 662, 663, 664, 666, 667, 679, 680, 682, 683, 687, 692, 694, 696, 739, 756, 759, 771, 778, 782, 791, 794, 799, 801, 807, 827, 854, 857, 872], "focalpoint": [5, 24, 52, 107, 114, 122, 133, 155, 156, 157, 158, 159, 177, 220, 739, 807, 872], "04": [5, 19, 20, 24, 31, 35, 41, 42, 49, 50, 56, 69, 70, 72, 82, 88, 91, 93, 98, 100, 101, 106, 119, 121, 122, 125, 128, 136, 138, 140, 157, 161, 163, 176, 179, 182, 184, 198, 199, 207, 209, 223, 224, 225, 227, 228, 233, 241, 384, 426, 511, 516, 552, 580, 649, 654, 834, 854], "load": [5, 7, 11, 13, 14, 24, 26, 28, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 67, 70, 74, 78, 79, 80, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 105, 107, 108, 110, 111, 115, 117, 118, 119, 121, 123, 125, 126, 133, 134, 141, 142, 144, 149, 150, 151, 155, 157, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 175, 176, 179, 180, 181, 182, 183, 187, 188, 190, 191, 194, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 213, 214, 215, 216, 223, 224, 225, 226, 227, 231, 232, 233, 236, 238, 253, 256, 257, 261, 262, 263, 264, 271, 310, 315, 319, 326, 356, 358, 371, 455, 456, 473, 474, 480, 492, 493, 499, 511, 514, 515, 530, 541, 552, 554, 564, 593, 603, 605, 609, 610, 612, 614, 620, 621, 623, 657, 690, 713, 714, 755, 769, 773, 777, 779, 786, 792, 819, 827, 848, 849, 857, 872], "three": [5, 31, 45, 92, 101, 107, 118, 141, 144, 150, 155, 157, 158, 160, 167, 177, 181, 187, 188, 197, 198, 203, 204, 205, 212, 214, 215, 218, 223, 236, 238, 253, 255, 258, 259, 261, 262, 263, 264, 269, 270, 275, 277, 294, 295, 304, 305, 306, 321, 405, 412, 463, 468, 473, 474, 509, 528, 529, 551, 552, 562, 566, 591, 623, 626, 641, 644, 673, 675, 692, 694, 696, 729, 739, 756, 767, 769, 771, 778, 780, 782, 790, 791, 792, 794, 799, 801, 820, 825, 831, 848, 851, 854, 857, 872], "layer": [5, 45, 107, 157, 158, 181, 182, 183, 184, 198, 241, 304, 382, 509, 516, 641, 649, 654, 755, 847, 854, 872], "model": [5, 7, 11, 12, 13, 18, 22, 26, 31, 32, 36, 41, 42, 50, 56, 72, 99, 103, 104, 107, 111, 114, 119, 134, 140, 150, 154, 155, 158, 159, 160, 161, 163, 169, 170, 171, 174, 175, 181, 182, 183, 184, 189, 190, 194, 202, 203, 220, 227, 241, 247, 258, 259, 261, 263, 264, 265, 266, 269, 271, 272, 274, 275, 276, 277, 294, 295, 299, 301, 304, 306, 338, 351, 357, 361, 368, 405, 409, 411, 412, 415, 417, 422, 423, 446, 448, 464, 468, 473, 478, 509, 510, 514, 515, 516, 518, 519, 520, 521, 530, 549, 551, 561, 577, 590, 599, 601, 602, 612, 618, 627, 633, 640, 641, 649, 654, 678, 705, 733, 739, 755, 757, 779, 794, 807, 814, 819, 827, 832, 835, 837, 838, 848, 851, 857, 862, 872], "colloc": [5, 26, 41, 45, 50, 107, 157, 158, 175, 181, 510, 872], "patch": [5, 11, 22, 28, 29, 31, 34, 35, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 122, 125, 129, 155, 157, 159, 165, 171, 176, 177, 178, 180, 181, 190, 194, 219, 220, 231, 233, 253, 258, 261, 262, 263, 264, 269, 270, 274, 275, 277, 279, 281, 282, 361, 405, 412, 473, 474, 519, 520, 521, 522, 523, 526, 530, 535, 536, 551, 552, 566, 600, 622, 640, 656, 657, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 857, 872], "statist": [5, 10, 11, 22, 28, 29, 31, 35, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 85, 86, 88, 90, 91, 92, 93, 94, 95, 99, 101, 102, 105, 106, 108, 111, 122, 129, 148, 150, 154, 155, 157, 159, 161, 165, 171, 176, 177, 178, 180, 181, 190, 194, 200, 203, 204, 219, 220, 230, 241, 253, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 281, 282, 294, 295, 315, 319, 321, 326, 350, 351, 357, 361, 446, 473, 474, 519, 520, 521, 522, 523, 526, 530, 535, 536, 549, 552, 600, 603, 607, 622, 627, 652, 656, 657, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 692, 694, 695, 696, 722, 771, 775, 778, 799, 827, 838, 849, 851, 862, 872], "3523": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 67, 88, 90, 91, 92, 93, 129, 171, 176, 177, 178, 179, 190, 194, 219, 220], "8196": [5, 181, 190], "free": [5, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 79, 88, 90, 91, 92, 93, 107, 129, 139, 150, 157, 158, 165, 171, 175, 176, 177, 179, 181, 190, 194, 206, 208, 219, 220, 224, 228, 241, 259, 261, 262, 265, 294, 295, 296, 370, 448, 449, 450, 468, 470, 471, 519, 520, 521, 522, 523, 526, 530, 534, 535, 536, 561, 612, 633, 637, 679, 680, 682, 683, 819, 831, 835, 837, 838, 847, 853, 854, 860, 872], "frame": [5, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 78, 88, 90, 91, 92, 93, 102, 105, 106, 108, 110, 122, 129, 133, 134, 135, 139, 150, 158, 162, 163, 164, 165, 169, 171, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 194, 208, 219, 220, 231, 233, 253, 259, 261, 262, 263, 264, 265, 266, 274, 299, 300, 309, 313, 322, 327, 364, 385, 424, 464, 467, 473, 474, 477, 484, 502, 504, 511, 516, 563, 571, 580, 622, 623, 625, 639, 641, 715, 727, 734, 736, 739, 755, 767, 807, 827, 848, 853, 854, 857, 872], "normal": [5, 11, 15, 16, 18, 22, 24, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 60, 67, 69, 88, 90, 92, 102, 105, 106, 107, 108, 111, 112, 113, 114, 135, 136, 141, 142, 154, 155, 156, 157, 159, 160, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 204, 205, 208, 218, 219, 220, 231, 233, 237, 238, 241, 252, 254, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 274, 275, 276, 277, 281, 282, 294, 295, 310, 318, 355, 361, 405, 407, 410, 412, 439, 448, 468, 470, 471, 473, 474, 492, 519, 520, 521, 522, 523, 525, 526, 528, 529, 530, 535, 536, 551, 552, 562, 577, 605, 609, 641, 645, 656, 657, 674, 692, 694, 696, 704, 708, 710, 718, 740, 756, 771, 778, 782, 790, 791, 794, 799, 801, 827, 831, 837, 853, 857, 872], "emploi": [5, 11, 22, 26, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 67, 88, 90, 92, 107, 157, 158, 175, 176, 177, 178, 181, 187, 188, 190, 194, 220, 238, 551, 673, 847, 848, 853, 854, 857], "rotat": [5, 10, 15, 19, 22, 34, 35, 40, 41, 42, 44, 46, 47, 48, 49, 54, 55, 58, 59, 67, 78, 88, 90, 92, 107, 133, 155, 157, 171, 176, 177, 178, 179, 181, 190, 193, 194, 200, 202, 220, 253, 263, 264, 266, 294, 295, 347, 362, 365, 426, 464, 556, 562, 580, 729, 730, 732, 739, 755, 774, 829, 837, 854, 872], "convert": [5, 22, 27, 34, 35, 40, 41, 42, 46, 47, 48, 49, 54, 55, 58, 59, 67, 74, 88, 90, 92, 107, 110, 120, 128, 133, 135, 136, 139, 140, 141, 142, 143, 148, 149, 150, 155, 157, 159, 160, 168, 170, 176, 177, 178, 181, 187, 188, 189, 190, 194, 199, 200, 204, 212, 214, 219, 220, 224, 228, 231, 232, 233, 237, 255, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 272, 275, 276, 277, 280, 287, 300, 309, 310, 335, 347, 361, 363, 407, 411, 416, 417, 420, 434, 441, 443, 444, 461, 466, 467, 469, 473, 474, 484, 493, 496, 507, 514, 582, 583, 692, 694, 695, 696, 708, 718, 730, 732, 738, 740, 743, 755, 807, 809, 831, 832, 835, 838, 848, 854, 872], "helmet": [5, 7, 27, 45, 78, 79, 107, 114, 120, 121, 128, 136, 149, 155, 157, 169, 171, 182, 183, 184, 187, 263, 264, 266, 456, 511, 518, 533, 610, 739, 748, 755, 774, 807, 854, 872], "unknown": [5, 46, 70, 72, 75, 81, 88, 91, 107, 125, 140, 145, 150, 166, 167, 168, 180, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 266, 322, 327, 468, 473, 474, 481, 488, 502, 504, 727, 792, 813, 822, 854, 857, 872], "deriv": [5, 32, 33, 34, 46, 70, 107, 121, 124, 139, 143, 148, 155, 167, 198, 223, 224, 236, 241, 266, 362, 552, 587, 612, 819, 854, 857, 872], "subset": [5, 45, 110, 139, 141, 143, 145, 150, 157, 159, 171, 174, 205, 206, 214, 223, 236, 256, 261, 262, 263, 264, 267, 271, 281, 282, 294, 295, 351, 355, 356, 365, 366, 367, 398, 405, 408, 412, 415, 429, 443, 448, 449, 462, 468, 470, 471, 473, 474, 530, 552, 665, 668, 692, 693, 694, 695, 696, 739, 769, 779, 792, 853, 854, 860, 872], "dip_opm": 5, "_": [5, 8, 9, 19, 37, 38, 45, 50, 60, 110, 133, 136, 145, 150, 159, 160, 171, 177, 179, 190, 193, 200, 203, 205, 212, 219, 223, 224, 227, 228, 237, 238, 300, 552, 563, 595, 708, 718, 831, 854, 872], "fit_dipol": [5, 45, 82, 175, 180, 182, 183, 184, 259, 260, 297, 602, 854, 862, 872], "040": [5, 79, 111, 119, 139, 148, 161, 168, 207, 220, 241, 263, 264, 351, 851], "080": [5, 38, 79, 184, 207, 224], "idx": [5, 31, 35, 40, 47, 59, 63, 82, 112, 131, 149, 180, 190, 197, 201, 205, 219, 231, 255, 259, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 308, 472, 473, 474, 528, 529, 695, 767, 872], "argmax": [5, 35, 38, 40, 48, 50, 58, 59, 117, 175, 180, 193], "gof": [5, 40, 114, 168, 175, 177, 182, 183, 184, 259, 261, 262, 263, 264, 297, 308, 339, 341, 342, 343, 473, 474, 549, 692, 694, 695, 696, 767, 872], "1f": [5, 30, 40, 47, 75, 98, 107, 112, 155, 175, 182, 183, 190, 194, 200, 219, 223, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 694, 696, 771, 778, 791], "1000": [5, 40, 48, 69, 79, 82, 94, 111, 112, 126, 133, 145, 155, 156, 158, 159, 175, 180, 181, 182, 183, 190, 200, 201, 205, 212, 218, 224, 228, 231, 232, 233, 434, 440, 442, 446, 473, 474, 552, 614, 679, 680, 682, 683, 708, 718, 739, 827, 872], "n20m": 5, "plot_loc": [5, 175, 180, 259, 872], "orthoview": [5, 35, 40, 59, 133, 159, 175, 259, 767, 872], "conductormodel": [5, 45, 107, 157, 182, 183, 184, 258, 261, 262, 263, 264, 270, 301, 309, 405, 412, 448, 473, 474, 509, 510, 516, 551, 552, 566, 599, 641, 692, 694, 696, 755, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 814, 827, 862], "solver": [5, 10, 11, 13, 15, 18, 27, 36, 40, 45, 46, 56, 59, 174, 194, 258, 259, 263, 265, 266, 272, 448, 449, 470, 510, 534, 601, 610, 612, 678, 798, 835, 840, 860, 872], "instanc": [5, 15, 26, 31, 43, 44, 45, 50, 73, 81, 86, 107, 112, 157, 158, 165, 168, 170, 171, 175, 177, 181, 182, 184, 187, 188, 190, 202, 203, 204, 206, 208, 212, 236, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 309, 310, 311, 313, 314, 316, 322, 325, 327, 328, 330, 331, 332, 333, 334, 335, 338, 340, 342, 343, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 367, 369, 373, 374, 375, 377, 378, 379, 381, 386, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 430, 434, 435, 436, 437, 438, 439, 440, 446, 448, 449, 450, 451, 452, 459, 462, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 507, 508, 510, 511, 512, 513, 514, 515, 516, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 541, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 587, 588, 592, 593, 594, 595, 597, 598, 599, 602, 603, 604, 605, 606, 609, 612, 614, 621, 624, 633, 634, 637, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 677, 678, 679, 680, 681, 682, 683, 684, 687, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 709, 712, 713, 728, 729, 731, 736, 739, 740, 741, 742, 748, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 805, 809, 812, 814, 818, 822, 824, 831, 849, 872], "36": [5, 13, 19, 21, 28, 34, 35, 42, 45, 47, 79, 81, 101, 106, 110, 112, 143, 150, 153, 168, 170, 180, 181, 186, 193, 194, 207, 223, 224, 225, 227, 228, 231, 232, 233, 238, 241, 261, 262, 263, 264, 398, 473, 474, 589, 691, 872], "rad": [5, 45, 175, 180, 182, 183, 184, 641, 827], "77": [5, 11, 13, 19, 35, 79, 80, 106, 107, 110, 112, 136, 155, 156, 167, 168, 180, 190, 193, 194, 205, 206, 207, 214, 223, 224, 227, 228, 231, 236, 332, 872], "guess": [5, 45, 121, 175, 180, 182, 183, 184, 203, 207, 253, 464, 484, 752, 872], "grid": [5, 24, 40, 41, 45, 50, 111, 113, 121, 125, 134, 154, 155, 157, 175, 177, 179, 180, 182, 183, 184, 193, 194, 206, 207, 223, 225, 253, 271, 273, 274, 324, 470, 552, 577, 641, 693, 765, 782, 785, 847, 848, 854, 872], "n_sampl": [5, 45, 53, 64, 95, 136, 182, 183, 184, 194, 218, 223, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 422, 447, 553, 578, 642, 671, 678, 681, 831], "10250": 5, "65975931e": 5, "41596252e": 5, "50067005e": 5, "18042429e": 5, "93613735e": 5, "88258373e": 5, "73325418e": 5, "23906800e": 5, "47917983e": 5, "14619592e": 5, "36697422e": 5, "53163548e": 5, "08794660e": 5, "00286749e": 5, "18143308e": 5, "22829671e": 5, "93976860e": 5, "28130683e": 5, "86574659e": 5, "28436459e": 5, "91104392e": 5, "54318851e": 5, "60478446e": 5, "18114621e": 5, "42024459e": 5, "20931076e": 5, "52605668e": 5, "29661483e": 5, "53868159e": 5, "40025250e": 5, "28102479e": 5, "49204692e": 5, "41942628e": 5, "29095862e": 5, "00102289e": 5, "19639173e": 5, "09222979e": 5, "25564394e": 5, "49616938e": 5, "35015052e": 5, "94284541e": 5, "29140004e": 5, "85113742e": 5, "46141046e": 5, "97190359e": 5, "ra": [5, 24, 26, 41, 43, 45, 50, 107, 133, 134, 155, 157, 158, 160, 175, 179, 180, 182, 183, 184, 206, 259, 268, 269, 272, 274, 275, 276, 277, 309, 322, 362, 439, 467, 504, 612, 727, 731, 739, 812, 819, 827, 848, 854, 872], "000000": [5, 24, 26, 41, 45, 50, 107, 142, 143, 155, 157, 158, 175, 179, 180, 181, 182, 183, 184, 206, 226, 228, 232, 233, 238], "999800": [5, 107], "015800": [5, 107], "009200": [5, 107], "018100": [5, 107], "930500": [5, 107], "365900": [5, 107], "002800": [5, 107], "366000": [5, 107], "930600": [5, 107], "40": [5, 9, 10, 12, 13, 19, 21, 28, 33, 35, 40, 45, 46, 47, 58, 59, 67, 72, 74, 78, 79, 82, 88, 98, 101, 102, 106, 107, 112, 119, 122, 133, 134, 135, 136, 138, 139, 140, 143, 144, 150, 154, 155, 157, 159, 165, 168, 170, 180, 182, 183, 190, 193, 194, 199, 200, 202, 203, 207, 208, 209, 212, 223, 224, 225, 227, 228, 231, 232, 233, 237, 241, 261, 262, 271, 426, 440, 473, 474, 482, 552, 564, 571, 572, 575, 644, 743, 769, 787, 792, 806, 848, 854, 872], "105": [5, 24, 26, 35, 41, 45, 50, 92, 107, 112, 136, 155, 157, 168, 175, 180, 182, 183, 184, 204, 206, 207, 223, 227, 228, 857], "decompos": [5, 8, 45, 175, 180, 182, 183, 184, 203, 405, 409, 412, 552, 553, 722, 854, 872], "eigenvalu": [5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 88, 91, 92, 102, 105, 106, 107, 108, 119, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 219, 220, 231, 233, 258, 405, 704, 854, 857], "without": [5, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 69, 74, 88, 91, 92, 102, 105, 107, 111, 118, 119, 125, 133, 143, 148, 149, 150, 151, 158, 160, 161, 164, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 198, 199, 200, 202, 203, 204, 205, 206, 208, 214, 219, 220, 223, 238, 253, 256, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 288, 289, 292, 294, 295, 322, 323, 351, 355, 356, 365, 366, 367, 368, 405, 412, 435, 436, 437, 438, 446, 448, 449, 468, 470, 471, 473, 474, 481, 488, 492, 493, 512, 521, 523, 526, 530, 545, 571, 587, 603, 605, 609, 610, 627, 686, 693, 729, 739, 779, 797, 802, 809, 829, 831, 835, 839, 847, 849, 851, 853, 854, 872], "whiten": [5, 7, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 88, 91, 92, 102, 103, 104, 105, 106, 107, 108, 111, 120, 128, 148, 152, 153, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 203, 219, 220, 231, 233, 241, 253, 258, 261, 262, 263, 264, 266, 271, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 446, 448, 449, 468, 470, 471, 473, 474, 527, 530, 549, 552, 553, 578, 607, 618, 705, 769, 773, 777, 779, 792, 796, 827, 851, 872], "omit": [5, 12, 21, 24, 26, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 77, 79, 85, 88, 91, 92, 102, 105, 106, 107, 108, 117, 119, 122, 149, 151, 155, 157, 161, 165, 167, 168, 170, 171, 175, 176, 177, 178, 180, 181, 182, 183, 184, 190, 194, 198, 206, 208, 219, 220, 231, 233, 255, 261, 262, 263, 264, 271, 411, 473, 474, 507, 552, 572, 573, 581, 598, 610, 649, 654, 696, 729, 755, 757, 773, 778, 784, 793, 831, 857, 872], "inner": [5, 26, 31, 41, 43, 45, 50, 107, 127, 154, 157, 159, 160, 175, 180, 181, 190, 241, 253, 261, 262, 265, 301, 304, 448, 464, 515, 580, 641, 657, 739, 827, 832, 835, 838, 847, 848, 851, 854, 857, 872], "skull": [5, 26, 41, 43, 45, 50, 107, 111, 133, 154, 155, 157, 159, 160, 169, 175, 180, 181, 190, 241, 253, 265, 274, 301, 304, 448, 515, 516, 577, 641, 649, 654, 657, 739, 755, 827, 832, 835, 838, 847, 848, 851, 854, 857, 872], "cm": [5, 9, 15, 24, 41, 45, 50, 88, 114, 121, 135, 141, 144, 155, 157, 165, 169, 175, 180, 182, 183, 184, 188, 199, 205, 206, 207, 208, 209, 225, 237, 253, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 332, 334, 336, 473, 474, 481, 508, 571, 770, 773, 775, 800, 827, 872], "35": [5, 11, 12, 13, 19, 21, 28, 34, 35, 45, 47, 79, 101, 106, 107, 110, 112, 135, 141, 142, 144, 145, 147, 148, 157, 159, 168, 170, 175, 183, 184, 186, 194, 204, 205, 207, 209, 211, 223, 224, 225, 227, 228, 231, 232, 233, 237, 241, 253, 470, 519, 564, 565, 572, 575, 743, 854], "insid": [5, 16, 24, 26, 41, 45, 50, 107, 139, 148, 155, 157, 158, 160, 175, 180, 181, 182, 183, 184, 201, 206, 208, 212, 227, 233, 267, 271, 272, 275, 276, 277, 289, 335, 389, 429, 457, 464, 473, 474, 501, 523, 739, 792, 812, 831, 847, 851, 854, 872], "sphere": [5, 24, 26, 35, 41, 43, 45, 48, 50, 59, 70, 82, 91, 92, 107, 118, 121, 123, 134, 155, 157, 158, 159, 175, 177, 180, 181, 182, 183, 184, 188, 198, 206, 207, 208, 241, 253, 258, 259, 261, 262, 263, 264, 267, 270, 272, 294, 295, 299, 302, 303, 309, 357, 404, 405, 412, 448, 473, 474, 485, 511, 514, 515, 516, 551, 552, 561, 566, 641, 655, 658, 692, 694, 696, 739, 755, 756, 763, 767, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 798, 799, 801, 809, 827, 872], "102": [5, 11, 13, 14, 15, 16, 18, 22, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 67, 68, 70, 71, 72, 75, 77, 78, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 129, 130, 131, 136, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 219, 220, 223, 225, 226, 227, 228, 231, 233, 253, 857], "extent": [5, 13, 16, 24, 41, 45, 47, 50, 55, 69, 88, 93, 105, 139, 155, 157, 175, 180, 182, 183, 184, 194, 205, 206, 225, 226, 227, 228, 231, 232, 233, 241, 261, 262, 428, 463, 505, 534, 652, 682, 683, 853, 854, 872], "73": [5, 13, 15, 19, 21, 33, 34, 35, 40, 45, 78, 79, 94, 105, 106, 112, 119, 126, 144, 148, 168, 175, 181, 193, 194, 207, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 711], "y": [5, 9, 10, 11, 12, 13, 16, 18, 19, 24, 41, 45, 47, 50, 69, 70, 78, 80, 88, 110, 112, 113, 118, 135, 144, 150, 155, 157, 159, 160, 169, 171, 174, 175, 179, 180, 182, 183, 184, 193, 194, 197, 200, 201, 204, 206, 212, 213, 214, 215, 223, 233, 238, 255, 258, 259, 261, 262, 263, 264, 266, 269, 270, 275, 277, 285, 299, 302, 303, 309, 310, 332, 341, 342, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 445, 473, 474, 485, 518, 519, 551, 552, 553, 561, 566, 612, 645, 678, 692, 694, 696, 727, 729, 730, 732, 739, 740, 743, 756, 763, 767, 770, 771, 772, 773, 775, 777, 778, 779, 780, 781, 782, 787, 789, 791, 793, 794, 795, 799, 800, 801, 807, 819, 827, 829, 854, 872], "42": [5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 28, 29, 35, 42, 45, 47, 49, 67, 68, 70, 71, 72, 75, 78, 79, 81, 86, 88, 89, 90, 91, 94, 95, 97, 98, 101, 102, 104, 105, 106, 107, 108, 109, 112, 115, 116, 119, 121, 125, 130, 131, 136, 140, 145, 150, 151, 155, 161, 165, 166, 167, 168, 171, 174, 175, 176, 179, 180, 181, 183, 186, 193, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 212, 215, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 241, 266, 519, 534, 652], "108": [5, 16, 35, 79, 80, 111, 112, 119, 133, 161, 168, 190, 198, 211, 223, 228, 241, 263, 264, 351, 779, 851], "80": [5, 9, 13, 16, 19, 30, 31, 33, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 77, 78, 79, 84, 85, 88, 92, 102, 106, 110, 112, 113, 114, 116, 117, 118, 123, 125, 136, 148, 150, 155, 157, 167, 168, 170, 171, 175, 177, 178, 180, 182, 183, 184, 190, 193, 194, 205, 207, 208, 209, 223, 224, 225, 227, 228, 232, 233, 241, 404, 552, 644, 780, 787, 837, 872], "1080": [5, 10, 193, 241, 411], "543": [5, 40, 228], "after": [5, 8, 11, 16, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 67, 79, 86, 88, 90, 92, 99, 101, 107, 125, 129, 133, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 154, 155, 157, 160, 165, 166, 167, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 214, 219, 220, 223, 225, 226, 231, 236, 238, 253, 254, 255, 261, 262, 263, 264, 266, 268, 269, 271, 272, 274, 275, 276, 277, 284, 294, 295, 338, 351, 355, 356, 358, 360, 365, 366, 367, 381, 405, 407, 411, 412, 416, 418, 419, 423, 429, 446, 447, 448, 449, 468, 470, 471, 473, 474, 530, 551, 552, 555, 563, 564, 565, 568, 569, 571, 572, 573, 575, 578, 581, 610, 612, 634, 653, 692, 717, 719, 720, 722, 723, 728, 739, 755, 763, 769, 773, 775, 777, 778, 779, 782, 783, 786, 790, 792, 803, 819, 827, 831, 839, 847, 848, 851, 853, 854, 857, 860, 872], "infeas": [5, 24, 41, 45, 50, 155, 157, 175, 180, 182, 183, 184, 206], "least": [5, 41, 45, 69, 82, 112, 140, 157, 158, 175, 180, 199, 200, 201, 203, 204, 208, 223, 228, 241, 261, 262, 263, 264, 271, 407, 416, 420, 422, 441, 443, 444, 462, 473, 474, 552, 554, 555, 570, 571, 580, 677, 739, 769, 792, 837, 847, 851, 853, 854, 872], "awai": [5, 41, 45, 133, 140, 143, 157, 158, 175, 180, 182, 187, 199, 204, 206, 362, 485, 552, 577, 645, 687, 720, 723, 739, 812, 834, 854, 857, 872], "few": [5, 21, 26, 41, 44, 45, 50, 69, 92, 99, 107, 134, 143, 144, 148, 154, 155, 156, 157, 158, 160, 161, 166, 170, 171, 175, 180, 181, 197, 198, 199, 200, 202, 203, 205, 206, 207, 212, 215, 224, 228, 233, 236, 238, 266, 426, 562, 563, 571, 580, 831, 839, 849, 851, 854, 856, 872], "interior": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 208], "statu": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 187, 261, 262, 263, 264, 266, 338, 360, 362, 473, 474, 481, 488, 494, 549, 692, 694, 695, 696, 739, 827, 831, 854, 857, 872], "70": [5, 9, 12, 13, 15, 19, 21, 34, 41, 45, 46, 47, 58, 59, 79, 86, 88, 101, 102, 106, 107, 110, 112, 114, 133, 135, 136, 139, 142, 143, 155, 157, 158, 165, 168, 169, 182, 183, 193, 194, 200, 203, 207, 209, 223, 224, 227, 228, 231, 236, 238, 241, 261, 262, 263, 264, 332, 471, 473, 474, 552, 694, 696, 708, 711, 718, 719, 722, 872], "outsid": [5, 16, 24, 26, 41, 45, 50, 107, 133, 134, 139, 143, 155, 157, 158, 160, 175, 180, 181, 182, 183, 184, 198, 200, 205, 206, 208, 212, 214, 255, 258, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 275, 276, 277, 289, 385, 405, 412, 447, 473, 474, 505, 523, 551, 552, 566, 568, 692, 694, 696, 728, 736, 739, 756, 757, 771, 778, 782, 791, 794, 797, 799, 801, 802, 853, 854, 855, 857, 872], "exterior": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 208], "284": [5, 168, 207, 228, 241, 405, 872], "473": [5, 26, 112, 228, 274], "qhull": [5, 26, 41, 45, 50, 107, 157, 158, 175, 180, 181, 872], "189": [5, 32, 33, 34, 46, 82, 83, 97, 111, 168, 207, 223, 228, 237, 241, 854], "solid": [5, 26, 41, 45, 50, 107, 149, 157, 158, 160, 175, 180, 181, 205, 763, 790, 854], "angl": [5, 26, 41, 45, 50, 107, 116, 129, 157, 158, 160, 168, 169, 171, 175, 180, 181, 182, 253, 266, 300, 304, 578, 633, 739, 744, 807, 854, 872], "244": [5, 168, 207, 223, 227], "complet": [5, 7, 9, 26, 32, 33, 34, 41, 45, 50, 107, 133, 143, 149, 154, 157, 158, 160, 168, 175, 179, 180, 181, 198, 200, 203, 206, 220, 223, 241, 253, 261, 262, 274, 300, 503, 552, 579, 593, 689, 735, 739, 747, 754, 831, 838, 847, 848, 849, 851, 854, 856, 857, 872], "141": [5, 157, 168, 182, 186, 223, 227, 274], "limit": [5, 31, 34, 40, 41, 42, 45, 50, 58, 59, 88, 92, 107, 111, 112, 125, 134, 136, 140, 141, 157, 164, 165, 167, 175, 176, 178, 180, 181, 188, 190, 194, 198, 200, 203, 208, 212, 220, 228, 238, 241, 255, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 275, 276, 277, 279, 405, 412, 431, 438, 449, 470, 473, 474, 492, 551, 552, 556, 571, 580, 605, 609, 614, 620, 670, 676, 678, 692, 694, 695, 696, 754, 756, 758, 763, 770, 771, 773, 775, 777, 778, 780, 782, 787, 791, 794, 797, 799, 801, 802, 803, 821, 829, 831, 853, 854, 855, 857, 860, 872], "214": [5, 168, 207, 223, 227, 228], "through": [5, 9, 19, 27, 37, 45, 76, 83, 111, 133, 139, 140, 141, 143, 144, 148, 154, 155, 159, 164, 165, 167, 171, 175, 179, 180, 182, 183, 184, 193, 198, 200, 203, 204, 205, 208, 212, 214, 215, 220, 231, 238, 241, 254, 259, 261, 262, 263, 264, 294, 321, 369, 446, 455, 464, 473, 504, 551, 552, 642, 704, 739, 761, 763, 767, 770, 772, 776, 784, 829, 831, 838, 849, 853, 854, 860, 872], "0642": [5, 168], "3779": 5, "18": [5, 9, 11, 13, 19, 20, 28, 31, 34, 35, 40, 45, 47, 50, 59, 64, 70, 79, 80, 81, 88, 91, 93, 94, 101, 106, 107, 108, 112, 125, 136, 139, 144, 159, 166, 167, 168, 170, 175, 176, 178, 179, 180, 182, 183, 186, 190, 192, 193, 194, 197, 198, 201, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 220, 223, 224, 225, 227, 228, 231, 232, 233, 241, 261, 262, 263, 264, 274, 276, 277, 281, 282, 290, 295, 304, 306, 351, 352, 353, 354, 355, 356, 365, 366, 367, 382, 390, 398, 411, 417, 434, 449, 452, 453, 464, 468, 470, 471, 473, 474, 493, 505, 507, 513, 538, 543, 545, 552, 564, 565, 572, 640, 643, 644, 646, 657, 659, 691, 692, 695, 756, 769, 778, 780, 792, 798, 801, 803, 829, 834, 854], "7678": 5, "6600": 5, "0647": 5, "99": [5, 13, 15, 19, 26, 35, 47, 49, 68, 69, 79, 80, 88, 91, 101, 102, 106, 107, 110, 112, 118, 119, 136, 150, 151, 156, 159, 161, 168, 171, 176, 178, 179, 180, 183, 190, 193, 194, 205, 207, 214, 219, 220, 223, 224, 226, 227, 228, 241, 261, 262, 271, 473, 474, 769, 792, 854, 872], "leakag": [5, 27, 36, 45, 56, 272, 274, 361, 529, 531, 533, 612, 615, 720, 723, 739, 744], "constrain": [5, 107, 165, 174, 177, 178, 179, 204, 241, 256, 261, 262, 290, 291, 292, 293, 294, 295, 357, 568, 827, 832, 838, 851, 854, 857, 872], "idea": [5, 7, 21, 27, 111, 154, 170, 174, 176, 200, 202, 203, 204, 205, 231, 233, 238, 241, 261, 262, 305, 428, 850, 851, 854, 855, 860], "inverse_oper": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 47, 48, 54, 59, 88, 102, 105, 106, 107, 108, 171, 176, 231, 233, 271, 519, 520, 521, 522, 523, 525, 526, 531, 535, 536], "minimum_norm": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 122, 165, 176, 177, 178, 180, 181, 190, 194, 204, 219, 220, 231, 233, 827, 840, 847, 854, 862, 872], "make_inverse_oper": [5, 7, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 176, 177, 178, 181, 190, 194, 220, 533, 847, 854, 862, 872], "loos": [5, 7, 31, 34, 35, 40, 41, 42, 46, 48, 54, 55, 59, 60, 88, 92, 107, 143, 176, 178, 181, 190, 194, 220, 449, 450, 468, 470, 471, 519, 520, 521, 522, 523, 525, 526, 530, 534, 535, 536, 847, 854, 857, 872], "depth": [5, 7, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 122, 165, 171, 176, 177, 178, 180, 181, 190, 194, 215, 219, 220, 231, 233, 241, 259, 294, 295, 449, 468, 470, 471, 530, 649, 654, 660, 857, 860, 872], "snr": [5, 7, 10, 11, 19, 21, 27, 28, 29, 30, 36, 38, 39, 41, 48, 54, 55, 56, 60, 86, 88, 102, 107, 165, 176, 178, 180, 183, 190, 200, 219, 220, 231, 233, 258, 263, 265, 266, 272, 340, 449, 518, 519, 527, 530, 532, 533, 601, 610, 612, 656, 739, 762, 796, 847, 854, 860, 872], "lambda2": [5, 7, 11, 28, 29, 30, 38, 39, 40, 41, 45, 47, 48, 50, 54, 55, 58, 59, 60, 70, 88, 92, 102, 106, 107, 155, 165, 176, 178, 180, 182, 183, 184, 190, 206, 219, 231, 233, 519, 520, 521, 522, 523, 525, 526, 531, 532, 535, 536, 561, 847], "stc": [5, 7, 11, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 56, 58, 59, 60, 67, 90, 91, 92, 93, 102, 106, 107, 108, 114, 125, 132, 134, 135, 157, 164, 165, 171, 175, 176, 177, 178, 179, 181, 185, 186, 194, 220, 232, 259, 263, 268, 269, 271, 272, 273, 274, 275, 276, 277, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 357, 439, 448, 452, 458, 468, 469, 470, 471, 507, 514, 518, 519, 520, 521, 522, 523, 526, 528, 529, 533, 535, 610, 620, 633, 642, 656, 657, 658, 659, 684, 687, 688, 739, 797, 798, 802, 803, 827, 847, 867, 872], "apply_invers": [5, 7, 28, 30, 38, 39, 40, 41, 44, 45, 58, 59, 60, 88, 92, 165, 176, 177, 178, 180, 181, 190, 194, 204, 219, 220, 231, 233, 520, 521, 522, 523, 525, 526, 532, 535, 536, 827, 847, 854, 862, 872], "pick_ori": [5, 7, 11, 28, 29, 32, 33, 34, 38, 39, 41, 49, 60, 88, 106, 176, 177, 179, 180, 220, 294, 295, 468, 470, 471, 519, 520, 521, 522, 523, 525, 526, 535, 536, 872], "hemi": [5, 7, 11, 26, 32, 33, 34, 38, 41, 43, 47, 48, 49, 50, 58, 60, 92, 102, 107, 114, 125, 129, 132, 135, 154, 159, 165, 174, 176, 177, 178, 179, 180, 190, 194, 219, 220, 231, 232, 233, 267, 268, 269, 272, 275, 276, 277, 279, 463, 597, 615, 738, 739, 797, 802, 822, 872], "rh": [5, 24, 26, 34, 37, 38, 41, 43, 47, 59, 67, 88, 90, 92, 93, 105, 107, 114, 129, 135, 154, 157, 158, 159, 174, 176, 219, 220, 257, 267, 268, 269, 272, 275, 276, 277, 461, 505, 597, 615, 620, 739, 797, 802, 822, 854], "view": [5, 7, 11, 26, 28, 29, 31, 32, 33, 35, 40, 43, 47, 50, 53, 58, 59, 68, 92, 93, 98, 102, 105, 106, 107, 111, 113, 116, 125, 134, 135, 139, 141, 149, 150, 151, 157, 158, 159, 165, 168, 169, 171, 174, 176, 179, 180, 188, 189, 190, 194, 203, 205, 214, 215, 219, 220, 228, 231, 232, 233, 241, 258, 259, 261, 262, 263, 264, 266, 268, 269, 270, 272, 275, 276, 277, 285, 299, 306, 473, 474, 518, 627, 727, 739, 767, 769, 792, 797, 800, 802, 807, 809, 827, 847, 851, 853, 854, 860, 872], "lat": [5, 11, 26, 58, 92, 102, 125, 135, 150, 159, 165, 194, 219, 233, 739], "initial_tim": [5, 7, 11, 32, 41, 43, 58, 59, 60, 92, 102, 125, 132, 165, 174, 176, 177, 178, 179, 180, 181, 190, 194, 219, 268, 269, 272, 275, 276, 277, 739, 797, 802, 803], "clim": [5, 7, 10, 22, 26, 42, 43, 47, 49, 54, 55, 58, 59, 102, 107, 125, 129, 134, 135, 145, 174, 176, 178, 179, 180, 209, 219, 231, 232, 233, 263, 264, 268, 269, 272, 275, 276, 277, 739, 758, 775, 797, 802, 803, 872], "percent": [5, 26, 42, 105, 107, 110, 178, 225, 228, 268, 269, 272, 275, 276, 277, 284, 535, 536, 552, 648, 649, 650, 651, 652, 654, 692, 695, 758, 784, 797, 799, 802, 803, 872], "lim": [5, 7, 22, 26, 42, 43, 49, 54, 55, 58, 59, 102, 107, 125, 129, 134, 135, 174, 176, 178, 179, 180, 232, 233, 268, 269, 272, 275, 276, 277, 758, 797, 802, 803], "400": [5, 7, 13, 40, 44, 74, 79, 90, 109, 125, 129, 140, 141, 143, 145, 150, 155, 159, 170, 171, 175, 177, 180, 204, 205, 207, 209, 225, 228, 464], "background": [5, 21, 43, 114, 124, 125, 133, 141, 150, 159, 164, 165, 171, 203, 205, 209, 210, 211, 212, 214, 215, 241, 259, 261, 262, 263, 264, 266, 268, 269, 270, 272, 275, 276, 277, 352, 353, 354, 405, 440, 441, 443, 473, 474, 493, 519, 557, 564, 565, 618, 637, 692, 694, 696, 708, 739, 742, 748, 755, 767, 773, 777, 780, 787, 792, 797, 798, 800, 802, 803, 811, 812, 823, 847, 853, 872], "w": [5, 21, 32, 33, 39, 45, 60, 61, 72, 81, 101, 125, 130, 136, 141, 151, 155, 159, 160, 177, 181, 193, 194, 200, 209, 220, 223, 236, 241, 258, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 294, 295, 306, 318, 365, 405, 412, 473, 474, 519, 527, 530, 551, 552, 578, 620, 649, 654, 674, 692, 694, 695, 696, 708, 717, 718, 721, 724, 756, 771, 777, 778, 792, 794, 799, 800, 801, 854, 872], "invers": [5, 7, 11, 19, 21, 32, 33, 34, 38, 43, 44, 45, 46, 48, 50, 51, 54, 55, 56, 58, 59, 60, 86, 88, 103, 104, 105, 106, 107, 108, 122, 148, 154, 155, 158, 159, 161, 169, 171, 174, 175, 177, 178, 179, 180, 181, 187, 190, 194, 198, 204, 206, 219, 220, 231, 233, 241, 253, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 294, 295, 350, 357, 363, 364, 367, 411, 419, 423, 439, 468, 469, 470, 473, 474, 506, 515, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 549, 552, 553, 601, 607, 610, 612, 614, 615, 622, 640, 641, 707, 739, 755, 766, 767, 796, 798, 807, 827, 832, 838, 857, 860, 862, 872], "adjust": [5, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 88, 92, 107, 114, 118, 125, 148, 155, 157, 160, 169, 171, 176, 177, 178, 179, 181, 187, 190, 194, 206, 208, 214, 215, 220, 225, 253, 258, 261, 262, 263, 264, 270, 283, 339, 341, 405, 412, 465, 473, 474, 475, 484, 551, 552, 562, 573, 581, 670, 676, 681, 685, 686, 692, 694, 696, 711, 752, 762, 769, 770, 771, 775, 777, 778, 782, 791, 792, 794, 799, 800, 829, 835, 847, 851, 854, 860, 872], "svd": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 176, 177, 178, 181, 190, 194, 204, 220, 258, 269, 275, 277, 338, 527, 528, 529, 764, 847, 854, 872], "lead": [5, 22, 26, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 68, 69, 86, 88, 92, 107, 143, 150, 161, 166, 176, 177, 178, 181, 190, 193, 194, 198, 200, 208, 220, 255, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 351, 439, 468, 470, 471, 473, 474, 519, 520, 521, 522, 523, 581, 612, 637, 679, 680, 682, 683, 692, 827, 829, 849, 854, 872], "largest": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 134, 150, 176, 177, 178, 181, 187, 190, 194, 220, 223, 405, 449, 496, 528, 529, 552], "38802": 5, "factor": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 134, 156, 176, 177, 178, 180, 181, 190, 194, 200, 201, 208, 219, 220, 225, 226, 227, 231, 233, 237, 253, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 296, 351, 355, 362, 367, 413, 414, 417, 418, 426, 445, 473, 474, 483, 522, 532, 535, 536, 562, 563, 568, 569, 571, 578, 580, 582, 629, 631, 632, 644, 645, 673, 675, 692, 695, 698, 701, 704, 717, 719, 720, 721, 722, 723, 724, 729, 739, 752, 769, 777, 790, 792, 798, 800, 802, 827, 854, 857, 872], "trace": [5, 31, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 73, 78, 88, 91, 92, 107, 143, 148, 150, 165, 171, 176, 177, 178, 181, 190, 194, 198, 205, 207, 208, 212, 215, 220, 253, 259, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 405, 473, 474, 552, 736, 739, 766, 769, 773, 781, 783, 790, 792, 797, 802, 854, 872], "35945e": 5, "nchan": [5, 34, 40, 41, 42, 45, 48, 50, 52, 54, 55, 57, 58, 59, 88, 92, 107, 165, 166, 168, 176, 177, 178, 181, 190, 194, 212, 218, 220, 265, 266, 857, 872], "nzero": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 88, 92, 107, 176, 177, 178, 181, 190, 194, 220], "invert": [5, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 134, 155, 157, 160, 165, 176, 177, 178, 179, 180, 181, 190, 194, 200, 219, 220, 231, 233, 238, 280, 290, 293, 411, 414, 419, 468, 470, 471, 678, 715, 848, 857], "vector": [5, 15, 18, 19, 27, 34, 36, 41, 56, 107, 109, 129, 161, 174, 176, 177, 187, 193, 202, 203, 204, 205, 207, 208, 220, 241, 253, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 287, 294, 295, 338, 340, 344, 352, 353, 354, 357, 406, 409, 411, 416, 421, 423, 439, 443, 444, 445, 468, 470, 471, 473, 474, 506, 512, 518, 519, 521, 522, 523, 528, 529, 533, 551, 552, 563, 564, 565, 567, 571, 577, 580, 589, 595, 603, 610, 618, 620, 627, 633, 692, 693, 694, 695, 696, 739, 771, 773, 775, 777, 778, 781, 790, 793, 797, 800, 802, 803, 823, 827, 851, 854, 857, 862, 872], "eigenlead": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 88, 92, 102, 105, 106, 107, 108, 165, 176, 177, 178, 180, 181, 190, 194, 219, 220, 231, 233, 854], "residu": [5, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 58, 59, 60, 69, 74, 88, 92, 165, 176, 177, 178, 180, 181, 182, 183, 190, 194, 203, 207, 219, 220, 231, 233, 297, 448, 468, 470, 471, 519, 762, 872], "explain": [5, 18, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 88, 92, 136, 158, 159, 165, 176, 177, 178, 180, 181, 182, 190, 194, 203, 219, 220, 231, 233, 270, 297, 405, 412, 468, 470, 471, 528, 529, 552, 783, 831, 835, 854, 872], "97": [5, 11, 13, 15, 19, 34, 41, 44, 47, 70, 79, 81, 101, 106, 107, 112, 115, 133, 136, 155, 159, 165, 168, 190, 194, 203, 206, 207, 208, 223, 224, 227, 228, 231, 241, 426, 516, 561, 563, 580, 673, 847, 854, 872], "varianc": [5, 8, 14, 16, 28, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 69, 88, 92, 112, 165, 176, 177, 178, 179, 180, 181, 182, 190, 194, 198, 203, 219, 220, 231, 233, 241, 270, 272, 290, 291, 292, 293, 294, 295, 414, 450, 468, 470, 471, 528, 529, 530, 552, 560, 674, 685, 686, 720, 723, 762, 783, 784, 827, 854, 872], "control": [5, 11, 19, 22, 26, 32, 33, 34, 38, 41, 42, 47, 48, 50, 60, 92, 107, 112, 118, 125, 132, 139, 148, 149, 155, 165, 167, 170, 171, 177, 178, 180, 181, 187, 190, 194, 199, 200, 201, 203, 204, 205, 208, 209, 214, 219, 220, 223, 231, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 418, 421, 422, 424, 426, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 455, 456, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 548, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 640, 641, 643, 644, 645, 646, 656, 657, 660, 662, 663, 664, 665, 666, 667, 668, 679, 680, 681, 682, 683, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 708, 710, 711, 714, 715, 718, 719, 720, 722, 723, 724, 725, 728, 729, 734, 738, 739, 747, 753, 755, 758, 764, 765, 767, 770, 771, 772, 773, 774, 779, 782, 783, 784, 785, 789, 790, 792, 793, 795, 796, 797, 798, 802, 803, 804, 805, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 837, 848, 851, 853, 854, 872], "24807258e": 5, "11": [5, 9, 10, 11, 13, 16, 19, 28, 33, 34, 35, 45, 47, 49, 56, 64, 69, 72, 73, 77, 78, 79, 81, 83, 88, 89, 94, 98, 99, 101, 106, 107, 108, 110, 112, 118, 119, 121, 125, 135, 136, 138, 144, 156, 161, 165, 167, 168, 169, 170, 175, 178, 179, 180, 181, 182, 190, 194, 197, 200, 202, 207, 208, 209, 211, 212, 218, 219, 223, 224, 225, 227, 228, 230, 231, 232, 233, 238, 241, 252, 261, 262, 271, 274, 332, 376, 426, 462, 473, 474, 484, 486, 489, 490, 511, 530, 552, 578, 580, 584, 604, 649, 652, 654, 678, 692, 769, 792, 830, 837, 847, 854], "55793898e": 5, "13115753e": 5, "868": [5, 6, 203, 241, 566], "opm_data": [5, 6], "076": 6, "execut": [6, 20, 25, 32, 56, 66, 83, 89, 100, 104, 128, 131, 133, 135, 138, 147, 153, 154, 163, 170, 171, 173, 186, 192, 196, 197, 211, 217, 222, 230, 235, 240, 259, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 371, 376, 408, 415, 418, 421, 422, 448, 461, 463, 464, 465, 473, 474, 511, 514, 515, 525, 526, 535, 536, 552, 557, 564, 565, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 691, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 767, 769, 771, 774, 786, 792, 793, 795, 829, 830, 831, 834, 835, 854, 872], "auto_examples_dataset": 6, "09": [6, 8, 9, 20, 42, 43, 44, 45, 49, 56, 72, 74, 79, 80, 89, 101, 114, 118, 119, 121, 128, 157, 158, 159, 161, 174, 176, 179, 184, 207, 224, 225, 227, 228, 241, 267, 272, 516, 587, 673, 721, 724], "spm_faces_dataset_sgskip": [6, 7], "pipelin": [7, 8, 9, 10, 11, 12, 13, 15, 18, 107, 133, 136, 160, 164, 165, 171, 172, 193, 194, 198, 199, 203, 405, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 458, 553, 729, 838, 848, 849, 851, 872], "reconstruct": [7, 16, 53, 133, 157, 158, 161, 162, 163, 164, 181, 185, 186, 190, 193, 197, 198, 203, 208, 233, 241, 258, 259, 261, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 290, 291, 292, 293, 295, 300, 304, 305, 306, 309, 351, 357, 362, 363, 364, 385, 388, 413, 446, 457, 461, 463, 464, 465, 466, 467, 470, 505, 509, 511, 538, 552, 553, 562, 563, 571, 577, 580, 588, 597, 612, 615, 622, 624, 640, 641, 655, 658, 669, 687, 688, 731, 739, 750, 755, 757, 767, 773, 778, 797, 802, 803, 812, 822, 848, 851, 854, 860, 872], "scrambl": [7, 194, 848], "doe": [7, 28, 31, 55, 58, 59, 69, 70, 74, 78, 82, 110, 115, 125, 139, 140, 148, 150, 157, 159, 160, 161, 167, 177, 180, 181, 187, 188, 189, 198, 200, 201, 202, 203, 204, 206, 208, 209, 218, 220, 225, 227, 228, 231, 238, 241, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 272, 273, 275, 276, 277, 285, 294, 295, 299, 316, 329, 355, 358, 365, 366, 382, 435, 436, 437, 438, 439, 463, 473, 474, 492, 495, 518, 538, 541, 554, 566, 568, 574, 605, 609, 634, 639, 642, 692, 694, 695, 696, 727, 729, 734, 742, 777, 800, 831, 836, 847, 851, 853, 854, 857, 872], "quit": [7, 21, 125, 143, 149, 150, 161, 200, 201, 203, 208, 209, 212, 223, 224, 232, 552, 831, 849, 851], "so": [7, 10, 28, 31, 32, 38, 40, 44, 47, 63, 69, 70, 74, 81, 91, 92, 93, 101, 102, 107, 112, 113, 125, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 179, 180, 181, 182, 183, 189, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 237, 238, 253, 261, 262, 263, 264, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277, 286, 287, 288, 295, 309, 331, 357, 364, 381, 385, 405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 436, 437, 439, 440, 444, 473, 474, 495, 519, 525, 538, 552, 553, 554, 562, 563, 572, 580, 581, 598, 610, 632, 639, 640, 679, 680, 682, 683, 704, 729, 734, 739, 740, 748, 749, 773, 782, 784, 786, 792, 818, 827, 829, 831, 834, 836, 837, 838, 839, 847, 849, 851, 853, 854, 857, 872], "even": [7, 69, 73, 110, 126, 141, 143, 154, 159, 165, 166, 167, 170, 171, 182, 189, 190, 197, 198, 200, 202, 203, 204, 205, 206, 212, 214, 223, 238, 253, 261, 262, 263, 264, 305, 321, 373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 473, 474, 500, 552, 704, 800, 831, 839, 848, 854, 872], "fast": [7, 21, 44, 126, 150, 154, 190, 236, 238, 241, 261, 262, 263, 264, 360, 413, 422, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 511, 512, 552, 589, 694, 696, 711, 829, 851, 854, 872], "machin": [7, 18, 92, 93, 180, 194, 198, 199, 241, 247, 266, 279, 351, 563, 571, 580, 849, 872], "sever": [7, 69, 74, 79, 80, 112, 125, 144, 149, 150, 152, 154, 157, 158, 164, 165, 167, 168, 170, 171, 179, 180, 187, 188, 189, 190, 197, 199, 204, 205, 212, 214, 215, 223, 231, 233, 256, 261, 262, 398, 440, 473, 474, 588, 695, 720, 723, 831, 834, 835, 836, 838, 843, 847, 848, 851, 852, 854, 857, 872], "alexandr": [7, 9, 10, 11, 12, 13, 15, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 86, 90, 94, 95, 98, 105, 106, 108, 109, 111, 115, 119, 123, 129, 130, 133, 136, 158, 161, 179, 184, 194, 203, 225, 226, 227, 231, 232, 233, 237, 241, 263, 264, 351, 405, 470, 471, 520, 552, 846, 851, 853, 859, 872], "gramfort": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 90, 94, 95, 98, 105, 106, 108, 109, 111, 115, 119, 123, 129, 130, 133, 136, 158, 161, 179, 184, 194, 203, 225, 226, 227, 231, 232, 233, 237, 241, 263, 264, 351, 470, 471, 520, 552, 779, 846, 851, 853, 859, 872], "inria": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 90, 94, 95, 98, 105, 106, 108, 109, 115, 119, 123, 129, 130, 136, 158, 184, 225, 226, 227, 231, 232, 233, 237], "deni": [7, 11, 13, 16, 21, 26, 33, 42, 68, 77, 99, 107, 111, 112, 118, 119, 124, 130, 131, 150, 161, 194, 227, 228, 233, 241, 263, 264, 351, 520, 846, 851, 859, 872], "engemann": [7, 11, 13, 16, 21, 26, 33, 42, 68, 77, 99, 107, 111, 112, 118, 119, 124, 130, 131, 161, 194, 227, 228, 233, 241, 263, 264, 351, 520, 779, 846, 851, 859, 872], "spm_face": [7, 121, 212, 848, 862], "ica": [7, 17, 20, 27, 73, 76, 82, 83, 86, 161, 164, 165, 197, 198, 199, 202, 205, 210, 211, 214, 241, 261, 262, 263, 264, 266, 271, 309, 324, 325, 369, 409, 419, 446, 473, 474, 488, 546, 549, 566, 568, 569, 575, 576, 578, 592, 593, 607, 769, 782, 783, 784, 785, 786, 792, 811, 838, 851, 858, 861, 862, 872], "create_eog_epoch": [7, 171, 197, 199, 202, 203, 205, 565, 573, 849, 862, 872], "spm_path": 7, "spm_ctf_meg_example_fac": 7, "d_3d": 7, "downsampl": [7, 19, 107, 133, 135, 144, 165, 193, 199, 201, 226, 253, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 404, 445, 446, 473, 474, 509, 571, 678, 692, 695, 798, 851, 872], "heavili": [7, 107, 156, 194, 286, 288, 729, 857], "advis": [7, 69, 188, 200, 253, 847, 854, 872], "real": [7, 32, 50, 90, 91, 150, 154, 155, 157, 159, 160, 200, 203, 204, 205, 206, 214, 218, 220, 225, 241, 294, 448, 473, 474, 514, 589, 695, 708, 718, 719, 720, 739, 838, 843, 860, 872], "jitter": [7, 167, 201, 473, 474, 851], "resampl": [7, 19, 21, 44, 74, 79, 80, 107, 133, 135, 139, 145, 148, 150, 164, 190, 193, 197, 200, 203, 205, 210, 211, 220, 231, 232, 233, 237, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 426, 440, 441, 443, 444, 446, 473, 474, 481, 488, 494, 549, 594, 692, 695, 739, 769, 780, 797, 802, 811, 829, 849, 854, 861, 862, 869, 872], "npad": [7, 19, 74, 79, 80, 190, 193, 231, 232, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 445, 473, 474, 851], "auto": [7, 10, 15, 16, 19, 22, 31, 69, 73, 74, 75, 79, 80, 81, 88, 105, 111, 118, 119, 123, 146, 147, 155, 161, 164, 190, 193, 200, 203, 206, 208, 225, 226, 227, 228, 231, 232, 253, 258, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 302, 303, 309, 325, 338, 340, 344, 350, 351, 355, 356, 357, 362, 405, 407, 411, 412, 416, 417, 424, 426, 429, 434, 435, 436, 438, 439, 441, 443, 444, 445, 450, 468, 470, 471, 473, 474, 479, 481, 483, 485, 488, 489, 494, 498, 511, 516, 530, 549, 551, 552, 553, 561, 562, 563, 564, 566, 571, 572, 575, 580, 584, 598, 604, 623, 637, 692, 694, 695, 696, 739, 755, 756, 758, 763, 769, 771, 773, 775, 776, 778, 779, 782, 784, 786, 789, 791, 792, 793, 794, 795, 797, 799, 801, 802, 803, 825, 847, 848, 851, 872], "sfreq": [7, 8, 9, 14, 19, 21, 31, 63, 65, 67, 68, 69, 88, 90, 91, 92, 93, 107, 109, 112, 123, 125, 126, 135, 136, 143, 165, 167, 168, 171, 189, 190, 193, 199, 200, 201, 209, 212, 213, 214, 218, 220, 238, 255, 256, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 280, 369, 407, 410, 411, 416, 417, 418, 429, 431, 433, 440, 441, 443, 473, 474, 584, 598, 684, 697, 698, 699, 708, 710, 711, 716, 718, 719, 720, 721, 772, 780, 857, 872], "5e": [7, 8, 9, 13, 21, 31, 32, 34, 35, 40, 41, 45, 49, 59, 75, 107, 122, 140, 171, 182, 184, 194, 206, 212, 220, 261, 262, 271, 448, 473, 474, 769, 792], "major": [7, 317, 473, 831, 851, 853, 857, 860, 872], "n_compon": [7, 8, 9, 12, 15, 73, 75, 81, 86, 115, 165, 171, 194, 203, 405, 412, 413, 419, 552, 553, 566, 872], "max_it": [7, 73, 75, 81, 165, 203, 519, 552, 578, 657, 699, 710, 872], "random_st": [7, 8, 9, 10, 15, 40, 75, 81, 88, 90, 91, 92, 111, 115, 136, 165, 203, 219, 220, 470, 505, 552, 578, 597, 644, 645, 646, 655, 656, 658, 671, 872], "correl": [7, 12, 18, 22, 26, 44, 73, 101, 145, 161, 194, 202, 203, 208, 223, 224, 227, 241, 253, 266, 273, 339, 351, 357, 411, 412, 417, 552, 566, 580, 676, 681, 848, 851, 854, 872], "indic": [7, 13, 16, 22, 31, 47, 48, 68, 69, 79, 98, 139, 140, 141, 143, 144, 145, 148, 150, 154, 155, 159, 167, 168, 169, 174, 177, 187, 190, 193, 197, 198, 199, 201, 203, 204, 207, 208, 212, 214, 215, 218, 220, 225, 228, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 307, 309, 310, 311, 324, 326, 332, 351, 356, 365, 398, 405, 407, 411, 412, 413, 421, 426, 429, 434, 443, 444, 447, 473, 474, 481, 483, 485, 488, 489, 490, 494, 498, 528, 529, 543, 546, 548, 549, 551, 552, 553, 554, 555, 560, 562, 566, 567, 568, 569, 574, 577, 578, 579, 585, 586, 588, 589, 595, 604, 610, 611, 614, 623, 626, 632, 637, 660, 661, 665, 668, 672, 678, 679, 680, 682, 683, 684, 687, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 722, 723, 739, 752, 755, 756, 757, 759, 763, 769, 770, 771, 773, 775, 776, 778, 782, 783, 784, 786, 788, 790, 791, 793, 794, 799, 801, 820, 825, 827, 836, 853, 854, 857, 872], "eog_epoch": [7, 171, 197, 202, 569], "mrt31": 7, "2908": [7, 193], "eog_ind": [7, 203, 552], "eog_scor": [7, 171, 203, 271], "find_bads_eog": [7, 171, 203, 271, 552, 872], "plot_scor": [7, 73, 81, 203, 552, 872], "plot_compon": [7, 75, 203, 552, 858, 872], "topograph": [7, 8, 16, 18, 19, 27, 120, 128, 131, 150, 194, 241, 263, 264, 266, 270, 271, 405, 412, 486, 548, 549, 552, 610, 692, 756, 763, 773, 778, 784, 791, 799, 801, 872], "compon": [7, 8, 12, 14, 15, 21, 27, 29, 30, 31, 34, 41, 42, 44, 45, 47, 59, 69, 73, 75, 76, 77, 78, 83, 85, 86, 92, 117, 122, 136, 149, 150, 161, 165, 171, 176, 177, 178, 180, 181, 183, 190, 194, 197, 198, 199, 200, 201, 202, 204, 205, 208, 209, 214, 220, 231, 233, 241, 263, 264, 265, 267, 271, 294, 295, 309, 325, 351, 355, 356, 365, 366, 367, 376, 398, 399, 405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 426, 444, 445, 448, 449, 450, 468, 470, 471, 473, 474, 488, 522, 525, 526, 528, 529, 530, 531, 536, 552, 553, 560, 562, 563, 566, 571, 578, 580, 695, 779, 782, 783, 784, 785, 786, 792, 838, 847, 848, 851, 854, 857, 858, 872], "saw": [7, 139, 141, 166, 167, 170, 197, 198, 199, 205, 212, 227], "2nd": [7, 150, 193, 197, 225, 228, 238, 241, 566, 634, 872], "ecg": [7, 70, 72, 75, 79, 80, 81, 88, 90, 91, 92, 107, 109, 125, 129, 139, 140, 141, 145, 148, 150, 166, 167, 168, 171, 188, 190, 198, 199, 201, 202, 204, 206, 208, 209, 212, 213, 214, 215, 218, 220, 261, 262, 263, 264, 271, 308, 356, 369, 438, 473, 474, 484, 485, 488, 498, 549, 552, 564, 568, 569, 572, 575, 644, 645, 678, 692, 694, 695, 696, 769, 785, 790, 792, 827, 854, 857, 872], "too": [7, 27, 68, 76, 83, 125, 139, 141, 143, 149, 150, 156, 157, 160, 164, 171, 177, 180, 197, 198, 199, 200, 201, 202, 205, 207, 209, 214, 223, 225, 227, 238, 261, 262, 263, 264, 266, 309, 325, 339, 369, 426, 473, 474, 479, 489, 555, 560, 562, 563, 571, 579, 580, 598, 604, 739, 759, 801, 831, 851, 872], "dipolar": [7, 448, 552, 783], "plot_overlai": [7, 81, 133, 203, 552, 872], "inspect": [7, 21, 28, 69, 81, 125, 140, 150, 155, 161, 190, 197, 208, 209, 253, 261, 262, 263, 264, 304, 306, 315, 329, 473, 474, 580, 588, 644, 645, 769, 773, 792, 843, 851], "clean": [7, 72, 73, 74, 82, 140, 143, 158, 165, 166, 171, 188, 198, 200, 202, 203, 204, 205, 209, 228, 238, 256, 261, 271, 473, 474, 486, 512, 552, 588, 603, 678, 783, 831, 851, 872], "default": [7, 21, 31, 43, 44, 73, 86, 101, 110, 112, 118, 125, 133, 134, 136, 139, 141, 144, 145, 148, 149, 150, 155, 157, 161, 165, 166, 167, 168, 169, 170, 171, 177, 178, 187, 188, 190, 198, 199, 201, 203, 204, 205, 206, 208, 212, 213, 214, 215, 218, 223, 227, 228, 233, 236, 237, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 314, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 456, 457, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 597, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 673, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 711, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 734, 736, 738, 739, 742, 747, 748, 752, 753, 755, 756, 757, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 831, 835, 836, 847, 848, 851, 857, 872], "k": [7, 8, 9, 10, 11, 13, 14, 18, 19, 22, 28, 31, 38, 39, 41, 59, 65, 68, 69, 81, 95, 98, 102, 141, 142, 157, 159, 175, 180, 187, 193, 194, 200, 204, 213, 215, 227, 228, 236, 237, 238, 241, 258, 259, 261, 262, 263, 264, 267, 270, 272, 280, 285, 294, 297, 299, 405, 412, 468, 470, 471, 473, 474, 518, 519, 551, 552, 571, 612, 652, 673, 679, 680, 681, 683, 692, 694, 696, 708, 718, 727, 752, 756, 771, 777, 778, 781, 792, 794, 799, 800, 801, 827, 829, 831, 854, 857, 872], "append": [7, 8, 10, 16, 43, 44, 45, 47, 61, 67, 74, 78, 111, 136, 149, 171, 182, 193, 198, 203, 205, 209, 212, 223, 227, 228, 233, 255, 261, 262, 263, 264, 267, 473, 474, 552, 566, 571, 580, 638, 669, 692, 693, 694, 695, 696, 712, 831, 872], "covarari": 7, "noise_cov": [7, 11, 31, 34, 40, 41, 42, 45, 48, 49, 50, 51, 54, 55, 58, 59, 92, 107, 119, 151, 161, 171, 176, 177, 179, 181, 190, 203, 258, 261, 262, 263, 264, 271, 295, 297, 365, 366, 449, 468, 470, 471, 473, 474, 530, 552, 769, 773, 777, 779, 792, 857, 872], "shrunk": [7, 31, 34, 40, 41, 42, 45, 59, 119, 151, 161, 176, 182, 351], "visual": [7, 8, 13, 14, 15, 16, 32, 33, 35, 36, 41, 42, 45, 56, 57, 59, 60, 61, 68, 70, 72, 78, 85, 92, 99, 102, 103, 104, 111, 113, 114, 117, 118, 126, 128, 130, 132, 133, 134, 136, 140, 142, 144, 146, 147, 150, 151, 152, 153, 154, 159, 161, 164, 165, 167, 171, 174, 177, 178, 182, 185, 186, 190, 194, 197, 199, 200, 201, 206, 208, 210, 211, 212, 213, 214, 215, 224, 225, 227, 237, 238, 241, 253, 256, 259, 261, 262, 263, 264, 266, 268, 269, 271, 272, 274, 275, 276, 277, 304, 305, 306, 310, 338, 339, 340, 341, 346, 348, 349, 357, 360, 361, 411, 432, 434, 446, 448, 458, 473, 474, 488, 507, 511, 518, 519, 529, 531, 533, 547, 552, 556, 580, 588, 604, 606, 607, 610, 612, 615, 618, 620, 633, 641, 644, 645, 679, 684, 694, 695, 708, 718, 719, 721, 722, 723, 724, 739, 744, 756, 762, 763, 769, 770, 772, 773, 774, 777, 780, 781, 782, 783, 784, 785, 786, 789, 790, 792, 806, 810, 811, 827, 828, 829, 832, 834, 835, 838, 843, 849, 851, 854, 855, 857, 862, 872], "dig": [7, 107, 116, 123, 135, 155, 156, 157, 158, 159, 165, 168, 169, 182, 183, 212, 218, 266, 303, 309, 339, 424, 480, 516, 755, 872], "montag": [7, 8, 19, 69, 81, 113, 123, 133, 134, 135, 150, 158, 188, 189, 203, 218, 238, 261, 262, 263, 264, 266, 309, 312, 313, 315, 320, 322, 325, 327, 328, 329, 330, 331, 332, 333, 334, 362, 438, 457, 473, 474, 485, 581, 789, 801, 809, 812, 827, 848, 854, 872], "It": [7, 10, 13, 31, 39, 47, 55, 60, 69, 70, 73, 88, 92, 93, 101, 112, 114, 115, 119, 139, 141, 143, 144, 148, 149, 150, 155, 156, 157, 158, 159, 165, 168, 169, 170, 171, 174, 176, 179, 187, 188, 189, 194, 198, 199, 201, 202, 203, 204, 206, 207, 208, 212, 213, 215, 218, 223, 225, 226, 228, 231, 233, 237, 238, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 275, 276, 277, 279, 284, 294, 295, 300, 309, 327, 338, 351, 356, 362, 405, 413, 414, 440, 448, 468, 470, 471, 473, 474, 481, 488, 492, 501, 511, 514, 519, 525, 526, 530, 535, 536, 552, 556, 562, 571, 580, 581, 588, 594, 601, 605, 609, 614, 618, 620, 658, 664, 667, 681, 686, 692, 695, 708, 715, 718, 729, 739, 777, 782, 802, 816, 819, 823, 827, 829, 831, 834, 835, 836, 838, 843, 847, 848, 851, 853, 854, 857, 860, 872], "spm_dig_montag": 7, "trans_fnam": [7, 67, 79, 155, 177, 190], "spm_ctf_meg_example_faces1_3d_raw": 7, "map": [7, 8, 10, 16, 19, 23, 24, 25, 26, 27, 36, 40, 41, 43, 56, 58, 70, 75, 77, 85, 92, 103, 104, 105, 107, 113, 117, 120, 122, 126, 128, 132, 133, 134, 135, 142, 143, 144, 145, 150, 155, 157, 159, 164, 165, 167, 174, 177, 180, 181, 193, 194, 197, 198, 199, 200, 203, 204, 205, 209, 212, 219, 221, 222, 223, 228, 231, 232, 233, 241, 255, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 285, 287, 294, 307, 309, 321, 337, 357, 360, 361, 367, 405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 426, 429, 432, 434, 446, 450, 458, 468, 469, 470, 471, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 508, 511, 512, 518, 519, 530, 543, 548, 549, 552, 553, 561, 566, 601, 607, 610, 612, 613, 617, 618, 627, 628, 633, 641, 646, 652, 657, 660, 673, 675, 676, 679, 681, 685, 686, 692, 693, 694, 695, 696, 701, 723, 739, 756, 758, 763, 766, 767, 769, 773, 774, 778, 784, 791, 792, 797, 798, 799, 800, 801, 802, 803, 809, 827, 829, 831, 847, 857, 860, 872], "make_field_map": [7, 122, 149, 263, 264, 774, 862, 872], "plot_field": [7, 122, 149, 263, 264, 872], "170": [7, 79, 82, 101, 121, 136, 168, 182, 183, 184, 190, 194, 200, 203, 223, 227, 228, 241], "daat": 7, "plot_whit": [7, 91, 119, 151, 161, 176, 261, 262, 263, 264, 473, 474, 769, 773, 792, 851, 872], "oct": [7, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 88, 90, 91, 92, 93, 102, 105, 106, 107, 108, 122, 129, 155, 157, 158, 159, 165, 171, 176, 177, 178, 180, 181, 190, 194, 219, 220, 231, 233, 253, 268, 272, 274, 276, 404, 640, 797, 872], "spm_": 7, "s_dspm_invers": 7, "comment": [7, 46, 61, 113, 125, 148, 149, 151, 170, 171, 188, 206, 218, 237, 254, 260, 261, 262, 263, 264, 267, 271, 332, 463, 609, 614, 692, 695, 725, 763, 777, 825, 827, 829, 831, 854, 872], "3d": [7, 27, 31, 35, 38, 40, 52, 59, 60, 94, 95, 120, 125, 128, 133, 134, 135, 141, 150, 155, 157, 159, 160, 174, 175, 184, 189, 194, 204, 208, 223, 226, 228, 253, 259, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 287, 309, 310, 322, 335, 363, 413, 443, 444, 473, 474, 493, 502, 511, 563, 571, 580, 673, 679, 680, 739, 740, 741, 746, 748, 749, 750, 755, 760, 767, 774, 789, 795, 797, 798, 802, 804, 805, 807, 809, 810, 827, 830, 831, 835, 843, 848, 849, 852, 872], "both": [7, 19, 31, 32, 33, 38, 40, 41, 45, 47, 51, 58, 59, 68, 69, 70, 73, 85, 88, 92, 97, 107, 112, 130, 133, 139, 140, 148, 149, 150, 161, 165, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 181, 182, 188, 189, 190, 194, 197, 199, 200, 201, 202, 203, 204, 205, 208, 209, 212, 220, 225, 227, 231, 232, 233, 236, 237, 238, 241, 256, 257, 260, 261, 262, 263, 264, 268, 269, 271, 272, 274, 275, 276, 277, 284, 294, 295, 303, 312, 351, 355, 356, 357, 365, 366, 367, 405, 412, 424, 429, 446, 448, 449, 468, 470, 471, 473, 474, 511, 530, 552, 555, 562, 566, 568, 594, 597, 610, 611, 615, 620, 641, 642, 646, 655, 673, 675, 679, 680, 682, 683, 692, 694, 695, 736, 739, 752, 762, 763, 770, 775, 776, 779, 782, 797, 802, 822, 827, 831, 837, 851, 852, 853, 854, 857, 872], "ven": [7, 50], "save_imag": [7, 231, 233, 739], "dspm_map": 7, "png": [7, 47, 113, 171, 231, 233, 253, 271, 872], "classifi": [8, 9, 10, 11, 13, 17, 20, 27, 194, 208, 261, 263, 264, 266, 409, 420, 422, 423, 552, 571, 607, 650, 651, 872], "featur": [8, 11, 15, 18, 19, 27, 96, 100, 141, 149, 171, 193, 194, 205, 208, 215, 223, 228, 238, 241, 263, 264, 268, 269, 271, 272, 275, 276, 277, 405, 408, 411, 412, 414, 415, 417, 420, 438, 473, 474, 552, 571, 580, 603, 676, 677, 763, 773, 775, 797, 802, 804, 808, 831, 838, 839, 848, 850, 851, 852, 853, 854, 872], "extract": [8, 9, 18, 21, 24, 27, 36, 38, 41, 56, 61, 72, 73, 78, 81, 98, 110, 111, 121, 125, 126, 134, 135, 140, 141, 143, 148, 150, 157, 158, 164, 165, 168, 170, 180, 187, 189, 190, 194, 197, 201, 203, 204, 205, 210, 211, 213, 218, 224, 225, 226, 233, 241, 253, 254, 261, 263, 266, 267, 268, 269, 272, 274, 275, 276, 277, 304, 338, 339, 340, 341, 342, 343, 346, 348, 349, 359, 367, 381, 405, 409, 412, 413, 429, 439, 446, 473, 476, 481, 488, 492, 507, 518, 519, 533, 552, 556, 580, 605, 609, 610, 614, 620, 664, 667, 738, 762, 781, 827, 831, 847, 848, 854, 857, 872], "en": [8, 19, 194, 241, 252, 859, 872], "wikipedia": [8, 194, 223, 241], "org": [8, 15, 32, 33, 69, 70, 81, 86, 111, 112, 113, 114, 118, 125, 133, 134, 135, 194, 225, 227, 228, 231, 237, 241, 268, 272, 276, 297, 376, 398, 399, 413, 444, 553, 638, 676, 721, 724, 735, 797, 831, 851, 872], "wiki": [8, 154, 194, 268, 272, 276, 552, 735, 797, 827, 847], "common_spatial_pattern": [8, 194], "eegbci": [8, 9, 110, 158, 203, 862, 872], "document": [8, 15, 32, 63, 86, 125, 134, 135, 142, 148, 150, 159, 165, 167, 168, 169, 171, 176, 180, 188, 200, 201, 203, 205, 208, 212, 214, 215, 218, 237, 241, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 326, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 411, 415, 416, 418, 421, 422, 424, 426, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 455, 456, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 545, 548, 552, 553, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 640, 641, 643, 644, 645, 646, 649, 654, 656, 657, 660, 662, 663, 664, 665, 666, 667, 668, 679, 680, 681, 682, 683, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 711, 714, 715, 719, 720, 721, 722, 723, 724, 725, 728, 729, 734, 738, 739, 747, 748, 755, 764, 767, 771, 772, 773, 774, 777, 779, 782, 783, 784, 789, 790, 792, 793, 795, 796, 797, 798, 802, 803, 804, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 835, 836, 838, 846, 847, 848, 850, 851, 854, 872], "physionet": [8, 136, 203, 241, 376, 398, 399, 848, 860, 872], "martin": [8, 10, 35, 47, 102, 241, 405, 846, 848, 854, 872], "billing": [8, 872], "tugraz": 8, "sklearn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 115, 136, 170, 193, 194, 203, 223, 351, 356, 406, 408, 411, 414, 415, 419, 422, 691, 735, 830, 831, 872], "discriminant_analysi": [8, 9], "lineardiscriminantanalysi": [8, 9], "model_select": [8, 9, 10, 12, 15, 16, 19, 351, 356, 422, 872], "shufflesplit": 8, "cross_val_scor": [8, 9], "events_from_annot": [8, 9, 110, 126, 134, 135, 136, 143, 167, 209, 238, 255, 280, 481, 488, 862, 872], "make_standard_montag": [8, 19, 69, 81, 123, 158, 169, 189, 238, 261, 262, 263, 264, 266, 320, 327, 473, 474, 485, 495, 862, 872], "concatenate_raw": [8, 9, 10, 79, 110, 190, 261, 262, 263, 264, 358, 359, 473, 474, 571, 580, 848, 862, 872], "read_raw_edf": [8, 9, 81, 110, 136, 158, 188, 203, 479, 481, 494, 848, 854, 858, 862, 872], "classif": [8, 9, 10, 11, 12, 15, 51, 137, 138, 145, 161, 164, 194, 241, 255, 261, 266, 297, 398, 406, 434, 473, 488, 598, 694, 772, 848, 872], "start": [8, 22, 29, 33, 34, 40, 61, 65, 69, 80, 91, 94, 125, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 159, 160, 164, 165, 166, 167, 169, 172, 173, 176, 177, 187, 194, 198, 199, 201, 202, 203, 204, 206, 208, 209, 212, 213, 214, 215, 218, 220, 223, 224, 225, 236, 237, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 275, 276, 277, 280, 281, 282, 293, 332, 338, 339, 340, 341, 351, 354, 356, 405, 411, 412, 417, 429, 445, 446, 447, 463, 464, 472, 473, 474, 479, 481, 488, 497, 500, 513, 522, 541, 552, 555, 559, 564, 565, 568, 569, 571, 572, 573, 574, 575, 594, 610, 657, 669, 679, 680, 682, 683, 692, 693, 695, 697, 698, 699, 700, 701, 702, 703, 727, 739, 744, 763, 765, 772, 778, 783, 785, 786, 792, 812, 827, 829, 831, 833, 834, 835, 836, 839, 842, 847, 850, 851, 854, 855, 857, 858, 872], "cue": [8, 134], "feet": [8, 9, 110, 376], "standard_1005": [8, 69, 81, 158, 169, 203], "set_montag": [8, 15, 19, 69, 81, 123, 126, 133, 134, 135, 150, 158, 169, 181, 188, 189, 203, 218, 238, 261, 262, 263, 264, 266, 438, 473, 474, 485, 495, 854, 872], "skip_by_annot": [8, 9, 261, 262, 263, 264, 473, 474, 571, 580, 872], "t1": [8, 9, 30, 44, 50, 110, 155, 156, 157, 158, 159, 160, 175, 253, 274, 276, 277, 300, 304, 305, 306, 317, 385, 465, 473, 577, 641, 757, 803, 827, 848, 854, 872], "t2": [8, 9, 110, 317, 473, 872], "train": [8, 10, 11, 13, 15, 16, 19, 86, 136, 193, 194, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 422, 552, 553, 782, 831, 847, 848, 872], "epochs_train": [8, 136], "except": [8, 9, 69, 81, 110, 139, 142, 158, 170, 174, 175, 203, 208, 212, 261, 262, 263, 264, 281, 282, 325, 345, 346, 351, 398, 446, 473, 474, 475, 541, 553, 571, 620, 683, 687, 729, 831, 854, 857, 872], "ignor": [8, 9, 10, 41, 47, 68, 69, 79, 81, 107, 110, 134, 139, 145, 150, 158, 161, 165, 171, 180, 183, 190, 197, 198, 199, 205, 223, 253, 256, 258, 259, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 279, 280, 281, 282, 294, 295, 313, 321, 336, 345, 346, 351, 355, 357, 358, 360, 362, 365, 366, 371, 373, 374, 375, 378, 379, 381, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 412, 414, 424, 432, 434, 439, 441, 446, 452, 455, 462, 468, 470, 471, 473, 474, 475, 484, 486, 490, 493, 500, 530, 547, 551, 552, 555, 563, 571, 580, 600, 604, 606, 607, 615, 629, 631, 634, 640, 641, 657, 679, 681, 692, 694, 695, 696, 704, 736, 756, 767, 768, 769, 771, 772, 775, 778, 782, 783, 791, 792, 793, 794, 799, 801, 818, 820, 822, 827, 831, 872], "_io": [8, 9, 69, 81, 110, 158, 203], "fileio": [8, 9, 69, 81, 110, 158, 203], "eegbci_checksum": [8, 9, 69, 81, 110, 158, 203], "txt": [8, 9, 44, 69, 81, 110, 133, 134, 158, 179, 182, 203, 213, 214, 255, 327, 336, 381, 476, 480, 598, 607, 817, 829, 831, 851, 872], "rb": [8, 9, 69, 81, 110, 158, 203], "closefd": [8, 9, 69, 81, 110, 158, 203], "traceback": [8, 9, 69, 81, 110, 158, 203, 830], "most": [8, 9, 19, 28, 45, 47, 69, 72, 80, 81, 102, 106, 107, 110, 112, 118, 125, 133, 134, 139, 143, 148, 149, 150, 151, 154, 155, 158, 164, 166, 168, 170, 171, 180, 187, 197, 200, 202, 203, 204, 205, 207, 208, 209, 212, 223, 227, 236, 253, 261, 262, 263, 264, 266, 267, 272, 275, 309, 327, 352, 353, 354, 373, 374, 375, 378, 379, 381, 385, 386, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 434, 440, 445, 448, 468, 505, 511, 539, 552, 562, 578, 580, 597, 644, 645, 646, 655, 656, 657, 658, 679, 680, 681, 682, 683, 729, 734, 739, 757, 778, 827, 830, 831, 835, 836, 837, 849, 851, 853, 854, 855, 858, 862, 872], "recent": [8, 9, 69, 81, 110, 158, 170, 200, 203, 405, 830, 831, 847, 872], "last": [8, 9, 15, 69, 80, 81, 102, 110, 125, 136, 139, 143, 145, 150, 158, 159, 165, 182, 187, 194, 198, 199, 200, 201, 203, 204, 212, 215, 223, 224, 231, 238, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 275, 276, 277, 284, 285, 299, 317, 339, 351, 359, 408, 415, 416, 418, 429, 443, 444, 445, 446, 472, 473, 474, 496, 513, 518, 547, 552, 555, 673, 678, 679, 680, 682, 683, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 710, 721, 727, 739, 771, 776, 778, 783, 786, 793, 799, 827, 830, 848, 853, 854, 872], "decor": [8, 9, 69, 81, 110, 158, 203, 735, 737], "gen": [8, 9, 69, 81, 110, 158, 203, 752], "566": [8, 9, 68, 69, 81, 110, 158, 203, 228], "resourcewarn": [8, 9, 69, 81, 110, 158, 203], "unclos": [8, 9, 69, 81, 110, 158, 203], "bufferedread": [8, 9, 69, 81, 110, 158, 203], "edf": [8, 9, 81, 110, 136, 158, 203, 438, 473, 474, 481, 488, 494, 598, 848, 854, 858, 872], "eegmmidb": [8, 9, 81, 110, 158, 203, 376, 872], "s001": [8, 9, 81, 110, 158, 203], "s001r06": [8, 9, 110, 158], "19999": [8, 110, 158, 203], "124": [8, 35, 65, 110, 133, 138, 158, 168, 203, 207, 223, 227, 228, 241, 384], "994": [8, 9, 69, 81, 110, 158, 203, 228], "s001r10": [8, 9, 110], "s001r14": [8, 9, 110], "bandpass": [8, 9, 12, 13, 14, 15, 16, 18, 21, 34, 42, 71, 75, 80, 86, 111, 113, 119, 131, 135, 140, 143, 145, 171, 194, 197, 199, 202, 203, 205, 209, 228, 238, 261, 262, 263, 264, 407, 413, 416, 440, 441, 443, 473, 474, 584, 694, 696, 792, 793, 872], "265": [8, 9, 40, 79, 80, 168, 190, 223, 228, 241, 649, 654], "656": [8, 9, 194], "64": [8, 9, 12, 19, 21, 26, 32, 33, 34, 35, 41, 45, 46, 47, 50, 58, 59, 79, 80, 81, 99, 101, 106, 110, 112, 136, 142, 157, 158, 168, 169, 170, 171, 175, 177, 180, 183, 184, 190, 194, 203, 207, 220, 223, 224, 227, 228, 241, 258, 261, 262, 263, 264, 267, 270, 272, 405, 412, 471, 473, 474, 525, 526, 535, 536, 551, 552, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 837, 848, 854, 858], "annot": [8, 9, 27, 38, 41, 44, 47, 67, 74, 76, 81, 83, 88, 92, 93, 110, 111, 124, 125, 126, 133, 134, 135, 143, 145, 150, 159, 164, 165, 172, 174, 180, 188, 189, 190, 193, 197, 203, 206, 215, 216, 217, 219, 256, 261, 262, 263, 264, 266, 280, 341, 342, 356, 360, 383, 434, 472, 473, 474, 475, 481, 486, 488, 493, 500, 512, 552, 554, 555, 556, 557, 558, 559, 568, 569, 571, 572, 573, 580, 581, 598, 607, 615, 631, 634, 696, 739, 755, 781, 784, 792, 793, 807, 808, 822, 827, 848, 849, 854, 862, 872], "descript": [8, 9, 110, 126, 134, 135, 136, 139, 141, 143, 150, 167, 168, 169, 187, 189, 190, 199, 209, 212, 213, 214, 218, 223, 255, 261, 262, 263, 264, 266, 270, 280, 319, 320, 352, 353, 356, 434, 473, 474, 475, 512, 552, 555, 568, 569, 572, 604, 692, 695, 696, 784, 793, 827, 831, 848, 857, 872], "801": [8, 68, 83, 143, 228, 237], "discrim": 8, "mont": [8, 241], "carlo": [8, 241, 872], "cross": [8, 9, 10, 11, 12, 15, 16, 19, 27, 32, 33, 34, 36, 44, 56, 77, 85, 103, 104, 117, 119, 120, 128, 136, 161, 165, 176, 193, 194, 198, 203, 205, 208, 219, 220, 227, 241, 258, 261, 263, 265, 266, 272, 273, 285, 287, 294, 295, 296, 351, 356, 357, 361, 367, 405, 408, 411, 417, 421, 422, 426, 446, 473, 518, 528, 529, 530, 531, 534, 549, 552, 562, 568, 571, 572, 580, 601, 607, 610, 612, 620, 693, 697, 698, 699, 700, 701, 702, 703, 709, 739, 765, 783, 827, 843, 848, 851, 860, 872], "epochs_data": [8, 407, 410, 414, 872], "get_data": [8, 9, 10, 12, 13, 14, 16, 18, 21, 69, 71, 74, 82, 94, 95, 98, 112, 113, 125, 131, 136, 139, 140, 145, 148, 165, 166, 194, 201, 204, 224, 228, 236, 237, 238, 261, 262, 263, 264, 473, 474, 693, 694, 696, 854, 872], "epochs_data_train": 8, "cv": [8, 9, 10, 11, 12, 15, 16, 19, 194, 351, 356, 421, 422, 872], "test_siz": 8, "cv_split": 8, "split": [8, 10, 11, 15, 16, 19, 58, 86, 92, 125, 144, 158, 165, 193, 194, 205, 219, 224, 233, 241, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 277, 351, 356, 422, 464, 472, 473, 474, 493, 495, 525, 526, 580, 669, 678, 693, 721, 724, 739, 765, 797, 802, 857, 872], "assembl": [8, 9, 227, 530, 684, 849, 872], "lda": [8, 9], "log": [8, 9, 12, 21, 33, 81, 119, 127, 141, 161, 176, 198, 200, 203, 205, 209, 215, 225, 237, 238, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 415, 416, 418, 421, 422, 424, 426, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 455, 456, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 548, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 638, 639, 640, 641, 643, 644, 645, 646, 656, 657, 660, 662, 663, 664, 665, 666, 667, 668, 679, 680, 681, 682, 683, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 711, 714, 715, 719, 720, 722, 723, 724, 725, 728, 729, 734, 737, 738, 739, 747, 755, 764, 767, 768, 771, 772, 773, 774, 779, 780, 782, 783, 784, 787, 789, 790, 792, 793, 795, 796, 797, 798, 799, 802, 803, 804, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 851, 862, 872], "norm_trac": [8, 9, 194, 405, 872], "scikit": [8, 9, 16, 18, 19, 115, 194, 203, 409, 411, 413, 414, 415, 416, 418, 419, 420, 423, 552, 849, 872], "learn": [8, 9, 16, 18, 19, 21, 69, 115, 142, 160, 161, 165, 194, 196, 198, 199, 203, 241, 247, 351, 409, 411, 413, 414, 415, 416, 418, 419, 420, 422, 423, 552, 578, 831, 838, 848, 849, 851, 872], "clf": [8, 9, 10, 11, 12, 13, 15, 18, 194, 420, 872], "class_bal": 8, "accuraci": [8, 10, 15, 33, 79, 133, 136, 241, 258, 261, 262, 263, 264, 270, 366, 367, 405, 411, 412, 417, 426, 448, 473, 474, 530, 551, 552, 566, 649, 654, 692, 694, 696, 720, 723, 729, 756, 771, 778, 782, 791, 794, 799, 801, 812, 857, 872], "chanc": [8, 9, 10, 11, 194, 853, 872], "fit_transform": [8, 9, 10, 14, 18, 194, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 553], "plot_pattern": [8, 12, 194, 405, 412, 872], "ch_type": [8, 14, 22, 26, 42, 63, 78, 80, 85, 98, 110, 112, 118, 122, 123, 129, 140, 141, 144, 148, 149, 150, 165, 169, 175, 176, 189, 203, 208, 209, 215, 218, 228, 236, 237, 258, 261, 262, 263, 264, 315, 316, 369, 405, 412, 473, 474, 498, 511, 551, 552, 557, 566, 571, 633, 637, 692, 694, 695, 696, 770, 771, 778, 782, 794, 795, 799, 801, 872], "au": [8, 258, 261, 262, 263, 264, 270, 369, 405, 412, 473, 474, 692, 694, 696, 771, 778, 791, 799], "7e": [8, 9, 32, 35, 48, 49, 54, 55, 58, 69, 92, 119, 149, 151, 161, 171, 177, 178, 181, 182, 184, 190, 194, 198, 219], "8e": [8, 9, 32, 35, 49, 73, 107, 119, 161, 171, 176, 179, 182, 184, 190, 194], "0001": [8, 9, 32, 77, 85, 117, 122, 149, 178, 198, 470, 471], "00012": [8, 9], "6e": [8, 9, 34, 42, 46, 117, 119, 151, 171, 176, 182, 184, 194], "00011": [8, 9], "933333": 8, "533333": 8, "00025": 8, "00026": 8, "9e": [8, 9, 42, 49, 85, 91, 122, 149, 151, 161, 176, 179, 181, 182, 183, 184, 194, 219], "w_length": 8, "int": [8, 11, 19, 31, 67, 71, 88, 91, 93, 107, 112, 125, 142, 148, 159, 168, 170, 190, 193, 200, 201, 212, 218, 220, 233, 238, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 313, 314, 324, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 421, 422, 424, 426, 427, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 455, 456, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 543, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 639, 640, 641, 642, 643, 644, 645, 646, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 675, 678, 679, 680, 681, 682, 683, 684, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 710, 711, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 734, 738, 739, 747, 748, 752, 755, 756, 757, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 777, 778, 779, 782, 783, 784, 785, 786, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 872], "w_step": 8, "w_start": 8, "shape": [8, 16, 19, 22, 31, 41, 47, 50, 53, 63, 65, 69, 95, 112, 113, 118, 133, 135, 136, 139, 145, 148, 156, 157, 159, 169, 174, 180, 187, 193, 194, 200, 212, 218, 223, 224, 225, 227, 228, 231, 232, 233, 236, 237, 238, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 284, 294, 295, 296, 301, 302, 303, 309, 310, 311, 315, 318, 322, 326, 336, 341, 345, 346, 347, 348, 349, 360, 362, 365, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 429, 433, 434, 439, 441, 443, 446, 447, 448, 449, 450, 463, 464, 466, 467, 468, 470, 473, 474, 476, 484, 496, 507, 509, 511, 513, 517, 527, 528, 529, 531, 534, 535, 547, 551, 552, 553, 555, 556, 557, 559, 560, 561, 562, 563, 566, 571, 574, 578, 580, 585, 586, 594, 595, 604, 606, 607, 623, 626, 629, 630, 631, 632, 641, 642, 647, 648, 649, 650, 651, 652, 653, 654, 659, 660, 669, 671, 672, 673, 677, 678, 679, 680, 681, 682, 683, 690, 692, 693, 694, 695, 696, 697, 698, 699, 704, 707, 708, 710, 711, 715, 717, 718, 719, 720, 721, 722, 723, 727, 728, 729, 730, 732, 738, 739, 742, 743, 744, 754, 755, 756, 758, 759, 760, 763, 769, 770, 771, 772, 773, 775, 778, 779, 781, 782, 784, 785, 789, 791, 793, 794, 795, 797, 799, 800, 801, 802, 803, 807, 809, 812, 817, 820, 825, 827, 838, 847, 854, 872], "scores_window": 8, "train_idx": 8, "test_idx": 8, "y_train": [8, 136, 193], "y_test": [8, 136, 193], "x_train": [8, 193], "x_test": [8, 193], "slide": [8, 12, 21, 133, 155, 238, 271, 719, 720, 722, 723], "score_this_window": 8, "n": [8, 10, 43, 45, 69, 81, 91, 97, 107, 112, 136, 140, 143, 148, 150, 156, 159, 169, 171, 174, 187, 200, 203, 204, 205, 206, 212, 218, 220, 223, 225, 227, 228, 238, 241, 253, 255, 256, 259, 260, 261, 262, 263, 264, 267, 268, 269, 272, 273, 275, 276, 277, 279, 309, 318, 337, 347, 348, 349, 352, 353, 354, 357, 376, 398, 399, 420, 426, 429, 440, 442, 463, 473, 474, 493, 534, 551, 552, 556, 559, 568, 569, 571, 580, 628, 652, 665, 666, 667, 668, 672, 677, 692, 695, 704, 705, 708, 718, 719, 720, 722, 723, 739, 742, 743, 758, 773, 780, 797, 802, 803, 809, 827, 839, 848, 851, 854, 858, 872], "w_time": [8, 9], "axvlin": [8, 10, 11, 13, 19, 45, 110, 125, 143, 159, 194, 208], "linestyl": [8, 9, 11, 21, 95, 109, 110, 111, 125, 149, 194, 200, 204, 209, 228, 708, 718, 763, 787, 872], "color": [8, 9, 10, 11, 12, 13, 19, 21, 22, 38, 39, 45, 47, 48, 49, 50, 54, 55, 59, 69, 79, 80, 94, 95, 99, 102, 110, 111, 112, 113, 114, 118, 125, 130, 131, 133, 134, 135, 136, 140, 141, 143, 148, 149, 150, 155, 159, 165, 167, 169, 171, 174, 175, 176, 177, 180, 182, 184, 193, 194, 197, 198, 200, 201, 204, 208, 209, 213, 214, 215, 220, 228, 233, 236, 237, 238, 257, 258, 259, 261, 262, 263, 264, 267, 268, 269, 270, 272, 274, 275, 276, 277, 365, 405, 412, 457, 458, 463, 464, 473, 474, 551, 552, 613, 614, 692, 694, 696, 708, 718, 739, 748, 752, 754, 755, 756, 758, 761, 763, 766, 767, 768, 769, 770, 771, 772, 773, 775, 777, 778, 780, 781, 782, 787, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 805, 821, 822, 827, 872], "axhlin": [8, 9, 10, 11, 13, 19, 21, 79, 80, 110, 111, 143, 159, 194, 238, 552, 785], "xlabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 67, 71, 80, 88, 91, 95, 105, 106, 108, 112, 125, 136, 150, 159, 176, 179, 180, 193, 200, 209, 220, 223, 225, 233, 237, 238, 708, 718, 872], "ylabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 67, 68, 71, 80, 88, 91, 95, 105, 106, 108, 125, 136, 150, 159, 176, 179, 180, 193, 200, 205, 209, 220, 223, 225, 233, 237, 238, 708, 718], "legend": [8, 9, 10, 11, 12, 16, 19, 21, 22, 28, 37, 38, 39, 41, 45, 67, 69, 94, 95, 108, 109, 125, 136, 143, 144, 149, 161, 165, 171, 179, 193, 194, 209, 212, 213, 233, 237, 238, 261, 262, 263, 264, 708, 718, 739, 752, 762, 763, 769, 772, 777, 872], "loc": [8, 10, 16, 37, 39, 69, 110, 121, 125, 135, 139, 142, 143, 144, 168, 175, 179, 182, 209, 237, 266, 327, 591, 708, 718, 762, 809, 854, 857], "zoltan": [8, 194, 241, 405], "kole": [8, 194, 241, 405], "quantit": [8, 161, 194, 241, 552, 851, 853], "abnorm": [8, 194, 241], "clinic": [8, 69, 70, 77, 110, 150, 194, 198, 202, 203, 241, 519, 551, 552, 560, 561, 566, 580, 595, 721, 724, 848, 854], "electroencephalographi": [8, 58, 70, 77, 110, 150, 194, 198, 202, 241, 272, 551, 561, 595, 854], "neurophysiologi": [8, 69, 70, 77, 110, 150, 194, 198, 202, 203, 241, 551, 552, 560, 561, 566, 595, 721, 724, 854], "79": [8, 13, 15, 16, 19, 35, 41, 45, 47, 79, 101, 106, 110, 112, 117, 148, 153, 156, 157, 168, 175, 180, 183, 193, 194, 207, 223, 224, 227, 228, 241, 398, 425], "440": [8, 79, 194, 207, 228, 241], "447": [8, 194, 228, 241], "1991": [8, 194, 241, 405], "1016": [8, 12, 13, 18, 19, 21, 35, 42, 44, 59, 69, 70, 73, 74, 77, 92, 99, 110, 111, 117, 119, 124, 143, 150, 154, 161, 179, 194, 198, 200, 202, 203, 223, 224, 228, 241, 263, 264, 267, 272, 273, 294, 351, 357, 384, 409, 411, 412, 413, 423, 468, 471, 519, 520, 530, 534, 551, 552, 560, 561, 566, 584, 587, 595, 649, 652, 654, 679, 680, 682, 683, 685, 686, 706, 708, 718, 721, 722, 724, 756, 846, 848, 851, 854], "0013": [8, 70, 77, 110, 150, 194, 198, 202, 241, 551, 561, 595, 854], "4694": [8, 19, 70, 77, 110, 150, 194, 198, 202, 241, 551, 561, 595, 854], "91": [8, 13, 19, 26, 35, 41, 45, 47, 50, 70, 77, 78, 106, 107, 110, 112, 115, 150, 155, 157, 168, 175, 180, 181, 193, 194, 198, 205, 206, 207, 208, 209, 223, 224, 227, 228, 241, 332], "90163": [8, 194, 241], "gerwin": [8, 203, 241, 376, 848], "schalk": [8, 203, 241, 376, 848], "denni": [8, 203, 241, 376, 848], "mcfarland": [8, 203, 241, 376, 848], "thilo": [8, 203, 241, 376, 848], "hinterberg": [8, 203, 241, 376, 848], "niel": [8, 203, 241, 376, 848], "birbaum": [8, 203, 241, 376, 848], "jonathan": [8, 99, 203, 224, 241, 376, 389, 848, 872], "wolpaw": [8, 203, 241, 376, 848], "bci2000": [8, 203, 241, 376, 848], "bci": [8, 15, 86, 110, 158, 194, 203, 241, 376, 553, 848, 860, 872], "ieee": [8, 15, 40, 46, 51, 70, 81, 82, 86, 115, 136, 143, 161, 179, 194, 203, 236, 241, 261, 262, 263, 264, 294, 295, 297, 351, 376, 399, 405, 429, 470, 471, 473, 474, 552, 553, 561, 588, 694, 696, 711, 721, 724, 847, 848, 851, 854], "transact": [8, 15, 51, 70, 82, 86, 115, 136, 161, 179, 194, 203, 236, 241, 261, 262, 263, 264, 294, 295, 351, 376, 399, 405, 470, 473, 474, 519, 552, 553, 561, 588, 694, 696, 711, 847, 848, 851, 854], "biomed": [8, 15, 70, 82, 86, 115, 136, 179, 188, 194, 203, 220, 241, 252, 294, 295, 376, 399, 405, 552, 553, 561, 588, 847, 848, 854, 859], "engin": [8, 15, 70, 81, 82, 86, 115, 179, 194, 203, 204, 205, 220, 241, 294, 295, 376, 399, 405, 519, 552, 553, 561, 588, 831, 837, 847, 848, 854], "1034": [8, 18, 203, 241, 376, 645, 848], "1043": [8, 168, 203, 241, 376, 848], "2004": [8, 69, 203, 241, 351, 376, 560, 652, 848, 854], "1109": [8, 15, 40, 46, 51, 70, 81, 82, 86, 115, 136, 143, 161, 179, 194, 203, 236, 241, 261, 262, 263, 264, 294, 295, 297, 351, 376, 399, 405, 429, 470, 471, 473, 474, 552, 553, 561, 588, 694, 696, 711, 847, 848, 851, 854], "tbme": [8, 15, 70, 82, 86, 115, 194, 203, 241, 376, 405, 552, 553, 561, 588, 847, 848], "827072": [8, 203, 241, 376, 848], "ari": [8, 136, 203, 241, 376, 398, 399, 838, 848, 872], "l": [8, 19, 44, 49, 97, 124, 125, 133, 136, 143, 159, 171, 187, 193, 203, 206, 208, 228, 231, 237, 238, 241, 252, 253, 273, 357, 376, 398, 399, 411, 519, 552, 560, 652, 721, 724, 757, 763, 784, 837, 846, 848, 854, 859, 872], "goldberg": [8, 136, 203, 241, 376, 398, 399, 848], "lui": [8, 136, 203, 241, 376, 398, 399, 848], "amar": [8, 136, 203, 241, 376, 398, 399, 848], "leon": [8, 136, 203, 241, 376, 398, 399, 848], "glass": [8, 31, 35, 40, 44, 59, 60, 136, 180, 203, 241, 269, 275, 276, 277, 376, 398, 399, 798, 802, 803, 848], "jeffrei": [8, 136, 203, 241, 376, 398, 399, 519, 848], "hausdorff": [8, 136, 203, 241, 376, 398, 399, 848], "plamen": [8, 136, 203, 241, 376, 398, 399, 848], "ivanov": [8, 136, 203, 241, 376, 398, 399, 848], "roger": [8, 10, 136, 203, 241, 376, 398, 399, 848], "joseph": [8, 136, 203, 241, 376, 398, 399, 848], "mietu": [8, 136, 203, 241, 376, 398, 399, 848], "georg": [8, 136, 203, 241, 376, 398, 399, 848], "moodi": [8, 136, 203, 241, 376, 398, 399, 848], "chung": [8, 136, 203, 241, 376, 398, 399, 848], "kang": [8, 136, 203, 241, 376, 398, 399, 848], "peng": [8, 136, 203, 241, 376, 398, 399, 848], "h": [8, 94, 99, 110, 125, 133, 136, 200, 202, 203, 214, 241, 253, 255, 261, 262, 318, 376, 398, 399, 441, 444, 551, 595, 652, 674, 690, 705, 769, 780, 846, 847, 848, 854, 872], "eugen": [8, 136, 203, 241, 376, 398, 399, 848], "stanlei": [8, 136, 203, 241, 376, 398, 399, 848], "physiobank": [8, 136, 203, 241, 376, 398, 399, 848], "physiotoolkit": [8, 136, 203, 241, 376, 398, 399, 848], "research": [8, 69, 136, 140, 143, 150, 154, 167, 197, 203, 220, 238, 241, 252, 376, 398, 399, 520, 584, 674, 839, 846, 848, 850, 859], "resourc": [8, 121, 136, 143, 201, 203, 241, 376, 398, 399, 830, 848, 855, 860], "complex": [8, 32, 37, 112, 133, 134, 136, 203, 223, 241, 261, 262, 263, 264, 287, 376, 398, 399, 418, 473, 474, 523, 644, 695, 710, 719, 720, 722, 827, 831, 848, 857, 872], "circul": [8, 136, 203, 241, 376, 398, 399, 848], "2000": [8, 10, 136, 199, 200, 202, 203, 205, 212, 241, 261, 262, 263, 264, 376, 398, 399, 405, 434, 473, 474, 475, 519, 551, 671, 847, 848, 854], "1161": [8, 136, 203, 241, 376, 398, 399, 848], "cir": [8, 136, 203, 241, 376, 398, 399, 848], "101": [8, 69, 112, 136, 157, 168, 189, 203, 205, 207, 223, 241, 376, 398, 399, 413, 848, 857], "e215": [8, 136, 203, 241, 376, 398, 399, 848], "814": [8, 20, 118, 128, 228], "decoding_csp_eeg": [8, 20], "decomposit": [9, 11, 14, 17, 20, 27, 28, 29, 30, 32, 38, 39, 44, 47, 52, 57, 60, 73, 75, 101, 102, 105, 106, 108, 110, 111, 122, 165, 171, 180, 194, 197, 203, 204, 219, 223, 225, 226, 228, 231, 233, 237, 238, 241, 261, 263, 264, 266, 268, 269, 272, 275, 276, 277, 405, 412, 413, 418, 419, 439, 486, 513, 533, 552, 566, 578, 698, 701, 711, 717, 719, 720, 722, 723, 847, 854, 857, 872], "iter": [9, 19, 27, 35, 36, 43, 44, 56, 59, 81, 88, 91, 92, 93, 102, 110, 132, 133, 136, 156, 168, 171, 178, 179, 193, 203, 214, 220, 227, 231, 232, 233, 241, 255, 256, 258, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 285, 288, 289, 292, 299, 344, 351, 357, 362, 408, 415, 422, 446, 468, 469, 470, 471, 472, 473, 474, 504, 518, 519, 521, 523, 526, 552, 555, 562, 566, 578, 612, 642, 657, 677, 678, 679, 680, 682, 683, 692, 694, 695, 696, 699, 710, 727, 729, 739, 752, 798, 854, 872], "roll": [9, 107, 122, 739, 807], "laura": [9, 194, 241, 872], "gwilliam": [9, 194, 241, 872], "nyu": [9, 37, 99, 118, 132, 170, 223, 872], "jean": [9, 10, 11, 12, 13, 14, 16, 18, 70, 77, 184, 194, 198, 203, 241, 552, 561, 652, 847, 854, 872], "remi": [9, 10, 11, 12, 13, 14, 16, 18, 872], "king": [9, 10, 11, 12, 13, 14, 16, 18, 194, 241, 872], "jeanremi": [9, 10, 11, 12, 13, 14, 16, 18], "alex": [9, 32, 38, 69, 70, 81, 112, 113, 114, 118, 133, 134, 135, 184, 227, 228, 859, 872], "barach": [9, 12, 15, 86, 194, 241, 405, 872], "create_info": [9, 14, 15, 19, 63, 65, 69, 112, 123, 158, 187, 189, 218, 262, 264, 266, 405, 412, 474, 611, 862, 872], "time_frequ": [9, 21, 32, 33, 34, 90, 101, 109, 110, 112, 165, 200, 220, 225, 226, 227, 228, 236, 237, 410, 413, 418, 462, 862, 870, 872], "averagetfr": [9, 110, 112, 260, 263, 264, 314, 430, 462, 695, 714, 722, 723, 724, 725, 799, 862, 872], "stratifiedkfold": [9, 10, 15, 16, 422, 872], "make_pipelin": [9, 10, 11, 12, 13, 15, 18, 136, 194, 420], "labelencod": 9, "motor": [9, 17, 20, 27, 32, 74, 81, 107, 110, 143, 180, 194, 209, 261, 266, 309, 325, 360, 376, 405, 412, 434, 488, 549, 872], "imageri": [9, 17, 20, 27, 110, 194, 261, 266, 309, 325, 360, 376, 405, 434, 488, 549, 872], "n_split": [9, 10, 12, 15, 16, 19, 422], "speed": [9, 10, 11, 19, 32, 33, 41, 42, 44, 50, 73, 80, 81, 82, 92, 101, 107, 111, 133, 134, 140, 144, 150, 157, 160, 161, 164, 171, 178, 179, 182, 193, 194, 197, 203, 205, 207, 224, 225, 231, 233, 261, 262, 268, 269, 272, 273, 275, 276, 277, 410, 411, 417, 461, 473, 474, 525, 526, 552, 635, 710, 739, 769, 771, 792, 797, 802, 829, 831, 851, 855, 860, 872], "shuffl": [9, 10, 12, 15, 228, 872], "n_cycl": [9, 32, 105, 108, 110, 112, 165, 200, 225, 226, 227, 228, 237, 418, 535, 536, 698, 701, 706, 708, 718, 719, 720, 722, 723], "mani": [9, 44, 69, 73, 110, 118, 119, 125, 139, 141, 145, 148, 149, 150, 151, 154, 157, 159, 160, 161, 165, 166, 170, 171, 176, 189, 193, 197, 198, 199, 200, 201, 203, 204, 205, 218, 220, 223, 236, 238, 252, 253, 254, 261, 262, 266, 271, 273, 276, 277, 294, 345, 351, 429, 434, 447, 464, 552, 641, 677, 687, 692, 693, 739, 755, 765, 782, 784, 785, 827, 829, 831, 834, 835, 847, 849, 851, 854, 856, 858, 860, 872], "cycl": [9, 105, 112, 183, 200, 237, 238, 261, 262, 338, 418, 473, 474, 535, 536, 552, 698, 701, 706, 708, 718, 719, 720, 722, 723, 763, 769, 772, 784, 792, 831, 872], "min_freq": 9, "max_freq": 9, "n_freq": [9, 112, 193, 227, 237, 410, 418, 672, 682, 683, 692, 693, 694, 695, 708, 710, 711, 717, 718, 719, 720, 722, 723], "bin": [9, 22, 27, 69, 96, 100, 118, 121, 141, 143, 170, 200, 208, 225, 231, 236, 238, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 287, 294, 413, 473, 474, 480, 571, 603, 672, 676, 677, 679, 680, 682, 683, 691, 693, 694, 696, 763, 771, 775, 830, 831, 834, 835, 836, 837, 842, 854, 872], "tupl": [9, 113, 149, 169, 170, 171, 193, 203, 212, 214, 227, 228, 255, 256, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 284, 285, 299, 310, 319, 320, 357, 381, 405, 412, 420, 438, 439, 442, 445, 472, 473, 474, 481, 483, 484, 485, 488, 489, 490, 494, 498, 507, 509, 518, 535, 536, 551, 552, 555, 560, 566, 568, 569, 579, 604, 610, 611, 643, 644, 645, 657, 669, 677, 679, 680, 682, 683, 684, 692, 694, 695, 696, 704, 711, 727, 729, 739, 740, 748, 753, 756, 758, 759, 761, 763, 767, 768, 770, 771, 773, 775, 777, 778, 780, 782, 785, 787, 791, 793, 794, 797, 798, 799, 801, 802, 803, 807, 872], "linspac": [9, 19, 32, 40, 42, 67, 69, 111, 115, 135, 140, 149, 171, 176, 193, 197, 204, 205, 218, 219, 238], "freq_rang": [9, 238], "infer": [9, 10, 43, 44, 111, 155, 164, 169, 200, 213, 214, 224, 228, 229, 230, 241, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 277, 294, 295, 315, 319, 326, 351, 355, 356, 360, 365, 366, 367, 405, 412, 435, 436, 438, 448, 449, 465, 468, 470, 471, 473, 474, 481, 483, 488, 530, 552, 623, 670, 672, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 685, 692, 694, 696, 752, 777, 778, 779, 786, 792, 801, 825, 827, 838, 854, 872], "gap": [9, 125, 241, 470, 471, 473, 474, 792, 854, 872], "window_spac": 9, "centered_w_tim": 9, "n_window": [9, 571], "len": [9, 10, 15, 16, 18, 19, 28, 32, 39, 41, 42, 43, 45, 47, 52, 63, 67, 69, 71, 73, 88, 91, 98, 112, 115, 136, 139, 142, 143, 155, 158, 167, 175, 177, 182, 184, 190, 193, 197, 198, 199, 200, 201, 203, 205, 206, 208, 209, 213, 219, 220, 223, 224, 225, 227, 228, 238, 255, 256, 258, 259, 261, 262, 263, 264, 266, 270, 272, 273, 274, 285, 299, 350, 357, 407, 415, 440, 443, 473, 474, 518, 641, 672, 694, 695, 708, 718, 727, 739, 744, 770, 792, 800, 801, 872], "instanti": [9, 143, 171, 194, 203, 256, 258, 259, 260, 261, 262, 266, 270, 271, 273, 309, 474, 694, 696, 741, 752, 872], "encod": [9, 19, 125, 142, 143, 149, 165, 167, 171, 187, 193, 194, 207, 208, 209, 241, 247, 266, 343, 411, 481, 488, 494, 495, 496, 604, 825, 827, 854, 860, 872], "le": 9, "59999": [9, 183], "374": [9, 79, 110, 168, 212, 223], "loop": [9, 32, 42, 60, 107, 118, 134, 136, 148, 176, 180, 198, 228, 233, 238, 241, 399, 426, 563, 571, 580, 739, 848, 854, 872], "init": [9, 371, 831, 836], "freq_scor": 9, "fmin": [9, 32, 101, 102, 106, 111, 112, 114, 131, 136, 236, 237, 238, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 410, 473, 474, 525, 526, 692, 693, 694, 695, 696, 697, 699, 700, 702, 710, 711, 721, 724, 739, 758, 793, 797, 799, 802, 803, 872], "fmax": [9, 32, 73, 101, 102, 106, 111, 112, 114, 131, 136, 165, 197, 201, 236, 237, 238, 261, 262, 263, 264, 410, 473, 474, 525, 526, 692, 693, 694, 695, 696, 697, 699, 700, 702, 710, 711, 721, 724, 739, 754, 793, 799, 872], "enumer": [9, 10, 15, 19, 28, 39, 40, 47, 70, 92, 94, 102, 105, 110, 112, 133, 134, 135, 145, 148, 149, 150, 158, 193, 200, 203, 205, 209, 219, 228, 233, 238], "being": [9, 45, 112, 114, 125, 135, 159, 165, 170, 171, 198, 200, 205, 206, 208, 212, 220, 223, 225, 228, 258, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 359, 362, 439, 449, 463, 473, 474, 507, 552, 571, 573, 615, 692, 694, 696, 739, 757, 770, 773, 775, 776, 793, 798, 803, 831, 853, 854, 872], "w_size": 9, "isol": [9, 45, 112, 199, 203, 205, 872], "raw_filt": [9, 112, 140, 201, 203], "pad": [9, 15, 112, 125, 223, 228, 238, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 318, 440, 443, 444, 445, 473, 474, 711, 872], "drop_bad": [9, 16, 141, 150, 190, 199, 261, 262, 311, 462, 552, 694, 695, 854, 872], "fold": [9, 10, 12, 15, 16, 26, 136, 267, 272, 422, 655, 658], "roc_auc": [9, 11, 13, 194, 408, 415], "axi": [9, 10, 12, 14, 15, 16, 19, 21, 22, 28, 31, 35, 45, 58, 60, 67, 69, 71, 82, 88, 94, 98, 102, 105, 107, 108, 110, 111, 112, 113, 114, 115, 117, 125, 131, 133, 136, 139, 140, 141, 143, 149, 150, 155, 159, 165, 171, 180, 182, 184, 190, 193, 194, 198, 200, 212, 215, 218, 223, 226, 228, 231, 233, 237, 238, 253, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 272, 275, 276, 277, 284, 311, 318, 362, 405, 412, 418, 425, 445, 464, 473, 474, 484, 551, 552, 566, 645, 669, 671, 679, 680, 682, 683, 686, 692, 694, 696, 721, 724, 739, 752, 755, 756, 763, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 782, 784, 786, 787, 791, 792, 793, 794, 799, 800, 801, 837, 854, 872], "701": [9, 134, 228], "205": [9, 168, 183, 194, 207, 223, 227, 228], "281": [9, 13, 168, 207, 228], "629": [9, 228], "17": [9, 10, 11, 12, 13, 19, 26, 28, 32, 34, 35, 41, 43, 45, 47, 50, 60, 61, 70, 79, 82, 88, 101, 106, 107, 112, 113, 121, 144, 147, 150, 155, 156, 157, 159, 168, 170, 171, 173, 175, 176, 179, 180, 181, 182, 183, 184, 187, 190, 194, 206, 207, 208, 211, 212, 217, 218, 223, 224, 225, 227, 228, 230, 231, 233, 241, 261, 262, 263, 264, 268, 271, 272, 273, 274, 276, 277, 285, 294, 351, 353, 356, 357, 367, 405, 412, 414, 472, 473, 474, 519, 525, 526, 580, 645, 657, 680, 692, 708, 718, 719, 722, 756, 797, 803, 848, 854], "165": [9, 145, 168, 194, 200, 203, 207, 209, 223, 227, 228, 241], "031": [9, 126, 139, 148, 168, 183, 220], "581": [9, 194, 207, 228], "139": [9, 45, 157, 168, 207, 220, 228, 274, 872], "869": [9, 228], "549": [9, 206, 228, 241], "22": [9, 11, 13, 14, 15, 16, 19, 21, 26, 28, 32, 34, 35, 39, 40, 42, 44, 45, 47, 50, 56, 73, 79, 83, 86, 88, 101, 106, 107, 108, 110, 112, 125, 128, 131, 149, 154, 168, 170, 175, 179, 182, 187, 190, 193, 194, 196, 197, 203, 206, 207, 211, 219, 220, 222, 223, 224, 225, 227, 228, 231, 232, 233, 236, 241, 261, 262, 263, 264, 273, 274, 309, 332, 336, 337, 357, 399, 444, 473, 474, 493, 507, 512, 552, 555, 594, 611, 628, 637, 687, 711, 755, 783, 793, 830, 854], "121": [9, 139, 144, 165, 168, 169, 180, 207, 223, 227, 228, 261, 262, 428], "756": [9, 194], "523": [9, 13, 122, 128, 228], "bar": [9, 133, 142, 149, 170, 182, 214, 215, 238, 258, 261, 262, 263, 264, 270, 271, 405, 408, 412, 415, 473, 474, 551, 552, 692, 694, 696, 739, 763, 768, 769, 770, 771, 775, 778, 782, 786, 791, 792, 794, 799, 808, 854, 872], "width": [9, 112, 125, 133, 159, 171, 197, 200, 201, 215, 223, 238, 259, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 310, 318, 323, 407, 416, 441, 443, 444, 464, 473, 474, 584, 692, 706, 708, 718, 721, 722, 724, 739, 748, 767, 768, 795, 797, 798, 802, 827, 851, 854, 872], "edgecolor": [9, 10, 237], "black": [9, 21, 45, 47, 48, 50, 110, 141, 150, 159, 189, 205, 209, 258, 259, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 739, 752, 755, 756, 767, 771, 773, 777, 778, 782, 790, 791, 793, 794, 797, 799, 800, 801, 802, 872], "xtick": [9, 15, 19, 88, 125, 193, 200, 223], "tf_score": 9, "center": [9, 37, 45, 67, 69, 78, 88, 93, 110, 118, 119, 133, 150, 155, 157, 159, 169, 184, 197, 199, 200, 201, 205, 223, 238, 252, 253, 263, 264, 267, 272, 302, 414, 484, 505, 516, 552, 561, 641, 644, 649, 655, 658, 692, 729, 739, 743, 779, 790, 798, 848, 854, 859, 872], "w_tmin": 9, "w_tmax": 9, "av_tfr": 9, "newaxi": [9, 15, 28, 98, 115, 228, 231, 232, 233, 739], "white": [9, 24, 26, 41, 52, 107, 110, 114, 119, 124, 125, 131, 133, 134, 141, 155, 157, 158, 159, 175, 177, 189, 208, 219, 223, 228, 253, 259, 261, 262, 263, 264, 267, 268, 269, 272, 274, 275, 276, 277, 365, 463, 473, 474, 505, 538, 539, 597, 615, 640, 692, 694, 696, 739, 755, 757, 767, 777, 779, 797, 800, 802, 827, 847, 872], "vmin": [9, 13, 19, 86, 105, 110, 112, 114, 115, 135, 140, 159, 175, 193, 194, 208, 209, 223, 225, 226, 237, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 739, 756, 770, 771, 778, 782, 791, 794, 799, 800, 801, 872], "red": [9, 54, 59, 69, 78, 79, 81, 98, 110, 130, 131, 141, 143, 149, 155, 159, 169, 177, 180, 189, 193, 197, 198, 201, 205, 208, 209, 215, 228, 231, 237, 238, 257, 258, 259, 261, 262, 263, 264, 267, 270, 405, 412, 473, 474, 551, 552, 566, 614, 692, 694, 696, 739, 754, 756, 763, 764, 767, 770, 771, 773, 778, 782, 791, 794, 799, 801, 827, 831, 872], "530": [9, 20, 73, 79, 204, 206, 211, 228, 241], "decoding_csp_timefreq": [9, 20], "supervis": [10, 18, 86, 136, 405, 422], "class": [10, 16, 19, 60, 68, 86, 92, 93, 112, 113, 136, 139, 141, 148, 150, 156, 164, 165, 167, 170, 171, 174, 193, 199, 200, 203, 212, 215, 218, 228, 239, 240, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 285, 299, 309, 310, 362, 390, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 446, 472, 473, 474, 503, 518, 551, 552, 553, 642, 672, 692, 693, 694, 695, 696, 710, 711, 727, 728, 729, 734, 735, 736, 739, 740, 741, 750, 812, 827, 831, 839, 840, 847, 849, 854, 855, 857, 862, 863, 872], "rel": [10, 24, 32, 33, 34, 42, 61, 74, 84, 107, 110, 111, 125, 133, 136, 139, 141, 143, 155, 165, 167, 169, 188, 197, 200, 201, 205, 208, 209, 214, 237, 238, 253, 254, 256, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 306, 355, 362, 411, 426, 429, 441, 473, 474, 516, 552, 578, 594, 630, 632, 648, 685, 692, 695, 697, 698, 699, 711, 739, 752, 757, 772, 777, 786, 790, 792, 800, 812, 827, 831, 847, 854, 857, 872], "character": [10, 13, 194, 241, 552, 654, 785, 854], "confus": [10, 15, 136, 143, 652, 831], "serv": [10, 167, 213, 228, 258, 261, 262, 263, 264, 270, 278, 405, 412, 473, 474, 551, 552, 566, 692, 694, 695, 696, 737, 755, 756, 771, 778, 782, 791, 794, 799, 801, 831, 853, 854], "proxi": [10, 203, 207], "mental": [10, 13, 194, 241], "rsa": [10, 838, 848, 872], "24": [10, 11, 13, 19, 21, 26, 28, 34, 35, 41, 45, 46, 47, 52, 56, 64, 79, 101, 106, 107, 110, 112, 113, 116, 121, 124, 128, 132, 143, 151, 153, 168, 170, 180, 182, 184, 188, 189, 190, 192, 193, 194, 207, 208, 209, 211, 220, 223, 224, 225, 227, 228, 230, 231, 232, 233, 238, 241, 243, 255, 259, 261, 262, 263, 264, 266, 267, 271, 274, 294, 340, 346, 358, 360, 385, 413, 435, 436, 437, 438, 448, 470, 473, 474, 481, 488, 495, 500, 512, 519, 552, 555, 687, 691, 692, 694, 695, 696, 728, 729, 736, 739, 749, 757, 762, 769, 786, 792, 793, 801, 804, 808, 818, 847, 854], "imag": [10, 16, 27, 30, 32, 33, 35, 40, 44, 46, 55, 59, 69, 86, 110, 118, 120, 122, 125, 126, 128, 133, 135, 142, 145, 148, 154, 155, 158, 159, 165, 169, 175, 179, 181, 189, 190, 197, 200, 203, 204, 205, 206, 220, 223, 224, 226, 227, 228, 237, 238, 241, 252, 258, 261, 262, 263, 264, 266, 270, 271, 273, 274, 276, 277, 286, 287, 288, 289, 294, 295, 300, 304, 309, 310, 318, 335, 350, 357, 363, 384, 405, 412, 465, 468, 470, 471, 473, 474, 482, 493, 519, 551, 552, 566, 607, 641, 647, 648, 649, 650, 651, 652, 653, 654, 692, 694, 696, 708, 718, 728, 729, 739, 740, 742, 755, 756, 757, 770, 771, 775, 777, 778, 782, 784, 791, 794, 799, 800, 801, 803, 807, 809, 812, 827, 832, 837, 838, 848, 857, 859, 872], "92": [10, 13, 19, 34, 35, 44, 79, 101, 110, 112, 142, 161, 168, 179, 194, 199, 207, 223, 224, 225, 227, 228, 233, 516, 854], "human": [10, 19, 33, 58, 92, 111, 124, 143, 150, 154, 177, 179, 193, 220, 241, 261, 262, 263, 264, 272, 287, 294, 370, 383, 407, 411, 416, 441, 443, 444, 473, 474, 557, 681, 708, 718, 719, 722, 827, 828, 838, 847, 848, 860], "anim": [10, 135, 263, 264, 848, 872], "inanim": [10, 848], "bodi": [10, 205, 206, 729, 848], "part": [10, 117, 125, 133, 139, 141, 143, 150, 154, 157, 159, 160, 161, 170, 181, 197, 200, 201, 205, 212, 220, 241, 252, 261, 263, 264, 266, 267, 276, 277, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 434, 448, 449, 468, 470, 471, 473, 475, 493, 525, 526, 530, 620, 669, 679, 680, 682, 683, 692, 695, 739, 756, 775, 779, 831, 832, 853, 854, 855, 857, 860, 872], "6gb": 10, "build": [10, 12, 21, 32, 45, 154, 171, 174, 190, 197, 198, 200, 223, 231, 232, 233, 829, 835, 837, 853, 860, 872], "jaakko": [10, 190, 872], "leppakanga": [10, 190, 872], "jaeilepp": [10, 190], "student": [10, 190, 831], "jyu": [10, 190], "panda": [10, 14, 99, 110, 139, 142, 146, 147, 148, 150, 164, 170, 189, 190, 208, 212, 224, 236, 255, 256, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 429, 473, 474, 607, 678, 691, 692, 694, 695, 696, 830, 831, 854, 872], "read_csv": [10, 189, 190], "standardscal": [10, 11, 13, 18, 194, 414], "linear_model": [10, 11, 12, 13, 15, 18, 194, 860], "logisticregress": [10, 11, 13, 15, 194, 409, 420], "metric": [10, 15, 27, 36, 56, 88, 115, 136, 194, 258, 263, 265, 266, 272, 361, 408, 411, 415, 518, 530, 531, 534, 550, 552, 601, 610, 612, 739, 785, 853, 862, 867, 872], "roc_auc_scor": [10, 408, 415, 862], "manifold": [10, 115, 117, 756], "md": [10, 241, 645], "visual_92_categori": [10, 848, 862, 872], "stimulu": [10, 13, 33, 34, 49, 68, 70, 72, 79, 80, 88, 91, 105, 118, 139, 141, 142, 143, 145, 148, 161, 165, 166, 167, 168, 179, 182, 187, 190, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 212, 213, 214, 215, 220, 227, 233, 238, 253, 255, 261, 262, 263, 264, 266, 311, 343, 351, 411, 429, 434, 473, 474, 549, 555, 657, 692, 694, 695, 696, 827, 848, 854, 872], "fname": [10, 12, 21, 53, 65, 77, 84, 85, 110, 117, 118, 126, 129, 159, 169, 203, 253, 255, 258, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 273, 274, 275, 276, 277, 285, 298, 309, 310, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 348, 349, 435, 436, 437, 438, 473, 474, 476, 477, 478, 479, 482, 487, 491, 492, 493, 495, 499, 500, 501, 502, 503, 504, 533, 537, 541, 542, 551, 552, 590, 591, 592, 593, 596, 598, 599, 600, 601, 602, 603, 605, 608, 609, 610, 611, 612, 613, 616, 618, 619, 620, 621, 622, 623, 625, 627, 638, 692, 693, 694, 695, 696, 712, 713, 714, 725, 727, 733, 813, 814, 815, 816, 818, 819, 820, 823, 824, 825, 826, 858, 872], "visual_stimuli": 10, "csv": [10, 121, 190, 214, 255, 327, 333, 495, 598, 872], "cond": [10, 40, 46, 59, 61, 97, 99, 149, 228, 233, 254], "restrict": [10, 28, 29, 102, 124, 141, 150, 157, 160, 165, 177, 201, 202, 205, 206, 212, 219, 223, 226, 227, 238, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 275, 276, 277, 281, 282, 294, 295, 451, 452, 473, 474, 519, 520, 521, 522, 523, 525, 526, 535, 536, 544, 545, 548, 549, 550, 655, 692, 694, 695, 696, 703, 709, 858, 872], "max_trigg": 10, "row": [10, 72, 99, 110, 125, 140, 141, 142, 143, 144, 149, 165, 168, 171, 174, 190, 194, 209, 212, 223, 224, 256, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 296, 355, 365, 405, 411, 412, 429, 473, 474, 495, 531, 534, 552, 553, 571, 677, 678, 692, 693, 694, 695, 696, 739, 765, 770, 778, 782, 785, 854, 857, 872], "cond_tag": 10, "els": [10, 15, 28, 31, 40, 47, 92, 94, 112, 150, 159, 174, 190, 200, 205, 212, 223, 238, 258, 259, 261, 262, 263, 264, 266, 270, 285, 299, 405, 412, 473, 474, 511, 518, 552, 553, 641, 647, 648, 649, 650, 651, 652, 653, 654, 675, 694, 696, 719, 720, 727, 767, 771, 792, 830, 831, 855, 872], "str": [10, 30, 39, 41, 99, 126, 142, 144, 149, 170, 182, 193, 224, 238, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 669, 671, 673, 675, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 709, 710, 711, 712, 714, 715, 719, 720, 722, 723, 724, 725, 727, 728, 729, 731, 733, 734, 735, 736, 738, 739, 742, 744, 747, 749, 751, 754, 755, 756, 757, 758, 759, 760, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 808, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 831, 872], "bodypart": 10, "natur": [10, 19, 124, 171, 193, 227, 241, 383, 411, 445, 584, 848, 854, 857, 872], "n_run": 10, "sample_subject_": 10, "_tsss_mc": 10, "on_split_miss": [10, 473, 493, 872], "filenam": [10, 43, 44, 70, 72, 75, 79, 80, 81, 91, 125, 134, 139, 140, 145, 150, 155, 156, 166, 167, 171, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 220, 253, 255, 256, 258, 261, 262, 263, 264, 267, 271, 274, 285, 298, 306, 309, 348, 349, 435, 436, 438, 448, 458, 464, 472, 473, 474, 477, 492, 493, 497, 501, 503, 514, 515, 591, 596, 598, 603, 605, 607, 609, 610, 613, 614, 615, 616, 619, 621, 623, 627, 631, 638, 641, 657, 693, 712, 733, 739, 747, 792, 813, 814, 815, 817, 820, 821, 822, 825, 837, 872], "min_dur": [10, 446, 554], "002": [10, 13, 32, 33, 119, 126, 139, 140, 141, 144, 148, 165, 168, 187, 193, 194, 199, 200, 202, 205, 212, 215, 217, 220, 241, 446], "specif": [10, 19, 27, 43, 44, 45, 69, 103, 104, 110, 118, 125, 134, 136, 140, 142, 143, 149, 150, 154, 159, 160, 169, 170, 171, 174, 188, 189, 190, 197, 198, 200, 201, 203, 205, 206, 208, 212, 215, 220, 223, 224, 225, 228, 236, 237, 238, 241, 255, 257, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 272, 275, 276, 277, 284, 294, 309, 405, 412, 429, 434, 436, 440, 446, 473, 474, 475, 488, 505, 528, 529, 549, 550, 551, 552, 558, 563, 566, 571, 580, 614, 620, 641, 671, 678, 692, 693, 694, 695, 696, 708, 718, 722, 739, 758, 763, 770, 771, 778, 782, 791, 792, 794, 797, 799, 800, 802, 803, 821, 827, 831, 835, 838, 846, 848, 853, 854, 855, 857, 860, 861, 872], "appel": 10, "dissimilar": 10, "rdm": 10, "cichi": [10, 241, 848], "et": [10, 16, 19, 21, 193, 200, 202, 238, 252, 261, 262, 560, 854, 859, 872], "al": [10, 16, 19, 21, 193, 200, 202, 238, 261, 262, 560, 854, 872], "multiclass": [10, 241, 405, 422, 872], "multinomi": 10, "logist": [10, 11, 15, 18, 194], "paper": [10, 16, 200, 204, 241, 294, 468, 519, 552, 652, 846, 854], "pairwis": [10, 47, 69, 115, 241, 560], "binari": [10, 97, 159, 194, 213, 259, 406, 422, 446, 489, 490, 496, 602, 672, 678, 690, 817, 829, 836, 837, 854, 857, 872], "roc": [10, 653], "auc": [10, 194, 653], "final": [10, 16, 19, 42, 68, 69, 81, 82, 110, 111, 112, 125, 133, 136, 139, 140, 143, 145, 149, 150, 155, 159, 161, 165, 170, 178, 180, 181, 189, 193, 198, 199, 203, 204, 205, 208, 209, 223, 225, 227, 228, 231, 233, 238, 261, 262, 263, 264, 315, 326, 411, 448, 473, 474, 642, 809, 831, 847, 851, 853, 872], "sake": [10, 125, 199, 227, 858], "did": [10, 11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 81, 102, 105, 106, 108, 122, 159, 160, 161, 165, 169, 171, 174, 175, 180, 200, 203, 205, 206, 218, 219, 231, 233, 266, 274, 849, 857, 872], "instant": [10, 13, 42, 118, 176, 182, 194, 259, 263, 264, 284, 350, 448, 666, 667, 668, 692, 697, 698, 699, 700, 701, 702, 703, 774, 776, 778], "50m": 10, "300m": 10, "focu": [10, 12, 81, 125, 143, 199, 200, 837, 872], "liblinear": [10, 11, 13, 15, 18, 194], "multi_class": [10, 15], "y_pred": [10, 12, 19, 136, 408, 409, 411, 415, 872], "probabilist": [10, 241, 351, 408, 409, 415, 854, 860], "necessari": [10, 21, 31, 72, 92, 125, 134, 145, 150, 154, 155, 157, 159, 160, 165, 168, 170, 179, 197, 199, 200, 201, 202, 203, 204, 205, 212, 213, 218, 223, 254, 261, 262, 263, 264, 265, 268, 269, 272, 273, 275, 276, 277, 294, 295, 313, 315, 322, 355, 371, 405, 412, 414, 429, 440, 448, 472, 473, 474, 481, 488, 492, 519, 580, 588, 598, 605, 609, 637, 656, 692, 694, 695, 696, 704, 739, 778, 797, 802, 827, 831, 847, 848, 852, 853, 854, 857, 872], "predict_proba": [10, 408, 409, 415], "ii": [10, 15, 19, 39, 91, 97, 105, 117, 134, 158, 182, 184, 189, 193, 223, 233, 241, 268, 269, 272, 275, 276, 277, 317, 408, 415, 482, 552, 641, 678, 756, 872], "train_class": 10, "jj": 10, "im": [10, 13, 15, 22, 69, 113, 135, 194, 742, 801, 809, 872], "matshow": [10, 13], "rdbu_r": [10, 13, 16, 19, 22, 105, 112, 193, 194, 225, 226, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 770, 771, 775, 778, 782, 791, 794, 799, 800, 801, 831], "set_ytick": 10, "set_yticklabel": [10, 110], "set_xtick": [10, 238], "set_xticklabel": [10, 238], "colorbar": [10, 13, 15, 22, 69, 70, 105, 110, 112, 113, 114, 118, 125, 135, 141, 145, 149, 175, 181, 194, 205, 209, 215, 223, 224, 225, 227, 228, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 405, 412, 473, 474, 551, 552, 566, 692, 693, 694, 696, 739, 753, 756, 758, 763, 764, 765, 770, 771, 775, 776, 778, 782, 791, 794, 797, 799, 800, 801, 802, 803, 872], "tight_layout": [10, 12, 15, 19, 39, 41, 58, 69, 71, 84, 112, 113, 118, 133, 143, 175, 180, 182, 193, 200, 205, 208, 209, 220, 223, 227, 228, 237, 872], "relat": [10, 12, 19, 27, 32, 33, 34, 69, 76, 99, 103, 104, 110, 115, 126, 130, 135, 143, 145, 152, 153, 154, 157, 159, 161, 164, 165, 171, 172, 177, 187, 188, 193, 194, 197, 199, 200, 202, 203, 204, 207, 208, 209, 214, 224, 231, 237, 238, 241, 261, 262, 263, 264, 266, 271, 284, 311, 326, 350, 389, 411, 412, 429, 441, 446, 462, 473, 474, 543, 552, 560, 607, 637, 641, 671, 692, 739, 752, 760, 763, 770, 785, 786, 792, 800, 811, 827, 829, 831, 834, 846, 848, 849, 851, 852, 853, 854, 855, 860, 872], "histor": [10, 149, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 332, 473, 474, 692, 695, 854, 860], "summar": [10, 45, 111, 150, 201, 203, 212, 261, 262, 268, 269, 272, 275, 276, 277, 763, 770, 847, 853, 858, 872], "dimension": [10, 149, 174, 194, 198, 204, 205, 212, 228, 231, 232, 233, 241, 263, 264, 268, 269, 272, 275, 276, 277, 351, 413, 418, 420, 552, 672, 692, 739, 773, 827, 854, 872], "reduct": [10, 17, 20, 27, 112, 190, 201, 209, 241, 261, 262, 263, 264, 266, 365, 369, 404, 413, 419, 473, 549, 552, 553, 580, 588, 607, 720, 723, 872], "multi": [10, 16, 27, 36, 46, 56, 81, 102, 124, 169, 188, 194, 200, 231, 232, 233, 241, 258, 259, 261, 262, 263, 264, 265, 266, 270, 276, 299, 383, 405, 406, 410, 412, 421, 444, 446, 448, 471, 473, 474, 514, 518, 519, 521, 525, 526, 530, 551, 552, 566, 599, 601, 602, 627, 692, 694, 696, 710, 715, 756, 771, 778, 782, 791, 794, 799, 801, 805, 838, 854, 857, 872], "cluster": [10, 27, 96, 100, 110, 164, 224, 229, 230, 234, 235, 238, 241, 261, 263, 264, 266, 272, 273, 274, 315, 350, 357, 428, 446, 473, 518, 519, 533, 549, 607, 620, 622, 627, 664, 672, 673, 675, 679, 680, 682, 683, 684, 695, 722, 739, 798, 869, 872], "togeth": [10, 43, 69, 73, 140, 148, 150, 165, 171, 174, 187, 197, 203, 205, 208, 209, 212, 218, 228, 261, 262, 263, 264, 271, 280, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 427, 448, 449, 468, 470, 471, 473, 474, 496, 530, 552, 579, 606, 623, 626, 679, 680, 682, 683, 710, 779, 820, 825, 827, 831, 872], "precomput": [10, 155, 180, 190, 261, 262, 357, 473, 474, 552, 640, 769, 786, 792, 872], "colormap": [10, 24, 58, 107, 110, 111, 114, 125, 133, 135, 141, 159, 205, 238, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 405, 412, 473, 474, 551, 552, 566, 684, 692, 693, 694, 696, 739, 754, 756, 758, 763, 765, 770, 771, 775, 778, 781, 782, 791, 794, 797, 799, 800, 801, 802, 803, 822, 831, 872], "rainbow": 10, "sel": [10, 31, 224, 543, 546, 548, 549, 627, 693], "this_nam": 10, "scatter": [10, 45, 113, 223, 757, 872], "facecolor": [10, 47, 133, 150, 223], "scatterpoint": 10, "ncol": [10, 15, 72, 110, 118, 125, 136, 145, 150, 175, 182, 209, 263, 264, 405, 412, 552, 778, 782, 857, 872], "shepard": [10, 241], "multidimension": [10, 223, 241, 408, 415, 422], "tree": [10, 241, 857], "scienc": [10, 13, 33, 40, 99, 111, 179, 194, 220, 224, 238, 241, 252, 287, 294, 389, 470, 519, 552, 848, 854, 859], "210": [10, 13, 35, 79, 85, 122, 149, 168, 194, 207, 227, 228, 241], "4468": [10, 241], "390": [10, 12, 21, 79, 207, 223, 228, 241], "398": [10, 79, 194, 207, 228, 241], "1980": [10, 150, 241], "1126": [10, 19, 241], "aarr": [10, 241], "laakso": [10, 241], "garrison": [10, 241], "cottrel": [10, 241], "content": [10, 27, 103, 157, 165, 168, 171, 200, 201, 204, 209, 215, 237, 241, 261, 262, 265, 271, 382, 383, 437, 503, 747, 763, 770, 827, 831, 836, 872], "assess": [10, 13, 136, 155, 161, 169, 197, 241, 519, 530, 552, 649, 654, 851, 854], "neural": [10, 18, 19, 22, 27, 33, 62, 66, 69, 70, 81, 115, 136, 150, 177, 179, 194, 197, 200, 203, 206, 220, 238, 239, 241, 266, 287, 294, 295, 369, 405, 409, 411, 412, 468, 474, 552, 561, 578, 827, 832, 848, 872], "philosoph": [10, 241, 519, 854], "76": [10, 13, 15, 16, 18, 19, 34, 35, 46, 47, 78, 79, 97, 100, 101, 106, 107, 110, 112, 117, 158, 168, 175, 190, 194, 207, 223, 224, 225, 227, 228, 231, 232, 233, 241, 673, 756], "09515080050002726": [10, 241], "nikolau": [10, 241], "kriegeskort": [10, 241], "mariek": [10, 241], "mur": [10, 241], "peter": [10, 179, 236, 241, 261, 262, 263, 264, 473, 474, 519, 552, 694, 696, 711, 721, 724, 854, 872], "bandettini": [10, 241], "connect": [10, 38, 47, 69, 159, 165, 220, 223, 241, 267, 286, 288, 294, 295, 371, 584, 672, 679, 680, 682, 683, 688, 759, 837, 838, 843, 862, 872], "branch": [10, 241, 831], "neuro": [10, 84, 241, 872], "06": [10, 20, 26, 35, 41, 44, 45, 46, 50, 52, 56, 59, 70, 74, 82, 83, 92, 98, 101, 104, 136, 154, 157, 173, 175, 178, 180, 182, 186, 193, 200, 205, 207, 211, 217, 223, 224, 225, 228, 233, 241, 273, 357, 413, 468, 561, 827, 830], "radoslaw": [10, 241, 848], "aud": [10, 28, 29, 37, 39, 49, 90, 97, 102, 105, 106, 149, 228, 241, 261, 763, 848], "oliva": [10, 241, 848], "resolv": [10, 179, 203, 208, 241, 703, 835, 848, 872], "recognit": [10, 46, 99, 150, 200, 241, 721, 724, 848], "455": [10, 194, 228, 241, 274, 848], "462": [10, 194, 207, 228, 241, 274, 848], "2014": [10, 12, 13, 18, 19, 40, 70, 111, 119, 150, 161, 194, 200, 241, 263, 264, 351, 409, 411, 412, 413, 423, 470, 561, 584, 674, 721, 724, 846, 848, 851], "1038": [10, 124, 193, 241, 383, 411, 848], "nn": [10, 177, 241, 274, 641, 848, 857, 872], "3635": [10, 241, 848], "decoding_rsa_sgskip": [10, 20], "cortic": [11, 24, 26, 27, 31, 32, 41, 43, 58, 76, 78, 83, 88, 92, 107, 111, 120, 128, 154, 157, 162, 164, 165, 171, 174, 177, 179, 185, 190, 198, 220, 223, 232, 241, 253, 258, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 279, 281, 282, 294, 295, 357, 361, 384, 439, 450, 468, 470, 471, 473, 505, 519, 520, 521, 522, 523, 526, 530, 535, 536, 549, 550, 567, 597, 600, 601, 612, 615, 622, 649, 652, 654, 655, 656, 657, 658, 688, 739, 750, 798, 827, 829, 832, 835, 838, 848, 857, 860, 872], "univari": [11, 164, 194, 223, 224, 229, 230, 241, 261, 266, 473, 549, 607, 673, 675, 676, 680, 695, 722, 869, 872], "confin": [11, 47, 157, 227, 287, 854], "potenti": [11, 15, 47, 69, 70, 72, 77, 86, 99, 115, 125, 126, 140, 143, 152, 153, 164, 167, 171, 194, 198, 200, 202, 206, 223, 224, 227, 238, 241, 261, 262, 263, 264, 266, 267, 272, 306, 311, 350, 357, 365, 389, 444, 461, 462, 473, 474, 475, 543, 553, 560, 561, 607, 637, 655, 658, 678, 685, 754, 763, 770, 800, 811, 847, 848, 851, 853, 854, 872], "relev": [11, 12, 26, 99, 110, 124, 150, 168, 179, 194, 200, 201, 202, 209, 241, 274, 368, 412, 552, 568, 691, 782, 784, 831, 846, 847, 851, 854, 857], "eric": [11, 19, 22, 26, 34, 39, 50, 57, 65, 71, 78, 82, 91, 92, 107, 116, 118, 121, 124, 125, 127, 133, 134, 135, 154, 156, 158, 178, 179, 181, 182, 183, 190, 193, 194, 207, 223, 227, 228, 231, 232, 233, 241, 267, 272, 384, 519, 588, 657, 679, 680, 682, 683, 846, 848, 859, 872], "larson": [11, 19, 22, 26, 34, 39, 50, 57, 65, 71, 78, 82, 91, 92, 107, 116, 118, 121, 124, 125, 127, 133, 134, 135, 158, 178, 179, 181, 182, 183, 190, 193, 194, 207, 223, 227, 231, 232, 233, 241, 261, 262, 263, 264, 267, 272, 384, 473, 474, 588, 657, 846, 848, 859, 872], "feature_select": 11, "selectkbest": 11, "f_classif": 11, "apply_inverse_epoch": [11, 28, 45, 268, 269, 272, 275, 276, 277, 519, 520, 522, 523, 862, 872], "read_inverse_oper": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 102, 105, 106, 108, 122, 165, 180, 219, 231, 233, 537, 862], "cross_val_multiscor": [11, 194, 862, 872], "linearmodel": [11, 18, 194, 862, 872], "slidingestim": [11, 194, 422, 862, 872], "get_coef": [11, 18, 194, 862, 872], "meg_path": [11, 13, 14, 15, 16, 22, 28, 30, 31, 35, 37, 39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 67, 68, 70, 71, 75, 77, 84, 85, 86, 90, 91, 92, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 115, 116, 119, 129, 130, 131, 177, 178, 179, 180, 194, 220, 225, 226, 227, 228, 231, 232, 233], "fname_fwd": [11, 32, 33, 34, 41, 42, 43, 47, 48, 49, 54, 58, 176, 178, 219], "sample_audvi": [11, 22, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 67, 77, 84, 85, 88, 90, 91, 92, 93, 102, 105, 106, 108, 114, 117, 118, 122, 125, 129, 132, 148, 149, 165, 171, 174, 175, 176, 177, 178, 179, 180, 194, 219, 220, 231, 232, 233, 253, 261, 262, 263, 264, 473, 474], "sample_audvis_filt": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 144, 150, 151, 165, 168, 171, 176, 179, 194, 199, 203, 228, 231, 233, 854], "40_raw": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 144, 150, 151, 165, 168, 171, 176, 179, 194, 199, 203, 228, 231, 233, 854], "event_fnam": [11, 14, 15, 16, 18, 68, 86, 94, 95, 98, 115, 119, 130, 226, 227, 228, 231, 233], "ev": [11, 13, 14, 15, 16, 18, 28, 68, 86, 92, 94, 95, 98, 101, 102, 115, 119, 130, 139, 144, 150, 171, 199, 213, 226, 227, 228, 231, 233, 253, 607, 608, 817, 851, 872], "fname_cov": [11, 41, 48, 49, 50, 54, 55, 58, 64, 92, 175, 178, 180], "fname_inv": [11, 28, 29, 30, 38, 39, 44, 47, 57, 60, 102, 105, 106, 108, 122, 180, 219, 231, 233], "inv": [11, 28, 29, 30, 38, 39, 44, 45, 47, 52, 57, 60, 92, 102, 105, 106, 108, 122, 133, 155, 157, 159, 165, 171, 176, 177, 178, 180, 181, 190, 194, 219, 220, 231, 233, 253, 439, 524, 527, 530, 532, 533, 537, 796, 831, 847, 854, 872], "aud_r": [11, 14, 15, 42, 227], "vis_r": [11, 14, 15, 42, 86, 227], "contra": 11, "setup": [11, 15, 16, 18, 24, 43, 44, 45, 68, 69, 71, 86, 94, 95, 98, 105, 106, 108, 115, 130, 133, 154, 225, 226, 231, 233, 237, 254, 274, 321, 371, 446, 830, 831, 832, 833, 835, 837, 852, 857, 872], "read_ev": [11, 13, 14, 15, 16, 18, 28, 68, 86, 92, 94, 95, 98, 101, 102, 115, 119, 130, 139, 144, 150, 199, 213, 226, 227, 228, 231, 233, 262, 446, 604, 817, 827, 862, 872], "modifi": [11, 61, 68, 115, 133, 139, 148, 149, 150, 160, 164, 167, 168, 171, 172, 173, 181, 194, 198, 204, 206, 209, 214, 218, 223, 227, 236, 241, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 272, 273, 274, 275, 276, 277, 278, 284, 309, 315, 337, 358, 360, 361, 362, 380, 405, 407, 409, 410, 412, 413, 414, 416, 417, 419, 420, 427, 464, 468, 473, 474, 481, 488, 502, 519, 532, 544, 548, 551, 552, 574, 577, 579, 580, 581, 582, 583, 595, 628, 634, 637, 643, 644, 645, 646, 674, 685, 686, 692, 693, 694, 695, 696, 709, 711, 735, 739, 742, 755, 760, 774, 776, 792, 806, 807, 812, 839, 847, 848, 854, 857, 872], "your": [11, 31, 47, 68, 69, 92, 93, 115, 119, 125, 133, 134, 139, 140, 141, 148, 150, 154, 156, 157, 158, 160, 161, 165, 166, 167, 171, 176, 180, 181, 189, 190, 193, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 223, 236, 237, 238, 253, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 278, 294, 295, 306, 315, 326, 329, 332, 335, 351, 355, 356, 365, 366, 367, 384, 405, 412, 429, 446, 448, 449, 468, 470, 471, 473, 474, 484, 489, 530, 538, 551, 552, 555, 562, 568, 580, 598, 604, 678, 692, 694, 695, 696, 739, 769, 776, 779, 785, 786, 792, 797, 809, 829, 834, 835, 836, 837, 838, 839, 846, 847, 848, 849, 850, 851, 852, 854, 857, 872], "2443": [11, 42, 72, 75, 86, 90, 91, 105, 106, 108, 109, 115, 119, 145, 165, 166, 167, 168, 176, 179, 194, 197, 198, 199, 204, 205, 208, 212, 213, 214, 215, 220, 225, 226, 227, 231, 233], "grad": [11, 16, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 61, 75, 77, 84, 85, 91, 92, 94, 95, 97, 98, 101, 102, 105, 107, 108, 109, 111, 112, 114, 115, 117, 118, 119, 121, 122, 125, 129, 130, 139, 141, 144, 149, 151, 155, 156, 157, 161, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 194, 198, 199, 205, 207, 208, 212, 218, 219, 220, 225, 226, 227, 231, 233, 236, 237, 253, 256, 258, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 294, 295, 308, 315, 316, 335, 351, 355, 356, 365, 366, 367, 369, 405, 412, 414, 448, 449, 468, 470, 471, 473, 474, 508, 515, 530, 549, 550, 551, 552, 557, 562, 564, 565, 566, 568, 569, 571, 633, 678, 692, 694, 695, 696, 762, 763, 769, 770, 771, 773, 775, 777, 778, 779, 782, 792, 794, 795, 799, 800, 801, 827, 847, 854, 857, 872], "4000e": [11, 16, 28, 42, 45, 46, 75, 94, 95, 98, 101, 102, 105, 108, 111, 115, 119, 130, 151, 165, 176, 179, 194, 205, 225, 226, 227, 231, 233, 237, 256, 261, 262, 356, 552, 568, 569, 678, 847], "150e": [11, 16, 28, 42, 45, 94, 95, 98, 102, 105, 108, 115, 140, 141, 151, 165, 176, 179, 194, 205, 225, 226, 227, 228, 231, 233, 261, 262, 271, 473, 474, 769, 792, 847, 854], "v1": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 188, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 219, 220, 225, 226, 227, 228, 231, 233, 405, 412, 552, 691, 782], "idl": [11, 13, 14, 15, 16, 18, 26, 28, 29, 42, 45, 49, 61, 67, 68, 70, 71, 72, 75, 81, 82, 86, 90, 91, 92, 94, 95, 97, 98, 101, 102, 105, 108, 109, 115, 116, 119, 121, 125, 127, 129, 130, 131, 140, 141, 145, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 176, 179, 181, 182, 190, 194, 197, 201, 202, 203, 204, 205, 207, 208, 212, 215, 219, 220, 225, 226, 227, 228, 231, 233], "v2": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 188, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 219, 220, 225, 226, 227, 228, 231, 233, 241, 383, 580, 872], "v3": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 75, 77, 81, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 130, 131, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 219, 220, 225, 226, 227, 228, 231, 233], "refer": [11, 14, 22, 27, 28, 29, 30, 31, 38, 39, 41, 45, 47, 48, 49, 50, 52, 57, 60, 61, 64, 67, 68, 71, 72, 75, 76, 79, 80, 83, 84, 85, 88, 90, 91, 93, 94, 95, 97, 98, 102, 105, 106, 108, 114, 118, 122, 125, 130, 131, 144, 148, 149, 151, 155, 157, 158, 164, 165, 166, 168, 169, 171, 174, 176, 178, 180, 181, 187, 199, 207, 210, 211, 212, 219, 231, 233, 237, 238, 241, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 287, 294, 295, 297, 299, 332, 351, 356, 357, 365, 376, 380, 383, 384, 387, 388, 389, 398, 399, 405, 406, 409, 411, 412, 413, 415, 421, 423, 426, 429, 431, 444, 468, 470, 471, 473, 474, 484, 515, 516, 519, 520, 530, 534, 549, 550, 551, 552, 553, 557, 560, 561, 563, 564, 565, 566, 567, 571, 578, 580, 581, 584, 587, 588, 595, 632, 634, 637, 641, 645, 649, 652, 654, 657, 674, 676, 678, 679, 680, 681, 682, 683, 685, 686, 692, 694, 695, 696, 700, 701, 702, 703, 704, 706, 708, 710, 711, 718, 719, 721, 722, 724, 739, 741, 755, 756, 771, 778, 779, 782, 783, 786, 791, 793, 794, 799, 801, 811, 827, 835, 846, 853, 855, 857, 872], "6450": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 150, 151, 165, 168, 171, 176, 179, 194, 203, 228, 231, 233], "48149": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 94, 95, 97, 98, 115, 119, 130, 131, 140, 150, 151, 165, 168, 171, 176, 179, 194, 203, 228, 231, 233], "956": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 67, 68, 70, 71, 72, 75, 78, 81, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 108, 109, 115, 116, 119, 121, 125, 130, 131, 140, 142, 145, 150, 151, 155, 161, 165, 166, 167, 168, 171, 176, 179, 181, 194, 197, 201, 202, 203, 204, 205, 206, 212, 215, 219, 220, 225, 226, 227, 228, 231, 233], "320": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 67, 68, 70, 71, 72, 75, 79, 81, 86, 90, 91, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 110, 115, 116, 119, 121, 125, 130, 131, 133, 139, 140, 145, 148, 150, 151, 155, 161, 165, 166, 167, 168, 170, 171, 176, 179, 181, 194, 197, 198, 201, 202, 203, 204, 205, 207, 212, 215, 219, 220, 225, 226, 227, 228, 231, 233, 404], "665": [11, 13, 14, 15, 16, 18, 28, 42, 49, 68, 71, 72, 75, 86, 88, 92, 93, 94, 95, 97, 98, 115, 119, 130, 131, 140, 150, 151, 165, 168, 171, 176, 179, 194, 203, 207, 228, 231, 233], "41699": [11, 13, 14, 15, 16, 18, 42, 71, 72, 86, 97, 119, 131, 140, 151, 165, 194, 228], "277": [11, 13, 14, 15, 16, 18, 42, 70, 71, 72, 86, 97, 119, 131, 140, 151, 165, 166, 168, 181, 194, 199, 202, 207, 212, 223, 228], "709": [11, 13, 14, 15, 16, 18, 42, 71, 72, 86, 97, 119, 131, 140, 151, 165, 194, 228], "199": [11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 84, 85, 114, 117, 118, 125, 148, 168, 171, 175, 177, 178, 180, 182, 190, 208, 218, 223, 227, 228, 233, 241, 706, 708, 718, 722], "325": [11, 72, 110, 168, 207], "366": [11, 13, 14, 15, 16, 18, 22, 31, 35, 40, 47, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 79, 86, 88, 90, 91, 92, 93, 110, 119, 129, 131, 143, 148, 168, 171, 177, 178, 194, 208, 219, 220, 228], "143": [11, 49, 72, 104, 110, 168, 199, 207, 208, 228, 241, 274], "19979521315838786": [11, 28, 61, 68, 70, 71, 78, 91, 92, 94, 95, 98, 101, 102, 105, 108, 115, 130, 141, 144, 148, 149, 151, 165, 171, 176, 179, 181, 198, 199, 202, 219, 226, 227, 231, 233], "151": [11, 21, 31, 56, 118, 150, 168, 171, 203, 207, 223, 227, 228, 233, 274], "prior": [11, 12, 18, 27, 28, 29, 30, 34, 36, 38, 39, 40, 44, 47, 52, 56, 57, 58, 60, 88, 102, 105, 106, 108, 111, 122, 141, 148, 150, 161, 165, 171, 177, 178, 179, 180, 194, 203, 206, 208, 215, 219, 228, 231, 233, 258, 259, 263, 265, 266, 272, 294, 295, 449, 450, 468, 469, 470, 471, 473, 474, 490, 518, 519, 530, 552, 562, 571, 580, 601, 610, 612, 739, 766, 767, 792, 798, 854, 857, 860, 872], "061": [11, 16, 28, 32, 33, 45, 46, 61, 70, 71, 72, 91, 92, 94, 98, 105, 111, 115, 139, 144, 150, 151, 165, 166, 167, 168, 171, 176, 179, 197, 198, 199, 202, 203, 204, 205, 208, 212, 213, 214, 215, 223, 224, 225, 226, 227, 228, 231, 233, 237, 241, 679, 680, 682, 683], "read_cov": [11, 31, 35, 40, 41, 45, 48, 49, 50, 51, 54, 55, 58, 59, 64, 67, 90, 92, 161, 177, 178, 258, 816, 851, 862], "305": [11, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 75, 77, 80, 85, 86, 92, 102, 105, 106, 107, 108, 119, 122, 139, 145, 149, 151, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 206, 207, 219, 231, 233, 241, 261, 262, 263, 264, 473, 474, 637], "22494": [11, 22, 28, 29, 35, 38, 39, 52, 57, 60, 102, 105, 106, 108, 122, 165, 171, 180, 231, 233], "diagon": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 69, 102, 105, 106, 108, 122, 165, 171, 179, 180, 194, 219, 220, 231, 233, 241, 258, 294, 295, 351, 367, 508, 519, 527, 854, 857, 872], "retriev": [11, 194, 203, 207, 237, 325, 326, 346, 423, 481, 488, 610, 872], "lh_data": [11, 114, 174, 233, 272, 275], "hemispher": [11, 24, 27, 40, 43, 47, 52, 120, 124, 125, 128, 140, 150, 154, 157, 174, 177, 182, 231, 232, 233, 257, 267, 268, 269, 272, 273, 274, 275, 276, 277, 357, 383, 463, 505, 597, 615, 617, 620, 640, 655, 663, 688, 738, 739, 797, 802, 822, 857, 872], "prepar": [11, 12, 19, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 77, 85, 88, 92, 102, 105, 106, 107, 108, 117, 122, 133, 149, 165, 176, 177, 178, 180, 181, 190, 194, 198, 205, 219, 220, 225, 231, 304, 315, 326, 365, 366, 519, 520, 521, 522, 523, 525, 526, 532, 535, 536, 581, 831, 857, 872], "seri": [11, 16, 27, 28, 29, 31, 36, 41, 56, 70, 79, 88, 91, 92, 93, 109, 136, 160, 167, 174, 179, 180, 187, 203, 204, 215, 220, 233, 238, 241, 259, 260, 261, 262, 263, 264, 267, 268, 269, 272, 274, 275, 276, 277, 294, 295, 351, 408, 415, 418, 439, 473, 474, 518, 519, 522, 533, 552, 557, 561, 610, 614, 678, 679, 680, 692, 693, 695, 697, 698, 699, 708, 717, 718, 752, 763, 803, 827, 829, 831, 854, 872], "time_decod": [11, 194], "31": [11, 13, 19, 28, 32, 34, 35, 43, 45, 47, 74, 79, 80, 81, 101, 106, 107, 110, 112, 114, 128, 150, 158, 168, 174, 177, 179, 182, 184, 186, 190, 193, 194, 203, 207, 209, 223, 224, 225, 227, 228, 231, 232, 233, 236, 241, 261, 262, 274, 332, 530, 649, 654, 854, 872], "03": [11, 19, 24, 33, 35, 49, 56, 59, 70, 72, 74, 75, 81, 82, 83, 88, 91, 92, 100, 101, 104, 106, 107, 118, 119, 125, 140, 145, 149, 150, 153, 157, 161, 165, 166, 167, 168, 169, 173, 179, 181, 182, 183, 193, 194, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 227, 228, 232, 233, 241, 255, 259, 351, 552, 679, 680, 682, 683, 767], "82it": [11, 19, 33, 34, 101, 106, 110, 193, 194, 207, 223, 225, 226, 228], "92it": [11, 13, 19, 34, 107, 110, 193, 207, 223, 224, 225, 227, 228], "00it": [11, 19, 34, 101, 107, 110, 194, 207, 223, 224, 225, 228, 232, 233], "03it": [11, 13, 19, 34, 44, 101, 106, 110, 193, 194, 223, 224, 228, 233], "79it": [11, 19, 33, 101, 107, 110, 179, 193, 194, 207, 223, 224, 227, 228, 231, 232, 233], "90it": [11, 13, 19, 33, 34, 101, 107, 110, 193, 194, 207, 223, 224, 227, 228], "15it": [11, 19, 33, 34, 101, 106, 110, 194, 207, 223, 224, 225, 227, 228], "36it": [11, 19, 101, 106, 107, 110, 193, 194, 207, 223, 224, 225, 227, 228, 232], "29": [11, 13, 19, 21, 24, 28, 34, 35, 41, 45, 47, 50, 54, 56, 79, 101, 106, 107, 111, 112, 121, 136, 142, 153, 155, 156, 157, 159, 168, 170, 182, 183, 184, 194, 201, 205, 207, 208, 209, 223, 224, 225, 227, 228, 231, 232, 233, 237, 241, 274, 872], "35it": [11, 13, 19, 33, 101, 106, 107, 110, 121, 193, 194, 207, 223, 224, 225, 227, 228, 233], "32": [11, 12, 13, 19, 21, 28, 34, 35, 41, 42, 43, 45, 47, 49, 56, 68, 70, 71, 72, 73, 79, 80, 92, 97, 101, 105, 106, 107, 108, 112, 118, 127, 134, 139, 140, 141, 145, 148, 150, 151, 157, 161, 165, 167, 168, 169, 170, 171, 175, 176, 179, 181, 182, 183, 184, 193, 194, 198, 199, 201, 202, 203, 205, 206, 207, 213, 218, 219, 220, 223, 224, 225, 227, 228, 231, 232, 233, 238, 241, 254, 261, 262, 385, 404, 446, 473, 474, 519, 567, 837, 848, 854, 857, 858, 872], "22it": [11, 13, 19, 34, 94, 101, 110, 193, 207, 223, 224, 227, 228, 232], "95it": [11, 19, 33, 34, 101, 106, 193, 194, 207, 223, 224, 225, 227, 228, 232], "39": [11, 12, 13, 19, 20, 21, 28, 35, 45, 47, 50, 79, 101, 106, 107, 110, 112, 139, 156, 157, 158, 168, 173, 179, 183, 184, 190, 199, 200, 207, 208, 211, 223, 224, 225, 227, 228, 231, 232, 233, 241, 274, 398, 847], "06it": [11, 19, 107, 110, 179, 193, 194, 207, 223, 224, 225, 227, 228], "74it": [11, 13, 19, 33, 101, 107, 110, 194, 207, 223, 224, 227, 228, 233], "21": [11, 13, 19, 28, 34, 35, 41, 44, 45, 46, 47, 64, 69, 79, 101, 106, 107, 112, 139, 144, 147, 149, 159, 163, 167, 168, 170, 171, 182, 187, 190, 193, 194, 207, 212, 223, 224, 225, 227, 228, 231, 233, 238, 240, 241, 258, 259, 261, 262, 263, 264, 268, 269, 270, 271, 272, 274, 275, 276, 277, 282, 294, 295, 355, 357, 399, 405, 412, 439, 444, 458, 473, 474, 507, 512, 532, 551, 552, 560, 562, 563, 566, 568, 569, 571, 580, 615, 623, 637, 641, 684, 691, 692, 694, 696, 756, 757, 767, 771, 772, 773, 774, 778, 779, 780, 782, 784, 791, 792, 794, 796, 797, 799, 801, 805, 822, 825, 829, 830, 848, 854], "37it": [11, 13, 19, 101, 106, 110, 193, 194, 223, 224, 227, 228, 232], "53it": [11, 13, 19, 101, 107, 110, 193, 194, 207, 223, 224, 225, 227, 228, 233], "52": [11, 19, 28, 35, 45, 47, 79, 80, 97, 101, 106, 107, 110, 112, 121, 133, 144, 150, 167, 168, 170, 179, 186, 190, 193, 194, 200, 207, 223, 224, 227, 228, 233, 241, 398, 678, 721, 724, 872], "11it": [11, 19, 33, 34, 106, 107, 193, 207, 223, 224, 227, 228, 231, 232], "63it": [11, 19, 33, 34, 101, 107, 207, 223, 224, 227, 228, 231, 233], "83it": [11, 19, 101, 106, 193, 194, 207, 223, 224, 225, 227, 228], "61": [11, 19, 30, 35, 42, 45, 47, 51, 56, 57, 70, 79, 81, 88, 91, 101, 106, 107, 110, 112, 114, 121, 125, 135, 145, 148, 165, 166, 167, 168, 169, 171, 175, 177, 178, 183, 184, 193, 194, 197, 198, 201, 204, 205, 206, 207, 208, 212, 213, 214, 215, 223, 224, 225, 227, 228, 231, 232, 233, 235, 241, 351], "34it": [11, 19, 33, 94, 101, 106, 110, 193, 194, 207, 224, 226, 227, 228], "65": [11, 12, 13, 19, 21, 34, 35, 45, 47, 79, 82, 101, 106, 107, 112, 133, 135, 142, 144, 155, 168, 169, 176, 177, 183, 194, 199, 206, 207, 223, 224, 225, 227, 228, 232, 233, 241, 588, 872], "64it": [11, 19, 34, 94, 101, 106, 193, 194, 207, 223, 224, 227, 228, 231, 232], "68": [11, 13, 19, 34, 35, 41, 45, 47, 79, 80, 88, 99, 101, 106, 107, 110, 112, 124, 139, 142, 144, 157, 168, 171, 175, 180, 183, 190, 193, 194, 207, 223, 224, 227, 228, 231, 241, 263, 264, 294, 295, 332, 351, 355, 356, 365, 366, 367, 398, 405, 412, 448, 449, 468, 470, 471, 530, 691, 779], "12it": [11, 19, 33, 34, 101, 106, 110, 193, 194, 207, 223, 224, 225, 227, 228], "71": [11, 12, 13, 19, 21, 35, 45, 79, 83, 89, 91, 101, 106, 107, 110, 112, 168, 175, 180, 181, 183, 193, 207, 223, 224, 225, 227, 228, 231, 232, 233], "48it": [11, 19, 34, 101, 110, 193, 207, 223, 227, 228], "74": [11, 13, 15, 19, 26, 35, 41, 45, 50, 78, 79, 80, 101, 106, 107, 110, 112, 133, 157, 167, 168, 169, 175, 180, 183, 190, 193, 194, 200, 205, 207, 220, 223, 224, 227, 228, 233, 673], "39it": [11, 13, 19, 34, 101, 106, 107, 110, 179, 193, 194, 223, 224, 227, 228, 233], "81": [11, 15, 16, 19, 34, 35, 79, 101, 105, 106, 107, 110, 112, 141, 155, 168, 179, 183, 193, 194, 206, 207, 209, 223, 224, 227, 228, 231, 236, 241, 649, 654, 706, 708, 718, 722, 872], "76it": [11, 13, 19, 33, 34, 101, 106, 110, 194, 207, 223, 227, 228, 231, 233], "21it": [11, 13, 19, 94, 101, 110, 193, 194, 207, 220, 223, 228, 231], "87": [11, 13, 18, 19, 33, 35, 47, 78, 91, 92, 94, 106, 107, 110, 112, 121, 122, 168, 193, 194, 205, 207, 208, 223, 224, 227, 228, 241, 409, 411, 423, 854], "27": [11, 12, 13, 19, 21, 24, 28, 33, 34, 35, 39, 41, 43, 45, 47, 50, 56, 79, 80, 101, 106, 107, 112, 121, 128, 132, 144, 149, 156, 157, 159, 163, 168, 170, 177, 179, 182, 184, 190, 194, 207, 223, 224, 225, 227, 228, 233, 241, 563, 829], "65it": [11, 34, 101, 102, 106, 110, 193, 194, 207, 223, 228, 233], "13it": [11, 13, 19, 33, 101, 102, 106, 110, 121, 193, 194, 207, 223, 224, 227, 228, 231, 232], "94": [11, 13, 19, 35, 47, 79, 101, 105, 106, 107, 110, 112, 136, 168, 169, 179, 182, 190, 193, 194, 205, 207, 223, 224, 225, 226, 227, 228, 231, 232, 233, 241, 854], "55it": [11, 13, 19, 33, 34, 101, 110, 193, 194, 223, 224, 228, 231], "66it": [11, 19, 34, 101, 106, 193, 194, 207, 223, 227, 228, 232, 233], "85it": [11, 19, 34, 101, 106, 110, 193, 194, 207, 223, 224, 227, 228, 232], "96it": [11, 13, 34, 106, 107, 110, 193, 194, 207, 223, 225, 228, 232], "88it": [11, 19, 34, 101, 106, 107, 194, 207, 223, 227, 228, 232], "87it": [11, 19, 101, 106, 107, 179, 193, 194, 207, 223, 227, 228], "99it": [11, 13, 19, 34, 106, 110, 193, 207, 223, 224, 227, 228, 233], "01it": [11, 13, 19, 34, 44, 101, 106, 110, 179, 194, 207, 223, 227, 228, 232], "59it": [11, 19, 101, 110, 193, 194, 207, 223, 225, 227, 228], "75it": [11, 19, 33, 34, 101, 106, 110, 193, 194, 223, 224, 225, 227, 228, 233], "29it": [11, 19, 33, 101, 110, 179, 193, 207, 223, 224, 225, 227, 228, 231, 232], "07it": [11, 13, 19, 44, 101, 110, 193, 194, 223, 225, 227, 228, 231], "40it": [11, 33, 34, 101, 102, 107, 193, 194, 207, 223, 225, 227, 228], "89it": [11, 13, 19, 34, 94, 101, 106, 110, 193, 194, 207, 223, 224, 225, 227, 228, 231, 233], "27it": [11, 13, 19, 33, 110, 193, 194, 207, 223, 224, 225, 227, 228], "18it": [11, 34, 102, 107, 110, 194, 207, 223, 228], "51it": [11, 13, 19, 34, 101, 193, 207, 223, 227, 228, 231], "43it": [11, 13, 19, 33, 34, 107, 110, 193, 194, 207, 223, 227, 228, 233], "84it": [11, 19, 34, 101, 106, 107, 110, 194, 207, 223, 224, 227, 228, 232], "08it": [11, 19, 33, 34, 101, 106, 107, 110, 193, 194, 207, 223, 224, 227, 228], "93it": [11, 19, 101, 106, 110, 121, 193, 207, 223, 228], "77it": [11, 19, 101, 106, 110, 193, 194, 227, 228, 233], "91it": [11, 13, 19, 34, 101, 179, 194, 207, 224, 227, 228, 231], "45it": [11, 19, 33, 34, 101, 107, 110, 193, 194, 207, 225, 228], "86it": [11, 19, 34, 101, 106, 107, 193, 207, 223, 224, 227, 228], "68it": [11, 13, 19, 34, 101, 110, 179, 193, 194, 207, 223, 224, 227, 228, 232, 233], "19it": [11, 13, 19, 33, 34, 101, 106, 107, 110, 193, 194, 207, 223, 224, 225, 227, 228], "50it": [11, 19, 33, 34, 101, 106, 107, 110, 193, 194, 207, 224, 227, 228, 233], "44it": [11, 19, 33, 34, 101, 110, 194, 207, 224, 228, 232], "80it": [11, 13, 19, 34, 106, 193, 194, 207, 224, 228, 233], "94it": [11, 19, 34, 101, 107, 193, 194, 223, 225, 228, 232, 233], "32it": [11, 19, 33, 101, 107, 110, 179, 193, 194, 207, 223, 224, 227, 228], "97it": [11, 13, 19, 33, 101, 106, 110, 193, 194, 223, 224, 226, 228, 232], "71it": [11, 19, 33, 101, 106, 110, 193, 194, 207, 223, 224, 225, 227, 228, 231, 233], "38it": [11, 13, 19, 33, 101, 110, 193, 194, 207, 223, 224, 227, 228, 232, 233], "61it": [11, 19, 94, 101, 107, 110, 193, 194, 207, 223, 225, 228, 232, 233], "47it": [11, 13, 19, 34, 101, 110, 193, 194, 207, 223, 224, 225, 227, 228, 231, 233], "28it": [11, 13, 19, 101, 102, 107, 110, 193, 207, 223, 227, 228, 232], "20it": [11, 19, 101, 106, 107, 110, 194, 207, 223, 225, 227, 228, 232], "02it": [11, 13, 19, 33, 34, 107, 110, 179, 194, 223, 227, 228], "46it": [11, 13, 19, 34, 94, 101, 107, 110, 193, 194, 223, 224, 227, 228, 232], "56it": [11, 13, 19, 101, 106, 107, 110, 194, 207, 223, 227, 228], "09it": [11, 13, 19, 44, 101, 106, 110, 179, 194, 207, 223, 224, 227, 228, 233], "70it": [11, 13, 19, 101, 102, 106, 194, 207, 223, 225, 227, 228, 232, 233], "54it": [11, 13, 19, 101, 106, 110, 193, 194, 207, 223, 224, 225, 228], "24it": [11, 19, 107, 110, 179, 193, 194, 207, 223, 225, 227, 228, 232, 233], "62it": [11, 13, 19, 34, 101, 106, 110, 193, 194, 207, 223, 224, 227, 228, 233], "30it": [11, 19, 34, 107, 110, 193, 207, 223, 227, 228, 233], "23it": [11, 13, 19, 101, 107, 110, 193, 194, 207, 224, 225, 227, 228], "60it": [11, 19, 101, 106, 110, 193, 194, 207, 223, 227, 228, 233], "investig": [11, 21, 143, 150, 190, 200, 233, 263, 264, 552, 779, 848], "patterns_": [11, 15, 18, 19, 21, 194, 405, 409, 411, 412, 413, 423, 553, 872], "inverse_transform": [11, 18, 194, 413, 414, 419, 420, 423, 553], "lookup": [11, 41, 133, 254, 261, 262, 263, 264, 266, 274, 457, 458, 473, 474, 641, 739, 827], "vertic": [11, 22, 24, 28, 38, 39, 41, 43, 48, 52, 53, 67, 114, 125, 132, 133, 135, 139, 141, 154, 157, 158, 159, 160, 174, 177, 180, 190, 198, 201, 206, 207, 212, 215, 220, 223, 224, 231, 232, 233, 257, 261, 262, 263, 264, 267, 268, 269, 272, 273, 274, 275, 276, 277, 281, 282, 294, 295, 355, 357, 439, 452, 461, 463, 464, 473, 474, 505, 507, 528, 529, 614, 642, 655, 657, 658, 660, 661, 662, 663, 664, 666, 667, 668, 679, 680, 682, 683, 684, 687, 688, 738, 739, 753, 758, 763, 769, 777, 792, 797, 802, 822, 827, 854, 857, 872], "lh_vertno": [11, 114, 174, 272, 275, 655], "empti": [11, 15, 27, 120, 128, 139, 141, 149, 160, 161, 165, 168, 170, 171, 183, 184, 190, 199, 203, 204, 206, 208, 212, 218, 233, 255, 258, 261, 262, 263, 264, 266, 270, 272, 285, 299, 307, 316, 323, 345, 346, 351, 356, 373, 374, 375, 378, 379, 381, 386, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 432, 453, 473, 474, 481, 485, 488, 489, 494, 498, 518, 543, 544, 545, 549, 550, 552, 553, 555, 562, 563, 571, 580, 581, 604, 612, 623, 633, 637, 673, 679, 688, 692, 694, 695, 696, 709, 727, 739, 748, 755, 763, 764, 769, 770, 776, 778, 786, 792, 793, 827, 831, 847, 854, 857, 872], "stc_feat": 11, "sourceestim": [11, 22, 26, 31, 35, 37, 40, 46, 59, 60, 92, 154, 157, 164, 165, 180, 185, 186, 219, 220, 231, 232, 233, 260, 263, 264, 267, 268, 269, 271, 273, 274, 275, 276, 277, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 357, 439, 452, 468, 469, 470, 471, 507, 519, 520, 521, 522, 523, 525, 528, 529, 534, 535, 614, 620, 633, 642, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 677, 684, 687, 688, 739, 753, 797, 798, 827, 849, 851, 862, 872], "ab": [11, 19, 35, 38, 40, 47, 59, 60, 67, 95, 117, 118, 125, 134, 150, 178, 182, 190, 193, 200, 223, 225, 226, 231, 232, 233, 238, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 554, 708, 718, 774, 854, 872], "tstep": [11, 22, 31, 46, 59, 88, 92, 93, 180, 220, 231, 232, 233, 268, 269, 272, 275, 276, 277, 356, 471, 507, 552, 642, 659, 678, 684, 707, 715, 872], "transpar": [11, 58, 99, 133, 171, 180, 198, 238, 253, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 739, 758, 775, 792, 797, 802, 803, 804, 805, 853, 872], "10it": [11, 19, 34, 101, 110, 179, 193, 194, 207, 223, 227, 228], "04it": [11, 13, 34, 101, 106, 110, 194, 207, 223, 225, 227, 228], "98it": [11, 13, 19, 34, 101, 106, 107, 110, 193, 194, 207, 223, 224, 227, 228, 231, 233], "16it": [11, 13, 19, 33, 34, 101, 106, 193, 207, 220, 223, 225, 227, 228, 231, 232], "67it": [11, 13, 19, 33, 101, 106, 110, 193, 194, 207, 227, 228], "31it": [11, 13, 19, 34, 101, 107, 110, 193, 194, 207, 223, 227, 228], "78it": [11, 13, 19, 101, 110, 193, 194, 207, 223, 225, 227, 228, 231, 232, 233], "17it": [11, 13, 101, 107, 110, 179, 193, 207, 223, 224, 228, 233], "50724321": 11, "37721471": 11, "59502306": 11, "963": [11, 13, 20, 194, 207, 228], "311": [11, 20, 168, 223, 228], "decoding_spatio_temporal_sourc": [11, 20], "comodul": [12, 412], "allow": [12, 19, 40, 43, 44, 46, 60, 92, 102, 110, 113, 114, 118, 133, 136, 139, 140, 141, 142, 143, 145, 149, 150, 156, 157, 159, 165, 168, 169, 171, 177, 188, 194, 200, 205, 212, 213, 215, 223, 224, 225, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 268, 269, 272, 274, 275, 276, 277, 288, 289, 292, 305, 309, 332, 337, 344, 351, 368, 405, 411, 412, 413, 438, 446, 463, 472, 473, 474, 476, 488, 489, 493, 521, 523, 526, 528, 529, 530, 534, 552, 553, 557, 571, 578, 598, 604, 610, 628, 641, 657, 659, 678, 692, 694, 695, 696, 719, 720, 722, 723, 733, 737, 760, 769, 771, 782, 784, 792, 827, 829, 831, 849, 853, 854, 857, 860, 872], "composit": [12, 187, 194, 268, 269, 272, 275, 276, 277, 739, 797, 802, 854], "orthogon": [12, 112, 155, 159, 177, 194, 204, 205, 208, 294, 295, 552, 720, 723, 854, 857, 860, 872], "spatial": [12, 14, 15, 17, 18, 20, 27, 31, 32, 33, 34, 36, 47, 56, 69, 70, 78, 81, 82, 88, 111, 117, 119, 150, 151, 154, 155, 161, 174, 197, 198, 200, 204, 205, 215, 218, 220, 223, 225, 228, 231, 232, 233, 237, 238, 241, 258, 261, 262, 263, 264, 265, 266, 267, 270, 272, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 309, 325, 351, 357, 360, 361, 369, 405, 406, 412, 413, 419, 421, 423, 434, 473, 474, 485, 486, 488, 513, 518, 530, 531, 534, 549, 550, 551, 552, 553, 566, 579, 580, 601, 607, 610, 612, 646, 649, 654, 662, 663, 664, 665, 669, 679, 680, 682, 683, 692, 694, 696, 711, 729, 739, 756, 771, 773, 778, 779, 782, 791, 794, 799, 801, 827, 847, 848, 851, 854, 872], "maxim": [12, 60, 86, 141, 159, 175, 176, 179, 182, 194, 200, 202, 241, 269, 275, 276, 277, 294, 295, 413, 552, 578, 662, 663, 664, 666, 667, 678, 803, 854, 872], "csp": [12, 17, 20, 27, 194, 261, 266, 309, 325, 360, 369, 409, 412, 434, 488, 549, 553, 692, 848, 862, 872], "variabl": [12, 16, 31, 43, 99, 101, 110, 115, 140, 142, 149, 154, 167, 169, 194, 197, 200, 202, 204, 212, 214, 227, 228, 233, 241, 254, 259, 261, 262, 267, 268, 269, 271, 272, 275, 276, 277, 300, 304, 305, 306, 309, 357, 362, 363, 364, 368, 371, 373, 374, 375, 376, 378, 379, 382, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 412, 422, 424, 434, 446, 447, 453, 455, 457, 461, 463, 464, 465, 466, 467, 473, 474, 492, 505, 509, 511, 538, 551, 552, 571, 577, 595, 597, 605, 609, 615, 624, 629, 630, 631, 632, 639, 640, 641, 655, 658, 669, 679, 680, 681, 682, 683, 687, 688, 704, 731, 739, 755, 757, 767, 769, 786, 792, 797, 802, 803, 805, 812, 822, 827, 829, 836, 837, 847, 851, 854, 858, 872], "fluctuat": [12, 140, 141, 150, 197, 199, 205, 206, 220, 263, 264, 779], "electromyogram": [12, 872], "cortico": 12, "muscular": [12, 197, 203], "coher": [12, 32, 33, 101, 105, 179, 220, 241, 286, 287, 288, 289, 294, 692, 693, 719, 720, 721, 722, 723, 724, 765, 827, 838, 848], "fieldtrip": [12, 155, 190, 200, 206, 223, 225, 231, 319, 326, 492, 605, 609, 719, 720, 722, 723, 854, 860, 872], "fieldtrip_cmc": [12, 21], "ridg": [12, 19, 193, 411, 417], "kfold": [12, 16, 19, 351, 356, 422, 872], "cross_val_predict": [12, 872], "subjectcmc": [12, 21], "emg": [12, 81, 136, 168, 188, 194, 212, 218, 241, 261, 262, 263, 264, 271, 308, 369, 412, 438, 473, 474, 485, 488, 498, 549, 552, 692, 694, 695, 696, 769, 792, 848, 854, 857, 872], "pick_channel": [12, 45, 69, 71, 84, 98, 113, 125, 139, 140, 148, 150, 168, 169, 212, 220, 225, 226, 227, 258, 261, 262, 263, 264, 265, 473, 474, 546, 692, 693, 694, 695, 696, 862, 872], "emglft": 12, "ref_meg": [12, 21, 73, 117, 121, 168, 261, 262, 263, 264, 271, 308, 369, 473, 474, 549, 550, 692, 694, 695, 696, 769, 792, 872], "make_fixed_length_ev": [12, 21, 165, 167, 213, 218, 356, 525, 827, 862, 872], "durat": [12, 21, 49, 65, 69, 70, 72, 73, 74, 75, 79, 80, 81, 88, 91, 92, 121, 125, 136, 139, 140, 143, 145, 148, 149, 150, 165, 166, 167, 190, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 220, 231, 232, 233, 253, 255, 261, 262, 263, 264, 271, 272, 280, 338, 340, 354, 356, 405, 407, 411, 412, 416, 417, 434, 441, 443, 444, 446, 473, 474, 490, 512, 513, 552, 554, 555, 557, 571, 580, 588, 642, 644, 684, 706, 769, 778, 786, 792, 827, 831, 872], "meg_epoch": [12, 18], "detrend": [12, 108, 134, 209, 256, 261, 263, 264, 512, 603, 872], "emg_epoch": 12, "var": [12, 47, 69, 170, 205, 371, 453, 685], "oa": [12, 21, 82, 182, 351], "validaton": 12, "first_samp": [12, 69, 74, 136, 165, 167, 183, 212, 213, 214, 255, 256, 261, 262, 266, 271, 280, 359, 433, 434, 446, 472, 473, 474, 493, 513, 547, 552, 581, 606, 607, 642, 657, 772, 786, 792, 817, 827, 857, 872], "set_xlabel": [12, 13, 19, 21, 22, 45, 69, 94, 102, 111, 131, 143, 145, 171, 182, 194, 204, 226, 227, 228], "set_titl": [12, 13, 22, 45, 69, 70, 94, 97, 110, 112, 118, 125, 133, 135, 143, 193, 194, 208, 209, 226, 227, 228, 237, 238], "78": [12, 19, 21, 34, 35, 47, 51, 78, 79, 101, 112, 121, 156, 157, 165, 168, 175, 178, 184, 194, 207, 212, 223, 224, 225, 227, 228, 233, 241, 297, 398, 854], "62": [12, 13, 16, 19, 21, 28, 34, 35, 45, 47, 56, 69, 79, 101, 106, 110, 112, 135, 168, 179, 193, 194, 207, 223, 224, 226, 227, 228, 231, 241], "258": [12, 21, 121, 157, 165, 168, 194, 223], "114": [12, 21, 35, 79, 150, 168, 180, 207, 223, 228, 872], "12000": [12, 21], "911610": [12, 21], "191": [12, 21, 168, 223, 227, 228], "180000": 12, "150": [12, 35, 42, 45, 59, 72, 73, 75, 79, 80, 92, 104, 109, 118, 121, 140, 141, 145, 150, 157, 159, 165, 168, 179, 190, 199, 203, 205, 207, 228, 253, 274, 710, 872], "793": [12, 143, 228], "661": [12, 200, 224], "1057": 12, "881": [12, 228, 274], "183": [12, 16, 20, 168, 223, 228], "1801": 12, "contribut": [12, 19, 45, 67, 148, 150, 179, 225, 228, 252, 261, 262, 434, 567, 648, 829, 835, 848, 850, 853, 872], "sven": [12, 18, 19, 194, 241, 409, 411, 412, 413, 423], "d\u00e4hne": [12, 18, 19, 194, 241, 409, 411, 412, 423], "frank": [12, 18, 19, 74, 194, 203, 241, 409, 411, 412, 423, 552, 587], "meineck": [12, 18, 19, 194, 241, 409, 411, 412, 423], "stefan": [12, 18, 19, 33, 111, 125, 194, 203, 225, 228, 231, 237, 241, 409, 411, 412, 413, 423, 566, 859, 872], "hauf": [12, 18, 19, 194, 241, 409, 411, 412, 413, 423], "johann": [12, 194, 241, 412, 872], "h\u00f6hne": [12, 194, 241, 412], "michael": [12, 19, 99, 193, 194, 202, 203, 241, 351, 405, 411, 412, 551, 552, 584, 595, 706, 708, 718, 722, 848, 854, 872], "tangermann": [12, 194, 203, 241, 412], "klau": [12, 194, 203, 241, 405, 412, 552], "robert": [12, 74, 179, 193, 194, 203, 228, 241, 405, 411, 412, 679, 680, 682, 683, 859, 872], "m\u00fcller": [12, 73, 194, 203, 241, 405, 412, 552], "vadim": [12, 21, 194, 241, 412, 413], "nikulin": [12, 21, 194, 241, 412, 413], "novel": [12, 21, 194, 241, 329, 412, 413, 860], "framework": [12, 35, 194, 241, 412, 468, 843, 854], "amplitud": [12, 19, 35, 37, 39, 40, 45, 47, 53, 59, 79, 80, 91, 92, 93, 114, 121, 125, 130, 134, 139, 140, 143, 144, 161, 165, 171, 174, 179, 182, 183, 189, 193, 194, 197, 198, 200, 203, 204, 205, 207, 209, 220, 241, 253, 256, 259, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 287, 295, 338, 339, 340, 344, 356, 412, 448, 470, 471, 473, 474, 514, 523, 534, 552, 554, 568, 569, 602, 644, 645, 649, 653, 654, 678, 679, 694, 695, 696, 708, 718, 739, 766, 767, 780, 793, 827, 838, 851, 854, 857, 872], "neuron": [12, 21, 136, 143, 193, 194, 197, 241, 294, 399, 411, 412, 413, 519, 827, 848, 854], "oscil": [12, 21, 67, 92, 111, 112, 194, 197, 201, 220, 241, 412, 413, 645, 706, 708, 718, 722], "behavior": [12, 143, 168, 187, 194, 197, 199, 200, 205, 241, 254, 261, 262, 271, 412, 446, 513, 517, 519, 580, 607, 641, 809, 831, 850, 851, 853, 860], "111": [12, 32, 35, 46, 111, 125, 144, 168, 194, 217, 227, 241, 412], "122": [12, 16, 159, 168, 169, 175, 194, 203, 223, 241, 332, 406, 412, 421, 854, 872], "2013": [12, 16, 18, 19, 43, 59, 79, 80, 127, 143, 168, 194, 241, 267, 272, 273, 279, 357, 406, 409, 411, 412, 421, 423, 429, 471, 557, 584, 649, 654, 846], "07": [12, 20, 35, 46, 56, 59, 79, 82, 83, 100, 101, 128, 132, 159, 169, 175, 178, 179, 182, 183, 184, 190, 194, 207, 225, 228, 233, 241, 318, 412, 652, 854], "079": [12, 135, 163, 194, 241, 412], "978": [12, 20, 59, 111, 150, 200, 203, 220, 241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 294, 295, 351, 471, 473, 474, 552, 674, 692, 695], "345": [12, 20, 110, 168, 194, 207, 226, 228, 230], "decoding_spoc_cmc": [12, 20], "illustr": [13, 27, 28, 67, 68, 88, 92, 93, 123, 132, 137, 141, 145, 149, 150, 164, 165, 170, 187, 197, 198, 199, 201, 203, 205, 209, 212, 223, 227, 233, 237, 473, 474, 827, 847, 854], "discriminatori": 13, "given": [13, 16, 19, 26, 31, 69, 78, 92, 93, 110, 118, 119, 136, 142, 143, 148, 149, 150, 157, 159, 161, 164, 165, 168, 169, 170, 174, 177, 179, 185, 186, 187, 193, 194, 199, 200, 203, 204, 205, 208, 212, 213, 215, 223, 225, 227, 228, 236, 238, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 276, 277, 285, 294, 295, 299, 307, 309, 313, 314, 315, 324, 326, 327, 351, 356, 362, 363, 364, 365, 373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 412, 413, 415, 420, 421, 425, 426, 430, 440, 441, 444, 446, 448, 450, 461, 468, 470, 471, 472, 473, 474, 512, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 530, 535, 536, 551, 552, 553, 554, 555, 557, 563, 566, 567, 568, 569, 571, 574, 577, 580, 586, 588, 594, 595, 600, 603, 637, 641, 646, 656, 659, 660, 672, 674, 678, 679, 680, 682, 683, 685, 687, 690, 692, 693, 694, 695, 696, 700, 701, 702, 703, 704, 705, 708, 710, 712, 716, 718, 723, 727, 728, 731, 739, 743, 745, 755, 756, 757, 763, 767, 769, 770, 771, 773, 774, 775, 776, 778, 783, 786, 790, 792, 793, 794, 795, 797, 799, 801, 802, 806, 807, 827, 829, 831, 848, 851, 853, 854, 857, 872], "subsequ": [13, 68, 82, 110, 111, 139, 141, 144, 156, 160, 165, 194, 198, 201, 203, 212, 231, 241, 261, 262, 473, 474, 552, 555, 562, 571, 684, 827, 834, 847, 851, 854, 872], "accur": [13, 26, 41, 44, 45, 50, 107, 133, 134, 157, 158, 175, 181, 187, 194, 202, 203, 205, 208, 254, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 448, 473, 474, 511, 552, 729, 778, 805, 812, 847, 872], "generalizingestim": [13, 194, 422, 862, 872], "events_fnam": 13, "auditori": [13, 15, 30, 31, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 60, 61, 65, 70, 77, 78, 84, 85, 92, 110, 114, 117, 118, 122, 125, 130, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 164, 165, 167, 171, 174, 175, 177, 178, 179, 180, 181, 191, 192, 193, 194, 200, 205, 213, 219, 227, 231, 233, 236, 238, 241, 254, 255, 256, 258, 261, 262, 263, 264, 266, 267, 272, 306, 350, 352, 356, 358, 360, 411, 432, 446, 473, 486, 509, 510, 515, 517, 518, 519, 530, 565, 584, 604, 606, 612, 618, 625, 640, 695, 739, 872], "050": [13, 79, 139, 141, 148, 168, 179, 198, 206, 207, 220, 241], "faster": [13, 18, 44, 118, 139, 182, 194, 203, 238, 241, 253, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 277, 357, 360, 445, 461, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 512, 552, 554, 679, 680, 682, 683, 829, 834, 835, 837, 860, 872], "constructor": [13, 86, 139, 141, 150, 164, 165, 171, 199, 201, 204, 214, 218, 221, 256, 268, 269, 272, 275, 276, 277, 472, 553, 568, 797, 802, 831, 851, 872], "497": [13, 14, 15, 75, 86, 97, 119, 131, 177, 203, 228, 241, 274], "310": [13, 14, 15, 35, 75, 79, 86, 97, 107, 119, 131, 168, 203, 207, 228], "lbfg": [13, 18, 194], "time_gen": [13, 194], "experiment": [13, 16, 45, 69, 70, 72, 75, 79, 80, 81, 88, 91, 125, 139, 140, 145, 148, 149, 150, 152, 164, 166, 167, 168, 179, 194, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 223, 241, 261, 262, 263, 264, 266, 406, 421, 473, 474, 475, 519, 571, 580, 581, 644, 645, 652, 692, 695, 827, 847, 854, 858, 872], "59": [13, 15, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 54, 55, 56, 58, 59, 60, 68, 70, 75, 77, 79, 81, 88, 90, 91, 92, 101, 106, 109, 110, 112, 114, 116, 119, 125, 129, 140, 141, 144, 149, 150, 151, 155, 157, 161, 168, 171, 175, 177, 181, 183, 194, 197, 198, 203, 204, 205, 207, 211, 219, 222, 223, 224, 225, 227, 228, 232, 233, 236, 241, 274, 426, 563, 571, 580, 685, 686], "05it": [13, 19, 33, 34, 94, 193, 194, 207, 223, 224, 227, 228], "54": [13, 19, 28, 34, 35, 41, 45, 47, 79, 101, 102, 104, 106, 112, 121, 143, 150, 157, 168, 190, 192, 193, 194, 207, 208, 223, 224, 227, 228, 241, 274, 872], "83": [13, 19, 35, 40, 47, 79, 101, 106, 110, 112, 168, 170, 178, 193, 194, 199, 202, 207, 208, 223, 224, 227, 228, 241, 332, 551, 595, 679, 680, 682, 683], "1225": [13, 194], "408": [13, 35, 79, 184, 223, 228], "34": [13, 19, 28, 34, 35, 41, 45, 47, 67, 70, 79, 101, 102, 106, 107, 110, 112, 114, 121, 128, 138, 144, 168, 170, 180, 184, 194, 200, 201, 207, 208, 209, 211, 219, 223, 224, 225, 227, 228, 232, 233, 241, 561, 673], "501": [13, 167, 201, 207], "72it": [13, 19, 33, 34, 101, 107, 110, 194, 207, 223, 224, 225, 227, 228, 232, 233], "533": [13, 228], "557": [13, 228, 241, 398], "41it": [13, 19, 33, 34, 101, 106, 110, 193, 194, 223, 225, 227, 228, 232, 233], "96": [13, 15, 18, 19, 44, 47, 80, 101, 105, 106, 110, 111, 112, 133, 161, 168, 170, 179, 183, 194, 204, 205, 207, 223, 224, 225, 226, 227, 228, 232, 233, 241, 263, 264, 409, 411, 423, 779, 851], "571": [13, 194, 228], "116": [13, 168, 223, 228], "574": [13, 228], "136": [13, 56, 165, 168, 170, 194, 227, 228, 274], "576": [13, 228], "157": [13, 24, 121, 136, 150, 168, 169, 187, 207, 209, 223, 228, 233, 241, 335, 652, 872], "582": [13, 207, 228, 241], "177": [13, 35, 144, 168, 194, 207, 223, 228, 241, 679, 680, 682, 683], "583": [13, 190, 192, 228, 241, 413], "198": [13, 35, 168, 183, 207, 223, 227, 228, 233], "588": [13, 35, 228], "220": [13, 16, 20, 79, 136, 168, 207, 227, 228], "595": [13, 228, 241], "259": [13, 83, 168, 178, 186, 207, 223, 228, 241, 854], "591": [13, 228], "597": [13, 141, 147, 241, 413], "594": [13, 208, 211, 228], "341": [13, 104, 106, 110, 168, 228, 517], "596": [13, 207, 228], "360": [13, 40, 48, 49, 54, 55, 58, 59, 79, 80, 91, 92, 119, 151, 161, 168, 171, 177, 190, 193, 207, 228, 237], "593": [13, 228, 230], "49it": [13, 19, 34, 101, 110, 193, 194, 207, 223, 224, 225, 226, 228], "380": [13, 79, 197, 207, 211, 228], "402": [13, 19, 35, 79, 143, 223, 857], "421": [13, 70, 105, 108, 141, 161, 175, 181, 202, 219, 226, 227, 228], "441": [13, 35, 228, 241, 552, 578], "73it": [13, 19, 110, 193, 194, 207, 223, 225, 227, 228, 231, 233], "38": [13, 19, 28, 34, 35, 45, 47, 70, 72, 79, 80, 89, 91, 92, 94, 101, 106, 110, 112, 125, 139, 140, 141, 143, 157, 168, 179, 183, 190, 193, 194, 199, 205, 207, 211, 223, 224, 225, 227, 228, 232, 233, 563], "463": [13, 274], "598": [13, 194, 209, 211, 228], "482": [13, 19, 223, 228], "542": [13, 228], "564": [13, 228, 241, 398], "585": [13, 228, 241], "599": [13, 228], "605": [13, 194, 228], "627": [13, 35, 207], "602": [13, 167, 201, 228, 857], "648": [13, 148, 228], "603": [13, 80, 194, 228], "669": [13, 113, 194], "604": [13, 89, 93, 207, 228], "56": [13, 15, 19, 32, 35, 45, 47, 74, 78, 79, 80, 86, 101, 102, 106, 110, 112, 122, 128, 136, 150, 159, 168, 170, 171, 175, 179, 190, 193, 194, 207, 209, 223, 224, 227, 228, 241, 255, 405, 553, 679, 680, 682, 683], "689": [13, 207, 228], "711": [13, 194, 206, 207, 228, 241, 261, 262, 263, 264, 473, 474, 637], "733": [13, 89, 160, 228], "608": [13, 176], "58it": [13, 19, 101, 106, 110, 193, 194, 207, 223, 224, 225, 227, 228, 231, 233], "754": [13, 192, 228, 241, 847], "609": [13, 56, 150, 228, 241], "776": [13, 228], "611": [13, 59, 241, 351, 471], "797": [13, 143, 151, 153, 228], "67": [13, 19, 33, 35, 47, 57, 79, 80, 101, 105, 106, 110, 112, 114, 136, 148, 157, 168, 171, 175, 177, 180, 190, 193, 194, 207, 223, 224, 225, 227, 228, 232, 233, 241, 519, 872], "816": [13, 194, 228], "836": [13, 194, 228], "607": [13, 19, 228], "854": [13, 228], "871": [13, 194, 228], "890": [13, 79, 207, 228, 241, 274], "907": [13, 194, 228], "590": [13, 68, 79, 228], "927": [13, 63, 66, 228], "946": 13, "584": 13, "26it": [13, 19, 94, 106, 107, 110, 193, 194, 207, 223, 224, 227, 228, 231], "983": [13, 228], "1004": [13, 857], "586": [13, 228], "1026": [13, 41, 107, 847], "589": 13, "1047": [13, 193], "1068": [13, 193], "592": [13, 194], "89": [13, 19, 34, 35, 47, 70, 77, 78, 79, 80, 101, 106, 110, 112, 135, 168, 183, 190, 193, 194, 198, 207, 223, 224, 227, 228, 241, 561, 854], "1089": [13, 193], "1110": 13, "1131": [13, 32, 34, 168, 220], "1152": [13, 241], "1174": 13, "600": [13, 35, 40, 58, 59, 70, 73, 79, 81, 88, 91, 124, 125, 132, 154, 155, 159, 166, 167, 177, 178, 179, 183, 190, 197, 198, 201, 204, 205, 206, 207, 208, 212, 213, 214, 215, 220, 228, 241, 471, 739, 872], "1192": 13, "1214": 13, "vmax": [13, 19, 69, 86, 105, 110, 112, 114, 115, 122, 135, 140, 159, 175, 193, 194, 208, 209, 223, 225, 226, 237, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 739, 756, 770, 771, 774, 778, 782, 791, 794, 799, 800, 801, 872], "xaxi": [13, 125], "set_ticks_posit": 13, "bottom": [13, 69, 72, 73, 110, 118, 125, 139, 145, 160, 190, 214, 215, 223, 228, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 752, 769, 779, 797, 802, 827, 872], "r\u00e9mi": [13, 194, 241], "stanisla": [13, 16, 136, 194, 241, 406, 421, 872], "dehaen": [13, 16, 194, 241, 406, 421], "dynam": [13, 21, 27, 32, 33, 69, 92, 103, 104, 110, 165, 179, 194, 200, 202, 203, 220, 241, 261, 264, 267, 272, 284, 286, 287, 288, 289, 294, 413, 444, 446, 473, 474, 519, 552, 553, 560, 671, 792, 827, 838, 848, 854, 857, 872], "represent": [13, 17, 20, 27, 43, 44, 92, 101, 110, 113, 139, 148, 159, 165, 167, 168, 169, 171, 174, 189, 194, 203, 212, 213, 231, 232, 233, 236, 237, 241, 261, 262, 263, 264, 271, 273, 357, 360, 440, 446, 473, 474, 503, 549, 552, 692, 694, 696, 719, 720, 722, 723, 724, 747, 783, 827, 838, 848, 857, 872], "tempor": [13, 16, 19, 27, 46, 59, 76, 83, 103, 104, 111, 112, 134, 135, 136, 139, 141, 145, 150, 164, 179, 183, 195, 196, 199, 200, 201, 202, 205, 208, 214, 223, 225, 226, 227, 228, 234, 235, 241, 256, 261, 263, 264, 266, 272, 273, 274, 351, 357, 411, 417, 425, 428, 431, 445, 446, 448, 469, 470, 471, 473, 474, 512, 516, 518, 519, 533, 535, 536, 549, 552, 554, 567, 580, 587, 588, 603, 607, 618, 620, 622, 627, 647, 648, 649, 650, 651, 652, 653, 654, 664, 666, 667, 668, 672, 673, 675, 682, 683, 684, 705, 708, 718, 719, 720, 721, 722, 723, 724, 739, 848, 849, 854, 872], "trend": [13, 65, 111, 140, 194, 241], "cognit": [13, 42, 43, 194, 200, 241, 252, 273, 357, 520, 859], "203": [13, 35, 40, 42, 49, 50, 58, 59, 78, 85, 90, 91, 92, 97, 109, 114, 117, 119, 121, 122, 129, 141, 149, 151, 155, 156, 157, 161, 168, 169, 171, 176, 177, 178, 179, 194, 198, 204, 205, 207, 208, 220, 223, 227, 241], "tic": [13, 194, 241], "737": [13, 20, 194, 228], "128": [13, 15, 19, 20, 24, 41, 50, 71, 83, 86, 118, 128, 157, 159, 167, 168, 169, 170, 220, 227, 228, 230, 261, 262, 404, 757, 848, 872], "decoding_time_generalization_condit": [13, 20], "Then": [14, 19, 45, 80, 107, 111, 113, 133, 134, 135, 139, 155, 160, 180, 189, 190, 205, 228, 238, 263, 264, 314, 430, 566, 687, 775, 831, 835, 842, 851, 854], "virtual": [14, 69, 97, 150, 203, 206, 261, 262, 263, 264, 311, 426, 473, 474, 579, 634, 637, 827, 829, 839, 872], "output": [14, 19, 32, 35, 40, 44, 46, 47, 59, 111, 112, 120, 125, 133, 134, 139, 142, 148, 150, 154, 160, 162, 163, 164, 167, 170, 171, 187, 193, 194, 200, 201, 203, 204, 205, 212, 213, 215, 218, 223, 225, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 411, 415, 416, 417, 418, 421, 422, 424, 426, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 455, 456, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 547, 548, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 597, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 638, 640, 641, 643, 644, 645, 646, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 679, 680, 681, 682, 683, 684, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 711, 714, 715, 719, 720, 722, 723, 724, 725, 728, 729, 734, 738, 739, 743, 747, 755, 757, 764, 767, 771, 772, 773, 774, 779, 780, 782, 783, 784, 789, 790, 792, 793, 795, 796, 797, 798, 802, 803, 804, 807, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 835, 836, 839, 851, 854, 855, 857, 872], "asish": [14, 872], "asishrocks95": 14, "decod": [14, 16, 19, 20, 21, 151, 164, 165, 167, 193, 195, 196, 241, 258, 261, 263, 264, 266, 272, 309, 325, 351, 360, 369, 434, 446, 473, 481, 486, 488, 496, 513, 518, 519, 521, 530, 533, 549, 553, 601, 607, 612, 692, 739, 848, 862, 872], "unsupervisedspatialfilt": [14, 862, 872], "fastica": [14, 75, 203, 552], "aud_l": [14, 15, 18, 42, 176, 227, 261, 262, 769, 772], "vis_l": [14, 15, 18, 42, 227], "ie": [14, 53, 108, 258, 268, 272, 276, 597, 708, 718, 739, 764, 797, 798], "pca_data": 14, "evokedarrai": [14, 15, 16, 18, 21, 82, 98, 107, 182, 187, 194, 218, 228, 262, 263, 474, 525, 526, 609, 611, 827, 862, 872], "window_titl": [14, 190, 263, 264, 773], "ica_data": 14, "ev1": [14, 872], "886": [14, 20, 228], "129": [14, 35, 61, 119, 126, 168, 169, 228, 236, 241], "decoding_unsupervised_spatial_filt": [14, 20], "erp": [15, 97, 99, 115, 126, 152, 153, 164, 171, 194, 197, 198, 200, 203, 205, 206, 241, 261, 263, 264, 266, 311, 350, 462, 473, 543, 552, 553, 607, 637, 678, 763, 782, 784, 811, 838, 858, 860, 872], "concaten": [15, 69, 73, 79, 110, 136, 150, 167, 187, 190, 202, 204, 212, 238, 261, 262, 263, 264, 358, 359, 360, 405, 414, 470, 473, 474, 555, 570, 571, 580, 657, 781, 872], "rescal": [15, 63, 111, 112, 365, 366, 367, 569, 692, 695, 799, 862, 872], "fed": 15, "classification_report": [15, 136], "confusion_matrix": [15, 136], "minmaxscal": 15, "n_filter": 15, "penalti": [15, 40, 46, 241, 470, 471, 860], "l1": [15, 40, 470, 471], "pred": 15, "report": [15, 136, 164, 172, 173, 208, 224, 238, 241, 261, 262, 263, 266, 286, 288, 429, 446, 473, 474, 479, 541, 552, 569, 571, 585, 610, 691, 708, 718, 722, 769, 786, 792, 829, 831, 847, 850, 851, 852, 854, 860, 862, 872], "target_nam": [15, 136], "cm_normal": 15, "astyp": [15, 71, 133, 144, 159, 190, 193, 201, 212], "float": [15, 19, 31, 40, 65, 91, 113, 142, 143, 144, 148, 159, 168, 187, 193, 203, 212, 214, 223, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 287, 294, 295, 301, 302, 309, 318, 323, 325, 327, 338, 339, 340, 341, 344, 350, 351, 354, 355, 356, 357, 362, 367, 369, 405, 407, 409, 410, 411, 412, 413, 416, 417, 418, 422, 426, 429, 431, 433, 434, 440, 441, 443, 444, 445, 446, 448, 449, 450, 457, 463, 464, 468, 470, 471, 472, 473, 474, 483, 484, 496, 505, 507, 508, 512, 513, 515, 516, 519, 520, 521, 522, 523, 525, 526, 530, 531, 532, 534, 535, 536, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 580, 582, 584, 585, 586, 588, 589, 598, 623, 629, 630, 631, 632, 641, 642, 647, 648, 649, 650, 651, 652, 653, 654, 657, 659, 662, 663, 664, 666, 667, 670, 671, 674, 675, 676, 678, 679, 680, 682, 683, 684, 685, 686, 687, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 710, 711, 716, 718, 719, 720, 721, 722, 723, 724, 728, 729, 739, 743, 744, 752, 756, 758, 759, 763, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 789, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 807, 812, 825, 857, 872], "sum": [15, 28, 31, 41, 47, 60, 71, 80, 107, 111, 112, 115, 136, 143, 148, 160, 161, 167, 174, 182, 183, 200, 223, 224, 228, 238, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 277, 283, 350, 355, 473, 474, 534, 552, 557, 644, 679, 680, 682, 683, 687, 693, 694, 696, 771, 851, 854, 857, 872], "imshow": [15, 16, 22, 69, 105, 113, 114, 125, 133, 135, 145, 159, 171, 194, 223, 225, 226, 227, 228, 261, 262, 263, 264, 318, 692, 740, 742, 777, 800, 809], "nearest": [15, 26, 78, 114, 118, 135, 139, 144, 159, 167, 181, 212, 223, 258, 261, 262, 263, 264, 267, 268, 269, 270, 272, 274, 275, 276, 277, 279, 357, 362, 405, 412, 473, 474, 551, 552, 566, 687, 692, 693, 694, 695, 696, 704, 728, 739, 756, 757, 763, 771, 778, 782, 791, 794, 799, 801, 854, 857, 872], "blue": [15, 54, 55, 78, 81, 110, 130, 134, 141, 150, 155, 171, 174, 176, 177, 180, 189, 205, 231, 232, 238, 259, 739, 754, 755, 763, 767, 827], "tick_mark": 15, "ytick": [15, 125, 193, 200, 223], "precis": [15, 47, 69, 88, 133, 136, 156, 183, 200, 201, 208, 212, 220, 255, 261, 262, 267, 294, 295, 446, 473, 474, 580, 648, 650, 669, 719, 720, 722, 723, 847, 851, 857, 872], "recal": [15, 88, 136, 148, 149, 155, 213, 648, 649, 651, 654], "f1": [15, 69, 88, 136, 648], "support": [15, 34, 61, 121, 133, 134, 135, 136, 139, 141, 148, 149, 150, 165, 169, 171, 180, 181, 184, 188, 189, 215, 236, 237, 238, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 268, 269, 271, 272, 274, 275, 276, 277, 294, 295, 301, 309, 315, 317, 337, 351, 356, 357, 365, 366, 367, 369, 387, 405, 412, 413, 421, 426, 435, 436, 438, 439, 443, 444, 445, 465, 472, 473, 474, 479, 484, 493, 495, 496, 497, 498, 502, 507, 511, 514, 515, 552, 563, 571, 580, 602, 605, 606, 620, 627, 628, 637, 640, 641, 657, 673, 675, 684, 687, 692, 694, 695, 696, 739, 755, 757, 760, 763, 767, 768, 769, 773, 778, 786, 792, 793, 797, 802, 803, 804, 805, 808, 827, 829, 831, 834, 836, 837, 838, 843, 849, 851, 858, 872], "72": [15, 19, 28, 35, 45, 47, 67, 70, 77, 78, 79, 82, 94, 98, 101, 102, 110, 112, 115, 121, 136, 139, 148, 155, 161, 168, 176, 179, 181, 182, 183, 184, 193, 194, 198, 207, 208, 223, 224, 225, 226, 227, 228, 231, 241, 552, 561, 854, 872], "288": [15, 35, 70, 71, 130, 140, 144, 159, 168, 170, 207, 228, 233, 241, 561], "macro": [15, 136], "avg": [15, 136, 143, 223, 253, 719, 720], "attribut": [15, 30, 31, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 77, 81, 84, 85, 114, 117, 118, 125, 139, 140, 142, 148, 149, 150, 165, 167, 168, 169, 171, 174, 175, 177, 178, 180, 181, 182, 199, 203, 204, 208, 209, 215, 218, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 276, 277, 299, 350, 362, 405, 406, 408, 409, 411, 412, 413, 415, 420, 423, 462, 463, 472, 473, 474, 480, 482, 483, 484, 485, 486, 489, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 511, 551, 552, 553, 604, 610, 614, 620, 642, 677, 692, 693, 694, 695, 696, 727, 739, 741, 763, 772, 785, 821, 827, 831, 849, 872], "nrow": [15, 45, 72, 118, 125, 145, 150, 175, 182, 209, 224, 263, 264, 405, 412, 552, 778, 782, 857, 872], "fitted_xdawn": 15, "get_channel_typ": [15, 139, 168, 261, 262, 263, 264, 266, 473, 474, 552, 692, 694, 695, 696, 872], "get_montag": [15, 113, 133, 134, 135, 261, 262, 263, 264, 266, 473, 474, 872], "cur_class": 15, "cur_pattern": 15, "pattern_evok": 15, "time_format": [15, 21, 98, 107, 110, 144, 175, 214, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 552, 692, 695, 778, 786, 792, 872], "show_nam": [15, 98, 118, 150, 169, 181, 224, 258, 261, 262, 263, 264, 270, 309, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 775, 778, 782, 789, 791, 794, 795, 799, 872], "h_pad": [15, 223], "w_pad": [15, 223], "bertrand": [15, 70, 77, 86, 194, 198, 241, 553, 561, 708, 718, 719, 722, 854, 872], "rivet": [15, 86, 194, 241, 553], "antoin": [15, 86, 194, 241, 553, 872], "souloumiac": [15, 86, 194, 241, 553], "virgini": [15, 86, 194, 241, 553], "attina": [15, 86, 194, 241, 553], "gibert": [15, 86, 194, 241, 553], "algorithm": [15, 27, 31, 69, 73, 76, 81, 82, 83, 86, 111, 124, 133, 151, 155, 156, 161, 165, 194, 198, 200, 203, 208, 223, 228, 231, 232, 233, 241, 266, 267, 271, 306, 351, 404, 405, 419, 426, 470, 473, 519, 538, 552, 553, 555, 560, 562, 563, 568, 571, 573, 578, 580, 587, 588, 589, 652, 669, 674, 729, 838, 843, 847, 848, 849, 860, 872], "enhanc": [15, 86, 193, 194, 224, 228, 241, 411, 552, 553, 571, 679, 680, 682, 683, 831, 850, 857, 860], "2035": [15, 86, 179, 194, 241, 553], "2043": [15, 86, 168, 194, 241, 553], "2009": [15, 35, 58, 86, 115, 170, 194, 203, 223, 224, 241, 272, 468, 553, 566, 679, 680, 682, 683, 847, 857, 872], "2012869": [15, 86, 194, 241, 553], "hubert": [15, 86, 241, 553, 872], "cecotti": [15, 86, 241, 553], "emmanuel": [15, 86, 200, 241, 553], "mabi": [15, 86, 241, 553], "j\u00e9r\u00e9mie": [15, 86, 241, 553], "mattout": [15, 86, 241, 553], "theoret": [15, 86, 193, 194, 200, 218, 241, 405, 553, 827], "effici": [15, 42, 44, 86, 190, 200, 223, 241, 256, 261, 262, 263, 264, 417, 473, 474, 552, 553, 554, 652, 694, 696, 722, 723, 849, 872], "p300": [15, 86, 190, 194, 200, 241, 553, 721, 724], "proceed": [15, 33, 40, 46, 86, 165, 179, 202, 203, 220, 241, 287, 294, 471, 553, 721, 724, 847, 854], "eusipco": [15, 86, 241, 553, 721, 724], "1382": [15, 86, 207, 241, 553], "1386": [15, 86, 241, 553], "barcelona": [15, 86, 241, 553], "url": [15, 86, 111, 150, 194, 241, 351, 376, 381, 383, 387, 398, 399, 468, 519, 553, 674, 721, 724, 831, 854, 872], "ieeexplor": [15, 86, 241, 553, 721, 724], "7073970": [15, 86, 241, 553], "803": [15, 19, 20, 207], "decoding_xdawn_eeg": [15, 20], "cours": [16, 27, 32, 36, 38, 39, 41, 50, 56, 69, 73, 81, 88, 90, 93, 99, 111, 114, 134, 135, 141, 142, 150, 164, 165, 171, 174, 175, 176, 179, 185, 186, 194, 197, 200, 204, 205, 220, 228, 233, 241, 259, 260, 261, 262, 263, 264, 267, 268, 269, 272, 274, 275, 276, 277, 286, 288, 290, 293, 357, 406, 421, 439, 448, 458, 468, 470, 471, 473, 474, 507, 514, 518, 519, 533, 549, 610, 614, 620, 642, 656, 658, 659, 678, 692, 694, 695, 696, 738, 739, 763, 790, 797, 802, 827, 854, 857, 872], "techniqu": [16, 17, 20, 27, 59, 69, 72, 73, 74, 148, 150, 164, 165, 194, 197, 200, 202, 203, 205, 206, 208, 209, 210, 220, 223, 241, 261, 262, 263, 264, 266, 369, 407, 416, 419, 441, 443, 444, 464, 473, 474, 549, 552, 607, 637, 827, 848, 854, 855, 860], "By": [16, 45, 69, 78, 81, 101, 102, 110, 133, 134, 141, 144, 148, 149, 150, 157, 165, 167, 168, 169, 170, 171, 177, 187, 188, 198, 200, 203, 204, 205, 206, 208, 212, 213, 215, 236, 253, 261, 262, 263, 264, 266, 267, 268, 269, 272, 275, 276, 277, 306, 323, 429, 446, 473, 474, 552, 555, 634, 657, 669, 685, 692, 693, 694, 695, 696, 765, 769, 777, 785, 792, 802, 854, 860, 872], "onto": [16, 18, 40, 72, 135, 141, 154, 165, 169, 174, 179, 193, 198, 204, 205, 208, 219, 267, 269, 275, 277, 413, 577, 641, 669, 739, 755, 790, 809, 848, 854, 872], "surrog": [16, 156, 182, 205, 362, 421, 467, 872], "expos": [16, 131, 193, 227, 552, 782, 836, 872], "exhibit": [16, 238, 263, 264, 268, 269, 272, 275, 276, 277, 854], "evolut": [16, 111, 552, 786], "compute_em": [16, 862, 872], "audl": [16, 71], "visl": [16, 71], "wai": [16, 21, 27, 34, 43, 44, 73, 112, 113, 125, 133, 139, 140, 141, 143, 148, 149, 150, 155, 159, 160, 165, 167, 168, 169, 170, 171, 176, 179, 189, 193, 198, 199, 200, 201, 203, 204, 205, 208, 213, 214, 215, 218, 220, 223, 225, 226, 231, 233, 238, 241, 255, 256, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 351, 429, 439, 473, 474, 488, 512, 552, 554, 568, 574, 581, 603, 610, 641, 673, 674, 675, 681, 687, 692, 695, 706, 708, 718, 722, 739, 827, 829, 831, 834, 837, 847, 848, 849, 850, 853, 855, 872], "n_epoch": [16, 112, 139, 145, 148, 165, 193, 194, 218, 228, 237, 256, 261, 262, 311, 405, 406, 407, 410, 411, 412, 413, 414, 416, 417, 419, 420, 443, 444, 553, 560, 694, 695, 697, 698, 699, 719, 720, 721, 763, 769, 770, 872], "n_time": [16, 19, 31, 63, 65, 69, 74, 81, 112, 139, 145, 148, 158, 165, 189, 190, 193, 194, 203, 206, 212, 218, 220, 223, 227, 228, 231, 232, 233, 256, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 311, 345, 405, 406, 407, 410, 411, 412, 413, 414, 416, 418, 419, 421, 439, 441, 443, 444, 472, 473, 474, 493, 527, 553, 578, 642, 647, 648, 649, 650, 651, 652, 653, 654, 659, 666, 667, 668, 672, 678, 682, 683, 692, 694, 695, 696, 697, 698, 699, 710, 711, 715, 717, 719, 720, 721, 739, 763, 770, 771, 778, 799, 872], "993": [16, 18, 111, 228], "613": [16, 18], "145": [16, 18, 45, 72, 74, 80, 148, 168, 194, 219, 227, 228], "106": [16, 35, 71, 94, 95, 98, 119, 140, 144, 151, 165, 168, 171, 176, 179, 198, 199, 203, 207, 211, 223, 228, 857], "x_transform": 16, "leav": [16, 136, 143, 171, 190, 197, 202, 212, 588, 829, 837, 839, 872], "recommend": [16, 41, 43, 44, 45, 69, 112, 133, 154, 157, 160, 171, 187, 189, 200, 201, 203, 204, 206, 208, 241, 256, 261, 262, 263, 264, 268, 272, 276, 279, 304, 306, 315, 327, 344, 351, 356, 357, 369, 404, 407, 413, 449, 468, 473, 474, 492, 502, 512, 519, 525, 532, 552, 557, 568, 580, 587, 603, 605, 609, 634, 640, 641, 678, 682, 683, 748, 755, 797, 829, 831, 835, 836, 837, 850, 851, 854, 872], "stratifi": [16, 422], "tend": [16, 161, 177, 200, 202, 203, 223, 562, 851, 854], "overfit": [16, 86, 193], "cannot": [16, 59, 160, 168, 171, 187, 189, 200, 201, 204, 206, 214, 233, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 287, 338, 340, 427, 473, 474, 519, 552, 571, 612, 641, 692, 739, 775, 797, 802, 819, 829, 831, 853, 872], "x_scale": 16, "futur": [16, 69, 170, 203, 215, 279, 411, 417, 445, 571, 831, 835, 849, 851, 853, 872], "filters_": [16, 18, 405, 406, 409, 412, 413, 423, 553, 872], "individu": [16, 26, 32, 37, 42, 43, 44, 99, 133, 139, 141, 143, 154, 158, 165, 169, 171, 174, 198, 204, 205, 209, 214, 215, 223, 237, 238, 241, 256, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 294, 295, 325, 346, 405, 446, 473, 474, 520, 528, 529, 568, 588, 610, 670, 676, 684, 721, 724, 757, 769, 773, 777, 790, 792, 818, 831, 847, 848, 853, 854, 872], "argsort": [16, 31, 115, 126, 142, 180], "reorder": [16, 47, 115, 261, 262, 263, 264, 473, 474, 484, 692, 694, 695, 696, 770, 800, 872], "kei": [16, 92, 93, 125, 133, 136, 139, 140, 141, 148, 149, 151, 165, 168, 169, 170, 180, 188, 204, 205, 212, 213, 215, 218, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 285, 294, 295, 299, 321, 322, 351, 355, 356, 362, 365, 366, 367, 381, 387, 398, 405, 412, 414, 421, 429, 432, 434, 448, 449, 450, 453, 465, 468, 470, 471, 473, 474, 504, 508, 518, 519, 530, 542, 551, 552, 554, 566, 568, 569, 571, 591, 604, 606, 623, 636, 643, 644, 645, 657, 661, 677, 678, 679, 680, 682, 683, 692, 694, 695, 696, 727, 729, 739, 756, 761, 762, 763, 767, 769, 770, 771, 772, 773, 775, 777, 778, 779, 782, 791, 792, 794, 795, 797, 799, 801, 802, 803, 825, 831, 837, 848, 860, 872], "ems_av": 16, "u": [16, 19, 21, 47, 69, 102, 110, 113, 114, 136, 140, 143, 145, 148, 150, 159, 165, 170, 171, 179, 180, 182, 187, 188, 193, 199, 200, 203, 204, 205, 212, 213, 218, 223, 241, 252, 253, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 439, 473, 474, 527, 831, 834, 839, 850, 853, 854, 857, 872], "schurger": [16, 194, 241, 406, 421], "thu": [16, 18, 43, 47, 55, 69, 101, 112, 139, 140, 148, 151, 169, 170, 174, 179, 181, 187, 194, 200, 203, 205, 206, 208, 223, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 344, 407, 416, 428, 439, 441, 443, 473, 474, 519, 527, 530, 554, 720, 723, 827, 831, 847, 848, 851, 854, 872], "equalize_event_count": [16, 148, 150, 165, 227, 228, 233, 261, 262, 695, 872], "103": [16, 35, 50, 110, 112, 119, 168, 194, 196, 203, 211, 223, 228, 857], "112": [16, 69, 113, 133, 168, 170, 189, 192, 193, 207, 212, 213, 217, 241, 560, 857], "aaron": [16, 194, 241, 406, 421], "sebastien": [16, 194, 241, 406, 421, 872], "marti": [16, 194, 241, 406, 421, 872], "reveal": [16, 99, 111, 143, 169, 190, 194, 200, 238, 241, 406, 421, 721, 724], "ems_filt": [16, 20], "continu": [17, 19, 20, 21, 27, 96, 100, 139, 141, 144, 147, 150, 160, 167, 187, 194, 195, 196, 197, 199, 200, 203, 204, 208, 210, 213, 217, 218, 223, 236, 241, 253, 255, 261, 262, 263, 264, 266, 342, 350, 354, 356, 360, 389, 397, 401, 405, 411, 412, 413, 417, 445, 446, 473, 474, 486, 492, 493, 502, 512, 513, 549, 551, 552, 555, 564, 572, 573, 598, 603, 676, 677, 678, 692, 694, 695, 696, 717, 763, 775, 782, 784, 827, 831, 847, 848, 853, 857, 860, 872], "spoc": [17, 20, 27, 241, 261, 266, 405, 413, 486, 513, 553, 862, 872], "xdawn": [17, 20, 27, 76, 83, 241, 258, 261, 263, 264, 266, 356, 369, 405, 409, 412, 420, 473, 549, 607, 770, 862, 872], "em": [17, 20, 27, 194, 261, 263, 264, 266, 421, 473, 549, 607, 862, 872], "recept": [17, 20, 27, 164, 195, 196, 241, 247, 266, 309, 325, 369, 411, 417, 445, 474, 801, 848], "spectro": [17, 20, 27, 112, 164, 195, 196, 261, 263, 264, 266, 411, 413, 417, 445, 486, 513, 711], "ssd": [17, 20, 27, 261, 263, 264, 266, 486, 513, 711, 862, 872], "mvpa": [18, 164, 195, 196, 258, 261, 263, 264, 266, 272, 351, 405, 406, 407, 408, 409, 410, 412, 414, 415, 420, 422, 423, 446, 519, 530, 553, 612, 739, 872], "neurophysiolog": [18, 19, 828], "interpret": [18, 19, 101, 141, 150, 158, 187, 194, 200, 201, 214, 225, 227, 228, 233, 241, 256, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 275, 276, 277, 279, 300, 307, 310, 324, 326, 351, 352, 354, 356, 365, 407, 408, 409, 411, 415, 418, 421, 422, 423, 426, 443, 444, 448, 461, 463, 464, 473, 474, 481, 488, 494, 496, 511, 514, 515, 519, 525, 526, 535, 536, 551, 552, 554, 557, 564, 565, 567, 568, 569, 571, 574, 577, 586, 588, 595, 640, 643, 644, 645, 648, 657, 660, 678, 679, 680, 681, 682, 683, 687, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 711, 719, 720, 721, 722, 723, 739, 763, 769, 770, 771, 773, 774, 775, 776, 783, 788, 790, 793, 831, 834, 835, 842, 854, 872], "romain": [18, 872], "trachel": [18, 872], "trachelr": 18, "sample_path": [18, 122, 133, 134, 135], "meg_data": [18, 139], "reshap": [18, 136, 193, 223, 224, 227, 231, 233, 411, 420], "scaler": [18, 862, 872], "coef": [18, 19, 193, 194, 423], "revers": [18, 19, 71, 142, 145, 171, 187, 197, 199, 200, 202, 203, 205, 212, 258, 263, 264, 268, 269, 272, 274, 275, 276, 277, 773, 775, 777, 778, 797, 802, 872], "sequenti": [18, 139, 149, 218, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 332, 351, 352, 354, 356, 408, 415, 418, 421, 422, 448, 461, 463, 473, 474, 511, 514, 515, 525, 526, 535, 536, 557, 564, 565, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 729, 739, 758, 763, 771, 774, 793, 797, 802, 803, 827], "kai": [18, 19, 143, 241, 409, 411, 423, 429], "g\u00f6rgen": [18, 19, 241, 409, 411, 423], "dylan": [18, 19, 81, 241, 409, 411, 423, 552], "hayn": [18, 19, 241, 409, 411, 423], "benjamin": [18, 19, 241, 405, 409, 411, 423], "blankertz": [18, 19, 241, 405, 409, 411, 423], "felix": [18, 19, 110, 241, 409, 411, 423, 872], "bie\u00dfmann": [18, 19, 241, 409, 411, 423], "On": [18, 19, 69, 70, 165, 167, 198, 200, 203, 204, 238, 241, 253, 279, 409, 411, 423, 434, 454, 552, 561, 829, 831, 836, 837, 839, 849, 854, 872], "multivari": [18, 19, 88, 92, 136, 161, 193, 194, 241, 351, 409, 411, 423, 646, 848, 851, 872], "110": [18, 19, 21, 35, 41, 79, 80, 110, 133, 157, 168, 207, 223, 228, 241, 409, 411, 423, 557], "067": [18, 19, 241, 409, 411, 423], "409": [18, 20, 79, 117, 241, 756], "linear_model_pattern": [18, 20], "reproduc": [19, 45, 69, 91, 150, 193, 213, 294, 505, 552, 578, 597, 644, 645, 646, 655, 656, 658, 679, 680, 681, 682, 683, 831, 872], "lalor": [19, 193, 241, 411, 848], "mtrf": [19, 193, 241, 411, 862, 872], "receptivefield": [19, 193, 417, 862, 872], "speech": [19, 193, 241, 411, 584, 721, 724, 848], "envelop": [19, 80, 111, 112, 113, 135, 145, 194, 261, 262, 263, 264, 412, 473, 474, 557, 848, 872], "try": [19, 31, 69, 73, 81, 139, 140, 142, 150, 155, 157, 160, 161, 166, 170, 175, 179, 200, 201, 202, 203, 204, 205, 212, 219, 220, 238, 271, 279, 422, 442, 455, 481, 488, 552, 566, 755, 813, 829, 830, 831, 836, 849, 851, 852, 872], "known": [19, 44, 86, 110, 112, 143, 150, 155, 159, 164, 179, 221, 222, 223, 258, 261, 262, 263, 264, 265, 266, 267, 272, 351, 361, 440, 446, 473, 474, 481, 488, 502, 518, 519, 533, 588, 612, 615, 648, 656, 659, 674, 739, 827, 843, 848, 854, 872], "literatur": [19, 143, 238, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695, 827], "simpli": [19, 43, 134, 142, 143, 145, 148, 169, 170, 187, 198, 199, 203, 205, 208, 213, 214, 223, 237, 238, 256, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 294, 295, 473, 474, 568, 569, 692, 695, 829, 831, 834, 839, 848, 854, 872], "chri": [19, 112, 135, 193, 194, 241, 872], "holdgraf": [19, 112, 113, 135, 193, 194, 241, 411, 872], "choldgraf": [19, 112, 113, 135, 193], "nicola": [19, 47, 241, 652, 872], "barascud": [19, 872], "sphinx_gallery_thumbnail_numb": [19, 118, 194], "scipi": [19, 31, 95, 109, 155, 170, 171, 193, 200, 204, 220, 223, 224, 225, 228, 231, 232, 238, 253, 258, 261, 262, 263, 264, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 315, 326, 355, 357, 405, 407, 412, 416, 440, 441, 443, 444, 445, 448, 473, 474, 551, 552, 560, 566, 640, 672, 674, 679, 680, 682, 683, 685, 686, 691, 692, 694, 695, 696, 704, 708, 711, 718, 739, 756, 771, 778, 782, 791, 793, 794, 799, 801, 830, 831, 851, 853, 856, 869, 872], "loadmat": [19, 193], "collect": [19, 69, 125, 150, 156, 167, 171, 182, 183, 189, 190, 198, 208, 238, 241, 254, 258, 261, 262, 263, 264, 318, 405, 412, 432, 473, 474, 551, 552, 677, 692, 694, 696, 753, 763, 771, 778, 782, 794, 799, 801, 827, 831, 846, 847, 854, 857, 872], "listen": [19, 848, 853, 860], "know": [19, 40, 125, 141, 143, 155, 159, 168, 171, 188, 198, 200, 203, 204, 205, 214, 227, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 468, 470, 471, 527, 530, 633, 779, 831, 834, 837, 838, 849, 851, 854, 872], "primarili": [19, 69, 169, 197, 200, 407, 473, 474, 594, 761, 827, 838], "speech_data": [19, 193], "down": [19, 21, 69, 110, 133, 150, 160, 193, 194, 200, 204, 214, 215, 225, 227, 258, 259, 261, 262, 263, 264, 270, 271, 405, 412, 445, 473, 474, 551, 552, 578, 679, 680, 682, 683, 692, 694, 696, 739, 767, 769, 770, 771, 775, 778, 782, 791, 792, 794, 799, 829, 831, 853, 872], "biosemi128": [19, 169], "rawarrai": [19, 63, 65, 69, 74, 81, 112, 158, 187, 189, 203, 206, 218, 262, 264, 492, 827, 862, 872], "ln": [19, 90, 708, 718, 722, 837, 854], "800": [19, 33, 43, 51, 79, 124, 125, 132, 134, 143, 154, 155, 159, 165, 174, 176, 194, 200, 207, 228, 231, 268, 269, 272, 275, 276, 277, 464, 739, 797, 802], "alpha": [19, 21, 28, 35, 39, 40, 44, 46, 49, 50, 59, 69, 94, 95, 108, 110, 111, 114, 133, 134, 136, 145, 150, 171, 176, 180, 189, 193, 204, 223, 225, 228, 233, 237, 238, 257, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 351, 411, 417, 463, 468, 470, 471, 473, 474, 535, 614, 670, 676, 679, 680, 682, 683, 692, 694, 696, 739, 755, 758, 771, 775, 787, 793, 797, 802, 872], "ln1": 19, "lw": [19, 39, 133, 143, 171, 180, 193, 208, 220, 708, 718, 872], "frameon": [19, 125], "float64": [19, 63, 65, 69, 74, 81, 90, 92, 112, 158, 166, 189, 203, 206, 218, 472, 672, 854], "7677": 19, "7676": 19, "119": [19, 121, 133, 134, 159, 168, 207, 227, 872], "938": [19, 83, 84, 228], "construct": [19, 42, 68, 101, 139, 143, 161, 167, 177, 179, 182, 183, 187, 190, 194, 200, 203, 204, 205, 208, 220, 223, 237, 238, 261, 262, 263, 264, 268, 272, 274, 276, 277, 281, 282, 294, 310, 357, 429, 440, 441, 443, 444, 473, 474, 490, 566, 604, 637, 641, 642, 678, 687, 698, 701, 752, 758, 792, 797, 803, 827, 847, 854, 872], "relationship": [19, 22, 142, 159, 202, 223, 411, 417, 449, 708, 718, 719, 720, 722, 723, 827, 848, 853, 854], "rf": [19, 193, 411], "feature_nam": [19, 193, 411, 872], "corrcoef": [19, 22, 47, 411], "extra": [19, 79, 80, 144, 159, 165, 168, 169, 190, 205, 212, 219, 258, 261, 262, 263, 264, 270, 302, 303, 309, 332, 334, 405, 406, 412, 424, 473, 474, 551, 552, 566, 692, 694, 696, 735, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 827, 835, 839, 872], "inclus": [19, 121, 139, 142, 184, 253, 261, 262, 271, 274, 376, 398, 399, 450, 468, 470, 471, 484, 530, 547, 552, 571, 684, 693, 695, 872], "n_delai": [19, 411], "held": [19, 78, 170, 193, 853], "coef_": [19, 193, 409, 411, 551], "n_output": [19, 411, 417], "n_featur": [19, 193, 194, 405, 406, 407, 409, 410, 411, 412, 413, 416, 417, 420, 553, 578, 672], "delays_": [19, 193, 411], "mean_coef": 19, "mean_scor": 19, "ix_ch": 19, "sometim": [19, 27, 60, 81, 110, 113, 115, 125, 126, 133, 139, 143, 155, 160, 167, 168, 188, 189, 198, 200, 201, 203, 205, 206, 223, 258, 261, 262, 263, 264, 266, 270, 405, 412, 473, 474, 489, 551, 552, 566, 598, 604, 692, 694, 696, 756, 763, 771, 778, 782, 791, 794, 799, 801, 827, 831, 839, 847, 851, 854, 872], "well": [19, 22, 32, 37, 47, 69, 77, 114, 118, 133, 135, 136, 139, 142, 143, 149, 151, 159, 161, 164, 165, 168, 171, 174, 181, 183, 187, 188, 190, 193, 197, 198, 200, 202, 203, 204, 205, 206, 208, 210, 212, 218, 220, 228, 236, 238, 241, 261, 262, 263, 264, 271, 272, 317, 339, 351, 365, 405, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 429, 444, 445, 473, 474, 552, 553, 580, 587, 692, 708, 710, 718, 721, 722, 723, 724, 769, 771, 785, 827, 829, 831, 837, 843, 848, 849, 851, 853, 854, 856, 860, 872], "recreat": [19, 125, 139, 200, 762], "time_plot": 19, "180": [19, 24, 35, 79, 90, 109, 155, 168, 177, 190, 197, 199, 201, 203, 207, 223, 227, 228, 268, 269, 272, 275, 276, 277, 439, 744, 872], "highlight": [19, 21, 88, 93, 112, 118, 149, 150, 171, 174, 175, 201, 203, 208, 214, 258, 259, 261, 262, 263, 264, 271, 405, 412, 473, 474, 551, 692, 694, 696, 756, 767, 771, 773, 778, 794, 799, 801, 831, 872], "max_coef": 19, "pcolormesh": [19, 112, 193, 872], "shade": [19, 193, 204, 748, 763, 804, 805, 872], "gouraud": [19, 193], "ncoeffici": 19, "setp": [19, 193, 201], "get_xticklabel": [19, 193], "2c": [19, 854], "ix_plot": 19, "argmin": [19, 118, 143, 238], "vlim": [19, 69, 78, 98, 107, 140, 141, 202, 205, 209, 228, 238, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 872], "nfor": 19, "anoth": [19, 31, 45, 69, 85, 93, 124, 140, 142, 143, 144, 148, 150, 154, 155, 160, 166, 170, 179, 187, 199, 200, 203, 204, 208, 213, 214, 215, 223, 228, 261, 262, 263, 264, 267, 268, 269, 271, 272, 273, 275, 276, 277, 279, 311, 351, 352, 354, 356, 357, 408, 415, 418, 421, 422, 431, 448, 461, 463, 473, 474, 500, 511, 514, 515, 525, 526, 535, 536, 538, 557, 564, 565, 640, 643, 644, 645, 657, 663, 679, 680, 681, 682, 683, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 728, 729, 760, 771, 774, 792, 793, 812, 827, 829, 831, 839, 848, 853, 854, 857, 872], "case": [19, 44, 58, 69, 72, 88, 92, 93, 101, 112, 118, 121, 125, 139, 142, 143, 148, 154, 160, 161, 164, 167, 168, 170, 171, 179, 180, 184, 187, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 223, 224, 225, 231, 233, 236, 238, 241, 255, 256, 258, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 285, 294, 295, 299, 305, 315, 326, 350, 351, 355, 356, 365, 366, 367, 368, 405, 412, 422, 429, 434, 445, 448, 449, 456, 463, 468, 470, 471, 473, 474, 481, 488, 494, 502, 507, 512, 518, 519, 520, 521, 522, 523, 530, 541, 547, 555, 566, 578, 597, 603, 620, 634, 637, 652, 657, 678, 679, 692, 694, 695, 696, 704, 710, 720, 723, 727, 739, 757, 763, 770, 772, 775, 776, 779, 797, 827, 831, 839, 851, 853, 854, 872], "aim": [19, 136, 157, 176, 219, 220, 300, 352, 353, 354], "exploit": [19, 86, 872], "context": [19, 42, 114, 170, 171, 174, 194, 200, 223, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 405, 408, 415, 418, 421, 422, 448, 461, 463, 473, 474, 511, 514, 515, 520, 525, 526, 535, 536, 541, 552, 557, 564, 565, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 733, 734, 769, 771, 774, 786, 792, 793, 810, 811, 837, 853, 872], "treat": [19, 21, 150, 171, 194, 205, 206, 223, 227, 261, 262, 265, 271, 484, 486, 543, 545, 679, 680, 682, 683, 695, 763, 781, 872], "independ": [19, 69, 73, 81, 107, 110, 150, 157, 161, 165, 178, 179, 180, 194, 197, 199, 200, 202, 203, 204, 208, 214, 223, 241, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 355, 408, 415, 420, 473, 474, 552, 553, 560, 566, 571, 578, 580, 674, 676, 679, 680, 682, 683, 686, 719, 720, 722, 723, 782, 784, 786, 838, 847, 848, 851, 854, 872], "therefor": [19, 69, 92, 133, 135, 141, 145, 150, 157, 161, 168, 169, 188, 194, 198, 199, 200, 202, 203, 206, 208, 223, 238, 261, 262, 271, 315, 317, 429, 473, 489, 492, 552, 598, 604, 605, 609, 831, 835, 847, 853, 854], "qualiti": [19, 119, 156, 165, 171, 199, 200, 203, 205, 215, 238, 241, 256, 261, 262, 263, 264, 473, 474, 511, 552, 568, 584, 783, 831, 847, 853, 854, 860, 872], "expens": [19, 164, 165, 171, 588, 855, 860, 872], "especi": [19, 55, 69, 110, 118, 125, 142, 148, 161, 165, 168, 197, 198, 200, 202, 203, 207, 212, 238, 263, 264, 272, 473, 474, 552, 572, 588, 679, 680, 682, 683, 779, 827, 831, 834, 847, 851, 854, 872], "lag": [19, 27, 76, 83, 193, 220, 241, 261, 263, 264, 266, 411, 417, 431, 473, 549, 607, 872], "footcit": [19, 380, 831], "crosseetal2016": 19, "earlier": [19, 144, 166, 170, 190, 197, 200, 212, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 447, 448, 449, 468, 470, 471, 530, 779, 835, 872], "wherea": [19, 79, 133, 135, 142, 155, 157, 167, 174, 194, 200, 201, 202, 208, 223, 255, 261, 262, 280, 294, 295, 473, 474, 481, 769, 792, 798, 827, 854, 858, 872], "chang": [19, 31, 44, 45, 112, 125, 133, 135, 141, 144, 148, 150, 155, 157, 160, 166, 169, 170, 171, 174, 175, 177, 183, 187, 188, 190, 193, 198, 203, 204, 205, 209, 213, 214, 215, 219, 223, 226, 231, 233, 238, 241, 253, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 294, 295, 301, 304, 306, 309, 317, 332, 337, 338, 340, 344, 357, 359, 382, 405, 412, 426, 434, 439, 440, 442, 444, 446, 448, 449, 458, 464, 468, 470, 471, 473, 474, 493, 495, 496, 507, 511, 514, 515, 530, 540, 541, 551, 552, 554, 566, 571, 577, 578, 580, 602, 610, 628, 637, 639, 640, 641, 657, 684, 687, 692, 694, 695, 696, 734, 739, 749, 755, 756, 757, 763, 764, 767, 768, 769, 770, 771, 773, 775, 778, 779, 780, 782, 784, 786, 789, 791, 792, 793, 794, 795, 797, 799, 801, 802, 803, 804, 809, 818, 832, 837, 839, 847, 850, 851, 854, 857, 858], "affect": [19, 49, 70, 79, 140, 141, 148, 150, 166, 189, 197, 198, 200, 201, 203, 204, 206, 208, 238, 241, 254, 256, 261, 262, 263, 264, 268, 271, 272, 276, 362, 398, 446, 447, 473, 474, 493, 568, 610, 644, 645, 720, 723, 792, 797, 831, 847, 854, 872], "obvious": [19, 157, 208, 238], "cf": [19, 144, 154, 708, 718, 722], "next": [19, 54, 55, 58, 112, 114, 119, 134, 135, 140, 144, 149, 150, 155, 156, 160, 165, 170, 174, 176, 178, 187, 189, 197, 199, 203, 205, 209, 212, 213, 214, 223, 237, 238, 258, 261, 262, 263, 264, 270, 351, 404, 405, 412, 473, 474, 551, 552, 566, 692, 694, 695, 696, 721, 724, 756, 757, 778, 782, 791, 794, 799, 829, 831, 839, 854, 857, 872], "section": [19, 73, 114, 135, 136, 139, 141, 143, 148, 149, 150, 155, 164, 165, 166, 170, 171, 174, 187, 188, 189, 197, 199, 200, 201, 203, 206, 208, 212, 213, 238, 256, 258, 259, 260, 261, 262, 263, 264, 270, 271, 273, 294, 295, 309, 387, 405, 412, 426, 432, 440, 442, 473, 474, 490, 500, 551, 552, 566, 571, 581, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 831, 835, 847, 853, 854, 855, 857, 872], "haufeetal2014": 19, "sr": 19, "1e4": 19, "mean_pattern": 19, "max_pattern": 19, "8384": [19, 872], "1696": [19, 207], "169": [19, 97, 104, 168, 194, 228, 241, 678], "2587": 19, "3098": 19, "3448": 19, "416": [19, 143, 170, 228], "3739": 19, "503": [19, 223, 228], "3976": [19, 332], "587": [19, 207], "4137": 19, "668": [19, 207, 228], "4247": 19, "750": [19, 44, 56, 74, 79, 142, 207, 228, 848], "4343": 19, "834": [19, 194, 228], "4438": 19, "918": [19, 207, 228], "4517": 19, "4566": 19, "1084": 19, "4631": 19, "1170": 19, "1256": [19, 207], "4748": 19, "1340": [19, 41], "4788": 19, "1425": 19, "4827": 19, "1509": [19, 35, 207], "4859": [19, 860], "1594": [19, 207], "4891": 19, "1678": [19, 207], "4915": 19, "1763": 19, "4942": 19, "1848": 19, "4967": 19, "1932": [19, 168], "4985": 19, "2018": [19, 74, 82, 124, 136, 194, 203, 220, 241, 294, 295, 552, 587, 588], "5008": 19, "2104": 19, "5029": [19, 241, 351], "2189": 19, "5046": 19, "2274": 19, "5061": 19, "2360": 19, "5080": 19, "2445": 19, "5092": 19, "2530": 19, "5105": 19, "2615": [19, 41], "5115": 19, "2699": 19, "5122": 19, "33it": [19, 33, 34, 101, 107, 193, 207, 223, 224, 227, 228], "2784": 19, "5132": 19, "2870": [19, 193], "5145": 19, "2953": 19, "5147": 19, "3035": 19, "5144": 19, "37": [19, 28, 34, 35, 45, 47, 79, 101, 106, 110, 112, 144, 156, 168, 170, 178, 186, 194, 207, 223, 224, 225, 227, 228, 232, 233, 236, 332, 398, 446, 563, 691, 872], "3119": 19, "5148": 19, "3205": 19, "5160": 19, "3291": 19, "5169": 19, "3377": 19, "5178": 19, "3460": 19, "5176": 19, "3547": 19, "5190": 19, "3630": 19, "3715": [19, 94], "5195": 19, "3801": 19, "5202": 19, "3885": 19, "3969": 19, "4054": 19, "5207": 19, "4139": 19, "5208": 19, "4223": 19, "5210": 19, "4309": 19, "5217": 19, "4393": 19, "5218": 19, "4477": 19, "5220": 19, "4558": 19, "5211": 19, "4646": 19, "5224": 19, "4733": 19, "5235": 19, "57": [19, 34, 35, 40, 45, 79, 101, 102, 106, 110, 112, 115, 124, 135, 136, 149, 150, 156, 168, 179, 182, 183, 190, 193, 194, 205, 207, 214, 223, 224, 225, 227, 228, 232, 233, 236, 241, 261, 262, 263, 264, 332, 470, 473, 474, 694, 696, 704, 710, 872], "4816": 19, "5229": [19, 241, 721, 724], "4900": 19, "4984": 19, "5228": [19, 332], "5068": 19, "5151": 19, "5223": 19, "5233": [19, 241, 721, 724], "5319": 19, "5407": 19, "5236": 19, "5491": 19, "5574": 19, "5231": 19, "5660": 19, "5237": 19, "5744": 19, "5828": 19, "5914": 19, "5240": 19, "57it": [19, 33, 34, 101, 107, 110, 193, 194, 207, 223, 224, 227, 228], "6002": 19, "5252": 19, "6084": [19, 241, 383], "5245": 19, "6171": 19, "5253": 19, "6258": 19, "5261": 19, "6346": 19, "5272": 19, "6433": 19, "5280": 19, "6521": 19, "5289": 19, "6606": 19, "5288": 19, "6690": 19, "5285": 19, "6775": 19, "6859": 19, "5282": 19, "6945": 19, "5284": 19, "7030": 19, "5283": 19, "7114": 19, "5281": [19, 241, 388], "7199": 19, "5279": [19, 223], "7285": 19, "88": [19, 26, 35, 41, 45, 47, 50, 78, 79, 80, 101, 107, 110, 112, 118, 157, 168, 175, 179, 180, 181, 190, 194, 207, 209, 223, 224, 225, 227, 228, 232, 233, 241, 351], "7371": 19, "5286": 19, "7458": 19, "5293": 19, "7548": 19, "5307": 19, "7637": 19, "7726": 19, "5330": 19, "93": [19, 33, 35, 40, 47, 78, 101, 106, 110, 112, 168, 193, 194, 207, 223, 224, 227, 228, 241, 584], "7815": 19, "5341": 19, "7905": 19, "5356": 19, "7993": 19, "5361": 19, "8079": [19, 26], "5360": 19, "8169": 19, "5372": 19, "8259": 19, "5383": 19, "8351": [19, 872], "5399": 19, "2375": 19, "175": [19, 133, 141, 149, 168, 194, 228, 241, 552], "3328": 19, "263": [19, 79, 80, 168, 190, 207, 208, 223, 228], "3860": 19, "52it": [19, 34, 101, 179, 194, 207, 223, 224, 227, 228], "350": [19, 79, 89, 110, 114, 115, 133, 140, 159, 168, 207, 228], "4181": 19, "435": [19, 194, 228], "4381": 19, "14it": [19, 101, 106, 110, 179, 193, 194, 207, 227, 228, 231], "521": [19, 193, 241, 351], "4537": 19, "4654": 19, "692": [19, 107, 143, 228, 238], "4739": 19, "779": [19, 24, 25], "4821": 19, "867": [19, 179, 241, 294, 295], "4897": 19, "953": [19, 228], "4948": 19, "1040": [19, 193, 207], "4996": 19, "1127": 19, "5034": 19, "1217": [19, 207], "5087": 19, "1306": [19, 41, 207], "5129": 19, "1397": [19, 193], "5173": 19, "1485": 19, "5198": 19, "1571": 19, "1659": [19, 119, 193], "5230": 19, "1747": 19, "5247": 19, "1836": [19, 35], "5268": 19, "1926": 19, "5292": 19, "2015": [19, 46, 70, 97, 99, 111, 119, 161, 200, 203, 224, 238, 241, 263, 264, 351, 384, 389, 561, 678, 721, 724, 779, 848, 851, 860], "2099": 19, "5303": 19, "2186": 19, "5309": 19, "2273": 19, "5315": 19, "2356": 19, "5305": 19, "2444": 19, "5316": 19, "2532": [19, 168], "5325": 19, "2620": 19, "5333": 19, "2707": 19, "5337": 19, "2793": 19, "2877": 19, "2964": 19, "3052": 19, "5343": 19, "3139": 19, "5345": 19, "3224": 19, "3311": 19, "5344": 19, "3398": 19, "5349": 19, "3487": 19, "5358": 19, "3575": 19, "5365": 19, "3661": 19, "5363": 19, "3748": 19, "3836": 19, "5370": 19, "25it": [19, 33, 34, 110, 193, 194, 223, 224, 225, 227, 228], "3922": 19, "4011": 19, "5379": 19, "4097": [19, 181, 200], "4183": 19, "5375": 19, "4268": 19, "5371": 19, "4355": 19, "4442": 19, "5378": 19, "4527": 19, "4616": 19, "4703": 19, "5380": 19, "4791": 19, "5384": 19, "4881": [19, 332], "5396": 19, "4968": 19, "5398": 19, "5050": 19, "5382": 19, "5135": 19, "5219": 19, "5367": 19, "5277": 19, "5439": 19, "5249": 19, "5503": 19, "5185": 19, "5583": 19, "5172": 19, "69it": [19, 34, 101, 106, 107, 121, 193, 194, 207, 223, 227, 228], "5661": 19, "5155": 19, "5741": 19, "5818": 19, "5125": 19, "5898": 19, "5119": 19, "5975": 19, "5102": 19, "6056": 19, "5098": 19, "6136": 19, "6216": 19, "5085": 19, "6300": 19, "6383": 19, "5094": 19, "6465": 19, "6548": 19, "5096": 19, "6630": 19, "5095": 19, "6697": 19, "5047": 19, "6772": 19, "5028": 19, "6845": 19, "5004": [19, 854], "6915": 19, "4971": 19, "6984": 19, "4936": 19, "7063": 19, "7145": 19, "4944": 19, "7228": 19, "4955": 19, "7309": 19, "4959": 19, "7391": 19, "7474": 19, "4977": 19, "7558": 19, "4989": 19, "7632": 19, "4970": 19, "7715": 19, "4980": 19, "7797": 19, "4986": 19, "7877": 19, "4982": 19, "7951": 19, "4961": 19, "8031": 19, "4962": 19, "8090": 19, "4896": 19, "8142": 19, "4811": 19, "8194": 19, "4732": 19, "8246": 19, "4657": 19, "8329": 19, "4683": 19, "8383": 19, "4613": 19, "5038": 19, "08": [19, 34, 40, 42, 45, 50, 56, 58, 59, 72, 82, 89, 92, 101, 105, 107, 110, 128, 150, 159, 165, 173, 175, 176, 177, 178, 179, 182, 183, 193, 194, 200, 205, 207, 212, 219, 220, 223, 225, 226, 227, 228, 233, 241, 691], "2164": 19, "161": [19, 45, 168, 194, 203, 207, 227, 228], "3038": 19, "242": [19, 168, 207, 228, 872], "3525": 19, "324": [19, 35, 56, 110, 168, 194, 228], "3843": 19, "4024": 19, "4168": 19, "560": [19, 32, 56, 79, 176, 206], "4261": 19, "639": [19, 165, 171, 228], "4348": 19, "721": [19, 228], "4440": 19, "4511": 19, "882": [19, 228], "4553": 19, "965": [19, 40, 42, 56, 127, 161, 171, 203, 205, 207, 228], "4611": 19, "1048": 19, "4666": 19, "4679": 19, "1208": 19, "4715": 19, "1292": 19, "4759": 19, "1373": 19, "4783": 19, "1455": 19, "4807": 19, "1538": [19, 236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 704, 710], "4836": 19, "1619": 19, "4851": 19, "1700": [19, 241], "4864": 19, "1782": [19, 233], "1864": 19, "4895": 19, "1945": 19, "4905": 19, "2026": 19, "4912": 19, "2107": 19, "4921": 19, "2188": [19, 177], "4930": 19, "2269": 19, "4935": 19, "2350": 19, "4943": 19, "2429": 19, "2509": 19, "4945": 19, "2590": 19, "4951": 19, "2673": 19, "4964": 19, "42it": [19, 33, 101, 107, 110, 194, 207, 223, 225, 227, 228], "2746": 19, "4937": 19, "2823": 19, "4928": 19, "2907": 19, "2979": 19, "4914": 19, "3060": 19, "81it": [19, 33, 101, 102, 107, 110, 179, 194, 207, 223, 225, 227, 228], "3145": 19, "3226": 19, "4947": 19, "3306": 19, "4949": 19, "3388": 19, "4957": [19, 140, 150, 332], "3469": 19, "3546": 19, "4953": 19, "3627": 19, "3711": 19, "3788": 19, "3871": 19, "4972": 19, "3956": 19, "4988": 19, "4036": 19, "4987": 19, "4120": 19, "4999": 19, "4198": 19, "4990": 19, "4283": 19, "5007": 19, "4365": 19, "5011": 19, "4445": 19, "5009": 19, "4526": 19, "5012": 19, "4609": 19, "5021": 19, "4688": 19, "5014": 19, "4769": 19, "5015": 19, "4850": 19, "5016": [19, 241, 351], "4927": 19, "5006": 19, "5003": [19, 854], "4991": 19, "5084": 19, "4993": 19, "5165": 19, "5238": 19, "4973": 19, "5308": 19, "4940": 19, "5457": 19, "4909": 19, "5527": 19, "4878": 19, "5599": 19, "4857": 19, "5670": 19, "4834": 19, "5748": 19, "4833": 19, "4841": 19, "5912": 19, "4860": 19, "5993": 19, "4869": 19, "6076": 19, "4883": 19, "6158": 19, "4894": 19, "6240": 19, "4903": 19, "6324": 19, "4919": 19, "6408": 19, "4933": 19, "6482": 19, "4916": 19, "6554": 19, "6637": 19, "4906": 19, "6722": 19, "4925": 19, "6806": 19, "4939": [19, 332], "6890": 19, "6961": 19, "4926": 19, "7036": 19, "7111": 19, "4899": 19, "7190": 19, "7269": 19, "7352": [19, 332], "7435": 19, "4924": 19, "7520": 19, "7575": 19, "4867": 19, "7658": 19, "7742": 19, "7818": 19, "7904": 19, "7989": 19, "4931": 19, "8074": 19, "8161": 19, "8249": 19, "8337": 19, "5023": 19, "sens": [19, 60, 69, 141, 159, 200, 205, 238, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 468, 470, 471, 530, 761, 779, 831, 853, 854], "actual": [19, 23, 27, 41, 43, 60, 63, 79, 113, 126, 133, 143, 150, 157, 159, 161, 167, 169, 171, 174, 181, 182, 183, 184, 188, 189, 193, 198, 199, 200, 201, 214, 223, 225, 228, 231, 232, 233, 238, 254, 271, 439, 532, 552, 827, 831, 848, 854, 872], "valid_samples_": [19, 411], "grei": [19, 111, 141, 238, 263, 264, 692, 775, 872], "attempt": [19, 74, 193, 197, 225, 261, 262, 263, 264, 269, 275, 277, 371, 473, 474, 480, 490, 552, 623, 637, 802, 825, 827, 853, 872], "reflect": [19, 32, 60, 69, 118, 134, 140, 148, 150, 159, 160, 176, 180, 197, 202, 203, 205, 212, 261, 262, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 443, 444, 445, 448, 449, 468, 470, 471, 473, 474, 530, 610, 672, 778, 779, 792, 827, 831, 847, 854, 872], "toward": [19, 43, 46, 54, 55, 69, 101, 159, 179, 199, 227, 238, 241, 447, 449, 534, 555, 854, 872], "directli": [19, 34, 43, 92, 93, 142, 143, 148, 169, 170, 171, 187, 189, 194, 198, 201, 202, 203, 204, 205, 214, 231, 237, 238, 253, 256, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 272, 273, 276, 277, 309, 310, 315, 319, 356, 367, 405, 412, 441, 470, 473, 474, 475, 476, 481, 493, 551, 552, 566, 568, 610, 637, 692, 694, 696, 741, 756, 758, 769, 771, 778, 782, 791, 794, 797, 799, 801, 803, 849, 854, 862, 872], "obtain": [19, 38, 42, 43, 60, 88, 92, 93, 133, 136, 145, 150, 154, 156, 157, 169, 171, 174, 176, 177, 183, 184, 200, 202, 208, 212, 213, 220, 223, 225, 228, 237, 259, 261, 262, 263, 264, 265, 268, 272, 276, 277, 295, 306, 339, 341, 351, 353, 357, 369, 411, 413, 455, 456, 467, 470, 471, 473, 474, 481, 488, 492, 505, 519, 527, 538, 552, 556, 563, 578, 597, 605, 609, 615, 641, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 662, 666, 679, 680, 681, 682, 683, 693, 720, 723, 739, 758, 774, 797, 798, 803, 827, 847, 848, 852, 853, 854, 872], "via": [19, 133, 134, 135, 141, 143, 144, 148, 149, 156, 167, 168, 169, 170, 171, 174, 179, 197, 198, 199, 203, 204, 212, 215, 223, 224, 227, 231, 233, 236, 237, 241, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 273, 274, 276, 277, 280, 294, 295, 306, 315, 319, 325, 326, 371, 407, 416, 439, 441, 443, 444, 457, 464, 473, 474, 486, 552, 673, 679, 680, 682, 683, 691, 694, 695, 696, 741, 755, 759, 760, 769, 773, 774, 778, 786, 792, 818, 827, 829, 831, 833, 834, 839, 851, 872], "procedur": [19, 111, 143, 160, 161, 187, 202, 203, 208, 223, 225, 226, 227, 233, 238, 241, 254, 256, 261, 262, 263, 264, 344, 351, 356, 413, 473, 474, 552, 553, 566, 568, 578, 588, 610, 679, 827, 848, 851, 854, 857, 872], "straightforward": [19, 101, 188, 200, 220, 854, 872], "sign": [19, 28, 38, 39, 47, 150, 203, 223, 226, 231, 263, 264, 268, 269, 272, 275, 276, 277, 332, 439, 447, 468, 470, 471, 506, 519, 520, 521, 522, 523, 578, 679, 680, 682, 683, 831, 854, 872], "strength": [19, 22, 35, 92, 150, 174, 203, 269, 275, 277, 566, 854], "direct": [19, 60, 78, 121, 133, 149, 155, 159, 160, 167, 177, 179, 184, 198, 204, 205, 207, 238, 241, 253, 259, 261, 262, 268, 269, 271, 272, 275, 276, 277, 287, 294, 295, 427, 439, 447, 473, 474, 484, 519, 562, 644, 694, 696, 739, 769, 781, 792, 802, 812, 827, 831, 837, 851, 853, 854, 872], "140": [19, 34, 79, 80, 110, 121, 155, 168, 204, 205, 207, 227, 228, 241, 557, 854], "125": [19, 24, 35, 39, 45, 56, 125, 136, 142, 155, 159, 168, 169, 182, 186, 200, 228, 335], "nbetween": 19, "giovanni": [19, 193, 241, 411, 848], "di": [19, 40, 142, 193, 241, 411, 848], "liberto": [19, 193, 241, 411, 848], "adam": [19, 134, 135, 193, 241, 411, 848, 859, 872], "bednar": [19, 193, 241, 411, 848], "edmund": [19, 193, 241, 411, 848], "fnhum": [19, 150, 193, 241, 411, 557, 848], "00604": [19, 193, 241, 411, 848], "652": [19, 20, 143, 194, 228], "receptive_field_mtrf": [19, 20], "757": [20, 207, 228], "auto_examples_decod": 20, "ssd_spatial_filt": [20, 21], "802": [20, 21, 143, 228], "1033": [20, 168, 193], "retain": [21, 110, 148, 177, 198, 199, 212, 223, 256, 261, 262, 271, 274, 429, 552, 679, 680, 682, 683, 782, 829, 860, 872], "oscillatori": [21, 111, 220, 237, 241, 294, 295, 708, 718, 719, 722], "propos": [21, 238, 566, 571, 831], "surround": [21, 80, 99, 133, 238, 413, 557, 589, 687, 812, 831], "victoria": [21, 872], "peterson": [21, 872], "victoriapeterson09": 21, "freqs_sig": 21, "freqs_nois": 21, "sort_by_spectral_ratio": [21, 413], "filt_params_sign": [21, 413], "l_trans_bandwidth": [21, 111, 112, 200, 209, 261, 262, 263, 264, 407, 416, 441, 443, 473, 474, 584, 872], "filt_params_nois": [21, 413], "72000": [21, 80, 190], "196608": 21, "262144": 21, "327680": 21, "393216": 21, "458752": 21, "67108864": 21, "67174400": 21, "134742016": 21, "136314880": 21, "268435456": 21, "825": [21, 81, 112, 194, 228, 241, 552], "ratio": [21, 58, 86, 125, 143, 165, 194, 200, 203, 205, 220, 225, 226, 227, 228, 241, 268, 269, 272, 275, 276, 277, 284, 413, 534, 535, 536, 552, 553, 633, 650, 651, 692, 695, 742, 799, 847, 854, 872], "accord": [21, 155, 168, 169, 193, 212, 254, 261, 262, 263, 264, 411, 434, 473, 474, 481, 484, 488, 490, 547, 581, 598, 637, 642, 848, 854, 857, 872], "either": [21, 32, 43, 141, 148, 149, 150, 165, 166, 167, 169, 171, 189, 197, 201, 206, 208, 213, 214, 219, 223, 238, 253, 256, 258, 261, 262, 263, 264, 265, 268, 269, 270, 272, 274, 275, 276, 277, 285, 299, 318, 351, 405, 412, 413, 422, 432, 440, 463, 466, 473, 474, 502, 503, 505, 511, 517, 518, 551, 552, 554, 563, 566, 571, 580, 610, 620, 637, 639, 643, 644, 645, 657, 677, 678, 692, 693, 694, 696, 704, 714, 719, 720, 722, 723, 727, 739, 755, 756, 760, 763, 770, 771, 778, 782, 783, 791, 792, 793, 794, 797, 799, 801, 802, 803, 807, 831, 837, 847, 848, 851, 857, 872], "multipli": [21, 187, 200, 223, 266, 268, 269, 272, 275, 276, 277, 296, 413, 439, 519, 525, 692, 854, 857], "eq": [21, 413, 708, 718, 722, 854], "c_n": [21, 854], "reli": [21, 168, 199, 238, 309, 831, 847, 851, 854, 857, 860, 872], "suggest": [21, 26, 140, 143, 161, 199, 200, 201, 202, 203, 205, 261, 262, 286, 288, 739, 830, 835, 836, 851, 853], "pariet": [21, 49, 627, 739], "ssd_sourc": [21, 413], "psd": [21, 27, 67, 73, 90, 103, 104, 109, 131, 136, 165, 171, 194, 197, 201, 215, 236, 237, 258, 261, 262, 263, 264, 266, 267, 271, 272, 356, 410, 446, 473, 474, 510, 515, 518, 525, 526, 530, 533, 549, 599, 614, 640, 694, 696, 699, 702, 710, 711, 733, 739, 755, 771, 793, 807, 848, 872], "psd_array_welch": [21, 236, 261, 262, 263, 264, 413, 473, 474, 694, 696, 862, 872], "n_fft": [21, 106, 107, 112, 131, 236, 238, 261, 262, 263, 264, 413, 473, 474, 525, 693, 694, 696, 697, 699, 700, 702, 711, 721, 724, 793, 872], "4096": [21, 181, 265], "spec_ratio": [21, 413], "alreadi": [21, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 69, 70, 73, 77, 84, 85, 92, 93, 113, 114, 117, 118, 125, 133, 134, 141, 143, 144, 148, 149, 150, 157, 158, 159, 161, 165, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 197, 199, 200, 203, 204, 205, 208, 212, 218, 238, 253, 261, 262, 263, 264, 268, 269, 271, 272, 273, 275, 276, 277, 294, 295, 304, 306, 325, 351, 355, 356, 364, 365, 366, 367, 368, 376, 398, 399, 405, 412, 439, 440, 448, 449, 468, 470, 471, 473, 474, 513, 530, 563, 564, 568, 610, 630, 631, 693, 712, 760, 763, 779, 822, 831, 832, 833, 848, 851, 854, 855, 860, 872], "sorter": 21, "get_spectral_ratio": [21, 413], "spectral": [21, 27, 32, 33, 34, 67, 70, 103, 104, 110, 111, 112, 115, 131, 136, 141, 165, 171, 194, 199, 207, 220, 237, 241, 258, 261, 262, 263, 264, 266, 267, 272, 286, 287, 288, 294, 356, 410, 413, 446, 449, 473, 474, 510, 515, 518, 525, 526, 530, 533, 549, 552, 599, 607, 614, 640, 680, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 709, 710, 711, 719, 720, 722, 723, 733, 739, 755, 765, 771, 793, 807, 848, 860, 872], "orang": [21, 150, 155, 189, 209, 228, 233, 796], "frac": [21, 148, 200, 201, 208, 223, 272, 527, 652, 705, 708, 718, 719, 720, 722, 723, 854], "p_f": 21, "p_": [21, 854], "sf": [21, 223], "384": [21, 35, 79, 143, 170, 207, 228], "spectrum": [21, 73, 81, 101, 102, 106, 110, 131, 136, 142, 164, 165, 171, 197, 201, 203, 205, 215, 220, 237, 238, 239, 240, 241, 261, 262, 263, 264, 446, 473, 474, 552, 694, 710, 711, 713, 734, 782, 784, 793, 827, 857, 860, 862, 872], "lowest": [21, 238, 256, 261, 262, 263, 264, 267, 338, 568, 669, 692, 693, 695, 763, 773], "below50": 21, "bandfilt": 21, "loglog": 21, "fill_between": [21, 111, 150, 233, 237, 238], "10000": [21, 82, 109, 133, 434, 468, 578, 657, 681], "green": [21, 48, 49, 50, 79, 114, 150, 155, 180, 189, 205, 238, 263, 264, 739, 760, 773, 790, 796, 872], "enjoi": [21, 238], "situat": [21, 202, 206, 220, 271, 316, 432, 552, 831, 835, 853, 872], "chunk": [21, 78, 82, 136, 139, 145, 183, 208, 354, 356, 434, 473, 474, 552, 571, 642, 847, 872], "overlap": [21, 69, 82, 97, 107, 139, 145, 150, 165, 167, 190, 199, 208, 213, 214, 236, 241, 255, 261, 262, 263, 264, 323, 356, 407, 416, 429, 441, 443, 444, 463, 473, 474, 512, 513, 525, 538, 553, 568, 569, 659, 678, 711, 739, 769, 793, 827, 872], "ssd_epoch": 21, "pattern_epoch": 21, "1251": [21, 194], "1661": 21, "guido": [21, 241, 413], "nolt": [21, 241, 413], "gabriel": [21, 40, 202, 241, 413, 470, 551, 595], "curio": [21, 241, 413], "reliabl": [21, 101, 168, 201, 241, 413, 552], "basi": [21, 145, 161, 194, 241, 413, 426, 563, 571, 580, 851, 854, 872], "spatio": [21, 46, 59, 164, 183, 193, 194, 223, 224, 234, 235, 241, 261, 263, 264, 266, 272, 273, 274, 357, 411, 413, 428, 469, 470, 473, 518, 519, 533, 549, 580, 607, 620, 622, 647, 648, 649, 650, 651, 652, 653, 654, 664, 666, 667, 668, 672, 673, 675, 682, 683, 684, 739, 854, 872], "1528": [21, 241, 413], "1535": [21, 241, 413], "057": [21, 139, 141, 148, 168, 199, 211, 220, 241, 413], "produc": [22, 38, 80, 81, 115, 117, 126, 143, 160, 171, 178, 182, 189, 200, 202, 208, 223, 238, 241, 253, 256, 259, 261, 267, 271, 273, 274, 276, 277, 300, 301, 324, 327, 348, 352, 353, 354, 356, 363, 383, 463, 465, 473, 474, 505, 511, 512, 515, 525, 538, 552, 555, 561, 564, 565, 571, 577, 578, 597, 603, 607, 627, 641, 643, 644, 645, 646, 655, 656, 657, 658, 660, 679, 680, 681, 682, 683, 687, 739, 755, 756, 792, 821, 847, 853, 854, 857, 872], "abl": [22, 88, 133, 134, 136, 143, 158, 160, 164, 171, 202, 203, 208, 220, 231, 271, 444, 473, 474, 552, 782, 829, 831, 848, 851, 854, 860, 872], "region": [22, 38, 41, 47, 49, 92, 93, 126, 134, 136, 149, 154, 180, 189, 200, 201, 223, 224, 237, 238, 259, 261, 262, 263, 264, 274, 321, 407, 416, 441, 443, 444, 457, 458, 459, 463, 473, 474, 505, 597, 641, 652, 739, 769, 792, 795, 827, 847, 860, 872], "source_spac": [22, 274, 862, 872], "compute_distance_to_sensor": [22, 862, 872], "source_estim": [22, 27, 36, 56, 267, 272, 614, 620, 738], "surf_ori": [22, 47, 48, 49, 54, 55, 67, 157, 177, 219, 265, 361, 530, 872], "leadfield": [22, 41, 157, 162, 164, 171, 294, 295, 296, 872], "7498": [22, 31, 35, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 67, 88, 90, 91, 92, 93, 129, 171, 174, 176, 177, 178, 180, 194, 219, 220], "combin": [22, 24, 29, 30, 31, 34, 35, 37, 40, 41, 42, 44, 47, 48, 49, 51, 54, 55, 58, 59, 67, 85, 88, 90, 91, 92, 93, 99, 110, 124, 126, 129, 130, 136, 139, 140, 141, 144, 149, 150, 154, 165, 167, 169, 174, 176, 177, 178, 179, 180, 181, 187, 189, 190, 193, 194, 197, 205, 206, 208, 209, 212, 214, 220, 223, 225, 228, 231, 233, 241, 253, 256, 261, 262, 263, 264, 267, 268, 269, 272, 274, 275, 276, 277, 287, 294, 295, 302, 303, 311, 351, 352, 353, 354, 359, 367, 383, 405, 410, 412, 424, 427, 464, 473, 474, 489, 513, 514, 519, 522, 525, 526, 528, 529, 552, 564, 565, 604, 614, 620, 627, 663, 692, 694, 695, 696, 699, 702, 710, 739, 755, 763, 770, 771, 778, 781, 799, 831, 854, 857, 860, 872], "local": [22, 26, 27, 33, 34, 35, 36, 40, 41, 42, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 67, 69, 82, 88, 90, 92, 107, 111, 114, 118, 133, 149, 150, 151, 154, 157, 165, 170, 174, 178, 179, 183, 186, 190, 194, 205, 209, 220, 241, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 272, 276, 294, 295, 297, 309, 313, 327, 339, 341, 350, 351, 355, 356, 361, 365, 366, 367, 369, 373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 412, 426, 446, 448, 449, 462, 468, 470, 471, 473, 474, 480, 514, 515, 518, 519, 520, 530, 534, 551, 552, 560, 566, 572, 601, 610, 612, 625, 634, 637, 640, 649, 652, 654, 656, 691, 692, 694, 696, 731, 739, 748, 755, 756, 764, 767, 771, 776, 778, 779, 782, 791, 794, 798, 799, 801, 807, 812, 827, 829, 832, 837, 838, 840, 851, 854, 860, 872], "grad_map": 22, "sensitivity_map": [22, 26, 129, 157, 862], "mag_map": [22, 26], "eeg_map": 22, "204": [22, 34, 72, 75, 91, 111, 129, 139, 145, 147, 157, 165, 166, 167, 168, 171, 182, 183, 194, 197, 198, 199, 204, 205, 208, 212, 213, 214, 215, 220, 228, 237, 872], "gain": [22, 24, 31, 41, 65, 88, 91, 92, 93, 107, 157, 179, 200, 220, 294, 295, 440, 449, 780, 787, 854, 872], "picks_meg": 22, "picks_eeg": 22, "sharex": [22, 45, 72, 88, 111, 193, 205, 238], "dipol": [22, 26, 27, 28, 31, 34, 35, 36, 39, 40, 41, 42, 46, 51, 56, 59, 60, 67, 81, 82, 90, 91, 92, 107, 117, 151, 154, 157, 164, 165, 168, 176, 178, 179, 181, 182, 183, 184, 185, 186, 190, 202, 218, 220, 241, 258, 260, 261, 262, 263, 264, 265, 266, 269, 272, 275, 276, 277, 294, 295, 296, 297, 299, 308, 339, 350, 361, 369, 385, 426, 446, 448, 450, 468, 469, 470, 471, 473, 474, 514, 518, 519, 521, 530, 539, 549, 599, 601, 602, 610, 612, 625, 627, 640, 644, 645, 649, 652, 654, 656, 658, 692, 694, 695, 696, 739, 748, 755, 756, 766, 767, 798, 802, 807, 827, 838, 840, 843, 847, 854, 857, 862, 872], "fontsiz": [22, 37, 110, 118, 125, 143, 175, 208, 798], "fig_2": [22, 171], "hist": [22, 69, 129, 143, 209], "ravel": [22, 109, 111, 115, 129, 193, 200, 224], "brain_sen": 22, "add_text": [22, 43, 47, 48, 49, 50, 54, 55, 174, 176, 178, 739], "font_siz": [22, 43, 47, 48, 49, 50, 54, 55, 174, 176, 178, 739], "02108201": 22, "32186553": 22, "minimum": [22, 31, 57, 69, 77, 81, 135, 139, 148, 150, 161, 165, 167, 176, 178, 179, 199, 200, 205, 219, 231, 241, 256, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 290, 291, 292, 293, 294, 295, 338, 340, 341, 356, 438, 441, 443, 444, 446, 448, 449, 473, 474, 515, 519, 520, 521, 522, 523, 525, 526, 530, 532, 534, 535, 536, 554, 555, 560, 568, 569, 571, 649, 652, 654, 657, 685, 692, 697, 698, 699, 700, 701, 702, 703, 721, 724, 739, 763, 777, 793, 796, 827, 838, 840, 847, 857, 872], "euclidean": [22, 267, 272, 274, 534, 652, 655, 658, 660, 663], "maxdep": 22, "vertno": [22, 43, 48, 49, 50, 157, 174, 177, 219, 231, 232, 233, 272, 274, 275, 857], "depths_map": 22, "brain_dep": 22, "like": [22, 26, 27, 31, 32, 34, 35, 36, 40, 41, 42, 47, 56, 59, 60, 69, 80, 81, 99, 107, 110, 125, 133, 134, 135, 139, 140, 141, 142, 143, 148, 149, 150, 154, 155, 159, 160, 161, 165, 166, 167, 168, 170, 171, 174, 176, 180, 181, 187, 188, 189, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 215, 218, 223, 227, 238, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 285, 299, 300, 301, 304, 305, 306, 309, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 340, 344, 350, 351, 357, 362, 363, 364, 381, 385, 405, 412, 428, 429, 434, 440, 446, 448, 457, 461, 463, 464, 465, 466, 467, 473, 474, 475, 477, 479, 490, 493, 495, 504, 505, 507, 509, 511, 514, 515, 518, 519, 521, 530, 538, 542, 551, 552, 557, 566, 569, 573, 577, 578, 580, 588, 594, 595, 597, 599, 601, 602, 603, 610, 615, 623, 624, 625, 627, 640, 641, 644, 645, 646, 655, 656, 657, 658, 661, 669, 673, 675, 678, 679, 680, 681, 682, 683, 687, 688, 691, 692, 694, 695, 696, 708, 713, 718, 727, 728, 731, 736, 739, 755, 756, 757, 763, 767, 769, 771, 773, 775, 777, 778, 779, 782, 786, 789, 791, 792, 793, 794, 795, 797, 799, 801, 802, 803, 812, 822, 825, 826, 827, 829, 830, 831, 832, 834, 835, 836, 837, 838, 839, 847, 849, 851, 853, 854, 857, 872], "corr": [22, 253], "gradiomt": 22, "815476": 22, "sensitivii": 22, "highest": [22, 133, 175, 203, 256, 259, 261, 262, 263, 264, 267, 449, 473, 474, 568, 669, 692, 693, 695, 767, 779, 854], "close": [22, 60, 69, 95, 105, 109, 115, 118, 125, 133, 139, 141, 143, 148, 150, 157, 159, 171, 190, 198, 199, 202, 203, 205, 206, 209, 215, 220, 223, 228, 259, 261, 262, 263, 264, 267, 339, 355, 376, 428, 448, 464, 465, 473, 474, 552, 569, 573, 663, 687, 694, 696, 739, 745, 746, 767, 769, 786, 792, 795, 831, 835, 843, 851, 854, 857, 872], "decreas": [22, 55, 110, 200, 220, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 405, 426, 473, 474, 552, 688, 692, 695, 719, 720, 722, 723, 739, 854, 872], "rapidli": 22, "inreas": 22, "confirm": [22, 47, 69, 170, 189, 199, 203, 831, 854], "541": [22, 25, 194, 225, 228, 241, 426], "187": [22, 25, 70, 74, 77, 168, 198, 207, 223, 241, 552, 561, 854], "forward_sensitivity_map": [22, 25], "coregistr": [23, 27, 79, 155, 159, 160, 162, 163, 164, 180, 259, 266, 271, 274, 301, 305, 363, 368, 384, 424, 465, 478, 511, 515, 577, 631, 660, 687, 739, 755, 807, 845, 847, 860, 862, 872], "displai": [23, 24, 25, 27, 44, 47, 75, 110, 114, 123, 139, 142, 150, 155, 157, 159, 161, 165, 203, 206, 212, 215, 224, 228, 253, 254, 258, 261, 262, 263, 264, 265, 267, 268, 269, 272, 274, 275, 276, 277, 309, 361, 405, 412, 473, 474, 511, 549, 551, 552, 612, 633, 660, 692, 694, 696, 739, 740, 754, 755, 763, 768, 769, 770, 772, 773, 774, 775, 777, 778, 779, 780, 783, 784, 789, 792, 793, 794, 795, 797, 798, 800, 802, 803, 827, 829, 830, 834, 837, 843, 851, 854, 857, 860, 872], "cerebellum": [23, 25, 27, 41, 274, 640, 641, 755, 807], "volum": [23, 25, 27, 31, 36, 44, 56, 59, 70, 133, 134, 135, 154, 155, 157, 159, 165, 171, 175, 179, 208, 241, 253, 258, 259, 263, 265, 266, 268, 269, 272, 273, 274, 275, 276, 277, 300, 306, 309, 357, 439, 450, 458, 459, 468, 470, 471, 507, 515, 518, 519, 529, 530, 531, 533, 601, 610, 620, 623, 632, 640, 641, 664, 667, 684, 687, 728, 729, 739, 755, 797, 802, 803, 807, 812, 825, 827, 846, 847, 854, 860, 872], "morph": [23, 25, 27, 36, 40, 56, 132, 133, 135, 154, 159, 176, 180, 231, 232, 233, 253, 263, 265, 266, 267, 268, 272, 273, 274, 275, 276, 277, 357, 461, 478, 515, 518, 519, 533, 538, 539, 548, 549, 610, 612, 617, 620, 621, 622, 633, 641, 728, 729, 739, 797, 803, 812, 827, 847, 848, 857, 872], "its": [24, 69, 74, 92, 124, 134, 136, 139, 140, 142, 144, 149, 155, 157, 159, 165, 167, 168, 169, 170, 171, 174, 179, 182, 188, 189, 194, 197, 198, 200, 201, 203, 204, 205, 206, 208, 212, 213, 215, 223, 228, 236, 238, 241, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 309, 405, 408, 412, 419, 420, 439, 446, 470, 471, 472, 473, 474, 481, 488, 551, 552, 566, 648, 658, 678, 679, 680, 682, 683, 692, 694, 695, 696, 708, 711, 718, 729, 756, 763, 767, 770, 771, 778, 782, 790, 791, 792, 794, 797, 799, 801, 802, 827, 829, 830, 831, 835, 837, 847, 849, 851, 853, 854, 872], "freesurf": [24, 32, 33, 34, 38, 41, 43, 44, 47, 114, 134, 135, 155, 157, 160, 162, 163, 164, 171, 174, 181, 190, 241, 257, 259, 266, 267, 268, 269, 271, 272, 274, 275, 276, 277, 300, 304, 305, 306, 309, 357, 362, 363, 364, 368, 380, 382, 383, 385, 388, 404, 424, 439, 457, 458, 459, 461, 463, 464, 465, 466, 467, 478, 505, 507, 509, 511, 538, 577, 597, 613, 614, 615, 616, 622, 623, 624, 625, 640, 641, 655, 658, 669, 687, 688, 690, 731, 738, 739, 750, 755, 757, 767, 797, 802, 803, 807, 812, 821, 822, 825, 827, 835, 837, 838, 843, 848, 851, 872], "alan": [24, 241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695, 872], "leggitt": [24, 872], "ucsf": 24, "setup_source_spac": [24, 41, 107, 154, 157, 159, 177, 190, 274, 622, 641, 662, 666, 847, 854, 862, 872], "setup_volume_source_spac": [24, 41, 50, 155, 157, 159, 206, 268, 269, 272, 274, 275, 276, 277, 439, 507, 622, 640, 854, 862, 872], "aseg_fnam": 24, "aseg": [24, 41, 134, 175, 180, 259, 268, 269, 272, 275, 276, 277, 439, 457, 458, 507, 641, 739, 827, 872], "mgz": [24, 30, 41, 44, 50, 133, 155, 157, 159, 160, 175, 179, 180, 181, 253, 268, 269, 272, 274, 275, 276, 277, 300, 304, 305, 306, 385, 439, 458, 507, 641, 757, 803, 827, 851, 854, 872], "surf": [24, 26, 41, 79, 107, 116, 134, 154, 155, 156, 157, 158, 159, 160, 171, 175, 180, 219, 223, 253, 259, 267, 272, 274, 276, 277, 304, 455, 456, 505, 510, 539, 600, 623, 655, 658, 689, 726, 739, 757, 767, 815, 847, 848, 854], "add_dist": [24, 41, 107, 157, 253, 640, 662, 666, 854, 872], "lh_surf": 24, "cortex": [24, 26, 31, 37, 41, 43, 52, 53, 54, 55, 58, 60, 92, 107, 114, 124, 133, 134, 144, 150, 157, 165, 177, 180, 189, 193, 203, 209, 220, 241, 268, 269, 272, 274, 275, 276, 277, 383, 411, 584, 597, 658, 739, 797, 802, 827, 847, 848, 854, 857, 872], "volume_label": [24, 41, 268, 269, 272, 274, 275, 276, 277, 439, 507, 641, 872], "lh_cereb": 24, "sphere_unit": [24, 157, 641, 872], "octahedron": [24, 41, 107, 155, 157, 159, 253, 268, 272, 276, 640, 797], "subdivis": [24, 41, 107, 157], "octahedr": [24, 41, 107, 157, 404], "vertex": [24, 26, 41, 48, 49, 50, 81, 88, 107, 155, 156, 157, 159, 160, 174, 176, 179, 180, 219, 220, 223, 233, 267, 268, 269, 272, 273, 274, 275, 276, 277, 279, 294, 295, 439, 461, 463, 505, 528, 529, 538, 552, 614, 615, 626, 627, 632, 658, 659, 660, 665, 668, 669, 684, 687, 688, 689, 738, 739, 854, 857, 872], "lh": [24, 26, 28, 29, 37, 38, 39, 41, 43, 47, 48, 49, 54, 55, 60, 67, 88, 90, 92, 93, 102, 106, 107, 114, 124, 125, 132, 134, 154, 155, 156, 157, 158, 159, 160, 171, 174, 175, 177, 178, 181, 182, 190, 219, 220, 232, 233, 253, 257, 267, 268, 269, 272, 275, 276, 277, 461, 505, 597, 615, 620, 630, 739, 797, 802, 822, 854], "triangl": [24, 26, 41, 52, 107, 155, 156, 157, 159, 160, 174, 177, 219, 267, 274, 404, 626, 661, 665, 668, 689, 854, 857], "neighbor": [24, 26, 41, 107, 141, 155, 156, 157, 160, 198, 219, 223, 225, 238, 319, 326, 338, 447, 495, 577, 662, 663, 664, 666, 667, 672, 679, 680, 682, 683, 689, 853, 854, 872], "geometri": [24, 41, 60, 69, 107, 157, 160, 182, 183, 208, 241, 253, 385, 405, 449, 623, 739, 827, 847, 872], "triangul": [24, 41, 52, 107, 157, 174, 224, 225, 253, 274, 315, 623, 626, 820, 825, 854, 857, 872], "4098": [24, 43, 158, 159, 181, 847], "155407": [24, 26, 41, 43, 52, 157, 159], "156866": [24, 26, 41, 43, 52, 157, 159], "132651": 24, "57769": 24, "50733": 24, "401": [24, 79, 207, 223, 228], "voxel": [24, 41, 44, 50, 133, 155, 157, 159, 206, 223, 241, 271, 274, 276, 277, 357, 685, 686, 729, 739, 757, 803, 812, 854, 872], "neighborhood": [24, 41, 50, 155, 157, 206, 274], "005000": [24, 157], "001000": [24, 41, 50, 157], "556177": 24, "16777216": 24, "nonzero": [24, 209, 854], "coord_fram": [24, 107, 116, 121, 122, 123, 134, 135, 155, 156, 157, 158, 168, 169, 177, 181, 182, 183, 189, 208, 259, 265, 266, 274, 309, 322, 327, 426, 477, 504, 562, 563, 571, 580, 739, 755, 767, 857], "export": [24, 30, 41, 110, 113, 133, 139, 146, 147, 148, 154, 164, 167, 171, 188, 189, 216, 255, 261, 262, 263, 264, 268, 269, 272, 274, 275, 276, 277, 334, 336, 473, 474, 488, 607, 692, 694, 695, 696, 829, 831, 837, 842, 858, 862, 872], "nifti": [24, 30, 41, 154, 274, 276, 277, 872], "nii_fnam": [24, 41], "mne_sample_lh": 24, "nii": [24, 30, 41, 154, 253], "export_volum": [24, 41, 274, 872], "mri_resolut": [24, 30, 41, 44, 273, 274, 276, 277, 439, 872], "And": [24, 42, 54, 69, 107, 133, 159, 178, 180, 189, 194, 200, 205, 209, 274, 517, 527, 682, 683, 831, 847, 854], "freeview": [24, 133, 181, 851, 854, 872], "util": [24, 91, 145, 179, 188, 223, 261, 262, 435, 438, 473, 474, 734, 829, 831, 837, 841, 854, 862, 866, 872], "run_subprocess": 24, "mri_fnam": 24, "lut": [24, 458, 613, 739, 827], "opac": [24, 31, 35, 40, 46, 59, 90, 133, 155, 253, 271, 464, 694, 696, 739, 798, 804, 872], "jet": 24, "colorscal": 24, "slice": [24, 35, 40, 59, 133, 139, 142, 155, 157, 159, 171, 180, 193, 214, 227, 253, 255, 256, 259, 260, 261, 262, 263, 264, 266, 271, 276, 277, 307, 310, 324, 326, 356, 365, 407, 408, 411, 415, 418, 421, 426, 443, 444, 473, 474, 551, 552, 554, 567, 568, 569, 571, 574, 577, 586, 588, 595, 660, 678, 679, 680, 682, 683, 687, 692, 694, 695, 696, 698, 700, 701, 702, 703, 705, 717, 719, 720, 722, 723, 757, 763, 767, 769, 770, 773, 775, 776, 782, 783, 784, 786, 788, 790, 793, 803, 854, 857, 860, 872], "left_cerebellum_volume_sourc": [24, 25], "995": [25, 148, 153, 218], "auto_examples_forward": 25, "source_space_morph": [25, 26], "674": [25, 26, 194], "472": [25, 228, 241, 405], "oppos": [26, 60, 220, 344, 414, 827, 831, 857, 872], "evenli": [26, 206, 208, 263, 264, 356, 580, 776, 854], "caution": [26, 27, 141, 156, 168, 261, 262, 263, 264, 407, 473, 474, 475, 695, 748], "fname_tran": [26, 41, 50, 52, 122, 175, 180, 847], "sample_audvis_raw": [26, 29, 41, 45, 50, 52, 67, 70, 81, 90, 91, 92, 101, 102, 105, 106, 108, 109, 114, 116, 121, 122, 125, 139, 141, 145, 148, 149, 155, 157, 159, 161, 165, 166, 167, 169, 171, 175, 177, 180, 181, 197, 198, 201, 202, 204, 205, 206, 208, 212, 213, 214, 215, 219, 220, 225, 226, 227, 236, 253, 831], "fname_bem": [26, 41, 50, 158, 175, 180, 181], "fname_src_f": 26, "fsaverag": [26, 40, 43, 44, 123, 124, 133, 134, 135, 155, 156, 159, 170, 180, 189, 209, 231, 232, 233, 241, 259, 267, 268, 272, 273, 276, 277, 301, 309, 325, 357, 362, 363, 364, 368, 380, 382, 383, 461, 465, 511, 515, 538, 577, 629, 630, 660, 684, 687, 688, 739, 755, 797, 803, 812, 847, 872], "ico": [26, 40, 43, 135, 157, 158, 160, 190, 231, 232, 233, 253, 268, 272, 276, 279, 404, 509, 640, 664, 667, 797, 847, 857, 872], "read_info": [26, 64, 88, 90, 92, 93, 156, 157, 159, 168, 862], "pick_info": [26, 117, 134, 166, 168, 220, 862, 872], "src_f": [26, 44, 179], "read_source_spac": [26, 40, 43, 44, 134, 135, 155, 158, 159, 179, 231, 232, 233, 274, 824, 862], "src_morph": 26, "morph_source_spac": [26, 272, 275, 862, 872], "subject_to": [26, 40, 43, 44, 133, 231, 233, 253, 267, 273, 276, 277, 357, 538, 539, 617, 629, 630, 631, 632, 803, 812, 847], "return": [26, 31, 34, 67, 68, 74, 82, 90, 91, 92, 97, 101, 106, 107, 108, 111, 112, 113, 115, 119, 136, 139, 140, 143, 145, 148, 149, 150, 159, 160, 165, 166, 167, 168, 170, 177, 187, 203, 204, 205, 206, 208, 212, 214, 220, 223, 224, 227, 233, 236, 237, 238, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 373, 374, 375, 376, 378, 379, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 633, 634, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 737, 738, 739, 740, 741, 742, 743, 744, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 808, 809, 812, 813, 824, 825, 826, 849, 853, 854, 857, 872], "mag_map_f": 26, "to_original_src": [26, 272, 275, 872], "track": [26, 111, 141, 148, 165, 168, 190, 198, 201, 213, 214, 218, 552, 849, 860, 872], "sulcal": [26, 159, 739], "gyral": [26, 159, 739], "outlier": [26, 69, 156, 424, 552, 785], "mai": [26, 69, 73, 75, 81, 101, 133, 139, 140, 142, 143, 145, 148, 149, 150, 155, 157, 160, 165, 167, 169, 171, 187, 188, 189, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 220, 225, 228, 231, 241, 256, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 275, 276, 277, 296, 315, 326, 327, 332, 350, 362, 404, 405, 407, 412, 414, 418, 424, 429, 435, 436, 437, 438, 439, 444, 455, 457, 464, 473, 474, 481, 488, 489, 493, 514, 519, 539, 551, 552, 554, 566, 568, 569, 571, 573, 580, 581, 598, 600, 602, 604, 610, 629, 631, 674, 678, 679, 680, 682, 683, 685, 687, 692, 694, 695, 696, 717, 719, 720, 721, 722, 723, 724, 739, 755, 756, 762, 769, 771, 773, 774, 776, 778, 782, 786, 791, 792, 794, 799, 801, 820, 829, 831, 832, 834, 835, 837, 838, 839, 846, 847, 849, 851, 853, 854, 857, 860, 872], "occur": [26, 44, 47, 69, 74, 88, 92, 93, 133, 139, 142, 143, 150, 160, 167, 199, 200, 205, 212, 225, 226, 254, 256, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 279, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 428, 429, 431, 447, 448, 449, 468, 470, 471, 473, 474, 500, 530, 568, 569, 642, 692, 695, 769, 779, 792, 831, 832, 837, 847, 853, 854, 872], "kwarg": [26, 58, 107, 110, 114, 121, 140, 178, 179, 193, 200, 219, 237, 261, 262, 263, 264, 266, 271, 274, 408, 415, 473, 474, 479, 541, 692, 739, 740, 761, 776, 795, 798, 831], "smooth": [26, 38, 43, 59, 70, 81, 112, 132, 133, 134, 141, 150, 155, 165, 180, 193, 205, 223, 224, 231, 232, 233, 241, 261, 262, 263, 264, 267, 268, 269, 272, 273, 275, 276, 277, 357, 473, 474, 552, 561, 679, 680, 682, 683, 688, 708, 710, 718, 719, 720, 722, 723, 739, 748, 770, 797, 800, 802, 804, 805, 808, 850, 872], "smoothing_step": [26, 41, 42, 43, 55, 59, 60, 102, 107, 114, 129, 135, 174, 176, 178, 180, 219, 231, 268, 269, 272, 275, 276, 277, 739, 797, 802], "almost": [26, 112, 139, 167, 831, 854], "equidist": [26, 271], "unevenli": [26, 514], "achiev": [26, 43, 44, 110, 125, 141, 143, 145, 159, 160, 179, 200, 209, 214, 220, 263, 264, 351, 360, 505, 527, 552, 578, 597, 644, 645, 646, 655, 656, 658, 679, 680, 681, 682, 683, 779, 851, 854, 858, 860, 872], "closest": [26, 143, 156, 157, 212, 238, 256, 261, 262, 263, 264, 267, 274, 473, 474, 688, 694, 696, 739, 757, 771, 854, 872], "approxim": [26, 133, 169, 203, 212, 223, 241, 253, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 309, 405, 412, 426, 441, 442, 444, 456, 473, 474, 551, 552, 563, 566, 571, 580, 640, 692, 694, 696, 704, 756, 763, 764, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 827, 854, 872], "brain_subject": 26, "time_label": [26, 33, 34, 59, 60, 107, 122, 129, 220, 231, 232, 233, 263, 264, 268, 269, 272, 275, 276, 277, 739, 774, 797, 802], "brain_f": 26, "remap": [26, 27, 76, 83, 263, 264, 610, 872], "destin": [26, 43, 44, 78, 154, 159, 255, 258, 259, 261, 262, 263, 264, 268, 269, 271, 272, 273, 274, 275, 276, 277, 285, 305, 306, 309, 357, 368, 404, 426, 435, 436, 437, 438, 473, 474, 504, 537, 539, 551, 552, 571, 580, 629, 630, 632, 692, 693, 694, 695, 696, 725, 726, 781, 814, 815, 816, 817, 818, 819, 820, 823, 824, 825, 826, 857, 872], "sourcespac": [26, 41, 43, 45, 50, 107, 157, 158, 159, 175, 206, 265, 267, 268, 269, 272, 275, 276, 277, 279, 357, 439, 459, 469, 506, 507, 515, 528, 529, 534, 539, 622, 640, 641, 642, 649, 652, 654, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 684, 687, 688, 739, 755, 757, 797, 802, 803, 824, 827, 854, 862, 872], "n_vertic": [26, 41, 43, 53, 107, 157, 158, 159, 257, 267, 268, 269, 272, 275, 276, 277, 449, 534, 623, 626, 660, 679, 680, 682, 683, 690, 738, 739, 820, 825], "n_use": [26, 41, 43, 45, 50, 107, 157, 158, 159, 175, 206], "10242": [26, 43, 158, 231, 232, 233, 267, 279, 461, 684, 847], "coord": [26, 41, 43, 45, 50, 107, 123, 157, 158, 159, 160, 175, 206, 339, 448, 739, 740, 809, 825], "conductor": [26, 41, 45, 50, 107, 155, 157, 158, 175, 181, 301, 448, 516, 641, 755, 827, 854, 872], "20484": [26, 135, 158, 160, 231, 232, 253, 509], "999310": [26, 41, 50, 157, 175, 180, 181], "009985": [26, 41, 50, 157, 175, 180, 181], "035787": [26, 41, 50, 157, 175, 180, 181], "012759": [26, 41, 50, 157, 175, 180, 181], "812405": [26, 41, 50, 157, 175, 180], "582954": [26, 41, 50, 157, 175, 180], "034894": [26, 41, 50, 157, 175, 180, 181], "583008": [26, 41, 50, 157, 175, 180], "811716": [26, 41, 50, 157, 175, 180, 181], "991420": [26, 41, 45, 50, 157, 175, 180], "039936": [26, 41, 45, 50, 157, 175, 180], "124467": [26, 41, 45, 50, 157, 175, 180], "060661": [26, 41, 45, 50, 157, 175, 180], "984012": [26, 41, 45, 50, 157, 175, 180], "167456": [26, 41, 45, 50, 157, 175, 180], "115790": [26, 41, 45, 50, 157, 175, 180], "173570": [26, 41, 45, 50, 157, 175, 180], "977991": [26, 41, 45, 50, 157, 175, 180], "homogen": [26, 41, 50, 107, 157, 175, 206, 854, 857, 872], "2154": 26, "8088": 26, "10233": [26, 872], "4171": 26, "2113": [26, 168], "8129": 26, "8125": 26, "10237": 26, "4191": 26, "20470": 26, "00205101": 26, "08784125": 26, "17433707": 26, "work": [27, 31, 67, 69, 74, 77, 81, 85, 131, 133, 136, 137, 138, 139, 143, 146, 147, 148, 149, 150, 154, 155, 159, 160, 165, 166, 167, 168, 172, 173, 174, 176, 177, 180, 183, 187, 189, 191, 192, 194, 197, 199, 201, 202, 203, 204, 205, 208, 209, 212, 214, 215, 217, 220, 225, 228, 231, 233, 236, 237, 238, 241, 248, 252, 255, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 306, 309, 310, 313, 315, 320, 323, 325, 329, 335, 344, 350, 352, 356, 357, 358, 360, 363, 367, 378, 381, 384, 405, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 428, 432, 434, 439, 440, 445, 446, 457, 465, 468, 470, 471, 473, 474, 479, 483, 486, 507, 509, 510, 513, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 530, 536, 543, 547, 548, 549, 551, 552, 553, 565, 580, 594, 603, 607, 612, 618, 622, 623, 624, 625, 640, 641, 669, 687, 692, 694, 695, 696, 739, 740, 742, 755, 761, 763, 769, 771, 772, 777, 778, 782, 786, 791, 792, 794, 799, 805, 807, 809, 812, 817, 827, 830, 831, 832, 836, 837, 838, 848, 849, 853, 854, 855, 857, 860, 872], "variou": [27, 62, 99, 118, 119, 134, 140, 149, 154, 164, 168, 169, 176, 177, 185, 186, 187, 188, 191, 197, 200, 201, 203, 205, 210, 212, 214, 220, 223, 224, 258, 263, 266, 272, 327, 518, 519, 530, 552, 580, 601, 610, 612, 739, 761, 847, 851, 853, 854, 855, 857, 861, 872], "often": [27, 69, 73, 74, 81, 133, 139, 141, 149, 165, 167, 168, 174, 177, 179, 187, 189, 194, 198, 200, 201, 204, 206, 208, 213, 214, 225, 238, 263, 264, 268, 269, 272, 275, 276, 277, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 468, 470, 471, 530, 581, 739, 779, 797, 802, 827, 831, 835, 836, 847, 851, 853, 854, 855, 872], "lack": [27, 69, 189, 258, 270, 285, 299, 518, 581, 727, 855], "narr": [27, 164, 827, 855], "explan": [27, 72, 141, 154, 164, 227, 694, 855, 859], "discov": [27, 849, 855, 872], "ve": [27, 113, 139, 148, 150, 155, 159, 170, 197, 199, 203, 205, 212, 213, 215, 238, 809, 831, 849, 851, 855], "flag": [27, 133, 164, 166, 253, 261, 262, 266, 268, 269, 272, 275, 276, 277, 306, 473, 474, 509, 758, 792, 797, 802, 803, 831, 847, 851, 872], "tutorial_script": [27, 164], "them": [27, 47, 50, 69, 73, 113, 125, 132, 133, 134, 136, 139, 140, 141, 143, 144, 148, 149, 150, 155, 159, 160, 164, 165, 167, 169, 170, 171, 190, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 220, 223, 224, 231, 233, 238, 253, 255, 261, 262, 263, 264, 267, 288, 289, 292, 356, 359, 364, 408, 409, 423, 484, 485, 513, 514, 521, 523, 526, 547, 551, 552, 570, 581, 588, 602, 607, 646, 656, 669, 696, 734, 785, 827, 829, 831, 839, 847, 848, 849, 853, 854, 857, 860, 872], "shortcut": [27, 215, 729, 739, 872], "intention": [27, 207], "record": [27, 62, 65, 69, 73, 81, 82, 107, 133, 136, 139, 143, 145, 150, 155, 161, 165, 167, 168, 169, 171, 174, 183, 185, 187, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 212, 213, 214, 218, 220, 223, 238, 241, 255, 256, 261, 262, 263, 264, 266, 271, 278, 317, 344, 351, 356, 360, 398, 428, 437, 473, 474, 482, 486, 493, 495, 500, 501, 513, 552, 554, 555, 556, 560, 562, 563, 571, 580, 581, 588, 594, 610, 637, 678, 692, 694, 695, 696, 772, 786, 792, 827, 838, 843, 847, 848, 849, 851, 854, 857, 860, 872], "past": [27, 150, 200, 417, 642, 835, 851, 853, 857], "recip": [27, 62, 831], "write": [27, 29, 41, 62, 66, 106, 108, 139, 159, 160, 169, 170, 171, 176, 188, 201, 212, 233, 236, 253, 255, 258, 259, 263, 264, 266, 267, 268, 269, 271, 274, 275, 277, 285, 304, 349, 446, 478, 504, 537, 551, 596, 601, 691, 725, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 831, 834, 835, 847, 849, 851, 854, 860, 872], "manipul": [27, 62, 139, 148, 164, 216, 360, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 512, 848, 854, 861, 872], "ensembl": [27, 62, 66, 136, 266, 369, 474], "neo": [27, 62, 66, 187, 266, 369, 474, 872], "xdf": [27, 62, 66, 266, 369, 474], "anatomi": [27, 87, 89, 155, 174, 258, 261, 263, 264, 265, 266, 267, 272, 274, 305, 474, 478, 518, 519, 530, 601, 607, 612, 615, 642, 644, 645, 646, 657, 739, 827, 848, 872], "css": [27, 76, 83, 171, 241, 258, 264, 265, 266, 267, 271, 272, 361, 473, 549, 550, 567, 601, 612, 615, 656, 658, 872], "bridg": [27, 76, 83, 241, 266, 309, 325, 369, 474, 479, 560, 579, 759, 801, 872], "much": [27, 44, 55, 73, 76, 81, 83, 133, 136, 139, 140, 141, 143, 148, 160, 164, 165, 169, 182, 190, 194, 200, 202, 203, 204, 205, 206, 207, 212, 220, 238, 241, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 309, 325, 369, 429, 440, 444, 445, 473, 474, 479, 560, 579, 633, 759, 801, 831, 834, 835, 854, 860, 872], "gel": [27, 76, 83, 266, 309, 325, 369, 474, 479, 560, 579, 759, 801, 872], "densiti": [27, 32, 33, 34, 67, 74, 76, 77, 83, 103, 104, 117, 131, 133, 136, 141, 159, 160, 165, 171, 189, 194, 198, 199, 207, 220, 237, 241, 258, 261, 262, 263, 264, 266, 267, 272, 287, 294, 323, 356, 367, 410, 446, 473, 474, 510, 515, 518, 525, 526, 530, 533, 549, 552, 560, 561, 582, 583, 587, 599, 607, 614, 640, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 709, 710, 711, 733, 739, 755, 765, 771, 793, 807, 827, 848, 854, 857, 872], "csd": [27, 32, 33, 34, 76, 83, 103, 104, 168, 220, 261, 262, 263, 264, 266, 287, 294, 308, 323, 327, 367, 446, 473, 474, 549, 561, 607, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 709, 712, 765, 827, 872], "nir": [27, 76, 83, 209, 255, 266, 474, 500, 828, 838, 854, 861, 862, 872], "maxwel": [27, 76, 82, 83, 164, 165, 183, 197, 210, 211, 261, 263, 264, 266, 294, 295, 339, 341, 344, 345, 348, 351, 355, 356, 365, 366, 367, 405, 412, 426, 446, 448, 449, 468, 470, 471, 473, 474, 530, 563, 571, 580, 581, 779, 781, 872], "movement": [27, 73, 74, 76, 81, 83, 110, 136, 164, 197, 203, 204, 205, 210, 211, 214, 215, 241, 253, 255, 261, 263, 264, 266, 338, 339, 340, 341, 342, 344, 346, 348, 349, 360, 426, 446, 464, 473, 486, 556, 559, 571, 580, 645, 657, 755, 762, 774, 781, 807, 827, 848, 872], "reestim": [27, 76, 83, 255, 266, 341, 342, 360, 486, 556, 559, 562, 755, 781, 807, 872], "dev_head_t": [27, 76, 78, 83, 155, 165, 168, 212, 255, 266, 312, 341, 342, 360, 369, 486, 556, 559, 563, 571, 580, 643, 644, 645, 657, 755, 781, 807, 857, 872], "muscl": [27, 76, 83, 143, 203, 241, 255, 309, 325, 486, 488, 552, 557, 872], "denois": [27, 76, 83, 194, 258, 261, 263, 264, 266, 351, 356, 413, 425, 446, 448, 473, 516, 549, 553, 563, 588, 607, 770, 872], "oversampl": [27, 76, 83, 241, 261, 263, 264, 351, 425, 446, 448, 473, 516, 588], "shift": [27, 74, 76, 83, 133, 139, 165, 193, 197, 200, 201, 206, 215, 241, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 411, 433, 473, 474, 481, 488, 543, 552, 554, 577, 587, 610, 692, 695, 704, 739, 780, 792, 803, 872], "2d": [27, 31, 35, 40, 59, 94, 95, 117, 120, 128, 150, 171, 189, 194, 198, 201, 203, 204, 205, 206, 223, 228, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 309, 310, 315, 318, 326, 335, 363, 413, 416, 420, 422, 443, 444, 473, 474, 485, 493, 502, 507, 552, 677, 679, 680, 739, 740, 751, 755, 756, 760, 777, 798, 800, 801, 807, 808, 809, 811, 827, 835, 848, 872], "arrowmap": [27, 120, 128, 263, 266, 486, 548, 549, 610, 756, 872], "layout": [27, 47, 98, 113, 120, 128, 130, 131, 141, 149, 150, 158, 188, 225, 261, 262, 263, 264, 266, 270, 316, 318, 320, 323, 324, 325, 335, 369, 473, 474, 480, 484, 486, 495, 496, 516, 692, 694, 696, 740, 744, 752, 755, 763, 777, 788, 791, 800, 806, 807, 827, 854, 862, 872], "parcel": [27, 38, 41, 67, 88, 92, 93, 120, 128, 134, 154, 175, 180, 219, 241, 267, 380, 382, 383, 457, 597, 615, 739, 750, 822, 827, 872], "roi": [27, 38, 120, 128, 150, 154, 198, 224, 241, 259, 261, 263, 264, 266, 321, 431, 434, 489, 519, 739, 775, 827, 854, 857, 872], "rt": [27, 120, 128, 167, 261, 266, 321, 431, 434, 489], "room": [27, 120, 125, 128, 141, 150, 161, 171, 183, 190, 201, 203, 204, 206, 208, 209, 213, 241, 272, 351, 356, 473, 562, 563, 571, 580, 581, 762, 827, 847, 854, 872], "lock": [27, 103, 104, 139, 155, 161, 167, 202, 205, 227, 238, 241, 256, 261, 266, 267, 429, 446, 473, 518, 533, 536, 549, 552, 614, 786, 851], "vectorview": [27, 61, 103, 104, 117, 169, 182, 254, 258, 263, 264, 266, 272, 310, 316, 317, 331, 335, 356, 385, 425, 426, 473, 510, 515, 525, 530, 563, 571, 580, 599, 640, 733, 739, 755, 807, 827, 843, 848, 854], "induc": [27, 103, 104, 105, 161, 165, 225, 226, 227, 238, 241, 261, 262, 266, 272, 446, 473, 518, 533, 535, 536, 549, 692, 695, 708, 718, 719, 722, 851, 872], "erd": [27, 103, 104, 237, 241, 258, 261, 262, 263, 264, 270, 360, 405, 412, 434, 473, 474, 488, 551, 552, 679, 692, 694, 695, 696, 723, 756, 771, 778, 782, 791, 794, 799, 801, 848, 872], "multitap": [27, 73, 81, 101, 103, 104, 107, 136, 141, 142, 165, 171, 194, 203, 228, 236, 237, 241, 261, 262, 263, 264, 266, 284, 369, 418, 444, 473, 474, 525, 692, 694, 695, 696, 699, 702, 719, 720, 721, 722, 723, 724, 743, 860, 872], "morlet": [27, 32, 101, 103, 104, 111, 165, 200, 227, 228, 241, 261, 266, 284, 369, 418, 474, 692, 695, 698, 701, 706, 717, 719, 722, 723, 724, 743, 862, 870, 872], "stockwel": [27, 103, 104, 228, 241, 261, 266, 284, 369, 474, 692, 695, 719, 721, 722, 723, 724, 743, 872], "hilbert": [27, 80, 103, 104, 111, 166, 228, 261, 262, 263, 264, 266, 284, 369, 473, 474, 692, 695, 719, 722, 723, 724, 743, 872], "permut": [27, 96, 100, 110, 164, 223, 224, 225, 226, 229, 230, 233, 234, 235, 241, 261, 263, 264, 266, 272, 273, 274, 315, 357, 428, 473, 518, 519, 533, 543, 549, 607, 620, 622, 664, 672, 679, 680, 681, 682, 683, 684, 695, 722, 739, 760, 763, 860, 872], "1d": [27, 96, 100, 115, 208, 261, 266, 280, 284, 470, 471, 473, 507, 549, 563, 571, 580, 589, 607, 679, 680, 682, 683, 743, 780], "fdr": [27, 96, 99, 100, 261, 266, 473, 549, 607, 670, 676, 872], "rer": [27, 96, 100, 261, 263, 264, 266, 350, 446, 473, 549, 678], "p": [27, 47, 51, 58, 94, 95, 96, 98, 99, 100, 110, 133, 155, 159, 171, 187, 200, 220, 223, 224, 225, 227, 228, 231, 232, 233, 238, 241, 253, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 350, 444, 446, 468, 473, 474, 530, 549, 552, 563, 649, 652, 654, 670, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 692, 695, 757, 770, 831, 847, 851, 854, 872], "sloreta": [27, 28, 30, 31, 36, 38, 39, 41, 48, 50, 56, 59, 88, 102, 164, 165, 174, 177, 178, 180, 185, 186, 219, 231, 233, 241, 258, 261, 263, 264, 266, 267, 268, 269, 272, 275, 276, 277, 351, 446, 473, 518, 519, 520, 521, 522, 523, 525, 526, 530, 531, 532, 533, 535, 536, 612, 614, 739, 764, 827, 872], "timecours": [27, 33, 36, 42, 56, 258, 259, 261, 263, 264, 265, 266, 272, 276, 285, 289, 294, 299, 446, 448, 473, 514, 518, 519, 521, 530, 599, 601, 602, 612, 627, 693, 695, 703, 722, 739], "dic": [27, 31, 36, 56, 101, 164, 179, 221, 222, 241, 258, 261, 265, 266, 272, 285, 286, 287, 288, 289, 291, 294, 295, 351, 355, 446, 473, 474, 479, 508, 518, 519, 520, 530, 543, 548, 549, 612, 627, 646, 657, 693, 695, 701, 703, 722, 739, 764, 827, 838, 848, 872], "beamform": [27, 36, 51, 56, 101, 164, 165, 185, 186, 220, 241, 258, 261, 263, 264, 265, 266, 272, 273, 274, 276, 277, 351, 355, 357, 361, 367, 446, 448, 473, 520, 528, 530, 549, 601, 612, 622, 693, 695, 701, 703, 722, 739, 764, 827, 840, 848, 862, 872], "er": [27, 32, 33, 36, 56, 110, 237, 241, 258, 261, 262, 265, 266, 272, 287, 291, 294, 295, 351, 355, 446, 473, 520, 530, 549, 612, 678, 701, 739, 764, 770, 848, 872], "lcmv": [27, 31, 36, 56, 164, 174, 185, 186, 258, 261, 263, 264, 265, 266, 272, 273, 274, 276, 277, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 351, 355, 357, 361, 367, 446, 449, 473, 520, 528, 530, 549, 601, 612, 622, 701, 739, 764, 827, 872], "spars": [27, 36, 44, 46, 56, 117, 174, 223, 228, 231, 233, 241, 253, 258, 259, 263, 265, 266, 272, 273, 274, 305, 315, 326, 357, 367, 369, 449, 468, 469, 470, 471, 518, 519, 530, 601, 610, 612, 622, 658, 672, 678, 679, 680, 682, 683, 739, 766, 767, 798, 831, 838, 840, 854, 857, 872], "gamma": [27, 36, 56, 110, 111, 115, 241, 258, 261, 262, 263, 264, 265, 266, 272, 367, 468, 469, 473, 474, 527, 601, 610, 612, 694, 696, 708, 718, 719, 722, 766, 767, 771, 798, 854, 857, 872], "bayesian": [27, 36, 56, 241, 258, 263, 265, 266, 272, 351, 367, 468, 469, 601, 610, 612, 766, 767, 798, 838, 854], "mix": [27, 36, 56, 59, 101, 194, 203, 238, 241, 258, 259, 263, 265, 266, 268, 269, 272, 273, 274, 275, 276, 277, 294, 295, 357, 439, 450, 468, 469, 470, 471, 507, 515, 518, 519, 530, 552, 578, 601, 610, 612, 615, 620, 622, 640, 641, 647, 648, 649, 650, 651, 652, 653, 654, 684, 687, 739, 766, 767, 782, 797, 798, 802, 860, 872], "norm": [27, 31, 36, 47, 48, 49, 50, 56, 57, 59, 77, 82, 114, 148, 155, 161, 165, 176, 178, 184, 205, 219, 220, 241, 258, 259, 261, 262, 263, 264, 265, 266, 272, 273, 274, 357, 449, 468, 469, 470, 471, 473, 474, 518, 519, 520, 521, 522, 523, 525, 526, 528, 529, 530, 532, 534, 535, 536, 601, 610, 612, 622, 649, 652, 654, 704, 766, 767, 796, 798, 827, 838, 840, 847, 857, 872], "mxne": [27, 31, 36, 56, 174, 258, 259, 261, 263, 264, 265, 266, 272, 273, 274, 351, 357, 446, 469, 470, 471, 518, 519, 530, 601, 610, 612, 622, 739, 766, 767, 798, 827, 872], "irmxn": [27, 36, 56, 258, 259, 263, 265, 266, 272, 273, 274, 357, 469, 470, 518, 519, 530, 601, 610, 612, 622, 766, 767, 798], "volumetr": [27, 36, 50, 56, 134, 157, 159, 174, 176, 180, 263, 268, 269, 272, 273, 274, 275, 276, 277, 357, 507, 518, 519, 533, 610, 621, 622, 739, 797, 802, 803, 805, 812, 827, 860, 872], "xfit": [27, 36, 56, 258, 259, 261, 263, 264, 265, 266, 276, 299, 446, 448, 473, 514, 518, 519, 521, 530, 599, 601, 602, 627, 872], "reweight": [27, 36, 40, 56, 241, 258, 261, 263, 264, 265, 272, 351, 446, 469, 470, 471, 612, 798], "tf": [27, 31, 36, 56, 59, 200, 258, 261, 263, 264, 265, 272, 351, 446, 469, 471, 612, 798, 872], "multiscal": [27, 36, 56, 258, 261, 263, 264, 265, 272, 351, 446, 469, 471, 612, 798], "circular": [27, 36, 56, 150, 219, 272, 274, 361, 463, 529, 531, 533, 612, 615, 739, 744, 838, 854, 872], "graph": [27, 36, 56, 115, 241, 272, 274, 361, 529, 531, 533, 612, 615, 662, 663, 664, 665, 666, 667, 668, 739, 744, 872], "spread": [27, 36, 42, 54, 55, 56, 70, 79, 81, 82, 111, 164, 167, 200, 205, 206, 208, 221, 222, 241, 258, 261, 263, 264, 265, 266, 267, 272, 274, 276, 351, 361, 446, 473, 515, 518, 519, 520, 528, 529, 530, 531, 533, 534, 560, 580, 601, 610, 612, 615, 641, 654, 656, 659, 739, 831, 854, 872], "psf": [27, 36, 54, 55, 56, 258, 263, 265, 266, 272, 274, 276, 361, 515, 518, 528, 529, 530, 531, 534, 601, 610, 612, 641, 739, 872], "talk": [27, 36, 56, 159, 200, 208, 225, 258, 261, 263, 265, 266, 272, 285, 295, 296, 351, 361, 367, 426, 446, 518, 528, 529, 530, 531, 534, 549, 562, 571, 580, 601, 610, 612, 739, 827, 853, 872], "rap": [27, 36, 56, 241, 258, 263, 265, 297, 601, 610, 612, 766, 767, 872], "music": [27, 36, 56, 203, 241, 258, 263, 265, 297, 601, 610, 612, 766, 767, 872], "resolut": [27, 30, 36, 44, 47, 48, 50, 56, 112, 118, 133, 145, 155, 156, 157, 175, 225, 226, 241, 254, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 296, 357, 361, 405, 412, 439, 461, 464, 473, 474, 518, 519, 528, 529, 530, 531, 534, 550, 551, 552, 601, 610, 612, 692, 694, 696, 708, 718, 719, 720, 721, 722, 723, 724, 739, 756, 771, 778, 782, 791, 794, 797, 799, 801, 802, 827, 838, 847, 853, 854, 872], "auto_examples_python": 27, "auto_examples_jupyt": 27, "fname_raw": [28, 29, 61, 101, 102, 125, 156, 181, 207], "fname_ev": [28, 92, 101, 102], "label_nam": [28, 29, 47, 90, 92, 102, 105, 180, 219, 458], "fname_label": [28, 29, 102, 105, 106], "assumpt": [28, 107, 119, 139, 140, 143, 151, 161, 200, 204, 208, 223, 263, 264, 588, 674, 779, 851, 854, 872], "read_label": [28, 29, 37, 39, 90, 102, 105, 106, 272, 275, 642, 862], "add": [28, 37, 43, 44, 69, 73, 88, 92, 93, 99, 112, 118, 124, 125, 133, 135, 139, 140, 142, 143, 150, 160, 167, 170, 171, 174, 175, 180, 188, 190, 193, 197, 198, 199, 201, 203, 204, 206, 212, 214, 219, 220, 223, 228, 238, 253, 255, 257, 258, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 309, 368, 405, 407, 412, 416, 429, 441, 443, 444, 464, 473, 474, 551, 552, 562, 564, 565, 566, 600, 622, 631, 634, 639, 640, 642, 643, 644, 645, 646, 656, 689, 692, 694, 695, 696, 734, 739, 742, 756, 759, 760, 769, 771, 776, 778, 782, 791, 794, 799, 801, 808, 827, 829, 831, 834, 837, 838, 857, 872], "053": [28, 49, 68, 72, 90, 91, 102, 105, 106, 108, 109, 115, 150, 161, 165, 166, 167, 168, 176, 197, 198, 199, 204, 205, 206, 208, 212, 213, 214, 215, 220, 225, 226], "sqrt": [28, 115, 182, 183, 219, 220, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 557, 578, 708, 718, 722, 793, 854], "mean_stc": 28, "flip": [28, 38, 39, 113, 160, 203, 223, 253, 268, 269, 272, 275, 276, 277, 300, 439, 506, 679, 809, 854, 872], "cancel": [28, 79, 179, 200, 208, 268, 269, 272, 275, 276, 277, 426, 439, 552, 580, 783, 847, 854, 857], "label_sign_flip": [28, 862, 872], "label_mean": 28, "label_mean_flip": 28, "stc_evok": 28, "sub": [28, 32, 33, 34, 41, 46, 65, 69, 81, 111, 145, 154, 169, 237, 238, 261, 262, 263, 264, 266, 432, 473, 474, 578, 641, 693, 739, 765, 843, 851, 854, 872], "stc_evoked_label": 28, "in_label": [28, 37, 38, 39, 272, 275, 276, 277, 872], "care": [28, 34, 140, 149, 150, 159, 200, 203, 204, 212, 214, 367, 471, 678, 854, 872], "polar": [28, 47, 141, 205, 761], "label_mean_evok": 28, "1711": [28, 34, 45, 105, 119, 130, 141, 144, 145, 151, 165, 168, 176, 179, 199, 220, 228, 231, 233], "benefit": [28, 45, 46, 55, 59, 70, 124, 171, 189, 241, 534, 561, 652, 847, 853], "1e3": [28, 29, 38, 39, 41, 68, 71, 95, 111, 136, 148, 150, 155, 156, 176, 184, 219, 225, 226, 227, 233], "h0": [28, 94, 98, 223, 224, 225, 226, 227, 231, 232, 233, 679, 680, 681, 682, 683], "h1": [28, 94, 110, 223, 224, 225, 226, 227, 228, 231, 232, 233], "linewidth": [28, 39, 95, 110, 111, 135, 149, 159, 204, 223, 258, 261, 262, 263, 264, 405, 412, 473, 474, 551, 692, 694, 696, 739, 756, 763, 771, 778, 794, 795, 798, 799, 801], "h2": 28, "unflip": 28, "pool": [28, 139, 148, 150, 165, 213, 294, 295, 468, 470, 471, 519, 520, 521, 522, 523, 525, 526, 536, 860], "stc_trial": 28, "_nolegend_": 28, "001": [28, 32, 33, 56, 66, 70, 78, 81, 82, 115, 119, 126, 128, 139, 140, 141, 143, 144, 148, 149, 150, 159, 165, 167, 168, 171, 187, 193, 197, 199, 200, 201, 202, 205, 212, 220, 223, 224, 225, 227, 228, 231, 232, 237, 241, 527, 561, 642, 679, 680, 682, 683, 848, 854], "compute_mne_inverse_epochs_in_label": [28, 56], "apply_inverse_raw": [29, 519, 520, 521, 523, 862, 872], "smaller": [29, 41, 74, 102, 125, 141, 148, 157, 200, 205, 208, 223, 224, 238, 256, 261, 262, 268, 269, 272, 275, 276, 277, 471, 554, 568, 571, 578, 679, 680, 682, 683, 707, 715, 739, 797, 802, 847, 854, 872], "time_as_index": [29, 40, 82, 139, 148, 174, 212, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695, 872], "mne_": [29, 30, 857], "s_raw_inverse_": 29, "overwrit": [29, 41, 102, 106, 108, 139, 160, 171, 190, 214, 253, 255, 258, 259, 261, 262, 263, 264, 268, 269, 271, 272, 273, 274, 275, 276, 277, 285, 304, 305, 306, 309, 435, 436, 437, 438, 473, 474, 504, 537, 551, 552, 561, 630, 631, 634, 638, 692, 693, 694, 695, 696, 725, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 872], "25800": [29, 45, 67, 70, 78, 81, 90, 91, 101, 102, 105, 108, 109, 116, 121, 125, 145, 155, 161, 166, 167, 171, 181, 197, 201, 202, 204, 205, 206, 212, 215, 219, 220, 225, 226, 227], "192599": [29, 45, 67, 70, 81, 90, 91, 101, 102, 105, 108, 109, 116, 121, 125, 145, 155, 161, 166, 167, 171, 181, 197, 201, 202, 204, 205, 212, 215, 219, 220, 225, 226, 227], "670": [29, 45, 67, 70, 79, 81, 90, 91, 101, 102, 105, 108, 109, 116, 121, 125, 145, 155, 161, 166, 167, 171, 181, 197, 201, 202, 204, 205, 207, 212, 215, 219, 220, 225, 226, 227, 228], "173": [29, 56, 70, 144, 157, 168, 194, 223, 228, 241, 274, 561], "compute_mne_inverse_raw_in_label": [29, 56], "nilearn": [30, 41, 44, 133, 170, 175, 180, 181, 276, 277, 691, 803], "plot_stat_map": 30, "index_img": 30, "read_evok": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 84, 85, 114, 117, 118, 122, 125, 148, 149, 171, 175, 177, 178, 180, 261, 262, 263, 264, 271, 473, 474, 818, 851, 862, 872], "vol": [30, 44, 50, 134, 159, 175, 179, 180, 259, 261, 262, 263, 264, 274, 297, 426, 620, 647, 648, 649, 650, 651, 652, 653, 654, 779], "4d": [30, 121, 164, 185, 186, 187, 258, 259, 261, 262, 263, 264, 266, 299, 351, 446, 448, 473, 474, 484, 516, 549, 550, 679, 680, 692, 694, 695, 696, 755, 767, 854, 857, 872], "img": [30, 114, 159, 181, 223, 276, 277], "as_volum": [30, 276, 277, 872], "nib": [30, 44, 133, 155], "s_invers": 30, "gz": [30, 139, 154, 171, 204, 253, 260, 261, 262, 263, 264, 274, 309, 381, 473, 474, 493, 533, 537, 552, 592, 598, 601, 603, 610, 612, 618, 622, 657, 813, 816, 818, 819, 823, 824, 837, 872], "t1_fname": [30, 159, 175], "499": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 84, 85, 114, 117, 118, 125, 141, 142, 148, 167, 171, 175, 177, 178, 180, 223, 226, 227, 228], "11271": [30, 44, 180, 872], "916": [30, 56, 228, 238], "429": [30, 56, 207, 223, 228], "compute_mne_inverse_volum": [30, 56], "plug": [31, 831, 854], "facil": [31, 254], "implement": [31, 69, 133, 165, 168, 178, 194, 201, 203, 208, 220, 238, 254, 258, 266, 270, 285, 286, 288, 299, 329, 351, 357, 405, 412, 413, 418, 422, 445, 468, 470, 471, 473, 474, 515, 518, 519, 520, 521, 522, 523, 525, 526, 536, 552, 553, 560, 566, 571, 595, 617, 676, 704, 717, 719, 727, 792, 831, 838, 846, 855, 860, 870, 872], "wmne": [31, 470, 471], "eloreta": [31, 164, 165, 174, 177, 178, 185, 186, 231, 233, 258, 261, 263, 264, 266, 272, 294, 295, 351, 446, 468, 470, 471, 518, 519, 520, 521, 522, 523, 525, 526, 530, 532, 535, 536, 612, 739, 764, 827, 872], "educ": [31, 853], "shall": [31, 143, 199, 263, 264, 429, 552, 660, 774, 831, 853, 860], "develop": [31, 69, 133, 170, 203, 208, 252, 253, 329, 571, 691, 748, 834, 835, 837, 838, 848, 851, 853, 857, 872], "meant": [31, 88, 93, 107, 170, 223, 270, 286, 288, 338, 407, 417, 507, 639, 733, 734, 742, 872], "practic": [31, 70, 97, 112, 150, 159, 167, 199, 200, 206, 208, 238, 241, 267, 294, 552, 561, 614, 620, 678, 827, 831, 853, 854], "apply_solv": 31, "linalg": [31, 82, 133, 155, 159, 184, 204, 355, 678, 851, 872], "plot_sparse_source_estim": [31, 35, 40, 46, 59, 90, 804, 862, 872], "ave_fnam": [31, 40, 59, 67, 90], "cov_fnam": [31, 35, 40, 45, 51, 59, 67, 90, 171, 220, 271], "handl": [31, 40, 46, 59, 125, 139, 143, 145, 150, 154, 159, 164, 165, 167, 169, 171, 172, 205, 208, 210, 211, 256, 261, 262, 263, 264, 266, 339, 432, 446, 473, 474, 546, 549, 552, 580, 637, 704, 740, 748, 756, 759, 761, 772, 783, 787, 811, 831, 857, 872], "365": [31, 40, 41, 45, 59, 79, 107, 110, 168, 205, 223, 228, 241, 267, 272, 351], "auxiliari": [31, 141, 368], "def": [31, 34, 67, 75, 82, 90, 91, 92, 107, 111, 115, 131, 133, 136, 149, 150, 155, 159, 200, 201, 204, 220, 223, 227, 233, 238, 831], "ones": [31, 81, 86, 109, 140, 169, 177, 182, 184, 187, 204, 205, 223, 238, 254, 267, 382, 440, 466, 467, 473, 474, 511, 554, 571, 614, 620, 627, 677, 831, 851, 854, 857, 872], "account": [31, 78, 107, 121, 133, 140, 141, 155, 157, 161, 179, 184, 198, 199, 205, 206, 208, 212, 213, 223, 228, 238, 255, 258, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 468, 470, 471, 530, 552, 555, 578, 779, 831, 851, 854, 857, 872], "constraint": [31, 60, 157, 165, 177, 193, 206, 241, 261, 262, 284, 296, 448, 530, 770, 857, 872], "weigth": 31, "formul": [31, 708, 718, 719, 722, 854], "problem": [31, 40, 59, 69, 86, 94, 95, 112, 136, 143, 160, 165, 174, 175, 187, 188, 194, 198, 202, 203, 205, 206, 212, 223, 224, 228, 231, 232, 233, 238, 241, 470, 489, 552, 571, 598, 604, 679, 680, 682, 683, 685, 686, 805, 830, 831, 836, 851, 852, 854, 860, 872], "bia": [31, 40, 69, 82, 140, 150, 183, 200, 231, 233, 237, 241, 258, 263, 264, 294, 295, 357, 418, 468, 470, 471, 530, 578, 711, 773, 778, 854, 872], "callabl": [31, 149, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 280, 309, 311, 337, 362, 405, 408, 412, 415, 422, 434, 473, 474, 522, 551, 552, 566, 628, 658, 659, 671, 678, 679, 680, 682, 683, 692, 694, 695, 696, 737, 739, 752, 756, 763, 770, 771, 773, 778, 782, 791, 794, 797, 799, 800, 801, 802, 872], "boolean": [31, 99, 140, 142, 168, 170, 204, 205, 212, 214, 258, 261, 262, 263, 264, 270, 272, 405, 412, 473, 474, 551, 552, 679, 680, 682, 683, 692, 694, 696, 770, 771, 775, 778, 782, 791, 794, 799, 831, 858, 872], "what": [31, 59, 70, 81, 88, 92, 93, 115, 125, 126, 133, 135, 139, 140, 141, 142, 143, 155, 159, 168, 170, 174, 179, 180, 181, 189, 198, 200, 209, 212, 213, 214, 220, 223, 225, 228, 236, 238, 256, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 351, 355, 362, 365, 366, 381, 398, 424, 429, 434, 438, 455, 472, 473, 474, 489, 538, 585, 598, 600, 604, 629, 631, 642, 692, 695, 720, 723, 762, 797, 802, 820, 827, 831, 834, 836, 837, 839, 857, 860, 862], "tangenti": [31, 294, 295, 450, 468, 470, 471, 530, 854, 857], "discret": [31, 45, 102, 157, 175, 194, 206, 236, 241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 274, 275, 276, 277, 412, 450, 468, 470, 471, 473, 474, 514, 530, 641, 692, 694, 695, 696, 704, 710, 853, 872], "coeffici": [31, 99, 107, 140, 145, 157, 193, 200, 202, 409, 411, 417, 423, 440, 441, 442, 470, 471, 551, 562, 563, 571, 580, 591, 595, 646, 655, 656, 677, 678, 694, 696, 705, 707, 710, 715, 780, 872], "privat": [31, 831, 872], "inverse_spars": [31, 35, 40, 46, 59, 174, 840, 862, 872], "mxne_invers": 31, "_prepare_gain": 31, "is_fixed_ori": [31, 872], "_reapply_source_weight": 31, "_make_sparse_stc": 31, "all_ch_nam": 31, "gain_info": 31, "source_weight": 31, "weights_min": [31, 40, 59, 470, 471, 872], "dot": [31, 77, 85, 110, 117, 122, 125, 143, 149, 159, 174, 177, 181, 184, 189, 193, 198, 205, 209, 231, 233, 259, 263, 264, 268, 272, 276, 678, 767, 773, 831, 854, 872], "n_orient": [31, 268, 269, 272, 275, 276, 277, 439, 534], "active_set": 31, "l2": [31, 40, 54, 55, 241, 470, 471, 534, 652, 704, 840, 857], "penal": 31, "strongest": [31, 35, 40, 47, 59, 150], "n_dipol": [31, 51, 67, 90, 91, 157, 259, 268, 269, 272, 275, 276, 277, 297, 425, 528, 529, 531, 658], "depend": [31, 69, 80, 99, 124, 134, 135, 136, 140, 148, 150, 154, 156, 157, 161, 169, 170, 171, 189, 193, 199, 200, 202, 204, 205, 208, 214, 220, 223, 224, 225, 233, 238, 241, 255, 261, 262, 263, 264, 268, 269, 272, 274, 275, 276, 277, 296, 315, 326, 339, 340, 399, 411, 417, 431, 439, 449, 473, 474, 481, 488, 490, 552, 562, 571, 588, 594, 673, 679, 680, 682, 683, 685, 687, 688, 691, 692, 694, 695, 696, 714, 739, 748, 760, 762, 763, 769, 770, 773, 786, 792, 812, 829, 830, 831, 834, 837, 838, 839, 846, 847, 848, 851, 854], "n_active_dipol": 31, "bool": [31, 118, 170, 228, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 317, 318, 319, 320, 323, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 453, 455, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 585, 587, 588, 589, 592, 593, 594, 595, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 673, 676, 679, 680, 681, 682, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 708, 709, 710, 711, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 729, 734, 738, 739, 744, 747, 748, 752, 753, 755, 756, 757, 758, 760, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 851], "entri": [31, 107, 133, 139, 141, 143, 149, 150, 165, 169, 170, 194, 198, 212, 255, 258, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 283, 311, 338, 339, 340, 341, 342, 343, 405, 412, 415, 427, 437, 440, 471, 472, 473, 474, 519, 527, 551, 552, 566, 638, 641, 643, 644, 645, 657, 672, 692, 694, 695, 696, 739, 756, 757, 769, 770, 771, 775, 778, 782, 791, 792, 794, 797, 798, 799, 801, 802, 831, 834, 854, 857, 872], "x_full": 31, "solv": [31, 59, 160, 174, 405, 489, 552, 598, 604, 678, 854, 860], "ey": [31, 73, 123, 133, 134, 136, 157, 171, 182, 197, 199, 202, 204, 205, 376, 489, 569, 573, 604], "dtype": [31, 90, 92, 112, 118, 143, 155, 166, 218, 220, 228, 261, 262, 263, 264, 411, 472, 473, 474, 854], "bgcolor": [31, 35, 40, 46, 59, 90, 155, 159, 177, 473, 474, 748, 758, 792, 798], "468": [31, 41, 56, 202, 228, 241, 551, 595], "custom_inverse_solv": [31, 56], "synchron": [32, 33, 34, 110, 145, 209, 237, 241, 254, 294, 475, 481, 488, 831, 848, 872], "marijn": [32, 33, 45, 60, 72, 101, 160, 220, 241, 294, 295, 859, 872], "van": [32, 33, 43, 45, 60, 72, 101, 124, 160, 179, 200, 220, 241, 273, 294, 295, 357, 383, 560, 854, 859, 872], "vliet": [32, 33, 45, 60, 72, 101, 160, 220, 241, 294, 295, 859, 872], "vanvliet": [32, 33, 45, 60, 72, 101, 160, 220], "rockhil": [32, 69, 70, 81, 112, 113, 114, 118, 133, 134, 135, 227, 228, 241, 859, 872], "aprockhil": [32, 69, 70, 81, 112, 113, 114, 118, 133, 134, 135, 227, 228], "mailbox": [32, 33, 69, 70, 81, 111, 112, 113, 114, 118, 125, 133, 134, 135, 225, 227, 228, 231, 237], "tfr_morlet": [32, 112, 165, 225, 226, 227, 228, 237, 418, 717, 719, 720, 721, 723, 724, 862, 872], "csd_tfr": [32, 862, 872], "make_d": [32, 33, 34, 220, 286, 287, 288, 289, 827, 862, 872], "apply_dics_tfr_epoch": [32, 286, 287, 288, 862, 872], "organ": [32, 70, 227, 228, 241, 561, 682, 683, 848, 853, 857], "_task": [32, 33, 34, 46, 111, 237], "_meg": [32, 33, 34, 46, 111, 171, 237, 253, 473, 474, 493, 872], "5000e": 32, "mostli": [32, 107, 140, 174, 177, 187, 199, 202, 373, 374, 375, 378, 379, 381, 386, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 450, 468, 470, 471, 473, 474, 530, 739, 827], "wavelet": [32, 101, 111, 165, 200, 227, 241, 418, 536, 692, 695, 698, 701, 706, 708, 717, 718, 719, 720, 722, 723, 827, 872], "tfr": [32, 110, 200, 225, 226, 237, 418, 519, 520, 521, 522, 692, 695, 698, 701, 703, 714, 719, 720, 722, 723, 724, 725, 799, 827, 860, 862, 870, 872], "wish": [32, 143, 170, 189, 206, 224, 225, 231, 360, 473, 474, 571, 740, 742, 831, 839, 853], "epochs_tfr": [32, 289, 523, 703], "return_itc": [32, 110, 112, 165, 225, 226, 227, 228, 237, 721, 722, 723, 724], "buffer": [32, 112, 188, 253, 266, 472, 473, 474, 489, 571, 580, 598, 604, 857, 872], "01_task": [32, 33, 34, 46, 111, 169, 237, 238], "somato_meg": [32, 33, 34, 46, 111, 237], "237600": [32, 33, 34, 46, 111, 237], "506999": [32, 33, 34, 46, 111, 237], "1688": [32, 33, 34, 46, 111, 237], "266": [32, 33, 34, 46, 111, 168, 200, 207, 228, 237, 241], "9989760657919393": 32, "1052": [32, 33, 34], "0121": [32, 34, 144, 165, 168, 212, 220], "0211": [32, 34, 165, 168, 220], "1331": [32, 34, 144, 168, 199, 207, 220], "2211": [32, 34, 168, 220], "2241": [32, 34, 158, 168, 220], "2521": [32, 34, 139, 148, 168, 220], "1641": [32, 34, 168, 220], "1831": [32, 34, 168, 220], "1921": [32, 34, 168, 220], "1941": [32, 34, 168, 220], "1611": [32, 34, 118, 168, 220], "0441": [32, 34, 168, 220], "1631": [32, 34, 118, 168, 220], "0231": [32, 34, 118, 165, 168, 220], "1411": [32, 34, 144, 145, 168, 199, 205, 220], "0341": [32, 34, 168, 220], "1621": [32, 34, 118, 168, 220], "1811": [32, 34, 118, 149, 168, 212, 220], "1521": [32, 34, 165, 168, 220], "1721": [32, 34, 168, 220], "1911": [32, 34, 168, 220], "1931": [32, 34, 168, 220], "2111": [32, 34, 168, 220], "2121": [32, 34, 168, 220], "2021": [32, 34, 143, 168, 179, 189, 220, 241, 384, 500, 848, 853], "1341": [32, 34, 168, 207, 220], "0221": [32, 34, 165, 168, 220], "0241": [32, 34, 168, 220], "1731": [32, 34, 35, 168, 193, 220], "2041": [32, 34, 168, 220], "0731": [32, 34, 168, 220], "1141": [32, 34, 168, 207, 220], "0131": [32, 34, 144, 165, 168, 220], "period": [32, 79, 119, 139, 140, 143, 144, 148, 149, 171, 179, 197, 199, 200, 201, 203, 238, 256, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 351, 552, 555, 556, 557, 568, 610, 611, 704, 735, 773, 827, 831, 853, 872], "baseline_csd": 32, "scalar": [32, 140, 159, 179, 220, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 287, 294, 295, 296, 405, 412, 473, 474, 552, 678, 694, 696, 739, 771, 778, 782, 791, 797, 802, 872], "beamfom": 32, "noise_csd": [32, 33, 294], "reduce_rank": [32, 33, 34, 49, 294, 295, 872], "real_filt": [32, 33, 34, 220, 294, 872], "epochs_stc": 32, "return_gener": [32, 102, 288, 289, 292, 439, 521, 523, 526], "nsourc": [32, 52, 265, 857], "epoch_stc": 32, "conj": [32, 112, 294, 295], "apply_baselin": [32, 110, 125, 140, 148, 171, 177, 197, 202, 203, 205, 225, 226, 227, 228, 237, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 692, 695, 872], "8155": [32, 33, 34, 46], "sti": [32, 33, 42, 46, 68, 71, 72, 78, 88, 91, 92, 93, 105, 106, 108, 111, 139, 141, 148, 151, 165, 167, 168, 176, 187, 194, 198, 202, 203, 205, 213, 220, 225, 236, 237, 254, 446, 447, 473, 474, 490, 827, 872], "003": [32, 33, 39, 56, 71, 119, 126, 139, 140, 141, 144, 148, 165, 166, 168, 171, 199, 200, 202, 203, 205, 212, 220, 241], "005": [32, 33, 56, 57, 119, 126, 139, 141, 148, 156, 158, 161, 165, 168, 202, 220, 233, 259, 341, 554, 767], "014": [32, 33, 42, 46, 61, 68, 71, 72, 78, 88, 91, 92, 93, 105, 106, 108, 111, 126, 139, 141, 148, 151, 165, 167, 168, 176, 187, 194, 198, 202, 203, 205, 213, 220, 225, 236, 237, 254, 446, 447, 473, 474, 490, 872], "015": [32, 33, 126, 139, 141, 148, 168, 202, 203, 220, 231, 241, 259, 566, 652, 767], "006": [32, 33, 119, 126, 139, 141, 144, 148, 157, 165, 168, 202, 205, 220, 241, 253, 267, 272, 509, 847], "074": 32, "gyri": [32, 92, 154, 157, 219, 241], "border": [32, 38, 59, 102, 114, 124, 154, 180, 258, 261, 262, 263, 264, 270, 405, 412, 431, 473, 474, 551, 552, 566, 692, 694, 696, 739, 771, 777, 778, 782, 791, 794, 799, 800, 801, 872], "central": [32, 126, 140], "sulcu": 32, "primari": [32, 92, 148, 853, 854], "s1": [32, 495], "m1": [32, 169, 206, 223, 238, 261, 262, 263, 264, 473, 474, 637, 872], "4500": 32, "dorsal": [32, 739], "brain_kwarg": [32, 41, 114, 133, 179, 180, 268, 269, 272, 275, 276, 277, 797, 802], "add_data_kwarg": [32, 134, 180, 268, 269, 272, 275, 276, 277, 797, 802], "fmid": [32, 268, 269, 272, 275, 276, 277, 739, 758, 797, 802, 803, 872], "scale_factor": [32, 35, 48, 49, 50, 59, 176, 269, 275, 277, 309, 739, 789, 798, 802], "colorbar_kwarg": [32, 134, 180, 739], "label_font_s": [32, 134, 180], "movi": [32, 60, 134, 135, 176, 180, 739, 872], "websit": [32, 134, 135, 150, 176, 180, 188, 205, 398, 399, 566, 831, 834, 853], "save_movi": [32, 60, 134, 135, 176, 180, 739, 872], "time_view": [32, 60, 107, 125, 134, 135, 176, 180, 190, 268, 269, 272, 275, 276, 277, 739, 797, 802, 872], "onc": [32, 34, 43, 44, 60, 69, 92, 118, 125, 131, 134, 141, 142, 143, 144, 149, 150, 165, 167, 168, 169, 171, 176, 180, 197, 198, 200, 202, 203, 204, 205, 212, 214, 254, 255, 261, 262, 263, 264, 273, 279, 371, 441, 443, 444, 473, 474, 570, 578, 720, 723, 760, 792, 831, 847, 853, 854, 872], "688": [32, 194, 207, 228], "33913449": 32, "817": [32, 228], "80202112": 32, "3163": 32, "68479992": 32, "1467": [32, 56, 241, 351], "dics_epoch": [32, 56, 872], "roman": [33, 241, 846, 872], "goj": [33, 241, 846, 872], "appelhoff": [33, 111, 125, 225, 228, 231, 237, 859, 872], "csd_morlet": [33, 34, 101, 220, 693, 697, 698, 699, 700, 702, 862, 872], "apply_dics_csd": [33, 34, 220, 286, 288, 289, 294, 862, 872], "shorter": [33, 112, 200, 208, 238, 268, 269, 272, 275, 276, 277, 429, 434, 473, 474, 557, 581, 587, 704, 708, 718, 719, 720, 722, 723, 792, 872], "498464098687909": [33, 34], "logspac": [33, 34, 193, 237, 351], "log10": [33, 34, 98, 131, 200, 220, 223, 237, 238, 692], "loss": [33, 69, 199, 204, 261, 262, 263, 264, 408, 415, 435, 436, 437, 438, 473, 474, 674, 854], "csd_baselin": [33, 34], "csd_er": [33, 34], "block": [33, 34, 59, 63, 101, 131, 133, 141, 142, 171, 190, 199, 220, 259, 261, 262, 263, 264, 271, 446, 464, 465, 470, 473, 474, 541, 552, 578, 611, 679, 680, 682, 683, 694, 696, 739, 767, 769, 786, 792, 793, 795, 829, 836, 854, 857, 872], "rather": [33, 34, 60, 139, 140, 145, 148, 155, 165, 166, 167, 169, 170, 177, 187, 194, 199, 205, 206, 212, 223, 227, 231, 236, 261, 262, 265, 268, 269, 272, 275, 276, 277, 412, 473, 474, 517, 525, 526, 536, 543, 545, 579, 684, 687, 739, 757, 792, 827, 829, 831, 847, 848, 853, 854, 872], "entir": [33, 73, 102, 143, 150, 175, 183, 199, 200, 202, 208, 213, 223, 238, 256, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 284, 406, 421, 519, 520, 521, 522, 523, 552, 568, 610, 642, 692, 831, 872], "baseline_source_pow": 33, "beta_source_pow": 33, "messag": [33, 170, 236, 253, 268, 269, 272, 275, 276, 277, 362, 439, 489, 598, 604, 638, 639, 734, 735, 736, 739, 829, 831, 837, 842, 851, 857, 872], "40188307": 33, "5102619": 33, "34636424": 33, "joachim": [33, 179, 220, 241, 287, 294], "gro\u00df": [33, 179, 220, 241, 287, 294], "jan": [33, 179, 220, 241, 287, 294, 295, 847, 872], "kujala": [33, 179, 220, 241, 287, 294, 295], "matti": [33, 40, 54, 55, 58, 59, 124, 161, 177, 179, 208, 220, 241, 272, 287, 294, 470, 471, 519, 530, 534, 563, 567, 580, 649, 654, 838, 846, 851, 854, 872], "h\u00e4m\u00e4l\u00e4inen": [33, 40, 58, 59, 124, 177, 179, 220, 241, 272, 287, 294, 426, 470, 471, 519, 530, 534, 567, 649, 652, 654, 838, 872], "lar": [33, 179, 220, 241, 287, 294], "timmermann": [33, 179, 220, 241, 287, 294], "alfon": [33, 179, 220, 241, 287, 294], "schnitzler": [33, 179, 220, 241, 287, 294], "riitta": [33, 111, 177, 179, 220, 241, 287, 294, 295], "salmelin": [33, 111, 179, 220, 241, 287, 294, 295], "nation": [33, 179, 220, 241, 252, 287, 294, 859], "academi": [33, 179, 220, 241, 287, 294], "694": [33, 179, 193, 220, 241, 287, 294], "699": [33, 139, 150, 179, 220, 228, 241, 287, 294], "2001": [33, 41, 69, 179, 193, 206, 220, 241, 261, 262, 263, 264, 287, 294, 411, 473, 474, 560, 637, 676], "1073": [33, 179, 194, 207, 220, 241, 287, 294], "pna": [33, 179, 220, 241, 287, 294], "945": [33, 56, 228, 263, 264, 692, 777], "dics_source_pow": [33, 56, 872], "luke": [34, 38, 42, 74, 79, 80, 107, 859, 872], "bloi": [34, 38, 42, 79, 80, 107, 859, 872], "make_lcmv": [34, 49, 179, 286, 288, 290, 291, 292, 293, 294, 296, 827, 862, 872], "apply_lcmv_cov": [34, 179, 290, 292, 293, 862, 872], "apply_inverse_cov": [34, 42, 519, 521, 522, 523, 862, 872], "90092": 34, "maxfilt": [34, 187, 208, 266, 347, 348, 349, 426, 473, 474, 525, 526, 535, 536, 562, 563, 571, 580, 643, 644, 645, 657, 857, 872], "conserv": [34, 69, 145, 223, 560, 641, 739, 872], "advanc": [34, 72, 125, 160, 161, 202, 214, 241, 258, 261, 262, 263, 264, 270, 351, 369, 405, 412, 464, 468, 473, 474, 551, 552, 566, 657, 692, 694, 696, 748, 756, 771, 778, 782, 791, 794, 799, 801, 830, 833, 835, 851, 852, 854, 856, 860, 872], "correctli": [34, 43, 44, 149, 189, 202, 233, 261, 262, 263, 264, 329, 438, 473, 474, 754, 773, 829, 830, 837, 847, 848, 854, 857, 872], "preserv": [34, 154, 155, 159, 165, 166, 193, 198, 203, 212, 223, 227, 256, 261, 262, 263, 264, 404, 435, 436, 437, 438, 473, 474, 568, 577, 692, 694, 695, 696, 854, 872], "compute_rank": [34, 258, 413, 764, 862, 872], "tol": [34, 40, 46, 59, 73, 171, 355, 448, 468, 470, 471, 872], "tol_kind": [34, 355, 872], "active_win": 34, "baseline_win": 34, "baseline_cov": 34, "active_cov": 34, "common_cov": 34, "plot_cov": [34, 42, 176, 862, 872], "3737": 34, "_gen_dic": 34, "stc_base": [34, 42], "stc_act": 34, "_gen_lcmv": 34, "_gen_mn": 34, "stc_dic": 34, "stc_lcmv": 34, "stc_dspm": [34, 40, 59], "2231": [34, 168, 220], "0711": [34, 168, 220], "2531": [34, 168, 199, 220], "0331": [34, 165, 168, 220], "0321": [34, 165, 168, 220], "0621": [34, 168, 220], "1211": [34, 168, 220], "0531": [34, 168, 220], "2541": [34, 168, 199, 220], "2321": [34, 168, 220], "0941": [34, 168, 220], "1841": [34, 168, 220], "0931": [34, 168, 220], "0741": [34, 168, 220], "2331": [34, 168, 220, 546], "1311": [34, 133, 134, 168, 207, 220], "2421": [34, 118, 168, 199, 220], "0311": [34, 165, 168, 220], "1041": [34, 168, 220], "0811": [34, 168, 199, 220], "1531": [34, 165, 168, 220, 253], "1021": [34, 168, 170, 220, 241, 261, 262, 263, 264, 473, 474], "0721": [34, 168, 220], "2631": [34, 168, 199, 220], "1541": [34, 168, 199, 207, 220], "1241": [34, 168, 220], "2411": [34, 118, 168, 220], "1431": [34, 168, 199, 220], "2511": [34, 168, 220], "0641": [34, 168, 220], "0921": [34, 168, 220], "0541": [34, 168, 220], "1111": [34, 140, 150, 168, 200, 220, 228, 241, 351, 678, 679, 680, 682, 683, 831], "2311": [34, 168, 220], "0111": [34, 144, 165, 168, 175, 199, 205, 212, 220, 627], "2221": [34, 168, 220], "1511": [34, 165, 168, 220], "1011": [34, 168, 220], "0141": [34, 168, 199, 220], "2341": [34, 168, 220], "1741": [34, 168, 193, 199, 220, 241], "2031": [34, 168, 220], "1421": [34, 144, 145, 168, 199, 205, 220], "1321": [34, 168, 199, 220], "1221": [34, 168, 194, 199, 220], "2641": [34, 168, 220], "1121": [34, 168, 220], "2141": [34, 168, 199, 220, 223, 241, 685, 686], "0611": [34, 168, 220], "1441": [34, 144, 168, 190, 199, 207, 220], "0511": [34, 145, 168, 220], "1821": [34, 168, 220, 223], "2441": [34, 168, 193, 220], "0421": [34, 168, 220], "0821": [34, 168, 220], "1031": [34, 168, 194, 220, 830], "0411": [34, 168, 220], "0521": [34, 168, 199, 220], "2611": [34, 168, 199, 220], "1231": [34, 168, 220], "2621": [34, 168, 199, 220], "0631": [34, 168, 220], "0911": [34, 168, 199, 220], "2431": [34, 168, 220], "2131": [34, 168, 199, 220, 223, 241, 685, 686], "0431": [34, 168, 220], "planar": [34, 40, 42, 50, 58, 59, 70, 82, 90, 92, 107, 109, 117, 129, 141, 145, 171, 176, 177, 178, 182, 187, 194, 197, 204, 205, 208, 220, 223, 756, 854, 857, 872], "7615": [34, 124, 241, 383], "004172": 34, "17919e": 34, "exp": [34, 40, 42, 50, 58, 59, 88, 90, 92, 107, 176, 177, 178, 181, 190, 194, 205, 220, 223, 294, 295, 449, 468, 470, 471, 530], "37508": 34, "81894e": 34, "brain_dic": 34, "5205929": 34, "6585548": 34, "71744034": 34, "brain_lcmv": 34, "37202028": 34, "44229054": 34, "93188606": 34, "brain_dspm": 34, "71161502": 34, "88782419": 34, "99242158": 34, "996": [34, 56, 228], "270": [34, 46, 79, 168, 190, 223, 228, 872], "evoked_ers_source_pow": [34, 56], "detail": [35, 44, 45, 78, 117, 139, 141, 148, 149, 150, 154, 155, 157, 165, 166, 167, 168, 169, 170, 171, 174, 176, 179, 187, 188, 189, 193, 194, 198, 199, 201, 203, 204, 205, 208, 212, 213, 214, 215, 233, 236, 241, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 418, 421, 422, 424, 426, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 455, 456, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 548, 551, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 597, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 640, 641, 643, 644, 645, 646, 655, 656, 657, 658, 660, 662, 663, 664, 665, 666, 667, 668, 679, 680, 681, 682, 683, 685, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 711, 714, 715, 719, 720, 722, 723, 724, 725, 728, 729, 734, 738, 739, 747, 754, 755, 756, 763, 764, 767, 770, 771, 772, 773, 774, 777, 778, 779, 781, 782, 783, 784, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 808, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 831, 847, 848, 850, 851, 855, 860, 872], "luessi": [35, 47, 102, 241, 846, 872], "mluessi": [35, 47, 102], "nmr": [35, 43, 47, 102, 112, 154, 212, 268, 272, 276, 364, 797, 854], "mgh": [35, 43, 47, 58, 102, 112, 154, 169, 212, 268, 272, 276, 325, 364, 641, 797, 842, 848, 854, 860, 872], "harvard": [35, 43, 47, 58, 102, 112, 154, 252, 268, 272, 276, 364, 797, 854, 859], "daniel": [35, 40, 46, 58, 59, 90, 125, 207, 241, 272, 470, 471, 846, 859, 872], "strohmeier": [35, 40, 46, 59, 90, 241, 470, 471, 846, 872], "tu": [35, 40, 46, 59, 90], "ilmenau": [35, 40, 46, 59, 90, 252, 859], "de": [35, 40, 46, 59, 90, 97, 110, 193, 194, 238, 241, 252, 411, 552, 566, 847, 859, 872], "gamma_map": [35, 862, 872], "make_stc_from_dipol": [35, 40, 46, 59, 862, 872], "plot_dipole_loc": [35, 40, 51, 59, 177, 182, 184, 862, 872], "plot_dipole_amplitud": [35, 40, 51, 59, 862], "evoked_fnam": [35, 51, 88, 93, 261, 262, 263, 264, 473, 474], "50e": [35, 90, 150, 202], "300e": 35, "xyz_same_gamma": [35, 468, 872], "return_residu": [35, 40, 46, 51, 59, 176, 297, 468, 470, 471, 519, 872], "return_as_dipol": [35, 40, 46, 59, 468, 470, 471, 872], "303": [35, 86, 143, 147, 168, 219, 228, 232], "364": [35, 40, 48, 49, 54, 55, 58, 59, 67, 79, 90, 92, 107, 110, 119, 161, 165, 168, 177, 228, 236], "converg": [35, 40, 46, 59, 171, 178, 203, 468, 519, 552, 699, 710, 854, 872], "054e": 35, "22233": 35, "856e": 35, "20712": 35, "375e": 35, "17166": 35, "061e": 35, "12996": 35, "273e": 35, "10107": 35, "574e": 35, "8307": 35, "319e": 35, "7209": 35, "369e": 35, "6342": 35, "631e": 35, "5694": 35, "047e": 35, "5142": 35, "579e": 35, "4692": 35, "199e": 35, "4287": 35, "889e": 35, "4002": [35, 854], "634e": 35, "3696": 35, "422e": 35, "3429": 35, "246e": 35, "3153": 35, "099e": 35, "2952": [35, 161], "748e": 35, "2745": [35, 193], "703e": 35, "2559": 35, "817e": 35, "2394": 35, "063e": 35, "2229": 35, "417e": 35, "2067": 35, "883e": 35, "1944": 35, "711e": 35, "551e": 35, "400e": 35, "1617": 35, "266e": 35, "166e": 35, "1440": [35, 207], "066e": 35, "1350": 35, "964e": 35, "1245": 35, "861e": 35, "1200": [35, 219], "754e": 35, "1128": 35, "643e": 35, "1077": [35, 58, 194, 241, 272, 534, 652], "529e": 35, "1017": [35, 241], "410e": 35, "975": [35, 72, 194, 228], "288e": 35, "924": [35, 88, 89, 226, 228], "163e": 35, "873": [35, 228], "036e": 35, "837": [35, 194, 228], "906e": 35, "798": [35, 143, 228], "776e": 35, "744": [35, 194, 228], "644e": 35, "705": [35, 131, 165, 173, 228], "513e": 35, "687": [35, 61, 228], "382e": 35, "660": [35, 79, 194, 228], "253e": 35, "125e": 35, "000e": 35, "877e": 35, "570": [35, 79, 228], "758e": 35, "552": [35, 228], "642e": 35, "528": [35, 142, 207], "495": [35, 80, 134, 207, 218, 223, 228], "421e": 35, "486": [35, 142, 194, 228], "316e": 35, "465": [35, 201, 228], "215e": 35, "119e": 35, "417": [35, 117, 207, 223, 241, 552, 578, 756], "026e": 35, "937e": 35, "853e": 35, "387": [35, 79, 228, 241, 294], "772e": 35, "378": [35, 79, 110, 228], "695e": 35, "348": [35, 110, 161, 168, 193, 200, 207, 228, 872], "622e": 35, "339": [35, 110, 168, 207, 228], "552e": 35, "333": [35, 74, 110, 168, 193, 207, 223, 228], "486e": 35, "330": [35, 50, 79, 80, 168, 182, 207, 228, 872], "423e": 35, "312": [35, 168, 207, 228], "306e": 35, "252e": 35, "297": [35, 113, 128, 168, 223, 228], "201e": 35, "152e": 35, "273": [35, 46, 165, 168, 183, 228, 872], "106e": 35, "261": [35, 168, 207, 228], "062e": 35, "020e": 35, "807e": 35, "234": [35, 168, 207], "431e": 35, "222": [35, 46, 168, 190, 223, 227, 233], "074e": 35, "219": [35, 41, 168, 207, 228, 872], "735e": 35, "412e": 35, "105e": 35, "207": [35, 112, 157, 168, 223, 227, 228, 241], "813e": 35, "535e": 35, "192": [35, 168, 170, 207, 223], "271e": 35, "186": [35, 45, 143, 168, 175, 180, 223, 227, 228], "018e": 35, "778e": 35, "174": [35, 124, 168, 194, 207, 223, 227, 228, 241, 274], "549e": 35, "168": [35, 45, 127, 168, 175, 180, 194, 223, 227, 228, 233], "121e": 35, "159": [35, 52, 56, 112, 148, 168, 194, 228], "922e": 35, "156": [35, 45, 168, 175, 180, 227, 228, 235, 274], "731e": 35, "138": [35, 73, 83, 165, 168, 170, 223, 227, 241, 274, 557, 872], "895e": 35, "132": [35, 46, 49, 56, 150, 168, 175, 181, 186, 228], "749e": 35, "608e": 35, "126": [35, 168, 223, 227, 228], "344e": 35, "123": [35, 66, 121, 168, 203, 205, 227, 228, 342], "220e": 35, "104": [35, 61, 168, 194, 207, 223, 227, 228, 241, 652, 857, 872], "100e": [35, 65, 144, 150, 199, 220], "117": [35, 41, 56, 61, 144, 168, 223, 227, 228, 241, 721, 724, 872], "985e": 35, "875e": 35, "107": [35, 61, 111, 113, 133, 139, 168, 194, 223, 227, 228, 241, 857, 872], "769e": 35, "666e": 35, "473e": 35, "208e": 35, "126e": 35, "115": [35, 61, 82, 92, 168, 182, 196, 227, 241, 560], "688e": 35, "500e": 35, "441e": 35, "384e": 35, "329e": 35, "127": [35, 168, 228], "275e": 35, "137": [35, 51, 133, 157, 163, 168, 207, 223, 228, 274], "154": [35, 136, 160, 163, 167, 168, 194, 223, 227, 228], "155": [35, 168, 194, 227, 228, 238, 872], "247e": 35, "649e": 35, "116e": 35, "179": [35, 56, 58, 74, 168, 207, 241, 587, 854], "523e": 35, "211": [35, 41, 59, 144, 168, 223, 227, 228], "307e": 35, "227": [35, 150, 168, 194, 207, 228, 241, 384, 848], "214e": 35, "041e": 35, "293": [35, 98, 100, 110, 168, 182, 223, 241], "730e": 35, "124e": 35, "160e": 35, "313": [35, 168, 207, 223, 228, 872], "783e": 35, "340": [35, 51, 79, 80, 83, 86, 110, 121, 168, 190, 193, 207, 223, 228, 241, 297, 872], "168e": 35, "343": [35, 110, 142, 168, 169, 207, 228, 872], "949e": 35, "886e": 35, "420": [35, 79, 223, 228], "855e": 35, "reach": [35, 40, 46, 59, 171, 238, 254, 261, 262, 263, 264, 473, 474, 648, 692, 694, 696, 699, 710, 720, 723, 736, 771, 778, 799, 872], "dip": [35, 40, 59, 82, 114, 175, 180, 182, 183, 184, 209, 238, 259, 448, 602, 872], "mri_head_t": [35, 40, 51, 59, 180, 265, 266, 466, 467, 857], "fig_nam": [35, 40, 46, 59, 798], "david": [35, 42, 117, 124, 127, 133, 193, 200, 236, 241, 261, 262, 263, 264, 351, 383, 411, 468, 473, 474, 520, 694, 696, 704, 710, 721, 724, 756, 854, 872], "wipf": [35, 241, 468], "srikantan": [35, 220, 241, 294, 295, 468], "nagarajan": [35, 220, 241, 294, 295, 468], "unifi": [35, 136, 179, 200, 241, 468, 652, 872], "947": [35, 228, 241, 468], "966": [35, 42, 127, 161, 171, 205, 228, 241, 468], "059": [35, 139, 141, 148, 168, 198, 212, 220, 241, 468], "gamma_map_invers": [35, 56], "form": [37, 140, 142, 159, 167, 174, 177, 197, 200, 202, 203, 204, 208, 223, 225, 228, 231, 258, 261, 262, 263, 264, 266, 268, 269, 270, 272, 275, 276, 277, 332, 405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 440, 468, 470, 471, 473, 474, 505, 514, 519, 521, 522, 523, 551, 552, 553, 561, 566, 580, 623, 626, 641, 642, 643, 644, 645, 657, 679, 680, 682, 683, 692, 694, 695, 696, 704, 756, 771, 773, 778, 782, 791, 794, 799, 801, 820, 825, 831, 850, 851, 853, 854, 857, 872], "merg": [37, 140, 213, 214, 256, 261, 263, 264, 350, 447, 517, 634, 641, 831, 853, 872], "christian": [37, 118, 124, 132, 143, 241, 383, 384, 405, 429, 652, 846, 848, 872], "brodbeck": [37, 118, 132, 241, 846, 872], "christianbrodbeck": [37, 118, 132], "read_source_estim": [37, 43, 53, 114, 125, 132, 174, 180, 232, 862, 872], "aud_lh": 37, "aud_rh": 37, "stc_lh": [37, 47], "stc_rh": [37, 47], "stc_bh": 37, "calcul": [37, 38, 58, 79, 99, 110, 126, 143, 149, 150, 157, 161, 165, 169, 175, 179, 187, 193, 199, 200, 203, 205, 212, 223, 224, 228, 237, 256, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 294, 295, 301, 315, 351, 355, 356, 365, 366, 367, 405, 412, 413, 440, 448, 449, 462, 468, 470, 471, 473, 474, 509, 514, 515, 516, 530, 552, 559, 564, 565, 568, 571, 580, 584, 600, 610, 622, 657, 671, 679, 680, 682, 683, 685, 686, 693, 704, 711, 779, 784, 793, 827, 851, 857, 872], "mass": [37, 164, 223, 224, 229, 230, 261, 266, 267, 272, 473, 549, 607, 641, 649, 655, 658, 673, 675, 676, 680, 695, 722, 729, 869, 872], "mni": [37, 133, 134, 135, 158, 175, 180, 181, 189, 259, 276, 277, 309, 325, 364, 466, 624, 731, 738, 739, 803, 854, 872], "vtx": 37, "t_lh": 37, "center_of_mass": [37, 219, 267, 272, 655, 658, 872], "mni_lh": 37, "vertex_to_mni": [37, 267, 272, 862], "t_rh": 37, "mni_rh": 37, "275": [37, 46, 121, 165, 168, 169, 190, 223, 228, 241, 335, 405, 848, 854], "625": [37, 142, 194, 207, 228], "hl": 37, "hr": 37, "hb": 37, "figlegend": 37, "229": [37, 56, 168, 207, 223, 228], "label_activation_from_stc": [37, 56], "typic": [38, 44, 60, 69, 81, 133, 142, 144, 148, 150, 155, 159, 166, 167, 169, 187, 190, 194, 197, 198, 200, 202, 203, 204, 205, 206, 208, 214, 223, 238, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 276, 277, 294, 295, 309, 310, 328, 339, 341, 351, 355, 356, 357, 359, 412, 423, 448, 458, 461, 473, 474, 532, 551, 552, 554, 562, 566, 581, 591, 594, 604, 641, 663, 677, 678, 679, 680, 682, 683, 692, 695, 739, 777, 786, 790, 792, 827, 830, 831, 837, 848, 849, 851, 853, 854, 872], "anatom": [38, 44, 69, 92, 133, 134, 155, 159, 175, 180, 241, 259, 276, 277, 362, 457, 739, 757, 761, 803, 827, 854, 872], "yield": [38, 139, 141, 144, 148, 150, 154, 160, 170, 179, 201, 203, 212, 213, 238, 256, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 315, 405, 412, 422, 426, 552, 555, 562, 563, 571, 580, 644, 645, 684, 719, 720, 722, 723, 739, 782, 827, 849, 851, 854, 872], "peak": [38, 54, 55, 60, 69, 71, 73, 80, 88, 92, 93, 125, 130, 144, 148, 149, 165, 171, 174, 176, 177, 179, 182, 183, 184, 190, 197, 199, 202, 203, 205, 207, 209, 223, 238, 253, 256, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 356, 534, 552, 554, 557, 564, 565, 568, 569, 571, 572, 573, 575, 576, 589, 649, 678, 692, 769, 774, 776, 777, 778, 812, 847, 854, 872], "banksst": [38, 41, 47], "aparc_label_nam": 38, "stc_mean": 38, "grow": [38, 88, 93, 238, 463, 505, 597, 838, 853], "halt": [38, 133, 141, 259, 261, 262, 263, 264, 464, 465, 473, 474, 552, 694, 696, 767, 769, 786, 792, 795, 837, 872], "read_labels_from_annot": [38, 41, 47, 67, 88, 92, 93, 124, 219, 538, 614, 822, 862, 872], "parc": [38, 41, 47, 615, 822], "aparc": [38, 41, 47, 67, 88, 92, 93, 124, 134, 154, 175, 180, 219, 259, 268, 269, 272, 275, 276, 277, 380, 439, 457, 507, 615, 630, 739, 827, 872], "regexp": [38, 88, 92, 93, 198, 203, 205, 434, 546, 615, 872], "stc_mean_label": 38, "func_label": 38, "stc_to_label": [38, 862, 872], "maximum": [38, 47, 48, 50, 58, 81, 113, 117, 150, 175, 176, 180, 181, 199, 200, 203, 212, 241, 256, 261, 262, 263, 264, 268, 269, 272, 274, 275, 276, 277, 294, 295, 323, 339, 362, 405, 412, 438, 439, 442, 463, 468, 470, 471, 473, 474, 505, 513, 519, 528, 529, 534, 552, 554, 568, 578, 579, 657, 679, 680, 682, 683, 688, 692, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 710, 718, 721, 722, 724, 739, 763, 768, 774, 777, 782, 797, 802, 803, 812, 827, 854, 872], "anat_label": 38, "stc_anat_label": 38, "pca_anat": 38, "extract_label_time_cours": [38, 39, 41, 180, 268, 269, 272, 275, 276, 277, 507, 862, 872], "pca_flip": [38, 39, 268, 269, 272, 275, 276, 277, 439], "stc_func_label": 38, "pca_func": 38, "show_view": [38, 48, 107, 114, 133, 134, 159, 180, 189, 209, 220, 233, 268, 269, 272, 275, 276, 277, 739, 797, 802, 872], "add_label": [38, 59, 102, 114, 124, 739], "73227205": 38, "80078852": 38, "62750681": 38, "393": [38, 56, 79, 101, 104, 194, 223, 228], "label_from_stc": [38, 56], "strategi": [39, 194, 197, 203, 205, 206, 241, 350, 362, 410, 422, 470, 652, 710, 771, 851], "simpl": [39, 46, 126, 143, 144, 150, 159, 160, 165, 180, 193, 194, 200, 204, 220, 223, 238, 241, 253, 321, 350, 405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 490, 553, 708, 718, 787, 831, 848, 854, 872], "patheffect": [39, 159], "path_effect": [39, 159], "label_fnam": 39, "stc_label": 39, "mean_flip": [39, 268, 269, 272, 275, 276, 277, 439, 872], "tc": 39, "pe": 39, "stroke": [39, 159], "foreground": [39, 141, 159, 268, 269, 272, 275, 276, 277, 739, 797, 802, 872], "possibl": [39, 43, 45, 112, 133, 136, 139, 141, 142, 144, 148, 149, 150, 155, 159, 160, 167, 168, 169, 170, 171, 177, 179, 187, 189, 194, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 212, 213, 214, 215, 220, 223, 227, 228, 236, 238, 255, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 321, 323, 351, 405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 422, 428, 446, 456, 464, 473, 474, 481, 496, 552, 553, 587, 588, 606, 607, 637, 674, 679, 681, 692, 693, 696, 726, 755, 765, 773, 774, 777, 782, 785, 786, 793, 829, 836, 848, 849, 851, 853, 854, 857, 858, 872], "vectorsourceestim": [39, 60, 174, 268, 269, 272, 273, 276, 277, 289, 290, 468, 470, 471, 519, 520, 521, 522, 523, 528, 529, 620, 802, 803, 827, 862, 872], "stc_vec": [39, 41, 179], "stc_vec_label": 39, "ee6677": [39, 159, 708, 718], "228833": 39, "4477aa": [39, 708, 718], "xyz": [39, 155, 159, 177, 268, 269, 272, 275, 276, 277, 309, 327, 439, 468, 496, 809, 872], "zorder": [39, 159, 263, 264, 708, 718, 773, 776, 872], "label_source_activ": [39, 56], "ir": 40, "l0": [40, 470], "sparser": [40, 268, 272, 276, 797], "convex": [40, 46, 59, 241, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 872], "mixed_norm": [40, 174, 471, 862, 872], "sure": [40, 43, 45, 69, 107, 111, 133, 134, 139, 140, 143, 150, 155, 160, 161, 165, 169, 170, 171, 175, 188, 198, 201, 202, 203, 205, 208, 212, 227, 231, 232, 233, 253, 263, 264, 436, 437, 470, 485, 536, 551, 562, 687, 708, 718, 719, 720, 722, 776, 818, 829, 830, 831, 839, 872], "criterion": [40, 519, 872], "n_mxne_it": [40, 470], "use_cp": [40, 90, 157, 219, 269, 275, 277, 281, 282, 361, 519, 520, 521, 522, 523, 526, 530, 535, 536, 656, 657, 854, 872], "maxit": [40, 59, 468, 470, 471], "3000": [40, 49, 111, 136, 141, 144, 145, 199, 205, 253, 470, 471], "active_set_s": [40, 470], "debia": [40, 59, 470, 471], "slower": [40, 44, 46, 200, 256, 261, 360, 404, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 512, 522, 588, 831, 860], "sure_alpha_grid": [40, 470], "083": [40, 122], "tidx": [40, 180], "7262": [40, 58, 59, 92, 177, 194, 220], "020866": [40, 58, 194], "58122e": [40, 58, 59, 92, 177, 194, 220], "element": [40, 58, 88, 167, 171, 177, 178, 181, 190, 194, 200, 204, 205, 212, 214, 223, 225, 241, 255, 258, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 319, 320, 405, 412, 417, 426, 427, 439, 440, 460, 473, 474, 507, 508, 509, 551, 566, 580, 641, 672, 680, 692, 694, 696, 744, 756, 758, 763, 771, 778, 791, 794, 797, 799, 801, 802, 803, 827, 831, 837, 852, 853, 857, 872], "21995": 40, "82623e": 40, "warm": 40, "33333333333333": 40, "66666666666667": 40, "66666666666666": 40, "666666666666664": 40, "60279": 40, "603691813114": 40, "59855": 40, "33381940738": 40, "60434": 40, "87086639602": 40, "60386": 40, "806544140134": 40, "60336": 40, "58240427435": 40, "60303": 40, "83155030615": 40, "60157": 40, "013430584055": 40, "59974": 40, "67524684279": 40, "59597": 40, "86913013583": 40, "59084": 40, "52687739991": 40, "compute_source_morph": [40, 43, 44, 132, 157, 159, 179, 180, 231, 232, 233, 268, 272, 273, 276, 277, 617, 797, 803, 847, 862, 872], "subject_from": [40, 43, 44, 133, 179, 267, 273, 357, 538, 539, 617, 629, 630, 631, 632, 812, 847], "stc_fsaverag": [40, 43, 44, 847], "src_fsaverage_fnam": 40, "src_fsaverag": 40, "matthieu": [40, 59, 241, 470, 471], "kowalski": [40, 59, 241, 470, 471], "acceler": [40, 241, 470, 837, 851, 854, 872], "gradient": [40, 117, 241, 256, 261, 262, 263, 264, 266, 470, 472, 473, 474, 515, 552, 692, 694, 695, 696, 756, 872], "physic": [40, 155, 159, 169, 175, 177, 188, 208, 241, 263, 264, 266, 426, 438, 470, 473, 474, 519, 563, 571, 580, 773, 827, 854, 857], "medicin": [40, 81, 175, 208, 241, 470, 552, 580, 854], "biologi": [40, 81, 175, 208, 241, 470, 552, 580, 854], "1937": [40, 241, 470], "1961": [40, 241, 470], "2012": [40, 59, 150, 168, 200, 223, 241, 267, 272, 279, 351, 470, 471, 685, 686, 860], "1088": [40, 175, 193, 194, 206, 208, 241, 261, 262, 263, 264, 411, 470, 473, 474, 580, 637, 854], "0031": [40, 175, 208, 241, 470, 580, 854], "9155": [40, 175, 208, 241, 470, 580, 854], "jen": [40, 46, 59, 241, 470, 471, 872], "haueisen": [40, 46, 59, 241, 470, 471], "improv": [40, 69, 143, 193, 194, 202, 205, 241, 261, 262, 263, 264, 302, 338, 340, 344, 366, 367, 407, 416, 441, 443, 444, 445, 473, 474, 530, 553, 588, 591, 649, 654, 720, 723, 831, 847, 849, 850, 851, 872], "prni": [40, 46, 241, 471], "t\u00fcbingen": [40, 241], "6858545": [40, 241], "charl": [40, 44, 241, 273, 357, 470], "alban": [40, 241, 470], "deledal": [40, 241, 470], "samuel": [40, 92, 93, 241, 470, 872], "vaiter": [40, 241, 470], "jalal": [40, 241, 470], "fadili": [40, 241, 470], "peyr\u00e9": [40, 241, 470], "stein": [40, 241, 470], "unbias": [40, 241, 470], "risk": [40, 180, 200, 203, 227, 241, 261, 262, 263, 264, 470, 473, 474, 571, 739], "sugar": [40, 241, 470], "siam": [40, 241, 470], "journal": [40, 43, 69, 70, 73, 117, 133, 156, 194, 200, 208, 228, 236, 241, 261, 262, 263, 264, 273, 351, 357, 426, 470, 473, 474, 552, 560, 561, 563, 580, 652, 679, 680, 682, 683, 694, 696, 704, 708, 710, 718, 719, 721, 722, 724, 756, 846], "2448": [40, 241, 470], "2487": [40, 241, 470], "1137": [40, 207, 241, 470], "140968045": [40, 241, 470], "mixed_norm_invers": [40, 56], "annalisa": [41, 872], "pascarella": [41, 872], "iac": 41, "cnr": 41, "dir": [41, 170, 253, 739, 854, 857], "data_dir": [41, 57, 132, 143], "bem_dir": [41, 45, 107, 158, 160, 181], "fname_mixed_src": 41, "fname_aseg": [41, 180], "fname_model": 41, "_audvi": 41, "_audvis_raw": [41, 156], "substructur": 41, "labels_vol": 41, "amygdala": 41, "thalamu": 41, "proper": [41, 69, 223, 238, 262, 263, 264, 267, 294, 295, 351, 355, 356, 362, 365, 366, 367, 369, 405, 412, 448, 449, 468, 470, 471, 474, 530, 750, 779, 831, 848, 860, 872], "stem": [41, 71, 272, 273, 276, 480, 498], "oct6": [41, 107, 157, 253, 268, 272, 276, 632, 640, 797, 847], "oct5": [41, 107, 847], "bound": [41, 133, 157, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 405, 412, 449, 473, 474, 551, 552, 641, 692, 693, 694, 696, 710, 728, 754, 756, 758, 763, 771, 778, 782, 791, 792, 793, 794, 797, 799, 801, 802, 803, 854, 857, 872], "10mm": 41, "someth": [41, 125, 148, 160, 170, 171, 190, 200, 205, 206, 212, 268, 269, 272, 275, 276, 277, 739, 740, 797, 802, 827, 830, 831, 834, 835, 836, 838, 872], "vol_src": [41, 134, 157], "add_interpol": [41, 50, 157, 641], "usual": [41, 50, 69, 81, 110, 112, 139, 142, 144, 148, 149, 150, 154, 155, 159, 160, 165, 166, 167, 169, 171, 179, 182, 187, 190, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 215, 231, 233, 236, 237, 253, 259, 260, 261, 262, 263, 264, 265, 266, 274, 300, 322, 327, 332, 334, 336, 456, 473, 474, 657, 679, 680, 682, 683, 827, 831, 832, 834, 837, 839, 851, 854, 857], "nuse": [41, 266, 274, 857], "2562": [41, 107, 149, 157, 847], "node": [41, 47, 157, 666, 667, 668, 744, 857, 872], "4590": 41, "2961": 41, "346": [41, 110, 143, 168, 193, 228], "1275": 41, "1589": 41, "724": [41, 228], "1372": 41, "283": [41, 70, 94, 110, 168, 228, 241, 561], "010000": [41, 155], "2169": 41, "write_source_spac": [41, 622, 847, 862, 872], "again": [41, 133, 140, 141, 143, 149, 150, 154, 155, 160, 171, 194, 197, 198, 200, 202, 203, 204, 205, 212, 223, 228, 238, 261, 262, 263, 264, 271, 473, 474, 552, 588, 790, 818, 830, 853, 854, 872], "plot_img": 41, "nipy_spectr": 41, "5mm": [41, 82, 134, 425, 739], "innerskul": 41, "815": [41, 207, 228], "807": [41, 228], "451": [41, 228, 274], "6003": 41, "inv_method": [41, 88], "a2009": [41, 92, 154, 175, 268, 269, 272, 275, 276, 277, 439, 507, 615], "39266": 41, "01344e": 41, "coron": [41, 134, 157, 159, 179, 259, 739, 757, 767], "silhouett": [41, 179, 180, 268, 269, 272, 275, 276, 277, 739, 797, 802, 872], "43101017": 41, "98225664": 41, "7504814": 41, "45409596": 41, "02821048": 41, "97219252": 41, "vox": [41, 133, 159, 179, 180, 181], "2045": 41, "21567156": 41, "47889133": 41, "39837939": 41, "labels_parc": 41, "label_t": 41, "allow_empti": [41, 268, 269, 272, 275, 276, 277, 439], "nam": [41, 91, 92, 93, 182, 183, 220, 658, 872], "651": [41, 56, 194, 228], "mixed_source_space_invers": [41, 56], "computation": [42, 171, 200, 203, 204, 588, 854, 860], "sabbagh": [42, 241, 520, 872], "pierr": [42, 75, 203, 241, 520, 552, 872], "ablin": [42, 75, 203, 241, 520, 552, 872], "ga\u00ebl": [42, 241, 520], "varoquaux": [42, 241, 520], "state": [42, 88, 91, 107, 124, 139, 161, 165, 167, 174, 197, 198, 205, 206, 213, 223, 238, 241, 254, 256, 261, 262, 346, 429, 470, 489, 505, 512, 520, 552, 578, 597, 598, 603, 604, 644, 645, 646, 655, 656, 658, 679, 680, 681, 682, 683, 692, 694, 695, 739, 782, 827, 829, 831, 839, 853, 854, 857, 860, 872], "2020": [42, 73, 143, 156, 241, 384, 520, 552, 691, 848], "116893": [42, 241, 520], "alexand": [42, 133, 241, 872], "captur": [42, 46, 136, 143, 165, 171, 182, 183, 194, 202, 203, 204, 205, 206, 266, 271, 449, 551, 564, 565, 568, 594, 595, 827, 872], "environ": [42, 43, 44, 154, 171, 174, 259, 267, 268, 269, 271, 272, 274, 275, 276, 277, 300, 304, 305, 306, 309, 357, 362, 363, 364, 368, 373, 374, 375, 376, 378, 379, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 424, 453, 455, 457, 461, 463, 464, 465, 466, 467, 505, 509, 511, 538, 539, 577, 597, 615, 617, 624, 629, 630, 631, 632, 636, 639, 640, 641, 655, 658, 669, 687, 688, 731, 738, 739, 755, 757, 767, 797, 802, 803, 805, 812, 822, 829, 830, 834, 835, 836, 837, 839, 847, 851, 854, 872], "raw_empty_room_fnam": [42, 161], "ernoise_raw": [42, 127, 161, 171, 205], "raw_empty_room": [42, 161], "compute_raw_covari": [42, 86, 107, 161, 183, 190, 199, 258, 351, 601, 737, 847, 862, 872], "19800": [42, 127, 161, 171, 205], "85867": [42, 127, 161, 171, 205], "142": [42, 81, 127, 161, 168, 171, 205, 227, 228, 274, 872], "18000": 42, "249": [42, 46, 89, 92, 150, 168, 194, 228, 241], "658": [42, 194], "319": [42, 49, 71, 72, 97, 140, 151, 165, 168, 176, 179, 194, 199, 207, 223, 228, 241, 552], "environment": [42, 165, 197, 201, 204, 206, 208, 212, 214, 215, 847], "rest": [42, 69, 72, 107, 124, 133, 136, 139, 161, 165, 167, 168, 213, 241, 261, 262, 263, 264, 272, 369, 388, 473, 474, 637, 645, 827, 831, 853, 855, 860, 872], "base_cov": 42, "data_cov": [42, 179, 291, 295], "fig_noise_cov": 42, "show_svd": [42, 64, 258, 764], "fig_base_cov": 42, "fig_data_cov": 42, "1680": 42, "_cov": 42, "_kw": 42, "7265": [42, 176, 178], "037795": [42, 176], "52065e": [42, 176, 178], "40775": 42, "63307e": 42, "stc_data": [42, 92, 659], "11847053": 42, "45687517": 42, "03282162": 42, "782": [42, 56, 228], "mne_cov_pow": [42, 56], "pre": [43, 49, 133, 139, 140, 161, 165, 179, 199, 200, 203, 212, 261, 262, 263, 264, 351, 473, 474, 552, 634, 637, 831, 832, 836, 843, 872], "spheric": [43, 70, 77, 150, 155, 169, 182, 183, 184, 198, 205, 208, 241, 258, 261, 262, 263, 264, 267, 270, 272, 273, 309, 325, 327, 357, 405, 412, 426, 473, 474, 516, 551, 552, 561, 562, 563, 566, 571, 580, 641, 655, 658, 669, 673, 692, 694, 696, 739, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 854, 872], "surfer": [43, 154, 268, 272, 276, 364, 739, 797, 854], "fswiki": [43, 154, 268, 272, 276, 364, 797, 854], "surfaceregandtempl": 43, "depict": [43, 263, 264, 269, 275, 277, 779, 802, 854], "success": [43, 143, 253, 261, 262, 268, 269, 272, 273, 275, 276, 277, 357, 471, 528, 529, 578, 642, 679, 680, 682, 683, 694, 695, 707, 715, 729, 760, 831], "inflat": [43, 48, 49, 54, 55, 59, 60, 124, 150, 174, 190, 241, 268, 272, 276, 404, 739, 755, 797, 837, 854, 872], "overlaid": [43, 44, 133, 135, 171, 253, 641, 854, 872], "tommi": [43, 44, 872], "clausner": [43, 44, 872], "sample_dir": [43, 44, 114, 157, 171, 174], "fname_src": [43, 134, 158, 181], "fname_fsaverage_src": 43, "fname_stc": [43, 125, 174, 180], "repres": [43, 69, 73, 79, 113, 117, 139, 140, 141, 142, 143, 148, 150, 155, 157, 160, 161, 165, 167, 168, 169, 174, 188, 193, 200, 203, 215, 241, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 274, 275, 276, 277, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 439, 448, 449, 468, 470, 471, 473, 474, 489, 496, 505, 518, 530, 552, 566, 604, 606, 680, 692, 695, 739, 756, 779, 782, 784, 786, 797, 798, 802, 827, 831, 847, 851, 854, 857, 872], "itself": [43, 69, 142, 150, 159, 171, 187, 200, 203, 204, 205, 214, 223, 255, 261, 262, 267, 272, 275, 304, 438, 473, 474, 539, 739, 829, 831, 851, 854, 857], "proxim": [43, 134, 265, 687, 872], "src_orig": [43, 272, 275], "3732": [43, 174], "3766": 43, "src_to": [43, 44, 179, 357, 872], "argument": [43, 44, 118, 150, 154, 160, 161, 168, 169, 171, 179, 187, 188, 189, 190, 199, 200, 201, 204, 208, 212, 223, 227, 233, 237, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 316, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 411, 415, 416, 418, 421, 422, 424, 426, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 455, 456, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 547, 548, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 640, 641, 643, 644, 645, 646, 656, 657, 660, 662, 663, 664, 665, 666, 667, 668, 674, 679, 680, 681, 682, 683, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 711, 714, 715, 719, 720, 722, 723, 724, 725, 728, 729, 734, 735, 736, 737, 738, 739, 740, 747, 754, 755, 759, 761, 764, 767, 770, 771, 772, 773, 774, 776, 779, 782, 783, 784, 789, 790, 791, 792, 793, 795, 796, 797, 798, 800, 802, 803, 804, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 847, 857, 860, 872], "special": [43, 159, 168, 204, 212, 238, 367, 481, 488, 835, 853, 854, 860, 872], "alwai": [43, 72, 142, 143, 148, 150, 159, 166, 167, 168, 174, 189, 197, 199, 200, 201, 202, 203, 204, 205, 206, 212, 218, 223, 238, 259, 261, 262, 266, 268, 269, 271, 272, 274, 275, 276, 277, 315, 429, 439, 503, 552, 571, 610, 612, 679, 693, 747, 757, 767, 768, 798, 800, 809, 819, 827, 831, 854, 857, 858, 872], "10239": 43, "10240": 43, "10241": 43, "give": [43, 44, 59, 69, 73, 93, 141, 151, 160, 167, 170, 179, 181, 194, 198, 200, 201, 204, 223, 253, 258, 261, 262, 263, 264, 270, 274, 309, 405, 406, 407, 412, 416, 421, 422, 426, 441, 443, 444, 448, 470, 471, 473, 474, 489, 551, 552, 566, 571, 580, 598, 604, 678, 679, 680, 682, 683, 692, 694, 696, 704, 739, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 827, 829, 831, 837, 847, 851, 853, 854, 857, 872], "surfer_kwarg": [43, 174, 176], "brain_inf": 43, "under": [43, 44, 60, 125, 142, 143, 161, 188, 194, 197, 200, 204, 219, 223, 225, 231, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 309, 321, 351, 352, 354, 356, 373, 374, 375, 376, 378, 379, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 408, 415, 418, 421, 422, 448, 461, 463, 473, 474, 485, 492, 511, 514, 515, 525, 526, 535, 536, 557, 564, 565, 566, 588, 605, 609, 640, 643, 644, 645, 653, 657, 677, 679, 680, 681, 682, 683, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 771, 774, 793, 831, 847, 853, 854, 860, 872], "h5": [43, 44, 171, 179, 220, 268, 269, 271, 272, 273, 275, 276, 277, 285, 551, 590, 692, 693, 695, 712, 714, 725, 814, 815, 872], "respect": [43, 44, 47, 55, 67, 70, 88, 130, 139, 143, 150, 155, 158, 167, 168, 171, 174, 187, 194, 198, 200, 203, 204, 206, 207, 212, 213, 228, 256, 258, 261, 262, 263, 264, 266, 270, 271, 272, 276, 277, 294, 295, 296, 332, 351, 355, 356, 362, 365, 366, 367, 405, 407, 412, 416, 429, 441, 443, 448, 449, 468, 470, 471, 473, 474, 479, 496, 505, 508, 516, 530, 551, 552, 553, 554, 556, 566, 568, 598, 606, 641, 649, 652, 654, 660, 680, 692, 694, 696, 711, 719, 720, 722, 723, 739, 755, 756, 760, 763, 769, 771, 773, 778, 779, 782, 783, 786, 791, 792, 794, 799, 801, 803, 831, 834, 837, 847, 851, 854, 857, 872], "my": [43, 44, 171, 181, 218], "read_source_morph": [43, 44, 273, 862], "further": [43, 140, 150, 156, 165, 167, 177, 187, 194, 199, 203, 205, 208, 212, 223, 228, 233, 238, 261, 262, 286, 288, 317, 362, 552, 556, 679, 680, 682, 683, 695, 754, 770, 843, 849, 853, 854, 872], "assign": [43, 45, 99, 101, 118, 135, 139, 142, 143, 150, 160, 167, 169, 174, 177, 187, 188, 205, 208, 213, 218, 255, 261, 266, 271, 274, 463, 465, 481, 485, 488, 490, 494, 496, 505, 514, 552, 568, 569, 572, 573, 575, 576, 602, 636, 761, 822, 847, 854, 857, 872], "chain": [43, 166, 194, 198, 212, 411, 849, 854], "handi": [43, 189, 203], "liner": 43, "shortest": [43, 155, 200, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474, 557], "dougla": [43, 241, 273, 357], "greve": [43, 241, 273, 357], "lise": [43, 241, 273, 357], "der": [43, 241, 273, 357, 854, 872], "haegen": [43, 241, 273, 357], "qing": [43, 241, 273, 357], "cai": [43, 241, 273, 357], "steven": [43, 58, 124, 143, 150, 200, 241, 272, 273, 357, 405, 530, 649, 654, 848, 872], "stufflebeam": [43, 58, 124, 241, 272, 273, 357, 530, 534, 649, 652, 654], "mert": [43, 241, 273, 357], "sabuncu": [43, 241, 273, 357], "bruce": [43, 92, 154, 241, 273, 357, 519, 854], "fischl": [43, 92, 154, 241, 273, 357, 519, 854], "marc": [43, 241, 273, 357], "brysbaert": [43, 241, 273, 357], "languag": [43, 150, 171, 200, 227, 233, 241, 258, 261, 262, 263, 264, 270, 271, 273, 357, 405, 412, 473, 474, 551, 552, 692, 694, 696, 771, 778, 782, 791, 794, 799, 835, 856, 872], "asymmetri": [43, 241, 273, 357], "1477": [43, 241, 273, 357], "1492": [43, 241, 273, 357, 847], "1162": [43, 138, 241, 273, 357, 552], "jocn_a_00405": [43, 241, 273, 357], "683": [43, 50, 56, 194, 207, 228], "morph_surface_stc": [43, 56], "affin": [44, 133, 155, 179, 181, 273, 357, 364, 616, 624, 728, 729, 812, 827, 854, 872], "nonlinear": [44, 241, 678], "symmetr": [44, 133, 200, 241, 261, 262, 263, 264, 268, 269, 272, 273, 275, 276, 277, 357, 441, 443, 444, 473, 474, 679, 680, 682, 683, 693, 704, 728, 729, 739, 758, 797, 802, 803, 812, 872], "diffeomorph": [44, 133, 241, 273, 357, 728, 729, 812, 872], "sdr": [44, 133, 179, 273, 357, 728, 729, 812, 872], "afterward": [44, 148, 261, 262, 263, 264, 473, 474, 637, 656, 872], "nibabel": [44, 133, 155, 159, 170, 181, 274, 465, 466, 467, 691, 739, 812, 830, 854, 872], "fetch_fsaverag": [44, 123, 133, 134, 158, 179, 189, 848, 862, 872], "plot_glass_brain": [44, 133, 181], "sample_dir_raw": [44, 174], "fname_t1_fsaverag": 44, "ensur": [44, 45, 81, 110, 143, 148, 158, 160, 161, 179, 200, 201, 204, 206, 208, 209, 220, 258, 261, 262, 263, 264, 266, 267, 268, 269, 272, 275, 276, 277, 317, 338, 351, 439, 440, 473, 474, 475, 544, 555, 580, 581, 692, 693, 694, 695, 696, 709, 734, 829, 831, 853, 854, 872], "exist": [44, 97, 99, 125, 139, 142, 148, 149, 155, 160, 169, 170, 171, 175, 179, 199, 200, 201, 204, 205, 206, 214, 218, 223, 225, 253, 255, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277, 285, 304, 305, 306, 309, 368, 373, 374, 375, 376, 378, 379, 381, 382, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 427, 431, 435, 436, 437, 438, 440, 457, 473, 474, 475, 488, 504, 537, 539, 541, 551, 552, 555, 562, 581, 600, 610, 630, 631, 634, 637, 638, 639, 642, 644, 645, 662, 663, 666, 692, 693, 694, 695, 696, 725, 728, 739, 762, 778, 793, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 831, 839, 847, 848, 851, 853, 858, 860, 872], "fname_src_fsaverag": 44, "root": [44, 80, 133, 134, 135, 148, 149, 150, 158, 171, 179, 189, 220, 258, 263, 264, 268, 269, 272, 275, 276, 277, 294, 295, 376, 381, 398, 764, 773, 831, 854, 872], "zoom": [44, 69, 133, 150, 159, 179, 203, 205, 273, 357, 729, 872], "reslic": [44, 133, 179, 357, 729], "isotrop": [44, 854], "niter_affin": [44, 179, 273, 357, 872], "niter_sdr": [44, 179, 273, 357, 872], "999999888241291": 44, "translat": [44, 133, 155, 159, 179, 188, 208, 231, 253, 261, 262, 263, 264, 347, 362, 405, 412, 426, 484, 552, 556, 580, 692, 729, 739, 755, 770, 775, 778, 783, 786, 857, 872], "optim": [44, 59, 80, 133, 141, 156, 159, 161, 178, 179, 199, 200, 203, 208, 223, 231, 232, 233, 241, 263, 264, 267, 351, 405, 448, 470, 473, 474, 552, 562, 580, 669, 721, 724, 729, 827, 851, 872], "r\u00b2": [44, 133, 179], "rigid": [44, 133, 179, 729], "compute_vol_morph_mat": [44, 273, 357, 872], "equival": [44, 134, 140, 149, 155, 157, 159, 161, 164, 170, 185, 186, 188, 200, 203, 206, 219, 223, 236, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 275, 276, 277, 294, 295, 309, 350, 405, 411, 412, 445, 448, 449, 468, 470, 471, 473, 474, 514, 519, 530, 551, 552, 555, 557, 566, 571, 610, 639, 656, 679, 692, 694, 696, 708, 718, 722, 723, 729, 739, 755, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 797, 799, 801, 802, 827, 831, 847, 851, 854, 857, 858, 872], "reus": [44, 73, 136, 263, 264, 692, 775, 854], "exce": [44, 223, 256, 261, 262, 263, 264, 338, 340, 405, 412, 473, 474, 554, 557, 568, 679, 778, 792, 872], "thousand": [44, 99, 204, 224, 241, 357, 389, 848, 872], "nifti1": [44, 273, 276, 277], "img_fsaverag": 44, "t1_fsaverag": 44, "plot_anat": [44, 175], "draw_cross": 44, "overlai": [44, 154, 159, 171, 179, 203, 268, 269, 272, 275, 276, 277, 552, 739, 783, 797, 802, 872], "add_overlai": [44, 739], "brian": [44, 193, 241, 273, 357, 411, 854], "avant": [44, 241, 273, 357], "epstein": [44, 241, 273, 357], "murrai": [44, 150, 241, 273, 357], "grossman": [44, 241, 273, 357], "jame": [44, 200, 241, 273, 357], "gee": [44, 241, 273, 357], "autom": [44, 81, 111, 119, 133, 143, 155, 161, 162, 163, 164, 165, 197, 198, 199, 202, 203, 208, 241, 253, 263, 264, 266, 273, 351, 357, 362, 384, 478, 631, 755, 779, 807, 839, 851, 854, 860, 872], "elderli": [44, 241, 273, 357], "neurodegen": [44, 241, 273, 357], "medic": [44, 59, 204, 205, 241, 252, 273, 357, 470, 471, 519, 854, 859], "media": [44, 241, 273, 357], "2007": [44, 179, 228, 241, 273, 357, 468, 552, 679, 680, 682, 683, 721, 724], "832": [44, 56, 194, 228], "morph_volume_stc": [44, 56], "megin": [45, 155, 580, 872], "program": [45, 150, 160, 171, 253, 259, 261, 262, 263, 264, 266, 271, 304, 464, 465, 473, 474, 552, 694, 696, 767, 769, 786, 792, 795, 831, 835, 836, 837, 838, 854, 856, 857], "offer": [45, 180, 194, 200, 206, 220, 223, 224, 254, 255, 739, 829, 831, 858, 860, 872], "guid": [45, 154, 266, 829, 835, 850, 853, 855, 872], "ecd": [45, 164, 185, 186, 259, 260, 263, 264, 265, 266, 276, 350, 448, 514, 610, 656, 827, 872], "manual": [45, 81, 118, 125, 133, 136, 141, 148, 150, 155, 156, 159, 160, 161, 171, 181, 187, 189, 197, 198, 199, 201, 204, 208, 241, 254, 257, 266, 267, 315, 325, 351, 371, 426, 440, 552, 562, 563, 571, 580, 581, 633, 762, 837, 848, 851, 854, 857, 872], "advantag": [45, 111, 136, 149, 150, 166, 167, 200, 202, 203, 206, 223, 238, 829, 839], "graphic": [45, 133, 154, 188, 261, 262, 271, 465, 473, 474, 552, 769, 786, 792, 831, 835, 837, 838, 848, 872], "read_dipol": [45, 114, 259, 260, 448, 862, 872], "everyth": [45, 102, 110, 125, 133, 134, 158, 159, 168, 177, 181, 190, 200, 212, 263, 264, 777, 829, 831, 833, 848, 849, 851], "read_vectorview_select": [45, 220, 225, 862, 872], "audvi": [45, 848], "evoked_left": [45, 209], "evoked_right": [45, 209], "09989760657919393": [45, 61], "80m": 45, "picks_left": 45, "evoked_fit_left": 45, "cov_fit_left": 45, "picks_right": 45, "evoked_fit_right": 45, "cov_fit_right": 45, "sss": [45, 161, 164, 197, 207, 210, 211, 261, 262, 263, 264, 266, 338, 339, 340, 341, 344, 345, 348, 367, 426, 473, 474, 493, 552, 563, 571, 580, 610, 769, 773, 781, 792, 851, 854, 872], "normalize_proj": [45, 266, 872], "dip_left": 45, "dip_right": 45, "153": [45, 168, 194, 223, 398], "38720": [45, 181], "58607874e": 45, "29495097e": 45, "04486582e": 45, "78988420e": 45, "81501987e": 45, "79536167e": 45, "22800262e": 45, "50545865e": 45, "24472969e": 45, "41763741e": 45, "51116585e": 45, "49899073e": 45, "11191910e": 45, "30776654e": 45, "58725785e": 45, "82015291e": 45, "83338121e": 45, "85132759e": 45, "76790821e": 45, "26581206e": 45, "61643686e": 45, "900": [45, 79, 175, 180, 228], "396": [45, 79, 175, 180, 228, 241, 294], "354": [45, 79, 110, 168, 175, 180, 193, 223, 228], "195": [45, 83, 165, 168, 171, 173, 175, 180, 207, 220, 222, 223, 227, 228, 241], "9828": [45, 872], "152": [45, 168, 189, 194, 207, 227, 228, 274], "69262885e": 45, "19272571e": 45, "91546253e": 45, "01298483e": 45, "64516797e": 45, "19806525e": 45, "33734643e": 45, "87121666e": 45, "27849772e": 45, "17670368e": 45, "61094719e": 45, "47048282e": 45, "57358697e": 45, "03235995e": 45, "14274862e": 45, "19294391e": 45, "09342253e": 45, "00283865e": 45, "12915739e": 45, "54166863e": 45, "75855684e": 45, "149": [45, 168, 180, 227, 228, 274], "9340": [45, 872], "prevent": [45, 69, 118, 198, 208, 253, 505, 557, 580, 657, 812, 872], "lambda": [45, 98, 110, 144, 194, 209, 219, 238, 258, 261, 262, 263, 264, 270, 311, 405, 412, 473, 474, 527, 551, 552, 566, 658, 692, 694, 696, 756, 763, 770, 778, 782, 791, 794, 799, 854, 857], "fulli": [45, 73, 171, 199, 201, 223, 227, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 317, 473, 474, 475, 673, 739, 758, 797, 802, 803, 829, 872], "make_forward_dipol": [45, 175, 862, 872], "stc_left": 45, "stc_right": 45, "sharei": [45, 72, 111, 112, 193, 205, 238], "supylabel": 45, "meter": [45, 79, 91, 92, 150, 155, 156, 159, 169, 175, 181, 205, 218, 253, 258, 259, 261, 262, 263, 264, 266, 267, 270, 279, 309, 325, 334, 362, 405, 412, 426, 473, 474, 489, 496, 511, 551, 552, 556, 561, 562, 563, 566, 571, 580, 585, 586, 604, 614, 641, 687, 692, 694, 696, 756, 763, 767, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 854, 872], "kb": [45, 50, 136, 142, 175, 180, 206, 218], "7006": 45, "97034e": 45, "stcs_left": 45, "stcs_right": 45, "90m": 45, "amplitudes_left": 45, "amplitudes_right": 45, "vstack": [45, 113, 135, 140, 183, 220], "ampltud": 45, "n_left": 45, "mean_left": 45, "mean_right": 45, "transition_point": 45, "c0": [45, 150, 204], "c1": [45, 69, 110, 150, 204], "text": [45, 67, 125, 133, 134, 141, 150, 159, 176, 182, 187, 188, 190, 200, 201, 204, 205, 213, 214, 223, 238, 253, 261, 262, 274, 329, 473, 474, 607, 657, 739, 817, 831, 835, 847, 854, 872], "739": [45, 56, 228], "610": [45, 79, 207, 228], "multi_dipole_model": [45, 56], "promot": [46, 59], "focal": [46, 59, 81, 179, 552, 739, 807, 872], "assum": [46, 59, 63, 91, 92, 113, 121, 134, 140, 143, 150, 157, 159, 164, 171, 181, 187, 188, 199, 200, 203, 214, 223, 225, 227, 238, 253, 255, 258, 259, 261, 262, 263, 264, 267, 270, 274, 294, 295, 300, 301, 304, 309, 322, 334, 351, 355, 356, 362, 365, 366, 367, 369, 405, 412, 424, 432, 440, 446, 447, 448, 449, 455, 468, 470, 471, 473, 474, 480, 481, 488, 501, 511, 515, 522, 530, 551, 552, 566, 600, 607, 626, 629, 631, 641, 657, 679, 680, 682, 683, 686, 687, 692, 694, 695, 696, 728, 739, 755, 756, 763, 771, 773, 775, 778, 779, 780, 781, 782, 789, 791, 793, 794, 795, 799, 801, 820, 827, 831, 836, 839, 854, 857, 858, 872], "stationar": [46, 59, 444, 473, 474], "properti": [46, 59, 73, 99, 112, 125, 142, 160, 171, 188, 193, 198, 203, 204, 212, 215, 254, 255, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 299, 362, 404, 473, 474, 538, 552, 568, 569, 581, 642, 657, 674, 692, 693, 694, 695, 696, 727, 739, 741, 758, 767, 769, 773, 779, 780, 782, 784, 792, 797, 802, 803, 807, 858, 872], "bias": [46, 69, 150, 165, 179, 198, 200, 205, 227, 241, 449, 872], "short": [46, 59, 65, 80, 101, 110, 112, 125, 135, 136, 139, 159, 167, 171, 197, 200, 204, 205, 207, 209, 214, 224, 236, 238, 241, 261, 262, 263, 264, 473, 474, 490, 585, 588, 694, 696, 697, 700, 707, 708, 711, 715, 718, 827, 831, 854, 855, 872], "transient": [46, 80, 197, 208, 238, 557], "mathurin": [46, 241, 872], "massia": [46, 241, 872], "yousra": [46, 51, 91, 124, 241, 470, 471, 872], "bekhti": [46, 51, 91, 124, 241, 470, 471, 872], "tf_mixed_norm": [46, 59, 470, 862, 872], "350e": [46, 111, 237], "49948803289596966": 46, "301": [46, 112, 168, 169, 173, 190, 194, 207, 236, 857], "16610": 46, "multidict": 46, "l1_ratio": [46, 59, 471, 872], "wsize": [46, 59, 471, 707, 715, 716], "n_tfmxne_it": [46, 471], "dgap": [46, 59], "89e": 46, "p_obj": [46, 59], "289": [46, 116, 128, 148, 168, 193, 194, 227, 228, 241, 411, 552], "000835": 46, "d_obj": [46, 59], "190": [46, 59, 74, 79, 114, 168, 183, 223, 227, 228, 241, 679, 680, 682, 683], "083203": 46, "n_activ": [46, 59, 208, 345], "247": [46, 56, 59, 128, 132, 168, 228], "27e": 46, "253": [46, 53, 56, 168, 194, 228, 241], "327890": 46, "582652": 46, "53e": 46, "707285": 46, "246": [46, 133, 168, 179, 227, 228, 241], "182101": 46, "18e": 46, "589468": 46, "408712": 46, "82e": 46, "243688": 46, "248": [46, 72, 83, 121, 168, 207, 209, 223, 227, 228], "420556": 46, "67e": [46, 59], "094971": 46, "57e": 46, "991067": 46, "49e": [46, 59], "936498": 46, "442467": 46, "08e": 46, "906871": 46, "829870": 46, "70e": 46, "887205": 46, "017223": 46, "24e": 46, "872107": 46, "148583": 46, "11e": 46, "762424": 46, "94e": 46, "854012": 46, "259629": 46, "659": [46, 167], "867870": 46, "46e": 46, "043596": 46, "587841": 46, "87e": 46, "274": [46, 79, 80, 121, 165, 168, 190, 193, 207, 228], "722230": 46, "272": [46, 117, 168, 170, 223, 241, 649, 654], "856399": 46, "29e": 46, "678013": 46, "849283": 46, "335": [46, 107, 110, 168, 228, 241, 854], "966495": 46, "73e": 46, "239": [46, 67, 79, 80, 157, 168, 190, 201, 227, 228], "215341": 46, "236": [46, 110, 168, 193, 223, 227, 228], "481796": 46, "17e": 46, "095509": 46, "238": [46, 168, 207, 223, 224, 228], "178504": 46, "77e": 46, "068507": 46, "591286": 46, "298": [46, 74, 104, 168, 207, 223, 228], "546285": 46, "06e": 46, "223": [46, 168, 207, 227, 228], "133013": 46, "826666": 46, "295": [46, 110, 168, 228], "194637": 46, "debias": [46, 59], "551": [46, 70, 83, 112, 207], "d0": [46, 59], "235933e": 46, "000000e": [46, 59], "irtf": 46, "intern": [46, 69, 70, 81, 125, 131, 135, 159, 167, 169, 182, 189, 198, 205, 208, 225, 241, 261, 262, 263, 264, 309, 351, 356, 362, 385, 405, 426, 473, 474, 488, 493, 549, 552, 560, 561, 562, 563, 571, 580, 610, 678, 679, 692, 693, 694, 695, 696, 739, 785, 831, 872], "workshop": [46, 241, 405], "roland": [46, 241, 471], "badeau": [46, 241, 471], "trento": [46, 241, 471], "7552337": [46, 241, 471], "715": [46, 56, 193, 228], "241": [46, 121, 168, 201, 207, 227, 228, 444, 473, 474], "multidict_reweighted_tfmxn": [46, 56], "plane": [47, 133, 155, 169, 204, 225, 228, 237, 425, 645, 720, 723, 757, 827, 854], "olaf": [47, 48, 49, 50, 54, 55, 99, 241, 534, 649, 654, 872], "hauk": [47, 48, 49, 50, 54, 55, 99, 241, 534, 649, 654, 872], "mrc": [47, 48, 49, 50, 54, 55, 854], "cbu": [47, 48, 49, 50, 54, 55, 854], "cam": [47, 48, 49, 50, 54, 55, 854], "ac": [47, 48, 49, 50, 54, 55, 133, 189, 197, 201, 241, 351, 367, 827, 854], "uk": [47, 48, 49, 50, 54, 55, 241, 351, 854], "rougier": 47, "borrow": [47, 227, 233], "hi": [47, 253], "make_inverse_resolution_matrix": [47, 48, 50, 54, 55, 862, 872], "get_point_spread": [47, 48, 50, 862, 872], "circular_layout": [47, 862], "plot_connectivity_circl": [47, 761], "rm_mne": [47, 54], "n_label": [47, 219, 268, 269, 272, 275, 276, 277, 439, 507, 659], "label_color": [47, 458], "lh_label": [47, 739], "endswith": [47, 169], "label_ypo": 47, "ypo": 47, "yp": 47, "rh_label": [47, 739], "summaris": 47, "five": [47, 141, 149, 170, 182, 207, 215, 241, 338, 473, 474, 552, 739, 784, 854], "princip": [47, 203, 204, 241, 267, 351, 552, 669, 854, 872], "probabl": [47, 69, 164, 187, 197, 198, 199, 200, 203, 204, 223, 225, 228, 238, 409, 415, 434, 473, 474, 485, 739, 796, 829, 831, 836, 837, 838, 854], "n_comp": [47, 528, 529], "stcs_psf_mne": 47, "pca_vars_mn": 47, "return_pca_var": [47, 528, 529], "n_vert": 47, "printopt": 47, "caudalanteriorcingul": 47, "caudalmiddlefront": [47, 88, 93, 134], "cuneu": [47, 739], "entorhin": 47, "frontalpol": 47, "fusiform": 47, "inferiorpariet": [47, 219], "inferiortempor": 47, "insula": 47, "isthmuscingul": 47, "lateraloccipit": 47, "lateralorbitofront": 47, "lingual": 47, "medialorbitofront": 47, "middletempor": 47, "paracentr": 47, "parahippocamp": [47, 67], "parsoperculari": 47, "parsorbitali": 47, "parstriangulari": 47, "pericalcarin": 47, "postcentr": [47, 67], "posteriorcingul": 47, "precentr": [47, 134], "precuneu": 47, "rostralanteriorcingul": 47, "rostralmiddlefront": [47, 219], "superiorfront": [47, 134], "superiorpariet": 47, "superiortempor": 47, "supramargin": 47, "temporalpol": 47, "transversetempor": [47, 219], "overal": [47, 125, 205, 225, 231, 232, 471, 853, 872], "bigger": [47, 79, 125, 232, 473, 474], "leaker": 47, "psfs_mat": 47, "pearson": [47, 200, 203, 241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 552, 692, 695], "arbitrari": [47, 113, 159, 164, 165, 166, 170, 200, 218, 221, 225, 228, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 405, 412, 473, 474, 490, 552, 569, 573, 679, 680, 682, 683, 692, 694, 695, 696, 771, 778, 785, 791, 799, 853, 854, 872], "absolut": [47, 60, 80, 84, 121, 127, 134, 150, 178, 188, 223, 256, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 355, 405, 412, 473, 474, 476, 528, 529, 534, 552, 568, 592, 641, 653, 685, 692, 695, 757, 763, 782, 783, 803, 831, 837, 872], "leakage_mn": 47, "node_ord": [47, 744], "mirror": [47, 69, 169, 261, 262, 263, 264, 268, 272, 276, 277, 443, 444, 445, 473, 474, 754, 758, 797, 803, 860, 872], "node_angl": [47, 744], "start_po": [47, 744], "group_boundari": [47, 744], "subplot_kw": 47, "n_line": 47, "node_color": 47, "neighbour": [47, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 771, 778, 782, 791, 794, 799, 801, 872], "deeper": [47, 54, 55, 179, 854], "versu": [47, 140, 150, 165, 213, 220, 296, 839], "fname_fig": 47, "plot_label_leakag": 47, "savefig": [47, 113], "inde": [47, 69, 140, 167, 174, 204, 205, 238, 829], "max_val": 47, "brain_lh": 47, "caudal": [47, 88, 93, 739], "pos_lim": [47, 54, 55, 179, 219, 231, 268, 269, 272, 275, 276, 277, 758, 797, 802, 803], "brain_rh": 47, "091": [47, 56], "457": [47, 56, 180, 186, 207, 223, 228], "psf_ctf_label_leakag": [47, 56], "get_cross_talk": [48, 49, 862, 872], "fname_evo": [48, 49, 50, 54, 55, 64], "regularis": [48, 54, 55, 531], "rm_lor": 48, "stc_psf": 48, "stc_ctf": 48, "31738": [48, 54, 55], "68644e": [48, 54, 55], "vertno_lh": 48, "verttru": [48, 49], "maxima": [48, 144, 263, 264, 589, 776, 778, 872], "vert_max_psf": 48, "vert_max_ctf": 48, "brain_psf": 48, "ventral": [48, 739], "add_foci": [48, 49, 50, 159, 174, 176, 220, 739, 872], "coords_as_vert": [48, 49, 50, 174, 176, 220, 739], "22842778": 48, "2956258": 48, "85246681": 48, "brain_ctf": 48, "10932369": 48, "16149934": 48, "93351158": 48, "268": [48, 56, 104, 105, 168, 184, 190, 228], "438": [48, 49, 54, 55, 207, 212, 217, 228], "psf_ctf_vertic": [48, 56], "make_lcmv_resolution_matrix": [49, 862, 872], "vi": [49, 149, 228, 261, 763], "cov_pr": 49, "post": [49, 118, 133, 179, 200, 205, 208, 827, 831, 837, 838, 850, 851, 853], "cov_post": 49, "4433": 49, "filters_pr": 49, "weight_norm": [49, 179, 220, 294, 295, 872], "filters_post": 49, "rm_pre": 49, "stc_pre": 49, "rm_post": 49, "stc_post": 49, "brain_pr": 49, "ndata": 49, "brain_post": 49, "psf_ctf_vertices_lcmv": [49, 56], "coars": 50, "don": [50, 93, 113, 115, 118, 133, 140, 143, 144, 145, 156, 157, 158, 161, 167, 170, 198, 201, 203, 204, 205, 212, 225, 226, 227, 228, 233, 238, 253, 256, 261, 262, 368, 484, 485, 541, 581, 597, 604, 606, 641, 679, 682, 831, 832, 837, 839, 851, 853, 855, 872], "src_vol": 50, "forward_vol": 50, "3375": 50, "1045": [50, 207], "895": [50, 207, 228], "015000": [50, 206], "860": [50, 79, 207, 228], "304": [50, 78, 83, 107, 122, 124, 128, 149, 168, 170, 183, 223, 224, 228, 872], "158": [50, 168, 194, 223, 227, 228], "488": [50, 223, 228], "403": [50, 79, 207, 228], "492": [50, 223], "inverse_operator_vol": 50, "rm_lor_vol": 50, "sources_vol": 50, "stc_psf_vol": 50, "383": [50, 79, 110, 228], "140193": 50, "7904e": 50, "66519": 50, "31885e": 50, "1209": 50, "verttrue_vol": 50, "max_vert_idx": 50, "unravel_index": [50, 180, 225], "vert_max_ctf_vol": 50, "brain_psf_vol": 50, "plot_3d": [50, 134, 179, 276, 277, 872], "volume_opt": [50, 268, 269, 272, 275, 276, 277, 739, 797, 802], "32501698": 50, "38884743": 50, "87974682": 50, "psf_volum": [50, 56], "recurs": [51, 159, 200, 241, 253, 268, 272, 276, 297, 640, 797], "rap_mus": [51, 56, 448, 862, 872], "n100": [51, 165, 190, 200, 205], "1834": 51, "ori": [51, 175, 179, 182, 184, 220, 259, 294, 295, 425, 448], "2470324143277338": 51, "7764326014559829": 51, "5797649538112025": 51, "5304": 51, "5154591814700811": 51, "5345116895021849": 51, "6697753996853825": 51, "332": [51, 168, 190, 207, 228, 241, 297], "1999": [51, 110, 238, 241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 297, 351, 473, 474, 552, 578, 692, 695, 854], "740118": [51, 241, 297], "988": [51, 56, 194], "inv_fnam": 52, "fmri": [52, 194, 241, 470, 471, 519, 827, 848, 854, 857], "fmri_prior": 52, "rr": [52, 159, 160, 174, 177, 274, 339, 341, 342, 343, 623, 626, 641, 661, 820, 857], "use_tri": [52, 159, 274, 857], "8192": [52, 181, 184, 404], "read_invers": [52, 56], "nb": [53, 473, 474], "read_stc": [53, 56], "localis": [54, 55, 184, 223, 224, 241, 534, 679, 680, 682, 683], "mimic": [54, 55, 406, 429, 519], "resolution_metr": [54, 55, 56, 862, 872], "ple": [54, 55, 534], "sd": [54, 55, 133, 238, 654, 694, 696], "ple_mne_psf": 54, "peak_err": [54, 55, 534], "sd_mne_psf": 54, "sd_ext": [54, 55, 534], "rm_dspm": 54, "ple_dspm_psf": 54, "sd_dspm_psf": 54, "brain_ple_mn": 54, "brain_ple_dspm": 54, "subtract": [54, 55, 65, 69, 72, 105, 111, 118, 132, 140, 150, 175, 200, 206, 208, 223, 225, 253, 256, 257, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 284, 294, 295, 350, 351, 355, 356, 365, 366, 367, 405, 412, 413, 448, 449, 468, 470, 471, 473, 474, 475, 530, 535, 536, 552, 553, 568, 580, 610, 611, 634, 637, 679, 682, 692, 695, 779, 799, 854, 857, 872], "diff_pl": [54, 55], "brain_ple_diff": [54, 55], "superfici": [54, 179, 854], "brain_sd_mn": 54, "brain_sd_dspm": 54, "diff_sd": [54, 55], "brain_sd_diff": [54, 55], "wors": [54, 170, 580, 847], "distinguish": [54, 71, 150, 171, 194, 197, 198, 199, 202, 203, 205, 212, 358, 827, 872], "stenroo": [54, 55, 241, 534, 649, 654], "matthia": [54, 55, 241, 534, 872], "treder": [54, 55, 241, 534], "kit": [54, 55, 169, 170, 183, 223, 241, 266, 335, 343, 426, 496, 515, 534, 563, 571, 580, 606, 854, 862, 863, 872], "biorxiv": [54, 55, 220, 241, 294, 295, 534], "2019": [54, 55, 65, 74, 140, 206, 209, 223, 228, 241, 534, 567, 587, 679, 680, 682, 683, 706, 708, 718, 721, 722, 724, 830, 837], "1101": [54, 55, 112, 220, 241, 294, 295, 534], "672956": [54, 55, 241, 534], "007": [54, 56, 119, 126, 139, 140, 141, 144, 148, 165, 168, 199, 205, 220, 224, 241, 279, 584], "resolution_matrix": 55, "spatial_resolut": 55, "fname_fwd_emeg": 55, "forward_emeg": 55, "forward_meg": 55, "pick_types_forward": [55, 67, 90, 281, 282, 862], "inv_emeg": 55, "inv_meg": 55, "63485": 55, "05542e": 55, "rm_emeg": 55, "ple_psf_emeg": 55, "sd_psf_emeg": 55, "rm_meg": 55, "ple_psf_meg": 55, "sd_psf_meg": 55, "brain_ple_emeg": 55, "emeg": [55, 860], "brain_ple_meg": 55, "bring": [55, 69, 155, 180, 203, 214, 266, 276, 277, 426, 563, 571, 580, 803, 854, 857], "brain_sd_emeg": 55, "brain_sd_meg": 55, "013": [55, 56, 65, 126, 139, 140, 148, 150, 168, 220], "resolution_metrics_eegmeg": [55, 56], "844": [56, 194], "auto_examples_invers": 56, "vector_mne_solut": [56, 60], "783": [56, 60, 228], "188": [56, 60, 136, 168, 183, 223, 227, 228], "437": [56, 82, 182, 228], "269": [56, 135, 168, 207, 228], "264": [56, 79, 80, 150, 168, 190, 241], "time_frequency_mixed_norm_invers": [56, 59], "251": [56, 59, 168, 228, 473, 474], "source_space_snr": [56, 58], "925": [56, 58, 228], "snr_estim": [56, 57], "plot_snr_estim": [57, 862, 872], "padma": [58, 241, 567, 872], "sundaram": [58, 241, 567, 872], "tottochan": 58, "kaisu": [58, 872], "lankinen": [58, 872], "klankinen": 58, "inv_op": [58, 219], "snr_stc": [58, 272], "estimate_snr": [58, 272, 862, 872], "maxidx": 58, "med": [58, 92, 135, 165, 194, 219], "viridi": [58, 99, 125, 135, 142, 223, 693, 781], "70263": [58, 177], "18949e": [58, 177], "evoked_eeg": [58, 148, 205], "inv_op_eeg": 58, "stc_eeg": 58, "snr_stc_eeg": 58, "7499": [58, 88], "118742": [58, 88], "155292": [58, 88], "81981": 58, "0644e": 58, "goldenholz": [58, 241, 272], "seppo": [58, 241, 272, 530, 649, 654], "ahlfor": [58, 241, 272, 426, 530, 649, 654], "dahlia": [58, 241, 272], "sharon": [58, 241, 272], "mamiko": [58, 241, 272], "ishitobi": [58, 241, 272], "lucia": [58, 124, 241, 272], "vaina": [58, 124, 241, 272], "magnetoencephalographi": [58, 156, 177, 241, 272, 652, 721, 724, 854], "1086": [58, 207, 241, 272], "1002": [58, 82, 177, 236, 241, 261, 262, 263, 264, 272, 473, 474, 588, 645, 681, 694, 696, 704, 710, 847], "hbm": [58, 177, 241, 272, 681, 847], "20571": [58, 241, 272], "built": [59, 139, 149, 150, 156, 158, 164, 165, 166, 174, 180, 201, 203, 209, 212, 216, 217, 223, 259, 261, 262, 263, 264, 266, 301, 325, 326, 363, 434, 456, 457, 465, 473, 474, 511, 515, 577, 627, 660, 687, 696, 739, 755, 831, 837, 843, 851, 852, 872], "fourier": [59, 101, 200, 236, 238, 241, 261, 262, 263, 264, 473, 474, 694, 696, 697, 700, 704, 707, 708, 710, 711, 715, 718, 719, 720, 722, 723], "stft": [59, 471, 707, 716, 827, 862, 872], "henc": [59, 112, 141, 149, 155, 161, 174, 189, 202, 205, 212, 223, 236, 238, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 473, 474, 692, 695, 752, 827, 838, 851], "trap": 59, "minima": [59, 589], "pick_channels_evok": 59, "slightli": [59, 69, 125, 159, 179, 183, 200, 205, 208, 209, 227, 261, 262, 263, 264, 267, 356, 473, 474, 522, 530, 669, 739, 776, 847, 848, 854, 872], "eventu": [59, 135, 315, 326, 570, 831, 847], "020865": [59, 92, 177, 220], "96729": 59, "38524e": 59, "985": [59, 207, 228], "descent": [59, 241, 470, 872], "4411": 59, "845726": 59, "4408": [59, 183, 190], "353441": 59, "4410": 59, "859492": 59, "292946": 59, "51e": 59, "670058": 59, "519426": 59, "61e": 59, "669663": 59, "668049": 59, "546629e": 59, "049948803289596964": [59, 93, 178, 180], "2996928197375818": [59, 139, 148, 150, 225], "10e": [59, 67, 88, 93], "15e": 59, "20e": [59, 261, 262, 271, 473, 474, 769, 792], "medial": [59, 233, 679, 680, 739], "yellow": [59, 205, 263, 264, 754, 773, 790], "scalar_thresh": [59, 739], "stationari": [59, 78, 203, 205, 241, 344, 471, 847], "410": [59, 70, 79, 127, 197, 201, 205, 228, 241, 471], "422": [59, 207, 223, 241, 471], "051": [59, 139, 141, 148, 168, 198, 220, 241, 471], "sparsiti": [59, 241, 471, 652], "g\u00e1bor": [59, 241, 471], "sz\u00e9keli": [59, 241, 471], "horst": [59, 241, 471], "hahn": [59, 241, 471], "editor": [59, 190, 241, 329, 468, 471, 552, 721, 724, 831, 835, 849], "6801": [59, 241, 471], "page": [59, 133, 171, 200, 215, 241, 261, 262, 326, 383, 471, 473, 474, 552, 708, 718, 719, 721, 722, 724, 739, 769, 792, 829, 831, 832, 835, 837, 838, 843, 846, 847, 850, 851, 852, 853, 854, 855, 872], "springer": [59, 220, 241, 294, 295, 383, 471, 552], "berlin": [59, 220, 241, 294, 295, 471], "heidelberg": [59, 220, 241, 294, 295, 471], "1007": [59, 150, 204, 205, 206, 207, 220, 241, 294, 295, 405, 471, 519, 552, 567, 657, 854], "22092": [59, 241, 471], "0_49": [59, 241, 471], "magnitud": [60, 63, 69, 110, 134, 141, 144, 148, 149, 165, 167, 177, 179, 197, 198, 200, 213, 220, 231, 232, 269, 275, 277, 351, 405, 426, 449, 527, 557, 563, 571, 580, 589, 684, 780, 802, 829, 851, 872], "accomplish": [60, 133, 134, 148, 160, 170, 829, 837, 847, 848, 854], "plot_vector_source_estim": [60, 804, 862, 872], "hood": [60, 125, 142, 188, 197, 200, 204, 872], "plot_source_estim": [60, 739, 804, 862, 872], "instruct": [60, 114, 160, 188, 209, 464, 829, 830, 831, 832, 833, 835, 836, 837, 838, 842, 845, 851, 857, 872], "impos": [60, 193, 199, 872], "underli": [60, 159, 165, 200, 204, 223, 224, 236, 241, 255, 259, 260, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 277, 405, 473, 474, 479, 573, 692, 695, 729, 872], "getter": [60, 176, 872], "peak_tim": [60, 174], "get_peak": [60, 125, 148, 150, 174, 176, 177, 179, 263, 264, 268, 269, 272, 275, 276, 277, 872], "time_dil": [60, 134, 135, 176, 180, 739], "framer": [60, 134, 135, 176, 180, 739], "95048065": 60, "56941314": 60, "72451438": 60, "stc_max": 60, "cosin": [60, 88, 200, 218, 647, 854], "source_nn": [60, 265, 294, 295, 857], "brain_max": 60, "975978731472672": 60, "90575168": 60, "52414196": 60, "71336747": 60, "brain_norm": 60, "83607509": 60, "44726242": 60, "57923594": 60, "lot": [60, 69, 125, 151, 157, 159, 165, 168, 198, 200, 202, 203, 204, 209, 212, 214, 356, 362, 424, 455, 600, 629, 631, 820, 831], "fname_inv_fix": 60, "inv_fix": 60, "stc_fix": 60, "brain_fix": [60, 177], "00351751": 60, "62842071": 60, "43519503": 60, "pars": [61, 139, 150, 164, 170, 172, 173, 189, 199, 213, 254, 255, 266, 280, 434, 446, 453, 473, 481, 488, 489, 494, 542, 607, 827, 872], "elekta": [61, 82, 155, 164, 185, 186, 208, 254, 258, 259, 261, 262, 263, 264, 266, 271, 299, 351, 425, 446, 448, 473, 474, 516, 755, 767, 769, 779, 792, 807, 843, 848, 854, 857, 872], "triux": [61, 182, 254, 261, 262, 263, 264, 385, 473, 474, 549, 692, 694, 695, 696, 848, 854], "dacq": [61, 254, 848], "acquisit": [61, 155, 159, 167, 187, 188, 189, 190, 205, 212, 241, 254, 255, 261, 262, 263, 264, 266, 280, 446, 473, 474, 475, 571, 580, 594, 657, 827, 843, 847, 854, 857, 872], "accordingli": [61, 133, 149, 157, 177, 188, 212, 256, 261, 262, 263, 264, 413, 464, 473, 474, 481, 488, 493, 581, 854, 872], "multimod": [61, 136, 241, 858, 862, 872], "multimodal_raw": 61, "grad_ssp_upright": 61, "mag_ssp_upright": 61, "v4": [61, 207, 208], "v5": [61, 207, 208], "183600": 61, "576599": 61, "960": [61, 79, 99, 142, 193, 224, 228, 848], "categori": [61, 110, 144, 254, 332, 611, 736, 854, 855, 872], "acqpars": [61, 254, 473, 872], "acqparserfif": [61, 266, 473, 862, 872], "get_condit": [61, 254], "plot_topo": [61, 149, 151, 165, 215, 236, 237, 261, 262, 263, 264, 318, 473, 474, 692, 694, 696, 872], "background_color": [61, 130, 263, 264, 777, 872], "cat": [61, 110], "flat": [61, 81, 109, 139, 140, 149, 180, 198, 199, 200, 204, 205, 206, 208, 254, 256, 261, 262, 268, 272, 276, 354, 356, 552, 554, 564, 565, 568, 569, 571, 678, 797, 827, 847, 872], "fiff": [61, 113, 155, 159, 261, 262, 265, 271, 274, 473, 474, 477, 490, 503, 504, 552, 564, 565, 726, 747, 815, 820, 848, 872], "fname_out": [61, 747], "write_evok": [61, 148, 263, 264, 436, 610, 851, 862, 872], "118": [61, 168, 194, 207, 223, 228, 241, 552, 872], "0812": [61, 168], "0123": [61, 144, 165, 168, 212], "0942": [61, 168], "2232": [61, 168, 332], "newcat": 61, "longer": [61, 112, 144, 161, 166, 167, 171, 190, 198, 199, 200, 201, 203, 223, 238, 261, 262, 263, 264, 266, 338, 429, 440, 444, 446, 473, 474, 554, 580, 695, 704, 719, 720, 722, 723, 739, 749, 769, 772, 831, 837, 851, 854, 872], "ref": [61, 121, 150, 253, 739, 755, 831, 872], "reqev": [61, 254], "requir": [61, 107, 133, 134, 135, 139, 141, 143, 149, 155, 157, 160, 161, 165, 167, 169, 171, 181, 188, 189, 190, 194, 197, 200, 201, 203, 206, 208, 212, 218, 220, 223, 224, 227, 231, 253, 254, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 294, 295, 300, 305, 309, 351, 352, 353, 354, 356, 357, 360, 381, 404, 405, 407, 408, 412, 414, 415, 418, 421, 422, 443, 444, 446, 448, 461, 463, 466, 467, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 507, 511, 512, 514, 515, 522, 525, 526, 535, 536, 551, 552, 554, 557, 564, 565, 566, 574, 581, 589, 598, 635, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 688, 692, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 733, 739, 756, 762, 769, 771, 774, 778, 782, 786, 791, 792, 793, 794, 797, 799, 801, 802, 808, 827, 829, 832, 835, 836, 847, 848, 853, 854, 860, 872], "reqwithin": [61, 254], "reqwhen": [61, 254], "freeli": 61, "537": [61, 66, 228], "elekta_epoch": [61, 66], "scratch": [63, 139, 148, 164, 187, 189, 190, 212, 221, 222, 238, 262, 263, 264, 266, 369, 474], "exampleio": 63, "fake": [63, 69, 158, 181], "won": [63, 150, 204, 205, 214, 227, 241, 261, 262, 263, 264, 357, 473, 474, 552, 610, 692, 694, 695, 696, 729], "consult": [63, 200, 204, 580, 831, 836, 837, 847, 851, 853, 854], "reader": [63, 165, 174, 187, 204, 212, 327, 472, 479, 481, 482, 483, 485, 488, 491, 493, 494, 495, 496, 498, 499, 500, 501, 502, 604, 606, 608, 854, 858, 872], "fakedata": 63, "nof": 63, "lazi": 63, "analogsign": 63, "multichannel": [63, 69, 110, 150, 194, 208, 241, 426, 560, 563, 580], "sampling_r": 63, "misc": [63, 65, 78, 79, 80, 113, 133, 134, 136, 148, 168, 177, 181, 182, 184, 187, 188, 190, 212, 218, 261, 262, 263, 264, 271, 308, 324, 343, 369, 438, 473, 474, 481, 483, 485, 488, 490, 494, 498, 549, 692, 694, 695, 696, 763, 769, 773, 775, 777, 792, 848, 862, 872], "show_scrollbar": [63, 74, 150, 203, 209, 218, 261, 262, 473, 474, 552, 769, 786, 792, 872], "100000": [63, 442], "99999": [63, 434], "read_neo_format": [63, 66], "ev_info": 64, "15972": 64, "27235589e": 64, "79818505e": 64, "12852747e": 64, "85348042e": 64, "02846360e": 64, "26727393e": 64, "33468523e": 64, "80261790e": 64, "33583009e": 64, "93161055e": 64, "35199238e": 64, "79073915e": 64, "09498615e": 64, "16924072e": 64, "93873875e": 64, "40677185e": 64, "27444183e": 64, "08634620e": 64, "59818134e": 64, "51070563e": 64, "53708918e": 64, "770": [64, 66, 79], "read_noise_covariance_matrix": [64, 66], "analyz": [65, 70, 139, 164, 167, 179, 194, 197, 198, 200, 201, 208, 213, 214, 223, 241, 261, 262, 431, 555, 561, 675, 828, 831, 847, 854, 872], "pabr": 65, "maddox": [65, 241, 872], "lab": [65, 67, 831, 850, 860], "clemen": [65, 110, 859, 872], "brunner": [65, 110, 859, 872], "pyxdf": [65, 188], "p001_se": 65, "s004_task": 65, "default_run": 65, "001_eeg_a2": 65, "stream": [65, 188, 198, 201, 872], "header": [65, 111, 121, 155, 159, 181, 188, 190, 263, 264, 294, 295, 336, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 468, 470, 471, 472, 480, 483, 485, 498, 500, 501, 530, 779, 872], "load_xdf": 65, "time_seri": 65, "assert": [65, 107, 139, 143, 148, 155, 170, 190, 213, 220, 223, 225, 853, 872], "four": [65, 69, 140, 143, 150, 165, 184, 200, 223, 233, 241, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 739, 756, 771, 778, 782, 791, 794, 799, 801, 847, 854, 855], "plu": [65, 165, 167, 171, 176, 181, 200, 203, 205, 207, 227, 266, 711, 838, 849, 854, 857, 872], "rerefer": 65, "bipolar": [65, 190, 202, 203, 223, 261, 262, 263, 264, 473, 474, 634, 637, 872], "subselect": [65, 114, 142, 148, 149, 150, 165, 212, 225, 228, 236, 238, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 366, 473, 474, 692, 693, 694, 695, 769, 851, 872], "uv": [65, 261, 262, 263, 264, 473, 474, 872], "preamp": 65, "nominal_sr": 65, "2320128": 65, "2320127": 65, "232": [65, 143, 168, 227, 228], "melissa": [65, 241], "polonenko": [65, 241], "ross": [65, 241, 872], "brainstem": [65, 241], "hear": [65, 241, 584], "2331216519871395": [65, 241], "1177": [65, 99, 224, 241, 389, 848], "767": [65, 66, 194, 241, 847], "read_xdf": [65, 66], "auto_examples_io": 66, "facilit": [67, 110, 134, 135, 166, 189, 194, 224, 261, 262, 263, 264, 473, 474, 692, 694, 695, 696, 847, 854, 857, 872], "subcort": [67, 241, 567, 872], "simul": [67, 69, 78, 89, 103, 104, 139, 148, 160, 175, 187, 189, 199, 200, 212, 218, 228, 231, 232, 233, 238, 241, 258, 261, 262, 263, 264, 265, 266, 267, 272, 274, 284, 351, 369, 446, 473, 474, 478, 505, 508, 514, 518, 519, 530, 549, 550, 584, 601, 607, 612, 614, 615, 618, 692, 694, 695, 696, 705, 719, 722, 723, 724, 739, 743, 798, 848, 862, 872], "samuelsson": [67, 241, 567, 872], "johnsam": 67, "mit": [67, 70, 150, 241, 468, 561, 842, 848, 854], "simulate_sparse_stc": [67, 90, 91, 656, 657, 659, 862, 872], "simulate_evok": [67, 90, 175, 219, 514, 657, 658, 659, 862, 872], "all_label": 67, "select_label": 67, "hiplab": 67, "postcenlab": 67, "cortical_waveform": 67, "waveform": [67, 97, 200, 202, 205, 209, 241, 269, 275, 277, 642, 644, 658, 659, 678, 798, 838], "pi": [67, 88, 91, 92, 93, 112, 200, 205, 218, 219, 220, 527, 589, 658, 708, 716, 718, 722, 854], "subcortical_waveform": 67, "data_fun": [67, 90, 91, 92, 658], "isin": [67, 110, 143], "evoked_subcort": [67, 567], "cortical_signal_suppress": [67, 862, 872], "n_proj": [67, 567], "fft": [67, 106, 131, 200, 236, 238, 261, 262, 263, 264, 413, 417, 418, 473, 474, 525, 535, 536, 693, 697, 698, 699, 700, 701, 702, 704, 711, 717, 719, 720, 721, 722, 723, 724, 793, 872], "rfft": 67, "psd_proc": 67, "transax": 67, "footbibliographi": [67, 831], "911": [67, 83, 102, 104, 207, 228], "put": [68, 114, 121, 125, 140, 143, 154, 155, 160, 169, 171, 181, 182, 184, 193, 200, 203, 212, 218, 219, 220, 223, 263, 264, 267, 381, 739, 773, 831, 836, 872], "earli": [68, 69, 140, 171, 198, 200, 238, 241, 256, 261, 262, 263, 264, 473, 474, 512, 603], "button": [68, 70, 92, 119, 126, 133, 139, 141, 143, 151, 155, 160, 165, 167, 190, 197, 199, 204, 213, 214, 215, 258, 261, 262, 263, 264, 270, 271, 405, 412, 431, 473, 474, 551, 552, 692, 694, 696, 769, 770, 771, 773, 775, 778, 782, 791, 792, 793, 794, 799, 831, 848, 872], "press": [68, 70, 111, 119, 126, 133, 139, 141, 143, 150, 151, 155, 160, 165, 167, 171, 190, 197, 199, 213, 214, 215, 241, 261, 262, 351, 431, 444, 468, 473, 474, 552, 561, 769, 784, 786, 792, 848, 872], "millisecond": [68, 80, 110, 139, 144, 148, 167, 212, 231, 232, 233, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 431, 473, 474, 692, 695, 739, 797, 802, 872], "late": [68, 161, 851], "quickli": [68, 164, 165, 193, 203, 204, 214, 855, 872], "slowli": 68, "define_target_ev": [68, 83, 126, 862], "quick": [68, 72, 91, 133, 182, 197, 237, 517, 831], "reference_id": [68, 126, 431], "smilei": [68, 70, 92, 151, 165, 167, 213, 848], "target_id": [68, 126, 431], "new_id": [68, 126, 431, 517], "hit": [68, 238, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 770, 771, 775, 778, 782, 791, 794, 799, 872], "fill_na": [68, 431], "fill": [68, 219, 267, 272, 274, 275, 357, 431, 461, 473, 474, 574, 659, 688, 739, 872], "events_": 68, "besid": [68, 199, 204], "tmin_": 68, "tmax_": 68, "8522": [68, 872], "10649": 68, "12859": 68, "14830": 68, "16850": 68, "18826": 68, "21224": [68, 193], "23200": 68, "25272": 68, "27243": 68, "29525": 68, "31530": 68, "33481": 68, "35611": 68, "38007": 68, "08643728": 68, "532": [68, 206], "78723509": 68, "352": [68, 79, 110, 168, 170, 193], "97154325": 68, "359": [68, 79, 168, 207, 228], "63138369": 68, "446": [68, 144, 147, 207, 223, 228, 241, 846], "20930939": 68, "579": [68, 94], "40611816": 68, "512": [68, 71, 271, 274, 404], "80771377": 68, "ft": [68, 141, 144, 165, 199, 205, 237, 253, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 405, 412, 473, 474, 508, 551, 552, 566, 571, 692, 694, 696, 756, 770, 771, 773, 775, 778, 782, 791, 794, 799, 800, 801, 827, 854], "conduct": [69, 70, 99, 150, 157, 190, 223, 224, 225, 227, 241, 253, 509, 516, 649, 654, 827, 831, 847, 850, 854, 857, 872], "undesir": [69, 202, 552, 872], "otherwis": [69, 81, 118, 143, 150, 161, 171, 187, 199, 200, 228, 231, 233, 255, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 285, 294, 295, 299, 309, 321, 334, 351, 355, 356, 357, 365, 366, 367, 381, 399, 405, 412, 440, 443, 444, 448, 449, 463, 468, 470, 471, 473, 474, 483, 517, 518, 519, 525, 530, 551, 552, 566, 598, 607, 629, 630, 632, 638, 641, 658, 677, 678, 692, 694, 695, 696, 704, 716, 727, 729, 739, 755, 756, 763, 767, 769, 770, 771, 773, 774, 775, 776, 777, 778, 779, 782, 789, 791, 792, 793, 794, 795, 797, 798, 799, 801, 802, 817, 829, 831, 854, 872], "introduct": [69, 88, 93, 150, 228, 236, 238, 241, 271, 856], "smear": [69, 78, 79, 141, 200, 238, 579, 719, 720, 722, 723, 872], "unfortun": [69, 161, 839, 851], "brigd": 69, "far": [69, 81, 125, 139, 140, 143, 156, 170, 177, 199, 200, 201, 204, 206, 212, 213, 223, 362, 485, 555, 679, 680, 682, 683, 720, 723, 763, 854, 857], "address": [69, 94, 95, 165, 200, 223, 224, 231, 232, 233, 241, 266, 679, 680, 682, 683, 831, 837], "Or": [69, 118, 170, 197, 207, 566, 831], "quantifi": [69, 209, 238, 272], "introduc": [69, 74, 139, 140, 148, 150, 164, 165, 172, 174, 197, 199, 200, 201, 203, 204, 205, 212, 231, 233, 256, 261, 262, 263, 264, 317, 473, 474, 552, 769, 773, 792, 851, 854, 860, 872], "outcom": 69, "awar": [69, 101, 139, 143, 166, 167, 214, 225, 231, 261, 262, 263, 264, 473, 474, 776, 872], "mitig": [69, 179, 200, 201, 208, 854], "confound": [69, 150, 552], "psychophysiologi": [69, 70, 97, 140, 150, 200, 228, 241, 561, 678, 679, 680, 682, 683], "cpmc": 69, "columbia": 69, "softwar": [69, 133, 157, 164, 183, 188, 189, 206, 241, 254, 266, 317, 438, 464, 473, 474, 482, 500, 580, 623, 805, 825, 827, 829, 831, 832, 837, 839, 847, 848, 851, 852, 853, 856, 860, 862, 872], "ebridg": 69, "html": [69, 142, 168, 241, 253, 271, 566, 638, 855, 872], "linearsegmentedcolormap": [69, 754], "nearli": [69, 831], "exactli": [69, 125, 139, 143, 174, 183, 194, 212, 238, 554, 678, 757, 801, 872], "suffici": [69, 198, 200, 208, 225, 261, 262, 263, 264, 266, 279, 351, 473, 474, 511, 769, 792, 829, 831, 837, 847, 851, 854, 872], "portion": [69, 177, 197, 199, 212, 237, 261, 262, 318, 473, 474, 552, 769, 786, 792, 831, 851, 853], "plenti": 69, "settl": [69, 294], "ed_data": 69, "raw_data": 69, "read_raw": [69, 133, 134, 143, 171, 220, 253, 862, 872], "compute_bridged_electrod": [69, 579, 759, 862, 872], "1959919512423807e": 69, "665886892347847": 69, "oz": [69, 126, 158, 169, 238, 258, 261, 262, 263, 264, 270, 309, 405, 412, 473, 474, 551, 552, 566, 641, 692, 694, 696, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 872], "iz": 69, "4367321412185206": 69, "fcz": [69, 143, 238], "fc2": [69, 126], "fc4": [69, 143], "fc6": [69, 126], "f2": 69, "f4": [69, 126, 143, 158, 169, 206], "4835197413839957e": 69, "587817798712865": 69, "fc3": [69, 143, 495], "fc1": [69, 126, 472], "cp3": [69, 495], "cp1": [69, 126], "af7": 69, "af3": 69, "af4": 69, "af8": 69, "f5": [69, 495], "f3": [69, 126, 143, 158, 206, 495], "fz": [69, 126, 143, 158, 218, 224, 438, 473, 474, 488], "ft8": 69, "t8": [69, 126, 158, 169, 258, 261, 262, 263, 264, 270, 309, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 872], "tp8": 69, "p8": [69, 126, 158], "p7": [69, 126, 158, 495], "p5": [69, 495], "p3": [69, 126, 143, 158, 495], "p1": [69, 110, 209], "p4": [69, 126, 143, 158], "p6": 69, "po3": [69, 126, 238], "o1": [69, 126, 158, 218, 238], "po4": [69, 126, 238], "po8": [69, 126, 238, 872], "746002687401258": 69, "cz": [69, 110, 126, 143, 158, 169, 188, 190, 204, 206, 218, 224, 261, 262, 263, 264, 473, 474, 637, 872], "c2": [69, 110, 204], "c4": [69, 110, 126, 143, 158], "cp2": [69, 126], "cp4": 69, "pz": [69, 126, 142, 158, 190, 218, 224], "p2": [69, 110], "590631749462737": 69, "f6": 69, "understand": [69, 143, 159, 189, 200, 238, 708, 718, 722, 831, 854, 855, 860], "physiologi": 69, "clip": [69, 171, 215, 253, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 792, 794, 799, 801, 872], "bridged_idx": [69, 560, 579, 759], "ed_matrix": [69, 560, 759], "ax1": [69, 84, 88, 97, 136, 182, 193], "ax2": [69, 84, 88, 94, 97, 136, 182, 193, 225, 226], "triangular": [69, 159, 160, 267, 623, 679, 680, 682, 683, 798, 825, 847, 854, 857], "ed_plot": 69, "triu_idx": 69, "triu_indic": 69, "idx0": 69, "idx1": 69, "nanmedian": 69, "im1": 69, "cax1": 69, "set_label": [69, 145, 194, 223], "mu": [69, 200, 223, 560, 872], "im2": 69, "cax2": 69, "histogram": [69, 157, 261, 262, 769], "previou": [69, 133, 139, 143, 150, 160, 169, 170, 171, 180, 199, 200, 204, 206, 215, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 411, 412, 448, 449, 468, 470, 471, 530, 562, 571, 580, 739, 757, 779, 842, 857, 872], "pair": [69, 101, 118, 136, 143, 167, 187, 188, 189, 194, 208, 209, 223, 231, 238, 253, 258, 261, 262, 263, 264, 266, 268, 269, 270, 272, 274, 275, 276, 277, 280, 285, 299, 405, 412, 473, 474, 495, 518, 551, 552, 560, 579, 591, 623, 679, 681, 682, 692, 693, 694, 696, 727, 739, 755, 759, 760, 763, 771, 777, 778, 782, 794, 797, 799, 801, 802, 825, 831, 872], "isnan": 69, "arrang": [69, 125, 150, 164, 169, 215, 241, 744], "light": [69, 136, 141, 170, 189, 198, 261, 262, 263, 264, 408, 415, 473, 474, 552, 739, 769, 773, 786, 792, 827, 872], "horizont": [69, 79, 134, 139, 140, 141, 179, 190, 197, 208, 223, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 552, 739, 758, 773, 785, 786, 792, 797, 802, 872], "stand": [69, 154, 168, 174, 653, 831, 843], "insert": [69, 150, 168, 212, 258, 266, 270, 285, 299, 431, 447, 518, 727, 744], "syring": 69, "tip": [69, 203, 241, 351, 835, 836, 852, 858], "plot_bridged_electrod": [69, 862, 872], "saniti": [69, 118, 143, 181, 200, 441, 657, 860, 872], "implausibli": [69, 200, 223, 685], "interestingli": [69, 854], "though": [69, 73, 110, 150, 155, 159, 167, 171, 178, 182, 189, 197, 200, 201, 203, 204, 205, 223, 266, 742, 762, 827, 848, 854, 872], "adjac": [69, 141, 145, 198, 224, 232, 233, 315, 326, 417, 446, 554, 557, 662, 663, 664, 665, 666, 667, 668, 672, 679, 680, 682, 683, 760, 860, 869, 872], "distinct": [69, 70, 194, 241, 258, 261, 262, 263, 264, 405, 412, 473, 474, 551, 692, 694, 696, 756, 771, 778, 794, 799, 801], "unlik": [69, 139, 140, 148, 149, 155, 159, 169, 180, 197, 200, 202, 212, 260, 261, 262, 263, 264, 269, 275, 277, 358, 385, 413, 581, 696, 802, 829, 847, 854, 872], "add_channel": [69, 73, 261, 262, 263, 264, 473, 474, 552, 692, 694, 695, 696, 872], "ch1": 69, "ch2": 69, "9760": [69, 81], "9759": [69, 81], "lesser": [69, 473, 474, 792, 872], "trough": [69, 143], "monoton": [69, 99, 484, 743, 812], "discrep": [69, 854], "driven": [69, 194, 223, 367, 412, 468], "blink": [69, 71, 81, 91, 92, 143, 171, 197, 199, 202, 203, 205, 206, 212, 214, 238, 241, 255, 261, 262, 551, 566, 644, 645, 872], "flatten": [69, 117, 204, 223, 227, 233, 241, 756, 872], "axvspan": [69, 94, 150], "subplots_adjust": [69, 70, 72, 105, 107, 110, 118, 125, 145, 150, 159, 198, 201, 203, 204, 205, 206, 209, 213, 223, 225, 226, 228, 762], "725": [69, 193], "wspace": [69, 72, 125, 223], "compel": 69, "evid": [69, 111, 200, 201, 241, 552, 721, 724], "judici": [69, 831], "electrolyt": [69, 241, 560], "tri": [69, 159, 160, 167, 174, 177, 261, 262, 267, 268, 272, 274, 276, 315, 362, 428, 460, 623, 626, 641, 661, 665, 668, 797, 820, 849, 854, 857, 872], "those": [69, 73, 77, 97, 125, 141, 143, 150, 156, 160, 164, 165, 167, 168, 169, 170, 171, 174, 179, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 218, 219, 223, 253, 256, 261, 262, 263, 264, 266, 274, 294, 307, 309, 321, 324, 326, 352, 353, 354, 356, 365, 407, 411, 421, 426, 428, 429, 434, 438, 457, 473, 474, 484, 500, 530, 538, 551, 552, 554, 555, 567, 568, 569, 574, 577, 586, 588, 595, 641, 644, 645, 660, 678, 687, 692, 694, 695, 696, 700, 701, 702, 703, 705, 719, 720, 722, 723, 763, 769, 770, 773, 775, 776, 783, 790, 793, 831, 847, 853, 854, 856, 872], "still": [69, 73, 77, 113, 118, 141, 142, 143, 159, 170, 187, 188, 197, 198, 200, 201, 202, 204, 206, 208, 212, 215, 223, 231, 261, 266, 274, 317, 362, 424, 455, 473, 552, 580, 600, 629, 631, 674, 695, 748, 762, 763, 804, 820, 829, 831, 837, 849, 860, 872], "biolog": [69, 197, 204, 205, 241, 519, 847, 854], "interpolate_bridged_electrod": [69, 862, 872], "midwai": [69, 579], "aid": [69, 241, 579, 872], "recov": [69, 133, 165, 362, 872], "impli": [69, 161, 219, 238, 266, 327, 361, 488, 851], "unbridg": 69, "ch0": 69, "bridged_idx_simul": 69, "data_orig": 69, "rng": [69, 90, 91, 92, 112, 193, 200, 223, 505, 552, 578, 597, 644, 645, 646, 655, 656, 658, 679, 680, 681, 682, 683], "random": [69, 82, 88, 90, 91, 92, 112, 158, 189, 190, 193, 197, 200, 203, 220, 223, 224, 231, 232, 233, 470, 505, 552, 578, 597, 644, 645, 646, 655, 656, 658, 679, 680, 681, 682, 683, 872], "default_rng": 69, "seed": [69, 88, 93, 110, 112, 203, 219, 220, 224, 231, 232, 233, 463, 505, 552, 578, 597, 644, 645, 646, 655, 656, 658, 671, 679, 680, 681, 682, 683, 872], "raw_sim": [69, 91, 92], "bridged_data": 69, "tile": [69, 112], "back": [69, 73, 81, 86, 114, 139, 142, 157, 160, 161, 165, 170, 171, 179, 180, 198, 200, 203, 204, 205, 206, 236, 254, 261, 262, 263, 264, 271, 362, 365, 420, 446, 473, 474, 552, 773, 831, 851, 872], "raw_virtu": 69, "data_virtu": 69, "raw_comp": 69, "data_comp": 69, "With": [69, 112, 119, 161, 170, 171, 187, 190, 204, 205, 214, 220, 261, 262, 263, 264, 279, 447, 473, 474, 496, 552, 630, 739, 787, 827, 831, 834, 839, 843, 851, 853, 854], "comp": [69, 168, 266, 872], "1086289630998356e": 69, "139834556312537e": 69, "brought": [69, 155], "impend": 69, "help": [69, 71, 118, 133, 139, 143, 144, 145, 150, 158, 160, 161, 165, 168, 171, 180, 187, 189, 194, 197, 198, 199, 201, 202, 203, 205, 215, 227, 253, 259, 260, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 277, 432, 434, 440, 464, 473, 474, 481, 488, 489, 494, 503, 552, 598, 604, 637, 641, 655, 658, 684, 691, 692, 695, 708, 718, 722, 736, 739, 747, 769, 783, 797, 831, 836, 837, 847, 849, 853, 854, 855, 857, 860, 872], "quest": 69, "technician": [69, 847, 848], "noisi": [69, 90, 141, 149, 198, 200, 205, 208, 223, 231, 233, 238, 266, 571, 572, 575, 644, 645, 656, 847, 872], "bid": [69, 133, 135, 241, 261, 262, 309, 473, 474, 838, 848, 860, 872], "tsv": [69, 327, 872], "kohm": 69, "passiv": [69, 197], "accept": [69, 92, 139, 168, 170, 171, 187, 198, 199, 200, 203, 204, 205, 212, 256, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 311, 341, 356, 373, 374, 375, 381, 383, 405, 412, 473, 474, 496, 552, 554, 568, 569, 677, 679, 680, 682, 683, 694, 696, 739, 763, 770, 771, 777, 782, 825, 831, 850, 872], "from_list": 69, "impedance_cmap": 69, "cn": [69, 801], "cax": [69, 110, 114, 125, 145, 228], "omega": [69, 107], "hopefulli": [69, 197, 238, 445], "convinc": [69, 150], "tenk": [69, 70, 241, 560, 561], "kayser": [69, 70, 241, 560, 561], "electroencephalogram": [69, 241, 560], "offici": [69, 70, 189, 241, 496, 552, 560, 561, 606, 831, 839, 853, 856, 872], "feder": [69, 241, 552, 560], "545": [69, 194, 241, 560], "550": [69, 79, 161, 220, 228, 241, 426, 560], "march": [69, 241, 560, 857, 872], "s1388": [69, 110, 241, 560], "2457": [69, 110, 241, 560], "00553": [69, 241, 560], "arnaud": [69, 241, 552, 560], "delorm": [69, 241, 552, 560], "scott": [69, 110, 143, 241, 429, 468, 552, 560, 847, 872], "makeig": [69, 110, 143, 241, 429, 468, 552, 560, 847], "134": [69, 88, 89, 168, 170, 192, 194, 223, 228, 241, 274, 517, 560], "jneumeth": [69, 73, 200, 228, 241, 552, 560, 652, 679, 680, 682, 683], "2003": [69, 193, 238, 241, 411, 560, 847], "009": [69, 72, 119, 126, 139, 148, 168, 220, 241, 560], "982": [69, 83, 207, 228], "eeg_bridg": [69, 83], "laplacian": [70, 193, 241, 417, 561, 637, 872], "sharper": [70, 200], "impact": [70, 136, 177, 198, 238, 405, 872], "166799": [70, 166, 181, 202], "714": [70, 128, 130, 166, 181, 202, 228], "date": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 168, 188, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 218, 220, 253, 255, 261, 262, 263, 264, 266, 473, 474, 475, 485, 488, 581, 829, 831, 872], "decemb": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 206, 208, 212, 213, 214, 215, 220], "2002": [70, 72, 75, 81, 88, 91, 110, 125, 140, 145, 150, 165, 166, 167, 168, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 212, 213, 214, 215, 220, 241, 255, 519, 674, 676, 681, 854], "gmt": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 220], "146": [70, 72, 75, 81, 88, 91, 125, 140, 145, 150, 165, 166, 167, 168, 194, 197, 198, 199, 201, 203, 204, 205, 206, 208, 212, 213, 214, 215, 220, 228, 241], "172": [70, 81, 91, 125, 166, 167, 168, 193, 194, 197, 198, 200, 201, 204, 205, 206, 207, 208, 212, 213, 214, 215, 227, 228, 241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 652, 657, 692, 695], "hh": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 220], "ss": [70, 72, 75, 79, 80, 81, 88, 91, 125, 140, 145, 150, 166, 167, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 220, 854], "raw_csd": 70, "compute_current_source_dens": [70, 637, 862, 872], "evoked_csd": 70, "stiff": [70, 561], "spline": [70, 77, 198, 241, 261, 262, 263, 264, 473, 474, 561, 704, 854, 872], "flexibl": [70, 142, 171, 188, 739, 872], "hspace": [70, 72, 125, 223], "set_size_inch": [70, 202], "this_evoked_csd": 70, "contour": [70, 99, 118, 157, 171, 253, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 577, 692, 694, 696, 756, 757, 771, 774, 775, 778, 782, 791, 794, 799, 801, 872], "n\u03bb\u00b2": 70, "perrin": [70, 77, 198, 241, 561, 854], "pernier": [70, 77, 198, 241, 561, 708, 718, 719, 722, 854], "bme": [70, 241, 561], "1987": [70, 175, 200, 241, 561], "326089": [70, 241, 561], "jacqu": [70, 77, 198, 241, 561, 708, 718, 719, 722, 854], "olivi": [70, 77, 198, 241, 351, 552, 561, 708, 718, 719, 722, 854], "fran\u0107oi": [70, 77, 198, 241, 561, 854], "echalli": [70, 77, 198, 241, 561, 854], "184": [70, 74, 77, 94, 168, 198, 223, 227, 228, 241, 561, 587, 854], "1989": [70, 77, 198, 241, 561, 854], "90180": [70, 77, 198, 241, 561, 854], "mike": [70, 241, 561], "cohen": [70, 117, 127, 241, 561, 706, 708, 718, 722, 756, 872], "theori": [70, 164, 177, 208, 241, 561, 580], "j\u00fcrgen": [70, 203, 241, 552, 561], "craig": [70, 241, 561], "methodologi": [70, 99, 241, 351, 561], "electrophysiologi": [70, 133, 241, 561], "171": [70, 74, 124, 168, 200, 241, 383, 530, 561, 587, 649, 654, 872], "ijpsycho": [70, 241, 561], "260": [70, 79, 168, 207, 228, 589, 848], "eeg_csd": [70, 83], "eog_event_id": 71, "eog_ev": [71, 199, 255, 565, 573, 576], "find_eog_ev": [71, 197, 199, 214, 255, 565, 569, 849, 862, 872], "add_ev": [71, 171, 271, 473, 474, 872], "audr": 71, "visr": 71, "pick_ch": 71, "375": [71, 79, 92, 110, 168, 197, 199, 205, 207, 223, 228], "dc": [71, 165, 167, 171, 189, 197, 199, 200, 201, 202, 203, 205, 213, 256, 261, 263, 264, 266, 338, 473, 474, 552, 554, 580, 792, 857, 872], "offset": [71, 91, 135, 160, 167, 171, 190, 197, 199, 200, 202, 203, 204, 205, 212, 213, 214, 255, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 358, 434, 446, 473, 474, 555, 594, 607, 672, 692, 695, 739, 857, 872], "saccad": [71, 171, 190, 197, 199, 202, 203, 205, 551], "firwin2": [71, 145, 171, 190, 197, 199, 200, 202, 203, 205, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474, 872], "hann": [71, 82, 106, 107, 145, 171, 197, 199, 200, 202, 203, 205, 261, 262, 263, 264, 416, 441, 443, 444, 473, 474, 525, 526, 643, 644, 645, 657, 872], "1502": [71, 171, 199, 203], "884": [71, 83, 228, 241], "eog_artifact_histogram": [71, 83], "basic": [72, 81, 110, 149, 150, 157, 160, 161, 164, 165, 170, 171, 172, 175, 191, 197, 202, 203, 204, 205, 208, 212, 215, 216, 220, 239, 240, 241, 253, 261, 266, 270, 309, 325, 369, 385, 434, 440, 483, 549, 694, 801, 848, 854, 872], "thorough": [72, 164, 198, 855], "modul": [72, 133, 139, 141, 142, 144, 145, 148, 149, 150, 160, 165, 166, 167, 168, 169, 170, 171, 188, 189, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 212, 213, 214, 215, 218, 236, 238, 253, 344, 484, 546, 691, 736, 739, 830, 831, 838, 843, 851, 854, 860, 861, 862, 863, 864, 867, 870, 872], "eogregress": [72, 202, 590, 794, 862, 872], "elimin": [72, 168, 202, 204, 208, 223, 231, 233, 352, 353, 354, 405, 574, 851, 854, 872], "slow": [72, 126, 136, 140, 143, 149, 200, 202, 209, 241, 261, 262, 398, 399, 410, 525, 526, 578, 710, 729, 771, 831, 848], "drift": [72, 140, 200, 202, 209, 552, 594, 872], "1653": [72, 73], "376": [72, 79, 91, 92, 93, 110, 148, 165, 166, 168, 178, 181, 186, 207, 212, 228], "offpca": [72, 75, 91, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 208, 212, 213, 214, 215, 220], "offaverag": [72, 91, 168, 199, 203], "raw_clean": [72, 82, 202, 588], "evoked_befor": 72, "evoked_aft": 72, "epochs_aft": 72, "spatial_color": [72, 92, 97, 127, 136, 143, 149, 150, 205, 215, 261, 262, 263, 264, 473, 474, 694, 696, 773, 776, 793, 872], "905": [72, 228], "859": [72, 83, 142, 194], "eog_regress": [72, 83], "intermitt": 73, "extern": [73, 150, 179, 187, 208, 241, 261, 262, 263, 264, 338, 340, 344, 426, 435, 436, 437, 438, 473, 474, 552, 562, 563, 571, 580, 847, 848, 854, 872], "magnet": [73, 79, 117, 127, 133, 149, 155, 175, 187, 201, 202, 228, 241, 339, 519, 552, 756, 832, 847, 848], "fail": [73, 205, 355, 362, 424, 426, 455, 489, 490, 562, 563, 571, 580, 598, 600, 604, 629, 631, 820, 831, 853, 872], "succe": [73, 160, 170, 837], "choos": [73, 80, 112, 113, 134, 140, 145, 150, 159, 161, 179, 180, 188, 193, 197, 200, 202, 203, 208, 225, 238, 254, 261, 262, 268, 269, 272, 274, 275, 276, 277, 316, 446, 519, 527, 551, 557, 564, 572, 575, 580, 607, 655, 658, 678, 739, 755, 758, 797, 802, 803, 829, 831, 851, 853, 872], "made": [73, 114, 154, 171, 197, 200, 223, 261, 262, 267, 269, 274, 275, 277, 311, 325, 481, 594, 657, 770, 772, 802, 829, 831, 848, 853, 872], "whose": [73, 93, 143, 167, 169, 187, 194, 220, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 434, 439, 448, 449, 468, 470, 471, 473, 474, 512, 530, 552, 557, 566, 568, 569, 572, 645, 695, 696, 763, 766, 779, 784, 793, 794, 853, 854, 857, 872], "particularli": [73, 160, 189, 202, 223, 261, 262, 263, 264, 432, 473, 474, 552, 571, 834, 854], "heavi": [73, 231, 233, 851, 872], "jeff": [73, 241, 552, 872], "hanna": [73, 241, 552, 872], "refmeg_nois": [73, 848, 862, 872], "sample_reference_meg_nois": 73, "refmeg": 73, "165353": 73, "30000": [73, 404], "select_pick": 73, "plot_kwarg": [73, 156, 202], "480": [73, 79, 170, 190, 228], "raw_tog": 73, "ica_kwarg": 73, "picard": [73, 75, 81, 203, 552, 838, 872], "fit_param": [73, 75, 171, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 422, 552, 553, 872], "all_pick": 73, "ica_tog": 73, "allow_ref_meg": [73, 552], "bad_comp": 73, "find_bads_ref": [73, 552, 872], "plot_properti": [73, 81, 165, 203, 552, 858, 872], "147": [73, 168, 194, 207, 227, 228], "patient": [73, 75, 81, 135, 165, 171, 203, 872], "took": [73, 75, 81, 165, 171, 203, 552], "dpss": [73, 81, 101, 102, 136, 141, 142, 165, 171, 203, 236, 237, 261, 262, 263, 264, 418, 473, 474, 694, 696, 704, 710, 720, 723, 872], "raw_sep": 73, "ref_pick": 73, "ica_ref": 73, "ica_sep": 73, "think": [73, 143, 171, 194, 200, 223, 827, 850], "ekg": [73, 135], "cardiac": [73, 209], "ref_comp": 73, "get_sourc": [73, 552, 872], "ref_": 73, "recognis": 73, "rename_channel": [73, 110, 126, 139, 148, 150, 158, 184, 209, 212, 261, 262, 263, 264, 309, 473, 474, 484, 495, 862, 872], "cora": [73, 241, 552, 872], "kim": [73, 241, 552, 872], "nadia": [73, 241, 552], "voggel": [73, 241, 552], "magnetoencephalograph": [73, 241, 552], "108592": [73, 241, 552], "314": [73, 83, 168, 194, 207, 223, 228], "find_ref_artifact": [73, 83], "fnir": [74, 164, 168, 169, 191, 192, 210, 211, 241, 261, 262, 263, 264, 266, 309, 325, 327, 350, 367, 369, 434, 473, 474, 482, 495, 500, 502, 549, 582, 583, 584, 586, 587, 692, 694, 695, 696, 739, 755, 763, 772, 777, 827, 838, 854, 872], "mail": [74, 223, 842], "robertluk": 74, "net": [74, 169, 193, 241, 411, 674, 854, 872], "optical_dens": [74, 209, 862, 872], "temporal_derivative_distribution_repair": [74, 862, 872], "exact": [74, 101, 133, 201, 223, 231, 238, 241, 261, 262, 263, 264, 287, 422, 473, 474, 519, 679, 681, 682, 693, 697, 699, 700, 702, 827, 835, 854, 872], "fnirs_data_fold": [74, 209], "fnirs_motor": [74, 209, 848, 862, 872], "fnirs_cw_amplitude_dir": [74, 209], "raw_intens": [74, 209], "read_raw_nirx": [74, 189, 209, 479, 854, 862, 872], "raw_od": [74, 209], "new_annot": [74, 214], "317": [74, 168, 228], "set_annot": [74, 79, 80, 136, 167, 190, 199, 214, 255, 261, 262, 473, 474, 554, 581, 872], "23238": [74, 209], "2974": [74, 209], "464": [74, 143, 170, 209, 223, 274], "spike": [74, 81, 254, 587, 847], "person": [74, 150, 209, 266, 831, 847, 853], "optod": [74, 189, 209, 502, 584, 739, 755, 848, 872], "corrupted_data": 74, "450": [74, 79, 89, 140, 159, 223, 228, 274, 872], "corrupted_od": 74, "245": [74, 168, 184, 199, 223, 228, 241, 854], "8924": 74, "8923": 74, "suppli": [74, 99, 151, 171, 179, 205, 218, 223, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 357, 381, 429, 439, 440, 473, 474, 552, 566, 586, 587, 634, 692, 695, 762, 763, 782, 872], "corrected_tddr": 74, "said": [74, 174], "fishburn": [74, 241, 587], "ruth": [74, 241, 587], "ludlum": [74, 241, 587], "chandan": [74, 241, 587], "vaidya": [74, 241, 587], "andrei": [74, 241, 587], "medvedev": [74, 241, 587], "tddr": [74, 241, 587, 872], "motion": [74, 241, 556, 587, 872], "025": [74, 126, 135, 139, 145, 148, 168, 190, 197, 200, 220, 223, 241, 587], "038": [74, 83, 139, 144, 147, 148, 168, 220, 224, 230], "fnirs_artifact_remov": [74, 83], "pierreablin": 75, "9009": [75, 171, 203], "run_ica": [75, 872], "t0": [75, 98, 184, 238, 254, 697, 698, 699], "fit_tim": 75, "infomax": [75, 203, 241, 552, 858, 862, 872], "443": [75, 83, 142, 223, 228, 241], "ica_comparison": [75, 83], "replac": [77, 86, 99, 140, 142, 150, 158, 171, 187, 189, 199, 204, 205, 208, 212, 214, 241, 258, 261, 262, 263, 264, 270, 271, 405, 412, 427, 440, 473, 474, 485, 500, 517, 551, 552, 566, 692, 694, 696, 756, 778, 782, 791, 794, 799, 831, 835, 837, 839, 842, 854, 872], "evoked_interp": 77, "product": [77, 85, 117, 122, 149, 169, 187, 188, 193, 198, 205, 241, 266, 328, 418, 672, 720, 721, 723, 724, 748, 853, 854, 872], "truncat": [77, 85, 117, 122, 149, 198, 205, 213, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 428, 434, 473, 474, 486, 692, 695, 763, 872], "evoked_interp_mn": 77, "\u03b1": [77, 141, 205, 215], "0e": [77, 193, 205], "870": [77, 79, 83, 241, 676], "interpolate_bad_channel": [77, 83], "bilater": [78, 205, 640, 872], "repeat": [78, 91, 99, 111, 133, 139, 160, 164, 166, 204, 205, 212, 213, 223, 229, 230, 234, 235, 255, 261, 262, 263, 264, 266, 272, 274, 357, 429, 473, 518, 519, 533, 549, 552, 566, 589, 607, 622, 664, 673, 675, 676, 680, 683, 684, 695, 722, 739, 777, 831, 839, 851, 872], "maxwell_filt": [78, 183, 207, 208, 426, 562, 571, 581, 781, 851, 862, 872], "head_po": [78, 79, 207, 208, 426, 571, 580, 643, 644, 645, 657, 872], "chpi": [78, 79, 121, 168, 182, 207, 208, 253, 261, 262, 263, 264, 266, 271, 308, 426, 473, 474, 549, 556, 559, 580, 643, 644, 645, 657, 692, 694, 695, 696, 762, 769, 792, 827, 854, 860, 861, 862, 872], "read_head_po": [78, 207, 208, 339, 341, 347, 349, 426, 571, 580, 643, 644, 645, 657, 862], "simulated_quat": 78, "simulated_movement_raw": 78, "raw_stat": 78, "simulated_stationary_raw": 78, "34208": 78, "955": [78, 81, 142, 228], "backward": [78, 200, 253, 261, 262, 263, 264, 367, 405, 407, 411, 412, 416, 433, 441, 443, 444, 473, 474, 525, 694, 696, 739, 771, 780, 804, 854, 872], "plot_head_posit": [78, 79, 207, 208, 862, 872], "quiver": [78, 259, 739, 767, 781], "306m": [78, 107, 114, 121, 122, 149, 155, 157, 169, 171, 182], "topo_kwarg": [78, 140], "evoked_stat": 78, "naiv": [78, 227], "therebi": [78, 174, 202, 204, 720, 723, 854], "third": [78, 92, 93, 150, 168, 171, 187, 205, 209, 214, 255, 256, 261, 433, 434, 446, 447, 473, 474, 513, 547, 552, 606, 607, 682, 683, 696, 772, 817, 831, 854], "restor": [78, 199, 206, 263, 264, 405, 409, 552, 553, 592, 739, 818, 872], "raw_sss": [78, 171, 208, 253, 473, 474, 493, 580], "evoked_raw_mc": 78, "harmon": [78, 91, 182, 183, 190, 197, 201, 207, 208, 238, 854], "fourth": [78, 200, 214, 463, 854], "cleanli": [78, 168], "evoked_evo_mc": 78, "average_mov": [78, 208, 580, 862, 872], "movement_compens": [78, 83], "contamin": [79, 200, 203, 241, 552], "similarli": [79, 97, 110, 142, 148, 170, 194, 200, 206, 209, 255, 552, 763, 849, 854], "suffer": [79, 847], "adonai": [79, 80, 872], "nune": [79, 80, 241, 652, 872], "bst_auditori": [79, 80, 190, 862], "annotate_mov": [79, 207, 862, 872], "compute_average_dev_head_t": [79, 556, 862, 872], "data_path_meg": 79, "raw_fname1": [79, 190], "s01_aef_20131218_01": [79, 80, 190], "raw_fname2": [79, 190], "s01_aef_20131218_02": [79, 190], "mismatch": [79, 159, 160, 190, 351, 439, 527, 796, 872], "on_mismatch": [79, 190, 351, 358, 360, 818, 872], "s01_20131218_01": [79, 80, 190], "2400": [79, 80, 183, 190], "864000": [79, 80, 190], "eab": [79, 80], "s01": [79, 80], "lt": [79, 113], "br": 79, "gt": 79, "chpi_loc": [79, 207, 339, 341, 342, 343], "extract_chpi_locs_ctf": [79, 339, 341, 862, 872], "compute_head_po": [79, 207, 208, 339, 342, 580, 862, 872], "original_head_dev_t": 79, "invert_transform": [79, 134], "average_head_dev_t": 79, "val": [79, 99], "val_ori": 79, "010": [79, 92, 126, 139, 148, 154, 168, 220, 241], "020": [79, 126, 139, 148, 168, 220], "090": [79, 207], "130": [79, 80, 81, 157, 168, 169, 207, 223, 227, 228, 241, 335, 872], "160": [79, 80, 82, 121, 168, 169, 170, 187, 227, 228, 241, 335, 530, 564, 572, 575, 649, 654], "280": [79, 168, 169, 207, 228, 237, 335, 872], "290": [79, 110, 143, 168, 183, 223, 228, 241, 652], "370": [79, 110, 168, 223, 228, 241, 267, 272], "430": [79, 207, 223], "460": [79, 183, 223, 228, 241, 846], "470": [79, 127, 128, 194, 207, 223, 228], "490": [79, 194, 228], "510": [79, 143, 207, 223, 228, 238], "520": [79, 228], "540": [79, 220, 228, 241, 294, 295], "580": [79, 207, 228], "630": [79, 194, 228], "640": [79, 182, 194, 207, 228], "650": [79, 80, 145, 228], "680": [79, 194, 228], "690": [79, 194, 228], "710": [79, 194, 207, 233, 235, 241, 560], "720": [79, 193, 196, 207, 228, 241, 560], "730": [79, 228], "740": [79, 135, 138], "760": [79, 194, 207, 228], "780": [79, 207], "790": [79, 194, 207, 228], "810": [79, 207, 228], "820": [79, 194], "830": [79, 194, 228], "840": [79, 194, 228], "850": [79, 207, 214, 217, 872], "880": [79, 179, 207, 228, 241, 294, 295], "910": [79, 228], "920": [79, 99, 142, 145, 147, 224], "930": [79, 207, 228], "940": [79, 228], "950": [79, 207, 228, 238], "970": [79, 228], "980": [79, 203, 207, 223, 228, 230], "990": [79, 207, 228], "351": [79, 90, 110, 168, 194, 207, 223, 228], "353": [79, 104, 108, 110, 168, 207, 228], "355": [79, 110, 168, 193, 207, 228], "356": [79, 168, 207, 228], "357": [79, 168, 200, 228], "358": [79, 168, 207, 223], "369": [79, 110, 168, 194, 207, 223, 241, 519, 652, 854], "182": [79, 168, 190, 194, 207, 227], "361": [79, 168, 193, 223, 228, 232], "362": [79, 110, 168, 219, 223, 224, 228], "363": [79, 168, 186, 228], "367": [79, 110, 168, 198, 228, 230], "368": [79, 110, 168, 170, 207, 223, 228, 231], "371": [79, 83, 85, 110, 126, 128, 168, 194, 207, 228], "372": [79, 110, 168, 193, 207, 223, 228], "373": [79, 110, 168, 207], "377": [79, 110, 228], "379": [79, 110, 194, 223, 228], "381": [79, 110, 223, 228], "382": [79, 83, 98, 100, 107, 110, 223, 241, 652], "385": [79, 107, 110, 228], "386": [79, 223], "388": [79, 223, 228, 241], "389": [79, 228], "391": [79, 228], "392": [79, 207], "394": [79, 136, 228, 674], "395": [79, 194, 196, 207, 223], "397": [79, 223, 228], "399": [79, 228], "404": [79, 207, 223, 228], "405": [79, 194, 228], "406": [79, 207, 228], "407": [79, 194, 228], "mean_distance_limit": [79, 556], "0015": 79, "annotation_mov": 79, "hpi_disp": [79, 556], "disp": 79, "0015m": 79, "0038m": 79, "new_dev_head_t": 79, "show_ax": [79, 121, 123, 134, 155, 156, 158, 181, 182, 310, 755, 788, 872], "outer_skin": [79, 107, 116, 134, 155, 157, 158, 160, 171, 755, 847, 848, 854], "ctf_275": [79, 121, 183], "496": [79, 83, 170, 207, 228, 274], "movement_detect": [79, 83], "contract": [80, 853], "clench": [80, 203], "jaw": [80, 203], "swallow": [80, 197, 203], "twitch": 80, "cranial": 80, "notic": [80, 82, 139, 140, 142, 144, 148, 149, 150, 155, 159, 161, 165, 166, 169, 174, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 212, 214, 215, 218, 219, 571, 831], "annotate_muscle_zscor": [80, 862, 872], "taken": [80, 92, 136, 141, 198, 202, 204, 205, 228, 231, 238, 254, 255, 263, 264, 266, 267, 271, 272, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 468, 470, 471, 472, 473, 474, 530, 578, 598, 693, 704, 779, 792, 848, 853, 872], "analyt": [80, 111, 241, 261, 262, 263, 264, 473, 474, 872], "divid": [80, 99, 125, 141, 142, 143, 146, 147, 161, 164, 208, 223, 225, 228, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 277, 284, 471, 473, 474, 512, 535, 536, 557, 560, 564, 580, 614, 669, 679, 682, 692, 694, 695, 696, 707, 715, 771, 795, 799, 827, 851, 855, 872], "squar": [80, 111, 126, 139, 148, 149, 150, 161, 167, 168, 177, 188, 200, 212, 218, 220, 223, 225, 236, 241, 258, 261, 262, 263, 264, 268, 269, 270, 272, 275, 276, 277, 294, 295, 324, 405, 412, 449, 473, 474, 527, 534, 551, 552, 566, 672, 677, 679, 680, 682, 683, 692, 693, 694, 696, 739, 756, 764, 765, 771, 773, 778, 780, 782, 785, 791, 794, 797, 799, 801, 802, 827, 851, 854, 857, 872], "hundr": [80, 203, 204, 463, 829], "bad_muscl": [80, 557], "min_length_good": [80, 557], "fraction": [80, 111, 143, 174, 197, 203, 223, 323, 525, 534, 552, 570, 687, 783, 853, 872], "notch": [80, 190, 201, 344, 444, 473, 474], "1981": 80, "scores_muscl": [80, 557], "threshold_muscl": 80, "annot_muscl": 80, "filter_freq": [80, 557], "zscore": [80, 284, 535, 536, 552, 692, 695, 799], "144": [80, 168, 170, 202, 209, 223, 227, 228, 274, 872], "164": [80, 131, 150, 153, 168, 194, 200, 228, 241, 679, 680, 682, 683], "444": [80, 83, 228, 232, 233, 235], "196": [80, 168, 194, 223, 227, 228], "muscle_detect": [80, 83], "gross": [81, 241, 405], "widespread": [81, 203], "recover": 81, "ubiquit": 81, "postur": [81, 203], "mainten": [81, 205, 831, 872], "appropri": [81, 145, 148, 161, 165, 181, 182, 189, 199, 203, 205, 208, 218, 223, 225, 227, 238, 241, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 315, 321, 357, 384, 385, 473, 474, 516, 530, 678, 739, 763, 792, 797, 802, 829, 831, 846, 851, 854, 857, 872], "wouldn": [81, 872], "pronounc": [81, 200, 851], "simultan": [81, 136, 141, 194, 201, 203, 215, 413, 463, 495, 514, 594, 602, 681, 848, 854, 860, 872], "18019": 81, "1983": [81, 202, 241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 551, 595, 692, 695], "18020": 81, "exclus": [81, 169, 198, 203, 490, 547, 552, 783, 785, 786, 872], "mdash": [81, 203], "plot_sourc": [81, 203, 261, 262, 473, 474, 552, 769, 786, 792, 872], "85861": 81, "103880": 81, "criteria": [81, 139, 165, 199, 204, 205, 209, 254, 261, 262, 271, 547, 552, 872], "slope": [81, 187, 200, 253, 254, 266, 338, 339, 496, 552, 872], "peripher": [81, 552], "pole": [81, 159], "foci": [81, 739, 872], "blob": [81, 231, 232], "worth": [81, 99, 148, 224, 241, 389, 481, 488, 831, 848, 849, 851], "fire": 81, "fuzzi": 81, "textbook": [81, 204, 241, 674], "temporali": 81, "ear": [81, 165, 169, 179, 848], "muscle_idx": [81, 552], "log_scal": [81, 552, 784], "blink_idx": 81, "heartbeat_idx": 81, "muscle_idx_auto": 81, "find_bads_muscl": [81, 552, 872], "426": [81, 215, 228, 236], "s001r01": 81, "529": [81, 228], "s002": [81, 203], "s002r01": 81, "dhani": [81, 241, 552], "dharmaprani": [81, 241, 552], "hoang": [81, 241, 552], "nguyen": [81, 241, 552], "trent": [81, 241, 552], "lewi": [81, 241, 552, 854], "delosangel": [81, 241, 552], "willoughbi": [81, 241, 552], "kenneth": [81, 143, 241, 429, 552], "pope": [81, 241, 552], "38th": [81, 241, 552], "annual": [81, 205, 241, 552, 856], "confer": [81, 143, 241, 429, 552, 856], "societi": [81, 189, 241, 351, 519, 552, 721, 724, 854], "embc": [81, 203, 241, 552], "828": [81, 194, 228, 241, 552], "orlando": [81, 241, 552], "fl": [81, 241, 552], "usa": [81, 197, 241, 552], "7590828": [81, 241, 552], "muscle_ica": [81, 83], "otp": [82, 83, 588], "flux": [82, 208, 261, 262, 263, 264, 473, 474, 549, 692, 694, 695, 696, 854], "jump": [82, 110, 143, 197, 208, 679, 680, 682, 683, 872], "bst_phantom_elekta": [82, 182], "phantom": [82, 164, 185, 186, 241, 258, 259, 261, 263, 264, 266, 299, 351, 356, 385, 425, 446, 448, 473, 484, 486, 516, 580, 755, 767, 779, 807, 848, 854, 872], "rid": [82, 227], "1522": [82, 168], "dipole_numb": 82, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [82, 182], "47000": [82, 182], "437999": [82, 182], "alongsid": [82, 144, 148, 154, 198, 203, 204, 206, 213, 790, 827, 838], "oversampled_temporal_project": [82, 862, 872], "lump": [82, 580], "compute_bia": 82, "sti201": [82, 182, 266], "make_sphere_model": [82, 123, 155, 182, 183, 184, 206, 509, 854, 862, 872], "r0": [82, 123, 155, 182, 183, 184, 516], "head_radiu": [82, 123, 155, 182, 183, 184, 516, 872], "036": [82, 139, 148, 168, 182, 220, 241, 652], "actual_po": [82, 182, 184], "get_phantom_dipol": [82, 182, 385, 862, 872], "1fmm": 82, "worst": [82, 119, 351, 356, 648, 650, 651, 872], "bias_clean": 82, "9mm": 82, "2mm": [82, 854], "4mm": 82, "samu": [82, 161, 208, 241, 563, 580, 588, 657, 851, 872], "taulu": [82, 161, 208, 241, 426, 563, 580, 588, 657, 851, 872], "1013": [82, 168, 241, 588], "2017": [82, 133, 150, 203, 241, 388, 552, 588, 652, 657], "2734641": [82, 241, 588], "auto_examples_preprocess": 83, "virtual_evok": [83, 85], "xdawn_denois": [83, 86], "shift_evok": [83, 84], "hut": 84, "2332": [84, 168, 546], "ax3": [84, 88, 97, 182, 193], "magnomet": 85, "virt_evok": 85, "as_typ": [85, 261, 262, 263, 264, 872], "plot_epochs_imag": [86, 115, 552, 782, 784, 862, 872], "signal_cov": [86, 553], "xd": 86, "1388": 86, "41640": 86, "epochs_denois": 86, "brief": [88, 93, 165, 197, 215, 223, 831], "simplest": [88, 93, 167, 194, 223, 854], "kostiantyn": [88, 92, 93, 241, 652, 872], "maksymenko": [88, 92, 93, 241, 652, 872], "functool": [88, 223, 268, 269, 272, 275, 276, 277, 831], "partial": [88, 148, 150, 165, 199, 212, 213, 223, 241, 261, 262, 268, 269, 272, 275, 276, 277, 315, 582, 721, 724, 739, 763, 804, 808, 848, 860, 872], "region_localization_error": [88, 862], "f1_score": [88, 862], "precision_scor": [88, 862], "recall_scor": [88, 862], "cosine_scor": [88, 862], "peak_position_error": [88, 862], "spatial_deviation_error": [88, 862], "determinist": [88, 203, 872], "middl": [88, 93, 110, 133, 159, 165, 200, 204, 218, 259, 266, 268, 269, 272, 275, 276, 277, 441, 758, 767, 797, 802, 803, 831, 854, 872], "frontal": [88, 93, 165, 197, 203, 205, 212, 220, 302, 627, 739], "selected_label": [88, 93], "term": [88, 101, 124, 133, 165, 167, 193, 200, 204, 223, 227, 233, 238, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 327, 338, 373, 374, 375, 383, 473, 474, 527, 539, 561, 652, 692, 695, 707, 715, 827, 831, 848, 853, 854, 855, 860, 872], "label_region": 88, "select_sourc": [88, 93, 862, 872], "1915": 88, "One": [88, 94, 95, 98, 140, 142, 148, 149, 150, 154, 156, 165, 170, 177, 190, 200, 202, 203, 212, 223, 241, 261, 262, 263, 264, 271, 309, 311, 432, 438, 473, 474, 552, 674, 681, 757, 769, 770, 786, 792, 831, 847, 854, 856, 857, 872], "label_dipol": 88, "source_time_seri": [88, 92, 93], "sin": [88, 90, 91, 92, 93, 112, 200, 218, 219, 220, 338, 589, 658], "n_event": [88, 93, 256, 261, 262, 266, 271, 280, 360, 433, 434, 446, 473, 474, 490, 513, 547, 555, 574, 594, 604, 606, 607, 642, 678, 695, 769, 772, 817, 827], "sourcesimul": [88, 92, 93, 657, 862, 872], "source_simulator_region": 88, "add_data": [88, 92, 93, 114, 268, 269, 272, 275, 276, 277, 642, 739, 797, 802], "source_simulator_dipol": 88, "gaussian": [88, 92, 112, 119, 151, 160, 161, 200, 203, 219, 223, 261, 262, 263, 264, 468, 578, 646, 708, 718, 721, 722, 724, 770, 779, 800, 847, 851, 854], "raw_region": 88, "simulate_raw": [88, 91, 92, 93, 220, 644, 645, 656, 658, 659, 862, 872], "make_ad_hoc_cov": [88, 91, 93, 220, 258, 295, 862, 872], "add_nois": [88, 91, 92, 93, 220, 644, 645, 657, 862, 872], "iir_filt": [88, 90, 91, 93, 220, 646, 656], "raw_dipol": 88, "cos2": [88, 91, 92, 93, 220, 643, 644, 645, 657], "498": [88, 194, 223, 228], "evoked_region": 88, "evoked_dipol": 88, "stc_true_region": 88, "get_stc": [88, 92, 642], "start_sampl": [88, 212, 642], "stop_sampl": [88, 212, 642], "stc_true_dipol": 88, "stc_est_region": 88, "stc_est_dipol": 88, "0004": 88, "2931": 88, "34986e": 88, "scorer": [88, 411, 422, 872], "rle": [88, 652], "region_result": 88, "thx": 88, "per_sampl": [88, 647, 648, 649, 650, 651, 652, 653, 654], "ax4": 88, "col": [88, 110, 739, 872], "constrained_layout": [88, 708, 718], "super": [88, 238], "ticklabel_format": 88, "style": [88, 125, 133, 149, 150, 170, 187, 209, 253, 256, 258, 261, 262, 263, 264, 271, 276, 277, 294, 405, 411, 412, 464, 473, 474, 496, 551, 552, 692, 694, 695, 696, 739, 755, 756, 763, 770, 771, 774, 776, 777, 778, 786, 787, 792, 794, 799, 800, 801, 803, 872], "sci": [88, 209, 584], "scilimit": 88, "tweak": [88, 112, 125, 238, 829, 849, 851], "dipole_result": 88, "plot_stc_metr": [88, 89], "auto_examples_simul": 89, "simulated_raw_data_using_subject_anatomi": [89, 92], "simulate_raw_data": [89, 91], "889": [89, 91, 228, 274], "source_simul": [89, 92, 93], "simulate_evoked_data": [89, 90], "784": [89, 90, 207, 228], "fit_iir_model_raw": [90, 109, 862, 872], "templat": [90, 91, 123, 133, 134, 154, 156, 162, 163, 164, 169, 175, 228, 241, 265, 266, 274, 281, 299, 309, 313, 314, 315, 325, 326, 327, 331, 362, 369, 384, 430, 474, 488, 515, 566, 599, 622, 641, 755, 807, 812, 827, 845, 872], "read_proj": [90, 109, 129, 141, 190, 204, 261, 262, 263, 264, 271, 473, 474, 823, 862], "sample_audvis_ecg": [90, 109, 129, 141, 171, 204, 253], "randomst": [90, 91, 92, 112, 158, 193, 200, 220, 223, 505, 552, 578, 597, 644, 645, 646, 655, 656, 658, 679, 680, 681, 682, 683, 872], "randn": [90, 112, 158, 193, 200, 220, 223, 231, 232, 233], "high_resolut": [90, 798], "wronkiewicz": [91, 872], "wronk": 91, "add_ecg": [91, 92, 645, 657, 862, 872], "add_eog": [91, 92, 644, 657, 862, 872], "epoch_dur": [91, 560], "stagger": 91, "sinusoid": [91, 92, 112, 182, 183, 200, 207, 218, 220, 338, 444, 473, 474, 658, 827], "10hz": 91, "global": [91, 111, 119, 126, 141, 143, 148, 149, 154, 161, 165, 182, 205, 241, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 429, 737, 763, 770, 773, 776, 778, 779, 797, 802, 827, 831, 851, 872], "n_samp": [91, 212, 220, 872], "25e": 91, "1e9": [91, 183, 220], "plt_show": [91, 179, 223], "input": [91, 92, 112, 154, 171, 187, 193, 194, 200, 205, 208, 212, 223, 227, 228, 233, 253, 261, 262, 263, 264, 267, 268, 269, 272, 275, 276, 277, 280, 311, 327, 352, 353, 354, 358, 405, 406, 408, 409, 411, 412, 413, 415, 417, 422, 429, 434, 440, 462, 464, 465, 470, 473, 474, 496, 498, 552, 553, 561, 562, 564, 565, 568, 569, 571, 572, 593, 607, 658, 669, 671, 678, 679, 680, 682, 683, 690, 692, 704, 710, 711, 739, 740, 742, 743, 755, 763, 770, 774, 778, 786, 797, 800, 802, 812, 847, 853, 854, 857, 872], "millimet": [91, 92, 155, 159, 181, 332, 336, 448, 463, 489, 505, 604, 854, 872], "calc": 91, "orphan": 91, "ivana": [92, 872], "kojcic": [92, 872], "deslauri": [92, 93, 872], "gauthier": [92, 93, 872], "sam": [92, 93, 872], "doesn": [92, 139, 155, 169, 170, 203, 205, 206, 208, 212, 225, 228, 238, 373, 374, 375, 376, 378, 379, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 541, 552, 555, 569, 573, 580, 600, 639, 693, 695, 712, 782, 784, 831, 839, 847, 851, 872], "fname_info": 92, "g_temp_sup": 92, "g_t_transv": 92, "s_calcarin": 92, "vice": [92, 132, 159, 200, 272, 854], "versa": [92, 132, 159, 200, 272, 854], "moreov": [92, 136, 204, 205, 223], "contralater": [92, 150, 206], "ipsilater": [92, 150, 175], "activation_list": 92, "region_nam": 92, "latenc": [92, 142, 143, 144, 148, 228, 241, 263, 264, 268, 269, 272, 275, 276, 277, 429, 679, 680, 682, 683, 774, 872], "sigma": [92, 115, 126, 136, 141, 194, 223, 261, 262, 516, 685, 686, 708, 718, 729, 770, 800, 854, 857], "gf": 92, "rand": [92, 220], "100m": 92, "30m": 92, "15m": 92, "region_id": 92, "events_tmp": 92, "label_tmp": 92, "amplitude_tmp": 92, "latency_tmp": 92, "wf_tmp": 92, "evoked_aud_left": 92, "evoked_vis_right": 92, "mere": [92, 171, 203, 610, 853], "stc_aud": 92, "stc_vi": 92, "stc_diff": 92, "49264": [92, 177], "64e": [92, 177], "3254294": 92, "92023613": 92, "51105546": 92, "christoph": [92, 113, 150, 154, 193, 241, 351, 411, 676, 872], "destrieux": [92, 154, 241], "ander": [92, 154, 177, 241, 519, 854], "dale": [92, 154, 177, 241, 519, 854], "halgren": [92, 154, 241, 519], "sulci": [92, 154, 219, 241], "nomenclatur": [92, 154, 212, 241], "734": [92, 94, 207, 241, 708, 718, 719, 722], "sine": [93, 218, 253, 707, 715], "everi": [93, 101, 111, 125, 133, 140, 143, 150, 167, 171, 174, 194, 201, 202, 203, 215, 238, 256, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 345, 454, 462, 470, 471, 473, 474, 505, 552, 554, 568, 569, 578, 597, 644, 645, 646, 655, 656, 658, 679, 680, 681, 682, 683, 692, 695, 831, 851, 852], "significantli": [94, 95, 98, 223, 226, 231, 232, 238, 268, 269, 272, 275, 276, 277, 679, 680, 682, 683, 853], "permutation_cluster_test": [94, 223, 226, 227, 683, 862, 872], "1332": [94, 95, 144, 165, 168, 225, 226, 227], "epochs1": [94, 231, 428], "condition1": [94, 231], "epochs2": [94, 231, 428], "condition2": [94, 231], "t_ob": [94, 224, 225, 231, 679, 681, 682, 872], "cluster_p_valu": [94, 225, 226, 227, 231, 232, 233], "n_permut": [94, 98, 110, 223, 224, 225, 226, 227, 228, 232, 233, 679, 680, 681, 682, 683], "tail": [94, 110, 150, 223, 225, 226, 227, 228, 231, 238, 259, 679, 680, 681, 682, 683, 767, 798, 872], "out_typ": [94, 110, 223, 225, 226, 227, 679, 680, 682, 683, 872], "stat_fun": [94, 110, 111, 223, 224, 225, 226, 227, 228, 231, 232, 233, 671, 679, 680, 682, 683], "000227": 94, "167093": 94, "2459": 94, "2694": 94, "2770": 94, "424": [94, 177, 223, 228], "3144": 94, "3458": 94, "3664": 94, "865": [94, 194, 213, 217, 228], "3694": 94, "3793": 94, "erf": [94, 115, 126, 190, 197, 200, 228, 241, 552, 782, 784, 838, 872], "i_c": 94, "915": [94, 100, 228], "cluster_stats_evok": [94, 100], "discoveri": [95, 227, 241, 676], "bonferroni_correct": [95, 223, 862, 872], "fdr_correct": [95, 99, 223, 227, 862], "pval": [95, 227, 670, 676, 679, 680, 682, 683], "ttest_1samp": [95, 223, 685], "n_test": [95, 681], "threshold_uncorrect": 95, "ppf": [95, 209, 223, 225, 228, 231, 232, 582, 679, 680, 682, 683], "reject_bonferroni": 95, "pval_bonferroni": 95, "threshold_bonferroni": 95, "reject_fdr": 95, "pval_fdr": 95, "indep": [95, 676], "threshold_fdr": 95, "xmin": 95, "xmax": 95, "hline": [95, 140, 263, 264, 773], "uncorrect": [95, 223], "bonferroni": [95, 444, 473, 474, 670, 681, 872], "087": [95, 100, 179], "fdr_stats_evok": [95, 100], "generalis": 97, "tradit": [97, 142, 206, 719, 720, 722, 723, 763], "predictor": [97, 140, 223, 551, 595, 678], "inapplic": 97, "rerp": [97, 241, 678], "smith": [97, 124, 223, 224, 241, 383, 678, 679, 680, 682, 683], "kuta": [97, 241, 678], "jona": [97, 99, 126, 194, 228, 241, 679, 680, 682, 683, 872], "sassenhagen": [97, 99, 126, 194, 228, 241, 679, 680, 682, 683, 872], "linear_regression_raw": [97, 100, 862, 872], "rerf": 97, "param": [97, 111, 405, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 541, 553, 619, 872], "722": [97, 100, 101, 193, 194, 241, 708, 718, 719, 722], "permutation_t_test": [98, 223, 862], "temporal_mask": 98, "logical_and": [98, 112], "50000": 98, "p_valu": [98, 223, 228, 444, 473, 474, 681], "significant_sensor": 98, "significant_sensors_nam": 98, "49999": 98, "0243": [98, 141, 168], "1323": [98, 168], "1333": [98, 168, 231, 233], "1613": [98, 168], "1643": [98, 168], "2423": [98, 168], "2522": [98, 168], "2622": [98, 168], "2632": [98, 168], "2642": [98, 168], "2643": [98, 168], "stats_pick": 98, "cbar_fmt": [98, 107, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 771, 778, 782, 791, 794, 799, 872], "sensor_permutation_test": [98, 100], "psycholinguist": [99, 223], "st\u00e9phane": [99, 224, 241, 389, 848], "dufau": [99, 224, 241, 389, 848], "grainger": [99, 224, 241, 389, 848], "katherin": [99, 224, 241, 389, 721, 724, 848], "midglei": [99, 224, 241, 389, 848], "phillip": [99, 140, 224, 241, 384, 389, 848, 872], "holcomb": [99, 224, 241, 389, 848], "pictur": [99, 224, 241, 271, 389, 848], "snapshot": [99, 171, 224, 241, 389, 809, 831, 848, 872], "megastudi": [99, 224, 241, 389, 848], "psycholog": [99, 224, 241, 389, 848], "1887": [99, 224, 241, 389, 848], "1897": [99, 224, 241, 389, 848], "0956797615603934": [99, 224, 241, 389, 848], "matt": [99, 241, 872], "davi": [99, 241], "ford": [99, 241], "friedmann": [99, 241], "pulverm\u00fcl": [99, 241], "william": [99, 193, 241, 411], "marslen": [99, 241], "wilson": [99, 241], "1383": [99, 241], "1400": [99, 241], "2006": [99, 177, 193, 208, 241, 261, 262, 530, 580, 649, 654, 721, 724], "2005": [99, 161, 208, 241, 426, 530, 563, 580, 649, 652, 654, 851], "048": [99, 139, 141, 148, 168, 182, 215, 220, 224, 241, 706, 708, 718, 722], "tal": [99, 118, 124, 241, 481, 488, 872], "linzen": [99, 118, 872], "pd": [99, 110, 135, 142, 150, 189, 190, 208], "kiloword": [99, 142, 212, 224, 862], "kword_metadata": [99, 142, 224], "epo": [99, 139, 142, 171, 224, 253, 261, 262, 603, 872], "read_epoch": [99, 139, 142, 224, 851, 854, 862, 872], "visualcomplex": [99, 142], "film": [99, 142, 224, 860], "783710": [99, 142], "cent": [99, 142], "141553": [99, 142], "shot": [99, 142], "600033": [99, 142], "cold": [99, 142], "657457": [99, 142], "945661": [99, 142], "characterist": [99, 150, 200, 201, 241, 261, 262, 398, 428, 440, 571, 827], "concret": [99, 142, 143], "imagin": [99, 110, 204], "df": [99, 110, 139, 144, 190, 212, 223, 224, 225, 231, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 535, 679, 682, 692, 694, 695, 696], "cut": [99, 110, 111, 179, 204, 238, 253, 261, 262, 263, 264, 407, 416, 441, 443, 473, 474, 564, 565, 573, 576, 580, 584, 839, 857, 872], "split_legend": [99, 228, 763], "percentil": [99, 133, 134, 135, 145, 261, 262, 268, 269, 271, 272, 275, 276, 277, 473, 474, 728, 758, 763, 769, 792, 797, 802, 803, 872], "gfp": [99, 111, 126, 141, 143, 149, 161, 165, 190, 228, 261, 262, 263, 264, 527, 763, 770, 773, 779, 796, 827, 851, 872], "7424": 99, "plot_evoked_imag": [99, 862, 872], "null": [99, 280, 431, 674, 872], "hypothesi": [99, 171, 224, 670, 674, 676, 681, 860], "colour": [99, 175, 872], "palett": [99, 110, 144], "dark": [99, 133, 171, 261, 262, 473, 474, 552, 739, 769, 786, 792, 872], "reject_h0": 99, "fdr_pval": 99, "plot_imag": [99, 126, 141, 142, 145, 149, 165, 197, 199, 209, 224, 261, 262, 263, 264, 872], "193": [99, 100, 168, 207, 223, 227, 228, 872], "sensor_regress": [99, 100], "auto_examples_stat": 100, "csd_fourier": [101, 693, 697, 698, 699, 701, 702, 862, 872], "csd_multitap": [101, 693, 697, 698, 699, 700, 701, 710, 862, 872], "core": [101, 143, 165, 167, 170, 188, 218, 241, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 408, 415, 418, 421, 422, 448, 461, 463, 473, 474, 511, 514, 515, 525, 526, 535, 536, 557, 564, 565, 580, 632, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 691, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 771, 774, 793, 829, 830, 831, 838, 853, 872], "clariti": [101, 858], "adapt": [101, 111, 165, 189, 206, 220, 223, 241, 261, 262, 263, 264, 294, 295, 410, 444, 445, 473, 474, 525, 526, 552, 580, 694, 696, 699, 702, 708, 710, 718, 735, 771, 831, 837, 848, 853, 872], "csd_fft": 101, "csd_mt": 101, "convolv": [101, 109, 200, 223, 238, 411, 418], "600hz": 101, "enough": [101, 157, 179, 201, 202, 203, 205, 208, 212, 223, 238, 258, 261, 262, 263, 264, 270, 302, 303, 309, 405, 412, 424, 473, 474, 551, 552, 566, 687, 692, 694, 695, 696, 748, 756, 763, 769, 771, 773, 775, 778, 779, 782, 786, 789, 791, 792, 793, 794, 795, 799, 801, 835, 853, 854, 872], "10th": 101, "greatli": 101, "minim": [101, 140, 168, 200, 218, 238, 261, 262, 357, 413, 428, 562, 678, 720, 723, 739, 829, 851, 854], "csd_wav": 101, "crossspectraldens": [101, 287, 294, 314, 430, 697, 698, 699, 700, 701, 702, 703, 709, 712, 765, 862, 872], "trick": [101, 198, 238, 241, 681, 835, 872], "comma": [101, 253, 831, 872], "plot_dict": [101, 237], "compute_csd": [101, 104], "taper": [102, 112, 261, 262, 263, 264, 410, 418, 444, 473, 474, 525, 526, 694, 696, 699, 702, 704, 708, 710, 718, 720, 722, 723, 771, 872], "prolat": [102, 236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 704, 710], "spheroid": [102, 236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 704, 710], "sequenc": [102, 136, 241, 253, 261, 262, 263, 264, 473, 474, 669, 694, 696, 704, 739, 771, 848, 854], "compute_source_psd_epoch": [102, 104, 525, 862, 872], "n_epochs_us": 102, "psd_avg": 102, "set_xlim": [102, 111, 150, 204], "415": [104, 136, 138, 223, 228], "auto_examples_time_frequ": 104, "source_power_spectrum_opm": [104, 107], "176": [104, 107, 141, 168, 170, 223, 227, 228, 241, 552], "time_frequency_erd": [104, 110, 872], "741": [104, 110, 194, 228], "time_frequency_global_field_pow": [104, 111], "476": [104, 111, 228, 241, 405], "794": [104, 143, 207, 228], "time_frequency_simul": [104, 112], "606": [104, 112, 143, 228], "source_label_time_frequ": [104, 105], "source_space_time_frequ": [104, 108], "source_power_spectrum": [104, 106], "temporal_whiten": [104, 109], "former": [105, 141, 227, 351, 552, 853, 872], "latter": [105, 141, 150, 167, 405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 553, 854], "source_induced_pow": [105, 862, 872], "epochs_induc": 105, "subtract_evok": [105, 111, 202, 261, 262, 595, 872], "this_epoch": 105, "inter": [105, 133, 241, 258, 261, 262, 263, 264, 270, 279, 405, 412, 429, 473, 474, 551, 552, 566, 644, 692, 694, 696, 719, 720, 722, 723, 756, 771, 778, 782, 791, 794, 799, 801], "itc": [105, 719, 720, 721, 722, 723, 724], "baseline_mod": [105, 535, 536], "compute_source_psd": [106, 107, 526, 862, 872], "100hz": 106, "2048": [106, 109, 112, 131, 261, 262, 263, 264, 404, 473, 474, 525, 793], "psd_dspm": 106, "neuromag": [107, 155, 157, 159, 165, 167, 182, 184, 198, 205, 208, 212, 213, 214, 253, 254, 259, 261, 262, 263, 264, 266, 271, 317, 425, 446, 473, 474, 484, 490, 496, 502, 580, 602, 627, 694, 696, 769, 772, 777, 792, 827, 843, 848, 854, 857, 872], "welch": [107, 220, 236, 237, 238, 241, 261, 262, 263, 264, 473, 474, 694, 696, 711, 793, 872], "next_fast_len": 107, "src_fname": [107, 231, 232, 233], "vv_fname": 107, "squid_resting_st": 107, "vv_erm_fnam": 107, "squid_empty_room": 107, "vv_trans_fnam": 107, "opm_fnam": 107, "opm_resting_state_raw": 107, "opm_erm_fnam": 107, "opm_empty_room_raw": 107, "opm_tran": 107, "opm_coil_def_fnam": 107, "vv": 107, "simplifi": [107, 178, 200, 241, 253, 261, 262, 263, 264, 473, 474, 851, 852, 872], "housekeep": 107, "raw_erm": [107, 127, 183, 190, 847], "new_sfreq": 107, "nyquist": [107, 200, 201, 872], "meg2233": 107, "meg1842": 107, "hold": [107, 190, 220, 223, 261, 262, 263, 264, 426, 473, 474, 571, 580, 690, 773, 793, 795, 827, 854, 860], "61999": 107, "60999": 107, "dist": [107, 155, 156, 209, 219, 253, 267, 274, 279, 362, 424, 457, 586, 662, 663, 664, 666, 667, 857], "make_bem_solut": [107, 157, 190, 362, 424, 455, 509, 515, 516, 599, 600, 629, 631, 820, 847, 854, 862, 872], "169022": 107, "169992": 107, "202": [107, 168, 224, 228, 857, 872], "2052": 107, "995623": 107, "029776": 107, "088592": 107, "062622": 107, "916188": 107, "395825": 107, "069381": 107, "399641": 107, "914042": 107, "993107": 107, "074371": 107, "090590": 107, "079171": 107, "995577": 107, "050589": 107, "086427": 107, "057412": 107, "994603": 107, "691": [107, 193, 228], "334": [107, 110, 168], "percentag": [107, 203, 261, 262, 554, 648, 649, 650, 651, 652, 654, 728, 768, 872], "freq_band": [107, 136], "topo": [107, 113, 141, 149, 209, 237, 261, 262, 742, 752, 763, 800, 860, 872], "stc_psd": [107, 525], "sensor_psd": [107, 525], "return_sensor": [107, 525, 526], "topo_norm": 107, "keepdim": [107, 136], "stc_norm": 107, "3660": 107, "1969": 107, "014611": 107, "18765e": 107, "291": [107, 168, 227, 228, 230], "34378": 107, "07671e": 107, "3720": 107, "1698": 107, "007069": 107, "0841e": 107, "46031": 107, "26253e": 107, "coverag": 107, "worthwhil": [107, 150, 203], "plot_band": 107, "inferno": [107, 135, 223], "cau": 107, "show_trac": [107, 125, 134, 268, 269, 272, 275, 276, 277, 739, 797, 802, 872], "fig_alpha": 107, "brain_alpha": [107, 269, 275, 277, 802], "7045685": 107, "96394224": 107, "07428314": 107, "profil": [107, 170, 691, 829, 831], "beneath": 107, "fig_beta": 107, "brain_beta": 107, "18935281": 107, "33488802": 107, "88328023": 107, "fig_beta_opm": 107, "brain_beta_opm": 107, "28867831": 107, "68102302": 107, "87342874": 107, "source_band_induced_pow": [108, 862, 872], "use_fft": [108, 110, 237, 418, 535, 536, 698, 701, 717, 719, 720, 722, 723], "induced_power_": 108, "proj_fnam": [109, 190], "20000": 109, "innov": 109, "d_": 109, "lfilter": 109, "regener": [109, 261, 262, 872], "r_": [109, 649, 654, 854], "dummi": [109, 123, 218, 233], "nfft": [109, 220], "written": [110, 170, 171, 174, 207, 214, 257, 300, 304, 437, 438, 472, 473, 474, 614, 620, 817, 822, 825, 838, 847, 860, 872], "desynchron": [110, 237, 241, 848], "conceptu": [110, 150, 200, 203, 241], "ersp": [110, 872], "perturb": 110, "goal": [110, 133, 136, 831, 849, 853, 860], "c3": [110, 126, 143, 158, 495], "35hz": 110, "customari": [110, 854], "klotzsch": [110, 872], "cb": 110, "mpg": 110, "twoslopenorm": 110, "seaborn": [110, 144, 208], "sn": [110, 144, 208], "tfr_multitap": [110, 112, 237, 418, 719, 720, 721, 722, 724, 862, 872], "permutation_cluster_1samp_test": [110, 223, 225, 682, 862, 872], "pcluster_test": 110, "strip": [110, 241], "961": [110, 159, 228], "suitabl": [110, 145, 158, 160, 225, 227, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 303, 350, 369, 404, 429, 460, 473, 474, 495, 509, 679, 692, 694, 695, 696, 847, 848, 854, 860], "cnorm": [110, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 872], "asymmetr": [110, 754], "thing": [110, 140, 143, 144, 150, 159, 170, 171, 180, 187, 198, 200, 212, 220, 228, 231, 233, 309, 473, 474, 831, 851, 872], "rdbu": 110, "equal": [110, 139, 146, 147, 148, 150, 164, 167, 171, 174, 175, 179, 197, 200, 214, 215, 231, 233, 256, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 283, 294, 295, 314, 350, 351, 355, 356, 365, 366, 367, 405, 412, 418, 428, 430, 448, 449, 462, 468, 470, 471, 473, 474, 490, 512, 519, 530, 535, 536, 551, 552, 564, 569, 578, 585, 586, 611, 648, 673, 674, 679, 680, 682, 683, 684, 686, 687, 692, 694, 695, 696, 711, 756, 757, 763, 767, 770, 771, 772, 773, 775, 778, 779, 794, 795, 799, 801, 827, 853, 854, 858, 872], "promin": [110, 142, 197, 209, 238, 352, 353, 354], "extrem": [110, 141, 238, 263, 264, 294, 295, 318, 351, 355, 356, 365, 366, 367, 405, 412, 413, 448, 449, 468, 470, 471, 530, 679, 680, 682, 683, 779], "vcenter": 110, "step_down_p": [110, 679, 680, 682, 683], "buffer_s": [110, 223, 227, 228, 231, 232, 233, 522, 679, 680, 682, 683], "tfr_ev": 110, "gridspec_kw": [110, 125, 175, 209], "width_ratio": [110, 175, 209], "stack": [110, 140, 220, 231, 639, 734, 736, 835, 836, 839], "mask_styl": [110, 263, 264, 692, 775], "set_yscal": 110, "724718": 110, "552076": 110, "183231": 110, "323": [110, 168, 207, 208, 228], "344": [110, 143, 168, 223], "528367": 110, "706422": 110, "581589": 110, "346448": 110, "282": [110, 168, 207, 223], "307": [110, 111, 168, 228], "338": [110, 168, 228], "342": [110, 111, 119, 161, 168, 194, 207, 241, 263, 264, 351, 779, 851], "713872": 110, "754759": 110, "360704": 110, "347": [110, 168, 193, 223, 228, 872], "992503": 110, "416450": 110, "326": [110, 119, 128, 168, 207, 223, 228], "336": [110, 168, 170, 223, 228, 872], "349": [110, 168, 193, 207, 241, 854], "044340": 110, "070444": 110, "337": [110, 168, 228], "epochstfr": [110, 112, 289, 523, 692, 703, 714, 722, 723, 725, 862, 872], "datafram": [110, 139, 146, 147, 148, 150, 164, 189, 190, 208, 212, 224, 236, 255, 256, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 429, 473, 474, 607, 678, 692, 694, 695, 696, 854, 872], "to_data_fram": [110, 135, 139, 144, 148, 212, 224, 255, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 694, 695, 696, 854, 872], "0000": [110, 831], "473093": 110, "474571": 110, "764021": 110, "9875": 110, "491659": 110, "480088": 110, "762445": 110, "9750": [110, 872], "500872": 110, "469376": 110, "749421": 110, "9625": 110, "500605": 110, "449373": 110, "728686": 110, "9500": 110, "515911": 110, "443439": 110, "719536": 110, "lineplot": [110, 144], "confid": [110, 111, 141, 144, 150, 165, 175, 205, 259, 266, 552, 671, 694, 696, 763, 784, 852, 872], "long_format": [110, 144, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 694, 695, 696, 872], "freq_bound": 110, "delta": [110, 136, 200, 261, 262, 263, 264, 470, 473, 474, 535, 694, 696, 771], "theta": [110, 111, 136, 261, 262, 263, 264, 473, 474, 694, 696, 771], "freq_bands_of_interest": 110, "remove_unused_categori": 110, "reorder_categori": 110, "facetgrid": 110, "margin_titl": 110, "n_boot": 110, "axline_kw": 110, "dash": [110, 139, 149, 171, 201, 204, 208, 209, 215, 258, 261, 262, 263, 264, 473, 474, 694, 696, 763, 764, 790, 793, 872], "set_axis_label": 110, "col_templ": 110, "col_nam": [110, 266, 857], "row_templ": 110, "row_nam": [110, 265, 857], "add_legend": [110, 739], "df_mean": 110, "queri": [110, 139, 144, 148, 164, 216, 224, 236, 256, 261, 262, 432, 695], "groupbi": [110, 144, 150, 224], "reset_index": [110, 144], "col_ord": 110, "violinplot": [110, 144], "deep": [110, 136, 144, 157, 180, 200, 241, 261, 262, 263, 264, 285, 405, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 473, 474, 549, 550, 553, 692, 694, 695, 696, 736, 739, 755, 854, 872], "hue_ord": 110, "gert": [110, 241], "pfurtschel": [110, 241], "fernando": [110, 241, 847], "lope": [110, 241, 847], "da": [110, 241, 847], "silva": [110, 241, 847], "principl": [110, 201, 223, 228, 241, 849, 854], "1842": [110, 168, 241], "1857": [110, 241], "00141": [110, 241], "bernhard": [110, 241, 468], "graimann": [110, 241], "jane": [110, 241], "huggin": [110, 241], "simon": [110, 241, 872], "levin": [110, 241], "ecog": [110, 113, 133, 134, 137, 138, 164, 168, 212, 218, 223, 241, 261, 262, 263, 264, 266, 272, 274, 308, 309, 318, 367, 369, 378, 434, 438, 473, 474, 488, 549, 550, 577, 622, 637, 687, 692, 694, 695, 696, 739, 755, 795, 807, 809, 827, 828, 838, 854, 872], "00697": [110, 241], "exposur": [110, 203, 241, 831], "tone": [110, 165, 241, 848], "1993": [110, 177, 241], "90110": [110, 241], "rectifi": 111, "magniud": 111, "uncertainti": [111, 236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 704, 710, 838], "importantli": [111, 112, 199, 847], "hari": [111, 112, 124, 177, 241, 872], "neuromagnet": [111, 203, 241, 552], "1997": [111, 179, 204, 205, 241, 294, 295, 645, 708, 718, 719, 722, 854], "s0166": [111, 241], "2236": [111, 241], "10065": [111, 241], "328": [111, 119, 161, 168, 176, 186, 207, 241, 263, 264, 351, 779, 851], "bradlei": [111, 241], "efron": [111, 241], "trevor": [111, 241], "hasti": [111, 241], "institut": [111, 241, 721, 724], "mathemat": [111, 150, 175, 198, 200, 208, 223, 241, 500, 519, 679, 721, 724, 831, 847, 854, 872], "monograph": [111, 241], "cambridg": [111, 150, 241, 351], "univers": [111, 241, 252, 351, 444, 848, 853, 859, 872], "york": [111, 200, 241, 252, 444, 859, 872], "isbn": [111, 150, 200, 220, 241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 294, 295, 351, 473, 474, 674, 692, 695], "14989": [111, 241], "web": [111, 145, 203, 238, 241, 271, 540, 747, 860, 872], "stanford": [111, 241], "casi": [111, 241], "bootstrap_confidence_interv": [111, 862], "iter_freq": 111, "frequency_map": 111, "job": [111, 201, 203, 253, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 407, 408, 410, 411, 415, 416, 417, 418, 421, 422, 443, 444, 445, 448, 461, 463, 473, 474, 511, 514, 515, 525, 526, 535, 536, 557, 564, 565, 632, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 724, 771, 774, 793, 872], "skip": [111, 133, 143, 148, 164, 165, 169, 171, 189, 200, 238, 253, 339, 493, 525, 568, 630, 831, 847, 857, 872], "option": [111, 123, 133, 134, 139, 141, 149, 150, 155, 160, 161, 164, 165, 166, 167, 170, 171, 172, 177, 187, 194, 197, 200, 203, 208, 209, 212, 214, 215, 218, 223, 224, 227, 233, 236, 238, 258, 259, 261, 262, 263, 264, 268, 269, 270, 271, 272, 274, 275, 276, 277, 281, 282, 300, 306, 309, 351, 361, 365, 368, 381, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 426, 436, 437, 438, 443, 444, 445, 447, 449, 468, 470, 471, 473, 474, 486, 488, 511, 515, 519, 520, 521, 522, 523, 525, 526, 530, 532, 534, 535, 536, 544, 549, 551, 552, 553, 562, 563, 564, 565, 566, 571, 580, 600, 610, 612, 622, 657, 662, 666, 677, 679, 680, 682, 683, 686, 687, 692, 694, 695, 696, 704, 729, 739, 755, 756, 757, 763, 767, 769, 771, 773, 775, 778, 779, 782, 786, 789, 791, 792, 793, 794, 795, 797, 799, 801, 802, 803, 805, 837, 839, 853, 854, 857, 869, 872], "apply_hilbert": [111, 112, 113, 135, 166, 261, 262, 263, 264, 473, 474, 872], "269399": 111, "897": [111, 228], "077": 111, "1202": 111, "emerg": 111, "bootstrap": [111, 141, 171, 671, 694, 696, 763, 872], "domin": [111, 202, 208, 238, 268, 269, 272, 275, 276, 277, 439, 552], "helper": [111, 133, 223, 309, 327, 861], "winter_r": 111, "freq_nam": 111, "ci_low": 111, "ci_up": 111, "dhz": 111, "xy": [111, 113, 135, 180, 318, 425, 740, 809, 854], "horizontalalign": [111, 133, 200, 204], "xycoord": 111, "795": [111, 143, 194, 228], "trade": [112, 200, 720, 723], "bharadwaj": [112, 124, 241, 872], "berkelei": [112, 113, 252, 859], "tfr_stockwel": [112, 237, 719, 720, 721, 722, 723, 862, 872], "tfr_array_morlet": [112, 720, 721, 722, 723, 724, 862, 872], "centers_to_edg": [112, 862, 872], "sim0001": 112, "sim0002": 112, "1024": [112, 133, 679, 680, 682, 683], "burst": [112, 182, 197, 848], "ramp": [112, 200], "logical_or": 112, "on_tim": 112, "han": [112, 574, 644, 645, 719, 720, 722, 723, 872], "sin50hz": 112, "4000": [112, 165, 205, 253, 495], "41160": 112, "41159": 112, "time_bandwidth": [112, 418, 720, 723], "sim": [112, 527, 854], "nmore": 112, "1025": [112, 143], "balanc": [112, 199, 200, 223, 227, 648, 673, 872], "strictli": [112, 150, 160, 167, 168, 177, 200, 202, 287, 739, 872], "regard": [112, 206, 220, 228, 237, 854, 872], "recoverd": 112, "lossless": 112, "disregard": 112, "numer": [112, 155, 161, 200, 203, 212, 223, 228, 267, 274, 350, 372, 440, 465, 473, 474, 552, 669, 679, 680, 682, 683, 705, 851, 853, 854, 860, 872], "all_n_cycl": 112, "isinst": [112, 139, 256, 472], "exagger": 112, "wise": [112, 161, 197, 201, 263, 264, 414, 681, 827, 872], "epochs_hilb": 112, "tfr_data": 112, "413": [112, 177, 207, 228, 241], "3301": 112, "255": [112, 125, 159, 168, 194, 207, 223, 227, 235, 238, 268, 269, 272, 275, 276, 277, 739, 758, 797, 802, 803], "avgpow": 112, "avg_pow": [112, 719, 720], "mesh": [112, 155, 159, 160, 174, 267, 269, 275, 277, 305, 306, 357, 404, 460, 461, 623, 739, 798, 802, 825, 837, 872], "electrocorticographi": [113, 133, 135, 241, 261, 262, 263, 264, 473, 474, 549, 550, 692, 694, 695, 696, 848, 854, 872], "scatterplot": 113, "pyvista": [113, 133, 170, 180, 259, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 691, 739, 741, 749, 753, 755, 767, 795, 797, 798, 802, 804, 809, 829, 830, 849, 860, 872], "clickableimag": [113, 862], "own": [113, 125, 150, 176, 182, 205, 215, 225, 228, 261, 262, 263, 264, 268, 271, 272, 276, 318, 471, 473, 474, 580, 739, 770, 797, 831, 834, 835, 851, 853, 857], "dirnam": [113, 123, 158, 170], "pathlib": [113, 121, 143, 156, 169, 171, 271, 373, 374, 375, 378, 379, 381, 386, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 515, 608, 827, 872], "noqa": [113, 115, 169, 204, 223], "f401": 113, "snapshot_brain_montag": [113, 135, 804, 862, 872], "misc_path": [113, 133, 134, 181], "ecog_data_fnam": 113, "sample_ecog_ieeg": [113, 133], "click": [113, 131, 133, 141, 149, 150, 155, 160, 180, 190, 198, 203, 214, 215, 237, 258, 261, 262, 263, 264, 270, 276, 277, 405, 412, 473, 474, 551, 552, 692, 694, 696, 740, 752, 760, 769, 770, 771, 773, 775, 777, 778, 782, 786, 791, 792, 793, 794, 795, 799, 800, 801, 803, 829, 831, 837, 849, 860, 872], "layout_path": 113, "__file__": [113, 121, 169, 170, 171], "layout_nam": 113, "custom_layout": 113, "lout": [113, 169, 310, 323, 324, 335, 872], "coreg": [113, 133, 134, 156, 157, 158, 159, 309, 464, 467, 755, 847, 854, 862, 872], "estimate_head_mri_t": [113, 133, 134, 862, 872], "sample_ecog": [113, 133], "apply_tran": [113, 133, 134, 155, 159, 181, 309, 872], "conjunct": [113, 223, 256, 261, 407, 860], "xy_pt": [113, 135], "beta_pow": 113, "fig2": [113, 150, 169], "coolwarm": 113, "cbar": [113, 125, 145, 194, 223, 758], "set_axis_off": [113, 135, 171], "bbox_inch": [113, 872], "tight": [113, 150, 160, 193, 263, 264, 715, 773, 775, 872], "mous": [113, 190, 214, 258, 259, 261, 262, 263, 264, 270, 405, 412, 464, 473, 474, 551, 552, 692, 694, 696, 740, 753, 755, 767, 769, 770, 771, 773, 774, 775, 778, 782, 791, 793, 794, 799, 849, 872], "imread": [113, 171], "plot_click": [113, 740], "to_layout": [113, 740], "got": [113, 143, 170, 198, 203, 220, 834, 872], "read_layout": [113, 169, 310, 862, 872], "3d_to_2d": [113, 128], "scalarmapp": 114, "low_contrast": [114, 124, 133, 134, 180, 189, 268, 269, 272, 275, 276, 277, 739, 797, 802], "rh_data": [114, 174, 272, 275], "rh_vertno": [114, 174, 272, 275, 655], "recon": [114, 134, 154, 159, 306, 363, 538, 812, 872], "brodmann": 114, "ba44": 114, "add_head": [114, 155, 189, 739, 872], "seghead": [114, 155, 156, 157, 160, 171, 175, 181, 182, 253, 259, 739, 755, 767], "read_tran": [114, 116, 155, 159, 177, 190, 274, 456, 657, 826, 862, 872], "add_sensor": [114, 133, 135, 189, 209, 739, 872], "role": [114, 164, 169, 176, 185, 186, 258, 259, 263, 265, 266, 272, 361, 518, 519, 530, 601, 610, 612, 625, 640, 739, 748, 755, 767, 807, 831, 853], "sample_audvis_set1": 114, "ylorrd": 114, "add_dipol": [114, 739, 872], "1e8": 114, "static": [114, 133, 179, 208, 212, 241, 253, 260, 383, 728, 729, 829, 857, 872], "add_ax": [114, 125, 145], "477": [114, 128, 223, 228], "embed": [115, 155, 171, 199, 200, 271, 831, 838, 872], "simplic": [115, 176, 194, 200, 223, 227, 851, 872], "instal": [115, 133, 134, 135, 145, 154, 160, 170, 180, 253, 261, 262, 263, 264, 279, 300, 304, 335, 380, 383, 404, 407, 411, 416, 443, 444, 445, 473, 474, 695, 831, 839, 851, 852, 855, 872], "order_func": 115, "spectral_embed": 115, "rbf_kernel": 115, "this_data": 115, "good_pick": 115, "bad_pick": 115, "plt_time": 115, "overlay_tim": [115, 126, 261, 262, 770, 872], "renaud": [115, 241], "keriven": [115, 241], "maureen": [115, 241], "clerc": [115, 241], "1051": [115, 207, 241], "1061": [115, 241], "2037139": [115, 241], "channel_epochs_imag": [115, 128], "135": [116, 123, 150, 157, 168, 189, 204, 205, 206, 207, 227, 241, 274, 854], "eeg_on_scalp": [116, 128], "upon": [117, 143, 156, 169, 171, 261, 262, 271, 411, 473, 474, 740, 756, 809, 831, 837, 853, 872], "hosaka": [117, 241, 756, 872], "flow": [117, 177, 241, 756, 872], "underneath": [117, 756, 872], "poor": [117, 197, 200, 209, 756, 872], "man": [117, 150, 171, 241, 756], "hidehiro": [117, 241, 756], "electrocardiologi": [117, 241, 756], "1976": [117, 241, 756], "s0022": [117, 241, 756], "0736": [117, 241, 756], "80041": [117, 241, 756], "sheraz": [117, 124, 127, 241, 567, 870, 872], "khan": [117, 124, 127, 241, 567, 870, 872], "khansheraz": 117, "plot_arrowmap": [117, 149, 862, 872], "evoked_mag": 117, "evoked_grad": 117, "topoplot": [117, 143, 169, 203, 238, 756, 759, 872], "max_time_idx": 117, "latitud": [117, 756], "longitud": [117, 159, 756], "radial": [117, 157, 525, 526, 536, 633, 756], "cartesian": [117, 174, 177, 756, 854, 857], "info_from": [117, 756, 872], "info_to": [117, 756], "raw_ctf": 117, "raw_ctf_info": 117, "618": [117, 128, 228, 241, 674], "evoked_arrowmap": [117, 128], "engeman": 118, "miko\u0142aj": [118, 859, 872], "magnuski": [118, 859, 872], "mmagnuski": [118, 872], "swp": [118, 252, 859], "pl": 118, "20m": 118, "regularli": [118, 165, 167], "multilin": [118, 872], "all_tim": 118, "rm": [118, 149, 150, 187, 220, 258, 261, 262, 263, 264, 272, 405, 412, 473, 474, 527, 551, 552, 692, 773, 777, 778, 782, 794, 801, 854, 872], "drawn": [118, 149, 215, 223, 258, 261, 262, 263, 264, 269, 270, 275, 277, 405, 412, 473, 474, 551, 552, 566, 644, 645, 692, 694, 696, 756, 757, 762, 763, 771, 772, 775, 777, 778, 782, 791, 793, 794, 795, 799, 801, 802, 872], "spectral_r": 118, "circl": [118, 133, 160, 169, 219, 258, 261, 262, 263, 264, 270, 309, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 744, 756, 761, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 827, 831, 872], "extrapol": [118, 149, 209, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 872], "box": [118, 133, 160, 188, 258, 261, 262, 263, 264, 270, 310, 318, 335, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 735, 756, 771, 773, 775, 777, 778, 782, 791, 794, 799, 801, 837, 872], "stretch": [118, 199, 739], "beyond": [118, 143, 165, 189, 233, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 505, 551, 552, 566, 687, 692, 694, 696, 735, 756, 771, 778, 782, 791, 792, 794, 799, 801], "axes_row": 118, "extr": 118, "margin": [118, 125, 695, 762, 763], "exceed": [118, 183, 205, 208, 225, 261, 552, 578, 695], "mask_param": [118, 228, 258, 261, 262, 263, 264, 405, 412, 473, 474, 551, 692, 694, 696, 756, 771, 778, 794, 799, 801], "markers": [118, 228, 258, 261, 262, 263, 264, 405, 412, 473, 474, 551, 692, 694, 696, 756, 771, 778, 794, 799, 801], "markerfacecolor": [118, 258, 261, 262, 263, 264, 405, 412, 473, 474, 551, 692, 694, 696, 756, 771, 778, 794, 799, 801], "_time": 118, "significant_channel": 118, "_channel": 118, "in1d": 118, "_ch": 118, "perhap": [118, 200, 205, 212, 223], "imped": [118, 200, 241, 872], "image_interp": [118, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 872], "cubic": [118, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 704, 739, 756, 771, 778, 782, 791, 794, 799, 801, 872], "smoothest": 118, "voronoi": [118, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 872], "debug": [118, 161, 170, 253, 373, 374, 375, 378, 379, 386, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 639, 691, 734, 737, 831, 851], "unalt": [118, 358], "properli": [118, 133, 135, 154, 155, 160, 167, 182, 188, 198, 204, 205, 212, 213, 231, 233, 241, 253, 256, 259, 260, 261, 262, 263, 264, 266, 268, 269, 272, 275, 276, 277, 300, 304, 344, 357, 407, 411, 416, 443, 444, 445, 473, 474, 568, 569, 637, 657, 692, 695, 735, 779, 805, 829, 831, 834, 836, 847, 872], "animate_topomap": [118, 263, 264, 872], "frame_r": [118, 263, 264], "blit": [118, 263, 264], "evoked_topomap": [118, 128], "excel": [119, 149, 159, 200, 220], "diagnost": [119, 164, 171, 203, 208, 210], "rare": [119, 271, 853, 872], "80e": [119, 209, 854], "uncom": 119, "fewer": [119, 143, 150, 160, 169, 171, 197, 200, 213, 223, 233, 261, 262, 263, 264, 271, 407, 411, 416, 417, 441, 443, 444, 473, 474, 573, 577, 720, 723, 739, 775, 872], "008": [119, 126, 139, 144, 148, 150, 165, 168, 208, 220, 241, 580], "method_param": [119, 178, 351, 356, 519, 520, 521, 522, 523, 525, 526, 532, 535, 536], "diagonal_fix": [119, 161, 351, 872], "return_estim": [119, 161, 351, 356, 851], "likelihood": [119, 150, 161, 176, 241, 258, 263, 264, 351, 356, 552, 779, 851, 854], "loglik": [119, 258], "1891": 119, "unseen": [119, 161, 176, 351, 851], "descend": [119, 161, 176, 872], "1629": 119, "666": 119, "813": [119, 194, 228], "1802": [119, 179, 198, 241], "6663146376516": 119, "8130475750986": 119, "10315358209": 119, "evoked_whiten": [119, 128], "read_raw_artemis123": [121, 187, 479, 854, 862, 872], "read_raw_bti": [121, 184, 187, 854, 862, 872], "read_raw_kit": [121, 170, 187, 479, 854, 862, 872], "set_3d_titl": [121, 123, 149, 862, 872], "root_path": 121, "parent": [121, 149, 160, 169, 170, 171, 872], "spm_ctf_meg_example_faces1_3d": 121, "324474": 121, "bti_path": 121, "test_pdf_linux": 121, "test_config_linux": 121, "test_hs_linux": 121, "magn": [121, 187, 854], "3600wh": 121, "pdf": [121, 184, 193, 241, 253, 383, 468, 484, 855], "critic": [121, 150, 159, 170, 177, 184, 200, 208, 223, 225, 228, 580, 639, 737, 848, 858], "mne_create_comp_data": [121, 184, 253, 484], "print_tabl": [121, 184], "routin": [121, 184, 201, 448, 552, 580, 860, 871, 872], "magnes_3600wh": [121, 184], "kit_path": 121, "sqd": [121, 170, 253, 476, 496, 606, 854], "artemis_data_2017": 121, "10h": 121, "38m": 121, "59s_phantom_1k_hpi_1": 121, "artemis123_mneloc": 121, "1863": 121, "hpifit": [121, 207, 253], "ok": [121, 187, 207, 257, 267], "997": [121, 200, 208, 228, 241], "cardin": [121, 165, 168, 212, 218, 302, 303, 332, 424, 827, 857, 872], "902": [121, 128, 228], "meg_sensor": [121, 128, 872], "create_3d_figur": [122, 155, 159, 177, 741, 862], "mne_helmet": [122, 128], "ship": [123, 169, 223, 261, 262, 263, 264, 266, 319, 320, 325, 326, 457, 473, 474, 843, 854, 872], "joan": [123, 136, 158, 872], "massich": [123, 136, 158, 872], "mailsik": [123, 136, 158], "op": [123, 133, 158, 183, 184, 207, 261, 262, 263, 264, 473, 474], "get_builtin_montag": [123, 169, 261, 262, 263, 264, 266, 325, 457, 473, 474, 862, 872], "against": [123, 139, 140, 148, 203, 212, 241, 649, 654, 831, 872], "current_montag": 123, "fiduci": [123, 133, 135, 155, 158, 159, 169, 187, 188, 309, 312, 313, 322, 332, 333, 362, 363, 364, 382, 477, 480, 496, 504, 606, 631, 755, 827, 847, 854, 857, 872], "mri_fiduci": [123, 155, 158, 182, 755, 872], "montage_sgskip": [123, 128], "hcp": [124, 241, 383, 838, 860, 872], "mmp1": [124, 241, 383, 872], "448": [124, 170, 228, 274, 872], "mmp": [124, 383], "Of": [124, 141, 197, 204, 205, 220, 585, 586], "acknowledg": [124, 200], "wu": 124, "minn": 124, "publicli": [124, 165, 398, 399, 848, 853], "get_brain_class": [124, 154, 862], "fetch_hcp_mmp_parcel": [124, 180, 862, 872], "fetch_aparc_sub_parcel": [124, 862], "hcpmmp1": 124, "add_annot": [124, 154, 180, 739], "aud_label": 124, "l_a1_roi": 124, "hcpmmp1_combin": [124, 180, 383], "aparc_sub": 124, "matthew": [124, 179, 241, 383], "glasser": [124, 241, 383], "timothi": [124, 241, 383, 872], "coalson": [124, 241, 383], "emma": [124, 241, 383, 552], "robinson": [124, 179, 241, 383], "hacker": [124, 241, 383], "harwel": [124, 241, 383], "essa": [124, 241, 383], "yacoub": [124, 241, 383], "kamil": [124, 241, 383], "ugurbil": [124, 241, 383], "jesper": [124, 241, 383, 872], "andersson": [124, 241, 383], "beckmann": [124, 241, 383], "jenkinson": [124, 241, 383], "stephen": [124, 179, 193, 223, 224, 241, 383, 411, 552, 679, 680, 682, 683, 721, 724, 872], "essen": [124, 241, 383], "modal": [124, 188, 227, 233, 241, 383], "cerebr": [124, 241, 383], "536": [124, 207, 228, 241, 383], "178": [124, 168, 182, 183, 184, 199, 223, 227, 228, 241, 383], "nature18933": [124, 241, 383], "javeria": [124, 241], "hashmi": [124, 241], "fahimeh": [124, 241, 872], "mamashli": [124, 241, 872], "konstantino": [124, 241], "michmizo": [124, 241], "manfr": [124, 241, 872], "kitzbichl": [124, 241, 872], "santosh": [124, 241], "ganesan": [124, 241], "keri": [124, 241], "lee": [124, 133, 241, 267, 272, 552, 578, 872], "garel": [124, 241], "susan": [124, 241, 645], "whitfield": [124, 241], "gabri": [124, 241], "randi": [124, 241, 519], "gollub": [124, 241], "jian": [124, 241], "kong": [124, 241], "kunjan": [124, 241], "rana": [124, 241], "kenet": [124, 241], "matur": [124, 241], "trajectori": [124, 241], "network": [124, 193, 241, 294, 411, 552, 842], "mediat": [124, 241, 721, 724], "018": [124, 126, 139, 148, 168, 220, 241, 567], "mccloi": [125, 207, 859, 872], "dan": [125, 207, 872], "mpl_toolkit": [125, 169, 204, 223, 228, 763], "axes_grid1": [125, 228, 763], "make_axes_locat": [125, 228], "imagegrid": 125, "inset_loc": [125, 763], "suppos": [125, 167, 204, 752, 854], "max_t": 125, "17909658": 125, "18448887": 125, "83197989": 125, "screenshot": [125, 171, 739, 809, 872], "pixel": [125, 141, 171, 223, 258, 259, 261, 262, 263, 264, 268, 269, 270, 271, 272, 275, 276, 277, 405, 412, 464, 473, 474, 551, 552, 692, 694, 696, 739, 755, 756, 767, 771, 778, 782, 791, 794, 797, 799, 801, 802, 827, 872], "integ": [125, 139, 141, 142, 144, 148, 149, 150, 159, 165, 167, 168, 170, 174, 188, 201, 203, 212, 213, 218, 228, 253, 256, 258, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 294, 295, 307, 310, 311, 318, 321, 324, 326, 351, 355, 356, 365, 366, 367, 405, 407, 412, 421, 422, 426, 427, 434, 443, 444, 447, 448, 449, 463, 468, 470, 471, 473, 474, 504, 528, 529, 530, 551, 552, 554, 566, 567, 568, 569, 574, 577, 586, 588, 595, 604, 606, 610, 640, 642, 660, 678, 687, 692, 694, 695, 696, 700, 701, 702, 703, 704, 705, 723, 726, 756, 763, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 782, 783, 784, 786, 788, 790, 791, 792, 793, 794, 799, 801, 827, 854, 857, 872], "nonwhite_pix": 125, "nonwhite_row": 125, "nonwhite_col": 125, "cropped_screenshot": 125, "nrows_ncol": 125, "axes_pad": 125, "updat": [125, 145, 169, 171, 178, 188, 198, 200, 205, 208, 212, 215, 238, 253, 258, 261, 262, 263, 264, 266, 270, 285, 299, 362, 366, 368, 373, 374, 375, 376, 378, 379, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 440, 457, 468, 473, 474, 493, 518, 553, 632, 636, 727, 739, 829, 831, 848, 853, 857, 872], "rcparam": [125, 136, 200, 872], "labels": 125, "titles": 125, "medium": [125, 155, 182, 253, 305, 860, 872], "height": [125, 253, 266, 268, 269, 272, 275, 276, 277, 306, 310, 318, 323, 464, 739, 748, 797, 802, 827, 872], "gridspec": [125, 263, 264, 778], "keyword": [125, 148, 154, 168, 171, 190, 200, 208, 237, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 309, 311, 313, 314, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 411, 415, 416, 418, 421, 422, 424, 426, 430, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 455, 456, 460, 461, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 548, 552, 554, 555, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 577, 578, 580, 581, 583, 584, 587, 588, 589, 592, 593, 594, 595, 599, 600, 601, 602, 603, 604, 606, 607, 608, 610, 611, 612, 614, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 640, 641, 643, 644, 645, 646, 656, 657, 660, 662, 663, 664, 665, 666, 667, 668, 678, 679, 680, 681, 682, 683, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 710, 711, 714, 715, 719, 720, 722, 723, 724, 725, 728, 729, 734, 737, 738, 739, 740, 747, 755, 756, 761, 764, 767, 771, 772, 773, 774, 779, 782, 783, 784, 789, 790, 792, 793, 795, 796, 797, 798, 802, 803, 804, 808, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 831, 847, 872], "subplot2grid": [125, 193], "inch": [125, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 771, 778, 782, 791, 794, 799, 801], "height_ratio": 125, "rowspan": 125, "775": [125, 149, 153, 194, 228], "bot": 125, "evoked_idx": 125, "brain_idx": 125, "peak_lin": 125, "66ccee": [125, 159, 708, 718], "columnspac": 125, "labelspac": 125, "fancybox": 125, "handlelength": 125, "n_ave": 125, "spine": [125, 180, 752, 763], "set_axisbelow": 125, "tick": [125, 238, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 763, 771, 775, 778, 782, 791, 794, 799, 800, 801, 872], "225": [125, 143, 168, 223, 227, 228, 235, 241, 848], "append_ax": [125, 228], "plot_brain_colorbar": [125, 862, 872], "get_posit": [125, 135, 309, 872], "ymax": [125, 201, 228, 233], "transfigur": 125, "fontweight": [125, 143, 208], "bold": [125, 143, 150, 198, 201, 204, 205, 206, 208, 209, 223], "va": [125, 159], "panel": [125, 133, 150, 155, 161, 169, 179, 238, 253, 263, 264, 464, 552, 739, 779, 783, 851], "outlin": [125, 159, 171, 175, 200, 238, 258, 259, 261, 262, 263, 264, 270, 309, 405, 412, 473, 474, 551, 552, 566, 595, 692, 694, 696, 756, 763, 767, 771, 773, 775, 776, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 872], "familiar": [125, 143, 197, 833, 848], "to_plot": 125, "return_tim": [125, 212, 473, 474], "\u00b5v": [125, 141, 143, 144, 148, 150, 165, 199, 205, 224, 253, 258, 261, 262, 263, 264, 268, 269, 270, 271, 272, 275, 276, 277, 405, 412, 473, 474, 508, 551, 552, 566, 692, 694, 696, 756, 769, 770, 771, 773, 775, 778, 782, 791, 792, 794, 799, 800, 801, 827, 854, 872], "1e6": [125, 140, 148, 150, 258, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 351, 355, 356, 405, 412, 414, 473, 474, 770, 773, 775, 777, 778, 800], "inset_ax": [125, 763], "plot_sensor": [125, 141, 150, 169, 181, 189, 215, 261, 262, 263, 264, 473, 474, 862, 872], "server": [125, 145, 165, 171, 201, 203, 212, 805, 835], "axin": 125, "edit": [125, 150, 168, 170, 198, 200, 203, 214, 241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 674, 692, 695, 760, 808, 831, 835, 851, 872], "stai": [125, 143, 200, 201, 218, 220, 261, 262, 263, 264, 473, 474, 475, 641, 831], "intact": [125, 197, 212], "That": [125, 141, 143, 160, 161, 200, 228, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 468, 470, 471, 530, 779, 854], "nice": [125, 143, 149, 168, 170, 212, 223, 238, 831, 854, 872], "But": [125, 142, 143, 171, 183, 200, 208, 218, 223, 231, 238, 552, 849], "big": [125, 187, 203, 414, 681, 849, 872], "tast": 125, "luckili": 125, "facet": [125, 159], "set_": 125, "get_children": 125, "line2d": 125, "0x7f17fa68e920": 125, "0x7f17f8d18640": 125, "0x7f17f8d1a800": 125, "0x7f17f8d193f0": 125, "pathcollect": 125, "0x7f17f8d1b010": 125, "0x7f17f983c820": 125, "0x7f17f92e5840": 125, "0x7f17f92e5c60": 125, "0x7f17f92e6740": 125, "0x7f17f983ccd0": 125, "yaxi": [125, 205], "0x7f17fab61e70": 125, "rectangl": [125, 214, 692, 756], "0x7f17fa246680": 125, "certainli": 125, "artistlist": 125, "sensor_dot": 125, "shrink": [125, 133, 198, 223, 224, 577, 851], "set_siz": 125, "885": [125, 128, 228], "publication_figur": [125, 128], "notat": [126, 204, 227, 233, 854], "odd": [126, 200, 321, 404, 854], "make_1020_channel_select": [126, 224, 862, 872], "test_raw": [126, 167, 253], "read_raw_eeglab": [126, 167, 188, 479, 835, 854, 858, 862, 872], "fpz": [126, 169, 203, 258, 261, 262, 263, 264, 270, 309, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 872], "eog1": 126, "eog2": 126, "fc5": [126, 495], "t7": [126, 158, 169, 258, 261, 262, 263, 264, 270, 309, 405, 412, 473, 474, 495, 551, 552, 566, 692, 694, 696, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 872], "011": [126, 134, 138, 139, 148, 168, 200, 220, 241], "012": [126, 139, 148, 168, 215, 220], "cp5": [126, 495], "017": [126, 139, 148, 168, 212, 220], "cp6": 126, "019": [126, 139, 148, 168, 206, 220, 241], "021": [126, 139, 140, 148, 165, 168, 220], "022": [126, 139, 148, 168, 183, 220], "023": [126, 139, 141, 148, 168, 220, 241], "024": [126, 139, 148, 168, 173, 206, 211, 220, 228, 241, 679, 680, 682, 683], "po7": [126, 238], "026": [126, 139, 148, 168, 220, 241], "poz": [126, 238], "027": [126, 139, 148, 168, 220, 223, 241, 294, 552, 685, 686, 846], "028": [126, 139, 148, 168, 220, 240, 241, 560, 721, 724], "029": [126, 139, 148, 168, 220, 241], "o2": [126, 158, 218, 238], "standard_1020": [126, 150, 158, 169, 218, 495], "fdt": [126, 167, 489, 604], "msec": [126, 150, 692], "new_ev": [126, 213, 431, 433, 517], "203125": 126, "midlin": [126, 133, 168, 169, 215, 224, 321], "12z": [126, 224], "group_bi": [126, 141, 224, 253, 261, 262, 263, 264, 473, 474, 769, 770, 775, 792, 872], "vline": [126, 263, 264, 763, 777, 872], "roi_erpimage_by_rt": [126, 128], "66067": 127, "109": [127, 136, 168, 194, 203, 207, 223, 227, 228, 376, 848], "xscale": [127, 205, 261, 262, 263, 264, 473, 474, 694, 696, 793, 872], "wall": [127, 200, 201, 241, 679, 680], "shield": [127, 201, 241, 261, 262, 263, 264, 266, 473, 474, 549, 580, 692, 694, 695, 696, 854], "review": [127, 150, 177, 202, 203, 241, 551, 557, 831, 853], "scientif": [127, 241, 835, 836, 856], "instrument": [127, 177, 197, 203, 241], "056101": [127, 241], "1063": [127, 208, 241, 563, 580], "4802845": [127, 241], "sensor_noise_level": [127, 128], "716": [128, 193, 194], "auto_examples_visu": 128, "xhemi": [128, 132, 273, 357, 617], "topo_custom": [128, 131], "148": [128, 131, 168, 194, 207, 223, 228], "163": [128, 168, 194, 227, 228, 230, 238, 240, 274], "ssp_projs_sensitivity_map": [128, 129], "329": [128, 129, 168, 223, 228], "topo_compare_condit": [128, 130], "167": [128, 168, 194, 207, 228], "ecg_fnam": 129, "ssp_ecg_map": 129, "arg": [129, 227, 233, 253, 266, 274, 674, 831], "plot_evoked_topo": [130, 149, 209, 862, 872], "audio": [130, 174, 190, 194, 236, 241, 261, 262, 263, 264, 412, 473, 474, 694, 695, 696, 711], "nleft": 130, "iter_topographi": [131, 862, 872], "20hz": 131, "return_freq": [131, 136, 236, 237, 238, 694, 696, 872], "my_callback": 131, "ch_idx": [131, 207, 225, 237], "fig_facecolor": [131, 141, 236, 261, 262, 263, 264, 473, 474, 692, 694, 696, 752, 800], "axis_facecolor": [131, 236, 261, 262, 263, 264, 473, 474, 694, 696, 752], "axis_spinecolor": [131, 752], "on_pick": [131, 752], "gcf": 131, "stc_path": [132, 171], "fsaverage_sym": [132, 357], "left_right": [132, 357], "stc_xhemi": 132, "70314401": 132, "48867635": 132, "29875944": 132, "involv": [133, 134, 135, 155, 157, 159, 197, 200, 201, 204, 214, 364, 554, 853, 854], "implant": [133, 241, 584], "reson": [133, 241, 854], "tomographi": [133, 241, 519, 827, 854], "greater": [133, 143, 165, 198, 203, 223, 226, 261, 262, 273, 355, 446, 552, 577, 681, 695, 721, 724, 812, 872], "intens": [133, 142, 159, 180, 181, 189, 203, 263, 264, 268, 269, 272, 275, 276, 277, 279, 528, 529, 739, 774, 797, 802, 812, 827, 872], "dipi": [133, 170, 273, 691, 728, 729, 812, 830], "pip": [133, 134, 135, 145, 160, 829, 831, 833, 836, 839], "conda": [133, 134, 135, 160, 829, 830, 831, 833, 836, 839, 872], "cite": [133, 136, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 384, 444, 473, 474, 692, 695, 831, 848], "seeg": [133, 135, 137, 138, 164, 168, 212, 218, 261, 262, 263, 264, 266, 274, 276, 308, 309, 313, 363, 367, 369, 434, 438, 457, 473, 474, 479, 488, 548, 549, 550, 552, 622, 624, 637, 687, 692, 694, 695, 696, 739, 755, 761, 795, 827, 828, 838, 854, 872], "gui": [133, 156, 157, 159, 261, 262, 268, 269, 272, 275, 276, 277, 305, 473, 474, 552, 755, 769, 786, 792, 797, 802, 829, 831, 835, 837, 838, 845, 847, 849, 851, 862, 872], "set_3d_backend": [133, 810, 829, 862, 872], "pyvistaqt": [133, 170, 268, 272, 276, 691, 749, 797, 804, 810, 829, 830, 872], "anterior": [133, 159, 267, 321, 669, 827, 854, 872], "commissur": [133, 135, 309], "posterior": [133, 135, 155, 159, 267, 309, 321, 468, 669, 827, 872], "aka": [133, 162, 164, 189], "sample_seeg_t1": 133, "cursor": [133, 740, 872], "long": [133, 136, 139, 140, 145, 197, 200, 201, 203, 207, 213, 214, 218, 224, 231, 232, 259, 261, 262, 263, 264, 268, 269, 272, 273, 275, 276, 277, 351, 357, 473, 474, 522, 555, 560, 580, 692, 694, 695, 696, 739, 831, 834, 835, 847, 853, 860, 872], "menu": [133, 171, 214, 834, 837, 855], "prefer": [133, 141, 150, 169, 170, 188, 189, 200, 203, 204, 256, 261, 262, 263, 264, 357, 412, 434, 453, 473, 474, 552, 636, 694, 696, 793, 829, 831, 835, 837, 838, 850, 853, 854, 857], "pull": [133, 150, 204, 809, 827, 838, 853], "popup": 133, "Be": [133, 160, 212, 214, 263, 264, 776], "tkreg": 133, "until": [133, 141, 198, 199, 206, 209, 256, 259, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 464, 465, 472, 473, 474, 552, 555, 694, 696, 736, 739, 767, 769, 786, 792, 795, 831, 854], "crosshair": 133, "meet": [133, 200, 853], "pc": [133, 203], "transect": 133, "sample_seeg": [133, 134], "viewer": [133, 268, 269, 272, 275, 276, 277, 739, 797, 802, 827, 860, 872], "set_posit": [133, 263, 264, 778], "xytext": [133, 180], "arrowprop": [133, 180, 193], "headwidth": 133, "consum": [133, 201, 271, 562, 685, 872], "deform": [133, 159, 169, 241], "hour": [133, 154, 473, 474, 552, 786, 792], "plan": [133, 197, 198, 201, 206, 429, 829, 835, 853], "proce": [133, 150, 256, 261, 398, 552, 555, 562, 748, 851], "my_data_directori": 133, "subjid": 133, "defac": 133, "cw256": 133, "scan": [133, 154, 165, 175, 179, 182, 208, 266, 385, 577, 812, 832, 835, 838, 843, 857, 860], "anonym": [133, 155, 261, 262, 263, 264, 473, 474, 475, 851, 872], "orig_defac": 133, "publish": [133, 204, 241, 552, 849], "mne_bid": [133, 135, 170], "write_anat": 133, "hardli": [133, 854], "misalign": [133, 145, 177, 484, 872], "stereotact": [133, 261, 262, 263, 264, 473, 474, 549, 550, 692, 694, 695, 696, 854, 872], "anteriolater": 133, "thresh": [133, 569, 573, 589, 679, 680, 682, 683, 739, 812], "apply_orient": 133, "asarrai": [133, 159, 227], "dataobj": [133, 155, 159, 181], "axcodes2ornt": 133, "aff2axcod": [133, 159], "float32": 133, "quantil": [133, 414], "squeez": [133, 140, 227, 228, 233], "grai": [133, 143, 155, 159, 171, 198, 208, 213, 225, 226, 227, 228, 233, 267, 463, 552, 597, 739, 754, 755, 763, 782], "gist_heat": 133, "invert_yaxi": 133, "ct_orig": 133, "sample_seeg_ct": 133, "world": [133, 155, 159, 171, 181, 200, 214, 225, 273, 448], "ct_resampl": 133, "moving_affin": 133, "static_affin": 133, "unalign": 133, "shear": [133, 729], "reg_affin": [133, 728, 729, 812], "compute_volume_registr": [133, 728, 862, 872], "4x4": [133, 274, 495, 643, 644, 645, 657], "99270756": 133, "03243313": 133, "11610254": 133, "094156": 133, "04374389": 133, "99439665": 133, "09623816": 133, "58320673": 133, "11233068": 133, "10061512": 133, "98856381": 133, "45551601": 133, "cval": [133, 728, 872], "ct_align": 133, "apply_volume_registr": [133, 862, 872], "failur": [133, 831, 872], "heat": 133, "navig": [133, 160, 212, 261, 262, 271, 276, 277, 473, 474, 769, 792, 803, 829, 835, 855], "toolbar": [133, 160, 804], "lta": [133, 616], "realli": [133, 174], "rerun": 133, "manual_reg_affine_vox": 133, "read_lta": [133, 862], "sample_seeg_ct_aligned_manu": 133, "manual_reg_affin": 133, "starting_affin": [133, 729, 872], "hyperintens": [133, 812], "hypointens": [133, 812], "brighter": [133, 233], "subcutan": 133, "fat": 133, "ct_data": 133, "get_fdata": 133, "t1_data": 133, "bright": 133, "halfwai": [133, 757], "talairach": [133, 134, 159, 179, 180, 276, 277, 363, 364, 624, 803, 851, 854, 872], "get_mni_fiduci": [133, 159, 309, 363, 755, 862, 872], "subj_tran": 133, "nearbi": [133, 134, 135, 193, 197, 205, 208, 219, 241, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 580, 687, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 812], "video": [133, 155, 160, 856, 872], "associ": [133, 136, 143, 167, 171, 190, 197, 204, 205, 207, 223, 225, 241, 255, 256, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 413, 456, 473, 474, 514, 604, 606, 642, 674, 679, 684, 692, 695, 761, 769, 770, 772, 773, 775, 790, 791, 829, 831, 854, 857, 872], "sidebar": 133, "scroll": [133, 141, 165, 214, 215, 259, 261, 262, 473, 474, 552, 767, 769, 786, 792, 808, 872], "arrow": [133, 155, 159, 160, 177, 182, 197, 201, 204, 215, 258, 259, 261, 262, 263, 264, 269, 270, 275, 276, 277, 405, 412, 473, 474, 551, 552, 692, 694, 696, 739, 756, 767, 769, 770, 771, 775, 778, 781, 782, 791, 792, 794, 799, 802, 803, 854, 872], "snap": [133, 160, 872], "sample_seeg_ieeg": [133, 134], "locate_ieeg": [133, 862, 872], "1310640": [133, 134], "1370605": [133, 134], "411": [133, 134, 207, 223, 228, 241, 351], "1371": [133, 134, 156, 194, 207, 236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 704, 710], "t1_ecog": 133, "ct_orig_ecog": 133, "sample_ecog_ct": 133, "99982382": 133, "00414586": 133, "01830679": 133, "15413965": 133, "00549597": 133, "99721885": 133, "07432601": 133, "54316131": 133, "01794773": 133, "07441352": 133, "99706595": 133, "84162514": 133, "ct_aligned_ecog": 133, "raw_ecog": 133, "previous": [133, 148, 169, 202, 203, 253, 287, 294, 295, 630, 739, 872], "subj_trans_ecog": 133, "3024": [133, 317, 473, 854], "dura": [133, 851], "pressur": [133, 577], "craniotomi": [133, 577], "watershed_bem": [133, 157, 577, 838, 851, 854, 872], "flash_bem": [133, 157, 577, 838, 854, 872], "modif": [133, 189, 233, 327, 369, 838, 872], "view_kwarg": [133, 156, 159], "ieeg": [133, 135, 860, 861, 862, 872], "project_sensors_onto_brain": [133, 862, 872], "cvs_avg35_inmni152": 133, "subject_brain": 133, "template_brain": 133, "regist": [133, 253, 304, 728, 729, 812, 827, 853, 854], "sdr_morph": [133, 273, 728, 729, 812], "subject_brain_sdr": 133, "appl": [133, 834], "had": [133, 141, 150, 166, 167, 174, 180, 199, 200, 201, 204, 205, 215, 236, 238, 261, 262, 399, 428, 571, 610, 695, 854, 872], "montage_warp": [133, 812], "elec_imag": 133, "warped_elec_imag": 133, "warp_montage_volum": [133, 862, 872], "subjects_dir_from": [133, 812], "subjects_dir_to": [133, 812], "dark2": 133, "degrad": 133, "inaccur": [133, 161, 212, 258, 261, 262, 263, 264, 270, 351, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 847, 854], "add_estimated_fiduci": [133, 309, 872], "template_tran": 133, "compute_native_head_t": [133, 134, 158, 181, 309, 862, 872], "recomput": [133, 203, 206, 228, 446, 552, 578, 632, 872], "behind": [133, 155, 170, 193, 198, 203, 464, 758, 849], "scene": [133, 155, 159, 170, 193, 241, 253, 263, 264, 268, 269, 272, 275, 276, 277, 411, 464, 739, 745, 746, 748, 755, 774, 797, 802, 806, 807, 809, 829, 849, 872], "brittani": [133, 241], "stedelin": [133, 241], "alessandra": [133, 241], "mantovani": [133, 241], "ahm": [133, 241], "raslan": [133, 241], "nicol": [133, 241, 676, 872], "swann": [133, 241], "3897": [133, 241], "2022": [133, 168, 170, 179, 241, 242], "21105": [133, 241], "joss": [133, 241], "03897": [133, 241], "liberti": [133, 135, 241, 872], "hamilton": [133, 135, 241, 872], "morgan": [133, 200, 241], "edward": [133, 241], "semi": [133, 203, 241, 566, 872], "neuroinformat": [133, 241], "octob": [133, 241, 652], "fninf": [133, 241], "00062": [133, 241], "1163": 133, "10_ieeg_loc": [133, 138], "stereoelectroencephalographi": [134, 848], "xfm": [134, 276, 277, 364, 624, 803, 854, 872], "li": [134, 135, 159, 171, 206, 241, 854, 859, 872], "adam2392": [134, 135], "fixat": 134, "isi": [134, 190], "mni_tal": [134, 135, 309, 322], "this_subject_dir": 134, "head_mri_t": 134, "mri_mni_t": [134, 624], "read_talxfm": [134, 159, 862], "taliarach": 134, "fro": [134, 449, 727], "rostral": [134, 739], "warp": [134, 155, 158, 241, 812, 848, 872], "intracrani": [134, 137, 138, 164, 241, 266, 309, 313, 363, 364, 457, 465, 473, 474, 479, 577, 728, 729, 739, 804, 812, 847, 848, 860, 861, 872], "contact": [134, 137, 138, 164, 197, 266, 309, 313, 329, 363, 364, 465, 473, 479, 577, 728, 729, 739, 804, 812, 831, 848, 872], "combine_transform": 134, "atla": [134, 180, 241, 253, 259, 268, 269, 272, 274, 275, 276, 277, 306, 439, 507, 641, 827, 848, 851, 854, 860, 872], "get_montage_volume_label": [134, 739, 862, 872], "lami": [134, 465], "lttr": 134, "isdigit": 134, "lpm": 134, "lsma": 134, "elec": [134, 224], "plot_channel_labels_circl": [134, 862, 872], "lphg": 134, "lent": 134, "lbri": 134, "lpcn": 134, "lpli": 134, "lstg": 134, "lpit": 134, "lacn": 134, "lofc": 134, "rahp": 134, "rphp": 134, "ltpo": 134, "ctx": 134, "putamen": 134, "add_volume_label": [134, 180, 739, 872], "heatmap": [134, 208], "lfp": 134, "stc_near_sensor": [134, 135, 862, 872], "Its": [134, 207, 854], "view_layout": [134, 179, 268, 269, 272, 275, 276, 277, 739, 797, 802], "sagitt": [134, 159, 179, 259, 739, 757, 767], "m4": 134, "sai": [134, 135, 200, 201, 204, 206, 212, 218, 225, 228, 735, 831, 837, 847, 857], "20_seeg": [134, 138], "epilepsi": [135, 872], "seizur": [135, 872], "complementari": [135, 199, 860], "libertyhamilton": 135, "bidspath": 135, "read_raw_bid": 135, "bids_root": 135, "epilepsy_ecog": [135, 862, 872], "bids_path": 135, "pt1": 135, "session": [135, 139, 141, 148, 149, 165, 170, 171, 198, 208, 214, 261, 262, 371, 372, 473, 474, 552, 769, 786, 792, 800, 829, 847, 851, 855, 872], "presurgeri": 135, "ictal": 135, "datatyp": [135, 872], "vhdr": [135, 169, 238, 438, 473, 474, 598, 848, 854, 872], "trans_bandwidth": [135, 200, 441, 444, 473, 474], "add_mni_fiduci": [135, 309, 872], "epoch_length": 135, "269079": 135, "2201": 135, "ad1": 135, "att1": 135, "ast1": 135, "g16": 135, "slt1": 135, "sensor_color": [135, 755], "gamma_power_t": 135, "gamma_info": 135, "445": [135, 193, 228], "gamma_power_at_15": 135, "rgba": [135, 267, 268, 269, 272, 275, 276, 277, 739, 754, 758, 797, 802, 803, 872], "get_cmap": 135, "tolist": 135, "funcanim": [135, 263, 264], "gamma_pow": 135, "x_line": 135, "epileptiform": 135, "progress": [135, 150, 164, 199, 241, 408, 415, 831, 872], "posteriorli": 135, "becom": [135, 140, 181, 199, 200, 202, 203, 208, 231, 232, 233, 261, 262, 263, 264, 594, 760, 775, 831, 839, 853, 854, 872], "xyz_pt": 135, "vmid": 135, "intra": [135, 663], "4932": 135, "649": [135, 138, 194, 228], "30_ecog": [135, 138], "toi": [136, 223, 860], "answer": [136, 205, 228, 238, 831, 851], "question": [136, 140, 208, 238, 831, 834, 850, 852], "alic": 136, "tackl": 136, "chambon": [136, 241, 872], "stan": 136, "sleep_physionet": [136, 848, 862, 872], "fetch_data": [136, 848, 862, 872], "randomforestclassifi": 136, "accuracy_scor": 136, "functiontransform": 136, "ground": [136, 165, 205, 552, 790, 860], "truth": [136, 205, 552, 790], "expert": [136, 161, 831, 851, 853], "alice_fil": 136, "bob_fil": 136, "raw_train": 136, "marker": [136, 150, 167, 176, 187, 188, 193, 199, 204, 253, 258, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 405, 408, 412, 415, 418, 421, 422, 448, 461, 463, 473, 474, 476, 496, 511, 514, 515, 525, 526, 535, 536, 551, 552, 557, 564, 565, 566, 606, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 692, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 756, 771, 774, 778, 782, 791, 792, 793, 794, 798, 799, 801, 848, 872], "temp": [136, 266], "rectal": 136, "annot_train": 136, "read_annot": [136, 214, 739, 862, 872], "emit_warn": [136, 255, 473, 474, 581], "resp": [136, 168, 212, 261, 262, 263, 264, 271, 308, 473, 474, 488, 549, 692, 694, 695, 696, 769, 792, 854, 872], "physionet_sleep": 136, "sc4001e0": 136, "wake": 136, "rem": [136, 167], "abbrevi": [136, 174, 204, 739, 854, 872], "rapid": [136, 143, 193, 200, 241, 411], "awak": 136, "night": [136, 398, 848], "imbal": [136, 227, 562, 563, 571, 580, 591], "trim": [136, 261, 262], "occurr": [136, 143, 197, 429, 431], "annotation_desc_2_event_id": 136, "redefin": 136, "events_train": 136, "chunk_dur": [136, 167, 434, 872], "stage_color": 136, "prop_cycl": 136, "by_kei": 136, "841": [136, 194, 228], "raw_test": 136, "annot_test": 136, "events_test": 136, "epochs_test": 136, "sc4011e0": 136, "1103": [136, 177, 241], "562": 136, "signatur": [136, 198, 227, 408, 415, 422, 552, 782, 831, 849, 872], "ci": [136, 145, 200, 209, 223, 236, 552, 671, 694, 696, 763, 784, 831, 872], "\u00b5v\u00b2": 136, "eeg_power_band": 136, "compat": [136, 143, 170, 175, 254, 261, 262, 263, 264, 317, 359, 367, 381, 389, 411, 413, 416, 418, 419, 420, 445, 464, 473, 474, 525, 552, 694, 696, 769, 771, 792, 793, 804, 829, 837, 839, 851, 854, 857, 872], "psds_band": 136, "boilerpl": 136, "sckit": 136, "manner": [136, 150, 177, 223, 224, 256, 261, 872], "thank": [136, 139, 831, 860], "pipe": [136, 831, 848], "n_estim": [136, 408, 415], "acc": 136, "6745240253853128": 136, "ye": [136, 207, 208, 223, 263, 473, 493, 610, 851, 872], "databas": [136, 241, 384, 398, 399], "mathieu": [136, 241, 872], "galtier": [136, 241], "pierrick": [136, 241], "arnal": [136, 241], "gill": [136, 241], "wainrib": [136, 241], "architectur": [136, 241, 872], "rehabilit": [136, 241], "758": [136, 228, 241], "769": [136, 228, 241], "tnsre": [136, 241], "2813138": [136, 241], "kemp": [136, 241, 398, 399, 848], "zwinderman": [136, 241, 398, 399, 848], "tuk": [136, 241, 399, 848], "kamphuisen": [136, 241, 398, 399, 848], "obery\u00e9": [136, 241, 399, 848], "feedback": [136, 241, 399, 848, 872], "microcontinu": [136, 241, 399, 848], "1185": [136, 241, 399, 848], "1194": [136, 241, 399, 848], "867928": [136, 241, 399, 848], "055": [136, 138, 139, 141, 148, 168, 206, 220, 241, 384], "60_sleep": [136, 138], "sleep": [137, 138, 164, 167, 241, 255, 261, 266, 398, 399, 434, 473, 488, 598, 694, 772, 827, 851, 872], "stage": [137, 138, 143, 154, 155, 164, 171, 190, 198, 200, 203, 204, 209, 214, 241, 255, 256, 261, 262, 263, 264, 266, 273, 357, 398, 434, 473, 474, 488, 512, 566, 598, 603, 694, 729, 772, 827, 831, 838, 847, 848, 862, 872], "polysomnographi": [137, 138, 164, 255, 261, 266, 398, 399, 434, 473, 488, 598, 694, 772, 848, 872], "psg": [137, 138, 164, 255, 261, 266, 398, 434, 473, 488, 598, 694, 772, 848, 872], "931": [138, 228], "auto_tutorials_clin": 138, "494": [138, 228], "cover": [139, 146, 148, 150, 152, 154, 161, 162, 164, 165, 167, 170, 171, 172, 185, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 212, 215, 216, 223, 234, 238, 239, 267, 271, 580, 588, 597, 676, 822, 831, 854, 855, 872], "possibli": [139, 148, 165, 171, 200, 225, 226, 263, 264, 273, 294, 295, 307, 351, 355, 356, 365, 366, 367, 381, 405, 412, 448, 449, 468, 470, 471, 530, 552, 570, 571, 674, 739, 779, 847, 872], "del_proj": [139, 148, 197, 204, 205, 206, 261, 262, 263, 264, 473, 474, 872], "plot_projs_topomap": [139, 141, 148, 205, 215, 261, 262, 263, 264, 473, 474, 790, 862, 872], "plot_psd_topomap": [139, 141, 236, 237, 261, 262, 263, 264, 473, 474, 872], "sample_data_fold": [139, 141, 144, 145, 154, 165, 166, 167, 168, 169, 197, 198, 199, 201, 203, 204, 205, 206, 208, 212, 213, 214, 215, 236], "sample_data_raw_fil": [139, 141, 144, 145, 165, 166, 167, 168, 197, 198, 199, 201, 203, 204, 205, 206, 208, 212, 213, 214, 215, 236], "sample_data_events_fil": [139, 144, 213], "events_from_fil": [139, 213], "bare": [139, 165], "299693": [139, 150], "699283": 139, "quot": [139, 193, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695, 831, 854], "didn": [139, 143, 261, 440, 695, 872], "string": [139, 142, 143, 144, 148, 149, 167, 168, 170, 171, 199, 212, 213, 214, 236, 254, 255, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 307, 309, 318, 324, 326, 337, 350, 351, 355, 356, 360, 365, 370, 373, 374, 375, 378, 379, 381, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 405, 407, 408, 412, 415, 421, 422, 426, 429, 434, 439, 440, 453, 455, 457, 465, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 507, 512, 515, 519, 525, 526, 549, 550, 551, 552, 554, 555, 566, 567, 568, 569, 571, 573, 574, 577, 580, 586, 588, 595, 604, 606, 610, 628, 648, 649, 650, 651, 652, 654, 657, 660, 669, 673, 675, 678, 687, 688, 692, 693, 694, 695, 696, 700, 701, 702, 703, 704, 705, 723, 727, 728, 729, 739, 747, 755, 756, 763, 769, 770, 771, 773, 775, 776, 777, 778, 779, 782, 783, 790, 791, 792, 793, 794, 797, 799, 801, 802, 803, 829, 830, 831, 846, 851, 857, 872], "event_dict": [139, 141, 144, 148, 150, 165, 167, 209, 213, 218, 236], "buttonpress": [139, 148, 150, 165, 167, 171, 213], "mention": [139, 143, 150, 165, 167, 168, 169, 174, 200, 204, 205, 206, 212, 228, 350, 831], "haven": [139, 214, 831, 855, 872], "turn": [139, 148, 149, 151, 174, 190, 198, 203, 204, 205, 206, 238, 254, 256, 261, 446, 509, 641, 740, 760, 848, 853, 854, 872], "accommod": [139, 872], "request": [139, 160, 165, 170, 171, 203, 205, 208, 212, 213, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 404, 473, 474, 552, 564, 565, 600, 637, 673, 675, 693, 694, 696, 748, 771, 780, 782, 797, 802, 827, 837, 838, 851, 852, 853, 857, 872], "drop_log": [139, 141, 199, 256, 261, 262, 271, 564, 565, 695, 768, 872], "too_short": [139, 150, 261, 695], "forget": [139, 156, 157, 167, 831], "brows": [139, 171, 180, 198, 214, 259, 261, 262, 473, 474, 552, 767, 769, 786, 792, 843, 849, 872], "scrollbar": [139, 261, 262, 473, 474, 552, 769, 786, 792, 872], "focus": [139, 140, 180, 214, 261, 262, 473, 474, 552, 649, 654, 769, 786, 792, 831, 835, 838, 856], "screen": [139, 241, 253, 261, 262, 473, 474, 769, 792, 805, 872], "bracket": [139, 148, 150, 168, 188, 212, 218, 236, 872], "catch": [139, 141, 165, 180, 227, 233, 831], "charact": [139, 165, 168, 198, 212, 213, 321, 489, 503, 598, 604, 648, 649, 650, 651, 652, 654, 747, 831, 872], "tag": [139, 143, 150, 164, 239, 240, 241, 253, 261, 262, 266, 271, 309, 325, 429, 434, 483, 503, 549, 694, 695, 747, 801, 827, 831, 848, 860, 872], "complain": 139, "ask": [139, 143, 159, 831, 846, 848, 852, 853], "keyerror": [139, 258, 261, 262, 266, 270, 285, 299, 518, 695, 727], "rais": [139, 143, 206, 256, 258, 261, 262, 263, 264, 266, 267, 270, 271, 272, 275, 281, 282, 285, 299, 313, 336, 339, 345, 346, 351, 355, 358, 360, 362, 365, 366, 398, 424, 432, 446, 452, 453, 455, 473, 474, 493, 518, 541, 543, 552, 579, 600, 611, 629, 631, 634, 638, 642, 679, 680, 682, 683, 692, 694, 695, 696, 727, 772, 783, 818, 820, 831, 853, 872], "reorder_channel": [139, 148, 212, 261, 262, 263, 264, 473, 474, 692, 694, 695, 696, 872], "exploratori": [139, 148, 166, 204, 212, 224, 849], "epochs_eeg": 139, "new_ord": [139, 148], "epochs_subset": 139, "032": [139, 148, 168, 220, 224, 241], "033": [139, 148, 168, 220], "034": [139, 148, 168, 220], "035": [139, 148, 168, 220], "037": [139, 148, 168, 212, 220], "039": [139, 141, 148, 168, 220], "041": [139, 141, 148, 168, 220], "042": [139, 148, 168, 220, 854], "043": [139, 148, 168, 220], "045": [139, 141, 148, 168, 220], "046": [139, 141, 148, 168, 220, 241, 652, 854], "047": [139, 141, 148, 168, 220], "049": [139, 141, 148, 168, 220], "052": [139, 141, 148, 161, 168, 184, 198, 220, 241, 721, 724], "054": [139, 141, 148, 168, 206, 220, 241, 530, 649, 654], "056": [139, 141, 148, 168, 220], "058": [139, 141, 148, 168, 215, 220], "unchang": [139, 148, 204, 261, 262, 263, 264, 473, 474, 581, 632], "blinkchannel": 139, "20auditori": 139, "20buttonpress": 139, "4face": [139, 150], "4visual": 139, "19visual": 139, "shorter_epoch": 139, "include_tmax": [139, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695, 872], "obj": [139, 160, 623, 825, 872], "0998976": 139, "expand": [139, 143, 159, 199, 204, 261, 262, 263, 264, 267, 272, 275, 351, 435, 438, 463, 473, 474, 694, 696, 771, 851, 872], "later_epoch": 139, "tshift": [139, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 433, 473, 474, 692, 695], "amount": [139, 140, 161, 166, 177, 198, 205, 206, 219, 238, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 271, 272, 275, 276, 277, 360, 370, 405, 412, 445, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 512, 527, 551, 552, 589, 605, 692, 694, 695, 696, 708, 718, 722, 769, 771, 778, 782, 791, 792, 794, 797, 799, 802, 851, 854, 872], "00166496": 139, "00332992": 139, "99833504": 139, "99667008": 139, "enforc": [139, 812, 872], "eog_data": 139, "channel_4_6_8": 139, "arr": [139, 212, 238, 671], "repeatedli": [139, 203, 205, 473, 474, 837, 872], "hierarch": [139, 142, 143, 236, 241, 429, 468, 517, 827, 872], "multiindex": [139, 261, 262, 692, 694, 695, 696], "aggreg": [139, 142, 144, 237, 261, 262, 263, 264, 311, 429, 473, 474, 692, 694, 696, 770, 771, 872], "endpoint": [139, 142, 167, 218, 256, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 284, 568, 610, 611], "sort_index": 139, "inplac": [139, 144, 255, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 314, 430, 440, 473, 474, 548, 594, 646, 831], "read_epochs_eeglab": [139, 188, 854, 858, 862, 872], "read_epochs_kit": [139, 187, 854, 862, 872], "audiovisu": [139, 165, 212], "epochs_from_fil": 139, "convent": [139, 159, 169, 171, 187, 189, 204, 205, 213, 241, 253, 266, 300, 321, 331, 490, 588, 611, 627, 708, 717, 718, 739, 854, 857, 872], "basenam": [139, 213], "_epo": 139, "issu": [139, 140, 143, 150, 160, 193, 200, 201, 204, 213, 214, 261, 262, 267, 272, 286, 288, 416, 473, 474, 552, 587, 655, 658, 769, 786, 792, 827, 829, 831, 850, 852, 853, 860, 872], "adher": [139, 142, 355, 437], "epochsfif": [139, 142], "anyth": [139, 187, 203, 382, 739, 831], "baseepoch": [139, 552, 831, 862, 872], "ndarrai": [139, 212, 220, 238, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 280, 294, 295, 302, 318, 341, 347, 360, 362, 365, 404, 405, 406, 409, 412, 417, 421, 425, 431, 433, 441, 442, 443, 445, 448, 449, 450, 472, 473, 474, 476, 507, 527, 551, 552, 553, 560, 563, 564, 565, 566, 571, 575, 576, 578, 595, 616, 641, 642, 657, 671, 672, 673, 677, 678, 679, 680, 682, 683, 692, 693, 694, 695, 696, 705, 708, 710, 711, 718, 721, 728, 729, 739, 740, 743, 753, 756, 758, 771, 775, 777, 778, 780, 781, 794, 797, 798, 799, 801, 802, 803, 812, 820, 870, 872], "10_epochs_overview": [139, 147], "aldai": [140, 241, 872], "reason": [140, 148, 149, 161, 165, 170, 171, 183, 198, 199, 200, 201, 202, 204, 205, 206, 212, 214, 223, 232, 233, 241, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 295, 351, 367, 417, 473, 474, 552, 564, 572, 575, 580, 679, 680, 682, 683, 685, 692, 695, 768, 805, 831, 847, 851, 853, 854, 872], "safer": [140, 268, 269, 272, 275, 276, 277, 485], "distort": [140, 188, 200, 215, 238, 485, 729], "spuriou": [140, 145, 161, 446, 851], "carina": [140, 872], "forster": [140, 872], "email": [140, 831, 837], "carinaforster0611": 140, "merge_ev": [140, 213, 351, 862, 872], "baseline_tmin": 140, "baseline_tmax": 140, "trad_aud": 140, "trad_vi": 140, "heterogen": [140, 199, 872], "aud_predictor": 140, "vis_predictor": 140, "trickier": 140, "seaprat": 140, "baseline_predictor": 140, "singleton": [140, 739, 872], "\u03bcv": 140, "microvolt": [140, 187, 483, 854], "unstabl": [140, 161, 202, 351, 851, 872], "transpos": [140, 212, 223, 224, 228, 231, 232, 233, 857, 872], "reg_model": 140, "6254": 140, "lm": [140, 560], "namedtupl": [140, 677], "dict_kei": [140, 168, 204], "1998": [140, 148, 241, 854], "49949": [140, 148], "tell": [140, 149, 154, 161, 165, 170, 199, 203, 205, 212, 225, 227, 233, 274, 831, 834, 835, 850, 854], "strongli": [140, 171, 197, 198, 206, 473, 474, 502, 829, 831, 847, 851, 854], "\u03b2": [140, 141, 215], "constant": [140, 155, 159, 169, 194, 197, 200, 238, 256, 261, 262, 263, 264, 266, 367, 473, 474, 477, 504, 728, 848, 854, 872], "effect_of_baselin": 140, "unsurprisingli": 140, "farther": [140, 851], "weaker": [140, 261, 262, 263, 264, 441, 443, 444, 473, 474, 854], "pure": [140, 272, 831], "influenc": [140, 200, 202, 203, 241, 853], "reg_aud": 140, "reg_vi": 140, "show_sensor": [140, 143, 165, 763, 872], "truncate_yaxi": [140, 228, 763, 872], "subtl": 140, "apart": [140, 149, 167, 218], "diff_tradit": 140, "diff_regress": 140, "themselv": [140, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 468, 470, 471, 530, 779, 853], "ought": 140, "persist": [140, 141, 197, 201, 851, 872], "interaction_effect": 140, "seem": [140, 143, 150, 161, 190, 200, 203, 205, 238, 552, 831], "randomli": [140, 165, 223, 505, 578, 597, 658], "glm": [140, 241, 838], "lift": [140, 177, 194, 231, 233, 241], "psyp": [140, 150, 200, 228, 241, 678, 679, 680, 682, 683], "13451": [140, 241], "787": [140, 147, 194, 228], "15_baseline_regress": [140, 147], "imagemap": 141, "discontinu": [141, 145, 146, 147, 150, 164, 167, 200, 203, 212, 213, 218, 236, 261, 446, 473, 603, 604, 606, 607, 694, 696, 827], "enabl": [141, 171, 215, 238, 253, 254, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 369, 464, 473, 474, 566, 587, 639, 679, 680, 682, 683, 694, 695, 734, 739, 748, 752, 755, 774, 792, 797, 802, 805, 829, 837, 847, 853, 854, 872], "unappli": [141, 149, 204, 206, 261, 262, 263, 264, 435, 436, 437, 438, 473, 474, 872], "purg": 141, "catch_trials_and_buttonpress": 141, "pick_ev": [141, 213, 862], "event_color": [141, 213, 261, 262, 473, 474, 769, 792, 872], "butterfli": [141, 148, 150, 151, 171, 198, 204, 208, 215, 261, 262, 263, 264, 271, 473, 474, 552, 769, 773, 776, 783, 792, 808, 858, 872], "ecg_proj_fil": [141, 204], "ecg_proj": [141, 145, 204, 205], "41auditori": 141, "40button": 141, "8face": 141, "8visual": 141, "40visual": 141, "inherit": [141, 236, 351, 872], "joint": [141, 181, 205, 241, 261, 262, 263, 264, 270, 405, 412, 473, 474, 637, 694, 696, 771, 778, 791, 860, 872], "epochsspectrum": [141, 164, 239, 240, 261, 262, 263, 264, 446, 473, 696, 710, 711, 734, 862, 872], "\u03b4": [141, 215], "\u03b8": [141, 215], "\u03b3": [141, 215], "api": [141, 168, 194, 215, 223, 236, 406, 540, 739, 748, 752, 839, 843, 855], "jointli": [141, 161, 203, 205, 261, 262, 263, 264, 270, 294, 295, 352, 353, 354, 405, 412, 473, 474, 552, 564, 565, 694, 696, 771, 778, 790, 791, 851, 872], "untransform": 141, "docstr": [141, 150, 179, 200, 201, 208, 212, 215, 236, 262, 280, 294, 295, 468, 470, 471, 530, 694, 735, 737, 754, 872], "plot_topo_imag": [141, 261, 262, 872], "accompani": [141, 657, 853], "scalebar": [141, 872], "highli": [141, 187, 205, 219, 227, 492, 605, 609, 678, 835], "customiz": [141, 263, 264, 692, 776], "respond": [141, 143, 193, 853], "opposit": [141, 167, 507, 854], "0242": [141, 168], "pop": [141, 149, 198, 258, 261, 262, 266, 270, 285, 299, 518, 727, 800, 829, 872], "At": [141, 190, 202, 203, 209, 317, 473, 831, 837, 847, 872], "fullscreen": [141, 464, 872], "unusu": [141, 183, 198, 202], "reject_criteria": [141, 144, 150, 165, 199, 209], "3000e": [141, 144, 199], "find_layout": [141, 169, 862, 872], "font_color": [141, 261, 262, 692, 800], "reinforc": 141, "disguis": 141, "mayb": [141, 260, 261, 262, 263, 264, 473, 474, 549, 692, 694, 695, 696], "20_visualize_epoch": [141, 147], "who": [142, 253, 266, 552, 831, 835, 848, 853, 872], "lexic": [142, 848], "decis": [142, 190, 200, 238, 256, 261, 409, 512, 603, 848], "kiloword_data_fold": 142, "kiloword_data_fil": 142, "capabl": [142, 154, 165, 167, 372, 739, 804, 808, 810, 811, 829, 831, 835, 838, 848, 872], "surviv": [142, 266], "reload": 142, "attach": [142, 168, 198, 212, 224, 236, 429, 827], "numberoflett": [142, 224], "english": [142, 848], "lexicon": 142, "wordfrequ": 142, "render": [142, 155, 159, 171, 253, 261, 262, 268, 269, 271, 272, 275, 276, 277, 464, 473, 474, 552, 692, 739, 748, 769, 786, 792, 797, 798, 802, 805, 807, 831, 837, 854, 855, 872], "orthographicdist": 142, "bigramfrequ": 142, "consonantvowelproport": 142, "450000": 142, "189490": 142, "900000": 142, "700704": 142, "546": [142, 228], "600000": 142, "858537": 142, "484": [142, 194, 202, 223, 241, 551, 595], "700000": 142, "454540": 142, "1095": [142, 207], "539076": 142, "686": [142, 228], "drudgeri": 142, "473684": 142, "556303": 142, "732357": 142, "991226": 142, "545879": 142, "957": [142, 155, 163, 237, 240], "billiard": 142, "500000": [142, 143, 193], "672098": 142, "838597": 142, "958": [142, 224, 228], "698970": 142, "615": [142, 228], "088112": 142, "959": [142, 228], "solenoid": 142, "111111": 142, "301030": 142, "544507": 142, "iloc": [142, 144], "iat": 142, "nindex": 142, "arbitrarili": [142, 157, 228, 854], "highcomplex": 142, "startswith": [142, 872], "district": 142, "disarrai": 142, "disast": 142, "diseas": 142, "discord": 142, "dispos": 142, "267": [142, 167, 168, 223, 241, 846], "lasso": [142, 241, 261, 262, 263, 264, 473, 474, 769, 792, 795, 872], "tentacl": 142, "banjo": 142, "corsag": 142, "fall": [142, 150, 167, 170, 208, 214, 254, 271, 362, 399, 429, 446, 554, 827, 854, 872], "rich": [142, 829, 835], "typhoon": 142, "bungalow": 142, "colossu": 142, "linguist": 142, "dozen": [142, 198, 203, 205, 849], "share": [142, 189, 200, 214, 255, 294, 594, 679, 680, 682, 683, 831, 849, 854, 857, 860, 872], "letter": [142, 169, 187, 224, 241, 739, 872], "n_letter": 142, "sort_ord": 142, "obviou": [142, 170, 198, 203, 215, 231], "reaction": [142, 223, 261, 262, 770, 872], "new_metadata": 142, "foo": [142, 149, 170, 261, 262, 381, 695, 831], "569": [142, 147, 148, 228], "30_epochs_metadata": [142, 147], "eriksen": 143, "flanker": [143, 848], "introductori": [143, 149, 161, 167, 168, 197, 212, 213, 223, 851], "straight": [143, 261, 262, 263, 264, 473, 474, 795], "creation": [143, 148, 154, 167, 199, 214, 253, 255, 258, 261, 262, 271, 274, 305, 404, 564, 565, 854, 872], "ourselv": [143, 174, 202, 203, 205], "incorrect": [143, 175, 199, 200, 241, 829, 854, 872], "sophist": [143, 188, 447], "erp_cor": [143, 848, 862], "infil": 143, "core_subject": 143, "001_task": 143, "flankers_eeg": 143, "all_ev": 143, "all_event_id": 143, "935935": 143, "913": [143, 194, 228], "33793": 143, "target_left": 143, "target_right": 143, "incompat": [143, 614, 620, 829, 872], "decid": [143, 209, 238, 256, 261, 262, 445, 512, 603, 768, 853], "1500": 143, "invalid": [143, 225, 872], "metadata_tmin": 143, "metadata_tmax": 143, "why": [143, 150, 157, 159, 199, 200, 204, 212, 220, 223, 227, 241, 721, 724, 853], "event_nam": [143, 228, 429, 432], "551758": 143, "997070": 143, "434570": 143, "343750": 143, "917969": 143, "425781": 143, "416016": 143, "799": 143, "392578": 143, "990234": 143, "402344": 143, "eleg": 143, "row_ev": [143, 429], "pertain": 143, "sync": [143, 255, 266, 434, 490, 594], "508789": 143, "00000": 143, "503906": 143, "449219": 143, "542969": 143, "792": [143, 194], "496094": 143, "437500": 143, "465820": 143, "796": [143, 194, 228], "547852": 143, "46582": 143, "descriptor": [143, 165, 236, 241, 429, 473, 474, 827], "hed": [143, 150, 236, 241, 429, 827], "inspir": [143, 429, 444, 729, 831, 870], "keep_first": [143, 429], "regardless": [143, 150, 170, 189, 202, 205, 446, 790, 827], "first_respons": [143, 429], "notna": 143, "411133": 143, "454102": 143, "443359": 143, "466797": 143, "400391": 143, "499023": 143, "584961": 143, "226": [143, 168, 183, 207, 223, 227, 228, 232, 872], "421875": 143, "450195": 143, "399414": 143, "316406": 143, "316": [143, 168, 193, 228, 241, 411], "416992": 143, "386719": 143, "410156": 143, "467773": 143, "377930": 143, "483398": 143, "454": [143, 207, 228, 274], "457031": 143, "456": [143, 274], "566406": 143, "395508": 143, "354492": 143, "516": [143, 157, 194, 228], "326172": 143, "432617": 143, "538": [143, 228], "322266": 143, "482422": 143, "484375": 143, "371094": 143, "342773": 143, "704": [143, 228], "307617": 143, "706": [143, 228], "442383": 143, "728": [143, 194, 207], "376953": 143, "first_stimulu": 143, "perfect": [143, 157, 200, 208], "stimulus_sid": 143, "response_correct": 143, "correct_response_count": 143, "rememb": [143, 149, 160, 170, 175, 198, 203, 204, 212, 228, 854], "epochs_tmin": 143, "epochs_tmax": 143, "strong": [143, 182, 198, 203, 227, 552, 649, 654, 847], "099609375": 143, "513": [143, 228], "f8": [143, 158], "fp2": [143, 158, 218, 332, 441, 444, 569, 573], "fp1": [143, 158, 206, 218, 332, 441, 444, 481, 488, 569, 573], "lastli": [143, 171, 207, 209, 237, 238, 831], "vis_erp": 143, "vis_erp_slow": 143, "40_autogenerate_metadata": [143, 147], "276": [143, 168, 194, 228], "userwarn": [143, 175], "asid": [143, 171, 197, 233], "fact": [143, 148, 150, 180, 181, 197, 203, 204, 208, 213, 411, 417, 552, 610, 827, 847, 854], "noisier": [143, 190], "deal": [143, 161, 170, 179, 200, 203, 204, 206, 213, 223, 227, 231, 233, 263, 264, 268, 269, 272, 275, 276, 277, 294, 295, 449, 552, 563, 571, 580, 594, 860, 872], "keep_last": [143, 429], "last_": [143, 429], "last_stimulu": 143, "last_respons": 143, "431641": 143, "576172": 143, "puls": [143, 145, 165, 167, 197, 203, 205, 213, 572, 575, 854], "f7": [143, 158, 332, 495], "c5": [143, 495], "cpz": 143, "isna": 143, "bummer": 143, "impress": 143, "resp_erp_correct": 143, "resp_erp_incorrect": 143, "deflect": [143, 197, 204, 205, 872], "immedi": [143, 155, 167, 198, 203, 206, 238, 254, 422, 473, 474, 555, 603, 664, 667, 748, 792, 827, 831, 853, 854, 872], "doubt": 143, "resp_erp_diff": 143, "bolder": 143, "set_linewidth": 143, "trough_time_idx": 143, "trough_tim": 143, "emili": [143, 200, 241, 848, 872], "kappenman": [143, 200, 241, 848], "jaclyn": [143, 241, 848], "farren": [143, 241, 848], "wendi": [143, 193, 241, 411, 848], "zhang": [143, 241, 848, 854, 872], "andrew": [143, 179, 241, 552, 681, 848, 872], "stewart": [143, 241, 848], "luck": [143, 150, 200, 241, 848], "117465": [143, 241, 848], "nima": [143, 241, 429], "bigd": [143, 241, 429], "shamlo": [143, 241, 429], "kreutz": [143, 241, 429], "delgado": [143, 241, 429], "robbin": [143, 241, 429], "makoto": [143, 241, 429], "miyakoshi": [143, 241, 429], "marissa": [143, 241, 429], "westerfield": [143, 241, 429], "tarik": [143, 241, 429], "bel": [143, 241, 429], "bahar": [143, 241, 429], "koth": [143, 241, 429], "jessica": [143, 241, 429], "hsi": [143, 241, 429], "globalsip": [143, 241, 429], "6736796": [143, 241, 429], "workflow": [144, 154, 199, 848, 850, 872], "200e": [144, 150, 199], "0113": [144, 165, 168, 212], "0112": [144, 165, 168, 212], "0122": [144, 165, 168, 212, 237], "0132": [144, 168], "199795": 144, "320252": 144, "567619": 144, "248584": 144, "609895": 144, "700540": 144, "352746": 144, "908667": 144, "193135": 144, "049675": 144, "702938": 144, "168267": 144, "480975": 144, "182237": 144, "225684": 144, "072452": 144, "186476": 144, "283711": 144, "006895": 144, "912317": 144, "130290": 144, "157198": 144, "842466": 144, "986073": 144, "179816": 144, "040471": 144, "643716": 144, "835772": 144, "517952": 144, "214631": 144, "043144": 144, "672744": 144, "173156": 144, "688943": 144, "974112": 144, "561683": 144, "450115": 144, "778315": 144, "795987": 144, "277138": 144, "timedelta": [144, 214, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "132025e": 144, "156762e": 144, "324858e": 144, "060990e": 144, "870054e": 144, "835275e": 144, "790867e": 144, "049675e": 144, "702938e": 144, "416827e": 144, "748098e": 144, "018224e": 144, "212257e": 144, "072452e": 144, "283711e": 144, "300690e": 144, "691232e": 144, "213029e": 144, "515720e": 144, "178425e": 144, "986073e": 144, "304047e": 144, "643716e": 144, "783577e": 144, "851795e": 144, "521463e": 144, "204314e": 144, "672744e": 144, "568894e": 144, "974112e": 144, "556168e": 144, "450115e": 144, "377831e": 144, "117960e": 144, "727714e": 144, "0133": [144, 168], "dai": [144, 205, 253, 261, 262, 263, 264, 266, 473, 474, 475], "800204787": 144, "379736": 144, "123525": 144, "806864627": 144, "734826": 144, "339465": 144, "813524468": 144, "996158": 144, "627037": 144, "820184308": 144, "748030": 144, "024973": 144, "826844149": 144, "123811": 144, "917677": 144, "pivot": [144, 259, 767, 798], "long_df": [144, 224], "coupl": [144, 209, 212, 233, 408, 584, 838, 856, 872], "1342": [144, 168, 231, 233], "categorydtyp": 144, "nicer": [144, 204, 872], "hue": 144, "peak_lat": 144, "regex": [144, 872], "2123": [144, 168], "idxmax": 144, "melt": 144, "id_var": 144, "var_nam": 144, "value_nam": 144, "satur": [144, 500], "50_epochs_to_data_fram": [144, 147], "equidistantli": 145, "consecut": [145, 167, 231, 268, 269, 272, 275, 276, 277, 446, 512, 554, 555, 872], "briefli": [145, 150, 200, 215, 223], "hous": 145, "compute_proj_ecg": [145, 204, 205, 568, 572, 847, 862, 872], "envelope_correl": [145, 872], "manag": [145, 165, 170, 171, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 408, 415, 418, 421, 422, 448, 461, 463, 473, 474, 511, 514, 515, 525, 526, 535, 536, 541, 552, 557, 564, 565, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 733, 734, 769, 771, 774, 786, 792, 793, 829, 831, 836, 838, 853, 860, 872], "chan": [145, 252, 672], "221": [145, 168, 207, 228], "heart": [145, 197, 202, 241, 721, 724, 872], "beat": [145, 209, 564, 572, 575, 644], "onpca": 145, "onecg": 145, "make_fixed_length_epoch": [145, 256, 862, 872], "unsuit": [145, 872], "event_related_plot": 145, "1142": [145, 168], "n_sensor": [145, 237, 268, 272, 276, 755], "alpha_data": 145, "1530": 145, "epochconnect": 145, "corr_matrix": 145, "first_30": 145, "last_30": 145, "corr_matric": 145, "color_lim": 145, "mpbl": 145, "60_make_fixed_length_epoch": [145, 147], "418": [147, 194, 228, 872], "auto_tutorials_epoch": 147, "raw_fil": [148, 150], "happen": [148, 150, 155, 159, 160, 166, 167, 170, 194, 199, 201, 203, 223, 254, 261, 262, 314, 428, 430, 827, 831, 848, 851, 853, 857, 872], "discuss": [148, 150, 155, 164, 165, 167, 172, 179, 190, 194, 197, 200, 201, 212, 215, 223, 228, 238, 241, 695, 830, 831, 848, 850, 851, 853, 854, 872], "transfer": [148, 194, 198, 200, 581, 827, 847], "maintain": [148, 198, 223, 261, 262, 263, 264, 473, 474, 475, 543, 831, 850, 853, 854, 872], "proven": [148, 872], "never": [148, 261, 262, 315, 570, 757, 831, 854, 872], "72160572e": 148, "57859354e": 148, "98040833e": 148, "75128428e": 148, "15309907e": 148, "83186429e": 148, "bewar": [148, 159, 854], "evoked_subset": 148, "repair": [148, 164, 165, 197, 198, 199, 204, 208, 210, 211, 215, 241, 261, 263, 264, 266, 354, 446, 473, 488, 546, 549, 551, 552, 564, 565, 566, 568, 569, 587, 588, 790, 791, 811, 847, 872], "evk_fil": [148, 149], "evokeds_list": [148, 149], "right_vi": 148, "remedi": 148, "left_right_aud": 148, "6992832460543575": [148, 150], "fairli": [148, 165, 197, 199, 200, 201, 203, 205, 206], "left_aud": 148, "right_aud": 148, "proport": [148, 223, 268, 269, 270, 272, 275, 276, 277, 350, 362, 471, 552, 560, 797, 802, 854, 872], "grand_averag": [148, 150, 862, 872], "intend": [148, 170, 208, 213, 254, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 429, 473, 474, 552, 581, 587, 838], "standard_error": [148, 261, 262, 263, 264, 610, 872], "iter_evok": [148, 150, 261, 262, 872], "ix": [148, 150], "return_amplitud": [148, 150, 263, 264], "10_evoked_overview": [148, 153], "life": [149, 853], "evk": [149, 150], "superimpos": [149, 171, 197, 215, 552, 740, 783], "timeseri": [149, 220, 261, 262, 263, 264, 473, 474, 659, 693], "resembl": [149, 161, 174, 519, 575, 576], "wing": 149, "behav": [149, 200, 212, 265, 266, 434, 872], "time_ranges_of_interest": 149, "drag": [149, 150, 160, 214, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 770, 771, 775, 778, 782, 791, 793, 794, 799, 801, 829, 849], "averaging_dur": 149, "augment": [149, 857], "custom_func": 149, "0x7f17f904aa70": 149, "substr": [149, 615, 627, 872], "action": [149, 170, 831, 857, 860], "ambigu": [149, 269, 275, 277, 872], "temp_list": 149, "_comment": 149, "_evk": 149, "overhead": [149, 639, 734, 872], "trans_fil": 149, "00097": 149, "meg_surf": [149, 511], "_map": 149, "166": [149, 168, 194, 200, 207, 223, 227, 228, 233, 241], "20_visualize_evok": [149, 153], "materi": [150, 161, 831, 851], "link": [150, 188, 241, 268, 272, 276, 440, 753, 797, 831, 837, 851, 854, 860, 872], "events_fil": [150, 199], "discard": [150, 198, 203, 204, 205, 208, 233, 579, 580, 607, 872], "last_samp": [150, 266, 359, 472, 473, 474, 827, 872], "13514": 150, "mislabel": 150, "renam": [150, 188, 209, 212, 255, 261, 262, 263, 264, 309, 337, 473, 474, 481, 488, 628, 739, 749, 804, 831, 839, 872], "lowercas": 150, "channel_renaming_dict": [150, 212], "schemat": 150, "diagram": [150, 203, 827], "addition": [150, 170, 189, 197, 204, 214, 236, 252, 269, 275, 277, 315, 326, 638, 720, 723, 802, 831, 846, 856], "realist": [150, 241, 847, 854], "dedic": [150, 197, 203, 205, 212, 473, 474, 792, 831, 835, 853, 861, 872], "use_browser_backend": [150, 198, 201, 203, 204, 205, 206, 261, 262, 473, 474, 552, 769, 786, 792, 862, 872], "xx": [150, 198, 201, 204, 205, 206, 255, 831], "qt": [150, 170, 171, 198, 201, 203, 204, 205, 206, 261, 262, 473, 474, 552, 739, 769, 786, 792, 808, 811, 829, 851, 872], "scheme": [150, 187, 218, 227, 258, 261, 262, 263, 264, 270, 405, 412, 421, 473, 474, 551, 552, 566, 634, 637, 673, 692, 694, 696, 756, 769, 771, 778, 782, 791, 794, 795, 799, 801, 831, 854, 872], "eeg53": 150, "eog61": 150, "chose": 150, "consol": [150, 835, 872], "duplic": [150, 160, 256, 261, 262, 263, 264, 267, 271, 309, 337, 473, 474, 628, 872], "eeg03": 150, "eeg01": 150, "eeg02": 150, "eeg04": 150, "eeg06": 150, "eeg07": 150, "eeg25": 150, "25auditori": 150, "27buttonpress": 150, "5visual": 150, "28visual": 150, "barplot": [150, 203], "lose": [150, 188, 214, 851], "plot_drop_log": [150, 199, 209, 261, 262, 862, 872], "break": [150, 164, 210, 211, 214, 255, 261, 263, 266, 356, 473, 549, 552, 555, 568, 569, 572, 573, 607, 825, 831, 847, 872], "l_aud": [150, 233], "l_vi": [150, 233], "fig1": [150, 169], "speak": [150, 166, 167, 202, 839], "agreement": [150, 853], "warrant": 150, "popul": [150, 154, 164, 218, 221, 226, 241, 262, 264, 369, 405, 437, 474, 581, 674, 735, 827, 872], "leverag": [150, 853], "verifi": [150, 181, 238, 836, 837, 854], "plain": [150, 202, 238, 329, 817], "ddof": [150, 161, 851], "lime": 150, "revisit": [150, 241, 405], "eeg17": 150, "eeg18": 150, "eeg26": 150, "eeg23": 150, "eeg24": 150, "eeg34": 150, "eeg35": 150, "left_ix": 150, "right_ix": 150, "roi_dict": 150, "left_roi": [150, 261, 262, 263, 264, 770, 775], "right_roi": [150, 261, 262, 263, 264, 770, 775], "roi_evok": 150, "combine_channel": [150, 862, 872], "aud_minus_vi": 150, "29969": 150, "69928": 150, "weak": [150, 203], "chapter": 150, "erplab": [150, 241], "consequ": [150, 161, 168, 208, 352, 353, 354, 434, 445, 490, 539, 851, 854, 872], "voltag": [150, 165, 167, 187, 188, 206, 213, 496, 827, 872], "p100": 150, "submit": [150, 224, 691, 831, 853], "amp": [150, 177, 182, 184, 253, 872], "throughout": [150, 170, 209, 552, 848], "remaind": 150, "print_peak_measur": 150, "3f": [150, 208, 224, 228, 238, 261, 262, 263, 264, 473, 474, 694, 696, 771, 778], "good_tmin": 150, "good_tmax": 150, "eeg55": 150, "578": [150, 228], "508": [150, 224, 228], "priori": [150, 238, 854], "believ": [150, 238, 831, 854], "eeg59": 150, "fist": 150, "l_vis_roi": 150, "ch_roi": 150, "lat_roi": 150, "amp_roi": 150, "FOR": 150, "ONE": [150, 156, 194, 241], "713": 150, "suscept": [150, 201, 571], "challeng": [150, 851, 860], "meth": [150, 171, 831, 872], "guarante": [150, 187, 198, 203, 206, 208, 223, 261, 262, 263, 264, 435, 436, 437, 438, 473, 474, 502, 872], "rise": [150, 489, 598, 604, 827], "crucial": [150, 155, 197, 231], "095": [150, 169, 258, 261, 262, 263, 264, 270, 309, 327, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 763, 771, 773, 775, 778, 779, 782, 789, 791, 793, 794, 795, 799, 801, 872], "bad_tmin": 150, "bad_tmax": 150, "bad_lat_roi": 150, "bad_amp_roi": 150, "898": [150, 228], "487": [150, 166, 173, 207], "unclear": [150, 831], "truli": [150, 200, 679], "pink": [150, 155, 755, 827], "star": 150, "yourself": [150, 155, 168, 197, 201, 212, 253, 263, 264, 484, 778, 831], "c6": 150, "act": [150, 168, 201, 202, 204, 208, 261, 262, 263, 264, 274, 294, 295, 344, 468, 470, 471, 473, 474, 530, 580, 637, 695, 827, 849, 851, 853, 872], "eeg54": 150, "eeg57": 150, "l_vis_mean_roi": 150, "mean_amp_roi": 150, "mean_amp_roi_df": 150, "mean_amp": 150, "numeric_onli": 150, "279764": 150, "685840": 150, "reiter": 150, "hypothes": [150, 223, 224, 860], "l_vis_crop": 150, "mean_amp_al": 150, "mean_amp_all_df": 150, "option_context": 150, "max_column": 150, "689513": 150, "078492": 150, "381191": 150, "609264": 150, "eeg05": 150, "113717": 150, "eeg56": 150, "064174": 150, "259681": 150, "eeg58": 150, "156472": 150, "802306": 150, "eeg60": 150, "878811": 150, "dietrich": [150, 241, 519, 854], "lehmann": [150, 241, 519, 854], "wolfgang": [150, 241, 721, 724], "skrandi": [150, 241], "identif": [150, 203, 241, 566], "checkerboard": [150, 165, 238, 241, 848], "621": [150, 205, 211, 228, 241], "90419": [150, 241], "neurobiologi": [150, 241], "1984": [150, 241], "0301": [150, 241], "0082": [150, 241], "90003": [150, 241], "micah": [150, 241], "brunet": [150, 241], "michel": [150, 184, 241, 384, 552, 652], "s10548": [150, 206, 241, 567, 657], "0054": [150, 241], "ma": [150, 241, 872], "52585": [150, 241], "mitpress": [150, 241], "book": [150, 241, 444, 831], "javier": [150, 241], "lopez": [150, 241], "calderon": [150, 241], "00213": [150, 241], "preclud": [150, 200, 208, 241, 580], "00131": [150, 200, 241], "rufin": [150, 200, 241], "vanrullen": [150, 200, 241], "fallaci": [150, 200, 241], "00365": [150, 200, 241], "nichola": [150, 241], "gaspelin": [150, 241], "12639": [150, 241], "30_eeg_erp": [150, 153], "perspect": [151, 204, 739], "satisfi": [151, 160, 223, 294, 295, 674, 694, 696, 854], "40_whiten": [151, 153], "repetit": [152, 164, 657], "731": [153, 194, 207, 228], "auto_tutorials_evok": 153, "outer": [154, 157, 159, 160, 182, 253, 304, 552, 580, 739, 785, 827, 832, 835, 838, 847, 848, 851, 854, 857], "tissu": [154, 157, 827], "boundari": [154, 157, 171, 181, 190, 215, 258, 261, 262, 263, 264, 267, 270, 271, 360, 405, 412, 463, 473, 474, 551, 552, 571, 597, 657, 671, 692, 694, 696, 739, 744, 756, 757, 771, 778, 782, 791, 793, 794, 799, 801, 827, 837, 857, 872], "analog": [154, 187, 189, 194, 204, 208, 261, 262, 263, 264, 440, 473, 474, 481, 488, 494, 549, 692, 694, 695, 696, 827, 857, 872], "freesurfer_hom": [154, 368, 837], "setupfreesurf": 154, "sh": [154, 834, 837], "folder": [154, 155, 157, 160, 169, 187, 212, 271, 274, 300, 304, 335, 373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 453, 454, 459, 489, 500, 604, 636, 755, 757, 831, 834, 837, 872], "my_subject": 154, "my_nifti": 154, "subfold": [154, 381], "beforehand": [154, 261, 262, 769, 807], "set_config": [154, 170, 261, 262, 371, 381, 453, 473, 474, 552, 737, 769, 786, 792, 829, 831, 847, 862, 872], "overview": [154, 155, 164, 169, 172, 173, 179, 199, 203, 205, 210, 211, 223, 237, 246, 261, 262, 263, 264, 266, 272, 350, 446, 473, 474, 518, 519, 533, 549, 552, 568, 569, 572, 573, 692, 722, 763, 769, 772, 786, 792, 808, 827, 851], "buckner40not": 154, "standalon": [154, 833, 864, 872], "624": [154, 163, 228], "10_background_freesurf": [154, 163], "landmark": [155, 218, 332, 362, 827, 847, 854, 857, 872], "t1w": [155, 309], "nifti1imag": [155, 181, 273, 276, 277, 304], "xyzt_unit": 155, "uint8": 155, "t1_mgh": 155, "mghimag": [155, 854], "draw": [155, 169, 175, 176, 200, 225, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 575, 692, 694, 696, 756, 762, 763, 770, 771, 773, 778, 782, 785, 791, 794, 795, 799, 801, 854, 857, 872], "ight": 155, "nterior": 155, "longest": 155, "uperior": 155, "camera": [155, 159, 263, 264, 464, 739, 753, 755, 774, 807, 872], "dens": [155, 156, 157, 159, 181, 182, 189, 241, 253, 274, 305, 560, 739, 755, 872], "dig_mri_dist": [155, 362, 862, 872], "na": [155, 238, 480, 827], "preauricular": [155, 309, 333, 827, 854], "manufactur": [155, 169, 187, 188, 189, 827, 854, 860, 872], "faq": [155, 188, 200, 206, 306, 367, 481, 580, 852], "intersect": [155, 159, 160, 183, 580, 597, 847, 872], "purpl": [155, 157, 233], "perpendicular": [155, 177, 854], "goe": [155, 159, 200, 214, 854], "upward": [155, 159, 203, 207, 739, 763], "compani": [155, 241, 674, 853], "acquir": [155, 198, 281, 282, 304, 495, 843, 848, 853, 854, 857, 872], "emit": [155, 207, 255, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 281, 282, 313, 336, 345, 346, 351, 355, 358, 360, 362, 365, 366, 424, 439, 452, 455, 473, 474, 493, 552, 581, 600, 629, 631, 692, 694, 695, 696, 736, 772, 783, 818, 820, 827, 872], "coregist": [155, 304, 464], "front": [155, 263, 264, 303, 424, 739, 773, 827, 854], "magenta": 155, "1mm": 155, "anisotrop": [155, 241, 854], "incorrectli": [155, 465, 851, 872], "identity_tran": 155, "mri_voxel": [155, 322, 504, 727], "corner": [155, 190, 200, 201, 204, 215, 253, 261, 262, 263, 264, 266, 473, 474, 752, 763, 769, 777, 792, 857, 872], "inferior": [155, 159, 827], "seghead_rr": 155, "seghead_tri": 155, "read_surfac": [155, 159, 160, 267, 626, 641, 825, 847, 862, 872], "mri_to_head": 155, "scalp_pts_in_head_coord": 155, "head_to_meg": 155, "scalp_pts_in_meg_coord": 155, "vox_to_mri": 155, "get_vox2ras_tkr": [155, 159, 181], "mri_to_vox": 155, "scalp_points_in_vox": 155, "nose": [155, 206, 303], "roughli": [155, 351, 571, 829, 872], "blur": [155, 854], "fiffv_point_cardin": [155, 159, 266, 857], "fiffv_point_nas": [155, 159, 266, 857], "fiffv_coord_head": [155, 265, 266, 857], "nasion_mri": [155, 159], "nasion_vox": [155, 159], "toggl": [155, 165, 171, 190, 198, 203, 215, 261, 262, 473, 474, 552, 739, 769, 784, 786, 792, 808, 872], "radio": [155, 860], "icon": [155, 171], "fid": [155, 691], "icp": [155, 872], "finetun": 155, "inner_skul": [155, 157, 158, 160, 171, 182, 274, 629, 755, 847, 848], "outer_skul": [155, 157, 158, 160, 169, 171, 274, 755, 847, 848], "equiv": [155, 182, 183, 184, 206], "rv": [155, 182, 183, 184, 206, 848], "00349057": [155, 206], "mu1": [155, 182, 183, 184, 206], "944702": [155, 206], "lambda1": [155, 182, 183, 184, 206], "137194": [155, 206], "mu2": [155, 182, 183, 184, 206], "667435": [155, 206], "683781": [155, 206], "mu3": [155, 182, 183, 184, 206], "26548": [155, 206], "lambda3": [155, 182, 183, 184, 206], "0106058": [155, 206], "6156": 155, "2300": 155, "1904": 155, "20_source_align": [155, 163], "hsp": [156, 187, 253, 309, 322, 334, 362, 496, 606, 854, 872], "preprat": 156, "jon": [156, 241, 872], "houck": [156, 241, 872], "faveli": [156, 859, 872], "skin": [156, 157, 160, 253, 261, 262, 263, 264, 304, 362, 473, 474, 549, 692, 694, 695, 696, 827, 848, 851, 854, 872], "fit_fiduci": [156, 362], "fit_icp": [156, 362], "n_iter": [156, 362, 578], "nasion_weight": [156, 362], "omit_head_shape_point": [156, 362], "compute_dig_mri_dist": [156, 362], "write_tran": [156, 625, 862], "abil": [156, 177, 179, 194, 650, 651, 720, 723, 849, 853, 860, 872], "set_scale_mod": [156, 362], "fetch_infant_templ": [156, 158, 848, 862, 872], "scale_mri": [156, 362, 632, 862, 872], "clau": [156, 241], "plo": [156, 194, 241], "e0232100": [156, 241], "pone": [156, 194, 241], "0232100": [156, 241], "644": [156, 158, 163, 194], "25_automated_coreg": [156, 163], "concept": [157, 175, 223, 241, 827, 855, 858], "make_watershed_bem": [157, 190, 827, 851, 862, 872], "make_flash_bem": [157, 300, 827, 862, 872], "plot_bem": [157, 159, 306, 755, 851, 854, 862, 872], "plot_bem_kwarg": 157, "brain_surfac": [157, 757], "mrilab": [157, 857], "isn": [157, 165, 220, 238, 257, 261, 376, 398, 399, 614, 617, 620, 695, 831, 851], "candid": [157, 198, 827, 853], "oct4": 157, "90mm": 157, "57798": 157, "24365": 157, "20377": 157, "32480": 157, "22941": 157, "2787": 157, "9357": 157, "20154": 157, "846": [157, 181, 194, 228], "10797": 157, "12738": 157, "13170": 157, "10203": 157, "2362": [157, 203, 241, 552], "10376": 157, "midpoint": [157, 189, 263, 264, 405, 412, 552, 757, 782, 854, 872], "make_bem_model": [157, 160, 190, 274, 362, 424, 455, 510, 516, 600, 629, 631, 820, 847, 862, 872], "4th": [157, 197, 261, 262, 263, 264, 407, 416, 440, 441, 443, 444, 473, 474, 564, 565], "icosahedron": [157, 159, 160, 253, 268, 272, 276, 640, 797], "n_tri": [157, 159, 267, 820], "topologi": [157, 200, 539, 872], "commonli": [157, 167, 169, 174, 200, 238, 266, 463, 552, 827, 872], "474": [157, 207, 228, 274], "gone": 157, "adequ": [157, 205, 266], "235": [157, 168, 180, 227, 228], "1422": [157, 168, 207], "fwd_fix": 157, "explicitli": [157, 171, 187, 194, 199, 201, 202, 203, 231, 256, 261, 262, 263, 264, 266, 271, 294, 295, 300, 307, 310, 326, 351, 355, 356, 365, 366, 367, 405, 407, 412, 421, 426, 443, 444, 448, 449, 468, 470, 471, 473, 474, 505, 530, 551, 552, 554, 567, 568, 569, 574, 578, 586, 588, 595, 597, 637, 644, 645, 646, 655, 656, 658, 660, 678, 679, 680, 681, 682, 683, 692, 694, 695, 696, 700, 701, 702, 703, 705, 723, 763, 769, 770, 773, 775, 776, 779, 788, 793, 829, 831, 847, 853, 860, 872], "src_hemi": 157, "apply_forward": [157, 282, 862, 872], "write_forward_solut": [157, 612, 862, 872], "justifi": [157, 444, 473, 474, 872], "claim": 157, "567": [157, 163, 228, 241], "30_forward": [157, 163], "centimet": 158, "fs_dir": [158, 382], "live": [158, 200, 831, 872], "1005": 158, "new_nam": 158, "rstrip": 158, "fp": [158, 441, 650], "999994": 158, "003552": 158, "000202": 158, "003558": 158, "998389": 158, "056626": 158, "000001": [158, 224, 227], "998395": 158, "2433": [158, 168], "7809": 158, "4023": 158, "8001": 158, "4265": 158, "6mo": [158, 384], "ants6": 158, "0months3t": 158, "come": [158, 174, 180, 187, 188, 200, 201, 203, 205, 214, 224, 238, 267, 272, 368, 495, 513, 607, 827, 829, 831, 835, 836, 848, 854, 872], "fname_1020": 158, "mon": [158, 495], "read_dig_fif": [158, 309, 322, 325, 328, 329, 330, 332, 333, 334, 854, 862, 872], "03d": [158, 490], "99975431": 158, "01839625": 158, "01236795": 158, "00087239": 158, "0143472": 158, "96230429": 158, "27159646": 158, "01252444": 158, "01689809": 158, "27135229": 158, "96233177": 158, "03137219": 158, "48640": 158, "48214": 158, "287": [158, 163, 168, 207, 228], "35_eeg_no_mri": [158, 163], "readabl": [159, 261, 262, 263, 264, 370, 407, 416, 441, 443, 444, 473, 474, 812, 831], "superior": [159, 269, 275, 277, 615, 739, 827, 854], "wide": [159, 165, 212, 831, 853], "unfamiliar": [159, 835], "unsign": [159, 268, 269, 272, 275, 276, 277, 872], "triplet": [159, 266, 449, 519, 642], "geograph": 159, "earth": 159, "north": 159, "prime": [159, 169], "meridian": 159, "degre": [159, 161, 204, 223, 225, 228, 231, 253, 258, 263, 264, 266, 300, 304, 484, 578, 645, 679, 680, 682, 683, 692, 739, 744, 775, 807, 837, 851, 854, 872], "nonetheless": [159, 200], "scanner": [159, 274, 467, 848, 854], "nativ": [159, 181, 187, 188, 261, 262, 263, 264, 313, 322, 327, 435, 436, 437, 438, 473, 474, 490, 496, 606, 739, 741, 848, 851, 860, 872], "mind": [159, 161, 174, 200, 252, 831], "si": [159, 189, 223, 237, 261, 262, 263, 264, 295, 449, 473, 474, 773, 775], "xyz_ra": 159, "00000000e": 159, "15484021e": 159, "91852465e": 159, "22726395e": 159, "56816911e": 159, "57160827e": 159, "18960930e": 159, "49011647e": 159, "40284092e": 159, "00712036e": 159, "726": [159, 228], "ras_coords_mm": 159, "inv_affin": 159, "i_": [159, 187], "j_": 159, "k_": 159, "imshow_mri": 159, "ori_slic": 159, "saggit": 159, "ori_nam": 159, "set_path_effect": 159, "reorient": 159, "rightward": 159, "x_order": 159, "lip": 159, "y_order": 159, "torig": 159, "vox2ras_tkr": [159, 181], "conform": [159, 189, 255, 854, 872], "matter": [159, 169, 261, 262, 263, 264, 267, 463, 473, 474, 505, 552, 597, 692, 694, 695, 696, 773, 847, 853, 872], "freeurfer": 159, "whenev": [159, 200, 831, 849], "everywher": 159, "xyz_mri": 159, "digpoint": [159, 362, 872], "nasion_head": 159, "nasion_dig_mri": 159, "nasion_dig_vox": 159, "convention": 159, "rr_mm": 159, "313728": 159, "80481719970703": 159, "rr_vox": 159, "tricontour": 159, "renderer_kwarg": 159, "curv": [159, 194, 261, 262, 263, 264, 266, 473, 474, 653, 690, 694, 696, 854, 857], "read_curvatur": [159, 862], "y_shift": 159, "z_shift": 159, "this_rr": 159, "this_tri": 159, "copper_r": 159, "quiver3d": [159, 204, 872], "1050": 159, "wirefram": 159, "cyan": [159, 473, 474, 792], "line_width": 159, "cull": 159, "render_lines_as_tub": 159, "uniformli": [159, 190, 205, 470], "uniform": [159, 362, 426, 519, 644, 659, 682, 683, 827, 872], "subsampl": [159, 256, 259, 260, 261, 262, 263, 264, 268, 269, 272, 274, 275, 276, 277, 473, 474, 509, 568, 569, 640, 678, 692, 695, 704, 739, 847, 872], "rr_sph": 159, "mri_mni_tran": 159, "xyz_mni": 159, "02248488": 159, "00844919": 159, "03621711": 159, "00111715": 159, "07107091": 159, "91486582": 159, "40609791": 159, "02300193": 159, "00875602": 159, "43369992": 159, "02811882": 159, "03356932": 159, "land": [159, 218], "231": [159, 163, 168, 223], "50_background_freesurfer_mn": [159, 163], "aris": [160, 197, 571], "ezemikulan": 160, "blender_freesurf": 160, "ezequiel": [160, 872], "mikulan": [160, 872], "manorama": [160, 872], "kadwani": [160, 872], "shutil": 160, "flash": [160, 274, 300, 304, 577, 755, 872], "surf_dir": 160, "problemat": [160, 188, 200, 203, 204, 208, 223, 261, 262, 271, 305, 327], "skill": 160, "conv": 160, "conv_dir": 160, "makedir": 160, "exist_ok": 160, "read_metadata": [160, 623], "write_surfac": [160, 623, 626, 862, 872], "wavefront": [160, 623, 825, 872], "vert": [160, 177, 220, 238, 274], "preset": [160, 268, 269, 272, 275, 276, 277, 739, 797, 802], "beginn": [160, 833, 856], "teach": [160, 176, 241, 872], "_fix": 160, "inner_skull_fix": 160, "backup": 160, "mistak": [160, 831, 851], "inner_skull_orig": 160, "volume_info": [160, 623, 825], "vol_info": 160, "faulti": 160, "write_head_bem": [160, 862, 872], "head_dir": 160, "read_bem_surfac": [160, 509, 510, 599, 862, 872], "make_scalp_surfac": [160, 838, 862, 872], "shrinkwrap": 160, "\u2460": 160, "\u2461": 160, "\u2462": 160, "\u2464": 160, "tab": [160, 253, 464, 540, 747, 831, 849], "\u2465": 160, "\u2467": 160, "noth": [160, 183, 184, 199, 258, 261, 262, 263, 264, 270, 273, 351, 362, 405, 412, 416, 418, 473, 474, 551, 552, 566, 634, 692, 694, 696, 742, 752, 756, 771, 778, 782, 791, 794, 799, 801, 848, 857, 872], "\u2468": 160, "extrus": 160, "extrud": 160, "rough": [160, 851], "ahead": [160, 831], "kernel": [160, 189, 193, 223, 238, 241, 268, 269, 272, 275, 276, 277, 411, 645, 829, 835, 837, 851, 872], "mri_convert": [160, 854], "fwhm": [160, 708, 718, 722, 862, 872], "t1_smoothed_3": 160, "delet": [160, 170, 198, 199, 209, 255, 258, 261, 262, 263, 264, 270, 360, 405, 412, 473, 474, 551, 552, 566, 636, 692, 694, 696, 756, 778, 782, 791, 794, 799, 831, 839, 854, 872], "cleaner": [160, 200], "encount": [160, 164, 188, 200, 439, 829, 837, 851], "runtimeerror": 160, "20516": 160, "isomorph": 160, "defect": [160, 253, 305, 362, 424, 455, 600, 629, 631, 820, 851, 872], "1014": [160, 207], "2068": 160, "7732": 160, "8435": [160, 872], "8489": 160, "10181": 160, "11120": [160, 872], "11121": 160, "11122": [160, 872], "11304": 160, "11788": 160, "disrupt": 160, "999668": 160, "wrong": [160, 830, 872], "easiest": [160, 197, 199, 201, 218, 831, 834], "unedit": 160, "gpl": 160, "water": 160, "clean_from_arrai": 160, "908": [160, 163, 228], "80_fix_bem_in_blend": [160, 163], "bb": [161, 434], "pp": [161, 261, 262, 297, 426, 674], "desc": [161, 204, 270], "66000": 161, "write_cov": [161, 601, 862, 872], "noise_cov_baselin": 161, "noise_cov_reg": 161, "1769": 161, "1785": 161, "423": [161, 174, 186, 228], "1797": 161, "freedom": [161, 204, 223, 225, 228, 231, 258, 263, 264, 464, 679, 680, 682, 683, 755, 774, 851, 872], "violat": [161, 831, 851], "hack": [161, 238], "evoked_meg": 161, "empty_room": 161, "improp": [161, 872], "overestim": [161, 202], "juha": [161, 208, 241, 580, 851], "simola": [161, 208, 241, 580, 851], "kajola": [161, 208, 241, 426, 563, 580, 851, 854], "3359": [161, 241, 851], "3372": [161, 241, 851], "tsp": [161, 203, 241, 351, 552, 851], "853302": [161, 241, 851], "861": [161, 163], "90_compute_covari": [161, 163], "auto_tutorials_forward": 163, "emphasi": [164, 263, 264, 773, 855], "topic": [164, 165, 188, 197, 200, 202, 241, 294, 846, 855, 856], "knowledg": [164, 238, 847, 853], "unexplain": 164, "experienc": [164, 554, 853], "troubl": [164, 872], "configur": [164, 167, 172, 173, 189, 205, 212, 228, 261, 262, 266, 354, 381, 453, 454, 464, 473, 474, 496, 530, 540, 552, 564, 565, 636, 639, 691, 734, 739, 769, 786, 792, 805, 806, 807, 829, 836, 848, 850, 851, 854, 857, 860, 862, 872], "infrar": [164, 189, 210, 211, 241, 261, 262, 263, 264, 266, 350, 434, 473, 474, 500, 549, 582, 583, 584, 586, 692, 694, 695, 696, 739, 763, 772, 777, 838, 848, 854, 872], "spectroscopi": [164, 189, 210, 211, 241, 261, 262, 263, 264, 266, 350, 434, 473, 474, 500, 549, 582, 583, 584, 586, 692, 694, 695, 696, 739, 763, 772, 777, 838, 848, 854, 872], "ssvep": [164, 169, 239, 240, 261, 266, 309, 325, 434, 483, 549, 694, 801, 862, 872], "vssr": [164, 239, 240, 261, 266, 309, 325, 434, 483, 549, 694, 801, 848], "bti": [164, 185, 186, 223, 258, 259, 261, 263, 264, 266, 299, 351, 446, 448, 484, 516, 755, 767, 854, 872], "twowai": [164, 229, 230, 261, 266, 473, 549, 607, 673, 675, 676, 680, 695, 722, 872], "anova": [164, 194, 223, 226, 229, 230, 234, 235, 261, 263, 264, 266, 272, 274, 357, 473, 518, 519, 533, 549, 607, 622, 664, 673, 674, 675, 676, 680, 683, 684, 695, 722, 739, 872], "spatiotempor": [164, 225, 229, 230, 241, 261, 263, 264, 266, 315, 473, 549, 580, 607, 672, 679, 683, 684, 695, 722, 760, 763, 872], "strf": [164, 195, 196, 411, 417, 445], "submodul": [164, 165, 197, 203, 205, 212, 218, 221, 831, 872], "corrupt": [164, 197, 198, 221, 222, 258, 261, 264, 265, 266, 267, 272, 351, 361, 446, 473, 518, 519, 533, 612, 615, 656, 659, 739, 851, 872], "auto_tutorials_python": 164, "auto_tutorials_jupyt": 164, "varieti": [165, 187, 189, 197, 212, 854], "smoothli": [165, 199, 212, 258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 771, 778, 782, 791, 794, 799], "substitut": [165, 368, 829, 853, 854], "glimps": [165, 212], "41700": 165, "custom_ref_appli": [165, 168, 212, 218, 266, 872], "file_id": [165, 168, 212, 261, 262, 263, 264, 266, 473, 474, 475, 857, 872], "hpi_mea": [165, 168, 212, 266, 872], "hpi_result": [165, 168, 212, 266, 872], "meas_dat": [165, 167, 168, 199, 212, 214, 218, 255, 261, 262, 263, 264, 266, 472, 473, 474, 475, 552, 581, 786, 792, 872], "utc": [165, 168, 212, 214, 261, 262, 263, 264, 266, 473, 474, 872], "meas_id": [165, 168, 212, 261, 262, 263, 264, 266, 473, 474, 475, 857, 872], "breviti": 165, "walk": [165, 203, 205], "orig_raw": 165, "chan_idx": 165, "sent": [165, 167, 189, 190, 203, 213], "deliveri": 165, "squarewav": 165, "unambigu": [165, 167], "older": [165, 167, 169, 317, 425, 473, 857, 872], "summat": [165, 167, 200, 684], "6994": 165, "7086": 165, "7192": 165, "7304": 165, "7413": 165, "ordinari": [165, 167, 198, 204, 223, 569, 573, 677, 853], "autoreject": [165, 198, 199, 838], "aren": [165, 206, 449], "fewest": 165, "conds_we_care_about": 165, "aud_epoch": 165, "vis_epoch": 165, "271": [165, 168, 207, 211, 228], "richer": 165, "aud_evok": 165, "vis_evok": 165, "classic": [165, 238, 268, 269, 272, 275, 276, 277, 721, 724, 739, 797, 802], "p200": [165, 190], "dorso": 165, "evoked_diff": [165, 209], "underdetermin": 165, "akin": 165, "inverse_operator_fil": 165, "inv_oper": 165, "\u03bb\u00b2": 165, "61922423e": 165, "06837855e": 165, "49139511e": 165, "673": [165, 173, 228], "10_overview": [165, 173], "obligatorili": 166, "unexpect": [166, 194, 241, 261, 262, 263, 264, 315, 351, 500, 851], "apply_funct": [166, 261, 262, 263, 264, 473, 474, 872], "unprocess": [166, 857], "original_raw": 166, "complex128": [166, 261, 262, 263, 264, 473, 474], "certain": [166, 167, 190, 197, 201, 203, 208, 237, 259, 263, 264, 381, 431, 460, 473, 474, 530, 552, 570, 581, 679, 680, 773, 805, 829, 831, 853, 854, 872], "rereferenc": [166, 238], "unaffect": [166, 201, 411], "rereferenced_raw": 166, "ref_data": [166, 637], "fig_orig": 166, "fig_reref": 166, "unless": [166, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 405, 408, 412, 415, 418, 421, 422, 424, 429, 448, 450, 461, 463, 468, 470, 471, 473, 474, 483, 511, 514, 515, 525, 526, 530, 535, 536, 551, 552, 557, 564, 565, 580, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 729, 763, 769, 770, 771, 774, 778, 782, 786, 792, 793, 794, 831, 853, 854, 872], "568": [166, 173, 207], "15_inplac": [166, 173], "broadli": 167, "ram": [167, 197, 199, 212, 213, 214, 215, 261, 262, 473, 474, 552, 769, 786, 792, 872], "36037": [167, 197, 201, 204, 205, 206, 208, 213, 214, 215], "necessarili": [167, 169, 188, 197, 199, 202, 254, 261, 262, 294, 708, 718, 722, 748, 854], "instantan": [167, 220], "receiv": [167, 189, 426, 490, 653, 829, 854, 872], "rectangular": [167, 200, 223, 268, 269, 272, 275, 276, 277, 797, 802], "ttl": [167, 594], "upcom": 167, "newer": [167, 169, 203, 829, 834, 837, 839, 872], "27977": 167, "28345": 167, "28771": 167, "29219": 167, "29652": 167, "preced": [167, 261, 262, 357, 465, 739, 769, 827, 831, 872], "config": [167, 170, 187, 253, 254, 261, 262, 371, 373, 374, 375, 376, 378, 379, 381, 382, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 446, 447, 453, 454, 464, 473, 474, 484, 542, 552, 619, 629, 632, 636, 739, 748, 769, 786, 792, 831, 872], "mne_stim_channel": [167, 170, 254, 446, 447, 473, 474], "mne_stim_channel_1": [167, 254, 446, 447], "saver": [167, 199, 201, 849, 851], "testing_data_fold": 167, "eeglab_raw_fil": 167, "eeglab_raw": 167, "began": 167, "000068": 167, "217": [167, 168, 207, 214, 228], "unmodifi": [167, 206, 500], "custom_map": 167, "annotations_from_ev": [167, 255, 434, 862, 872], "orig_tim": [167, 199, 214, 255, 280, 872], "annot_from_ev": 167, "event_desc": [167, 280], "rem_annot": 167, "rem_ev": 167, "rem_event_dict": 167, "modulo": 167, "onlin": [167, 198, 203, 215, 254, 843, 856, 872], "653": [167, 173, 193, 194, 228], "20_events_from_raw": [167, 173], "alon": [168, 843], "gantri": [168, 266, 872], "blank": [168, 212, 692, 837, 872], "subject_info": [168, 261, 262, 263, 264, 266, 473, 474, 475, 872], "device_info": [168, 261, 262, 263, 264, 266, 437, 473, 474, 475, 872], "helium_info": [168, 261, 262, 263, 264, 266, 473, 474, 475, 872], "hpi_subsystem": [168, 266], "proc_histori": [168, 261, 262, 263, 264, 266, 473, 474, 475], "proj_id": [168, 212, 261, 262, 263, 264, 266, 473, 474, 475], "proj_nam": [168, 212, 261, 262, 263, 264, 266, 473, 474, 475], "utc_offset": [168, 261, 262, 263, 264, 266, 473, 474, 475, 872], "line_freq": [168, 238, 266], "gantry_angl": [168, 266], "ctf_head_t": [168, 266, 857], "dev_ctf_t": [168, 266, 857], "acq_par": [168, 212, 254, 266], "acq_stim": [168, 266], "xplotter_layout": [168, 266], "kit_system_id": [168, 266], "0143": 168, "0142": 168, "0213": 168, "0212": [168, 332], "0222": 168, "0223": 168, "0232": 168, "0233": 168, "0313": 168, "0312": 168, "0322": 168, "0323": 168, "0333": 168, "0332": 168, "0343": 168, "0342": 168, "0413": 168, "0412": 168, "0422": 168, "0423": 168, "0432": 168, "0433": 168, "0443": 168, "0442": 168, "0513": 168, "0512": 168, "0523": [168, 241, 657], "0522": 168, "0532": 168, "0533": 168, "0542": 168, "0543": 168, "0613": 168, "0612": 168, "0622": 168, "0623": 168, "0633": 168, "0632": 168, "0643": 168, "0713": 168, "0712": 168, "0723": 168, "0722": 168, "0733": 168, "0732": 168, "0743": 168, "0742": 168, "0813": 168, "0822": 168, "0823": 168, "0913": 168, "0912": 168, "0923": 168, "0922": 168, "0932": 168, "0933": 168, "0943": 168, "1012": 168, "1023": 168, "1022": 168, "1032": [168, 207], "1042": [168, 332], "1112": 168, "1113": [168, 207], "1123": [168, 207], "1122": [168, 201], "1133": 168, "1132": 168, "1143": 168, "1213": 168, "1212": 168, "1223": 168, "1222": 168, "1232": 168, "1233": [168, 207], "1243": 168, "1242": [168, 194], "1312": 168, "1313": 168, "1322": 168, "1343": 168, "1412": 168, "1413": 168, "1423": [168, 193], "1433": 168, "1432": [168, 193], "1442": 168, "1443": 168, "1512": [168, 241, 468], "1513": 168, "1523": [168, 241, 708, 718, 719, 721, 722, 724], "1533": 168, "1532": [168, 207], "1543": 168, "1542": 168, "1612": 168, "1622": 168, "1623": 168, "1632": [168, 207], "1633": 168, "1642": 168, "1713": 168, "1712": 168, "1722": 168, "1723": 168, "1732": 168, "1733": 168, "1743": 168, "1742": 168, "1813": 168, "1812": 168, "1822": 168, "1823": 168, "1832": 168, "1833": 168, "1843": 168, "1912": 168, "1913": 168, "1923": 168, "1922": 168, "1933": 168, "1943": 168, "1942": 168, "2023": 168, "2032": 168, "2033": 168, "2042": 168, "2112": 168, "2122": 168, "2133": 168, "2132": 168, "2143": [168, 241, 721, 724], "2142": [168, 193], "2212": 168, "2213": 168, "2223": 168, "2222": 168, "2233": 168, "2242": [168, 212], "2243": 168, "2312": 168, "2313": [168, 208], "2323": 168, "2322": 168, "2333": [168, 546], "2343": 168, "2342": 168, "2412": 168, "2413": 168, "2422": 168, "2432": 168, "2442": 168, "2512": 168, "2513": 168, "2523": 168, "2533": 168, "2543": 168, "2542": 168, "2612": 168, "2613": 168, "2623": 168, "2633": 168, "bear": [168, 831, 851, 872], "scanno": [168, 266, 857], "logno": [168, 266, 857], "cal": [168, 266, 317, 472, 857], "coil_typ": [168, 266, 848], "unit_mul": [168, 266, 857], "131": [168, 186, 223, 227, 228, 332], "162": [168, 194, 207, 223, 228, 241, 274], "185": [168, 199, 223, 228, 274], "194": [168, 194, 223, 228, 241, 854, 872], "197": [168, 207, 223, 227, 848], "206": [168, 207, 227, 228], "208": [168, 170, 187, 223, 227, 228, 241], "209": [168, 183, 200, 207, 228, 241], "212": [168, 200, 215, 217, 223, 227, 228, 241], "215": [168, 207, 228, 241, 567], "216": [168, 217, 227, 228], "218": [168, 200, 223, 227, 241], "224": [168, 170, 187, 194, 223, 228], "228": [168, 207, 227, 228, 241, 567], "233": [168, 223, 227, 228], "237": [168, 207, 227], "254": [168, 227, 228], "278": [168, 207, 228], "279": [168, 201, 223, 241, 552, 721, 724], "285": [168, 194], "286": [168, 223, 228], "292": [168, 207, 223, 228], "294": [168, 228], "296": [168, 207, 228], "308": [168, 223, 228], "309": [168, 207, 228, 241, 584, 721, 724], "315": [168, 228, 872], "318": [168, 207, 223, 228], "321": [168, 179, 186, 200, 228], "322": [168, 207, 223, 228], "327": [168, 228], "oxyhemoglobin": [168, 261, 262, 263, 264, 473, 474, 549, 692, 694, 695, 696, 827, 854], "deoxyhemoglobin": [168, 189, 261, 262, 263, 264, 473, 474, 549, 692, 694, 695, 696, 827, 854], "hbo": [168, 189, 209, 212, 218, 261, 262, 263, 264, 308, 367, 369, 473, 474, 549, 692, 694, 695, 696, 827, 854], "hbr": [168, 189, 209, 212, 218, 261, 262, 263, 264, 308, 367, 369, 473, 474, 549, 692, 694, 695, 696, 827, 854], "express": [168, 198, 422, 434, 481, 488, 494, 527, 546, 571, 598, 615, 706, 853, 854, 857, 872], "pick_channels_regexp": [168, 198, 203, 205, 543, 862], "unawar": 168, "accident": [168, 214, 657, 872], "channel_typ": [168, 203, 261, 262, 263, 264, 266, 473, 474, 552, 692, 694, 695, 696, 862], "emb": 168, "comprehens": [168, 194, 212, 223, 225, 405, 831, 853], "channel_indices_by_typ": [168, 862], "ch_idx_by_typ": 168, "exci": [168, 212, 261, 262, 263, 264, 308, 473, 474, 549, 692, 694, 695, 696, 854], "ia": [168, 212, 261, 262, 263, 264, 266, 308, 473, 474, 549, 692, 694, 695, 696, 854, 872], "syst": [168, 212, 261, 262, 263, 264, 308, 473, 474, 549, 692, 694, 695, 696, 854], "bio": [168, 218, 261, 262, 263, 264, 308, 369, 438, 473, 474, 488, 549, 692, 694, 695, 696, 854], "temperatur": [168, 261, 262, 263, 264, 308, 473, 474, 549, 692, 694, 695, 696, 848, 854, 872], "gsr": [168, 261, 262, 263, 264, 308, 473, 474, 549, 692, 694, 695, 696, 854, 872], "fnirs_cw_amplitud": [168, 189, 209, 261, 262, 263, 264, 367, 473, 474, 827], "fnirs_fd_ac_amplitud": [168, 189, 261, 262, 263, 264, 367, 473, 474, 827], "fnirs_fd_phas": [168, 189, 261, 262, 263, 264, 367, 473, 474, 827], "fnirs_od": [168, 261, 262, 263, 264, 367, 473, 474, 827], "eeg_indic": 168, "ipython": [168, 261, 262, 473, 474, 552, 769, 786, 792, 829, 842, 851, 853, 855], "30_info": [168, 173], "mplot3d": [169, 204, 223], "axes3d": [169, 204, 223, 259, 261, 262, 263, 264, 473, 474, 767, 795, 872], "plai": [169, 203, 220, 238, 720, 723, 853, 854], "eeg_posit": 169, "builtin_montag": 169, "montage_nam": 169, "montage_descript": 169, "standard_alphabet": 169, "a1": [169, 206], "b2": 169, "standard_postfix": 169, "postfix": 169, "intermedi": [169, 198, 267, 286, 288, 678, 739, 854], "standard_prefix": 169, "standard_prim": 169, "biosemi16": [169, 223], "biosemi": [169, 223, 335, 481, 854], "cap": [169, 194, 223, 827, 848, 872], "biosemi32": [169, 223], "biosemi64": [169, 223], "biosemi160": 169, "biosemi256": 169, "easycap": [169, 223, 238, 872], "m10": [169, 872], "egi_256": 169, "geodes": [169, 463, 505, 662, 663, 664, 666, 667, 872], "gsn": [169, 437], "hydrocel": [169, 437], "64_1": 169, "65_1": 169, "mgh60": [169, 872], "mgh70": [169, 872], "brainvis": [169, 327, 328, 434, 438, 473, 474, 483, 598, 848, 854, 872], "artini": [169, 189, 325, 872], "octamon": [169, 189, 872], "detector": [169, 189, 209, 212, 495, 585, 586, 739, 755, 854, 872], "brite23": [169, 872], "brainproduct": 169, "rnp": 169, "ba": [169, 440, 854, 872], "easycap_montag": 169, "digmontag": [169, 181, 261, 262, 263, 264, 266, 312, 313, 322, 325, 327, 328, 329, 330, 331, 332, 333, 334, 362, 457, 473, 474, 485, 789, 809, 812, 827, 862, 872], "headshap": [169, 253, 302, 309, 322, 334, 872], "gca": 169, "view_init": [169, 204, 223], "azim": [169, 204], "ssvep_fold": 169, "ssvep_data_raw_path": 169, "se": [169, 199, 238, 854], "02_se": [169, 238], "ssvep_eeg": [169, 238], "ssvep_raw": 169, "read_raw_brainvis": [169, 188, 238, 479, 854, 862, 872], "circumfer": 169, "t4": 169, "t3": [169, 317, 473, 872], "075": [169, 170, 173], "sample_data_raw_path": 169, "sample_raw": 169, "ax2d": 169, "add_subplot": [169, 223], "ax3d": 169, "irregular": [169, 851, 872], "fastrak": 169, "predefin": [169, 827], "layout_dir": 169, "iterdir": 169, "IN": 169, "ctf151": [169, 223, 335], "lai": [169, 501, 854, 872], "ctf275": [169, 223, 335], "eeg1005": [169, 335], "egi256": [169, 335], "geodesicheadweb": [169, 335], "AS": [169, 335], "umd": [169, 223, 335], "neuromag_122": [169, 335], "grad_norm": [169, 335], "magneswh3600": [169, 335, 484], "biosemi_layout": 169, "make_eeg_layout": [169, 318, 324, 862], "layout_from_raw": 169, "make_meg_layout": 169, "snugli": 169, "40_sensor_loc": [169, 173], "suit": [170, 843], "get_config": [170, 381, 636, 862, 872], "unnam": 170, "mne_use_cuda": [170, 371, 829], "json": [170, 454], "unset": [170, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 408, 415, 418, 421, 422, 448, 461, 463, 473, 474, 511, 514, 515, 525, 526, 535, 536, 557, 564, 565, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 771, 774, 793, 829, 872], "typeerror": [170, 175, 763, 872], "err": [170, 202, 341], "nonetyp": 170, "unsur": [170, 201, 831], "fallback": [170, 261, 262, 473, 474, 769, 792, 853, 872], "missing_config_kei": 170, "mne_browse_raw_s": 170, "mne_datasets_brainstorm_path": 170, "mne_datasets_eegbci_path": [170, 376, 381], "mne_datasets_epilepsy_ecog_path": [170, 378], "mne_datasets_erp_core_path": [170, 379], "mne_datasets_fieldtrip_cmc_path": 170, "mne_datasets_fnirs_motor_path": [170, 386], "mne_datasets_hf_sef_path": [170, 388], "mne_datasets_kiloword_path": [170, 389], "mne_datasets_limo_path": [170, 390], "mne_datasets_misc_path": [170, 391], "mne_datasets_mtrf_path": [170, 392], "mne_datasets_multimodal_path": [170, 393], "mne_datasets_opm_path": 170, "mne_datasets_phantom_4dbti_path": [170, 395], "mne_datasets_refmeg_noise_path": [170, 396], "mne_datasets_sample_path": [170, 381, 397], "mne_datasets_somato_path": [170, 400], "mne_datasets_spm_face_path": 170, "mne_datasets_ssvep_path": [170, 402], "mne_datasets_testing_path": 170, "mne_logging_level": [170, 639], "mne_3d_option_them": [170, 739, 872], "mne_browser_overview_mod": [170, 261, 262, 473, 474, 552, 769, 786, 792], "hidden": [170, 171, 261, 262, 473, 474, 552, 739, 769, 786, 792, 872], "mne_browser_backend": [170, 261, 262, 473, 474, 552, 769, 786, 792, 872], "mne_browser_them": [170, 261, 262, 473, 474, 552, 769, 786, 792, 872], "mne_browser_precomput": [170, 261, 262, 473, 474, 552, 769, 786, 792], "mne_3d_option_multi_sampl": [170, 829, 872], "recogn": [170, 205, 488, 853, 872], "mne_3d_option_antialia": [170, 805, 829, 872], "mne_3d_option_depth_peel": [170, 805], "mne_3d_option_smooth_shad": [170, 748, 805], "mne_browser_use_opengl": [170, 261, 262, 473, 474, 552, 769, 786, 792, 872], "mne_cache_dir": 170, "mne_coreg_advanced_rend": 170, "mne_coreg_copy_annot": 170, "mne_coreg_fullscreen": [170, 464], "mne_coreg_guess_mri_subject": 170, "mne_coreg_head_high_r": [170, 464], "mne_coreg_head_opac": [170, 464], "mne_coreg_head_insid": 170, "mne_coreg_interact": 170, "mne_coreg_mark_insid": 170, "mne_coreg_prepare_bem": 170, "mne_coreg_orient_to_surfac": 170, "mne_coreg_scale_label": 170, "mne_coreg_scale_by_dist": 170, "mne_coreg_scene_scal": 170, "mne_coreg_window_height": 170, "mne_coreg_window_width": [170, 464], "mne_coreg_subjects_dir": 170, "mne_cuda_devic": [170, 872], "mne_cuda_ignore_precis": 170, "mne_datasets_megsim_path": 170, "mne_datasets_spm_face_datasets_test": 170, "mne_datasets_visual_92_categories_path": [170, 403], "mne_force_seri": 170, "mne_kit2fiff_stim_channel": 170, "mne_kit2fiff_stim_channel_cod": 170, "mne_kit2fiff_stim_channel_slop": 170, "mne_kit2fiff_stim_channel_threshold": 170, "mne_memmap_min_s": 170, "mne_repr_html": [170, 872], "mne_skip_ftp_test": 170, "mne_skip_network_test": 170, "mne_skip_testing_dataset_test": 170, "mne_tqdm": [170, 872], "mne_use_numba": 170, "misspel": 170, "mnee_use_cuudaa": 170, "intro": [170, 171, 238], "50_configure_mn": [170, 173], "runtimewarn": [170, 736], "unrecogn": [170, 261, 262, 263, 264, 266, 473, 474, 872], "concern": [170, 202, 223, 492, 571, 605, 609], "userprofil": [170, 454], "linux": [170, 691, 830, 831, 832, 834, 836, 837, 839, 872], "maco": [170, 831, 832, 834, 835, 836, 872], "get_config_path": [170, 862, 872], "home_dir": [170, 453, 454, 636], "use_env": [170, 453], "set_env": [170, 636, 872], "python_env": [170, 203], "minimal_cmd": 170, "usr": [170, 691, 837, 842], "sbin": 170, "statement": [170, 171, 223, 638, 837], "fresh": 170, "me": [170, 687], "worrisom": 170, "set_log_level": [170, 638, 737, 862], "temporarili": [170, 204, 205, 261, 262, 263, 264, 372, 407, 443, 473, 474, 552, 769, 786, 792], "kit_data_path": 170, "abspath": 170, "use_log_level": [170, 236, 862], "432": [170, 228], "meg160": 170, "v2r004": 170, "160ch": 170, "jan24": 170, "eq1160c": 170, "dewar": 170, "fll": 170, "board": 170, "adc": [170, 188], "alloc": [170, 679, 680, 682, 683], "shorthand": 170, "whatev": [170, 206, 473, 474, 695, 831], "hasn": [170, 564, 872], "sys_info": [170, 271, 829, 830, 851, 862, 872], "stdout": [170, 638, 691, 872], "platform": [170, 261, 262, 263, 264, 473, 474, 691, 694, 696, 792, 830, 834, 839, 843, 860], "aw": [170, 252, 691], "x86_64": [170, 691, 830, 837], "glibc2": [170, 691, 830], "nov": [170, 297], "gcc": [170, 691, 830], "cpu": [170, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 408, 415, 417, 418, 421, 422, 448, 461, 463, 473, 474, 511, 514, 515, 525, 526, 535, 536, 552, 557, 564, 565, 580, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 691, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 769, 771, 774, 786, 792, 793, 829, 830], "gb": [170, 691, 829, 830, 837], "dev0": [170, 691, 830], "openbla": [170, 691, 830, 851], "thread": [170, 233, 261, 262, 473, 474, 552, 769, 786, 792, 854], "agg": 170, "numba": [170, 691, 830, 872], "openmeeg": [170, 510, 515, 872], "cupi": [170, 261, 262, 263, 264, 407, 411, 416, 443, 444, 445, 473, 474, 691, 829, 830, 872], "opengl": [170, 253, 261, 262, 464, 473, 474, 552, 691, 769, 786, 792, 829, 837, 843], "mesa": [170, 464, 691, 805, 872], "llvmpipe": [170, 691, 829], "llvm": [170, 691, 829], "ipyvtklink": [170, 860], "vtk": [170, 404, 691, 739, 754, 829, 830, 872], "qtpy": [170, 691, 830], "pyqt6": 170, "ipympl": 170, "pyqtgraph": [170, 261, 262, 473, 474, 552, 691, 769, 786, 792, 872], "pooch": [170, 381, 691, 872], "mne_nir": 170, "mne_featur": 170, "mne_qt_brows": [170, 261, 262, 473, 474, 552, 769, 786, 792, 872], "mne_icalabel": 170, "shell": [171, 182, 208, 241, 253, 509, 516, 830, 831, 836, 837, 838, 851, 854], "deploi": [171, 851], "browser": [171, 190, 212, 253, 261, 262, 271, 473, 474, 540, 552, 747, 751, 769, 786, 792, 808, 811, 831, 872], "tempfil": 171, "ndimag": 171, "raw_tsss": [171, 253, 473, 474, 493], "_eeg": [171, 253, 473, 474, 872], "_ieeg": [171, 253, 473, 474, 872], "underscor": [171, 199, 203, 212, 552], "parse_fold": [171, 271, 872], "add_raw": [171, 271, 872], "slider": [171, 263, 264, 271, 778, 829, 872], "scrub": 171, "report_raw": 171, "jqueri": 171, "bundl": [171, 834, 836, 872], "tableexport": 171, "highlightj": 171, "atom": 171, "meaning": [171, 213, 270, 634, 831], "events_path": 171, "report_ev": 171, "add_epoch": [171, 271, 872], "fly": [171, 225, 261, 262, 473, 474, 725, 737, 769, 792, 872], "make_metadata": [171, 862, 872], "report_epoch": 171, "add_evok": [171, 271], "n_time_point": [171, 271], "evoked_path": 171, "cov_path": 171, "evokeds_subset": 171, "report_evok": 171, "add_covari": [171, 271], "report_cov": 171, "ecg_proj_path": 171, "eog_proj_path": 171, "sample_audvis_eog": [171, 851], "report_proj": 171, "998": [171, 183, 190, 207, 208, 228, 565, 569, 573, 576], "add_ica": [171, 271, 872], "inst": [171, 203, 253, 255, 259, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 278, 309, 311, 355, 405, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 464, 473, 474, 551, 552, 553, 560, 561, 570, 574, 579, 595, 634, 637, 646, 677, 692, 694, 695, 696, 722, 723, 724, 782, 783, 784, 786, 793, 872], "ecg_evok": [171, 203, 205, 271], "eog_evok": [171, 202, 203, 205, 271], "artifactu": [171, 197, 200, 203, 241, 552], "find_bads_ecg": [171, 203, 271, 552, 872], "ecg_scor": [171, 203, 271], "liber": 171, "eog_compon": 171, "report_ica": 171, "add_bem": [171, 271, 872], "th": [171, 261, 552, 649, 652, 654, 695, 851, 854], "report_mri_and_bem": 171, "add_tran": [171, 271, 872], "opaqu": [171, 271, 464, 872], "trans_path": 171, "report_coregistr": 171, "add_forward": [171, 271, 739, 872], "fwd_path": 171, "report_forward_sol": 171, "add_inverse_oper": [171, 271], "inverse_op_path": 171, "report_inverse_op": 171, "add_stc": [171, 271, 872], "report_inverse_sol": 171, "01632618": 171, "06303297": 171, "63565434": 171, "add_cod": [171, 271], "syntax": [171, 271, 831, 854], "snippet": [171, 231, 271, 851], "liter": [171, 271, 854], "mne_init_py_path": 171, "__init__": [171, 541], "mne_init_py_cont": 171, "read_text": 171, "utf": [171, 489, 598, 604, 872], "report_cod": 171, "add_figur": [171, 271, 872], "caption": [171, 271, 872], "num": [171, 237], "sky": 171, "image_format": [171, 253, 271, 872], "report_custom_figur": 171, "fig_1": 171, "ax_1": 171, "ax_2": 171, "report_custom_figure_sect": 171, "intuit": [171, 194, 238, 406, 421, 650, 651], "logo": [171, 872], "mne_logo_path": 171, "mne_icon": 171, "fig_arrai": 171, "rotation_angl": 171, "fig_array_rot": 171, "mneqtbrows": [171, 261, 262, 473, 474, 552, 769, 786, 792], "fun": [171, 261, 262, 263, 264, 473, 474], "768": [171, 182, 207], "910461572052865": 171, "photo": 171, "sketch": 171, "add_imag": [171, 271, 872], "jpeg": [171, 271], "gif": [171, 271, 739, 872], "svg": [171, 253, 271, 872], "report_custom_imag": 171, "add_": 171, "dropdown": [171, 872], "hide": [171, 214, 236, 872], "checkbox": [171, 872], "report_tag": 171, "hdf5": [171, 268, 269, 271, 275, 277, 285, 298, 541, 551, 590, 620, 692, 693, 694, 695, 696, 712, 713, 714, 725, 814, 815, 835, 851, 872], "report_parti": 171, "amend": [171, 329], "report_from_disk": 171, "open_report": [171, 271, 862, 872], "report_fin": 171, "invok": [171, 253, 752, 837, 872], "barebon": [171, 253], "render_bem": [171, 271, 872], "raw_butterfli": [171, 271], "report_parse_folder_bas": 171, "raw_psd": [171, 271, 872], "refin": [171, 273, 317, 357], "report_parse_folder_raw_psd_proj": 171, "mri_decim": [171, 253, 271], "report_parse_folder_mri_bem": 171, "temporarydirectori": 171, "n_time_points_evok": [171, 271], "report_parse_folder_evok": 171, "tmp": 171, "tmpel7h4dc_": 171, "info_fnam": [171, 271], "report_parse_folder_cov": 171, "add_html": [171, 271, 872], "remind": [171, 552, 831], "my_html": 171, "ol": [171, 677, 860, 872], "manifest": [171, 201, 202, 203, 205, 827], "n1": 171, "report_add_html": 171, "735": [171, 173, 194, 228], "70_report": [171, 173], "auto_tutorials_intro": 173, "volsourceestim": [174, 179, 180, 268, 269, 272, 273, 275, 277, 286, 288, 289, 290, 291, 292, 293, 507, 514, 519, 520, 521, 522, 523, 525, 535, 620, 633, 827, 862, 872], "mixedsourceestim": [174, 269, 272, 275, 276, 277, 620, 827, 862, 872], "carri": [174, 197, 203, 238, 481, 673], "belong": [174, 266, 267, 271, 614, 669, 738, 739, 857], "shape_lh": 174, "is_equ": 174, "suspect": 174, "nth": [174, 203, 256, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 568, 569, 692, 695], "peak_vertex": 174, "vert_as_index": [174, 179, 268, 269, 272, 275, 276, 277], "peak_vertex_surf": 174, "peak_valu": 174, "logic": [174, 225, 228, 261, 262, 263, 264, 266, 464, 473, 474, 475, 552, 571, 857, 872], "lh_coordin": 174, "rh_coordin": 174, "10_stc_class": [174, 186], "gist": [175, 188, 261, 262, 263, 264, 473, 474, 851], "load_mni152_templ": 175, "fname_av": 175, "fname_surf_lh": 175, "n100m": 175, "evoked_ful": 175, "posixpath": [175, 180], "7283": 175, "6941": 175, "5323": 175, "2659": 175, "0605": 175, "7276": 175, "4483": 175, "mni_po": 175, "to_mni": [175, 259, 872], "mri_po": 175, "to_mri": [175, 259, 872], "best_dip_idx": 175, "to_volume_label": [175, 259, 872], "fig_t1": 175, "cut_coord": 175, "fig_templ": 175, "pred_evok": 175, "inf": [175, 190, 197, 219, 261, 262, 263, 264, 279, 410, 470, 471, 473, 474, 503, 565, 692, 694, 696, 697, 699, 700, 702, 710, 711, 747, 793, 799, 872], "best_idx": 175, "best_tim": 175, "conf": [175, 259, 831], "plot_param": 175, "0f": [175, 263, 264, 774], "20_dipole_fit": [175, 186], "dip_fix": 175, "7509": 175, "6603": 175, "jukka": [175, 177, 241, 872], "sarva": [175, 241], "electromagnet": [175, 177, 197, 205, 208, 220, 241, 294, 295, 426, 519, 563, 580, 827, 854], "biomagnet": [175, 241], "200m": 176, "500m": 176, "fig_cov": [176, 258, 764], "fig_spectra": 176, "1705": [176, 179], "1468": 176, "1574": 176, "write_inverse_oper": [176, 533, 862, 872], "6837": 176, "16026e": 176, "set_color": [176, 182], "98df81": [176, 182], "vertno_max": 176, "time_max": [176, 177], "30_mne_dspm_loreta": [176, 186], "left_auditori": 177, "dip_po": 177, "dip_ori": 177, "dip_len": 177, "dip_tim": 177, "rgb": [177, 268, 269, 272, 275, 276, 277, 458, 463, 739, 755, 758, 797, 802, 803], "actual_amp": [177, 182, 184], "actual_gof": [177, 182, 184], "outward": [177, 259, 269, 275, 277, 362, 767, 851], "moment": [177, 179, 266, 269, 275, 277, 315, 339, 341, 342, 343, 426, 562, 563, 571, 580, 802], "06165525": 177, "70033915": 177, "34794621": 177, "inward": [177, 851], "curvatur": [177, 268, 269, 272, 275, 276, 277, 690, 739, 797, 802, 857, 872], "collaps": [177, 271, 427], "brain_mag": 177, "overlay_alpha": [177, 269, 275, 277, 802], "44205e": 177, "79973942": 177, "38378769": 177, "8347911": 177, "somewhat": [177, 197], "strai": 177, "unrestrict": 177, "brain_loos": 177, "03844879": 177, "68532258": 177, "12541436": 177, "risto": [177, 204, 205, 241, 519, 854], "ilmoniemi": [177, 204, 205, 241, 519, 854], "knuutila": [177, 241], "olli": [177, 241], "lounasmaa": [177, 241], "noninvas": [177, 241], "modern": [177, 187, 241, 382, 704, 829, 854, 856, 872], "revmodphi": [177, 241], "fa": [177, 241, 530, 649, 654], "hsuan": [177, 241, 530, 649, 654], "lin": [177, 193, 241, 411, 530, 649, 654], "belliveau": [177, 241, 519, 530, 649, 654], "20155": [177, 241], "547": [177, 186, 228], "35_dipole_orient": [177, 186], "variant": [178, 188, 458, 563, 829, 872], "1498464098687909": [178, 180], "037797": 178, "65922": 178, "72259e": 178, "28047949e": 178, "72734061e": 178, "97200565e": 178, "56295843": 178, "27742998": 178, "00597191": 178, "65359441": 178, "22223215": 178, "63030546": 178, "eigen": [178, 267, 669], "34003429e": 178, "79067976e": 178, "93243713e": 178, "61893": 178, "8713e": 178, "81398589e": 178, "00293217e": 178, "59049572e": 178, "79225614": 178, "45181117": 178, "88420763": 178, "65906465": 178, "114468": 178, "42240231": 178, "41240751e": 178, "15338772e": 178, "80101709e": 178, "40_mne_fixed_fre": [178, 186], "britta": [179, 241, 859, 872], "westner": [179, 241, 859, 872], "wstnr": 179, "apply_lcmv": [179, 286, 288, 291, 292, 293, 862, 872], "linearli": [179, 204, 208, 241, 290, 291, 292, 293, 294, 295, 827, 851], "ingredi": 179, "valuabl": [179, 854], "gaug": 179, "incorpor": [179, 223, 228, 317, 429, 438, 473, 474, 557, 831, 854, 860, 872], "stabl": [179, 200, 202, 241, 256, 294, 295, 338, 444, 472, 473, 474, 540, 552, 562, 748, 831, 837, 851], "rule": [179, 197, 201, 241, 552, 854], "thumb": [179, 197, 201, 552, 848], "advic": [179, 831], "defici": [179, 365, 552, 854, 872], "misrepres": 179, "3757": [179, 180], "inher": [179, 188, 228, 422], "somehow": [179, 181, 203], "nai": [179, 294, 295, 872], "switch": [179, 182, 183, 200, 207, 220, 241, 253, 267, 272, 346, 473, 474, 829, 831, 837, 857, 872], "invari": [179, 294, 295], "filters_vec": 179, "apply_lcmv_raw": [179, 290, 291, 292, 862, 872], "apply_lcmv_epoch": [179, 268, 269, 272, 275, 276, 277, 290, 291, 293, 862, 872], "stat_map": [179, 276, 277, 803], "5184": 179, "glass_brain": [179, 180, 276, 277, 803, 872], "022485": [179, 180], "008449": [179, 180], "036217": [179, 180], "071071": [179, 180], "914866": [179, 180], "406098": [179, 180], "008756": [179, 180], "433700": [179, 180], "028119": [179, 180], "plotter": [179, 261, 262, 552, 739, 741, 769, 786, 849, 872], "peak_vox": 179, "ori_label": 179, "sourcemorph": [179, 276, 277, 357, 621, 803, 835, 862, 872], "fname_fs_src": 179, "stc_f": [179, 180], "17352": 179, "barri": [179, 200, 202, 203, 241, 294, 295, 551, 566], "veen": [179, 241, 294, 295], "wim": [179, 241, 294, 295], "drongelen": [179, 241, 294, 295], "mosh": [179, 241, 294, 295], "yuchtman": [179, 241, 294, 295], "akifumi": [179, 241, 294, 295], "suzuki": [179, 241, 294, 295], "623056": [179, 241, 294, 295], "brook": [179, 241, 846, 872], "jiri": [179, 241], "vrba": [179, 241], "clair": [179, 241, 872], "stevenson": [179, 241], "gareth": [179, 241], "barn": [179, 241], "arjan": [179, 241], "hillebrand": [179, 241], "morri": [179, 241], "optimis": [179, 241], "1788": [179, 193, 241], "sarang": [179, 241, 860], "dalal": [179, 241, 860], "vladimir": [179, 223, 241, 685, 686], "litvak": [179, 223, 241, 685, 686], "oostenveld": [179, 228, 241, 679, 680, 682, 683, 872], "mathij": [179, 241], "schoffelen": [179, 241], "118789": [179, 241], "748": [179, 186, 228], "50_beamformer_lcmv": [179, 186], "flatmap": [180, 268, 272, 276, 739, 797, 872], "mpl_fig": 180, "94880328959697": 180, "84640986879091": 180, "649601096532322": 180, "5653": 180, "67635542": 180, "11717401": 180, "19136023": 180, "atlas": [180, 641, 872], "get_volume_labels_from_aseg": [180, 862, 872], "label_tc": [180, 268, 269, 272, 275, 276, 277, 439], "lidx": 180, "arrowstyl": [180, 193], "set_vis": 180, "grain": [180, 872], "loci": 180, "stc_back": 180, "labels_to_stc": [180, 862, 872], "6210": 180, "69834054": 180, "98871778": 180, "62206532": 180, "70708526": 180, "36619556": 180, "64056812": 180, "6864": 180, "534": [180, 186, 228], "60_visualize_stc": [180, 186], "read_custom_montag": [181, 189, 261, 262, 263, 264, 266, 325, 473, 474, 862, 872], "reconstrct": 181, "elc": [181, 327, 872], "synthes": [181, 187, 300, 304, 496, 572, 872], "fname_t1_electrod": 181, "sample_eeg_mri": 181, "t1_electrod": 181, "fname_mon": 181, "sample_mri_montag": 181, "ras_mni_t": [181, 731], "read_ras_mni_t": [181, 862], "mni_affin": 181, "img_mni": 181, "hot_black_bon": 181, "black_bg": 181, "resampling_interpol": 181, "pos_vox": 181, "fname_t1": 181, "vox2mri_t": 181, "pos_mri": [181, 259], "tkmedit": [181, 837, 854], "dig_montag": 181, "head_siz": [181, 325, 327], "99930957": 181, "00998471": 181, "03578661": 181, "00316747": 181, "01275917": 181, "81240435": 181, "58295487": 181, "00685511": 181, "03489383": 181, "58300899": 181, "81171605": 181, "02888406": 181, "812404": 181, "582955": 181, "583009": 181, "3252": 181, "3250": 181, "1709": 181, "3223": 181, "1825": 181, "8193": 181, "040598": 181, "157084": 181, "86184": 181, "24877e": 181, "17591891": 181, "939572": 181, "86348066": 181, "70_eeg_mri_coord": [181, 186], "fetch_phantom": [182, 425, 862, 872], "planor": 182, "meg1933": 182, "meg2421": 182, "645": [182, 194, 228], "1792": 182, "3840": 182, "7936": 182, "bmax": [182, 253], "ring": [182, 200, 440, 442, 872], "otaniemi": [182, 385, 425, 848, 872], "phantom_otaniemi": 182, "00365867": [182, 183, 184], "944092": [182, 183, 184], "138723": [182, 183, 184], "665896": [182, 183, 184], "684544": [182, 183, 184], "132233": [182, 183, 184], "0128974": [182, 183, 184], "plot_evoked_whit": [182, 263, 264, 773, 862, 872], "t_peak": 182, "32640": 182, "32639": 182, "55367811e": 182, "90213143e": 182, "55347147e": 182, "28605719e": 182, "96728167e": 182, "86739464e": 182, "38610872e": 182, "82304534e": 182, "48308374e": 182, "31818228e": 182, "16854987e": 182, "00130181e": 182, "01608756e": 182, "05724640e": 182, "66791928e": 182, "36603176e": 182, "50599819e": 182, "82644670e": 182, "99846050e": 182, "93593540e": 182, "60183041e": 182, "976295": 182, "211976": 182, "043756": 182, "206488": 182, "972764": 182, "105326": 182, "064891": 182, "093794": 182, "993475": 182, "729": [182, 183, 184, 228], "actual_ori": 182, "rad2deg": 182, "arcco": 182, "dip_tru": [182, 184], "80_brainstorm_phantom_elekta": [182, 186], "phantomctf": 183, "bst_phantom_ctf": 183, "phantom_200ua_20150709_01": 183, "dip_freq": 183, "phantom_20ua_20150603_03": 183, "erm_path": 183, "emptyroom_20150709_01": 183, "24000": 183, "23999": 183, "hdac006": 183, "zeros_lik": [183, 193], "ones_lik": [183, 225, 226], "tsss": [183, 263, 266, 473, 493, 580, 588, 610, 872], "apply_gradient_compens": [183, 187, 473, 474, 854, 872], "un": [183, 201, 204, 208, 215, 473, 474, 528, 529, 792, 854], "mf_kwarg": 183, "st_durat": [183, 208, 571, 580], "021666666666666667": 183, "458": [183, 228], "catch_warn": 183, "simplefilt": 183, "60000": 183, "99596855e": 183, "57828787e": 183, "09548814e": 183, "44821628e": 183, "22550465e": 183, "07831245e": 183, "16519699e": 183, "85599860e": 183, "24819011e": 183, "19149506e": 183, "49201625e": 183, "90435099e": 183, "37114004e": 183, "52368814e": 183, "95491435e": 183, "09260032e": 183, "84849095e": 183, "02461913e": 183, "40860739e": 183, "15627312e": 183, "58591259e": 183, "999939": 183, "002039": 183, "010868": 183, "001115": 183, "959234": 183, "282612": 183, "011001": 183, "282607": 183, "959173": 183, "expected_po": 183, "array_str": 183, "892": [183, 186, 228], "502": [183, 186, 228, 517, 857], "85_brainstorm_phantom_ctf": [183, 186], "4dbti": 184, "badier": [184, 241, 652], "marseil": [184, 848], "franc": 184, "phantom_4dbti": [184, 848, 862, 872], "rfhp1": 184, "0hz": 184, "a173": 184, "a213": 184, "a232": 184, "4350": 184, "not_and": [184, 254, 446, 607, 872], "hs_file": [184, 187, 484], "13599": 184, "20053968578577042": 184, "6576": 184, "6575": 184, "50691838e": 184, "61763336e": 184, "91409625e": 184, "91576159e": 184, "16898444e": 184, "75585208e": 184, "47442194e": 184, "45272203e": 184, "55529894e": 184, "46448717e": 184, "88484744e": 184, "05130802e": 184, "14443569e": 184, "70955369e": 184, "39503671e": 184, "16681391e": 184, "65491197e": 184, "24338008e": 184, "53281664e": 184, "47448228e": 184, "78257781e": 184, "975564": 184, "033891": 184, "217085": 184, "044586": 184, "998011": 184, "044560": 184, "215143": 184, "053150": 184, "975135": 184, "43530566e": 184, "00499851e": 184, "47056513e": 184, "49717001e": 184, "01651220e": 184, "39837298e": 184, "09320996e": 184, "53068976e": 184, "44272962e": 184, "07218608e": 184, "57916869e": 184, "24522939e": 184, "45459681e": 184, "19250060e": 184, "30544307e": 184, "26518629e": 184, "97497347e": 184, "82472005e": 184, "37787240e": 184, "96791371e": 184, "70423989e": 184, "975554": 184, "034041": 184, "217109": 184, "044503": 184, "998063": 184, "043482": 184, "215208": 184, "052081": 184, "975178": 184, "58999814e": 184, "84421337e": 184, "28166457e": 184, "67818745e": 184, "17428979e": 184, "76211498e": 184, "09542089e": 184, "22401648e": 184, "04141267e": 184, "15865669e": 184, "76599754e": 184, "17446488e": 184, "49708010e": 184, "60822410e": 184, "73060305e": 184, "05814038e": 184, "01071067e": 184, "20173942e": 184, "25861185e": 184, "85502070e": 184, "47521229e": 184, "975577": 184, "033678": 184, "217061": 184, "044611": 184, "997960": 184, "045666": 184, "215080": 184, "054233": 184, "975089": 184, "40101009e": 184, "10513936e": 184, "52303974e": 184, "27457778e": 184, "38233857e": 184, "06793751e": 184, "00477278e": 184, "15792686e": 184, "30206685e": 184, "40306943e": 184, "32057779e": 184, "22353020e": 184, "11884928e": 184, "17314181e": 184, "64256593e": 184, "23243102e": 184, "97110034e": 184, "94566869e": 184, "63267153e": 184, "08360546e": 184, "98210291e": 184, "975557": 184, "033946": 184, "217110": 184, "044391": 184, "998071": 184, "043409": 184, "215218": 184, "051986": 184, "975181": 184, "44409481": 184, "37628851": 184, "1860296": 184, "17616473": 184, "745": [184, 186, 228], "90_phantom_4dbti": [184, 186], "auto_tutorials_invers": 186, "maxshield": [187, 253, 263, 266, 473, 493, 580, 610, 857, 872], "allow_maxshield": [187, 207, 208, 263, 473, 493, 610], "mandatori": [187, 294, 295, 317, 473, 552, 854], "rfdc": [187, 253], "realiz": [187, 200], "carefulli": [187, 198, 200, 848], "read_dig_polhemus_isotrak": [187, 309, 322, 325, 328, 329, 330, 331, 332, 333, 336, 854, 862, 872], "technic": [187, 236, 241, 261, 262, 263, 264, 473, 474, 519, 694, 696, 704, 710, 847, 853, 854], "disturb": [187, 847, 854], "mainli": [187, 238, 831, 854], "nicknam": 187, "n_1": 187, "n_2": 187, "n_3": 187, "x_1": [187, 854], "x_2": [187, 854], "x_3": 187, "denot": [187, 194, 214, 269, 275, 277, 578, 649, 652, 654, 673, 675, 693, 827, 854], "x_": [187, 194, 854], "m_": 187, "bmatrix": [187, 854], "c_": [187, 223, 854], "standardize_nam": [187, 496, 606, 872], "nx3": [187, 460], "mrk": [187, 253, 476, 496, 606, 872], "elp": [187, 253, 327, 334, 496, 606, 608, 854, 872], "onward": [187, 642], "miscellan": [187, 212, 261, 262, 263, 264, 473, 474, 549, 692, 694, 695, 696, 854, 857], "eight": [187, 854, 872], "endian": [187, 872], "stimthresh": [187, 253, 496], "sum_": [187, 200, 652, 854], "t_p": 187, "d_p": 187, "bigg": 187, "leq": [187, 223], "read_raw_fieldtrip": [187, 479, 854, 862, 872], "read_epochs_fieldtrip": [187, 854, 862, 872], "read_evoked_fieldtrip": [187, 854, 862, 872], "intent": [187, 849], "original_data": 187, "read_raw_fiff": 187, "original_info": 187, "data_from_ft": 187, "evoked_data": [187, 225], "untest": 187, "cnt": [187, 434, 485, 598, 854, 872], "egi": [187, 327, 330, 490, 854, 872], "calibr": [187, 208, 266, 426, 562, 563, 571, 580, 591, 596, 857, 872], "eximia": [187, 491, 854, 872], "3rd": [187, 197, 268, 269, 272, 275, 276, 277, 678], "parti": 187, "librari": [187, 741, 829, 831, 837, 838, 843, 849, 851, 872], "abund": 187, "electrophysiolog": [187, 200, 241, 827], "10_reading_meg_data": [187, 192], "meta": [188, 261, 262, 263, 264, 473, 474, 475, 860], "ini": 188, "host": [188, 853, 872], "pybv": [188, 438, 473, 474], "mnelab": [188, 838], "pyedflib": 188, "read_raw_bdf": [188, 479, 488, 494, 854, 862, 872], "amplifi": [188, 202, 206, 500, 843, 872], "mastoid": [188, 206, 261, 262, 263, 264, 473, 474, 637], "byte": [188, 261, 262, 473, 474, 503, 747, 857, 872], "read_raw_gdf": [188, 479, 481, 488, 854, 862, 872], "overcom": 188, "releas": [188, 831, 839, 851, 853, 872], "gender": [188, 241, 398], "read_raw_cnt": [188, 479, 854, 862, 872], "danger": [188, 266], "x_coord": 188, "y_coord": 188, "electloc": 188, "encourag": [188, 220, 842, 853, 872], "read_raw_egi": [188, 479, 854, 862, 872], "netstat": [188, 490, 872], "read_raw_nicolet": [188, 479, 854, 862, 872], "nexstim": 188, "read_raw_eximia": [188, 479, 854, 862], "read_raw_persyst": [188, 854, 862, 872], "nk": 188, "read_raw_nihon": [188, 862, 872], "11d": 188, "cmt": 188, "cn2": 188, "difficult": [188, 199, 228, 552, 854], "histori": [188, 266, 437, 827, 857, 872], "successfulli": [188, 189, 213, 831, 857], "neither": [188, 462, 473, 474, 839], "nor": [188, 206, 462, 473, 474, 839, 853], "20_reading_eeg_data": [188, 192], "emitt": 189, "transmitt": 189, "oxyhaemoglobin": [189, 209], "Near": 189, "commun": [189, 193, 194, 220, 241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 411, 473, 474, 692, 695, 721, 724, 831, 835, 850, 860], "effort": [189, 481, 831, 852, 860], "sfnir": 189, "gowerlab": [189, 872], "cortivis": 189, "read_raw_snirf": [189, 862, 872], "provis": 189, "haemoglobin": [189, 582, 872], "optode_fram": [189, 502], "vendor": [189, 854], "icbm": 189, "2009b": 189, "nirstar": [189, 500], "aurora": [189, 500, 872], "nirscout": [189, 500], "nirsport": [189, 500, 872], "read_raw_hitachi": [189, 862, 872], "read_raw_boxi": [189, 479, 854, 862, 872], "iss": [189, 482, 872], "paren": 189, "unmodul": 189, "unpars": 189, "organis": 189, "digaux": 189, "port": [189, 837, 843], "discourag": [189, 261, 262, 263, 264, 473, 474, 694, 696, 771, 851, 872], "standardis": [189, 872], "to_csv": [189, 212], "_d": 189, "wavelength": [189, 197], "s1_d1": [189, 209], "s2_d1": 189, "s3_d1": 189, "s4_d1": 189, "s5_d2": 189, "s6_d2": 189, "s7_d2": 189, "s8_d2": 189, "assist": [189, 247, 829, 837, 854], "ficidu": 189, "30_reading_fnirs_data": [189, 192], "site": [190, 202, 203, 208, 241, 266, 317, 473, 563, 571, 580, 831], "beep": 190, "deviant": [190, 200], "finger": [190, 848], "bug": [190, 254, 446, 464, 691, 739, 831, 850, 852, 853], "tracker": [190, 831, 851], "consumpt": [190, 263, 264, 422, 773, 872], "use_precomput": 190, "erm_fnam": 190, "s01_noise_20131218_01": 190, "demand": [190, 212, 422, 426, 472, 603, 854, 872], "n_times_run1": 190, "4800": 190, "unus": [190, 266, 274, 571, 872], "heog": [190, 485], "veog": [190, 485, 872], "favorit": [190, 831], "annotations_df": 190, "csv_fname": 190, "events_bad_0": 190, "concat": [190, 405], "saccades_ev": 190, "7625": 190, "142459": 190, "216954": 190, "345135": 190, "357687": 190, "409101": 190, "461110": 190, "479866": 190, "764914": 190, "798174": 190, "846880": 190, "858863": 190, "9256": 190, "14287": 190, "116432": 190, "134489": 190, "464527": 190, "494136": 190, "749288": 190, "788623": 190, "21179": 190, "72993": 190, "134527": 190, "196555": 190, "249894": 190, "343357": 190, "400771": 190, "450256": 190, "593101": 190, "733942": 190, "765939": 190, "789476": 190, "792852": 190, "833208": 190, "859869": 190, "862888": 190, "saccade_epoch": 190, "reject_by_annot": [190, 209, 214, 261, 356, 473, 474, 512, 552, 568, 569, 572, 573, 696, 784, 793, 872], "projs_saccad": 190, "compute_proj_epoch": [190, 204, 205, 353, 354, 862, 872], "n_mag": [190, 205, 253, 352, 353, 354, 564, 565], "desc_prefix": [190, 352, 353], "projs_eog": 190, "compute_proj_eog": [190, 204, 205, 569, 573, 847, 862, 872], "1201": [190, 207, 297], "spectra": [190, 236, 241, 258, 261, 262, 263, 264, 410, 473, 474, 525, 526, 679, 694, 696, 699, 702, 710, 711, 764, 771, 793, 827], "doubl": [190, 200, 203, 238, 261, 262, 263, 264, 407, 416, 438, 441, 443, 444, 472, 473, 474, 580, 831, 837, 854, 857, 872], "filter_length": [190, 200, 201, 205, 253, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474, 564, 565, 572, 573, 872], "sound": [190, 193, 194, 203, 241, 412, 721, 724], "uadc001": 190, "sound_data": 190, "min_diff": 190, "\u03bc": [190, 208, 414], "\u03c3": [190, 208, 414, 516], "mlo52": 190, "mrt51": 190, "mlo42": 190, "mlo43": 190, "epochs_standard": 190, "concatenate_epoch": [190, 862, 872], "epochs_devi": 190, "mlp52": 190, "evoked_std": 190, "evoked_dev": 190, "p50": 190, "paint": [190, 261, 262, 263, 264, 473, 474, 773, 793], "mmn": [190, 860], "emphasis": 190, "evoked_differ": 190, "ico4": [190, 632, 847], "8033": 190, "015871": 190, "10585e": 190, "09843": 190, "11765e": 190, "stc_standard": 190, "80289064": 190, "69025561": 190, "89954824": 190, "stc_deviant": 190, "12814542": 190, "29154719": 190, "6203076": 190, "stc_differ": 190, "96162575": 190, "78319301": 190, "94351171": 190, "641": [190, 192], "60_ctf_bst_auditori": [190, 192], "auto_tutorials_io": 192, "timedelayingridg": [193, 411, 862, 872], "multivariate_norm": 193, "1337": 193, "path_audio": 193, "spectrogram": [193, 228, 238, 827, 860, 872], "n_decim": 193, "explicit": [193, 260, 355, 365, 366, 831, 857, 872], "delays_samp": 193, "delays_sec": 193, "5000": [193, 225], "meshgrid": [193, 204, 228], "swap": [193, 227, 233, 626, 854, 872], "swapax": [193, 227, 233], "gabor": 193, "means_high": 193, "means_low": 193, "2500": [193, 872], "gauss_high": 193, "gauss_low": 193, "autoscal": 193, "artifici": [193, 241, 490, 552, 848], "convolut": [193, 200, 238, 418, 535, 536, 698, 701, 717, 719, 720, 722, 723, 838, 872], "n_second": 193, "x_del": 193, "ix_delai": 193, "ndim": [193, 238], "elif": 193, "rollaxi": 193, "weights_sim": 193, "iep": 193, "noise_amp": 193, "x_plt": 193, "hstack": [193, 204], "y_plt": 193, "autocorrel": [193, 411, 417], "ix_best_alpha": 193, "best_mod": 193, "best_pr": 193, "iax": 193, "time_pr": 193, "3450": 193, "1381": 193, "1728": 193, "2078": 193, "2424": 193, "2773": 193, "3122": 193, "511": 193, "17118": 193, "622": [193, 228, 241, 351], "19492": 193, "968": [193, 228], "20234": 193, "1314": 193, "20607": 193, "20817": 193, "21034": 193, "2359": 193, "21147": 193, "2713": 193, "21284": 193, "3062": 193, "21346": 193, "3407": 193, "21369": 193, "21239": 193, "21787": 193, "695": [193, 228], "21687": 193, "21639": 193, "1387": 193, "21647": 193, "1717": 193, "21419": 193, "2062": 193, "21440": 193, "2402": 193, "21406": 193, "2742": 193, "21380": 193, "3087": 193, "21401": 193, "3435": 193, "21438": 193, "21411": 193, "21678": 193, "698": [193, 228], "21785": 193, "1046": [193, 194], "21768": 193, "1393": 193, "21742": 193, "21734": 193, "2093": 193, "21779": 193, "21772": 193, "2794": 193, "21814": 193, "3147": 193, "21845": 193, "21847": 193, "20767": 193, "677": [193, 228], "21122": 193, "1020": [193, 194], "1367": 193, "21340": 193, "1707": 193, "21319": 193, "2053": 193, "21374": 193, "2398": 193, "21405": 193, "21446": 193, "3088": 193, "21443": 193, "21468": 193, "21404": 193, "21812": 193, "21796": 193, "1745": 193, "21777": 193, "2095": 193, "21792": 193, "2438": 193, "21732": 193, "2786": 193, "21728": 193, "3133": 193, "21719": 193, "21726": 193, "21688": 193, "21649": 193, "1044": 193, "21714": 193, "1391": 193, "21694": 193, "21589": 193, "2070": 193, "21508": 193, "2415": 193, "2761": 193, "21517": 193, "3108": 193, "21535": 193, "21563": 193, "i_alpha": 193, "ddot": 193, "tikhonov": 193, "trf": [193, 227], "insensit": [193, 261, 262, 434, 481, 488, 494, 555, 695, 872], "whilst": 193, "mse": 193, "scores_lap": 193, "models_lap": 193, "reg_typ": [193, 417], "ix_best_alpha_lap": 193, "21574": 193, "20348": 193, "19937": 193, "1259": [193, 241, 384], "19589": 193, "1587": 193, "19782": 193, "1936": 193, "20159": 193, "2295": 193, "20531": 193, "2648": 193, "20756": 193, "3010": 193, "21005": 193, "3364": 193, "21143": 193, "20962": 193, "22124": 193, "708": [193, 194, 228], "22112": 193, "1067": [193, 691], "22217": 193, "1426": 193, "22260": 193, "22333": 193, "22285": 193, "2502": 193, "22312": 193, "2861": 193, "22331": 193, "3221": 193, "22338": 193, "22309": 193, "22150": 193, "702": [193, 194, 220, 222], "21909": 193, "1062": [193, 207], "22098": 193, "22197": 193, "1781": 193, "22225": 193, "2139": 193, "22245": 193, "2504": 193, "22327": 193, "22399": 193, "3230": 193, "22405": 193, "22351": 193, "22410": 193, "22294": 193, "22186": 193, "22325": 193, "1793": 193, "22371": 193, "2160": 193, "22476": 193, "2534": 193, "22616": 193, "2902": 193, "22665": 193, "3271": 193, "22718": 193, "22704": 193, "21771": 193, "1081": 193, "22510": 193, "1445": 193, "22571": 193, "1814": 193, "22674": 193, "2175": 193, "22646": 193, "2545": 193, "22722": 193, "2912": 193, "22749": 193, "3279": 193, "22772": 193, "22736": 193, "22506": 193, "22608": 193, "22651": 193, "1454": 193, "22682": 193, "1824": 193, "22771": 193, "2185": 193, "22730": 193, "2547": 193, "22709": 193, "22686": 193, "3276": 193, "22727": 193, "22721": 193, "21993": 193, "22535": 193, "22641": 193, "1437": 193, "22409": 193, "1804": 193, "22526": 193, "2174": 193, "22634": 193, "2477": 193, "22022": 193, "2843": 193, "22144": 193, "3214": 193, "22280": 193, "22273": 193, "rf_lap": 193, "fr\u00e9d\u00e9ric": [193, 241, 411], "theunissen": [193, 241, 411], "nandini": [193, 241, 411], "singh": [193, 241, 411, 872], "ann": [193, 214, 241, 411, 872], "hsu": [193, 241, 411], "vinj": [193, 241, 411], "jack": [193, 241, 411, 872], "gallant": [193, 241, 411], "ben": [193, 241, 411, 872], "willmor": [193, 241, 411], "darragh": [193, 241, 411], "smyth": [193, 241, 411], "cell": [193, 197, 241, 411, 857, 872], "553": [193, 228, 241, 411], "577": [193, 207, 228, 241, 411], "0954": [193, 241, 411], "898x_14_3_309": [193, 241, 411], "heer": [193, 241, 411], "paslei": [193, 241, 411], "jochem": [193, 241, 411], "rieger": [193, 241, 411], "nathan": [193, 241, 411], "crone": [193, 241, 411], "knight": [193, 241, 411], "tune": [193, 205, 241, 411], "ncomms13654": [193, 241, 411], "30_strf": [193, 196], "visit": [194, 241, 843], "insight": [194, 854], "eas": 194, "camel": 194, "n_meg_channel": 194, "standand": 194, "interquartil": 194, "robustscal": [194, 414], "n_frequenc": [194, 294, 693], "popular": [194, 827, 835], "win": [194, 238], "grasp": 194, "competit": 194, "kaggl": 194, "week": [194, 853], "clf_csp": 194, "ssnr": [194, 553], "rewrit": [194, 872], "plot_filt": [194, 200, 201, 405, 412, 787, 862, 872], "boil": [194, 829], "evoked_time_gen": 194, "joint_kwarg": 194, "diag": [194, 672, 857], "1296": [194, 207, 241], "563": 194, "646": [194, 228], "675": [194, 228], "681": [194, 228], "685": [194, 228], "679": [194, 228], "459": [194, 228], "518": [194, 207, 228], "655": [194, 206, 207, 228], "561": [194, 207, 228], "647": [194, 207], "671": [194, 228], "643": [194, 228], "736": [194, 228], "638": 194, "872": [194, 207, 228], "654": [194, 228], "903": [194, 228], "933": [194, 228], "693": [194, 206, 228, 241, 261, 262, 263, 264, 473, 474, 637], "992": [194, 209, 228], "1049": 194, "1105": 194, "1130": 194, "1160": [194, 207], "1190": 194, "753": [194, 228], "1252": 194, "762": [194, 228], "1281": 194, "771": 194, "786": [194, 207, 228], "766": [194, 228], "806": [194, 228], "819": [194, 207, 228], "829": [194, 228], "847": 194, "842": [194, 228], "425": [194, 228], "835": [194, 228], "839": [194, 228, 854], "848": [194, 207, 228], "572": [194, 225, 228, 230], "843": [194, 228], "845": [194, 228], "717": [194, 228], "821": [194, 207, 228], "818": [194, 228], "822": [194, 228], "876": [194, 226, 228, 274], "826": [194, 207, 228], "831": [194, 228], "937": [194, 228], "964": [194, 228], "823": [194, 207, 228], "824": [194, 228], "1100": [194, 207], "1129": [194, 241, 552, 578], "827": [194, 207, 228], "1187": [194, 207], "1216": 194, "1271": 194, "788": [194, 228], "811": [194, 228], "851": [194, 228], "866": [194, 228], "862": [194, 228], "853": [194, 228], "517": [194, 228], "626": [194, 228, 241, 552], "883": [194, 228], "944": [194, 228], "1003": 194, "849": [194, 207, 215, 217, 228], "1060": [194, 241], "1117": 194, "1144": 194, "1169": 194, "838": [194, 207, 228], "1196": 194, "833": [194, 207, 228], "lanczo": 194, "1353": 194, "91709": 194, "26373e": 194, "98776221": 194, "41838256": 194, "06628582": 194, "methodolog": [194, 241], "uncov": [194, 241], "hal": [194, 241], "01848442": [194, 241], "archiv": [194, 241, 381, 831, 837, 839, 851, 860], "ouvert": [194, 241], "lionel": [194, 241], "naccach": [194, 241], "subtend": [194, 241, 854], "e85791": [194, 241], "0085791": [194, 241], "50_decod": [194, 196], "auto_tutorials_machin": 196, "vibrat": 197, "door": [197, 199], "slam": [197, 199], "phone": 197, "geomagnet": 197, "unshield": 197, "headphon": 197, "malfunct": [197, 198, 847], "qr": [197, 253, 564, 572, 575, 872], "sensori": 197, "genesi": 197, "ssp_projector": 197, "readili": [197, 201, 860], "mag_channel": 197, "remove_dc": [197, 201, 473, 474, 792, 872], "get_xdata": [197, 201], "get_ydata": [197, 201], "searchsort": [197, 201], "dx": [197, 201], "dy": [197, 201], "head_width": [197, 201], "length_includes_head": [197, 201], "find_ecg_ev": [197, 199, 205, 214, 564, 568, 862, 872], "create_ecg_epoch": [197, 199, 203, 205, 564, 572, 862, 872], "ecg_epoch": [197, 203, 568], "6007": [197, 202], "streak": 197, "avg_ecg_epoch": 197, "blocki": 197, "efficaci": 197, "pro": [197, 200, 831], "con": [197, 200], "434": 197, "10_preprocessing_overview": [197, 211], "deepcopi": 198, "usabl": [198, 420, 562, 588, 872], "wildcard": 198, "original_bad": 198, "bad_chan": 198, "paus": [198, 263, 264, 739, 872], "codebas": [198, 831, 846, 855, 860], "good_eeg": 198, "all_eeg": 198, "setdiff1d": 198, "excess": [198, 200, 473, 474, 792, 872], "protocol": [198, 847], "sheet": [198, 847], "offlin": [198, 839], "raw2": [198, 214], "invest": [198, 853], "presenc": [198, 209, 220, 238, 241, 266, 387, 429, 831, 847, 872], "unrealist": [198, 847], "dramat": 198, "robust": [198, 202, 203, 237, 241, 261, 262, 405, 552, 649, 654, 872], "uninform": 198, "deweight": 198, "fair": [198, 206], "eeg_data": [198, 212], "eeg_data_interp": 198, "interp": [198, 643, 644, 645, 657, 872], "00000022": 198, "bad_color": [198, 473, 474, 792], "grad_data": 198, "grad_data_interp": 198, "00000009": 198, "propag": [198, 201, 255, 832], "15_handling_bad_channel": [198, 211], "fake_keypress": [199, 214], "keyboard": [199, 215, 739, 848, 872], "push": [199, 200, 831, 872], "enter": [199, 205, 214, 215, 830, 831, 834], "bad_cough": 199, "wrapper": [199, 265, 436, 440, 479, 682, 683, 872], "bad_blink": 199, "blink_annot": 199, "eeg_pick": 199, "albeit": 199, "annotate_break": [199, 862, 872], "first_tim": [199, 472, 473, 474, 493, 581, 872], "block_1": 199, "block_2": 199, "block_annot": 199, "break_annot": [199, 555], "min_break_dur": [199, 555], "t_start_after_previ": [199, 555], "t_stop_before_next": [199, 555], "bad_break": [199, 555], "events_subset": 199, "flat_criteria": 199, "stringent": 199, "reject_tmin": [199, 256, 261, 262, 568, 872], "reject_tmax": [199, 256, 261, 262, 568, 872], "disappear": [199, 238], "subsum": 199, "stronger_reject_criteria": 199, "2000e": 199, "20_rejecting_bad_data": [199, 211], "park": [200, 241], "burru": [200, 241], "ifeachor": [200, 241], "jervi": [200, 241], "widmann": [200, 241], "somedai": 200, "conclud": [200, 227], "lightli": [200, 831], "cautious": 200, "hope": [200, 201, 203, 238], "math": [200, 204, 851], "b_0": 200, "b_1": [200, 854], "b_2": 200, "ldot": 200, "b_m": [200, 854], "a_1": 200, "a_2": 200, "a_n": 200, "mb_kz": 200, "na_kz": 200, "b_k": [200, 272, 854], "denomin": [200, 228, 294, 295, 646, 656, 680, 683, 705, 872], "a_k": 200, "autoregress": 200, "broken": [200, 266, 445, 831, 872], "finit": [200, 219, 228, 241, 449, 847, 854, 872], "impuls": [200, 851], "infinit": [200, 854, 872], "qquad": 200, "foral": [200, 854], "steeper": [200, 201], "accumul": [200, 261, 262], "despit": [200, 227], "throughput": 200, "sharp": [200, 223, 872], "steep": 200, "broader": [200, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "fundament": 200, "fftfreq": 200, "plot_ideal_filt": [200, 780, 862, 872], "f_p": [200, 854], "flim": [200, 201, 780, 787], "dlim": [200, 780], "f_": 200, "nyq": [200, 441, 444], "third_height": 200, "hypothet": [200, 552], "na\u00efv": 200, "brick": [200, 201], "correspondingli": [200, 261, 262, 854], "tighter": [200, 872], "fortun": [200, 204, 854], "remez": 200, "firl": 200, "ifft": 200, "relax": [200, 233, 872], "shallow": [200, 270], "gradual": 200, "shorten": [200, 215, 238, 763, 835, 854, 872], "benefici": [200, 273], "wherebi": 200, "came": [200, 837], "minimum_phas": 200, "falloff": 200, "h_min": 200, "uncompens": 200, "imaginari": [200, 241, 719, 720, 872], "dur": 200, "morlet_freq": 200, "tlim": 200, "ttick": 200, "blip": 200, "n_onset": 200, "x_orig": 200, "transition_band": 200, "create_filt": [200, 201, 261, 262, 263, 264, 443, 444, 473, 474, 780, 862, 872], "x_v16": 200, "twice": [200, 261, 262, 263, 264, 441, 443, 444, 473, 474, 792], "filter_dur": 200, "x_v14": 200, "x_v13": 200, "h_eff": 200, "10001": [200, 872], "design_mne_c_filt": 200, "x_mne_c": 200, "hpw": 200, "lpw": 200, "x_min": [200, 310], "cost": [200, 268, 269, 272, 275, 276, 277, 411, 417, 552, 679, 680, 682, 683, 739, 797, 802, 854], "plot_sign": 200, "yscale": [200, 692, 872], "yticklabel": 200, "get_yticklabel": 200, "iirfilt": [200, 440], "iirdesign": [200, 440], "butterworth": [200, 261, 262, 263, 264, 407, 416, 440, 441, 443, 444, 473, 474, 564, 565, 872], "worsen": 200, "filtfilt": [200, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474, 792], "btype": [200, 440], "ftype": [200, 268, 269, 272, 275, 276, 277, 440], "butter": [200, 440], "x_shallow": 200, "sosfiltfilt": 200, "sosfilt": 200, "zpk2so": 200, "polynomi": [200, 261, 262, 263, 264, 473, 474, 511, 854, 872], "iir_param": [200, 205, 261, 262, 263, 264, 407, 416, 440, 441, 443, 444, 473, 474, 564, 565, 872], "filt": [200, 441], "x_steep": 200, "chebychev": [200, 440], "cheby1": [200, 440], "rp": [200, 440], "chebyshev": [200, 440, 872], "substanti": [200, 208, 261, 262, 267, 369, 461, 853, 854, 860], "adjust_ax": 200, "errant": 200, "misappl": 200, "deleteri": 200, "schr\u00f6ger": [200, 241], "uncontrol": 200, "acunzo": [200, 241], "misinterpret": 200, "tanner": [200, 241], "semant": 200, "syntact": 200, "n400": 200, "p600": 200, "5\u00b5v": 200, "sic": 200, "poststimulu": 200, "octav": 200, "energi": [200, 252, 851, 872], "understood": [200, 739], "cos_t": 200, "sig": [200, 227, 232, 233], "iir_lp_30": 200, "iir_hp_p1": 200, "iir_lp_2": 200, "iir_hp_2": 200, "x_lp_30": 200, "padlen": [200, 440], "x_hp_p1": 200, "x_lp_2": 200, "x_hp_2": 200, "x_f": 200, "lp": 200, "_2": [200, 854], "hp": [200, 208, 253], "nbsp": 200, "evolv": 200, "maess": [200, 241, 872], "rebut": 200, "old": [200, 212, 214, 236, 241, 255, 258, 261, 262, 263, 264, 272, 275, 309, 317, 337, 398, 473, 474, 496, 517, 584, 606, 627, 628, 639, 739, 804, 808, 831, 839, 872], "baseline_plot": 200, "all_ax": 200, "ri": [200, 223, 241, 721, 724], "iir_hp": 200, "x_hp": 200, "leak": [200, 219, 853, 854], "n_pre": 200, "sig_pr": 200, "filter_data": [200, 261, 262, 263, 264, 416, 440, 441, 444, 473, 474, 862, 872], "adopt": [200, 829, 831], "reciproc": [200, 261, 262, 263, 264, 338, 407, 416, 426, 441, 443, 444, 473, 474, 563, 571, 580], "decent": 200, "blackman": [200, 261, 262, 263, 264, 416, 441, 443, 444, 473, 474], "fir_window": [200, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474], "fir_desgin": 200, "8197": 200, "outdat": 200, "construct_iir_filt": [200, 261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474, 564, 565, 862, 872], "transition_bandwidth": 200, "fir_coef": 200, "0545": 200, "0017": 200, "wider": [200, 201], "thoma": [200, 223, 224, 241, 530, 649, 654, 676, 679, 680, 681, 682, 683, 872], "sidnei": [200, 241], "wilei": [200, 241], "471": [200, 223, 228, 241], "82896": [200, 241], "andrea": [200, 241, 294, 872], "erich": [200, 241], "burkhard": [200, 241, 872], "00233": [200, 241], "graham": [200, 241], "mackenzi": [200, 241], "rossum": [200, 241], "darren": [200, 241], "kara": [200, 241], "inappropri": [200, 241, 268, 269, 272, 275, 276, 277], "conclus": [200, 225, 241], "1009": [200, 241], "12437": [200, 241], "1469": [200, 241], "8986": [200, 241], "01009": [200, 241], "commentari": [200, 241], "artefact": [200, 241], "norton": [200, 241], "ermf": [200, 241], "073": [200, 211, 241, 413], "25_background_filt": [200, 211], "mathrm": [201, 208, 223, 708, 718, 720, 722, 723], "raw_highpass": 201, "19821": 201, "9911": [201, 872], "filter_param": 201, "add_arrow": 201, "meg_pick": 201, "raw_notch": 201, "3965": 201, "raw_notch_fit": 201, "spectrum_fit": [201, 444, 473, 474, 872], "notabl": [201, 237, 872], "raw_downsampl": 201, "pitfal": 201, "safe": [201, 212, 241, 261, 262, 317, 373, 374, 375, 378, 379, 381, 386, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 473, 837, 839], "614990234375": [201, 212], "current_sfreq": 201, "desired_sfreq": 201, "obtained_sfreq": 201, "lowpass_freq": 201, "19813025304873463": 201, "80214146205357": 201, "synch": 201, "979": [201, 211, 228], "789": [201, 207, 211], "30_filtering_resampl": [201, 211], "gratton": [202, 241, 551, 595], "croft": [202, 241, 551], "articl": [202, 846], "6607": 202, "bleed": [202, 279, 812], "250m": 202, "model_plain": 202, "picks_artifact": [202, 551, 595], "epochs_clean_plain": 202, "redo": 202, "partli": 202, "variat": [202, 220, 405, 847, 872], "prone": 202, "allevi": [202, 854], "epochs_sub": 202, "model_sub": 202, "epochs_clean_sub": 202, "piec": [202, 214, 261, 262, 473, 474, 854], "ongo": [202, 555, 847, 860], "alik": 202, "model_evok": 202, "epochs_clean_evok": 202, "eog_evoked_clean": 202, "raw_kwarg": 202, "cole": [202, 241, 551, 595], "emanuel": [202, 241, 551, 595, 645, 872], "donchin": [202, 241, 551, 595], "ocular": [202, 203, 205, 241, 551, 595], "90135": [202, 241, 551, 595], "s0987": [202, 241, 551], "7053": [202, 241, 551], "00055": [202, 241, 551], "086": [202, 211, 241, 649, 654], "35_artifact_correction_regress": [202, 211], "corrmap": [203, 862, 872], "guidanc": [203, 205, 853], "blind": [203, 241, 552, 578], "microphon": 203, "unmix": [203, 552, 553, 578, 783, 786, 872], "analogi": 203, "unwant": [203, 205, 209, 315, 872], "ic": [203, 271, 552, 566, 782, 784, 786, 872], "n_pca_compon": [203, 552, 783, 872], "smallest": [203, 228, 338, 405, 552, 851, 854], "runica": [203, 552], "mixing_matrix_": [203, 552], "unmixing_matrix_": [203, 552], "tesla": [203, 205, 218, 854], "artifact_pick": [203, 205], "harder": [203, 831], "filt_raw": 203, "huge": [203, 273, 276, 277, 678], "9010": 203, "get_explained_variance_ratio": [203, 552, 872], "explained_var_ratio": 203, "9358001342790973": 203, "7717091491114122": 203, "ratio_perc": 203, "trackpad": [203, 263, 264, 464, 755, 774], "15459": 203, "954": [203, 228], "ica000": [203, 872], "ica001": [203, 271, 552, 782, 784, 786], "anywai": [203, 213, 831, 837, 872], "read_ica": [203, 552, 862], "reconst_raw": 203, "tediou": 203, "reset": [203, 258, 261, 262, 263, 264, 270, 362, 405, 412, 473, 474, 551, 552, 692, 694, 695, 696, 739, 770, 771, 775, 778, 782, 791, 794, 799, 807, 857, 872], "eog_indic": 203, "prefront": 203, "ctp": [203, 552, 872], "ecg_indic": 203, "caught": 203, "ica014": 203, "refit": [203, 872], "new_ica": 203, "neck": [203, 305], "trail": [203, 552, 580, 735], "s001r03": 203, "s002r03": 203, "19679": 203, "s003": 203, "s003r03": 203, "lib": [203, 829, 837], "python3": [203, 830, 872], "_fastica": 203, "convergencewarn": 203, "s004": 203, "s004r03": 203, "6250": 203, "6249": 203, "6150": 203, "6149": 203, "ica002": 203, "labels_": [203, 552, 566, 785], "get_compon": [203, 552, 872], "subject_index": 203, "component_index": 203, "template_eog_compon": 203, "33638605": 203, "32708878": 203, "32846765": 203, "32807248": 203, "35916344": 203, "37615216": 203, "42464993": 203, "21789139": 203, "22387812": 203, "22237922": 203, "21342143": 203, "2425263": 203, "26757238": 203, "27806995": 203, "15470616": 203, "1693302": 203, "17711037": 203, "17373137": 203, "19651749": 203, "21091786": 203, "22459439": 203, "68783519": 203, "46717407": 203, "64182737": 203, "34165002": 203, "28991817": 203, "76938995": 203, "0057612": 203, "54311043": 203, "54567127": 203, "63806031": 203, "57058636": 203, "52637437": 203, "51788659": 203, "55774431": 203, "56188149": 203, "69340923": 203, "73333856": 203, "2829121": 203, "39253171": 203, "16120286": 203, "25431324": 203, "06352167": 203, "1647002": 203, "11930156": 203, "1811579": 203, "10112171": 203, "12638332": 203, "13623739": 203, "1301851": 203, "14380943": 203, "15329772": 203, "1715539": 203, "16560352": 203, "13293812": 203, "08175318": 203, "10173655": 203, "10764581": 203, "12707317": 203, "09785876": 203, "07433338": 203, "08470678": 203, "07373196": 203, "03379354": 203, "ecg_ind": 203, "francoi": [203, 241, 552], "cardoso": [203, 241, 552], "precondit": [203, 208, 241, 552, 581, 872], "hessian": [203, 241, 552], "4040": [203, 241, 552], "4049": [203, 241, 552], "2844203": [203, 241, 552], "iren": [203, 241], "winkler": [203, 241], "deben": [203, 241, 566], "4101": [203, 241], "4105": [203, 241], "milan": [203, 241, 872], "7319296": [203, 241], "dammer": [203, 241, 552, 872], "schiek": [203, 241, 552], "boer": [203, 241, 552], "carmen": [203, 241, 384, 552], "silex": [203, 241, 552], "mikhail": [203, 241, 552], "zvyagintsev": [203, 241, 552], "uw": [203, 241, 552], "pietrzyk": [203, 241, 552], "mathiak": [203, 241, 552], "2353": [203, 241, 552], "926677": [203, 241, 552], "filipa": [203, 241, 566], "campo": [203, 241, 566], "viola": [203, 241, 566, 872], "jeremi": [203, 241, 566], "thorn": [203, 241, 566], "edmond": [203, 241, 566], "till": [203, 241, 566], "schneider": [203, 241, 566], "tom": [203, 241, 566, 872], "eichel": [203, 241, 566], "877": [203, 228, 241, 566], "clinph": [203, 241, 552, 560, 566, 721, 724], "40_artifact_correction_ica": [203, 211], "setup_3d_ax": 204, "set_zlabel": 204, "set_ylim": [204, 238], "set_zlim": 204, "geometr": [204, 268, 269, 272, 275, 276, 277, 439, 804, 847, 854], "shadow": [204, 633], "cast": [204, 254, 446, 743, 872], "sun": 204, "xy_projection_matrix": 204, "projected_point": 204, "projected_vector": 204, "arrow_coord": 204, "arrow_length_ratio": 204, "symbol": [204, 852, 854, 872], "expans": [204, 208, 261, 262, 263, 264, 426, 473, 474, 511, 562, 563, 571, 580, 854], "unpack": [204, 228, 752, 837], "lucki": 204, "bother": [204, 212], "trigger_effect": 204, "internet": [204, 853], "algebra": [204, 851, 872], "full_matric": 204, "trigger_projection_matrix": 204, "plot_trisurf": 204, "interchang": [204, 294, 827], "ten": [204, 238, 463, 835, 848], "hyperplan": [204, 408, 415], "synonym": [204, 857], "incident": [204, 263, 264, 464, 755, 774], "phrase": 204, "first_projector": 204, "explained_var": [204, 270, 872], "inact": [204, 208, 261, 262, 263, 264, 473, 474, 853], "compute_proj_raw": [204, 205, 352, 353, 854, 862, 872], "ortho": [204, 552], "write_proj": [204, 618, 862, 872], "forgo": 204, "offecg": 204, "remove_exist": [204, 205, 261, 262, 263, 264, 473, 474, 739], "perman": [204, 829, 847, 872], "mags_ecg": 204, "_projector": 204, "cheaper": 204, "consequenti": 204, "mikko": [204, 205, 241, 854], "uusitalo": [204, 205, 241, 854], "bf02534144": [204, 205, 241, 854], "45_projectors_background": [204, 211], "equip": [205, 854], "system_proj": 205, "empty_room_fil": 205, "empty_room_raw": 205, "empty_room_proj": 205, "distant": [205, 851], "_proj": [205, 872], "no_proj": [205, 564, 565], "picks_trac": [205, 790], "plot_projs_joint": [205, 862, 872], "ecg_l_freq": [205, 253, 564], "ecg_h_freq": [205, 253, 564], "filter_method": [205, 564, 565], "presum": 205, "clutter": 205, "eog_proj": 205, "okai": 205, "eog_projs_bad": 205, "perfectli": [205, 238, 715, 854], "get_titl": [205, 209], "get_ylabel": 205, "set_tick_param": 205, "labelbottom": 205, "50_artifact_correction_ssp": [205, 211], "earlob": 206, "collarbon": 206, "disadvantag": [206, 223], "add_reference_channel": [206, 261, 262, 263, 264, 473, 474, 692, 694, 695, 696, 862, 872], "ref_channel": [206, 261, 262, 263, 264, 278, 473, 474, 637, 692, 694, 695, 696], "m2": [206, 261, 262, 263, 264, 473, 474, 637, 857], "set_bipolar_refer": [206, 261, 262, 263, 264, 473, 474, 637, 862, 872], "anod": [206, 634, 872], "cathod": [206, 634, 872], "alter": [206, 208, 212, 255, 581, 872], "raw_new_ref": 206, "raw_avg_ref": 206, "wasn": [206, 872], "infin": [206, 241, 261, 262, 263, 264, 473, 474, 637, 872], "raw_rest": 206, "_raw": 206, "2197": 206, "00413199": 206, "0159844": 206, "05174612": 206, "eeg_bipolar": [206, 634], "transvers": [206, 259], "raw_bip_ref": 206, "36038": [206, 212], "61837": 206, "valueerror": [206, 272, 275, 439, 611, 634, 642, 763], "yao": [206, 241, 261, 262, 263, 264, 473, 474, 637, 652], "0967": [206, 241, 261, 262, 263, 264, 473, 474, 637], "3334": [206, 241, 261, 262, 263, 264, 473, 474, 637], "dezhong": [206, 241], "yun": [206, 241], "qin": [206, 241], "shiang": [206, 241], "hu": [206, 241], "dong": [206, 241, 872], "maria": [206, 241], "bringa": [206, 241], "vega": [206, 241], "pedro": [206, 241], "vald": [206, 241], "\u00e9": [206, 241], "sosa": [206, 241], "00707": [206, 241], "55_setting_eeg_refer": [206, 211], "h\u00f6chenberg": [207, 237, 859, 872], "hoechenberg": [207, 237], "test_move_anon_raw": [207, 208], "v6": [207, 208], "v7": [207, 208, 872], "10800": [207, 208, 872], "31199": [207, 208], "20399": 207, "get_chpi_info": [207, 862, 872], "chpi_freq": 207, "chpi_cod": 207, "chpi_amplitud": [207, 338, 339], "compute_chpi_amplitud": [207, 339, 340, 862, 872], "439": [207, 223, 440], "461": [207, 228], "483": 207, "505": [207, 223, 228], "573": [207, 219, 222, 228], "433": [207, 211, 223, 228], "475": [207, 223, 274], "539": [207, 228], "941": 207, "1029": 207, "804": [207, 228], "855": [207, 228], "1118": 207, "874": [207, 228], "893": 207, "1164": 207, "1210": 207, "948": 207, "1279": 207, "1302": 207, "1325": 207, "1030": 207, "1348": 207, "1059": 207, "1394": 207, "1417": 207, "1087": 207, "1463": 207, "1486": 207, "1125": 207, "1149": 207, "1555": 207, "1578": 207, "1171": 207, "1601": 207, "1182": 207, "1624": 207, "1191": 207, "1647": 207, "1670": 207, "1693": 207, "489": [207, 238], "compute_chpi_loc": [207, 208, 338, 340, 341, 862, 872], "4385": 207, "493": [207, 228], "478": [207, 223, 228], "559": [207, 228], "449": [207, 223, 274], "755": [207, 228], "805": 207, "888": [207, 228], "921": [207, 228], "1072": 207, "1165": 207, "1227": 207, "1269": 207, "1286": 207, "1301": 207, "1315": 207, "1319": 207, "1482": 207, "1524": 207, "1565": [207, 241], "1573": 207, "1580": [207, 261, 262], "1586": 207, "1590": 207, "1599": 207, "1609": 207, "1652": 207, "write_head_po": [207, 339, 341, 347, 348, 862], "compute_chpi_snr": [207, 338, 762, 862, 872], "plot_chpi_snr": [207, 862, 872], "snr_dict": [207, 762], "414": [207, 223, 228], "59_head_posit": [207, 211], "find_bad_channels_maxwel": [208, 580, 862, 872], "obliqu": 208, "filter_chpi": [208, 580, 862, 872], "crosstalk": 208, "fine_cal_fil": 208, "sss_cal_mgh": 208, "crosstalk_fil": 208, "ct_sparse_mgh": 208, "raw_check": 208, "auto_noisy_ch": 208, "auto_flat_ch": 208, "auto_scor": 208, "cross_talk": [208, 562, 571, 580], "return_scor": [208, 571], "ex": [208, 831, 835, 836], "ei": 208, "ch_subset": 208, "scores_noisi": [208, 571], "limits_noisi": [208, 571], "bin_label": 208, "data_to_plot": 208, "cbar_kw": 208, "nanmin": 208, "rect": 208, "nanmax": [208, 226], "appar": [208, 847], "fashion": [208, 367, 872], "min_count": [208, 571], "qualifi": 208, "int_ord": [208, 426, 563, 571, 580], "ext_ord": [208, 338, 340, 344, 426, 562, 563, 571, 580], "thick": [208, 854], "mathtt": [208, 708, 718, 719, 720, 722, 723], "st": [208, 253], "_durat": 208, "penultim": 208, "st_correl": [208, 571, 580, 588], "st_onli": [208, 571, 580, 872], "doublecheck": 208, "get_active_chpi": [208, 862, 872], "chpi_fif_fil": 208, "head_pos_fil": 208, "headpo": [208, 253, 348], "patent": [208, 580, 588], "legal": [208, 763, 853], "commerci": [208, 580], "124905": [208, 241, 426, 563, 580], "1935742": [208, 241, 563, 580], "1759": [208, 241, 580], "1768": [208, 241, 580], "60_maxwell_filtering_sss": [208, 211], "deoxyhaemoglobin": [209, 872], "itertool": 209, "compress": [209, 256, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 381, 473, 474, 568, 569, 692, 695, 837, 872], "novemb": [209, 241, 649, 654], "cw": [209, 367, 827], "set_dur": [209, 255, 872], "mid": [209, 223], "source_detector_dist": [209, 862, 872], "photodetect": 209, "scalp_coupling_index": [209, 862, 872], "beer": 209, "lambert": 209, "law": [209, 853, 872], "raw_haemo": 209, "beer_lambert_law": [209, 862, 872], "haemodynam": 209, "predominantli": 209, "1291": 209, "s4_d4": 209, "s8_d8": 209, "s3_d3": 209, "s7_d6": 209, "s7_d7": 209, "s6_d8": 209, "oxi": [209, 872], "morphologi": 209, "evoked_dict": 209, "color_dict": 209, "aa3377": [209, 708, 718], "styles_dict": 209, "chroma": 209, "drive": [209, 360, 472, 473, 474, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 512], "tidi": 209, "leg_lin": 209, "get_c": 209, "70_fnirs_process": [209, 211], "auto_tutorials_preprocess": 211, "166800": 212, "read_raw_": [212, 472, 854, 872], "famili": [212, 681], "seriou": [212, 853], "parenthes": [212, 854], "estimate_rank": [212, 872], "n_time_samp": 212, "time_sec": 212, "n_chan": [212, 672, 719, 720, 801], "000167471573526": 212, "megacq": 212, "acqch001": 212, "110113": 212, "acqch002": 212, "110112": 212, "acqch003": 212, "110111": 212, "acqch004": 212, "110122": 212, "frequent": [212, 829, 831, 849, 852, 872], "12012": 212, "18018": 212, "24024": 212, "underlyingli": [212, 849], "n_timepoint": [212, 677], "pose": [212, 831], "undo": [212, 610, 872], "eeg_and_eog": 212, "raw_temp": 212, "channel_nam": [212, 490, 611, 872], "eog_and_frontal_eeg": 212, "frivol": 212, "eeg_059": 212, "eeg_060": 212, "blink_detector": 212, "makeshift": 212, "eeg_001": 212, "raw_select": 212, "1503": 212, "unspecifi": [212, 218, 763], "500770084699155": 212, "5001290587975622": 212, "raw_selection1": 212, "raw_selection2": 212, "raw_selection3": 212, "5041000049184614": 212, "sampling_freq": [212, 218], "start_stop_second": 212, "channel_index": [212, 752], "85742192e": 212, "64355481e": 212, "89306644e": 212, "99872648": 212, "00039144": 212, "0020564": 212, "9933487": 212, "99501366": 212, "99667862": 212, "data_arrai": 212, "times_arrai": 212, "meg_0712": 212, "meg_1022": 212, "two_meg_chan": 212, "y_offset": 212, "safest": [212, 847], "eeg_channel_indic": 212, "planar1": [212, 258, 261, 262, 263, 264, 405, 412, 473, 474, 549, 550, 551, 552, 566, 692, 694, 695, 696, 771, 778, 782, 794, 799, 801], "planar2": [212, 258, 261, 262, 263, 264, 405, 412, 473, 474, 549, 550, 551, 552, 566, 692, 694, 695, 696, 771, 778, 782, 794, 799, 801], "first_channel_data": [212, 854], "eeg_and_eog_data": 212, "two_meg_chans_data": 212, "my_data": 212, "npy": [212, 213], "afford": 212, "scaling_tim": 212, "start_end_sec": 212, "to_hdf": 212, "999750": 212, "952283e": 212, "001415": 212, "069226e": 212, "003080": 212, "080921e": 212, "004745": 212, "010755e": 212, "006410": 212, "10_raw_overview": [212, 217], "write_ev": [213, 446, 607, 862, 872], "lst": [213, 607, 817], "array_equ": 213, "_eve": 213, "my_experi": 213, "told": 213, "events_no_button": 213, "merged_ev": 213, "ultim": [213, 831], "send": [213, 736], "cumbersom": 213, "20_event_arrai": [213, 217], "datetim": [214, 255, 261, 262, 263, 264, 266, 280, 473, 474, 872], "compris": [214, 218, 261, 262, 680, 694, 695, 696, 854, 860], "posix": [214, 255], "timestamp": [214, 255, 268, 269, 272, 275, 276, 277, 473, 474, 490, 598, 872], "my_annot": 214, "aaa": 214, "bbb": 214, "ccc": 214, "microsecond": [214, 255, 261, 262, 263, 264, 266, 473, 474, 857], "time_of_first_sampl": 214, "95597083": 214, "iso": 214, "8601": 214, "new_orig_tim": 214, "strftime": 214, "later_annot": 214, "ddd": 214, "eee": 214, "fff": 214, "720100": 214, "darker": 214, "spinbox": 214, "safeguard": [214, 266, 872], "interactive_annot": 214, "bad_": [214, 872], "ordereddict": 214, "95597082905339": [214, 255], "tzinfo": 214, "timezon": [214, 261, 262, 263, 264, 473, 474], "descr": 214, "70597082905339": 214, "45597082905339": 214, "20597082905339": 214, "WILL": 214, "NOT": 214, "annot_from_fil": 214, "30_annotate_raw": [214, 217], "versatil": 215, "lengthen": 215, "unmark": 215, "newli": [215, 760], "hover": 215, "thumbnail": 215, "plot_psd_topo": [215, 236, 261, 262, 263, 264, 473, 474], "40_visualize_raw": [215, 217], "auto_tutorials_raw": 217, "synthet": [218, 490, 568, 572, 854, 872], "hertz": [218, 220, 266, 693, 697, 698, 699, 700, 701, 702], "eog001": 218, "meg001": 218, "meg002": 218, "meg003": 218, "meg004": 218, "meg005": 218, "meg006": 218, "meg007": 218, "meg008": 218, "seven": [218, 854, 872], "molar": [218, 854], "amper": [218, 854], "simulated_raw": 218, "show_scalebar": [218, 261, 262, 473, 474, 769, 792, 872], "simulated_epoch": 218, "column_stack": 218, "condition_a": 218, "condition_b": 218, "evoked_arrai": 218, "778": [218, 222, 228], "10_array_obj": [218, 222], "simulate_stc": [219, 656, 657, 658, 862, 872], "dt": [219, 426, 704], "17545": 219, "hemi_to_ind": 219, "elig": [219, 853], "surf_vertic": 219, "restrict_vert": 219, "intersect1d": 219, "restrict_vertic": [219, 267, 272], "cent_idx": 219, "elsewher": 219, "distances_to_outsid": [219, 267, 872], "compute_area": [219, 267, 872], "stc_gen": 219, "value_fun": [219, 659], "brain_gen": 219, "evoked_gen": 219, "stc_inv": 219, "brain_inv": 219, "45968308": 219, "57021267": 219, "69354621": 219, "evoked_snr": 219, "634": [219, 222, 241, 552], "70_point_spread": [219, 222], "unit_impuls": 220, "coh_signal_gen": 220, "t_rand": 220, "dev": [220, 540, 638], "base_freq": 220, "cumsum": 220, "signal1": 220, "signal2": 220, "am": [220, 259, 262, 264, 369, 474, 857, 872], "nperseg": 220, "coh": [220, 693, 765], "noverlap": 220, "146374": 220, "33830": 220, "stc_signal": 220, "stc_nois": 220, "pretend": [220, 223], "s_rm": 220, "59828": 220, "89697e": 220, "40489756": 220, "65479053": 220, "61269642": 220, "dampen": [220, 633, 708, 718, 722], "consensu": [220, 853], "csd_signal": 220, "filters_approach1": 220, "filters_approach2": 220, "filters_1": 220, "power_approach1": 220, "power_approach2": 220, "plot_approach": 220, "brain1": 220, "42918831e": 220, "04345299e": 220, "40589757e": 220, "brain2": 220, "mia": [220, 241, 294, 295], "liljestr\u00f6m": [220, 241, 294, 295], "susanna": [220, 241, 294, 295, 872], "aro": [220, 241, 294, 295, 872], "245530": [220, 241, 294, 295], "kensuk": [220, 241, 294, 295], "sekihara": [220, 241, 294, 295], "79369": [220, 241, 294, 295], "79370": [220, 241, 294, 295], "80_dic": [220, 222], "auto_tutorials_simul": 222, "ttest_1samp_no_p": [223, 679, 682, 686, 862, 872], "phenomena": 223, "n_subject": [223, 231, 233, 675], "signal_mean": 223, "signal_sd": 223, "noise_sd": 223, "gaussian_sd": 223, "n_src": [223, 269, 274], "h_0": 223, "colon": [223, 253, 381, 857], "h_1": 223, "neq": [223, 854], "geq": 223, "cdot": [223, 652, 854], "1600": 223, "mcc": 223, "plot_t_p": 223, "p_lim": 223, "t_lim": 223, "mgrid": 223, "plot_surfac": [223, 872], "rstride": 223, "cstride": 223, "ztick": 223, "mappabl": 223, "set_tick": 223, "set_ticklabel": 223, "get_xaxi": 223, "set_label_coord": 223, "set_weight": 223, "use_p": 223, "log_": 223, "t_": [223, 854], "exchang": [223, 872], "verid": 223, "n_": [223, 854], "samp": 223, "gymnast": 223, "declar": [223, 853], "p_type_i": 223, "combat": 223, "familywis": 223, "fwer": 223, "benjamini": [223, 676], "hochberg": [223, 676], "strict": [223, 448, 835], "indistinguish": 223, "mathbf": [223, 563], "perm_": 223, "aforement": 223, "rethink": 223, "thought": [223, 673, 827], "refram": 223, "drawback": 223, "touch": [223, 318], "feature_extract": 223, "grid_to_graph": 223, "e402": 223, "mini_adjac": 223, "toarrai": 223, "find_ch_adjac": [223, 224, 225, 228, 326, 672, 679, 680, 682, 683, 760, 862, 872], "combine_adjac": [223, 225, 228, 231, 315, 326, 679, 680, 682, 683, 862, 872], "get_builtin_ch_adjac": [223, 315, 326, 760, 862], "builtin_ch_adj": 223, "adj_nam": 223, "adj_descript": 223, "bti148": 223, "bti248": 223, "bti248grad": 223, "ctf64": 223, "easycap128ch": 223, "easycap32ch": 223, "easycap64ch": 223, "easycapm1": [223, 872], "easycapm11": 223, "m11": 223, "easycapm14": 223, "m14": 223, "easycapm15": 223, "m15": 223, "ecog256": 223, "256channel": 223, "ecog256bipolar": 223, "eeg1010_neighb": 223, "elec1005": 223, "elec1010": 223, "elec1020": 223, "itab153": 223, "itab": 223, "itab28": 223, "language29ch": 223, "mpi": 223, "mpi_59_channel": 223, "neuromag122cmb": 223, "neuromag122": [223, 872], "neuromag306cmb": 223, "neuromag306": 223, "neuromag306mag": [223, 228], "neuromag306planar": [223, 225], "yokogawa160": 223, "yokogawa440": 223, "read_ch_adjac": [223, 315, 319, 672, 760, 862, 872], "n_space": 223, "t_thresh": [223, 225], "t_clust": 223, "viewabl": 223, "p_clust": 223, "cl": 223, "195527": 223, "120434": 223, "1939": 223, "1764": 223, "1634": 223, "1639": [223, 241, 261, 262, 263, 264, 473, 474], "1756": 223, "1880": 223, "509": [223, 224], "1890": 223, "1868": 223, "stat_fun_hat": 223, "t_hat": 223, "p_hat": 223, "043603": 223, "127369": 223, "5433": 223, "5415": 223, "5387": 223, "riemann": 223, "threshold_tfc": 223, "t_tfce": 223, "p_tfce": 223, "h_power": [223, 224], "e_pow": [223, 224], "427": 223, "436": [223, 228, 241], "442": [223, 228], "453": [223, 228, 274], "467": 223, "485": [223, 228, 274], "506": [223, 228], "t_tfce_hat": 223, "p_tfce_hat": 223, "jag": 223, "peaki": 223, "broad": [223, 238], "tighten": 223, "broaden": 223, "exhaust": [223, 294], "unbalanc": 223, "statsmodel": [223, 860, 869], "anova_lm": 223, "wrap": [223, 265, 525, 872], "q": [223, 253, 652, 679, 680, 682, 683, 854], "f_onewai": [223, 673, 675, 680, 683, 862], "f_mway_rm": [223, 227, 233, 675, 862, 872], "f_threshold_mway_rm": [223, 227, 233, 673, 862], "unpair": 223, "spatio_temporal_cluster_test": [223, 224, 228, 232, 233, 862, 872], "spatio_temporal_cluster_1samp_test": [223, 231, 679, 862, 872], "gerard": [223, 241, 685, 686], "ridgwai": [223, 241, 685, 686], "flandin": [223, 241, 685, 686], "karl": [223, 241, 252, 685, 686, 859], "friston": [223, 241, 685, 686], "Will": [223, 241, 253, 265, 308, 441, 472, 552, 685, 686, 691, 704, 711, 735, 813, 836], "penni": [223, 241, 685, 686], "haircut": [223, 241, 685, 686], "nichol": [223, 224, 241, 676, 679, 680, 681, 682, 683], "10_background_stat": [223, 230], "confirmatori": 224, "tfce": [224, 679, 680, 682, 683, 860, 872], "ttest_ind": [224, 686], "unsaf": [224, 695], "median_valu": 224, "long_word": 224, "short_word": 224, "time_window": [224, 692], "ntarget": 224, "short_df": 224, "format_dict": 224, "096": 224, "453939": 224, "222424": 224, "518939": 224, "371515": 224, "064": [224, 241, 343, 534, 652], "811667": 224, "250152": 224, "039697": 224, "318030": 224, "163030": 224, "425152": 224, "682": 224, "684": [224, 228], "absent": [224, 362, 857, 872], "amongst": [224, 238], "temor": 224, "cluster_pv": [224, 679, 680, 682, 683], "significant_point": 224, "delaunai": [224, 225, 315, 872], "917298": 224, "1856": 224, "20_erp_stat": [224, 230], "whom": [225, 228, 831], "downstream": [225, 226], "nonparametr": [225, 226, 228, 241, 679, 680, 681, 682, 683], "spectrotempor": [225, 226, 719, 720, 722, 723], "tfr_epoch": 225, "logratio": [225, 237, 284, 535, 536, 692, 695, 799], "epochs_pow": [225, 227, 228], "lattic": [225, 228, 672, 679, 680, 682, 683], "sensor_adjac": 225, "use_idx": 225, "n_ch": 225, "unrol": 225, "degrees_of_freedom": 225, "455144": 225, "265125": 225, "caveat": [225, 228, 241, 552, 854], "anywher": [225, 872], "t_obs_plot": 225, "f_idx": 225, "t_idx": [225, 473, 474], "nanargmax": 225, "40_cluster_1samp_time_freq": [225, 230], "epochs_condition_1": 226, "epochs_condition_2": 226, "comptuat": 226, "tfr_epochs_1": 226, "tfr_epochs_2": 226, "epochs_power_1": 226, "epochs_power_2": 226, "f_ob": [226, 227, 228, 232, 233, 680, 683], "566824": 226, "912": [226, 228], "923": 226, "evoked_power_1": 226, "evoked_power_2": 226, "evoked_power_contrast": 226, "f_obs_plot": [226, 227, 228], "max_f": 226, "evoked_condition_1": 226, "evoked_condition_2": 226, "evoked_contrast": 226, "50_cluster_between_time_freq": [226, 230], "interplai": 227, "perceptu": 227, "56aud_r": 227, "60vis_l": 227, "64vis_r": 227, "forgiv": 227, "zero_mean": [227, 536, 708, 718, 719, 720, 722], "this_tfr": [227, 228], "this_pow": 227, "n_condit": [227, 228, 233, 680, 683], "n_replic": 227, "factor_level": [227, 233, 673, 675], "formula": [227, 233, 294, 295, 351, 648, 652, 705, 706, 854, 872], "a1b1": [227, 673], "a1b2": [227, 673], "a2b1": [227, 673], "b2b2": 227, "fval": 227, "effect_label": 227, "autumn": [227, 228], "overrid": [227, 271, 366, 368, 473, 474, 490, 629, 630, 631, 632, 737, 763, 835, 837, 853], "necessit": [227, 233, 872], "return_pv": [227, 233, 673], "pthresh": [227, 233], "f_thresh": [227, 228, 233], "419588": 227, "good_clust": [227, 231], "f_imag": [227, 228], "f_obs_plot2": 227, "70_cluster_rmanova_time_freq": [227, 230], "differenti": [228, 241, 261, 262, 263, 264, 429, 473, 474, 721, 724, 860], "plot_ch_adjac": [228, 315, 326, 862, 872], "_csr": 228, "csr_matrix": [228, 273, 274, 315, 326, 617], "bind": [228, 233], "stackexchang": 228, "73993": 228, "alpha_cluster_form": 228, "n_observ": [228, 677, 679, 680, 682, 683, 763], "dfn": [228, 680, 683], "dfd": [228, 680, 683], "cluster_stat": 228, "004107": 228, "094418": 228, "412": 228, "479": 228, "519": [228, 238], "522": 228, "527": 228, "544": 228, "556": 228, "575": 228, "612": 228, "623": 228, "632": 228, "635": 228, "637": 228, "657": 228, "662": 228, "676": 228, "696": 228, "712": 228, "718": 228, "727": 228, "732": 228, "738": 228, "747": 228, "752": 228, "761": 228, "763": 228, "772": 228, "781": 228, "857": 228, "863": 228, "904": [228, 274], "936": 228, "939": 228, "942": 228, "952": 228, "972": 228, "977": 228, "987": 228, "p_accept": 228, "good_cluster_ind": [228, 232, 233], "crimson": [228, 739], "steelblu": [228, 473, 474, 792], "i_clu": 228, "clu_idx": 228, "time_ind": 228, "space_ind": 228, "ch_ind": 228, "f_map": 228, "sig_tim": 228, "ax_topo": 228, "f_evok": 228, "ax_colorbar": 228, "ax_sign": 228, "ymin": [228, 233], "get_ylim": 228, "fill_betweenx": [228, 233], "tfr_adjac": 228, "tfr_threshold": 228, "333033": 228, "428": 228, "431": 228, "452": [228, 274], "481": 228, "504": 228, "507": 228, "535": 228, "548": 228, "554": 228, "558": 228, "565": 228, "614": 228, "616": 228, "628": 228, "631": 228, "633": 228, "636": 228, "663": 228, "667": 228, "697": 228, "703": 228, "723": 228, "742": 228, "743": 228, "749": 228, "751": 228, "773": 228, "785": 228, "809": 228, "812": 228, "858": 228, "879": 228, "887": 228, "891": 228, "894": 228, "896": 228, "909": [228, 236, 240], "917": 228, "919": 228, "928": 228, "949": 228, "969": 228, "971": 228, "974": 228, "976": 228, "981": 228, "986": 228, "989": 228, "991": 228, "difficulti": [228, 399, 829, 851], "freq_ind": 228, "ax_spec": 228, "f_obs_plot_sig": 228, "ax_colorbar2": 228, "mari": [228, 241, 679, 680, 682, 683, 872], "dejan": [228, 241, 679, 680, 682, 683], "draschkow": [228, 241, 679, 680, 682, 683], "e13335": [228, 241, 679, 680, 682, 683], "13335": [228, 241, 679, 680, 682, 683], "75_cluster_ftest_spatiotempor": [228, 230], "auto_tutorials_stat": [230, 235], "equalize_epoch_count": [231, 862], "summarize_clusters_stc": [231, 232, 233, 862, 872], "1000e": [231, 233], "sample_vertic": [231, 233], "evoked1": [231, 858], "evoked2": [231, 858], "n_vertices_sampl": [231, 233], "morph_data": [231, 872], "fsave_vertic": [231, 232, 233], "morph_mat": [231, 233, 273], "n_vertices_fsav": [231, 232, 233], "govern": 231, "member": [231, 677, 853, 857, 860], "max_step": [231, 679, 680, 682, 683], "spatial_src_adjac": [231, 232, 233, 862, 872], "p_threshold": [231, 232], "t_threshold": 231, "clu": [231, 232, 233, 684], "563537": 231, "791547": 231, "permutationt": 231, "good_clusters_idx": 231, "stc_all_cluster_vi": [231, 232, 233], "20_cluster_1samp_spatiotempor": [231, 235], "stc_fname": 232, "n_subjects1": 232, "n_subjects2": 232, "x1": [232, 677, 680], "x2": [232, 677, 680], "subjects_k": 232, "f_threshold": [232, 675], "632172": 232, "30_cluster_ftest_spatiotempor": [232, 235], "engemannn": 233, "r_aud": 233, "r_vi": 233, "tini": [233, 295], "851281": 233, "inds_t": 233, "inds_v": 233, "cluster_ind": 233, "eve_id": 233, "mean_tc": 233, "std_tc": 233, "60_cluster_rmanova_spatiotempor": [233, 235], "v\u00b2": 236, "\u00b2": [236, 237], "t\u00b2": [236, 238], "overridden": [236, 471, 872], "esp": 236, "method_kw": [236, 261, 262, 263, 264, 473, 474, 694, 696], "psd_array_multitap": [236, 261, 262, 263, 264, 410, 473, 474, 694, 696, 720, 723, 862, 872], "irrelev": [236, 253, 831, 854], "epo_spectrum": 236, "npsd": 236, "__getitem__": [236, 254, 255, 256, 258, 259, 261, 262, 266, 270, 274, 285, 299, 473, 474, 518, 693, 694, 695, 696, 727, 872], "evk_spectrum": 236, "61863537e": 236, "13487136e": 236, "88010499e": 236, "89065956e": 236, "24056397e": 236, "91160668e": 236, "56762015e": 236, "65842303e": 236, "39426775e": 236, "38758770e": 236, "03771739e": 236, "98519756e": 236, "agg_fun": [236, 261, 262, 263, 264, 473, 474, 694, 696, 771], "psd_welch": [236, 872], "psd_multitap": [236, 872], "area_mod": [236, 261, 262, 263, 264, 473, 474, 793], "kept": [236, 256, 261, 267, 367, 429, 468, 470, 471, 512, 519, 520, 521, 522, 523, 525, 526, 536, 552, 553, 563, 603, 783, 831, 872], "periodogram": [236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 711], "electroacoust": [236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 711], "1967": [236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 711], "tau": [236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 711], "1161901": [236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 711], "slepian": [236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 704, 710], "bell": [236, 241, 261, 262, 263, 264, 473, 474, 552, 578, 694, 696, 704, 710], "1430": [236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 704, 710], "1978": [236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 704, 710], "7305": [236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 704, 710], "tb02104": [236, 241, 261, 262, 263, 264, 473, 474, 694, 696, 704, 710], "10_spectrum_class": [236, 240], "72074": 237, "mean_spectrum": 237, "psds_mean": [237, 238], "psds_std": [237, 238], "arithmet": [237, 552, 711, 872], "psds_welch_mean": 237, "freqs_mean": 237, "psds_welch_median": 237, "freqs_median": 237, "epo_idx": 237, "unaggreg": [237, 711, 872], "n_segment": [237, 711], "welch_unagg": 237, "topomap_kw": 237, "fmin_fmax": 237, "timefreq": [237, 692], "20_sensors_time_frequ": [237, 240], "fpv": 238, "steadi": 238, "assr": 238, "norcia": 238, "picton": 238, "wet": [238, 848], "dominik": [238, 872], "welk": [238, 872], "evgenii": [238, 872], "kalenkovich": [238, 872], "ttest_rel": 238, "bids_fnam": 238, "12hz": 238, "15hz": 238, "decai": 238, "stabil": [238, 440, 552, 563, 872], "bach": 238, "meigen": 238, "boxcar": [238, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 445, 473, 474, 851, 872], "n_overlap": [238, 261, 262, 263, 264, 473, 474, 694, 696, 711, 793], "n_per_seg": [238, 261, 262, 263, 264, 473, 474, 694, 696, 711, 872], "snr_spectrum": 238, "noise_n_neighbor_freq": 238, "noise_skip_neighbor_freq": 238, "n_trial": [238, 421], "n_frequency_bin": 238, "increment": [238, 470, 552], "ON": 238, "averaging_kernel": 238, "mean_nois": 238, "apply_along_axi": 238, "psd_": 238, "edge_width": 238, "pad_width": 238, "constant_valu": 238, "drastic": [238, 273, 872], "reappear": 238, "grand": [238, 462, 854, 872], "floor": [238, 418, 578, 720, 723], "ceil": [238, 715], "psds_plot": 238, "snr_mean": 238, "snr_std": 238, "stim_freq": 238, "i_bin_12hz": 238, "1st": [238, 634], "i_bin_24hz": 238, "i_bin_36hz": 238, "i_bin_15hz": 238, "i_bin_30hz": 238, "i_bin_45hz": 238, "i_trial_12hz": 238, "i_trial_15hz": 238, "roi_vi": 238, "po9": 238, "po10": 238, "o9": 238, "o10": 238, "picks_roi_vi": 238, "hotel": 238, "snrs_target": 238, "69365541718619": 238, "wait": [238, 256, 261, 831, 839, 872], "snrs_12hz": 238, "snrs_12hz_chaverag": 238, "tstat_roi_vs_scalp": 238, "985902": 238, "693655": 238, "000067": 238, "Such": [238, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 294, 295, 473, 474, 633, 692, 695, 827, 853, 854], "somewher": [238, 473, 474, 792, 836, 855], "unintend": 238, "preregist": 238, "peopl": [238, 831, 842, 853, 872], "detour": 238, "snrs_roi": 238, "freq_plot": 238, "color_plot": 238, "darkblu": [238, 473, 474, 792], "darkgreen": 238, "mediumblu": 238, "seagreen": 238, "xpos_plot": 238, "stim_12hz_tmp": 238, "stim_15hz_tmp": 238, "snr_tmp": 238, "yerr": 238, "stim_12hz_snrs_": 238, "ihz": 238, "stim_15hz_snrs_": 238, "strike": 238, "tstat_12hz_trial_stim": 238, "stim_12hz_snrs_12hz": 238, "stim_12hz_snrs_15hz": 238, "tstat_12hz_trial_1st_harmon": 238, "stim_12hz_snrs_24hz": 238, "stim_12hz_snrs_30hz": 238, "tstat_12hz_trial_2nd_harmon": 238, "stim_12hz_snrs_36hz": 238, "stim_12hz_snrs_45hz": 238, "tstat_15hz_trial_stim": 238, "stim_15hz_snrs_12hz": 238, "stim_15hz_snrs_15hz": 238, "tstat_15hz_trial_1st_harmon": 238, "stim_15hz_snrs_24hz": 238, "stim_15hz_snrs_30hz": 238, "tstat_15hz_trial_2nd_harmon": 238, "stim_15hz_snrs_36hz": 238, "stim_15hz_snrs_45hz": 238, "000037": 238, "000014": 238, "899": 238, "000297": 238, "000024": 238, "006525": 238, "tour": [238, 872], "overli": 238, "motiv": 238, "stim_bandwidth": 238, "window_length": 238, "window_snr": 238, "i_win": 238, "this_spectrum": 238, "windowed_psd": 238, "windowed_freq": 238, "stimfreq": 238, "bin_width": 238, "skip_neighbor_freq": 238, "n_neighbor_freq": 238, "windowed_snr": 238, "boxplot": 238, "stochast": [238, 241, 552], "window_start": 238, "greyscal": 238, "optimist": 238, "serious": [238, 854], "50_ssvep": [238, 240], "auto_tutorials_tim": 240, "alphabet": [241, 831, 872], "fiorenzo": [241, 552], "artoni": [241, 552], "magazin": [241, 405], "962275": 241, "stephan": [241, 405], "bonnet": [241, 405], "marco": [241, 405], "congedo": [241, 405], "jutten": [241, 405], "riemannian": [241, 405], "multimedia": [241, 405], "mmsp": [241, 405], "5662067": [241, 405], "barber": [241, 351], "51814": [241, 351], "www": [241, 351, 444, 481, 566, 831, 851], "ucl": [241, 351], "staff": [241, 351, 837], "brml": [241, 351], "becker": [241, 652], "albera": [241, 652], "comon": [241, 652], "gribonv": [241, 652], "fleureau": [241, 652], "guillotel": [241, 652], "merlet": [241, 652], "sissi": [241, 652], "august": [241, 652], "anthoni": [241, 552], "terrenc": [241, 552], "sejnowski": [241, 552, 578], "deconvolut": [241, 552, 578], "1159": [241, 552, 578], "1995": [241, 398, 552, 578, 854], "neco": [241, 552], "anna": [241, 645, 872], "rita": [241, 645], "bentivoglio": [241, 645], "bressman": [241, 645], "cassetta": [241, 645], "donatella": [241, 645], "carretta": [241, 645], "pietro": [241, 645], "tonali": [241, 645], "alberto": [241, 645], "albanes": [241, 645], "disord": [241, 645], "1028": [241, 645], "870120629": [241, 645], "berg": [241, 854], "scherg": [241, 854], "1994": [241, 519, 854], "90113": [241, 854], "quentin": [241, 872], "anderson": [241, 872], "arindam": 241, "banerje": 241, "kenji": 241, "fukumizu": 241, "24th": 241, "1288": 241, "pmlr": 241, "apr": 241, "mlr": 241, "v130": 241, "bertrand21a": 241, "ryota": [241, 405], "tomioka": [241, 405], "lemm": [241, 405], "motoaki": [241, 405], "kawanab": [241, 405], "msp": [241, 405], "4408441": [241, 405], "fred": 241, "bookstein": 241, "thin": 241, "plate": 241, "24792": 241, "oleg": 241, "burdakov": 241, "bori": 241, "merkulov": 241, "lith": 241, "\u00f6": 241, "ping": 241, "yilun": [241, 351], "chen": [241, 351], "ami": [241, 351], "wiesel": [241, 351], "yonina": [241, 351], "eldar": [241, 351], "alfr": [241, 351, 847], "hero": [241, 351], "shrinkag": [241, 351, 405, 412, 413, 553, 872], "mmse": [241, 351], "2053029": [241, 351], "contributor": [241, 835, 838, 850, 851, 853, 860, 872], "readthedoc": 241, "ronald": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "crochier": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "lawrenc": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 560, 692, 695], "rabin": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "multir": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "englewood": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "cliff": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "nj": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "605162": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "adrian": [241, 267, 272], "guggisberg": 241, "erik": [241, 872], "findlai": 241, "ryan": [241, 872], "canolti": 241, "mitchel": 241, "berger": 241, "barbaro": 241, "heidi": 241, "kirsch": 241, "1686": 241, "sereno": [241, 854], "1006": [241, 676, 854], "nimg": [241, 676, 854], "0395": [241, 854], "arthur": [241, 519, 721, 724], "liu": [241, 519], "buckner": [241, 519], "lewin": [241, 519], "s0896": [241, 519], "6273": [241, 519], "81138": [241, 519], "jocn": 241, "darva": 241, "ermer": 241, "20171": 241, "salat": [241, 854], "andr\u00e9": [241, 854], "kouw": [241, 854], "niko": [241, 854], "makri": [241, 854], "florent": [241, 854], "s\u00e9gonn": [241, 854], "quinn": [241, 854, 872], "s69": [241, 854], "s84": [241, 854], "0396": 241, "tootel": 241, "intersubject": 241, "sici": 241, "1097": 241, "0193": 241, "hbm10": 241, "genoves": [241, 676], "lazar": [241, 405, 676], "878": [241, 676], "1037": [241, 676], "supplementari": [241, 383], "neuroanatom": [241, 383], "esm": [241, 383], "art": [241, 383, 860], "3a10": [241, 383], "2fnature18933": [241, 383], "mediaobject": [241, 383], "41586_2016_bfnature18933_moesm330_esm": [241, 383], "s\u00f3nia": [241, 847], "gon\u00e7alv": [241, 847], "casper": [241, 847], "munck": [241, 847], "jeroen": [241, 847, 872], "verbunt": [241, 847], "fetsj": [241, 847], "bijma": [241, 847], "rob": [241, 847, 872], "heethaar": [241, 847], "vivo": [241, 847], "resist": [241, 847], "eit": [241, 847], "812164": [241, 847], "teon": [241, 846, 872], "lauri": [241, 846], "parkkonen": [241, 846], "\u00e4": [241, 413, 846], "inen": [241, 846], "fnin": [241, 846], "00267": [241, 846], "greischar": [241, 560], "cori": [241, 560], "burghi": [241, 560], "carien": [241, 560], "reekum": [241, 560], "daren": [241, 560], "jackson": [241, 560], "diego": [241, 560], "pizzag": [241, 560], "corrina": [241, 560], "mueller": [241, 560], "davidson": [241, 560], "electroencephalograph": [241, 560], "hne": [241, 413], "gari": [241, 674], "heiman": [241, 674], "houghton": [241, 674], "mifflin": [241, 674], "boston": [241, 252, 674, 859], "17028": [241, 674], "joerg": [241, 294], "hipp": [241, 294], "hawellek": 241, "maurizio": 241, "corbetta": 241, "marku": [241, 294], "siegel": [241, 294], "engel": [241, 294], "spontan": [241, 847], "3101": 241, "percept": [241, 294, 827, 848, 872], "aapo": [241, 552], "hyv\u00e4rinen": [241, 552], "761722": [241, 552], "toga": 241, "mazziotta": 241, "academ": 241, "san": 241, "b978": 241, "012693019": 241, "50012": 241, "bf02512476": [241, 519], "tkk": 241, "a559": 241, "helsinki": 241, "technologi": [241, 252, 859], "16463": 241, "kevin": [241, 721, 724], "jone": [241, 721, 724], "bernic": [241, 721, 724], "porjesz": [241, 721, 724], "chorlian": [241, 721, 724], "madhavi": [241, 721, 724], "rangaswami": [241, 721, 724], "chella": [241, 721, 724], "kamarajan": [241, 721, 724], "ajayan": [241, 721, 724], "padmanabhapillai": [241, 721, 724], "stimu": [241, 721, 724], "henri": [241, 721, 724], "begleit": [241, 721, 724], "deficit": [241, 721, 724], "diagnos": [241, 721, 724, 872], "alcohol": [241, 721, 724], "2128": [241, 721, 724], "jorg": 241, "jovicich": 241, "silvest": 241, "czanner": 241, "elizabeth": 241, "halei": 241, "andr": [241, 872], "kennedi": 241, "franz": 241, "schmitt": 241, "gregori": 241, "brown": [241, 534, 652], "macfal": 241, "antti": [241, 872], "ahonen": 241, "lain": 241, "claudia": [241, 854], "tesch": [241, 854], "3315": 241, "3320": 241, "281163": 241, "zhou": [241, 405], "1990": [241, 405], "bf01129656": [241, 405], "philipp": 241, "lachaux": 241, "eugenio": 241, "rodriguez": [241, 872], "martineri": 241, "francisco": 241, "varela": 241, "synchroni": 241, "hbm4": 241, "attent": [241, 267, 272, 857], "ledoit": [241, 351], "wolf": [241, 351], "s0047": [241, 351], "259x": [241, 351], "00096": [241, 351], "te": [241, 552, 872], "girolami": [241, 552, 578], "subgaussian": [241, 552, 578, 872], "supergaussian": [241, 552, 578], "089976699300016719": [241, 552], "seok": [241, 847], "lew": [241, 847], "carsten": [241, 847], "wolter": [241, 847], "anwand": [241, 847], "macleod": [241, 847], "compart": [241, 253, 516, 827, 847, 857], "2862": [241, 847], "2878": [241, 847], "20714": [241, 847], "witzel": [241, 530, 649, 654], "8945": 241, "8950": 241, "10024": [241, 872], "lowri": [241, 674], "vassarstat": [241, 674], "bernard": [241, 652], "giusiano": [241, 652], "roehri": [241, 652], "b\u00e9nar": [241, 652], "kathryn": [241, 383], "mill": [241, 383], "m9": [241, 383], "figshar": [241, 383], "3498446": [241, 383], "molin": [241, 534, 652], "quantif": [241, 426, 534, 652, 838], "1069": [241, 534, 652], "paul": [241, 854, 872], "748978": [241, 854], "ali": [241, 721, 724], "moukadem": [241, 721, 724], "zi": [241, 721, 724], "bouguila": [241, 721, 724], "djaffar": [241, 721, 724], "ould": [241, 721, 724], "abdeslam": [241, 721, 724], "alain": [241, 721, 724], "dieterlen": [241, 721, 724], "lisbon": [241, 721, 724], "6952743": [241, 721, 724], "mourtazaev": [241, 398], "1093": [241, 398], "suresh": [241, 557], "muthukumaraswami": [241, 557], "00138": [241, 557], "ndiay": 241, "fercoq": 241, "salmon": 241, "sugiyama": 241, "luxburg": 241, "guyon": 241, "garnett": 241, "curran": 241, "inc": [241, 831, 836], "nip": [241, 468], "cc": [241, 468, 853], "6405": 241, "holm": [241, 681], "primer": [241, 681], "1058": [241, 681], "ou": 241, "bai": 241, "wheaton": 241, "sherri": 241, "vorbach": 241, "hallett": 241, "2292": 241, "2307": 241, "zieh": 241, "aloi": 241, "schl\u00f6gl": 241, "kr\u00e4mer": 241, "brismar": 241, "robustli": 241, "physrevlett": 241, "234101": 241, "hilla": [241, 388], "paananen": [241, 388], "jyrki": [241, 388], "m\u00e4kel\u00e4": [241, 388], "zenodo": [241, 388, 846], "889234": [241, 388], "reilli": [241, 384, 848, 872], "mayada": [241, 384, 848], "elsabbagh": [241, 384, 848], "infant": [241, 384, 872], "117682": [241, 384, 848], "thom": [241, 847], "oostendorp": [241, 847], "delbek": [241, 847], "dick": [241, 847], "stegeman": [241, 847], "vitro": [241, 847], "1487": [241, 847], "880100": [241, 847], "oppenheim": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "schafer": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "buck": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "prentic": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "hall": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "saddl": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "river": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "754920": [241, 259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "roberto": [241, 519, 854], "pascual": [241, 519, 854], "marqui": [241, 519, 854], "martha": [241, 519, 854], "koukkou": [241, 519, 854], "kieko": [241, 519, 854], "kochi": [241, 519, 854], "bernd": [241, 519, 854], "saletu": [241, 519, 854], "hideaki": [241, 519, 854], "tanaka": [241, 519, 854], "koichi": [241, 519, 854], "hirata": [241, 519, 854], "lesli": [241, 519, 854], "prichep": [241, 519, 854], "rolando": [241, 519, 854], "biscai": [241, 519, 854], "lirio": [241, 519, 854], "toshihiko": [241, 519, 854], "kinoshita": [241, 519, 854], "royal": [241, 351, 519, 854], "1952": [241, 519, 854], "3768": [241, 519, 854], "3784": [241, 519, 854], "1098": [241, 519, 854], "rsta": [241, 519, 854], "0081": [241, 519, 854], "donald": 241, "perciv": 241, "walden": 241, "35532": 241, "cbo9780511622762": 241, "dinh": [241, 872], "tuan": 241, "pham": 241, "hermitian": 241, "1136": 241, "s089547980035689x": 241, "luca": [241, 584], "pollonini": [241, 584], "cristen": [241, 584], "homer": [241, 584], "abaya": [241, 584], "heather": [241, 584], "bortfeld": [241, 584], "beauchamp": [241, 268, 272, 276, 584, 797], "oghalai": [241, 584], "cochlear": [241, 584], "ernesto": 241, "pereda": 241, "ricardo": 241, "bru": 241, "\u00f1": 241, "maest": 241, "\u00fa": 241, "dog": 241, "056011": 241, "2552": 241, "aacfe4": 241, "sanchez": [241, 384], "meek": [241, 384], "wanz": [241, 384], "xie": [241, 384], "1254": [241, 384], "hat": [241, 527, 563, 652, 685, 686, 854, 872], "noam": [241, 567], "pele": [241, 567], "00694": [241, 567], "abraham": [241, 261, 262, 263, 264, 473, 474], "savitzki": [241, 261, 262, 263, 264, 473, 474], "marcel": [241, 261, 262, 263, 264, 473, 474], "golai": [241, 261, 262, 263, 264, 473, 474, 872], "chemistri": [241, 261, 262, 263, 264, 473, 474], "1627": [241, 261, 262, 263, 264, 473, 474], "1964": [241, 261, 262, 263, 264, 473, 474], "ac60214a047": [241, 261, 262, 263, 264, 473, 474], "nathaniel": [241, 678], "marta": [241, 678], "12320": [241, 678], "corn": 241, "stam": 241, "daffertshof": 241, "diminish": 241, "1178": 241, "1193": 241, "20346": 241, "luigi": [241, 721, 724], "rodino": [241, 721, 724], "bert": [241, 721, 724], "schulz": [241, 721, 724, 872], "wong": [241, 721, 724, 872], "pseudo": [241, 294, 295, 311, 721, 724], "american": [241, 721, 724], "1090": [241, 721, 724], "fic": [241, 721, 724], "2218": [241, 470], "2228": [241, 470], "tmi": [241, 470], "2553445": [241, 470], "evelina": 241, "busa": 241, "glessner": 241, "hybrid": 241, "1075": 241, "catherin": [241, 708, 718, 719, 722], "tallon": [241, 708, 718, 719, 722], "baudri": [241, 708, 718, 719, 722], "claud": [241, 708, 718, 719, 722], "delpuech": [241, 708, 718, 719, 722], "jneurosci": [241, 708, 718, 719, 721, 722, 724], "00722": [241, 708, 718, 719, 722], "minna": [241, 854], "huotilainen": [241, 854], "oili": [241, 854], "salonen": [241, 854], "00064": [241, 854], "bishop": [241, 351], "9868": [241, 351], "00196": [241, 351], "vinck": 241, "wingerden": 241, "franscesco": 241, "battaglia": 241, "cyriel": 241, "pennartz": 241, "1548": 241, "womelsdorf": 241, "pascal": 241, "fri": 241, "rhythmic": 241, "wehner": [241, 426], "modi": [241, 426], "children": [241, 252, 426, 857, 859], "wheat": [241, 721, 724], "pier": [241, 721, 724], "cornelissen": [241, 721, 724], "frost": [241, 721, 724], "hansen": [241, 721, 724], "phonologi": [241, 721, 724], "4448": [241, 721, 724], "whitham": [241, 552], "sean": [241, 552], "fitzgibbon": [241, 552], "clark": [241, 552, 872], "loveless": [241, 552], "marita": [241, 552], "broberg": [241, 552], "angu": [241, 552], "wallac": [241, 552], "lilli": [241, 552], "hardi": [241, 552], "rik": [241, 552], "fronsko": [241, 552], "alyson": [241, 552], "pulbrook": [241, 552], "paralysi": [241, 552], "1877": [241, 552], "1888": [241, 552], "rei": [241, 468], "ram\u00edrez": [241, 468], "jason": [241, 468], "palmer": [241, 468], "bhaskar": [241, 468], "rao": [241, 468], "neuroelectromagnet": [241, 468], "sch\u00f6lkopf": [241, 468], "platt": [241, 468], "hoffman": [241, 468], "1505": [241, 468], "3089": [241, 468], "jun": [241, 652], "juliu": [241, 652, 872], "dewald": [241, 652], "april": [241, 652], "zhi": [241, 854, 872], "multilay": [241, 854], "moritz": [241, 405, 872], "wentrup": [241, 405], "buss": [241, 405], "921154": [241, 405], "jair": [241, 552, 872], "montoya": [241, 552, 872], "mart\u00ednez": [241, 552], "petr": [241, 552], "tichavsk\u00fd": [241, 552], "massoud": [241, 552], "babai": [241, 552], "zadeh": [241, 552], "nad\u00e8g": [241, 552], "thirion": [241, 552], "moreau": [241, 552], "latent": [241, 552, 786], "10169": [241, 552], "lectur": [241, 552, 856], "cham": [241, 552], "53547": [241, 552], "0_27": [241, 552], "pharmacologi": [241, 519, 854], "pubm": [241, 519, 854], "ncbi": [241, 519, 854], "nlm": [241, 519, 854], "nih": [241, 519, 854], "gov": [241, 519, 854], "12575463": [241, 519, 854], "encyclopedia": 241, "php": 241, "international_system_of_unit": 241, "oldid": 241, "982683558": 241, "googl": [242, 252, 804, 860, 872], "scholar": 242, "dec": [242, 737, 830], "1370": 242, "1640": 242, "health": 252, "r01": 252, "eb009048": 252, "eb006385": 252, "hd040712": 252, "ns044319": 252, "ns037462": 252, "ns104585": 252, "p41": 252, "eb015896": 252, "rr014075": 252, "foundat": [252, 853], "0958669": 252, "1042134": 252, "european": [252, 854], "council": 252, "ystg": 252, "263584": 252, "676943": 252, "depart": 252, "fg02": 252, "99er62764": 252, "agenc": 252, "national": 252, "la": [252, 848, 859, 872], "recherch": [252, 859], "neuc": 252, "0002": 252, "idex": 252, "pari": [252, 872], "saclai": 252, "0003": 252, "summer": [252, 860, 872], "year": [252, 266, 398, 846, 853, 860], "amazon": 252, "grant": [252, 263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 468, 470, 471, 530, 779, 831, 853, 872], "zuckerberg": 252, "eoss2": [252, 860], "eoss4": 252, "employe": [252, 853], "duti": [252, 853], "aalto": [252, 848, 859], "yliopiston": [252, 859], "perustieteiden": [252, 859], "korkeakoulu": [252, 859], "athinoula": [252, 848, 859], "martino": [252, 848, 859], "hospit": [252, 848, 859], "philadelphia": [252, 859], "donder": [252, 859], "behaviour": [252, 255, 500, 502, 859], "radboud": [252, 859], "school": [252, 859], "informatiqu": [252, 859], "automatiqu": [252, 859], "franzen": [252, 859], "universit\u00e4t": [252, 859], "graz": [252, 859], "macquari": [252, 848, 859], "massachusett": [252, 859], "planck": [252, 859], "f\u00fcr": [252, 859], "bildungsforschung": [252, 859], "uniwersytet": [252, 859], "humanistycznospo\u0142eczni": [252, 859], "washington": [252, 859], "aarhu": [252, 859], "universitet": [252, 859], "commissariat": [252, 859], "\u00e0": [252, 859], "\u00e9nergi": [252, 859], "atomiqu": [252, 859], "aux": [252, 859], "forschungszentrum": [252, 859], "j\u00fclich": [252, 859], "du": [252, 859], "cerveau": [252, 859], "moell": [252, 859], "\u00e9pini\u00e8r": [252, 859], "sant\u00e9": [252, 859], "m\u00e9dical": [252, 859], "technisch": [252, 859], "t\u00e9l\u00e9com": [252, 859], "exit": [253, 267, 464, 541, 831], "outfil": 253, "anon": 253, "keep_hi": [253, 261, 262, 263, 264, 473, 474, 475, 872], "n_dai": 253, "daysback": [253, 261, 262, 263, 264, 473, 474, 475], "anonymize_info": [253, 261, 262, 263, 264, 473, 474, 862, 872], "resav": 253, "projoff": [253, 872], "navigaton": 253, "show_opt": [253, 473, 474, 792], "dialog": [253, 261, 262, 263, 264, 473, 474, 792, 795, 837], "allowmaxshield": 253, "filtord": [253, 473, 474, 792, 872], "iir": [253, 261, 262, 263, 264, 407, 416, 440, 441, 443, 444, 473, 474, 564, 565, 584, 646, 656, 705, 780, 792, 861, 872], "clamp": [253, 473, 474, 739, 792], "filterchpi": [253, 872], "head_shap": 253, "out_fnam": 253, "rotation_x": [253, 484], "compensatori": 253, "deg": 253, "ecg_ch": [253, 484], "eog_ch": [253, 484, 872], "e31": [253, 484], "e63": [253, 484], "my_raw": 253, "quiet": [253, 261, 262, 695], "mne_process_raw": [253, 857], "in_raw": 253, "clean_raw": 253, "file_a": 253, "file_b": 253, "test_raw_sss": 253, "filters": 253, "tap": [253, 564, 565, 572, 573, 848], "rej": 253, "rej_grad": 253, "rej_mag": 253, "rej_eeg": 253, "rej_eog": 253, "bad_fnam": 253, "raw_event_fnam": 253, "tstart": [253, 268, 269, 272, 275, 276, 277, 564, 565, 572, 573, 575, 872], "qrsthr": 253, "qrs_threshold": [253, 564, 572, 575], "eog_l_freq": [253, 565], "eog_h_freq": [253, 565], "head_opac": [253, 464], "trackbal": [253, 263, 264, 464, 739, 755, 774], "terrain": [253, 263, 264, 464, 739, 755, 774, 872], "flash30": [253, 300, 854, 872], "noflash30": [253, 854], "flash5": [253, 300, 304, 854, 872], "multiecho": [253, 300, 304], "echo": [253, 300, 830, 836, 837, 854], "noconvert": 253, "deprec": [253, 405, 412, 552, 704, 782, 791, 862, 872], "unwarp": [253, 300, 854], "grad_unwarp": [253, 300, 854], "symlink": [253, 304, 306, 872], "flash_path": 253, "parameter_map": [253, 304, 854], "mef05": 253, "mef30": 253, "mef05_": [253, 300, 872], "mef30_": [253, 300, 872], "spin": [253, 304], "termin": [253, 829, 830, 831, 834, 835, 837, 842, 851, 862, 872], "kt2fiff": 253, "mkheadsurf": [253, 305], "topolog": [253, 305, 362, 404, 424, 455, 600, 629, 631, 820, 847, 872], "suffix": [253, 271, 473, 474, 486, 872], "_sss": 253, "origin_out": 253, "autobad": 253, "maxst": 253, "buflen": 253, "st_buflen": 253, "st_corr": 253, "mv_tran": 253, "in_fnam": 253, "movecomp": 253, "mv_hp": 253, "ascii": [253, 489, 598, 604, 626, 872], "hpistep": 253, "mv_hpistep": 253, "hpisubt": 253, "mv_hpisubt": 253, "nohpicon": 253, "linefreq": 253, "nooverwrit": 253, "mx_arg": 253, "sof": 253, "bmin": 253, "bash": [253, 830, 831, 836, 837, 842], "TO": 253, "1280": [253, 404, 509], "brainc": 253, "skullc": 253, "scalpc": 253, "homog": [253, 509, 847], "7mm": 253, "joblib": [253, 261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 408, 415, 418, 421, 422, 448, 461, 463, 473, 474, 511, 514, 515, 525, 526, 535, 536, 557, 564, 565, 635, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 771, 774, 793, 860, 872], "cp": [253, 837, 854, 872], "mri_watersh": [253, 306, 851, 854], "gcaatla": [253, 306, 851], "brain_atla": [253, 306], "preflood": [253, 306, 851], "brainmask": [253, 306, 851, 872], "fname2": 253, "parser": [254, 434, 872], "reaverag": 254, "category_nam": 254, "acq_dict": 254, "subav": 254, "subaverag": [254, 857], "__len__": [254, 255, 257, 258, 259, 261, 262, 266, 267, 270, 271, 285, 299, 473, 474, 518, 693, 694, 695, 727], "n_cat": 254, "uint_cast": [254, 446], "delayed_lookup": 254, "acqp": 254, "mne_stim_channel_2": [254, 446, 447], "uint16": [254, 446], "sti014": [254, 446, 872], "sti016": [254, 446], "32768": [254, 404, 446], "mne_fix_stim14": [254, 446], "slight": [254, 872], "asynchroni": 254, "conds_data": 254, "n_epochs_out": 254, "n_annot": 255, "iso8601": 255, "delimit": 255, "bad_flux": 255, "bad_nois": 255, "meg0111": [255, 256, 261, 262, 263, 264, 266, 307, 324, 326, 356, 365, 407, 421, 426, 473, 474, 551, 552, 554, 567, 568, 569, 574, 577, 586, 588, 595, 627, 660, 678, 687, 692, 694, 695, 696, 700, 701, 702, 703, 705, 723, 763, 769, 770, 773, 775, 776, 783, 790, 793], "meg2563": 255, "meg1443": 255, "n_blink": 255, "yy": [255, 485], "______________": 255, "_________": 255, "anot": 255, "___________________": 255, "o_________": 255, "________________________": 255, "o______________": 255, "crash": [255, 872], "o________________________": 255, "bad_acq_skip": [255, 261, 262, 263, 264, 473, 474, 493, 571, 580, 872], "__add__": [255, 257, 258, 267, 268, 269, 272, 274, 275, 276, 277, 309, 692], "concatenc": 255, "__iter__": [255, 258, 261, 262, 266, 270, 285, 299, 518, 642, 694, 695, 727], "array_lik": [255, 256, 258, 259, 261, 262, 263, 264, 266, 270, 271, 280, 307, 309, 324, 326, 356, 365, 405, 407, 412, 415, 418, 420, 421, 422, 426, 432, 471, 473, 474, 484, 496, 511, 516, 551, 552, 553, 554, 557, 561, 562, 563, 566, 567, 568, 569, 571, 574, 577, 580, 586, 588, 594, 595, 606, 630, 631, 646, 660, 670, 671, 674, 676, 677, 678, 686, 687, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 708, 718, 722, 723, 739, 744, 755, 756, 763, 769, 770, 771, 773, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 787, 789, 790, 791, 793, 794, 795, 799, 801], "use_orig_tim": [255, 872], "676071": 255, "shortstimulu": 255, "longstimulu": 255, "tabular": [255, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 694, 695, 696], "on_miss": [256, 261, 262, 263, 264, 266, 281, 282, 313, 345, 346, 398, 432, 452, 473, 474, 692, 694, 695, 696, 772, 872], "preload_at_end": 256, "event_rep": [256, 261, 872], "raw_sfreq": [256, 262], "abstract": [256, 860], "meg2623": [256, 261, 262, 263, 264, 266, 307, 324, 326, 356, 365, 407, 421, 426, 473, 474, 551, 552, 554, 567, 568, 569, 574, 577, 586, 588, 595, 660, 678, 687, 692, 694, 695, 696, 700, 701, 702, 703, 705, 723, 763, 769, 770, 773, 775, 776, 783, 790, 793], "ptp": [256, 261, 262, 552, 554, 568], "40e": [256, 261, 262, 356, 552, 568, 569, 678], "zeroth": [256, 261, 872], "unproject": [256, 261, 512, 603], "postpon": [256, 261, 512, 603], "silent": [256, 261, 398, 581, 849, 872], "irrespect": [256, 261, 362, 424, 455, 600, 629, 631, 820, 854], "coincid": [256, 261], "my_epoch": 256, "compensation_grad": [256, 261, 262, 263, 264, 266, 472, 473, 474, 552, 692, 694, 695, 696], "__sub__": [257, 267, 268, 269, 272, 275, 276, 277, 692], "nfree": [258, 259, 857, 872], "eig": [258, 857], "eigvec": [258, 857], "eigenvector": [258, 854, 857], "__contains__": [258, 261, 262, 263, 264, 266, 270, 285, 299, 473, 474, 518, 552, 692, 694, 695, 696, 727], "as_diag": 258, "diagnois": 258, "fromkei": [258, 266, 270, 285, 299, 518, 727], "fig_svd": [258, 764], "1e13": [258, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 351, 355, 356, 405, 412, 414, 473, 474, 770, 773, 775, 777, 778, 800], "1e15": [258, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 351, 355, 356, 405, 412, 414, 473, 474, 770, 773, 775, 777, 778, 800], "pluss": [258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801], "markeredgecolor": [258, 261, 262, 263, 264, 405, 412, 473, 474, 551, 692, 694, 696, 756, 771, 778, 794, 799, 801], "mask_po": [258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801], "cloughtocher2dinterpol": [258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801], "linearndinterpol": [258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801], "encompass": [258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801], "polygon": [258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 805, 872], "hull": [258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 566, 692, 694, 696, 756, 771, 778, 782, 791, 794, 799, 801, 872], "doc": [258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 638, 692, 694, 696, 708, 718, 756, 771, 778, 782, 791, 794, 799, 801, 831, 851, 860, 872], "rightmost": [258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 771, 778, 782, 791, 794, 799], "mini": [258, 261, 262, 263, 264, 270, 405, 412, 473, 474, 551, 552, 692, 694, 696, 771, 778, 782, 791, 794, 799], "unrepresent": [258, 266, 270, 285, 299, 518, 727], "popitem": [258, 266, 270, 285, 299, 518, 727], "lifo": [258, 266, 270, 285, 299, 518, 727], "setdefault": [258, 266, 270, 285, 299, 518, 727], "khi2": 259, "mne_dipole_fit": [259, 872], "longitudin": 259, "qlong": 259, "qtran": 259, "\u03c7": 259, "dipolefix": [259, 448, 602, 862], "plot_amplitud": 259, "show_al": [259, 767], "highlight_color": [259, 767], "head_sourc": [259, 511, 767, 872], "glyph": [259, 269, 275, 277, 739, 755, 767, 798, 802, 804, 872], "cube": [259, 767, 872], "mri_rot": [259, 767], "figure3d": [259, 263, 264, 268, 269, 271, 272, 274, 275, 276, 277, 748, 755, 767, 774, 797, 798, 802, 809, 831, 849, 862], "600x600": [259, 755, 767], "get_head_surf": [259, 511, 767, 862, 872], "bdip": [259, 602, 872], "use_round": [259, 260, 261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 434, 473, 474, 692, 695], "pos_mni": 259, "n_po": [259, 339, 341, 466, 467, 781], "subdirectori": [259, 457, 739], "aspect_kind": 260, "combine_event_id": [261, 862], "id_numb": 261, "event_id_1": 261, "event_id_2": 261, "new_id_numb": 261, "programmat": 261, "lost": [261, 262, 263, 264, 435, 436, 437, 438, 473, 474, 829], "no_data": [261, 695], "equalized_count": [261, 695], "membership": [261, 262, 263, 264, 473, 474, 552, 692, 694, 695, 696, 872], "audio_left": [261, 262, 695], "name_1": [261, 262, 695], "name_2": [261, 262, 695], "likewis": [261, 262, 695, 853, 854], "eval": [261, 262, 695], "col_a": [261, 262, 695], "col_b": [261, 262, 695], "add_annotations_to_metadata": [261, 262], "annot_onset": [261, 262], "annot_dur": [261, 262], "annot_descript": [261, 262], "add_list": [261, 262, 263, 264, 473, 474, 692, 694, 695, 696], "force_update_info": [261, 262, 263, 264, 473, 474, 692, 694, 695, 696], "overwritten": [261, 262, 263, 264, 382, 473, 474, 475, 566, 581, 692, 694, 695, 696, 872], "memmap": [261, 262, 263, 264, 473, 474, 635, 692, 694, 695, 696, 872], "resiz": [261, 262, 263, 264, 473, 474, 692, 694, 695, 696, 778, 872], "januari": [261, 262, 263, 264, 473, 474, 475, 857], "1\u02e2\u1d57": [261, 262, 263, 264, 473, 474, 475], "his_id": [261, 262, 263, 264, 266, 473, 474, 475], "birthdai": [261, 262, 263, 264, 266, 473, 474, 475, 872], "revert": [261, 262, 612, 819, 872], "channel_wis": [261, 262, 263, 264, 473, 474, 872], "parallel_backend": [261, 262, 263, 264, 267, 268, 269, 271, 272, 275, 276, 277, 279, 351, 352, 354, 356, 408, 415, 418, 421, 422, 448, 461, 463, 473, 474, 511, 514, 515, 525, 526, 535, 536, 557, 564, 565, 640, 643, 644, 645, 657, 679, 680, 681, 682, 683, 694, 696, 697, 698, 699, 700, 701, 702, 710, 711, 719, 720, 721, 722, 723, 771, 774, 793, 872], "workload": [261, 262, 263, 264, 473, 474], "x_a": [261, 262, 263, 264, 473, 474], "2u": [261, 262, 263, 264, 473, 474], "enevlop": [261, 262, 263, 264, 473, 474], "hint": [261, 262, 263, 264, 473, 474, 770], "projs_a": [261, 262, 263, 264, 473, 474], "proj_a": [261, 262, 263, 264, 473, 474], "projs_b": [261, 262, 263, 264, 473, 474], "proj_b": [261, 262, 263, 264, 473, 474], "_v": [261, 262, 263, 264, 872], "emphas": [261, 262, 263, 264], "legendr": [261, 262, 263, 264, 473, 474, 511, 561, 854], "by_event_typ": [261, 262, 872], "trim_mean": [261, 262], "low_bia": [261, 262, 263, 264, 410, 473, 474, 525, 526, 694, 696, 699, 702, 704, 710, 771], "undrop": [261, 262], "timeout": [261, 262], "forev": [261, 262, 872], "lenient": [261, 262], "drop_log_stat": [261, 262], "perc": [261, 262], "mintim": [261, 262, 428], "seek": [261, 262, 413, 428], "nonspati": [261, 262], "fmt": [261, 262, 263, 264, 435, 436, 438, 473, 474, 854, 872], "eeglabio": [261, 262, 435, 438, 473, 474, 872], "cart_to_eeglab": [261, 262, 435, 438, 473, 474], "5500m": [261, 262, 263, 264, 407, 416, 441, 443, 444, 473, 474], "cuda": [261, 262, 263, 264, 407, 411, 416, 417, 443, 444, 445, 473, 474, 835, 841, 851, 862, 872], "constrict": [261, 262, 263, 264, 441, 443, 444, 473, 474], "reflect_limit": [261, 262, 263, 264, 443, 444, 445, 473, 474], "savgol_filt": [261, 262, 263, 264, 473, 474], "get_annotations_per_epoch": [261, 262], "epoch_annot": [261, 262], "only_data_ch": [261, 262, 263, 264, 266, 473, 474, 552, 692, 694, 695, 696], "alia": [261, 262, 263, 264, 274, 473, 474, 587, 737, 755, 792, 831, 872], "unitless": [261, 262, 263, 264, 473, 474, 854], "return_event_id": [261, 262, 607, 694, 695, 872], "respiratori": [261, 262, 263, 264, 473, 474, 549, 692, 694, 695, 696, 872], "excit": [261, 262, 263, 264, 266, 473, 474, 549, 692, 694, 695, 696, 854], "galvan": [261, 262, 263, 264, 473, 474, 549, 692, 694, 695, 696, 854, 872], "epoch_color": [261, 262, 769], "use_opengl": [261, 262, 473, 474, 552, 769, 786, 792, 872], "theme": [261, 262, 473, 474, 552, 739, 769, 786, 792, 872], "overview_mod": [261, 262, 473, 474, 552, 769, 786, 792, 872], "5th": [261, 262, 263, 264, 271, 473, 474, 769, 792], "1e2": [261, 262, 271, 473, 474, 769, 792], "20\u00b5v": [261, 262, 271, 473, 474, 769, 792], "ital": [261, 262, 263, 264, 473, 474, 769, 773, 777, 792, 857], "zen": [261, 262, 473, 474, 552, 769, 786, 792, 872], "selector": [261, 262, 263, 264, 473, 474, 769, 792, 795, 857, 872], "processor": [261, 262, 381, 473, 474, 552, 769, 786, 792], "pyopengl": [261, 262, 473, 474, 552, 769, 786, 792], "stylesheet": [261, 262, 473, 474, 552, 739, 769, 786, 792], "qdarkstyl": [261, 262, 473, 474, 552, 739, 769, 786, 792], "darkdetect": [261, 262, 473, 474, 552, 739, 769, 786, 792], "mpl": [261, 262, 268, 269, 272, 275, 276, 277, 473, 474, 739, 769, 792, 797, 802], "tkagg": [261, 262, 473, 474, 769, 792], "f11": [261, 262, 473, 474, 769, 792], "set_browser_backend": [261, 262, 473, 474, 552, 769, 786, 792, 811, 862, 872], "magic": [261, 262, 473, 474, 552, 769, 786, 792, 829, 851], "qt5": [261, 262, 473, 474, 552, 769, 786, 792, 835], "n_max_plot": [261, 262, 768], "good_epoch": [261, 262, 770], "area_alpha": [261, 262, 263, 264, 473, 474, 793], "line_alpha": [261, 262, 263, 264, 473, 474, 793], "asd": [261, 262, 263, 264, 473, 474, 793], "idiom": [261, 262, 263, 264, 473, 474, 793, 831], "decibel": [261, 262, 263, 264, 272, 473, 474, 525, 694, 696, 771], "log\u2081\u2080": [261, 262, 263, 264, 473, 474, 677, 694, 696, 771], "ch_group": [261, 262, 263, 264, 473, 474, 795], "to_spher": [261, 262, 263, 264, 473, 474, 795, 872], "n_ch_group": [261, 262, 263, 264, 473, 474, 795], "n_pick": [261, 262, 263, 264, 473, 474, 595, 795], "plot_raw": [261, 262, 263, 264, 473, 474, 795, 808, 862, 872], "downward": [261, 262, 263, 264, 473, 474, 795], "plot_layout": [261, 262, 263, 264, 473, 474, 795, 862, 872], "layout_scal": [261, 262, 263, 264, 692, 752, 777, 800], "fig_background": [261, 262, 263, 264, 692, 777, 800], "canva": [261, 262, 263, 264, 692, 752, 777, 800, 854], "allow_dupl": [261, 262, 263, 264, 309, 337, 473, 474, 628, 872], "eeg061": [261, 262, 263, 264, 309, 337, 473, 474, 628], "eeg161": [261, 262, 263, 264, 309, 337, 473, 474, 628], "anti": [261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 805, 872], "reset_drop_log_select": [261, 262, 872], "meaningless": [261, 262], "split_siz": [261, 262, 473, 474], "2gb": [261, 262, 473, 474, 872], "split_nam": [261, 262, 473, 474, 872], "100mb": [261, 262, 473, 474], "partit": [261, 262, 356, 473, 474, 680, 854, 872], "schema": [261, 262, 473, 474], "fname_split": [261, 262, 473, 474], "github": [261, 262, 263, 264, 473, 474, 829, 839, 843, 850, 851, 852, 853], "bbac101d50176611136b": [261, 262, 263, 264, 473, 474], "setter": [261, 262, 473, 474], "set_meas_d": [261, 262, 263, 264, 473, 474, 872], "match_cas": [261, 262, 263, 264, 266, 473, 474, 872], "match_alia": [261, 262, 263, 264, 266, 473, 474, 872], "channel_loc_alias": [261, 262, 263, 264, 266, 473, 474], "make_dig_montag": [261, 262, 263, 264, 266, 309, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 473, 474, 495, 854, 862, 872], "std_err": [261, 262], "mechan": [261, 262, 853], "1591": [261, 262], "juli": [261, 262], "rangeindex": [261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 694, 695, 696], "float64index": [261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 694, 695, 696], "int64index": [261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 694, 695, 696], "timedeltaindex": [261, 262, 263, 264, 268, 269, 272, 275, 276, 277, 473, 474, 692, 695], "elicit": [263, 473, 493, 610, 848], "__neg__": [263, 264, 268, 269, 272, 275, 276, 277], "negat": [263, 264, 268, 269, 272, 275, 276, 277], "evoked_neg": [263, 264], "prepend": [263, 264], "resum": [263, 264, 853], "mff": [263, 264, 330, 436, 437, 490, 611, 854, 872], "export_evokeds_mff": [263, 264, 436, 862, 872], "merge_grad": [263, 264, 777, 872], "unsort": [263, 264, 773], "weakest": [263, 264, 773, 872], "obscur": [263, 264, 773], "multiax": [263, 264, 773], "t_start": [263, 264, 773], "t_end": [263, 264, 773], "surf_map": [263, 264, 511, 774], "n_contour": [263, 264, 774], "turntabl": [263, 264, 464, 739, 755, 774], "unintent": [263, 264, 464, 755, 774], "mask_cmap": [263, 264, 692, 775], "mask_alpha": [263, 264, 692, 775], "do_mask": [263, 264, 775], "placement": [263, 264, 776, 827, 872], "illeg": [263, 264, 776], "01d": [263, 264, 405, 412, 778], "amplif": [263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 468, 470, 471, 530, 779], "improperli": [263, 264, 294, 295, 351, 355, 356, 365, 366, 367, 405, 412, 448, 449, 465, 468, 470, 471, 530, 779, 872], "logger": [263, 264, 734, 736, 779], "_ave": [263, 264], "source_ori": [265, 857], "fiffv_mne_fixed_ori": [265, 857], "fiffv_mne_free_ori": [265, 857], "n_ori": 265, "source_rr": [265, 857], "n_sourc": [265, 294, 295, 405, 412, 450, 468, 470, 471], "nest": [266, 405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 553, 736, 831], "fiffv_coil_meg": 266, "fiffv_eeg_ch": 266, "3x3": [266, 495, 519], "fiff_unit_t_m": 266, "fiff_unitm_non": 266, "ctfkind": [266, 857], "colcal": 266, "rowcal": 266, "save_calibr": [266, 857], "serial": 266, "fiffv_point_eeg": [266, 857], "fiffc_vers": 266, "machid": [266, 857], "mac": 266, "usec": [266, 857], "he_level_raw": 266, "helium": 266, "helium_level": 266, "orig_file_guid": 266, "mea": 266, "creator": 266, "ncoil": 266, "hpi_coil": 266, "corr_coeff": 266, "coil_freq": 266, "dig_point": 266, "good_limit": 266, "dist_limit": [266, 274, 279, 341, 857, 872], "coord_tran": 266, "event_channel": 266, "mri_id": 266, "block_id": 266, "max_info": 266, "sss_info": 266, "max_st": 266, "sss_ctc": 266, "sss_cal": 266, "smartshield": [266, 872], "last_nam": 266, "first_nam": 266, "middle_nam": 266, "month": 266, "sex": [266, 872], "male": [266, 398], "femal": [266, 398], "handed": 266, "ambidextr": 266, "kilogram": 266, "command_lin": [266, 274], "tilt": [266, 484, 739, 854, 872], "subsystem": [266, 831], "meas_fil": 266, "mri_fil": 266, "roundtrip": [266, 872], "shh": 266, "working_dir": [266, 274], "xplotter": 266, "__setitem__": 266, "conflict": [267, 829, 831, 835, 872], "accuru": [267, 272], "m\u00b2": [267, 827], "versionad": [267, 695, 755], "outside_vertic": 267, "lie": [267, 854], "get_tri": 267, "label_tri": 267, "get_vertices_us": 267, "label_vert": 267, "n_label_vertic": 267, "icosahedr": [267, 357, 404, 460, 461], "morph_label": [267, 615, 862, 872], "div1": [267, 669], "div2": [267, 669], "split_label": [267, 862, 872], "mris_divide_parcel": [267, 669], "n_part": [267, 669], "fring": 267, "sens_data": [268, 269, 272, 275, 276, 277], "volvectorsourceestim": [268, 269, 272, 273, 276, 862, 872], "__div__": [268, 269, 272, 275, 276, 277], "__mul__": [268, 269, 272, 275, 276, 277, 692], "tstop": [268, 269, 272, 275, 276, 277], "bihemilabel": [268, 269, 272, 275, 276, 277, 439, 506, 507, 862], "pane": [268, 272, 276, 739, 797, 837], "n_color": [268, 269, 272, 275, 276, 277, 758, 797, 802, 803], "hot": [268, 269, 272, 275, 276, 277, 797, 802], "diverg": [268, 269, 272, 275, 276, 277, 739, 758, 797, 802, 803, 831], "binar": [268, 269, 272, 275, 276, 277, 648, 650, 651, 739, 797, 802], "colorschem": [268, 269, 272, 275, 276, 277, 797, 802], "bone": [268, 269, 272, 275, 276, 277, 739, 797, 802], "high_contrast": [268, 269, 272, 275, 276, 277, 739, 797, 802], "resort": [268, 272, 276, 797, 851], "devot": [268, 269, 272, 275, 276, 277, 797, 802], "occupi": [268, 269, 272, 275, 276, 277, 463, 641, 797, 802], "blend": [268, 269, 272, 275, 276, 277, 739, 758, 797, 802], "mip": [268, 269, 272, 275, 276, 277, 739, 797, 802], "surface_alpha": [268, 269, 272, 275, 276, 277, 739, 797, 802], "enclos": [268, 269, 272, 275, 276, 277, 739, 797, 802, 854, 872], "silhouette_alpha": [268, 269, 272, 275, 276, 277, 739, 797, 802], "silhouette_linewidth": [268, 269, 272, 275, 276, 277, 739, 797, 802], "time_label_s": [268, 269, 272, 275, 276, 277, 739, 797, 802], "freesurferoccipitalflattenedpatch": [268, 272, 276, 797], "openwetwar": [268, 272, 276, 797], "transform_data": [268, 269, 272, 275, 276, 277], "tmin_idx": [268, 269, 272, 275, 276, 277], "tmax_idx": [268, 269, 272, 275, 276, 277], "indicic": [268, 269, 272, 275, 276, 277], "data_t": [268, 269, 272, 275, 276, 277], "direction": [269, 275, 277], "vector_alpha": [269, 275, 277, 739, 802], "sane": [269, 275, 277, 802], "fiffv_proj_item_field": [270, 857], "compute_proj_": 270, "webp": [271, 872], "fidel": 271, "lang": [271, 872], "n_file": 271, "clearer": [271, 872], "add_custom_css": [271, 872], "add_custom_j": [271, 872], "javascript": [271, 872], "topomap_kwarg": [271, 790], "drop_log_ignor": [271, 872], "declutt": 271, "inverseoper": [271, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 796, 862, 872], "inverse_op": 271, "altogeth": 271, "stc_plot_kwarg": 271, "add_sys_info": 271, "sysinfo": 271, "sort_cont": [271, 872], "on_error": 271, "n_time_points_stc": 271, "remove_al": 271, "removed_index": 271, "open_brows": 271, "nanoamper": 272, "log_10": 272, "sum_k": [272, 854], "s_k": [272, 854], "subject_orig": [272, 275], "vertices_to": [273, 357], "pre_affin": 273, "src_data": 273, "vol_morph_mat": 273, "affinemap": 273, "diffeomorphicmap": [273, 728, 729, 812], "stc_from": 273, "mri_spac": [273, 872], "nifti2": [273, 276, 277], "stc_to": 273, "nifti2imag": 273, "src_from": [273, 539], "monolith": 274, "fiffv_mne_surf_left_hemi": [274, 857], "fiffv_mne_surf_right_hemi": [274, 857], "fiffv_mne_surf_unknown": 274, "fiffv_coord_mri": [274, 857], "inus": [274, 857], "subject_his_id": [274, 357], "ntri": [274, 857], "nuse_tri": [274, 857], "pinfo": 274, "155295": 274, "155323": 274, "155330": 274, "864": 274, "patch_ind": 274, "n_src_remain": 274, "essenti": [274, 382, 847, 854, 857], "115407": 274, "nearest_dist": [274, 857], "mri_width": 274, "mri_height": 274, "mri_depth": 274, "neighbor_vert": 274, "mri_ras_t": 274, "fiffv_mne_coord_ra": 274, "src_mri_t": [274, 872], "vox_mri_t": 274, "fiffv_mne_coord_mri_voxel": 274, "mri_volume_nam": 274, "seg_nam": 274, "include_surfac": 274, "include_discret": 274, "dest": [274, 276, 277, 726], "use_lut": [274, 872], "mne_analyz": [274, 657, 754, 837, 848, 860, 872], "subvolum": [276, 277, 872], "upsampl": [276, 277, 439, 445], "trilinear": [276, 277, 439], "ensnur": [276, 277, 439], "bg_img": [276, 277, 803, 872], "initial_po": [276, 277, 803], "nutmeg": [276, 277, 803], "spatialimag": [276, 277, 300, 465, 728, 729, 803, 812], "src_sampl": [276, 277, 803], "stc_vol_sampl": [276, 277, 803], "vl": [276, 620], "save_as_volum": [276, 277, 872], "pick_channels_forward": [281, 282, 862], "evoked_templ": 281, "apply_forward_raw": [281, 862, 872], "zlogratio": [284, 535, 536, 692, 695, 799], "data_sc": 284, "apply_dics_epoch": [286, 287, 289, 862, 872], "meaningfulli": 287, "quadrant": 287, "apply_d": [287, 288, 289, 862, 872], "borgiotti": [294, 295], "kaplan": [294, 295], "\u03b8i": [294, 295], "arguabl": [294, 295], "max_pow": [294, 295], "expon": [294, 295, 449, 468, 470, 471, 530], "compute_depth_prior": [294, 295, 450, 468, 470, 471, 530, 862, 872], "n_weight": 294, "src_type": [294, 295], "is_free_ori": [294, 295], "supplement": 294, "is_ssp": 295, "vec_stc": 295, "rework": [295, 872], "resmat": [296, 528, 529, 531, 534], "n_dipoles_lcmv": 296, "n_dipoles_fwd": 296, "februari": 297, "1996": 297, "1207": 297, "acssc": 297, "599135": 297, "mef": [300, 854], "mef05_001": 300, "mef30_001": 300, "flash5_img": [300, 304], "dig_kind": [302, 303, 424, 872], "origin_head": 302, "origin_devic": 302, "exclude_front": [303, 424], "n_pt": 303, "convert_flash_mri": [304, 854, 862, 872], "no_decim": 305, "watersh": [306, 848, 872], "autorecon1": [306, 851, 872], "idx_by_typ": 307, "read_dig_captrak": [309, 322, 325, 329, 330, 331, 332, 333, 334, 854, 862, 872], "read_dig_dat": [309, 325, 328, 330, 331, 332, 333, 334, 485, 854, 862, 872], "read_dig_egi": [309, 322, 325, 328, 329, 331, 332, 333, 334, 854, 862, 872], "read_dig_hpt": [309, 325, 328, 329, 330, 331, 333, 854, 862, 872], "read_dig_localit": [309, 322, 328, 329, 330, 331, 332, 334, 862, 872], "acpc": 309, "ch_po": [309, 322], "remove_fiduci": [309, 872], "circumst": [309, 434, 872], "x_max": 310, "y_min": 310, "y_max": 310, "my_layout": 310, "keep_stim": 311, "combined_inst": 311, "native_head_t": 313, "equalized_inst": [314, 430], "ch_adjac": [315, 326], "use_c": 317, "3022": [317, 473, 854], "sq20483n": [317, 473], "3023": [317, 473, 854], "sq20483": [317, 473], "sq20950n": [317, 473], "upgrad": [317, 473, 872], "ch_indic": 318, "bg_imag": 318, "reserv": [318, 831, 853, 872], "make_grid_layout": [318, 323, 862], "neighbor_nam": 319, "builtin": [319, 320, 739, 831, 872], "heurist": 321, "capit": [321, 872], "periauricular": [322, 854], "n_point": [322, 336, 362, 424, 476, 496, 606], "n_hpi": 322, "compute_dev_head_t": [322, 862, 872], "fs_tal": [322, 504, 727], "ctf_head": [322, 504, 727], "ctf_meg": [322, 504, 727], "viewport": [323, 473, 474, 792], "generate_2d_layout": [323, 324, 740, 862], "n_col": [324, 552, 693, 695, 765, 785, 872], "95mm": 325, "eloc": 327, "sfp": [327, 872], "besa": [327, 608, 872], "bvef": [327, 872], "095m": 327, "weakli": 327, "eg": [327, 872], "captrak": [328, 872], "xml": [328, 330, 437, 611, 854, 872], "bvct": [328, 854, 872], "compumed": [329, 485, 854], "eeg001": 331, "eeg002": 331, "hpt": [332, 854], "filepath": [332, 334, 690, 739], "digitz": 332, "pound": [332, 854], "auricular": [332, 854, 857], "signifi": [332, 552], "6729": 332, "3873": 332, "3671": 332, "6782": 332, "3127": 332, "2363": 332, "4493": 332, "8450": 332, "3601": 332, "5353": 332, "6828": 332, "8518": 332, "0697": 332, "0829": 332, "3744": 332, "6297": 332, "1376": 332, "4264": 332, "7756": 332, "8676": 332, "0439": 332, "9297": 332, "6852": 332, "2969": 332, "localit": [333, 872], "read_polhemus_fastscan": [334, 862, 872], "on_header_miss": [336, 872], "fastscan": [336, 854], "t_step_min": [338, 339, 340], "t_window": [338, 340, 344, 562], "interf": [338, 340, 344], "_setup_hpi_amplitude_fit": 338, "disambigu": 338, "t_step_max": 339, "too_clos": 339, "adjust_dig": [339, 341], "\u03b4t": 339, "veloc": [339, 556], "chpi_snr": 340, "snr_mag": 340, "power_mag": 340, "resid_mag": 340, "snr_grad": 340, "power_grad": 340, "resid_grad": 340, "gof_limit": 341, "quat": [341, 347, 730, 732], "q1": [341, 473, 474, 730, 732], "q2": [341, 730, 732], "q3": [341, 473, 474, 730, 732], "monitor": [342, 854, 857], "hlc001": 342, "hlc002": 342, "hlc003": 342, "rawkit": [343, 496], "include_lin": 344, "t_step": 344, "allow_line_onli": [344, 872], "hpi_freq": 346, "n_coil": 346, "hpi_pick": 346, "hpi_on": 346, "head_pos_to_trans_rot_t": [348, 349, 643, 644, 645, 657, 862], "all_evok": 350, "keep_sample_mean": 351, "ledoit_wolf": [351, 872], "factor_analysi": 351, "store_precis": 351, "assume_cent": 351, "shrikag": 351, "iter_n_compon": 351, "emprici": 351, "redund": [351, 854, 872], "on_rank_mismatch": [355, 365, 366], "orth": [355, 872], "implicitli": [355, 417, 580, 847, 854], "resultingmorph": 357, "vertices_from": 357, "vert_rh": 357, "vert_lh": 357, "mris_left_right_regist": 357, "epochs_list": [358, 428], "add_offset": 358, "events_list": [360, 872], "event_list": [360, 872], "on_defect": [362, 424, 455, 600, 629, 631, 820, 872], "read_fiduci": [362, 862, 872], "canon": [362, 480, 739, 755, 846, 872], "quantiti": [362, 578, 853, 854], "radian": [362, 556], "lpa_weight": 362, "rpa_weight": 362, "hsp_weight": 362, "eeg_weight": 362, "hpi_weight": 362, "callback": [362, 739, 752, 872], "set_fid_match": 362, "set_grow_hair": 362, "hair": 362, "set_rot": 362, "rot": [362, 730, 732], "set_scal": 362, "sca": 362, "scale_mod": 362, "set_transl": 362, "tra": 362, "fids_mri": 364, "coordinatesystem": [364, 854], "return_rank": 365, "return_color": [365, 458], "prepare_noise_cov": [365, 862, 872], "n_nonzero": 365, "1e12": 366, "1e11": 366, "1e5": 366, "fd": [367, 827], "reg_cov": 367, "fs_home": 368, "create_raw": 369, "ignore_config": 371, "env": [371, 453, 829, 831, 835, 839], "device_id": 372, "force_upd": [373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "update_path": [373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403], "mne_datasets_brainstorm_data_path": [373, 374, 375], "prompt": [373, 374, 375, 376, 378, 379, 381, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 830, 834, 836, 842, 851], "base_url": [376, 398, 399], "getenv": 376, "foot": 376, "khanetal2018": 380, "dataset_param": 381, "check_vers": 381, "return_vers": 381, "auth": 381, "token": 381, "archive_nam": [381, 387], "folder_nam": [381, 387], "hash": [381, 387, 872], "config_kei": 381, "unzip": [381, 831], "untar": [381, 829], "decompress": 381, "authent": [381, 831], "usernam": [381, 831], "password": [381, 831], "httpdownload": 381, "012345": 381, "has_dataset": [381, 862, 872], "uncompress": 381, "cryptograph": 381, "sha256": 381, "19uheid": 381, "md5": 381, "upodh2io": 381, "dataset_nam": [381, 387, 872], "tar": [381, 829, 837], "12b75d1cb7df9dfb4ad73ed82f61094f": 381, "osf": 381, "86qa2": 381, "webpag": 383, "2wk": 384, "1mo": 384, "2mo": 384, "3mo": 384, "5mo": 384, "9mo": 384, "12mo": 384, "15mo": 384, "18mo": 384, "2yr": 384, "ants4": 384, "5month3t": 384, "subject_dir": 385, "fetch_dataset": [387, 862, 872], "\u00ecnt": 390, "mne_datasets_opml_path": 394, "edfx": [398, 399], "cassett": 398, "physionet_sleep_path": [398, 399], "temazepam": [398, 848, 862, 872], "telemetri": 399, "mild": 399, "asleep": 399, "mne_datasets_spm_data_path": 401, "n_triangl": 404, "quadric": 404, "30001": 404, "20480": 404, "cov_est": 405, "transform_into": [405, 412, 872], "average_pow": [405, 412], "cov_method_param": [405, 412, 413], "component_ord": [405, 872], "mutual_info": [405, 872], "csp_space": [405, 412], "mutual": [405, 490, 729], "simplif": 405, "mean_": [405, 412], "std_": [405, 412], "x_new": [405, 406, 407, 410, 412, 413, 416, 553], "n_features_new": [405, 406, 407, 410, 412, 413, 416, 553], "get_param": [405, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 553], "subobject": [405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 553], "name_format": [405, 412], "n_pattern": [405, 412], "set_param": [405, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 553], "__": [405, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 553], "classes_": [406, 408], "n_class": [406, 408, 409, 415, 421], "rtepoch": [407, 872], "temporalfilt": [407, 862, 872], "mne_realtim": [407, 864, 872], "base_estim": [408, 415, 872], "score_func": [408, 415, 552], "decision_funct": [408, 409, 415], "nd_featur": [408, 415], "n_slice": 408, "n_features_1": [408, 415], "n_features_2": [408, 415], "n_task": [408, 415], "clone": [408, 415, 829, 831, 839, 872], "n_target": [408, 409, 415, 422], "xt": [408, 415, 418], "283185307179586": 410, "nitim": [410, 704, 710, 771, 872], "n_signal": [410, 715, 717], "fit_intercept": [411, 417], "r2": 411, "edge_correct": [411, 417], "baseestim": [411, 419, 422], "return_filt": 413, "flank": 413, "spectal": 413, "sprectal": 413, "sorter_spec": 413, "x_ssd": 413, "with_mean": 414, "with_std": 414, "estimators_": 415, "filterestim": [416, 862, 872], "unsupervis": 419, "spatialfilt": 420, "_xdawntransform": 420, "features_shape_": 420, "objective_funct": 421, "leaveoneout": 421, "surrogate_tri": 421, "mean_spatial_filt": 421, "pre_dispatch": 422, "n_dimensional_featur": 422, "dispatch": 422, "explos": 422, "spawn": [422, 872], "lightweight": [422, 829], "n_score": 422, "attr": [423, 831], "get_fitting_dig": [424, 862], "extrema": [425, 589, 812], "orig_sfreq": 426, "weight_al": 426, "ignore_ref": [426, 515, 563, 571, 580], "return_map": 426, "mag_scal": [426, 563, 571, 580], "multipolar": [426, 562, 563, 571, 580], "fit_sphere_to_headshap": [426, 562, 563, 571, 580, 862, 872], "magenetomet": [426, 563, 571, 580], "pickup": [426, 563, 571, 580, 854], "0168": [426, 563, 571, 580], "sp": 426, "old_event_id": 427, "new_event_id": 427, "safeti": [427, 839], "collat": 429, "absenc": 429, "ancillari": 429, "union": [429, 446, 552, 581], "myevent": 429, "last_myev": 429, "first_": 429, "event_typ": 429, "respet": 429, "slash": [432, 827, 872], "n_new_ev": 433, "aa": 434, "dd": [434, 485, 872], "ee": 434, "gg": 434, "syncstatu": 434, "99998": 434, "neuroscan": [434, 854, 872], "mffpy": [437, 872], "xml_file": 437, "physical_rang": [438, 473, 474], "add_ch_typ": [438, 473, 474], "vmrk": [438, 473, 474, 598, 848, 872], "edflib": [438, 473, 474, 872], "f_pass": 440, "f_stop": 440, "return_copi": 440, "ellipt": 440, "gpass": 440, "gstop": 440, "weren": 440, "triag": [440, 691], "fs1": 441, "fs2": [441, 444], "fstop": 441, "max_tri": 442, "mt_bandwidth": [444, 473, 474], "centr": [444, 473, 474, 534], "xf": 444, "chronux": 444, "partha": 444, "mitra": 444, "hemant": 444, "bokil": 444, "oxford": [444, 831], "upfirdn": 445, "shortest_ev": 446, "find_stim_step": [446, 862, 872], "00000101": 446, "0000111": 446, "0100101": 446, "0000101": 446, "0000010": 446, "pad_start": 447, "pad_stop": 447, "whichev": [447, 449, 757], "v_from": 447, "v_to": 447, "min_dist": 448, "rhoend": 448, "fmin_cobyla": 448, "limit_depth_ch": [449, 872], "combine_xyz": 449, "gk": 449, "frobeniu": 449, "depth_prior": 449, "compute_orient_prior": [449, 862], "matirx": 449, "orient_prior": 450, "fwd_out": [451, 452], "restrict_forward_to_stc": [451, 862, 872], "restrict_forward_to_label": [452, 862, 872], "raise_error": 453, "config_path": 454, "mnemn": 454, "mgz_fname": 458, "atlas_id": [458, 613], "read_freesurfer_lut": [458, 862, 872], "labels_aseg": 459, "spatio_temporal_tris_adjac": [460, 862, 872], "all_inst": 462, "grown": 463, "territori": 463, "invad": 463, "broadcast": 463, "guess_mri_subject": 464, "head_high_r": 464, "scrollabl": 464, "orient_to_surfac": 464, "scale_by_dist": 464, "mark_insid": 464, "advanced_rend": 464, "head_insid": 464, "launch": [464, 540, 829, 831, 835, 837, 872], "movabl": 464, "splitter": 464, "qt4": 464, "unnecessari": [464, 481, 488, 494, 847, 849], "wx": 464, "occlud": 464, "coregistrationui": 464, "aligned_ct": 465, "ct": [465, 729, 812, 872], "intracranialelectrodeloc": 465, "unscal": [467, 872], "update_mod": 468, "bay": 468, "mackai": 468, "time_pca": 470, "dgap_freq": [470, 471, 872], "cd": [470, 831, 837, 851, 854, 872], "bcd": [470, 872], "dualiti": [470, 471, 872], "alpha_max": [470, 471], "epsilon": [470, 519], "alpha_spac": [471, 872], "alpha_tim": [471, 872], "raw_extra": 472, "orig_format": [472, 473, 474, 872], "buffer_size_sec": [472, 473, 474, 872], "orig_unit": 472, "unsplit": 472, "orig_nchan": 472, "nv": 472, "my_raw_object": 472, "subclass": 472, "_read_segment_fil": 472, "mult": 472, "time_slic": [473, 474], "rawfif": [473, 474], "crop_by_annot": [473, 474, 872], "data_fram": [473, 474], "quartil": [473, 474], "fix_mag_coil_typ": [473, 862, 872], "mne_fix_mag_coil_typ": 473, "load_bad_channel": [473, 474, 872], "bad_fil": [473, 474], "mne_mark_bad_channel": [473, 474], "europ": [473, 474], "lightgrai": [473, 474, 768, 792], "show_first_samp": [473, 474, 552, 786, 792], "eventloop": [473, 474, 792], "prj": [473, 474, 792], "secondari": [473, 474, 792], "stim_pick": [473, 474, 872], "supersampl": [473, 474], "optimum": [473, 474], "drop_small_buff": [473, 474], "gzip": [473, 474, 872], "projecton": [473, 474], "datetimeindex": [473, 474], "pickl": 476, "mrk_point": 476, "pt": [477, 504], "fiffv_coord_": [477, 504], "input_fnam": [480, 481, 485, 488, 489, 490, 494, 496, 498, 604, 606], "pos_fnam": 480, "add_head_tran": 480, "artemis123": [480, 854, 872], "infer_typ": [481, 488, 872], "utf8": [481, 488, 872], "bdf": [481, 488, 494, 854, 872], "rawedf": [481, 488, 872], "gdf": [481, 488, 494, 854, 872], "batteri": 481, "trigger_sign": 481, "htm": 481, "cms_bit": 481, "cms_high": 481, "boxi": [482, 854, 872], "rawboxi": 482, "vhdr_fname": 483, "heogl": 483, "heogr": 483, "veogb": 483, "vision": [483, 853, 872], "rawbrainvis": [483, 872], "pdf_fname": 484, "config_fnam": 484, "head_shape_fnam": 484, "sort_by_ch_nam": 484, "e64": 484, "rawbti": 484, "data_format": 485, "date_format": 485, "int16": 485, "int32": [485, 857], "numsampl": 485, "rawcnt": 485, "system_clock": 486, "clean_nam": [486, 872], "rawctf": 486, "curri": [487, 598, 872], "dap": [487, 598], "rs3": 487, "cdt": [487, 598, 872], "dpa": [487, 598], "cef": [487, 598], "rawcurri": 487, "export_raw": [488, 862, 872], "storag": [488, 635], "sao2": 488, "subsecond": 488, "uint16_codec": [489, 598, 604, 872], "montage_unit": [489, 604, 872], "codec": [489, 598, 604, 739], "latin1": [489, 598, 604], "raweeglab": [489, 872], "trev": 490, "e1": [490, 611], "e2": [490, 611], "e3": [490, 611], "rawegi": 490, "nxe": [491, 854], "raweximia": 491, "data_nam": [492, 605, 609], "ft_datatype_raw": 492, "rawgdf": 494, "hitachi": [495, 872], "probe": [495, 872], "rawhitachi": 495, "3x5": 495, "etg": 495, "7000": 495, "d1": 495, "s2": 495, "d2": 495, "s3": 495, "d3": 495, "s4": 495, "d4": 495, "s5": 495, "d5": 495, "s6": 495, "d6": 495, "s7": 495, "d7": 495, "s8": 495, "ft7": 495, "tp7": 495, "laid": 495, "d8": 495, "s9": 495, "d9": 495, "s10": 495, "3x11": 495, "d10": 495, "s11": 495, "d11": 495, "s12": 495, "d12": 495, "s13": 495, "d13": 495, "s14": 495, "d14": 495, "s16": 495, "d16": 495, "s17": 495, "d17": 495, "s18": 495, "stim_cod": 496, "allow_unknown_format": [496, 606], "ricoh": [496, 606, 872], "laboratori": [496, 606], "neuroelectr": 497, "nedf": [497, 872], "rawnedf": 497, "nicolet": [498, 854, 872], "nihon": 499, "kohden": 499, "rawnihon": 499, "nirx": [500, 854, 872], "nosatflag": 500, "rawnirx": 500, "wlx": 500, "nosatflags_wlx": 500, "persyst": [501, 854, 872], "rawpersyst": 501, "snirf": [502, 872], "jnir": 502, "rawsnirf": 502, "indent": [503, 747], "read_limit": [503, 747], "max_str": [503, 747], "mne_show_fiff": 503, "mri_tal": [504, 727], "grow_outsid": 505, "hoc": [508, 838, 872], "standard_devi": 508, "write_bem_surfac": [509, 510, 599, 600, 847, 862, 872], "write_bem_solut": [510, 599, 600, 847, 862, 872], "relative_radii": 516, "radii": [516, 644], "csf": [516, 854], "replace_ev": [517, 872], "n_events_in": 517, "n_events_out": 517, "1111111111111111": [519, 520, 525, 526, 531, 535, 536], "prepare_inverse_oper": [519, 520, 521, 522, 523, 525, 526, 535, 536, 862, 872], "apply_inverse_tfr_epoch": [519, 520, 521, 522, 862, 872], "force_equ": [519, 872], "time_func": 522, "approx": [522, 854], "inv_split": [525, 526], "snr_est": 527, "unregular": 527, "tild": [527, 854, 872], "lambda_k": [527, 854], "gamma_k": [527, 854], "biggest": 527, "chi": 527, "normalis": [528, 529], "willb": [528, 529], "n_orient_inv": [528, 529, 531], "n_orient_fwd": [528, 529, 531], "pca_var": [528, 529], "mantl": [530, 854], "cog_err": 534, "graviti": 534, "cog": 534, "maxrad_ext": 534, "peak_amp": 534, "sum_amp": 534, "surf_nam": [538, 615], "mne_docs_kind": 540, "mne_docs_vers": 540, "grad_reject": 542, "mag_reject": 542, "eeg_reject": 542, "eog_reject": 542, "explanatori": [551, 595], "info_": 551, "intercept_": 551, "cumul": 552, "999999": [552, 872], "n_components_": [552, 872], "n_iter_": [552, 872], "pseudoinvers": [552, 563, 854, 872], "instabl": 552, "migrat": [552, 872], "debat": 552, "zca": 552, "tol_fastica": 552, "tol_picard": 552, "current_fit": 552, "unfit": 552, "pre_whitener_": 552, "pca_components_": 552, "pca_mean_": 552, "pca_explained_variance_": 552, "scrap": 552, "n_samples_": 552, "on_baselin": [552, 783, 872], "ummix": [552, 553], "reappli": [552, 783, 819, 872], "anymor": [552, 839, 872], "supra": [552, 554], "ecg_idx": 552, "kuiper": 552, "eog_idx": 552, "paralyz": 552, "threefold": 552, "farthest": 552, "msucl": 552, "ref_ica": 552, "ref_idx": 552, "baseraw": [552, 560, 862, 872], "unclean": 552, "pvaf": 552, "usecas": [552, 786], "plot_std": [552, 782, 784], "image_arg": [552, 692, 782, 784], "psd_arg": [552, 782, 784], "plot_ica_compon": [552, 862, 872], "topomap_axi": [552, 784], "image_axi": [552, 784], "erp_axi": [552, 784], "spectrum_axi": [552, 784], "variance_axi": [552, 784], "logarithm": [552, 784], "ass": [552, 785], "n_ica_compon": [552, 785], "sublabel": [552, 785], "score_sourc": [552, 872], "pearsonr": 552, "skew": 552, "correct_overlap": 553, "overlapp_correct": 553, "evokeds_": 553, "event_id_": 553, "correct_overlap_": 553, "n_event_typ": 553, "bad_perc": 554, "bad_peak": 554, "bad_flat": 554, "uncommon": 554, "sole": [555, 848, 853], "rotation_velocity_limit": 556, "translation_velocity_limit": 556, "use_dev_head_tran": [556, 872], "lm_cutoff": 560, "epoch_threshold": 560, "bw_method": 560, "intrins": 560, "hjorth": 560, "gaussian_kd": 560, "n_legendre_term": 561, "lap": [561, 637], "inst_csd": 561, "n_imbal": 562, "multipol": [562, 580], "bad_condit": [563, 571, 580], "extended_proj": [563, 571, 580], "ill": [563, 571, 580], "esss": [563, 571, 580, 860, 872], "n_meg": [563, 571], "n_moment": 563, "n_good_meg": 563, "reg_moment": 563, "n_use_in": 563, "dagger": 563, "phi": 563, "phi_in": 563, "data_meg_good": 563, "raw_ev": [564, 565], "avg_ref": [564, 565], "return_drop_log": [564, 565, 872], "ecg_ev": [564, 572, 575], "0005": [565, 851], "e0g": 565, "feed": [566, 854], "corrmapplugin1": 566, "categoris": 566, "preexist": 566, "dry": 566, "template_fig": 566, "labelled_": 566, "mag_pick": 567, "grad_pick": 567, "keep_ecg": [568, 872], "r_peak_events_arrai": 568, "doctest": 568, "interp_thresh": 570, "insts_bad": 570, "formerli": [570, 872], "noisy_ch": 571, "flat_ch": 571, "Their": [571, 831], "scores_flat": 571, "limits_flat": 571, "annotate_amplitud": [571, 580, 862, 872], "st_fix": [571, 580], "d_k": 571, "mu_d": 571, "sigma_d": [571, 854], "textrm": 571, "return_ecg": 572, "ch_ecg": [572, 575], "average_puls": [572, 575], "ecg_sourc": 575, "eog_sourc": 576, "n_neighbor": 577, "l_rate": 578, "w_chang": 578, "anneal_deg": 578, "anneal_step": 578, "n_subgauss": 578, "kurt_siz": 578, "6000": 578, "ext_block": 578, "blowup": [578, 657], "blowup_fac": 578, "n_small_angl": 578, "use_bia": 578, "return_n_it": [578, 872], "kurtosi": 578, "unmixing_matrix": 578, "return_max_it": 578, "bad_limit": 579, "ovwrlap": 580, "forth": 580, "relicens": 580, "permiss": 580, "certifi": 580, "seamless": 580, "vet": [580, 860], "abramowitz": 580, "stegun": 580, "us2006031038": 580, "us6876196": 580, "wo2005067789": 580, "wo2005078467": 580, "wo2006114473": 580, "lawyer": 580, "raw_er": 581, "from_raw": 581, "inject": 581, "raw_er_prepar": 581, "compil": 581, "pathlength": [582, 872], "hemoglobin": [587, 872], "wherev": 587, "realtim": [588, 862, 872], "provision": 588, "x0": [589, 677], "peak_loc": 589, "peak_mag": 589, "nathanael": 589, "yoder": 589, "ncyoder": 589, "purdu": 589, "36900026": 589, "76007351": 589, "imb_cal": 591, "t_raw": 594, "t_other": 594, "realign": [594, 827, 872], "first_ev": 594, "n_picks_ref": 595, "epochs_no_av": 595, "epochs_clean": 595, "n_parcel": 597, "amrk": 598, "ahdr": [598, 872], "patch_stat": [600, 622], "s_id": 600, "eventtyp": 604, "trialinfo_column": 605, "trialinfo": [605, 872], "mne_browse_raw": [607, 857], "avr": [608, 872], "mul": [608, 872], "sidecar": 608, "timelock": 609, "write_labels_to_annot": [614, 615, 821, 862, 872], "annot_fnam": [615, 822], "ascend": [615, 780, 787, 851, 872], "mne_make_morph_map": [617, 857], "morph_map": 617, "left_map": 617, "right_map": 617, "asterisk": 620, "source_morph": 621, "return_dict": 623, "file_format": [623, 825], "voxels": [623, 825], "xra": [623, 825], "yra": [623, 825], "zra": [623, 825], "cra": [623, 825], "n_face": [623, 626, 825], "read_tri": [623, 825, 862], "return_al": 625, "fname_in": 626, "clockwis": [626, 744], "counterclockwis": [626, 857], "spcecifi": 627, "bem_nam": 629, "subjects_from": [629, 632], "ba3a": 630, "cfg": 630, "skip_fiduci": 631, "ioerror": 631, "scale_bem": [631, 862, 872], "scale_label": [631, 862], "scale_source_spac": [631, 862], "src_name": 632, "my_source_spac": 632, "mne_sensitivity_map": 633, "ch_info": [634, 872], "drop_ref": [634, 872], "on_bad": 634, "unreferenc": 634, "cache_dir": 635, "output_format": 638, "howto": 638, "asctim": 638, "levelnam": 638, "notifi": [638, 831], "return_old_level": 639, "add_fram": [639, 734], "old_level": 639, "single_volum": [641, 872], "ox": 641, "oi": 641, "iii": 641, "get_stim_channel": 642, "stim_data": 642, "add_chpi": [644, 645, 657, 862, 872], "inhomogen": 645, "poisson": 645, "stc_true": [647, 648, 649, 650, 651, 652, 653, 654], "stc_est": [647, 648, 649, 650, 651, 652, 653, 654], "ppe": 649, "dfrac": [649, 654], "sum_i": [649, 654], "s_i": [649, 654], "r_i": [649, 654, 854], "tp": [650, 651], "fn": 651, "2q": 652, "min_": [652, 854], "r_k": 652, "r_l": 652, "mathbb": 652, "dle": 652, "ed": [652, 872], "terminologi": 652, "actual_snr": 656, "sti001": 657, "allow_overlap": 659, "coo_matrix": [662, 663, 664, 665, 666, 667, 668, 672], "additit": 663, "remap_vertic": [665, 668], "reassign": [665, 668], "2n": [666, 667, 668, 854], "pval_correct": [670, 676], "n_bootstrap": 671, "spmatrix": [672, 679, 680, 682, 683], "n_ob": 672, "chan_adj": 672, "5600x5600": 672, "27076": 672, "compliant": [673, 860], "slowest": 673, "a2b2": 673, "greenhous": 673, "geisser": 673, "f_val": 673, "homoscedast": 674, "kruskal": 674, "walli": 674, "pvalu": 675, "yekuti": 676, "negcorr": 676, "n_regressor": 677, "choleski": [678, 854, 872], "n_cond": 678, "bx": 678, "enorm": 678, "overload": 678, "subepoch": 678, "n_predictor": 678, "time_window_length": 678, "t_power": [679, 680, 682, 683], "check_disjoint": [679, 680, 682, 683], "subarrai": 679, "kth": 679, "unconnect": [679, 680, 682, 683], "disjoint": [679, 680, 682, 683], "set_cache_dir": [679, 680, 682, 683, 862], "rv_continu": [679, 680, 682, 683], "untract": 681, "spatial_exclud": [682, 683], "p_thresh": 684, "equal_var": 686, "ball": 687, "volu": 687, "do_neighbor_vert": 689, "do_neighbor_tri": 689, "show_path": 691, "sy": [691, 835, 872], "feb": 691, "bla": [691, 830], "lapack": [691, 830], "qt5agg": 691, "pyside6": [691, 830], "power_baselin": 692, "frequency_window": 692, "read_tfr": [692, 695, 725, 862, 872], "write_tfr": [692, 695, 714, 862], "csd_array_fouri": [693, 698, 699, 700, 701, 702, 862, 872], "csd_array_multitap": [693, 697, 698, 700, 701, 702, 862, 872], "csd_array_morlet": [693, 697, 699, 700, 701, 702, 862, 872], "as_cov": 693, "pack": 693, "pick_frequ": 693, "read_csd": [693, 862, 872], "getitem_epochspectrum_return": 694, "ci_alpha": [694, 696], "read_spectrum": [694, 696, 862], "latex": [694, 696], "pertin": 695, "12676": 695, "getitem_spectrum_return": 696, "sixth": 696, "subscript": 696, "freq_indic": 696, "half_nbw": 704, "kmax": 704, "sym": [704, 872], "interp_from": [704, 872], "interp_kind": [704, 872], "nw": 704, "half_bw": 704, "bw": 704, "f0": 704, "interp1d": [704, 739], "slinear": [704, 739], "quadrat": [704, 739], "tridiagon": 704, "jw": 705, "jnw": 705, "tx": 707, "n_step": [707, 715, 739], "_cycl": [708, 718, 719, 720, 722, 723], "morlet2": [708, 718], "sp_morlet": [708, 718], "this_fwhm": [708, 718], "wavelet_sp": [708, 718], "half_max": [708, 718], "n_taper": [710, 720], "get_window": [711, 793], "istft": [715, 716, 862, 872], "stftfreq": [715, 862], "epoch_data": [719, 720], "avg_power_itc": [719, 720], "power_": [719, 720], "tfr_array_multitap": [719, 721, 722, 723, 724, 862, 872], "tfr_array_stockwel": [719, 720, 722, 723, 724, 862, 872], "interrel": [719, 720, 722, 723, 838], "strive": [720, 723, 853], "finer": [720, 723, 872], "undermin": [720, 723], "intertri": [721, 724], "st_power": 721, "from_str": 727, "to_str": 727, "reg_img": 728, "niter": [729, 872], "mr": [729, 854, 860, 872], "affine_registr": 729, "rot_to_quat": [730, 862], "quat_to_rot": [732, 862], "contextlib": 733, "contextmanag": 733, "my_fnam": 733, "moin": 735, "pythondecoratorlibrari": 735, "sentenc": 735, "futurewarn": [735, 831, 872], "ignore_namespac": 736, "namespac": [736, 831, 862, 872], "travers": 736, "_funct": 737, "filler": 737, "5880": 737, "offscreen": 739, "subject_id": [739, 872], "buggi": 739, "soon": [739, 848, 853, 854], "add_skul": 739, "remove_data": 739, "remove_dipol": [739, 872], "remove_forward": [739, 872], "remove_head": 739, "remove_label": 739, "remove_annot": 739, "remove_sensor": 739, "remove_skul": 739, "remove_text": 739, "remove_volume_label": 739, "timeview": 739, "get_picked_point": 739, "geo": 739, "ctab": 739, "lh_ctab": 739, "rh_ctab": 739, "rbga": 739, "icefir": 739, "rocket": 739, "nvtx": 739, "thrown": [739, 872], "font": [739, 798], "add_scalar_bar": 739, "title_font_s": 739, "hex": [739, 763], "map_surfac": [739, 872], "n_coord": 739, "stereotax": 739, "coord_as_vert": 739, "1cm": 739, "subdir": 739, "reset_camera": [739, 807], "justif": 739, "update_text": 739, "fill_hole_s": [739, 872], "hole": [739, 872], "dilat": 739, "apply_auto_sc": 739, "clear_glyph": 739, "cleanup": [739, 860], "widget": [739, 741, 872], "get_view": [739, 872], "zenith": [739, 807], "plot_time_cours": 739, "vertex_id": 739, "plot_time_lin": 739, "reset_view": 739, "restore_user_sc": 739, "bitrat": 739, "imageio": 739, "mov": 739, "n_frame": 739, "separate_canva": 739, "set_data_smooth": 739, "set_playback_spe": 739, "playback": 739, "set_tim": [739, 872], "set_time_interpol": 739, "set_time_point": 739, "time_idx": 739, "setup_time_view": 739, "rear": [739, 827], "time_interpol": 739, "toggle_interfac": 739, "toggle_playback": 739, "update_lut": 739, "imdata": 740, "onclick": 740, "backend_bas": 740, "bg": [740, 742], "set_ratio": 742, "ax_im": 742, "node_nam": 744, "start_between": 744, "group_sep": 744, "n_node_nam": 744, "fname_1": 747, "fname_2": 747, "show_fiff": [747, 862, 872], "smooth_shad": [748, 805], "_render": 748, "undocu": 748, "backend_us": [749, 751], "ch_dx": 752, "teal": 754, "onselect": [756, 801], "rectangleselector": [756, 801], "show_indic": 757, "show_orient": [757, 872], "colorbarbas": 758, "polarax": 761, "type_snr": 762, "type_pow": 762, "type_resid": 762, "truncate_xaxi": [763, 872], "invert_i": 763, "unweight": 763, "inset": [763, 872], "n_evok": 763, "hexadecim": 763, "equal_spac": 772, "1f77b4": 780, "fscale": [780, 787], "alim": [780, 787], "pointsiz": 795, "bet": 795, "bluish": 796, "brain_color": [798, 872], "fig_numb": 798, "cone": 798, "axesimag": 801, "contourset": 801, "fieldlin": 801, "mixedvectorsourceestim": [802, 862, 872], "backend_nam": [804, 808, 810, 811], "old_backend_nam": [804, 808], "plot_evoked_field": [804, 862, 872], "link_brain": [804, 862, 872], "inlin": [804, 829, 835], "jupyterlab": 804, "colab": 804, "antialia": [805, 829], "depth_peel": 805, "multi_sampl": 805, "plot_epoch": [808, 831, 862, 872], "plot_ica_sourc": [808, 862, 872], "hide_sensor": 809, "dn": 809, "base_imag": 812, "max_peak_dist": 812, "voxels_max": 812, "use_min": 812, "subject_dir_from": 812, "image_from": 812, "image_to": 812, "hsv": 822, "table_nam": 822, "colort": 822, "create_stamp": 825, "vocabulari": [827, 855], "textual": [827, 872], "spindl": 827, "acronym": [827, 855], "definion": 827, "mv": [827, 872], "\u00b5m": 827, "od": 827, "synapt": 827, "intracellular": 827, "pyramid": [827, 854], "perpendicularli": 827, "erron": [827, 872], "peculiar": 827, "encapsul": [827, 854], "hcpmmp": [827, 872], "gave": 827, "cartoon": 827, "pependicular": 827, "scaleogram": 827, "uncorrel": 827, "nb_conda_kernel": 829, "anaconda": [829, 831, 835, 836, 842, 872], "forum": [829, 830, 831, 834, 837, 838, 848, 850, 851, 852], "osmesa": 829, "xvfb": 829, "forg": [829, 831, 835, 839], "latest": [829, 831, 839, 851, 872], "git": [829, 838], "miniconda": [829, 831], "miniforg": 829, "pythonpath": 829, "pythonhom": 829, "curl": [829, 831], "githubusercont": [829, 831], "unabl": [829, 853, 872], "nvidia": [829, 851], "proprietari": [829, 853], "driver": 829, "init_cuda": [829, 862], "pytest": [829, 831], "test_filt": 829, "multithread": [829, 851], "swr": 829, "cento": 829, "spyder": [829, 831, 834, 835, 851], "mesa_gl_version_overrid": 829, "rend": 829, "msaa": 829, "antialias": [829, 872], "set_3d_opt": [829, 862, 872], "incomplet": [829, 860, 872], "prebuilt": 829, "xzvf": 829, "mesa_18": 829, "6_centos_lib": 829, "tgz": 829, "libgl_drivers_path": 829, "pwd": 829, "ld_library_path": 829, "went": [829, 830], "glxinfo": 829, "grep": [829, 831, 839], "uninstal": [829, 839], "cach": [829, 839], "gcp": 830, "travi": [830, 872], "virtualenv": 830, "8dfaa4a": 830, "f614064": 830, "qtagg": 830, "post1": 830, "modulenotfounderror": 830, "bashrc": [830, 836, 837], "zprofil": [830, 836], "zsh": [830, 836, 837], "troubleshoot": [830, 850, 852], "sustain": [831, 853], "volunt": 831, "welcom": 831, "anyon": [831, 853], "abid": 831, "fastest": [831, 837], "feel": [831, 838, 853, 872], "upstream": 831, "desktop": 831, "appreci": 831, "sudo": [831, 832, 837], "apt": [831, 832], "dmg": [831, 837], "atlassian": 831, "macport": [831, 837], "homebrew": [831, 837], "yourdomain": 831, "sooner": 831, "commit": [831, 853, 860, 872], "emac": 831, "vim": 831, "nano": 831, "subl": 831, "makefil": 831, "newest": 831, "guil": 831, "w32": 831, "ezwinport": 831, "path_to_git": 831, "mingw64": 831, "mnedev": 831, "path_to_anaconda": 831, "team": [831, 853], "yml": 831, "github_usernam": 831, "insert_your_actual_github_username_her": 831, "install_loc": 831, "opt": [831, 835, 836, 837], "site_packag": 831, "requirements_test": 831, "requirements_doc": 831, "graphviz": 831, "graphviz_dot": 831, "conda_prefix": 831, "optipng": 831, "linter": 831, "restructuredtext": 831, "autobuild": 831, "doc8": 831, "url_of_remote_repo": 831, "nickname_of_remot": 831, "repo": [831, 853], "undoubtedli": 831, "checkout": 831, "colleagu": 831, "unstag": 831, "some_fil": 831, "some_new_fil": 831, "entireti": 831, "some_other_fil": 831, "bypass": [831, 872], "enh": 831, "some_testing_fil": 831, "new_tutorial_fil": 831, "stuck": 831, "secur": [831, 837], "secret": 831, "client": [831, 872], "test_evok": 831, "python_refer": 831, "rst": 831, "my_funct": 831, "my_new_funct": 831, "old_param": 831, "new_param": 831, "my_other_funct": 831, "depr_messag": 831, "changeset": 831, "minor": [831, 857, 860, 872], "typo": [831, 850, 872], "subsect": 831, "bugfix": [831, 839], "happi": 831, "credit": 831, "gh": [831, 872], "newcontrib": 831, "firstnam": 831, "lastnam": 831, "_your": 831, "test_topo": 831, "pep": 831, "pep8": 831, "pyflak": 831, "flake8": 831, "flake": 831, "ins": 831, "camelcas": [831, 862], "snake_cas": 831, "nsampl": 831, "complic": [831, 872], "sphinxcontrib": 831, "bibtex": [831, 846], "citat": [831, 872], "bibliograph": 831, "bib": 831, "singleauthor2019": 831, "authoroneauthortwo2020": 831, "firstauthoretal2021a": 831, "firstauthoretal2021b": 831, "param_nam": 831, "test_docstring_paramet": 831, "docstyl": 831, "glossari": [831, 855], "mod": 831, "intersphinx": 831, "inventori": 831, "sphobjinv": 831, "dump": 831, "ext": 831, "backtick": [831, 851], "pdb": 831, "debugg": [831, 872], "test_io_evok": 831, "imit": 831, "html_dev": 831, "noplot": 831, "regex_to_select_my_tutori": 831, "unrel": 831, "browse_raw": [831, 872], "mortem": 831, "pm": 831, "everyon": 831, "scientist": [831, 835, 850], "spare": 831, "streamlin": 831, "collabor": [831, 838, 853], "fruit": 831, "road": 831, "someon": 831, "occasion": [831, 848], "cosmet": 831, "backport": [831, 872], "whats_new": 831, "draft": 831, "wip": 831, "mrg": 831, "sty": 831, "azp": 831, "azur": 831, "exemplifi": 831, "ecosystem": [832, 835, 838], "tcsh": [832, 836, 837], "ubuntu": [832, 834, 837, 860], "bionic": 834, "beaver": 834, "1_0": 834, "intel": [834, 851], "catalina": [834, 836, 872], "silicon": 834, "studio": [834, 835], "python_1": 834, "0_1": 834, "mamba": 835, "prioriti": 835, "h5io": [835, 851], "h5py": [835, 851], "pymatread": [835, 872], "vscode": 835, "microsoft": 835, "anaconda3": [835, 836], "pyqt5": 835, "pyqt": [835, 872], "pycharm": [835, 851], "paid": 835, "profession": 835, "cmd": 836, "bash_profil": 836, "__conda_setup": 836, "overflow": [836, 872], "leopard": 837, "powerpc": 837, "runtim": 837, "mne_convert_mne_data": 837, "mne_epochs2mat": [837, 857], "mne_raw2mat": 837, "mne_simu": 837, "xcode": 837, "xquartz": 837, "x11": 837, "libxt": 837, "dylib": 837, "bak": 837, "flat_namespac": 837, "netpbm": 837, "brew": 837, "app": 837, "nightli": [837, 872], "path_to_desired_install_loc": 837, "zxvf": 837, "path_to_archive_fil": 837, "pkg": 837, "untrust": 837, "privaci": [837, 853], "mne_root": [837, 854, 857, 872], "matlab_root": 837, "r2018b": 837, "undefin": 837, "mne_setup_sh": 837, "csh": 837, "mne_setup": [837, 857], "path_to_mn": 837, "path_to_matlab": 837, "emul": 837, "zshrc": 837, "cshrc": 837, "tcshrc": 837, "setenv": [837, 842], "mne_opengl_test": 837, "redraw": 837, "spent": 837, "revolut": 837, "interrupt": 837, "glx": 837, "nondirect": 837, "IT": 837, "vnc": 837, "card": [837, 872], "libxp": 837, "libxp6": 837, "debian": [837, 860, 872], "dpkg": 837, "libxp6_1": 837, "1ubuntu1_amd64": 837, "deb": 837, "libgfortran": 837, "libfortran": 837, "gnu": 837, "maxdepth": 837, "interoper": 838, "reimplement": 838, "cpp": [838, 872], "connectom": [838, 860], "compli": [838, 872], "alphacsc": 838, "pactool": 838, "microst": 838, "conpi": 838, "eelbrain": 838, "posthoc": 838, "prep": 838, "pyprep": 838, "sesam": 838, "sesameeg": 838, "invertmeeg": 838, "unix": [838, 872], "name_of_environ": 839, "fool": 839, "proof": 839, "old_mn": 839, "dep": 839, "hm": [842, 848], "pubsw": 842, "subscrib": 842, "modular": 843, "qt3d": 843, "babymeg": 843, "tmsi": 843, "refa": 843, "brainamp": 843, "ant": 843, "eegosport": 843, "gusbamp": 843, "gramfortetal2013a": 846, "gramfortetal2014": 846, "bibliographi": 846, "meg2443": 847, "vanish": 847, "advers": 847, "preliminari": 847, "stamp": 847, "mm2": 847, "ico5": 847, "tessel": [847, 857], "prerequisit": 847, "bulletproof": 847, "feasibl": 847, "sep": 847, "bem_sol": 847, "reestablish": 847, "corregistr": 847, "charg": 847, "photograph": 847, "uninterest": 847, "epilept": 847, "infrequ": 847, "hesit": [848, 851], "siemen": [848, 854], "sonata": 848, "mprage": [848, 851, 854], "interspers": 848, "lv": 848, "audvis_raw": 848, "auvi": 848, "agre": 848, "bst_rest": [848, 862], "khz": 848, "dicom": [848, 857, 872], "richli": 848, "timon": [848, 872], "9999": 848, "msr": 848, "retrospect": 848, "satisfactori": 848, "chin": 848, "respir": [848, 854, 857], "hypnogram": 848, "rechtschaffen": 848, "kale": 848, "erlangen": 848, "germani": 848, "shaft": [848, 860], "pend": 848, "craft": 848, "lrp": 848, "ern": 848, "neuroscientist": 849, "keystrok": 849, "peak_find": [849, 862, 872], "appnop": 851, "nope": 851, "nsappsleepdis": 851, "tempt": 851, "benfrederickson": 851, "dont": 851, "stackoverflow": 851, "21752259": 851, "write_": 851, "resid": 851, "plot_find_ecg_artifact": 851, "ordinarili": 851, "mkl": 851, "openmp": 851, "omp_num_thread": 851, "openblas_num_thread": 851, "num_cpu": 851, "implic": 851, "simplist": 851, "gpu": [851, 872], "epochs_path": 851, "protrud": 851, "shrunken": 851, "mri_norm": 851, "xopt": 851, "gentl": 851, "listserv": 851, "recon_al": 851, "autorecon2": 851, "autorecon3": 851, "formal": 853, "extraordinari": 853, "clarifi": [853, 872], "profit": 853, "entiti": [853, 857], "openli": 853, "affili": 853, "discours": 853, "behalf": 853, "barrier": 853, "leadership": 853, "neutral": 853, "tradition": [853, 854], "reward": 853, "benevol": 853, "dictat": 853, "defer": 853, "vote": 853, "deadlock": 853, "fork": 853, "disagre": 853, "deleg": 853, "appoint": 853, "successor": 853, "faith": 853, "director": 853, "ceo": [853, 872], "everydai": 853, "peer": 853, "privileg": 853, "servic": [853, 872], "scope": 853, "strateg": 853, "polici": [853, 872], "nomin": 853, "willing": 853, "capac": 853, "infrastructur": [853, 872], "outreach": 853, "deliber": 853, "divers": 853, "viewpoint": 853, "talent": 853, "grace": 853, "retir": 853, "eject": 853, "deem": 853, "harm": 853, "financi": 853, "employ": 853, "disclos": 853, "recus": 853, "themself": 853, "sparingli": 853, "apach": 853, "veto": 853, "rational": 853, "opinion": 853, "anticip": [853, 872], "suffic": 853, "usurp": 853, "countri": 853, "gift": 853, "partnership": 853, "approv": 853, "commenc": 853, "laps": 853, "pursu": 853, "monei": 853, "donor": 853, "umbrella": 853, "trademark": 853, "invit": 853, "waiv": 853, "copyright": 853, "mole": 854, "sensibl": 854, "femtotesla": 854, "typecast": 854, "unread": [854, 872], "electrocardiographi": 854, "electromyographi": 854, "celsiu": 854, "channels_3_and_4": 854, "boldsymbol": 854, "c_0": 854, "g_": 854, "infti": 854, "r_j": 854, "t_d": 854, "underbrac": 854, "b_": 854, "b_n": 854, "dotso": 854, "uc_n": 854, "constitut": 854, "orthonorm": 854, "c_e": 854, "complement": 854, "perp": 854, "uu": 854, "segonn": 854, "_brain_surfac": 854, "_inner_skull_surfac": 854, "_outer_skull_surfac": 854, "_outer_skin_surfac": 854, "availablili": 854, "fov": 854, "dcm2niix": 854, "mne_organize_dicom": 854, "flash05": 854, "fat32": 854, "mri_ms_fitparm": 854, "mri_synthes": 854, "fsl_rigid_regist": 854, "flash5_reg": 854, "cor": 854, "mri_make_bem_surfac": 854, "tringul": 854, "t_x": 854, "ti": 854, "mm3": 854, "mnitalairach": 854, "mni305": 854, "y_2": 854, "z_2": 854, "y_1": 854, "z_1": 854, "x_0": 854, "y_0": 854, "z_0": 854, "x_k": 854, "y_k": 854, "z_k": 854, "jk": 854, "9688": [854, 872], "0485": 854, "9189": 854, "t_1": 854, "s_1": 854, "s_n": 854, "t_2": 854, "filessepar": 854, "t_3": 854, "mghformat": 854, "t_4": 854, "hardcod": 854, "idiosyncrasi": 854, "conceiv": 854, "s_p": 854, "50mm": 854, "r_0": 854, "e_x": 854, "e_i": 854, "e_z": 854, "r_c": 854, "r_d": 854, "0d": 854, "n_k": 854, "w_": 854, "kp": 854, "sixteen": 854, "tm": [854, 857, 872], "centerpoint": 854, "mne_list_coil_def": 854, "3012": 854, "8mm": 854, "3013": 854, "4001": 854, "wh": 854, "3600": 854, "4003": 854, "4004": 854, "4005": 854, "5001": 854, "5002": 854, "6001": 854, "diamet": 854, "nx": 854, "ny": 854, "nz": [854, 872], "r_1": 854, "dotsc": 854, "r_m": 854, "mu_1": 854, "mu_m": 854, "int_": 854, "v_": 854, "ly": 854, "average_forward_solut": [854, 862], "ensu": 854, "posteriori": 854, "viabl": 854, "3p": 854, "unconstrain": 854, "mx": 854, "smoother": [854, 872], "arriv": 854, "bigl": 854, "bigr": 854, "u_c": 854, "lambda_c": 854, "grg": 854, "possess": 854, "varepsilon_k": 854, "sigma_k": 854, "rout": 854, "superscript": 854, "v_k": 854, "w_k": 854, "propto": 854, "dimensionless": 854, "tendenc": 854, "divis": [854, 872], "2_k": 854, "g_i": 854, "u_": 854, "lambda_": 854, "_i": 854, "noiseless": 854, "misfit": 854, "pi_k": 854, "recolor": 854, "eigenfield": 854, "n_d": 854, "a_d": 854, "postsynapt": 854, "microscop": 854, "rigidli": 854, "floc": 854, "thereaft": 854, "vloc": 854, "favor": [854, 872], "1p": 854, "2p": 854, "l_": 854, "eff": 854, "w_i": 854, "x_i": 854, "c_y": 854, "l_i": 854, "w_1": 854, "w_2": 854, "l_1": 854, "l_2": 854, "supposedli": 854, "x_j": 854, "t_j": 854, "biject": 854, "smudg": 854, "n_j": 854, "prod_": 854, "kindli": 855, "function_nam": 855, "w3school": 856, "carpentri": 856, "lesson": 856, "fiff_": 857, "startup": 857, "mne_ex": 857, "fiff_setup_read_raw": 857, "fiff_read_raw_seg": 857, "fiff_find_evok": 857, "fiff_read_bad_channel": 857, "fiff_read_ctf_comp": 857, "fiff_read_evok": 857, "fiff_read_evoked_al": 857, "fiff_read_meas_info": 857, "fiff_read_mri": 857, "fiff_read_proj": 857, "fiff_read_raw_segment_tim": 857, "fiff_pick_channel": 857, "fiff_pick_channels_evok": 857, "fiff_pick_info": 857, "fiff_pick_typ": 857, "fiff_pick_types_evok": 857, "fiff_invert_transform": 857, "fiff_reset_ch_po": 857, "fiff_transform_eeg_ch": 857, "fiff_transform_meg_ch": 857, "fiff_define_const": 857, "fiff_dir_tree_find": 857, "fiff_list_dir_tre": 857, "fiff_make_dir_tre": 857, "fiff_open": 857, "fiff_read_named_matrix": 857, "fiff_read_tag": 857, "fiff_read_tag_info": 857, "fiff_split_name_list": 857, "fiff_end_block": 857, "fiff_end_fil": 857, "fiff_start_block": 857, "fiff_start_fil": 857, "fiff_write_ch_info": 857, "fiff_write_coord_tran": 857, "fiff_write_ctf_comp": 857, "fiff_write_dig_point": 857, "fiff_write_complex": 857, "fiff_write_complex_matrix": 857, "fiff_write_doubl": 857, "fiff_write_double_complex": 857, "fiff_write_double_complex_matrix": 857, "fiff_write_double_matrix": 857, "fiff_write_evok": 857, "repons": 857, "fiff_write_float": 857, "fiff_write_float_matrix": 857, "fiff_write_id": 857, "fiff_write_int": 857, "fiff_write_int_matrix": 857, "fiff_write_name_list": 857, "fiff_write_named_matrix": 857, "fiff_write_proj": 857, "fiff_write_short": 857, "fiff_write_str": 857, "fiff_finish_writing_raw": 857, "fiff_start_writing_raw": 857, "fiff_write_dig_fil": 857, "fiff_write_raw_buff": 857, "mne_add_coil_def": 857, "mne_load_coil_def": 857, "mne_compensate_to": 857, "mne_get_current_comp": 857, "mne_make_compens": 857, "mne_make_projector_info": 857, "mne_make_projector": 857, "mne_set_current_comp": 857, "mne_pick_channels_cov": 857, "mne_pick_channels_forward": 857, "mne_read_bem_surfac": 857, "mne_read_cov": 857, "mne_read_epoch": 857, "mne_read_ev": 857, "mne_read_forward_solut": 857, "mne_read_inverse_oper": 857, "mne_read_morph_map": 857, "mne_read_noise_cov": 857, "mne_read_source_spac": 857, "mne_write_cov": 857, "mne_write_cov_fil": 857, "mne_write_ev": 857, "mne_write_inverse_sol_stc": 857, "mne_write_inverse_sol_w": 857, "mne_read_stc_fil": 857, "mne_read_stc_file1": 857, "mne_read_w_fil": 857, "mne_read_w_file1": 857, "mne_write_stc_fil": 857, "mne_write_stc_file1": 857, "mne_write_w_fil": 857, "mne_write_w_file1": 857, "mne_read_label_fil": 857, "mne_write_label_fil": 857, "mne_label_time_cours": 857, "mne_read_curvatur": 857, "mne_read_surfac": 857, "mne_reduce_surfac": 857, "reducepatch": 857, "mne_write_surfac": 857, "mne_block_diag": 857, "mne_combine_xyz": 857, "mne_file_nam": 857, "mne_find_channel": 857, "mne_find_source_space_hemi": 857, "mne_fread3": 857, "mne_fwrite3": 857, "mne_make_combined_event_fil": 857, "mne_omit_first_lin": 857, "mne_setup_toolbox": 857, "mne_transform_coordin": 857, "mne_collect_transform": 857, "mne_transpose_named_matrix": 857, "mne_transform_source_space_to": 857, "mne_ex_average_epoch": 857, "mne_ex_cancel_nois": 857, "mne_ex_compute_invers": 857, "mne_ex_data_set": 857, "mne_ex_evoked_grad_amp": 857, "mne_ex_read_epoch": 857, "mne_ex_read_evok": 857, "mne_ex_read_raw": 857, "mne_ex_read_write_raw": 857, "mne_copy_processing_histori": 857, "revis": 857, "coil_geometry_inform": 857, "fiffb_meas_info": 857, "mne_compute_raw_invers": 857, "fiffv_meg_ch": 857, "fiffv_ref_meg_ch": 857, "fiffv_eef_ch": 857, "fiffv_mcg_ch": 857, "mcg": 857, "fiffv_stim_ch": 857, "fiffv_eog_ch": 857, "fiffv_emg_ch": 857, "fiffv_ecg_ch": 857, "fiffv_misc_ch": 857, "fiffv_resp_ch": 857, "fiffv_coord_unknown": 857, "fiffv_coord_devic": 857, "fiffv_coord_isotrak": 857, "fiffv_coord_hpi": 857, "fiffv_coord_mri_slic": 857, "fiffv_coord_mri_displai": 857, "fiffv_coord_dicom_devic": 857, "fiffv_coord_imaging_devic": 857, "fiffv_mne_coord_tufts_eeg": 857, "tuft": 857, "fiffv_mne_coord_ctf_devic": 857, "1001": 857, "fiffv_mne_coord_ctf_head": 857, "fiffv_aspect_averag": 857, "fiffv_aspect_std_err": 857, "fiffv_aspect_singl": 857, "fiffv_aspect_subaverag": 857, "fiffv_aspect_altaverag": 857, "fiffv_aspect_sampl": 857, "fiffv_aspect_power_dens": 857, "fiffv_aspect_dipole_wav": 857, "fiffv_bem_surf_id_unknown": 857, "fiffv_bem_surf_id_brain": 857, "fiffv_bem_surf_id_skul": 857, "fiffv_bem_surf_id_head": 857, "fiffv_point_hpi": 857, "fiffv_point_ecg": 857, "fiffv_point_extra": 857, "fiffv_point_lpa": 857, "fiffv_point_rpa": 857, "fiffv_mne_meg": 857, "fiffv_mne_eeg": 857, "fiffv_mne_meg_eeg": 857, "fiffv_mne_unknown_cov": 857, "fiffv_mne_noise_cov": 857, "fiffv_mne_sensor_cov": 857, "fiffv_mne_source_cov": 857, "fiffv_mne_fmri_prior_cov": 857, "fiffv_mne_signal_cov": 857, "fiffv_mne_depth_prior_cov": 857, "fiffv_mne_orient_prior_cov": 857, "fiffv_proj_item_non": 857, "fiffv_proj_item_dip_fix": 857, "fiffv_proj_item_dip_rot": 857, "fiffv_proj_item_homog_grad": 857, "fiffv_proj_item_homog_field": 857, "fiffv_proj_item_eeg_avref": 857, "uint32": 857, "parent_id": 857, "nent": 857, "nchild": 857, "1970": [857, 872], "fiffv_coord": 857, "fiffv_mne_coord": 857, "fiff_point": 857, "num_point": 857, "char": [857, 872], "fv": 857, "struct": 857, "fiff_eeg_ch": 857, "coil_tran": 857, "eeg_loc": 857, "six": 857, "10unit_mul": 857, "fiffv_proj_item": 857, "fiffv_mne_proj_item": 857, "decalibr": 857, "row_cal": 857, "col_cal": 857, "tri_area": 857, "tri_cent": 857, "centroid": 857, "tri_nn": 857, "mne_add_patch_info": 857, "sol_grad": 857, "sing": 857, "eigen_lead": 857, "eigen_field": 857, "source_cov": 857, "cond1": 858, "cond2": 858, "addpath": 858, "pop_fileio": 858, "pop_eegfiltnew": 858, "pop_averef": 858, "pop_select": 858, "pop_runica": 858, "pop_binica": 858, "pop_compprop": 858, "comp_num": 858, "winhandl": 858, "comphead": 858, "pop_selectcomp": 858, "list_of_components_to_exclud": 858, "pop_epoch": 858, "eeg_epoch": 858, "pop_timtopo": 858, "pop_compareerp": 858, "eeg_epochs1": 858, "eeg_epochs2": 858, "pop_saveset": 858, "lfreq": 858, "hfreq": 858, "filtered_raw": 858, "bdfl": 859, "nutmegtrip": 860, "youtub": [860, 872], "cluster_based_statist": 860, "patsi": 860, "dmatric": 860, "2852": 860, "3585": 860, "openneuro": 860, "6687": 860, "adult": 860, "dcm": 860, "kymata": 860, "watch": 860, "bnci": 860, "horizon": 860, "pde": 860, "swig": 860, "ambit": 860, "useless": 860, "recruit": 860, "8221": 860, "rudimentari": 860, "crossspectrum": 860, "multitaperspectrum": 860, "6290": 860, "7671": 860, "8026": 860, "8724": 860, "9045": 860, "pr": 860, "6609": 860, "6629": 860, "6672": 860, "6673": 860, "8397": 860, "8892": 860, "mnefun": 860, "ptfce": 860, "mayavi": [860, 872], "7162": 860, "cloud": 860, "dask": 860, "czi": 860, "7751": 860, "docker": 860, "underscore_cas": 862, "themat": 862, "read_raw_curri": [862, 872], "read_raw_nedf": [862, 872], "read_mrk": 862, "get_meg_helmet_surf": 862, "get_volume_labels_from_src": [862, 872], "parse_config": 862, "read_evoked_besa": [862, 872], "read_evokeds_mff": [862, 872], "read_morph_map": [862, 872], "read_reject_paramet": 862, "write_label": 862, "export_epoch": [862, 872], "export_evok": [862, 872], "add_background_imag": 862, "compare_fiff": 862, "mne_analyze_colormap": 862, "plot_csd": 862, "plot_epochs_psd_topomap": [862, 872], "plot_evok": [862, 872], "plot_evoked_topomap": [862, 872], "plot_evoked_joint": [862, 872], "plot_ica_properti": [862, 872], "plot_ica_scor": [862, 872], "plot_ica_overlai": [862, 872], "plot_montag": [862, 872], "plot_raw_psd": [862, 872], "plot_regression_weight": [862, 872], "plot_volume_source_estim": [862, 872], "plot_tfr_topomap": [862, 872], "plot_topo_image_epoch": [862, 872], "get_3d_backend": [862, 872], "use_3d_backend": [862, 872], "close_3d_figur": 862, "close_all_3d_figur": 862, "get_browser_backend": [862, 872], "equalize_channel": [862, 872], "annotate_nan": [862, 872], "compute_fine_calibr": [862, 872], "compute_maxwell_basi": [862, 872], "ica_find_ecg_ev": 862, "ica_find_eog_ev": 862, "equalize_bad": [862, 872], "maxwell_filter_prepare_emptyroom": [862, 872], "read_eog_regress": 862, "realign_raw": [862, 872], "regress_artifact": [862, 872], "read_ica_eeglab": [862, 872], "read_fine_calibr": 862, "write_fine_calibr": 862, "short_channel": [862, 872], "estimate_ringing_sampl": 862, "extract_chpi_locs_kit": [862, 872], "concatenate_ev": 862, "match_event_nam": [862, 872], "shift_time_ev": [862, 872], "pick_channels_cov": 862, "compute_whiten": [862, 872], "write_fiduci": 862, "create_default_subject": [862, 872], "head_to_mni": 862, "head_to_mri": [862, 872], "add_source_space_dist": [862, 872], "decimate_surfac": [862, 872], "complete_surface_info": 862, "distance_to_bem": [862, 872], "compute_rank_invers": 862, "read_beamform": [862, 872], "grade_to_tri": 862, "grade_to_vertic": 862, "grow_label": [862, 872], "random_parcel": 862, "transform_surface_to": [862, 872], "get_decimated_surfac": [862, 872], "pick_channels_csd": 862, "dpss_window": [862, 872], "cwt": 862, "ttest_ind_no_p": [862, 872], "spatial_dist_adjac": [862, 872], "spatial_tris_adjac": [862, 872], "spatial_inter_hemi_adjac": [862, 872], "spatio_temporal_src_adjac": [862, 872], "spatio_temporal_dist_adjac": [862, 872], "select_source_in_label": 862, "psdestim": 862, "timefrequ": [862, 872], "open_doc": [862, 872], "set_log_fil": 862, "get_cuda_memori": 862, "set_cuda_devic": [862, 872], "11333": 872, "tooma": 872, "anij\u00e4rv": 872, "11237": 872, "scheltienn": 872, "11236": 872, "11241": 872, "jevri": 872, "repr": 872, "11357": 872, "11359": 872, "11096": 872, "11353": 872, "11283": 872, "11329": 872, "11375": 872, "hennei": 872, "11310": 872, "santeri": 872, "ruuskanen": 872, "11289": 872, "mauricio": 872, "cesped": 872, "tenorio": 872, "11235": 872, "hasegan": 872, "11245": 872, "gerster": 872, "dinara": 872, "issagaliyeva": 872, "jennif": 872, "behnk": 872, "hakimeh": 872, "aslsardroud": 872, "pavel": 872, "navratil": 872, "ear_left": 872, "ear_right": 872, "11255": 872, "11263": 872, "torr": 872, "ortiz": 872, "11351": 872, "enzo": 872, "altamiranda": 872, "reject_": 872, "11244": 872, "11303": 872, "11290": 872, "wrongli": 872, "11248": 872, "11258": 872, "erkka": 872, "heinila": 872, "outli": 872, "11298": 872, "11345": 872, "11311": 872, "11300": 872, "11340": 872, "11318": 872, "11346": 872, "11344": 872, "errantli": 872, "11347": 872, "11293": 872, "11322": 872, "11369": 872, "11361": 872, "nowadai": 872, "11371": 872, "brayet": 872, "luka": 872, "hecker": 872, "omer": 872, "shubi": 872, "merk": 872, "11073": 872, "10656": 872, "10784": 872, "11011": 872, "11006": 872, "6233": 872, "10986": 872, "11048": 872, "8639": 872, "11083": 872, "11051": 872, "11020": 872, "11075": 872, "valerii": 872, "chirkov": 872, "electroderm": 872, "11090": 872, "11108": 872, "19080": 872, "11099": 872, "11077": 872, "11094": 872, "11095": 872, "11186": 872, "eduard": 872, "ort": 872, "11116": 872, "11147": 872, "11150": 872, "11185": 872, "11154": 872, "11141": 872, "11232": 872, "11159": 872, "11196": 872, "gemein": 872, "unlabel": 872, "11074": 872, "sebastiaan": 872, "mathot": 872, "11072": 872, "chetan": 872, "gohil": 872, "11004": 872, "carlstr\u00f6m": 872, "schad": 872, "11190": 872, "wetzel": 872, "11019": 872, "sena": 872, "11049": 872, "11084": 872, "11145": 872, "11182": 872, "11040": 872, "marian": 872, "dovgialo": 872, "11171": 872, "11181": 872, "11193": 872, "11102": 872, "11081": 872, "11191": 872, "6870": 872, "simeon": 872, "11197": 872, "11212": 872, "11203": 872, "11201": 872, "h\u00fcseyin": 872, "orkun": 872, "elma": 872, "deprecationwarn": 872, "11123": 872, "11050": 872, "show_toolbar": 872, "10184": 872, "skirt": 872, "add_channels_epoch": 872, "11180": 872, "11046": 872, "welzel": 872, "luzpaz": 872, "10974": 872, "ilia": 872, "machaira": 872, "10942": 872, "tziona": 872, "nessaiv": 872, "10922": 872, "mingjian": 872, "he": 872, "10736": 872, "jordan": 872, "drew": 872, "10632": 872, "courtemanch": 872, "10515": 872, "alessandro": 872, "tonin": 872, "10555": 872, "powel": 872, "10627": 872, "evan": 872, "hathawai": 872, "icalabel": 872, "10615": 872, "10501": 872, "10460": 872, "10544": 872, "10720": 872, "10464": 872, "10699": 872, "10534": 872, "10568": 872, "10567": 872, "10533": 872, "10557": 872, "10591": 872, "10571": 872, "10587": 872, "10125": 872, "benerradi": 872, "10606": 872, "10610": 872, "10614": 872, "10611": 872, "10633": 872, "10661": 872, "10668": 872, "10681": 872, "timeformat": 872, "yyyi": 872, "_convert_tim": 872, "10674": 872, "kern": 872, "10694": 872, "10572": 872, "10373": 872, "10734": 872, "michiru": 872, "kaneda": 872, "10284": 872, "10749": 872, "10788": 872, "10892": 872, "10940": 872, "vref": 872, "10823": 872, "huberti": 872, "10979": 872, "_project_onto_surfac": 872, "return_nn": 872, "10930": 872, "10927": 872, "reza": 872, "nasri": 872, "hypnodyn": 872, "zmax": 872, "10754": 872, "frederik": 872, "weber": 872, "10718": 872, "t1t2": 872, "10639": 872, "toivonen": 872, "10217": 872, "wang": 872, "10517": 872, "10470": 872, "dold": 872, "10485": 872, "10487": 872, "10500": 872, "10491": 872, "10662": 872, "10866": 872, "10957": 872, "10513": 872, "10493": 872, "10504": 872, "10705": 872, "10521": 872, "10547": 872, "10543": 872, "10912": 872, "10560": 872, "10619": 872, "10618": 872, "shoorangiz": 872, "10638": 872, "10664": 872, "honor": 872, "10686": 872, "10685": 872, "10688": 872, "8754": 872, "10703": 872, "10730": 872, "10753": 872, "10765": 872, "po6": 872, "blender": 872, "10778": 872, "10802": 872, "10471": 872, "10851": 872, "10898": 872, "10990": 872, "10968": 872, "10936": 872, "10963": 872, "10978": 872, "10531": 872, "bilinear": 872, "set_interpol": 872, "10617": 872, "10715": 872, "10950": 872, "10925": 872, "10945": 872, "adelin": 872, "fecker": 872, "ciok": 872, "archit": 872, "singhal": 872, "ashlei": 872, "beaslei": 872, "dominiqu": 872, "makowski": 872, "hamid": 872, "maymandi": 872, "naveen": 872, "srinivasan": 872, "sondr": 872, "foslien": 872, "10396": 872, "10089": 872, "senwen": 872, "deng": 872, "10076": 872, "zerfowski": 872, "10054": 872, "etienn": 872, "montalivet": 872, "10174": 872, "veillett": 872, "10307": 872, "10281": 872, "9952": 872, "10379": 872, "9922": 872, "9978": 872, "9994": 872, "9929": 872, "concis": 872, "__repr__": 872, "10042": 872, "sosulski": 872, "10056": 872, "10077": 872, "10102": 872, "10058": 872, "10109": 872, "10115": 872, "10119": 872, "10114": 872, "10116": 872, "dpi": 872, "10126": 872, "10129": 872, "10135": 872, "10142": 872, "10166": 872, "10175": 872, "10182": 872, "10186": 872, "10185": 872, "9969": 872, "10019": 872, "10200": 872, "10255": 872, "10202": 872, "9972": 872, "10206": 872, "10220": 872, "10230": 872, "10249": 872, "10243": 872, "10212": 872, "ui": 872, "10222": 872, "10183": 872, "10247": 872, "10297": 872, "10299": 872, "10330": 872, "10384": 872, "10417": 872, "10418": 872, "10408": 872, "subsurfac": 872, "10421": 872, "joshua": 872, "teve": 872, "latin": 872, "10429": 872, "eberlein": 872, "10431": 872, "rawmff": 872, "10304": 872, "10361": 872, "shift_jist": 872, "10356": 872, "10093": 872, "adina": 872, "wagner": 872, "loadtxt": 872, "10189": 872, "federico": 872, "zamberlan": 872, "nikolai": 872, "chapochnikov": 872, "9957": 872, "led": 872, "inconsist": 872, "9966": 872, "9998": 872, "9968": 872, "alphanumer": 872, "10002": 872, "9975": 872, "9980": 872, "9990": 872, "suboptim": 872, "9991": 872, "10004": 872, "9970": 872, "10021": 872, "10040": 872, "10358": 872, "10047": 872, "10399": 872, "10073": 872, "10087": 872, "annotate_": 872, "meas_tim": 872, "10067": 872, "10118": 872, "10074": 872, "10082": 872, "10112": 872, "trip": 872, "10177": 872, "10127": 872, "10132": 872, "10095": 872, "10176": 872, "stout": 872, "10210": 872, "10235": 872, "10267": 872, "german": 872, "de_d": 872, "french": 872, "fr_fr": 872, "italian": 872, "it_it": 872, "10277": 872, "10292": 872, "10309": 872, "10265": 872, "10415": 872, "initial_valu": 872, "10289": 872, "10324": 872, "10342": 872, "10347": 872, "10313": 872, "10400": 872, "10335": 872, "mislead": 872, "10393": 872, "10392": 872, "10401": 872, "9960": 872, "10039": 872, "10348": 872, "annotate_flat": 872, "10143": 872, "max_ori_out": 872, "10366": 872, "10323": 872, "jinja2": 872, "tempita": 872, "10211": 872, "julia": 872, "guiomar": 872, "niso": 872, "gal\u00e1n": 872, "steve": 872, "matindi": 872, "hartmann": 872, "julien": 872, "derollepot": 872, "xiaokai": 872, "xia": 872, "bannier": 872, "darin": 872, "erat": 872, "sleiter": 872, "gate": 872, "evgeni": 872, "goldstein": 872, "riessariu": 872, "stargardski": 872, "9801": 872, "9575": 872, "nirsport2": 872, "9348": 872, "9401": 872, "9376": 872, "9430": 872, "9481": 872, "9637": 872, "9872": 872, "9782": 872, "9858": 872, "9640": 872, "6888": 872, "9892": 872, "9725": 872, "ckdtree": 872, "9568": 872, "9643": 872, "9369": 872, "9427": 872, "9391": 872, "9396": 872, "9424": 872, "9403": 872, "9463": 872, "9431": 872, "9443": 872, "9406": 872, "9438": 872, "datablock": 872, "acquist": 872, "9437": 872, "raimondo": 872, "9445": 872, "9419": 872, "9458": 872, "9444": 872, "9503": 872, "9484": 872, "9697": 872, "9468": 872, "9514": 872, "erica": 872, "9541": 872, "9519": 872, "9525": 872, "9529": 872, "9558": 872, "9555": 872, "9553": 872, "insens": 872, "9544": 872, "9556": 872, "9578": 872, "9570": 872, "9545": 872, "9540": 872, "9601": 872, "9605": 872, "abort": 872, "9614": 872, "9516": 872, "9618": 872, "9658": 872, "9585": 872, "9682": 872, "9684": 872, "9789": 872, "9694": 872, "9586": 872, "9742": 872, "9796": 872, "9763": 872, "9784": 872, "9810": 872, "revamp": 872, "9754": 872, "9847": 872, "9860": 872, "9861": 872, "9862": 872, "9863": 872, "9871": 872, "9881": 872, "9891": 872, "9901": 872, "9795": 872, "9800": 872, "9613": 872, "9845": 872, "9851": 872, "9869": 872, "9859": 872, "9687": 872, "9708": 872, "9706": 872, "9378": 872, "9381": 872, "9712": 872, "9719": 872, "chronolog": 872, "9765": 872, "9849": 872, "9897": 872, "9920": 872, "9384": 872, "9404": 872, "9435": 872, "9531": 872, "9447": 872, "assertionerror": 872, "9612": 872, "9831": 872, "protect": 872, "9522": 872, "9485": 872, "9513": 872, "9489": 872, "9524": 872, "9603": 872, "9528": 872, "imposs": 872, "9893": 872, "9535": 872, "9564": 872, "9565": 872, "9629": 872, "9771": 872, "9607": 872, "9663": 872, "9630": 872, "9580": 872, "identitii": 872, "9758": 872, "dollar": 872, "9695": 872, "9746": 872, "9799": 872, "9804": 872, "9777": 872, "9780": 872, "9933": 872, "9864": 872, "9873": 872, "9940": 872, "9867": 872, "9904": 872, "pysurf": 872, "kit2fiff": 872, "mne_kit_gui": 872, "9505": 872, "9596": 872, "prox": 872, "outperform": 872, "9608": 872, "9493": 872, "9685": 872, "has_": 872, "_data": 872, "9781": 872, "add_figs_to_sect": 872, "add_slider_to_sect": 872, "add_images_to_sect": 872, "add_bem_to_sect": 872, "add_htmls_to_sect": 872, "sort_sect": 872, "9815": 872, "center_cmap": 872, "9843": 872, "detect_artifact": 872, "9909": 872, "fede": 872, "gansheng": 872, "tan": 872, "banvil": 872, "josh": 872, "koen": 872, "sumalyo": 872, "datta": 872, "pade": 872, "koehler": 872, "rotem": 872, "falach": 872, "sanderson": 872, "enrico": 872, "varano": 872, "judi": 872, "zhu": 872, "matteo": 872, "anelli": 872, "apoorva": 872, "karek": 872, "silvia": 872, "cotroneo": 872, "maggi": 872, "9192": 872, "9285": 872, "9278": 872, "9124": 872, "9203": 872, "9174": 872, "refactor": 872, "9088": 872, "9156": 872, "9043": 872, "9096": 872, "8867": 872, "8739": 872, "9169": 872, "yokogawa": 872, "8813": 872, "seymour": 872, "8799": 872, "ipyvtk_simpl": 872, "8503": 872, "8346": 872, "8896": 872, "8723": 872, "8738": 872, "8789": 872, "9268": 872, "8790": 872, "8697": 872, "8801": 872, "8829": 872, "8744": 872, "8762": 872, "9037": 872, "8793": 872, "9262": 872, "keypress": 872, "8806": 872, "starstim": 872, "enobio": 872, "8734": 872, "tristan": 872, "stenner": 872, "8760": 872, "8783": 872, "8822": 872, "8771": 872, "8805": 872, "8794": 872, "auto_clos": 872, "8730": 872, "8841": 872, "yu": 872, "luo": 872, "8858": 872, "checker": 872, "pylanc": 872, "8862": 872, "8874": 872, "interobail": 872, "8868": 872, "qt_mac_wants_lay": 872, "8959": 872, "8879": 872, "8834": 872, "9023": 872, "9015": 872, "9087": 872, "9113": 872, "9118": 872, "9103": 872, "9175": 872, "9149": 872, "9166": 872, "bierer": 872, "9210": 872, "9136": 872, "9241": 872, "9261": 872, "9269": 872, "9270": 872, "9141": 872, "9347": 872, "misbehav": 872, "8013": 872, "9207": 872, "9187": 872, "9151": 872, "9162": 872, "9152": 872, "x_label": 872, "9115": 872, "9062": 872, "8989": 872, "spectral_connect": 872, "8839": 872, "8844": 872, "8311": 872, "macosx": 872, "8688": 872, "8983": 872, "superset": 872, "8675": 872, "8713": 872, "8689": 872, "8954": 872, "8884": 872, "num_sampl": 872, "duration_in_sec": 872, "8712": 872, "8780": 872, "8804": 872, "8842": 872, "8857": 872, "9315": 872, "8956": 872, "9284": 872, "9317": 872, "8845": 872, "8811": 872, "bailei": 872, "8736": 872, "8831": 872, "8728": 872, "8731": 872, "8996": 872, "8752": 872, "8759": 872, "8775": 872, "8800": 872, "8817": 872, "8821": 872, "8856": 872, "8965": 872, "8985": 872, "8891": 872, "8963": 872, "9109": 872, "9178": 872, "9252": 872, "9027": 872, "9236": 872, "9246": 872, "9305": 872, "9277": 872, "9099": 872, "plot_sensors_connect": 872, "cbar_label": 872, "9248": 872, "read_select": 872, "8870": 872, "tf_dic": 872, "9122": 872, "9033": 872, "ana": 872, "radanov": 872, "magalvan": 872, "mista": 872, "christina": 872, "zhao": 872, "giorgio": 872, "marinato": 872, "jori": 872, "den": 872, "bossch": 872, "gensollen": 872, "treguer": 872, "austin": 872, "hurst": 872, "aniket": 872, "pradhan": 872, "hongjiang": 872, "kuziek": 872, "qianliang": 872, "tod": 872, "flak": 872, "8354": 872, "7070": 872, "imgag": 872, "7717": 872, "kyle": 872, "mathewson": 872, "8275": 872, "8445": 872, "keith": 872, "doell": 872, "8553": 872, "8190": 872, "8539": 872, "8379": 872, "8366": 872, "8642": 872, "8447": 872, "8323": 872, "8449": 872, "8402": 872, "8460": 872, "8532": 872, "8482": 872, "8608": 872, "8502": 872, "tqdm": 872, "8515": 872, "8622": 872, "8381": 872, "8584": 872, "8442": 872, "8534": 872, "8624": 872, "8519": 872, "8452": 872, "8415": 872, "8395": 872, "8658": 872, "cascad": 872, "8633": 872, "8580": 872, "8400": 872, "test_egi": 872, "mandatorili": 872, "8474": 872, "8339": 872, "8558": 872, "s390x": 872, "8618": 872, "8594": 872, "8610": 872, "8377": 872, "8285": 872, "8344": 872, "8318": 872, "8637": 872, "8306": 872, "8448": 872, "8283": 872, "name_split": 872, "01_meg": 872, "name_meg": 872, "8464": 872, "8326": 872, "8343": 872, "8425": 872, "8317": 872, "8663": 872, "8320": 872, "8303": 872, "8484": 872, "8349": 872, "max_pca_compon": 872, "max_pca_components_": 872, "8321": 872, "8341": 872, "everyhwer": 872, "8368": 872, "8393": 872, "8416": 872, "8434": 872, "8486": 872, "8491": 872, "8492": 872, "8545": 872, "8590": 872, "tukei": 872, "8542": 872, "8520": 872, "8589": 872, "8564": 872, "8605": 872, "8374": 872, "8357": 872, "8356": 872, "8389": 872, "justu": 872, "schwabed": 872, "mad": 872, "jensen": 872, "mikolaj": 872, "rahul": 872, "nadkarni": 872, "lau": 872, "m\u00f8ller": 872, "andersen": 872, "sedivi": 872, "donckt": 872, "svea": 872, "meyer": 872, "lx37": 872, "rai": 872, "n_iter_sdr": 872, "immut": 872, "fxaa": 872, "_split": 872, "_part": 872, "read_raw_xxx": 872, "simpler": 872, "permit": 872, "outermost": 872, "setup_forward_model": 872, "unicod": 872, "conjug": 872, "throw": 872, "spatio_temporal_src_connect": 872, "find_ch_connect": 872, "read_ch_connect": 872, "spatial_dist_connect": 872, "spatial_inter_hemi_connect": 872, "spatial_src_connect": 872, "spatial_tris_connect": 872, "spatio_temporal_dist_connect": 872, "spatio_temporal_tris_connect": 872, "normalize_fwd": 872, "stc_mix": 872, "read_dig_captrack": 872, "spell": 872, "captrack": 872, "mark_flat": 872, "alejandro": 872, "weinstein": 872, "anton": 872, "nikola": 872, "waniek": 872, "harmelen": 872, "sara": 872, "sommariva": 872, "chapochn": 872, "mshader": 872, "sophi": 872, "herbst": 872, "victor": 872, "ferat": 872, "mohammad": 872, "daneshzand": 872, "reppling": 872, "plv": 872, "dmitrii": 872, "altukhov": 872, "epochs_color": 872, "prepare_bem_model": 872, "unavail": 872, "compromis": 872, "roc_auc_ovo": 872, "roc_auc_ovo_weight": 872, "sebastian": 872, "old_tim": 872, "subprocess": 872, "htp": 872, "insuffici": 872, "demetr": 872, "kosta": 872, "gridsearchcv": 872, "chun": 872, "hui": 872, "henrich": 872, "kolkhorst": 872, "fu": 872, "geoff": 872, "brookshir": 872, "eegmi_url": 872, "ramiro": 872, "gatti": 872, "get_channel_type_const": 872, "bump": 872, "tandem": 872, "point_spread_funct": 872, "cross_talk_funct": 872, "ariel": 872, "rokem": 872, "jos\u00e9": 872, "garc\u00eda": 872, "moham": 872, "sherif": 872, "nataliia": 872, "kozhemiako": 872, "legrand": 872, "f\u00e9rat": 872, "theodor": 872, "papadopoulo": 872, "markerfil": 872, "dirk": 872, "g\u00fctlin": 872, "10x": 872, "jit": 872, "ryb\u00e1\u0159": 872, "abram": 872, "hindl": 872, "eberhard": 872, "eich": 872, "radman": 872, "hidpi": 872, "pycord": 872, "read_montag": 872, "read_dig_montag": 872, "set_dig": 872, "update_ch_nam": 872, "raise_if_subset": 872, "_smsh_": 872, "_smartshield": 872, "max_tick": 872, "show_legend": 872, "biosig": 872, "nathali": 872, "gayraud": 872, "crist\u00f3bal": 872, "mo\u00ebnn": 872, "loccoz": 872, "mixin": 872, "lslclient": 872, "lsl": 872, "chala": 872, "mocklslstream": 872, "roujanski": 872, "fault": 872, "kovrig": 872, "n_pad": 872, "bruno": 872, "nicenboim": 872, "32bit": 872, "edge_": 872, "v0": 872, "retina": 872, "larri": 872, "eisenman": 872, "mishandl": 872, "haslach": 872, "clean_eog_ecg": 872, "jeythekei": 872, "_criterion": 872, "katarina": 872, "slama": 872, "synthesi": 872, "find_edf_ev": 872, "patch_info": 872, "castano": 872, "finder": 872, "rasmu": 872, "zetter": 872, "orgin": 872, "gsoc": 872, "molfes": 872, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 872, "gutstein": 872, "trig_shift_by_typ": 872, "read_annotations_brainvis": 872, "get_blas_func": 872, "_compute_covariance_auto": 872, "onewai": 872, "marcin": 872, "koculak": 872, "buildup": 872, "incom": 872, "bethard": 872, "dateutil": 872, "jasper": 872, "bosch": 872, "_current": 872, "unit_noise_gain": 872, "buildqa": 872, "read_annotations_eeglab": 872, "annotmap": 872, "runtimeexcept": 872, "morph_precomput": 872, "compute_morph_matrix": 872, "morph_data_precomput": 872, "pycuda": 872, "warn_explicit": 872, "save_stc_as_volum": 872, "stop_receive_thread": 872, "johan": 872, "meer": 872, "kambiz": 872, "tavabi": 872, "lorenz": 872, "esch": 872, "manu": 872, "sutela": 872, "perri": 872, "sergei": 872, "antopolskii": 872, "teekuninga": 872, "jochmann": 872, "dupr\u00e9": 872, "workaround": 872, "trainsform": 872, "dubarri": 872, "tf_mxne_optim": 872, "mxne_optim": 872, "multidictionari": 872, "image_mask": 872, "csd_epoch": 872, "csd_arrai": 872, "oleh": 872, "kozynet": 872, "lcmv_epoch": 872, "lcmv_raw": 872, "braboszcz": 872, "desislava": 872, "petkova": 872, "krzemi\u0144ski": 872, "hornberg": 872, "juergen": 872, "katrin": 872, "leinweb": 872, "yaroslav": 872, "halchenko": 872, "baptist": 872, "schiratti": 872, "utilis": 872, "dgap_l21l1": 872, "ramonapariciog": 872, "get_pos2d": 872, "\u03c7\u00b2": 872, "writabl": 872, "plot_roi_erpimage_by_rt": 872, "ansi": 872, "codepag": 872, "okba": 872, "bekhelifi": 872, "boggess": 872, "duemos": 872, "nielsen": 872, "luk\u00e1\u0161": 872, "hejtm\u00e1nek": 872, "_virtual": 872, "treatment": 872, "megsim": 872, "mrn": 872, "reformat": 872, "timedecod": 872, "generalizationacrosstim": 872, "plot_gat_tim": 872, "plot_gat_matrix": 872, "read_events_eeglab": 872, "plot_tran": 872, "tf_lcmv": 872, "scale_tim": 872, "scalings_tim": 872, "akshay0724": 872, "rudiuk": 872, "dykstra": 872, "laetitia": 872, "grabot": 872, "proulx": 872, "apariciogarcia": 872, "robin": 872, "tibor": 872, "schirrmeist": 872, "rodrigo": 872, "h\u00fcbner": 872, "toddler": 872, "fasttrack": 872, "brovelli": 872, "_plot_topo_onpick": 872, "nikla": 872, "wilm": 872, "rantala": 872, "_bad_drop": 872, "_filenam": 872, "pasler": 872, "predict_mod": 872, "chanloc": 872, "dgap_l21": 872, "band_pass_filt": 872, "band_stop_filt": 872, "low_pass_filt": 872, "high_pass_filt": 872, "eeg_sensor": 872, "typecheck": 872, "leonardo": 872, "barbosa": 872, "superflu": 872, "hermann": 872, "sonntag": 872, "jakub": 872, "kaczmarzyk": 872, "lorenzo": 872, "alfin": 872, "visconti": 872, "nick": 872, "foti": 872, "pop_prop": 872, "maryland": 872, "preview": 872, "raimundo": 872, "hid": 872, "martinez": 872, "pablo": 872, "aria": 872, "duma": 872, "fieldtripcli": 872, "get_data_as_epoch": 872, "unitsposit": 872, "mullin": 872, "bva": 872, "strictest": 872, "hojlund": 872, "niediek": 872, "add_eeg_ref": 872, "csd_compute_epoch": 872, "ev2": 872, "\u00b5": 872, "aru": 872, "unsupport": 872, "config_opt": 872, "epochsvector": 872, "favour": 872, "cwt_morlet": 872, "single_trial_pow": 872, "committ": 872, "camilo": 872, "lamu": 872, "f\u00e9lix": 872, "kraus": 872, "shlomo": 872, "poil": 872, "show_info": 872, "compute_raw_psd": 872, "compute_epochs_psd": 872, "614990234": 872, "00064103": 872, "99897607": 872, "train_tim": 872, "ecg_criterion": 872, "eog_criterion": 872, "natali": 872, "klein": 872, "coordinan": 872, "ware": 872, "score_mod": 872, "stimserv": 872, "ip": 872, "mesh_color": 872, "multitaper_psd": 872, "vertor": 872, "renorm": 872, "drop_bad_epoch": 872, "drop_epoch": 872, "do_forward_solut": 872, "kaichogami": 872, "cl\u00e9ment": 872, "moutard": 872, "martinbab": 872, "sagun": 872, "pai": 872, "sourav": 872, "kambyses": 872, "pbnsilva": 872, "sviter": 872, "zuxfoucault": 872, "nenonen": 872, "add_eeg_average_proj": 872, "n_samp_tot": 872, "emilyps14": 872, "lennyvarghes": 872, "freeview_bem_surfac": 872, "desanti": 872, "_setup_vmin_vmax": 872, "concatenatechannel": 872, "redesign": 872, "rewrot": 872, "plot_image_epoch": 872, "preload_data": 872, "santi": 872, "roan": 872, "laplant": 872, "wakeman": 872, "add_sect": 872, "marmaduk": 872, "woodman": 872, "whiten_evok": 872, "oddbal": 872, "label_1": 872, "label_2": 872, "savitski": 872, "_baseraw": 872, "prof": 872, "decoupl": 872, "read_hsp": 872, "read_elp": 872, "write_hsp": 872, "write_mrk": 872, "label_time_cours": 872, "as_data_fram": 872, "pick_types_evok": 872, "textbox": 872, "iir_filter_raw": 872, "515": 872, "ingoo": 872, "kj": 872, "basil": 872, "pinsard": 872, "hafeza": 872, "anevar": 872, "manoj": 872, "kumar": 872, "tucker": 872, "ward": 872, "radic": 872, "tack": 872, "equalize_channnel": 872, "s\u00e9bastien": 872, "connector": 872, "cathi": 872, "nangini": 872, "succintli": 872, "breuer": 872, "aesthet": 872, "qunxi": 872, "drop_pick": 872, "labels_from_parc": 872, "parc_from_label": 872, "setno": 872, "plot_": 872, "praveen": 872, "sripad": 872, "tanai": 872, "saket": 872, "choudhari": 872, "brad": 872, "buran": 872, "stimclient": 872, "rtclient": 872, "mockrtclient": 872, "trelli": 872, "ki2fiff": 872, "pick_norm": 872, "write_stc": 872, "olivetti": 872, "kornblith": 872, "smarter": 872, "sources_as_epoch": 872, "psi": 872, "mne_compute_proj_eog": 872, "applicationon": 872, "proj_act": 872, "keep_comp": 872, "dest_comp": 872, "speedup": 872, "clike": 872, "l21": 872, "bessel": 872, "time_to_index": 872, "mne_compute_proj_ecg": 872, "mne_maxfilt": 872, "loui": 872, "thibault": 872, "ellen": 872, "ruzich": 872}, "objects": {"": [[862, 0, 0, "-", "mne"]], "mne": [[254, 1, 1, "", "AcqParserFIF"], [255, 1, 1, "", "Annotations"], [256, 1, 1, "", "BaseEpochs"], [257, 1, 1, "", "BiHemiLabel"], [258, 1, 1, "", "Covariance"], [259, 1, 1, "", "Dipole"], [260, 1, 1, "", "DipoleFixed"], [261, 1, 1, "", "Epochs"], [262, 1, 1, "", "EpochsArray"], [263, 1, 1, "", "Evoked"], [264, 1, 1, "", "EvokedArray"], [265, 1, 1, "", "Forward"], [266, 1, 1, "", "Info"], [267, 1, 1, "", "Label"], [268, 1, 1, "", "MixedSourceEstimate"], [269, 1, 1, "", "MixedVectorSourceEstimate"], [270, 1, 1, "", "Projection"], [271, 1, 1, "", "Report"], [272, 1, 1, "", "SourceEstimate"], [273, 1, 1, "", "SourceMorph"], [274, 1, 1, "", "SourceSpaces"], [275, 1, 1, "", "VectorSourceEstimate"], [276, 1, 1, "", "VolSourceEstimate"], [277, 1, 1, "", "VolVectorSourceEstimate"], [278, 4, 1, "", "add_reference_channels"], [279, 4, 1, "", "add_source_space_distances"], [280, 4, 1, "", "annotations_from_events"], [281, 4, 1, "", "apply_forward"], [282, 4, 1, "", "apply_forward_raw"], [283, 4, 1, "", "average_forward_solutions"], [866, 0, 0, "-", "baseline"], [840, 0, 0, "-", "beamformer"], [251, 0, 0, "-", "bem"], [307, 4, 1, "", "channel_indices_by_type"], [308, 4, 1, "", "channel_type"], [861, 0, 0, "-", "channels"], [861, 0, 0, "-", "chpi"], [350, 4, 1, "", "combine_evoked"], [351, 4, 1, "", "compute_covariance"], [352, 4, 1, "", "compute_proj_epochs"], [353, 4, 1, "", "compute_proj_evoked"], [354, 4, 1, "", "compute_proj_raw"], [355, 4, 1, "", "compute_rank"], [356, 4, 1, "", "compute_raw_covariance"], [357, 4, 1, "", "compute_source_morph"], [358, 4, 1, "", "concatenate_epochs"], [359, 4, 1, "", "concatenate_events"], [360, 4, 1, "", "concatenate_raws"], [361, 4, 1, "", "convert_forward_solution"], [368, 4, 1, "", "create_default_subject"], [369, 4, 1, "", "create_info"], [841, 0, 0, "-", "cuda"], [246, 0, 0, "-", "datasets"], [404, 4, 1, "", "decimate_surface"], [247, 0, 0, "-", "decoding"], [424, 4, 1, "", "dig_mri_distances"], [840, 0, 0, "-", "dipole"], [248, 0, 0, "-", "epochs"], [430, 4, 1, "", "equalize_channels"], [248, 0, 0, "-", "event"], [434, 4, 1, "", "events_from_annotations"], [249, 0, 0, "-", "export"], [439, 4, 1, "", "extract_label_time_course"], [861, 0, 0, "-", "filter"], [446, 4, 1, "", "find_events"], [447, 4, 1, "", "find_stim_steps"], [448, 4, 1, "", "fit_dipole"], [453, 4, 1, "", "get_config"], [454, 4, 1, "", "get_config_path"], [455, 4, 1, "", "get_head_surf"], [456, 4, 1, "", "get_meg_helmet_surf"], [457, 4, 1, "", "get_montage_volume_labels"], [458, 4, 1, "", "get_volume_labels_from_aseg"], [459, 4, 1, "", "get_volume_labels_from_src"], [460, 4, 1, "", "grade_to_tris"], [461, 4, 1, "", "grade_to_vertices"], [462, 4, 1, "", "grand_average"], [463, 4, 1, "", "grow_labels"], [466, 4, 1, "", "head_to_mni"], [467, 4, 1, "", "head_to_mri"], [840, 0, 0, "-", "inverse_sparse"], [863, 0, 0, "-", "io"], [506, 4, 1, "", "label_sign_flip"], [507, 4, 1, "", "labels_to_stc"], [508, 4, 1, "", "make_ad_hoc_cov"], [509, 4, 1, "", "make_bem_model"], [510, 4, 1, "", "make_bem_solution"], [511, 4, 1, "", "make_field_map"], [512, 4, 1, "", "make_fixed_length_epochs"], [513, 4, 1, "", "make_fixed_length_events"], [514, 4, 1, "", "make_forward_dipole"], [515, 4, 1, "", "make_forward_solution"], [516, 4, 1, "", "make_sphere_model"], [517, 4, 1, "", "merge_events"], [840, 0, 0, "-", "minimum_norm"], [538, 4, 1, "", "morph_labels"], [539, 4, 1, "", "morph_source_spaces"], [540, 4, 1, "", "open_docs"], [541, 4, 1, "", "open_report"], [542, 4, 1, "", "parse_config"], [543, 4, 1, "", "pick_channels"], [544, 4, 1, "", "pick_channels_cov"], [545, 4, 1, "", "pick_channels_forward"], [546, 4, 1, "", "pick_channels_regexp"], [547, 4, 1, "", "pick_events"], [548, 4, 1, "", "pick_info"], [549, 4, 1, "", "pick_types"], [550, 4, 1, "", "pick_types_forward"], [861, 0, 0, "-", "preprocessing"], [597, 4, 1, "", "random_parcellation"], [598, 4, 1, "", "read_annotations"], [599, 4, 1, "", "read_bem_solution"], [600, 4, 1, "", "read_bem_surfaces"], [601, 4, 1, "", "read_cov"], [602, 4, 1, "", "read_dipole"], [603, 4, 1, "", "read_epochs"], [604, 4, 1, "", "read_epochs_eeglab"], [605, 4, 1, "", "read_epochs_fieldtrip"], [606, 4, 1, "", "read_epochs_kit"], [607, 4, 1, "", "read_events"], [608, 4, 1, "", "read_evoked_besa"], [609, 4, 1, "", "read_evoked_fieldtrip"], [610, 4, 1, "", "read_evokeds"], [611, 4, 1, "", "read_evokeds_mff"], [612, 4, 1, "", "read_forward_solution"], [613, 4, 1, "", "read_freesurfer_lut"], [614, 4, 1, "", "read_label"], [615, 4, 1, "", "read_labels_from_annot"], [616, 4, 1, "", "read_lta"], [617, 4, 1, "", "read_morph_map"], [618, 4, 1, "", "read_proj"], [619, 4, 1, "", "read_reject_parameters"], [620, 4, 1, "", "read_source_estimate"], [621, 4, 1, "", "read_source_morph"], [622, 4, 1, "", "read_source_spaces"], [623, 4, 1, "", "read_surface"], [624, 4, 1, "", "read_talxfm"], [625, 4, 1, "", "read_trans"], [626, 4, 1, "", "read_tri"], [627, 4, 1, "", "read_vectorview_selection"], [628, 4, 1, "", "rename_channels"], [629, 4, 1, "", "scale_bem"], [630, 4, 1, "", "scale_labels"], [631, 4, 1, "", "scale_mri"], [632, 4, 1, "", "scale_source_space"], [633, 4, 1, "", "sensitivity_map"], [634, 4, 1, "", "set_bipolar_reference"], [635, 4, 1, "", "set_cache_dir"], [636, 4, 1, "", "set_config"], [637, 4, 1, "", "set_eeg_reference"], [638, 4, 1, "", "set_log_file"], [639, 4, 1, "", "set_log_level"], [640, 4, 1, "", "setup_source_space"], [641, 4, 1, "", "setup_volume_source_space"], [867, 0, 0, "-", "simulation"], [662, 4, 1, "", "spatial_dist_adjacency"], [663, 4, 1, "", "spatial_inter_hemi_adjacency"], [664, 4, 1, "", "spatial_src_adjacency"], [665, 4, 1, "", "spatial_tris_adjacency"], [666, 4, 1, "", "spatio_temporal_dist_adjacency"], [667, 4, 1, "", "spatio_temporal_src_adjacency"], [668, 4, 1, "", "spatio_temporal_tris_adjacency"], [669, 4, 1, "", "split_label"], [869, 0, 0, "-", "stats"], [687, 4, 1, "", "stc_near_sensors"], [688, 4, 1, "", "stc_to_label"], [691, 4, 1, "", "sys_info"], [870, 0, 0, "-", "time_frequency"], [726, 4, 1, "", "transform_surface_to"], [861, 0, 0, "-", "transforms"], [733, 4, 1, "", "use_coil_def"], [734, 1, 1, "", "use_log_level"], [841, 0, 0, "-", "utils"], [737, 4, 1, "", "verbose"], [738, 4, 1, "", "vertex_to_mni"], [871, 0, 0, "-", "viz"], [812, 4, 1, "", "warp_montage_volume"], [813, 4, 1, "", "what"], [814, 4, 1, "", "write_bem_solution"], [815, 4, 1, "", "write_bem_surfaces"], [816, 4, 1, "", "write_cov"], [817, 4, 1, "", "write_events"], [818, 4, 1, "", "write_evokeds"], [819, 4, 1, "", "write_forward_solution"], [820, 4, 1, "", "write_head_bem"], [821, 4, 1, "", "write_label"], [822, 4, 1, "", "write_labels_to_annot"], [823, 4, 1, "", "write_proj"], [824, 4, 1, "", "write_source_spaces"], [825, 4, 1, "", "write_surface"], [826, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[254, 2, 1, "", "__getitem__"], [254, 2, 1, "", "__len__"], [254, 3, 1, "", "categories"], [254, 3, 1, "", "events"], [254, 2, 1, "", "get_condition"]], "mne.Annotations": [[255, 2, 1, "", "__add__"], [255, 2, 1, "", "__getitem__"], [255, 2, 1, "", "__iter__"], [255, 2, 1, "", "__len__"], [255, 2, 1, "", "append"], [255, 2, 1, "", "copy"], [255, 2, 1, "", "crop"], [255, 2, 1, "", "delete"], [255, 3, 1, "", "orig_time"], [255, 2, 1, "", "rename"], [255, 2, 1, "", "save"], [255, 2, 1, "", "set_durations"], [255, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[257, 2, 1, "", "__add__"], [257, 2, 1, "", "__len__"], [257, 2, 1, "", "__sub__"]], "mne.Covariance": [[258, 2, 1, "", "__add__"], [258, 2, 1, "", "__contains__"], [258, 2, 1, "", "__getitem__"], [258, 2, 1, "", "__iter__"], [258, 2, 1, "", "__len__"], [258, 2, 1, "", "as_diag"], [258, 3, 1, "", "ch_names"], [258, 2, 1, "", "clear"], [258, 2, 1, "", "copy"], [258, 3, 1, "", "data"], [258, 2, 1, "", "fromkeys"], [258, 2, 1, "", "get"], [258, 2, 1, "", "items"], [258, 2, 1, "", "keys"], [258, 3, 1, "", "nfree"], [258, 2, 1, "", "pick_channels"], [258, 2, 1, "", "plot"], [258, 2, 1, "", "plot_topomap"], [258, 2, 1, "", "pop"], [258, 2, 1, "", "popitem"], [258, 2, 1, "", "save"], [258, 2, 1, "", "setdefault"], [258, 2, 1, "", "update"], [258, 2, 1, "", "values"]], "mne.Dipole": [[259, 2, 1, "", "__getitem__"], [259, 2, 1, "", "__len__"], [259, 2, 1, "", "copy"], [259, 2, 1, "", "crop"], [259, 2, 1, "", "decimate"], [259, 2, 1, "", "plot_amplitudes"], [259, 2, 1, "", "plot_locations"], [259, 2, 1, "", "save"], [259, 2, 1, "", "shift_time"], [259, 2, 1, "", "time_as_index"], [259, 3, 1, "", "times"], [259, 3, 1, "", "tmax"], [259, 3, 1, "", "tmin"], [259, 2, 1, "", "to_mni"], [259, 2, 1, "", "to_mri"], [259, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[260, 3, 1, "", "ch_names"], [260, 2, 1, "", "copy"], [260, 2, 1, "", "crop"], [260, 2, 1, "", "decimate"], [260, 2, 1, "", "plot"], [260, 2, 1, "", "save"], [260, 2, 1, "", "shift_time"], [260, 2, 1, "", "time_as_index"], [260, 3, 1, "", "times"], [260, 3, 1, "", "tmax"], [260, 3, 1, "", "tmin"]], "mne.Epochs": [[261, 2, 1, "", "__contains__"], [261, 2, 1, "", "__getitem__"], [261, 2, 1, "", "__iter__"], [261, 2, 1, "", "__len__"], [261, 2, 1, "", "add_annotations_to_metadata"], [261, 2, 1, "", "add_channels"], [261, 2, 1, "", "add_proj"], [261, 2, 1, "", "add_reference_channels"], [261, 2, 1, "", "anonymize"], [261, 2, 1, "", "apply_baseline"], [261, 2, 1, "", "apply_function"], [261, 2, 1, "", "apply_hilbert"], [261, 2, 1, "", "apply_proj"], [261, 2, 1, "", "as_type"], [261, 2, 1, "", "average"], [261, 3, 1, "", "ch_names"], [261, 3, 1, "", "compensation_grade"], [261, 2, 1, "", "compute_psd"], [261, 2, 1, "", "copy"], [261, 2, 1, "", "crop"], [261, 2, 1, "", "decimate"], [261, 2, 1, "", "del_proj"], [261, 2, 1, "", "drop"], [261, 2, 1, "", "drop_bad"], [261, 2, 1, "", "drop_channels"], [261, 2, 1, "", "drop_log_stats"], [261, 2, 1, "", "equalize_event_counts"], [261, 2, 1, "", "export"], [261, 3, 1, "", "filename"], [261, 2, 1, "", "filter"], [261, 2, 1, "", "get_annotations_per_epoch"], [261, 2, 1, "", "get_channel_types"], [261, 2, 1, "", "get_data"], [261, 2, 1, "", "get_montage"], [261, 2, 1, "", "interpolate_bads"], [261, 2, 1, "", "iter_evoked"], [261, 2, 1, "", "load_data"], [261, 3, 1, "", "metadata"], [261, 2, 1, "", "next"], [261, 2, 1, "", "pick"], [261, 2, 1, "", "pick_channels"], [261, 2, 1, "", "pick_types"], [261, 2, 1, "", "plot"], [261, 2, 1, "", "plot_drop_log"], [261, 2, 1, "", "plot_image"], [261, 2, 1, "", "plot_projs_topomap"], [261, 2, 1, "", "plot_psd"], [261, 2, 1, "", "plot_psd_topo"], [261, 2, 1, "", "plot_psd_topomap"], [261, 2, 1, "", "plot_sensors"], [261, 2, 1, "", "plot_topo_image"], [261, 3, 1, "", "proj"], [261, 2, 1, "", "rename_channels"], [261, 2, 1, "", "reorder_channels"], [261, 2, 1, "", "resample"], [261, 2, 1, "", "reset_drop_log_selection"], [261, 2, 1, "", "save"], [261, 2, 1, "", "savgol_filter"], [261, 2, 1, "", "set_annotations"], [261, 2, 1, "", "set_channel_types"], [261, 2, 1, "", "set_eeg_reference"], [261, 2, 1, "", "set_meas_date"], [261, 2, 1, "", "set_montage"], [261, 2, 1, "", "shift_time"], [261, 2, 1, "", "standard_error"], [261, 2, 1, "", "subtract_evoked"], [261, 2, 1, "", "time_as_index"], [261, 3, 1, "", "times"], [261, 3, 1, "", "tmax"], [261, 3, 1, "", "tmin"], [261, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[262, 2, 1, "", "__contains__"], [262, 2, 1, "", "__getitem__"], [262, 2, 1, "", "__iter__"], [262, 2, 1, "", "__len__"], [262, 2, 1, "", "add_annotations_to_metadata"], [262, 2, 1, "", "add_channels"], [262, 2, 1, "", "add_proj"], [262, 2, 1, "", "add_reference_channels"], [262, 2, 1, "", "anonymize"], [262, 2, 1, "", "apply_baseline"], [262, 2, 1, "", "apply_function"], [262, 2, 1, "", "apply_hilbert"], [262, 2, 1, "", "apply_proj"], [262, 2, 1, "", "as_type"], [262, 2, 1, "", "average"], [262, 3, 1, "", "ch_names"], [262, 3, 1, "", "compensation_grade"], [262, 2, 1, "", "compute_psd"], [262, 2, 1, "", "copy"], [262, 2, 1, "", "crop"], [262, 2, 1, "", "decimate"], [262, 2, 1, "", "del_proj"], [262, 2, 1, "", "drop"], [262, 2, 1, "", "drop_bad"], [262, 2, 1, "", "drop_channels"], [262, 2, 1, "", "drop_log_stats"], [262, 2, 1, "", "equalize_event_counts"], [262, 2, 1, "", "export"], [262, 3, 1, "", "filename"], [262, 2, 1, "", "filter"], [262, 2, 1, "", "get_annotations_per_epoch"], [262, 2, 1, "", "get_channel_types"], [262, 2, 1, "", "get_data"], [262, 2, 1, "", "get_montage"], [262, 2, 1, "", "interpolate_bads"], [262, 2, 1, "", "iter_evoked"], [262, 2, 1, "", "load_data"], [262, 3, 1, "", "metadata"], [262, 2, 1, "", "next"], [262, 2, 1, "", "pick"], [262, 2, 1, "", "pick_channels"], [262, 2, 1, "", "pick_types"], [262, 2, 1, "", "plot"], [262, 2, 1, "", "plot_drop_log"], [262, 2, 1, "", "plot_image"], [262, 2, 1, "", "plot_projs_topomap"], [262, 2, 1, "", "plot_psd"], [262, 2, 1, "", "plot_psd_topo"], [262, 2, 1, "", "plot_psd_topomap"], [262, 2, 1, "", "plot_sensors"], [262, 2, 1, "", "plot_topo_image"], [262, 3, 1, "", "proj"], [262, 2, 1, "", "rename_channels"], [262, 2, 1, "", "reorder_channels"], [262, 2, 1, "", "resample"], [262, 2, 1, "", "reset_drop_log_selection"], [262, 2, 1, "", "save"], [262, 2, 1, "", "savgol_filter"], [262, 2, 1, "", "set_annotations"], [262, 2, 1, "", "set_channel_types"], [262, 2, 1, "", "set_eeg_reference"], [262, 2, 1, "", "set_meas_date"], [262, 2, 1, "", "set_montage"], [262, 2, 1, "", "shift_time"], [262, 2, 1, "", "standard_error"], [262, 2, 1, "", "subtract_evoked"], [262, 2, 1, "", "time_as_index"], [262, 3, 1, "", "times"], [262, 3, 1, "", "tmax"], [262, 3, 1, "", "tmin"], [262, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[263, 2, 1, "", "__contains__"], [263, 2, 1, "", "__neg__"], [263, 2, 1, "", "add_channels"], [263, 2, 1, "", "add_proj"], [263, 2, 1, "", "add_reference_channels"], [263, 2, 1, "", "animate_topomap"], [263, 2, 1, "", "anonymize"], [263, 2, 1, "", "apply_baseline"], [263, 2, 1, "", "apply_function"], [263, 2, 1, "", "apply_hilbert"], [263, 2, 1, "", "apply_proj"], [263, 2, 1, "", "as_type"], [263, 3, 1, "", "ch_names"], [263, 3, 1, "", "compensation_grade"], [263, 2, 1, "", "compute_psd"], [263, 2, 1, "", "copy"], [263, 2, 1, "", "crop"], [263, 3, 1, "", "data"], [263, 2, 1, "", "decimate"], [263, 2, 1, "", "del_proj"], [263, 2, 1, "", "detrend"], [263, 2, 1, "", "drop_channels"], [263, 2, 1, "", "export"], [263, 2, 1, "", "filter"], [263, 2, 1, "", "get_channel_types"], [263, 2, 1, "", "get_data"], [263, 2, 1, "", "get_montage"], [263, 2, 1, "", "get_peak"], [263, 2, 1, "", "interpolate_bads"], [263, 3, 1, "", "kind"], [263, 2, 1, "", "pick"], [263, 2, 1, "", "pick_channels"], [263, 2, 1, "", "pick_types"], [263, 2, 1, "", "plot"], [263, 2, 1, "", "plot_field"], [263, 2, 1, "", "plot_image"], [263, 2, 1, "", "plot_joint"], [263, 2, 1, "", "plot_projs_topomap"], [263, 2, 1, "", "plot_psd"], [263, 2, 1, "", "plot_psd_topo"], [263, 2, 1, "", "plot_psd_topomap"], [263, 2, 1, "", "plot_sensors"], [263, 2, 1, "", "plot_topo"], [263, 2, 1, "", "plot_topomap"], [263, 2, 1, "", "plot_white"], [263, 3, 1, "", "proj"], [263, 2, 1, "", "rename_channels"], [263, 2, 1, "", "reorder_channels"], [263, 2, 1, "", "resample"], [263, 2, 1, "", "save"], [263, 2, 1, "", "savgol_filter"], [263, 2, 1, "", "set_channel_types"], [263, 2, 1, "", "set_eeg_reference"], [263, 2, 1, "", "set_meas_date"], [263, 2, 1, "", "set_montage"], [263, 2, 1, "", "shift_time"], [263, 2, 1, "", "time_as_index"], [263, 3, 1, "", "times"], [263, 3, 1, "", "tmax"], [263, 3, 1, "", "tmin"], [263, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[264, 2, 1, "", "__contains__"], [264, 2, 1, "", "__neg__"], [264, 2, 1, "", "add_channels"], [264, 2, 1, "", "add_proj"], [264, 2, 1, "", "add_reference_channels"], [264, 2, 1, "", "animate_topomap"], [264, 2, 1, "", "anonymize"], [264, 2, 1, "", "apply_baseline"], [264, 2, 1, "", "apply_function"], [264, 2, 1, "", "apply_hilbert"], [264, 2, 1, "", "apply_proj"], [264, 2, 1, "", "as_type"], [264, 3, 1, "", "ch_names"], [264, 3, 1, "", "compensation_grade"], [264, 2, 1, "", "compute_psd"], [264, 2, 1, "", "copy"], [264, 2, 1, "", "crop"], [264, 3, 1, "", "data"], [264, 2, 1, "", "decimate"], [264, 2, 1, "", "del_proj"], [264, 2, 1, "", "detrend"], [264, 2, 1, "", "drop_channels"], [264, 2, 1, "", "export"], [264, 2, 1, "", "filter"], [264, 2, 1, "", "get_channel_types"], [264, 2, 1, "", "get_data"], [264, 2, 1, "", "get_montage"], [264, 2, 1, "", "get_peak"], [264, 2, 1, "", "interpolate_bads"], [264, 3, 1, "", "kind"], [264, 2, 1, "", "pick"], [264, 2, 1, "", "pick_channels"], [264, 2, 1, "", "pick_types"], [264, 2, 1, "", "plot"], [264, 2, 1, "", "plot_field"], [264, 2, 1, "", "plot_image"], [264, 2, 1, "", "plot_joint"], [264, 2, 1, "", "plot_projs_topomap"], [264, 2, 1, "", "plot_psd"], [264, 2, 1, "", "plot_psd_topo"], [264, 2, 1, "", "plot_psd_topomap"], [264, 2, 1, "", "plot_sensors"], [264, 2, 1, "", "plot_topo"], [264, 2, 1, "", "plot_topomap"], [264, 2, 1, "", "plot_white"], [264, 3, 1, "", "proj"], [264, 2, 1, "", "rename_channels"], [264, 2, 1, "", "reorder_channels"], [264, 2, 1, "", "resample"], [264, 2, 1, "", "save"], [264, 2, 1, "", "savgol_filter"], [264, 2, 1, "", "set_channel_types"], [264, 2, 1, "", "set_eeg_reference"], [264, 2, 1, "", "set_meas_date"], [264, 2, 1, "", "set_montage"], [264, 2, 1, "", "shift_time"], [264, 2, 1, "", "time_as_index"], [264, 3, 1, "", "times"], [264, 3, 1, "", "tmax"], [264, 3, 1, "", "tmin"], [264, 2, 1, "", "to_data_frame"]], "mne.Forward": [[265, 2, 1, "", "copy"], [265, 2, 1, "", "pick_channels"]], "mne.Info": [[266, 2, 1, "", "__contains__"], [266, 2, 1, "", "__getitem__"], [266, 2, 1, "", "__iter__"], [266, 2, 1, "", "__len__"], [266, 2, 1, "", "clear"], [266, 3, 1, "", "compensation_grade"], [266, 2, 1, "", "copy"], [266, 2, 1, "", "fromkeys"], [266, 2, 1, "", "get"], [266, 2, 1, "", "get_channel_types"], [266, 2, 1, "", "get_montage"], [266, 2, 1, "", "items"], [266, 2, 1, "", "keys"], [266, 2, 1, "", "normalize_proj"], [266, 2, 1, "", "pop"], [266, 2, 1, "", "popitem"], [266, 2, 1, "", "set_montage"], [266, 2, 1, "", "setdefault"], [266, 2, 1, "", "update"], [266, 2, 1, "", "values"]], "mne.Label": [[267, 2, 1, "", "__add__"], [267, 2, 1, "", "__len__"], [267, 2, 1, "", "__sub__"], [267, 2, 1, "", "center_of_mass"], [267, 2, 1, "", "compute_area"], [267, 2, 1, "", "copy"], [267, 2, 1, "", "distances_to_outside"], [267, 2, 1, "", "fill"], [267, 2, 1, "", "get_tris"], [267, 2, 1, "", "get_vertices_used"], [267, 2, 1, "", "morph"], [267, 2, 1, "", "restrict"], [267, 2, 1, "", "save"], [267, 2, 1, "", "smooth"], [267, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[268, 2, 1, "", "__add__"], [268, 2, 1, "", "__div__"], [268, 2, 1, "", "__mul__"], [268, 2, 1, "", "__neg__"], [268, 2, 1, "", "__sub__"], [268, 2, 1, "", "apply_baseline"], [268, 2, 1, "", "bin"], [268, 2, 1, "", "copy"], [268, 2, 1, "", "crop"], [268, 3, 1, "", "data"], [268, 2, 1, "", "decimate"], [268, 2, 1, "", "extract_label_time_course"], [268, 2, 1, "", "get_peak"], [268, 2, 1, "", "mean"], [268, 2, 1, "", "plot"], [268, 2, 1, "", "resample"], [268, 2, 1, "", "save"], [268, 3, 1, "", "sfreq"], [268, 3, 1, "", "shape"], [268, 2, 1, "", "shift_time"], [268, 2, 1, "", "sqrt"], [268, 2, 1, "", "sum"], [268, 2, 1, "", "surface"], [268, 2, 1, "", "time_as_index"], [268, 3, 1, "", "times"], [268, 3, 1, "", "tmax"], [268, 3, 1, "", "tmin"], [268, 2, 1, "", "to_data_frame"], [268, 2, 1, "", "transform"], [268, 2, 1, "", "transform_data"], [268, 3, 1, "", "tstep"], [268, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[269, 2, 1, "", "__add__"], [269, 2, 1, "", "__div__"], [269, 2, 1, "", "__mul__"], [269, 2, 1, "", "__neg__"], [269, 2, 1, "", "__sub__"], [269, 2, 1, "", "apply_baseline"], [269, 2, 1, "", "bin"], [269, 2, 1, "", "copy"], [269, 2, 1, "", "crop"], [269, 3, 1, "", "data"], [269, 2, 1, "", "decimate"], [269, 2, 1, "", "extract_label_time_course"], [269, 2, 1, "", "get_peak"], [269, 2, 1, "", "magnitude"], [269, 2, 1, "", "mean"], [269, 2, 1, "", "plot"], [269, 2, 1, "", "project"], [269, 2, 1, "", "resample"], [269, 2, 1, "", "save"], [269, 3, 1, "", "sfreq"], [269, 3, 1, "", "shape"], [269, 2, 1, "", "shift_time"], [269, 2, 1, "", "sqrt"], [269, 2, 1, "", "sum"], [269, 2, 1, "", "surface"], [269, 2, 1, "", "time_as_index"], [269, 3, 1, "", "times"], [269, 3, 1, "", "tmax"], [269, 3, 1, "", "tmin"], [269, 2, 1, "", "to_data_frame"], [269, 2, 1, "", "transform"], [269, 2, 1, "", "transform_data"], [269, 3, 1, "", "tstep"], [269, 2, 1, "", "volume"]], "mne.Projection": [[270, 2, 1, "", "__contains__"], [270, 2, 1, "", "__getitem__"], [270, 2, 1, "", "__iter__"], [270, 2, 1, "", "__len__"], [270, 2, 1, "", "clear"], [270, 2, 1, "", "copy"], [270, 2, 1, "", "fromkeys"], [270, 2, 1, "", "get"], [270, 2, 1, "", "items"], [270, 2, 1, "", "keys"], [270, 2, 1, "", "plot_topomap"], [270, 2, 1, "", "pop"], [270, 2, 1, "", "popitem"], [270, 2, 1, "", "setdefault"], [270, 2, 1, "", "update"], [270, 2, 1, "", "values"]], "mne.Report": [[271, 2, 1, "", "__len__"], [271, 2, 1, "", "add_bem"], [271, 2, 1, "", "add_code"], [271, 2, 1, "", "add_covariance"], [271, 2, 1, "", "add_custom_css"], [271, 2, 1, "", "add_custom_js"], [271, 2, 1, "", "add_epochs"], [271, 2, 1, "", "add_events"], [271, 2, 1, "", "add_evokeds"], [271, 2, 1, "", "add_figure"], [271, 2, 1, "", "add_forward"], [271, 2, 1, "", "add_html"], [271, 2, 1, "", "add_ica"], [271, 2, 1, "", "add_image"], [271, 2, 1, "", "add_inverse_operator"], [271, 2, 1, "", "add_projs"], [271, 2, 1, "", "add_raw"], [271, 2, 1, "", "add_stc"], [271, 2, 1, "", "add_sys_info"], [271, 2, 1, "", "add_trans"], [271, 3, 1, "", "html"], [271, 2, 1, "", "parse_folder"], [271, 2, 1, "", "remove"], [271, 2, 1, "", "save"], [271, 3, 1, "", "tags"]], "mne.SourceEstimate": [[272, 2, 1, "", "__add__"], [272, 2, 1, "", "__div__"], [272, 2, 1, "", "__mul__"], [272, 2, 1, "", "__neg__"], [272, 2, 1, "", "__sub__"], [272, 2, 1, "", "apply_baseline"], [272, 2, 1, "", "bin"], [272, 2, 1, "", "center_of_mass"], [272, 2, 1, "", "copy"], [272, 2, 1, "", "crop"], [272, 3, 1, "", "data"], [272, 2, 1, "", "decimate"], [272, 2, 1, "", "estimate_snr"], [272, 2, 1, "", "expand"], [272, 2, 1, "", "extract_label_time_course"], [272, 2, 1, "", "get_peak"], [272, 2, 1, "", "in_label"], [272, 3, 1, "", "lh_data"], [272, 3, 1, "", "lh_vertno"], [272, 2, 1, "", "mean"], [272, 2, 1, "", "plot"], [272, 2, 1, "", "resample"], [272, 3, 1, "", "rh_data"], [272, 3, 1, "", "rh_vertno"], [272, 2, 1, "", "save"], [272, 3, 1, "", "sfreq"], [272, 3, 1, "", "shape"], [272, 2, 1, "", "shift_time"], [272, 2, 1, "", "sqrt"], [272, 2, 1, "", "sum"], [272, 2, 1, "", "time_as_index"], [272, 3, 1, "", "times"], [272, 3, 1, "", "tmax"], [272, 3, 1, "", "tmin"], [272, 2, 1, "", "to_data_frame"], [272, 2, 1, "", "to_original_src"], [272, 2, 1, "", "transform"], [272, 2, 1, "", "transform_data"], [272, 3, 1, "", "tstep"]], "mne.SourceMorph": [[273, 2, 1, "", "apply"], [273, 2, 1, "", "compute_vol_morph_mat"], [273, 2, 1, "", "save"]], "mne.SourceSpaces": [[274, 2, 1, "", "__add__"], [274, 2, 1, "", "__getitem__"], [274, 2, 1, "", "copy"], [274, 2, 1, "", "export_volume"], [274, 2, 1, "", "plot"], [274, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[275, 2, 1, "", "__add__"], [275, 2, 1, "", "__div__"], [275, 2, 1, "", "__mul__"], [275, 2, 1, "", "__neg__"], [275, 2, 1, "", "__sub__"], [275, 2, 1, "", "apply_baseline"], [275, 2, 1, "", "bin"], [275, 2, 1, "", "copy"], [275, 2, 1, "", "crop"], [275, 3, 1, "", "data"], [275, 2, 1, "", "decimate"], [275, 2, 1, "", "expand"], [275, 2, 1, "", "extract_label_time_course"], [275, 2, 1, "", "get_peak"], [275, 2, 1, "", "in_label"], [275, 3, 1, "", "lh_data"], [275, 3, 1, "", "lh_vertno"], [275, 2, 1, "", "magnitude"], [275, 2, 1, "", "mean"], [275, 2, 1, "", "plot"], [275, 2, 1, "", "project"], [275, 2, 1, "", "resample"], [275, 3, 1, "", "rh_data"], [275, 3, 1, "", "rh_vertno"], [275, 2, 1, "", "save"], [275, 3, 1, "", "sfreq"], [275, 3, 1, "", "shape"], [275, 2, 1, "", "shift_time"], [275, 2, 1, "", "sqrt"], [275, 2, 1, "", "sum"], [275, 2, 1, "", "time_as_index"], [275, 3, 1, "", "times"], [275, 3, 1, "", "tmax"], [275, 3, 1, "", "tmin"], [275, 2, 1, "", "to_data_frame"], [275, 2, 1, "", "to_original_src"], [275, 2, 1, "", "transform"], [275, 2, 1, "", "transform_data"], [275, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[276, 2, 1, "", "__add__"], [276, 2, 1, "", "__div__"], [276, 2, 1, "", "__mul__"], [276, 2, 1, "", "__neg__"], [276, 2, 1, "", "__sub__"], [276, 2, 1, "", "apply_baseline"], [276, 2, 1, "", "as_volume"], [276, 2, 1, "", "bin"], [276, 2, 1, "", "copy"], [276, 2, 1, "", "crop"], [276, 3, 1, "", "data"], [276, 2, 1, "", "decimate"], [276, 2, 1, "", "extract_label_time_course"], [276, 2, 1, "", "get_peak"], [276, 2, 1, "", "in_label"], [276, 2, 1, "", "mean"], [276, 2, 1, "", "plot"], [276, 2, 1, "", "plot_3d"], [276, 2, 1, "", "resample"], [276, 2, 1, "", "save"], [276, 2, 1, "", "save_as_volume"], [276, 3, 1, "", "sfreq"], [276, 3, 1, "", "shape"], [276, 2, 1, "", "shift_time"], [276, 2, 1, "", "sqrt"], [276, 2, 1, "", "sum"], [276, 2, 1, "", "time_as_index"], [276, 3, 1, "", "times"], [276, 3, 1, "", "tmax"], [276, 3, 1, "", "tmin"], [276, 2, 1, "", "to_data_frame"], [276, 2, 1, "", "transform"], [276, 2, 1, "", "transform_data"], [276, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[277, 2, 1, "", "__add__"], [277, 2, 1, "", "__div__"], [277, 2, 1, "", "__mul__"], [277, 2, 1, "", "__neg__"], [277, 2, 1, "", "__sub__"], [277, 2, 1, "", "apply_baseline"], [277, 2, 1, "", "as_volume"], [277, 2, 1, "", "bin"], [277, 2, 1, "", "copy"], [277, 2, 1, "", "crop"], [277, 3, 1, "", "data"], [277, 2, 1, "", "decimate"], [277, 2, 1, "", "extract_label_time_course"], [277, 2, 1, "", "get_peak"], [277, 2, 1, "", "in_label"], [277, 2, 1, "", "magnitude"], [277, 2, 1, "", "mean"], [277, 2, 1, "", "plot"], [277, 2, 1, "", "plot_3d"], [277, 2, 1, "", "project"], [277, 2, 1, "", "resample"], [277, 2, 1, "", "save"], [277, 2, 1, "", "save_as_volume"], [277, 3, 1, "", "sfreq"], [277, 3, 1, "", "shape"], [277, 2, 1, "", "shift_time"], [277, 2, 1, "", "sqrt"], [277, 2, 1, "", "sum"], [277, 2, 1, "", "time_as_index"], [277, 3, 1, "", "times"], [277, 3, 1, "", "tmax"], [277, 3, 1, "", "tmin"], [277, 2, 1, "", "to_data_frame"], [277, 2, 1, "", "transform"], [277, 2, 1, "", "transform_data"], [277, 3, 1, "", "tstep"]], "mne.baseline": [[284, 4, 1, "", "rescale"]], "mne.beamformer": [[285, 1, 1, "", "Beamformer"], [286, 4, 1, "", "apply_dics"], [287, 4, 1, "", "apply_dics_csd"], [288, 4, 1, "", "apply_dics_epochs"], [289, 4, 1, "", "apply_dics_tfr_epochs"], [290, 4, 1, "", "apply_lcmv"], [291, 4, 1, "", "apply_lcmv_cov"], [292, 4, 1, "", "apply_lcmv_epochs"], [293, 4, 1, "", "apply_lcmv_raw"], [294, 4, 1, "", "make_dics"], [295, 4, 1, "", "make_lcmv"], [296, 4, 1, "", "make_lcmv_resolution_matrix"], [297, 4, 1, "", "rap_music"], [298, 4, 1, "", "read_beamformer"]], "mne.beamformer.Beamformer": [[285, 2, 1, "", "__contains__"], [285, 2, 1, "", "__getitem__"], [285, 2, 1, "", "__iter__"], [285, 2, 1, "", "__len__"], [285, 2, 1, "", "clear"], [285, 2, 1, "", "copy"], [285, 2, 1, "", "fromkeys"], [285, 2, 1, "", "get"], [285, 2, 1, "", "items"], [285, 2, 1, "", "keys"], [285, 2, 1, "", "pop"], [285, 2, 1, "", "popitem"], [285, 2, 1, "", "save"], [285, 2, 1, "", "setdefault"], [285, 2, 1, "", "update"], [285, 2, 1, "", "values"]], "mne.bem": [[299, 1, 1, "", "ConductorModel"], [300, 4, 1, "", "convert_flash_mris"], [301, 4, 1, "", "distance_to_bem"], [302, 4, 1, "", "fit_sphere_to_headshape"], [303, 4, 1, "", "get_fitting_dig"], [304, 4, 1, "", "make_flash_bem"], [305, 4, 1, "", "make_scalp_surfaces"], [306, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[299, 2, 1, "", "__contains__"], [299, 2, 1, "", "__getitem__"], [299, 2, 1, "", "__iter__"], [299, 2, 1, "", "__len__"], [299, 2, 1, "", "clear"], [299, 2, 1, "", "copy"], [299, 2, 1, "", "fromkeys"], [299, 2, 1, "", "get"], [299, 2, 1, "", "items"], [299, 2, 1, "", "keys"], [299, 2, 1, "", "pop"], [299, 2, 1, "", "popitem"], [299, 3, 1, "", "radius"], [299, 2, 1, "", "setdefault"], [299, 2, 1, "", "update"], [299, 2, 1, "", "values"]], "mne.channels": [[309, 1, 1, "", "DigMontage"], [310, 1, 1, "", "Layout"], [311, 4, 1, "", "combine_channels"], [312, 4, 1, "", "compute_dev_head_t"], [313, 4, 1, "", "compute_native_head_t"], [314, 4, 1, "", "equalize_channels"], [315, 4, 1, "", "find_ch_adjacency"], [316, 4, 1, "", "find_layout"], [317, 4, 1, "", "fix_mag_coil_types"], [318, 4, 1, "", "generate_2d_layout"], [319, 4, 1, "", "get_builtin_ch_adjacencies"], [320, 4, 1, "", "get_builtin_montages"], [321, 4, 1, "", "make_1020_channel_selections"], [322, 4, 1, "", "make_dig_montage"], [323, 4, 1, "", "make_eeg_layout"], [324, 4, 1, "", "make_grid_layout"], [325, 4, 1, "", "make_standard_montage"], [326, 4, 1, "", "read_ch_adjacency"], [327, 4, 1, "", "read_custom_montage"], [328, 4, 1, "", "read_dig_captrak"], [329, 4, 1, "", "read_dig_dat"], [330, 4, 1, "", "read_dig_egi"], [331, 4, 1, "", "read_dig_fif"], [332, 4, 1, "", "read_dig_hpts"], [333, 4, 1, "", "read_dig_localite"], [334, 4, 1, "", "read_dig_polhemus_isotrak"], [335, 4, 1, "", "read_layout"], [336, 4, 1, "", "read_polhemus_fastscan"], [337, 4, 1, "", "rename_channels"]], "mne.channels.DigMontage": [[309, 2, 1, "", "__add__"], [309, 2, 1, "", "add_estimated_fiducials"], [309, 2, 1, "", "add_mni_fiducials"], [309, 2, 1, "", "apply_trans"], [309, 2, 1, "", "copy"], [309, 2, 1, "", "get_positions"], [309, 2, 1, "", "plot"], [309, 2, 1, "", "remove_fiducials"], [309, 2, 1, "", "rename_channels"], [309, 2, 1, "", "save"]], "mne.channels.Layout": [[310, 2, 1, "", "plot"], [310, 2, 1, "", "save"]], "mne.chpi": [[338, 4, 1, "", "compute_chpi_amplitudes"], [339, 4, 1, "", "compute_chpi_locs"], [340, 4, 1, "", "compute_chpi_snr"], [341, 4, 1, "", "compute_head_pos"], [342, 4, 1, "", "extract_chpi_locs_ctf"], [343, 4, 1, "", "extract_chpi_locs_kit"], [344, 4, 1, "", "filter_chpi"], [345, 4, 1, "", "get_active_chpi"], [346, 4, 1, "", "get_chpi_info"], [347, 4, 1, "", "head_pos_to_trans_rot_t"], [348, 4, 1, "", "read_head_pos"], [349, 4, 1, "", "write_head_pos"]], "mne.coreg": [[362, 1, 1, "", "Coregistration"], [363, 4, 1, "", "estimate_head_mri_t"], [364, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[362, 2, 1, "", "compute_dig_mri_distances"], [362, 2, 1, "", "fit_fiducials"], [362, 2, 1, "", "fit_icp"], [362, 2, 1, "", "omit_head_shape_points"], [362, 2, 1, "", "reset"], [362, 3, 1, "", "scale"], [362, 2, 1, "", "set_fid_match"], [362, 2, 1, "", "set_grow_hair"], [362, 2, 1, "", "set_rotation"], [362, 2, 1, "", "set_scale"], [362, 2, 1, "", "set_scale_mode"], [362, 2, 1, "", "set_translation"], [362, 3, 1, "", "trans"]], "mne.cov": [[365, 4, 1, "", "compute_whitener"], [366, 4, 1, "", "prepare_noise_cov"], [367, 4, 1, "", "regularize"]], "mne.cuda": [[370, 4, 1, "", "get_cuda_memory"], [371, 4, 1, "", "init_cuda"], [372, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[373, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[374, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[375, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[376, 4, 1, "", "load_data"], [377, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[378, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[379, 4, 1, "", "data_path"]], "mne.datasets": [[380, 4, 1, "", "fetch_aparc_sub_parcellation"], [381, 4, 1, "", "fetch_dataset"], [382, 4, 1, "", "fetch_fsaverage"], [383, 4, 1, "", "fetch_hcp_mmp_parcellation"], [384, 4, 1, "", "fetch_infant_template"], [385, 4, 1, "", "fetch_phantom"], [387, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[386, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[388, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[389, 4, 1, "", "data_path"]], "mne.datasets.limo": [[390, 4, 1, "", "load_data"]], "mne.datasets.misc": [[391, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[392, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[393, 4, 1, "", "data_path"]], "mne.datasets.opm": [[394, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[395, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[396, 4, 1, "", "data_path"]], "mne.datasets.sample": [[397, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[398, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[399, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[400, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[401, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[402, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[403, 4, 1, "", "data_path"]], "mne.decoding": [[405, 1, 1, "", "CSP"], [406, 1, 1, "", "EMS"], [407, 1, 1, "", "FilterEstimator"], [408, 1, 1, "", "GeneralizingEstimator"], [409, 1, 1, "", "LinearModel"], [410, 1, 1, "", "PSDEstimator"], [411, 1, 1, "", "ReceptiveField"], [412, 1, 1, "", "SPoC"], [413, 1, 1, "", "SSD"], [414, 1, 1, "", "Scaler"], [415, 1, 1, "", "SlidingEstimator"], [416, 1, 1, "", "TemporalFilter"], [417, 1, 1, "", "TimeDelayingRidge"], [418, 1, 1, "", "TimeFrequency"], [419, 1, 1, "", "UnsupervisedSpatialFilter"], [420, 1, 1, "", "Vectorizer"], [421, 4, 1, "", "compute_ems"], [422, 4, 1, "", "cross_val_multiscore"], [423, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[405, 2, 1, "", "fit"], [405, 2, 1, "", "fit_transform"], [405, 2, 1, "", "get_params"], [405, 2, 1, "", "plot_filters"], [405, 2, 1, "", "plot_patterns"], [405, 2, 1, "", "set_params"], [405, 2, 1, "", "transform"]], "mne.decoding.EMS": [[406, 2, 1, "", "fit"], [406, 2, 1, "", "fit_transform"], [406, 2, 1, "", "get_params"], [406, 2, 1, "", "set_params"], [406, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[407, 2, 1, "", "fit"], [407, 2, 1, "", "fit_transform"], [407, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[408, 2, 1, "", "decision_function"], [408, 2, 1, "", "fit"], [408, 2, 1, "", "fit_transform"], [408, 2, 1, "", "get_params"], [408, 2, 1, "", "predict"], [408, 2, 1, "", "predict_proba"], [408, 2, 1, "", "score"], [408, 2, 1, "", "set_params"], [408, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[409, 2, 1, "", "decision_function"], [409, 2, 1, "", "fit"], [409, 2, 1, "", "fit_transform"], [409, 2, 1, "", "get_params"], [409, 2, 1, "", "predict"], [409, 2, 1, "", "predict_proba"], [409, 2, 1, "", "score"], [409, 2, 1, "", "set_params"], [409, 2, 1, "", "transform"]], "mne.decoding.PSDEstimator": [[410, 2, 1, "", "fit"], [410, 2, 1, "", "fit_transform"], [410, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[411, 2, 1, "", "fit"], [411, 2, 1, "", "get_params"], [411, 2, 1, "", "predict"], [411, 2, 1, "", "score"], [411, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[412, 2, 1, "", "fit"], [412, 2, 1, "", "fit_transform"], [412, 2, 1, "", "get_params"], [412, 2, 1, "", "plot_filters"], [412, 2, 1, "", "plot_patterns"], [412, 2, 1, "", "set_params"], [412, 2, 1, "", "transform"]], "mne.decoding.SSD": [[413, 2, 1, "", "apply"], [413, 2, 1, "", "fit"], [413, 2, 1, "", "fit_transform"], [413, 2, 1, "", "get_params"], [413, 2, 1, "", "get_spectral_ratio"], [413, 2, 1, "", "inverse_transform"], [413, 2, 1, "", "set_params"], [413, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[414, 2, 1, "", "fit"], [414, 2, 1, "", "fit_transform"], [414, 2, 1, "", "get_params"], [414, 2, 1, "", "inverse_transform"], [414, 2, 1, "", "set_params"], [414, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[415, 2, 1, "", "decision_function"], [415, 2, 1, "", "fit"], [415, 2, 1, "", "fit_transform"], [415, 2, 1, "", "get_params"], [415, 2, 1, "", "predict"], [415, 2, 1, "", "predict_proba"], [415, 2, 1, "", "score"], [415, 2, 1, "", "set_params"], [415, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[416, 2, 1, "", "fit"], [416, 2, 1, "", "fit_transform"], [416, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[417, 2, 1, "", "fit"], [417, 2, 1, "", "get_params"], [417, 2, 1, "", "predict"], [417, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[418, 2, 1, "", "fit"], [418, 2, 1, "", "fit_transform"], [418, 2, 1, "", "get_params"], [418, 2, 1, "", "set_params"], [418, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[419, 2, 1, "", "fit"], [419, 2, 1, "", "fit_transform"], [419, 2, 1, "", "get_params"], [419, 2, 1, "", "inverse_transform"], [419, 2, 1, "", "set_params"], [419, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[420, 2, 1, "", "fit"], [420, 2, 1, "", "fit_transform"], [420, 2, 1, "", "inverse_transform"], [420, 2, 1, "", "transform"]], "mne.dipole": [[425, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[426, 4, 1, "", "average_movements"], [427, 4, 1, "", "combine_event_ids"], [428, 4, 1, "", "equalize_epoch_counts"], [429, 4, 1, "", "make_metadata"]], "mne.event": [[431, 4, 1, "", "define_target_events"], [432, 4, 1, "", "match_event_names"], [433, 4, 1, "", "shift_time_events"]], "mne.export": [[435, 4, 1, "", "export_epochs"], [436, 4, 1, "", "export_evokeds"], [437, 4, 1, "", "export_evokeds_mff"], [438, 4, 1, "", "export_raw"]], "mne.filter": [[440, 4, 1, "", "construct_iir_filter"], [441, 4, 1, "", "create_filter"], [442, 4, 1, "", "estimate_ringing_samples"], [443, 4, 1, "", "filter_data"], [444, 4, 1, "", "notch_filter"], [445, 4, 1, "", "resample"]], "mne.forward": [[449, 4, 1, "", "compute_depth_prior"], [450, 4, 1, "", "compute_orient_prior"], [451, 4, 1, "", "restrict_forward_to_label"], [452, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[464, 4, 1, "", "coregistration"], [465, 4, 1, "", "locate_ieeg"]], "mne.inverse_sparse": [[468, 4, 1, "", "gamma_map"], [469, 4, 1, "", "make_stc_from_dipoles"], [470, 4, 1, "", "mixed_norm"], [471, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[472, 1, 1, "", "BaseRaw"], [473, 1, 1, "", "Raw"], [474, 1, 1, "", "RawArray"], [475, 4, 1, "", "anonymize_info"], [863, 0, 0, "-", "kit"], [477, 4, 1, "", "read_fiducials"], [478, 4, 1, "", "read_info"], [479, 4, 1, "", "read_raw"], [480, 4, 1, "", "read_raw_artemis123"], [481, 4, 1, "", "read_raw_bdf"], [482, 4, 1, "", "read_raw_boxy"], [483, 4, 1, "", "read_raw_brainvision"], [484, 4, 1, "", "read_raw_bti"], [485, 4, 1, "", "read_raw_cnt"], [486, 4, 1, "", "read_raw_ctf"], [487, 4, 1, "", "read_raw_curry"], [488, 4, 1, "", "read_raw_edf"], [489, 4, 1, "", "read_raw_eeglab"], [490, 4, 1, "", "read_raw_egi"], [491, 4, 1, "", "read_raw_eximia"], [492, 4, 1, "", "read_raw_fieldtrip"], [493, 4, 1, "", "read_raw_fif"], [494, 4, 1, "", "read_raw_gdf"], [495, 4, 1, "", "read_raw_hitachi"], [496, 4, 1, "", "read_raw_kit"], [497, 4, 1, "", "read_raw_nedf"], [498, 4, 1, "", "read_raw_nicolet"], [499, 4, 1, "", "read_raw_nihon"], [500, 4, 1, "", "read_raw_nirx"], [501, 4, 1, "", "read_raw_persyst"], [502, 4, 1, "", "read_raw_snirf"], [503, 4, 1, "", "show_fiff"], [504, 4, 1, "", "write_fiducials"]], "mne.io.Raw": [[473, 2, 1, "", "__contains__"], [473, 2, 1, "", "__getitem__"], [473, 2, 1, "", "__len__"], [473, 3, 1, "", "acqparser"], [473, 2, 1, "", "add_channels"], [473, 2, 1, "", "add_events"], [473, 2, 1, "", "add_proj"], [473, 2, 1, "", "add_reference_channels"], [473, 3, 1, "", "annotations"], [473, 2, 1, "", "anonymize"], [473, 2, 1, "", "append"], [473, 2, 1, "", "apply_function"], [473, 2, 1, "", "apply_gradient_compensation"], [473, 2, 1, "", "apply_hilbert"], [473, 2, 1, "", "apply_proj"], [473, 3, 1, "", "ch_names"], [473, 2, 1, "", "close"], [473, 3, 1, "", "compensation_grade"], [473, 2, 1, "", "compute_psd"], [473, 2, 1, "", "copy"], [473, 2, 1, "", "crop"], [473, 2, 1, "", "crop_by_annotations"], [473, 2, 1, "", "decimate"], [473, 2, 1, "", "del_proj"], [473, 2, 1, "", "describe"], [473, 2, 1, "", "drop_channels"], [473, 2, 1, "", "export"], [473, 3, 1, "", "filenames"], [473, 2, 1, "", "filter"], [473, 3, 1, "", "first_samp"], [473, 3, 1, "", "first_time"], [473, 2, 1, "", "fix_mag_coil_types"], [473, 2, 1, "", "get_channel_types"], [473, 2, 1, "", "get_data"], [473, 2, 1, "", "get_montage"], [473, 2, 1, "", "interpolate_bads"], [473, 3, 1, "", "last_samp"], [473, 2, 1, "", "load_bad_channels"], [473, 2, 1, "", "load_data"], [473, 3, 1, "", "n_times"], [473, 2, 1, "", "notch_filter"], [473, 2, 1, "", "pick"], [473, 2, 1, "", "pick_channels"], [473, 2, 1, "", "pick_types"], [473, 2, 1, "", "plot"], [473, 2, 1, "", "plot_projs_topomap"], [473, 2, 1, "", "plot_psd"], [473, 2, 1, "", "plot_psd_topo"], [473, 2, 1, "", "plot_psd_topomap"], [473, 2, 1, "", "plot_sensors"], [473, 3, 1, "", "proj"], [473, 2, 1, "", "rename_channels"], [473, 2, 1, "", "reorder_channels"], [473, 2, 1, "", "resample"], [473, 2, 1, "", "save"], [473, 2, 1, "", "savgol_filter"], [473, 2, 1, "", "set_annotations"], [473, 2, 1, "", "set_channel_types"], [473, 2, 1, "", "set_eeg_reference"], [473, 2, 1, "", "set_meas_date"], [473, 2, 1, "", "set_montage"], [473, 2, 1, "", "shift_time"], [473, 2, 1, "", "time_as_index"], [473, 3, 1, "", "times"], [473, 3, 1, "", "tmax"], [473, 3, 1, "", "tmin"], [473, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[474, 2, 1, "", "__contains__"], [474, 2, 1, "", "__getitem__"], [474, 2, 1, "", "__len__"], [474, 2, 1, "", "add_channels"], [474, 2, 1, "", "add_events"], [474, 2, 1, "", "add_proj"], [474, 2, 1, "", "add_reference_channels"], [474, 3, 1, "", "annotations"], [474, 2, 1, "", "anonymize"], [474, 2, 1, "", "append"], [474, 2, 1, "", "apply_function"], [474, 2, 1, "", "apply_gradient_compensation"], [474, 2, 1, "", "apply_hilbert"], [474, 2, 1, "", "apply_proj"], [474, 3, 1, "", "ch_names"], [474, 2, 1, "", "close"], [474, 3, 1, "", "compensation_grade"], [474, 2, 1, "", "compute_psd"], [474, 2, 1, "", "copy"], [474, 2, 1, "", "crop"], [474, 2, 1, "", "crop_by_annotations"], [474, 2, 1, "", "decimate"], [474, 2, 1, "", "del_proj"], [474, 2, 1, "", "describe"], [474, 2, 1, "", "drop_channels"], [474, 2, 1, "", "export"], [474, 3, 1, "", "filenames"], [474, 2, 1, "", "filter"], [474, 3, 1, "", "first_samp"], [474, 3, 1, "", "first_time"], [474, 2, 1, "", "get_channel_types"], [474, 2, 1, "", "get_data"], [474, 2, 1, "", "get_montage"], [474, 2, 1, "", "interpolate_bads"], [474, 3, 1, "", "last_samp"], [474, 2, 1, "", "load_bad_channels"], [474, 2, 1, "", "load_data"], [474, 3, 1, "", "n_times"], [474, 2, 1, "", "notch_filter"], [474, 2, 1, "", "pick"], [474, 2, 1, "", "pick_channels"], [474, 2, 1, "", "pick_types"], [474, 2, 1, "", "plot"], [474, 2, 1, "", "plot_projs_topomap"], [474, 2, 1, "", "plot_psd"], [474, 2, 1, "", "plot_psd_topo"], [474, 2, 1, "", "plot_psd_topomap"], [474, 2, 1, "", "plot_sensors"], [474, 3, 1, "", "proj"], [474, 2, 1, "", "rename_channels"], [474, 2, 1, "", "reorder_channels"], [474, 2, 1, "", "resample"], [474, 2, 1, "", "save"], [474, 2, 1, "", "savgol_filter"], [474, 2, 1, "", "set_annotations"], [474, 2, 1, "", "set_channel_types"], [474, 2, 1, "", "set_eeg_reference"], [474, 2, 1, "", "set_meas_date"], [474, 2, 1, "", "set_montage"], [474, 2, 1, "", "shift_time"], [474, 2, 1, "", "time_as_index"], [474, 3, 1, "", "times"], [474, 3, 1, "", "tmax"], [474, 3, 1, "", "tmin"], [474, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[476, 4, 1, "", "read_mrk"]], "mne.label": [[505, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[518, 1, 1, "", "InverseOperator"], [519, 4, 1, "", "apply_inverse"], [520, 4, 1, "", "apply_inverse_cov"], [521, 4, 1, "", "apply_inverse_epochs"], [522, 4, 1, "", "apply_inverse_raw"], [523, 4, 1, "", "apply_inverse_tfr_epochs"], [524, 4, 1, "", "compute_rank_inverse"], [525, 4, 1, "", "compute_source_psd"], [526, 4, 1, "", "compute_source_psd_epochs"], [527, 4, 1, "", "estimate_snr"], [528, 4, 1, "", "get_cross_talk"], [529, 4, 1, "", "get_point_spread"], [530, 4, 1, "", "make_inverse_operator"], [531, 4, 1, "", "make_inverse_resolution_matrix"], [532, 4, 1, "", "prepare_inverse_operator"], [533, 4, 1, "", "read_inverse_operator"], [534, 4, 1, "", "resolution_metrics"], [535, 4, 1, "", "source_band_induced_power"], [536, 4, 1, "", "source_induced_power"], [537, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[518, 2, 1, "", "__contains__"], [518, 2, 1, "", "__getitem__"], [518, 2, 1, "", "__iter__"], [518, 2, 1, "", "__len__"], [518, 2, 1, "", "clear"], [518, 2, 1, "", "copy"], [518, 2, 1, "", "fromkeys"], [518, 2, 1, "", "get"], [518, 2, 1, "", "items"], [518, 2, 1, "", "keys"], [518, 2, 1, "", "pop"], [518, 2, 1, "", "popitem"], [518, 2, 1, "", "setdefault"], [518, 2, 1, "", "update"], [518, 2, 1, "", "values"]], "mne.preprocessing": [[551, 1, 1, "", "EOGRegression"], [552, 1, 1, "", "ICA"], [553, 1, 1, "", "Xdawn"], [554, 4, 1, "", "annotate_amplitude"], [555, 4, 1, "", "annotate_break"], [556, 4, 1, "", "annotate_movement"], [557, 4, 1, "", "annotate_muscle_zscore"], [558, 4, 1, "", "annotate_nan"], [559, 4, 1, "", "compute_average_dev_head_t"], [560, 4, 1, "", "compute_bridged_electrodes"], [561, 4, 1, "", "compute_current_source_density"], [562, 4, 1, "", "compute_fine_calibration"], [563, 4, 1, "", "compute_maxwell_basis"], [564, 4, 1, "", "compute_proj_ecg"], [565, 4, 1, "", "compute_proj_eog"], [566, 4, 1, "", "corrmap"], [567, 4, 1, "", "cortical_signal_suppression"], [568, 4, 1, "", "create_ecg_epochs"], [569, 4, 1, "", "create_eog_epochs"], [570, 4, 1, "", "equalize_bads"], [571, 4, 1, "", "find_bad_channels_maxwell"], [572, 4, 1, "", "find_ecg_events"], [573, 4, 1, "", "find_eog_events"], [574, 4, 1, "", "fix_stim_artifact"], [575, 4, 1, "", "ica_find_ecg_events"], [576, 4, 1, "", "ica_find_eog_events"], [861, 0, 0, "-", "ieeg"], [578, 4, 1, "", "infomax"], [579, 4, 1, "", "interpolate_bridged_electrodes"], [580, 4, 1, "", "maxwell_filter"], [581, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [861, 0, 0, "-", "nirs"], [588, 4, 1, "", "oversampled_temporal_projection"], [589, 4, 1, "", "peak_finder"], [590, 4, 1, "", "read_eog_regression"], [591, 4, 1, "", "read_fine_calibration"], [592, 4, 1, "", "read_ica"], [593, 4, 1, "", "read_ica_eeglab"], [594, 4, 1, "", "realign_raw"], [595, 4, 1, "", "regress_artifact"], [596, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[551, 2, 1, "", "apply"], [551, 2, 1, "", "fit"], [551, 2, 1, "", "plot"], [551, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[552, 2, 1, "", "__contains__"], [552, 2, 1, "", "apply"], [552, 3, 1, "", "compensation_grade"], [552, 2, 1, "", "copy"], [552, 2, 1, "", "find_bads_ecg"], [552, 2, 1, "", "find_bads_eog"], [552, 2, 1, "", "find_bads_muscle"], [552, 2, 1, "", "find_bads_ref"], [552, 2, 1, "", "fit"], [552, 2, 1, "", "get_channel_types"], [552, 2, 1, "", "get_components"], [552, 2, 1, "", "get_explained_variance_ratio"], [552, 2, 1, "", "get_sources"], [552, 2, 1, "", "plot_components"], [552, 2, 1, "", "plot_overlay"], [552, 2, 1, "", "plot_properties"], [552, 2, 1, "", "plot_scores"], [552, 2, 1, "", "plot_sources"], [552, 2, 1, "", "save"], [552, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[553, 2, 1, "", "apply"], [553, 2, 1, "", "fit"], [553, 2, 1, "", "fit_transform"], [553, 2, 1, "", "get_params"], [553, 2, 1, "", "inverse_transform"], [553, 2, 1, "", "set_params"], [553, 2, 1, "", "transform"]], "mne.preprocessing.ieeg": [[577, 4, 1, "", "project_sensors_onto_brain"]], "mne.preprocessing.nirs": [[582, 4, 1, "", "beer_lambert_law"], [583, 4, 1, "", "optical_density"], [584, 4, 1, "", "scalp_coupling_index"], [585, 4, 1, "", "short_channels"], [586, 4, 1, "", "source_detector_distances"], [587, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[642, 1, 1, "", "SourceSimulator"], [643, 4, 1, "", "add_chpi"], [644, 4, 1, "", "add_ecg"], [645, 4, 1, "", "add_eog"], [646, 4, 1, "", "add_noise"], [867, 0, 0, "-", "metrics"], [655, 4, 1, "", "select_source_in_label"], [656, 4, 1, "", "simulate_evoked"], [657, 4, 1, "", "simulate_raw"], [658, 4, 1, "", "simulate_sparse_stc"], [659, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[642, 2, 1, "", "__iter__"], [642, 2, 1, "", "add_data"], [642, 3, 1, "", "duration"], [642, 2, 1, "", "get_stc"], [642, 2, 1, "", "get_stim_channel"], [642, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[647, 4, 1, "", "cosine_score"], [648, 4, 1, "", "f1_score"], [649, 4, 1, "", "peak_position_error"], [650, 4, 1, "", "precision_score"], [651, 4, 1, "", "recall_score"], [652, 4, 1, "", "region_localization_error"], [653, 4, 1, "", "roc_auc_score"], [654, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[660, 4, 1, "", "compute_distance_to_sensors"], [661, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[670, 4, 1, "", "bonferroni_correction"], [671, 4, 1, "", "bootstrap_confidence_interval"], [672, 4, 1, "", "combine_adjacency"], [673, 4, 1, "", "f_mway_rm"], [674, 4, 1, "", "f_oneway"], [675, 4, 1, "", "f_threshold_mway_rm"], [676, 4, 1, "", "fdr_correction"], [677, 4, 1, "", "linear_regression"], [678, 4, 1, "", "linear_regression_raw"], [679, 4, 1, "", "permutation_cluster_1samp_test"], [680, 4, 1, "", "permutation_cluster_test"], [681, 4, 1, "", "permutation_t_test"], [682, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [683, 4, 1, "", "spatio_temporal_cluster_test"], [684, 4, 1, "", "summarize_clusters_stc"], [685, 4, 1, "", "ttest_1samp_no_p"], [686, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[689, 4, 1, "", "complete_surface_info"], [690, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[692, 1, 1, "", "AverageTFR"], [693, 1, 1, "", "CrossSpectralDensity"], [694, 1, 1, "", "EpochsSpectrum"], [695, 1, 1, "", "EpochsTFR"], [696, 1, 1, "", "Spectrum"], [697, 4, 1, "", "csd_array_fourier"], [698, 4, 1, "", "csd_array_morlet"], [699, 4, 1, "", "csd_array_multitaper"], [700, 4, 1, "", "csd_fourier"], [701, 4, 1, "", "csd_morlet"], [702, 4, 1, "", "csd_multitaper"], [703, 4, 1, "", "csd_tfr"], [704, 4, 1, "", "dpss_windows"], [705, 4, 1, "", "fit_iir_model_raw"], [706, 4, 1, "", "fwhm"], [707, 4, 1, "", "istft"], [708, 4, 1, "", "morlet"], [709, 4, 1, "", "pick_channels_csd"], [710, 4, 1, "", "psd_array_multitaper"], [711, 4, 1, "", "psd_array_welch"], [712, 4, 1, "", "read_csd"], [713, 4, 1, "", "read_spectrum"], [714, 4, 1, "", "read_tfrs"], [715, 4, 1, "", "stft"], [716, 4, 1, "", "stftfreq"], [870, 0, 0, "-", "tfr"], [719, 4, 1, "", "tfr_array_morlet"], [720, 4, 1, "", "tfr_array_multitaper"], [721, 4, 1, "", "tfr_array_stockwell"], [722, 4, 1, "", "tfr_morlet"], [723, 4, 1, "", "tfr_multitaper"], [724, 4, 1, "", "tfr_stockwell"], [725, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[692, 2, 1, "", "__add__"], [692, 2, 1, "", "__contains__"], [692, 2, 1, "", "__mul__"], [692, 2, 1, "", "__sub__"], [692, 2, 1, "", "add_channels"], [692, 2, 1, "", "add_reference_channels"], [692, 2, 1, "", "apply_baseline"], [692, 3, 1, "", "ch_names"], [692, 3, 1, "", "compensation_grade"], [692, 2, 1, "", "copy"], [692, 2, 1, "", "crop"], [692, 2, 1, "", "decimate"], [692, 2, 1, "", "drop_channels"], [692, 2, 1, "", "get_channel_types"], [692, 2, 1, "", "pick"], [692, 2, 1, "", "pick_channels"], [692, 2, 1, "", "pick_types"], [692, 2, 1, "", "plot"], [692, 2, 1, "", "plot_joint"], [692, 2, 1, "", "plot_topo"], [692, 2, 1, "", "plot_topomap"], [692, 2, 1, "", "reorder_channels"], [692, 2, 1, "", "save"], [692, 2, 1, "", "shift_time"], [692, 2, 1, "", "time_as_index"], [692, 3, 1, "", "times"], [692, 3, 1, "", "tmax"], [692, 3, 1, "", "tmin"], [692, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[693, 2, 1, "", "__getitem__"], [693, 2, 1, "", "__len__"], [693, 2, 1, "", "copy"], [693, 2, 1, "", "get_data"], [693, 2, 1, "", "mean"], [693, 3, 1, "", "n_channels"], [693, 2, 1, "", "pick_channels"], [693, 2, 1, "", "pick_frequency"], [693, 2, 1, "", "plot"], [693, 2, 1, "", "save"], [693, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[694, 2, 1, "", "__contains__"], [694, 2, 1, "", "__getitem__"], [694, 2, 1, "", "__iter__"], [694, 2, 1, "", "__len__"], [694, 2, 1, "", "add_channels"], [694, 2, 1, "", "add_reference_channels"], [694, 2, 1, "", "average"], [694, 3, 1, "", "compensation_grade"], [694, 2, 1, "", "copy"], [694, 2, 1, "", "drop_channels"], [694, 2, 1, "", "get_channel_types"], [694, 2, 1, "", "get_data"], [694, 3, 1, "", "metadata"], [694, 2, 1, "", "next"], [694, 2, 1, "", "pick"], [694, 2, 1, "", "pick_channels"], [694, 2, 1, "", "pick_types"], [694, 2, 1, "", "plot"], [694, 2, 1, "", "plot_topo"], [694, 2, 1, "", "plot_topomap"], [694, 2, 1, "", "reorder_channels"], [694, 2, 1, "", "save"], [694, 2, 1, "", "to_data_frame"], [694, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[695, 2, 1, "", "__contains__"], [695, 2, 1, "", "__getitem__"], [695, 2, 1, "", "__iter__"], [695, 2, 1, "", "__len__"], [695, 2, 1, "", "add_channels"], [695, 2, 1, "", "add_reference_channels"], [695, 2, 1, "", "apply_baseline"], [695, 2, 1, "", "average"], [695, 3, 1, "", "ch_names"], [695, 3, 1, "", "compensation_grade"], [695, 2, 1, "", "copy"], [695, 2, 1, "", "crop"], [695, 2, 1, "", "decimate"], [695, 2, 1, "", "drop_channels"], [695, 2, 1, "", "get_channel_types"], [695, 3, 1, "", "metadata"], [695, 2, 1, "", "next"], [695, 2, 1, "", "pick"], [695, 2, 1, "", "pick_channels"], [695, 2, 1, "", "pick_types"], [695, 2, 1, "", "reorder_channels"], [695, 2, 1, "", "save"], [695, 2, 1, "", "shift_time"], [695, 2, 1, "", "time_as_index"], [695, 3, 1, "", "times"], [695, 3, 1, "", "tmax"], [695, 3, 1, "", "tmin"], [695, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[696, 2, 1, "", "__contains__"], [696, 2, 1, "", "__getitem__"], [696, 2, 1, "", "add_channels"], [696, 2, 1, "", "add_reference_channels"], [696, 3, 1, "", "compensation_grade"], [696, 2, 1, "", "copy"], [696, 2, 1, "", "drop_channels"], [696, 2, 1, "", "get_channel_types"], [696, 2, 1, "", "get_data"], [696, 2, 1, "", "pick"], [696, 2, 1, "", "pick_channels"], [696, 2, 1, "", "pick_types"], [696, 2, 1, "", "plot"], [696, 2, 1, "", "plot_topo"], [696, 2, 1, "", "plot_topomap"], [696, 2, 1, "", "reorder_channels"], [696, 2, 1, "", "save"], [696, 2, 1, "", "to_data_frame"], [696, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[717, 4, 1, "", "cwt"], [718, 4, 1, "", "morlet"]], "mne.transforms": [[727, 1, 1, "", "Transform"], [728, 4, 1, "", "apply_volume_registration"], [729, 4, 1, "", "compute_volume_registration"], [730, 4, 1, "", "quat_to_rot"], [731, 4, 1, "", "read_ras_mni_t"], [732, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[727, 2, 1, "", "__contains__"], [727, 2, 1, "", "__getitem__"], [727, 2, 1, "", "__iter__"], [727, 2, 1, "", "__len__"], [727, 2, 1, "", "clear"], [727, 2, 1, "", "copy"], [727, 3, 1, "", "from_str"], [727, 2, 1, "", "fromkeys"], [727, 2, 1, "", "get"], [727, 2, 1, "", "items"], [727, 2, 1, "", "keys"], [727, 2, 1, "", "pop"], [727, 2, 1, "", "popitem"], [727, 2, 1, "", "save"], [727, 2, 1, "", "setdefault"], [727, 3, 1, "", "to_str"], [727, 2, 1, "", "update"], [727, 2, 1, "", "values"]], "mne.utils": [[735, 1, 1, "", "deprecated"], [736, 4, 1, "", "warn"]], "mne.viz": [[739, 1, 1, "", "Brain"], [740, 1, 1, "", "ClickableImage"], [741, 1, 1, "", "Figure3D"], [742, 4, 1, "", "add_background_image"], [743, 4, 1, "", "centers_to_edges"], [744, 4, 1, "", "circular_layout"], [745, 4, 1, "", "close_3d_figure"], [746, 4, 1, "", "close_all_3d_figures"], [747, 4, 1, "", "compare_fiff"], [748, 4, 1, "", "create_3d_figure"], [749, 4, 1, "", "get_3d_backend"], [750, 4, 1, "", "get_brain_class"], [751, 4, 1, "", "get_browser_backend"], [752, 4, 1, "", "iter_topography"], [753, 4, 1, "", "link_brains"], [754, 4, 1, "", "mne_analyze_colormap"], [755, 4, 1, "", "plot_alignment"], [756, 4, 1, "", "plot_arrowmap"], [757, 4, 1, "", "plot_bem"], [758, 4, 1, "", "plot_brain_colorbar"], [759, 4, 1, "", "plot_bridged_electrodes"], [760, 4, 1, "", "plot_ch_adjacency"], [761, 4, 1, "", "plot_channel_labels_circle"], [762, 4, 1, "", "plot_chpi_snr"], [763, 4, 1, "", "plot_compare_evokeds"], [764, 4, 1, "", "plot_cov"], [765, 4, 1, "", "plot_csd"], [766, 4, 1, "", "plot_dipole_amplitudes"], [767, 4, 1, "", "plot_dipole_locations"], [768, 4, 1, "", "plot_drop_log"], [769, 4, 1, "", "plot_epochs"], [770, 4, 1, "", "plot_epochs_image"], [771, 4, 1, "", "plot_epochs_psd_topomap"], [772, 4, 1, "", "plot_events"], [773, 4, 1, "", "plot_evoked"], [774, 4, 1, "", "plot_evoked_field"], [775, 4, 1, "", "plot_evoked_image"], [776, 4, 1, "", "plot_evoked_joint"], [777, 4, 1, "", "plot_evoked_topo"], [778, 4, 1, "", "plot_evoked_topomap"], [779, 4, 1, "", "plot_evoked_white"], [780, 4, 1, "", "plot_filter"], [781, 4, 1, "", "plot_head_positions"], [782, 4, 1, "", "plot_ica_components"], [783, 4, 1, "", "plot_ica_overlay"], [784, 4, 1, "", "plot_ica_properties"], [785, 4, 1, "", "plot_ica_scores"], [786, 4, 1, "", "plot_ica_sources"], [787, 4, 1, "", "plot_ideal_filter"], [788, 4, 1, "", "plot_layout"], [789, 4, 1, "", "plot_montage"], [790, 4, 1, "", "plot_projs_joint"], [791, 4, 1, "", "plot_projs_topomap"], [792, 4, 1, "", "plot_raw"], [793, 4, 1, "", "plot_raw_psd"], [794, 4, 1, "", "plot_regression_weights"], [795, 4, 1, "", "plot_sensors"], [796, 4, 1, "", "plot_snr_estimate"], [797, 4, 1, "", "plot_source_estimates"], [798, 4, 1, "", "plot_sparse_source_estimates"], [799, 4, 1, "", "plot_tfr_topomap"], [800, 4, 1, "", "plot_topo_image_epochs"], [801, 4, 1, "", "plot_topomap"], [802, 4, 1, "", "plot_vector_source_estimates"], [803, 4, 1, "", "plot_volume_source_estimates"], [804, 4, 1, "", "set_3d_backend"], [805, 4, 1, "", "set_3d_options"], [806, 4, 1, "", "set_3d_title"], [807, 4, 1, "", "set_3d_view"], [808, 4, 1, "", "set_browser_backend"], [809, 4, 1, "", "snapshot_brain_montage"], [810, 4, 1, "", "use_3d_backend"], [811, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[739, 2, 1, "", "add_annotation"], [739, 2, 1, "", "add_data"], [739, 2, 1, "", "add_dipole"], [739, 2, 1, "", "add_foci"], [739, 2, 1, "", "add_forward"], [739, 2, 1, "", "add_head"], [739, 2, 1, "", "add_label"], [739, 2, 1, "", "add_sensors"], [739, 2, 1, "", "add_skull"], [739, 2, 1, "", "add_text"], [739, 2, 1, "", "add_volume_labels"], [739, 2, 1, "", "apply_auto_scaling"], [739, 2, 1, "", "clear_glyphs"], [739, 2, 1, "", "close"], [739, 3, 1, "", "data"], [739, 2, 1, "", "get_picked_points"], [739, 2, 1, "", "get_view"], [739, 2, 1, "", "help"], [739, 3, 1, "", "interaction"], [739, 2, 1, "", "plot_time_course"], [739, 2, 1, "", "plot_time_line"], [739, 2, 1, "", "remove_annotations"], [739, 2, 1, "", "remove_data"], [739, 2, 1, "", "remove_dipole"], [739, 2, 1, "", "remove_forward"], [739, 2, 1, "", "remove_head"], [739, 2, 1, "", "remove_labels"], [739, 2, 1, "", "remove_sensors"], [739, 2, 1, "", "remove_skull"], [739, 2, 1, "", "remove_text"], [739, 2, 1, "", "remove_volume_labels"], [739, 2, 1, "", "reset"], [739, 2, 1, "", "reset_view"], [739, 2, 1, "", "restore_user_scaling"], [739, 2, 1, "", "save_image"], [739, 2, 1, "", "save_movie"], [739, 2, 1, "", "screenshot"], [739, 2, 1, "", "set_data_smoothing"], [739, 2, 1, "", "set_playback_speed"], [739, 2, 1, "", "set_time"], [739, 2, 1, "", "set_time_interpolation"], [739, 2, 1, "", "set_time_point"], [739, 2, 1, "", "setup_time_viewer"], [739, 2, 1, "", "show"], [739, 2, 1, "", "show_view"], [739, 3, 1, "", "time_interpolation"], [739, 2, 1, "", "toggle_interface"], [739, 2, 1, "", "toggle_playback"], [739, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[740, 2, 1, "", "onclick"], [740, 2, 1, "", "plot_clicks"], [740, 2, 1, "", "to_layout"]], "mne.viz.Figure3D": [[741, 3, 1, "", "plotter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 27, 145, 243, 831], "analysi": [0, 4, 10, 14, 27, 36, 136, 145, 150, 164, 165, 214, 229, 234, 237, 238, 239, 849, 851, 858], "exampl": [0, 3, 27, 96, 103, 145, 155, 174, 194, 203, 204, 205, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 304, 306, 307, 308, 309, 310, 311, 313, 315, 319, 320, 321, 323, 325, 326, 327, 331, 334, 335, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 367, 369, 378, 384, 389, 397, 398, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 434, 439, 440, 441, 443, 445, 446, 448, 453, 454, 457, 458, 462, 464, 465, 468, 469, 470, 471, 473, 474, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 539, 541, 543, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559, 560, 561, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 577, 579, 580, 582, 583, 584, 586, 587, 588, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 612, 614, 615, 618, 620, 621, 622, 623, 624, 625, 627, 631, 633, 634, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 656, 657, 658, 659, 660, 664, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 690, 691, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 708, 710, 711, 719, 722, 723, 724, 728, 729, 731, 733, 734, 738, 739, 740, 743, 744, 748, 750, 752, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 770, 772, 775, 777, 779, 780, 781, 787, 790, 791, 796, 797, 798, 801, 802, 804, 806, 807, 809, 811, 812, 816, 817, 818, 819, 820, 823, 825, 848, 857, 860], "brainstorm": [1, 182, 183, 190, 373, 374, 375, 848], "raw": [1, 7, 29, 69, 79, 88, 91, 92, 136, 139, 151, 167, 171, 176, 202, 209, 212, 213, 214, 215, 218, 253, 473, 851, 854, 863], "median": [1, 848], "nerv": [1, 848], "dataset": [1, 2, 3, 4, 7, 27, 69, 81, 182, 183, 184, 190, 212, 238, 246, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 848, 851], "refer": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 69, 70, 73, 74, 77, 81, 82, 86, 92, 99, 107, 110, 111, 115, 117, 119, 124, 127, 133, 136, 140, 143, 150, 154, 156, 161, 175, 177, 179, 182, 183, 188, 190, 193, 194, 198, 200, 202, 203, 204, 205, 206, 208, 220, 223, 224, 228, 236, 831, 847, 848, 851, 854, 862], "hf": 2, "sef": [2, 848], "open": [3, 27, 253, 831, 860], "singl": [4, 28, 102, 126, 225, 226, 227], "trial": [4, 126, 209, 213, 225, 226, 227, 237, 238], "linear": [4, 18, 253, 854], "regress": [4, 72, 97, 99, 140, 202], "limo": [4, 390, 848], "about": [4, 169, 170, 197, 854], "data": [4, 5, 7, 8, 11, 13, 15, 18, 19, 21, 27, 29, 30, 41, 42, 49, 51, 57, 63, 65, 70, 72, 74, 78, 79, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 107, 112, 113, 114, 117, 118, 119, 127, 134, 135, 136, 139, 140, 141, 145, 146, 148, 149, 151, 158, 164, 165, 166, 167, 168, 171, 174, 176, 177, 179, 187, 188, 189, 190, 191, 193, 199, 201, 202, 209, 212, 213, 214, 215, 216, 218, 219, 220, 224, 227, 228, 229, 231, 232, 233, 236, 238, 245, 253, 657, 847, 848, 851, 854, 857, 863, 866, 868], "load": [4, 19, 47, 72, 113, 114, 135, 136, 139, 140, 148, 158, 165, 174, 177, 189, 193, 204, 212, 219, 854], "visual": [4, 19, 27, 47, 48, 49, 50, 54, 55, 110, 115, 120, 135, 139, 141, 143, 148, 149, 155, 157, 169, 176, 179, 180, 181, 193, 202, 203, 204, 205, 207, 223, 228, 231, 232, 233, 236, 831, 848, 860, 871], "event": [4, 68, 111, 136, 143, 150, 165, 167, 171, 213, 248, 431, 432, 433], "condit": [4, 13, 130, 150, 226, 227], "erp": [4, 140, 143, 150, 848], "effect": [4, 16, 193, 194, 202, 204, 223, 238, 854], "stimulu": [4, 19], "phase": [4, 105], "coher": [4, 237], "prepar": [4, 5, 143, 202, 233], "defin": [4, 68, 88, 155, 223, 225], "predictor": 4, "variabl": [4, 170, 831], "design": [4, 136, 194, 200, 849], "matrix": [4, 41, 64, 69, 101, 161, 223, 231, 847, 851, 854, 857], "extract": [4, 37, 39, 92, 136, 139, 207, 209, 212, 238], "coeffici": [4, 19], "plot": [4, 18, 34, 41, 42, 43, 44, 47, 48, 50, 60, 68, 69, 79, 80, 82, 114, 116, 117, 118, 121, 122, 123, 124, 125, 126, 131, 135, 140, 141, 149, 151, 161, 169, 209, 213, 215, 219, 225, 226, 237, 238, 829, 851], "model": [4, 19, 23, 27, 45, 109, 156, 157, 162, 164, 165, 176, 179, 193, 195, 206, 251, 253, 847, 853, 854, 860], "result": [4, 43, 44, 54, 238], "optic": [5, 209], "pump": 5, "magnetomet": 5, "opm": [5, 107, 394, 848, 860], "local": [5, 31, 164, 175, 176, 177, 181, 185, 831, 847], "perform": [5, 72, 88, 135, 193], "dipol": [5, 45, 88, 114, 175, 177, 180, 259, 425], "fit": [5, 19, 156, 175, 180, 193, 203], "minimum": [5, 854], "norm": [5, 40, 854], "comput": [6, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 45, 46, 47, 49, 51, 54, 55, 56, 58, 59, 66, 69, 83, 88, 89, 92, 100, 101, 102, 104, 105, 106, 107, 108, 110, 128, 135, 138, 147, 153, 157, 158, 161, 163, 169, 173, 176, 178, 179, 186, 192, 196, 200, 202, 203, 204, 207, 211, 217, 222, 225, 226, 228, 230, 231, 232, 233, 235, 240, 244, 253, 847, 854, 860], "time": [6, 9, 13, 20, 25, 27, 32, 37, 39, 46, 56, 59, 66, 68, 69, 71, 83, 84, 89, 92, 100, 103, 104, 112, 128, 135, 138, 139, 141, 143, 144, 147, 153, 163, 164, 165, 173, 180, 186, 192, 194, 196, 203, 211, 212, 217, 222, 225, 226, 228, 230, 235, 237, 238, 239, 240, 831, 860, 870], "from": [7, 8, 15, 19, 37, 38, 43, 44, 61, 88, 102, 127, 136, 139, 141, 143, 148, 167, 168, 187, 188, 189, 202, 205, 209, 212, 213, 214, 215, 218, 219, 245, 253, 858], "dspm": [7, 28, 30, 34, 54, 92, 108, 176, 854], "spm": [7, 848], "face": [7, 848], "motor": [8, 848], "imageri": [8, 848], "decod": [8, 9, 11, 12, 13, 15, 17, 18, 27, 194, 247, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "eeg": [8, 15, 22, 55, 58, 65, 69, 70, 77, 116, 123, 150, 158, 165, 181, 187, 188, 206, 224, 238, 847, 854, 860], "us": [8, 9, 14, 18, 26, 32, 33, 34, 35, 39, 47, 57, 63, 70, 82, 92, 136, 142, 145, 148, 154, 155, 156, 159, 160, 170, 179, 193, 203, 206, 208, 227, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 304, 306, 307, 308, 309, 310, 311, 313, 315, 319, 320, 321, 323, 325, 326, 327, 331, 334, 335, 338, 339, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 367, 369, 378, 384, 389, 397, 398, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 434, 439, 440, 441, 443, 445, 446, 448, 453, 454, 457, 458, 462, 464, 465, 468, 469, 470, 471, 473, 474, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 526, 528, 529, 530, 531, 533, 534, 535, 536, 539, 541, 543, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559, 560, 561, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 577, 579, 580, 582, 583, 584, 586, 587, 588, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 612, 614, 615, 618, 620, 621, 622, 623, 624, 625, 627, 631, 633, 634, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 651, 652, 654, 656, 657, 658, 659, 660, 664, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 688, 690, 691, 692, 693, 694, 695, 696, 700, 701, 702, 703, 705, 708, 710, 711, 719, 722, 723, 724, 728, 729, 731, 733, 734, 738, 739, 740, 743, 744, 748, 750, 752, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 770, 772, 775, 777, 779, 780, 781, 787, 790, 791, 796, 797, 798, 801, 802, 804, 806, 807, 809, 811, 812, 816, 817, 818, 819, 820, 823, 825, 829, 831, 844, 847, 851, 854, 857], "common": [8, 9, 133, 194, 231, 233, 236], "spatial": [8, 9, 16, 21, 54, 55, 179, 194, 219], "pattern": [8, 9, 18, 194], "csp": [8, 9, 405], "frequenc": [9, 27, 32, 46, 59, 103, 111, 112, 135, 164, 165, 189, 197, 200, 207, 225, 226, 228, 236, 237, 238, 239, 848, 860, 870], "space": [9, 11, 13, 18, 24, 26, 30, 41, 54, 58, 99, 102, 105, 108, 145, 157, 158, 162, 164, 177, 194, 204, 205, 208, 213, 219, 231, 233, 253, 847, 854, 857, 866, 868], "represent": [10, 112, 209, 227, 854], "similar": [10, 148], "sourc": [11, 24, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 58, 70, 88, 92, 93, 102, 105, 106, 107, 108, 114, 155, 157, 158, 162, 164, 171, 175, 176, 177, 179, 180, 181, 185, 194, 206, 219, 231, 232, 233, 234, 253, 847, 854, 860, 868], "continu": [12, 79, 97, 99, 145, 146, 164, 165, 189, 193, 207, 212, 214, 215, 216, 854], "target": [12, 68], "spoc": [12, 194, 412], "sensor": [13, 18, 22, 82, 94, 95, 98, 99, 114, 116, 121, 123, 131, 135, 141, 164, 169, 189, 194, 205, 209, 215, 219, 228, 229, 237, 854, 866], "gener": [13, 24, 38, 90, 91, 93, 143, 188, 194, 199, 219, 241, 831, 851, 854], "across": [13, 69, 80, 150, 209], "evok": [14, 30, 34, 41, 51, 68, 84, 88, 90, 92, 117, 118, 119, 125, 130, 148, 149, 150, 151, 152, 164, 165, 171, 176, 202, 218, 263, 847], "respons": [14, 68, 130, 143, 150, 152, 164, 165, 176, 193, 202, 209, 859], "ica": [14, 75, 81, 171, 203, 552, 847], "pca": [14, 47, 253], "reduct": [14, 203, 204, 205], "techniqu": 14, "xdawn": [15, 86, 194, 553], "match": [16, 194, 203], "filter": [16, 18, 21, 49, 78, 112, 150, 179, 194, 200, 201, 203, 208, 440, 441, 442, 443, 444, 445, 854], "em": [16, 406], "machin": [17, 27, 164, 195], "learn": [17, 27, 136, 164, 195], "encod": [17, 27, 657], "mvpa": [17, 27, 194], "classifi": 18, "logisticregress": 18, "recept": [19, 193], "field": [19, 149, 150, 193, 854, 857], "estim": [19, 34, 38, 41, 42, 43, 44, 57, 88, 152, 164, 165, 180, 181, 193, 207, 219, 234, 243, 847, 854], "predict": [19, 854], "public": [19, 125], "creat": [19, 88, 92, 113, 114, 136, 139, 143, 148, 187, 193, 202, 205, 206, 214, 218, 219, 227, 245, 253, 831, 847, 854], "investig": 19, "reconstruct": [19, 88, 92, 154, 159, 179, 205, 847], "spectro": [21, 193], "decomposit": 21, "ssd": [21, 413], "epoch": [21, 28, 42, 92, 102, 112, 115, 136, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 164, 165, 171, 199, 202, 203, 209, 218, 228, 231, 233, 261, 426, 427, 428, 429, 847, 854], "displai": 22, "sensit": [22, 129], "map": [22, 35, 110, 118, 129, 141, 148, 149, 213, 220, 854], "meg": [22, 55, 73, 77, 85, 121, 131, 165, 187, 219, 848, 854, 860], "forward": [23, 27, 47, 107, 157, 158, 162, 164, 171, 179, 251, 265, 449, 450, 451, 452, 847, 851, 854], "left": [24, 209], "cerebellum": 24, "volum": [24, 30, 41, 50, 180], "morph": [26, 43, 44, 179, 854], "galleri": 27, "input": [27, 62], "output": [27, 62, 159, 179], "simul": [27, 87, 88, 90, 91, 92, 93, 112, 164, 193, 203, 219, 220, 221, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 867], "preprocess": [27, 76, 107, 135, 140, 164, 165, 209, 210, 214, 238, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 847, 861], "statist": [27, 96, 164, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 238, 854, 860, 869], "invers": [27, 28, 29, 30, 31, 35, 36, 39, 40, 41, 42, 47, 52, 57, 92, 102, 164, 165, 176, 185, 840, 846, 847, 851, 854], "problem": [27, 36, 200], "mne": [28, 30, 41, 42, 54, 60, 75, 114, 122, 154, 159, 160, 165, 170, 171, 176, 178, 187, 198, 200, 203, 204, 208, 212, 218, 223, 242, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 831, 833, 834, 835, 837, 838, 839, 843, 846, 850, 851, 854, 857, 865], "solut": [28, 29, 30, 35, 39, 40, 41, 47, 60, 102, 157, 171, 176, 178, 200, 203, 253, 840, 847, 851, 854], "sloreta": [29, 176, 854], "custom": [31, 125, 131, 171, 189], "solver": 31, "level": [32, 94, 127, 857], "timecours": [32, 45, 125], "dic": [32, 33, 34, 220], "beamform": [32, 33, 34, 49, 179, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "power": [33, 34, 42, 102, 105, 106, 107, 108, 135, 141, 150, 194, 197, 201, 220, 225, 226, 227, 237, 238], "er": 34, "lcmv": [34, 49, 179], "covari": [34, 42, 49, 64, 119, 161, 171, 176, 179, 219, 244, 258, 847, 851, 854], "some": [34, 200, 857], "spars": [35, 40, 59], "gamma": [35, 135], "empir": 35, "bayesian": 35, "method": [35, 74, 212, 215, 223], "cours": [37, 92, 180], "source_estim": 37, "object": [37, 44, 136, 139, 141, 142, 144, 148, 149, 167, 168, 212, 214, 215, 218, 236, 245, 848, 851], "function": [38, 47, 48, 49, 50, 136, 209, 223, 233, 831, 835, 851, 857], "label": [38, 39, 41, 47, 102, 105, 106, 219, 267, 505, 857], "seri": [39, 69, 141], "activ": [39, 88, 92, 125, 126, 164, 179, 195, 209], "view": [39, 41, 80, 114, 142, 209, 225, 226, 253], "vector": [39, 43, 60, 171, 179, 180, 194, 420], "mix": [40, 41], "mxne": [40, 46, 59], "irmxn": 40, "set": [41, 43, 144, 150, 156, 170, 188, 206, 225, 227, 228, 231, 232, 233, 253, 831, 847, 848], "up": [41, 43, 156, 160, 253, 831, 847], "our": [41, 181], "fwd": [41, 857], "surfac": [41, 43, 157, 159, 160, 169, 180, 181, 209, 253, 689, 690, 847, 854, 857], "process": [41, 166, 179, 831, 845], "project": [42, 82, 113, 129, 169, 171, 194, 204, 253, 270, 853, 854, 857], "empti": [42, 127, 205], "room": [42, 127, 205], "appli": [42, 43, 44, 74, 136, 143, 179, 187, 189, 200, 202, 204, 238, 253], "oper": [42, 47, 52, 92, 112, 157, 158, 160, 214, 847, 849, 854], "sourcemorph": [43, 44, 273], "sourceestim": [43, 171, 174, 272], "read": [43, 44, 47, 52, 53, 64, 65, 136, 164, 167, 169, 188, 191, 213, 214, 228, 231, 233, 851, 857, 863], "write": [43, 44, 64, 213, 214, 857], "disk": [43, 44, 139], "volumetr": [44, 179, 854], "get": [44, 61, 158, 160, 170, 171, 181, 238, 838, 851, 852, 856], "volsourceestim": [44, 276], "convert": [44, 113, 144, 167, 209, 253], "nifti": 44, "an": [45, 52, 53, 57, 69, 115, 141, 142, 144, 156, 158, 160, 167, 168, 171, 179, 181, 203, 206, 238, 847], "xfit": 45, "like": [45, 169], "multi": 45, "iter": [46, 139], "reweight": 46, "tf": 46, "multiscal": 46, "dictionari": 46, "leakag": 47, "among": [47, 148], "circular": 47, "graph": 47, "organis": 47, "cortic": [47, 67, 124, 135, 159, 231, 233, 847, 854], "parcel": [47, 124], "point": [47, 48, 50, 156, 219, 854], "spread": [47, 48, 50, 219], "summari": [47, 69, 166, 174, 197, 198, 200, 212, 872], "all": [47, 133, 179, 198, 227, 231, 233, 831, 835, 839, 851], "evalu": [47, 209], "base": [47, 68, 136, 140, 199, 253, 849, 854], "psf": [47, 48, 50], "correl": 47, "save": [47, 139, 148, 171, 204, 212], "figur": [47, 125, 171], "option": [47, 118, 253, 831, 851], "individu": [47, 857], "cross": [48, 49, 101, 132, 831], "talk": [48, 49], "ctf": [48, 121, 183, 187, 190], "differ": [49, 75, 88, 130, 140, 164, 191, 193, 238], "matric": [49, 161, 179], "resolut": [49, 54, 55, 160, 253], "two": [49, 219], "rap": 51, "music": 51, "stc": [53, 88, 174, 180, 857], "file": [53, 61, 169, 171, 188, 213, 214, 250, 253, 847, 851, 854, 857], "metric": [54, 55, 69, 647, 648, 649, 650, 651, 652, 653, 654], "compar": [55, 69, 75, 88, 130, 149, 150, 193, 209, 223, 253], "eegmeg": 55, "snr": [57, 58, 207, 238], "prior": 59, "full": [60, 228], "valu": [60, 144, 238], "averag": [61, 112, 148, 150, 206, 854], "info": [61, 168, 212, 218, 253, 266, 857], "fif": [61, 187, 253, 851], "how": [63, 113, 159, 161, 198, 205, 214, 846, 851], "neural": [63, 164, 193, 195, 209], "ensembl": 63, "neo": 63, "format": [63, 144, 188, 189, 854], "nois": [64, 119, 127, 176, 197, 201, 204, 205, 219, 238, 847, 848, 854], "xdf": [65, 188], "signal": [67, 149, 166, 167, 204, 205, 207, 208, 209, 219, 238, 854, 857], "suppress": [67, 847], "css": 67, "remov": [67, 72, 81, 203, 204, 209, 231, 233], "lag": 68, "identifi": 69, "electrod": [69, 113, 133, 135, 181, 188, 854], "bridg": 69, "too": 69, "much": 69, "gel": 69, "electr": 69, "distanc": 69, "examin": [69, 140], "distribut": [69, 74, 177, 829, 860], "topomap": [69, 118], "voltag": 69, "subject": [69, 92, 207, 253, 848], "eegbci": [69, 81, 376, 377, 848], "The": [69, 139, 143, 148, 166, 167, 168, 169, 174, 177, 179, 199, 212, 236, 847, 848, 853, 854, 857], "relationship": [69, 174], "between": [69, 167, 226], "imped": 69, "transform": [70, 112, 136, 155, 159, 194, 231, 233, 727, 728, 729, 730, 731, 732, 854, 857], "current": [70, 114, 175, 252, 854, 859, 872], "densiti": [70, 101, 102, 106, 107, 209, 215, 238], "csd": [70, 101], "show": [71, 127, 253], "eog": [71, 72, 197, 202, 203, 205, 253], "artifact": [71, 72, 73, 74, 79, 80, 197, 201, 202, 203, 205, 253, 847], "reduc": 72, "through": 72, "import": [72, 74, 125, 187, 188, 189, 253, 831], "packag": [72, 839, 854], "befor": [72, 202, 831], "after": [72, 829], "comparison": [72, 132, 223, 227], "find": [73, 219, 228, 231], "channel": [73, 77, 85, 115, 139, 144, 148, 150, 166, 167, 168, 169, 187, 198, 199, 203, 206, 209, 212, 228, 231, 233, 238, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 657, 847, 848, 854, 857], "visualis": [74, 224], "nir": [74, 582, 583, 584, 585, 586, 587], "correct": [74, 95, 140, 143, 223], "add": [74, 114], "artifici": 74, "tempor": [74, 82, 109, 193, 194, 231, 232, 233], "deriv": 74, "repair": [74, 201, 202, 203, 205, 854], "algorithm": [75, 253, 846, 854], "interpol": [77, 118, 198, 854], "bad": [77, 155, 156, 160, 198, 199, 231, 233, 847, 854], "maxwel": [78, 208, 854], "movement": [78, 79, 207, 208], "compens": [78, 187, 208, 854, 857], "annot": [79, 80, 136, 167, 199, 209, 214, 255, 847], "reestim": 79, "dev_head_t": 79, "head": [79, 114, 155, 157, 159, 160, 181, 188, 207, 253, 847, 854], "posit": [79, 113, 114, 207], "respect": 79, "mean": [79, 150], "record": [79, 80, 164, 188, 191, 205], "muscl": [80, 81], "z": 80, "score": [80, 88], "compon": [81, 143, 179, 203], "let": 81, "": [81, 112, 159, 872], "now": 81, "replic": 81, "thi": [81, 193], "denois": [82, 86], "oversampl": 82, "shift": 84, "scale": [84, 144, 151, 854], "remap": 85, "type": [85, 139, 150, 168, 193, 200, 212, 238, 253, 831, 854], "main": 88, "paramet": [88, 166, 199, 225, 227, 228, 231, 232, 233], "true": 88, "correspond": [88, 847], "amplitud": [88, 150, 199], "threshold": [88, 223, 224], "For": [88, 857], "region": [88, 114, 150], "anatomi": 92, "responss": 92, "permut": [94, 98, 227, 228, 231, 232], "f": [94, 97, 228], "test": [94, 95, 98, 136, 223, 227, 228, 231, 232, 830, 831, 837], "1d": 94, "cluster": [94, 223, 225, 226, 227, 228, 231, 232, 233, 860], "fdr": [95, 223, 227], "t": [95, 98, 231, 851], "rer": 97, "p": 97, "analys": [99, 847], "featur": [99, 135, 136], "bin": [99, 187, 851], "spectral": [101, 102, 106, 107, 215, 236, 238], "psd": [102, 106, 107, 238], "lock": [105, 143], "vectorview": [107, 187, 212], "align": [107, 133, 155, 159, 253, 657, 847], "alpha": 107, "beta": 107, "induc": 108, "whiten": [109, 119, 151, 854, 857], "ar": [109, 148, 170, 197, 204, 851, 857], "erd": 110, "explor": [111, 135], "relat": [111, 150, 838, 857], "dynam": 111, "specif": 111, "band": 111, "multitap": 112, "v": [112, 194, 212, 834], "morlet": [112, 708, 718], "stockwel": 112, "hilbert": 112, "calcul": [112, 238, 847, 854], "tfr": [112, 227, 717, 718], "wavelet": 112, "narrow": 112, "bandpass": 112, "without": [112, 155], "over": [112, 115, 139, 194, 209], "arrai": [112, 167, 213, 245, 854], "3d": [113, 149, 169, 179, 829, 851, 854, 860], "2d": [113, 169, 179, 860], "imag": [113, 114, 115, 141, 149, 171, 209, 253, 846, 854, 860], "snapshot": 113, "manual": [113, 169, 203], "viz": [114, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811], "brain": [114, 122, 125, 135, 179, 209, 739], "inform": [114, 168, 170, 177, 200, 209, 253, 847, 854, 857], "modifi": [114, 142, 166, 212, 831], "highlight": 114, "includ": [114, 213, 253], "screenshot": 114, "export": [114, 144, 160, 212, 249, 435, 436, 437, 438], "scalp": [116, 140, 149], "topograph": [117, 118, 149, 151, 209], "arrowmap": 117, "basic": [118, 135, 139, 143, 148, 200, 238, 831, 857], "plot_topomap": [118, 801], "addit": 118, "more": [118, 125, 209, 857], "advanc": [118, 829], "usag": 118, "anim": 118, "layout": [121, 123, 169, 227, 310], "system": [121, 123, 164, 170, 187, 189, 191, 253, 837, 854], "neuromag": [121, 187], "bti": [121, 184, 187, 253, 848], "kit": [121, 187, 253, 476], "artemis123": [121, 187], "helmet": 122, "make": [125, 167, 213, 831, 853], "readi": 125, "montag": [125, 169], "inset": 125, "group": [126, 143, 847], "roi": [126, 238], "sort": 126, "rt": 126, "ssp": [129, 204, 205, 253, 847, 854], "topographi": [131, 140, 149, 238], "hemispher": [132, 253, 847], "locat": [133, 141, 150, 169, 181, 188, 189, 209, 215, 854], "intracrani": 133, "contact": 133, "t1": 133, "acpc": 133, "freesurf": [133, 154, 159, 253, 832, 847, 854, 857], "recon": 133, "ct": 133, "mr": 133, "mark": [133, 198, 847], "each": [133, 219], "warp": 133, "atla": 133, "work": [134, 135, 142, 164, 169, 171, 190, 198, 213, 216, 829, 851], "seeg": [134, 848, 860], "ecog": [135, 848, 860], "templat": [135, 158, 203, 848], "evolut": 135, "sleep": [136, 848], "stage": 136, "classif": 136, "polysomnographi": 136, "psg": 136, "hypnogram": 136, "30": 136, "found": [136, 851], "same": 136, "step": [136, 154, 834, 851], "bob": 136, "engin": 136, "scikit": 136, "python": [136, 154, 159, 160, 165, 170, 171, 198, 200, 203, 204, 208, 212, 218, 242, 253, 828, 829, 831, 833, 834, 835, 836, 839, 846, 849, 850, 851, 856, 860, 862], "multiclass": 136, "workflow": [136, 831, 847], "further": 136, "exercis": [136, 157, 194, 219, 228, 237, 238], "clinic": [137, 164, 860], "applic": [137, 164], "structur": [139, 148, 167, 168, 174, 187, 212, 218, 854, 857], "discontinu": 139, "subselect": [139, 213], "select": [139, 142, 148, 203, 209, 212, 231, 857], "index": [139, 144, 212, 238], "drop": [139, 148, 168, 212], "reorder": [139, 148, 212], "chang": [139, 206, 212, 831, 872], "name": [139, 150, 187, 212, 831, 857], "domain": [139, 189, 203, 212, 236], "other": [139, 148, 200, 252, 829, 831, 835, 846, 854, 858], "form": [139, 238], "baselin": [140, 200, 219, 284], "tradit": 140, "regressor": 140, "wave": [140, 189], "interact": [140, 141, 214, 215, 849], "term": 140, "pipelin": [141, 860], "script": [141, 171, 849], "projector": [141, 204, 205, 206, 215], "spectrum": [141, 236, 696], "metadata": [142, 143], "restrict": 142, "datafram": [142, 144], "queri": [142, 168, 212], "ad": [142, 143, 171, 204], "auto": 143, "make_metadata": [143, 429], "specifi": [143, 189], "keep": 143, "onli": [143, 835, 839], "first": [143, 154, 831, 834, 860], "new": [143, 831, 872], "column": [143, 167], "describ": [143, 831], "stimul": [143, 238], "side": 143, "knowledg": 143, "ern": 143, "panda": 144, "wide": 144, "versu": [144, 227, 849], "long": [144, 212], "divid": 145, "equal": [145, 213], "characterist": 145, "fix": [145, 160, 177, 178], "length": [145, 200], "case": 145, "segment": [146, 164], "subset": [148, 168, 238], "memori": [148, 187, 854], "core": [148, 835, 848, 851], "combin": [148, 213], "trace": 149, "butterfli": 149, "arrow": 149, "joint": [149, 237], "subplot": 149, "potenti": [150, 858], "global": 150, "gfp": 150, "interest": [150, 228, 853], "grand": 150, "latenc": 150, "measur": [150, 227, 233, 253], "peak": 150, "mri": [154, 155, 158, 159, 171, 179, 181, 253, 845, 848, 854], "anatom": [154, 847], "fsaverag": [154, 158, 179, 848], "coordin": [155, 159, 189, 253, 847, 854, 857], "frame": [155, 159, 847], "understand": 155, "definit": [155, 228, 854, 857], "A": [155, 851], "good": 155, "defac": 155, "tran": [155, 857], "gui": [155, 253, 464, 465], "autom": 156, "approach": [156, 253], "coregistr": [156, 157, 171, 253, 362, 464], "initi": 156, "fiduci": 156, "refin": 156, "icp": 156, "omit": 156, "final": 156, "bem": [157, 160, 171, 253, 299, 300, 301, 302, 303, 304, 305, 306, 847, 851, 854], "adult": 158, "setup": [158, 220, 227, 228, 829, 834, 842], "infant": [158, 848], "surrog": 158, "under": [159, 851], "hood": 159, "ra": [159, 181], "spheric": 159, "decim": [159, 851], "mni": [159, 179], "affin": 159, "blender": 160, "edit": [160, 171], "low": [160, 197, 200], "high": [160, 200, 253, 848, 857], "tip": 160, "what": [160, 167, 197, 203, 204, 205, 253, 813, 838, 851, 872], "you": 160, "still": [160, 851], "error": 160, "clean": [160, 253], "dens": 160, "smooth": [160, 854], "topolog": 160, "deal": 160, "topologi": [160, 854], "pymeshfix": 160, "should": [161, 838, 851], "i": [161, 167, 169, 203, 204, 205, 250, 829, 835, 837, 838, 851, 854], "regular": [161, 176, 193, 367, 851, 854], "tutori": [164, 172, 182, 183, 184, 860], "introductori": [164, 172], "overview": [165, 197, 831, 838, 847, 848, 855, 857], "detect": [165, 197, 199, 209], "experiment": 165, "place": [166, 169, 849], "pick": 166, "copi": 166, "pars": 167, "stim": [167, 657], "middl": 167, "embed": 167, "multipl": [167, 223, 227, 851], "per": [167, 847], "obtain": 168, "built": [169, 215], "eeglab": [169, 188, 835, 858], "sphere": [169, 854], "keyword": 169, "avail": 169, "mani": 169, "control": 169, "digit": [169, 854], "render": [169, 179, 829], "configur": [170, 831, 837, 841], "where": 170, "store": 170, "environ": [170, 831], "log": [170, 188, 841], "your": [170, 830, 831], "start": [171, 856], "report": [171, 200, 253, 271, 865], "inverseoper": [171, 518], "code": [171, 236, 831, 834, 848], "e": 171, "g": 171, "tag": [171, 238, 857], "entir": 171, "folder": [171, 253], "html": 171, "descript": [171, 854], "text": 171, "inspect": [174, 237, 854], "sourcespac": [174, 274], "src": 174, "equival": 175, "ecd": 175, "eloreta": [176, 854], "role": 177, "orient": [177, 178, 854], "loos": 177, "limit": 177, "them": 177, "discard": 177, "variou": 178, "free": [178, 223], "introduct": 179, "handl": [179, 198], "depth": [179, 854], "bia": [179, 205], "On": [179, 857], "slice": 179, "orthoview": 179, "glass": 179, "maximum": [179, 223], "voxel": [179, 181], "three": 179, "given": 181, "prerequisit": 181, "coord": 181, "elekta": [182, 187], "phantom": [182, 183, 184], "4d": [184, 253, 848], "neuroimag": [184, 187, 848], "devic": [187, 188, 189, 854], "megin": 187, "triux": 187, "4": [187, 872], "d": 187, "dir": 187, "polhemu": 187, "softwar": [187, 200, 838, 846, 854, 857, 858], "gradient": [187, 854, 857], "ricoh": 187, "con": 187, "sqd": 187, "fieldtrip": [187, 228], "mat": 187, "arbitrari": [187, 233], "brainvis": 188, "vhdr": 188, "vmrk": 188, "european": 188, "edf": 188, "biosemi": 188, "bdf": 188, "gdf": 188, "neuroscan": 188, "cnt": 188, "egi": 188, "simpl": [188, 851], "binari": 188, "mff": 188, "fdt": 188, "nicolet": 188, "eximia": 188, "nxe": 188, "persyst": 188, "lai": 188, "dat": 188, "nihon": 188, "kohden": 188, "21e": 188, "pnt": 188, "xdfz": 188, "shape": 188, "fnir": [189, 209, 848], "standard": [189, 209, 223, 377, 831], "snirf": 189, "nirx": 189, "directori": [189, 848, 854, 857], "hdr": 189, "hitachi": 189, "csv": 189, "boxi": 189, "txt": 189, "legaci": [189, 236], "tsv": 189, "auditori": [190, 848], "strf": 193, "audio": 193, "recov": 193, "philosophi": [194, 849], "class": [194, 236, 829, 837, 844, 860], "scaler": [194, 414], "psdestim": [194, 410], "filterestim": [194, 407], "comodul": 194, "do": [197, 851], "drift": [197, 201, 203], "line": [197, 201, 253, 831, 857], "heartbeat": 197, "ecg": [197, 203, 205, 253], "ocular": 197, "block": 198, "execut": 198, "when": [198, 204, 831], "look": [198, 203, 851], "why": [198, 851, 854], "reject": [199, 847], "span": 199, "break": 199, "reject_by_annot": 199, "programmat": [199, 214], "background": [200, 201, 204, 206, 208, 219], "statement": 200, "fir": 200, "iir": 200, "pitfal": [200, 858], "pass": 200, "default": [200, 854], "c": [200, 837], "cutoff": 200, "order": 200, "transit": 200, "bandwidth": 200, "roll": 200, "off": [200, 829], "passband": 200, "rippl": 200, "stopband": 200, "attenu": 200, "delai": 200, "direct": 200, "resampl": [201, 223, 445, 851], "slow": [201, 203, 851], "best": [201, 204], "practic": [201, 204], "origin": [202, 219], "subtract": 202, "dimension": 203, "ignor": 203, "terminologi": 204, "environment": 205, "affect": [205, 214], "choos": 205, "number": [205, 212, 854], "via": [205, 835, 854, 860], "infinit": 206, "rest": [206, 848], "bipolar": 206, "hpi": 207, "separ": [208, 238], "sss": 208, "spatiotempor": [208, 228], "tsss": 208, "caveat": 208, "infrar": 209, "spectroscopi": 209, "provid": [209, 223], "meaning": 209, "appropri": 209, "intens": 209, "qualiti": 209, "haemoglobin": 209, "heart": 209, "rate": [209, 223], "consist": [209, 218, 831], "tap": 209, "right": 209, "hand": 209, "attribut": 212, "sampl": [212, 225, 227, 232, 397, 848], "len": 212, "get_data": 212, "wai": 212, "exclud": 213, "id": [213, 835, 857], "descriptor": 213, "togeth": 213, "brows": [215, 253], "scratch": 218, "unit": [218, 854], "corrupt": 219, "known": 219, "period": 219, "sinusoid": 219, "distant": 219, "center": [219, 842], "vertic": 219, "infer": 223, "hypothesi": 223, "null": 223, "parametr": [223, 225, 226], "hat": 223, "varianc": 223, "adjust": 223, "non": [223, 225, 226], "bonferroni": 223, "fals": 223, "discoveri": 223, "size": 223, "adjac": [223, 225, 228, 231], "enhanc": [223, 872], "tfce": 223, "signific": [224, 231], "1": [225, 872], "mass": 227, "univari": 227, "twowai": 227, "repeat": [227, 233], "anova": [227, 233], "account": 227, "neighbor": 228, "spatio": [231, 232, 233], "one": [231, 233], "2": [232, 872], "contrast": 233, "epochsspectrum": [236, 694], "migrat": [236, 858], "quick": 236, "action": 236, "inter": 237, "itc": 237, "ssvep": [238, 402, 848], "vssr": 238, "ratio": 238, "spectra": 238, "12": [238, 872], "hz": 238, "indic": 238, "check": [238, 253, 854], "15": [238, 872], "debrief": 238, "bonu": 238, "durat": 238, "resolv": 238, "bibliographi": 241, "paper": 242, "cite": [242, 846, 851], "o": [250, 835, 854], "fund": [252, 853], "support": [252, 835, 854, 860], "institut": [252, 853, 859], "partner": [252, 853, 859], "former": [252, 859], "command": [253, 831, 851], "tool": [253, 831, 838], "anonym": 253, "browse_raw": 253, "bti2fiff": 253, "magneswh3600": 253, "note": [253, 857], "clean_eog_ecg": 253, "ie": 253, "compare_fiff": [253, 747], "fiff": [253, 857], "compute_proj_ecg": [253, 564], "compute_proj_eog": [253, 565], "coreg": [253, 362, 363, 364], "flash_bem": 253, "3": [253, 872], "layer": 253, "flash": [253, 854], "freeview_bem_surfac": 253, "freeview": 253, "kit2fiff": 253, "nyu": 253, "make_scalp_surfac": [253, 305], "maxfilt": 253, "prepare_bem_model": 253, "colloc": 253, "setup_forward_model": 253, "setup_source_spac": [253, 640], "bilater": 253, "subsampl": 253, "show_fiff": [253, 503], "content": [253, 848, 860], "show_info": 253, "surf2bem": 253, "sys_info": [253, 691], "watershed_bem": 253, "watersh": [253, 851, 854], "acqparserfif": 254, "baseepoch": 256, "bihemilabel": 257, "dipolefix": 260, "epochsarrai": 262, "evokedarrai": 264, "mixedsourceestim": 268, "mixedvectorsourceestim": 269, "vectorsourceestim": 275, "volvectorsourceestim": 277, "add_reference_channel": 278, "add_source_space_dist": 279, "annotations_from_ev": 280, "apply_forward": 281, "apply_forward_raw": 282, "average_forward_solut": 283, "rescal": 284, "apply_d": 286, "apply_dics_csd": 287, "apply_dics_epoch": 288, "apply_dics_tfr_epoch": 289, "apply_lcmv": 290, "apply_lcmv_cov": 291, "apply_lcmv_epoch": 292, "apply_lcmv_raw": 293, "make_d": 294, "make_lcmv": 295, "make_lcmv_resolution_matrix": 296, "rap_mus": 297, "read_beamform": 298, "conductormodel": 299, "convert_flash_mri": 300, "distance_to_bem": 301, "fit_sphere_to_headshap": 302, "get_fitting_dig": 303, "make_flash_bem": 304, "make_watershed_bem": 306, "channel_indices_by_typ": 307, "channel_typ": 308, "digmontag": 309, "combine_channel": 311, "compute_dev_head_t": 312, "compute_native_head_t": 313, "equalize_channel": [314, 430], "find_ch_adjac": 315, "find_layout": 316, "fix_mag_coil_typ": 317, "generate_2d_layout": 318, "get_builtin_ch_adjac": 319, "get_builtin_montag": 320, "make_1020_channel_select": 321, "make_dig_montag": 322, "make_eeg_layout": 323, "make_grid_layout": 324, "make_standard_montag": 325, "read_ch_adjac": 326, "read_custom_montag": 327, "read_dig_captrak": 328, "read_dig_dat": 329, "read_dig_egi": 330, "read_dig_fif": 331, "read_dig_hpt": 332, "read_dig_localit": 333, "read_dig_polhemus_isotrak": 334, "read_layout": 335, "read_polhemus_fastscan": 336, "rename_channel": [337, 628], "chpi": [338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349], "compute_chpi_amplitud": 338, "compute_chpi_loc": 339, "compute_chpi_snr": 340, "compute_head_po": 341, "extract_chpi_locs_ctf": 342, "extract_chpi_locs_kit": 343, "filter_chpi": 344, "get_active_chpi": 345, "get_chpi_info": 346, "head_pos_to_trans_rot_t": 347, "read_head_po": 348, "write_head_po": 349, "combine_evok": 350, "compute_covari": 351, "compute_proj_epoch": 352, "compute_proj_evok": 353, "compute_proj_raw": 354, "compute_rank": 355, "compute_raw_covari": 356, "compute_source_morph": 357, "concatenate_epoch": 358, "concatenate_ev": 359, "concatenate_raw": 360, "convert_forward_solut": 361, "estimate_head_mri_t": 363, "get_mni_fiduci": 364, "cov": [365, 366, 367, 857], "compute_whiten": 365, "prepare_noise_cov": 366, "create_default_subject": 368, "create_info": 369, "cuda": [370, 371, 372, 829], "get_cuda_memori": 370, "init_cuda": 371, "set_cuda_devic": 372, "bst_auditori": 373, "data_path": [373, 374, 375, 378, 379, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403], "bst_raw": 374, "bst_rest": 375, "load_data": [376, 390], "epilepsy_ecog": 378, "erp_cor": 379, "fetch_aparc_sub_parcel": 380, "fetch_dataset": 381, "fetch_fsaverag": 382, "fetch_hcp_mmp_parcel": 383, "fetch_infant_templ": 384, "fetch_phantom": 385, "fnirs_motor": 386, "has_dataset": 387, "hf_sef": 388, "kiloword": [389, 848], "misc": 391, "mtrf": [392, 848], "multimod": [393, 848], "phantom_4dbti": 395, "refmeg_nois": 396, "sleep_physionet": [398, 399], "ag": 398, "fetch_data": [398, 399], "temazepam": 399, "somato": 400, "spm_face": 401, "visual_92_categori": 403, "decimate_surfac": 404, "generalizingestim": 408, "linearmodel": 409, "receptivefield": 411, "slidingestim": 415, "temporalfilt": 416, "timedelayingridg": 417, "timefrequ": 418, "unsupervisedspatialfilt": 419, "compute_em": 421, "cross_val_multiscor": 422, "get_coef": 423, "dig_mri_dist": 424, "get_phantom_dipol": 425, "average_mov": 426, "combine_event_id": 427, "equalize_epoch_count": 428, "define_target_ev": 431, "match_event_nam": 432, "shift_time_ev": 433, "events_from_annot": 434, "export_epoch": 435, "export_evok": 436, "export_evokeds_mff": 437, "export_raw": 438, "extract_label_time_cours": 439, "construct_iir_filt": 440, "create_filt": 441, "estimate_ringing_sampl": 442, "filter_data": 443, "notch_filt": 444, "find_ev": 446, "find_stim_step": 447, "fit_dipol": 448, "compute_depth_prior": 449, "compute_orient_prior": 450, "restrict_forward_to_label": 451, "restrict_forward_to_stc": 452, "get_config": 453, "get_config_path": 454, "get_head_surf": 455, "get_meg_helmet_surf": 456, "get_montage_volume_label": 457, "get_volume_labels_from_aseg": 458, "get_volume_labels_from_src": 459, "grade_to_tri": 460, "grade_to_vertic": 461, "grand_averag": 462, "grow_label": 463, "locate_ieeg": 465, "head_to_mni": 466, "head_to_mri": 467, "inverse_spars": [468, 469, 470, 471], "gamma_map": 468, "make_stc_from_dipol": 469, "mixed_norm": 470, "tf_mixed_norm": 471, "io": [472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "baseraw": 472, "rawarrai": 474, "anonymize_info": 475, "read_mrk": 476, "read_fiduci": 477, "read_info": 478, "read_raw": 479, "read_raw_artemis123": 480, "read_raw_bdf": 481, "read_raw_boxi": 482, "read_raw_brainvis": 483, "read_raw_bti": 484, "read_raw_cnt": 485, "read_raw_ctf": 486, "read_raw_curri": 487, "read_raw_edf": 488, "read_raw_eeglab": 489, "read_raw_egi": 490, "read_raw_eximia": 491, "read_raw_fieldtrip": 492, "read_raw_fif": 493, "read_raw_gdf": 494, "read_raw_hitachi": 495, "read_raw_kit": 496, "read_raw_nedf": 497, "read_raw_nicolet": 498, "read_raw_nihon": 499, "read_raw_nirx": 500, "read_raw_persyst": 501, "read_raw_snirf": 502, "write_fiduci": 504, "select_sourc": 505, "label_sign_flip": 506, "labels_to_stc": 507, "make_ad_hoc_cov": 508, "make_bem_model": 509, "make_bem_solut": 510, "make_field_map": 511, "make_fixed_length_epoch": 512, "make_fixed_length_ev": 513, "make_forward_dipol": 514, "make_forward_solut": 515, "make_sphere_model": 516, "merge_ev": 517, "minimum_norm": [518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537], "apply_invers": 519, "apply_inverse_cov": 520, "apply_inverse_epoch": 521, "apply_inverse_raw": 522, "apply_inverse_tfr_epoch": 523, "compute_rank_invers": 524, "compute_source_psd": 525, "compute_source_psd_epoch": 526, "estimate_snr": 527, "get_cross_talk": 528, "get_point_spread": 529, "make_inverse_oper": 530, "make_inverse_resolution_matrix": 531, "prepare_inverse_oper": 532, "read_inverse_oper": 533, "resolution_metr": 534, "source_band_induced_pow": 535, "source_induced_pow": 536, "write_inverse_oper": 537, "morph_label": 538, "morph_source_spac": 539, "open_doc": 540, "open_report": 541, "parse_config": 542, "pick_channel": 543, "pick_channels_cov": 544, "pick_channels_forward": 545, "pick_channels_regexp": 546, "pick_ev": 547, "pick_info": 548, "pick_typ": 549, "pick_types_forward": 550, "eogregress": 551, "annotate_amplitud": 554, "annotate_break": 555, "annotate_mov": 556, "annotate_muscle_zscor": 557, "annotate_nan": 558, "compute_average_dev_head_t": 559, "compute_bridged_electrod": 560, "compute_current_source_dens": 561, "compute_fine_calibr": 562, "compute_maxwell_basi": 563, "corrmap": 566, "cortical_signal_suppress": 567, "create_ecg_epoch": 568, "create_eog_epoch": 569, "equalize_bad": 570, "find_bad_channels_maxwel": 571, "find_ecg_ev": 572, "find_eog_ev": 573, "fix_stim_artifact": 574, "ica_find_ecg_ev": 575, "ica_find_eog_ev": 576, "ieeg": 577, "project_sensors_onto_brain": 577, "infomax": 578, "interpolate_bridged_electrod": 579, "maxwell_filt": 580, "maxwell_filter_prepare_emptyroom": 581, "beer_lambert_law": 582, "optical_dens": 583, "scalp_coupling_index": 584, "short_channel": 585, "source_detector_dist": 586, "temporal_derivative_distribution_repair": 587, "oversampled_temporal_project": 588, "peak_find": 589, "read_eog_regress": 590, "read_fine_calibr": 591, "read_ica": 592, "read_ica_eeglab": 593, "realign_raw": 594, "regress_artifact": 595, "write_fine_calibr": 596, "random_parcel": 597, "read_annot": 598, "read_bem_solut": 599, "read_bem_surfac": 600, "read_cov": 601, "read_dipol": 602, "read_epoch": 603, "read_epochs_eeglab": 604, "read_epochs_fieldtrip": 605, "read_epochs_kit": 606, "read_ev": 607, "read_evoked_besa": 608, "read_evoked_fieldtrip": 609, "read_evok": 610, "read_evokeds_mff": 611, "read_forward_solut": 612, "read_freesurfer_lut": 613, "read_label": 614, "read_labels_from_annot": 615, "read_lta": 616, "read_morph_map": 617, "read_proj": 618, "read_reject_paramet": 619, "read_source_estim": 620, "read_source_morph": 621, "read_source_spac": 622, "read_surfac": 623, "read_talxfm": 624, "read_tran": 625, "read_tri": 626, "read_vectorview_select": 627, "scale_bem": 629, "scale_label": 630, "scale_mri": 631, "scale_source_spac": 632, "sensitivity_map": 633, "set_bipolar_refer": 634, "set_cache_dir": 635, "set_config": 636, "set_eeg_refer": 637, "set_log_fil": 638, "set_log_level": 639, "setup_volume_source_spac": 641, "sourcesimul": 642, "add_chpi": 643, "add_ecg": 644, "add_eog": 645, "add_nois": 646, "cosine_scor": 647, "f1_score": 648, "peak_position_error": 649, "precision_scor": 650, "recall_scor": 651, "region_localization_error": 652, "roc_auc_scor": 653, "spatial_deviation_error": 654, "select_source_in_label": 655, "simulate_evok": 656, "simulate_raw": 657, "simulate_sparse_stc": 658, "simulate_stc": 659, "source_spac": [660, 661], "compute_distance_to_sensor": 660, "get_decimated_surfac": 661, "spatial_dist_adjac": 662, "spatial_inter_hemi_adjac": 663, "spatial_src_adjac": 664, "spatial_tris_adjac": 665, "spatio_temporal_dist_adjac": 666, "spatio_temporal_src_adjac": 667, "spatio_temporal_tris_adjac": 668, "split_label": 669, "stat": [670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "bonferroni_correct": 670, "bootstrap_confidence_interv": 671, "combine_adjac": 672, "f_mway_rm": 673, "f_onewai": 674, "f_threshold_mway_rm": 675, "fdr_correct": 676, "linear_regress": 677, "linear_regression_raw": 678, "permutation_cluster_1samp_test": 679, "permutation_cluster_test": 680, "permutation_t_test": 681, "spatio_temporal_cluster_1samp_test": 682, "spatio_temporal_cluster_test": 683, "summarize_clusters_stc": 684, "ttest_1samp_no_p": 685, "ttest_ind_no_p": 686, "stc_near_sensor": 687, "stc_to_label": 688, "complete_surface_info": 689, "read_curvatur": 690, "time_frequ": [692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725], "averagetfr": 692, "crossspectraldens": 693, "epochstfr": 695, "csd_array_fouri": 697, "csd_array_morlet": 698, "csd_array_multitap": 699, "csd_fourier": 700, "csd_morlet": 701, "csd_multitap": 702, "csd_tfr": 703, "dpss_window": 704, "fit_iir_model_raw": 705, "fwhm": 706, "istft": 707, "pick_channels_csd": 709, "psd_array_multitap": 710, "psd_array_welch": 711, "read_csd": 712, "read_spectrum": 713, "read_tfr": 714, "stft": 715, "stftfreq": 716, "cwt": 717, "tfr_array_morlet": 719, "tfr_array_multitap": 720, "tfr_array_stockwel": 721, "tfr_morlet": 722, "tfr_multitap": 723, "tfr_stockwel": 724, "write_tfr": 725, "transform_surface_to": 726, "apply_volume_registr": 728, "compute_volume_registr": 729, "quat_to_rot": 730, "read_ras_mni_t": 731, "rot_to_quat": 732, "use_coil_def": 733, "use_log_level": 734, "util": [735, 736, 857], "deprec": [735, 831], "warn": [736, 831], "verbos": 737, "vertex_to_mni": 738, "clickableimag": 740, "figure3d": 741, "add_background_imag": 742, "centers_to_edg": 743, "circular_layout": 744, "close_3d_figur": 745, "close_all_3d_figur": 746, "create_3d_figur": 748, "get_3d_backend": 749, "get_brain_class": 750, "get_browser_backend": 751, "iter_topographi": 752, "link_brain": 753, "mne_analyze_colormap": 754, "plot_align": 755, "plot_arrowmap": 756, "plot_bem": 757, "plot_brain_colorbar": 758, "plot_bridged_electrod": 759, "plot_ch_adjac": 760, "plot_channel_labels_circl": 761, "plot_chpi_snr": 762, "plot_compare_evok": 763, "plot_cov": 764, "plot_csd": 765, "plot_dipole_amplitud": 766, "plot_dipole_loc": 767, "plot_drop_log": 768, "plot_epoch": 769, "plot_epochs_imag": 770, "plot_epochs_psd_topomap": 771, "plot_ev": 772, "plot_evok": 773, "plot_evoked_field": 774, "plot_evoked_imag": 775, "plot_evoked_joint": 776, "plot_evoked_topo": 777, "plot_evoked_topomap": 778, "plot_evoked_whit": 779, "plot_filt": 780, "plot_head_posit": 781, "plot_ica_compon": 782, "plot_ica_overlai": 783, "plot_ica_properti": 784, "plot_ica_scor": 785, "plot_ica_sourc": 786, "plot_ideal_filt": 787, "plot_layout": 788, "plot_montag": 789, "plot_projs_joint": 790, "plot_projs_topomap": 791, "plot_raw": 792, "plot_raw_psd": 793, "plot_regression_weight": 794, "plot_sensor": 795, "plot_snr_estim": 796, "plot_source_estim": 797, "plot_sparse_source_estim": 798, "plot_tfr_topomap": 799, "plot_topo_image_epoch": 800, "plot_vector_source_estim": 802, "plot_volume_source_estim": 803, "set_3d_backend": 804, "set_3d_opt": 805, "set_3d_titl": 806, "set_3d_view": 807, "set_browser_backend": 808, "snapshot_brain_montag": 809, "use_3d_backend": 810, "use_browser_backend": 811, "warp_montage_volum": 812, "write_bem_solut": 814, "write_bem_surfac": 815, "write_cov": 816, "write_ev": 817, "write_evok": 818, "write_forward_solut": 819, "write_head_bem": 820, "write_label": 821, "write_labels_to_annot": 822, "write_proj": 823, "write_source_spac": 824, "write_surfac": 825, "write_tran": 826, "glossari": 827, "homepag": 828, "jupyt": 829, "notebook": 829, "jupyterlab": 829, "fa": [829, 837], "brand": [829, 837], "window": [829, 851], "instal": [829, 830, 832, 833, 834, 835, 836, 837, 838], "headless": 829, "linux": 829, "server": 829, "develop": [829, 831, 839, 850], "version": [829, 839, 872], "gpu": 829, "acceler": 829, "screen": 829, "mesa": 829, "troubleshoot": [829, 837], "troubl": 829, "upgrad": [829, 839], "maco": [829, 837, 851], "contribut": 831, "guid": 831, "git": 831, "gnu": 831, "fork": 831, "repositori": 831, "virtual": 831, "github": 831, "ssh": 831, "convent": 831, "requir": [831, 837], "must": 831, "have": [831, 847, 851], "coverag": 831, "document": [831, 853, 855, 857, 859, 860], "avoid": 831, "api": [831, 849, 860, 862, 872], "possibl": 831, "decor": 831, "changelog": [831, 872], "contributor": 831, "recur": 831, "pull": 831, "request": 831, "pr": 831, "fast": 831, "thorough": 831, "style": 831, "adher": 831, "guidelin": [831, 859], "we": 831, "mostli": [831, 849], "follow": 831, "numpi": [831, 854], "docstr": 831, "everywher": 831, "guidanc": 831, "organ": [831, 849, 854], "return": 831, "run": [831, 851], "suit": [831, 838], "build": 831, "pip": 835, "conda": 835, "depend": [835, 872], "minim": 835, "scenario": 835, "appl": 837, "download": [837, 851], "help": [838, 851, 852], "updat": [839, 860], "martino": 842, "cpp": 843, "most": 844, "typic": 847, "m": [847, 851], "recommend": 847, "subdivis": 847, "icosahedron": 847, "octahedron": 847, "creation": 847, "approxim": 847, "area": 847, "been": 847, "assum": 847, "1000": 847, "cm2": 847, "mesh": [847, 851, 854], "triangul": 847, "boundari": [847, 854], "element": [847, 854], "trigger": 848, "state": 848, "somatosensori": 848, "92": 848, "categori": 848, "polysomnograph": 848, "databas": [848, 860], "miscellan": 848, "integr": [849, 860], "scientif": 849, "stack": 849, "submodul": 849, "unifi": 849, "In": [849, 860], "frequent": 851, "ask": 851, "question": 851, "faq": 851, "issu": 851, "can": 851, "pyvista": 851, "extrem": 851, "even": 851, "sure": 851, "x": 851, "my": 851, "y": 851, "think": 851, "bug": [851, 872], "danger": 851, "pickl": 851, "later": 851, "onc": 851, "again": 851, "cpu": 851, "though": 851, "didn": 851, "tell": 851, "mysteri": 851, "take": 851, "forev": 851, "incorrect": 851, "govern": 853, "bdfl": 853, "steer": [853, 859], "council": [853, 859], "membership": 853, "conflict": 853, "privat": 853, "commun": [853, 859], "decis": 853, "histori": [853, 859], "acknowledg": 853, "licens": 853, "implement": 854, "detail": [854, 857], "intern": 854, "float": 854, "precis": 854, "effici": [854, 860], "preload": 854, "explicitli": 854, "access": [854, 860], "concept": 854, "subspac": 854, "tessel": 854, "discret": 854, "geometri": [854, 857], "coil": [854, 857], "magnet": 854, "normal": 854, "accur": 854, "accuraci": 854, "purpos": 854, "patch": 854, "constraint": 854, "weight": 854, "matlab": 857, "routin": 857, "w": 857, "demonstr": 857, "toolbox": 857, "constant": 857, "taginfo": 857, "dig": 857, "coildef": 857, "see": 857, "ch": 857, "proj": 857, "comp": 857, "mea": 857, "surf": 857, "inv": 857, "reginv": 857, "noisenorm": 857, "fill": 857, "mne_prepare_inverse_oper": 857, "benevol": 859, "dictat": 859, "life": 859, "particip": 859, "lead": 859, "roadmap": 860, "page": 860, "openmeeg": 860, "improv": 860, "bind": 860, "progress": 860, "divers": 860, "equiti": 860, "inclus": 860, "dei": 860, "deep": 860, "better": 860, "db": 860, "pediatr": 860, "complet": 860, "overhaul": 860, "realtim": 864, "dev0": 872, "0": 872, "2022": 872, "21": 872, "author": 872, "10": 872, "11": 872, "08": 872, "03": 872, "behavior": 872, "24": 872, "2021": 872, "23": 872, "04": 872, "27": 872, "22": 872, "2020": 872, "17": 872, "09": 872, "20": 872, "19": 872, "2019": 872, "18": 872, "05": 872, "2018": 872, "16": 872, "01": 872, "2017": 872, "14": 872, "13": 872, "2016": 872, "2015": 872, "26": 872, "9": 872, "8": 872, "2014": 872, "06": 872, "25": 872, "7": 872, "2013": 872, "6": 872, "5": 872, "2012": 872, "2011": 872}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Connectivity Analysis Examples": [[0, "connectivity-analysis-examples"], [27, "connectivity-analysis-examples"]], "Brainstorm raw (median nerve) dataset": [[1, "brainstorm-raw-median-nerve-dataset"]], "References": [[1, "references"], [4, "references"], [8, "references"], [10, "references"], [12, "references"], [13, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [21, "references"], [33, "references"], [35, "references"], [40, "references"], [42, "references"], [43, "references"], [44, "references"], [46, "references"], [51, "references"], [54, "references"], [55, "references"], [58, "references"], [59, "references"], [65, "references"], [69, "references"], [70, "references"], [73, "references"], [74, "references"], [77, "references"], [81, "references"], [82, "references"], [86, "references"], [92, "references"], [99, "references"], [107, "references"], [110, "references"], [111, "references"], [115, "references"], [117, "references"], [119, "references"], [124, "references"], [127, "references"], [133, "references"], [136, "references"], [140, "references"], [143, "references"], [150, "references"], [154, "references"], [156, "references"], [161, "references"], [175, "references"], [177, "references"], [179, "references"], [182, "references"], [183, "references"], [190, "references"], [193, "references"], [194, "references"], [198, "references"], [200, "references"], [202, "references"], [203, "references"], [204, "references"], [205, "references"], [206, "references"], [208, "references"], [220, "references"], [223, "references"], [224, "references"], [228, "references"], [236, "references"], [847, "references"], [848, "references"], [851, "references"], [854, "references"]], "HF-SEF dataset": [[2, "hf-sef-dataset"]], "Examples on open datasets": [[3, "examples-on-open-datasets"], [27, "examples-on-open-datasets"]], "Single trial linear regression analysis with the LIMO dataset": [[4, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[4, "about-the-data"]], "Load the data": [[4, "load-the-data"], [136, "load-the-data"], [140, "load-the-data"], [158, "load-the-data"]], "Visualize events": [[4, "visualize-events"]], "Visualize condition ERPs": [[4, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[4, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[4, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[4, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[4, "extract-regression-coefficients"]], "Plot model results": [[4, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[5, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[5, "prepare-data-for-localization"]], "Perform dipole fitting": [[5, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[5, "perform-minimum-norm-localization"]], "Computation times": [[6, "computation-times"], [20, "computation-times"], [25, "computation-times"], [56, "computation-times"], [66, "computation-times"], [83, "computation-times"], [89, "computation-times"], [100, "computation-times"], [104, "computation-times"], [128, "computation-times"], [138, "computation-times"], [147, "computation-times"], [153, "computation-times"], [163, "computation-times"], [173, "computation-times"], [186, "computation-times"], [192, "computation-times"], [196, "computation-times"], [211, "computation-times"], [217, "computation-times"], [222, "computation-times"], [230, "computation-times"], [235, "computation-times"], [240, "computation-times"]], "From raw data to dSPM on SPM Faces dataset": [[7, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[8, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[9, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[10, "representational-similarity-analysis"]], "Decoding source space data": [[11, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[12, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[13, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[14, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[15, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[16, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[17, "machine-learning-decoding-encoding-and-mvpa"], [27, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[18, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[18, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[19, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[19, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[19, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[19, "investigate-model-coefficients"], [19, "id5"]], "Create and fit a stimulus reconstruction model": [[19, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[19, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[21, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[21, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[22, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[23, "forward-modeling"], [27, "forward-modeling"]], "Generate a left cerebellum volume source space": [[24, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[26, "use-source-space-morphing"]], "Examples Gallery": [[27, "examples-gallery"]], "Input/Output": [[27, "input-output"], [62, "input-output"]], "Data Simulation": [[27, "data-simulation"], [87, "data-simulation"]], "Preprocessing": [[27, "preprocessing"], [76, "preprocessing"], [107, "preprocessing"], [140, "preprocessing"], [164, "preprocessing"], [165, "preprocessing"], [210, "preprocessing"], [847, "preprocessing"], [861, "preprocessing"]], "Visualization": [[27, "visualization"], [55, "visualization"], [120, "visualization"], [176, "visualization"], [831, "visualization"], [871, "visualization"]], "Time-Frequency Examples": [[27, "time-frequency-examples"], [103, "time-frequency-examples"]], "Statistics Examples": [[27, "statistics-examples"], [96, "statistics-examples"]], "Inverse problem and source analysis": [[27, "inverse-problem-and-source-analysis"], [36, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[28, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[29, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[30, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[31, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[32, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[33, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[34, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[34, "compute-covariances"]], "Compute some source estimates": [[34, "compute-some-source-estimates"]], "Plot source estimates": [[34, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[35, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[37, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[38, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[39, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[39, "compute-inverse-solution"], [41, "compute-inverse-solution"], [176, "compute-inverse-solution"]], "View source activations": [[39, "view-source-activations"]], "Using vector solutions": [[39, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[40, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[41, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[41, "set-up-our-source-space"]], "View the source space": [[41, "view-the-source-space"]], "Compute the fwd matrix": [[41, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[41, "plot-the-mixed-source-estimate"]], "Plot the surface": [[41, "plot-the-surface"]], "Plot the volume": [[41, "plot-the-volume"]], "Process labels": [[41, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[42, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[42, "compute-empty-room-covariance"]], "Epoch the data": [[42, "epoch-the-data"]], "Compute and plot covariances": [[42, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[42, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[43, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[43, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[43, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[43, "plot-results"], [44, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[43, "reading-and-writing-sourcemorph-from-and-to-disk"], [44, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[44, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[44, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[44, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[44, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[45, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[46, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[47, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[47, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[47, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[47, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[47, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[47, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[47, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[48, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[48, "visualize"], [49, "visualize"], [50, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[49, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[49, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[49, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[50, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[51, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[52, "reading-an-inverse-operator"]], "Reading an STC file": [[53, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[54, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[54, "mne"]], "dSPM": [[54, "dspm"], [854, "dspm"]], "Visualize results": [[54, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[55, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[55, "eegmeg"]], "MEG": [[55, "meg"]], "Estimate data SNR using an inverse": [[57, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[58, "computing-source-space-snr"]], "EEG": [[58, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[59, "compute-mxne-with-time-frequency-sparse-prior"]], "Plotting the full vector-valued MNE solution": [[60, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[61, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[63, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[64, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[65, "reading-xdf-eeg-data"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[67, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[68, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[69, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[69, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[69, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[69, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[69, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[69, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[69, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[69, "the-relationship-between-bridging-and-impedances"]], "Summary": [[69, "summary"], [166, "summary"], [174, "summary"], [197, "summary"], [198, "summary"], [200, "summary"]], "Transform EEG data using current source density (CSD)": [[70, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[71, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[72, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[72, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[72, "perform-regression-and-remove-eog"]], "Before/after comparison": [[72, "before-after-comparison"]], "Find MEG reference channel artifacts": [[73, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[74, "visualise-nirs-artifact-correction-methods"]], "Import data": [[74, "import-data"]], "Add artificial artifacts to data": [[74, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[74, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[75, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[77, "interpolate-bad-channels-for-meg-eeg-channels"]], "Maxwell filter data with movement compensation": [[78, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[79, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[79, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[79, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[80, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[80, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[80, "view-the-annotations"]], "Removing muscle ICA components": [[81, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[81, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[82, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[84, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[85, "remap-meg-channel-types"]], "XDAWN Denoising": [[86, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[88, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[88, "define-main-parameters-of-sources"]], "Create simulated source activity": [[88, "create-simulated-source-activity"], [92, "create-simulated-source-activity"]], "Simulate raw data": [[88, "simulate-raw-data"], [92, "simulate-raw-data"]], "Compute evoked from raw data": [[88, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[88, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[88, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[88, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[88, "for-region"]], "For Dipoles": [[88, "for-dipoles"]], "Generate simulated evoked data": [[90, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[91, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[92, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[92, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[92, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[93, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[94, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[95, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[97, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[98, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[99, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[101, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[102, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[102, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[105, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[106, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[107, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[107, "alignment-and-forward"]], "Alpha": [[107, "alpha"]], "Beta": [[107, "beta"]], "Compute induced power in the source space with dSPM": [[108, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[109, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[110, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[111, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[112, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[112, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[112, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[112, "multitaper-transform"]], "Stockwell (S) transform": [[112, "stockwell-s-transform"]], "Morlet Wavelets": [[112, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[112, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[112, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[112, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[113, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[113, "load-data"], [114, "load-data"], [177, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[113, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[113, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[114, "plotting-with-mne-viz-brain"]], "Add source information": [[114, "add-source-information"]], "Modify the view of the brain": [[114, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[114, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[114, "include-the-head-in-the-image"]], "Add sensors positions": [[114, "add-sensors-positions"]], "Add current dipoles": [[114, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[114, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[115, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[116, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[117, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[118, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[118, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[118, "additional-plot-topomap-options"]], "More advanced usage": [[118, "more-advanced-usage"]], "Interpolating topomaps": [[118, "interpolating-topomaps"]], "Animating the topomap": [[118, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[119, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting sensor layouts of MEG systems": [[121, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[121, "neuromag"]], "CTF": [[121, "ctf"]], "BTi": [[121, "bti"]], "KIT": [[121, "kit"]], "Artemis123": [[121, "artemis123"]], "Plot the MNE brain and helmet": [[122, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[123, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[124, "plot-a-cortical-parcellation"]], "Make figures more publication ready": [[125, "make-figures-more-publication-ready"]], "Imports": [[125, "imports"]], "Evoked plot with brain activation": [[125, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[125, "custom-timecourse-with-montage-inset"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[126, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Show noise levels from empty room data": [[127, "show-noise-levels-from-empty-room-data"]], "Sensitivity map of SSP projections": [[129, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[130, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[131, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[132, "cross-hemisphere-comparison"]], "Locating intracranial electrode contacts": [[133, "locating-intracranial-electrode-contacts"]], "Aligning the T1 to ACPC": [[133, "aligning-the-t1-to-acpc"]], "Freesurfer recon-all": [[133, "freesurfer-recon-all"]], "Aligning the CT to the MR": [[133, "aligning-the-ct-to-the-mr"]], "Marking the Location of Each Electrode Contact": [[133, "marking-the-location-of-each-electrode-contact"]], "Warping to a Common Atlas": [[133, "warping-to-a-common-atlas"]], "Working with sEEG data": [[134, "working-with-seeg-data"]], "Working with ECoG data": [[135, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[135, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[135, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[135, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[135, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[135, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[136, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[136, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[136, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[136, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[136, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[136, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[136, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[136, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[136, "further-analysis-of-the-data"]], "Exercise": [[136, "exercise"], [157, "exercise"], [194, "exercise"], [237, "exercise"]], "Clinical applications": [[137, "clinical-applications"], [164, "clinical-applications"]], "The Epochs data structure: discontinuous data": [[139, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[139, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[139, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[139, "subselecting-epochs"]], "Selecting epochs by index": [[139, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[139, "selecting-dropping-and-reordering-channels"], [148, "selecting-dropping-and-reordering-channels"], [212, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[139, "changing-channel-name-and-type"], [212, "changing-channel-name-and-type"]], "Selection in the time domain": [[139, "selection-in-the-time-domain"], [212, "selection-in-the-time-domain"]], "Extracting data in other forms": [[139, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[139, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[139, "iterating-over-epochs"]], "Regression-based baseline correction": [[140, "regression-based-baseline-correction"]], "Traditional baselining": [[140, "traditional-baselining"]], "Regression-based baselining": [[140, "regression-based-baselining"]], "Plot the baseline regressor": [[140, "plot-the-baseline-regressor"]], "Plot the ERPs": [[140, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[140, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[140, "examine-the-interaction-term"]], "Visualizing epoched data": [[141, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[141, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[141, null]], "Plotting projectors from an Epochs object": [[141, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[141, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[141, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[141, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[142, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[142, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[142, null]], "Modifying the metadata": [[142, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[142, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[142, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[143, "auto-generating-epochs-metadata"]], "Preparation": [[143, "preparation"]], "Creating metadata from events": [[143, "creating-metadata-from-events"]], "The basics of make_metadata": [[143, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[143, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[143, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[143, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[143, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[143, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[144, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[144, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[144, "scaling-time-and-channel-values"]], "Setting the index": [[144, "setting-the-index"]], "Wide- versus long-format DataFrames": [[144, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[145, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[145, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[145, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[146, "segmenting-continuous-data-into-epochs"], [164, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[148, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[148, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[148, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[148, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[148, null]], "Similarities among the core data structures": [[148, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[148, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[148, "combining-evoked-objects"]], "Other uses of Evoked objects": [[148, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[149, "visualizing-evoked-data"]], "Plotting signal traces": [[149, "plotting-signal-traces"]], "Butterfly plots": [[149, null]], "Plotting scalp topographies": [[149, "plotting-scalp-topographies"]], "Arrow maps": [[149, "arrow-maps"]], "Joint plots": [[149, "joint-plots"]], "Comparing Evoked objects": [[149, "comparing-evoked-objects"]], "Image plots": [[149, "image-plots"]], "Topographical subplots": [[149, "topographical-subplots"]], "3D Field Maps": [[149, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[150, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[150, "channel-names-and-types"]], "Channel locations": [[150, "channel-locations"]], "Setting the EEG reference": [[150, "setting-the-eeg-reference"], [206, "setting-the-eeg-reference"]], "Filtering": [[150, "filtering"]], "Evoked responses: epoching and averaging": [[150, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[150, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[150, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[150, "comparing-conditions"]], "Grand averages": [[150, "grand-averages"]], "Amplitude and latency measures": [[150, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[150, "peak-latency-and-amplitude"]], "Mean Amplitude": [[150, "mean-amplitude"]], "Plotting whitened data": [[151, "plotting-whitened-data"]], "Raw data with whitening": [[151, "raw-data-with-whitening"]], "Epochs with whitening": [[151, "epochs-with-whitening"]], "Evoked data with whitening": [[151, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[151, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[151, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[152, "estimating-evoked-responses"], [164, "estimating-evoked-responses"], [165, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[154, "freesurfer-mri-reconstruction"]], "First steps": [[154, "first-steps"], [834, "first-steps"]], "Anatomical reconstruction": [[154, "anatomical-reconstruction"]], "Use with MNE-Python": [[154, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[154, "fsaverage"]], "Source alignment and coordinate frames": [[155, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[155, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[155, "coordinate-frame-definitions"]], "A bad example": [[155, "a-bad-example"]], "A good example": [[155, "a-good-example"]], "Visualizing the transformations": [[155, "visualizing-the-transformations"]], "Example: MRI defacing": [[155, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[155, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[155, "alignment-without-mri"]], "Using an automated approach to coregistration": [[156, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[156, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[156, "initial-fit-with-fiducials"]], "Refining with ICP": [[156, "refining-with-icp"]], "Omitting bad points": [[156, "omitting-bad-points"]], "Final coregistration fit": [[156, "final-coregistration-fit"]], "Head model and forward computation": [[157, "head-model-and-forward-computation"]], "Computing the forward operator": [[157, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[157, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[157, "visualizing-the-coregistration"]], "Compute Source Space": [[157, "compute-source-space"]], "Compute forward solution": [[157, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[158, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[158, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[158, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[158, "infant-mri-surrogates"]], "Get an infant MRI template": [[158, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[159, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[159, "mri-coordinate-frames"]], "Under the hood": [[159, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[159, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[159, null]], "Using FreeSurfer\u2019s surface reconstructions": [[159, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[159, "cortical-alignment-spherical"]], "Surface decimation": [[159, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[159, "freesurfer-s-mni-affine-transformation"]], "Fixing BEM and head surfaces": [[160, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[160, "exporting-surfaces-to-blender"]], "Editing in Blender": [[160, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[160, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[160, "editing-the-head-surfaces"]], "Low-resolution head": [[160, "low-resolution-head"]], "High-resolution head": [[160, "high-resolution-head"]], "Blender editing tips": [[160, "blender-editing-tips"]], "What if you still get an error?": [[160, "what-if-you-still-get-an-error"]], "Blender operations": [[160, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[160, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[160, "topological-errors"]], "Dealing with topology in blender": [[160, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[160, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[161, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[161, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[161, "how-should-i-regularize-the-covariance-matrix"], [851, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[162, "forward-models-and-source-spaces"], [164, "forward-models-and-source-spaces"]], "Tutorials": [[164, "tutorials"]], "Introductory tutorials": [[164, "introductory-tutorials"], [172, "introductory-tutorials"]], "Reading data for different recording systems": [[164, "reading-data-for-different-recording-systems"], [191, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[164, "working-with-continuous-data"], [216, "working-with-continuous-data"]], "Time-frequency analysis": [[164, "time-frequency-analysis"], [165, "time-frequency-analysis"], [239, "time-frequency-analysis"]], "Source localization and inverses": [[164, "source-localization-and-inverses"], [185, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[164, "statistical-analysis-of-sensor-data"], [229, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[164, "statistical-analysis-of-source-estimates"], [234, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[164, "machine-learning-models-of-neural-activity"], [195, "machine-learning-models-of-neural-activity"]], "Simulation": [[164, "simulation"], [221, "simulation"], [867, "simulation"]], "Overview of MEG/EEG analysis with MNE-Python": [[165, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[165, "loading-data"]], "Detecting experimental events": [[165, "detecting-experimental-events"]], "Epoching continuous data": [[165, "epoching-continuous-data"]], "Inverse modeling": [[165, "inverse-modeling"]], "Modifying data in-place": [[166, "modifying-data-in-place"]], "Signal processing": [[166, "signal-processing"]], "Channel picking": [[166, "channel-picking"]], "The copy parameter": [[166, "the-copy-parameter"]], "Parsing events from raw data": [[167, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[167, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[167, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[167, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[167, null]], "Reading embedded events as Annotations": [[167, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[167, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[167, "making-multiple-events-per-annotation"]], "The Info data structure": [[168, "the-info-data-structure"]], "Querying the Info object": [[168, "querying-the-info-object"]], "Obtaining subsets of channels": [[168, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[168, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[168, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[169, "working-with-sensor-locations"]], "About montages and layouts": [[169, "about-montages-and-layouts"]], "Working with built-in montages": [[169, "working-with-built-in-montages"]], "Computing sensor locations": [[169, null]], "Plotting 2D sensor locations like EEGLAB": [[169, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[169, null]], "Manually controlling 2D channel projection": [[169, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[169, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[169, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[169, "working-with-layout-files"]], "Configuring MNE-Python": [[170, "configuring-mne-python"]], "Getting and setting configuration variables": [[170, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[170, "where-configurations-are-stored"]], "Using environment variables": [[170, "using-environment-variables"]], "Logging": [[170, "logging"]], "Getting information about your system": [[170, "getting-information-about-your-system"]], "Getting started with mne.Report": [[171, "getting-started-with-mne-report"]], "Adding Raw data": [[171, "adding-raw-data"]], "Adding events": [[171, "adding-events"]], "Adding Epochs": [[171, "adding-epochs"]], "Adding Evoked": [[171, "adding-evoked"]], "Adding Covariance": [[171, "adding-covariance"]], "Adding Projection vectors": [[171, "adding-projection-vectors"]], "Adding ICA": [[171, "adding-ica"]], "Adding MRI with BEM": [[171, "adding-mri-with-bem"]], "Adding coregistration": [[171, "adding-coregistration"]], "Adding a Forward solution": [[171, "adding-a-forward-solution"]], "Adding an InverseOperator": [[171, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[171, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[171, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[171, "adding-custom-figures"]], "Adding image files": [[171, "adding-image-files"]], "Working with tags": [[171, "working-with-tags"]], "Editing a saved report": [[171, "editing-a-saved-report"]], "Adding an entire folder of files": [[171, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[171, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[174, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[174, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[174, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[174, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[175, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[176, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[176, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[176, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[176, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[177, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[177, "the-source-space"]], "Fixed dipole orientations": [[177, "fixed-dipole-orientations"]], "Loose dipole orientations": [[177, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[177, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[177, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[178, "computing-various-mne-solutions"]], "Fixed orientation": [[178, "fixed-orientation"]], "Free orientation": [[178, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[179, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[179, "introduction-to-beamformers"]], "Data processing": [[179, "data-processing"]], "Computing the covariance matrices": [[179, "computing-the-covariance-matrices"]], "The forward model": [[179, "the-forward-model"]], "Handling depth bias": [[179, "handling-depth-bias"]], "Compute the spatial filter": [[179, "compute-the-spatial-filter"]], "Apply the spatial filter": [[179, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[179, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[179, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[179, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[179, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[179, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[179, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[180, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[180, "surface-source-estimates"]], "Volume Source Estimates": [[180, "volume-source-estimates"]], "Vector Source Estimates": [[180, "vector-source-estimates"]], "Dipole fits": [[180, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[181, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[181, "prerequisites"]], "Visualizing the MRI": [[181, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[181, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[181, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[182, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[183, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[184, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[187, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[187, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "Artemis123 (.bin)": [[187, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[187, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[187, "ctf-data-dir"]], "CTF Polhemus data": [[187, "ctf-polhemus-data"]], "Applying software gradient compensation": [[187, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[187, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[187, null]], "FieldTrip MEG/EEG data (.mat)": [[187, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[187, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[188, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[188, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[188, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[188, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[188, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[188, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[188, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[188, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[188, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[188, "nicolet-data"]], "eXimia EEG data (.nxe)": [[188, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[188, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[188, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[188, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[188, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[188, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[189, "importing-data-from-fnirs-devices"]], "Standardized data": [[189, "standardized-data"]], "SNIRF (.snirf)": [[189, "snirf-snirf"]], "Specifying the coordinate system": [[189, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[189, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[189, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[189, "hitachi-csv"]], "Frequency Domain Devices": [[189, "frequency-domain-devices"]], "BOXY (.txt)": [[189, "boxy-txt"]], "Custom Data Import": [[189, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[189, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[189, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[190, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[193, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[193, "load-audio-data"]], "Create a receptive field": [[193, "create-a-receptive-field"]], "Simulate a neural response": [[193, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[193, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[193, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[193, "using-different-regularization-types"]], "Compare model performance": [[193, "compare-model-performance"]], "Decoding (MVPA)": [[194, "decoding-mvpa"]], "Design philosophy": [[194, "design-philosophy"], [849, "design-philosophy"]], "Transformation classes": [[194, "transformation-classes"]], "Scaler": [[194, "scaler"]], "Vectorizer": [[194, "vectorizer"]], "PSDEstimator": [[194, "psdestimator"]], "FilterEstimator": [[194, "filterestimator"]], "Spatial filters": [[194, "spatial-filters"]], "Common spatial pattern": [[194, "common-spatial-pattern"]], "Examples": [[194, null], [194, null], [194, null], [194, null], [194, null], [253, "examples"], [253, "id4"], [253, "id7"], [253, "id10"], [253, "id13"], [253, "id16"], [253, "id19"], [253, "id22"], [253, "id25"], [253, "id29"], [253, "id32"], [253, "id35"], [253, "id38"], [253, "id41"], [253, "id44"], [253, "id47"], [253, "id50"], [253, "id53"], [253, "id56"], [253, "id59"], [253, "id62"], [253, "id65"], [253, "id68"], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null], [848, null]], "Source power comodulation (SPoC)": [[194, "source-power-comodulation-spoc"]], "xDAWN": [[194, "xdawn"]], "Effect-matched spatial filtering": [[194, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[194, "patterns-vs-filters"]], "Decoding over time": [[194, "decoding-over-time"]], "Temporal decoding": [[194, "temporal-decoding"]], "Temporal generalization": [[194, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[194, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[194, "source-space-decoding"]], "Overview of artifact detection": [[197, "overview-of-artifact-detection"]], "What are artifacts?": [[197, "what-are-artifacts"]], "What to do about artifacts": [[197, "what-to-do-about-artifacts"]], "Artifact detection": [[197, "artifact-detection"]], "Low-frequency drifts": [[197, "low-frequency-drifts"]], "Power line noise": [[197, "power-line-noise"], [201, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[197, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[197, "ocular-artifacts-eog"]], "Handling bad channels": [[198, "handling-bad-channels"]], "Marking bad channels": [[198, "marking-bad-channels"], [847, "marking-bad-channels"]], "Blocking execution": [[198, null]], "When to look for bad channels": [[198, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[198, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[198, "interpolating-bad-channels"]], "How interpolation works": [[198, "how-interpolation-works"]], "Interpolation in MNE-Python": [[198, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[199, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[199, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[199, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[199, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[199, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[199, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[200, "background-information-on-filtering"]], "Problem statement": [[200, "problem-statement"]], "Filtering basics": [[200, "filtering-basics"]], "FIR Filters": [[200, "fir-filters"]], "Designing FIR filters": [[200, "designing-fir-filters"]], "Applying FIR filters": [[200, "applying-fir-filters"]], "IIR filters": [[200, "iir-filters"]], "Designing IIR filters": [[200, "designing-iir-filters"]], "Applying IIR filters": [[200, "applying-iir-filters"]], "Some pitfalls of filtering": [[200, "some-pitfalls-of-filtering"]], "Low-pass problems": [[200, "low-pass-problems"]], "High-pass problems": [[200, "high-pass-problems"]], "Baseline problems (or solutions?)": [[200, "baseline-problems-or-solutions"]], "Filtering defaults": [[200, "filtering-defaults"]], "Defaults in MNE-Python": [[200, "defaults-in-mne-python"]], "Defaults in MNE-C": [[200, "defaults-in-mne-c"]], "Defaults in other software": [[200, "defaults-in-other-software"]], "Reporting Filters": [[200, "reporting-filters"]], "Filter type": [[200, "filter-type"]], "Cutoff frequency": [[200, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[200, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[200, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[200, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[201, "filtering-and-resampling-data"]], "Background on filtering": [[201, "background-on-filtering"]], "Repairing artifacts by filtering": [[201, "repairing-artifacts-by-filtering"]], "Slow drifts": [[201, "slow-drifts"]], "Resampling": [[201, "resampling"]], "Best practices": [[201, "best-practices"], [204, "best-practices"]], "Repairing artifacts with regression": [[202, "repairing-artifacts-with-regression"]], "Prepare the data": [[202, "prepare-the-data"]], "Visualize the original data": [[202, "visualize-the-original-data"]], "Compute and apply EOG regression": [[202, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[202, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[202, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[202, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[203, "repairing-artifacts-with-ica"]], "What is ICA?": [[203, "what-is-ica"]], "ICA in MNE-Python": [[203, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[203, null]], "Example: EOG and ECG artifact repair": [[203, "example-eog-and-ecg-artifact-repair"], [205, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[203, "visualizing-the-artifacts"], [205, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[203, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[203, "fitting-ica"]], "Ignoring the time domain": [[203, null]], "Looking at the ICA solution": [[203, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[203, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[203, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[203, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[203, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[203, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[204, "background-on-projectors-and-projections"]], "What is a projection?": [[204, "what-is-a-projection"]], "Example: projection as noise reduction": [[204, "example-projection-as-noise-reduction"]], "Terminology": [[204, null]], "Signal-space projection (SSP)": [[204, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[204, "projectors-in-mne-python"]], "Computing projectors": [[204, "computing-projectors"]], "Visualizing the effect of projectors": [[204, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[204, "loading-and-saving-projectors"]], "Adding and removing projectors": [[204, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[204, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[205, "repairing-artifacts-with-ssp"]], "What is SSP?": [[205, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[205, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[205, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[205, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[205, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[205, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[205, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[205, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[205, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[205, null]], "Background": [[206, "background"]], "Setting or changing the reference channel": [[206, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[206, "setting-average-reference"]], "Creating the average reference as a projector": [[206, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[206, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[206, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[206, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[207, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[207, "hpi-frequencies"]], "Estimating continuous head position": [[207, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[207, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[207, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[208, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[208, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[208, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[208, "spatiotemporal-sss-tsss"]], "Movement compensation": [[208, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[208, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[209, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[209, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[209, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[209, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[209, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[209, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[209, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[209, "removing-heart-rate-from-signal"]], "Extract epochs": [[209, "extract-epochs"]], "View consistency of responses across trials": [[209, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[209, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[209, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[209, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[209, "compare-tapping-of-left-and-right-hands"]], "The Raw data structure: continuous data": [[212, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[212, "loading-continuous-data"]], "Datasets in MNE-Python": [[212, null]], "Querying the Raw object": [[212, "querying-the-raw-object"]], "Attributes vs. Methods": [[212, null]], "The Raw.info attribute": [[212, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[212, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[212, null]], "Modifying Raw objects": [[212, "modifying-raw-objects"]], "len(raw)": [[212, null]], "Long channel names": [[212, null]], "Extracting data from Raw objects": [[212, "extracting-data-from-raw-objects"]], "Extracting data by index": [[212, "extracting-data-by-index"]], "Extracting channels by name": [[212, "extracting-channels-by-name"]], "Extracting channels by type": [[212, "extracting-channels-by-type"]], "The Raw.get_data() method": [[212, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[212, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[212, "exporting-and-saving-raw-objects"]], "Working with events": [[213, "working-with-events"]], "Reading and writing events from/to a file": [[213, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[213, "subselecting-and-combining-events"]], "Including/excluding events": [[213, null]], "Mapping Event IDs to trial descriptors": [[213, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[213, "plotting-events"]], "Plotting events and raw data together": [[213, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[213, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[214, "annotating-continuous-data"]], "Creating annotations programmatically": [[214, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[214, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[214, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[214, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[214, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[215, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[215, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[215, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[215, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[215, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[218, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[218, "creating-info-objects"]], "Info objects": [[218, null]], "Info consistency": [[218, null]], "Creating Raw objects": [[218, "creating-raw-objects"]], "Units": [[218, null]], "Creating Epochs objects": [[218, "creating-epochs-objects"]], "Creating Evoked Objects": [[218, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[219, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[219, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[219, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[219, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[219, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[219, "create-source-space-data-with-known-signals"]], "Plot original signals": [[219, "plot-original-signals"]], "Simulate sensor-space signals": [[219, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[219, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[219, "exercises"], [228, "exercises"]], "DICS for power mapping": [[220, "dics-for-power-mapping"]], "Setup": [[220, "setup"]], "Data simulation": [[220, "data-simulation"]], "Power mapping": [[220, "power-mapping"]], "Statistical inference": [[223, "statistical-inference"]], "Hypothesis testing": [[223, "hypothesis-testing"]], "Null hypothesis": [[223, "null-hypothesis"]], "Parametric tests": [[223, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[223, "hat-variance-adjustment"], [223, "id3"]], "Non-parametric tests": [[223, "non-parametric-tests"]], "Multiple comparisons": [[223, "multiple-comparisons"]], "Bonferroni correction": [[223, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[223, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[223, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[223, "clustering"]], "Effect size": [[223, null]], "Defining the adjacency matrix": [[223, "defining-the-adjacency-matrix"]], "Standard clustering": [[223, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[223, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[223, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[223, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[223, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[223, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[224, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[225, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[225, "set-parameters"], [227, "set-parameters"], [228, "set-parameters"], [231, "set-parameters"], [232, "set-parameters"], [233, "set-parameters"]], "Define adjacency for statistics": [[225, "define-adjacency-for-statistics"]], "Compute statistic": [[225, "compute-statistic"], [226, "compute-statistic"], [231, "compute-statistic"], [232, "compute-statistic"]], "View time-frequency plots": [[225, "view-time-frequency-plots"], [226, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[226, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[227, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[227, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[227, "setup-repeated-measures-anova"]], "Sample data layout": [[227, "id1"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[227, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[228, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[228, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[228, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[228, "compute-permutation-statistic"]], "Visualize clusters": [[228, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[228, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[231, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[231, "read-epochs-for-all-channels-removing-a-bad-one"], [233, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[231, "transform-to-source-space"], [233, "transform-to-source-space"]], "Transform to common cortical space": [[231, "transform-to-common-cortical-space"], [233, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[231, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[231, "selecting-significant-clusters"]], "Visualize the clusters": [[231, "visualize-the-clusters"], [232, "visualize-the-clusters"], [233, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[232, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[233, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[233, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[233, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[236, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[236, "visualizing-spectrum-objects"]], "Migrating legacy code": [[236, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[236, "id4"]], "Frequency and time-frequency sensor analysis": [[237, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[237, "frequency-analysis"], [238, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[237, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[237, "inspect-power"]], "Joint Plot": [[237, "joint-plot"]], "Inspect ITC": [[237, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[238, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[238, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[238, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[238, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[238, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[238, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[238, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[238, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[238, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[238, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[238, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[238, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[238, "debriefing"]], "Bonus exercises": [[238, "bonus-exercises"]], "Effect of trial duration on SNR": [[238, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[238, "time-resolved-snr"]], "General bibliography": [[241, "general-bibliography"]], "Papers citing MNE-Python": [[242, "papers-citing-mne-python"]], "Connectivity Estimation": [[243, "connectivity-estimation"]], "Covariance computation": [[244, "covariance-computation"]], "Creating data objects from arrays": [[245, "creating-data-objects-from-arrays"]], "Datasets": [[246, "datasets"]], "Decoding": [[247, "decoding"]], "Events": [[248, "events"]], "Exporting": [[249, "exporting"]], "File I/O": [[250, "file-i-o"]], "Forward Modeling": [[251, "forward-modeling"]], "Funding and other support": [[252, "funding-and-other-support"]], "Institutional partners": [[252, "institutional-partners"]], "Current partners": [[252, "current-partners"], [859, "current-partners"]], "Former partners": [[252, "former-partners"], [859, "former-partners"]], "Command line tools using Python": [[253, "command-line-tools-using-python"]], "mne anonymize": [[253, "mne-anonymize"]], "Anonymize raw fif file.": [[253, "anonymize-raw-fif-file"]], "Options": [[253, "options"], [253, "id3"], [253, "id6"], [253, "id9"], [253, "id12"], [253, "id15"], [253, "id18"], [253, "id21"], [253, "id24"], [253, "id28"], [253, "id31"], [253, "id34"], [253, "id37"], [253, "id40"], [253, "id43"], [253, "id46"], [253, "id49"], [253, "id52"], [253, "id55"], [253, "id58"], [253, "id61"], [253, "id64"], [253, "id67"]], "mne browse_raw": [[253, "mne-browse-raw"]], "Browse raw data.": [[253, "browse-raw-data"]], "mne bti2fiff": [[253, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[253, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[253, "notes"], [253, "id26"]], "mne clean_eog_ecg": [[253, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[253, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[253, "mne-compare-fiff"]], "Compare FIFF files.": [[253, "compare-fiff-files"]], "mne compute_proj_ecg": [[253, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[253, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[253, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[253, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[253, "mne-coreg"]], "Open the coregistration GUI.": [[253, "open-the-coregistration-gui"]], "mne flash_bem": [[253, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[253, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[253, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[253, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[253, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[253, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[253, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[253, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[253, "mne-maxfilter"]], "Apply MaxFilter.": [[253, "apply-maxfilter"]], "mne prepare_bem_model": [[253, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[253, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[253, "mne-report"]], "Create mne report for a folder.": [[253, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[253, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[253, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[253, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[253, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[253, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[253, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[253, "mne-show-info"]], "Show measurement info from .fif file.": [[253, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[253, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[253, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[253, "mne-sys-info"]], "Show system information.": [[253, "show-system-information"]], "mne watershed_bem": [[253, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[253, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[253, "mne-what"]], "Check type of FIF file.": [[253, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[254, "mne-acqparserfif"]], "mne.Annotations": [[255, "mne-annotations"]], "Examples using mne.Annotations": [[255, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[256, "mne-baseepochs"]], "mne.BiHemiLabel": [[257, "mne-bihemilabel"]], "mne.Covariance": [[258, "mne-covariance"]], "Examples using mne.Covariance": [[258, "examples-using-mne-covariance"]], "mne.Dipole": [[259, "mne-dipole"]], "Examples using mne.Dipole": [[259, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[260, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[260, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[261, "mne-epochs"]], "Examples using mne.Epochs": [[261, "examples-using-mne-epochs"]], "mne.EpochsArray": [[262, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[262, "examples-using-mne-epochsarray"]], "mne.Evoked": [[263, "mne-evoked"]], "Examples using mne.Evoked": [[263, "examples-using-mne-evoked"]], "mne.EvokedArray": [[264, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[264, "examples-using-mne-evokedarray"]], "mne.Forward": [[265, "mne-forward"]], "Examples using mne.Forward": [[265, "examples-using-mne-forward"]], "mne.Info": [[266, "mne-info"]], "Examples using mne.Info": [[266, "examples-using-mne-info"]], "mne.Label": [[267, "mne-label"]], "Examples using mne.Label": [[267, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[268, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[268, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[269, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[269, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[270, "mne-projection"]], "Examples using mne.Projection": [[270, "examples-using-mne-projection"]], "mne.Report": [[271, "mne-report"]], "Examples using mne.Report": [[271, "examples-using-mne-report"]], "mne.SourceEstimate": [[272, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[272, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[273, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[273, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[274, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[274, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[275, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[275, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[276, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[276, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[277, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[278, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[278, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[279, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[280, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[280, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[281, "mne-apply-forward"]], "mne.apply_forward_raw": [[282, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[283, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[284, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[284, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[285, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[285, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[286, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[287, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[287, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[288, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[289, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[289, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[290, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[290, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[291, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[291, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[292, "mne-beamformer-apply-lcmv-epochs"]], "Examples using mne.beamformer.apply_lcmv_epochs": [[292, "examples-using-mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[293, "mne-beamformer-apply-lcmv-raw"]], "Examples using mne.beamformer.apply_lcmv_raw": [[293, "examples-using-mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[294, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[294, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[295, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[295, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[296, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[296, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[297, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[297, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[298, "mne-beamformer-read-beamformer"]], "mne.bem.ConductorModel": [[299, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[299, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[300, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[301, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[302, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[303, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[304, "mne-bem-make-flash-bem"]], "Examples using mne.bem.make_flash_bem": [[304, "examples-using-mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[305, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[306, "mne-bem-make-watershed-bem"]], "Examples using mne.bem.make_watershed_bem": [[306, "examples-using-mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[307, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[307, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[308, "mne-channel-type"]], "Examples using mne.channel_type": [[308, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[309, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[309, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[310, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[310, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[311, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[311, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[312, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[313, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[313, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[314, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[315, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[315, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[316, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[317, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[318, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[319, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[319, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[320, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[320, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[321, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[321, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[322, "mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[323, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[323, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[324, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[325, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[325, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[326, "mne-channels-read-ch-adjacency"]], "Examples using mne.channels.read_ch_adjacency": [[326, "examples-using-mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[327, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[327, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[328, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[329, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[330, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[331, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[331, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[332, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[333, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[334, "mne-channels-read-dig-polhemus-isotrak"]], "Examples using mne.channels.read_dig_polhemus_isotrak": [[334, "examples-using-mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[335, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[335, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[336, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[337, "mne-channels-rename-channels"]], "mne.chpi.compute_chpi_amplitudes": [[338, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[338, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[339, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[339, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[340, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[340, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[341, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[341, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[342, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[342, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[343, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[344, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[344, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[345, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[345, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[346, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[346, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[347, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[348, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[348, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[349, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[349, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[350, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[350, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[351, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[351, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[352, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[352, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[353, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[353, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[354, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[354, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[355, "mne-compute-rank"]], "Examples using mne.compute_rank": [[355, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[356, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[356, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[357, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[357, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[358, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[358, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[359, "mne-concatenate-events"]], "mne.concatenate_raws": [[360, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[360, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[361, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[361, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[362, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[362, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[363, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[363, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[364, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[364, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.cov.compute_whitener": [[365, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[366, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[367, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[367, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[368, "mne-create-default-subject"]], "mne.create_info": [[369, "mne-create-info"]], "Examples using mne.create_info": [[369, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[370, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[371, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[372, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[373, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[374, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[375, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[376, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[377, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[378, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[378, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[379, "mne-datasets-erp-core-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[380, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[381, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[382, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[383, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[384, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[384, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[385, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[386, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[387, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[388, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[389, "mne-datasets-kiloword-data-path"]], "Examples using mne.datasets.kiloword.data_path": [[389, "examples-using-mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[390, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[391, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[392, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[393, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[394, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[395, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.refmeg_noise.data_path": [[396, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[397, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[397, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[398, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[398, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[399, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[400, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[401, "mne-datasets-spm-face-data-path"]], "Examples using mne.datasets.spm_face.data_path": [[401, "examples-using-mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[402, "mne-datasets-ssvep-data-path"]], "mne.datasets.visual_92_categories.data_path": [[403, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[404, "mne-decimate-surface"]], "mne.decoding.CSP": [[405, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[405, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[406, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[406, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[407, "mne-decoding-filterestimator"]], "Examples using mne.decoding.FilterEstimator": [[407, "examples-using-mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[408, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[408, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[409, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[409, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[410, "mne-decoding-psdestimator"]], "Examples using mne.decoding.PSDEstimator": [[410, "examples-using-mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[411, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[411, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[412, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[412, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[413, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[413, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[414, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[414, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[415, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[415, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[416, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[417, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[417, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[418, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[419, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[419, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[420, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[420, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[421, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[421, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[422, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[422, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[423, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[423, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[424, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[424, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[425, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[425, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[426, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[426, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[427, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[428, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[428, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[429, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[429, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[430, "mne-equalize-channels"]], "mne.event.define_target_events": [[431, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[431, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[432, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[433, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[434, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[434, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[435, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[436, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[437, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[438, "mne-export-export-raw"]], "mne.extract_label_time_course": [[439, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[439, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[440, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[440, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[441, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[441, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[442, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[443, "mne-filter-filter-data"]], "Examples using mne.filter.filter_data": [[443, "examples-using-mne-filter-filter-data"]], "mne.filter.notch_filter": [[444, "mne-filter-notch-filter"]], "mne.filter.resample": [[445, "mne-filter-resample"]], "Examples using mne.filter.resample": [[445, "examples-using-mne-filter-resample"]], "mne.find_events": [[446, "mne-find-events"]], "Examples using mne.find_events": [[446, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[447, "mne-find-stim-steps"]], "mne.fit_dipole": [[448, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[448, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[449, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[450, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[451, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[452, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[453, "mne-get-config"]], "Examples using mne.get_config": [[453, "examples-using-mne-get-config"]], "mne.get_config_path": [[454, "mne-get-config-path"]], "Examples using mne.get_config_path": [[454, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[455, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[456, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[457, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[457, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[458, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[458, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[459, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[460, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[461, "mne-grade-to-vertices"]], "mne.grand_average": [[462, "mne-grand-average"]], "Examples using mne.grand_average": [[462, "examples-using-mne-grand-average"]], "mne.grow_labels": [[463, "mne-grow-labels"]], "mne.gui.coregistration": [[464, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[464, "examples-using-mne-gui-coregistration"]], "mne.gui.locate_ieeg": [[465, "mne-gui-locate-ieeg"]], "Examples using mne.gui.locate_ieeg": [[465, "examples-using-mne-gui-locate-ieeg"]], "mne.head_to_mni": [[466, "mne-head-to-mni"]], "mne.head_to_mri": [[467, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[468, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[468, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[469, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[469, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[470, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[470, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[471, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[471, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[472, "mne-io-baseraw"]], "mne.io.Raw": [[473, "mne-io-raw"]], "Examples using mne.io.Raw": [[473, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[474, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[474, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[475, "mne-io-anonymize-info"]], "mne.io.kit.read_mrk": [[476, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[477, "mne-io-read-fiducials"]], "mne.io.read_info": [[478, "mne-io-read-info"]], "Examples using mne.io.read_info": [[478, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[479, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[479, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[480, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[480, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[481, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[481, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[482, "mne-io-read-raw-boxy"]], "Examples using mne.io.read_raw_boxy": [[482, "examples-using-mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[483, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[483, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[484, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[484, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[485, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[485, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[486, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[486, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[487, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[488, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[488, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[489, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[489, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[490, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[490, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[491, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[491, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_fieldtrip": [[492, "mne-io-read-raw-fieldtrip"]], "Examples using mne.io.read_raw_fieldtrip": [[492, "examples-using-mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[493, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[493, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_gdf": [[494, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[494, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[495, "mne-io-read-raw-hitachi"]], "Examples using mne.io.read_raw_hitachi": [[495, "examples-using-mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[496, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[496, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[497, "mne-io-read-raw-nedf"]], "mne.io.read_raw_nicolet": [[498, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[498, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[499, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[499, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[500, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[500, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_persyst": [[501, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[501, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[502, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[502, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[503, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[504, "mne-io-write-fiducials"]], "mne.label.select_sources": [[505, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[505, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[506, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[506, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[507, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[507, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[508, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[508, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[509, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[509, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[510, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[510, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[511, "mne-make-field-map"]], "Examples using mne.make_field_map": [[511, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[512, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[512, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[513, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[513, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[514, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[514, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[515, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[515, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[516, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[516, "examples-using-mne-make-sphere-model"]], "mne.merge_events": [[517, "mne-merge-events"]], "Examples using mne.merge_events": [[517, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[518, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[518, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[519, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[519, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[520, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[520, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[521, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[521, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[522, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[522, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[523, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[524, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[525, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[525, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[526, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[526, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[527, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[528, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[528, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[529, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[529, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[530, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[530, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[531, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[531, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[532, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[533, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[533, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[534, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[534, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[535, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[535, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[536, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[536, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[537, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[538, "mne-morph-labels"]], "mne.morph_source_spaces": [[539, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[539, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[540, "mne-open-docs"]], "mne.open_report": [[541, "mne-open-report"]], "Examples using mne.open_report": [[541, "examples-using-mne-open-report"]], "mne.parse_config": [[542, "mne-parse-config"]], "mne.pick_channels": [[543, "mne-pick-channels"]], "Examples using mne.pick_channels": [[543, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[544, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[545, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[546, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[546, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[547, "mne-pick-events"]], "Examples using mne.pick_events": [[547, "examples-using-mne-pick-events"]], "mne.pick_info": [[548, "mne-pick-info"]], "Examples using mne.pick_info": [[548, "examples-using-mne-pick-info"]], "mne.pick_types": [[549, "mne-pick-types"]], "Examples using mne.pick_types": [[549, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[550, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[550, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[551, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[551, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[552, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[552, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[553, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[553, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[554, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[555, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[555, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[556, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[556, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[557, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[557, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[558, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[559, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[559, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[560, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[560, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[561, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[561, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[562, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[563, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[564, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[564, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[565, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[565, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.corrmap": [[566, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[566, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[567, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[567, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[568, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[568, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[569, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[569, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[570, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.find_bad_channels_maxwell": [[571, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[571, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[572, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[572, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[573, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[573, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[574, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[574, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[575, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[576, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[577, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "Examples using mne.preprocessing.ieeg.project_sensors_onto_brain": [[577, "examples-using-mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.infomax": [[578, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[579, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[579, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[580, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[580, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[581, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[582, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[582, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[583, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[583, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[584, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[584, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[585, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[586, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[586, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[587, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[587, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[588, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[588, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[589, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[590, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[591, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[592, "mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[593, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[594, "mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[595, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[596, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[597, "mne-random-parcellation"]], "mne.read_annotations": [[598, "mne-read-annotations"]], "Examples using mne.read_annotations": [[598, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[599, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[599, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[600, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[600, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[601, "mne-read-cov"]], "Examples using mne.read_cov": [[601, "examples-using-mne-read-cov"]], "mne.read_dipole": [[602, "mne-read-dipole"]], "Examples using mne.read_dipole": [[602, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[603, "mne-read-epochs"]], "Examples using mne.read_epochs": [[603, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[604, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[604, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[605, "mne-read-epochs-fieldtrip"]], "Examples using mne.read_epochs_fieldtrip": [[605, "examples-using-mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[606, "mne-read-epochs-kit"]], "Examples using mne.read_epochs_kit": [[606, "examples-using-mne-read-epochs-kit"]], "mne.read_events": [[607, "mne-read-events"]], "Examples using mne.read_events": [[607, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[608, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[609, "mne-read-evoked-fieldtrip"]], "Examples using mne.read_evoked_fieldtrip": [[609, "examples-using-mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[610, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[610, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[611, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[612, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[612, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[613, "mne-read-freesurfer-lut"]], "mne.read_label": [[614, "mne-read-label"]], "Examples using mne.read_label": [[614, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[615, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[615, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[616, "mne-read-lta"]], "mne.read_morph_map": [[617, "mne-read-morph-map"]], "mne.read_proj": [[618, "mne-read-proj"]], "Examples using mne.read_proj": [[618, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[619, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[620, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[620, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[621, "mne-read-source-morph"]], "Examples using mne.read_source_morph": [[621, "examples-using-mne-read-source-morph"]], "mne.read_source_spaces": [[622, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[622, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[623, "mne-read-surface"]], "Examples using mne.read_surface": [[623, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[624, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[624, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[625, "mne-read-trans"]], "Examples using mne.read_trans": [[625, "examples-using-mne-read-trans"]], "mne.read_tri": [[626, "mne-read-tri"]], "mne.read_vectorview_selection": [[627, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[627, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[628, "mne-rename-channels"]], "mne.scale_bem": [[629, "mne-scale-bem"]], "mne.scale_labels": [[630, "mne-scale-labels"]], "mne.scale_mri": [[631, "mne-scale-mri"]], "Examples using mne.scale_mri": [[631, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[632, "mne-scale-source-space"]], "mne.sensitivity_map": [[633, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[633, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[634, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[634, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[635, "mne-set-cache-dir"]], "mne.set_config": [[636, "mne-set-config"]], "Examples using mne.set_config": [[636, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[637, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[637, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[638, "mne-set-log-file"]], "mne.set_log_level": [[639, "mne-set-log-level"]], "Examples using mne.set_log_level": [[639, "examples-using-mne-set-log-level"]], "mne.setup_source_space": [[640, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[640, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[641, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[641, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[642, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[642, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[643, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[644, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[644, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[645, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[645, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[646, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[646, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[647, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[647, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[648, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[648, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[649, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[649, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[650, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[650, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[651, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[651, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[652, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[652, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[653, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[654, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[654, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[655, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[656, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[656, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[657, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[657, "id3"]], "Examples using mne.simulation.simulate_raw": [[657, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[658, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[658, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[659, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[659, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[660, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[660, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[661, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[662, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[663, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[664, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[664, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[665, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[666, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[667, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[668, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[669, "mne-split-label"]], "mne.stats.bonferroni_correction": [[670, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[670, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[671, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[671, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[672, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[672, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[673, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[673, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[674, "mne-stats-f-oneway"]], "Examples using mne.stats.f_oneway": [[674, "examples-using-mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[675, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[675, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[676, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[676, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[677, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[677, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[678, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[678, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[679, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[679, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[680, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[680, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[681, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[681, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[682, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[682, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[683, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[683, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[684, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[684, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[685, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[685, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[686, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[687, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[687, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[688, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[688, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[689, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[690, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[690, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[691, "mne-sys-info"]], "Examples using mne.sys_info": [[691, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[692, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[692, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[693, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[693, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[694, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[694, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsTFR": [[695, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[695, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[696, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[696, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.csd_array_fourier": [[697, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[698, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[699, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[700, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[700, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[701, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[701, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[702, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[702, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[703, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[703, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[704, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[705, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[705, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[706, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[707, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[708, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[708, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[709, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[710, "mne-time-frequency-psd-array-multitaper"]], "Examples using mne.time_frequency.psd_array_multitaper": [[710, "examples-using-mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[711, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[711, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[712, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[713, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[714, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[715, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[716, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[717, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[718, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[719, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[719, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[720, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[721, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[722, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[722, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[723, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[723, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[724, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[724, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[725, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[726, "mne-transform-surface-to"]], "mne.transforms.Transform": [[727, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[728, "mne-transforms-apply-volume-registration"]], "Examples using mne.transforms.apply_volume_registration": [[728, "examples-using-mne-transforms-apply-volume-registration"]], "mne.transforms.compute_volume_registration": [[729, "mne-transforms-compute-volume-registration"]], "Examples using mne.transforms.compute_volume_registration": [[729, "examples-using-mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[730, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[731, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[731, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[732, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[733, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[733, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[734, "mne-use-log-level"]], "Examples using mne.use_log_level": [[734, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[735, "mne-utils-deprecated"]], "mne.utils.warn": [[736, "mne-utils-warn"]], "mne.verbose": [[737, "mne-verbose"]], "mne.vertex_to_mni": [[738, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[738, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[739, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[739, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[740, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[740, "examples-using-mne-viz-clickableimage"]], "mne.viz.Figure3D": [[741, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[742, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[743, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[743, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[744, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[744, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[745, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[746, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[747, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[748, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[748, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.get_3d_backend": [[749, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[750, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[750, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[751, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[752, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[752, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[753, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[754, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[755, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[755, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[756, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[756, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[757, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[757, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[758, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[758, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[759, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[759, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[760, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[760, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[761, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[761, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[762, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[762, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[763, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[763, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[764, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[764, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[765, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[766, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[766, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[767, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[767, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[768, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[769, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[770, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[770, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[771, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[772, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[772, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[773, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[774, "mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[775, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[775, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[776, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[777, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[777, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[778, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[779, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[779, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[780, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[780, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[781, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[781, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[782, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[783, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[784, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[785, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[786, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[787, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[787, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[788, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[789, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[790, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[790, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[791, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[791, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[792, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[793, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[794, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[795, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[796, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[796, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[797, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[797, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[798, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[798, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[799, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[800, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[801, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[801, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[802, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[802, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[803, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[804, "mne-viz-set-3d-backend"]], "Examples using mne.viz.set_3d_backend": [[804, "examples-using-mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[805, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[806, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[806, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[807, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[807, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[808, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[809, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[809, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.use_3d_backend": [[810, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[811, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[811, "examples-using-mne-viz-use-browser-backend"]], "mne.warp_montage_volume": [[812, "mne-warp-montage-volume"]], "Examples using mne.warp_montage_volume": [[812, "examples-using-mne-warp-montage-volume"]], "mne.what": [[813, "mne-what"]], "mne.write_bem_solution": [[814, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[815, "mne-write-bem-surfaces"]], "mne.write_cov": [[816, "mne-write-cov"]], "Examples using mne.write_cov": [[816, "examples-using-mne-write-cov"]], "mne.write_events": [[817, "mne-write-events"]], "Examples using mne.write_events": [[817, "examples-using-mne-write-events"]], "mne.write_evokeds": [[818, "mne-write-evokeds"]], "Examples using mne.write_evokeds": [[818, "examples-using-mne-write-evokeds"]], "mne.write_forward_solution": [[819, "mne-write-forward-solution"]], "Examples using mne.write_forward_solution": [[819, "examples-using-mne-write-forward-solution"]], "mne.write_head_bem": [[820, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[820, "examples-using-mne-write-head-bem"]], "mne.write_label": [[821, "mne-write-label"]], "mne.write_labels_to_annot": [[822, "mne-write-labels-to-annot"]], "mne.write_proj": [[823, "mne-write-proj"]], "Examples using mne.write_proj": [[823, "examples-using-mne-write-proj"]], "mne.write_source_spaces": [[824, "mne-write-source-spaces"]], "mne.write_surface": [[825, "mne-write-surface"]], "Examples using mne.write_surface": [[825, "examples-using-mne-write-surface"]], "mne.write_trans": [[826, "mne-write-trans"]], "Glossary": [[827, "glossary"]], "MNE-Python Homepage": [[828, "mne-python-homepage"]], "Advanced setup": [[829, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[829, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[829, null]], "Installing to a headless Linux server": [[829, "installing-to-a-headless-linux-server"]], "Using the development version": [[829, "using-the-development-version"]], "Other Python distributions": [[829, "other-python-distributions"]], "GPU acceleration with CUDA": [[829, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[829, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[829, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[829, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[830, "testing-your-installation"]], "Contributing guide": [[831, "contributing-guide"]], "Overview of contribution process": [[831, "overview-of-contribution-process"]], "Setting up your local development environment": [[831, "setting-up-your-local-development-environment"]], "Configuring git": [[831, "configuring-git"]], "GNU Make": [[831, "gnu-make"]], "Forking the MNE-Python repository": [[831, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[831, "creating-the-virtual-environment"]], "Basic git commands": [[831, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[831, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[831, "mne-python-coding-conventions"]], "General requirements": [[831, "general-requirements"]], "All new functionality must have test coverage": [[831, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[831, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[831, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[831, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[831, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[831, "first-time-contributors"]], "Recurring contributors": [[831, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[831, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[831, "make-tests-fast-and-thorough"]], "Code style": [[831, "code-style"]], "Adhere to standard Python style guidelines": [[831, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[831, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[831, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[831, "cross-reference-everywhere"]], "Other style guidance": [[831, "other-style-guidance"]], "Code organization": [[831, "code-organization"]], "Importing": [[831, "importing"]], "Return types": [[831, "return-types"]], "Running the test suite": [[831, "running-the-test-suite"]], "Building the documentation": [[831, "building-the-documentation"]], "Modifying command-line tools": [[831, "modifying-command-line-tools"]], "GitHub workflow": [[831, "github-workflow"]], "Installing FreeSurfer": [[832, "installing-freesurfer"]], "Installing MNE-Python": [[833, "installing-mne-python"]], "MNE-Python installers": [[834, "mne-python-installers"]], "VS Code Setup": [[834, "vs-code-setup"]], "Install via pip or conda": [[835, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[835, "installing-mne-python-with-all-dependencies"]], "Installing a minimal MNE-Python with core functionality only": [[835, "installing-a-minimal-mne-python-with-core-functionality-only"]], "Installing a minimal MNE-Python with EEGLAB I/O support": [[835, "installing-a-minimal-mne-python-with-eeglab-i-o-support"]], "Installing MNE-Python for other scenarios": [[835, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[835, "python-ides"]], "Installing Python": [[836, "installing-python"]], "Installing MNE-C": [[837, "installing-mne-c"]], "System requirements": [[837, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[837, null]], "Downloading and Installing MNE-C": [[837, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[837, "configuring-mne-c"]], "Testing MNE-C installation": [[837, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[837, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[838, "overview-of-the-mne-tools-suite"]], "Related software": [[838, "related-software"]], "What should I install?": [[838, "what-should-i-install"]], "Getting help": [[838, "getting-help"], [852, "getting-help"]], "Updating MNE-Python": [[839, "updating-mne-python"]], "Upgrading MNE-Python only": [[839, "upgrading-mne-python-only"]], "Upgrading all packages": [[839, "upgrading-all-packages"]], "Upgrading to the development version": [[839, "upgrading-to-the-development-version"]], "Inverse Solutions": [[840, "inverse-solutions"]], "Logging and Configuration": [[841, "logging-and-configuration"]], "Martinos Center setup": [[842, "martinos-center-setup"]], "MNE with CPP": [[843, "mne-with-cpp"]], "Most-used classes": [[844, "most-used-classes"]], "MRI Processing": [[845, "mri-processing"]], "How to cite MNE-Python": [[846, "how-to-cite-mne-python"]], "Citing the software": [[846, "citing-the-software"]], "Citing the inverse imaging algorithms": [[846, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[846, "citing-other-algorithms"]], "The typical M/EEG workflow": [[847, "the-typical-m-eeg-workflow"]], "Overview": [[847, "overview"], [857, "overview"]], "Artifact suppression": [[847, "artifact-suppression"]], "SSP": [[847, "ssp"]], "ICA": [[847, "ica"]], "Epoching and evoked data": [[847, "epoching-and-evoked-data"]], "Rejection using annotations": [[847, "rejection-using-annotations"]], "Source localization": [[847, "source-localization"]], "Anatomical information": [[847, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[847, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[847, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[847, "id9"]], "Creating the BEM model meshes": [[847, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[847, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[847, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[847, "aligning-coordinate-frames"]], "Computing the forward solution": [[847, "computing-the-forward-solution"], [854, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[847, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[847, "calculating-the-inverse-operator"]], "Creating source estimates": [[847, "creating-source-estimates"]], "Group analyses": [[847, "group-analyses"]], "Datasets Overview": [[848, "datasets-overview"]], "Sample": [[848, "sample"]], "Trigger codes for the sample data set.": [[848, "id19"]], "Contents of the data set": [[848, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[848, "id20"]], "Overview of the contents of the subjects/sample directory.": [[848, "id21"]], "Brainstorm": [[848, "brainstorm"]], "Auditory": [[848, "auditory"]], "Resting state": [[848, "resting-state"]], "Median nerve": [[848, "median-nerve"]], "SPM faces": [[848, "spm-faces"]], "EEGBCI motor imagery": [[848, "eegbci-motor-imagery"]], "Somatosensory": [[848, "somatosensory"]], "Multimodal": [[848, "multimodal"]], "fNIRS motor": [[848, "fnirs-motor"]], "High frequency SEF": [[848, "high-frequency-sef"]], "Visual 92 object categories": [[848, "visual-92-object-categories"]], "mTRF Dataset": [[848, "mtrf-dataset"]], "Kiloword dataset": [[848, "kiloword-dataset"]], "4D Neuroimaging / BTi dataset": [[848, "d-neuroimaging-bti-dataset"]], "OPM": [[848, "opm"]], "The Sleep PolySomnoGraphic Database": [[848, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[848, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[848, "miscellaneous-datasets"]], "fsaverage": [[848, "fsaverage"]], "Infant template MRIs": [[848, "infant-template-mris"]], "ECoG Dataset": [[848, "ecog-dataset"]], "sEEG Dataset": [[848, "seeg-dataset"]], "LIMO Dataset": [[848, "limo-dataset"]], "ERP CORE Dataset": [[848, "erp-core-dataset"]], "SSVEP": [[848, "ssvep"]], "Interactive versus scripted analysis": [[849, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[849, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[849, "submodule-based-organization"]], "(Mostly) unified API": [[849, "mostly-unified-api"]], "In-place operation": [[849, "in-place-operation"]], "MNE-Python Development": [[850, "mne-python-development"]], "Frequently Asked Questions (FAQ)": [[851, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[851, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[851, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[851, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[851, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[851, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[851, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[851, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[851, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[851, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[851, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[851, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[851, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[851, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[851, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[851, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[851, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[851, "my-watershed-bem-meshes-look-incorrect"]], "Project Governance": [[853, "project-governance"]], "The Project": [[853, "the-project"]], "Governance model": [[853, "governance-model"]], "BDFL": [[853, "bdfl"]], "Steering Council": [[853, "steering-council"], [859, "steering-council"]], "Council membership": [[853, "council-membership"]], "Conflict of interest": [[853, "conflict-of-interest"]], "Private communications of the Council": [[853, "private-communications-of-the-council"]], "Council decision making": [[853, "council-decision-making"]], "Institutional Partners and funding": [[853, "institutional-partners-and-funding"]], "Document history": [[853, "document-history"], [859, "document-history"]], "Acknowledgements": [[853, "acknowledgements"]], "License": [[853, "license"]], "Algorithms and other implementation details": [[854, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[854, "internal-representation-units"]], "Floating-point precision": [[854, "floating-point-precision"]], "Supported channel types": [[854, "supported-channel-types"]], "Supported data formats": [[854, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[854, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[854, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[854, "preloading-continuous-raw-data"]], "Preloading epoched data": [[854, "preloading-epoched-data"]], "Loading data explicitly": [[854, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[854, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[854, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[854, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[854, "signal-space-projection-ssp"]], "General concepts": [[854, "general-concepts"]], "Estimation of the noise subspace": [[854, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[854, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[854, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[854, "using-the-watershed-algorithm"]], "Using FLASH images": [[854, "using-flash-images"]], "Organizing MRI data into directories": [[854, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[854, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[854, "inspecting-the-meshes"]], "The forward solution": [[854, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[854, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[854, "id18"]], "The head and device coordinate systems": [[854, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[854, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[854, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[854, "creating-the-bem-meshes"]], "Topology checks": [[854, "topology-checks"]], "Computing the BEM geometry data": [[854, "computing-the-bem-geometry-data"]], "Coil geometry information": [[854, "coil-geometry-information"]], "The sensor coordinate system": [[854, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[854, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[854, "implemented-coil-geometries"]], "Normal coil descriptions.": [[854, "id20"]], "Accurate coil descriptions": [[854, "id21"]], "The coil definition file": [[854, "the-coil-definition-file"]], "Coil representation accuracies.": [[854, "id22"]], "Purpose": [[854, "purpose"]], "Implementation of software gradient compensation": [[854, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[854, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[854, "id23"]], "EEG forward solution in the sphere model": [[854, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[854, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[854, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[854, "the-linear-inverse-operator"]], "Regularization": [[854, "regularization"]], "Whitening and scaling": [[854, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[854, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[854, "computation-of-the-solution"]], "Noise normalization": [[854, "noise-normalization"]], "sLORETA": [[854, "sloreta"]], "eLORETA": [[854, "eloreta"]], "Predicted data": [[854, "predicted-data"]], "Cortical patch statistics": [[854, "cortical-patch-statistics"]], "Orientation constraints": [[854, "orientation-constraints"]], "Depth weighting": [[854, "depth-weighting"]], "Effective number of averages": [[854, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[854, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[854, "why-morphing"]], "The morphing maps": [[854, "the-morphing-maps"]], "About smoothing": [[854, "about-smoothing"]], "Documentation overview": [[855, "documentation-overview"]], "Getting started with Python": [[856, "getting-started-with-python"]], "MNE-MATLAB documentation": [[857, "mne-matlab-documentation"]], "High-level reading routines.": [[857, "id2"]], "Channel selection utilities.": [[857, "id3"]], "Coordinate transformation utilities.": [[857, "id4"]], "Basic reading routines.": [[857, "id5"]], "Writing routines.": [[857, "id6"]], "High-level data writing routines.": [[857, "id7"]], "Coil definition utilities.": [[857, "id8"]], "Routines for software gradient compensation and signal-space projection.": [[857, "id9"]], "High-level routines for reading MNE data files.": [[857, "id10"]], "High-level routines for writing MNE data files.": [[857, "id11"]], "Routines related to stc, w, and label files.": [[857, "id12"]], "Routines for reading FreeSurfer surfaces.": [[857, "id13"]], "Utility functions.": [[857, "id14"]], "Examples demonstrating the use of the toolbox.": [[857, "id15"]], "Some data structures": [[857, "some-data-structures"]], "FIFF constants.": [[857, "id16"]], "The tag structure.": [[857, "id17"]], "The taginfo structure.": [[857, "id18"]], "The directory structure.": [[857, "id19"]], "The id structure.": [[857, "id20"]], "The named matrix structure.": [[857, "id21"]], "The trans structure.": [[857, "id22"]], "The dig structure.": [[857, "id23"]], "The coildef structure. For more detailed information, see Coil geometry information.": [[857, "id24"]], "The ch structure.": [[857, "id25"]], "The proj structure.": [[857, "id26"]], "The comp structure.": [[857, "id27"]], "The meas info structure.": [[857, "id28"]], "The surf structure.": [[857, "id29"]], "The cov structure.": [[857, "id30"]], "The fwd structure.": [[857, "id31"]], "The inv structure. Note: The fields proj, whitener, reginv, and noisenorm are filled in by the routine mne_prepare_inverse_operator.": [[857, "id32"]], "On-line documentation for individual routines": [[857, "on-line-documentation-for-individual-routines"]], "Migrating from other analysis software": [[858, "migrating-from-other-analysis-software"]], "EEGLAB": [[858, "eeglab"]], "Potential pitfalls": [[858, "potential-pitfalls"]], "Current steering council and institutional partners": [[859, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[859, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[859, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[859, "institutional-partners"]], "Roadmap": [[860, "roadmap"]], "Page contents": [[860, "page-contents"]], "Open": [[860, "open"]], "Time-frequency visualization": [[860, "time-frequency-visualization"]], "Clustering statistics API": [[860, "clustering-statistics-api"]], "Access to open EEG/MEG databases": [[860, "access-to-open-eeg-meg-databases"]], "Integrate OpenMEEG via improved Python bindings": [[860, "integrate-openmeeg-via-improved-python-bindings"]], "In progress": [[860, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[860, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[860, "first-class-opm-support"]], "Deep source modeling": [[860, "deep-source-modeling"]], "Better sEEG/ECoG/DBS support": [[860, "better-seeg-ecog-dbs-support"]], "Time-frequency classes": [[860, "time-frequency-classes"]], "Pediatric and clinical MEG pipelines": [[860, "pediatric-and-clinical-meg-pipelines"]], "Statistics efficiency": [[860, "statistics-efficiency"]], "3D visualization": [[860, "d-visualization"]], "Documentation updates": [[860, "documentation-updates"]], "Completed": [[860, "completed"]], "Distributed computing support": [[860, "distributed-computing-support"]], "2D visualization": [[860, "id3"]], "Tutorial / example overhaul": [[860, "tutorial-example-overhaul"]], "Cluster computing images": [[860, "cluster-computing-images"]], "Python API Reference": [[862, "python-api-reference"]], "Reading raw data": [[863, "reading-raw-data"]], "Realtime": [[864, "realtime"]], "MNE-Report": [[865, "mne-report"]], "Sensor Space Data": [[866, "sensor-space-data"]], "Source Space Data": [[868, "source-space-data"]], "Statistics": [[869, "statistics"]], "Time-Frequency": [[870, "time-frequency"]], "What\u2019s new": [[872, "what-s-new"]], "Current (1.4.dev0)": [[872, "current-1-4-dev0"]], "Enhancements": [[872, "enhancements"], [872, "id2"], [872, "id5"], [872, "id9"], [872, "id12"], [872, "id16"], [872, "id20"], [872, "id24"], [872, "id28"]], "Bugs": [[872, "bugs"], [872, "id3"], [872, "id6"], [872, "id10"], [872, "id13"], [872, "id17"], [872, "id21"], [872, "id25"], [872, "id29"]], "API changes": [[872, "api-changes"], [872, "id4"], [872, "id7"], [872, "id14"], [872, "id18"], [872, "id22"], [872, "id26"], [872, "id30"]], "Version 1.3.0 (2022-12-21)": [[872, "version-1-3-0-2022-12-21"]], "Authors": [[872, "authors"], [872, "id8"], [872, "id11"], [872, "id15"], [872, "id19"], [872, "id23"], [872, "id27"], [872, "id31"], [872, "id32"], [872, "id42"], [872, "id46"], [872, "id50"], [872, "id54"], [872, "id58"], [872, "id62"], [872, "id66"], [872, "id70"], [872, "id74"], [872, "id78"], [872, "id81"], [872, "id84"], [872, "id87"], [872, "id89"], [872, "id91"], [872, "id93"], [872, "id94"]], "Version 1.2.0 (2022-10-11)": [[872, "version-1-2-0-2022-10-11"]], "Version 1.1.0 (2022-08-03)": [[872, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[872, "api-and-behavior-changes"]], "Version 1.0.0 (2022-03-21)": [[872, "version-1-0-0-2022-03-21"]], "Dependencies": [[872, "dependencies"]], "Version 0.24.0 (2021-11-03)": [[872, "version-0-24-0-2021-11-03"]], "Version 0.23.0 (2021-04-27)": [[872, "version-0-23-0-2021-04-27"]], "Version 0.22.0 (2020-12-17)": [[872, "version-0-22-0-2020-12-17"]], "Version 0.21 (2020-09-21)": [[872, "version-0-21-2020-09-21"]], "Version 0.20 (2020-03-27)": [[872, "version-0-20-2020-03-27"]], "Changelog": [[872, "changelog"], [872, "id33"], [872, "id36"], [872, "id39"], [872, "id43"], [872, "id47"], [872, "id51"], [872, "id55"], [872, "id59"], [872, "id63"], [872, "id67"], [872, "id71"], [872, "id75"], [872, "id79"], [872, "id82"], [872, "id85"], [872, "id88"], [872, "id90"], [872, "id92"]], "Bug": [[872, "bug"], [872, "id34"], [872, "id37"], [872, "id40"], [872, "id44"]], "API": [[872, "api"], [872, "id35"], [872, "id38"], [872, "id41"], [872, "id45"], [872, "id49"], [872, "id53"], [872, "id57"], [872, "id61"], [872, "id65"], [872, "id69"], [872, "id73"], [872, "id77"], [872, "id80"], [872, "id83"], [872, "id86"]], "Version 0.19 (2019-09-24)": [[872, "version-0-19-2019-09-24"]], "Version 0.18 (2019-05-19)": [[872, "version-0-18-2019-05-19"]], "Version 0.17 (2018-11-19)": [[872, "version-0-17-2018-11-19"]], "Version 0.16 (2018-05-01)": [[872, "version-0-16-2018-05-01"]], "Version 0.15 (2017-10-20)": [[872, "version-0-15-2017-10-20"]], "BUG": [[872, "id48"], [872, "id52"], [872, "id56"], [872, "id60"], [872, "id64"], [872, "id68"], [872, "id72"], [872, "id76"]], "Version 0.14 (2017-03-24)": [[872, "version-0-14-2017-03-24"]], "Version 0.13 (2016-09-27)": [[872, "version-0-13-2016-09-27"]], "Version 0.12 (2016-05-10)": [[872, "version-0-12-2016-05-10"]], "Version 0.11 (2015-12-24)": [[872, "version-0-11-2015-12-24"]], "Version 0.10 (2015-10-26)": [[872, "version-0-10-2015-10-26"]], "Version 0.9 (2015-05-22)": [[872, "version-0-9-2015-05-22"]], "Version 0.8 (2014-06-25)": [[872, "version-0-8-2014-06-25"]], "Version 0.7 (2013-11-26)": [[872, "version-0-7-2013-11-26"]], "Version 0.6 (2013-06-15)": [[872, "version-0-6-2013-06-15"]], "Version 0.5 (2012-12-27)": [[872, "version-0-5-2012-12-27"]], "Version 0.4 (2012-08-24)": [[872, "version-0-4-2012-08-24"]], "Version 0.3 (2012-03-23)": [[872, "version-0-3-2012-03-23"]], "Version 0.2 (2011-11-08)": [[872, "version-0-2-2011-11-08"]], "API changes summary": [[872, "api-changes-summary"]], "Version 0.1 (2011-09-23)": [[872, "version-0-1-2011-09-23"]]}, "indexentries": {"mne.datasets": [[246, "module-mne.datasets"]], "module": [[246, "module-mne.datasets"], [247, "module-mne.decoding"], [248, "module-mne.epochs"], [248, "module-mne.event"], [249, "module-mne.export"], [251, "module-mne.bem"], [840, "module-mne.beamformer"], [840, "module-mne.dipole"], [840, "module-mne.inverse_sparse"], [840, "module-mne.minimum_norm"], [841, "module-mne.cuda"], [841, "module-mne.utils"], [861, "module-mne.channels"], [861, "module-mne.chpi"], [861, "module-mne.filter"], [861, "module-mne.preprocessing"], [861, "module-mne.preprocessing.ieeg"], [861, "module-mne.preprocessing.nirs"], [861, "module-mne.transforms"], [862, "module-mne"], [863, "module-mne.io"], [863, "module-mne.io.kit"], [866, "module-mne.baseline"], [867, "module-mne.simulation"], [867, "module-mne.simulation.metrics"], [869, "module-mne.stats"], [870, "module-mne.time_frequency"], [870, "module-mne.time_frequency.tfr"], [871, "module-mne.viz"]], "mne.decoding": [[247, "module-mne.decoding"]], "mne.epochs": [[248, "module-mne.epochs"]], "mne.event": [[248, "module-mne.event"]], "mne.export": [[249, "module-mne.export"]], "mne.bem": [[251, "module-mne.bem"]], "acqparserfif (class in mne)": [[254, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[254, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[254, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[254, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[254, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[254, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[255, "mne.Annotations"]], "__add__() (mne.annotations method)": [[255, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[255, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[255, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[255, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[255, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[255, "mne.Annotations.copy"]], "crop() (mne.annotations method)": [[255, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[255, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[255, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[255, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[255, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[255, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[255, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[256, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[257, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[257, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[257, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[257, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[258, "mne.Covariance"]], "__add__() (mne.covariance method)": [[258, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[258, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[258, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[258, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[258, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[258, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[258, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[258, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[258, "mne.Covariance.copy"]], "data (mne.covariance property)": [[258, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[258, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[258, "mne.Covariance.get"]], "items() (mne.covariance method)": [[258, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[258, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[258, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[258, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[258, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[258, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[258, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[258, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[258, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[258, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[258, "mne.Covariance.update"]], "values() (mne.covariance method)": [[258, "mne.Covariance.values"]], "dipole (class in mne)": [[259, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[259, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[259, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[259, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[259, "mne.Dipole.crop"]], "decimate() (mne.dipole method)": [[259, "mne.Dipole.decimate"]], "plot_amplitudes() (mne.dipole method)": [[259, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[259, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[259, "mne.Dipole.save"]], "shift_time() (mne.dipole method)": [[259, "mne.Dipole.shift_time"]], "time_as_index() (mne.dipole method)": [[259, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[259, "mne.Dipole.times"]], "tmax (mne.dipole property)": [[259, "mne.Dipole.tmax"]], "tmin (mne.dipole property)": [[259, "mne.Dipole.tmin"]], "to_mni() (mne.dipole method)": [[259, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[259, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[259, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[260, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[260, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[260, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[260, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[260, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[260, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[260, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[260, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[260, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[260, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[260, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[260, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[261, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[261, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[261, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[261, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[261, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[261, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[261, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[261, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[261, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[261, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[261, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[261, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[261, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[261, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[261, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[261, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[261, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[261, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[261, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[261, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[261, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[261, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[261, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[261, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[261, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[261, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[261, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[261, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[261, "mne.Epochs.export"]], "filename (mne.epochs property)": [[261, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[261, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[261, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[261, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[261, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[261, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[261, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[261, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[261, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[261, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[261, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[261, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[261, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[261, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[261, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[261, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[261, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[261, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[261, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[261, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[261, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[261, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[261, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[261, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[261, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[261, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[261, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[261, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[261, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[261, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[261, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[261, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[261, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[261, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[261, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[261, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[261, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[261, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[261, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[261, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[261, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[261, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[261, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[262, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[262, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[262, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[262, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[262, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[262, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[262, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[262, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[262, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[262, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[262, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[262, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[262, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[262, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[262, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[262, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[262, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[262, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[262, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[262, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[262, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[262, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[262, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[262, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[262, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[262, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[262, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[262, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[262, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[262, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[262, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[262, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[262, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[262, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[262, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[262, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[262, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[262, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[262, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[262, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[262, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[262, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[262, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[262, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[262, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[262, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[262, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[262, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[262, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[262, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[262, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[262, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[262, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[262, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[262, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[262, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[262, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[262, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[262, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[262, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[262, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[262, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[262, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[262, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[262, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[262, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[262, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[262, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[262, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[262, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[262, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[262, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[263, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[263, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[263, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[263, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[263, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[263, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[263, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[263, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[263, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[263, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[263, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[263, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[263, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[263, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[263, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[263, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[263, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[263, "mne.Evoked.crop"]], "data (mne.evoked property)": [[263, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[263, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[263, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[263, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[263, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[263, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[263, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[263, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[263, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[263, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[263, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[263, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[263, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[263, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[263, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[263, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[263, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[263, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[263, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[263, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[263, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[263, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[263, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[263, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[263, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[263, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[263, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[263, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[263, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[263, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[263, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[263, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[263, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[263, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[263, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[263, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[263, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[263, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[263, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[263, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[263, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[263, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[263, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[263, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[264, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[264, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[264, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[264, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[264, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[264, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[264, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[264, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[264, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[264, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[264, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[264, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[264, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[264, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[264, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[264, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[264, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[264, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[264, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[264, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[264, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[264, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[264, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[264, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[264, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[264, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[264, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[264, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[264, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[264, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[264, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[264, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[264, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[264, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[264, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[264, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[264, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[264, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[264, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[264, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[264, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[264, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[264, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[264, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[264, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[264, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[264, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[264, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[264, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[264, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[264, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[265, "mne.Forward"]], "copy() (mne.forward method)": [[265, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[265, "mne.Forward.pick_channels"]], "info (class in mne)": [[266, "mne.Info"]], "__contains__() (mne.info method)": [[266, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[266, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[266, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[266, "mne.Info.__len__"]], "clear() (mne.info method)": [[266, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[266, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[266, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[266, "mne.Info.fromkeys"]], "get() (mne.info method)": [[266, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[266, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[266, "mne.Info.get_montage"]], "items() (mne.info method)": [[266, "mne.Info.items"]], "keys() (mne.info method)": [[266, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[266, "mne.Info.normalize_proj"]], "pop() (mne.info method)": [[266, "mne.Info.pop"]], "popitem() (mne.info method)": [[266, "mne.Info.popitem"]], "set_montage() (mne.info method)": [[266, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[266, "mne.Info.setdefault"]], "update() (mne.info method)": [[266, "mne.Info.update"]], "values() (mne.info method)": [[266, "mne.Info.values"]], "label (class in mne)": [[267, "mne.Label"]], "__add__() (mne.label method)": [[267, "mne.Label.__add__"]], "__len__() (mne.label method)": [[267, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[267, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[267, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[267, "mne.Label.compute_area"]], "copy() (mne.label method)": [[267, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[267, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[267, "mne.Label.fill"]], "get_tris() (mne.label method)": [[267, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[267, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[267, "mne.Label.morph"]], "restrict() (mne.label method)": [[267, "mne.Label.restrict"]], "save() (mne.label method)": [[267, "mne.Label.save"]], "smooth() (mne.label method)": [[267, "mne.Label.smooth"]], "split() (mne.label method)": [[267, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[268, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[268, "mne.MixedSourceEstimate.data"]], "decimate() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[268, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[268, "mne.MixedSourceEstimate.shape"]], "shift_time() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.shift_time"]], "sqrt() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[268, "mne.MixedSourceEstimate.times"]], "tmax (mne.mixedsourceestimate property)": [[268, "mne.MixedSourceEstimate.tmax"]], "tmin (mne.mixedsourceestimate property)": [[268, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[268, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[268, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[269, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[269, "mne.MixedVectorSourceEstimate.data"]], "decimate() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[269, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[269, "mne.MixedVectorSourceEstimate.shape"]], "shift_time() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.shift_time"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[269, "mne.MixedVectorSourceEstimate.times"]], "tmax (mne.mixedvectorsourceestimate property)": [[269, "mne.MixedVectorSourceEstimate.tmax"]], "tmin (mne.mixedvectorsourceestimate property)": [[269, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[269, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[269, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[270, "mne.Projection"]], "__contains__() (mne.projection method)": [[270, "mne.Projection.__contains__"]], "__getitem__() (mne.projection method)": [[270, "mne.Projection.__getitem__"]], "__iter__() (mne.projection method)": [[270, "mne.Projection.__iter__"]], "__len__() (mne.projection method)": [[270, "mne.Projection.__len__"]], "clear() (mne.projection method)": [[270, "mne.Projection.clear"]], "copy() (mne.projection method)": [[270, "mne.Projection.copy"]], "fromkeys() (mne.projection method)": [[270, "mne.Projection.fromkeys"]], "get() (mne.projection method)": [[270, "mne.Projection.get"]], "items() (mne.projection method)": [[270, "mne.Projection.items"]], "keys() (mne.projection method)": [[270, "mne.Projection.keys"]], "plot_topomap() (mne.projection method)": [[270, "mne.Projection.plot_topomap"]], "pop() (mne.projection method)": [[270, "mne.Projection.pop"]], "popitem() (mne.projection method)": [[270, "mne.Projection.popitem"]], "setdefault() (mne.projection method)": [[270, "mne.Projection.setdefault"]], "update() (mne.projection method)": [[270, "mne.Projection.update"]], "values() (mne.projection method)": [[270, "mne.Projection.values"]], "report (class in mne)": [[271, "mne.Report"]], "__len__() (mne.report method)": [[271, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[271, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[271, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[271, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[271, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[271, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[271, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[271, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[271, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[271, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[271, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[271, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[271, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[271, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[271, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[271, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[271, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[271, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[271, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[271, "mne.Report.add_trans"]], "html (mne.report property)": [[271, "mne.Report.html"]], "parse_folder() (mne.report method)": [[271, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[271, "mne.Report.remove"]], "save() (mne.report method)": [[271, "mne.Report.save"]], "tags (mne.report property)": [[271, "mne.Report.tags"]], "sourceestimate (class in mne)": [[272, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[272, "mne.SourceEstimate.data"]], "decimate() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.decimate"]], "estimate_snr() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[272, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[272, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[272, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[272, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[272, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[272, "mne.SourceEstimate.shape"]], "shift_time() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.shift_time"]], "sqrt() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[272, "mne.SourceEstimate.times"]], "tmax (mne.sourceestimate property)": [[272, "mne.SourceEstimate.tmax"]], "tmin (mne.sourceestimate property)": [[272, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[272, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[272, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[273, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[273, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[273, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[273, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[274, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[274, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[274, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[274, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[274, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[274, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[274, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[275, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[275, "mne.VectorSourceEstimate.data"]], "decimate() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.decimate"]], "expand() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[275, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[275, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[275, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[275, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[275, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[275, "mne.VectorSourceEstimate.shape"]], "shift_time() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.shift_time"]], "sqrt() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[275, "mne.VectorSourceEstimate.times"]], "tmax (mne.vectorsourceestimate property)": [[275, "mne.VectorSourceEstimate.tmax"]], "tmin (mne.vectorsourceestimate property)": [[275, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[275, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[275, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[276, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[276, "mne.VolSourceEstimate.data"]], "decimate() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.decimate"]], "extract_label_time_course() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[276, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[276, "mne.VolSourceEstimate.shape"]], "shift_time() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.shift_time"]], "sqrt() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[276, "mne.VolSourceEstimate.times"]], "tmax (mne.volsourceestimate property)": [[276, "mne.VolSourceEstimate.tmax"]], "tmin (mne.volsourceestimate property)": [[276, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[276, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[276, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[277, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[277, "mne.VolVectorSourceEstimate.data"]], "decimate() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[277, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[277, "mne.VolVectorSourceEstimate.shape"]], "shift_time() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.shift_time"]], "sqrt() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[277, "mne.VolVectorSourceEstimate.times"]], "tmax (mne.volvectorsourceestimate property)": [[277, "mne.VolVectorSourceEstimate.tmax"]], "tmin (mne.volvectorsourceestimate property)": [[277, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[277, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[277, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[278, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[279, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[280, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[281, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[282, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[283, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[284, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[285, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[285, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[286, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[287, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[288, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[289, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[290, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[291, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[292, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[293, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[294, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[295, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[296, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[297, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[298, "mne.beamformer.read_beamformer"]], "conductormodel (class in mne.bem)": [[299, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[299, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[299, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[300, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[301, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[302, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[303, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[304, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[305, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[306, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[307, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[308, "mne.channel_type"]], "digmontage (class in mne.channels)": [[309, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[309, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[309, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[309, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[309, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[309, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[309, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[309, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[309, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[309, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[309, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[310, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[310, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[310, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[311, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[312, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[313, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[314, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[315, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[316, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[317, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[318, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[319, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[320, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[321, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[322, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[323, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[324, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[325, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[326, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[327, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[328, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[329, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[330, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[331, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[332, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[333, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[334, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[335, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[336, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[337, "mne.channels.rename_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[338, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[339, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[340, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[341, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[342, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[343, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[344, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[345, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[346, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[347, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[348, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[349, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[350, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[351, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[352, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[353, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[354, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[355, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[356, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[357, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[358, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[359, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[360, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[361, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[362, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[362, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[362, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[362, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[362, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[362, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[362, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[362, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[362, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[362, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[362, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[362, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[362, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[362, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[363, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[364, "mne.coreg.get_mni_fiducials"]], "compute_whitener() (in module mne.cov)": [[365, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[366, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[367, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[368, "mne.create_default_subject"]], "create_info() (in module mne)": [[369, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[370, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[371, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[372, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[373, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[374, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[375, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[376, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[377, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[378, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[379, "mne.datasets.erp_core.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[380, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[381, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[382, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[383, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[384, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[385, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[386, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[387, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[388, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[389, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[390, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[391, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[392, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[393, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[394, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[395, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[396, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[397, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[398, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[399, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[400, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[401, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[402, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[403, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[404, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[405, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[405, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[405, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[405, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[405, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[405, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[405, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[405, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[406, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[406, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[406, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[406, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[406, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[406, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[407, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[407, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[407, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[407, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[408, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[408, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[408, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[408, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[408, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[408, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[408, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[408, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[408, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[408, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[409, "mne.decoding.LinearModel"]], "decision_function() (mne.decoding.linearmodel method)": [[409, "mne.decoding.LinearModel.decision_function"]], "fit() (mne.decoding.linearmodel method)": [[409, "mne.decoding.LinearModel.fit"]], "fit_transform() (mne.decoding.linearmodel method)": [[409, "mne.decoding.LinearModel.fit_transform"]], "get_params() (mne.decoding.linearmodel method)": [[409, "mne.decoding.LinearModel.get_params"]], "predict() (mne.decoding.linearmodel method)": [[409, "mne.decoding.LinearModel.predict"]], "predict_proba() (mne.decoding.linearmodel method)": [[409, "mne.decoding.LinearModel.predict_proba"]], "score() (mne.decoding.linearmodel method)": [[409, "mne.decoding.LinearModel.score"]], "set_params() (mne.decoding.linearmodel method)": [[409, "mne.decoding.LinearModel.set_params"]], "transform() (mne.decoding.linearmodel method)": [[409, "mne.decoding.LinearModel.transform"]], "psdestimator (class in mne.decoding)": [[410, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[410, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[410, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[410, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[411, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[411, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[411, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[411, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[411, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[411, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[412, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[412, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[412, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[412, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[412, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[412, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[412, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[412, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[413, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[413, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[413, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[413, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[413, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[413, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[413, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[413, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[413, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[414, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[414, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[414, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[414, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[414, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[414, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[414, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[415, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[415, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[415, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[415, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[415, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[415, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[415, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[415, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[415, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[415, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[416, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[416, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[416, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[416, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[417, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[417, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[417, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[417, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[417, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[418, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[418, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[418, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[418, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[418, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[418, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[419, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[419, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[419, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[419, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[419, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[419, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[419, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[420, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[420, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[420, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[420, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[420, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[421, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[422, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[423, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[424, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[425, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[426, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[427, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[428, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[429, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[430, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[431, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[432, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[433, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[434, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[435, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[436, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[437, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[438, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[439, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[440, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[441, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[442, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[443, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[444, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[445, "mne.filter.resample"]], "find_events() (in module mne)": [[446, "mne.find_events"]], "find_stim_steps() (in module mne)": [[447, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[448, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[449, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[450, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[451, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[452, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[453, "mne.get_config"]], "get_config_path() (in module mne)": [[454, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[455, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[456, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[457, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[458, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[459, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[460, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[461, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[462, "mne.grand_average"]], "grow_labels() (in module mne)": [[463, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[464, "mne.gui.coregistration"]], "locate_ieeg() (in module mne.gui)": [[465, "mne.gui.locate_ieeg"]], "head_to_mni() (in module mne)": [[466, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[467, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[468, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[469, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[470, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[471, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[472, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[473, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[473, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[473, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[473, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[473, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[473, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[473, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[473, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[473, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[473, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[473, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[473, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[473, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[473, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[473, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[473, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[473, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[473, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[473, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[473, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[473, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[473, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[473, "mne.io.Raw.crop_by_annotations"]], "decimate() (mne.io.raw method)": [[473, "mne.io.Raw.decimate"]], "del_proj() (mne.io.raw method)": [[473, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[473, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[473, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[473, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[473, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[473, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[473, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[473, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[473, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[473, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[473, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[473, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[473, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[473, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[473, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[473, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[473, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[473, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[473, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[473, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[473, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[473, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[473, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[473, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[473, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[473, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[473, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[473, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[473, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[473, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[473, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[473, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[473, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[473, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[473, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[473, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[473, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[473, "mne.io.Raw.set_montage"]], "shift_time() (mne.io.raw method)": [[473, "mne.io.Raw.shift_time"]], "time_as_index() (mne.io.raw method)": [[473, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[473, "mne.io.Raw.times"]], "tmax (mne.io.raw property)": [[473, "mne.io.Raw.tmax"]], "tmin (mne.io.raw property)": [[473, "mne.io.Raw.tmin"]], "to_data_frame() (mne.io.raw method)": [[473, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[474, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[474, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[474, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[474, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[474, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[474, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[474, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[474, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[474, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[474, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[474, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[474, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[474, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[474, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[474, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[474, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[474, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[474, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[474, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[474, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[474, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[474, "mne.io.RawArray.crop_by_annotations"]], "decimate() (mne.io.rawarray method)": [[474, "mne.io.RawArray.decimate"]], "del_proj() (mne.io.rawarray method)": [[474, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[474, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[474, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[474, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[474, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[474, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[474, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[474, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[474, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[474, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[474, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[474, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[474, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[474, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[474, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[474, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[474, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[474, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[474, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[474, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[474, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[474, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[474, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[474, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[474, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[474, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[474, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[474, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[474, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[474, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[474, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[474, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[474, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[474, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[474, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[474, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[474, "mne.io.RawArray.set_montage"]], "shift_time() (mne.io.rawarray method)": [[474, "mne.io.RawArray.shift_time"]], "time_as_index() (mne.io.rawarray method)": [[474, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[474, "mne.io.RawArray.times"]], "tmax (mne.io.rawarray property)": [[474, "mne.io.RawArray.tmax"]], "tmin (mne.io.rawarray property)": [[474, "mne.io.RawArray.tmin"]], "to_data_frame() (mne.io.rawarray method)": [[474, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[475, "mne.io.anonymize_info"]], "read_mrk() (in module mne.io.kit)": [[476, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[477, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[478, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[479, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[480, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[481, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[482, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[483, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[484, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[485, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[486, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[487, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[488, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[489, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[490, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[491, "mne.io.read_raw_eximia"]], "read_raw_fieldtrip() (in module mne.io)": [[492, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[493, "mne.io.read_raw_fif"]], "read_raw_gdf() (in module mne.io)": [[494, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[495, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[496, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[497, "mne.io.read_raw_nedf"]], "read_raw_nicolet() (in module mne.io)": [[498, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[499, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[500, "mne.io.read_raw_nirx"]], "read_raw_persyst() (in module mne.io)": [[501, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[502, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[503, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[504, "mne.io.write_fiducials"]], "select_sources() (in module mne.label)": [[505, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[506, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[507, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[508, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[509, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[510, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[511, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[512, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[513, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[514, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[515, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[516, "mne.make_sphere_model"]], "merge_events() (in module mne)": [[517, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[518, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.__len__"]], "clear() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.get"]], "items() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[518, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[519, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[520, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[521, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[522, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[523, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[524, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[525, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[526, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[527, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[528, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[529, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[530, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[531, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[532, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[533, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[534, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[535, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[536, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[537, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[538, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[539, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[540, "mne.open_docs"]], "open_report() (in module mne)": [[541, "mne.open_report"]], "parse_config() (in module mne)": [[542, "mne.parse_config"]], "pick_channels() (in module mne)": [[543, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[544, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[545, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[546, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[547, "mne.pick_events"]], "pick_info() (in module mne)": [[548, "mne.pick_info"]], "pick_types() (in module mne)": [[549, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[550, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[551, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[551, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[551, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[551, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[551, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[552, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[552, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[552, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[553, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[553, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[553, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[553, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[553, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[553, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[553, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[553, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[554, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[555, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[556, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[557, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[558, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[559, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[560, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[561, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[562, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[563, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[564, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[565, "mne.preprocessing.compute_proj_eog"]], "corrmap() (in module mne.preprocessing)": [[566, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[567, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[568, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[569, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[570, "mne.preprocessing.equalize_bads"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[571, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[572, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[573, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[574, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[575, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[576, "mne.preprocessing.ica_find_eog_events"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[577, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "infomax() (in module mne.preprocessing)": [[578, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[579, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[580, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[581, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[582, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[583, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[584, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[585, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[586, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[587, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[588, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[589, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[590, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[591, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[592, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[593, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[594, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[595, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[596, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[597, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[598, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[599, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[600, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[601, "mne.read_cov"]], "read_dipole() (in module mne)": [[602, "mne.read_dipole"]], "read_epochs() (in module mne)": [[603, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[604, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[605, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[606, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[607, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[608, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[609, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[610, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[611, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[612, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[613, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[614, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[615, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[616, "mne.read_lta"]], "read_morph_map() (in module mne)": [[617, "mne.read_morph_map"]], "read_proj() (in module mne)": [[618, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[619, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[620, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[621, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[622, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[623, "mne.read_surface"]], "read_talxfm() (in module mne)": [[624, "mne.read_talxfm"]], "read_trans() (in module mne)": [[625, "mne.read_trans"]], "read_tri() (in module mne)": [[626, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[627, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[628, "mne.rename_channels"]], "scale_bem() (in module mne)": [[629, "mne.scale_bem"]], "scale_labels() (in module mne)": [[630, "mne.scale_labels"]], "scale_mri() (in module mne)": [[631, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[632, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[633, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[634, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[635, "mne.set_cache_dir"]], "set_config() (in module mne)": [[636, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[637, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[638, "mne.set_log_file"]], "set_log_level() (in module mne)": [[639, "mne.set_log_level"]], "setup_source_space() (in module mne)": [[640, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[641, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[642, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[642, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[642, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[642, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[642, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[642, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[642, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[643, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[644, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[645, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[646, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[647, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[648, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[649, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[650, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[651, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[652, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[653, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[654, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[655, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[656, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[657, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[658, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[659, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[660, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[661, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[662, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[663, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[664, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[665, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[666, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[667, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[668, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[669, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[670, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[671, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[672, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[673, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[674, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[675, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[676, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[677, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[678, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[679, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[680, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[681, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[682, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[683, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[684, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[685, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[686, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[687, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[688, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[689, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[690, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[691, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[692, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[692, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[692, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[692, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[692, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[692, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[692, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[693, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[693, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[693, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[693, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[693, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[693, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[693, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[693, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[693, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[693, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[693, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[693, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[694, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[694, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[694, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[694, "mne.time_frequency.EpochsSpectrum.units"]], "epochstfr (class in mne.time_frequency)": [[695, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[695, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[695, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[695, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[695, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[695, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[695, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[695, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[696, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[696, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[696, "mne.time_frequency.Spectrum.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[697, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[698, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[699, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[700, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[701, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[702, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[703, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[704, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[705, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[706, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[707, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[708, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[709, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[710, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[711, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[712, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[713, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[714, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[715, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[716, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[717, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[718, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[719, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[720, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[721, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[722, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[723, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[724, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[725, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[726, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[727, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[727, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[727, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[727, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[728, "mne.transforms.apply_volume_registration"]], "compute_volume_registration() (in module mne.transforms)": [[729, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[730, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[731, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[732, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[733, "mne.use_coil_def"]], "use_log_level (class in mne)": [[734, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[735, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[736, "mne.utils.warn"]], "verbose() (in module mne)": [[737, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[738, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[739, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[739, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[739, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[739, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[739, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[739, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[739, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[739, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[739, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[739, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[739, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[739, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[739, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[739, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[739, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[739, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[739, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[739, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[739, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[739, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[739, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[739, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[739, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[739, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[739, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[739, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[739, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[739, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[739, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[739, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[739, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[739, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[739, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[739, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[739, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[739, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[739, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[739, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[739, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[739, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[739, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[739, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[739, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[739, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[739, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[739, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[739, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[739, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[739, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[739, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[740, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[740, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[740, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[740, "mne.viz.ClickableImage.to_layout"]], "figure3d (class in mne.viz)": [[741, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[741, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[742, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[743, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[744, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[745, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[746, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[747, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[748, "mne.viz.create_3d_figure"]], "get_3d_backend() (in module mne.viz)": [[749, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[750, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[751, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[752, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[753, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[754, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[755, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[756, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[757, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[758, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[759, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[760, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[761, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[762, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[763, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[764, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[765, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[766, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[767, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[768, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[769, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[770, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[771, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[772, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[773, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[774, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[775, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[776, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[777, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[778, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[779, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[780, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[781, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[782, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[783, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[784, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[785, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[786, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[787, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[788, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[789, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[790, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[791, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[792, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[793, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[794, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[795, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[796, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[797, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[798, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[799, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[800, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[801, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[802, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[803, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[804, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[805, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[806, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[807, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[808, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[809, "mne.viz.snapshot_brain_montage"]], "use_3d_backend() (in module mne.viz)": [[810, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[811, "mne.viz.use_browser_backend"]], "warp_montage_volume() (in module mne)": [[812, "mne.warp_montage_volume"]], "what() (in module mne)": [[813, "mne.what"]], "write_bem_solution() (in module mne)": [[814, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[815, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[816, "mne.write_cov"]], "write_events() (in module mne)": [[817, "mne.write_events"]], "write_evokeds() (in module mne)": [[818, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[819, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[820, "mne.write_head_bem"]], "write_label() (in module mne)": [[821, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[822, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[823, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[824, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[825, "mne.write_surface"]], "write_trans() (in module mne)": [[826, "mne.write_trans"]], "bem": [[827, "term-BEM"]], "dics": [[827, "term-DICS"]], "ecd": [[827, "term-ECD"]], "freesurfer lut": [[827, "term-FreeSurfer-LUT"]], "gfp": [[827, "term-GFP"]], "hed": [[827, "term-HED"]], "hpi": [[827, "term-HPI"]], "lcmv": [[827, "term-LCMV"]], "lcmv beamformer": [[827, "term-LCMV-beamformer"]], "lut": [[827, "term-LUT"]], "mne": [[827, "term-MNE"], [862, "module-mne"]], "ras": [[827, "term-RAS"]], "roi": [[827, "term-ROI"]], "ssp": [[827, "term-SSP"]], "stc": [[827, "term-STC"]], "anatomical landmark": [[827, "term-anatomical-landmark"]], "annotations": [[827, "term-annotations"]], "beamformer": [[827, "term-beamformer"]], "boundary element method": [[827, "term-boundary-element-method"]], "boundary element model": [[827, "term-boundary-element-model"]], "chpi": [[827, "term-cHPI"]], "channels": [[827, "term-channels"]], "dspm": [[827, "term-dSPM"]], "data channels": [[827, "term-data-channels"]], "digitization": [[827, "term-digitization"]], "dipole": [[827, "term-dipole"]], "dynamic imaging of coherent sources": [[827, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[827, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[827, "term-eLORETA"]], "epochs": [[827, "term-epochs"]], "equivalent current dipole": [[827, "term-equivalent-current-dipole"]], "events": [[827, "term-events"]], "evoked": [[827, "term-evoked"]], "fiducial": [[827, "term-fiducial"]], "fiducial point": [[827, "term-fiducial-point"]], "first_samp": [[827, "term-first_samp"]], "forward": [[827, "term-forward"]], "forward solution": [[827, "term-forward-solution"]], "global field power": [[827, "term-global-field-power"]], "head position indicator": [[827, "term-head-position-indicator"]], "hierarchical event descriptors": [[827, "term-hierarchical-event-descriptors"]], "info": [[827, "term-info"]], "inverse": [[827, "term-inverse"]], "inverse operator": [[827, "term-inverse-operator"]], "label": [[827, "term-label"]], "last_samp": [[827, "term-last_samp"]], "layout": [[827, "term-layout"]], "maximum intensity projection": [[827, "term-maximum-intensity-projection"]], "measurement info": [[827, "term-measurement-info"]], "minimum-norm estimate": [[827, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[827, "term-minimum-norm-estimation"]], "montage": [[827, "term-montage"]], "morphing": [[827, "term-morphing"]], "noise covariance": [[827, "term-noise-covariance"]], "path-like": [[827, "term-path-like"]], "pick": [[827, "term-pick"]], "projector": [[827, "term-projector"]], "raw": [[827, "term-raw"]], "region of interest": [[827, "term-region-of-interest"]], "sloreta": [[827, "term-sLORETA"]], "selection": [[827, "term-selection"]], "source estimate": [[827, "term-source-estimate"]], "source space": [[827, "term-source-space"]], "source time course": [[827, "term-source-time-course"]], "stim channel": [[827, "term-stim-channel"]], "template montage": [[827, "term-template-montage"]], "tfr": [[827, "term-tfr"]], "trans": [[827, "term-trans"]], "trigger channel": [[827, "term-trigger-channel"]], "whitening": [[827, "term-whitening"]], "mne.beamformer": [[840, "module-mne.beamformer"]], "mne.dipole": [[840, "module-mne.dipole"]], "mne.inverse_sparse": [[840, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[840, "module-mne.minimum_norm"]], "mne.cuda": [[841, "module-mne.cuda"]], "mne.utils": [[841, "module-mne.utils"]], "mne.channels": [[861, "module-mne.channels"]], "mne.chpi": [[861, "module-mne.chpi"]], "mne.filter": [[861, "module-mne.filter"]], "mne.preprocessing": [[861, "module-mne.preprocessing"]], "mne.preprocessing.ieeg": [[861, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[861, "module-mne.preprocessing.nirs"]], "mne.transforms": [[861, "module-mne.transforms"]], "mne.io": [[863, "module-mne.io"]], "mne.io.kit": [[863, "module-mne.io.kit"]], "mne.baseline": [[866, "module-mne.baseline"]], "mne.simulation": [[867, "module-mne.simulation"]], "mne.simulation.metrics": [[867, "module-mne.simulation.metrics"]], "mne.stats": [[869, "module-mne.stats"]], "mne.time_frequency": [[870, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[870, "module-mne.time_frequency.tfr"]], "mne.viz": [[871, "module-mne.viz"]]}})